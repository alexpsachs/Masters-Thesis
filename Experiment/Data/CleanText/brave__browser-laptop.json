{
    "bbondy": "Obviously still a lot of unhooked parts, but definitely a step towards the right direction. \nOne thing I'd like to see changed before landing is to move the state outside of tabs.js. \nState would change in ui.tabs.\nIdeally we'll have all components with no state inside of them and fully loaded from prop changes.\n. As silly as it sounds for this case, yes I was hoping that we could have fully referentially transparent components.  Please spend a few minutes to read this to see if it might change your mind.  I could see doing an exception here leading to doing exceptions elsewhere.  The hope would be to change partially or fully to React stateless components which they stated in 0.14 release notes that there would be further performance optimizations related to them.\nNote that ImmutableComponent doesn't even consider state for detecting changes right now.\nhttps://github.com/brave/browser-electron/blob/master/js/components/immutableComponent.js\nI don't think it would be that hard to do the state changes in the store, it would just require a single action which can manage each of those 3 states.\nI won't try to stop you from landing, but I'd like to give stateless components a shot.\n. > If we put it on ui.tabs, then we'd need to synchronize the tabs for each frame operation that we do currently right? (Adding/removing/crashing/etc)\nhrm not sure I see why, can you explain?   Also let me know what you mean by synchronize, might be better for a slack cha if you want higher bandwidth discussion. \n. OK going to merge this in, feel free to do the follow ups if you agree in an audit.\n. oh great! Electron has some tests btw you can get ideas from in coffeescript.  I had an asana task to do tests this sprint but I haven't started on it yet, so I'll just assign it to you. \n. No problem, thanks for the dump.\n. Looks great thanks.\n. I'll take over this branch unless you're already working on it.\n. yep there was a problem with needing it in webpack and also event names were wrong in the preload script. But there's a third problem too, will fix.\n. Thanks!\n. Looking good, hope the comments help. Haven't tried them but I think that's how to fix. \n. Looks great, nice work!\nYou may want to mirror that meta redirect issue on our side and reference the other issue if you think we should be handling on our own side and not forgetting about it for or around MVP. I'll merge this in.\n. Yay, passing tests on Travis! https://travis-ci.com/brave/browser-electron/builds/18615010\n. Ya, I think this is no longer valid. Closing.\n. Thanks I'll post about that bug, that seems like a bug with the electron-localShortcut.\nCommand+T is done through the menu which seems to work better overall. \n. Hah, nice find.\n. What's worse and related is that if you open / close 11 times in a row you'll get the same.\nI'm going to try doing the per frame listeners once and then setting state in the active frame only for the pendingShortcut from the store.  On prop changes we would detect and do the action.\n. I'll fix before landing, thanks.\n. @diracdeltas please have another look with the 2nd commit.\n. Fixed commit message in previous put which had a typo, rebased to master.\nGoing to land this to avoid unneeded future rebasing, but will do any followups suggested.\n. Sorry :)\n. Actually I'd like to wait until we have tab paging because it might be confusing if it re-opens out of sight.\n. Nevermind we should set the tab we undo as active so this doesn't matter. I'll just handle in the open pull request and close this.\n. Cross reference we had special handling for this in brave/browser here:\nhttps://github.com/brave/browser/blob/master/src/js/browser.js#L435\nState does not change so doesn't trigger a reload. So you need to explicitly check for it and reload.\n. lgtm :+1: \n. looks good to me thanks\n. yep looks good, please merge.\n. looks good, merging.\n. I can no longer get the EventEmitter error with this, but could get it before. Maybe webpack didn't rebuild or something?\n. Try setting the key prop on the webview, maybe it will give React a hint to not reload.\n. something unique for each webview, i.e. something like webview-${this.props.frame.get('key'}\n. I'm thinking React is creating a new dom element there and it's causing a reload.\n. Actually I just thought of what it is.  I had removed the sorting of the frames by key to fix a bug with tab headers getting out of sync.\nIf we bring it back and apply it everywhere it will fix.  I'll take if you don't mind since I introduced.\n. Sorry for taking, hope you don't mind.\n. :+1: \n. duplicate of https://github.com/brave/browser-electron/issues/17 ?\n. Great, thanks for fixing.\n. Great documentation, thanks!\n. ++\n. I think possibly setUrlBarSuggestions's selectedIndex params will do this.  I think it used to work in brave/browser.\n. Looks good, thanks! In general we should try not to call into child components from parent ones but I can't think of a better way to fix for now :). Merging!\n. Looks good, thanks.\n. J will work because it's the same window. For client devtools electron has it hard coded to always open in a new window.  And that window isn't registered for local shortcuts.\n. I don't think we register the devtools window at all. I think it is considered different than the browser windows and local shortcuts doesn't know about them.\n. ok probably not worth the extra effort for now.\n. Command+W does get fired btw from when you have the devtools window focused.\nI added a console.log inside app.menu.js.\nBut we'd need to send a different event instead of firing shortcut-close-frame.\nI think localShortcuts still won't work though, but menu ones should.\n. true not sure if there's a property to link it up to the opened from window. \nIn any case let's just punt on this one for now.\n. @LoloIrie F12 added for 0.9.0.\nLeaving this open for the original issue though.\n. Yep I'm aware of that one as well but pls ask any questions about its prioirty in the context of that bug.\n. This was originally implemented correctly, but broken in this commit:\nhttps://github.com/brave/browser-laptop/commit/f4283c0053569842773d5d6aca91825b55732ba3. @luixxiul @srirambv @alexwykoff \nTurn out the fix applied here will only work on macOS because it works via sending a Window shortcuts and only on mac is the shortcuts app level.\nI renamed the title for this to be specific to mac and I posted a new issue here to track the work on the other platforms:\nhttps://github.com/brave/browser-laptop/issues/8935\nPlease test this only on mac.. @bridiver FYI as well.\nThis is really a first pass, more work to come later.\nIn practice this won't work too well until we use the custom\nbrave/electron pre-built binaries which includes blocking scripts which do ads on pages.  Right now those scripts will sometimes insert their ads after we replace. But with the blocking that doesn't happen.\nslashdot.org is a good test site though if you want to see it working.\n. Looks good, thanks.\n. Fixed by the frame reload fix in electron?\n. lgtm, we can do the new work in follow up commits.\n. Able to do a PR?\n. ya let's close for more specific items if needed.\n. thanks!\n. Great work, thanks.\nIn the old browser, we had a differentiator for Command+L vs Command+K for privacy reasons. \nThey were exactly the same but Command+L would not do search suggestions for privacy reasons. \nSomething for a follow up. \nPlease merge at will.\n. Sorry accidentally committed that last one into your branch. I'll just merge it all in.\n. we're probably adblocking too much, there's a fix I need to do there about properly detecting third party hosts.  Don't spend time investigating this since it's probably related.\n. pls try with updating package.json with the stock electron-prebuilt to see if it works.\n. ya after seeing the problem I don't think it's related to adblock.\n. thanks for verifying\n. ++ when can we move this in?\n. Great, please feel free to merge in. Thanks!\n. I changed to going prev/next page I think I like the old UX better though. Will be easy to revert that commit if others want after.  Merging.\n. we should move to having tests for most features / regressions once we open source and get caught up, they can come in follow up commits but should be there for most things.\n. Will wait for the server to go up to actually see the change in action, but the code looks great. Nice work putting all this together!\n. Great work so far on this! Merging\n. Closing this since I think Aubrey fixed in the other pull request I just merged. \n. Thanks for fixing this.\n. So much cleaner, thanks for doing this.\n. I should also mention that app state will eventually be persistent but there is no special logic for keeping the app state persistent in this pull request.\n. > bookmarked sites seem to be always autosuggested in the urlbar autosuggest, regardless of what is typed.\nThis pull request didn't add bookmarks to the auto suggests but it was probably previously imported. Will fix before landing. \n. We may want to re-add the visitCount later and call addSite each time we navigate (just without a tag).  But for now removed it to avoid perf problems.\n. Implemented the comments, so merging. \n. Awesome, thanks for starting to get this in place. I was wanting to do some of this, this weekend. \nLooks like tests are currently failing though. Maybe it's from the switch to dev?\n. Yep I can see why, in app/index.js we have:\n\nif (process.env.NODE_ENV === 'development') {\n\nand then we determine which index.html file to use, one works with the webpack devserver, and the other with the webpack live files.\nwebpack is run once when you checkout the repo and also when creating bundles.\nSounds like we should be running it as well just before tests run.\nAdding webpack && at the start of package.json's test script sounds ideal.\n. possibly just have a second switch for local testing which uses the webpack dev server which works more incrementally\n. Feel free to land after the watch change, thanks again for taking this.\n. I just remember reading a thread a long time ago about webpack and why they didn't have an option to sync the changes to disk and it was because of perf reasons. I'd rather keep the normal watch command clean of it but that's fine to add a second one that does both and you can just always use the second one.\n. ci build should just always do the webpack &&\n. oh CI actually does do the webpack call because it does an npm install.\n. Electron patch was merged upstream here:\nhttps://github.com/atom/electron/pull/3877\nStill need to spin a new brave electron prebuilt build though.\n. Looks good thanks.  Glad to see more local shortcuts go.\n. I'm pretty sure this would be the right move, it would also make things like sync and persistent data a lot easier. \n. >  that's probably a good thing\nYep agreed. \n\nDo you have any data on the performance of ipc vs local callbacks?\n\nNo but it'll definitely be slower but I'm fairly certain it won't be bad or noticeable.\nI'm mainly looking for any red flags anyone can see before implementing.\n. One difference is that subtrees of appstate would need to be copied in each process and re-transmitted completely on changes.  ImmutableJS works nicely for changes because it re-uses the common subtrees of unchanged state. But with this we'd need to communicate the whole state subtree.  Each browser would only mostly have it's own brwoserWindow branch of the state though.  But re-transmitting all that state each time could be fairly large in JS.\n. One possible alternate way would be to rename appStore to browserStore and have a new appStore which is for the common parts of the state like pinned sites.  Session store would request from each browserStore a dump of the state when saving and would provide it on loading.\n. I think we'll need a window store and app store because otherwise when a user clicks on the url bar for example and we set focus in state then we'd need to transfer all state again which is lame.  It works nicely right now just because of how immutableJS works.\nProposal: \nWindowState / windowStore: (Works via EventEmitter within each renderer process)\njavascript\n{\n  activeFrameKey: number,\n  frames: [{\n    audioMuted: boolean, // frame is muted\n    audioPlaybackActive: boolean, // frame is playing audio\n    canGoBack: boolean,\n    canGoForward: boolean,\n    icon: string, // url to favicon\n    location: string, // page url\n    src: string, // what the iframe src should be\n    title: string, // page title\n    thumbnail: string, // url to thumbnail\n    key: number,\n    isPrivate: boolean, // private browsing tab\n    loading: boolean,\n    themeColor: string, // css compatible color string\n    closedAtIndex: number, // Index the frame was last closed at, cleared unless the frame is inside of closedFrames\n    activeShortcut: string, // Set by the application store when the component should react to a shortcut\n    security: {\n      isSecure: boolean, // is using https\n      isExtendedValidation: boolean, // is using https ev\n    },\n    contextMenuDetail: {...},\n    modalPromptDetail: {...},\n    basicAuthDetail: {...}\n    unloaded: boolean, // true if the tab is unloaded\n  }],\n  closedFrames: [], // holds the same type of frame objects as above\n  ui: {\n    tabs: {\n      activeDraggedTab: object,\n      tabPageIndex: number, // Index of the current tab page\n    },\n    navbar: {\n      focused: boolean, // whether the navbar is focused\n      urlbar: {\n        location: string, // the string displayed in the urlbar\n        urlPreview: string,\n        suggestions: {\n          selectedIndex: number, // index of the item in focus\n          searchResults: array,\n          suggestionList: object,\n        },\n        focused: boolean, // whether the urlbar is focused\n        active: boolean, // whether the user is typing in the urlbar\n        autoselected: boolean, // is the urlbar text autoselected\n      }\n    }\n  },\n}\nApp state / app Store (works via IPC): \njavascript\n{\n  activeWindowKey: number,\n  windows: [{\n    key: number\n  }],\n  sites: [{\n    location: string,\n    title: string,\n    tags: [string], // empty, 'bookmark', 'pinned', or 'reader'\n    lastAccessed: datetime,\n  }],\n  visits: [{\n    location: string,\n    startTime: datetime\n    endTime: datetime\n  }],\n  searchDetail: {\n    searchURL: string, // with replacement var in string: {searchTerms}\n    autocompleteURL: string, // ditto re: {searchTerms}\n  }\n}\nSessionStore would work via requesting the appState from each browser store for saving.  And it would provide it when initializing. \nThe reason to have the list of windows in the application state btw is so that session restore can work properly.\n. History would probably just be inside sites, and the frames would be for things currently opened. \n. We had private tabs in brave/browser, I think it might only be  possible in chromium based though to have it inside per window. We'd move that when we implement private browsing. \n. sites is a Set of sites meaning there is at most one entry per unique URL.\nI think visits we can probably move completely out of state and somewhere else or else it'll grow out of control as the browser instal ages. \n. ok let's go with this plan.\nSplitting up the work I think it should be done in iterations:\nFirst rename appState and related app naming to windowState, try to get that merged fast to avoid having to rebase a lot.\nThen after that optionally split out the app level state into a second store. \nThen after that move that new store out of process. \n. ya let's cut that out into a different issue to keep scope down and get this done incrementally\n. Before we close this, was wondering if you could also do an equivalent thing for js/actions/windowActions.js  and also if we can tie this into the \"pre-commit\" section of the package.json file.\n. :+1: closing this since it's merged now.\n. ++ why disabled?\n. Looks great, thanks for doing this.\n. Looks good, feel free to merge\n. another way would be to have the renderer query the info without having a full copy.\n. yep for example we don't need all the bookmarks for when someone types \"sla\" in the url box, we just needs the ones with sla. So we could update the local view of state based on a query to the app store. \n. combining sounds great to me (on paper at least :))\n. Please also change docs/applicationState.md -> docs/state.md and we'll describe all state within it.\n. awesome! land away.\n. Looks good.\n. (Except for as discussed setActiveFrameShortcut removal, I think we need that) \n. I think this got fixed at some point, not sure when. Closing.\n. Looks good, thanks.\n. Thanks, feel free to merge.\nNice to have the open / save.\n. np, thanks.\n. that's actually fixed as part of this branch I forgot to merge in.\nhttps://github.com/brave/browser-electron/commit/3e7726681344adb9f562f299b1d7c0bca8ab1e55\nIt's merged now.\n. @diracdeltas fyi this seems to be an electron bug with having things in the titlebar. Even if I remove everything in the html it still reproduces, but if I add a 10px margin it works again. \nBut Chrome & Firefox don't use that pointer/hand cursor for buttons anyway. So to fix this I'll just remove the cursor:pointer completely.\n. Looks good, I think ideally spawnWindow would be outside of the store but I'm good with landing this.\n. - Blocked resources sends 1 per blocked resource, we could simply debounce this.\n- Page load sends lots of different events, we can combine those in a better way.\n- To find more we can also timestamp doAction in the window and app stores to find more ideas.\n. Along these lines I was thinking we could do a performActions which takes an array of actions.\n. Fixed the core problem here which bypasses this kind of worry:\nhttps://github.com/brave/browser-laptop/commit/a314f241c2a8bedeacb1053aa0f10945c284598c\n. ++ thanks\n. yep I fixed this before and forgot to resolve, thanks.\n. WFM now too. Closing.\n. Sure is:\nhttps://github.com/brave/browser-laptop/commit/63153d5b9df7942555acfa6acb8005af387ffbfe\n. Great work, feel free to merge.\n. That's the expected behavior.  There's only no max-width when there are a full set of tabs. \nThe reasoning is because the huge looking tabs would look strange.  For example a single tab which spans the full window width.\n. This might feel better when we have the new-tab button jump next to the tabs when less than 6.\n. The new-tab sticking is implemented now, please take a look and let me know if this can be closed.\n. fairly sure this is fixed, closing.\n. This is great, thanks!\n. ++\n. (I know you're off for a couple days, no rush)\n. Works for me now but note that my resolution on my MBP is:\n2880 x 1800 Retina\n. In addition to the things you mentioned, this is also needed:\n- Incremental search, as you type it selects without having to press enter\n- Placeholder text isn\u2019t showing up on the find bar\n- The find bar in brave/browser is probably closer to the look we want since it only takes up the top right space.\n\n. Looking good so far, thanks for taking this.\n. Oops I think I had an older version of your branch pulled with the white bar going all the way across too.   The newer update looks great.  Feel free to merge and then do the rest as follow ups. \n. Looks good, please merge.\n. looks great, thanks for getting this figured out.\n. pls merge.\n. Summary of changes:\n- isPinned added to frame props state\n- Extra handling for not closing frames which are pinned and some related logic\n- PinnedTabs react component, similar to Tabs react component but to the left of the tabs list.\n- Split Tabs and Tab into separate files (was all in tabs.js before)\n- App state manages the list of pinned tabs in sites.  It is a set so no 2 same locations can be pinned. When there are changes to it each window will create a frame for any pin they don\u2019t know about yet.  Originally pinned tab inside the current window is not reloaded, it is just converted.  Other windows will create the frame.\n- There are probably some minor bugs which I\u2019ll do in follow ups, but pls do call them out if you notice some.\n. Seems to be working for me, could you give more exact steps?\n\n. Yep thanks!\n. Yes, thanks for helping triage \ud83d\udc4d \n. @diracdeltas please review\n. merging\n. Great, I can see that being very helpful.\n. - Test closing a pinned tab should go to next tab\n- Test closing a pinned tab when no other tabs exist should close the window\n. https://github.com/brave/browser-laptop/commit/b17bb89f656e982d4140aed172539d6d5f8f30aa\nhttps://github.com/brave/browser-laptop/commit/4a9aa677efe5c5fc65148c05af413c220bda91e4\nhttps://github.com/brave/browser-laptop/commit/0f0fa250ac7434433a5b719c079556f68b2654ba\n. - Test that it saves app state when closing the app with no windows and with windows.\n- Test that it saves the window state.\n- Test that navigation within a frame leads to reloading at last visited location\n. Basic tests for this are done so closing this.\n. The tests should:\n- Check for proper handling for 404 if adblock data file isn't uploaded correctly\n- Check for proper handling if adblock server is offline\n- Check for proper handling if time elapsed since last check is > 1 day\n- Check if there is proper handling when reading cached storage from disk\n- Check if there is proper handling when a 2nd window is open\n- Check for proper handling when etags match\n- Check for proper handling when etags do not match\n. For js/data/rulesets.sqlite I think this is GPL so should probably be loaded remotely.  See adblock.js and trackingProtection.js which use the dataFile module.  I can throw it on S3 if you want, just ping me on slack. \nPlease push back if you think it's ok to include it as is.\n. Looking great, I'd love to get this in before the beta. The main thing before merging is just to check if the DB is also GPL'ed or get permission for including that statically. \n. Please also add a switch in app/appConfig.js for enabled in case we need to disable this last minute before the 20th.\n. The config is just for us currently but anything in there should be moved to app settings once we have them.\n. I'd love to have settings for beta but I don't think we'll have enough time for 0.7  maybe shortly after though.\n. Great, good to merge?\n. nice find, I'll fix\n. We support it but we don't have automated tests for it yet.\n. Should test blocking a known rule on a local URL\nShould test not blocking a known rule on a local URL with the same third party base\n. This can be tested along with the siteinfo feature when a user clicks on a favicon.\n. yes thanks!\n. we'll probably have a different strategy for this opt-in thing, so just closing this.. yep!\n. In the current design each window loads a separate copy of the page. I agree this new design would be more ideal though.\nPls confirm the page does load, just a different copy right now for you.  If not let me know what your pinned site is.\n. Loads a second copy of the site for me, not sure what that error is but could be related.   Could you give an exact url of the site you are pinning?  I'm pinning apple.com.\n. who needs facebook ;)\n. facebook also working for me :(\n. was aware of this one, basically to fix we just need to always prepend all frames when we pin, instead of appending.\n. Looks good, please merge.\n. looks good, I prefer this over the 2px border & 5px shadow.\n. @bradleyrichter for any objections, will merge for now though.\n. feel free to merge\n. Can we do this before we do an RC on Friday?\n. not critical but I thin it can lead to 2 taskbar icons. \n. no related to if you have a taskbar icon, and then click that taskbar icon. And a second brave icon appears on the taskbar.\n. CC @bsclifton this sounds like something you might like to take.\n. I was assuming it could lead to 2 taskbar icons because maybe the exact format mentioned in the first comment wasn't followed (uppercase /lower somewhere maybe or something? )\n. yep I think so\n. @bradleyrichter please let me know your preference here. \nThe design spec omits the lock icon in title mode, but @diracdeltas mentions UX wise it's nice knowing when you're on a secure site without moving cursor. \n. @bradleyrichter please weigh in here.  Should we just glue to the left of the centered title in title mode?\n. \"before tabs robbed us of legible title\" - brilliant observation to me, in hindsight it's so true!\nThanks please post the design change for the security indication here, we'd love to get this in for security sensitive early adopters. \n. Yes I think we need to hide the url bar and instead put a div with the same class which contains the title+icon centered when in title mode.\n. Looking good main thing needed before merging is just no sync IO ever.\n. Tests seem to be failing, doesn't seem related to you but not sure where that came from\nhttps://travis-ci.com/brave/browser-laptop/builds/19847949\n. ++\n. Looks great, merging in.\n. ++\n. ++\n. Strange that you had diff results on step 2, thanks for fixing.\n. Looks good, maybe we should add a check to not do this for development mode?\n. ++\nRunning builds now for electron\n. This is already implemented, closing.\n. Either way good to merge but would prefer BrowserWindow.getAllWindows().length if possible.\n. ++\n. ++ merging\n. Fairly sure it was caused by this fix:\nhttps://github.com/brave/browser-laptop/commit/b5c21d952ef5bd5cb47f26a2a81964b69299e84f\nClosing, but if you see this with 0.7.1 or later please re-open.\n. 0.7.1 will be released soon.\n. Do you get this periodically or always?\n. n/m got it!!! :)\n. STR: Keep opening and undoing tabs non stop\n. Looks good, merging and will test on Windows now.\n. possibly that'll be the final UX but seems like a bug currently with our current UI.\n. per discussion on Slack, I'll take this since I have a windows machine\n. fixed here:\nhttps://github.com/brave/browser-laptop/commit/7bf20421a8df43fdd230b44dd0be6c569d1041bc\n. I got this same thing after I installed from the 0.7.4 dmg file.\nIt gave downloaded from internet warning then I clicked to open, then it gave that error. \nNext startup was fine.\n. @garvankeeley did this happen for you also after downloading a new dmg? or just randomly?\n. For reference\nhttps://github.com/paulcbetts/atom-shell/blob/master/atom/browser/api/atom_api_screen.cc#L120\n. We should do a release soon for this.\n. Note that adblock and tracking protection do work though.\n. Hrm it's working for me too now, I'll re-open if I see it again.\n. Seeing this with both partitioned tabs and private tabs.  I'll take.\n. I think so, closing.\n. Sounds like your adblock is not loading, not sure why though.  Maybe you can uncomment console.log and see what it says in app/adBlock.js and app/dataFile.js\n. This should be fixed now, please re-open if you still see it though.\n. fin is in huffingtonpost.com, the list is based on the top 500.\nWe will incorporate history to this as well though with higher priority over the top 500 list.\n. I'm not but I think it's worth talking about a bit design wise first. What is your plan for it? I think just storing in app state will cause lag over time due to it growing too large.  We did have it that way in the old browser repo though in app data sites. Should we have a whole different storage \"store\" for this and support querying subsets of it? or?\n. I like the idea of treating this separate than history.\nI think we can re-use appStore for this though if we limit to 500 entries.\nI think we can optimize it as well by only sending differentials for state updates for the subparts of appState.\n. would visit count be useful as well?\n. ++ I think putting it directly into the already existing sites is fine for this.  There's a subtask fro getting partitionNumber inside sites, you could do that first as a step towards this.  (note this will have an effect on pinned tabs as well).\n. deleting out old items that are too old would be done only if there are no tags associated with it.\n. Session store save seems like a good time to sort by last accessed date without tabs, and limit to first Config.maxSites + sites w/ tags.\n. just noting, can't repro with playing around with it. Will keep an eye out but if anyone has consistent exact STR please post.\n. @ElissaBeth https://github.com/brave/browser-laptop/commit/8bbf2c826ad7b88eb361f4e2fb3d4fa275819b1d but I think there could be other sites we should remove as well.\nhttps://github.com/brave/browser-laptop/blob/master/js/data/top500.js\n. @ElissaBeth please put the new list here when you have it. Thanks!\n. Command+k will turn the urlbar into a search url bar and go from google.  Icon to the left changes to search icon. \nComand+L turns the urlbar into location mode only for better privacy.\n. Closing this, we can re-open if we discover another one.\n. I'll just merge this and tweak, thanks.\n. We'll update soon, so we can close this, or close once we upstream. @bridiver will be rebasing his window fixes on top of the coffeescript->JS conversion.\n. :tada: \n. I still can't unpinch to zoom, but I can in Chrome, so I'm seeing a different result, but in any case we need to fix both.\n. I think I can fix easily, I just need to be able to reproduce.\n. Looks great, thanks. Merging.\n. Looks great, please merge after the minor nit I mentioned.\n. Another report of this came in through support.\n\n. Thanks for the extra info, I hope we can get this fixed soon so we get extra testing.\n. This is fixed in 0.7.10, will be releasing soon.\n. you'll need the new electron-prebuilt version, you can clear your node_modules and reinstall to get them.\n. 0.7.10 is released and has this fix. Closing.\n. Hah, I love when I dupe myself with 2 consecutive issues. \n. Please retest when you get the 0.7.10 update.  We upgraded to electron 0.36.5 and it fixes some other pages like adding github comments in a review.  Might fix this too.  The update is not avail yet, but maybe later today or tomorrow.\n. fixed with winstaller upgrade. thanks for closing.\n. pls post as a new issue, can a normal app to live tiles or only universal apps.\n. The last message should have said: \"I'm not sure if a normal win32 app can have live tiles, or only universal apps can. It used to be only the latter but this might have changed in Windows10.  @bsclifton might know more\".\n. Could we maybe gracefully catch and handle the exception instead of the refactoring to be safer of regressions?\n. ++ nice!\n. Great idea, CC @aekeus \n. Great idea, CC @aekeus \n. @jonathancross you can find my info here:\nhttps://keybase.io/bbondy\nI think @posix4e is going to be working on this by the way.. I added my public key to github recently and set the git option to auto sign, I'm not sure if that will auto sign the tags/releases or not but I'll see on my next CI build script run.  Posix is helping with Linux packaging.. Thanks!\n. Sorry, someone just beat you to it, thanks for the super quick PR though!\n. We actually already have all our test infra running for it and it works great there. \nWe just don't offer packaged builds (yet).\n. You might need node-gyp globally installed and updated?\nCurious to know so I can update docs. \n. We can set that dependency inside the package.json I believe, not sure if it's enforced or not off hand though.  We're using fully updated node if that helps, let me know if you get it working by going to 5.4.1\n. Morphed your issue title since someone added Linux to the README already.\n. Morphed your issue title since someone added Linux to the README already.\n. Yep @andi1984.\nI'd accept a PR with min version >= 5.0.0 (or best version you determine) if anyone has a chance.\npackage.json change per: https://github.com/brave/browser-laptop/issues/200#issuecomment-173344871\n. Sorry, someone just beat you to it! Thanks for the super quick PR though.\n. Thanks for the PR! \nI prefer getting the whole history locally, I suspect a lot of devs do too.  Could you amend the commit to provide an alternate installation step?\n. Thanks!\n. Thanks!\n. Thanks for the report, I think it's fixed here, please let me know if not though:\nhttps://github.com/brave/browser-laptop/commit/4b497270b7c245a77771bf5986f5853fb70a7234\n. @therealklanni thanks for the PR! @diracdeltas will take the review.\n. Thanks for posting, I believe that @ElissaBeth and @BrendanEich are working on a CONTRIBUTOR.md file for the root. \n. Thanks for posting, I believe that @ElissaBeth and @BrendanEich are working on a CONTRIBUTOR.md file for the root. \n. I think the previous work I mentioned above didn't happen so contributions are welcome here and they won't conflict with previous work.\n. Did you npm install already?  Also please ensure you have the latest node install (v5)\n. Did you npm install already?  Also please ensure you have the latest node install (v5)\n. @tomru almost definitely the issue, thanks. \nLikely people npm installed with 0.12 or similar and then upgraded. We use 3 native modules currently for fast tracking protection, adblock and https everywhere (which uses sqlite).   Those need to be built with 5.4.1.\nA faster solution may be to just run the postinstall which re-builds these native modules:\n\nnpm run postinstall\n. @tomru almost definitely the issue, thanks. \n\nLikely people npm installed with 0.12 or similar and then upgraded. We use 3 native modules currently for fast tracking protection, adblock and https everywhere (which uses sqlite).   Those need to be built with 5.4.1.\nA faster solution may be to just run the postinstall which re-builds these native modules:\n\nnpm run postinstall\n. @bobpoekert can you confirm if you're on Node 5.5? If so, please make sure you clear out your node_modules directory first and then npm install. \n. > Hit this on El Capitan with old node 4. Upgrading to confirm. If this is an issue, can we mention node version constraint / requirement in readme, and/or assert during build?\n\nYep that's merged now in the README.\n. Great idea!\n. Great idea!\n. Does the script give output if it fails or does it fail the script?\nIf it is supposed to fail the script, please verify that a security error returns non zero return code and that non zero triggers a fail of the script. \nIf it is output only that's ok as is without further checks.\n. Does the script give output if it fails or does it fail the script?\nIf it is supposed to fail the script, please verify that a security error returns non zero return code and that non zero triggers a fail of the script. \nIf it is output only that's ok as is without further checks.\n. Feel free to merge after, looks like some conflict.\n. Feel free to merge after, looks like some conflict.\n. great, thanks for checking.\n. great, thanks for checking.\n. I think the first error for the tag can go away if you setup ssh github access.\nThis is fixed already on master though.\nFor the other error please try updating to node-gyp v3.2.1\n. I was also independently verifying the same steps on Ubuntu 14.04.1 x86_64 and it works with a cleared node_modules directory:\nnode-gyp v3.2.1\nnode 5.5.0\nnpm 3.3.12\n. Did you do these steps first?\nhttps://github.com/brave/browser-laptop/blob/master/README.md#installation\n. Thanks for the steps.\n@PFCKrutonium is adding a prerequisites file and linking it from the readme for Windows, see the work so far here:\nhttps://github.com/brave/browser-laptop/pull/288\nClosing this since that pull request should take care of it once he's done.\n. Looks great, thanks!\n. Looks great, thanks!\n. >  The existing behaviour for tab ancestors is a bit confusing user-wise though.\nNot sure I understand what you mean, we have the right behaviour when Command+click on links just not for the context menu.  \n\nIt will open tabs to the right of tabs opened from the current tab.\n\nDo you mean you think that is confusing? I think that is expected.  I think Chrome works the same way.\n. You can call getSetting from within stores ya, it no longer requires you to pass in all of the settings.\n. The button itself was in the design spec but not specified what's in it.  Something like that makes sense to me.\n. snatching this, hope you didn't already start Yan\n. The button does nothing before 0.7.10.\nIt will be fixed in 0.7.10 when we do that release. \n. Could you try clearing out your node_modules, then doing another npm install?  Use the latest node, like v5.5.0.  You can Install nvm or n if you need to maintain multiple node versions.\n. Could you try clearing out your node_modules, then doing another npm install?  Use the latest node, like v5.5.0.  You can Install nvm or n if you need to maintain multiple node versions.\n. @jaydson can you confirm if you npm installed with 5.5?\n. No problem @jaydson, thanks for reaching out!\n@bkardell please re-open if you need some help getting it to work, but it should work given the above fix.\n. Closing this based on ^\n. @bridiver should this be closed now? \n. Awesome, thanks so much!\n. Wouldn't be against it, but yes, immutable top level data is one of our core principles in design for the code.  Code feels nice and organized and easy to maintain right now as is though.   I'll close this issue since it's just a design question but feel free to ask more.\n. We're open to it, but it just came down to what was familiar already to the team from existing projects. It's possible that would have been a better solution but we're happy where we are now regardless.  Sorry I don't have a better answer for this!\n. We do have 2 stores by the way, we started with one only inside each render process window.\nThe main reason for this is multiple processes.\nIdeally we'd have a single store in the parent process but we don't have an efficient way to update immutable data across processes.   We'd love to see some kind of ImmutableJS that works efficiently from shared memory though. \n. Double check my comment, but good to merge after that. Thanks for finding this!\n. Perfect, thanks for checking\n. Fairly certain that we want to efficiently compute this (as we do) and return false most of the time or else we'll suffer a performance problem. \n. From what I've read efficiently computing this exact line of code (which is why we use ImmutableJS) and returning false a lot are key.  But yep I didn't profile this yet. \n. that's fine for now.  A future list might but I don't forsee that.\n. I think you need v3.2.1 of node-gyp\n. Do you have that list and know information on how it is maintained?  Seems like a super easy win for us to have on all platforms.\n. I guess we could support both modes. #1 seems much more useful to me though.\n. Nice find @jiangyang!\n. Thanks, this is great! (note that I'll refactor the top level directory build scripts soonish for better code re-use and move to tools/)\n. Not yet, we're only doing x64 ubuntu for now.\n. Thanks, the package.json lists us as 5.0 but I'm not certain that's correct.\nWould you mind trying with 5.0 via nvm or n and if that works then update this PR to v5+?\n. Thank you for checking @elia, really appreciate it!\n. Please use the latest Node, 5.9 at the time of this writing. Thanks!  Closing this.\n. Agree I'll close this for now unless we discover more proof we can do more.\n. I'm a fan of the changes, @bradleyrichter do you agree?\n. I think we'd want the nav-sphere (back / forward) re-added, and tab page back/forward to keep more of our identity, but need to get some more weigh in from our designer before you spend more time on it. I do prefer the other tweaks though.\n. Thanks for your contributions here @teemuteemu, highly appreciated! Merging.\n. Yep I think this is a dupe. Closing.\nBy the way you can also Control+K (Windows) or Command+K (OSX)  to get search autocomplete.\n. Closing in favour of #1596\n. I'd be fine with that, maybe a very temporary problem though? (hopefully?:))\n. Maybe we should close in favour of more specific tasks now that we have canvas and webgl fingerprint blocking and the same UA as Chrome?\n. This should work now, please post a new issue with all updated deps (node 5.9) if it's still a problem.\n. @bradleyrichter when you get a chance, let me know if you think having those UI elements hidden for a single page would be better or not.  Let me know if you need a build to consider it. \n. If we do hide them, might make sense to also hide the tab page bar in that case.  Please also comment on that when you take a look @bradleyrichter. Thanks guys.\n. Thanks, I'll merge this in and we can tweak if needed.\n. Yes this is great for dogfood right now, thanks for the contribution!\nMerging. \n. And lots in support, I think the main blocker here is to make it easy to produce lots of electron-prebuilt binaries for brave/electron for the same platforms as atom/electron has.  Maybe via Dockerfiles? See also https://github.com/brave/browser-laptop/issues/235\n. would accept patches.\n. You can download a 0.8.2 Debian package here:\nhttps://laptop-updates.brave.com/latest/debian64\nYou can install it on Debian and Ubuntu with:\nsudo dpkg -i brave_0.8.2_amd64.deb\nYou can start it with:\nbrave\nPackage info:\nnew debian package, version 2.0.\n size 49944830 bytes: control archive=458 bytes.\n     519 bytes,    13 lines      control              \n Package: brave\n Version: 0.8.2-1\n Section: web\n Priority: optional\n Architecture: amd64\n Depends: git, gconf2, gconf-service, gvfs-bin, libc6, libcap2, libgtk2.0-0, libudev0 | libudev1, libgcrypt11 | libgcrypt20, libnotify4, libnss3, libxtst6, python, xdg-utils\n Recommends: lsb-release\n Suggests: gir1.2-gnomekeyring-1.0, libgnome-keyring0\n Installed-Size: 250500\n Maintainer: Brave Developers <support@brave.com>\n Homepage: https://www.brave.com/\n Description: Brave laptop and desktop browser\n  Brave laptop and desktop browser\n. Sounds good, would accept PR for this if someone has time.\nTo make env vars cross platform we probably need the npm command to start a script in the tools/ directory like some other examples there.   Trying to avoid needing gulp if possible.\n. I was just anticipating some problems dealing with env vars cross platform.\nLet's just do something env var based like:\nPORT=9091 npm run watch\non Windows that might be:\nset PORT=9091&& npm run watch\nCommand line arg that npm passes to a tools/ script would be fine with me too.\nnpm run watch --port=9091\n. ditto PORT=9091 npm run start\nI'd be ok with a config file but not making it required too.\ngit add one time and then add to .gitignore \n. We aren't producing x86 builds yet to reduce overhead and testing, only x64.\nWe can leave this open though for when we do.\n. Actually I see you are meaning to use x64, you just need to have your env setup for x64 building and not x86 building. \nI suggest to use the mozilla-build package. You can get it at https://ftp.mozilla.org/pub/mozilla.org/mozilla/libraries/win32/MozillaBuildSetup-Latest.exe\nAfter you do that start the script:\n\"C:\\mozilla-build\\start-shell-msvc2013-x64.bat\"\nor \n\"C:\\mozilla-build\\start-shell-msvc2015-x64.bat\"\nDepending on which one you have installed.\n. Great I'll close this.\n. File -> New Partitioned Session, supporting multi auth for a single page\n\n. Also added in an indicator for the current session in the SiteInfo component \n. https://github.com/brave/browser-laptop/pull/256\n. Thanks, please also update .gitignore and the ignore list inside the build win64 script.  Please merge this when done that, thanks.\n. I'll just merge this now but please do in a followup later.\n. we have this already.\n. Great questions:\n\nThis is a good start. overall i think my biggest concern is that it's hard to tell what partition any tab is in. i think there needs to be UI like the \"Person 1\" indicator from Chrome:\n\nI believe that the most important time you need to know of a partition is when you first create it.  I'm fairly sure that after you login to your second twitter account you don't really care.  This is because all tabs open in session 0 by default unless explicitly specified otherwise (modulo the bug above).  We will probably add some kind of visual indicator after but let's figure that out after.  You can see in the SiteInfo for now. \n\nAlso, what are use cases for partitioned tabs that aren't already possible with private tabs? (Or with a fresh session per private tab)\n\nPersistent storage is the biggest.  For example I will have 3 pinned tabs fro twitter for Link Bubble, Brave Software and myself. They will persist and each live in their own session.\nPartitioned tabs are not about privacy they are a fix to people needing to use multiple browsers.  Private tabs are about privacy.  We may want partitioned private tabs later.\n. > HTTPS Everywhere appears to not be working in the new partition\nThis could be related to that private tab bug I posted before with HTTPS Everywhere not working there. \n. > This could be related to that private tab bug I posted before with HTTPS Everywhere not working there.\nSeems so, I reopened that and I'll merge this.  Fixed the bug you found.\n. Posted #263 to explore UI concepts more.\n. no we still show it anytime there is playing video I think even when the audio is not there and muted.\n. Probably no icon for video only with no sound.  But I think this might not be the best of first bugs unless you want to look into electron for a fix.\n. Thanks so much for the cleanup! Please adjust the one instance I found and also rebase for easier merging. Thanks again!\n. Thanks for the cleanup, merging.\n. @BrendanEich need your call here\n. Moving to 0.10.1\n. Seen about 8 requests for this in support.\n. cc @diracdeltas @bridiver pls take when you can\n. cc @SergeyZhukovsky, please fix also when you get a chance in the Brave branch.\n. I think we're good with the current icon and hover over which says which session it is.\nClosing this.\n. \"New Session Tab\" is what we have now, I think most people understand it. \nIt's also a good item for tip of the day.\nBy the way people are also asking for \"New Private Session Tab\" which also does make sense we just don't have it yet.\n. Submenu seems like a good idea to me.\n. Please post a new more specific issue for submenu if you want that btw, or whatever other changes you think.\n. they go inside the profile in a Downloads folder, it's an electron build and we should get it for free on the next upgrade. Anything other than the location fix we need to do here?\n. I'll just close this since we'll definitely get it from upstream, if we find we don't though we can open another or re-open this.\n. It doesn't always happen, but seems to happen on twitter and Yan mentions Facebook.\n. I think this is all worked out now\n. sqlite3 is no longer a dependency so this shouldn't be a problem anymore. Closing\n. might be a little early to have it while we're building out the UI elements, but definitely would like to have this later. Ideally an easy way to install the themes in.\n. Could someone who reproduces this error (without fixing it, or by undoing the fix they did) email me for an installer link? I'd like to make sure that our installers won't be affected the the same thing.  bbondy@gmail.com\n. You make some good arguments but I'd rather sit on this and leave the issue open, and not act on it right now.  Although we should prefer const, we need to stay efficient and can't spend time (right now anyway) being in the business of tweaking / maintaining config files across projects.  Just my opinion, others can weigh in too pls :)\n. Sounds more reasonable if it was an easy install npm published module like standard is. BTW we used to use eslint everywhere and changed to standard for easy setup and less maintaining of style.  But if we build up a big enough reason to (so far prefer'ing const) then I'm open to it.  As long as it could be published and installed as an npm module with minor tweak to package.json.\n. OK let's sit on this a while longer and leave this open.  Please collect rule preferences here and we can decide to switch later. We need to focus on the actual project objectives for now.  Thanks for the extra rules. \n. ++ awesome, thanks @feross\n. We're going to stick with standard. Closing.\n. I use VS 2013 and it works but VS 2015 may work as well for you (It doesn't for me).   Closing this since it's a dev env setup problem because of installed dependencies. \n. How did you clone originally? I thought that dev-deps were always installed before deps\nWe do list it in our dev dependencies.\nIf you want to troubleshoot further, or for the next person:\nTry upgrading to npm 3.5.2, node 5.5 and node-gyp 3.2.1\n. by the way, I don't have webpack installed globally and it's working for me \n. They were but I think when we opened the repo it got messed, will fix soon.\n. Thank you so much for this!\n. @aekeus please take a look, I'll do a vault-updater PR (or audit) after to match.\n. Going to merge but please audit when you have a chance. Some people are noting things already fixed in the readme from this pull request so it'd be easier for me to just merge it.\n. yep this works now, closing.\n. :+1: \n. Dupe of #269\n. Thanks for the pull request. \n- What does it fail on if you don't have Python? We aren't using it explicitly anywhere that I know of.\n- I don't believe NSIS is a dependency anymore, there is some outdated info about an old installer we had in the README mentioning it but is being removed in a pull request I did earlier today. \n- Please add a new docs/prerequisites.md and link to it from the readme instead.\n. Thanks! btw you could also make changes, git add -u, git commit --amend, and then git push -f into your branch and it'll auto update the pull request.\nThanks again for doing this and for the follow up changes.\n. that works too, thanks!\n. Yes but we can put it all in the same doc under subsections\ndocs/prerequisites.md\n```\nPrerequisites\nWindows\n...\n```\nWe can fill in other platforms over time.\n. Please squash all into one commit with git rebase -i master\n. git config core.editor notepad\n. You could do notepad++ which will handle that better I bet or something else. \n. Check here, I think you want to keep the first and squash the others.\nhttp://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html\n. \\o/ Thanks for the cleanup and for helping future people get setup!\n. Sorry I don't think we should optimize in one script to run things 1 time only, would rather not clutter up the root of the directory.  Fine for you to fork and put in your fork though!\n. I don't think it does, which command are you referring to?\n. Just use a shell, you can use these steps:\nhttps://github.com/brave/browser-laptop/issues/251#issuecomment-174095031\n. No sorry, we do not support that way. You will have to use a shell if you want to run those scripts to make a package.  We'll have builds available soon and you can get on the queue (which will start opening fast) on brave.com if you just want builds though.\n. Because every dev will have a shell, or they should get one. We want our contributors to be productive :)\nAlso supporting more things, adds more things we need to maintain. And that takes time and adds complexity.  Sorry, we will not do this issue.\n. So a second independent person wants this and did a pull request, seems like I should re-consider.\nWill be tracked here. \nhttps://github.com/brave/browser-laptop/pull/299\n. Looks good to me, pls adjust the 2 nits and I think we can merge it in.\n. Thanks for your work on this, this is great.\n. CC @bridiver \n. I don't think this is valid anymore, video player should be working as o 0.12.7.\n. Contributions are definitely welcome and this is definitely wanted, let me know your plan for changing to add the ability to select a different one.  We don't have a preferences page yet but I plan on doing one for 0.8.\n. @wklm we'd really love the extra help, please search the issues list for now, or dogfood for a day and I\"m sure you'll have some gripes that will jump out for you. Just post new issues for those.  We want to be in a state that is fully dogfoodable as your default browser. A quick idea that comes to mind is various context menus or drag and drop work.  Another idea is a bookmarks bar.  Just assign yourself to whatever you work on though so no one else duplicates. Thanks!\n. You can now select duck duck go in preferences 0.7.13 or higher (yet to be released), for more engines please post more specific new issues. Thanks!\n. Thanks\n. Sorry this was already fixed in a diff pull request, so closing this.\n. I believe you can rebase and squash with git rebase -i master, you can also git commit --amend changes and git push -f into the branch which I believe you have access to, it will update the pull request automatically. \n. As for your question about how to test a random pull request locally, see:\nhttps://help.github.com/articles/checking-out-pull-requests-locally/\n. Looks good, thanks.\n. @aekeus please investigate after the DAU stuff. Thanks.\n. @boozedog The installer works right, just not executing the binary after installed?\n. @boozedog also please compare to Slack because we're on the same stack as there\n. So I'm thinking we either have to change the way we're compiling electron-prebuilt or include the redist inside the installer.\n. this is no longer a problem, closing.\n. Sorry for the hassle but pls rebase / squash the 15 commits into one.\n. Looks great, works great. Thanks for all your work on this!\n. I think users may expect it sometimes and ideally they would remain connected but probably it is ok for now.  Thanks for posting, let's leave it sit for a while though to focus on higher priority stuff.\n. sgtm if that gives enough info\n. which version of Node are you running?\n. Dupe of #218\n. This is released now.\n. Updated title.\n. I don't think so, but cc @diracdeltas because she recently worked on moving the cleanup code to the shutdown time.\n. this should be fixed now, closing.\n. Great refactor, thanks for doing it!\n. Adding @bradleyrichter for design review\n. I believe @bradleyrichter has some conflicting changes. Please clarify @bradleyrichter \n. OK thanks for explaining @bradleyrichter.  Sorry about that @teemuteemu you happened to hit something Brad was working on at the same time.  Will close this.\n. @bradleyrichter did you already do the CSS for those changes? \n. If not, maybe @teemuteemu  can help out?\n. @bradleyrichter if you have the value changes, please include. If not np. \n@teemuteemu that would be great if you had time for it. If not just let me know and I'll work with Brad on it. Thanks.\n. Let's do a new issue for it @bradleyrichter , please post and CC us.\n. Thanks!\n. Would be best to propose those ideas in different github issues so they can be discussed independent of this task. Thanks!\n. This was implemented a while ago, closing.\n. yes\n. Closing because I think this was a missing dep.\n. Also CC @ElissaBeth for comments.\n. This is great thanks, a couple more ideas related to this, I'll put them in the issue.\n. not done yet, this would mean not packaging adinfo file with the app.\n. Chrome left, Brave right...\n\nTurns out we are actually working correctly and as expected.  It's just drudge report which has a horrible layout.\n. Ya on firefox I don't think there's an ad there, not quite sure why they have that strangely placed ad on chromium like user agent strings.\n. Fixed here:\nhttps://github.com/bbondy/abp-filter-parser-cpp/commit/864470b0fd94fe241cb4d78c274927a5c8bfe137\n. we're consistently faster than ublock by ~75ms now on my machine with 0.7.16, closing this.\n. This is probably not needed but we'll re-open if it's a perf problem when we measure.\n. Dupe of #189 thanks for posting though.  We'll try to fix soon so we can get extra testing on Windows.\n. I'll take this so we can do a quick release today.\n. Thanks, please email brian@brave.com\n. Great, I'll close this issue in that case.\n. Looks like we can get this support via a pepper plugin here:\nhttps://github.com/atom/electron/issues/2085\n. Looks like we can get this support via a pepper plugin here:\nhttps://github.com/atom/electron/issues/2085\n. Duping to #468\n. This is working now, closing.\n. Will be fixed by: #344\n. I think that's ok as a temporary thing but we want something different for the generalized approach and understanding / converting ABP filter syntax for css rules.  (Most of that is already supported just not used today). Likely you need node 5.5, and delete your node_modules, then npm install.\n. Which version of visual studio (and service pack) are you using?\n. this happens if you compile a node native module as 32-bit and try to run it n 64-bit. The reverse is probably true as well.\n. Smaller than and greater than symbols? \nI tried alt + those on Chrome, Safari, and Firefox but they have no effect. \n. I think that was fixed here?\nhttps://github.com/brave/browser-laptop/commit/8ac6ff7670ed1217041eab532a2818f8e95039a1\nAlthough with control/command\n. oh I see I was on OSX where it's command+left, but I guess maybe this particular shortcut has special handling. Thanks.  Yes we want to match what people already know for keyboard shortcuts. \n. This is implemented here:\nhttps://github.com/brave/browser-laptop/pull/949/files\nIt's not released in a build yet but will be in this week's release 0.8.\n. Please put comments for this in #142.  Will close this as a dupe. Thanks!\n. Awesome, thanks for this!\n. @SergeyZhukovsky please take a look, it is related to tracking protection I think, is it the same on Android?\n. I think it probably has to do with how we're handling redirects and the first party url detection code in the laptop browser. Would be curious to know if this works in Android if you have a chance @SergeyZhukovsky .\n. Yep this is a dupe of #310 which was already implemented just not released.\nI'll leave this open until it's released though to avoid dupes. \n. Fixed in 0.7.10 (which is available now)\n. Great UX point , thanks for posting. \nCCing @bradleyrichter for open background tab UX ( You can also command+click on a link to go to background tab)\n. This is on our list for the 0.8 release, thanks for posting. \n. @bridiver is working on this now.\n. Duping to https://github.com/brave/browser-laptop/issues/1611\n. Windows or OSX?\n. Thanks for the report. CC @aekeus \n. can you install into a non admin location or something for now?\n. yep just a work around for now.  Did you install originally as admin ? Or as limited and it prompt for admin password?\n. Interesting. So when you installed as limited user account, where did it install to?\n. Splitting the second one into a new issue.\n. Fixed in 0.7.10 (which is available now)\n. We'll have both private window and private tabs.\nCommand + Shift + T should already re-open closed tab no?\n. Fixed in  0.7.10 (which is available now)\n. We just need to handle this like so:\nhttps://github.com/atom/electron/pull/3250\nWe'd set some state to indicate we should show the auth div saving the callback, and then render that and when they submit call the callback with the username and password.\n. Windows: 130MB -> 84MB\nOSX: 103MB -> 68MB\nLeaving this open though because there are more ways to reduce the size by a lot.\nhttps://github.com/brave/browser-laptop/commit/e65b2e505b2cc56865b80fad503678c38deb9c25\n. Thanks for clarifying @Hrxn.\nElectron is built using parts of Node for package loading and libchromiumcontent.\nBrave is based on Electron.\n. Thanks for clarifying @Hrxn.\nElectron is built using parts of Node for package loading and libchromiumcontent.\nBrave is based on Electron.\n. Independent of the previous conversation message. This ticket can be closed when we're smaller than Chrome on both platforms.\nChrome:\nOSX for Chrome is 63.1MB\nWindows: 49.7MB\nBrave:\nOSX: 68MB\nWindows: 84MB\n. Independent of the previous conversation message. This ticket can be closed when we're smaller than Chrome on both platforms.\nChrome:\nOSX for Chrome is 63.1MB\nWindows: 49.7MB\nBrave:\nOSX: 68MB\nWindows: 84MB\n. We can still reduce more but haven't focused on it yet.\n. Can we just use the same dialog for win and osx? Please do and then merge, thanks.\n. I prefer to keep the electron base version there too if possible\n. > Adding the electron version should not be a problem. We will need to create a custom form if we want the About windows to look identical between versions.\nI just meant that I wanted the OSX and Windows ones to use the same dialog. Currently the OSX uses the built in role one which doesn't match.   Differences between windows on different Windows version is good and expected.\n. Thanks @aekeus \nBrendan will be happy with this change!\n. Just noting the electron one should probably read: libchromiumcontent and not Chromium if you get a sec for a followup.\n. Thanks!\n. Please share a pinned tab URL that reproduces in case it's related.\n. I think this is fixed already or if not will be fixed in a lot of pinned tag refactoring going into 0.7.16, marking this as closed.\n. I opened a new issue here, this bit me several times as well:\nhttps://github.com/brave/browser-laptop/issues/723\n. Don't know what that error is but it should be working. Closing for now. \n. For Windows just go to Control Panel and uninstall programs from there like other programs. \n. It's working for me, are the files not being removed for you in the install dir? Or maybe just an icon is left behind? \nIn any case you can just delete the files.\n. @bradleyrichter could you do a design review on this? Thanks!\n. @bradleyrichter  should this be closed? I think you mentioned it would be incorporated to your hover states changes.\n. May be added as an option you can explicitly turn on later, but off by default.\nPreference is to just not support it at all though too.\n. See https://github.com/brave/browser-laptop/issues/782\n. This is our plan for Flash:\nhttps://github.com/brave/browser-laptop/issues/1093\nI'm keeping this open though, retitled as \"Flash support for site X?\" for now to track the sites we should add to that whitelist. \n. Closing this in favour of this wiki:\nhttps://github.com/brave/browser-laptop/wiki/Flash-and-Other-Non-Supported-Plugin-Sites-(Video-and-Non-Video)\nAnd the actual work for this is being done here:\nhttps://github.com/brave/browser-laptop/issues/1093\n. Great, hope this works better overall!  Would love to keep the code if we can.\n. I'm digging the new tab colors fwiw\n. yes we need this we just haven't added it yet, we should be consistent with other popular browsers at least.\n. Thanks for the report, we have another copy of this though.\nDupe of #146\n. ++ thank you!\n. fwiw it was bad on old UI too :P\n. ...context of time is relevant here :).\nChoice was made when we had a black background which was before your v1 designs.  Just never changed.\n. Fixed, it'll be in the next version. Thanks for the feedback!\n. I think that would be a separate task.\n. This was implemented I think in 0.8.2, closing.\n. I think this will be fixed inside of: #412\nClosing this for now since that one already has a lot of activity and an assignee.\n. So the task here is to flush out session store periodically instead of only on app load.  The crash obviously also needs to be handled but please post another issue for the crash if you have steps to reproduce it.\n. Fixed here:\nhttps://github.com/brave/browser-laptop/commit/c6a180b2a518af758ba83c481a2fefdac8d75ab2\n. thanks @paulcbetts I'll take this.\n. Yep we only offer winx64 builds right now.\n. The stats are very different for our supported platforms (win7 and up).\n@osworx note that I did not close this issue, I just said we don't have that yet.\nWe've only released a dev build on some platforms so far.\n. Thanks @PFCKrutonium \n. We care about 32bit as well but we aren't offering builds for it yet.\nThere are some additional complications relating to packaging which we don't support yet to be able to do them.  There is also some ongoing incremental extra work to be able to offer those right now which we don't have the QA team size to support yet.\nNote that x64 is more secure and more performant.\n. tldr there are some good reasons for people to use 32bit. We don't support it yet though.\nI think all points are clearly communicated now.  But will lock from comments if needed to avoid excess spam. Thanks.\n. Good news, 0.9.2 is released and it has 32-bit Windows installers too.\nhttps://github.com/brave/browser-laptop/releases/tag/v0.9.2dev\n. Could you check this one out @bridiver ? Seen a few mentions of it.\n. Dupe of #412\n. ++\n. There's no update channel for linux based platforms right now, so I guess we should disable the update code for now for this? @diracdeltas thoughts? We could also alternatively do x64 binaries but not sure if they would be compatible everywhere.\n. Right now Linux users need to manual update, but we do need to remove the update UI for Linux.\n. Also happens for issues\n. Are you using a version below  Electron: 0.36.5, from debug maybe?\nIn 0.7.11 we show the info in the about dialog by the way.\nReason I ask is because this was a known issue in 0.36.3 and it went away for me in 0.36.5.\n. ok just noting that it's possible to use app version 0.7.11 with electron 0.36.3 if node_modules is old and node_modules didn't get the new electron-prebuilt.\n. (Only from debug env though)\n. seems like we can get in some broken site which breaks content sometimes.  Check console next time. Thanks.\n. test\n. This is fixed in 0.36.7 which will be released with 0.7.12\n. Looks like remote.getCurrentWindow() returns null sometimes.  We could do a null check and return true or false? Seems like something else is going on though.\n// Make document.hidden and document.visibilityState return the correct value.\nObject.defineProperty(document, 'hidden', {\n  get: function() {\n    var currentWindow;\n    currentWindow = remote.getCurrentWindow();\n    return currentWindow.isMinimized() || !currentWindow.isVisible();\n  }\n});\n. Opening until this is fixed, we should try to fix this for the next release.\n. Fixed in 0.7.13 which is coming out soon.\n. Still reproducible:\ndata:text/html,<html>%20<input%20type=\"search\"%20placeholder=\"hello\"></input></html>\n. Related:\nhttps://github.com/atom/electron/pull/3347\n. ++ nice dogfood find.\n. I think the ordering is right as suggested, will tweak in this issue.\n. Not sure if this will be valid after https://github.com/brave/browser-laptop/issues/468\n. Duping to #468\n. Cheers! It'll be in the next version.\n. This will be the same as #412, so I'll close this one.\n. Reproduced on Windows. CC @bridiver  I think some background tab code might be messed on Windows again, maybe from the rebase?\n. Thanks for the report!\n. This will be in 0.7.12\n. We'll be exposing them at first via this issue:\nhttps://github.com/brave/browser-laptop/issues/319\nClosing this because it can be considered a dupe.  We'll also have bookmarks manager later.\n. Fixed here:\nhttps://github.com/bbondy/abp-filter-parser-cpp/commit/a88aadd16b11acfa1f01bbe9448f1b380d1298dd\nWe check for adblock db definitions daily so you should get this fix within 24h by just restarting your browser tomorrow.\n. Is this a fresh start with the 5 tabs of both browsers?  We also plan on doing something to the great suspender.\n. Yes @BrendanEich is a fan of OneTab, we want that built in too.\n. ++ this is a big gripe for me too.\n. We have an MSI which should work similar to:\nhttps://get.slack.help/hc/en-us/articles/212475728-Deploying-Slack-to-your-organization-via-MSI\nIf we sent it to you could you verify that it does?\n. Try from here using the Slack instructions above though.\nhttps://github.com/brave/browser-laptop/releases/download/v0.7.10dev/Setup.msi\n. Could you give a particular site that has the floating div?  (Several if you have more than one)\n. > I would add another keyboard shortcut,\n\nAlt+Enter to open a search or url typed in a new tab.\n\nMoved that to #442.\n. Couple of minor things, please feel free to merge with edits.\n. This is fixed in 0.7.11\n. We'll release it as soon as possible, so I'll close this for now.\n. This was fixed in this dupe:\nhttps://github.com/brave/browser-laptop/issues/410\n. It'll be released in the next update.\n. posted here, thanks for the ping on this:\nhttps://github.com/brave/browser-laptop/issues/1218\n. The view menu (accessible with alt on Windows) has both Reload and Clean Reload. I think that covers what you're asking. Please re-open if not.\n. > given the complaints about page/local shortcuts overriding system\n\nshortcuts on OS X.\n\nCould you expand more on the types of problems you think would come up from this happening with Backspace?\n. I think this is working in 0.7.12, can someone confirm?\n. Great! Closing.\n. Closing this as a dupe of #146 but added in an explicit mention of maximized state.\nThanks for the extra telemetry stats too!\n. The content processes below the renderer process can probably get away with not using node.  The renderer process just renders the window itself not the content.\n. I believe @bridiver will be looking into this by disabling the node integration on the webview completely and then not passing the no-sandbox flag to the child process.\n. Yes this is still pending implementation. Thanks for posting.\n. Import from HTML export for bookmarks done here:\nhttps://github.com/brave/browser-laptop/issues/940\nLeaving this open though since it contains a lot of other sub-tasks.\n. This is a pending task, it's high priority, thanks for posting.\n. Need something like this:\n```\nWindows Registry Editor Version 5.00\n[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\BraveHTML]\n@=\"Chrome HTML Document\"\n[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\BraveHTML\\DefaultIcon]\n@=\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe,0\"\n[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\BraveHTML\\shell]\n[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\BraveHTML\\shell\\open]\n[HKEY_CURRENT_USER\\SOFTWARE\\Classes\\BraveHTML\\shell\\open\\command]\n@=\"\\\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\\\" -- \\\"%1\\\"\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\RegisteredApplications]\n\"Brave\"=\"Software\\Clients\\StartMenuInternet\\Brave\\Capabilities\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave]\n@=\"Brave\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\Capabilities]\n\"ApplicationDescription\"=\"Brave is a web browser that runs webpages and applications with lightning speed. It's fast, stable, and easy to use. Browse the web more safely with malware and phishing protection built into Brave.\"\n\"ApplicationIcon\"=\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe,0\"\n\"ApplicationName\"=\"Brave\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\Capabilities\\FileAssociations]\n\".htm\"=\"BraveHTML\"\n\".html\"=\"BraveHTML\"\n\".shtml\"=\"BraveHTML\"\n\".xht\"=\"BraveHTML\"\n\".xhtml\"=\"BraveHTML\"\n\".webp\"=\"BraveHTML\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\Capabilities\\Startmenu]\n\"StartMenuInternet\"=\"Brave\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\Capabilities\\URLAssociations]\n\"ftp\"=\"BraveHTML\"\n\"http\"=\"BraveHTML\"\n\"https\"=\"BraveHTML\"\n\"irc\"=\"BraveHTML\"\n\"mailto\"=\"BraveHTML\"\n\"mms\"=\"BraveHTML\"\n\"news\"=\"BraveHTML\"\n\"nntp\"=\"BraveHTML\"\n\"sms\"=\"BraveHTML\"\n\"smsto\"=\"BraveHTML\"\n\"tel\"=\"BraveHTML\"\n\"urn\"=\"BraveHTML\"\n\"webcal\"=\"BraveHTML\"\n;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\DefaultIcon]\n;@=\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe,0\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\InstallInfo]\n\"IconsVisible\"=dword:00000001\n;\"ReinstallCommand\"=\"\\\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\\\" --make-default-browser\"\n;\"HideIconsCommand\"=\"\\\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\\\" --hide-icons\"\n;\"ShowIconsCommand\"=\"\\\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\\\" --show-icons\"\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\shell]\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\shell\\open]\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Clients\\StartMenuInternet\\Brave\\shell\\open\\command]\n;@=\"\\\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\\\"\"\n```\nI think the HKLM Stuff can be replaced with HKCU for Win8 and above.  Ideally we'll use Squirrel updater to get it working on win8 and up and then have a separate thing that requires elevation after that.\n. You'll be able to set it as the default in control panel in 0.9.2\nhttps://github.com/brave/browser-laptop/commit/2e196e4ce5db66e5fe41df538708e880fb206603\n. Please try with the latest build:\nhttps://laptop-updates.brave.com/latest/osx\nhttps://laptop-updates.brave.com/latest/winx64\n. I'm pretty sure this was just due to an old bug on Windows that has since been fixed.  Closing.\n. Dupe of #407\n. Will this mean that many instances will report first-time twice in the same day when this lands? If so can that be fixed?\n. Merging this for now and then doing release. Please do the moment removal commit for next release though.\n. Merging this for now and then doing release. Please do the moment removal commit for next release though.\n. Still thinking about this, I think people might perceive it as a bug.\n. Closing this as a dupe.\n. Check the \"Bravery\" main menu by hitting Alt for:\nBlock Tracking\nvs \nBlock Ads\nWould be curious to see which is the cause.\n. The grouping should be pretty easily accomplished by using something like:\nhttp://underscorejs.org/#groupBy\nI think ledger introduced the dependency so you can use it.  Or else just copy the impl and modify slightly.\n. ah sorry I didn't realize you had it done already, your way is fine.\n. yep, thanks. Closing.\n. This was fixed here for Windows:\nhttps://github.com/brave/browser-laptop/pull/374\nJust not released yet, will be in 0.7.11 and later.\n. Thanks for the post Eros, can you right click on the icon on your desktop and go to properties. Is it 0.7.10?\n. Sweet! Closing. Thanks guys.\n. You can partiticpate in translating the app here:\nhttps://www.transifex.com/brave/brave-laptop/\n. Great, I'll close this for now since problem doesn't seem to be with 0.7.11 and beyond.\n. Great, I'll close this for now since problem doesn't seem to be with 0.7.11 and beyond.\n. CC @bradleyrichter \n. Possible dupe of #412\n. This is just because dialog popups don't support it on Windows which that is using.\nWe could perhaps move it to a new about: tab\n. I think it's more likely that we'll convert this to open an about: page with the information.\nWe currently use a Electron dialog for this and those work differently per platform which is not ideal.\nThat way it's obvious how to copy text and it's consistent between platforms.\n. To fix this we just need to not use a dialog for the version info and instead use an about:brave page or similarly named.  See also previous couple comments about it. I modified the title so it is more clear. \n. F12 was added for Windows / Linux here:\nhttps://github.com/brave/browser-laptop/commit/e185d6fe75a1927d45c73b00686e713a310bd0d7\nIt'll be in 0.9.0\n. we also have those.\n. Seems likely it would be easy to support different user agents per domain, probably best integrated into the SiteHacks module.\n. For a quick test:\nhttps://github.com/atom/electron/blob/master/docs/api/web-view-tag.md#useragent\n. Played with user agent strings a bit:\niPad Safari: Asks you to get the app\nSafari OSX: Asks you for silverlight\nChrome / Windows UA: Asks you to get silverlight plugin\nFirefox / Windows: Sends you to enable DRM page on Mozilla support: https://support.mozilla.org/en-US/kb/enable-drm\nPepper support could be added here: https://github.com/atom/electron/issues/2085\n. it asks for silverlight with a simple UA change. Interesting that it works for you on safari without it though.\n. If there is some content that is not DRM'ed the Firefox UA w/ windows would give the HTML5 player that would work in those cases.\n. Very helpful, thanks @MegaUber !\nGiven the gist you posted I'm going to mark this as good first bug for now in case someone wants to turn it into a pull request.   We could do this task in parts.\n. First visit to Netflix:\n\nAfter clicking on open preferences:\n\nTo install just click the switch.\nTrying to view a vide on Netflix after that:\n\nWorking Netflix via Wideivne:\n\n. Redoing screenshot play by play w/ Windows:\nFirst encounter on Netflix:\n\nAfter clicking on \"Open Preferences\":\n\nAfter clicking the switch to on to install:\n\nNext load on Netflix, per site allow:\n\nAfter the per site allowed:\n\n. probably not next release but soon, and tracking it here:\nhttps://github.com/brave/browser-laptop/issues/5282\n. This is working and will be shipped in the release next week.\n@darkdh and @bsclifton are the heros of the work :). Possible dupe of #412\n. btw @luixxiul pls attach commit if you notice this later and it's easily findable. If not that's ok :)\nAlso if you notice something we forget to add in the current milestone but is fixed pls add it there.   Current milestone will always be the smallest available.\n. ++ thanks!\n. All 3 of those things worked for me.\n. Do you have to be outdated? The main site logged off loads for me.\nMusic on that page also works for me.\n. Try disabling our added filters next time it happens without closing to see if that helps.\n. Welcome, and thanks for posting Asa! \nSimilar but not matching ticket for reference: https://github.com/brave/browser-laptop/issues/146\n. Anyone know what a good default is for this?\n. CC'ing @bradleyrichter for comment.\nWe can also fix with just padding to keep the current look and still address this.\n. I think this is a duplicate of: \nhttps://github.com/brave/browser-laptop/issues/358\nClosing for now.\n. I think this is a duplicate of: \nhttps://github.com/brave/browser-laptop/issues/358\nClosing for now.\n. I fixed it here already:\nhttps://github.com/brave/browser-laptop/commit/699c49152dfd82898afd04b8aa146e1e6fc3ad5f\n. reload / stop handled as part of https://github.com/brave/browser-laptop/commit/bb0d5ef655458c89303591ef040e7d9901c88030\nLeaving this open until bookmark is also handled.\n. Good idea, will do.\n. Oops, forgot we had it there. Good catch\n. This appears on hover over the person icon now:\n\n. Along these lines I was thinking about downloading executables into a different subdir.\n. I think with us upgrading to electron-winstaller it's now fixed. CC @paulcbetts \n. I think this is a first party ad (served from the same host) which we usually allow but will have to check to see on Facebook.\n. I think this is a first party ad (served from the same host) which we usually allow but will have to check to see on Facebook.\n. #88 covers the update chaining, updated the above to be just about profiling UI.\n. This is improved a lot with 0.7.14 so I'll close this. We still have ongoing work to do to optimize further but they should be posted in more specific issues.\n. History is not implemented yet, I'm going to close this as a dupe of #444 and adjust the title there a bit more to make it more clear.\n. History is not implemented yet, I'm going to close this as a dupe of #444 and adjust the title there a bit more to make it more clear.\n. Would you mind posting the link stuff you wrote into a new issue? I'm not aware of an issue like that on file so that one would be good in a new issue just for that if you don't mind. Thanks!\n. Would you mind posting the link stuff you wrote into a new issue? I'm not aware of an issue like that on file so that one would be good in a new issue just for that if you don't mind. Thanks!\n. @luixxiul pls email me at brian@brave.com thx\n. I'll merge this but please review when you get a chance.\n. I'll merge this but please review when you get a chance.\n. Duplicate of https://github.com/brave/browser-laptop/issues/412 which will be fixed in 0.7.12 coming out today.\n. Duplicate of https://github.com/brave/browser-laptop/issues/412 which will be fixed in 0.7.12 coming out today.\n. Ya that matches other browsers, thanks for posting.\n. Ya that matches other browsers, thanks for posting.\n. Merged here:\nhttps://github.com/brave/browser-laptop/commit/63d754b48cbdb493f0dc6efb53db27ed0ecfcf02\n. This should already be working in 0.7.11.  Note there's a 0.7.12 coming out today too if you just want to wait for that. Please re-open if you see it in one of those versions though.\n. This should already be working in 0.7.11.  Note there's a 0.7.12 coming out today too if you just want to wait for that. Please re-open if you see it in one of those versions though.\n. hah yep\n. hah yep\n. I think something else used to be there before, closing.\n. If we integrated it'd be the same as the Chrome extension.  It would use that unchanged. \n. It's in the works, we're hoping by 1.0.\n. This is landed, installable in advanced -> extensions. There are some sub-things being tracked separately so I'll close this.\n. @evq do you have cycles to take this?. Doesn't sem to be working, was this fixed somewhere? Why was it closed?\n. Doesn't sem to be working, was this fixed somewhere? Why was it closed?\n. Thanks\n. Thanks\n. This is still not working, what can we do to fix this?\n. Yep, activate sounds right.  Thanks.\n. Yep, activate sounds right.  Thanks.\n. You see this on OS X right? It works for me.  Maybe you need to focus the web contents? \n. You see this on OS X right? It works for me.  Maybe you need to focus the web contents? \n. np, the cmd+shift+j one is for the browser level dev tools to inspect the actual browser and not the pages.  I'll close this.\n. I think the correct behavior on Mac is to minimize no? For Windows it's maximize.\n. I think the correct behavior on Mac is to minimize no? For Windows it's maximize.\n. Maybe a configuration or depends on OSX version, mine minimizes with the same steps. Thanks for the video.\n. Maybe a configuration or depends on OSX version, mine minimizes with the same steps. Thanks for the video.\n. Likely text selection being allowed on the UI. I need to disable I think? Clicking close might clear the selection.\n. @bradleyrichter I think you fixed this here:\nhttps://github.com/brave/browser-laptop/commit/893555aa62d16a40bb8f2685706b3b0d572109df\nPlease close this if you agree. \n. New one looks great\n. @aekeus is doing a push soon that gets rid of that library.\n. This was merged by the way so it should work now. Closing.\n. It downloads to your home directly in Downloads right now. We still need to create a Downloads manager to make it more visible what's happening. \n. API to do this is fully available already here:\nhttps://github.com/atom/electron/blob/master/docs/api/session.md#event-will-download\n. Implemented here, will be in 0.8.3\nhttps://github.com/brave/browser-laptop/commit/1f949f470a98ed146868d4e08b4943322ef92458\n. Duping to #175. Let me know if you think it differs though.\n. Fixed by #560 \n. LGTM thanks\n. I really have to pay more attention to which branch I'm working in.\n. Reproducible on OS X.  Maybe the fix is to change electron code to open context menus by default 1 px right more.\n. should be fixed upstream here:\nhttps://github.com/electron/electron/pull/6110\nNo need to track here.\n. If it didn't update behind the scenes that would make me a sad panda :panda_face: :)\nOK yes maybe some option to toggle this UI, or a button in details maybe.\n. This is just to make the UI that comes up optional\n. Yep we're planning to support markdown for these which will make life a lot easier and auto fix this. I updated the title of this task. Thanks for posting.\n. Re-opening because this is for the Details button in the app update toolbar.\n. This is implemented. \n. Yep this is already upgraded.\n. ++ I'm working on some about pages this week, about:newtab placeholder and about:preferences. After that's done it'd be a good time to add a more dev-friendly about:config to expose advanced things.\n. Nice work, merging.\n. moved to 0.14.1 for this reasoning: https://github.com/brave/browser-laptop/issues/7943#issuecomment-290079763. Looks great! I'll merge.\nIf you you want to do the nits feel free to do in the master branch directly.  Otherwise I'll just clean it up later.\n. webpack just bundles the files by the way, so it's not an http transport in production mode. The dev server is but that's not useful to us. So I think this has to be done in meta tags.\n. we can maybe use webRequest to add them though, or set it in the webview possibly.\n. Looks great, can you also document this in docs/state.md?  After that I'll gladly merge :+1: \n. Sorry actually please either store indicateLoading in state and then use that to determine whether to render. Or an alternate way would be just to check the frameProps's location protocol inside the render directly as well.  The way you have it might have slightly better perf though, but the other way would be a more simpler patch.\n. yep that's what I was thinking, let's go with that exactly.\nWhatever's easier for you.  If you want to close and open a new one or change and then git commit --amend and force push to your branch.\n. ++ thanks!\n. Thanks for posting this is related to an upgrade we're doing on one of our blocking libs for an API change and our package.json being too restrictive. Should be fixed now but you should remove and re npm install your node_modules/tracking-protection.\n. This is in the design spec, we just haven't implemented it yet. Thanks for posting the smaller more consumable mini task.\n. Dropping tabs onto sets is implemented, leaving this open for the other subtasks.\n. You can set BRAVE_PORT=9001 npm run watch and BRAVE_PORT=9001 npm run start. Would also be great to have a pull request with that info if anyone has a chance.\n. @SergeyZhukovsky can you fix this and then do an update? Thanks.\n. Removed the nodeintegration property here:\n5cea316ccbf9c837093a4f34f6681c5239644d5b\nClosing this.\n. @aekeus can you check? Thanks.\n. ++ nice find.\n. That's already how it's implemented, it will do same origin navigation within the tab but out of origin into a new tab. \nI bet there's a use case we're missing though. Let me know the STR.\nWhat I do is:\n1. Go to http://slashdot.org/\n2. Click on some of the links that lead to internal stories, I can navigate within the pin.\n3. Click on a link that goes to an external site (like in the news titles to the right it has a domain to another page link sometimes).\nIn step 2 I stay within the pinned tab.\nIn step 3 it opens a new tab.\n. @bsclifton it's a bug, same origin should stay within the same pinned tab.  Out of origin should move to a new tab.\n. ++\n. yep it is fixed.\n. @diracdeltas \n. I think we need to handle app's open-file event.\n. Updated:\n\n. Implemented and hooked up functionality for:\nGeneral:\nBrave starts with: _\nMy homepage is: _\nSearch:\nDefault search engine: Google | DuckDuckGo\nTabs:\n  [ ] Switch to new tabs immediately\n  [ ] Show tabs in page theme color\nPrivacy:\nWhen using the location bar, suggest:\n  [ ] History (not implemented yet)\n  [ ] Bookmarks\n  [ ] Open tabs\nSecurity: \n  [ ] Block reported attack sites (not available yet)\nExtra settings should be posted into new issues.\n. @diracdeltas please advise on CSP\n. It's not fixed yet but we just need to get the full user home directory and append brave-gyp here:\nhttps://github.com/brave/browser-laptop/blob/master/tools/rebuildNativeModules.js#L6 and line 7.\nMarking this as good first bug.\n. Instead of all the eslint disabling pls use window. as a prefix\n. Looks good to me, I'll merge.\n@diracdeltas please do a security audit too, if any issues we can do in follow ups.\n. +=1\n. Favicons after downloading via xhr we can base64 and use data urls.  I think we should have that anyway for session restore and other props inside the frameProps.\n. FYI for preferences I added the same for the webpack included less files and font-awesome.\n. Just noting for now, a big part of this is that there's an app state change that happens on resize here js/stores/appStore.js:\njavascript\n  mainWindow.on('resize', function (evt) {\n    // the default window size is whatever the last window resize was\n    AppActions.setDefaultWindowSize(evt.sender.getSize())\n  })\nThat triggers the app state to be communicated to the window over IPC.  We should look to minimize app state transfer for things that only matter to the app itself, like the default window position size. \n. Several UI snappy fixes in 0.7.14. \nThis is improved with 0.7.14 but not good enough to close this yet.\n. Sorry this was mistakenly closed, it's more about content not filling in the resizing window fast enough. \n. Please post your /home/shahbaz17/git/browser-laptop/npm-debug.log file if it is more than what is pasted above.\n. Thanks for the patch, looking good, just one change pls.\n. Dupe of #370\n. Can we get window.top equivalent to focusedWindow?\n. yes\n. This is included w/ 0.8.0\n. there's some concern that it looks like lag when there's a delay, I'm going to close this in favour of the above 2 issue links and possibly a refactoring of how this works completely. \n. Still a problem with 0.7.16? If so I'll re-open\n. Thanks!\n. np will just be a simple drop in, attach if you want updates, or do later.\n. This loads for me, could you give me more information?  Does it not load at all? Or some specific function for you?\n. ++\n. Thanks could you also mention the x64 binaries we're providing as of this version on the release page?\nhttps://github.com/brave/browser-laptop/releases\n. ++ nice find\n. where did you download from?\n. have you ever had the development version installed?\n. Do you have NOD_ENV set globally as an environment variable?\n. bingo! OK we should change this, thanks for the post.  For now you can set it not globally only on your project that needs it.\n. haven't had time to do this yet, moving to 0.8.1\n. wow, awesome!\n. This is in the about menu item in the main menu.  We're also moving it to the right pull down menu.\nAlt to get that menu on Windows.  Closing in favor of the other task which already exists to get it in the other menu.\n. Closing for now, will accept a fixed pull request per the suggestion above though.\n. https://github.com/brave/browser-laptop/commit/034864685548d0404ad35a4c08cfd084aced0da4\n. https://github.com/brave/browser-laptop/commit/235a1d9977ea56be6268d4fcf7963b30cb745979\n. https://github.com/brave/browser-laptop/commit/227da5a806a6a6c423ae2da8e067cb2a51ca0800\n. This is finally done, closing.\n. ++\n. Thanks!\n. @bradleyrichter please try that branch above. You just need to go into a new dir, git clone ttps://github.com/antonycourtney/browser-laptop, cd browser-laptop, npm install, and then npm run watch, and then npm start from another terminal.\n. The biggest thing I like is the flyout consolidated tab list with search.\nI'm not aware of other browsers that by default allow you to search for opened tab title / location without having to tab hunt.\n. I believe this is a 1 time upgrade problem for some users. Removing the pinned duplicates should go away from now on.  Please let me know if they continue to double or something though.\n. We may need to calculate the width of each bookmark toolbar item and then determine that way how many to show.\n. I wonder if left + right could just be combined into a single action with different params?\n. Ditto for these exit ones, should the one be tabDragExitLeft?\n. Agree and I meant to write in the pull request that I'll do so in a follow up with a bit lower priority. This is how it was in the browser repo for now. I added #21 for that. LMK if it's ok otherwise. \n. I'd go the other direction and change the constant name just because the URL bar is a subcomponent of the navbar and it's the URL bar which is focused in particular. \n. Correct, was for old tab previews (side tabs) which would snap on left or right side.\n. Sorry you're right. Thanks.\n. I think this one should be setNavBarUserInput\n. I think we want to select on focus, I think it should already be focused when onFocus is fired.\n. We may want to also have that action set a different value in the appStore.\nWe have src (for the iframe's src value) and location for the actual navigated page. \nhttps://github.com/brave/browser-electron/blob/master/docs/applicationState.md\nIt would make sense to me to add another userInput field that if it is non null we'd use it for the rendered value of the urlbar (i.e. modify how render sets its value).  Then we could set it to null on escape.\n. ya don't think that should be there.\n. Just curious if it's possible to re-use active for this or not.  If not that's Ok.  I think active current controls if the auto suggestions are showing.\n. s/active/autoselected\n. This is just the default values, are you sure they should be true by default? Seems strange.\n. Pls add certificate to the list of definitions and where it is obtained from (developer.apple.com)\n. Pls make Keychain Access program a link or describe that it is included in OS X if so.\n. How do you ensure that?\n. maybe change this to auto happen via npm run sign-darwin\n. Leave as is for now we can refactor later.\nOK I just thought that the state of the focus would automatically happen from some event when the window opened. \n. Nah we have lots to do so let's move on.Thanks.\n. This is only used on the empty left over nodes after blocking is done. So those should already all be blocked.\n. Good point.\n. I'm not actually sure if we'll be able to do private tabs w/ electron right away but we can keep this for now.\n. We actually do have  support for this in\napp/localShortcuts.js\nSo you can remove the one in localshortcut and hook it up here for zoom in and out.  \nCmdOrCtrl+= should work.\n. Can remove from localShortcut and put here as well shortcut-active-frame-reload\n. Do we want the whole window reloaded here? \n. no pref.\n. ah ok\n. ok cool\n. noted, we might want to bring in UrlUtil into our own repo in the future. \n. For a follow up, I think our default is going to be Google originally.\n. You are correct, I'll update before landing.\n. Nice find, will fix.\n. You can use this as a partial fix here:\nhttps://github.com/brave/browser/blob/def5e6157bd882402b0bf8588263c17742e74ff3/src/js/lib/favicon-util.js#L20\n. I think I'd find it more normal in the app name menu before File but I'm not sure what is normal on OSX.\n. nice :)\n. doesn't the webpack-dev-server already watch?\n. ya but I think this will double watch and write to disk which we probably don't want most of the time.\nI think we want ideally a second watch command named something different which does just the NODE_ENV=test webpack --watch for when we are working on tests.\n. yes I'll just remove that. \n. Will do\n. Actually this is coming back to me now. We used to call addSite for each site which was visited, but only with a tag when bookmarking.\n. Win should follow the same please\n. > version=0.35.1 \nWould be great if we can get this from the electron prebuilt version whichever it has.\n. nit: get searchDetail () {\n. nit: this.searchDetail.get if the above change is made.\n. AppConstants -> WindowConstants (and filename too pls)\n. const WindowDispatcher = require('../dispatcher/windowDispatcher')\n. Thanks I've been wanting to do this, so much cleaner.\n. spawnWindow seems strange to be inside the store.  Could you comment more on why it's here? \n. Nice I like how you abstracted here so it can be used from both main and renderer processes. \n. the frame key this frame was opened from?\n. Can we get this communicated back from the renderer's DOM?\n. Maybe just a TODO comment for now.\n. Possibly move to /js/lib/functional.js\n. A test that tests this value against the rendered height would also work so it fails in the future if the height changes.\n. just comment out this line for now\n. at some point we should refactor these calls away from remote because I think it does a round trip to parent process then back to child.\n. Yep that's fine and expected. \n. That's an interesting use case for bookmarks that I think we should explore later. I think of pinned tabs more like frequently accessed bookmarks that you'd rather just auto open on each new window.  I do want us to investigate keeping position of scrollbar though from session state (won't be in first iteration of that though).   I don't think the use case of 2 pinned sites on the same URL at different scroll position is big enough to warrant the extra work though.\n. good eye, fixed.\n. Posted for that here:\nhttps://app.asana.com/0/41575558488236/76928247013527\n(But didn't include 2 pinned sites for same locations there because I don't think that will be common)\n. Note this function is mostly an import from my code in the old repo. Some minor changes though.\n. startLoadTime and endLoadTime wasn't serializing / deserializing well with Date from JSON.\n. Yep agree, we had unloaded tabs in the old browser, I'll implement that separately. \n. https://app.asana.com/0/41575558488236/77092346131852\n. We can't remove this config.js file because it's used at various parts in the code.\nI think you want to:\ngit checkout HEAD^ -- js/constants/config.js\ngit checkout HEAD^ -- .gitignore\ngit commit --amend\ngit push\n. Instead of this (and related changes for chromeControlBackground2) I think you want to just change\nless/variables.less:\n@chromeControlsBackground2: #7E7F83;\nto\n@chromeControlsBackground2: #afb0b4;\n. .gitignore is a file which lists parts of files you want git to ignore completely for further changes. \nSo it would mean you don't want any changes in the path js/constants/config.js to be tracked at all. \nSo you don't want to modify .gitignore at all, what I gave above changes that back.\nYou just wanted to get rid of your local changes I think.\nInstead as changed it removes the file js/constants/config.js completely from source and ensures that no file ever added there will be tracked by source control. \n. So js/constants/config.js shouldn't show up in your diff at all.\n. Fantastic, please merge with nit addressed.\nnit: Website Helper\nAssuming spaces are ok right?\n. like those names better, thanks :)\n. Is it any slower to block onBeforeSendHeaders instead of onBeforeRequest?\n. We can probably comment this one out, and other non error cases.\n. Thanks for following a similar pattern :+1: \n. nit: you can do this in the future when name/value match:\nguestInstanceId,\n. Pls post task in github for that.\n. Pls add a comment here for why suspend / resume is needed and what it does.\n. nit. first char on comments capital. Don't bother changing just for moving forward. \n. nit: since format changed here I think email should go in an email property\n. Pls indicate if this crashes the renderer or the main process, seems like the main process right?\n. Please change to async IO.\n. Please combine those 2 commands into one which takes a parameter.\n. Possibly even this one can be combined.\n. this shouldn't be needed because I think it's avail to node even without it.\nSee const request = require('request')  in dataFile.js which already does that without this package.json change.\n. nit: caps on first char\n. pls remove later\n. Could we just check BrowserWindow.getAllWindows().length here?\n. styling nit always if (..) {\n}\n. Maybe meant to be commented out?\n. Doesn't seem to do anything, would prefer to just remove it unless there's an easy fix.\n. Pls try this instead:\nconst app = require('app')\nconst storagePath = path.join(app.getPath('userData'), 'updateLog.log')\nIt'll go inside ~/Library/Application Support/Brave\n. I think 'fs' require is needed too\n. ditto os (but we're replacing os so just remove uncommented)\n. %APPDATA%/Brave/\n. Yep I tested that on Windows.\n. I think this would be better inside the display only react component code, because otherwise you don't have a good way to know the user is currently navigated to about:blank.\n. see below\n. I think this will set a blank title for sites other than about:blank, such as about:preferences\nI think the check should be on about:blank explicitly.\n. Note that the titles for the other pages are inside their respective html files in the title tab (when we implement, but about:blank is special because it has no content in it.\n. electron docs say this should go inside will-finish-launching\n. https://docs.npmjs.com/files/package.json#repository\nIs this maybe the preferred format? If so mind doing an amend of this pull request?\nThanks for the PR.\n. OK that sounds good, thanks for clarifying and sorry for missing the scroll down ;)  Merging.\n. See above:\nnsp exception for advisory 77, because request is currently blocking updating to hawk 4.1.1 and the affected modules shouldn't impact overall security for the end user\n. Please double verify that Immutable.formJS will not cause any slowdown if you already have an immutable object. I bet it is fine, but please double check.  Just because the performance of the entire app relies on this check.\n. This is actually a bug. The correct functionality for new tab is to always open with the default session 0.\nTabs and windows opened from a partitioned tab inherit that tab though.\nWill fix, nice find.\n. Unfortunately those tests in that category depend on each other, should be refactored a bit later.\n. I think this one still needs to be let, see below with newIndex--\n. Please only list Windows for now since there is no information below that is useful.\n. nit:  You can remove these 2 lines\n. Git and node are pretty much always implied.  I'm fine with keeping them though but please make the whole list point form and remove the text Should Have:\n. Please have a new section under installation that has the text of your #1 and you can change the Installation section back to normal.\n. nit: for js pls use single quotes here and in this file. (html double is fine)\n. Thanks.  Fairly sure this won't always work because execute runs async right now, please fix.\n. Why not just process.env.BRAVE_PORT here? Less chars and 1 less file.\n. Also no need to have a console message when the clean is done, it would be a bit misleading that way.\nThe easiest way to fix is to mutate the cmds array.\n. Please do this:\nPut the var cmds = []\nAt the top\nThen do cmds.push(...) for the remove call per platform.\nThen below where you removed the commands do:\ncmds = cmds.append([...])\n. I didn't know radio existed, nice.\n. yes the approach in https://github.com/brave/browser-laptop/pull/316/files is better thanks.\n. would be better if we pulled these in from a constants file in case the names ever change.\n. I hate to suggest this since you already tested, but moment adds another 1MB to the package. Is it worth it for this? I think this is possible with plain JS.\n. nit: typo spacing\n. funky ok\n. Thanks for removing!\n. nit: This comment can be removed and spacing below and just above in .back is off.\n. You'll have to either update all the callers of SHORTCUT_NEW_FRAME to preserve their old behaviour, or do:\noptions.openInForeground === undefined ? true : option.openInForeground\n. Btw you can check with git grep SHORTCUT_NEW_FRAME\n. Oops, you're right! I'll merge as is, thanks.\n. Could you move this paragraph into a troubleshooting wiki and link to it from here instead? I just have a fear that the README will keep growing with a lot of similar things and we should keep it smaller which works for most people.\n. But leave this, one ++.\n. Note that this is currently broken though because of an added CSP on the html pages.  Maybe post a new issue for that and reference it from here. \n. Yep per slack match origin will also match things like brianbondy.com#file:// and allow it. So this should be startsWith I think and also I'm not sure how to lock this to a full path and not just the file protocol.\n. document.domain will be set to blank and also I think origin for a file URL will always return file://\n. Pls leave that, based on issues reported it is extremely common.\n. Please update this to: .tab.isPinned[data-frame-key=\"2\"] and make sure the test still works.\n. nit: Please remove those comments.\n. Is this env var only used at webpack time?  I.e. does not have an effect for builds after  npm run build package is done and you run it?\n. I think it's resolved at webpack time, which I think is preferred.\n. I don't think this is correct, why is it needed? \nWe render title based on if there is no title then use location. \n. about:blank should be a blank html document\n\n. Since this i set to the title in the state I think it will cause title mode to display still.\nUsually when a page has no title the UI should not go into title mode. \nI.e. showing\nsomedomain.com | http://somedomain.com/test \nwould be wrong and it's preferred to just show the urlbar. \n. Seems like this might lead to a race condition that happens infrequently\n. Noting that because of this change if we ever link to a page within an about: page which replaces the about page (i.e. not target=_blank) then that page will have elevated privs.  Seems a bit scary.\nLikewise if a content page links to about:preferences or about:certerror then the navigated frame won't work. \n. nit: cert,\n. sorry just ignore the comma, I was just giving a nit that the value doesn't need to be specified when it is the same as the key.\nSo should have read:\nnit: cert\n. location would never be the previous value. Always the most recent value.\nsrc on the other hand is what the iframe src is  And if the iframe is navigated, src stays the same.\n. that doesn't seem bad, just post an issue pls though to handle this in electron later.\n. what is ws://localhost:8080?\n. I'm fairly sure moving this in did-finish-load isn't right. If you allow ads and load slashdot I think this gets called a bunch of times before the frame is actually loaded. WHy was this changed away from did-frame-finish-load w/ isMainFrame check?\n. Did it change from some fixes in electron? Because it was being called multiple times before. \n. I don't think this is working, and also no remote URLs.\nSo this should be a html file in the test/fixtures directory and it should contain maybe a script, image, or iframe with a parameter that will get blocked, like:\n?ad_box_=1\nI'm not sure how to detect that the resource got blocked offf hand though. \n. You can click on the favicon in the urlbar and make sure the adblock l10n-args is correct for the number of things blocked.  Since ads are blocked you could even use a remote resource.\n. These should be defined in the l20n file please, thanks!\n. app/locales/en-US/app.l20n\nExample:\n<backButton\n  title: \"Go back\">\nThen set the data-l10n-id \n. We have some intermittent fails in travis especially.\nMainly we just mean that the test isn't testing the feature like it appears to.  So passing in this case isn't attached to the feature it is supposed to be testing. Thanks for taking a look!\n. I'm not a fan of including windowStore here, in favor of instead passing in info to contextrMenu but this is ok for now. Thanks.\n. I think we might have a capitalization inconsistency.  Would you mind fixing?\n. this makes browser-laptop-releases obsolete right?\n. fine as is but for future ref you can just do onBlur={this.onBlur}\n. Sounds like you have found which is not an Immutable object.  Example:\n{a: 3} vs Immutable.fromJS({a: 3})\n. ok this is fine. \n. https://github.com/brave/electron-prebuilt/commit/96eebc9f30a8d86c89efe57bd407a5dbe52e7bd5\n. I think it uses the local one once installed from that.\n. Instead of this please modify loadUrl, it currently takes in a frameProps already but it doesn't pass the key to the store.  It would be better for it to pass the key to the store and for the store to use it.\n. Remove this too\n. We used to have some ipc listener registration in frame.js but we had to move it out because creating lots of frames was giving there might be a leak warning. Might be worth checking for similar warnings with lots of tabs.\n. These aren't hooked up to anything\n. Does this work? I don't think messages.SHOW_BOOKMARKS_TOOLBAR is hooked up to anything so I can't imagine it would.   Previous test commits also didn't work when I ran the tests. I think you need to run npm run watch-all in one terminal and in the other do npm run test.\nYou can change a describe block to describe.only to run only that test or you can run npm run test -- --grep=should\\ close\\ toolbar\\ when\\ signaled for example.\nAlso I think that an IPC message is not correct for this, instead it should be a toggle of this pref: bookmarks.toolbar.show.\n. done\n. was this intended to bold it? Because it doesn't bold currently.\n. I think we've found that should.eventually.be is very intermittent error prone. Could you change those to waitUntil equivalents?\n. Otherwise looks good, thanks.\n. I'm fairly sure that doing this will break when you navigate to a page with a title and then after that to a page with no title.  This area of code is desperately in need of tests.\n. Actually I'm surprised if this passes the test page without a title, maybe that test needs a tweak if it does pass.\n. Right idea to fork it but pls use the same shortcut as Chrome here for familiarity's sake.  That's  Control+Shift+O for bookmarks manager on Windows.  And Command+Alt+B for OS X.\n. Actually Linux is always the same as Windows as well so this should be const isDarwin = process.platform === 'darwin' w/ an isDarwin ? X : Y.\n. See app/menu.js: we usually put that const at the top\n. This looks right to me but we need to have these conditionally added w/ another if (!isDarwin) because on OS X alt + left goes to previous workd and alt + right goes to next word.\n. we want windows + linux to be Command+Shift+O and OS X to be 'CmdOrCtrl+Alt+B',\n. This TODO is intended to sit here forever I hope, right? :)\n. we don't need this in browser packaging right? Just asking so I can exclude from the installer packaging.\n. not important here but @SergeyZhukovsky knows all about making this exact thing ultra fast \n. Good idea to use a context menu here\n. WIP I assume\n. I think this change wasn't intentional for this changeset\n. This is looking a lot better now thanks for cleaning it up. \nCouple of minor suggestions:\ni) create a js/actions/windowAction.js and put this code in there.  Call it something like inspectElement (x, y).\nii) Only query the dom element once and store it in a variable, and then do an if (webview) {} in case the dom element doesn't exist.   Also I think you may only need the inpsectElement and not the openDevTools() but whatever is needed is fine. \n. np here but pls use De Morgan's law as it's more clear for future commits\n. Can this be obtained dynamically based on the files in locales/en-us ?\nWould make 1 less step of maintenance as we add new files.\n. would be good to eventually have this figured out dynamically but the scope for that is too big for now.\n. missing: bn-BD\nWould be good to have a docs/localizationDevelopment.md file or similar which explains some of the manual things we need to do relating to localization.  For example list localizing menu items, what you need to do when adding a new language. etc.\n. I'd be worth trying to automate this, perhaps on a pre-commit hook to verify that the files in en-us match the files here at a minimum.\n. pre-commit script would apply here too, see below.\n. Perhaps explain more about why.\n. Pls get this from some centralized required file here and in other places.\n. This is an important one, we should async send the translations to the renderer when the window is created and not on each request for a translated string sync. \n. A nice way to do this might be via convention. Like anything with menu prefix will be included here.\n. @replacepreg your comment was removed. Feel free to try again without profanity if you'd like to have a productive conversation. \n. nit capital on the 'a'\n. nit: you can use .toLowerCase().startsWith instead of doing a substring.\n. I'll merge this anyway, but just noting that I'd prefer no sync IPC here.\n. might be good to add a warning here that it could break some pages.\n. Even within the same file we have 2 of the same list of languages, please calculate one from the other.\nPlease merge directly after that change and with the other localization merge that was backed out. Thanks!\n. Thanks for the fixes.  Note that menu will still flash FILE EDIT VIEW then go to File Edit View\n. nit: remove\n. Variable name a bit off since linux will go in this clause too won't it? Or if not why not?\n. is there a possibility for something suffixed to win32?\n. Also just a nit but else if block instead of if/else nested in else.\n. merging as is though\n. It looks like bn-BD properties files is loading in english strings.  Is that expected? \n. I know we want to be competitive on the amount of height our browser chrome takes up (it matters a lot to some people).  Increasing by 7px always wouldn't fly.  \nI see 2 options:\ni) Add a className in React code that's handled here that specifies whether or not to use 23px for no favicon or 30px for favicons. (call the class something like showFavicons).\nor ii) Always use 23px and just resize the favicons smaller.\nCC @bradleyrichter \n. I don't think we want pointer's on buttons at all because it makes it look less native looking that way and less html looking.  Like for example we don't have a pointer on the back / forward buttons.\nCC @bradleyrichter for thoughts.\n. I'll merge this and fix but just an fyi that you can do this:\ncx({\n  bookmarksToolbar: true,\n  allowDragging: this.props.shouldAllowWindowDrag,\n  showFavicons: showFavicon\n})\nIt's basically just a way to have object properties with true/false values and if they are true the key name is converted to a string.  It's a nicer format than a bunch of ternary checks because it's so common to include / exclude for classes.\n. You don't have to now but this will require a bit of localization work. The strings should go into locale.js and also the string action shouldn't be a variable.  Only host would be a variable.  The action might move around in the sentence in different languages. \n. always for this site?\n. These changes will be overwritten, you would need to change them on Transifex for them to take effect.\n. You can consider all localization files except for english to be auto generated from transifex.\n. You can request access here: https://www.transifex.com/brave/brave-laptop/dashboard/\n. Nevermind, that is implied by Yes.\n. Only false or undefined for now right?\n. I'm ok with this but just noting that both blocks are very similar. You could probably treat undefined passed here as no exception and have the other function call this one.\n. nice cleanup moving this into windwActions\n. minor bug here where if a hostname is the same as a protocol name then this won't work correctly.   Maybe I could have a computer on my network called http for example.  Far fetched example but could happen.\n. I think there's a minor problem here from what I'd expect.  For example on my website (brianbondy.com) I have a video in the first blog post.  If I accept once the video doesn't load, I think because the iframe has a different first party url.   I'm ok with landing this as is though but just post an issue for that to handle it after in a different way (whitelisting the whole frame once we can reliably determine frame from filtering functions)\n. I think this should be noScript\n. Note I could see a slight argument for not allowing the iframe origins but allowing a permanent exception seems to allow the iframes afterwards. \n. Would prefer to store a list of URLs instead of the full message in case we need t use the info for something else later on.\n. Ideally this would be localized but not overly concerned about it\n. ok, it was just strange to see the full message in session store.\n. nit: Hide Menu Bar\n. wouldn't it be possible just to specify the file path of the icon instead?\n. See here:\nhttps://github.com/brave/browser-laptop/commit/27e61f2f48ddb805549f4c48ced302478bc95343\nCC'ing @diracdeltas \n. We should leave the site item here and just remove the bookmark tag from it.  That way it still stays in history.\n. I think this should be e.target.spellcheck !== 'false' but otherwise this looks good. I'll merge in and change in a followup. Thanks!\n. nevermind it's right, I was confusing it with the attribute.\n. Please mark up this string like the others are.  See data-l10n-id in the same file.\n. You can git grep sendUsFeedback and follow the same.  Note that you would only add it to the en_US locale and not the others. The others are auto generated.\n. ya safe browsing still needs some work.\n. See the commit comment, the global options are coming in preferences instead later today.\n. done\n. done\n. done\n. that should be moved to urlUtil because siteUtil is only for dealing with site state. I'll use it for now though.\n. done\n. done\n. done\n. done\n. I don't have a good way to do this yet, I'm going to disable it for now in private tabs.\n. and post a follow up\n. @bridiver  ping\n. This isn't valid syntax and will cause the browser to not start. \nI think you want something like:\ntitle={this.isFolder ? '' : this.props.bookmark.get('location')}\nit would be good to also have the bookmark title there though too like chrome.\n. If you make changes to your branch you can git add -u and then git commit --amend and then git push -f and the pull request will be updated.\n. The word bookmark shouldn't be in this file since it's a general context menu file.\n. ditto\n. ditto\n. I suggest to modify js/contextMenu.js and look in bookmarkItemsInit. That's where icons are set. If you find it is a folder you can add a new property like faIcon and then if it is specified inside js/compnents/contextMenu.js you can use it.\n. You can just check for .fa I think \n. ok thanks, was wondering about this.\n. yes\n. load the url\n. Does this need to be re-ordered?\n. prefer to only set this once if not already set, because it will be a callback called a lot.\n. pls update comment\n. We're moving away from having bind in the handler because react sees it as different every time.  Preferred method is to add a method and then call it and bind it to this in the constructor.\n. oops sorry, for some reason I thought it was changed to 1 minute but it's clearly still 5.\n. I don't think the changes in frame.js is necessary is it?\n. These aren't needed here. You only need this for things you want to access in JS as well.\n. You can use the less variable here directly.\n. via z-index:  @zindexWindow\n. Remove CSS variables\n. @diracdeltas \n. Does this cause a different partition name for the default partition? In particular people that have a gmail account setup for example will still have that setup right?\n. I think local storage, cache, cookies, etc.\n. I don't think it's ok to make people re-setup all user accounts.\n. @bridiver said he verified and it's considered the same partition. Merging.\n. This one should just move to the abp-filter-parser-cpp data list, I'll just make a note to remove it here when I'm working on cosmetic filterds.\n. Brave pages here needs to be taken from locale.translation pls\n. let's make this 2\n. nice\n. I think that is the case now, at some point in this function we couldn't do that but things have changed since then.\n. I prefer perf over better flash placeholder, might be worth filing an issue though to investigate further. \n. This is the main bug that here it is using adnmjfhcejodgpaljdmlmjoclihpcfka but above it installs as oemmndcbldboiebfnladdacbdfmadadm\n. Yep I noticed it there but we didn't want telemetry anyway.\n. Looks like this is all worked out in the follow up commit by the way by Yan. I got the ID from the one that is used when opening PDFs from a link.\n. Pls remove this one\n. Pls search all of title, customTitle and location.  For example if someone does www.google.com it should find a match\n. When selected folder changes please clear out the current search term and show the folder contents instead\n. You could not clear but just search only within the selected folder and descendants would be fine too.  If you do the search all though maybe we should show a selected virtual item like chrome does for search terms so there's no ambiguity.\n. I'm not sure how to reproduce but sometimes even having the option on gives a save prompt. It's something related to flipping pref though. It works reliably with a restart without the bug.\n. what about provisionalLocation and maybe src and location.\nprovisionalLocation I can see maybe being useful on a about:certerror type of page.\n. Please move this to the tab context menu instead of the in page one.\n. A better way to do this is with cx which allows you to selectively include or exclude css styles with a boolean expression.  You can find some uses in the same file.\n. Please do in a follow up as I'm going to merge this separately.\n. customTitle || title || location here to match how it is displayed.\n. Pls also add a similar check on the context menu to not even show the option to avid people thinking it's a bug.\nIs it possible to use appUrlUtil's isNavigatableAboutPage here and there instead? \n. not a big deal and super nit but you can probably just remove this line and use curDomain for the below 2 lines.\n. cc @diracdeltas This task is good on its own without this. We don't need both checks here.  Would you prefer we update refererExceptions to the base domains and use getBaseDomain here or would you prefer we use the more narrow exceptions with not modifying refererExceptions and not using getBaseDomain?\n. thanks for catching partition number too \ud83d\udc4d \n. This will need to be set inside app.sessionStore based on the user's old selected xml engine.  And only done once, after that it should jus preserve the setting.  Also some users won't have an old xml setting if it is their first time install.\n. It is the same setting name as before so just check for special case values of content/search/google.xml and content/search/duckduckgo.xml when loading the session state and migrate accordingly.\n. these strings should be localized pls\n. I suggest to make sortableTable take in a list of l10n ids alternately to display those.\n. great!\n. Style should really only be calculated inside render, here you'd set state which indicated the active engine, something like frame.x.navbar.urlbar.activeSearchEngine.   I think we should also show the favicon as soon as you put searchTerm + ' ' and you don't need an extra char after that. I think it will be fixed by what I'm suggesting here.\nYou might want to wait for Brad to weigh in first to make sure we still want to have the favicon in the urlbar because I mentioned some of the favicons are looking bad as is, like yahoo and duck duck go seems pixelated. \n. where is this.detail set?\n. nevermind I see the property, thanks.\n. ++ since the timeout is only happens on uncaught exceptions which is rare\n. LastPass used to have a preferences link that I think got removed in this by accident. Pls re-add\n. we should still prefer the Bravery menu. \nCC @bradleyrichter which order would you like it in?\n. Ditto I don't think we should get rid of about brave and check for updates.\nCC @bradleyrichter \n. @brad do you want report an issue and submit feedback removed now?\n. better to not add if not needed\n. Actually I'll just simplify this to not disable the item, there is no need to disable the functionality even if it does no-op because already cleared.  And disabling adds confusion for why it is disabled.\n. it will either way, but I'll add that so it is more accurate. \n. This is the same as how we did it before but I posted in this issue to handle that in next release after this one. \nhttps://github.com/brave/browser-laptop/issues/3065\n. thanks!\n. this change doesn't seem necessary, any reason for it?\n. I think there's some kind of a rebase issue here, please rebase from current master\n. Not sure I understand, why was bookmarks moved into the urlbar component? It seems unrelated to the rest of the changeset.\n. do we need this since we don't use it already for macOS?\n. why was this added as a dep here?\n. These getCurrentWindow calls are bad for perf in general, it's better to have the current window cached in the component via using \nrequire('../app/renderer/currentWindow')\nSee windowActions.js for an example\n. yes I agree it was only ever added here at some point because urlUtil used to be an external module we couldn't modify.\n. this should be downloadItemCancel\n. Thanks for the patch. \nPlease keep this as ImmutableComponent, and then just determine in render if it's valid or not and render accordingly.  Also I think this only styles that it's invalid currently and not stops it from submitting it. \nFor any visual changes also pls include a screenshot, thanks.\n. pls create a variable for this border value in variables.less and use it here.\n. If you're only using closedFrames from windowState then I think you should call this:\nREQUEST_WINDOW_CLOSED_FRAMES\nRESPONSE_WINDOW_CLOSED_FRAMES\nAnd then update accordingly.\n. actually call it something like request menu data for window, and only include closed frames in it.\n. I think a better place for requesting this data is in a mainWindow.on('focus', ... event of the BrowserWindow in the appStore.\n. For now just leave out the word Full since app state sites data is truncated to most recent 500.\n. pls name data more specific here, maybe something like windowLevelData\n. Just noticed we also have UPDATE_APP_MENU you should rename that to be more specific to be about bookmarks, and then maybe that is an indication that you should be more specific for perf reasons in the message names as I originally suggested in the first message in this thread. \n. Please do this in another commit in this same PR.\n. I think this separator should be added conditionally on if there is at least 1 item before it. I think it's the case there could be 0.\n. ditto double check on separator here.\n. per before this is best to be more specific pls.\n. yay! good catch.\n. great work on these tests.\n. Pls include the same item on the back and forward click and hold menus.\n. there might be an opportunity to refactor some common styles with bookmarks page, if so please take the time to do that now before we merge this.\n. There is a chance the title is blank, pls test and format correctly for that case.\n. correctly means just with the url in that case.\n. If you can pull out some common controls with bookmarks it would help because we plan to do things like multi select in the future. It'll be very soon work in any case so you can save the refactor for that if you prefer.\n. || site.get('location')\n. || site.get('location')\n. I'd recommend that you have an accessor defined for this instead:\nget bookmarkNameValid () {\n...\n}\nNote that there is an onChange handler on the bookmark name so the site data is always known, so you can just check it there in this.props.currentDetail.\nI think you don't need to know whether the bookmark name is valid separately from if the save button should be disabled. In particular the save button should be disabled when the bookmark name is invalid.\n. And remove this shouldComponentUpdate, no immutable component should need to ever override it.\n. ImmutableComponents would not have setState either\n. Here you'd check \nif (!this.bookmarkNameValid) {\n  return false\n}\n. this.bookmarkNameValid after the above changes\n. nit: add a space before  !important or just be more specific and then you can bypass the need for it altogether.\nbackground-color: #ccc !important;\n. Actually I'll ask for a small follow up if you don't mind, I think no title is valid for bookmarks but not bookmark folders. In that case we display as just the URL.\nSo the follow up PR would just have something like return !this.isFolder || ...\n. oh ok great then\n. nit documentation bug, I think this arg is actually a boolean type and not an Object\n. Pls send in a smaller subset here instead in a follow up\n. I'd prefer if we don't store a base64 encoded image url and instead make this an actual image and put a link here\n. nit for future ref, skip braces when not needed is preferred \n. I commented on the commit on your branch by mistake instead of here:\nhttps://github.com/darkdh/browser-laptop/commit/f82a848a08780ff0b2f4ded95b2000514f937323\n. hah I was going to suggest that as the fix, thanks.\n. Honestly I'd probably get around this problem just by changing the hover state, it's probably not worth having this to spec for the amount of time it can take to do it properly.\nHowever if you want to, I think the proper way is to handle mouseEnter and moueLeave and set state in the findDetail for if it is hovered or not.  Then render based on that state.\n. Please do get rid of this though ;)\n. I didn't refactor that way because webview.stopFindInPage takes a different parameter currently and I wanted to keep it the same as what it was.\n. you need a newline before this or else it will format as:\n### Autofill\nYu can see by clicking the view button above on this PR\n. also this doesn't really convey to me as a user that an autofill feature was added. Just that an alignment issue was fixed for it (etc). I don't think users will care about it since it's a sub-thing of the task itself.\n. I do see it a little later \" Add Autofill support\" but I lost interest because of the trivial first thing and stopped reading ;)\n. I think I'd just drop out the trivial things that don't have user value in knowing completely and that probably means getting rid of the sections.\n. that syntax wasn't intentional, I'll fix.\n. @bridiver this had to be called here to retain the existing behaviour. \nstopFindInPage needs to be called to clear the highlight but to keep the current match in case you command+g.\n. but it must keep it because it remembers the next position?\n. I think btw the webviewAction was used at one point and was committed out.\n. We can't remove the call because when we do the yellow highlight stays forever\n. This one was actually reverted so it doesn't need to be here.\n. these need links to issues like all past change log release notes.\nIt might also be too bare now but maybe not, just make sure that all added features and bug fixes that might have nagged people in the past are listed.\nI'd list bookmarks now show in bookmarks menu, and history now shows in history menu.\nI'd also add info that there is a new about:history page (while linking to issues for each).\nExample of a good bug to include:\nBookmark title is not updated unbookmarking/rebookmarking\nWatch capitalization on Added ledger beta , and I think it's not specific enough to convey what it is to people.  Maybe something like \"Added the ability to load BTC funds and micropay sites with the Brave Ledger\"\n. pathName could probably just be called only once again above instead of repeatedly below, downside is that someone could forget to call it when using statePath (which isn't actually a path) later. I'll merge though.\n. For this pls always run through a spell check because it's easy to miss on review\n. ditto here\n. Capitalization too HTTPS Everywhere\n. ETags (I'm pushing a fix to these btw)\n. so your branch will need a git pull --rebase\n. or just close it and start a new one\n. Ctlr + Y\n. Pls update the name of this function and comment because it's a bit misleading. I'll merge this but just commit something directly with an auditor: @bbondy message. \nIt filters out sites without tags, but it also clears last accessed time on the sites that do have tags.\nI'd maybe call it clearHistory and then describe both actions in the comment.\n. Next time you're in this file just adjust the shortcut spacing mentioned here, I think you missed this comment from before.\n. dtito\n. This file is just copied from electron so no need to review it\n. don't understand this todo, maybe missing a word use\n. is it save to delete it instead of setting to 0? /cc @bsclifton \n. did you check to make sure this isn't regressed? Use git blame on the task to see the original bug.\n. Actually sorry, I think we should prefix this env var with BRAVE. There's a chance this will be defined on some people's machines already and cause problems.\n. wow I guess we should have wrote JavaScript correctly. Thanks :)\n. It's better to require only async/queue so it doesn't pull in everything, pls do in a follow up, I won't block merging this though on it.\n. This one is more important than bookmark double separator, and actually it was a bugfix to remove an extra separator so that should be under fixed pls and not very important so towards the bottom.\n. This was just changing wording, not important enough to mention here.\n. This is probably biggest fixed so up top\n. ditto important fix so listed 2nd for fixed section\n. People don't know what passwords.properties is, so say fixed localization for password strings as that title\n. 3rd highest fix\n. last access time, avoid coding terms in changelog\n. remove this one pls per before\n. Thanks for the patch.\nI think new tab should be there regardless\n. Actually clone is still a valid operation as well regardless of the current page. Because it clones the full history, you might just want a copy of the history.   Reload isn't needed for now, but it should be for example an intermediate page is also an error page for things like a network connection error.\n. Please document the subvalues here too\n. The ones you expect you will have.\n. I think there could be a case somewhere where payload.perWindowState is empty.\n. This seems like it's removing all open tabs and frames etc, is this intentional here?\n. I see but I'm still concerned we're deleting too much. New state gets added here all the time and stuff not related to windows from last time.\n. specifically [] is not falsy so maybe the check in the block above is superfluous if (payload.perWindowState && savePerWindowState) { but it makes me wonder if it can be undefined and not empty sometimes. It could be an old check. \n. I'll change this when I PR my stuff.\n. We were debouncing this so that we can call it multiple times. As the different events come in.\nSo you need to move addSiteDebounced above at the top of the file.  Then use it like you do below. But also use it in the other events as things come in like the favicon and the themeColor event.\n. The problem is sometimes we get a loadi-end but the favicon or themecolor event didn't happen yet.  So you need to also call addSiteDebounced from:\n this.webview.addEventListener('page-favicon-updated', (e) => {\nthis.webview.addEventListener('did-change-theme-color', ({themeColor}) => {\nBut be sure not to call it for private tabs, like the above one doesn't. \n. Here you'll add ignoredSite: []\n. All of this should also be documented in doc/state.md\n. I don't think you always want to show a scrollbar on windows here and on mac depending on the setting.  I think you want overflow: auto right?\n. This is misleading and makes the reader think we have new extensions that are added, which is not the case, if it was we woul say which ones.\nThe first one is an about:extensions page\nThe last 2 are the same but should be more description, something like Added support for extension action buttons for password managers.\nI'd put the Malay language at the bottom of the added list since it isn't applicable to everyone.\n. LastPass\n. in to -> into\n. menubar -> menu\n. CmdOrCtrl+T (New Tab)\n. This should be removed, it's only included for upstream upgrades which we haven't done yet.  There will be an issue that describes it explicitly in the milestone when we do.\n. this one before about:extensions page\n. this one before about:extensions too, but after extension action buttons\n. remove one extra space after (New Tab)\n. This won't be rendered properly in markdown because it'll think it's an html tag.\n. nit: Please also support CommandOrControl, we don't use it yet but we might in the future.\n. ditto CommandOrControl\n. You could just use const calmp = require('lodash/clamp') and remove this\n. shouldn't this be stored in windowState instead? Wouldn't this mirror to all open windows?\n. If you mouse over the close button and slowly move your mouse up past the top of the window, the red stays solid.\n. It's also really hard to get the resize diagonal cursor when you mouse over the top right corner of the window.  The other corners are fine.\n. I think there's some tests that should be adjusted for this change in components/windowTest.js git grep for 480 in the test dir\n. better to make it symmetric with componentWillMount since you do it on unmount. \n. Currently you aren't respecting the visible: false for menu templates which makes find next / find prev show up int he Edit menu as items but not work. These should be hidden but the shortcuts should still work.\n. pls do in an audit, will merge so we can get it in builds. \n. ewww :) Pls change this to use cx for classSet in a followup\n. yes like this one...\n. ?\n. doh that was from copy/paste, I'll get rid of all files at once when I fix this to avoid that\n. db001147cba8ca30c853c753b98752d074337ac4\n. Newer code mostly should use destructuring when possible and no space around { and }.\n. Yep it was probably there because at one point they mattered and then after a bugfix they were left behind. Fixed as part of:\necc67f28714ec923d59d639f79415364712ad214\n. Fixed as part of:\necc67f28714ec923d59d639f79415364712ad214\n. Fixed as part of:\necc67f28714ec923d59d639f79415364712ad214\n. 9b1aa09da5b8b213749c94da102ae92a2357f1dd\n. let's call this out as the 2nd highest and put it in the added list. Added bravery panel settings for private tabs.  Please do in a follow up.\n. Please end each release note in a period.\n. A better explanation for what regional adblocking is would be great here too.\n. This looks great when bookmark toolbar icons is turned on but when there is not it throws off the vertical alignment a lot.  Could you fix? Thanks!\n. nit: remove newlines from start of file\n. nit: keyLocationCodes\n. nit2: Name it the same you call variables you require to for better grep-ability, so keyLocations\n. neat I didn't even know this existed. \n. This file should probably go in app/common/crash-herald, but that doesn't block this review.\n. Just noting I think we're trying to move away from setter actions\n. Please link to issues instead of PRs since we require issues now.  If for some reason we miss that though and there is no issue then it is ok.\n. This one is just a bugfix and not an option. \nAnd one of those issues links to the PR, better to just remove that. No duplicates listed either, leave those out if there are any.\n. agreed, we should wait for the change on these so they don't need to be in every test.\n. we have another check somewhere that checks all decedents but I don't remember where off hand.   Is this a strong enough check? I.e. could someone do something like this?\nA\n--- B\n     --- C\nAnd then move A into C to create a circular ref?\n. @bradleyrichter should we add anonymized or something like that?\n. It'd be cleaner to call this hasBookmarks since hasOneBookmark can be true when there are 2 bookmarks.\n. I think this can be removed now\nif (title == null) {\n    title = ''\n}\n. ditto here\n. This doesn't do what you're expecting, our debounce function returns a debounced version of the function.\nSo you are only calling this once ever.\n. This description isn't very clear for someone casually reading the changelog. The title of the issue was clear though. Just noting, I'll merge though. \n. Was Autofill.init() removed here intentionally?\n. I wonder if all these 3 things could be managed by a single appAction instead. I won't block on it but I think that's preferred for future ref.\n. Please document this in the docs/tests.md\n. Should these be removed?\n. Please add \non startup and on the preferences page.\n. Also these should all have a period at the end of each sentence please\n. Please avoid direct comparisons to other browsers, and just say Fixed autocomplete handling so it works better.\n. ...from other browsers.\n. in the URL bar\n. Address bar or URL bar but be consistent.\n. You mean you want me to name the local branchpr-1234 instead of ID would be more clear?\n. ok I wasn't clear because I also have an example, but I guess you want newline + pr-1234 changed ok thanks.\n. ++ for extra logic in url utils but I'll merge this as is for now\n. todo format is TODO(bsclifton): delete the selected entry\n. How about for example our Dialogs. \nhttps://github.com/brave/browser-laptop/blob/master/less/forms.less#L100\nhttps://github.com/brave/browser-laptop/blob/master/less/forms.less#L144\nhttps://github.com/brave/browser-laptop/blob/master/less/forms.less#L194\n...\nIt's a lot of repeated styles and could benefit from shared re-use.  I'm thinking in those cases we jus require in a shared common style from app/renderer/styles/*.js?\n. Prefer something like this for the example in one line:\nconst {StyleSheet, css} = require('aphrodite')\n. Side note is we could probably hook this easily in the future if KA didn't already do this and inspect the style properties and strings and do certain checks and console.warn for problems.\n. Can you make a recommendation on units as well as part of this documentation? Should we avoid px for example on new stuff or is it ok?  We seem to have some support issues along the lines of things look tiny, maybe due to dpi? Not sure but just wondering if this type of thing could be handled at the same time as we do a new style system.  Now would be a great time to figure that type o thing out and make sure new things use the new system.\n. already existing windowAction.setFavicon\n. Love to see you pulling things like this out so they are more testable. ++\n. nit remove logging\n. nit: logging\n. nit: Comment should be aligned with the lines on the same indent level\nnit2: You don't ever really need to comment out code since all code is recoverable with git history. \n. For l10n updates pls only update en-US the other files will be pulled down from transifex.\n. It's also for pocket so it's just in general for extensions.\n. Pls use a Set here, or just indexing inside an object is fine. You can make this O(N) or O(NlogN) depending on complexity of lookups in an ES6 Set.  Which is much better than the current O(N^2).\n. \ud83d\udc4d \n. This should still show the location when you use this option, but it should show as add bookmark and not edit bookmark.\n. Add bookmark on the toolbar is not or adding a bookmark for the current page, it is more generalized. You can default the values to the current page but it's designed to add a bookmark for any page. . :|. ouch. Maybe we should also print warning.message first?. woops, it'd be nice to lint for this type of error eventually.. \ud83d\udc83 . Possibly we're using it in about: pages.  . Is it possible there are some buttons this will make unexpectedly bigger than what it was?. Something like this should work, but maybe another fix is needed for passing attributes to about pages, I'll merge this in the meantime either way though.\ncopyToClipboard.title=Copy to clipboard. I think charCodeAt is implemented to UCS-2 even know the strings are UTF-16.  So for example a single unicode symbol could be for charCodeAt(0) and charCodeAt(1).  Are there any code units that have their second  set of16-bits < 127?  Maybe there is a utility function we can use instead for this since these types of checks can easily go wrong? On a side note I think our TP and adblock libs probably need fixes like this.. I think the impl is probably right though in regards to what I brought up because you will just return false before it gets to the second code unit, so you can probably ignore my comment above.  . toString's radix is option so doesn't need to be specified and you can even just not convert to a string since it'll be coerced but I'm fine with this.  Merging, thanks!. The puase() calls should not be needed by the way, you should instead wait on some element state like a class name. The pause will fail intermittently if it is required.   It was already there though so I'll merge this.  Thanks!. I was just commenting on these pause's, thanks!. we differentiate on bookmarks with different partitions, at least until today with previous releases.  For example a user might want to bookmark twitter.com when logged in as user A and twitter.com when logged in as user B.. ditto lack of partition here. Could you name this tabPageClosed?. you should still be able to stub Math.random even without this with sinon. k np. I think it should be included. @alexwykoff more specific version here please, I'll merge but please update it.. ++ for making preferences.js less huge too. this is ok for now but we'll want to change this later to something that dispatches to the store and does a single action.  This would be pretty slow as is sometimes with a full tab page set. . we're trying to avoid set names for actions, and name them after an event instead. Could you rename this to noScriptExceptionAdded or something similar?. ditto this constant. We're using aphrodite for new UI but since this isn't new UI and just an extension of an existing one this is cool.  Feel free to update at the same time to aphrodite if you want to.. ideally there should be no logic inside the window action, I think you should just make it an easy api and have it declarative, so like windowAction.tabPageClosed(i) for the index to close.  The store then does the work to figure out which frames it needs to close and closes them all in one swoop.. Pls remove this file and instead just put the value in js/constants/config.js. There's more to do here as per discussions but doesn't need to all be done in this bug.\nBut I think this will try to do a sync copy on disk on first startup which would slow down startup. Could you verify if that's the case? . yes @diracdeltas is right.\nPlease do test that youtube videos do not give ads just to be sure though (logged in and out) and also do the test cases here:\nhttps://github.com/brave/browser-laptop/commit/fc24493f2e090b23ed7ba44fee7ac7b3e8ca6f23#diff-1f92b9d4310a18761948d6ea1fbefc84. Pls do audited commit if changing, I'll merge this in the meantime. Thanks.. I guess should is kind of like *Requested for tab creation, maybe we should use one or the other.  No need to hold this up though just thinking out loud. . \ud83d\udcaf . strange, I bet it was at some point and not anymore.. Pls move this into getPartition which takes in createProperties and returns the partition. . I think this should be:\n!createProperties.openerTabId ||\ncreateProperties.isPrivate ||\ncreateProperties.isPartitioned ||\ncreateProperties.partitionNumber ||\ncreateProperties.partition\nIn particular the last one would also be needed in case someone is creating a tab inside a particular partition and we also want the parent partition to be filled correctly.. please wrap this with   if (tab && !tab.isDestroyed()) { and all below as well.. Our dispatcher now has the ability to send messages to a particular window.  So it's more preferable to do an app action with a window Id specified.  See for example newWebContentsAdded.  . if this isn't needed anymore can it just be removed?. This one doesn't read well.\nAbility to tear off tabs and to combine them back into other windows.. I'd also order this above widevine for prime video. \"user pinning\" doesn't make sense to me for this feature. Maybe \"ledger site pining\". nit: space between / back / forward. nit PDF. This one should be excluded please since we introduced it in the same version.. Oh no! My eyes are bleeding from seeing a space between the number and unit :P . I think this is newly introduced so should be excluded.. sub-bug of a feature that was added same version, exclude.. Always JavaScript. setting for Ubuntu. Explicit chromium versions always in release notes pls.. Node before muon. yep sorry I meant to get back to that before submitting the PR, will do!. that's an oversight but we aren't using it because Brad asked not to, I'll change it in case we do use it in the future though.. Submit feedback would make sense to be moved into here.  In the future I was thinking new tab stats sharing from the new tab page would go into here as well.. I posted a follow up task marked as good-first-bug for this review comment:\nhttps://github.com/brave/browser-laptop/issues/8604. not blocking merging, but why is location needed here?. I just mean that the browser process already has this info so it is not needed to send from the window renderer. Pls do for a follow up but not high priority. . Basically it just leaves the chance that someone will use the API wrongly at some point, so better not to include it. . I was under the understanding we were defaulting to on with notification bar.. nit: pls remove this commented out code. I don't understand what this does.\nOnly in the case thatthis.props.locationValue is about:blank does it go to UrlUtil.getDisplayLocation(this.props.location, pdfjsEnabled)) and UrlUtil.getDisplayLocation('about:blank', pdfjsEnabled)) actually returns about:blank.. Since this doesn't do anything, I'm changing this to:\n-        this.setValue(this.props.locationValue !== 'about:blank'\n-          ? this.props.locationValue\n-          : UrlUtil.getDisplayLocation(this.props.location, pdfjsEnabled))\n+        if (this.props.locationValue !== 'about:blank') {\n+          this.setValue(this.props.locationValue)\n+        }\nwhich I think is the expected functionality.. I think in the timing I'm experiencing the change does nothing, but on the timing you're experiencing it does something. Trying to think of the right thing to do here. . This is also the line of code that causes typing fast after new tab to get clobbered by the way. Very noticeable if you have lots of bookmarks. . I think this should either be removed or it should just access in O(1) to check via site key. . some will still iterate over everything, I think it would be best to just make the cache related to bookmarks, and if the key is in there then return in O(1) if it is bookmarked.. I think this should all be removed and then just add the bookmarked property in getTabValue and it'll work better. . That would be better but not introduced in this commit so leaving as is for now. The right way is to store it separately in state so no filter is needed at all. . done, good catch.. This is actually only showing up because I fixed javadoc comment block on some of anthony's actions.  It's not introduced here.. gotcha ok. I think I'd handle appConstants.APP_ADD_SITE in the tabsReducer, the only problem is that doesn't tell you which tab to update. You could either find the tabs with that location or pass in the info with ADD_SITE, that might be better if you can fix all the callers.\nThen you could just callupdateTab after getting the tab by tabId in tabs.js\n. Could you check how often this is called? If it is often could you put this in a different component passing in only the URL? It would ensure each is only rendered / called once. . nit: these can be removed in a follow up. nice job on these tests \ud83d\udcaf . In a follow up after this is merged, please move this to app/common/state.  Basically no files should be in js/* anymore and we're migrating away from that.. Please also move this test to test/unit/app/common/state/. Did you check if this gets called frequently?. I think this line is still needed.. Should this be wrapped with encodeURIComponent? querystring.stringify(query). or even cleaner just ?accept_preview=true or ?accept_preview=false, but that might require server change.. OK cool re Slack, querystring encodes it as normal params.. Please follow the same pattern as here:\nhttps://github.com/luixxiul/browser-laptop/blob/dd9ad5fe6077165d5d15df2428c5770a235f04d1/app/common/lib/suggestion.js#L504\nBasically you resolve with an empty immutable list if the setting is not on.. This name is a bit misleading for passing in styles, Maybe call it customRightTextStyle?. Might be safer to always send appSettings regardless of if history is falsy or not?. I like that it's split out into a different action file like we previously discussed; however, I think that we'll eventually hit an unintentional bug because of not namespacing on the object or module and using just the function name.  I won't block the review on that but I think we should change it in the near future since it'll be prone to collisions.. This would be a good place for some comments about what each *Entry property is for.  Please add in a follow up.. I wonder if it might have been better to just re-use dispatch from appDispatcher but I guess that might be a little confusing.. it's fine for this one but I prefer something like reloadRequested when it's a temporary thing that we will change later.. yay for this being removed.. Does this need a case for pdf as well?. This is probably the funniest part of our code :S. nit: I prefer this at the end of a file . ok I'm not concerned either way, was just noting.. I'd move this down since we aren't highlighting or showing it on first run in this release.. HBO GO. to:\n`<li>`. tabByIndex?. Do you know why it even attempts to do this if in hover state mode?. The concern here is that updateTabPageIndex should just do what it says and not ignore for isTabInHoverState.\nInstead we should just call updateTabPageIndex when the active state of a tab changes. \nBecause otherwise you could be on tab page 2 with an active tab on tab page 3. And as you're looking at tab page 2, audio could start playing on tab page 3 and it would change the active tab. \nWhat you did mostly fixes it, but there are some edge cases that are missed. \nI posted this issue for tracking the work, I'll merge this in the meantime:\nhttps://github.com/brave/browser-laptop/issues/9911\nYou can do that task out of line with lower priority. . I know it was like this before as well but this should be returning state here. . yep it's a good practice to start lines like that with a semicolon so you don't need to worry about moved code and the preceding line of code.. I talked to Clifton, the handlers aren't actually used in app state and this is only called once. . good catch, updated PR to only do it once for now, which makes it the same number as before (once).. thanks, addressed here: 05781e4b1cd41a3c20408a1a964a7d229d2cc0c6. Merged it all the way up to 0.17.x but obviously no respin for that, just merged it up for the sake of easier merges if anything else changes.. Please put the full Chromium version here.. Not in 0.18.x, this PR is against 0.18.x, so it wouldn't show this diff if there was. . because we used to set default app state in 2 places but now just one place.  Via Object.assign after a clean, but I'd of had to have 2 different methods for that, one for immutable and one for not. . that would be perfectly fine to not delete the state.  It's just that if you put undefined for 'tabs' in state here then it won't get filled later.. I think instead of an app store listener on all events here we should handle the events that change site settings in a reducer and call into a cache module (braverySettingsCache) managed from the reducer and used in filtering.. I don't think this line is correct anyway but while you are here, the correct thing to do is to send in lastEmittedState here . RPM. Fixed using chromium URL parsing everywhere in favour of node based URL parsing.. nice. will do. yep I was planning to try to limit this but wanted a review on the approach otherwise first and to get everything working nicely otherwise first.  Will do.. profiled this and it isn't a source of performance problems even with 6 tab pages, so will leave it as is for now.. that's on purpose because I toggle it often. they are 2 diff things though so I don't think they should be.. I think left-over console.log\nNice fix, thanks!:). Please add a comment for why debug exists (to keep alive for tests I think?)\n. ditto about debug. btw just noting that appActions with a windowId get routed to that windowStore too as well as the appStore.. why does the default folder Id have to change here?. \ud83d\udc4d \n. I think it's a problem that this calls tabs.executeScriptInBackground but that the file exists in common. It needs browser process so the file should be located in the browser please.. Noticed that below you used Number instead of ~~ here. Maybe use ~~ as well here? It's a bit diff in that ~~ is like Math.floor. But I think this is always an integer.. or just pass it into the dispatched action ya and then handle the app action resize constant in the window store. It's a bit abnormal to use windowActions. I see them as more only within a single window renderer. I think it's only used 1 other place. . that's fine just add a comment to explain it thx. ok thanks.. copy paste error: s/tabsReducer/bookmarkToolbarReducer. update to new name. ditto not sure which you prefer but either ~~ or Number. I don't care which way it was just odd to me to see ~~ being changed to Number in some places and then also new ~~ being used.. use immutable helper here for readability pls. nit: I think you can combine these into one regex to be faster:\n.replace(/\\/?#?$/, ''). Can you move this to appAction?. I don't think we can assume that app window created means always focused.  You could maybe check the window here and if focused do that if for some reason the focus event isn't firing.. @NejcZdovc that seems fair but pls open an issue to track it.. ++!. you can just use window.performance and avoid this.. :trollface: :). before we showed this notification only when !getSetting(settings.PAYMENTS_NOTIFICATIONS) is that change intentional?. maybe the above default: should be just break so this always runs?. I guess I'm thinking about getSetting(settings.PAYMENTS_NOTIFICATIONS) is false and getSetting(settings.PAYMENTS_ENABLED) is false, before it would show.. I think it makes sense but I'm going to pass on it for now since I have other 0.19.x high priority things to focus on, but that's valid minor refactor for sure.. maybe better called btc2BatTransitionPending?. pushed out a fix for that to this branch. want to just PR an alt fix @NejcZdovc ?. nit console.error here so it has callstack too. I think you want !newClient here because otherwise newClient's false could be used in the else.. Pls add comment here that this only happens on initial state, I think that's the case from reading the code.. Pls add comment here that this only happens on initial state, I think that's the case from reading the code.. this is fine but I think preferred style is const {BrowserWindow} = require('electron'). nit on style:\njust tabId instead of tabId: tabId. I see it was moved code, so feel free to leave as is.. nit: start comment with capital and end in period.. nit: does not. nit does not or doesn\\'t. nit: please rename this to tabValue because we usually use tab as the webContents in code.. nit: * to align with other stars. nit comment style. nit comment style. Thanks for leaving this file in place, I'd imagine we'll get more tests than just that one switch in the future.. These are sub-dirs of node_modules mostly so yes it's a typo. Thx.. I think this should be alloc(2) here actually, ditto above. so const buffer = Buffer.alloc(2). I think this is going to cause a privacy problem for incognito mode. Added spell check and the ability to select multiple languages.. Fixed PDF printing for contribution statements on Windows.. Specify the muon version here. I'm pretty sure that moving this on ready will make these not work. Relating to this comment, I was going to relaunch here but ran into an issue. I posted this to investigate it further:\nhttps://github.com/brave/browser-laptop/issues/12896\n. agree but it doesn't change frequently so not going to spend time on it and retest for now.. Iw as wondering the same as @diracdeltas but her reasoning makes sense. . since this is one time only this is ok but in general we shouldn't ever write out in a sync way. \nThe comment above it should have whitespace fixed though please. . ^ seems blocking. I think wrapping in an if (!fs) would be good here. should this be Brave and not brave? Some people have case sensitive filesystems.. I don't think it's important, but just noting this won't work for different channel builds.. video iii)\n=>\nvideo, iii). nit: twitch -> Twitch\nCapitalization for branded items per what the brand defines.  Ditto in references below.. nit: Save As\u2026\n3 dots are used for when there is follow up UI for an action.. - Added EasyPrivacy tracking list and ad-block performance improvements.. \ud83d\ude40So awesome! :D. I prefer the longer one but if there are strong objections or risks of breaking things, I'll leave it to you guys. Thanks for checking.. ",
    "KevinGrandon": "State for tab dragging and dropping? We can move that out.\nIt seems like it might be a lot of work to have state in ui.tabs, wouldn't we need to synchronize that with the frames as well? \nHow do we feel about tacking on additional data to each frame? E.g., frames.[n].tabIsDragging|tabIsDraggingOverLeftHalf|tabIsDraggingOverRightHalf\n. I agree that we should move the state out, just trying to figure out the right place for it :)\nShould it go into ui.tabs or be tacked onto each frame? If we put it on ui.tabs, then we'd need to synchronize the tabs for each frame operation that we do currently right? (Adding/removing/crashing/etc)\n. Most of the tests I've found (in https://github.com/atom/electron/tree/master/spec), are just unit tests.\nThis resource may be helpful: https://github.com/atom/electron/blob/master/docs/tutorial/using-selenium-and-webdriver.md\n. @bbondy - I haven't had time to get this working yet, and won't finish this sprint so I've gone ahead and re-assigned the asana task to you.\nThere's really not much to use as a reference here, so I'll just close this - but you can look at the libraries I was trying to pull in. Probably better to use the webdriverio library here: https://github.com/atom/electron/blob/master/docs/tutorial/using-selenium-and-webdriver.md\n. I want to keep going on other things, so audit in the morning if you can, thanks.\n. I think there's just a problem loading the webview preload path, maybe something wrong with webpack.\nGo ahead and finish this for me if you can, thanks!\n. ",
    "diracdeltas": "Thanks for the detailed comments and appstate documentation! I've updated the pull request to use the frame location prop. \nThis doesn't seem to be working on <meta> redirects though (ex: http://zyan.scripts.mit.edu/) because the webview redirect event isn't fired. Filed upstream https://github.com/atom/electron/issues/3723\n. Fixed the redirect issue in https://github.com/brave/browser-electron/commit/a1eb2fbe581ac7b8f6726c3709daf938c87ca103\n. Is the bug that the random text should be preserved when switching back to Tab 2? updating the address bar with tab URL when switching tabs works for me on master, but the random text isn't preserved.\n. Oh, i see it now. Thanks, will fix\n. Sometimes the search bar also reappears when you switch back to the Google tab.\n. LGTM!\nTangentially-related bug: when opening a new window, local shortcuts don't work until a previous window is focused and then unfocused. cmd-t to open a tab works fine though.\n. already opened #20 \n. oops, you beat me to it. closed #20.\n. I found a weird bug:\n1. open new tab (about:blank)\n2. go to some URL (google.com)\n3. close google.com tab\n4. restore tab using this shortcut\ntab 2 now says \"about:blank\" in the title but has google.com in the frame. tab 1 says \"google.com\" in the title and also has google.com in the frame. Switching focus from tab 2 to tab 1 and back to tab 2 makes this bug disappear (tab 1 is google.com, tab 2 is about:blank as expected).\n. bug is gone, thanks\n. oops, duplicate.\n. cc myself for review\n. this seems to break clicking on url suggestions\n. Nice, i agree this feels better. LGTM though I still get the error in #18 when I open a bunch of tabs.\n. Weirdly this seems to only happen when dragging a tab rightward, not leftward.\n. Oops, what I mean is that only the tab[s] whose index increases after the drag-and-drop gets reloaded.\n. This is really confusing. Is there any way to reload a webview other than (1) changing the webview src and (2) calling webview.reload()?\nWhat's weird is that even if all the tabs have the same src, moving a tab still reloads the right-moving tabs even though none of their src's change.\n. not at all! i should have pinged you earlier.\nOn Dec 9, 2015 7:01 PM, \"Brian R. Bondy\" notifications@github.com wrote:\n\nSorry for taking, hope you don't mind.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-electron/issues/31#issuecomment-163470974\n.\n. This seems to have been automagically fixed sometime in the last ~day. Clicking on a autosuggest link will always reload the page. Seems fine since that's what chrome does.\n. I noticed this yesterday on asana.com too\n. confirmed that it doesn't work with stock electron-prebuilt either\n\nlogin with facebook on spotify.com works though\n. Looks good to me modulo comments. Awesome work!\n. closed by https://github.com/brave/browser-electron/commit/bfbfd379a484beac75bf80e417e71b69e1afc707\n. bookmarked sites seem to be always autosuggested in the urlbar autosuggest, regardless of what is typed.\notherwise works!\n. Cool, lgtm otherwise!\n. is sites just the browsing history? Why is visits not inside sites?\nis it possible to have both private and non-private tabs in the same window? if not, windows should also have the isPrivate property.\notherwise @bridiver's spec looks good to me\n. Sorry, I didn't see this issue but I fixed it in #84 yesterday. \n. could still use a test though\n. cc @bridiver since tests seem to be failing inconsistently. travis reports:\n```\n  25 passing (26s)\n  2 failing\n  1) urlbar change tabs tab with typing clears the selected text:\n      undefined: expected 'about:blank' to equal ''\n      + expected - actual\n      -about:blank\n2) urlbar change tabs switch to typing tab preserves typing state:\n      undefined: expected 'about:blank' to equal 'a'\n      + expected - actual\n      -about:blank\n      +a\n```\nLocally when I run npm test, I never see the first error and I only see the second one sometimes. Any ideas?\n. Merging for now despite Travis since I have another branch that depends on this.\n. :+1: \n. fixed https://github.com/brave/browser-electron/commit/33bf0119af07cd48153c228e8c4347cf22fff2eb\n. i can't either; it probably got fixed at some point. will reopen if it happens again.\n. Looks like we need to set allow-displaying-insecure-content. https://github.com/atom/electron/pull/2372\nThe current de-facto standard is to allow insecure display content by default but block active mixed content. \n. looks like prompt is still not supported?\n. also still seeing this\nrelated: #18 \n. Not hooked up either; I am slowing going through all the menu items from left-to-right lol. Asana metatask: https://app.asana.com/0/63978637151655/60676934904645\n. Nope, I didn't finish hooking them up. Self assigning.\n. fails for me on osx too\n. macbook air screen\n. Also, this uses electron-prebuilt 0.36.2\n. incremental search should be working as of latest commit\n. thanks, merged\n. oops, apparently pull req with failing CI can't be merged from a phone. i'll do it later\n. looks great!\n. the way i reproed it before was by pinning the default about:blank tab. the autosuggest in both the pinned tab and non-pinned tabs would then stop working. however, i think 57411f8e5778e93a228accb7c78d44a7d9256cc3 actually fixed it.\n. Cool, lgtm otherwise!\n. Update: thanks to the Electron maintainers who pointed out my very-obvious typo, this is now actually doing redirects. :) \n. > For js/data/rulesets.sqlite I think this is GPL so should probably be loaded remotely. See adblock.js and trackingProtection.js which use the dataFile module. I can throw it on S3 if you want, just ping me on slack.\nYep, it's GPL so this sounds right.\n. > Please also add a switch in app/appConfig.js for enabled in case we need to disable this last minute before the 20th.\nwill do. will these switches be exposed to users eventually or even for the beta?\n. I've updated this so HTTPS Everywhere also uses dataFile.init\n. Will resolve and merge for now!\n. Here is the test I just did:\n1. start brave\n2. cd /Users/yan/Library/Application Support/Brave/Cache\n3. grep -ir 'savecrypto' . -> no results\n4. open private tab, go to savecrypto.org\n5.  grep -ir 'savecrypto' . -> Binary file ./data_1 matches, Binary file ./data_3 matches\n. yeah, i'll do that\n. in particular, whenever the lock icon isn't visible, it's possible to attack users by having a secure site redirect invisibly to an insecure site and waiting for them to enter their password, etc. there should always be some visible indicator of the security state.\n. left of title sounds good to me. i'm all for showing nothing when insecure for now.\n. I got the lock icon next to the title but got stuck on figuring out a way to center the title and lock icon. https://github.com/brave/browser-laptop/commit/2a2c6cd924ec4f5ebafd977900659543060a6767\nany ideas?\n. Actually neither 2 nor 4 load for me. Will look.\n. (2) probably loaded for you because the request got through before HTTPS E was loaded. The fix for this is to disable the Nike.com.xml rule in HTTPS Everywhere (which breaks nikeplus.com in Chrome too). Added exclusions list to https://github.com/brave/browser-laptop/commit/28ab1fafb76ca9fe65977c33868d627c9f599302 to make this easier for ruleset maintainance.\n. Seems to be working once rulesets.sqlite was redownloaded, so closing this.\n. I left it the way it is because Chrome's behavior is to just show the bookmark popup if \"add bookmark\" is clicked on a page that is already bookmarked. not sure if we want to do that long-term\n. k will fix\n. second-to-last item fixed by https://github.com/brave/browser-laptop/commit/b3e26d1ca62c2252b2ad68c9ffebc423e1d0d0f8\n. It seems to be working for me on master (open private tab, load vice.com, redirects to HTTPS). any particular repro steps i should try?\n. Can this be closed now?\n. @bbondy are you working on autocomplete with browser history or should i take it?\n. I was thinking a separate store with entries like:\n{\n  sites: [{\n    url: string,\n    description: string, // the string that is searched for a match; ex: \"brave.com - A faster browser\"\n    lastAccessed: datetime,\n    partitionNumber: number\n  }]\n}\nProbably only the ~500 most recent entries need to be in this store for autocomplete. about:history could read from disk to find older entries. \n. Cool, I wasn't sure what the size limit of appStore is.\nNot sure about visit count - i feel like sorting by timestamp is sufficient\n. @garvankeeley for future reference, might help to open browser console (cmd + shift + j) and screenshot the error log as well. :+1: for cool gif screenshot\n. Opened https://github.com/atom/electron/issues/4141\n. this is fixed by https://github.com/atom/electron/pull/4177/files, so downloads will be in the correct place once @bbondy updates electron-prebuilt to include that commit.\nif it's worth it in the meantime, i can set the session download path to the home downloads folder.\n. Fixed in 0.7.10!\n. dupe of https://github.com/brave/browser-laptop/issues/192 i think?\n. Closing for now; please re-open if it keeps happening\n. Closing for now; please re-open if it keeps happening\n. I think commit signing solves the issue of whether the source code is legit, but IIUC this issue is for verifying if the pre-built binaries on brave.com are legit. Most users are running the binaries, not checking out commits. Unfortunately we don't yet have a reproducible build process. \nA page like https://www.torproject.org/docs/signing-keys.html.en that lists the keys used to sign the various releases would suffice. @jonathancross i believe @bsclifton's comment above indicates the releases distributed from brave.com (which is where most people download Brave) are signed. but yes, ideally we would sign the ones posted on Github as well.. @posix4e are you still taking this?. Linux signing keys are live! https://brave.com/signing-keys\nstill need mac and windows\nif someone on linux could verify that they can download, gpg import, and verify their builds using these keys that'd be great\nthanks @jonathansampson for succeeding where many others have failed. ^ @bbondy @bsclifton @posix4e looks like brave-apt-staging needs an update? or is it deprecated?. update on publishing signing keys: Clifton sent me PEMs for the mac and windows signing keys, but I'm having a hard time validating them. i tried parsing them with openssl and keytool to no avail.. @bsclifton they were signed, not encrypted, and i already verified the signature. the problem is in the key format, not your signature of it.. First outside PR, congrats. +1 to the change. :)\n. Looks great, thanks a lot.\n. Looks great, thanks a lot.\n. People are asking about this at the hackathon, so I think we do need a contributing.md\n. @viswanathamsantosh i made a contributing.md doc with more advanced instructions, but your doc would be useful for beginners, thanks. Could you open it instead as a wiki page (titled 'Tips for new contributors' or something) and link to it from the readme? \n. Yep, pretty sure this is a duplicate of #209. This might do the trick: https://github.com/brave/browser-laptop/issues/209#issuecomment-173369741\n. Yep, pretty sure this is a duplicate of #209. This might do the trick: https://github.com/brave/browser-laptop/issues/209#issuecomment-173369741\n. I'm not a windows user but i think NPM should come with Node if you download here: https://nodejs.org/en/download/\n. I'm not a windows user but i think NPM should come with Node if you download here: https://nodejs.org/en/download/\n. I too am seeing the error with abp-filter-parser-cpp on debian sid. node-gyp is 3.2.1 so that isn't the issue\n. in https://github.com/brave/browser-laptop/issues/237, sid says that updating to node 5.5 fixed it. i am Away-From-Linux-Keyboard right now, but curious if that works for others.\n. I fixed this for me on Debian unstable by deleting node_modules, updating to node 5.5, and then doing npm install again!\n. @PunkUnity you can do a clean install by rm -rf node_modules/, then doing npm install again. Feel free to comment on #249; we welcome pull requests for linux packaging!\n. is this like on Chrome where the hamburger menu is just a duplicate of commonly-used app menu items?\n. \n. Probably this is best done in Electron by using Chromium's safebrowsing module (src/chrome/browser/safe_browsing i think). @bridiver could you look into how feasible this would be?\n. Thanks for the tip about PhishTank. At a glance, it looks easier and more flexible than SafeBrowsing V4. SafeBrowsing would probably be more efficient, but I think PhishTank will do for now.\n. @neeklamy thanks for checking out the other options.  i'll check with my contact at opendns about current phishtank status.\n@bridiver cool, i figured as much\n. After talking to @bbondy , I think our first-pass strategy should be to merge the spam404 block list (https://github.com/Dawsey21/Lists) and the disconnect malware list (https://s3.amazonaws.com/lists.disconnect.me/simple_malware.txt) to create a tracking protection blocklist, updated once per week or so. The only difference is that these domains need to be blocked in 1st party contexts as well as 3rd party.\nI also talked to OpenDNS today and learned that while phishtank is still maintained for now, they are actively working on a better version of Phishtank which should be good for our needs. But since phishtank blocks full URLs with paths, not just domains, it won't use the tracking protection code.\n. useful test cases: https://badssl.com/\n. Closing for now. Will open follow-up tasks.\n. Yep, closing as duplicate.\n. There's no central list. the two approaches i've seen are:\n1. chrome > advanced > content settings > disallow JS except on sites matching hostname patterns that you enter in\n2. noscript - block js on all sites, can select \"allow scripts on this site\" whenever you encounter a site \n. agree\nOn Sat, Jan 30, 2016 at 2:57 PM, Brian R. Bondy notifications@github.com\nwrote:\n\nI guess we could support both modes. #1\nhttps://github.com/brave/browser-laptop/pull/1 seems much more useful\nto me though.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/231#issuecomment-177325688\n.\n. I think this is a dupe of #214 as well. @sidstamm interesting that node 5.5 solved it for you. are you on a linux machine? on osx, node 5.4.1 works fine for me.\n. My app doesn't crash, but it shows this error repeatedly and refuses to load the goog doc. @aekeus are we getting crash reports for things like this?\n\n\n. Super weirdly, I can open the doc if I copy-paste the link into a new tab, but not if i double click it from Goog drive.\n. Seems to be working now!\n. I think this is Google's problem; they can in theory figure out that the browser is Brave based on our UA string.\n. just my 2 cents: i like the lightness, would prefer keeping round tabs\n. Yes, this is separate. I am going to rename and re-open.\n. @sidstamm great catch, thanks for checking. putting the easy-to-reduce parts of this fingerprinting surface on my 0.8 list.\n. What happens if we take Brave out of the user-agent for 0.8 while our user set is small enough to be highly identifiable? Any thoughts @bbondy?\n. I tried taking Brave out of the UA in https://github.com/brave/browser-laptop/tree/fix/fingerprinting; however, that change made the browser more fingerprintable according to panopticlick, not less.\nBefore:\n\nAfter:\n\nThis may be because Electron is using an outdated/unusual version of Chrome. My regular Chrome UA string is Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36 vs Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.110 Safari/537.36 for Brave.\n. Now that we updated to Chrome 49, 327fcc7 reduces the entropy score by a few bits. There are several other ways we can reach fingerprint parity with chrome which i'll work on\nwe are already winning on Browser Plugins because we don't have any plugins, yay.\n. Good news, we now score better than Chrome latest stable (in a fresh browser profile, default settings, incognito mode) on the Panopticlick fingerprinting test. Probably in part due to me doing the Panopticlick test repeatedly in Brave. ;)\nChrome:\n\nBrave:\n\n. > This is great, thanks for taking this on! Since the UA fix requires one of two things: Lots of Brave users with the same UA string, or other browsers to reduce bits in the UA... I think that's probably not easily reducible in the short term.\nThe UA fix as currently implemented in 0.9.0 makes us look like a somewhat out-of-date chrome user. However, brian is working on updating the chromium point release, so we will hopefully just look like a regular chrome user.\nRe: canvas fix, i hope to block 3rd party canvas writes with sufficiently-high entropy and prompt for permission on first-party canvas writes like tor browser does.\n. Here are the results with #1354 applied. Note that the WebGL fingerprint is 'undetermined', which is apparently not a common value (so the entropy count goes up). But at least all Brave users will have the same value.\n\n. Agree on closing this, even though panopticlick will still sometimes show our users as \"unique\" depending on their system until there are a lot more Brave users who are testing themselves on panopticlick. Specific follow-up tasks like #260 are welcome.\n. There's been an internal discussion about this; I don't think we will turn on DNT by default until we have something like Privacy Badger that whitelists sites with an acceptable DNT policy at a .well-known URL. Optional DNT header turning-on will probably come in 0.9-ish. Open to other thoughts.\ncc @BrendanEich \n. Same issue as #214 \n. I'm pretty in favor of this change. The only thing I would fix is that the padding on the left side without a prevTab element is too small. It should be the same as the padding in the second screenshot below.\n\n\n. This is a pretty cool idea for post-1.0. The browser UI is completely written in HTML/CSS/JS, so it makes sense for us to be the https://atom.io/ of browsers in terms of core customizability.\n. I think at least a dozen people have asked me this via Twitter/etc. cc @bbondy for thoughts on when we should have linux packages available.\n. FWIW, we no longer require sqlite3\n. Compatibility with Chrome extensions is a good post-1.0 goal. The main reason it's not coming earlier is that Electron doesn't want to support all the Chrome extension APIs; we'd have to convince them to do so or put them in our fork of Electron. https://github.com/atom/electron/issues/1498\n. Talked to @bridiver about this just now. We will probably implement all/most of https://wiki.mozilla.org/WebExtensions, which will cover the majority of functionality needed for chrome extensions.\n. HTTPS Everywhere appears to not be working in the new partition\n. This is a good start. overall i think my biggest concern is that it's hard to tell what partition any tab is in. i think there needs to be UI like the \"Person 1\" indicator from Chrome:\n\nAlso, what are use cases for partitioned tabs that aren't already possible with private tabs? (Or with a fresh session per private tab)\n. There is no bookmarklets section yet\n. I was hoping https://github.com/brave/browser-laptop/commit/7e5dba30bb9675df8b0612266e685dc82b4dec55#commitcomment-15776640 would fix this, but it doesn't. It seems that only javascript: URLs dragged into the tabbar cause the main BrowserWindow to navigate to about:blank. http(s):,  data: and file: don't seem to have this issue.\nTest page: https://zyan.scripts.mit.edu/node_test/test.html\n. closed by https://github.com/brave/browser-laptop/commit/a4f6d0beeeffb46c0af9718440c99ffbbca0c7fa\n. either way, this is minor enough in the grand scheme of things to be 1.0 or later\n. @aakilfernandes Yep, I'm well aware of that; by \"minor\" i mean compared to things like having a settings menu in the first place. Anyway, if https://github.com/atom/electron/issues/4174 is resolved, I think this should be easy to do in 0.8 or 0.9.\n. I think this is mitigated by 35efd0ecdcaf98deee1d29c1a319fbbfe04a0c59, which adds a permission prompt for the getting user media (deny by default). I'm not 100% sure this prevents internal IP leaks due to the way webrtc signaling works though.\n. You're right, 35efd0e did not address this issue. Upstream https://github.com/atom/electron/issues/4200 was closed because Electron added support for permission handlers, but webrtc does not trigger any permission requests yet, so this is still open.\n. @nashe we can't use ublock's method directly, because they are just flipping a chrome-specific setting (https://developer.chrome.com/extensions/privacy#property-network webRTCIPHandlingPolicy) which Electron doesn't support. if you figure out a way to expose that setting or equivalent in Brave, we can add it to the preferences page.\n. discussed on slack. @bridiver to expose access to webrtc_ip_handling_policy in our Electron fork, and then I'll add a pref for this in Brave.\n. @bridiver Currently unscheduled, but I see about one request for this per week on Twitter/Github. Is 0.9.3 feasible?\n. > Any updates on this? This is the only thing that is keeping me from switching over to Brave as my full-time browser.\nif @bridiver thinks this is not going to be available by 0.10.5, i can probably stub webrtc in the fingerprinting block content script\n. > Is the goal just to prevent users being fingerprinted by malicious websites? The thing is that the browser already contains hundreds of ways to do this -- and I don't think Brave plans to prevent them all -- listing all fonts, screen resolution, detecting number of cores, etc. etc.\nHi @feross, here's my writeup of Brave's fingerprinting defense goals: https://github.com/brave/browser-laptop/wiki/Fingerprinting-Protection-Mode\nYou're right that any modern browser's fingerprinting surface is already intractable and getting ever more complicated by new features. Therefore we prioritize the subset of fingerprinting attacks that have been detected in the wild, which does include webrtc fingerprinting. (Citation: http://randomwalker.info/publications/OpenWPM_1_million_site_tracking_measurement.pdf)\n. @taoeffect without a VPN or any extensions, https://diafygi.github.io/webrtc-ips/ correctly identified both my public and local IP on both chrome stable and brave stable, which is what I was expecting. my goal is to fix this in the next release at least when fingerprinting protection is turned on.\n. @fippo Based on the tests that @taoeffect and I did above, combined with the fact that most people don't use VPNs/proxies regularly, I think the effectiveness of IP tracking methods has not significantly diminished. The paper is relevant (thanks @feross for pointing it out) but it explicitly doesn't consider non-proxy/VPN local IP leakage from behind a NAT to be a great concern; it does suggest user approval via a prompt but the major browsers haven't implemented this yet.\nThanks for the pointer to https://github.com/webrtcHacks/webrtcnotify, but I think we are going with the ublock method for now. Also if you want to stub out https://github.com/diafygi/webrtc-ips/pull/8/files, something like https://github.com/brave/browser-laptop/blob/master/app/extensions/brave/content/scripts/blockCanvasFingerprinting.js#L156 may work.\n. > Are you referring to this quote from the spec?\n@feross I was referring to:\nWhen used with audio and video devices, WebRTC requires explicit\n   user permission to access those devices.  We propose that this\n   permission grant be expanded to include consent to allow WebRTC\n   to access all IP addresses associated with the user agent, for\n   the purpose of finding the absolute best route for media traffic.\nExplicit user permission for audio/video devices in Chrome and Brave right now is granted via a non-modal notification prompt; I was imagining the same for IP access.\n\nAm I right in interpreting this as \"Mode 3\" from draft-ietf-rtcweb-ip-handling-01?\n\nI believe so. As mentioned above though, it'll be off by default to start and only enabled if the 'Fingerprinting Protection Mode' is on. \n. I did some testing and it appears that with Tor as my system SOCKS proxy on OS X, both Brave and Chrome 51.0.2704.103 leak true public/private IP address on https://diafygi.github.io/webrtc-ips/. So I am going to tie fingerprinting protection to the disable_non_proxied_udp setting, since default_public_interface_only apparently reveals the true public IP. \n. @luixxiul good catch, looks like webrtc blocking is broken in the 0.11.0 release but works on master. cc @bbondy @bridiver \n. turns out webrtc fingerprinting was accidentally never merged into the release branch. added it to the manual tests so it will definitely be in the next release.\n. nice to see Wladimir contributing!\n@bridiver so there is no downside to adding the sandbox attribute anyway for now? i'll do it then\n. cc @garvankeeley, please fix when you get a chance\n. +1, feel free to change the srcdoc to src with sandbox when the new URL comes @bridiver \n. maybe my ex-coworker @feross has thoughts here :) \n. @craigmichaelmartin that would be excellent, thank you!\n. thanks for this brian! please squash commits (git rebase -i master) so this is a single commit instead of 9\n. Here's what the tabbar looks like on a small screen after the latest changes. Better but I still feel like the padding on the next/prev tab buttons is too large. @bradleyrichter please advise.\n\n. note that if you change the defaultOpenSearchPath in js/constants/config.js from Google to './content/search/duckduckgo.xml', it'll search duckduckgo by default\n. Yep, this is a known side-effect of blocking third party resources. Test site: https://sharemenot.cs.washington.edu/Test%20Installation.shtml\nLong term, we could replace those buttons with versions that don't track you, like Privacy Badger / ShareMeNot. \n. reopening this since we may want to implement sharemenot after all. We are not blocking 3rd party cookies yet but I agree this should come at the same time. (0.8)\n. Noting that this should also cover html5 sessionStorage, websql, and indexdb\n. I didn't touch the close/undo-close tab code but i'm not seeing any cleanup that is happening there\n. This looks much better and fixes the bothersomeness of #278. :+1: for merging\n. Note this still doesn't set the URL bar location to view-source:... but helpful anyways. thanks!\n. yup\n. I see the don't-block-ads banner too. Is that expected? @bridiver \n. Yeah, some of our tests are flakey :(. Anyway this fixes the console errors for me, so I'll cherry-pick the fix. Thanks!\n. Please file at https://github.com/brave/browser-android\n. Is this fixed now in 0.7.16 since we got rid of sqlite3?\n. So is the issue in the title resolved in https://github.com/brave/browser-laptop/commit/8ac6ff7670ed1217041eab532a2818f8e95039a1?\nIt sounds like there are also separate issues of local shortcuts like https://github.com/brave/browser-laptop/commit/8ac6ff7670ed1217041eab532a2818f8e95039a1:\n1. not respecting user-specified system shortcuts\n2. not being what people expect on Windows\nwhile i like the idea of having a 1-to-1 mapping from actual shortcuts to the app menu shortcuts, i think we are going to get a lot of feature requests for non-standard shortcuts that are commonly in use.\n. Thanks, I can confirm this.\n. Thank you for this, I haven't had this issue on Linux but will link to it if others have it. We should probably have a troubleshooting section in the README that links to issues like this. Feel free to start it and open a pull request.\n. Yeah, it takes about 1-2 seconds for me on OS X.\n. As mentioned in #366, we don't have a preferences menu yet. Closing this as a dupe of #310 and #366. \n. I think the non-starters are:\n- Modifying the site's CSP setting.\n- Not using a sandboxed iframe.\nFrom my reading of CSP2, I think <iframe srcdoc=[some pre-rendered HTML] sandbox> should not be blocked? (But note that the parent CSP policy applies to the srcdoc document)\n. The shortcut is hooked up, but we don't have a preferences page yet.\n. fixed thanks to @bbondy \n. +1\n. Does 0.7.10 include #138 ? if so that should go in there\n. nvm above comment, i see it in 0.7.9\n. duplicate of #310 \n. Confirmed with this test case: https://www.w3.org/Member/\nI wonder if this is related to popup blocking, cc'ing @bridiver \n. thanks @elsehow for linking the upstream issue. looks like ben at Nylas fixed this 4 days ago, so this should be closed in the next electron-prebuilt release: https://github.com/atom/electron/pull/4181\n. Is this working now that sqlite3 isn't needed?\n. Ok, I'm closing this for now \n. Ok, I'm closing this for now \n. +1 for not supporting Flash\n. Could anyone who is having trouble with Flash sites like Hulu checkout this branch to see if it fixes the issue: https://github.com/brave/browser-laptop/tree/feature/ua-spoofing\nIt spoofs the user-agent to iPad (which doesn't run flash by default). Thanks!\n. > Netflix works on Safari 9+ without any Flash/Silverlight. Might be a better option for ua spoofing because I think Netflix on ios sends you to their app.\nI think that is because of EME support. http://techblog.netflix.com/2014/06/html5-video-in-safari-on-os-x-yosemite.html\nI'll change it to desktop safari for now\n. I think this would happen less often if we used the \"vibrant\" option from http://jariz.github.io/vibrant.js/ instead of \"muted\" (which is what it's set to currently). Any thoughts @bbondy ?\n. slack before (muted color set):\n\nslack after (vibrant color set)\n\n. brave.com is orange\nOn Wed, Feb 3, 2016 at 10:18 AM, bradleyrichter notifications@github.com\nwrote:\n\n@diracdeltas https://github.com/diracdeltas Did you happen to try\nbrave.com? It was an unappetizing brown color before. I'm wondering what\nit looks like now?\nI do think we should stop getting colors from the favicon. It just doesn't\nwork reliably. So if no theme color (vibrant) exists, then use default tab\ncolor which is light grey. ( @bbondy https://github.com/bbondy )\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/387#issuecomment-179387354\n.\n. I think this should stay open until it's actually fixed on master\n. thanks, assigning to @aekeus \n. @paulcbetts says this is fixed in the latest installer. @aekeus can you confirm we are using it?\n. thanks @paulcbetts :+1: \n. disabling for now or just disabling the \"check for updates\" button seems fine\n. maybe related, but when i click \"add a line note\" on github, nothing happens\n. nope, using 0.7.11\n. ~/r/browser-electron (master) [1]> npm list | grep electron\nbrave@0.7.11 /Users/yan/repos/browser-electron\n\u251c\u2500\u252c electron-builder@2.6.0\n\u251c\u2500\u252c electron-installer-squirrel-windows@1.2.2\n\u251c\u2500\u2500 electron-localshortcut@0.6.0\n\u251c\u2500\u252c electron-packager@5.2.0 (git://github.com/brave/electron-packager.git#544fa851b3cc7430f7570e1fe7c949bbcb9c7283)\n\u2502 \u251c\u2500\u252c electron-download@1.4.1\n\u251c\u2500\u252c electron-prebuilt@0.36.5 (git://github.com/brave/electron-prebuilt.git#80392709b5a3221b22d63006041245602e1545be)\n\u2502 \u2514\u2500\u252c electron-download@1.4.1 (git://github.com/brave/electron-download.git#fdbd5be0614c84456b45ec59e79da58e69d9d2c2)\n\u251c\u2500\u252c electron-rebuild@1.1.2\n\u251c\u2500\u2500 electron-squirrel-startup@0.1.4\n\u2502 \u251c\u2500\u252c electron-chromedriver@0.36.0\n\nshould be 0.36.5?\n. restarted brave and now adding line notes seems to work\n. can confirm that all of the above are fixed now\n. actually it seems to be fixed in this tab but not in a second tab i just opened. also in the second tab, tagging users (via @) is broken. using Electron: 0.36.7\n. The error that happens in tabs where github AJAX-y actions are broken is\nUncaught TypeError: Cannot read property 'isMinimized' of null\nin Brave.app/Contents/Resources/atom.asar/renderer/lib/override.js:218\n. > Could you expand more on the types of problems you think would come up from this happening with Backspace?\nI guess it's pretty unlikely that someone would override Backspace, but I'm wondering whether users have shortcuts mapped to Shift+Backspace that we would be overriding. see https://github.com/brave/browser-laptop/issues/351#issuecomment-175747361\n. I'm about to fix #378 which will conflict with this, so merging for now. can revert later if there are complaints.\n. @mikeal i honestly think we should just remove this shortcut; iirc chrome is doing so due to very low usage stats\n. sounds good. if people complain about it, we can add support for the official Google-maintained chrome extension. https://chrome.google.com/webstore/detail/go-back-with-backspace/eekailopagacbcdloonjhbiecobagjci\n. removed\n. A fix for this is coming today\n. Related: https://github.com/brave/browser-laptop/issues/259\nActually drag-and-drop works as expected if the link is dragged into the urlbar input field. But if the page has a title, the urlbar is in title mode, so the input isn't visible.\nThe same problem happens if the link is dragged to the tab bar area.\n. As will be mentioned in the 0.7.11 release notes, this turned out to be a serious security issue. If the user drags and drops a malicious link outside of the tab content area, Electron will load the site outside the webview sandbox, where it can compromise the user's system.\nPoC: https://zyan.scripts.mit.edu/node_test/opener.html. if you're using a vulnerable version, dragging and dropping the link on that page will create a file named surprise.txt in your home folder. if it's fixed, you will see the link open in a new tab with console errors.\nThanks for reporting, I am glad we got this fixed soon.\n. ++\n. related:  #45 \n. Depends on https://github.com/atom/electron/pull/4223\n. reminding myself that this and #260 should be fixable once electron 0.36.8 is out\n. fixed in 35efd0ecdcaf98deee1d29c1a319fbbfe04a0c59\n. Duplicate of #231 \n. Same thing happens on github when i try to select an image to upload in a comment\n. I'm on the latest release. It's weird because Soundcloud was working for me at some point.\n. I just closed the tab and loaded it again, now it works. hmm\n. Agree; before changing to the lighter UI, it looked like:\n\nwould be in favor of going back to that design\n. lgtm\n. i'm pretty sure other browsers visually support CSS visited differentiation; they just lie about it in getComputedStyle to prevent fingerprinting.. I tested and this seems fixed now. +1 from myself. As of Chrome 41, the gnubby u2f extension is no longer needed to support u2f, so I think porting the extension is a red herring. Looks like Chrome has native code for doing U2F in src/device/u2f, i wonder if we can just use that.. actually i think Chrome 41+ implemented this via the cryptotoken resource, which is like an extension but in Chrome by default. https://cs.chromium.org/chromium/src/chrome/browser/resources/cryptotoken/. hi everybody, the U2F/HID support pull request was recently merged into Muon: https://github.com/brave/muon/pull/268\neV is busy with BAT grant work right now, but this is mostly done now. @rucuriousyet and others, thanks for offering to help! there are some follow-up issues in https://github.com/brave/muon/pull/268.\nFor testing U2F support, I think it may already work on Brave master (not sure). If not, you can build Muon on a branch that includes https://github.com/brave/muon/pull/268 and start Brave with that custom Muon build. instructions in https://github.com/brave/browser-laptop-bootstrap. Closing in favor of #1253\n. prompt not implemented is duplicate of #94 \n. updating title now that privileged pages don't use nodeintegration\n. i see; not all of these are supported as meta tags but i'll open a pull req for the ones that are\n. the ones that aren't supported via meta tags are:\n- frame-ancestors\n- sandbox\nbut those might already be covered for file:// URLs by Electron\n. Looks like http(s) page can't iframe file: or about: (but about: page can iframe file:). i am not sure sandbox adds much value when all the other CSP directives are set, so i will just add the meta element for now.\n. also, plugin-types 'none' isn't a valid directive AFAICT; we can just omit plugin-types.\n. Fixed on master; follow-up in https://github.com/brave/browser-laptop/issues/584\n. re: 1, adverts.css should not be blocked on Arco because it's 1st party. this might be a regression; i'll look into it.\nre: 2, looks like the same thing is going on. the banner ad is first-party and should not be blocked.\nthanks\n. yep, was just about to report this\n. I'm not seeing this bug. is this on the latest release?\n. for me it actually does upload the image, but it also opens it in a new tab\n. appears to be fixed now?\n. I can't repro #572 on 0.7.12\n. Yeah, that was noted in  #572. I'm going to close this as a duplicate.\n. Pretty sure this is not purely a CSP issue, since I reported this bug while dogfooding a release that didn't have CSP. But if @psimyn's fix works, i'm happy to merge it for now.\n. merging this into #1413 \n. > Favicons after downloading via xhr we can base64 and use data urls. I think we should have that anyway for session restore and other props inside the frameProps.\nyep, would just have to send the XHR in a child browsing context (webview / iframe / maybe a worker?) so as to avoid connect-src *; c.f. https://www.w3.org/TR/CSP2/#which-policy-applies\n. Inline scripts are gone. Inline styles are tricky because the webpack style loader that we're using inserts them. \n. Closing in favor of https://github.com/brave/browser-laptop/issues/12263. pretty sure this is a bug in Electron's <webview>.reload()\n. duplicate of #386 \n. yeah this behavior has also surprised me before. \nwhen you close a private window, that session disappears forever. it\u2019s not unreasonable for people to expect the same of tabs\ni don\u2019t use private tabs except for one-off browsing but maybe other people expect to have their logins work across private tabs. i would be in favor of the default behavior being one-partition per private tab.. 1 is done. moving 2 to 0.8.1\n. @bridiver are you working on enabling back/forward state navigation to/from about: pages from/to regular pages? This is easily fixed if/when that is landed.\nIn the meantime, I could store the last non-error'ed page in window securityState and load it when Back to Safety is clicked.\n. in brave, i see console errors like:\nGET https://r18---sn-a5m7znek.googlevideo.com/videogoodput?id=o-AI1srCEKCTbUQYk\u202675E.46977B135D57CF3B850DB167D8D6683F7D7E5585&key=cms1&cpn=Zl94UGL-Ti4xkKor net::ERR_NAME_NOT_RESOLVEDlj @ base.js:284nj @ base.js:288f.Bc @ base.js:4120(anonymous function) @ base.js:1456(anonymous function) @ base.js:252\ncb=gapi.loaded_0:85 POST https://clients6.google.com/youtubei/v1/search/get_suggestions?alt=json&key=AIzaSyBkrqhJHeXPQPMF1qvaduxKBXxYjHdAvok 401 (OK)Tk @ cb=gapi.loaded_0:85g @ cb=gapi.loaded_0:85Uk @ cb=gapi.loaded_0:85(anonymous function) @ cb=gapi.loaded_0:86d @ cb=gapi.loaded_0:55b @ cb=gapi.loaded_0:46\ncb=gapi.loaded_0:85 POST https://clients6.google.com/youtubei/v1/search/get_suggestions?alt=json&key=AIzaSyBkrqhJHeXPQPMF1qvaduxKBXxYjHdAvok 401 (OK)Tk @ cb=gapi.loaded_0:85g @ cb=gapi.loaded_0:85Uk @ cb=gapi.loaded_0:85(anonymous function) @ cb=gapi.loaded_0:86d @ cb=gapi.loaded_0:55b @ cb=gapi.loaded_0:46\ncb=gapi.loaded_0:85 POST https://clients6.google.com/youtubei/v1/browse?alt=json&key=AIzaSyBkrqhJHeXPQPMF1qvaduxKBXxYjHdAvok 401 (OK)Tk @ cb=gapi.loaded_0:85g @ cb=gapi.loaded_0:85Uk @ cb=gapi.loaded_0:85(anonymous function) @ cb=gapi.loaded_0:86d @ cb=gapi.loaded_0:55b @ cb=gapi.loaded_0:46\ncb=gapi.loaded_0:85 POST https://clients6.google.com/youtubei/v1/search/get_suggestions?alt=json&key=AIzaSyBkrqhJHeXPQPMF1qvaduxKBXxYjHdAvok 401 (OK)Tk @ cb=gapi.loaded_0:85g @ cb=gapi.loaded_0:85Uk @ cb=gapi.loaded_0:85(anonymous function) @ cb=gapi.loaded_0:86d @ cb=gapi.loaded_0:55b @ cb=gapi.loaded_0:46\ncb=gapi.loaded_0:85 POST https://clients6.google.com/youtubei/v1/search/get_suggestions?alt=json&key=AIzaSyBkrqhJHeXPQPMF1qvaduxKBXxYjHdAvok 401 (OK)Tk @ cb=gapi.loaded_0:85g @ cb=gapi.loaded_0:85Uk @ cb=gapi.loaded_0:85(anonymous function) @ cb=gapi.loaded_0:86d @ cb=gapi.loaded_0:55b @ cb=gapi.loaded_0:46\n(index):7806Uncaught #<Object>(anonymous function) @ (index):7806\ncb=gapi.loaded_0:85 POST https://clients6.google.com/youtubei/v1/search/get_suggestions?alt=json&key=AIzaSyBkrqhJHeXPQPMF1qvaduxKBXxYjHdAvok 401 (OK)Tk @ cb=gapi.loaded_0:85g @ cb=gapi.loaded_0:85Uk @ cb=gapi.loaded_0:85(anonymous function) @ cb=gapi.loaded_0:86d @ cb=gapi.loaded_0:55b @ cb=gapi.loaded_0:46\n(index):7806Uncaught #<Object>\nGoing to Bravery > Allow 3rd Party Cookies fixed it. Maybe we should be treating Youtube as first-party to Google?\n. the location prop on the frame isn't getting updated during redirects. help fixing this would be appreciated.\ntest case:\n1. open a new tab\n2. load google.com, which redirects to https://www.google.com/foobar. URL bar is updated correctly to https://www.google.com/foobar.\n3. switch to another tab\n4. switch back to the original tab. the URL bar displays the original URL ('http://google.com') instead of the actual URL in the frame.\n. This seems to open the closed frame at the index before the active frame. Chrome opens it at the last index and focuses it, which feels more intuitive to me.\n. I don't think 'snap' is used anymore?\n. I changed this purely based on the name of the constant . . . let me know if that was a mistake.\n. Isn't this.props.focused in https://github.com/brave/browser-electron/pull/25/files#diff-bf31d40b9ccd66ab63bd8cf24b30eab0R91 and https://github.com/brave/browser-electron/blob/master/js/components/navigationBar.js#L71 always undefined if I do that?\n. I figured but filled out everything according to the spec that @bradleyrichter made. Do you have any pref whether this is displayed as disabled / hidden / enabled?\n. I meant that CmdOrCtrl+Plus turns into Shift+Cmd+= in the menu for some reason; seems like an electron bug. Chrome shows CmdOrCtrl+Plus as expected.\n. Nope, hence the comment TODO.\n. Surprisingly, UrlUtil.isURL(location) returns true if location contains whitespace.\n. I thought these buttons were supposed to go to the previous/next tab set, not the previous/next tab? cc @bradleyrichter \n. The next/prev tab keyboard shortcuts don't seem to change the tab index. Selecting a tab using Cmd+[number] does, however.\n. This property should be documented in docs/applicationState.md\n. Isn't this counting the number of times the site is bookmarked, not the number of times it's visited?\n. although it's clear that this is referring to audioPlaybackActive, I think we should generally put at least name and type in jsdoc tags. i.e., @param {boolean} audioPlaybackActive - true if ....\n. audioMuted and audioPlaybackActive should go in docs/applicationState.md.\n. Oops, this is wrong and causing test failures. Will fix!\n. s/forceCosePinned/forceClosePinned ?\n. I'm not sure that this is ideal. What if someone wants to pin 2 tabs with the same page open at different places on the page (ex: while reading a large PDF file)?\n. I noticed that unpinning a tab when multiple windows are open will reopen it in the current window rather than the window it was originally opened it. probably fine?\n. please add 'request-window-state' as a constant\n. I think this is loading all the tabs as soon as the windows are restored. It's probably better to load the tabs lazily when they are focused. (At least this is what Tor Browser / Firefox did) \n. I'd expect them to be roughly the same\n. Good catch, this was just here to prove that it is doing something for subresource loads\n. This test would be better if there was a way to select the pseudo-element that actually contains the lock icon character.\n. Do you mean on Windows? It seems to work on OS X.\n. Any particular reason this one is excluded?\n. nice catch\n. oops, missed that, sorry\n. This seems buggy. if i open a new tab (via cmd+t), it seems to always uses the highest partition number. Ex: after closing all my partition-2 tabs, I open a tab from my default partition tab and it is in partition 2.\nI expected new tabs to inherit the partition of the opener tab. \n. this fails for me\n```\n\nnpm run test -- --grep=\"partition\"\nbrave@0.7.7 test /Users/yan/repos/browser-electron\nNODE_ENV=test mocha --compilers js:babel-register --recursive $(find test -name '*Test.js') \"--grep=partition\"\n\ntabs\n    new tab\n      1) creates a partitioned new tab when signaled\n0 passing (10s)\n  1 failing\n1) tabs new tab creates a partitioned new tab when signaled:\n     Error: element (.tab[data-frame-key=\"4\"]) still not existing after 5000ms\n      at Object. (node_modules/webdriverio/lib/commands/waitForExist.js:50:19)\n      at Object.safeExecute (node_modules/webdriverio/lib/utils/safeExecute.js:19:24)\n      at Object.WebdriverIO.resolve (node_modules/webdriverio/lib/webdriverio.js:87:29)\n      at node_modules/webdriverio/lib/webdriverio.js:227:32\n      at _rejected (node_modules/webdriverio/node_modules/q/q.js:830:24)\n      at node_modules/webdriverio/node_modules/q/q.js:856:30\n      at Promise.when (node_modules/webdriverio/node_modules/q/q.js:1108:31)\n      at Promise.promise.promiseDispatch (node_modules/webdriverio/node_modules/q/q.js:774:41)\n      at node_modules/webdriverio/node_modules/q/q.js:590:44\n      at runSingle (node_modules/webdriverio/node_modules/q/q.js:123:13)\n      at flush (node_modules/webdriverio/node_modules/q/q.js:111:13)\n```\n. although it seems to pass when i run the entire test suite\n. I guess we're no longer using refs? lmk if i should update this to be consistent with https://github.com/brave/browser-laptop/pull/316/files\n. also the bravery menu was redone.\notherwise LGTM\n. Can these origin checks be for file:///full/path/to/index.html instead of just file://? Otherwise a malicious site could cause the user to download an HTML and open it as an iframe, from which it could set itself as the embedder by postmessage.\n. Should be this.embedder only be set if it's not set already? (is it ever expected to change?)\n. this should also go in the closure to hide it from the rest of the page?\n. I got rid of this because results.cbArgs seemed to always be undefined or {}\n. referer blocking, specifically\n. Any reason not to just change this to https instead of a protocol-relative URL? Otherwise a passive MITM sees information about a user's ad preferences that otherwise wouldn't be exposed.\n. HTTPS = a non-trusted third party sees your data\nHTTP = anyone on your local network, your ISP, the NSA, etc sees your data\nso there is still a security gain from HTTPS.\nsee arguments at https://istlsfastyet.com/ against cost/performance overhead of HTTPS.\n. :+1: \n. link to pull request would be nice (since it's in a different repo)\n. I couldn't figure out a way to get around it otherwise. The race condition worst-case is that the page is blank (which is what happens now when you hit a page with a cert error). In this case, the user will probably reload the page and then it will definitely show about:certerror on reload.\n. Any idea why location would still be the previous URL here? It seems like it should always be the same as src when a fresh about: page is loaded.\n. ?\nadding a comma throws a lint warning\n. I was definitely seeing a bug where the URL bar location was about:certerror, the page shown was about:certerror, but this.props.frame.get('location') was https://lenovo.com (the page that caused the cert error). Will try to give repro steps.\n. Can't seem to get it to happen again. Will change it back to location instead of src.\n. +1. kind of surprised that * doesn't include data:.\n. will keep an eye out; haven't seen any warnings yet\n. also:\n- fix 3rd party facebook login\n- get rid of sqlite dependency for HTTPS Everywhere\notherwise lgtm\n. nope, this is only for brave devs\n. probably :). it takes a minute or so to finish running, but i don't have to run this often so it's no big deal\n. on second thought, maybe this data structure should be:\npasswords: {\n  encryptedData: string, // encrypted serialization of [{origin: ..., action: ..., username:..., password: ...}]\n  authTag: string,\n  iv: string\n}\nso that the complete list of login details is encrypted, not just the individual passwords. This would get decrypted the first time a login detail is needed and re-encrypted every time the state is saved persistently.\n. Yep, but this should be good to go by end of day. I'll open separate pull req for the other follow ups.\n. Still undecided whether I want to make this change. The benefits of having it the way it is now are:\n1. There are some operations that can be done without getting the master password, like seeing which passwords have been saved and deleting them once we have a password manager settings page.\n2. No need to figure out encryptedData serialization format (needs to be reproducible and deterministic across all clients, otherwise decryption/verification will fail).\nI think (1) is reason enough to keep it as is for now.\n. looks like this file isn't used?\n. Do you know if there are license restrictions on this logo?\n. thank you!\n. If the user wants to use a different password manager or none at all, they can turn it off in about:preferences. If they have the password manager turned on, they probably want to save passwords most of the time. So the default should be 'yes'. I don't see a reason to accept this change.\nBTW, it's usually safer to use a password manager which saves passwords locally encrypted to disk (which we do) than none at all.\n. Thanks, I cherry-picked this commit onto master.\n. If someone has your computer for 1 minute, they can install a rootkit on it. They can steal any cookies from sites where you are logged in. They can also open Chrome and get your Chrome passwords from the Chrome built-in password manager.\nRemoving default focus from a button when the user has chosen \"Save passwords\" in preferences is just inconvenient. However, I think the issue you are addressing (user accidentally saving a password) will be fixed when the password prompt UI becomes a notification bar instead of a dialog anyway.\n. will do\n. Sort of. \"Always for this site\" would mean that any password you enter on foo.com is always saved/updated automatically. I don't think this is a useful option because if someone enters a wrong password, this will permanently delete their previously-saved password. \n. yep it can be undefined. will update\n. The URL is included in the full message, it just needs to be parsed out at some point\n. I think I see the issue. foo.com embeds frame from bar.com. User whitelists foo.com once, and the page is reloaded. Whichever frame loads first (probably the main frame) gets allowed through in the code block below, and then foo.com gets removed from temporarilyAllowed, so the second frame load is blocked. Will fix. \n. ++\n. it's a console string from blink (not us) and most users will never see it; not sure if localization is needed\n. nice catch. I just realized url.parse has a slashes property, which means it can reconstruct the origin unambiguously. will fix.\n. note to self: need to clean noscript data from frames when the session ends\n. i think this should also include sftp: and probably blob:. \nwould be nice if we could get a list of all the protocols that Electron handles by default and pull this out into a constants file for reuse later\n. Isn't the mailto: problem applicable to every protocol which Brave doesn't handle? skype:, magnet:, etc.\n. agree that blacklisting is better; mailto: and javascript: are probably the only ones that come up frequently enough to be an issue.\n. good point - let's change this to a blacklist with only mailto: for now\n. this throws cannot read property 'send' of null on startup when the restored page has an invalid cert - need to check that hostWebContents exists\n. if this.state.url is not defined, it throws an error later when we try to parse it. should be initialize to about:blank or something in the constructor.\n. the error text color is a bit hard to read\n. previousLocation should default to about:blank; otherwise the page just stays on about:certerror if there is no previous location and the button is clicked\n. tabId should be added to docs/state.md\n. aboutDetails should also be added to docs/state.md\n. i opened a new tab, navigated to https://lenovo.com, and clicked the back to safety button. it didn't do anything, so i think previousLocation does not exist in that case. the back to safety button should always be there, UX-wise.\n. i think docs/state.md is supposed to be all app state, regardless of whether it's persistent\n. this should be documented as a frame-level prop, not an app-level prop\n. If i make my window as small as possible, the bravery panel is partially hidden because there's no vertical scrollbar\n. I think we should leave this in for now, at least in the app menu. Otherwise users have no way to change their global Bravery settings. Ex: a user who has noscript on will have no way to turn it off for every site except to go to the site and manually turn off each one.\n. i think this needs to have some sort of parameter indicating whether this is being called for a private partition (see registerPermissionHandler for example) so that it can check temporarySiteSettings in addition to siteSettings if necessary.\nthe general principles i was using:\n- siteSettings apply to all tabs, including private\n- temporarySiteSettings apply to only private tabs\n- siteSettings is persistent\n- temporarySiteSettings is cleared on browser close\n. safer to check that typeof settings.get(resourceName) is boolean\n. especially since there is actually no way to get to a site that is blocked by safebrowsing using per-site Bravery settings (since the blocked page redirects immediately to about:safebrowsing).\n. i think isSecure and isExtendedValidation are unnecessary here\n. also not needed\n. this should check parsedUrl.slashes to determine whether the double slashes are necessary. actually it could just use  siteUtil.getOrigin\n. I would move the safebrowsing switch last, since it's the one that is least useful\n. better to check that typeof this setting is boolean\n. highly unlikely, but this would return true for custom schemes that happen to start with http\n. thanks, fixing\n. https://github.com/brave/browser-laptop/commit/048ab2447e373c98179988dfea810c5f73503562\n. I'm not sure people will know what 'Title Mode' is. Maybe change the text to 'Always show URL bar'?\n. fine to just change the l10n string\n. also data: and probably blob:?\n. pretty sure they are needed at least for data: URLs because those can be HTML documents\n. mainly because HTTPS Everywhere should apply to favicon loads, I think.\n. why was it necessary to re-add main-1?\n. ok, thanks for the explanation!\n. decided in slack this is probably not needed\n. > Private tabs should use the in-memory '' partition and the browser process should load favicons through the partition that matches the one used by the tab.\nThe same logic would apply to search autocomplete queries. They aren't strictly associated with a tab, but I guess they should go through the partition of the active tab when the query is entered.\nNetwork requests that aren't associated with any particular tab should go through a non-persistent session just to be safe, IMO\n. i think they are cacheable in theory, but they are small and relatively infrequent so i doubt it's much of a performance issue if not\n. it also breaks noscript UI in the bravery panel (hard coded to count for console errors involving script-src none). removing for now\n. isn't appSettings.get('shieldsUp') always going to be undefined?\n. If you change this setting globally in about:preferences, it doesn't take effect until browser restart.\n. the site setting works immediately though\n. ++, posted last comment before seeing your comments\n. follow-up bug: disabling shield does not override the global fingerprinting setting.\n\n. PDF.js is consistently slower than just downloading the file and opening it in Preview, so some people probably won't like it even though it's built in.\n. can be taken out?\n. NVM, just saw your comment\n. I just verified that although sending the entire cert object via IPC causes a renderer crash, sending only the issuerName works fine. So maybe to avoid the crash, just display the issuerName in the UI and provide a link for the cert data to be saved directly as a file. \n. That seems good for now\n. is defaultSession persistent?\n. i guess that's fine for now. in the future, if request is handling GET requests that contains info about private browsing (ex: for the ledger), it would be better to not write to disk\n. i think this call to replaceAdobeLink should happen immediately unless that is also causing perf issues\n. same as above, insertFlashPlaceholders should be called immediately on document end\n. true; the flash placeholder one will be noticeable though\n. how about do a document.querySelectorAll('object') at load end and only run insertFlashPlaceholders immediately if it returns nonempty? this might get rid of the delay on most sites while keeping perf good for sites that don't load flash\n. where did you get this ID from?\n. fwiw this ID is hard-coded in pdfjs's telemetry.js module, but luckily we don't use that at all\n. with this change, pdfjs doesn't load for me at all (same thing that was happening for you before this change). i.e., chrome-extension://ckglimbbooghmggmkikhbolcfmgniemo/https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf is blank but chrome-extension://adnmjfhcejodgpaljdmlmjoclihpcfka/https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf loads fine. maybe this origin is unique per install? \n. in chrome, the PDF viewer origin is chrome-extension://oemmndcbldboiebfnladdacbdfmadadm which makes more sense \n. appears that chrome.extension.getURL is returning a random(?) value in https://github.com/brave/browser-laptop/blob/06a2aa180a54bc4dabafd201203dd75b8748c9f8/app/extensions/pdfjs/extension-router.js#L21 instead of chrome-extension://<extension_id>. this does not seem to be an issue in chrome. @bridiver ideas?\n. this breaks autofill, i think because the username context menu is gone by the time the click event is fired.\n. STR:\ngo to github.com in a new private tab\nstart entering previously-saved username\nclick on the context menu that pops up\nfor me, the entry is not filled at that point. may be a race condition.\n. sorry, by 'autofill' i meant click-on-context-menu-to-fill\n. There's an extra space after 'now'\n. I think you can change the xVelocity threshold to 1 or 0.5 to make it easier to go back/forward now\n. @bbondy was there a reason you added the restart requirement for PDFJS in e962ef99cb6ad70ec743f8911abb7be304a4b1bc? it seems to work fine when i turn it on/off and don't restart\n. I think this is sometimes being called before the pref is actually saved. if i have flash enabled and disable in prefs then click 'yes' to restart, it is still enabled when Brave relaunches.\n. seems better to check by origin (scheme + hostname + port) instead of just hostname. see getOrigin in js/state/siteUtil.js.\n. i think the way it was before is fine\n. this used to call registeredSessions[partition] = ses once for every function in fns. pretty sure that was not needed?\n. nice catch! may be simpler to change this to ipcMain.on and then call ipcMain.removeListener  when message === locale.translation('unexpectedErrorWindowReload')\n. doesn't this need to be added to the CSP at browser-laptop/app/extensions/brave/index{-dev}.html?\n. should be added to docs/state.md\n. I think the menu needs to be rebuilt when the first tagless site is added; otherwise this shows up as disabled even though i have visited some sites.\nSTR:\nclear history\nvisit a site\nopen History menu, the 'clear history' item is disabled\n. seems like this option should also clear cache\n. this was throwing an error that prevented data from being cleared when there were no downloads; fixed in 034e47619bbdefb94b020b6e2bc994304fadc11a\n. the browser history is still available in the history property on the frame. after i clear browser history, my session-store-1-dev file has entries like:\n\"frames\":[{\"canGoBack\":false,\"canGoForward\":false,\"computedThemeColor\":\"rgb(51, 51, 51)\",\"endLoadTime\":1470784542553,\"findDetail\":{\"caseSensitivity\":false,\"searchString\":\"\"},\"fingerprintingProtection\":{},\"history\":[\"http://samy.pl/evercookie/\",\"https://www.google.com/#q=abcdyahoo\",\"https://www.google.com/#q=abcdyahoo\",\"https://www.bing.com/\"], ...\n. the history is also in closedFrames; should probably just delete all of those when history is cleared\n. @mrose17 can we remove this console.log? URLs from private browsing should not be logged\n. minor but this should be in alphabetical order\n. also should take out this log\n. already in package.json\n. To avoid re-getting the appState multiple times, you can pull appStore.getState().get('siteSettings') out of the forEach loop\n. does this expect amount to be in whatever the specified currency is, or is it just USD?\n. i just changed it so now this code is correct as long as amount corresponds to the currency in ledger-state\n. @mrose17 i think @bbondy meant bundle the image in app/extensions/brave/imgso it's still loaded locally but not a long constants string. could you take care of that?\n. app/ledger.js can overwrite the file when it needs to update the image\n. these lines in app/index.js should be removed, right?\nipcMain.on(messages.LEDGER_ENABLE, (e, enabled) => {\n      ledger.enable(enabled)\n    })\notherwise ledger.enable is called twice every time the setting changes\n. is there any reason to keep enable as a module entry point? when would it get called independently of initialize?\n. i don't think active is necessary, unless you need to ensure that client hasn't changed during the setTimeout period. otherwise you can just check if (client && client.sync) ...\n. makes sense. does this still need to check that client is not null in the timeout?\n. this now throws:\nledger-client error: Error: ENOENT: no such file or directory, open '/Users/yan/repos/browser-laptop/Brave-darwin-x64/Brave.app/Contents/Resources/app.asar.unpacked/node_modules/node-anonize2-relic-emscripten/anonize2.js.mem'\nError: ENOENT: no such file or directory, open '/Users/yan/repos/browser-laptop/Brave-darwin-x64/Brave.app/Contents/Resources/app.asar.unpacked/node_modules/node-anonize2-relic-emscripten/anonize2.js.mem'\n    at Error (native)\n    at Object.fs.openSync (fs.js:640:18)\n    at Object.module.(anonymous function) [as openSync] (ELECTRON_ASAR.js:167:20)\n    at Object.fs.readFileSync (fs.js:508:33)\n    at Object.fs.readFileSync (ELECTRON_ASAR.js:500:29)\n    at Object.read (/Users/yan/repos/browser-laptop/Brave-darwin-x64/Brave.app/Contents/Resources/app.asar/node_modules/node-anonize2-relic-emscripten/anonize2.js:18:1355)\n    at Object.readBinary (/Users/yan/repos/browser-laptop/Brave-darwin-x64/Brave.app/Contents/Resources/app.asar/node_modules/node-anonize2-relic-emscripten/anonize2.js:18:1623)\n    at Object.<anonymous> (/Users/yan/repos/browser-laptop/Brave-darwin-x64/Brave.app/Contents/Resources/app.asar/node_modules/node-anonize2-relic-emscripten/anonize2.js:33:3553)\n    at Module._compile (module.js:541:32)\n    at Object.Module._extensions..js (module.js:550:10)\n. this timeout should be cleared when ledger is disabled\n. Brave-darwin-x64/Brave.app/Contents/Resources/app.asar.unpacked/node_modules/node-anonize2-relic-emscripten/ exists but is empty\n. error above appears to be fixed by changing this line to\ncmds.push('ncp ' + path.join('node_modules', 'node-anonize2-relic-emscripten', 'anonize2.js.mem') + ' ' + path.join(buildDir, 'Brave.app', 'Contents', 'Resources', 'app.asar.unpacked', 'node_modules', 'node-anonize2-relic-emscripten', 'anonize2.js.mem'))\n. would ruleSets[id] ever have length > 1?\n. please add httpse.leveldb to .gitignore\n. lgtm! eventually the block below should be merged into https://github.com/brave/browser-laptop/blob/3de38bfeec25758f98c556f73c5839a95171c2de/preload-httpse.js#L33-L42 so that the perf benefits apply to the JSON version of the db as well\n. i thought rulesets.rulesetStrings was just a map of ID to a string\n. isn't paymentURL useful even if Brave isn't the bitcoin handler? ex: your bitcoin handler is another desktop app and you want to copy-and-paste it into there.\n. if it's not useful then why show the QR code?\n. is leveldown needed here? i thought level installed both levelup and leveldown\n. > The level package is available as an alternative installation mechanism. Install it instead to automatically get both LevelUP & LevelDOWN.\n. if this random delay happens to be small enough, is it still possible for run to be invoked before wallet initialization? i'm not understanding how this change fixes the problem stated in the PR\n. need @mrose17 to review this part\n. you can simplify this using btcPrice\n. please add this to l10n\n. this button should not show up if there is empty payment history (ex: before wallet has been created)\n. this should show nothing if reconcileStamp is undefined\n. please add the text to l10n\n. may be hard to internationalize the names of the months; i would rather just return date.toLocaleDateString() here for now\n. i don't think this line is necessary. the payment history overlay is unrelated to the add funds overlay.\n. this should not overflow when the window is narrow:\n\n. @mrose17 what do you mean? btcPrice was needed to convert balance/unconfirmed from BTC to local currency amount. if this has changed, please document modified ledger info properties in docs/state.md.\n. @bradleyrichter seems like we should be more clear here. anonymize can mean a lot of things. all that we use PIA for is hiding real IP addresses. they do not anonymize payments, etc.\n. is All transaction IP addresses are anonymized with technology from: too long?\n. this needs to be replaced with the actual FAQ link, cc @bradleyrichter \n. please use a js builtin type, not timestamp. see http://usejsdoc.org/tags-type.html\n. thanks for documenting these\n. @willy-b before the wallet is created, we have no idea what the user's currency is, so it defaults to BTC. it could just say 'empty' or something.\n. is this number BTC / currency1 or ...?\n. ok i'll add that in a comment for clarity\n. @willy-b not sure if this is obvious to you, but the BTC price should now be available as a property of transactions according to @mrose17. specifically ledgerInfo.transactions[i].contribution.rates is the BTC price in the local currency at the time of the transaction (i think).\n. i guess this is obsolete now.\n. I think this is available directly now, via this.transaction.get('contribution').get('fiat').get('amount'). see docs/state.md\n. nvm comment above, @willy-b you can leave btcToCurrencyString unchanged\n. what's the difference between this satoshis and the satoshis in contribution above?\n. @mrose17 is this correct, or should it be this.transaction.get('contribution').get('satoshis') now?\n. will defer to @mrose17 on that\n. @mrose17 says this was here because:\n\nuntil client is defined, there isn\u2019t any ledgerInfo so, yes, all the fields will be undefined.\n\nhowever, as of https://github.com/brave/browser-laptop/pull/3432/files#diff-9b959b675446ba95e1abe0b81e0f7a9bR133, ledgerInfo does in fact have the creating property before client is created. \ntherefore i think this line above should be removed. if any calls to updateLedgerInfo require existence of client, they should do that check before calling updateLedgerInfo.\n. why not just return date.toLocaleDateString() here?\n. gotcha, i missed the fact that this is for a filename. sorry\n. contribution and other child properties may not necessarily exist, so this would throw cannot read property 'get' of undefined errors. please use this.transaction.getIn(['contribution', ...]). \n. same as above; if undefined, return an empty string for now.\n. same as above\n. this is minor, but we prefer to use JS template strings here. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\n. return null here. https://facebook.github.io/react/docs/component-specs.html#render\n. this now looks awkwardly aligned with the select box but that can be saved for a follow-up issue.\n\n. this should check that fiatAmount is a Number. otherwise return an empty string?\n. this needs overflow-y: scroll; or else this happens:\n\n. something in this ModalOverlay change is breaking the Buy with Coinbase modal overlay:\n\n. why ...?\n. just curious why unconfirmed needs to be in ledgerInfo._internal if it already exists in ledgerInfo\n. why is it set to 8s here?\n. wasn't this already reviewed in https://github.com/brave/browser-laptop/pull/3545 by @BrendanEich ?\n. tryAutofillForm no longer needs credentials as an argument\n. if there are mutiple forms on a page with the same action, all of them should be autofilled. i believe this change causes only the first to be autofilled.\n. i just made a test case for this so i can fix\n. s/Unsecure/Insecure\n. second sentence is unnecessary\n. string\n. will the title text and button text be localized? if not, better to just return some sort of key for the exchange, not the text itself so that the front-end can localize it.\n. should this return if there's an error? or is this just a warning?\n. please remove all providers in https://github.com/brave/ledger-geoip/blob/master/index.js that do not offer HTTPS\n. looks like https://ledger.brave.com/v1/exchange/providers is not localized, so take out 'buttonText' and 'titleText' and just add a property for the name of the exchange.\n. make sure ledgerInfo._internal.exchanges is not null/undefined\n. just send the name of the exchange, the front-end takes care of localization\n. should this have this.isPrivate as the last argument?\n. why does location need to be in the securityState? SiteInfo can just do frameProps.get('location')\n. temporary site settings should only be added here if they are being sent to webcontents in a private session. cc @bridiver. \n. more generally, there needs to be some way to scope siteSettings/contentSettings by session since in general these settings should not be shared across sessions.\n. as mentioned in review, please replace button and titletext with just exchangeName\n. this test is timing out: https://travis-ci.org/brave/browser-laptop/builds/158405114#L3620\n. but i think this has the correct behavior right now since the runInsecureContent setting is reset at the end of page load, which means it's not a blocker for merging\n. does this need a call to updateLedgerInfo?\n. Bitcoin not bitcoin\n. same as above\n. this is no longer the payment URL, so it should be merged into bitcoinAddress above\n. this should return null if ledgerData.get('reconcileStamp') is not a number (may be undefined/null)\n. we generally prefer const over let for declaring variables that aren't going to be reassigned\n. oops i missed that, sorry\n. actually i think this should show up even if the balance is 0. there is sometimes a long delay between when the wallet is funded and when it actually shows up as balance. \n. the code above can also use this.location instead of this.isBlockedRunInsecureContent\n. but that is more of a refactor issue so this looks good to merge now. :)\n. can just do underscore.each(publishers, ...)\n. both key and value are accessible http://underscorejs.org/#each\n. i don't think the QR code overlay should show the coinbase logo since it doesn't depend on coinbase at all\n. this looks somewhat off-center\n\n. for future reference, you can just do thing.getIn(['options', 'style']) to avoid it throwing an error if thing.get('options') is falsy\n. should be labeled exchangeInfo.get('exchangeName') if it's defined\n. should probably fall back to coinbase panel if exchangeUrl is not defined\n. i'm not sure, i just think it should show something reasonable if exchangeUrl is empty due to a network connection problem or something\n. @jkup oops, missed the context of your question. looks fine.\n. this causes the Add funds panel to throw an error and not appear at all if exchangeInfo is undefined. better to use this.props.ledgerData.getIn(['exchangeInfo', propertyname])\n. can use url, name defined above\n. label should be something like Go to [exchangeName] since the other buttons all start with verbs\n. github somehow lost my comment but i think this should say Go to ${name} instead of just the name\n. this should be the mainFrameUrl origin\n. this should be origin instead of getOrigin(url) since the message shown to the user was for origin\n. actually it looks like this change makes the permissions work by top-level origin instead of the origin asking for the permission; i'll fix to make it consistent with the way it was before.\n. should this log be suppressed unless there's a debug/verbose flag?\n. for follow-up changes in a PR, you can just commit, rebase -i, then force-push, so there is no extra rebase step necessary when review is done\n. need to strip the trailing / from origin for backwards compatibility; i think this is why tests are breaking\n. hence why getOrigin was necessary before\n. for future reference, you can just write {obj, options, cb}\n. i took this out because no other components use defaultProps\n. @mrose17 if action.value === false then the user has right-clicked to delete a ledger synopsis entry\n. @mrose17 this event indicates that a deleted ledger synopsis entry has been un-deleted so it should be included again\n. @mrose17 this test seems to not pass because the ledger is still requiring us to be on the page for 8 seconds even though process.env.NODE_ENV === 'test'. i.e., if you add a .debug() here and wait for at least 8 seconds, then the page shows up on about:preferences as expected.\n. seems ok\n. clearInterval never gets called on this, so i think a new timer is added every time the user clicks the on/off switch. this may lead to notifications being shown more often than intended or something\n. maybe add a global var to keep track of whether setInterval has already been called and do nothing here if it has\n. please revert this change. tests can't use the userData directory. https://travis-ci.org/brave/browser-laptop/builds/161965938\n. this is probably ok as of 3c1e03c93c279319b3a75d5d1f91cca56a09b733 now that i look at it, but there is some weirdness going on with tests right now\n. i take that back, i think this is fine. test failure was intermittent.\n. i would replace all of the below with win.webContents.downloadURL(url), where url is txCsvText as a Blob object URL or perhaps a data URL. then the CSV file will be automatically written to the default downloads folder, and the user can click on the downloads bar to open it.\n. unfortunately there seems to be no way to specify the filename so it defaults to download.csv. but i'm fine with merging this as-is and fixing the filename in a later issue. thanks!\n. please also remove messages.OPEN_LEDGER_TRANSACTION_CSV and aboutActions.receiptLinkClick\n. otherwise lgtm once @mrose17 releases https://github.com/brave/ledger-client/pull/17\n. it would be good to add unit tests for this. (see test/unit/lib)\n. for future reference, you can just use es6 object property-value shorthand here. https://ariya.io/2013/02/es6-and-object-literal-property-value-shorthand. i.e.,\n{\n  transactionsToCSVDataURL,\n  getTransactionCSVText,\n ...\n}\n. please remove this logging\n. shouldn't temporarySiteSettings get added only if the content settings are being sent to a private frame?\n. nvm @bridiver made the same comment above\n. need to be careful here that the allSiteSettings frame property is consistent with what is being sent in js/state/contentSettings.js and also registerPermissionHandler in app/filtering.js. the expected behavior is that private context inheirit settings from regular contexts but not vice-versa, so I think what you want here is a merge of temporarySiteSettings and siteSettings for private frames.\n. s/merge/mergeDeep\n. please put the state in AboutPreferences and pass it to PaymentTab as props.\n. this should be localized\n. i think this should be writeFileSync\n. it would be useful to give this a more descriptive name, like synopsisOptions, because this property gets merged into ledgerData in js/components/frame.js\n. use getIn here and in the line above to avoid chaining gets\n. yes. @bbondy can explain why\n. @bridiver sorry, i meant either writeFileSync or put the rest of the block in the callback\n. is this going to create a wallet even for people who haven't turned on the ledger?\n. plz document in docs/state.md. also isn't this going to throw an error for users who have never enabled the ledger?\n. i think you just need to make sure this one particular line doesn't cause Cannot convert undefined or null to object errors, so a try-catch would be fine\n. deferring to @mrose17 on whether this line should be here\n. nit: can we get rid of the like your local safe deposit box, or under your mattress. It's really up to you! part? if i were a hacker i would start looking under people's mattresses after this launched. :p \n. fwiw it is probably better in most cases to store this digitally in a password manager or such instead of printing a physical copy; but i'm okay with just leaving out storage suggestions for now.\n. why are we linking to the coinbase app for countries where coinbase is not supported?\n. should return null otherwise\n. this line can be changed to just\njs\nconst message = locale.translation('ledgerBackupText', {paymentId, passphrase})\n. shouldn't this also include most other modifier keys?\n. please change this test to test that focus doesn't bring up any suggestions, thanks\n. just to be paranoid-safe, check that e.target.value exists before calling e.target.value.length\n. this is minor, but the s/onChange/onKeyUp change should be kept because it helps readability\n. i think you want to type some letters before focusing, otherwise it wouldn't show suggestions anyway\n. just to be sure this actually brings up suggestions, please add\n.waitUntil(function () {\n            return this.isExisting(urlBarSuggestions).then((exists) => exists === true)\nhere\n. @dcposch only to the braveExtension, iirc. for security reasons, i would prefer that WebTorrent be its own \"extension\" similar to how we handle PDF reader (PDF.JS)\n. looks like queryString is not used?\n. shouldn't this check that the return value starts with 'magnet:?'\n. that sounds right, assuming you won't define page-anchor URLs like chrome-extension://.../webtorrent.html#about or something.\n. [note] if isSecure is null, we should show neither secure nor insecure\n. this was no longer needed because security state is set to null when the load starts\n. I don't think this relaying is necessary; the webview can just call ipc.send instead of ipc.sendToHost to send a message to the browser process. See messages.CERT_ERROR_ACCEPTED for instance.\n. this  may not be necessary either; i think the browser process can just do event.sender.send after it gets a message from the webview in app/browser/webtorrent.js\n. should be !== ?\n. why is allow-same-origin needed?\n. needs localization\n. needs localization\n. is the img-src directive  needed?\n. is this directive needed?\n. yup\n. makes sense, thanks\n. not part of this PR but i had to do curl https://s3-us-west-2.amazonaws.com/brave-apt/keys.asc 2> /dev/null | sudo apt-key add - to prevent curl from spamming the output. @leighmcculloch noted, but it looks confusing because it interferes with the sudo password prompt. i think you need to keep '*' and 'data:', otherwise favicons won't load in about:preferences ledger panel. dunno, it's been that way in browser-laptop as far as i can remember. @ayumi i felt that deleting-all-preferences-of-a-given-type is easier to do in the sync client than here but could go either way . noted. oops, good catch!. wfm. i guess it should actually be Object.assign({}, siteSettingDefaults, {hostPattern}). i figured out why this was crashing. the hostname that gets checked here when i go to http://xn--jp%29-5y3b.f1-live.com/f1/jp/headlines/news/detail/060912193351.shtml is xn--jp, which is valid ASCII but invalid punycode. so punycode.js throws a (different) error, and the crash happens. I verified that wrapping punycode.toUnicode in a try-catch fixes it for me.. not sure this change is correct. ex:\n1. a site setting is synced and assigned an object id\n2. user disables sync\n3. user changes the site setting\n4. user re-enables sync\n(3) should get synced here\nthe same logic also kind of applies to bookmarks, but the changes to those are less important (usually just a last-accessed timestamp update). [minor] this should only log if appConfig.debug.sync is true. would be sweet to have a unit test for this. it would be slightly easier for this to be SYNC_ACTIONS_WITHOUT_ITEMS since most actions in the future will probably have items. i think these constants should go inside validateAction since they are only used in there. does this fail when record.action is DELETE? . i think this needs to call applySetting anyway (instead of continue) when the action is DELETE. null may be a valid siteSetting. minor: unnecessary comment. ++. i guess this is not correct, but it was auto-generated by the post-commit hook based on the jsdoc in js/actions/appActions. . not sure i understand this comment / why this parameter is necessary. module.exports.newObjectId returns the objectID immediately.. you can get the value of the objectId immediately in the caller via record.objectId though (where record is the object returned by createSiteData)?. [minor] partitionNumber is only useful on laptop since AFAIK the other clients don't have partitions. ^ NVM. unneeded logging ?. looks like this jsdoc is no longer correct?. [minor] setResponse calls makeImmutable on the args, so it's not necessary here. [minor] could return this.buttons.map(...) instead of iterating through this.buttons. emitChanges in js/stores/appStore. does this need to be added to docs/state.md? does it need to be cleaned  from tabs on shutdown?. [minor] the enter key should be bound to OK. i think you can do maxIndex - index to get the index reversed. the priv key for this is in 1password but i dont think anyone will ever need it. oops, this is obsolete. removing. you can disable it functionally, but you can't disable the extension entirely; the latter isn't necessary afaict.. kk. i think you can waitUntil val.value.settings['sync.lastFetchTimestamp'] > 0 in the line above. what is this waiting for?. it would be helpful for these comments to mention what part of sync they are waiting for. i think you can do Brave.app.client.changeSetting to set SYNC_ENABLED to true instead of opening the prefs page and hitting the switch. fwiw this test would be nicer if there were a way in webdriver to inspect the page console output. if the connection is blocked in app/filtering.js, it will show a CONNECTION_BLOCKED message. it shows a different error message when the connection is attempted but fails.. not sure i understand. the webpack ws URL is not in adblock, so it shouldn't get blocked?. @bridiver no because \"ws://ag.innovid.com/dv/sync?tid=2\" doesn't support websockets. it fails either way: either because it's blocked by adblock (the fast case) or because the server response is incorrect (the slow case). does it work to replace this with waitUntil sync.lastFetchTimestamp is > 0?. @ayumi put some effort into this but it seemed like not easily. in general i agree on removing explicit pauses; if i understand correctly, it is tricky here because this is waiting on the server to receive the records and process them, which is not something that can be detected client-side (ex: using a waitUntil for some appState change). since the server can't push notifications to the client, we would have to have the client poll the server periodically to detect when a sync operation has finished. . not sure what you mean by a 'tie'. if the same history entry (same location) has two sync records with the same timestamp, the one which is received later by the sync server wins.. i believe the record which is received later always wins. https://github.com/brave/sync/blob/staging/client/recordUtil.js#L103. ?. yah i figured it is useful to testers now that sync is merged. i think if you replaced braveExtensionId in title with 'Brave', that would resolve https://github.com/brave/browser-laptop/issues/7280. @ayumi yes, the previous code was incorrect because initialized gets changed later. actually this still seems incorrect (assuming bind argument expressions are not re-evaluated). :+1: . i didn't do that because the bookmarks toolbar could show up noticeably earlier than when any bookmarks are actually created (for instance when syncing a large set of records). but it does make the code simpler.. do you mean unnecessary with https://github.com/brave/browser-laptop/pull/7300#discussion_r101882681 or something else?. i think react is throwing a warning because it expects className here. i would wait a short amount of time to call this to make sure that SYNC_DELETE_USER gets processed before the extension is disabled. that works too. sgtm!. @ayumi i think there is a general race condition here even if we apply stuff in the right hierarchy order. see https://github.com/brave/browser-laptop/issues/7293#issuecomment-280883336. omitting the existingObject search for CREATES reduces the sync lag significantly, from a minute or so to a couple seconds.. will do. ++. seems that you would want defaultAppState without the tabs field for this test?. otherwise lgtm. i think this should be (url && isSourceAboutUrl(url)) || isPrivate, assuming the previous code was correct. i thought this function was supposed to do the following instead:\nfirstPartyUrl.protocol &&\n  // By default first party hosts are allowed, but enable the check if a flag is specified in siteHacks\n  (\n    shouldCheckMainFrame ||\n    (\n      (\n        resourceType !== 'mainFrame' &&\n        isThirdPartyHost(firstPartyUrl.hostname || '', url.hostname)\n      ) ||\n      (\n        siteHacks[firstPartyUrl.hostname] &&\n        siteHacks[firstPartyUrl.hostname].allowFirstPartyAdblockChecks\n      )\n    )\n  ) &&\n  // Only check http and https for now\n  firstPartyUrl.protocol.startsWith('http') &&\n  // Only do adblock if the host isn't in the whitelist\n  !whitelistHosts.find((whitelistHost) => whitelistHost === url.hostname || url.hostname.endsWith('.' + whitelistHost)) &&\n  // Make sure there's a valid resource type before trying to use adblock\n  mapFilterType[resourceType] !== undefined. for reference, here's what was in startAdBlocking prior to 85464b914:\nconst cancel = firstPartyUrl.protocol &&\n      (shouldCheckMainFrame || (details.resourceType !== 'mainFrame' &&\n                                Filtering.isThirdPartyHost(firstPartyUrlHost, urlHost))) &&\n      firstPartyUrl.protocol.startsWith('http') &&\n      mapFilterType[details.resourceType] !== undefined &&\n      !whitelistHosts.includes(urlHost) &&\n      !urlHost.endsWith('.disqus.com') &&\n      adblock.matches(details.url, mapFilterType[details.resourceType], firstPartyUrl.host). cc @bbondy. is there a case for siteSettings where existingObjectKeyPath.length !== 1?. Map, not List ?. maybe rename to updateSiteCache for now. it would be nice if this didn't have to run for users who aren't running sync. done in https://github.com/brave/browser-laptop/pull/8088/files#diff-dbafb8aac78fc0a84a0dcc51f799da7cR64. :+1: . performance-wise, it is better to add all the devices in a single appAction call. i think this needs to check that this.props.syncData.get('devices') is not null/undefined, may be the cause of the error i saw. this should probably also check that devices is non-falsy. actually is this used at all?. minor enhancement: if you apply this as a filter function before sorting in https://github.com/brave/browser-laptop/pull/8409/files#diff-b7794baa4e0cd1fb8cab9449660662baR229, it might improve things slightly since then there are less things to sort. this was moved from appStore.js to here because it is a site reducer. Yeah, I think actually we should rename it to something clearer like addedBySync since it is just keeping track of which records were downloaded by sync.. should this only be called if we detect migration hasn't already happened?. this should probably abort if decrypted is null. Where are passwords stored on disk? I assume Chromium encrypts them using a keychain password somehow. it might be a good idea to copy the old passwords somewhere instead of deleting them forever. if the migration doesn't work for some reason, users will be mad if they can't get their passwords back.. This is supposed to undo the 'never save password' site setting, not delete the password itself. it seems that onDelete here should then remove the blacklisted_by_user attribute, not delete the password. i think this should only appear if the site is actually HTTPS, otherwise clicking the button doesn't do anything.\n\n. oops, good catch. Hm, actually I can't repro this. Did you start from fresh pyramids?. @ayumi actually the crash was caused by a history entry which did not have lastAccessedTime, so changing it to !!siteDetail.get('lastAccessedTime') && (!tags || tags.size === 0) would cause it to crash again. \nwhen i sync to forsaken..., the synced bookmarks appear in about:history. this seems like the correct behavior to me because every bookmark is by definition also a history entry.\nare you seeing history entries in about:history that are not bookmarks?. @ayumi right, it would fix the crash, but I think the user's data was a valid history entry and should not be ignored by sync.\ni think \"make synced bookmarks not part of history\" is a separate issue . Thanks!\n1. This field should be documented in docs/state.md. \n2. should be legacyPasswords instead of legacy_passwords\n3. i think you can call this once after line 185 instead of once per password. my bad, i didn't notice it was outside of the forEach block. Note: 'component' type extensions are able to access cross-origin 'file:' URLs, but somehow they are not able to see 'file:' URLs in the chrome.webRequest listener; instead the 'file:' URL webrequest listener must be added using session.webRequest.. this should check that origin is not null. i think this could often be out-of-order with the ID. it's probably better to just pad the ID or change value to a string of 0's repeating id times.. they failed for me but maybe i was on a slightly older commit. @bbondy the issue was that when i opened a new tab, this.props.locationValue is about:blank (and wouldn't change unless i typed in the urlbar) but this.props.location is about:newtab. So previously, when i opened a new tab, it would show about:blank forever. this seemed to only happen to some users, as noted in the original issue.\nIt seems like your change would cause the issue to re-appear.\n. my understanding was that we should always be showing getDisplayLocation(this.props.location) unless the user is modifying the urlbar. That would be the case here if the user switched to a tab where they had been modifying the urlbar, but not when opening a new tab.. i think you can avoid the above by just using this.app.client.changeSetting. otherwise lgtm. all of this code seems to assume that action.siteDetail is not a List, so i think it should go within the if block instead of outside it. Aren't the two lines above still needed?. OMG is this true about serg. Can all of these be === 1 instead of >= 1 ?. is this supposed to be run after every test in the suite or only after the entire suite is done? right now it seems to be running after every test in the suite.. messages here is js/constants/sync/messages, but it should actually be js/constants/messages. same as above. i don't think this is what you want, since it will run the coverage scripts once for every successful test in the suite. if all else fails you can add a new TEST_DIR value for it and add it as the last \"test\" in the testsuite, similar to what is done for TEST_DIR=lint (see tools/test.js). correct. fix #9405 . fix #9404 . feel free to take https://github.com/brave/browser-laptop/issues/9103 :) . i think you can remove this message and its handler in app/ledger.js. Not sure. The code that was commented out was added by @bridiver in a12cac496fc3dcbb59591c4e760ad0fde87476e0.. @bsclifton leveldown is included in level btw. before this fix, the browser would stop working after you opened a bookmark folder. i think this line is wrong - the filter function should be a map function like in the original code. also i think it should be props.noScriptExceptions instead of this.props.noScriptExceptions. can be const. this should still be this.noScriptExceptions.map(value => value === 0 ? false : value)), see c5d2f7b1dd12aaa71e29c258593a3f815fa6b29d. this is still the incorrect version, it should be the version above using map not filter. nit: const. unnecessary logging?. unnecessary logging?. nit: ':' at end of records\ni think this should be called addPendingSyncRecords since i've never seen pend used as a verb. nit: ':' at end of records\nchange name to 'removePendingSyncRecords' ?. why not just call appActions.pendSyncRecords in here instead of returning the records and calling it every time that sendSyncRecords is invoked?\nalso should appActions.pendSyncRecords be called for SYNC_REMOVE_SITE too?. ++. i think this would be more efficient if cookieExceptions were a map like {firstPartyOrigin: [origins]} instead of a list like [[firstPartyOrigin, origin],...]. but this seems ok for now . xtra logging?. are the block script exceptions necessary? i haven't seen them fail much. noscript tests should be kept if possible. the syncing bookmarks tests should not be exceptions. maybe rename this to something more descriptive like applyCookieSetting. i think the cookieSetting !== 'blockAllCookies' part is a bug in the original code and should be omitted. the referer should be blocked when the cookieSetting is 'blockAllCookies'.. this will probably need to be a map of domains to list, like 'https://inbox.google.com': [...] because we may need multiple cookie exception origins for the same top-level origin. what will happen to the top sites? currently they have siteTag DEFAULT so that they don't show up in history/autosuggest until they are actually visited. i think it should be addVersionInformation (like addBookmark, addSite, etc.) because the version information has not been added to the appState yet at this point. the 'not persisted (removed on save)' comment was there before. it doesn't seem to be a problem if it is in session-store-1 though. it may be a good idea to submit webtorrent-remote <2.0.2 to the Node Security Platform: https://nodesecurity.io/report. That way, nsp check will fail in this repo for dev users who have a lesser version and they will know to upgrade. It also automatically ensures that Travis and builds will fail unless we have upgraded.. if this is an issue for about:safebrowsing, shouldn't it also be an issue for about:error, about:certerror, etc?. maybe not because those errors fire after the page has started loading already but about:safebrowsing fires before. i think this should do a more strict check, like !virtualUrl.startsWith.... why is this a todo?. ah, it would be more clear if it were 'Sync history site removal', in this case i thought you were removing history site sync. safer to set this to a null function () => {}. this is not needed anymore, right?. ++ please feel free to push to this branch (but do not rebase or squash commits). @darkdh module.exports.isHistoryEntry verifies that the site is not a bookmark or a pinned tab before deleting it. but you're right that #10136 probably affects this PR. #10136 is in the 0.21.x milestone whereas this issue should be fixed in 0.19.x. this can be combined into the line below. i'm for a migrations-migration. :). minor: extra semicolon. this could fail if a folder has folderId 0. can be const. is this supposed to check objectId on 'item' or 'action.items'?. -1 is a valid folder ID (used for the 'other bookmarks' folder). can this just be return typeof folderId === 'number'?. aren't the items regular objects, not immutable?. should be item instead of action.items. \nfor more backwards consistency, the conditional should be if (parsed.origin === '') {..} instead of checking if it is 'about:'. it seems like chromium's url parser will return '' as the origin for protocols that don't technically have origin-scoping (ex: 'data:') whereas previously this would return protocol + host.\n. on second thought, using the path as the hostname as a generic fallback doesn't seem very safe. so i am fine with just having an exception for 'about:' for now.. done!. you could use Immutable's notSetValue parameter instead of ||. https://facebook.github.io/immutable-js/docs/#/Map/get. if permission === 'fullscreen', and both origin.startsWith('chrome-extension://' + config.torrentExtensionId) and alwaysAllowFullscreen are true, wouldn't you be calling response.push(true) twice in this loop (since the conditional is if, not else if)? response[i] = ... instead of response.push(...) seems clearer . if #11061 is merged before this, i'll replace moment with date-fns. would be good to have some unit tests for this. where is the chrome://brave to file:// mapping implemented in muon? it seems like a potential security hole since it can be used to bypass CSP restrictions; we should make sure chrome://brave loads are blocked in untrusted contexts. . also i'm curious what CSP violations are being triggered? app/extensions/brave/index.html explicitly allows img-src file: but not chrome: so i'm confused why the original issue happens. [minor] there's a new version of bignumber.js out now https://github.com/MikeMcl/bignumber.js/. please remove buy.coinbase.com from the CSP in app/extensions.js. This comment doesn't seem right. this function would return 'payments' not 'about:preferences#payments'.. [minor] - it seems weird that this code accesses methods on ledgerClient.prototype instead of methods on an instance of the Client. as of https://github.com/brave-intl/bat-client/pull/13, i think you will need to construct an instance of ledgerClient in order for some stuff to work. This needs some text to indicate that the recovery key should not be shared or posted publicly (like what we do for the sync passphrase). bold font: \"Make sure you keep this key private, or else your wallet will be compromised.\" ?. lgtm!. cc @NejcZdovc on whether this is a typo. needs to be merged with 83818cfb95a02ccdad2d5dcb32c3cedffe8661ff. @cezaraugusto do you know in what circumstances the partitionNumber may be a string? i want to make sure these are handled correctly now that private tabs are assigned a negative partitionNumber. @cezaraugusto i deleted this test because it's a duplicate of the one above it. i think you should be comparing getOrigin(activeFrame.get('location')) to the frameOrigin, not the location directly. this should be @return not @param. i think this should say Checks whether or not there are per-tab notifications for the active tab. this may break password saving notifications. those do not have a frameOrigin (see https://github.com/brave/browser-laptop/issues/8901#issuecomment-301991642), but they are also not greeting messages.. nvm, i misread this. sorry. minor - this comment is not right. should this comment be updated? now it just checks if global notifications is empty. minor: line ends in whitespace. iirc the ledger tries to get the favicon whenever the user visits the page, so the icon would be restored on the next visit. it needs to be synchnrous because this directory must exist before cleanFavicons is called, and cleanFavicons returns immutableData synchronously. I could add a migration flag that indicates whether this directory was created, which would avoid having to do the synchronous mkdir in future runs.. i could add an img onerror in the synopsis table that sets the faviconURL to '' / null if the file does not exist on disk - would that cause the favicon to be re-fetched?. i think this fails now because brave.com sets the CSP frame-ancestors directive to prevent being iframed. you can use https://example.com instead.. approved in https://github.com/brave/internal/issues/140#event-1334755820. [minor] this might cause the wrong word order in some languages. i think we support l10n parameters to solve this problem, but maybe not in the locale module. should probably use https instead of http by default since that is what https://github.com/brave-intl/bat-publisher/blob/master/index.js#L100 does. where is publisherKey ultimately generated? just making sure it has some kind of input validation. same as above for 'https' vs 'http'. 1. bat-publisher should throw an error if the media URL protocol is not \"https:\"\n2. it appears bat-publisher is making a call to a youtube.com page from the browser main process, scraping and parsing the page HTML, and extracting page data from it. from a security perspective, it would be much better to do this in a page content script that runs when the user visits a youtube page (ex: how we currently extract favicons from publisher pages). https://github.com/brave-intl/bat-publisher/blob/d896a93465df57b3cca227b90530f0b40044d5fc/getMedia.js#L103. i don't see anything obviously wrong with deepmerge but fwiw we use lodash.merge in sync. i wonder if @ayumi knows why?. either way is fine. in https://github.com/brave-intl/bat-publisher/blob/d896a93465df57b3cca227b90530f0b40044d5fc/getMedia.js#L91, where does author_url come from?. i think https://github.com/brave-intl/bat-publisher/blob/d896a93465df57b3cca227b90530f0b40044d5fc/getMedia.js#L91 needs to validate that author_url is a valid URL. this is easy because if not then parts will be null. https://github.com/brave-intl/bat-publisher/blob/d896a93465df57b3cca227b90530f0b40044d5fc/index.js#L101 should also return immediately if props is null . 1. is an easy change and should be done for paranoia (AKA security in depth) in case there's ever code that looks at the URL and fetches it. \nI've opened a follow up issue for 2: #11889 . webgl is concat'ed twice. getPromotion and setPromotion both use retryTrip. need to be careful that the retry algorithm doesn't trigger whatever we end up using for rate-limiting and protection against DoS (cloudflare?) on the grant server\ncc @evq . is this supposed to do something with checkbox and index?. we should avoid using dangerouslySetInnerHTML. could optInMarkup be modified to return text and templating data instead of raw HTML?. same as above for dangerouslySetInnerHTML. need to check that if a user modifies/deletes this, they aren't able to re-trigger the promotion and get more grants in the same wallet. I think we shouldn't require countryName, since it's not a required field in EV certs according to https://cabforum.org/ev-certificate-contents/.. i think we can get rid of the check for 'warning' since it was removed in https://cs.chromium.org/chromium/src/third_party/WebKit/public/platform/WebSecurityStyle.h?q=kWebSecurityStyleNeutral&dr=CSs&l=11&rcl=ec1bba9ca0f2e6d210af6f93948708a95c406ce7&dlp=chromium&dlf=src/third_party/WebKit/public/platform/WebSecurityStyle.h&dlc=1c4d759e44259650dfb2c426a7f997d2d0bc73dc&dlr=3&dlgp=third_party/WebKit/public/platform/WebSecurityStyle.h&dlgr=chromium/chromium/src&drp=chromium&drf=src/third_party/WebKit/public/platform/WebSecurityStyle.h&drc=ec1bba9ca0f2e6d210af6f93948708a95c406ce7&drr=4&drgp=third_party/WebKit/public/platform/WebSecurityStyle.h&drgr=chromium/chromium/src. i think this should pass on linux in general. most of the changes below are just copied from pdfhandler.js and extension-router.js in our pdf.js fork. Those scripts used to run as background scripts in the pdf.js extension but this PR deprecates them..  fs.writeFile was easier because it supported the base64 encoding parameter. i think this defaults to null, not undefined: https://github.com/brave/browser-laptop/pull/11776/files#diff-c3c556f1ee31674844d6d0be95748d8eR677. nvm, i guess this has to check for undefined so null can be used to clear previous values. no trailing slash. @bsclifton Good question! This is actually being emitted in PDF.JS: https://github.com/brave/pdf.js/blob/master/extensions/chromium/pdfHandler.js#L136. However I moved all of that logic into this PR [1], so it no longer needs to be handled in browser-laptop once this is merged.\n[1] Technically all of this code is still in the PDF.JS extension since we can't update browser-laptop and PDF.JS at the same time. However the manifest override in line 452 means that once someone updates to this version of browser-laptop, the deprecated background scripts in PDF.JS will no longer run.. @bsclifton I don't think translation would be lost. It was also a literal string in the old manifest: https://github.com/brave/pdf.js/blob/master/extensions/chromium/manifest.json#L5. AFAIK passing a manifest object to the extension-loading function is the same as reading a manifest.json file, so if it was translated before, it would be translated now.. this opens up a privacy issue (duckduckgo can now distinguish whether someone is using private mode) :(\ni think there are ways to avoid this leak while still satisfying DDG's requirement. will discuss more in other channels.. I think it's fine if chrome://brave  URLs can be loaded manually from the urlbar since that is also possible for file URLs. just want to make sure there is nothing they can do that files URLs can't do, other than be loaded in the chrome:// context.. @kevinlawler i un-did this change from a51b7ea62c because chrome://brave URLs are not loadable in about: pages and also the code that generated context menu icons assumed a file:// URL. if i'm not mistaken, chrome://brave is only needed for the browser action.. @petemill note that this part doesn't apply to master (the bug doesn't exist in master at all). haven't checked 0.21.x.. is there a reason to keep none? . fyi you only need to update these in en-US . please change this to SAFE_BROWSING_BLOCKED. this code will actually never be reached because securityState is insecure when e.securityInfo.mixedContentStatus === 'content-status-displayed'. this is also an issue in 0.20.x - see https://github.com/brave/browser-laptop/issues/12742. i am fixing it. https://github.com/brave/browser-laptop/pull/12743. this will return false if we are in titleMode. according to react docs (https://reactjs.org/docs/conditional-rendering.html#preventing-component-from-rendering), it should return null when an element isn't rendered.. please use app/common/urlParse.js instead. please use a descriptive variable name like historySite instead of something. thanks for adding tests!. yeah, i tried allowing insecure scripts on https://very.badssl.com/, but it only emitted content-status-displayed. yeah this is not needed for linux afaict. i think you need single quotes for the linter to pass. was this not supposed to be removed?. doesn't the 2nd argument (path) need to be set? https://electronjs.org/docs/api/app#appsetasdefaultprotocolclientprotocol-path-args-macos-windows. maybe want to ensure that there's a fallback if details.url is also false. lgtm but curious why this is written to a separate file instead of as a property in appState. should this be .+-([a-zA-Z0-9]{3}[0-9]{3})\\.pkg$ to match the windows regex?. oh, i guess this is needed on mac because the equivalent is done in a postinstall script and you probably want windows/mac to work the same way. Privacy note: We are trying to not add any more 3rd party requests in Brave (https://github.com/brave/browser-laptop/issues/12632). For production, please make sure this endpoint is a brave.com subdomain, assigning a CNAME if needed.\ncc @aekeus . ++, i think this addresses the comment above. i thought the code was always going to be 6 characters? or can it be less?. minor: activityRoundTrip and checkReferralActivity would be clearer if they only handled things related to referral activity instead of also checking for browser updates. instead of returning after appActions.checkReferralActivity() in updater.checkForUpdate, you could always check for the browser update so that these functions here don't need to check for browser updates.. this function will check for referral activity every time the browser checks for an update after 30 days has elapsed. i thought it was only supposed to check referral activity once after 30 days and then never check again.. please document this. please document this. this should set a flag in session state so that the referralCodePath check doesn't run every time a user starts Brave if we already know that they don't have a referral code (or if we already got their referral code).. shouldn't this check if downloadId exists instead of referralTimestamp? IIUC, referralTimestamp is only set when the activity check is called, after 30 days, whereas downloadId is set as soon as the referral is initialized.. @NejcZdovc but isn't !updateState.getUpdateProp(state, 'downloadId') always true for a user who didn't install from a referral? i mean that this code shouldn't keep running on every startup for those users.. Where is referralTimestamp set to a false value after getting a green light from the server?. not a big deal but why was this changed back to > 0 from === 6?. it seems easier to just do ses.setTorNewIdentity(url) here instead of ses.setTorNewIdentity(origin) since new identity is actually set by host in Muon, not origin:  https://github.com/brave/muon/pull/473/commits/7e052dd064e307a267e51202d6b7fab5b694c7fd#diff-df5c427fd693f9ebb2e5952cf0e9c8c7R744. should probably check that urlParse(historySite.get('location')) is non-falsey. same as above. see @Liunkae's comment above about localization. this should be \nthis.props.browserHistory &&\n      (this.props.allSiteCookiesNoLocalStorage || this.props.allSiteCookies) &&\n      this.props.cachedImagesAndFiles. minor: instead of for ..., you can do splitUrl.map(...). technically only the host name should be shown in punycode. but since this code only applies to strings which are not valid URLs, i don't think this matters much.. this origin check can be spoofed, e.g. by a request to 'https://www.twitch.tv.evil.com'. you probably want to add a trailing slash or do a proper URL parse.. same issue as https://github.com/brave/browser-laptop/pull/13142/files#r170109044. same issue as https://github.com/brave/browser-laptop/pull/13142/files#r170109044. curious why this was moved . also this should check !isPrivate. i know it checks for a private tab state later in the ledger reducer, but can't hurt to do it here. where is this set?. this approach looks good to me, but what's the process to update this file in the future to include upstream changes in metascraper? please add either a comment with manual steps to update this file or an automated script. you can add the metascraper functions as a separate JS file in https://github.com/brave/browser-laptop/pull/13115/files#diff-a533e12744082c16911d52f54573e441R41 so it's easier to update automatically. various. please add this to docs/state.md. should this have been removed? (btw you can delete the commit hooks in .git/hooks instead so it doesn't change any files that are checked into git). extra console.log. please remove trailing whitespace. i think npm run lint should catch this. no trailing semicolon. extra space before the bracket. why not use this.props.isActive for this purpose?. awesome, this simplifies things a lot :). i think the changes to this and the following files aren't supposed to be here. cc @flamsmark for thoughts on wording. unneeded formatting change?. does this correspond to enabling both brave and google safebrowsing? shouldn't it default to false?. this will require changes to the brave/sync library and cross-platform sync implementations. i think we should avoid changes to sync for now, since other platforms don't support Google safebrowsing yet.. FYI the sync changes would be needed in https://github.com/brave/sync/blob/staging/lib/api.proto#L68. i think this should be called in the reducers for when settings/siteSettings changed, instead of every time that activeSettings is called.\nsee  userPrefsUpdateTrigger in js/state/contentSettings.js for an example. i thought we decided safeBrowsing (without Google) would be the default, but could be misremembering.  cc @flamsmark . alright defaulting to both sgtm. could you please add a jsdoc comment documenting the params fields and the arguments that callback takes? . see https://github.com/brave/browser-laptop/pull/13115/files#diff-2565914e73f517d565765ef02f30d306R102 for an example. does twitch still need to be here?. should this line check if module is defined first? (since extension script pages don't use node/npm). requestHandlerApi.strict seems to take a string as input but wrap returns a function, so i'm not sure how this could work?. if this is supposed to be checking that the final value is a \"restricted\" string, it would be clearer to just add a isStrict boolean option to wrap. https://github.com/brave/browser-laptop/pull/13115/files#diff-db4e6972ff167826cad220e8465ff2acR24. discussed in person; requestHandlerApi.strict will be changed to mimic https://github.com/microlinkhq/metascraper/blob/master/packages/metascraper-author/index.js#L30 so that the function signature will be the same as wrap. in that case twitch can be removed from this line. thanks this is helpful. but are rawP, scrapeP, and windowP supposed to be boolean, not string?. please document what the arguments to callback are supposed to be, either here or in roundtrip. minor: params.verboseP is never used in roundTripFromWindow. please use isThirdPartyHost instead on the URL hostnames since we want to check this based on the host, not the full URL.  these should be const not let\n. minor: rename trackingHeaders to something like trackableSecurityHeaders so it's more clear why we are deleting them. this line shouldn't be needed because details.responseHeaders capitalization is already normalized. i think these should also include https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Public-Key-Pins-Report-Only . i think this should just be ses.clearHSTSData.bind(ses)() since clearHSTSData doesn't take a callback. (or even just ses.clearHSTSData() - not sure why the bind is necessary). thanks for checking - i think i was confused because Cookie and Referer have only a single capitalization mode, but that's because they are request headers not response headers\nthis seems potentially problematic because HTTP headers are case-insensitive according to the RFC. so someone could create a header called sTriCT-TransPort-SecUrITY and the browser would still process it (in theory). nvm original comment. better to use path.join here. same as above. the problem is sending the message back to the popup window, which is a browserAction popup and not in the redux appState. is there a way to get the correct webcontents in reducers using event.sender.getId() if the sender isn't a redux tab?. can this use urlParse?. why is quote needed? String.prototype.quote does not appear to be supported on my version of Node (on MacOS). i see - did someone verify on windows that string.quote() works? it's non-standard https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/quote. there are some security issues with Node's default URL parser - can this behavior be fixed in Muon's url parser?. i think you want mainFrameUrl here. i think since we support es6 you can just replace this block with availableLanguages = [...new Set(Object.values(configuredLanguages))]. doesn't this always return true since getBaseUrl is a function and getTargetAboutUrl('about:newtab') is a string?. I don't think we want to change this behavior for permissions in general - ex: if you go to https://developer.mozilla.org/en-US/docs/Web/API/notification and click 'notify me', the message is Allow https://mdn.mozillademos.org... instead of Allow https://developer.mozilla.org.... we would also have to clear all saved permissions for this to work correctly. \nfor https://github.com/brave/browser-laptop/issues/13471, i think the most minimal fix is to change the message to \"Allow X to be opened in an external app?\" for the openExternal permission only and set that permission by URL about to be opened instead of the current page URL. i think you want to set this in https://github.com/brave/browser-laptop/pull/13554/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR451 so that settings and tempSettings are the correct settings for the origin. is this change still needed? i don't think this works on arbitrary URLs, ex:\nmuon.url.parse('sms://bing/kfdk').href.replace(/\\/+$/, '')  // returns \"sms://bing/kfdk\". i think it's slightly better to move this and the other ipc.send(messages.PREFS_RESTART) into an action in js/about/aboutActions. @ryanml you can do it all in this PR, thanks. this could lead to origin confusion, like if some site with a Twitch referrer embeds https://evilsitettvnw.net/v1/segment - can you make this check more specific?. either a regex or url.includes('.ttvnw.net/v1/segment/') || url.includes('https://ttvnw.net/v1/segment/') (if the top-level page is HTTPS, the resources are probably also HTTPS). minor: this seems to be a prefix, not a suffix. thanks for adding a test! unfortunately our automated webdriver test environment is totally broken at the moment, so instead i ran the custom server and manually loaded the .pdf HTML file. confirmed that it is broken in latest release and fixed with this PR.. do you have to import the key first? my gpg shows Can't check signature: No public key\nis this key (D3B76046641D2C275EF8C728993DAAF0298ED4FE) owned by brave or tor? if by us, who has control of it?. can you add the command here to import it for now?\nalso, are curl and gpg already installed on windows?. i meant could you add the import command into this script (or into the setup README) so that people who are building local packages won't get the error :). I'm confused why we are getting the permissions for the main frame origin in https://github.com/brave/browser-laptop/pull/13475/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR452, but here we apply permissions by requestingUrl instead of mainFrameOrigin. seems like these two lines should either both use requestingUrl or both use mainFrameOrigin. are you sure this and the other getSiteSettingsForHostPattern lines aren't supposed to use  getOrigin(requestingUrl) instead of mainFrameOrigin since that's what is actually shown in the message?. https://github.com/brave/browser-laptop/pull/13475/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR500\n. you have to do requestingUrl = getOrigin(requestingUrl) before calling these settings since these were previously saved by origin not full URL. or better yet, define const requestingOrigin = getOrigin(requestingUrl) in the function scope so that it's harder to confuse URL with origin. see https://github.com/brave/browser-laptop/pull/13475/files#r177257591. can also be simplified using https://github.com/brave/browser-laptop/pull/13475/files#r177257591. see https://github.com/brave/browser-laptop/pull/13475/files#r177257591 - this should apply the change by requesting origin, not full URL. let's remove this diff if it's no longer needed. you want requestingUrl in this line i think. @jumde what if instead of this change, you just change https://github.com/brave/browser-laptop/pull/13475/files#diff-7b5b041c814805dd8496488bc6a53d3cR469 to parsed.origin != undefined so that the null origin will trigger https://github.com/brave/browser-laptop/pull/13475/files#diff-7b5b041c814805dd8496488bc6a53d3cR479 ?\nalso please add a test case in the getOrigin unit tests. @jumde i see. what if instead of changing the behavior of getOrigin, we just change https://github.com/brave/browser-laptop/pull/13475/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR500  to requestingOrigin || requestingUrl || 'Brave Browser' so it displays correctly?\ni am reluctant to change getOrigin since it's used in various places for security checks. this throws errors like /bin/sh: line 3: s2rzCh6Atys212CCZEMs4spWAReXux0KirKq0ON9N8modct2AcNS5bSdmyMhQehP: com\nmand not found on mac since it interprets each line of the public key as a separate command. you can instead write the public key to a file and then do gpg --import tor_demo_key.asc. you can just check this file into git so it doesn't need to be written/deleted every time. this should send the key and value so the restart handler doesn't prompt for restart if you toggle the setting 2 times in a row. you can also replace PREFS_RESTART in js/about/preferences.js with this.. no longer needed. please rename the key.pub to tor-demo-key.pub or something so it's clear what it is being used for. this throws an error when you go to http://www.orimi.com/pdf-test.pdf and click the fullscreen button\nshould be requestingOrigin instead of mainFrameOrigin i think\n. actually it shouldn't - https://github.com/brave/browser-laptop/pull/13475/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR440 set the mainFrameOrigin to null deliberately\nso i think this just has to check if mainFrameOrigin is null. this if blockis actually not necessary anymore since it will show the magnet URL itself. if you dogpg --import ./res/keys/tor-demo-key.pubthen you don't need to copy it into the buildDir. also https://github.com/brave/browser-laptop/pull/13550/files#diff-f27081c0d2b1b80f3d8bdaa53cd67021R179 won't be needed. i took this out because it seems to no longer be needed. verified with this PR that if i go to brave.com and right-click themailtolinks at the bottom of the page, they show a non-null origin. . @riastradh-brave can you split this out into a separate module so it's not in here twice? for instance you could add it as an exported method inapp/channel.js. we shouldn't call synchronous fs methods for performance reasons. can you just make this directory and check it into git? i would prefer it beapp/extensions/brave/etc/torsince Tor is part of the Brave \"extension\" mostly. what is actually going in this directory?. you should make this directory on startup if it doesn't exist, instead of every time that a tor tab is created, for performance reasons. see app/sessionStore.js. this needs to be changed if this PR is going out in 0.23.x instead of 0.22.x. update: since this is going out in 0.22.x release 2, this needs to be updated once we know the version number of 0.22.x release 1. update: looks like the final version to compare against is0.22.13`\n. parsedUrl.query is repeated twice. this doesn't work for domains that have subdomains, ex: play.spotify.com. you can use getBaseDomain to get the full domain. though it looks like it also does this on master. minor: change this to url && url.startsWith(pdfjsBaseUrl) so it's more precise and easier to read. it should be sufficient to just use getLocationIfPDF here since that is the function used to get the URL shown in the urlbar when a pdf.js URL is loaded. that function is also used for bookmarks, history, etc.. are you sure this fixes the crash?  muon.url.parse doesn't throw an error for most invalid URLs:\n\nif the crash is because the URL is undefined, you could just replace this check with if (typeof options.url !== 'string') { return callback(new Error('URL is not valid')) }. then we wouldn't need to do url.parse on the URL unless we are in development mode (https://github.com/brave/browser-laptop/pull/13722/files#diff-2565914e73f517d565765ef02f30d306R59)\n. mainDevice should be added to docs/state.md. I don't know if this is the intended behavior, but since this does not delete the device seed, if you set up sync again after removing a device, it will re-join the old sync chain.. can we use synced instead of sync'd (which isn't a word)?. same as above. this is probably not the right behavior because the text says 'Start a new sync chain' not 'Rejoin my old sync chain'. [Security] Currently there is no text that indicates this QR code or passphrase should be kept secret. I am worried this will lead to users sharing their QR code or passphrase in support requests. They should not do this since the information is an encryption key. \n@bradleyrichter can you mock up a warning text telling users to never share their code words or QR code? . for reference this is what ledger says: \n\n. @NejcZdovc getViewerUrl is actually used by PDFJS for all URLs, not just file URLs - see https://github.com/brave/browser-laptop/blob/master/app/pdfJS.js#L101. IIRC the viewer URL is then redirected to the chrome-extension://{pdfjs_id}/{url} URL. however, if the redirect doesn't happen, we still want to display the real URL, not the viewer URL. that is why getLocationIfPDF also handles the viewer URL. . Does this text show up if Google safebrowsing is enabled, or only if our own safebrowsing implementation is enabled?. do we need this since safebrowsing is no longer a site setting?. per comment on the sync PR, i think we should just stub safeBrowsing to be undefined for sync.. @cezaraugusto \ni think these were my test steps:\n1. join an existing sync chain (the one corresponding to bytes [0, 0, 0, 0...], so the current device is not the main device\n2. click Leave Sync Chain\n3. click Start a new sync chain\n4. click Computer\n5. it showed the old sync code\nhowever i can't seem to repro this consistently. can you just use getBaseDomain from js/lib/baseDomain.js ?. nvm, i guess what you want here is the full URL without the path?\nthis seems like it would fail on URLs that don't include slashes in the protocol, like mailto: \nyou could do parsed = urlParse(url); return parsed.path ? parsed.split(parsed.path)[0] : url or something like that. ^ though i guess that doesn't work with URLs that don't have a protocol\nsince publishers only works on http or https sites, you could fix by\nif (!url.startsWith('http://') && !url.startsWith('https://')) { url = `https://${url}` }. i think this line just sets the mainDevice to be true for any device with the same name as the current device, since SYNC_DEVICE_NAME is the name of the current device. is that the intended behavior?. (as long as the current device doesn't know of any existing main devices). [minor] this function gets called every time a new tab is created. you could declare const TOR_SOCKS_PROXY = getTorSocksProxy() at the beginning of this file and just use the constant here since it won't change for a given build of Brave. previously for an effective TLD like co.uk, this would return co.uk as the base domain. that seems incorrect so i just set it to the empty string.\nnote that some eTLDs like github.io are resolvable. @jumde the problem with &&  is that getBaseDomain thinks google.com.0.1 and 127.0.0.1 have the same base domain. so if either is an IPv4 address, we should do literal string comparison.. the settings / defaultSettings object is supposed to only be used for settings that are exposed in about:preferences such that the user can modify them. \ncan we avoid adding more non-user-exposed payments flags/timestamps to settings? unless i'm misunderstanding why they were added here in the first place.\nseems like they should go in appState.ledger.about or appState.ledger.info (https://github.com/brave/browser-laptop/pull/13504/files#diff-b4e400e260f324745d12616a8c9c1fc6R185). I think it's clear from https://github.com/brave/browser-laptop/pull/13820/files#diff-3e19062054041e338c28b2593b82e8d9R23 that this is not intended to handle IP representations that are equivalent but don't have the same string representation for now. same as above. or are you suggesting adding a test for the equivalent case returning third party so that it's explicit based on tests what the behavior should be? i can do that. ^ probably best to do in a follow-up PR since it's non-critical and adding it here would dismiss the existing reviews. I'm pretty sure the previous implementation's complement was also transitive, reflexive, and symmetric (at least it was supposed to be), but this refactoring makes those properties more obvious. not sure I understand this if condition. the part after the first && returns a truthy value, but it doesn't set the URL. i think you mean:\n``\nif (url != null) {\n  url = (!url.startsWith('http://') && !url.startsWith('https://')) ?https://${url}: url\n  return url.substring(0, url.indexOf('/', url.indexOf('://') + 3))\n}. tests below should be uncommented?. this seems redundant since https://github.com/brave/browser-laptop/pull/13504/files#diff-3920198635a4b5a4d7e27313620f971dR240 already checks if the difference betweennowandbootStampis greater than the requisite time interval. minor: it would be good to have a test case for a URL without a protocol, ex:brianbondy.com. @jasonrsadler I don't know of any examples but I also am not familiar with this code path at all. IIRC this will always be truthy because urlParse returns {} for non-valid URLs.parsedUrl.hostname` may be null\nalso this would turn somesitewww.com into somesite.com. i think you want to either omit the replace or use a regex (/^www\\./). why can't this just use pageDataUtil.getInfoKey? I'm slightly concerned that pageDataUtil.getInfoKey includes the URL protocol whereas tldjs.getDomain doesn't. should this also check that payments is enabled?. is it clear that people will know what this is referring to? cc @bradleyrichter @alexwykoff . @RyanML not sure i understand the problem since this isn't calling ledgerState.getLocation (that gets called below). i'm just suggesting changing this line to location = pageDataUtil.getInfoKey(location) instead of location = manualAdd ? tldjs.getDomain(location) : pageDataUtil.getInfoKey(location). your comment would make sense for https://github.com/brave/browser-laptop/pull/13856/files#diff-3cdfdb124f718787d584e9e2b82fcedcR720. ++. these tests should not all say 'location not modified'\nplease also add one for www.wowww.com, thanks!. does this need to be logged?. does this need to be logged?. trailing space. are these changes supposed to be in this PR?. does this need to be logged?. this test was failing in muon because muon gets the origin from GURL.GetOrigin (https://cs.chromium.org/chromium/src/url/gurl.h?q=gurl&sq=package:chromium&l=201), which doesn't return the port if it's 443 for HTTPS or 80 for HTTP. it's old functionality. you can enable flash in prefs, then go to https://www.onlinemictest.com/webcam-test-in-adobe-flash/, right click on the flash element, click 'allow once', then close the tab and re-visit it. flash should be re-blocked.. extra console.log. extra console.log?. extra console.log?. @petemill this code only runs for muon.url.parse, where parsed.origin is not undefined. in that case, path is always a string. . why is this needed?. appears not to be used. are you sure this works in packaged builds?. to clarify, i see that it's needed to set the current SSID, but i'm wondering why this is a product requirement. . @mrose17 thanks, i will check in with them. is this just for a test group of users, or will it be shipped out in Brave stable?. works (still) on mac\n@jumde could you check windows?. why was this changed?. it looks like you don't reassign to this variable so better to use const instead of let\nalso this doesn't need to be in the module scope, right? so it can be declared in setupTor instead.. it would be slightly clearer if you used directories.forEach instead of this recursive loop. please add unit tests for these exported methods (located in test/unit, npm run unittest to run). @riastradh-brave i see now that one of the directories is a subdir of the other. in that case you can just use fs-extra's mkdir instead of fs's mkdir, which will behave like mkdir -p: https://github.com/jprichardson/node-fs-extra. thanks for adding tests - could you also document the input types of any externally-callable methods/constructors using jsdoc so it's harder to get the types wrong? http://usejsdoc.org/ - see js/lib/request for an example. noting that this will still override the siteSetting if the global setting is set to 'blockAllFingerprinting'. . i think you want to check data.fingerprintingProtectionAll && data.fingerprintingProtectionAll.enabled?. remove trailing comma. remove trailing comma. [minor] please use curly braces around the function body and no semicolon\nthis would normally be caught by npm run lint but the linter excludes content scripts :(. minor: please move to js/lib. minor: please link to issue for updating this so we don't forget it. why does the windows hash change if the version is the same?. you could just do var host = window.location.origin. minor: s/unwarp/unwrap. do you need to git add cookie-favicon.ico?. nvm i see https://github.com/brave/browser-laptop/pull/14286/files#diff-6223bbd944b0287351445529f464dc1fR89. nice test!. @riastradh-brave can you check this on linux?. this approach looks good, but FWIW: @feross is it intentional that these methods check details.url instead of details.firstPartyUrl? . Can you change this to For your privacy, torrents are blocked in private tabs when Tor is enabled.. @NejcZdovc i thought this was going to be maintained as a separate branch, not merged into master? . this file was refactored so that blockWebRTC is a separate function. despite the large diff, the only material change is that blockWebRTC is called if chrome.contentSettings.torEnabled == 'block'. Use urlParse instead of url.parse. replace this with const urlFormat = require('url').format so that url.parse is not callable (which is often insecure and should be replaced with our urlParse module). this needs to be set to 'block' if the user hasn't opted into ad trials. not a bad idea, but it goes against our custom of \"1 commit per PR\" \ud83e\udd37\u200d\u2640\ufe0f . @NejcZdovc according to git blame, you set this to 4.7.1 for https://github.com/brave/browser-laptop/issues/10072. is that still a problem?. looks like this is causing a bunch of deprecationWarnings but not errors (that weren't already there). https://travis-ci.org/brave/browser-laptop/jobs/394314325#L6366\ncan we set deprecationWarning false in this PR?. debatable; alternative (can be done in follow-up) is to make DDG a per-tab setting like Tor. @Slava i started setting up flow but it never really got used. i  don't think anything runs flow check anymore. good catch thanks!. bug: this should send isTor as the last argument. @riastradh-brave chrome.contentSettings.torEnabled == 'block' means this is running in a tor tab. sorry slightly confusing but the chromium contentsettings values can only be the strings 'block' and 'allow'.. @riastradh-brave torEnabled == 'allow' means Tor is not enabled in the tab. 'block' means it's enabled.\nmy admittedly non obvious logic here was that 'allow' always corresponds to the less private/secure setting. . @riastradh-brave yup that was my assumption. setting '0' just temporarily disables the URLbar. there's no UX that depends on it reaching 100.. @riastradh-brave onTorInitError shouldn't be called twice because https://github.com/brave/browser-laptop/pull/14499/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR767 (torInitialized is set to false by the time the timeout happens). either way it's harmless if it gets called twice in a row - only one dialog will ever appear at a time.\ni think you're right that we only need 2 states though - one for tor status determined and one for tor status undetermined. the timeout currently doesn't care about true vs false.\n. since this was the only dependent on unzip, please run npm uninstall --save-dev unzip to remove it as a dependency. ++ haha. also need to document online https://github.com/brave/browser-laptop/pull/14599/files#diff-dec2e43bce99211930ce9e537cdec856R25. this may need to clear [tor, error] if one exists. i guess it's done in https://github.com/brave/browser-laptop/pull/14599/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR836. minor: i would prefer if this were just the APP_ON_TOR_ONLINE action with a parameter online that is set to false, instead of a separate action. i guess it should then be renamed to APP_SET_TOR_ONLINE. @riastradh-brave yup should be fine as long as this isn't called in multiple places (since i doubt we ever want the case where the tor error is shown when tor is online). this block needs to be replaced. verified this works on packaged builds as well as in dev. @petemill it doesn't work because you can't load chrome-extension:// URLs in a cross-origin context unless they're whitelisted in web_accessible_resources, but we'd rather not whitelist them for privacy reasons\n. you probably want the hostname property not host since host may include a port number. should check typeof host === 'string' && host.toLowerCase().endsWith('.onion') since host may be undefined. [minor] to avoid code duplication, best to refactor this and onBlockedInTor into a single method that takes an argument indicating why it was blocked. i find it easiest to just look at what it's mapped to in chromium's GURL in muon brave/common/extensions/url_bindings.cc. but the API was intended to be consistent with Node's url.parse module. @Slava is this block supposed to be here?. @Slava lol wow i have no idea. sorry i thought it was left over from the rebase.. this test needs a .windowByUrl(Brave.browserWindowUrl) here to switch from the page context into the Brave window context or else it fails because there's no activeTabTitle component found. . @riastradh-brave do you know why this diff is here?. @Slava do we need unsafe-eval here?. i think we should merge the upstream ones first so that this only requires one browser-laptop PR. bat-ledger-spec appears to be not used in this repo; the others have been merged. @bridiver in this case the requesting URL is 'mailto:...' or whatever the external protocol is, so it would never be a PDF origin or Brave origin. @petemill sorry do you mean this chunk should be deleted or kept (or other)?. do either the RPC or websocket ports accept connections from localhost or other whitelisted origins (not counting chrome-extension://...)? if so we need to make sure the RPC and websocket ports are not vulnerable to DNS rebinding: https://github.com/transmission/transmission/pull/468. the solution is to have the listening service validate the incoming request's host header before doing any processing on it. here is an example for webtorrent: https://github.com/webtorrent/webtorrent/pull/1260/files. @Slava CORS is unrelated. the latter looks like it should do the right thing but i haven't audited the code.. is this suppoed to be here?. oh i see, was it breaking linux builds?\nseems like there should be a package-lock.json change for it. updated. @petemill ping. just to be paranoid, can we add a filter in app/filtering.js such that this resource is not available to origins other than the brave extension origin? . minor: this seems out of order. 10 is kind of a small factor. did you benchmark this?. just to confirm, is this the mingw build? (not the old 0.3.2 build). should this also be updated in package-lock?. shouldn't this only be denied if openExternal is the permission?. data doesn't seem necessary since it is handled internally by Brave. could you move this into https://github.com/brave/browser-laptop/pull/15260/files#diff-8a9bac13ef6264feb2b6da7c18d86b3cR562 to make the diff smaller. should be called deniedSchemes since it's not a function. actually this code block wouldn't be reached otherwise since it's an else if . this regresses https://github.com/brave/browser-laptop/pull/15165 which causes the 1 critical vulnerability. i thought we decided to just make the notification unhideable on linux? fine with either way, just wondering if product spec has changed.. This is blocked on the doc text being updated with the new signing keys: https://github.com/brave/brave-browser/issues/1826. do we need to localize this?. seems reasonable. needs a period at the end. needs period at the end. also it is slightly better UX to have this open in a new tab instead of the current tab. target=_blank has some security pitfalls so you can use aboutActions.createTabRequested. i think it is better UX here to use the createTabRequested action https://github.com/brave/browser-laptop/pull/15309#discussion_r238865331. ",
    "aekeus": "Looks good. Checked out the branch, npm test brings up the UI and reports back correctly. ++\n. These changes will require an SSL cert to be created to communicate with the vault-updater repo\n. Sounds good. Making the changes now.\n. We have the electron version number, so I will include in the build script.\n. \n. We do not need to change electron-packager to support this in OSx. This may be a different case in win32.\n. This looks great. Tested out native builds. Binaries build out properly. ++\n. Agreed and build out a page like https://www.torproject.org/docs/signing-keys.html.en\n. Agreed and build out a page like https://www.torproject.org/docs/signing-keys.html.en\n. From the docs:\n--warn-only: optional\nreport errors, but always quit with an exit code of 0\nWithout the parameter (which we are not sending) it will fail with a non-zero return code / stopping the build process.\n. From the docs:\n--warn-only: optional\nreport errors, but always quit with an exit code of 0\nWithout the parameter (which we are not sending) it will fail with a non-zero return code / stopping the build process.\n.  I can duplicate using the steps listed above. @yan, no those are not being sent as crash reports.\n. Ok, will audit.\n. Adding the electron version should not be a problem. We will need to create a custom form if we want the About windows to look identical between versions.\n. Added electron and chrome version numbers. Confirmed on both Windows and OSx.\n. Thanks, will work with @bbondy on this.\n. Last commit fixed\n\n. This was actually a deceptive problem with the installer. It used the structure of the author object when building. I will test to make sure the email property works (although I suspect there will be no problems)\n. The main process. This sent and stored by the crash handling system:\n{\n    \"_companyName\": \"Brave.com\",\n    \"_productName\": \"Brave Developers\",\n    \"_version\": \"0.0.7\",\n    \"guid\": \"9a7e8a6d-5111-4647-aa01-65f3118a0af3\",\n    \"list_annotations\": \"Performing @selector(itemSelected:) from sender NSMenuItem 0x7fea1049d9d0\",\n    \"platform\": \"darwin\",\n    \"process_type\": \"browser\",\n    \"prod\": \"Electron\",\n    \"ver\": \"0.36.2\",\n    \"upload_file_minidump\": \"\",\n    \"ts\": 1452714752964\n}\n. I removed this. You are correct, not needed.\n. I collapsed these two into a single function and modified their callers.\n. Fixed\n. Moved to separate package-loader module. Will be useful to have available to other parts of the system as well.\n. These seem to serve a different purpose. I left them in for now, let me know if you would like a modification.\n. Ok, will fix.\n. Yes, will fix is next commit.\n. Ok, I will also confirm where the file will be located in Windows.\n. That is a good idea. Will implement.\n. Agreed. Would need to pre-read en-US files to retrieve tokens and fill translation cache.\n. Yes, Linux will go here. Naming is a vestige from OSX + Windows only.\n. Yes, that is what Transfex does when an identifier is not present in the destination language\n. Ok, right. I didn't think about that. Will do.\n. Nope, mistake. Will fix.\n. Ok, will cache after first call.\n. I don't think it needs to be added to the CSP as the HTTP request is issued by breakpad (separate process). But it probably wouldn't hurt to add it.\n. I checked the current list and it does not contain the previous crash URL. So not adding should be fine. This was tested operating in dev (shows the crash menu item).\n. We generally pull in all languages files at the time we cut a release. That allows us to keep everything up to date in a scalable way.\n. Good call. Will look into it. Thanks.. Great find. This broke the hamburger menu item. Fixing now, thanks.. This should include nightly as well. nightly should be here as well. nightly should be here. BROWSER_LAPTOP_REV is the ref of the last git commit. ",
    "luixxiul": "@aekeus fixed already?\n. On Win10 32bit:\nCtrl+Shift+I to open dev tools -> it works\nCtrl+Shift+I to close dev tools -> it does not. @bbondy would you mind providing another STR if any? thanks!. On debian with .304\n\nCommand+Option+I to open dev tools -> works\nCommand+Option+I to close dev tools -> does not work. Retesting on .304 by deleting the profile, I still cannot confirm the issue was fixed.. Ensured already?\n. So maybe is this the reason of #1723, #1311, #1859 and like that?\n. Still reproducible?\n\nCC: @bbondy \n. Was fixed?\n. Does we have these, doesn't we?\n. Can this be closed with https://github.com/brave/browser-laptop/commit/0aaab3b56baf26ff1a57249e30990738555a79bd?\n. @bbondy implemented, doesn't it?\n. Was this fixed?\n. Um, on Windows 10 it cannot be reproduced. I pinned facebook.com and opened a new window, but pinned facebook was displayed correctly. OS X only bug maybe?\n. Isn't this bug critical?\n. So this might be related with https://github.com/brave/browser-laptop/issues/1779#issue-155007713?\n. Does this close #1778?\n. Was this fixed with the commit by @bbondy?\n. Changing the background color of pinned app's shortcut to Brave, too.\n. As a follow-up task, how about branding the panel on the start menu?\n\nLike Foxit reader.\n. There is an instruction on Microsoft help page but I don't remember where it is. The foxit reader is not the universal application so there must be a way of configuring it.\n. +1 from support\n. Setting up node -v 5.5.0 node-gyp -v 3.2.1 on  Ubuntu 14.04.01 x86_64  (same as https://github.com/brave/browser-laptop/issues/214#issuecomment-174244372) and sudo npm i,\n```\n\nabp-filter-parser-cpp@1.1.12 install /home/test/browser-laptop/node_modules/abp-filter-parser-cpp\nnode-gyp rebuild\n\nmake: Entering directory /home/test/browser-laptop/node_modules/abp-filter-parser-cpp/build'\n  CXX(target) Release/obj.target/abp-filter-parser-cpp/addon.o\nIn file included from ../ABPFilterParser.h:9:0,\n                 from ../ABPFilterParserWrap.h:12,\n                 from ../addon.cpp:7:\n.././filter.h:12:25: fatal error: BloomFilter.h: No such file or directory\n #include \"BloomFilter.h\"\n                         ^\ncompilation terminated.\nmake: *** [Release/obj.target/abp-filter-parser-cpp/addon.o] Error 1\nmake: Leaving directory/home/test/browser-laptop/node_modules/abp-filter-parser-cpp/build'\ngyp ERR! build error \ngyp ERR! stack Error: make failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\ngyp ERR! stack     at emitTwo (events.js:100:13)\ngyp ERR! stack     at ChildProcess.emit (events.js:185:7)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)\ngyp ERR! System Linux 3.13.0-32-generic\ngyp ERR! command \"/usr/local/bin/node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /home/test/browser-laptop/node_modules/abp-filter-parser-cpp\ngyp ERR! node -v v5.5.0\ngyp ERR! node-gyp -v v3.0.3\ngyp ERR! not ok\n```\nfatal error: BloomFilter.h: No such file or directory <- Isn't it the cause of the error?\n. Finally succeeded. Not sure what was wrong at all (maybe due to the version of Node?).\nThe procedure that worked on Ubuntu 14.04.01 (clean install): https://gist.github.com/luixxiul/e294f2e5ef5bdf5ab6910d8224a9b7a9\nWould someone confirm this works? If it does or does not, please tell me.\n. This will be fixed with #1701. Closing for the moment. Thanks anyway.\n. @bridiver maybe closing again?\n. Was fixed already?\n. Closing as the problem reported was fixed\n. On Tor browser you get a273d6a847f0e2a57fa0161158f12fed, whose score seems to be better than ours.\nOn Tor browser:\n\nOn Brave:\n\nShould we update ours?\n. Me neither on Ubuntu 14.04. None of them works.\n. FYI: LastPass has been integrated already.\n. > +1 'cause Tumblr is a site I use a lot and it is a NIGHTMARE without X-Kit.\nWhat do you +1 for?. Was this fixed?\n. Does this mean that WebRTC is not blocked? Tested on 0.11.0.\n\n. Has this been already implemented?\n. Closing as this was already implemented.\n. I'm not sure, but maybe is this related with #1862?\n. Was this fixed already?\n. https://github.com/brave/browser-laptop/issues/7953#issuecomment-290164529\n\nAnother workaround for macOS, Linux and Windows: install f.lux which can set a warm white tint in the evening which prevents a harsh white screen.\n\n+1 from me too. If you have a serious eye problem, definitely the software is worth trying. You can grab a copy here: https://justgetflux.com/. dark ui is planned in 1.0. hang tight.. Until every variable which defines color of the UI will be moved to theme.js, it will never be available.\n@cezaraugusto and I am working on that. \nHere's a list of issues for that task: https://github.com/brave/browser-laptop/projects/15\nI cannot guarantee the date when it'll be finished, but it will be finished anyway, so please wait. After that a dark theme designed by @bradleyrichter will be able to be implemented. We are gradually moving forward.\nI think that in a future it would also be possible to import your own theme.js to customize the UI by yourself. I am not sure how it will be implemented though.\nIf you are a developer / UI designer, please have a look at the project on GitHub to see what you could do (designing with a theme by modifying the file, implementing a dialog to switch the themes, etc\u2026) . https://github.com/brave/browser-laptop/issues/271#issuecomment-324266684\n\nSo, are the dev team going to implement extending the dark mode onto ALL the back-end settings and extension/security pages etc. Is this something you can do soon.\n\nNo, I don't think it will happen soon.\nThe 1st phase will only be limited to UI. Otherwise it would take too much time to ship the dark theme. The dark about pages will be considered after that.\nhttps://github.com/brave/browser-laptop/issues/271#issuecomment-330842697\n\nIssue is over a year old now. Surely it can't be that difficult.\n\nIt might look easy but actually takes a lot of time. You need to find every variable for UI color and replace it with another one, refactoring the source code with Aphrodite at the same time. It is not a matter like \"make them all dark\".\nhttps://github.com/brave/browser-laptop/issues/271#issuecomment-336491917\n\nthought it was coming in the \"next\" update :-/ O well im not going anywhere.\n\nPlease see above: https://github.com/brave/browser-laptop/issues/271#issuecomment-317992917\n\ndark ui is planned in 1.0. hang tight.\n. @JonnyRedHed you are always welcome to join us to refactor the code to implement the dark UI \u26a1\ufe0f See https://github.com/brave/browser-laptop/projects/15, add cards to TODO column. It is appreciated to do what you can do.. This should be fixed for now. Closing.\n. According to the discussion on #317 the issue was fixed already. Closing.\n. This should be fixed for now. If not please follow the latest instruction and leave a log here. Closing.\n. Closing this as #299 has been merged.\n. From support\nIt takes forever to begin loading the page, then it doesn't load all the pictures. I am specifically talking about cnet.com Sorry to say this is a terrible effort.\n\nPictures on cnet.com aren't displayed, confirmed\nRelated with #2008 #2010 \n. @bbondy As fixed already this should be closed.\n. Closing for the moment. Please tell me if this still persists, thanks.\n. This should work.\nrm -rf node_modules/\nrm -rf ~/.electron\nnpm i\nIf not let me know to reopen the issue.\n. Fixed with #1682?\n. Closing as the question was already answered.\n. if this still persists let's create a test case :-)\n. @bbondy Is there any plan for this?\n. Confirmed nexusmods.com ads were being replaced. Closing for the moment.\n. Does this issue still exist for the latest version?\n. Not reproducible on Ubuntu 14.04, closing. Please leave steps to reproduce the issue to reopen this. Thanks.\n. Closing as stale. Let's reopen if we still experience the issue \ud83d\udc4d . Closing for the moment. Please leave comments if the issue still exists for the latest version. Thanks.\n. For now I'm going to close this issue in favor of this topic on our community site to receive opinions about the issue.\nhttps://community.brave.com/t/discussion-how-to-make-it-clear-that-new-tabs-opened/10056\nLet's continue the discussion there about how to make it more clear that new tabs are opened. If we will find a nice solution, we could reopen this issue \ud83d\ude04 . Already implemented?\n. Closing for now. If someone know STR please leave it, thanks.\n. This is thought to have been fixed. Closing for now.\n. Closing for the moment. For Private window, under consideration #597\n. @bbondy How about now?\n. #624 is not the same one, which is about tracking whitelist.\nIf you allow scripts from Bravery menu, the placeholder text is replaced. Closing.\n. That was the issue of npm and should be fixed by building it from source code following https://github.com/tj/n/issues/101#issuecomment-15090791. If not please leave a log, closing.\n. That would be helpful for debugging :-D\n. @bbondy Was fixed, right?\n. if you have installed via apt, you can remove it with apt remove brave.. > Are you kidding?\nI believe 100% that the dev team is not kidding at all, quite serious. And also I believe that there are so many users who are quite serious too. As the comment above (https://github.com/brave/browser-laptop/issues/386#issuecomment-213432518) indicates, if there are suggestions of sites, please add them to the wiki. I lock the conversation.\n. For the participants: \n\nAfter some discussion on Slack and clarification with Chrome on their Flash plans, here's the latest proposal: https://github.com/brave/browser-laptop/wiki/Flash-Support-Proposal\n\nhttps://github.com/brave/browser-laptop/issues/1093#issuecomment-224410536\n. Any plan, @bradleyrichter ?\n. We have already the update channel for linux, right? Closing.\n. Ah I see. As I saw the following on debian after manual update check, I just thought autoupdate had been implemented.\n2016-05-14T17:10:25.512Z - checkForUpdates\n2016-05-14T17:10:25.545Z - lastCheckYMD = 2016-05-15\n2016-05-14T17:10:25.568Z - lastCheckWOY = 19\n2016-05-14T17:10:25.628Z - firstCheckMade = true\n2016-05-14T17:10:25.593Z - lastCheckMonth = 5\n2016-05-14T17:10:25.628Z - https://brave-laptop-updates.global.ssl.fastly.net/1/releases/dev/0.9.6/undefined?daily=false&weekly=false&monthly=false&first=false\n2016-05-14T17:10:27.298Z - update not available\n. thanks for confirming that :-). This is not reproducible on the latest build. If not please let us know. Thanks.\n. Does this still persist?\n. Closing for the moment.\n. The thing is you cannot notice there it is, IMHO.\n. cf: #1255 cc:@bbondy\n. @da0ist because backspace shortcut was removed. See: https://github.com/brave/browser-laptop/issues/5323. #6156 is the place where we discuss about getting it back as an option.. +1 https://community.brave.com/t/controlling-install-location/738. This suggestion is related with #597.\n. Implemented with #2472. Zero-cache mode which was suggested in #629 is yet to be.\n. Redirecting to another URL, which is 404, as Firefox and Chrome do. Closing.\n. Reproducible at http://blackflag.jalopnik.com/indianapolis-motor-speedway-already-delivered-an-insane-1779238746. Is there any plan to replace such a custom ad components?\n. Not reproducible on the latest version. Closing for the moment.\n. Being worked on. The detail is on the issue, whose number I cannot remember. Maybe @bradleyrichter could.\n. Confirmed, but slightly different.\n1. 1st click opens the player's option\n2. 2nd click opens the browser's option\nAs this can be reproduced on Chrome too, wontfix?\n. Does this still persist?\n. Closing as stale.. Closing as now you don't have to enable tracking to log in. Thanks anyway.\n. the actual behavior is no longer reproduced. See: https://github.com/brave/browser-laptop/issues/10600. On 0.9.6 on Windows 10 it stopped from working. CC'ing @bbondy \n. Confirmed this works on Ubuntu, this might be windows-only issue\n. +1 from support. On Mac\n. Does this still persist?\n. It does on Chrome too\n. Then it's the issue of Chromium\n. FYI: search shortcuts have been implemented with #2726, whose follow-up is #4238.\n. Should this be closed or not yet?\n. Was fixed with https://github.com/brave/browser-laptop/pull/1795/commits/32f2ff2f3d3ba5a1ccd0341facf56788254167cc\n. I see, attached it! Please correct it if I picked up wrong one. \n. Closing in favor of https://github.com/brave/browser-laptop/issues/10967. This should be fixed, closing.\n. Closing for now. If this is still persistent I will reopen this.\n. Is this being worked on or not yet? This might be on the highest priority as labelled \"security\"\n. Nice :-)\n. Closing for the moment.\n. Also please have a look at https://github.com/brave/browser-laptop/issues/527#issuecomment-211022215\n. Closing as this was a temporary problem. Fixed already.\n. @bbondy this should be closed as the PR was already merged.\n. Sent now, please check your mailbox.\n. This could be related with #1546 \n. For now I'm going to close this issue in favor of this topic on our community site.\nhttps://community.brave.com/t/live-streaming-not-working-on-http-tv-infowars-com/10099\nIf you are still around here, would you please join the conversation there to talk about the issue further? :smile: There is also a lot of discussions on the community, and you would be able to find solutions for other issues you might experience :+1: Thanks!. +1 from support\n+1 from the community: https://community.brave.com/t/visited-links-should-change-color/564. tested on google result. > In Firefox, the old addon version worked much better than the integrated version.\nI couldn't agree more.\n. I assume that's why we are going to add it as extension instead of integrating it as a core service. You'll be able to install wallabag too, if it is configured following the documentation (https://github.com/brave/browser-laptop/wiki/Developer-Notes-on-Installing-or-Updating-Extensions). Sorry if I am wrong.\n. Another request: https://community.brave.com/t/closed-fido-2fa-support-please-yubikey-trezor/694?u=suguru. Was this implemented or will be?\n. It is fairly easy to hide everything except the tab's content:\n\nOther TODOs\n- Disable shortcut keys to control outside of the tab (such as shift+f8 and ctrl+t)\n- Force fullscreen\n- Force private tab mode. Reproducible on Mac, @bbondy?\n. FYI max-width: 900px was introduced with #1193. I've never been a fan of it, if I'm honest.\n. Silent update was already implemented?\n. I see. Closing for now.\n. Closing as Markdown is already supported (with links to issues and PR if any)\n. Was this done?\n. Surely the eyeball icon makes me psychedelic feeling..\n. How about trying fa-user-secret as sunglasses are still under consideration and yet to be implemented? (https://github.com/FortAwesome/Font-Awesome/issues/2133)\n\nKinda small, but not too bad. I think this is still better than the eyeball.\n. No\n. @bradleyrichter do you have any suggestion in FA?\n. @bradleyrichter have you made the icon already?. Would you please create a test case for these or indicate an example URL? thanks.\n. OK, thanks both of you\n. How do you think, @diracdeltas ?\n. This should be fixed now. If not please tell us here, thanks.\n. Same here on Windows 10 and Ubuntu 14.04, closing for the moment. If this happens on the other platforms please tell us.\n. > Also the slashdot case fails for me too.\nMe too, on 0.9.6 (Windows 10).\n. I cannot reproduce this on Ubuntu 14.04, so this might be specific to Windows.\n. I think this has been already fixed. @bsclifton would you please confirm?\n. Can this be still reproduced?\n. @bbondy Was this fixed?\n. Fixed with #859, closing.\n. Closed as the PR merged\n. I cannot reproduce this. Should be fixed now, closing.\n. @bbondy Is there any plan for this?\n. Not translated on Google Chrome\n. Not translated on Google Chrome\n. I cannot find where this is\n. What is difference between this and \"zoom in/out\"?\n. Bug?\n. Bug?\n. What is the context?\n. OK I will\n. Without this the status bar appears always left, even though the downloads bar is displayed. The value of the const is based on this.\n. This one is no longer needed as .helpfulHints was completely rewritten\n. ditto\n. There might be better ones like \"Scripts Blocked\", \"Scripts are blocked\", \"NoScripts enabled\", \"click here to allow scripts\", etc...\n. No other elements in .navigatorWrapper are styled with this.\n. This fixes the lint error.\n. Increased to centralize \"Cancel\", still I think this is not the best solution concerning l10n.\n. This could be 30%, which seems to me too wide though.\n. I'm not sure if this is the optimal order from a viewpoint of UX. \"Save\" \"Cancel\" or \"Cancel\" \"Save\"?\n. ditto\n. This is a workaround no longer required thanks to display:flex.\n. This could be less than that.\n. I think repeating the address is too much\n. https://github.com/brave/browser-laptop/issues/2147#issuecomment-224975439\n. To remove margins of .browserButton (https://github.com/brave/browser-laptop/pull/2149/files#diff-fca7d0eef4fe1430dbdc3733b1fc5fdaR27)\n. I was not sure what was style for. If it is requred for some reason I will revert this.\n. This was margin: 20vh auto 0; at first.\n. This should be translatable.\n. Thanks, and will you please include ? too?\n. Should this also be translatable?\n. Reverted due to this https://github.com/brave/browser-laptop/issues/4102\n. Reverted due to that this is TODO\n. #1187 here should be removed as it was just replaced with #4745, which remains open yet.\n. This 5px is a magic number. At first I tried display: flex, justify-content: center, but it did not work well with box-sizing: border-box on macOS, while it did on Ubuntu.\n. the plus image is 12x12 and centered, increasing the height of the button (which is clickable) to 24px.. 1em=16px, 16px*0.3=4.8px\u22525px. The buttons under this section should be removed if necessary. especially from L171 to L176.. The elements become unaligned.\n\n. Fixed into:\n\nThe label of the button \"off\" is slightly up. Will fix with another PR.\n. Because the button should be placed under <SettingCheckbox>. For example: https://github.com/brave/browser-laptop/pull/5916/files#diff-e3eeb751016b2ce9f8278efce585a461R1519. See: https://github.com/brave/browser-laptop/blob/a1621813a5724afe8b73d57a604c4b304e1816bc/js/about/preferences.js#L731-L734. These were replaced with .settingsList > .settingItem + button and .settingItem > span + button. Styling with classes in that way is a cause of inconsistency in both CSS and JS.. These values should be reconsidered later. This increases padding except the close \"x\" button on the payments dialog.. .qrcodeOverlay was moved under #bitcoinDashboard.  Code which is not specific to the general overlay, if any other, should be moved to a proper place.. Moved under .titleBar. Moved under .qrcodeOverlay .dialog-body. Moved under #paymentsContainer. Moved under .walletBar .settingsList .settingItem. .settingsListSubTitle was replaced with .settingsListTitle .subTitle, which can be more easily maintained.. Because any modal creates .dialog-header, .dialog-body, .dialog-footer, they should be set inside it, whether they have properties or not. This will work for a guide for devs and help avoiding unexpected regressions.. Removed pull-left as flexbox model was applied.. Note: this change does not affect the UI test.. Ditto.. Note: this is outside of .walletBar. The commit message of 6c168c7 will be fixed when squashing.. This will fix #6061 . @bradleyrichter Are these too large?. adding margin-right to .aboutAbout .fa-clipboard would work too.. removing this breaks the position of the verified icon.. Should this not be margin-right?. I know this is not an elegant solution; general properties for select and input should be specified at first, followed by more specific properties for .form-control, etc.. I think you can remove this.. ditto.. @jkup I moved your changes under here, .ledgerTable.. I'd add !ctx.isAboutPage to stop returining fa-search fa-list.. @bsclifton thanks for adding this ;-). ah sorry, I have pushed a PR to place the icon at the center of the input bar, and adding !ctx.isAboutPage avoids the CSS hack for fa-search to push 1px downward being applied to the url bar icon fa-list on about:preferences. https://github.com/brave/browser-laptop/pull/6292/files#diff-f5d8e85b88bbb4fdd8ebaf50901ebb3fR69 and https://github.com/brave/browser-laptop/pull/6292/files#diff-02c4b23ad267fe636760179e32fa29ceR830. still because it's not the issue which this PR tries to resolve, you might skip it. I'll take care of it then. I'm not quite sure how it does work but do you mean ctx.isSearch && !ctx.isAboutPage is not necessary? I'm thinking the case where you try to search something on the URL bar on about:preferences.. CC @bradleyrichter for this change. As far as I can tell via the picture on https://github.com/brave/browser-laptop/issues/6384#issue-197094544 where you see primaryButton, .actionButton, .wideButton, .subtleButton, and .whiteButton, I don't think so.. This fixes the regression I introduced with the former commit of the PR.\nTest Plan: \n1. Disable payments\n2. Make sure the sidebar is not wrapped. @cezaraugusto I added this here because I thought this is required for .addPublisherButtonContainer too. Is it OK?. @gyandeeps I tested on the latest master and it looks good on about:prefenreces :-D. Let's remove those added properties above in .addPublisherButtonContainer. cf: https://github.com/brave/browser-laptop/commit/2075547985b54e2dd90cc424c85092012e2ceea9. This needs removing too.\ncf: https://github.com/cezaraugusto/browser-laptop/commit/7b4ab6ffc7a93385427a9424e1a1a74d6dd695f9. note for reference: https://github.com/brave/browser-laptop/pull/6388/files#diff-e3eeb751016b2ce9f8278efce585a461R1314 of #6388 . ++ :smile: . Can we share this with that of app/renderer/components/dropdown.js, setting globally somewhere and importing it? I'm wondering if setting them in each file would make a possibility of style inconsistency.. How about adding these under this line for reference? Is it too much?\n/*\napp/renderer/components/dropdown.js\napp/renderer/components/textbox.js\n*/. https://github.com/brave/browser-laptop/blob/3d1db35c0aedb203f40b3936933a9de487e59835/less/forms.less#L8-L21. https://github.com/brave/browser-laptop/blob/baff549a8e56b86f8bc0a45f80869a2c35281c60/less/about/preferences.less#L373. https://github.com/brave/browser-laptop/blob/baff549a8e56b86f8bc0a45f80869a2c35281c60/less/about/preferences.less#L724-L727. @bsclifton Is this applied in some way? . I'd replace this with @zindexNavigationBar according to https://github.com/brave/browser-laptop/blob/ce25254d5bb0a391ffa5ebbc0d5f70ef2348155a/less/variables.less#L129. How about changing @zindexNavigationBar on variables.less into 1000 then??. nit: )** to ).** . Are all of them included or mentioned somewhere else? https://github.com/brave/browser-laptop/issues?utf8=%E2%9C%93&q=is%3Aclosed%20is%3Aissue%20milestone%3A0.13.2%20label%3Afeature%2Fledger%20. Esp #4806 #5494 . Let's include #5494 on this row and #4806 \"Add \"Import recovery keys\" button to Payments\" on the 5th row.. Do we need the blackets here? I think this should work: backgroundColor: globalStyles.color.toolbarBackground, and borderRadius: globalStyles.radius.borderRadius,. cf: https://github.com/brave/browser-laptop/pull/7107/files#diff-fa59d1e0221a5bee94fd2abd9b96dcfdR12. ditto. This works enough but I would not set with float to avoid the possibility of the case like this: https://github.com/brave/browser-laptop/issues/6749#issuecomment-274096915. I would instead use display: flex and justify-content: flex-end. I'm going to create a tracking issue to delete https://github.com/brave/browser-laptop/blob/4fb5d5ae8202b5afffff4e3ce106a64d81fbfdb4/less/forms.less#L8-L18 in favor of these lines  :-). posted here: https://github.com/brave/browser-laptop/issues/7114. how about renaming this into tabPageClosed as well?. I agree!. I think this should be already covered with https://github.com/brave/browser-laptop/blob/2aa39bb1073fe8bb40d9fc32d18fdd2ea9cee1d5/less/button.less#L52. Do we need wideButton for this? the min-width of the buttons has been set globally with https://github.com/brave/browser-laptop/pull/6387. Ditto. Please let me know if this should not be removed. <SettingTextbox> has its own width.. Surely!. I thought this should be replaced with #6895 \nIt is actually listed below - I am not sure the difference between them... I am wondering if this does not have to be mentioned as we have not mentioned Node update.\nIf needed, please change the label on #7061, thanks!. I know this comes from the original code but I thought making this white and setting #eee to elements which require it should be better.\nBut #eee is not used anywhere so this can be just replaced with white.. This can be removed based on that.. defaultIconPadding was rebased on master. . @cezaraugusto should this be deleted?. @cezaraugusto updated.. cf: https://github.com/brave/browser-laptop/pull/7258/files#diff-fa59d1e0221a5bee94fd2abd9b96dcfd . > can we go ahead on this and localize title?\nI noticed but did not fix as I thought it was another issue. It should be handled with a follow up task.\n. I put that here bearing in mind that on HTML files inlined styles are placed before body tag. Moving these to the bottom is fine for me too. CC @bbondy and @bsclifton for comments. I think we do not have the rule on the placement (Sorry if I missed it). . I think I named so in order to replace other \"704px\"s on about pages with that variable (this one too: https://github.com/brave/browser-laptop/commit/9ad4b84253a6ea857d9ae627080137abe21d8b3c#diff-9d96fcb58c1eeedf8e3d6d7f46b1a794R118).\nIs it OK to do so with this PR or another one?. ; was added by accident. I'll remove it soon. between the top edge of a window and the URL bar. - between the bookmark toolbar and the tab pages\n- between the tab pages and the tabsbar. I like that. I will update later.. Update of https://github.com/brave/browser-laptop/issues/5389 is necessary I think.. Thanks for your feedback @willy-b! I'll ping you again later.. Added here: https://github.com/brave/browser-laptop/pull/7887/commits/2f16bbdcd71706a1c29f2fe20183f5835fc93031#diff-dfc3cf3000430cbd1575b0223b06163fR630. Silly mistake.. I updated here: https://github.com/brave/browser-laptop/pull/7887/commits/0164a4df741ce5a9c7489c4a9449e4bbb9e589f4#diff-dfc3cf3000430cbd1575b0223b06163fR630. As I wrote in the commit message:\n\n\nReverted commonStyles.primaryButton to primaryButton temporarily\n\nThere have been already browserButton and primaryButton available with commonStyles.js, still these styles are overwritten by ones which button.less defines. We have to work on refactoring button.less at first.\n\nIt is because aphrodite was changed to aphrodite/no-important. I left the reasoning in the commit message on this change too.. +1!!. I'm not sure how worth it is. I left comments and grouped with __ for each function, and I think it is not so big to separate into the objects.\nIf we will separate them, let's do so after everything is refactored and we create the rules which decide when to separate objects; Otherwise it will definitely lead to inconsistency and we would not like to see that.. Actually if Aphrodite will support nesting like LESS, we do not need to separate the objects. Let's wait and see what will happen.. Updated: https://github.com/brave/browser-laptop/pull/7985/commits/35d55d544008e2e5f6ac98e25dd29b41ae57558e#diff-ab65dc6e11f418450c681ab9221425b0R251. Let's replace #bbb and rgba(55, 169, 253, 0.4) with variables and add them to variables.less and global.js for future refactoring work.. Let's apply the variable for box-shadow of navigationBar.less.. Done: https://github.com/brave/browser-laptop/pull/7995/commits/d8ed98d029e6f7a932d5267e71139594936430a6#diff-249168590ad2b154f3ea66544b01164dR20. Thanks for notifying. I'll replace it this with a variable later.. ditto!. +1. If we will do so, why won't we do that for all files in a lump to avoid inconsistency? @cezaraugusto would you mind opening an issue to track that?. Ditto.. Not quite sure. We could remove them later if we would.. Updated: https://github.com/brave/browser-laptop/pull/8038/commits/ae31c149379815d209f12e1ac7e4042c79658d74#diff-d7a7d22ddb5b69ebc41381e4864ff9d0R166. Updated. Will squash later.. I'm going to rename it.. Actually globalStyles.spacing.tabsToolbarHeight is not yet used anywhere else (as the tabs bar is yet to be refactored with Aphrodite).. Updated: https://github.com/brave/browser-laptop/pull/8032/commits/78e5c1515793fe4baeae9b11d83a147173281ed8#diff-a84690fbadad47cec1780cdcecb84b2fR61. To make the header of payments and sync appear on the same height.. As this is not going to be used, I'm removing it.. I'll rename the component (webtorrent is not one of about pages). I'm afraid doing so would make it hard to maintain the style consistency and enhance components (since you would need to check out every file in the folder not to create duplicates). For me it could cause style scattering.\nActually I prefer calling components with one line like this: https://github.com/brave/browser-laptop/pull/8237/files#diff-943709aef6ee258bb12a2cbb33018988R18, which is the same way as you would load <commonForm> components. See: https://github.com/brave/browser-laptop/pull/8011/files#diff-fd618a0193d7534a298420a3d3b4a711R22\nI'm cool with splitting anyway. I just would like to know how to avoid styles and components from scattering. (adding components to about:styles would be that way.). Will correct the comment -> sectionTitle. Fine, still let's make sure to add the components to about:styles (as we do for textbox.js and dropdown.js for example). Splitting and adding them would be perfect.. We could create a sub panel on about:styles for components in the same folder. Creating a long one page is not what we would like to see.. Sweet, because I'm still a fan of about:styles, linking to that file from about:styles looks good finally, in my opinion.\nWaiting for opinion of other members who will be back online after the holiday.. I would instead set styles.dialogInsideMargin here and under L378 which is for me more understandable (as long as there is no styles specific to this button). . dialogInsideMarginTop and dialogInsideMarginBottom.\nAs this is not a big change, I'm not strongly against bitcoinAddressButton.. In BEM they should be dialogInsideMargin--top and dialogInsideMargin--bottom anyway.. Question: is it ok to run that everytime when I commit something to keep the dependencies up to date?. @bsclifton thanks!. @Liunkae Was this added to the tracking ticket?. Let's add no-important to it. CC @cezaraugusto . @bbondy ^. let's replace the box-shadow with a variable on global.js for future use :-). ditto.. Can't it be aphrodite/no-important?. what if we would apply vh instead of px? 300px might be small for full HD monitors. Please see about:error page for examples.. ditto. OK, I understand. I proposed it so we could remove styles in the existing LESS files at the same time. It is fine to replace them with later.\nOtherwise: I'm thinking we would set no-important to the general components (such as ones in common folder) and not to other specific ones, considering the possibility of removing !important from everything.\nThat means:\n\naphrodite for files in app/renderer/components/ such as releaseNotes.js\naphrodite/no-important for files in app/renderer/components/common/ such as dropdown.js\n\nWhat do you guys think? @bsclifton @cezaraugusto @NejcZdovc. By doing so we could avoid overwriting !important with !important, which is obviously not a good habit on CSS.\nThe thing is that I noticed that it seemed to be impossible to cascade styles with cx as we usually do with CSS, which I noticed during refactoring modalOverlay.js and paymentTab.js. eg:\n<div className={cx({\n    [modalOverlay__generalHeaderStyles]: true,\n    [css(styles.modalOverlay__paymentHistoryHeaderStyles)]: true\n})}\nI thought that kind of styling should work, overwriting the styles specified with modalOverlay__generalHeaderStyles, but I could not find the proper way, instead of creating another wrapper div for that div. If any, please let me know. @bsclifton @cezaraugusto @NejcZdovc \nWe could discuss the thing on another issue if you wish.. > I think that doesn't happen with cx\nCan we improve it to support cascading styles?. nice to see the modifed BEM style :-). > Installing a snap is very quick. Snaps are secure.\nthis sound like advertising. I'd recommend to remove them unless the team would agree.. that's the another task but I will. Actually this kind of styling will be removed with the PR on refactoring modalOverlay, which I will submit later.. > it shouldn't be translated. But... using Japanese as an example... I could see writing this word using Katakana more helpful to the user. cc: @luixxiul\nStill in Japan people do not call \"Pocket\" as \u30dd\u30b1\u30c3\u30c8. I remember the issue happened on Chinese l10n before. / CC: @alexwykoff \nFor me, we could safely hardcode the name of every extention/product developed in English, as FF/Chrome do. People do not translate Gmail right?. I actually am not sure if it sounds native. Should it be rather something like Maximize the URL bar or Make the URL bar wide, etc?. Fixed with https://github.com/brave/browser-laptop/commit/9edeee43af5c8fbe733fab4baeb2d61fbc70b5a8. Fixed with https://github.com/brave/browser-laptop/commit/9edeee43af5c8fbe733fab4baeb2d61fbc70b5a8. @darkdh we need notificationUpdatePassword along with that. Otherwise:\n\n. Is this intentional? The test plan says npm run test -- --grep=\"about:welcome\", which does not trigger that.. just fixed typo. oops I just forgot to check that out. I'm going to remove it, thanks.. I have already tried ^^ once but don't you think it is hard to read? (well it is, at least for me..)\nIn this case I would stick to cx for readability of classNames in BEM, still I'm fine with your suggestion too.. Since I set 1rem to padding of braveryPanel_compact__body and I wanted to set .25rem as 25% of that padding. We know 1rem=16px, so it should be clear that .25rem=16px*25% and .75rem=16px*75% without doing math (no matter how easy it is in this case).\nUsing px sometimes makes it hard to know how and why this value has been set so. that's why I prefer relative units for elements which I added by myself. I avoided converting the units of other elements which already have existed because we can trust the value. . sure, I just missed that.. > that's an example however.\nI'm going to try that and compare it with the current version.. Fixed with 6b041cebd. Fixed with 567082247. Fixed with 3ba6110. Done with a237c9d00349decc7b380d178e5a4e9ba3f952cd. I would make these into a const to avoid repetitive input forms below.. thanks!. ah right, I've totally forgot about that component :-p\nI'll replace it with that, adding subtleButton. Thanks for heads up.. I would agree. I'm fixing other custom* with this PR later. . > this.app.client.changeSetting\nya that's the solution I have been looking for. thanks for the tip.. Fixed with https://github.com/brave/browser-laptop/commit/03a9abd783581d19fc11426bb7628c3452b56876. Fixed with https://github.com/brave/browser-laptop/pull/9075/commits/17c2f041571750816ab4fc92fa9de68885b009b6#diff-f94f0ea4252431046502bbe75728ba1fR620. this commit will be reverted.. This should be braveryPanel__header__left__displayHost. I'm fixing it.. Fixed with https://github.com/brave/browser-laptop/commit/39378e5fc1177c7334edf319f2ddaeb3681b55da. I would move the 3 lines above to a line between L16-L17, subtleItem and extensionItem.. It looks reasonable. I'm addressing it.. Addressed with 4844a1517. The reason why setting this value is to force the specified height. By setting it to auto the value can slightly (~2px) change as it is not intended.\nKnown issue: with this change the buttons on Brave payments gets broken. Setting their height to 37px would fix the issue.. Otherwise: simply removing the font-size and padding specification on button.less makes the buttons size standard.\nIf the buttons become too small due to the change, then we would have to create another component like preferenceItem.. no, I have just forgot about that.. I'll replace it!. Fixed with https://github.com/brave/browser-laptop/commit/c949c8b31ae0503f4f495a2aa2fd4357912e0d02. the bug here (it lacks primaryColor) is going to be fixed with https://github.com/brave/browser-laptop/pull/9239/files#diff-4f8a61660fd4d0a235614f82308c769eR273. @NejcZdovc would you please add that to https://github.com/brave/browser-laptop/issues/5389 for a reminder?. it's fine as long as you won't forget.. the value might be changed to a better one. CC @bradleyrichter for ergonomic insight.. height, not width, is the basis.. Please search for buttonHeight and buttonWidth in case where they be used on anywhere.. TODO: drop the commit to remove this.. TODO: drop the commit to remove this.. These cause a bug on fa-search icon. I'll fix it later.. > Absolute units are basically made for printed pages.\nyes I think you are right. I'll take a look at the document later.. Fixed with https://github.com/brave/browser-laptop/pull/9299/commits/4ea852dbbdfa8a13b481c69bdb4a2a4796dc5da1. some travis failures are due to that insecure-color has been removed on this in favor of this one.. By adding a comment like that, it would be easy to understand what the code structure is like while you separate components into functions.. Fixed with https://github.com/brave/browser-laptop/commit/b6491058510ae3f0ae723b815617ab25ea61f926. TODO: styles.braveMenu -> styles.counterBraveMenu. Fixed with https://github.com/brave/browser-laptop/pull/9299/commits/0847ef6d653657d8a9f4d294ab1aa870d9155f9e. Maybe this.copyToClipboard and this.props.showQRcode look better, which are actually only used on bitcoinDashboard.js for now.. Ditto.. CC @cezaraugusto for double check.. TODO: rename navigatorWrapper -> navigationBarWrapper. TODO: navbarCaptionButtonContainer -> navigator. TODO: navbarCaptionButtonContainer__navbarMenubarFlexContainer -> navigator__menuBarAndNavigationBar. @cezaraugusto I think we could move the noscript dialog under this line to display it like  AddEditBookmarkHanger on https://github.com/brave/browser-laptop/pull/9299/files#diff-b0295471ff187aa533558d4551aee0b3R276 to fix https://github.com/brave/browser-laptop/issues/3757#issuecomment-306412231. what do you think?. ah I have completely forgotten about that, will try it out.. creating components without knowing which level you are on the hierarchy will lead to style inconsistency, which is all about we are trying to avoid.\nYet because the comment is just an option, I think it's not the perfect way, though it should work.. do you mean something like publisherButton in publisherToggle.js? That sounds nice! I'd like to ask you do that.. I would leave comments to let possible contributors know what the status of the change is, until everything is converted and refactored to delete not only navigationBar.less but also TODO comments finally. The comments help me actually to remember why I made the change there because this PR is getting quite large and larger than as I have expected at first.. @cezaraugusto do you see that the icon image slightly disappears on hover? I do, on my packaged build. It would be resolved if there is a way of preloading those image.. just an idea despite being not sure how to implement this: require a BEM style map file to be implemented, grammar should be linted, and check if the BEM structure is maintained.\ntopLevelStartButtons: {\n    parent: 'navbarCaptionButtonContainer__navbarMenubarFlexContainer__navigatorWrapper__topLevelStartButtons',\n    files: 'navigator.js',\n    ....\n},\nconst navigationBemMap = require('/style/stylemaps/navigation.map')\nwhich looks too much though.. because I was not quite sure how to integrate normalizeButton. It actually works fine by resetting the default style so I don't want to give that up.. > I think only check for titleMode here is better.\n++. I noticed it as well and was trying to re-move the change.. @NejcZdovc please document the rule on the wiki page for refactoring work, thanks. CC @cezaraugusto. Fixed with 495756b. Fixed with 495756b. Fixed with 495756b. pre-commit?. I just thought it was a typo. thanks for the info anyway ;-). Created an issue for that: https://github.com/brave/browser-laptop/issues/9703. is this change intended?. <li> must be escaped.. ([#9645](https://github.com/brave/browser-laptop/issues/9645)). Yes, it includes not only media queries but also wildcards with pseudo parent (which is :not(.titleMode)) so I think this needs some additional work.\nThe media query settings seem to need revisiting. The wildcard setting would be replaced by creating an alternative common style such as style.animation and apply them to all of the child elements. I think this is the better option than anything else. What do you think?. Creating a custom component to remove commonStyles would be nice, such as:\n<NavigationButtonContainer\n  outURLbar\n  className={css(\n    styles.navigationBar__buttonContainer_publisherToggleContainer\n  )}>\n    ....\n</NavigationButtonContainer>\n@cezaraugusto what do you think? I thought it would be the similar/same approach as you took to create BrowserButton component.. It would also let us avoid the style inconsistency issue which we are discussing recently on #8340.\nIf so that would be fantastic.. These are set to make the list scrollable (y axis) to its bottom. I could not find out how to do the same thing for x axis. It still works though.. <div className={css(styles.refundLinkContainer)}>. also in BEM style: <div className={css(styles.refundLinkContainer__link)}>. <div className={css(styles.autoRenewalLinkContainer)}>. className={css(styles.autoRenewalLinkContainer__link) />. refundLinkContainer__link. autoRenewalLinkContainer__link. Addressed. Addressed. it's fixed.. Addressed. @NejcZdovc would you mind fixing the test errors including below? thanks!. nit: unknown. Fixed with https://github.com/brave/browser-laptop/pull/9851/commits/1d41c85be8b461c4c80e77c0e5fb289342f19bf9. Fixed with https://github.com/brave/browser-laptop/pull/9851/commits/74748d21123da64f3991913e4374034e300abbb0. Fixed with https://github.com/brave/browser-laptop/pull/9851/commits/39b9d6033393f859db071b2d9c8609d38310840a. Fixed with https://github.com/brave/browser-laptop/pull/9851/commits/d90da4d9b4383f68559cdb8816917b60f132fd00. I leave this as it is. You could easily find navigationBarWrapper by searching inside the file. Also BEM Level comments makes it possible to understand the code structure without reading inside the render function.. ditto. reverting the titleBar and the input makes the code complex. this is actually too much, reverting.. Fixed with https://github.com/brave/browser-laptop/pull/9851/commits/b7e742736b6e4a101cee5218bef689c87930973a. Fixed with https://github.com/brave/browser-laptop/pull/9851/commits/81563704072ba88e6b47e456a24234cf387891b6. thanks!. Thanks @bsclifton for digging in. I honestly am not sure the normal/proper way of handling them, so I would take the compromise you proposed :-). > Because the implications for this (pulling JSX/HTML out to methods) could be serious, I think we should discuss more\nLet's do so with another issue \ud83d\udc4d . Fixed with db38e8e9f5a8f3bcb4007943588544cf8bd91015. @NejcZdovc I'm not sure if this is a proper way since it is important to confirm that fa-unlock does actually have the red color, not grey or green one, and that seems the main object of this test including ones below.\nIs it impossible to replace these .getAttribute block with something which uses data-test-id, such as [data-test-id=\"fa-unlock\"][data-test-id=\"insecure-color\"]?. @NejcZdovc if proper, I would open another issue to decide the best way of addressing the issue.. @NejcZdovc OK I see. I will open another issue to track that, after this PR is merged. That will be a follow up task.. I agree, yet I don't know how to add data-test-id change conditions, following iconCssClasses on urlBarIcon.js. Could I ask you to do that?. > Follow ups just add issues and PR's to the already long QA testing list\nnote: the manual tests are covered by Test Plan (URL bar un/lock icon) on the 1st post.. this is specified with panelItem. the two properties above are specified with browserButton_default and browserButton. the two properties above are replaced with ones of browserButton_default. settingsListContainer is not added to any elements so this can be removed.. d -> ha -> hi -> s, which is not alphabetically?. @evq ping me if you want me to do. I thought hide-excluded-sites and show-less-sites should be grouped.. > all properties in state.md should be sorted alphabetically\nso should be ones in appConfig.js right? working on it.. @cezaraugusto mind specifying Aphrodite version (1.2.3) and adding the number of the issue (#10029)?. I'd agree!. @evq could you add a blank line between margin and :hover? . @evq would you please change linkTextSmall into linkText_small based on our guideline, which is available here? https://github.com/brave/browser-laptop/blob/master/docs/style.md#defining-our-blocks-elements-and-modifiers thanks!. Renamed above 3 ones to group semantically. @evq please update this as well.. @evq ditto.. @Garbee do you mean this PR breaks the installation on the current stable OpenSUSE version, or the installation has never worked on OpenSUSE at all?\nIf former, we should not merge the PR.\nIf latter, I think the PR is still acceptable.\nIf this PR does not fix anything, it should be closed.\nDo you have a better solution for Leap? If so, would you mind letting us know what it is like? thanks!. @mati865 Yes. I replaced it with Addresses on the 1st post for you. Would you mind updating the commit message? thanks!. Actually paymentStyles.font.regular should be replaced with globalStyles.fontSize.settingItemSubtext as there is no reason why font-size on the payments tab is different than the other tabs.. This is the blank item.. I have a fix which is much more straightforward. please wait for a moment.. overrideDefaultStyle is not used anywhere, so replaced it with true. To override the default style, instead you could use tableClassNames={css(styles.foo)}.\nThe class sortableTable is used heavily for automated tests so it is not removed yet.. table is no longer required thanks to fillAvailable. Also margin is no longer specified by default. \nThe table as such does not require margin in the same way as the buttons do not. If margin is required, it should be specified as an option; otherwise the margin should be added to the other element which exists around the table.. See: https://github.com/brave/browser-laptop/pull/10265/files#diff-159ff36704e059402c3f17fb8a35a6fcR481. See https://github.com/brave/browser-laptop/pull/10265/files#diff-159ff36704e059402c3f17fb8a35a6fcR482. width: 704px is used on about:preferences#search only so replaced it with sortableTable_searchTab. See above.. This is replaced with https://github.com/brave/browser-laptop/pull/10265/files#diff-159ff36704e059402c3f17fb8a35a6fcR489. The width is no longer specified by default (since it had to be overwritten with !important, which is redundant).. the 3 properties above were replaced with https://github.com/brave/browser-laptop/pull/10265/files#diff-159ff36704e059402c3f17fb8a35a6fcR481.. nice find! There could be more elements which can be optimized with will-change.. elements below this are alphabetized.. braveryPanel__body__advanced__control__fpWrapper is created to wrap the l10n string and the question mark to align them with flex.. Done https://github.com/brave/browser-laptop/pull/10181/commits/bcdfa30d9cc3fb7db30bcc9fd93334043e4225ee. If it takes time to solve this it is ok to tackle this as a follow up. This one, removing the width below, does the trick.. minus value is not so intuitive so it was replaced. this one was removed, applying it to disabledContent__sidebar__header and disabledContent__sidebar__text, to display the logos without opacity.. magic number. we just don't need that. magic numbers. How about removing the carets for now (to avoid the failures) until those updates are confirmed to work properly and the automated tests are added, because those are major updates and they are not tested thoroughly yet? This is the lesson that I learned when I updated Aphrodite to ^1.2.3. Just my two cents.. @cezaraugusto :D. sgtm. if we keep following the development and make sure that failures which might be introduced by future minor updates can be fixed easily, let's change the tildes to carets :-). will this be replaced with <NormalizedButton> later?. ok understood.. 2ch: based on https://github.com/brave/browser-laptop/pull/10357/files#diff-32527ce54ba686da018e00199c2d87c5R54 and https://github.com/brave/browser-laptop/pull/10357/files#diff-32527ce54ba686da018e00199c2d87c5R60. >  is the right take.\nOK I'm changing.. To remove paymentsStyles for now. It is not maintained well and moving the values to global.js makes it the code much more understandable.\nI'm going to re-introduce paymentStyles after files related with about:preferences#payments are polished and the other stuff (which could be related with them) on other files than ones under payment is also converted to normalize the common styles, if any.. If paymentStyles would be left, there would remain only this line as other two will be removed. It does not make much sense to have a const for one style, IMO.. @cezaraugusto this TODO will be revisited.. I see. I'm going to address that on another PR (as it is out of scope of this PR and it'll take some time).. Fixed with https://github.com/brave/browser-laptop/pull/10238/commits/91de03c042d85552b3a072d2569c57a01b1eaa27#diff-b906e73e687bce1b6e897d2b8d80089bR44. Fixed with:\nhttps://github.com/brave/browser-laptop/pull/10238/commits/91de03c042d85552b3a072d2569c57a01b1eaa27#diff-b906e73e687bce1b6e897d2b8d80089bR89\nhttps://github.com/brave/browser-laptop/pull/10238/commits/91de03c042d85552b3a072d2569c57a01b1eaa27#diff-f14732b3ea914a26c2215676e7208907R310. Added rel='noopener' as well:\nhttps://github.com/brave/browser-laptop/pull/10238/commits/91de03c042d85552b3a072d2569c57a01b1eaa27#diff-5d8199641ea1ba12e0394859f7eb0c55R86. Grid rules \ud83e\udd81 . This block is commented out to prevent the most right column from being displayed which otherwise would appear due to the global padding setting.. Removed to fix the row height inconsistency.. ditto.. Removed to fix the padding inconsistency.. ditto.. ditto.. ditto.. Is it OK to remove them all? Was &.disabled for example converted anywhere?. Is it OK to remove this?. ditto.. ok to remove this?. This change affects every switch controls outside of about:preferences too. did you confirm this does not regress something?. > The one that wasn't is the space between the label and the switch element.\nWhy don't we re-add the space for now until we find a better way of handling the padding than we have currently, avoiding the visual regression?\nMy idea:\n1. remove padding from the toggle switch (on the very same reason we did remove the margin from browserButton: the switch as such does not require the margin/padding. It gets required only other elements appear around the switch)\n2. add Xch (0.5 - 1ch) to the label\n3. add margin to SettingList in which the switch and the label are wrapped\nThat is out of scope of this PR so you would not need to address them. That sounds good to me. Would you mind adding TODO comment to the source code about the visual regression? I think we should not tackle the issue with this PR. I am pretty sure that normalizing SwitchControl requires massive tasks (including adding them to about:styles) and it blocks this PR to be merged for a while.\nIf, however, no visual regressions are allowed, overriding with !important will be required.. indeed!. Converted to:\nhttps://github.com/brave/browser-laptop/pull/10454/files#diff-159ff36704e059402c3f17fb8a35a6fcR502\nhttps://github.com/brave/browser-laptop/pull/10454/files#diff-159ff36704e059402c3f17fb8a35a6fcR518. Replaced with dataL10nIdLeft='off' below.. \"The Cause of the Fragments\". Deprecated by https://github.com/brave/browser-laptop/pull/10482/files#diff-37d79abec3d2254f619089a4be374d3fR157. Deprecated by https://github.com/brave/browser-laptop/pull/10482/files#diff-692d90dadf26ea0dbbbfa01ed6e62461L94. Ditto. Ditto. nice one ;-). This prevents the strings inside the dropdowns and the labels from wrapping, without forcing the same width for each column.. This is not called anywhere.. 26px * 1.1 is nearly equal to the pinned tab width where the padding is increased from 2px to 4px.. We don't need those.. Replaced as it is confusing on debugging (we already have icon on styles/tab.js).. redundant. Specifying a style in each file will create style inconsistency quite easily.   . please add a white space after #. Should this be updated as well?\nhttps://github.com/brave/browser-laptop/blob/836d3916f8941deca1aac65ec47aea66eae62b12/package.json#L230-L232\n. See: https://github.com/brave/browser-laptop/commit/98217b37d65f46872cbe154ea5e956abd6c3f895#diff-85bb393e13c9679fa6b5d5ea691bfdeaR27\nWe don't need those as the button does not have margin by default (unless tagged with groupedItem). @srirambv I mean like this:\nlabel_lastUpdateCheckDate=...\nlabel_lastCheckETag=...\nSpecifying a hierarchy with dashes or something more proper would make it easier for us to see the system of the localization strings and enhance it when new ones get added.. @srirambv another example:\n````\naddresses_city=...\naddresses_country=...\n...\ncreditCards_edit=...\ncreditCards_expirationDate=...\n````\nThe hierarchy has not been explicitly specified with a certain rule which we should follow when adding/editing the localization strings. Creating that rule would increase maintainability. . Before rebasing this line had been wrapped with div. It was a regression, so I removed that.. Is this necessary?. ditto.. ditto.. Dialog has this style thanks to https://github.com/brave/browser-laptop/commit/2c3126f6f641ab9762f36dad558580e379667cf9#diff-5d3d90fdb0c3efa6acd09057f2d4b101R85 (messageBox is focused by default).. div has outline: none by default.. divs are aligned vertically by default so I think those are not necessary.. Only this line is added. The others are just grouped below.. This is duping to https://github.com/brave/browser-laptop/pull/10881/files#diff-b79e96c438a5b97dc31f04f68d4817a7R7 on common.less. deprecated thanks to https://github.com/brave/browser-laptop/pull/10881/files#diff-237402632b025505a0517d846e9e32c1R34 on history.js. deprecated thanks to \n- https://github.com/brave/browser-laptop/pull/10881/files#diff-2369573669cb068e3f220a1c4ef7090cR13 on certerror.js\n- https://github.com/brave/browser-laptop/pull/10881/files#diff-103b59b981aa5f02b62b3f712ca69c19R12 on errorPage.js. deprecated with https://github.com/brave/browser-laptop/pull/10881/files#diff-4b50ff14dadc9756719a577a72f520d6R7 on preferences.less. height:100% is required on preferences.js only.. moved from https://github.com/brave/browser-laptop/pull/10881/files#diff-9161cb086bf3eb720aab15d7172f6e4fL1 on bookmarks.less. Removed along with https://github.com/brave/browser-laptop/pull/10881/files#diff-6f6a63435cccded794332a0616b5f0e3L7, in favor of the converted styles below and siteDetails.less, which is more straightforward.. Deprecated with common.less. Deprecated with https://github.com/brave/browser-laptop/pull/10881/files#diff-b79e96c438a5b97dc31f04f68d4817a7R6 on common.less. Added as this is no longer imported on history.less. Removed based on https://github.com/brave/browser-laptop/pull/10881/files#diff-b79e96c438a5b97dc31f04f68d4817a7R7 on common.less. Ditto: on https://github.com/brave/browser-laptop/pull/10881/files#diff-b79e96c438a5b97dc31f04f68d4817a7R6 on common.less. Removed based on https://github.com/brave/browser-laptop/pull/10881/files#diff-b79e96c438a5b97dc31f04f68d4817a7R6 on common.less. Removed as it is required directly on autofill.js See: https://github.com/brave/browser-laptop/pull/10881/files#diff-f3189199f630a8432fae752aa453b2ccR15. Moved to https://github.com/brave/browser-laptop/pull/10881/files#diff-c74077737ab01e5191e480529919c489R24 on bookmarks.js. Moved to\n- https://github.com/brave/browser-laptop/pull/10881/files#diff-491dd03a03308cec37fad2ad0dc7ba67R13 on newprivatetab.js \n- https://github.com/brave/browser-laptop/pull/10881/files#diff-dbb992f7cd2508b46d5cd98e609be5a5R36 on newtab.js. Moved to https://github.com/brave/browser-laptop/pull/10881/files#diff-e3eeb751016b2ce9f8278efce585a461R67 on preferences.js. Deprecated with https://github.com/brave/browser-laptop/pull/10881/files#diff-b79e96c438a5b97dc31f04f68d4817a7R22 on common.less.\nAs common.less is required on all of the about js files, it should not cause a regression.. Deprecated on entry.js with\n- https://github.com/brave/browser-laptop/pull/10881/files#diff-9774044dc3cb63ab522b79039669a42aR17\n- https://github.com/brave/browser-laptop/pull/10881/files#diff-9774044dc3cb63ab522b79039669a42aR18. It is intentional (in terms of l10n). I'm taking a screenshot.. Check the case like this:\nBefore:\n\nAfter:\n\n. Removed as siteDetails* classes are no longer applied.. It will be deprecated with a component like <SiteDetailsPageHeader actions>.. This is deprecated with the flex.. Ditto.. Ditto.. main.less was removed on https://github.com/brave/browser-laptop/pull/10861, not being sure what those specifications have been required for. See: https://github.com/brave/browser-laptop/pull/10861/files#diff-eb0db025dc73e282655968f53c9bfbdfR171. We could discuss it later.. I was going to add a link to our discord channel, which on the second thought seemed too much. If it isn't, I'll add that.. > Not sure if the first line about visiting wiki makes sense at top.\nI'd agree. I'll edit this comment block.. Our Discord community chat is available too. Join us for live discussions: https://discordapp.com/invite/k57tYrS. I did so to ensure that the background for dialog_isNotClickDismiss on https://github.com/brave/browser-laptop/pull/10557/files#diff-5d3d90fdb0c3efa6acd09057f2d4b101R90 does overwrite the one for dialog, which does not exist yet.\nBefore this change, if you set background-color to dialog, sometimes the background-color for dialog_isNotClickDismiss would not be properly cascaded.  . I am not sure if this would be a proper name as we have tab__title_windows below which has bolder font-weight. How about renaming it to tab__title_isDarwin?. We have icon__default* for both styles and iconStyles. I'm wondering if it would be confusing a bit.. would you mind adding blank lines for readability?. Shouldn't it be closeTab__icon_centered?. would you mind renaming this to styles.audioTab__icon following https://github.com/brave/browser-laptop/pull/10691/commits/d69c3f7fe2fc37eaee262cf4bcf9fe4bb259e08d#diff-08a3077ca08d52dfaad29de7ae4d904aR75 or renaming the other?. Would you mind formatting like this? https://github.com/brave/browser-laptop/commit/f6726227778537061d109964b38f67f19801d4ba#diff-bf09ff10e2191a87584e58393f99b728R44. Would you mind converting this into const and adding it to global.js so that we could see the relationship among z-index values?. Is it not 1001 instead of 10001?. would you mind moving this line up?. would you please delete two whitespaces before the brackets?. On theme.js theme.tab.color is defined as #000. Is this change expected?. ~~Shouldn't this be tab__identify_centered ?~~\nnvm I noticed this.props.centralizeTabIcons && styles.tab__content_centered above. Leaving a comment might avoid others from making the same misunderstanding.. ~~Ditto.~~. would you moving this up under tab_forWindows same as https://github.com/brave/browser-laptop/pull/10691/commits/23fcc08cbedecc3a4fbc6a17f56d0a35a23e953b#diff-4f164dab3a38a1443d7ba3288fef641eR315 and https://github.com/brave/browser-laptop/pull/10691/commits/23fcc08cbedecc3a4fbc6a17f56d0a35a23e953b#diff-4f164dab3a38a1443d7ba3288fef641eR316 ?. would you mind moving this under tab_active?. This doesn't follow the BEM strictly; It'll be fixed with #10933. iconOnly rocks \ud83c\udfb8\ud83e\udd18. Creating <FlyoutDialog> to remove commonStyles.flyoutDialog.\neg.\n<Dialog ...>\n  <FlyoutDialog custom={\n    styles.siteInfo,\n    this.props.isBlockedRunInsecureContent && styles.siteInfo_large\n  }>\n  ...\n  </FlyoutDialog>\n</Dialog>\nAlmost done. See: #10977. Confirmed main.less was removed here too \ud83d\udc4d . Confirmed this was addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-6c5463a6f60c16525fb939516ad54125R53\nOn the commit: https://github.com/brave/browser-laptop/commit/d97a56b311bc994f48383dc5c7b0929b0c0bf57a#diff-6c5463a6f60c16525fb939516ad54125R53. Confirmed this was addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-af59f73d2e4394ed5cd93fbab7e1cdc7R92\nOn the commit: https://github.com/brave/browser-laptop/commit/c6947c52b8bbb073cdd257e3e243418e7b4544de#diff-af59f73d2e4394ed5cd93fbab7e1cdc7R92. Confirmed this was addressed on https://github.com/brave/browser-laptop/blob/83864a8769ee10cb2d2d864b19289ba5e229bd34/app/renderer/components/styles/theme.js. Addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-08a3077ca08d52dfaad29de7ae4d904aR76\nOn the commit: https://github.com/brave/browser-laptop/commit/8a1a150a2777d17b58c52895bf08b7b8a2c33c16#diff-08a3077ca08d52dfaad29de7ae4d904aR76. Confirmed this was addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-1a5be0fc07ffeb6eda18603b57e9fce9R65\nOn the commit: https://github.com/brave/browser-laptop/commit/01092fe798c23ecd1c6d61c51c3e74e0bfe8d02b#diff-1a5be0fc07ffeb6eda18603b57e9fce9R65. Confirmed this was addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-d8880b1566bd03fcd4e0b29425a5d473R50\nOn the commit: https://github.com/brave/browser-laptop/commit/049f438503ceab704cd9064b4a6811fea1debfda#diff-d8880b1566bd03fcd4e0b29425a5d473R50. Confirmed this was addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-d8880b1566bd03fcd4e0b29425a5d473R70\nOn the commit: https://github.com/brave/browser-laptop/commit/049f438503ceab704cd9064b4a6811fea1debfda#diff-d8880b1566bd03fcd4e0b29425a5d473R70. Confirmed this was addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-f14732b3ea914a26c2215676e7208907R217\nOn the commit: https://github.com/brave/browser-laptop/commit/f4780d31478ed4f1091a86f1f19f4c983dd82590#diff-f14732b3ea914a26c2215676e7208907R217\n. @cezaraugusto I'm sorry if I'm wrong, but I thought these should be:\nthis.props.isActive && styles.active,\n          this.props.isActive && this.props.themeColor && perPageStyles.themeColor,\n          this.props.isPlayIndicatorBreakpoint && this.props.canPlayAudio && styles.narrowViewPlayIndicator,\nto group them based on this.props.isActive. wdyt?. Confirmed this was fixed on https://github.com/brave/browser-laptop/pull/10691/files#diff-4f164dab3a38a1443d7ba3288fef641eR342\nOn the commit: https://github.com/brave/browser-laptop/commit/94ba1a1557d4646f7e36b69c0f110f59f3b835aa#diff-4f164dab3a38a1443d7ba3288fef641eR331. I think this conversation itself should serve as a comment for who are confused ;-) Let's leave it as it is.. Confirmed this was addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-4f164dab3a38a1443d7ba3288fef641eR394\nOn the commit: https://github.com/brave/browser-laptop/commit/f4780d31478ed4f1091a86f1f19f4c983dd82590#diff-4f164dab3a38a1443d7ba3288fef641eR392. Addressed on https://github.com/brave/browser-laptop/pull/10691/files#diff-4f164dab3a38a1443d7ba3288fef641eR408\nConfirmed on https://github.com/brave/browser-laptop/blame/83864a8769ee10cb2d2d864b19289ba5e229bd34/app/renderer/components/tabs/tab.js#L408. LGTM! \ud83d\udc4d . If you set background: #000 to switchControlText__label and background: #111 to switchControlText_left__label at the same time, we usually get background: #000 instead of the latter, which is what we want. I'd love to prefer readability but we have to assure that the styles are surely cascaded.\nI've noticed that issue for a while and tried another way to set them as follows:\n[css(\n  styles.switchControlText__label,\n  styles.switchControlText_left__label\n)]\nbut it was avoided because Standard complained about that the [ and ] should appear on the very same line.. Please see above, thanks!. nice catch, thanks!. it sounds fair. I will revisit the padding values of sortable table to see which one works most properly.. Still I believe this is a kind of issue on the transitional phase until you would eventually remove cx by creating components in a way which @petemill has demonstrated.\nWe could create an issue to track the work.\nIt seems to me that replacing customLeftTextClassName with this.props.custom as you @cezaraugusto did on browserButton should work. I took that way for commonForm on #10978, e.g. <CommonForm custom={styles.commonForm_small}>, so <SwitchLabel custom={styles.switchControlText_left__label}> or <SwitchLabel left>.. Wondering if we would create components like <AppIcon unlock custom={styles.secureIcon__fa} />  to replace span and fa classes with cx with normalized components.\n5891. This change lets the test passed locally, while the test fails on Travis:\nhttps://travis-ci.org/brave/browser-laptop/jobs/277154849#L3775\n1) Syncing bookmarks from an existing profile update bookmark, moving it into the folder:\n     Error: element (\".contextMenu\") still not visible after 10000ms\n      at elements(\".contextMenu\") - isVisible.js:54:17\n      at isVisible(\".contextMenu\") - waitForVisible.js:73:22\nnpm run test -- --grep='Syncing bookmarks from an existing profile update bookmark, moving it into the folder'. @cezaraugusto @bsclifton would you mind helping me to fix the issue? thanks!. It is ok to merge this first.. Just in case please remove or edit https://github.com/NejcZdovc/browser-laptop/blob/73f9795019a37e5b94cd41eb42cc12857353ccc4/app/renderer/components/preferences/payment/bitcoinDashboard.js#L463-L501 if modalOverlay__coinbaseOverlay is no longer used.. fyi this change affects every error page so let's not forget to do QA for the pages as well.. Deprecated with:\n  - https://github.com/brave/browser-laptop/pull/10881/files#diff-c74077737ab01e5191e480529919c489R28 on bookmarks.js\n  - https://github.com/brave/browser-laptop/pull/10881/files#diff-83a9c31b7f8db399cce791535a519b5fR25 on brave.js\n  - https://github.com/brave/browser-laptop/pull/10881/files#diff-237402632b025505a0517d846e9e32c1R34 on history.js\n  - https://github.com/brave/browser-laptop/pull/10881/files#diff-9774044dc3cb63ab522b79039669a42aR18 on webtorrent/entry.js. There are normal <button> still left, which will be replaced with BrowserButton :-) . I don't think so as this does not change the color of the number block.. I have a fix for that issue. Is it fine to commit it to this PR?\n\nI could save it for another PR. . Added :-) https://github.com/brave/browser-laptop/pull/10951/commits/8615b5fb832965d72cb4072ecc420dc47fb04d9e. I've been not sure if this was a typo: https://github.com/brave/browser-laptop/pull/9690#discussion_r123872847. how about styles.icon_currency and styles.icon_currency_eth?. how about styles.icon_currency_btc like above? \nalso styles.icon_curerncy_ltc and styles.icon_currency_bat below.. ~~I'd pick styles.wizard and styles.wizard__address to shrink the length (because it should be already clear what kind of wizard it is, from the name addFundsWizardAddress).~~ We could normalize the classnames later.. ~~Ditto. I would pick styles.footer to shrink the classname.~~. As long as there is not another common element, why wouldn't you change this into styles.addFundsFooter__start__uphold_logo?. Ditto. We could replace it with styles.addFundsFooter__start__uphold_text. wouldn't this change cause a visual regression?. (TODO: we would remove customTitleClassesStr etc. later to avoid cx which sometimes prevents properties from cascading properly). redundant. Is this not be applied here? https://github.com/brave/browser-laptop/pull/7164#discussion_r100586892. styles.ethIcon -> styles.addFundsWizardMain__currencyIcon_eth. styles.btcIcon -> styles.addFundsWizardMain__currencyIcon_btc. styles.ltcIcon -> styles.addFundsWizardMain__currencyIcon_ltc. styles.batIcon -> styles.addFundsWizardMain__currencyIcon_bat. thanks for checking :-). I see. the file will eventually be removed so not a great issue anyway.. gh-md-toc seems to ignore backslashes so they were re-added manually.. Let's not forget to remove what becomes obsolete.. We could create a common component to avoid style inconsistency, like PassPhraseContainer.. not really. I just thought I have not seen p many times under app/renderer/components (we have a lot of div and span instead of p) and standardizing would help us to keep consistency.\nIf it should be left as p, I'll revert them and that's no problem for me :-). I remember I used a screen ruler and adding it made it look nicer a bit.. it's a magic number. It should work for now on 0.19 and 0.20. It'll be removed since 0.21 so an exact calculation is not needed as far as it works.. please don't forget to dedupe the animation properties later. styles.enabledContent__loader, inTranstion && styles.enabledContent__loader_show. please change elements' className accordingly.. styles.walletBar -> styles.enabledContent__walletBar. styles.walletBar -> styles.enabledContent__walletBar. See L175..  ````\nloader__line: {\n     display: 'inline-block',\n     width: '15px',\n     height: '15px',\n     borderRadius: '15px',\n     animationName: [loaderAnimation],\n     animationDuration: '.6s',\n     animationIterationCount: 'infinite'\n  },\nloader__line_1: {\n     backgroundColor: '#FF5000',\n     animationDelay: '.1s'\n}\n````\nand so on. enabledConent__walletBar__title. please change every element under enabledContent__walletBar, thanks. See L175.. This change requires that: https://github.com/brave/browser-laptop/pull/11395/files#diff-5d8199641ea1ba12e0394859f7eb0c55R175. Sweet thanks!. Would you mind combining these two lines into [css(styles.tabIcon, this.props.symbolContent && styles.tabIcon_hasSymbol)]: true, since cx basically does what this document describes: https://github.com/Khan/aphrodite#dont-do-this?\n\nWhy does it matter? Although the second one will produce a valid class name, it cannot guarantee that the bar styles will override the foo ones.. Should it not be styles.icon_favicon_light?. maybe we'd create a bit more complicated example on https://github.com/brave/browser-laptop/blob/master/docs/style.md#defining-our-blocks-elements-and-modifiers ;-). would you please add a blank line above this? https://github.com/brave/browser-laptop/blob/master/docs/style.md#always-add-space-between-styles-objects. The other names look good to me :-). ad-block@3.0.5 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L3. async@2.5.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L58. bat-balance@1.0.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L325. bat-client@1.0.5 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L375. bat-publisher@1.0.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L772. bignumber.js@4.0.4 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L794. clipboard-copy@1.2.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L827. compare-versions@3.1.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L827. electron-localshortcut@0.6.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1386. emoji-regex@6.5.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1457. font-awesome@4.7.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1541. fs-extra@2.1.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1566. immutable@3.8.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1736. immutablediff@0.4.4 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1737. l20n@3.5.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1849. lru-cache@1.1.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1915. niceware@1.0.4 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1966. parse-torrent@5.8.3 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2208. prettier-bytes@1.0.4 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2240. prop-types@15.6.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2241. punycode@2.1.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2258. react@15.6.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2266. react-dnd@2.5.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2279. react-dnd-html5-backend@2.5.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2294. react-dom@15.6.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2296. string.prototype.endswith@0.2.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2730. string.prototype.startswith@0.2.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2731. tracking-protection@1.1.6 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2738. To apply the same range specification.. webtorrent-remote@2.0.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L3678. babel@6.23.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L60. babel-core@6.26.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L61. babel-loader@7.1.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L117. babel-plugin-transform-react-constant-elements@6.23.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L133. babel-plugin-transform-react-inline-elements@6.22.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L135. babel-polyfill@6.26.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L137. babel-preset-env@1.6.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L137. babel-preset-react@6.24.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L289. babel-register@6.26.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L310. babel-runtime@6.26.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L321. base64-js@1.2.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L324. chai@3.5.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L821. chai-as-promised@5.3.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L826. co-mocha@1.2.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L828. cross-env@3.2.4 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L832. electron-builder@17.10.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1029. electron-chromedriver@1.7.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1276. enzyme@2.9.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1459. git-rev-sync@1.9.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1569. gulp@3.9.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1577. istanbul@1.1.0-alpha.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1741. joi@10.6.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1791. json-loader@0.5.7 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1846. jsonfile@2.4.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1847. less@2.7.2 tonhttps://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1850. less-loader@2.2.3 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1861. level@1.7.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1867. mkdirp@0.5.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1916. mocha@2.5.3 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1918. mockery@2.1.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1936. muon-winstaller@2.5.5 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1938. ncp@2.0.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1965. node-gyp@3.6.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L1970. node-static@0.7.10 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2152. nsp@2.8.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2158. pre-push@0.1.1 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2238. react-addons-perf@15.4.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2275. react-addons-test-utils@15.6.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2278. react-test-renderer@15.6.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2301. request@2.82.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2304. sinon@1.17.7 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2365. uglifyjs-webpack-plugin@1.0.0-beta.2 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2743. uuid@3.1.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L2873. webpack-notifier@1.5.0 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L3646. xml2js@0.4.19 on https://gist.github.com/luixxiul/1cf8689da05e509d45176588730e5a16#file-npm-txt-L3994. @petemill do you think this applies to this case?. Agreed. I'll add some comment to about:styles#commonForm in the follow up\n\n-> Done with https://github.com/brave/browser-laptop/pull/11522/files#diff-423dee85eaa4c9b5825e4a8a25794922R29 on #11522. Before doing that task, let's open an issue to edit this section on docs/style.md to achieve a common understanding. \nopened here -> https://github.com/brave/browser-laptop/issues/11540. Ditto https://github.com/brave/browser-laptop/issues/11540. These values are set by default with BrowserButton (except the margin).. set by size.. Locally I've replaced al CSS and l10n selectors (#8735) and that will be addressed with / after it. what I'm saying is that we will replace the variables all together.. I opened an issue for that task: https://github.com/brave/browser-laptop/issues/11574. Can this way be applied to https://github.com/brave/browser-laptop/issues/9059 ?. It'll be renamed into tabPages (Wrap is not required with BEM naming). @cezaraugusto Was this abandoned? :-p  . nit: Invalid (with )?. The link could be updated tohttps://community.brave.com/c/common-issues`. Currently the FAQ is a wiki and can be edited anyone, while on the community the topics can be edited only by employees and a couple of community members :-). It looks the sync tests fail on master as well.. On theme.js, they are set like this:\n````\n    tabPage: {\n      backgroundColor: '#fff',\n      borderColor: '#bbb',\n  hover: {\n    borderColor: globalStyles.color.braveOrange\n  },\n\n  active: {\n    backgroundColor: globalStyles.color.braveOrange,\n\n    hover: {\n      borderColor: globalStyles.color.braveOrange\n    }\n  }\n\n````\nSo they should be same by default. Is it OK?. Wow nice find! I addressed that here: https://github.com/brave/browser-laptop/pull/11530/commits/0582859ef29a0c5c0589b972fff17a31545543cf#diff-b39b5cd9b6e26e313c7387108e17891cR198. nit: let's keep the blank lines above to make those comments meaningful and understandable at a first glance :-). This actually has been a bug (it should have been .frameWrapper.isActive). Obviously we need a nice calculation here ... \ud83d\ude04 . FYI there is a component for section titles (please see: about:styles#sectionTitle). That sounds rational. As I am not sure how to implement that, would you mind adding a commit for that? thanks \ud83d\ude04 . These values are taken care of by <BrowserButton>.. https://github.com/brave/browser-laptop/pull/12067/files#diff-49b40c07650f6f7cedce3f608d031b54L237. Should this be removed for Linux? The test looks to be failing due to this.\nhttps://travis-ci.org/brave/browser-laptop/jobs/303759640#L5789\n3) Bravery Panel Adblock stats without iframe tests blocking access to fingerprinting methods on iframe.contentWindow:\n     Promise was rejected with the following reason: timeout\n  Error. I am not sure why this is needed but this line fixes the test failure.. @user512 would you mind moving this.props.customStyleTextRight under this line as it is expected to override the inherited properties? . ",
    "bridiver": "the bug is that the random text should only be associated with the tab it was entered in, but currently it is associated with any tab that has the same url\n. Switches urls on tab change now, but doesn't preserve the text on return. That looks like a bigger change and is probably not a high priority so I'm going to move it to asana as a feature and close this bug. Thanks!\n. @bradleyrichter should verify desired behavior as it is not consistent across other browsers\n. Yea, adding the restore to onBlur broke the url suggestions, but if I remove it then the url doesn't restore when the urlBar loses focus. I'll see what I can figure out\n. If this is a problem I'm not sure that removing the event listeners is the right fix. They should only be retained if something is holding a reference to the webview\n. oops, yep. Sorry\n. @bbondy \n. cmd+shift+J works to toggle on and off, but I'm not sure why the menu accelerator wouldn't work. Seems to work fine for other \"focusedWindow\" shortcuts\n. yea, I bet it gets unregistered when the window re-renders and the shortcut doesn't make it back in\n. the other shortcuts are registered in both places\n. Oh I see now, the problem is when the dev tools opens up in its own window. CMD-W is also an issue there and causes and error\n. this ended up being much more complicated than it seemed, but I think I can fix it using the devtools-focused event\n. actually it looks like it will require a patch to electron. This is also broken in the Atom Editor\n. yea, I'm just going to fix the crash for cmd-w\n. I think this should be enough to get it working https://github.com/atom/electron/issues/3783\n. might be a little tricky to handle because there can be multiple dev windows open for the same window and I don't think we can currently tell which one has focus\n. we could use this:\n@webContents.on 'devtools-focused', => @emit 'devtools-focused'\n  @webContents.on 'devtools-opened', => @emit 'devtools-opened'\n  @webContents.on 'devtools-closed', => @emit 'devtools-closed'\n. This is a slightly different. The empty tab doesn't reload, the entire app window reloads. It's definitely not the behavior we want.\n. Possibly. I noticed this after the fact, but didn't check to see if it was fixed by that change or something before it.\n. #99 \n. I didn't see anything being blocked\n. it looks like the problem is window.opener. There are some hints on how we might work around it here:\nhttps://github.com/atom/electron/issues/1865\n. we don't want to pull this in until everything is ready on the cdn side\n. any time\n. Probably. I had to switch to dev locally to get them to pass, but that probably broke CI. Any idea why test would bring up an older version of the browser (old tabs, etc..)?\n. That works, but really slows down the test run time. Probably better to only run it when there are changes.\n. --watchmaybe ?\n. surprisingly killing the npm run watch kills the background process too so we can just combine the two\n. passing locally and on ci now\n. split it out, but now the ci build is failing\n. I think it probably makes sense too, but trying to think of some other possible options to consider.\nMaybe an appState in the main process and a windowState for each window?\n. Do you have any data on the performance of ipc vs local callbacks? \n. components could no longer access the read only view it has of appStore - that's probably a good thing\n. any performance issues on the main process will affect the entire app\n. is there anything it might do that would block for noticeable periods of time?\n. That's along the lines of what I was thinking with the app/window store. Some things should be shared across all windows like pinned tabs and probably all the open tabs from all windows (so we could implement something like a search across all open tabs from the awesome bar). It seems like the low-level component state (focused, etc..) could stay in the window and the higher level app state could move to the main process \n. so roughly speaking the main process would handle down to the frame level (including current url) and then the window would take over\n. maybe route to local dispatcher vs ipc at the action level?\n. maybe do it in two steps? First refactor the frame properties into the main process. If we don't like the result we can move the rest?\n. I was thinking that the frame keys and locations should also go in app state. Then it can easily manage history, etc... and we can share open tab information across windows\n. {\n  activeWindowKey: number,\n    windows: [{\n      key: number\n  }],\n  sites: [{\n    location: string,\n    title: string,\n    tags: [string], // empty, 'bookmark', or 'reader'\n    lastAccessed: datetime,\n  }],\n  visits: [{\n    location: string,\n    startTime: datetime\n    endTime: datetime\n  }],\n  frames: [{\n    location: string, // page url\n    src: string, // what the iframe src should be\n    title: string, // page title\n    key: number,\n    isPrivate: boolean, // private browsing tab\n  }],\n  searchDetail: {\n    searchURL: string, // with replacement var in string: {searchTerms}\n    autocompleteURL: string, // ditto re: {searchTerms}\n  }\n}\nthis would allow us to do a search across open tabs from the awesome bar or some other multi-window tab search ui\n. not sure where isPrivate should go, depends on where it gets used\n. or maybe in app state it should be called \"tabs\" instead of frames\n. window state\n{\n  key: number, // windowKey\n  frames: [{\n    audioMuted: boolean, // frame is muted\n    audioPlaybackActive: boolean, // frame is playing audio\n    canGoBack: boolean,\n    canGoForward: boolean,\n    icon: string, // url to favicon\n    thumbnail: string, // url to thumbnail\n    key: number,\n    src: string, // what the iframe src should be\n    loading: boolean,\n    isPrivate: boolean, // private browsing tab\n    themeColor: string, // css compatible color string\n    closedAtIndex: number, // Index the frame was last closed at, cleared unless the frame is inside of closedFrames\n    activeShortcut: string, // Set by the application store when the component should react to a shortcut\n    security: {\n      isSecure: boolean, // is using https\n      isExtendedValidation: boolean, // is using https ev\n    },\n    contextMenuDetail: {...},\n    modalPromptDetail: {...},\n    basicAuthDetail: {...}\n    unloaded: boolean, // true if the tab is unloaded\n  }],\n  closedFrames: [], // holds the same type of frame objects as above\n  ui: {\n    tabs: {\n      activeDraggedTab: object,\n      tabPageIndex: number, // Index of the current tab page\n    },\n    navbar: {\n      focused: boolean, // whether the navbar is focused\n      urlbar: {\n        location: string, // the string displayed in the urlbar\n        urlPreview: string,\n        suggestions: {\n          selectedIndex: number, // index of the item in focus\n          searchResults: array,\n          suggestionList: object,\n        },\n        focused: boolean, // whether the urlbar is focused\n        active: boolean, // whether the user is typing in the urlbar\n        autoselected: boolean, // is the urlbar text autoselected\n      }\n    }\n  },\n  searchDetail: {\n    searchURL: string, // with replacement var in string: {searchTerms}\n    autocompleteURL: string, // ditto re: {searchTerms}\n  }\n}\napp state\n{\n  activeWindowKey: number,\n  windows: [{\n    key: number,\n    activeFrameKey: number,\n    tabs: [{\n      location: string, // page url\n      title: string, // page title\n      frameKey: number\n    }]\n  }],\n  pinnedTabs: [{\n    location: string, // page url\n    title: string, // page title\n    frameKey: number\n  }],\n  closedWindows: [], // holds the same type of window objects as above\n  sites: [{\n    location: string,\n    title: string,\n    tags: [string], // empty, 'bookmark', or 'reader'\n    lastAccessed: datetime,\n  }],\n  visits: [{\n    location: string,\n    startTime: datetime\n    endTime: datetime\n  }]\n}\nframeKey should probably be unique across windows to enable dragging in and out of the current window\n. There will be a slight change to the window state because the navbar is moving inside the frame to make it easier to preserve input/awesome bar state when switching tabs, but the split between app/window is still the same\n. sounds like a good plan. I should have a pull request ready soon for moving the navbar into frames\n. may want to create a new issue for this, but one idea for handling global state that is too large to send on state updates is to send a timestamp/version of the data in the state and let the windows load it from async storage \nsites: version,\nbookmarks: version,\netc..\n. https://github.com/brave/browser-electron/issues/77\n. they need the other changes I am working on before they will pass\n. ok, the tests are enabled and working and this is ready to merge if it looks ok @bbondy \n. Just pull it up on demand? That makes sense as well.\n. Would that still come as part of the app state or separately? We could combine the two ideas. The app state could provide version info for what will effectively be window state cache invalidation. The window can still make queries and keep the information in the window state, but it will refresh the data if it sees a more recent version\n. no problem, I'll add a test for it and get it working\n. @bbondy \n. I think the work I'm doing in electron right now might help out with this\n. @mojoaxel we don't need electron to implement prompt because we have our own fork that has diverged significantly. It wouldn't be difficult to implement prompt. isn't this done?\n. there is also an allowpopups setting in webview, but it's set to false and still allows them\n. related https://app.asana.com/0/41575558488236/45343396929071\n. it looks like disposition is supposed to handle this, but it always comes back with new-window\n. @bbondy \n. also still need to update the click tests to actually click instead of just window.open\n. sort of fixes #49 \nsee #98 for details\n. Doesn't seem to have changed. Still seems weird to me that they stay the same size until you get 6 and then they resize to fit the full window\n. @bradleyrichter and I can up with a formula to keep them from growing too large or too small, we just need to implement it. Maybe he can post the details here?\n. @bradleyrichter and I came up with a good sizing algorithm, but I don't think it ever got implemented. Do you still have the notes? Mentioned above but there was no update.\n. I'm not sure if @psimyn will always resize correctly because it doesn't appear to leave space for an extra tab at the end when you have less than the maximum number of tabs in a page. We came up with a really clean and simple way to do it, but I'd rather not try to reconstruct it if we still have it somewhere\n. I know we came up with an actual algorithm for it. Is that all you could find?\n. I guess it does look like it handles the last tab space, but there was an issue with both very small windows and very large windows. We tried a similar simple sizing algorithm and it didn't handle those cases very well. \n. the large window is probably not as much of an issue with a default of 10 tabs\n. Can you check again? This is working for me\n. accidental submit, can't delete for some reason\n. @bbondy \n. @bbondy \n. I believe this is an issue between calling setLocation in urlbar and the load-commit setLocation call in load-commit. \n\n. Maybe it has something to do with screen resolution? Are you just running on the laptop monitor or something else?\n. looks like air screen resolution isn't high enough to support that. I'll change the resize\n. https://github.com/brave/browser-electron/commit/85d053de6c96217d62b7492c2cf5384ce0265bf5\n. That is coming from Sonobi, I'll check with Jimmy\n. Jimmy said he extended the campaigns so reopen if you see them again\n. partially fixed by https://github.com/brave/electron/pull/2\nstill need to go back and remove the browserproxy stuff\n. https://github.com/brave/electron/pull/3\n. it doesn't load in the other window for me, at least not completely. Appears to be missing images, css, etc.. also seems to trigger this when closing\nUncaught Exception:\nError: Object has been destroyed\n    at Error (native)\n    at Function.<anonymous> (/Users/bjohnson/Documents/brave/browser-electron/app/filtering.js:32:12)\n. apple.com also works for me, but facebook.com fails to load completely\n. I still see an issue with Facebook\nAfter pinning tab\n\nPinned tab in new window\n\n. fixed by https://github.com/brave/browser-laptop/commit/6e307bc745e308dcc70c66df068ec0d76bc12daf\n. need to fix this, have something in here that doesn't belong\n. fixed\n. well, the issue was to create a test for it and looks like there still isn't one\n. Is there a way to replicate it?\n. I looked through the electron js code and couldn't really see any reason for the error. Was it the first time you started with a new update?\n. forgot to reference this bug, but should be fixed by https://github.com/brave/browser-laptop/commit/5b61a682cbedc9ff1cddd006b8f1492c370026ce\n. we should prune the alexa list for other reasons, but don't the autocomplete suggestions come from Google?\ndefaultOpenSearchPath: './content/search/google.xml',\n. yea, this is fixed. Closing.\n. @bbondy \n. @bbondy \n. These instructions are primarily targeted at developers who want to contribute so I'm not sure if we'd want to change that. @bbondy ?\n. great addition, thanks!\n. great addition, thanks!\n. Thanks for the PR! Is there a test we can add for this to prevent regressions? \n. It looks to me like the props are not updating in main.js when the activeFrameKey changes. I think the issue may be in shouldComponentUpdate.\n. The root cause of this is a call to set the active frame after the frame is closed. Should have a fix for it very soon. Thanks for your help! The steps to replicate the issue you provided were critical to fixing it.\n. No, still working on the fix for this issue. The other PR was just a side issue that I initially thought was related\n. actually I guess we can close it because I'll have a new PR for it\n. Closing this and I'll reference it from my PR. Thanks again @jiangyang !\n. I was initially skeptical, but after more investigation this does look like the right solution. It doesn't appear to need event.nativeEvent.stopImmediatePropagation() though. I'm putting together a test case for it now. If you want to update the PR to remove the native event stop I'll get this merged and add the test separately.\n. closed by #232 \n. ha, sorry, beat you to it but your commit is in there\n. @bbondy \n. ```\nfunction fromJSDefault(json) {\n  if (Array.isArray(json)) {\n    return IndexedSeq(json).map(fromJSDefault).toList();\n  }\n  if (isPlainObj(json)) {\n    return KeyedSeq(json).map(fromJSDefault).toMap();\n  }\n  return json;\n}\nfunction isPlainObj(value) {\n  return value && (value.constructor === Object || value.constructor === undefined);\n}\n```\nbasically just a passthrough if it's already Immutable\n. It's something we should probably take a closer look at later and see what percentage of components actually require update on average. If the percentage is very high then it might makes sense to drop the check entirely and return true like the default. Need to compare the extra render time to the overhead of making all the checks\n. Agreed in principle, but that will take some tuning of the properties we send to each component. Right now we pass around a lot of extra information that ends up triggering renders for components when they are not strictly necessary. Just think we should get some empirical data to make sure our assumptions are correct.\n. most of the safe browsing code is in src/chrome so I'm not sure if trying to pull it into Electron will be any better that doing something in the browser. The code in src/chrome is generally pretty tightly coupled to the Chrome browser implementation and we'd likely have to rewrite significant portions of it.\n. incorrect run-script docs are updated https://github.com/brave/browser-laptop/commit/f33f2eeeec16c525c470346a67fb6f147aa51074\nFeel free to re-open if you have trouble when running npm run watch\n. Ha, details... I have re-opened it for you :) I'm shooting in the dark a little here because I haven't built it on Linux, but as a first step I would try updating to node v5+ (specified in installation step 3 on the README, but should probably be more prominent). Do you have any additional log output?\n. do you have node-gyp installed globally?\n. What Linux distribution/version are you using? I'll see if I can replicate\n. Yea, I'm going to go ahead and close. We've made a lot of updates since Jan 26 and we test on Ubuntu. \n. nice catch, thanks!\n. This works for me on OSX with tip browser and electron. Maybe another change fixed it or Google changed something on their end? Is anyone else still seeing an error?\n. I prefer the less round tabs as well, but also agree about keeping some distinct design elements. This design does give me an interesting idea: collapsing the entire tab navigation section leaving only the navbar. To avoid confusing new users it should probably be always open by default, but it could have \"auto\" mode like the OS X dock and slide in/out of view when changing tabs by keyboard shortcut or navbar mouseover. An always closed mode would also make a lot of sense along with some of the alternative tab navigation ideas we've talked about.\n. Thanks for the PR! There is a related issue for links that I just posted #248 which will likely require some refactoring of the context menus, but this may be ok for now to support the simple case. What do you think @bbondy ?\n. @PFCKrutonium No, the webextensions are Mozilla's effort to support Chrome extensions, but we will not support FF only extensions\n. well, it's not really practical for Electron to have 100% coverage because a lot of API functionality depends on the specific app you have implemented. For instance: browser action popup windows can be triggered with generic functionality in Electron, but it's impossible to know how an app will actually want to display them. They are interested in pulling in some extension functionality and there is an open ticket for it, but I'm not sure how much of it we will be able to upstream. I'm doing my best to make the implementations as generic as possible, but there's no guarantee everything will make it to upstream. I'm also using the chromium code where possible (background pages, chrome.runtime and a few others). \n. also, it's entirely up to the app whether or not they want to expose the ability to install extensions. I even left in checks that allow you to build electron with extensions disabled. So far we have not exposed the ability to install user extensions because the extension support is limited and we haven't implemented all the permission checks necessary to ensure the safety of unknown extensions\n. @nickschurch I was not able to find an \"official\" keepass extension for Chrome. There appear several extensions that support it to some degree, but I think it will likely have to wait until we have full extension support\n. we have partial extension support right now and we're working towards full support. We won't have full support in 1.0, but we are hoping to add more extensions based on popularity. Without full chrome.* api support we really need to test each one right now\n. actually that's a bug, 1Password should be disabled on Linux because they don't have a linux client app. Lastpass should work, but it's currently missing a few options and is only accessible through the right-click context menu. You will need to update to 0.11 for Lastpass\n. right now it really depends on which chrome apis you are using. We don't support all of them yet, but we are working on filling in the gaps. I believe @jonathansampson is working on a complete list of our current api support. Ideally you won't have to do anything to port it over\n. what release is this scheduled for?\n. sure\n. I should be able to get to it today when I finish the updating electron to 1.2.2\n. support in electron added here: https://github.com/brave/electron/commit/2edb333e376b464d3cc7e4ec29a771f3067929c6\n. The srcdoc is leftover from the OIP stuff when only an image and click url were going to be returned to browser in json format. It will be removed before the release, but we can prioritize the change to alleviate any concerns that people have. We'll either use ESI or a VCL synthetic response to generate the iframe content instead of including it in the browser code with srcdoc and the deployment will have to be coordinated with ios\n. this would apply to ios as well\n. Sonobi has made the updates on their side to send through \"clean\" ads that are just html with no extra JS. This will allow us to simplify things on our end as well and a new URL will be coming next week which will replace the srcdoc with a src link. I believe it will just be a \"switch\" passed in the query string. The change from srcdoc to src will make the iframe 3rd-party by default, but we should keep the sandbox attribute and remove allow-scripts to make it even more secure\n. If we continue to use srcdoc as discussed on Slack we will have to go back to the method of loading the URL separately and inserting the response content vs the current method of just putting the url in the script src of the static html snippet. That's good long-term because we want to load them separately, but does it cause any short-term problems?\n. @garvankeeley and @SergeyZhukovsky we discussed using a hidden webview or phantomjs-type process on the laptop browser to load the ad content and execute any JS that is used to build the DOM (ads commonly include document.write calls and I'm not sure if it will be practical to restrict that) and then pass the content to the iframe. Does that sound practical on ios and android or are we going to run into platform limitations?\n. several reasons:\n1. It may be helpful to have something that is not connected to ad blocking so we don't have to worry about conflicts between the ad block list and the replacement ads we deliver\n2. We want to download the ads as far ahead of time as practical and maintain a small, short-lived cache. We often know what ad slots will be on the requested page so if we don't have any cached ads we can start loading them in parallel with the page (just the tag, not the creative. We don't want to interfere with bandwidth for page loading) We will also sometimes have to request more ads than we need to deal with user downvote preferences without exposing those to the network\n3. We may want to remove parts of the rendered ad tag because we won't always be able to get curated tags with all extra JS removed.\nOnly the last one requires something that can generate html from the returned content and there are other ways we could do this if that turns out to be a  problem for the platform or for other reasons.\nThe process could potentially go something like this:\n1. Request ad tag\n2. Generated HTML from any returned JS without allowing any requests\n3. Strip out remaining JS code\n4. At display time download the creative and display from cache (to avoid blocking issues) in the iframe\nBut there are other ways to do it as well.\n. Brave requires node v5.x. I'll update the readme to make that more explicit\n. can you post a gist with the complete log output?\n. We can keep track of the disposition to decide which ones to restore\n. Thanks for the report! There are some known issues as mentioned in #312 and we will add this to the list of sites we are tracking for display issues\n. I see it in the leaderboard at the top, but not in the box at the bottom. It most likely depends on the source of the ad that would have been displayed. Slashdot also re-replaces some ads. I'll look to see what they are doing.\n. Slashdot has something similar when they are serving \"native\" ads. If the ads are direct sold or come from a trusted source they can placed in a same-origin iframe that has access to the parent DOM. In this case the ad creates a hidden div in the parent body and a script right after iframe looks for that div. If it doesn't exist, the div around the ad is replaced and you get the image above. \n. We don't want to deal with these on a case-by-case basis, but we are working on some ideas for a general solution to the problem. We could potentially tie into the javascript DOM manipulation functions and actively prevent manipulation of detected ad slots\n. We could also potentially use mutation observers to effectively freeze portions of the DOM by automatically undoing any changes\nhttps://addyosmani.com/blog/mutation-observers/\n. Actually I think there are two issues: \n1. We always open the new tab at the end, but Safari and Chrome open it next to the tab you are currently on which I think is better\n2. The lack of indication could still happen if you cmd-click from the last tab in a set. Maybe show some kind of loading indication on the tab page button?\n. Actually I think there are two issues: \n1. We always open the new tab at the end, but Safari and Chrome open it next to the tab you are currently on which I think is better\n2. The lack of indication could still happen if you cmd-click from the last tab in a set. Maybe show some kind of loading indication on the tab page button?\n. was there a change to fix this?. Thanks for pointing this out @xjru . Are you seeing this running in dev mode or from a release build? We are working on improvements to the rendering speed in general.\n. Ok. I see it on dev as well, but wasn't sure if it was also slow in the release builds.\n. Cookie based auth through popup windows works in all cases that I have seen (we added support to Electron for allowing popups with user gesture), but http auth is a known issue that we haven't looked into yet. Electron does not support \"prompt\" which is likely part of the problem, but there may be other changes necessary to support this. HTTP auth is not very common anymore, but we definitely want to support it. @bbondy may have more info on prioritization for this. Pull requests are always welcome of course and we are using our own fork of electron at https://github.com/brave/electron if anyone wants to take a look. \n. We currently don't have plans to support Flash, but a \"mobile\" view that will trigger many sites to display an HTML5 compatible version of the site targeted towards ios is on the roadmap. If there is enough demand we will revisit the decision, but Flash carries a lot of baggage with it even through PPAPI. So far I haven't personally come across anything I really cared about that didn't have a non-flash alternative, but I know there are some out there and at this point it's a question of how many sites/people it affects. I'll leave this issue open to act as a \"poll\" for now.\n. Can you provide an example from YouTube?\n. That plays for me on Brave. What do you see on this page https://www.youtube.com/html5 ?\n. I do understand your point about Flash and I realize that there are sites that won't work, but some sites are more important than others.\n. Great! We are interested in reports of popular sites that require Flash so please continue to report any that you find and we will try to address them.\n. Netflix has HTML5 support for Safari, but it does not appear to work on Brave right now. \nhttps://github.com/brave/browser-laptop/issues/468\n. Not sure about twitch.tv, but anything that plays on mobile Safari should work on Brave at least for SD content (HD has DRM issues) when jwplayer is added\n. Netflix works on Safari 9+ without any Flash/Silverlight. Might be a better option for ua spoofing because I think Netflix on ios sends you to their app.\n. Verified that Netflix sends you to a \"get the free app\" page for ios\n. Hmmm... looks like we may need Widevine then. There is already support in Electron for it and according to http://www.widevine.com there are no licensing fees\n. I don't have a spotify account to test, but there appears to be an html5 version http://blog.72lions.com/projects/2014/12/8/spotify-web-player\nhttp://play.spotify.com/\n. @Spammie did you try http://play.spotify.com instead of the regular home page? There seems to be a lot of conflicting information and the actual status of an html5 version is unclear\n. slashdot tab is active, but the color scheme makes it appear as though the feedly tab is active\n. in this case wouldn't that make the problem worse? The problem is that the inactive tab matches the active page background. I think it needs some other way to delineate the boundary between the inactive tabs and the content\n. Yea, but I think the border needs some tweaking to make the tabs look like they are behind the content instead of in front of it.\n. there are some other border options that should produce the desired effect\n. I think you might be misunderstanding our position @osworx. We are not currently supporting 32bit, but that does not mean we will never support 32bit. These are still dev releases and 32bit support is not a priority at the moment. In the meantime we would be more than happy to look at any pull requests for 32bit build/packaging support :)\n. if that's the issue this may fix itself when we remove node because that code won't run anymore\n. I'm looking at this right now. We made changes to Electron to make window.opener work correctly and this is likely related. I think another change I have been working on will likely fix this.\n. Hard to tell from the windows task manager, but since there are no urls below it I'm assuming that's the main process. We just took care of a fairly large memory issue and that fix will be in the next release. I'm currently tracking down a few more smaller issues.\n. There have been a lot of updates since this ticket was opened and I'm going to close it with https://github.com/brave/browser-laptop/issues/3314 \nPlease open a new issue if you see problems after the next release\n. Thanks for submitting the issue! What OS and Brave browser version are you using?\n. Is this a dup? I don't have a good way to test it right now. \n. Not a dupe. This is still broken with https://github.com/brave/electron/pull/7\n. @bbondy did you try desktop safari? It works for me and I don't have any plugins\n. Thanks @MegaUber! I think the issue around Widevine is distribution. I believe it works if you already have it installed (with Chrome), but if not I think it has to be manually installed right now. I know Widevine is free to use, but we need to be sure that we won't be liable for distribution license fees (which can likely be avoided by downloading on install vs bundling). Do you want to submit a PR?\n. there was some concern about licensing fees for distribution, but it appears that widevine is free to use without fees\n. there are some docs for electron https://github.com/electron/electron/blob/master/docs/tutorial/using-widevine-cdm-plugin.md\nnot sure what release it's scheduled for, but we have plans for support\n. twitter links are fixed with https://github.com/brave/electron/pull/7 but I'm not sure how to replicate the other issue. \n. I was looking at the soundcloud info email and missed info in the second message. Working on a related issue right now #460 that should fix this as well\n. https://github.com/brave/electron/commit/18b1f247d7464f9f434befe6de9244af80b71245 should fix any file picker crashes\n. this page is blank for me and doesn't crash\n. It's been a long time since I used a Yubikey, but I thought they acted as a keyboard and just typed in the box? I can take a look at the Chrome extension and see if we support the APIs it requires\n. we do want to get this working and I'm looking at the extension, but it's odd because the whole thing seems antithetical to the concept behind yubikeys. They act like a keyboard to avoid the need for any special hardware support. I think I might still have an old one lying around somewhere that I can test with.\n. sounds like my old yubikey will not be helpful then. We don't support all of the chrome extensions apis yet, but if I can get it working with minimal effort we can push it out pretty quickly. If it requires more work we'll have to prioritize and schedule it.\ncc @bbondy \n. at least in theory the only thing you would have to implement to use the extension iscryptotokenPrivate. Everything else is provided by src/extensions, but there not all of them are in atom/browser/browser_context_keyed_service_factories.h and you will likely have to pull in a lot of new dependencies from chrome. You can see @darkdh recent autofill and importer work in https://github.com/brave/electron and https://github.com/brave/libchromiumcontent to see how to add new chrome dependencies\n. I didn't look at it closely, but that sounds reasonable. You will definitely have to pull in additional dependencies in libchromiumcontent because we don't current have the hid support enabled in atom/browser/browser_context_keyed_service_factories.h. See extensions/browser/browser_context_keyed_service_factories.h in libchromiumcontent\n. there are several recent PRs with examples of pulling in new deps \nhttps://github.com/brave/libchromiumcontent/pull/3 \nthe scripts @willy-b referenced will work for the electron build after updating\n. @evq just came across something related in chrome_content_browser_client CreateUsbDeviceManager. I updated the campaigns at Sonobi, but I don't know how quickly that is updated on their end.\n. I updated the campaigns at Sonobi, but I don't know how quickly that is updated on their end.\n. they appear to be working correctly now along with the sandbox change\n. has not been implemented afaik, but should be\n. Thanks for the PR! This is a much needed fix. Just had one small question on it, but otherwise looks great to me. It would be awesome to get some tests for these.\n. Thanks! There are currently some conflicts, if you can resolve those and bring it up-to-date I'll get it merged\n. Merged, thanks!\n. this needs to be amended to fix ipc.send for the key events\n. now it's ok\n. right now it's low on the priority list, but at some point after 1.0 we'll take a closer look. I dug through the code a little bit and it's certainly not a trivial fix\n. I'll take a look. Thanks!\n. lgtm! I'll cherry-pick it when I'm done with the chromium 54 update\n. was #5102 supposed to close this?\n. ok, but I assume we still want to pull in the upstream change? \n. it was closed because the patch no longer applied, but I have no idea if the behavior has changed or not. a similar change may or may not work for the chromium webview. @bradleyrichter in 0.13 we switched from the electron webview to the chrome webview and that may have had an impact because the resizing code is different. I'm pretty sure it's a focus issue\nCommonMenu.sendToFocusedWindow(focusedWindow, [messages.SHORTCUT_ACTIVE_FRAME_RELOAD])\nAfter you click on the ad, the iframe is the focused window\n. There is no top access from the sandboxed frame. I think we should just use active frame instead of focused frame. Wouldn't that be the expected behavior or should we allow reload of an iframe inside a page?\n. I clicked on an iframe ad in Safari and both the keyboard shortcut and context menu still reload the main frame\n. you were correct @diracdeltas, it was an issue with Electron\nhttps://github.com/brave/electron/commit/41ee85ba515443aafd9dd43af2e878190debdf1d\n. It turns out there are quite a few edge cases here. I'll see if I can create a test for this one so we don't lose it again.\n. @artc take a look at #370 for a workaround for now for http auth. I'll leave this ticket open because we do need a method to turn off popup blocking, but that particular site is using http auth\n. Thanks for the PR! Can you put together a test case for this? We've had a lot of regressions around url bar handling and I want to make sure that we are covering everything moving forward. \n. fixed\n. split focus and select back out\n. that may be useful for the remaining portion of #12 that I moved to Asana, but for now this is solved by changing the behavior slightly to match Safari and Chrome \n. This wasn't really supposed to be part of this bug fix, but it fixes one of the urlbar focus issues from #13 \n. I'm not sure if I needed this, I think it might have been leftover from a previous change\n. doesn't look like it\n. That is the behavior for other browsers when you open a new window. I never went back to see why there is a separate navbar focus though, so maybe we can get rid of it and just use the urlbar focus?\n. it took me a while to sort everything out with active and focused. I can take a look again, but I don't think so.\n. We probably want to differentiate between visible on the page and visible in the browser viewport. We don't need the former yet, but we will want it before we start displaying real ads. I put a task in the backlog in asana for it.\n. What will this do to hidden ad divs that some less scrupulous pubs use? We would want to block those and not replace them\n. Yea, but it doesn't build the test bundle. If there's a better way to do it I can change it\n. actually I'm not sure why this still works, the messages should have broken it...\n. oh wait, I see, that just converts them from a constant to a string with the old format\n. It doesn't really have any impact and it always keeps both up-to-date. I can break out the test one, but I'll also add another one that gives the option to run both together.\n. It's really just a temporary location because I didn't have a better place to put it. It will probably be replaced by something like FrameStateUtil\n. At this point in the process it hasn't been rendered yet. I don't like hard-coding it like this, but I'm not sure how to get around it here\n. good idea, I forgot that was available here\n. this was causing a brief flicker of about:blank before, but should be ok now. I'll check\n. I can change it back, but this does leave the possibility open of BrowserWindow.getFocusedWindow() being called before ready fires which will cause that error\n. I'm not sure if we need this extra check, won't it prevent the copy menu from working on plain text? Is there a case that is broken that this fixes? \n. It only sends file:// unfortunately. The updates I'm making now to Electron will fire a \"HELO\" message to register the embedder as soon as the script context is created and before the page will have any opportunity to preempt it.\n. I think I should add an origin check here. The page itself will have no access to the embedder and can't send it any messages, but I think this could end up firing multiple messages for the same event because \"window\" is the same for all frames. Going to create a quick patch for it right now.\n. Most of this didn't change, I just wrapped it in a function call to isolate it from the rest of the page. I'll mark the actual changes below\n. window. added from previous comment\n. messages replaced with message text\n. window. added from previous comment\n. use codes from KeyEvent\n. added in https://github.com/brave/browser-laptop/pull/599\n. No, you're right, it should only be set once. I had that in there, but I think I took it out when things weren't working right and apparently forgot to put it back.\n. I intentionally left it out. It's part of DOM Level 3 and exists in Firefox, but Chrome didn't implement it so we might as well make it available\n. This probably broke the preferences. If we are going to keep using contentWindow for them we should lock down the origin for it\n. does setting document.domain work?\n. I'm pretty sure it is only used at runtime so you should be able to set it whenever\n. Cost and overhead I suppose. There is no assumption that the data is going to a trusted 3rd-party so the only reason we use https at all is to avoid mixed content.\n. Well, the point is that the browser should consider anything it exposes to be \"public knowledge\" and make decisions accordingly. I thought there was an additional cost in dollars at Fastly for SSL and that's what I was concerned about, but looking back at their pricing page I guess there isn't so I suppose there is no downside to always having SSL always on\n. When a new tab/window is created with an opener the location isn't sent initially. We create a new about:blank tab and when it's ready the opener sets the location. I am now sending the \"delayedLoadUrl\" with the new window/tab event so we can display the url until the page is loaded and the real title is available. \n. yea, I'm not sure if this change is needed now\n. some websocket that webpack uses\n. did-finish-load is only called for the main frame\n```\nvoid WebContents::DidFinishLoad(content::RenderFrameHost* render_frame_host,\n                                const GURL& validated_url) {\n  bool is_main_frame = !render_frame_host->GetParent();\n  Emit(\"did-frame-finish-load\", is_main_frame);\nif (is_main_frame)\n    Emit(\"did-finish-load\");\n}\n```\nit was changed so it could be in a single place instead of two\n. not sure, but I'll double check that it only gets called once\n. I only see one call per page on slashdot and several others\n. looks like some other change already removed the duplicate, but this puts it in the event for the main frame only\n. seems to work with a slight lower delay, but it can't be arbitrarily low because at some point it reverts back to synchronous loading so I kept it at 30 to be safe\n. actually a better fix is probably to do this with a dom event. The 30ms probably puts it outside of the load\n. won't this pull the named anchor from the wrong place? http://tools.ietf.org/html/rfc3986#section-4.1\nHaving it before the query string might be non-standard behavior that we also have to support, but either way it's probably better to use URL.parse/format\n. each tab is actually its own window inside the main window. See \"windw.open with click\" for examples of interacting with the tab vs main window. Checking for non-existence can be trick and subject to race conditions. I'm not sure when \"waitUntilWindowLoaded\" returns so you may have to create an element in the test fixture after dom load, check for that and then check for the non-existence of the ad after that element exists. Kind of convoluted and there may be a better method, but \"should.eventually.be\" does not actually do what it sounds like it does.\n. @rob-blasetti just to expand on what @bbondy said, the main window and the webview in the tab are completely separate (they don't even run in the same process). You cannot access anything in the tab webview if you are attached to the main window and vice-versa. A single window with one tab will actually create two windows from webdriver's perspective. A window with two tabs will have 3 and two windows with one tab each will have 4\n. to be honest I\"m not sure where browser-laptop-releases is configured to be used, but I think it makes it obsolete either way\n. the loading issue actually has nothing to do with CSP, this was just required to allow the data urls\n. I'm not sure if this check is really necessary. Is there a circumstance under which we would not want to update the url?\n. I just threw ftp in there because I noticed it was missing, but do we want to make this a whitelist or a blacklist? At the moment the only protocol we are aware of that causes a problem is mailto, but there could potentially be other security issues related to not changing urls. Seems more dangerous to leave things out than to put them in\n. I guess it's a question of the severity of the problem. Changing the url for skype, etc... is a bad user experience, but not changing the url for data protocol was a real security issue. Given that, I'd rather blacklist than whitelist or come up with a different solution that doesn't even fire the event for protocols that shouldn't be handled by it\n. wouldn't there be a javascript hack similar to the data hack?\n. should the button even be there if there is no previous location? Not sure how that could happen except from an old saved state\n. I noticed that too, but I didn't make any changes it so I'd leave that with @bradleyrichter \n. actually the tabId shouldn't persisted so I'll delete it in the cleanup\n. a.href was truncated sometimes and I'm not sure why, but text/plain always contained the correct link text\n. right now this just loads the url into the urlbar. Do we want it to actually load the url?\n. the comment is still valid afaik\n. this appears to break tests for url fragment location updates\n. didn't realize what this was for, but it looks like it turns off the fullscreen warning message so I'll put it back in\n. Those aren't valid options for matches so if we need them we'd have to go back to all_urls and add globs. Do we need these scripts to run for data: and blob: urls?\n. ok, should be pretty easy change\n. I think you can use remote.getCurrentWindow().on here instead of relaying with ipc messages\nsee\nhttps://github.com/electron/electron/blob/master/docs/api/remote.md\n. why do we initialize the partition for the main window?\n. not sure if this is the best way to store it because we may want to consider things like embedded youtube videos\n. some confusion with electron. Normally partitions that are not prefixed with persist: are in-memory, but apparently '' is a special case that returns a persistent partition. It's particularly annoying because there is no way to get a matching '' in-memory partition which is needed for spanning extensions. At some point we will either have to change the default partition used by normal tabs or add a method that allows creating an in-memory '' partition.\n. to make everything work correctly with private tabs and extensions, we should have to identically named partitions with one in-memory and one persistent. The logic in electron takes care of matching them together. Private tabs should use the in-memory '' partition and the browser process should load favicons through the partition that matches the one used by the tab. Not a big deal right now because the extensions we are using don't really need the spanning support, but eventually it will be an issue\n. going to bring it up in slack so everyone is aware and understands the details\n. are the autocomplete queries cacheable? That's really the only issue here because otherwise the in-memory main-1 partition is fine. I wonder if private partitions can use the cache from their corresponding persistent partition? Rather than being a data leak, that would actually improve privacy because fewer remote requests will be made.\n. I have some changes for that in a PR I'm working on. I'll verify that everything works without chrome-extension:// and if not, I'll check the noscript ui. \n. actually I'll remove it from this one either way so we can merge\n. fixing this...\n. I guess so. I must have mixed this up with something else\n. is there something other than cookies that gets stored locally for the partition? I thought this would only affect cache and cookies\n. that will definitely be lost as discussed in slack. Everyone seemed ok with it, but if not I can go another route. There is also currently an issue with ad insertion that this fixes for some reason. \n. I think we need to do something to better differentiate webview and window fullscreen. The webview fullscreen state is triggered by the electron enter-html-full-screen event and windowActions.setFullScreen updates the isFullScreen property of the frame. Maybe we could have setWebviewFullScreen and setWindowFullScreen to make it more clear?\n. actually setFrameFullScreen is probably more consistent with other webview actions\n. fyi - there is a debounce method that we also use in other places\n. works in https://github.com/brave/browser-laptop/pull/2256\nwe should change canvas fingerprinting to a resource like the others so they all work consistently\n. all the site settings work the same way, but the other resources are updated globally with APP_SET_RESOURCE_ENABLED and canvas fp is updated with APP_CHANGE_SETTING\n. if you try again in master it should work\n. yea, that makes sense and would apply to ads as well. contentSettings translate the siteSettings into rules so I can't use the activeSettings (which will eventually be replaced by contentSettings), but I can add an override for now\n. fixed here https://github.com/brave/browser-laptop/commit/9751f28f10edf4acb08e45e600ca77336e38b4d7\n. do we need a setting for this? Would someone ever turn it off?\n. can't you still use \"save link as\" if you want to download? I guess I'm fine either way\n. yes\n. it would be easy to change to the non-persistent store\n. the ledger doesn't record visits from private sessions\n. just a nit, but I think for readability it would be better add frames as a parameter and move this out of removeFrame\n. I like having unit tests for these, we don't have enough of those ++\n. it definitely helps to defer it and I don't think anyone will really notice the 1s delay\n. @bbondy ?\n. seems reasonable, I can try it and see if there is any performance impact\n. the check didn't really make any difference and looking at the code, that makes sense because the worst case scenario for document.querySelector('object') is no flash and in that case it has to scan the entire DOM just like elem.getElementsByTagName('embed') does. However, just adding insertFlashPlaceholders back in at dom load doesn't seem to effect performance in any measurable way so I'll push out that change\n. https://github.com/brave/browser-laptop/commit/ad8fb6d1e9aa0aa93ee451900eeb5451fd9538de\n. I think this actually needs to selectively include properties instead of exclude them. Unlike a webview that is detached and reattached, a cloned webview won't have the same audio playback for instance\n. fixed\n. it won't clone about pages\n. this is just the code from Electron without the annoying popup\n. this is one of the places where you really have to be careful. There is a race condition between cloning the frame and selecting the window. If the actual frame is created after the windowByUrl call, but before the waitForExist call, the waitForExist will fail because it's actually looking for the selector the new tab\n. one option is to wait until getTabCount returns the incremented count\n. I think it might be better in this case to use webview:nth-child to check the webview src. Might even be useful to check all 3 of them and make sure the framekey => nth-child index is what you expect for all three\n. @bbondy we should just get rid of this method and use UrlUtil\n. I think those might just be examples and not an exhaustive list. We also have registered and app protocols like bitcoin, 1password, etc... @bbondy ?\n. do we need the url here? The title is already set to the url if page-title-updated isn't fired. I can't articulate a particular threat, but I just feel like it would be generally safer to use the url from frames.js rather than sending back window.location.href @diracdeltas ?\n. I think you have a race condition with these checks because .tab.active already exists from the previous load. You could put the getText and assert equal in a waitUntil block and that should be more reliable\n. logs from debugging? Do we need/want these? We really need to add our own log method with more control over output granularity\n. I'd really like to avoid this kind of state transfer in general and I don't think it's going to be correctly synced anyway because this updates on appState changes, not windowState changes. This will be much easier once we move webContents management to the main process and if the only purpose of this is to get close frames I would just leave it out for now. If we really need it now then I think appState should track WINDOW_CLOSE_FRAME, WINDOW_UNDO_CLOSED_FRAME. That will mean some state duplication between windowState and appState, but still better than relaying windowState imo. There is also likely a performance issue doing this on every app state change.\n. similar to the issue with DATA_FOR_WINDOW, we're using ipc messages in a lot of places where we could (and should I think) just be using actions. The windowActions are already sent to the appStore via the dispatcher, we're just not handling them there. Ultimately this seems a little backwards to me anyway because bookmarks are part of appState, not windowState and the bookmarked state of the current url should come from there. I realize there are legacy reasons for all of this, but it would really be nice to clean some of it up or at the very least not add to it (in the DATA_FOR_WINDOW case)\n. new files should use the new directory structure - see https://github.com/brave/browser-laptop/blob/master/docs/directoryStructure.md\n. @bsclifton - if you add these methods to https://github.com/brave/electron/blob/master/lib/renderer/web-view/web-view.js#L391 they can be called directly on the webview\n. yea, I guess @bbondy and I talked about it and then didn't tell anyone :)\n. we can't store plain text CC data in the state. It's already encrypted on the electron side so we should either store the guid and read from there or encrypt (base64 encoded) here. Preferably the former I think because we don't really need two copies.\n. just FYI - this is a blocker for merge because it's a major security issue\n. can we get rid of the ipc message and do a window action here that calls webContents.autofillSelect in frames.js? Maybe track the autofill status in the frame state and show/hide the context menu based on that? Could definitely be done in a follow-up commit, but we will have to refactor the ipc eventually anyway when moving webContents mgmt to the browser process\n. some IDs appear to have multiple entries, but I can double-check\n. yea, I think I just got something mixed up here\n. https://github.com/Level/levelup#leveldown\n. does anything actually call this?\n. not sure how I feel about this. I wanted to separate the electron code from the appState to make it more unit testable, but not sure if this is the best way to handle it or not. I also considered some kind of change listener, but I think that might need a larger change to make sure the notifications are efficient\n. I left this in here so it was clear how it would work. I wanted to keep all the state management for tabs in on place\n. wouldn't this be webviewActions.stopFindInPage vs webview.stopFindInPage?\n. that makes sense, I'm just trying to figure out where this actually gets called and I'm not seeing a call to webviewActions.stopFindInPage\n. fyi @bbondy - the problem with this turned out to be the result of calling stopFindInPage on hide. keepSelection doesn't actually keep any state in the webcontents, it just keeps the selection highlighted on the page. If you want to keep the state you can't call stopFindInPage\n. I see now, I didn't realize there was a level, levelup and leveldown\n. I actually didn't even know this was valid syntax, but for consistency (and syntax highlighting) I think we should keep the :\n. the problem with this is that calling stopFindInPage resets the webcontents find state so you can't get back to the same search results\n. it doesn't remember the next position, that was the bug. I started a slack conversation to explain\n. can we keep this immutable? autofillAddresses.get('guid')\n. we can now manage running and displaying insecure content through the displayInsecureContent and runInsecureContent content settings which will allow us to treat them like any other site settings. I know you already did a lot of work using the old method and I'm sorry I didn't catch this sooner, but setting these through the webview is problematic because it restarts the renderer process and will potentially break some sites. We had a small number of exceptions before, but if we're opening this up as a general setting we should transition to the contentSetting\n. not sure if someone else reading this will understand what makes it \"typical\". Maybe \"returns true for site entries with a lastAccessedTime\"?\n. I think it would be better to name this setting runInsecureContext. It's easier if we don't have to translate names across various parts of the app\n. same thing as above. If this applies to both display and run then insecureContent would be ok, but if this is only for running then we should stick with runInsecureContent\n. I think the site hacks need to be translated into default rules for contentSettings.js. This will apply the setting after the page has already loaded and the content is blocked\n. this looks like a good fix, but I'm thinking that we should apply it in windowActions so anything else that cares about this action in the future won't have the same problem\n. It's the same fix, just in a different place, but I can make it if you want\n\nOn Aug 29, 2016, at 1:52 PM, Marshall T. Rose notifications@github.com wrote:\nIn js/stores/eventStore.js:\n\n@@ -98,8 +98,10 @@ const doAction = (action) => {\n       eventState = eventState.set('page_load', eventState.get('page_load').push(pageLoadEvent))\n       break\n     case WindowConstants.WINDOW_SET_FOCUSED_FRAME:\n-      addPageView(action.frameProps.get('location'))\n-      lastActiveTabId = action.frameProps.get('tabId')\n-      if (action.frameProps) {\n  ok, who should we re-assign it to in order to implement a more general solution?\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. blockedRunInsecureConent  => blockedRunInsecureContent\n. also, isn't this an array of strings?\n. isRunInsecureContent => runInsecureContent\n. this still isn't going to work correctly because the site setting won't update in time. We should remove the siteHacks for insecure content and translate them to site setting defaults\n. MixedContent => RunInsecureContent\n. isRunInsecureContent => runInsecureContent\n. MixedContent => RunInsecureContent\n. this is where the site hacks should go for running insecure content\n. isRunInsecureContent  => runInsecureContent\n. it's hard to form complete sentences sometimes\n. it just logs the timestamp when the browser became inactive. We use the same thing for closing all windows\n. sure, np\n. if this clears history for all sites we should use the method here https://github.com/brave/browser-laptop/blob/master/app/sessionStore.js#L258\n. I don't think it's a big deal here, it's just a single call in an infrequently called method\n. can we split this change out from the shortcut? I think we probably want to make these extra checks in getViewSourceUrlFromUrl and maybe return a null location if there is not valid view-source for the url\n@bradleyrichter is this shortcut in your list?\n. ah, I assumed each action had a single username/password element. The purpose of this change was to avoid adding another listener on each check so just watch out for that with the fix\n. yep, nice catch. I added the comment before I changed that\n. contentSettings don't have to worry about regular vs private. The private session has an overlay pref store that reads from the main profile, but writes to an in-memory store that doesn't transfer to the main profile\n. but shouldn't the permission be set for the page the user visited? Using the origin will set the permission for the requesting url\n. I guess I'm confused about how this should work. The origin is the origin of the url that is actually requesting the permission. If we used mainFrameUrl here it would appear to the user that the main page is requesting permission when it may actually be requested by a frame with a different origin\n. so I think this is incorrect too @diracdeltas because there will always be an origin and that is how we want to lookup the permission\n. I think there are other places we want this so it should always fire regardless of ledger settings. Also, we don't really need to send frameProps for all window actions now that we have tabId so I think you only only need to send the tabId and the details\n. url is also in the response details\n. maybe page_load_details?\n. IsValidResponseCode => isValidResponseCode\n. as we discussed, I think we should just use this for the load event and add the details to it\n. I think you probably want to check for errors vs positive responses because there are other potential successful responses. You also want to ignore things like redirects\n. actually I take that back. We need to further restrict 2xx to 200, 203 and 206 I think\n. this also might be better as either a general utility method vs ledger. shouldTrackView looks ledger-specific so that's ok\n. 4xx? Don't necessarily need an exhaustive list, but the list isn't that long https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\ncan be done in a followup too\n. this method should be moved out of filtering and only called on the default session\n. you can avoid this check by making it an appAction\nsee https://github.com/brave/browser-laptop/blob/master/app/browser/basicAuth.js\n. this would also be better as an appAction. We want to avoid adding more ipc handlers\n. ideally actions should not be setters, they should describe the actual action. In this case something like appAction.supportedBrowsersUpdated which would then be handled in the windowStore and should call helper methods to update the state (don't call actions from actions). \n. along the same lines as the previous comment this would be something like windowActions.importDataPanelHidden\n. I think that ideally this should trigger something like an onMouseOverBookmarkFolder action with whatever params are needed to allow the windowstore (browser process eventually) to update the state rather than having the logic here to open context menus and update state. The are two reasons for this:\n1. It's more inline with how flux is intended to work. We should have declarative actions instead of imperative\n2. We want to take node out of the main window renderers so we want to move electron api calls out of the react components (showBookmarkFolderMenu indirectly calls electron.remote methods) in preparation for moving them to the browser process\n. I was looking at this.props.showBookmarkFolderMenu which at first looked like it called the electron api directly, but it calls setContextMenuDetails which eventually triggers a call the remote api. The windowStore really should directly care about any of this, the logic itself should be in a \"reducer\" similar extensionState. In the flux/redux model that is exactly where the logic is supposed to go. The UI should just fire off events and react to state changes. We have a bit of code to untangle because actions shouldn't call other actions, but some of the actions are \"setters\" and aren't written in a way that makes it easy to reuse the login in them.\n. this is going to send the private settings to the non-private tabs. We can't sync all the sessions, we have to send the temp + regular to the private session and just the regular to the regular session. Probably use setUserPref with the incognito flag instead of registerUserPrefs\n. sorry I missed this earlier, but the deep merge is not required or desirable. The overlay pref store already handles this correctly if you set the regular settings for the regular profile and only the private settings for the private profile\n. ```\nbool OverlayUserPrefStore::GetValue(const std::string& key,\n                                    const base::Value** result) const {\n  // If the |key| shall NOT be stored in the overlay store, there must not\n  // be an entry.\n  DCHECK(ShallBeStoredInOverlay(key) || !overlay_.GetValue(key, NULL));\n\nif (overlay_.GetValue(key, result))\n    return true;\n  return underlay_->GetValue(GetUnderlayKey(key), result);\n}\n``\n. I think you want to encapsulate this in a ledger.js method\n. same as above.ledger.jsruns in the same process asappStore.jsso emitting an ipc event doesn't really make sense. Just call a method on ledger.js - see https://github.com/brave/browser-laptop/compare/tabs-api?expand=1#diff-23ca389e2bcb77191b5a9c10900eb3a3R717 for an example. The methods should always take the state and the action (reducer) as parameters and return the state (may or may not be modified). The flow should almost always be the same: call an action -> reducer functions update state in appStore -> ui updates to reflect the new state\n. it would probably be helpful to give these actions/constants names that includeledger. Eventually we'll probably break them out into ledger actions\n. writeFileSync will block the entire browser process. Is there a particular reason for sync over a callback?\n. fyi -getInis helpful because you'll never get an undefined method on null when accessing nested props\n. always use path.join for cross platform compat\n. I think I like the idea of having a separate action for this, but there's not much point in having a separate action if all it does is call newFrame. I would suggest a few things:\n1. This can be moved to the appStore now that we have a good way to open new tabs there\n2. The handler for the action that opens the new window should know what the url and other options are\n. I've started to break these out and use the state helpers to manage what is persisted and what isn't https://github.com/brave/browser-laptop/compare/tabs-api?expand=1#diff-9e0c81a9a3f51c8a895685e3183a1452R299\n. part of that change was removing the side-effects and returning the new state so we can make it immutable and use things likedeleteIn. can we combine these into a singleautofillDataChangedaction? Every emit from the appStore causes another render cycle for a lot of components and it also follows the declarative action pattern better\n. don't worry about this right now, but we should pull these methods out of filtering and move them to the newautofill.jsmodule you created at some point. They don't really needFilteringanymore  because they don't have to be sent to all the sessions\n. this should beappState = ledger.backupKeys(appState, action)to capture any state updates that this method might make. I know it doesn't directly make any now, but the pattern should always be the same to avoid confusion\n. same as above\n. this callback may or may not happen asynchronously so the appActions should be called insidesetImmediate` to prevent any potential race conditions with state updates. The issue was discussed in slack, but this is how it happens:\nFor simplicity, all actions increment the current count by 1, but the same problem exists even if the actions change different parts of the state\n1. action1 is called with the current appState = {count: 0}\n2. action1 calls a method with a callback\n3. callback returns synchronously (does not perform any io or other operations that would make it async)\n4. action2 is called inside callback with the current appState = {count: 0}\n5. action2 returns appState = {count: 1}\n6. appState is emitted\n7. action1 returns appState = {count: 1}\n8 app state is emitted\n. maybe link to the examples in #browser ?\n. This isn't necessarily relevant to this pr, but I think we need more helpers like this with a slight change. Right now changeSiteSetting sets the setting, but doesn't wait for it to actually be updated in the store. This leaves the dev with the task of both recognizing that the update is async and also writing/duplicating code to check for the update completion cc @bbondy \n. this works, but fyi you can just delete it because it will be-readded from the default session data\n. this looks good, but I think you probably want to add an option to override this check so we can test this without triggering it on every test. Maybe something like process.env.BRAVE_FORCE_CHECK_DEFAULT_ON_STARTUP which would run it regardless of the NODE_ENV or other settings\n. do we need this second action? Can defaultWindowParamsChanged also save them?\n. if not it's ok, just wanted to check\n. won't this still call the method just as many times, but delayed by 1 second? Can we use debounce here instead?\n. be careful with these inside events. This is ok because it's wrapped in a setTimeout (see below for possible change to debounce which would also be ok). Otherwise they should be wrapped in setImmediate. No change needed for that, just a reminder.\n. ++ on declarative event naming\n. re: my comment below, I didn't see this at first, but I still think debounce would be better. Can move and resize call a common method?\n. that would work well with debounce because you can can do method = method.debounce(...) or similar\n. I'm actually not sure if the window store receives app events, but if you need the window or session those are available in the browser process. DM me for details\n. why is this only for dashlane?\n. we can just remove these then. The only reason we created context menus for the password managers was because we didn't have contextMenu api support.\n. just fyi - using ipc directly is now highly discouraged in favor of using actions. We really need to publish some docs to help contributors, but in this case you could add an app action called renderUrlToPdf or similar and handle it in the appStore with a pdf module. It should follow a pattern that looks like this\ncase AppConstants.APP_RENDER_URL_TO_PDF:\n      appState = pdf.renderUrlToPdf(appState, action)\n      break\nit may seem a little strange to take in the app state and return it again when you are not using it, but we're in the process of transitioning to something closer to redux and we want to be able to chain these together.\nAlso, you can also use js/lib/request.js to load urls from the browser process without opening an invisible window. See app/DataFile.js for an example.\nThanks!\n. I don't think these tests should go away. I didn't realize these tests existed when I made the changes because the tests weren't working, but those methods can move back to urlUtil to make them unit testable again. nice catch. this shouldn't be necessary anymore. I changed windowStore to make a check instead. I think we may want to revert this unless I'm missing something. this is probably the reason the code above was still needed. I think we can keep this and lose the isFocused check. I think this is the only one we need to handle and we can do that in electron -  https://github.com/brave/electron/issues/126. do we still need this now that we have history methods on the webview/webcontents? Are we still using it anywhere?. can we replace that with tab/webview history now?. can we use webpack for the blocked ws to prevent a false positive for the error?. we should really add a way to mock the adblock data so we don't have to wait for the download or worry about connection errors and changes in the adblock file contents. shouldn't it succeed if it isn't blocked?. see comment above about mocking, but are there any patterns for ad block that have a wildcard domain? Another options would be to have a separate adblock file for testing or add a localhost match with a uuid path (wildcard port). that seems really fragile to me. I think we should mock up or add something that should be blocked. For now maybe we could even do it through site hacks in test only. we definitely don't want to restore alerts because they won't be connected to the original method call anyway. if this has to happen after creation a timeout doesn't seem very safe, or is the timeout just an extra buffer? If so I don't think it's really necessary with the dispatcher changes. can we leave a comment here about refactoring this into a single action with APP_ADD_SITE? When we do that we should probably pull it out of appStore anyway and create a siteReducer. or maybe the comment should go on the action. Either way is fine, just want to capture it in the code. should we be preventing partial off-screen placement? Seems like this could cause weird issues with multi-monitor placement or intentionally placing windows a little out of the way. I believe you can use the screen api to determine if a particular point is on any screen and I think we should probably use that to make sure that some portion of the draggable area is on the screen. if the api doesn't provide what you need we can add the functionality to it. oh right, it's for all windows, but depending on the configuration you could still have gaps that fall outside any window without being negative. I think testing for onscreen points would still be safer, but for now we could use 0 in the Y axis and use window width to ensure a fixed number of > 0 pixels for the X axis. it could also go offscreen with position > max width/height. we should try to keep the declarative naming conventions here so maybe navigatorHandlerRegistered and navigatorHandlerUnregistered?. related to the above comment, the app constant name should match the action name. these no longer have to go in aboutActions and this file should be deprecated. Use appActions for now instead. see comments on https://github.com/brave/muon/pull/170\nwe call autofillPopupHidden with a tabId, but we don't bother to check that tabId before clearing the context menu detail. this introduces a potential race condition between the rename and the next save. It's unlikely to happen, but I don't think we want to add any more potential race conditions so I think this should be a sync operation and we should use copy instead of rename in case the bug is somehow related to rename. muon should is supposed to handle this automatically so I think we should fix the problem there. If we need something on the browser-laptop side we should do it in tabs.js because all of the webview methods are deprecated (especially getter methods because they are sync ipc). maybe currentWindow should move to common and this code should go there? I'm going to add the active window to the appState and then everything can read it from the same place. actually in this case it's even simpler because you can use -2 to specify the current window (or leave it empty). with a small change to windowState we can use -2 here as well. Maybe add windowState.WINDOW_ID_CURRENT to match chrome.windows api?. is this still necessary?. I think braveShieldsDisabled and braveShieldsDown can be too easily confused and the button doesn't need to know or care why shields are disabled. I would suggest combining into a single setting and method that handles both cases. I think we would like to avoid adding new *Util classes. Maybe add this to frameState.js and pass in state and frameKey?. ok, the naming is a little confusing, but I guess it matches what is there now. shieldState is fine, but I'd still like to pass in the frame for now vs activeRequestedLocation. Can we also change the name to braveShieldsEnabled? !braveShieldsDisabled is harder to read. does it still make sense to name this activeRequestedLocation now that we're passing in a frame? I think we should try to bring the naming conventions in line with muon/chromium to make things a little easier to follow which would mean this method would be getLastCommittedURL. The error pages are transient entries (or will be anyway) so they will never be a committed url.. as a side node, committed does not mean that the url has completely loaded, it just means that a load was started and could have been blocked or redirected. Before load-start a url would be considered provisional. passing in the entire window and app state as props will cause the Navigator component to re-render every time anything changes in either one of these stores. We need to make these props much more fine grained so they only update when they actually need to. can't we use props.activeTab here?. Can we pass in popupWindowSrc as a prop? See my general note below about passing in props for anything that uses this.props.windowState or this.props.appState. When we transition to ReduxComponent we will just move the props from the parent to mergeProps. comments about this.props.windowState also apply to anything using this.props.appState. this is where prop lifting gets really annoying. All of these props need to be passed in to the Navigator component so they can be passed along to NavigationBar. It's very convenient to use this.props.appState instead, but unfortunately it is not good for performance. siteUtil.js is actually for appState.sites and site settings are in appState.siteSettings. The names are similar, but they are two very distinct things. Maybe a new siteSettingsState in app/common/state?\nAlso this method sounds like it will enable noScript, but it's actually checking the state of noScript so maybe noScriptEnabled or isNoScriptEnabled? Can we swap also swap the state and settings parameters to be consistent with other state helpers and maybe move this to siteSettingsState? . merging now, but just a nit that this would be easier to read in the positive form parsedUrl === 'https' or better yet use urlutil.isHttpOrHttps. these are really just temporary to replace the currentWindow.method calls. This should really be onNavigatorDoubleClick or something like that. see https://github.com/brave/browser-laptop/pull/8220/files#diff-2db1344f65c9be10474c5562bcef4c60R1134. this was just a random prop that wasn't being used anywhere. actually *State.js files specifically should not use any of these apis. They should manipulate state only and avoid other dependencies to make unit testing easier. The logic you have here looks like it probably belongs in a reducer. can use this.props.tabId to make the prop a primitive type?. ok, no problem. this is also going to be a problem because you can't serialize the method call in the windowAction. I think this should probably be a getActiveWindowId method on windows.js and return windowState.WINDOW_ID_NONE instead of -1 just for consistency\n. this should use the appUrlUtil about page methods. the helpers are meant to be more general purpose so this should probably take detail as a parameter instead of action. I think these two methods probably make more sense in the reducer. The state helpers are mostly just getters/setters for the state. I'm not adamantly opposed to leaving them here, but if they stay the params should be tabId, partitionNumber and history instead of action. just a nit, but it would be more consistent to use onGoBack, onGoForward, etc.... BacHistory -> BackHistory. isTargetAboutUrl. does this work correctly? It looks like we normally get it using window which isn't available here. I think we can fix this by using urlParse instead of window.URL. to avoid confusion I think should probably is isSameHashCode. if both objects are null it should return true. since this is a little more complicated now it would probably be better to pass an instance method to both instead of using anonymous functions. It would be slightly faster anyway and avoid the overhead of creating and GCing the closure. @darkdh maybe the migrate method should be called in sessionStore where we do all the other data migrations?. yep, that's true for several of these now. shouldn't this be this.props[navCheckProp]? Is there a test that covers this because I think this would cause an exception. shouldn't this be @NejcZdovc instead of @bridiver?. why copy all the properties here?. ah, I see, so it breaks when it gets cloned in Object.assign. it just gets set so it isn't null. both of these tests pass even when I remove the urlbar changes so I'm not sure if they really capture the issue. going to merge this as a workaround for now, but we want to get away from putting this kind of logic in components. The same workaround could be done in a reducer to update the urlbar location on tab change. this seems clunky to me, anyone have a good idea for converting method names to strings that doesn't involve a constants file?. the extra name in the function definition makes the name tabActionsDidFinishNavigation instead of didFinishNavigation. this may help, but won't be a complete fix because it doesn't address the race condition. Getting the title from tabValue will only fix the title when the tab state changes for some other reason. I think this change is ok for now, but we should add a comment/TODO that the race condition with appState is the real problem. we also shouldn't mark this as resolving the issue for the same reason. this is the actual fix, but passing props in the super call is required. ah, that's probably the issue then. I ran into something similar when trying to use config.syncExtensionId. it would be helpful if we could use dispatch-action from the sync extension instead of using ipc handlers. The ipc handlers will be problematic when we start converting things to worker threads. skip?. we already have a window resize handler in windows.js that triggers appActions.windowUpdated and it is debounced to prevent a flood of actions during resize. I think it would be better to send that action to the window using queryInfo (see urlBarTextChanged for an example) and update the computed styles in response to that. I think we can get rid of this and rely on the existing windowUpdated debounce. I think this should actually be in windowActions. We are generally moving away from windowActions and appActions, but we will keep windowActions for actions that are related to the window component. It can still be handled in the browser process. also should be declarative updateComputedStyles -> computedStylesChanged or something similar. I think setComputedStyles and we are moving away from passing actions into state helpers so I think this should take windowId and computedStyles. I think this should be replaced by a getComputedStyles method in windowState. We don't want anything outside of windowState to be tightly coupled to the storage path. don't use ipc directly, use actions instead. nothing additional is needed here. I would suggest creating a passwordsReducer and handling aboutAction.deletePassword in that. same as above, no addition messages are needed here. just fyi - you can use activeFrame.getIn(['navbar', 'urlbar'], Immutable.Map()) which is a little safer because it properly handles falsy values when applicable. we should add a TODO to take a look at this because I suspect getting the computed styles for the entire document is very slow. I like this change to pass the index instead of calculating the selections in the component. ++ much better!. we should add a null/isDestroyed check here and the one below. why the 1 second timeout? Can we just do setImmediate?. not sure if this file makes sense as a state helper. The state helpers should own a portion of the state and this is more of a set of utility functions that access other state helpers. yes, they get something from the state, but they don't \"own\" part of the state. I think maybe better as util functions?. yea, I had actually commented on this in a previous version of the PR and said I wasn't super happy with it, but trying to find some way to avoid the constants file. in the short term it's confusing, but we need to split out the actual dispatcher functionality from the code that uses it so we can include it in different contexts like worker threads. I'm open to name changes if you have thoughts.... also wanted to remove the appStore dependency for actions because it causes a lot of circular dependency issues. any thoughts/ideas?. these shouldn't have dashes, right?. should this go under renderer now instead of common?. computed also probably doesn't make sense anymore since these are static values. maybe renderer/styleUtil ? getStyleValue ?. oh, almost forgot. We should comment this file and the less files to make sure they don't get out-of-sync. don't want anyone to think they can only update one or the other. I would probably use getByTabId here and it already handles TAB_ID_NONE by returning null. getTabInternalIndex is just a temporary hack until we can re-organize the tab state so best to limit its usage to the smallest set of methods possible. is the null check here necessary?. can we put this in config with the extension id?. this one owns appStore.updates so it would make sense as a state helper. . we should probably merge updateStatus into this file and make it updateState. I'm confused about the purpose of this. this seems like something that should go in urlUtil. what is the current status of this?. this action doesn't provide any new information that we don't already have in setPreviewFrame. We are already duplicating information in setTabHoverState and setPreviewFrame (fixed in #9542) and definitely don't want to add any more actions for this functionality. why the change here from action.clearDataDetail to checking the state?. hiddne -> hidden. I think these probably make more sense in bookmarkUtil. Bookmarks don't have their own state right now because they are part of sites. ?. not sure what it would do if it blocked the whole page. We also have to be very careful about what we do inside onBeforeRequest because it blocks resource loading. Created https://github.com/brave/browser-laptop/pull/9702 to make it more efficient, but we should be saving the data in appState and reading the blocked resources from there. I'm fine with removing it. ++ on filter before sort. not sure I understand this change. this one should also be converted to an action. Not sure why this is called bookmarkActions, probably just some legacy reason because it's not an action the way we define them now. I think you can probably dump this whole file, make a real action and move the logic to the reducer. can you add a TODO to merge setBookmarksToolbarSelectedFolderId into onShowBookmarkFolderMenu. We should never call more than one action at a time. I think this is supposed to be windowActions. onSiteDetailMenu ?. is there a test that covers this? Looks like it should be failing if there is. no, we specifically don't want to do that because we only want these items when there are files. I see, makes sense. we should probably have a way to override this so we can test it. Maybe it would be better to set the defaultState for about.welcome.showOnLoad in sessionStore.js to false except for production and then we set it to true when we want to test?. please removing logging :). actually I'm surprised this doesn't cause an error, but I'll remove it. ah, I think I accidentally grouped them together. Is there a test for it that is failing or did you just find it by manual testing?. we should not be calling actions from reducers, that breaks the uni-directional flow that is the whole point of flux/redux. The only time we are doing that now is for some special cases in the windowStore and maybe a few legacy calls. If you have a specific example to look at we can talk about options. as far as converting it goes, this is just like the others. It is accessing appStoreRenderer and that is problematic. Why is this any different than the others that you already converted?. files only contains the filename, not the full path. We added the full path for files into items when files are present. there are limitations on what we can do with this api without breaking compatibility so rather than change what is contained in file, we added the extra data to items. so that is one of the temporary cases where we are firing appActions from windowActions, but the long-term fix is to just handle it in the browser process and the window updates based on state change, not an action. I think this logic should be in the reducer. setFocusedFrame should only need tabId. but we still have the problem here that we are accessing appStoreRenderer for state in this \"action\". conversion to/from JS is a relatively expensive operation, why do we need to send an object instead of just the activeFrameKey value. that function turns it right back into js again. I think we should stick with regular js. this change actually doesn't make sense to me. There's no state that is needed here so I don't see any reason to create a window action that forwards to an app action. We are using that anti-pattern in select places where there isn't a good workaround right now, but this doesn't seem necessary. What I think we should do (in another PR) is convert the drop methods to actions and move this code inside a (preferably browser process) reducer. It also seems like a bad idea to hide an action call inside this method and it should probably just return the bookmark from dndData and do nothing else. I think we're adding a layer of indirection here that is just going to be removed later anyway. I think the confusing part here is that you're getting frame from dndData.getDragData, but apparently that isn't a frame so I think like the other one we should just pass frameKey. I just noticed this calls frame.get('activeFrameKey') which makes it even more confusing. probably doesn't work because of that. I'll take a look. I think this check should be in updateTabPageIndex to make the functionality consistent wherever it is called, but there are also a few issues here I think. The first one is that we still want to updated the tab page index, but without clearing the previewTabPageIndex, right? If the check is inside updateTabPageIndex that is easily accomplished. The second is that I think we want to check hover state for the tab pages and tabs? The last is that we want to avoid iterating over frames and I can't see any reason to have a per-frame hoverState prop. Can we change it to ['ui', 'tabs, 'hoverTabIndex'] to match hoverTabPageIndex?. actually is it even necessary to clearn previewTabPageIndex inside updateTabPageIndex? I think it's covered by hoverTabPageIndex now. Maybe we can just remove it? The same probably applies to previewFrameKey above. just a nit, but I think windowActions. onTabPageContextMenu would be better here. I don't like duplicating this logic here. Can we create windowActions.onStop and have both methods call that instead?. sorry to do this to you, but can we use tabId instead of frameKey? If we had the tabId it would be easy to convert this to a browser process action (please add TODO for that) with a siteUtil.getDetailFromTabId method. I think we should drop active as well once it gets to this point. yea, that will have the added benefit of calling one windowAction instead of 2. You can refactor WINDOW_SET_URL_BAR_SELECTED and WINDOW_SET_URL_BAR_ACTIVE handlers in urlBarReducer into methods so you can call them from WINDOW_ON_STOP. In a follow-up we can get rid of SHORTCUT_ACTIVE_FRAME_STOP and replace it with a WINDOW_ON_STOP handler in the browser process. sendToFocusedWindow also needs to die eventually :). I think there should be a single if statement here that wraps all of this, but can you switch !getSetting(settings.DOWNLOAD_ALWAYS_ASK) && !item.promptForSaveLocation() to getSetting(settings.DOWNLOAD_ALWAYS_ASK)  || item.promptForSaveLocation()? The former is confusing. please merge into else for if above. double negative checks are also hard to understand !willNotOverwrite -> willOverwrite. I think this will break things like .tar.gz. Maybe get the first index?. we don't want to call goToIndex twice, but we should check that index >= 0 and < the number of entries. When I say we don't need a per-frame value, I'm suggesting that we can have a single key to keep track of which frame is hovered. \nframes.1.hoverstate = false\nframes.2.hoverstate = true\nframes.3.hoverstate = false\nchanges to ui.tabs.hoverTabIndex = 2. I think we should put this ipc message in there as well. When we get rid of it, we'll just switch over to the browser process handling WINDOW_ON_STOP. we want to avoid calling actions from actions. I still don't understand why this is any different from the ones you already changed? . an appAction doesn't need to call createTabRequested it can just call tabs.create. the handler in sitesReducer should be changed to APP_TAB_CREATED. APP_CREATE_TAB_REQUESTED is a temporary workaround until we move things to the browser process so nothing else should handle it. in any case if tabs.create doesn't encapsulate all the logic for creating a tab then we need to fix that because the api is not useful if it can only be called through APP_CREATE_TAB_REQUESTED. for instance activateIfOpen shouldn't be an action property because it always applies to specific urls. this can happen anytime after windowStore.state = newState and should probably go after generateTabs. we definitely don't want to add a timeout here because we handle that in frameStateUtil. I think the best thing to do here is add a onTabMouseMoved action. this seems fragile to me, we should probably be checking for children with something like https://stackoverflow.com/questions/4697758/prevent-onmouseout-when-hovering-child-element-of-the-parent-absolute-div-withou. this should also be removed. doesn't this whole file go away?. focusedWindow should be deprecated and context menu items should use actions by default. I would use something like appActions.learnSpelling and appActions.forgetLearnedSpelling and pass the tabId (always set in muon HandleContextMenu and retrieved from nodeProps.properties). this is literally just a cut and paste from appStore to windowsReducer. same thing for all of these, this is just copied over and will go through a second round of refactoring to make other changes. the other data migrations are in session store. We don't want it to get too bloated, but if we don't remove dictionary from the saved state this migration will run on every restart. diffs in git unfortunately don't highlight changes in lines, but the change here and below is adding chrome-extension: as an img-src. window width is available in appstate.windows, but at the very least we should call this once and save the value because each call forces a layout recalc in webkit. Actually we want to check to make sure that changeInfo is not null. If changeInfo.active is null that just means that the active status hasn't changed. tabUpdated could potentially be undefined for all of these. actually this comment is wrong because it defaults to an empty object. @NejcZdovc why would we remove the TODO? This doesn't change anything. I believe the race condition no longer exists, but active should be changed to check changeInfo.active if changeInfo is not empty and if changeInfo is empty (no attributes at all) it should check tab. the race condition no longer exists, but this code does not fix #9000 . shouldn't you get the new startAt time (in a tmp var) before sending the FETCH_SYNC_RECORDS request? It's extremely unlikely now that you've added the offset, but in a resource starved machine there is still a potential for a gap between the sync end/next start times. I'm not sure why this ipc message even exists, but please use appActions.loadURLRequested instead. Sending ipc messages directly is deprecated. However, I don't think this will work correctly in either case because it will create a new background page instead of opening the existing one. yea, does nothing. this is not a web-accessible api and is only used in the browser process. Actually now that we have worker threads it isn't used at all. I don't know if these are necessary anymore either since we're using chrome://brave urls now. isn't there already a commit for this?. why the change from delete to an empty list?. I think that might be a problem because at some point in the near future we won't be deleting the tabs and so this won't be equivalent to a default state. I think at some point in the near future we should convert to chromium urls with a trailing /. Removing them for backwards compat is sure to create problems in the long-term. Iterating through all the tabs is a potential performance problem that we've seen before when there are a lot of tabs so I think we should try to limit this to only the tabs that have changed. this is going to update async in another action. updateTab is designed to be called from an event, but since we're already in a reducer when this is called I think it would be better to update directly. couldn't this happen in appActions.tabWillAttach instead of having a second action for tabStripEmpty?. and actually isn't there a potential here for the windowId to be -1 at this point? Maybe it's better to capture the window id before detach?. active doesn't appear to be used?. Indeed. I was counting on ci to find any problems and it looks like this needs some rethinking. I'll just remove the calls that pass extra params for now\n. odd that these are arrays. Seems like sendToFocusedWindow should handle ...args and while I'm looking at it, it also seems odd that it's called sendToFocusedWindow, but takes a window argument. Seems like it should be sendToWindow or not take the focusedWindow as an arg. maximized and fullscreen are only the same thing on macos. We should specify one or the other. I'm only referring to the naming. We have maximized and fullscreen in one property? That's a bit confusing imo. I think this is being used in a PR in progress. the existing logic seems wrong to me because fullscreen and maximized should not be treated the same way. would this.onMouseMove = debounce(this.onMouseMove.bind(this), somevalue) not work in the constructor?. we specifically wanted to keep the timeout in the action handler vs putting it in the component. this is problematic because attempting to quit when the dialog is already open will bypass this conditional and call beforeQuit. I also don't think we should embed this logic inside sessionStoreShutdown. sessionStoreShutdown shouldn't care about downloads and this will become unwieldy if we start adding other checks. Actions won't work well because this requires a synchronous check, but we can provide a hook to register shutdown listeners that can be called inside the existing before-quit block and short-circuit before shuttingDown = true if any of the callbacks return false. . perhaps addShutdownListener?. @diracdeltas chrome://brave can't be loaded from web pages Not allowed to load local resource: chrome://brave/usr/local/brave/browser-laptop-bootstrap/README.md. When I originally tested them it also wasn't possible to load them by entering the url manually, but I just tested again and it is now possible because we added support for chrome://* urls in general so we should probably block them from the urlbar. Also, the csp can't allow something that is prohibited by default (access to file resources) which is why the file:// urls don't work. I can't verify this works at the moment because printToPDF is broken in cr62. the benefit is that it keeps the hover logic out of the components. The action shouldn't be an expensive call and is likely dwarfed by the relatively expensive setTimeout call. Have you measure the performance difference between the two of them?. I'm not 100% opposed to this change, but I'd like to see some hard perf numbers first. why is it too early?. are we ok with potentially losing these?. might be better to use muon.file.writeImportant. should use the async versions of these to avoid blocking the UI thread. https://github.com/brave/muon/pull/392/files. also verified that smooth scrolling is correctly enabled/disabled. can we use a relative path instead and make it filesystem agnostic?. I disagree that it's cleaner. First, we're back to an imperative action and those have been the source of endless problems. The component is also now deciding when the state should change, not when the UI action has been performed. The UI action is a mouse move. The state change for hover state may or may not occur based on that mouse move and conceivably something else might care about that mouse move without the timeout. . no matter what we do with this in terms of the timeout, I don't think we should go back to an imperative action. onmouseenter/leave should be changed at some point as well. I think we still need to handle the case here where the local state pref and appstate pref are out of sync. I'll add an api to check the current value in muon. should probably call this in a setImmediate block. should have a note that this is temporarily disabled and link to the issue. That seems fine. This is the problem with these github reviews sometimes because important code is often not visible. The original issue with isAutoDiscardable was missed for a similar reason. I know we can get it from the history and I should have brought this up with the original PR, but I think we should keep this method and preserve the original logic, but comment it out for now and replace with false. I think this could introduce a race condition because the webContentsCache and activeTabHistory will be temporarily out-of-sync with the app state. Can we make them reducers instead that update on the tabReplaced action?. I think we should be more specific about the type of error before we do a null key check. We don't want to assume that all exceptions are this specific issue.. recursion will be substantially more expensive than iteration to go through all the keys. why was this added?. I think we should keep the docs here with a note explaining the hack. please leave a comment explaining why we did this. there is some weird reason why these call the action instead of just setting state. To be safe I think we shouldn't change it unless we have to. we should still pass in the state even though we aren't using it. That will simplify things if we fix the real issue later.. see note  below. the idea is to hide the hack from everything except the action dispatch. we could leave this in the state since it's just true/false. we don't have a good way to do state updates in extensions with redux so an ipc message is ok, but for sending messages to the browser process we should be using actions which do work in extensions. You can't turn a global setting on/off per tab. I don't think it makes sense or is even possible in the current implementation to have site settings for safe browsing. With this implementation it could turn off for a tab loading in the background because the foreground tab has it disabled. @diracdeltas should safe browsing turn off with shields? Safe browsing seems independent of that to me.. I think this can actually be fixed by checking against the requestingUrl instead of the \"mainFrameURL\". I don't think the url of the webcontents is ever safe to use for any of these checks and Chrome also uses the requestingUrl in all but one case.. tabs can be -1 here for renderer initiated new tabs/windows that start to load before they are assigned to a window. we should also check against brave://. ",
    "bradleyrichter": "chrome and FX are similar but lets use Chrome as the reference as it seems slightly more efficient at no disadvantage that I can see.\nChrome takes a simpler approach and returns the address bar to the previous state regardless of starting state.\n1. Hitting ESC at any point during text entree for a New tab/page returns the bar to cleared and closes the search panel.\n2. When starting with an existing page and performing an edit within the URL string, hitting ESC returns the pre-edit string state and closes the panel.\n3. When starting with an existing page, selecting the entire URL and then typing clears the string upon typing. Esc returns the page URL before typing began and closes the panel.\nThanks,\nBrad\n. @bridiver I agree that the auto-resize change upon 6 tabs isn't ideal but it is probably better than the safari approach in our UI case. I did have one idea to improve this which is to have empty tab spots. So in the case if a new set, you would have one real tab and 6 more empty outlines that would allow for stretching right away instead of waiting for the 6th tab. I don't know if it would help or just add visual clutter. Let's see if the sticky + button helps this issue for you.\n. The new 10-tab default reduced the problem as you said @bsclifton but ideally we would implement a solution. I am game for trying @psimyn 's suggestion above because we are already doing this when reducing the window width. \n. here are those notes:\nnewtab_scaling_approach_desktop.pdf\n. That was the visual explanation. I don't recall an algorithm. But I am not seeing a problem with Simon's approach based on the video snip.\n. I'll find another solution for the lock icon as I would prefer not to go left aligned. The centered title is important for the friendly simple appearance of this dual-view which harks back to the original title bar before tabs robbed us of legible titles. :   )\n. Placing the lock/unlock icon to the left of the title seems like a reasonable solution. Opacity can be 50% of icon color. @diracdeltas I'm not thrilled with having an unlocked icon on all instances that are not secure. As soon as you move the mouse in the area of the URL bar, you will see the icon regardless. Can we start by showing the lock icon when locked and nothing when unlocked?\n. \n. great!\n. @psimyn Skip the \"left\" position for now. I'll remove it from the spec and wait for user requests.\n- Brad\n. @psimyn It would seem that the safest route to tab happiness is to reset the children on tab switch. Are there bad side effects? As you said above, opening a barrage of tabs-behind an active page is a use case for \"right of child\" but otherwise, opening to the immediate right should satisfy most of the time. (and pref to open at the end instead - as long as we can show you the tab.)\n. warming up this one...did we improve on this @bbondy ?\n. @psimyn The \"+\" button for new tab should probably always create a new tab at the end since it will be seen immediately to the left of the + button. Command + T could be assigned in settings but breaking the UI consistancy is questionable. So let's apply your change to context-menu opened tabs for now and we can test the other new tab instances with a few different chrome extensions.\nThanks for figuring this out!\n. Here is a menu definition that captures some of the top-level functions, and also introduces the top level items from the Bravery menu which will soon be used on a per-site basis. I omitted the standard chrome-style zoom and edit items for now to save space, as they are the most known keyboard shortcuts. If we find out that they are needed, we can add them later.\n@diracdeltas Please migrate the current windows/mac kbd shortcuts in case these are mislabeled.\n(like Exit for example)\n\n. @teemuteemu  - thanks for the suggestions. I want to create a light version of the chrome and this is looking good. Refining the tabs is on my short list. They do need to be simplified. As @bbondy  said, the round treatment in the URL bar has become part of the brand/style. I wonder how it will look in a light version? If you have time, I'd love to see it.\n@bridiver Also on the idea list. Hide the tab bar for new windows. Often, you need a new window that will be closed before other tabs are added. That would tidy up the chrome in that instance. When we get going on prefs, we can look at adding some of these things.\n. I'm excited to collect feedback through the launch. I expect a lot of debate over light vs dark. We can have both by 1.0. And track the usage eventually to decide on the default. One of the main goals is to stand out from the other browsers. We can achieve that with a light theme but not as easily.\n. Ok, let's pull this in and try it out. I'll adjust things if we run into conflicts with other buttons and colors. (save dark style for later in prefs). Thanks @teemuteemu.\n. @bbondy I'd like to try this in a build. Sounds like a good change if it doesn't reduce the discoverability of how the tab sets work. It might even improve it? Need to try...\nthanks @joselitojunior1 !\n. I agree this is a usability issue. Happened to me too. It was worse in the previous builds. I think we can further reduce the contrast of the button in the disabled state if hiding it introduces a new problem. (one of which may be some hanging buttons and pinned tabs.)\n@bbondy I do agree to also hide the tab indicator bar. We can revert if it reduces usability or put it in the future UI prefs panel.\n. @diracdeltas we may need to adjust when pinned tabs are landed. That margin space is also needed as a drop-zone for pinning.\n. @bbondy Do you want to maintain x number of logins per site? And be able to switch between them? Or just show an indicator for a particular tab?\n. @bbondy I think we need to find a more obvious description for the menu item. Does github have a polling feature?\n. Ok. That is better than Partitioned Session. Let's see how that sits with users.\nAnd with that many tab types, we may need a sub menu. It may be ok since Command+T is commonly used.\n. yeah, it's too big. The padding should be just a few pixels beyond the hover state...And this will change a bit when we implement the new tab sizing approach.\nCurrent \n\nBetter (with larger Add button as well)\n\n. @bbondy I think this PR may be replaced with a collection of small changes I have started.\nFirst, I changed the tab set button icon to a chevron to differentiate it from the page nav single arrow, and made it smaller. I also moved it closer to the tab.\n\nNext, I removed the tab button BG color, and set it to white for hover only.\n\nAlso shown on second tab set:\n\n\nI think this encompasses the margin change that was suggested? LMKWYT....\n(further adjustment may be needed yet as we go. Need to try it with pinned tabs.)\n. @bbondy @teemuteemu If we have enough time before the next release, it would be great to work on it together. The main change that needs any code added is to break the link between shared button icons for page back-forward and tabs back-forward. The rest were all value changes.\n. We still need to add the pref to open new tabs to the right of the current tab. Or just change it.. @stshank As we start implementing prefs, let us know if you have a short list of what you were hoping to find in prefs. We will try to hit the most common ones first. - Brad\n. Thanks @RacioN - I'll review it today. Adding more prominent hover states to all buttons to the do-list. \n. @bbondy yes, I like the look. Incorporating it into the next round of UI improvements.\n. Switching our tab-color method to use the top pixel color of the page instead of the theme color or extraction from favicon should solve this problem. This a particularly bad example.\n@bbondy We may need to increase the priority of this change if more issues are reported.\n. we may need to add a border to go with it.\n. something like this:\n\n. you are right - it does create a weird optical illusion that's not working...\n. @diracdeltas Did you happen to try brave.com? It was an unappetizing brown color before. I'm wondering what it looks like now?\nI do think we should stop getting colors from the favicon. It just doesn't work reliably. So if no theme color (vibrant) exists, then use default tab color which is light grey. ( @bbondy )\n. Brian picked that color :   )  ...changing it to Brave-orange.\n. @bbondy Closing this as it will be solved in next round of UI improvements. \n. sure. good idea.\n. Closing this as it actually is fixed. And even improved!\n. @BrendanEich I think this is precisely the issue you found the other day...\n. Thanks for the submission. We will be sure to take the best from the Chrome/Firefox context menus and implement your first-item suggestion for efficient access to \"Open link in new tab\".\n. @sotojuan Thanks for your feedback and explanation. We are releasing an update today that will allow you to customize how many tabs you would like in each set. If you prefer the Chrome/Safari tab organization, you can set the number to 100 and you won't see the tab sets UI until you reach 101 tabs.\nOur reasoning behind the design of the tab set UI was to help users organize tabs in new ways that were not achievable with the current approach used in either Chrome (Safari) or Firefox. Our first round of UX research showed that people had a love/hate relationship with both Tab-Shrinking and Tab-scrolling. Some users used multiple windows to organize tabs into sub groups but the windows became cumbersome to manage.\nTab sets try to allow for an infinite number of tabs while remaining legible and recognizable yet still quick to navigate through, and provide a more organized approach to sub-grouping.\nIn the near future, we will support tab organization by dragging tabs to different sets, and manipulating entire sets of tabs.\n@Sweetie-Belle With the new prefs setting, please try a larger number and let me know if you find a number that works for you. The default should be 6 tabs which is usually a comfortable number on laptops that still allow enough text in the tab to easily recognize. Perhaps this default can be increased to 8?\nThanks all for the feedback. Keep it coming!\n-Brad\n. closing this since we now have user-definable tabs-per-set and much more positive feedback than negative on tab sets in general.\n. @sj-diamond I agree the use case is warranted. It should be solved with some future additions. I'll keep this open and post a UI mockup to get your feedback.\nThanks for the detail in your request.  - Brad\n. Proposed UI for managing search engines, and also quick-type shortcuts. I would like to avoid adding a second search box since we will aim to have the most powerful and easy to use combo-search bar. Please share feedback...I'm all ears.  :   )\n(settings panel to manage search engines, and contextual help regarding slash commands)\n\n(ignore the old UI skin, search UI is still relevant and planned for future work)\n\n. Yeah, the 2nd bar seems to have trended away in favor of more flexibility/functionality in the main bar in most browsers. I\u2019ll keep my eye out for request volume though\u2026.thanks.\n\nOn Feb 18, 2016, at 2:45 PM, SJ Diamond notifications@github.com wrote:\nSo, even as optionally available feature a second search box is not wished? Too bad.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/brave/browser-laptop/issues/466#issuecomment-185965537.\n. I agree. And the early adopters have different requests/needs than the eventual mass market. \nOn Feb 18, 2016, at 3:21 PM, SJ Diamond notifications@github.com wrote:\nThat may be true, but still keep in mind that flexibility and also adding so called non famous features these days can bring you quite a lot of users when they discover Brave and find out that it supports their features.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/brave/browser-laptop/issues/466#issuecomment-185977619.\n. @bsclifton \n\nWe can close but I'll monitor for requests for a second redundant search box ala Firefox style as explained by @SJ-Diamond .. Thanks @Tombsmen . I'll add this to the specs.\n. Thanks @Tombsmen . I'll add this to the specs.\n. Sure. I'll minimize it in the next batch of UI refinements. @bridiver may have some info on needing some of this for an anti-aliasing fix.\n. yep...much improved. Closing this one.\n. @bridiver how would we go about extending the blend if we wanted to try something more like git's message window border? over time I will keep adding detail without giving up the clean look and this might be nice to try:\n\n. @ron-houk nice suggestion. Do you have any feeling of usage percentage? This may need to go further down the list but it sounds ideal for a customer subset.\n. @asadotzler Great design detail to clean up. thanks!\n. @SJ-Diamond Several requests came in to spend more address bar area on the URL box so we made it wider. I'm trying to hang on to some \"white space\" to keep the open style...\nSee if you like it better in the next update.\n. We were hearing more complaints around not having enough grab area. I think we are at a happy place now. LMK if you all feel differently after some usage time.\n(I may add 2px to the top edge soon as well)\n. Ironically I tried the little burgler today. Still needs sunglasses. Maybe @jkup  can help me use a custom favicon of the sunglasses?\nAlso, we should make an about page for that tab as well. \n\nOn Nov 15, 2016, at 10:40 PM, Suguru Hirahara notifications@github.com wrote:\n@bradleyrichter do you have any suggestion in FA?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @luixxiul I have it in the new sprite bitmaps but we will need to also implement the threshold color change when used in the tab.. New tab styles combined with purple tab color for private non-selected creates a usability issue. Can't tell which tab is active at smaller sizes. \n\nIt would be nice to cherry pick this tab color fix. \n\nOn Mar 29, 2017, at 5:51 AM, Brian R. Bondy notifications@github.com wrote:\nmoved to 0.14.1 for this reasoning: #7943 (comment)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @asadotzler Thanks for the suggestion. I know that clutter balance is a personal taste. Given that there will be more things going into the URL bar, I will keep them outside. I'll tighten the padding so they are less floaty...\n. \n\n\n. I'll fix this in another PR after the new icon lands. Thanks!\n. looking forward to this as well as a list of tab-set related features in the future.\n- reordering sets\n- bookmarking sets\n- moving sets to a new window\n- closing sets via context menu\n- set previews\n. @TognaBologna You are right that moving tabs from one window to another is not fully implemented.\nDragging a tab to a tab set indicator does work but it needs refinement, especially in the hover states.\nDragging to the tab set navigation arrow does not work yet.\n. @NumDeP I'm not quite able to visualize what you have in your vision but I do think we could utilize some of the currently implemented features to enhance dragging tabs into specific locations within a tab set. \nThe tab set indicator currently works as a jump button and a hover preview button. If you hover on it, it shows you the tabs that lie within. \nWe could potentially extend this so that while dragging a tab, if you pause over a tab set indicator, it could temporarily switch the set and allow you to then drop the tab into position in that set. The tab would then become selected and also the set.\nIf you aborted, the set would return to previously displayed set.\nDoes this make sense?\n(cc @petemill ). Bug is now fixed in latest on Mac! But drag into page container is still ignored. Let's change the title.\n. This was getting better through 0.12.5 and now became worse again with 0.13.0 based on my personal mac OS experience.. I'll make something different for this. Potentially unique favs for each about:page in the future.\n. Hi @antonycourtney! Thanks for spending the time to test-flight your plugin. I was able to build and run the fork, and gave it a thorough test drive. I love some of the things this solves or improves with tab search and management. My main concern is that we have pieces and parts planned for different places such as through the searchable URL bar, and in the tab sets UI. \nSo rather than adding a new menu and a button, would you be interested in helping with a tighter integration in those places?\n- Brad\n. @bbondy certainly!\nhttps://www.typetester.org/\nInitially I had to unblock 3rd party cookies for typekit fonts to appear. Give it a try...we may need to add whitelisting for Adobe TypeKit Fonts.\n. so the ignore command didn't work and it appeared as a removal?\n. We should keep one of them. It promotes teamwork.  :   )\nChrome has Report and Issue. FX has Submit feedback. Any pref @bbondy ?\n. this fits. thanks.\n. yes...\nAdd Funds should be \"Add funds...\" and use smaller text. Button should match height of budget menu. Said menu should move up to align with \"Add funds...\" button.\n. fine to remove on this one. Just remember that we do want to inject and retain some personality in places. (inspired by slack) But please suggest improvements in all areas when you encounter them.\n. I agree. The search icon should be displayed any time you are searching regardless of previous/current page because the URL bar mode changes.. \"Select the first tab\" should be removed.. whoops! good catch.. This would not fit well since it is a popup menu but the \"and\" is a good improvement.. correct. It should start new, not rejoin.. I hate the way the word looks but since it is more correct, let's use \"synced\".. mockup:\n\n. This needs a different string like \"Include this site in Brave Payments contributions.\"\nIf that is too long for a menu, \"Include site in Brave Payments\". ",
    "jonathansampson": "Closing, as it has been well over a year with no movement on this.\nIf you still feel that this is an issue, please re-open.. +1 from Twitter; a user who would like to use Brave internally, but cannot due to the lack of window.prompt: https://twitter.com/jamonholmgren/status/821964305964765184. Just learned from a user today that WooCommerce (3+ million WordPress users) uses window.prompt.. Chromium to change behavior of dialogs: Chromium policy on JavaScript dialogs. Am I correct that the button, for now, is entirely non-operable? I was clicking it, and seeing no response. I suspected it might have been a bug, but this ticket is making me think otherwise :)\n. @TristanWiley Testing extensions is fairly straight-forward: Quickly test out an extension.\n. @c-u-b Would you mind testing the extension? https://medium.com/@jonathansampson/testing-chrome-extensions-in-brave-8e25d1f7386d. @bbondy Thoughts on solving via the approach in https://github.com/brave/browser-laptop/pull/7525? This issue feels like it may need a more robust solution.. One limitation in using the manifest (presently) is that we aren't checking if the user has Replace Ads enabled. We'll want to check that before loading any styles to hide elements, or scripts to remove nodes.. Sorry, those are the left and right arrows, which advance forward or backward in your session history.\nGo to google.com\nGo to bing.com\nPress alt+left-arrow\nYou are now back on Google.com\nMay be different in OSX. Cmd, rather than alt, maybe.\n. @bbondy It does appear that control-left-arrow and control-right-arrow do perform the back/forward navigation. This is not the case with any other browser on Windows, to my knowledge. So there may be a muscle-memory/discoverability issue for Windows users of Brave Software.\n. @paulcbetts Were there any details published about how the upgrade offered more protection against this strategy? The problem is reported to exist beyond the installation process as well.. @bsclifton @Liunkae I suspect we don't preserve a:visited styles in order to further protect user privacy: If I flood the DOM with links, and check their rendered color, I can tell where you go (and fingerprint you).\nWe may consider allowing the styling, but breaking the integrity of getComputedStyle, such that it returns the a:link color, rather than the a:visited color. I believe this is what some browsers today are doing. I'd love to get @diracdeltas' input on this approach as a potential alternative to full-on blocking.. @diracdeltas I'm surprised we don't get this for free from Chromium\u2026 Or did we?. After testing Mercury Reader, I found that Brave has pretty good OOB support. I'm going to create a master issue to track any needed APIs, and progress towards supporting this as a Reader option in future builds: https://chrome.google.com/webstore/detail/mercury-reader/oknpjjbmpnndlpmnhmekjpocelpnlfdi. @patertmg How was the Mercury Reader experience?. Just ran through another test with Mercury; I noticed only the same issue(s) that @patertmg reported (missing browserAction icon). Here's the logic which shows the browserAction icon:\nhttps://github.com/brave/browser-laptop/blob/d0c2c6c9d8744557e1d4452a386c46e1649317b6/app/common/state/extensionState.js#L90-L94\nNote that Mercury doesn't provide 16 or 38 pixel icons:\n\"icons\": {\n      \"128\": \"img/icon-128.png\",\n      \"16\": \"img/icon-16.png\",\n      \"48\": \"img/icon-48.png\"\n   },\n@bbondy, what are your thoughts here? Would https://github.com/mozilla/readability be a better route to take, rather than something like Mercury?. We also appear to support https://brave.com/downloads, without the .html extension. May be preferred, aesthetically.. @luixxiul That appears to cause the type of problems we faced in the design discussion last night. Namely, interacting with some of the document elements will cause the shadow to vanish; often only regions of it will vanish.\n\n. @bridiver You're right; this approach is completely wrong. 0,0 is top-left of primary display, which may be to the right of any secondary display, thus requiring negative coordinates for browser placement to some secondary displays.\nSo the problem as I see it now is: Coordinates are based on primary display's top-left corner. Coordinates may contain negative values, in order to place Brave on a secondary display. In some environments, the primary display may change without explicit user input. When that happens, Brave's UI may become unreachable.\nI'll spend some more time thinking about this.. We call out to this.props.appState.get('notifications') 3-4 times. Can we do this once, and then store the result?. Is that a stray , at the end of the gradient?. @cezaraugusto Yes. This way we only have to go searching for the object once.. We can call notifications.map instead, to avoid the redundant lookup.. notifications={notifications} to avoid extra lookup.. Done.. Done.. @cezaraugusto What do you mean by toggling? Were you enabling and disabling the extension(s) in Preferences?\nNevermind. I repro.. I don't think we should be using non-black hex colors for shadows. rgba handles this particular thing much better, IMHO.. Can we avoid doing parseInt twice for this.width and this.height?. Can we avoid doing parseInt twice for this.width and this.height?. user-select (userSelect) is supported unprefixed in Blink. We should avoid using the prefixed version.. To echo my earlier comment; I don't think we should use non-black HEX colors for shadows. rgba handles this much better.. @bsclifton Looking at this a second time, should we instead go with something like this?\njs\n['Pocket', 'Honey'].reduce( (curr, key) => {\n    return ( curr[ key.toLowerCase() ] = { extensionName: key } ), curr\n}, {}). We'll be shipping Honey soon (perhaps in 0.14.2). Can we include it?\nhttps://chrome.google.com/webstore/detail/honey/bmnlcjabgnpnenekpadlanbbkooimhnj. Similar pattern in extensionsTab.js. There false was used; here null is being used. Can we go with one or the other, so there isn't any confusion about whether or not the two behave differently?\n+    isPasswordManager(extensionId)\n+      ? aboutActions.changeSetting(settings.ACTIVE_PASSWORD_MANAGER, extensionId)\n+      : aboutActions.changeSetting(getExtensionSetting(extensionId), false). Please add Honey :). Please add Honey.. Please add Honey.. Should we continue to support about:extensions after this?. Good call on adding these tests; I left the regex case-sensitive to avoid conflating the browser with the region of the browser sharing the same name :) Glad you did an explicit test.. I think you meant top + height here.. @NejcZdovc What do you suggest as an alternative?. Oh, good idea @luixxiul with vh. Since dialogs are pretty much always sized and positioned relatively to the viewport, it makes sense to use vh and vw. What do you think, @cezaraugusto?. @bridiver The tab-specific action object lacks a title and base_path. I'm plucking them off of the more general browser action object. Is this the right way to resolve their absence, or should we be adding them when the object is passing through Muon?. @bsclifton honey=Honey was originally suggested here. @cezaraugusto, please see the discussion here regarding this change.. @kevinlawler We should probably open up a PR to merge your cookies.getAll stub into Muon. Thoughts? cc @bsclifton . Can we do a single const downloads = state.get('downloads') so we don't need to make 2 calls to state.get?. We should avoid doing multiple lookups.\njs\nlet location = data.get('location') || ''\nlet partitionNumber = data.get('partitionNumber')\nreturn location + (partitionNumber ? '|' + partitionNumber : ''). Problem exists here with locations like about:preferences#shields. This will not be found in the aboutUrls list, and will therefore reveal both Inspect Element, and the Enable/Disable Shields context-menu items. We should consider dropping any url-fragment at this point.. I believe you mean Currently in progress, or Currently processing.. Should we go ahead and use the same value as extensions.properties? Otherwise the name changes in preferences before and after enabling the Bitwarden extension. (Same for other extension strings in this file). ",
    "LoloIrie": "BTW, shortcut for the dev tool should be F12 like other browsers\n. So quick........ Well done :)\n. F12 doesn't open (anymore ?) the dev console\nF11 should open the full screen view as well (instead CTRL+Shift+F)\nhttps://support.mozilla.org/en-US/kb/keyboard-shortcuts-perform-firefox-tasks-quickly\nhttps://support.google.com/chrome/answer/157179?hl=en\nThanks :)\n. Oh I was blind, sorry. It's fine :)\n. Using standards shortcuts would probably help (F5 vs CTRL+F5 like Chrome)\nhttps://support.google.com/chrome/answer/157179?hl=en\nBTW: I'm not able to reopen this issue, like I didn't close it myself ;)\n. ",
    "weems": "@bbondy thanks.\n. Seems at this time Brave 0.8.3 is completely unique (\"Your browser fingerprint appears to be unique among the 137,149 tested so far.\"). I would like to learn more about how this is exploited. System Fonts in Chrome 49 reveals 17.07 bits of information, in Brave 0.8.3 for System Fonts the test states 13.74 bits of information is exfiltrated by the browser fingerprinting exploit. Interesting that as of 0.8.3 we already show less font info than Chrome, it should be increased, but limiting the UA will definitely make Brave more secure relative to the agents of other browsers. But the goal seems to be security in obscurity, right? I am also interested in why we reveal Mozilla, Chrome, and Safari? Perhaps the Safari is there because I am on MacIntel. \n. @wrkerr definitely in plans, but we have to prioritize what will be in 1.0 so as to move as fast as possible and meet schedule on time :) Might want to check https://brave.com/dev_timeline.html\n. Agreed, Settings Menu is much more important.\n. @adamcweitzman still a WIP I think. \n. Seconding @diracdeltas idea to not support flash, though it could be nice to have some sort of option as users definitely desire to use Brave on sites which only work with flash.\n. Prioritization for sites with the most usage will be important as more requests for flash / plugin sites are made. Scaling is going to be important.\n. Confirmed what @Spammie is experiencing on https://play.spotify.com in Brave 0.7.16\n. There is a  <div id=\"html5audio\"></div> tag, but I think the actual authentication / playing of music is negotiated with a flash plugin.\n. It is not HTML5 (pure at least) tries to use the following: https:\\/\\/play.spotify.edgekey.net\\/client\\/9cd7401\\/flash\\/bridge.swf\n. @bbondy Does this include zoom gesture on laptops? \n. If Brave doesn't have access to the Verisign Utility, I think there is a open source protocol for TSA functionality here: https://www.freetsa.org/index_en.php\n. @paulcbetts oh okay, cool.\n. @elsehow @bbondy As long as we have a place where you see that the file has downloaded, and can open, pause, cancel etc, I think that is likely what most users will care about. \n. I want to investigate this to learn more about the code, but a more experienced person may want to do the actual work on it.\n. ",
    "alexwykoff": "Still an issue in 0.12.8. Prioritizing to 1.2\n. 0.15.3 https://github.com/brave/browser-laptop/commit/1c04c53f6dc4d9ac568ada6eb8cee1c826b090c3 OS X : \nattempt to open developer tools via the keyboard shortcut, no window is opened\nattempt to open developer tools via the menu, no window is opened. +1 from support https://linkbubble.zendesk.com/agent/tickets/5307\n. lots of +1's from community on this. Closing due to:\n1. No activity in 2 or less months.\n2. Appears to be low impact.\n3. No milestone assigned.\n. Closing due to:\n1. No activity in 2 or less months.\n2. Appears to be low impact.\n3. No milestone assigned.\n4. Pretty sure we already fixed this.\n. @lukemulks please migrate to the Brave core repos as needed \ud83d\ude04 . Closing due to:\n1. No activity in 2 or less months.\n2. Appears to be low impact.\n3. No milestone assigned.\n. +1 from support : https://linkbubble.zendesk.com/agent/tickets/6356\n. Closing due to:\n1. No activity in 2 or less months.\n2. Appears to be low impact.\n3. No milestone assigned.\n. Closing due to:\n1. No activity in 2 or less months.\n2. Appears to be low impact.\n3. No milestone assigned.\n. Netflix is #37 on Alexa's most popular site index and this is obviously a dealbreaker for many browser users.\n. Barring some unforeseen catastrophe, it's \"coming soon\" :)\nIt's locked in I assure you, and I'll be all to happy to QA this feature!\n. Closing due to:\n1. No activity in 2 or less months.\n2. Appears to be low impact.\n3. No milestone assigned.\n. +1 from support\n. +1 from support : https://linkbubble.zendesk.com/agent/tickets/6311\n. @evq how is this looking for 0.20? . Shipped\n. Ah, quite right. My bad. \n. We do leave PRs in here as well. I did notice at least one bad link while testing (transposed two numbers while editing). \nI'll give this a thorough scrub and resubmit. \nThanks for the review!\n. they're all in here : https://github.com/brave/browser-laptop/issues?q=is%3Aissue+label%3Arelease-notes%2Finclude+is%3Aclosed+milestone%3A0.13.2. This appears to be describing and update/edit case if I am not mistaken. \nWhat I did not notice is a deletion test case.. Rather than using explicit pauses, is there no promise (or set of nested promises) we can create?\n. What happens if the separate machines have overlapping timestamps for history? Do we have tiebreaker logic?. What happens for conflicting site preferences? How do we tiebreak?. Oh funny, not that I'm aware of @luixxiul . I based off of master, so I'm not sure why that deviated. \n@bsclifton should we default to prerelease like that?. 'Reported url' maybe could be a little strange. Let's try 'URL'. ",
    "anasant": "+1 on request for cmd+W to close dev tools window. ",
    "Liunkae": "+1 from #3044 and #6191.. Related to: #3343. Warning: The Try it button in the example above crashes the browser. Reproduced with Brave 0.20.30 on macOS 0.13.x.. Related: #2468 (support 32-bit Linux). Related: #4600\n. @Zerophase Yes. A developer release of the new version is already available: https://brave.com/download-dev. @pietercdevries: Not yet, but it will be implemented before or with the release of Brave 1.0.. Most context menus are native context menus, so we'd have to use the non-native (React) menus to add style to them. I know it's doable in most places, but I'm not sure about everywhere.. I think Firefox is using non-native context menus. There's a subtle difference in the style and animation compared to native context menus, at least on my OS (macOS).. @Vispocks That is just a mockup. Dark mode has not been implemented yet.\nGood news for everyone: Many of the tasks needed for dark mode are either completed or pending: https://github.com/brave/browser-laptop/projects/15. Still reproducible with Brave 0.12.3 on macOS 10.12.\n. Still reproducible with Brave 0.13.0 on macOS 10.12.x.. Still reproducible with Brave 0.14.0 (c23efa3, Muon 2.57.7, libchromiumcontent 57.0.2987.110) on macOS 10.12.x. Still reproducible with Brave 0.15.0 (71fb730, Muon 2.58.7, libchromiumcontent 58.0.3029.81) on macOS 10.12.x.. Still reproducible.\n\nBrave: 0.17.12 \nrev: 0095c359d27c5387a07152fdec161dfc54c5fef4 \nMuon: 4.1.6 \nlibchromiumcontent: 59.0.3071.109 \nV8: 5.9.211.38 \nNode.js: 7.9.0 \nUpdate Channel: dev \nos.platform: darwin \nos.release: 16.6.0 \nos.arch: x64. This is fixed as of Brave 0.19.70 on macOS 10.13.. +1 from #438.\n. Not to be confused with #4402. This issue refers to creating a new, separate Brave process with an existing tab.\nEdit: Actually, it's a duplicate of #4402.. @bsclifton Yes, I think so. I'll close this as a duplicate of #4402.. +1 from #5781.. Duplicate of #405.\n. Is this still a problem?. As of 0.13.0, the text rendering looks the same to me.\nExample: https://www.apple.com/newsroom/2017/01/apple-fy-17-first-quarter-results-conference-call.html\nBrave:\n\nSafari:\n\n. No recent reports. Closing (but please reopen if needed).. No longer a problem for me with the latest version of Brave (0.17.13).. +1 from this comment.\n. I think this is something every other browser has. It would be nice to have a setting for it.. As of 0.15.310, visited links seem to be highlighted for me.. See also #9351 (Visited links are not reset when history is cleared). Support for U2F keys is currently set for the next scheduled release, 0.20.x Hotfix 2. (PR #10530). Please try the new commit (d289f1a).\n. \"Select it's parent tab\" should be \"Select its parent tab\".. Not sure. I'll remove it.. Sure.. @luixxiul Thanks! Added.. @kumarrishav Could you please change this to braveHelpIOS=Brave Help iOS\u2026 (correct iOS capitalization)?. ",
    "srirambv": "Doesn't work on Win 10 x64 with 0.15.3 preview 3. Confirmed not working on Windows.. +3 from https://community.brave.com/t/brave-crashes-upon-javascript-popup-in-google-tasks/15138/6\n@bsclifton can this be moved up to 0.24.x?. +1 on SHA Checksum from community https://community.brave.com/t/sha256-checksum-for-binaries/1926. @danshumaker  1Password is available by default. You can enabled it from settings page under security. Similar issue on CBC.ca  Video only plays when Ad/Tracker is disabled. Also enabling Fingerprint Protection fails to load video controls\n. +1 from community https://community.brave.com/t/user-configuration-of-browser-cache/5756/4. +1 from community https://community.brave.com/t/adblock-isnt-good/1705. +1 from community https://community.brave.com/t/gmail-mail-promotion-tab-ads-not-block-by-brave-browser/7546. +1 from https://community.brave.com/t/the-boxes-dont-leave/17781. +1 from fadiphi via https://github.com/brave/brave-browser/issues/391. This should be fixed with brave-core. Command line options are available as out-of-box feature on brave-core\ncc: @bsclifton . There has been two support tickets questioning the removal of backspace.  Have provided workarounds for the users but there might be an increase in users asking to include this feature again\nhttps://linkbubble.zendesk.com/agent/tickets/6661\nhttps://linkbubble.zendesk.com/agent/tickets/6689\n@diracdeltas Can we include the Chrome extension for 1.0 if start seeing an increase in support tickets on this?\n. One more from support https://linkbubble.zendesk.com/agent/tickets/6692\n. +1 from community https://community.brave.com/t/change-install-folder/945. +1 from community https://community.brave.com/t/firewall-problems-windows-10/6824/2. @bsclifton Looks really good. Making urls align in a column would make it look even more polished like a tabular items something similar to this (personal preference) \n\n. +1 from community https://community.brave.com/t/reader-view-like-in-firefox/7143. +1 from https://community.brave.com/t/reader-view-vue-lecture/21364. Verified on Windows x64\n\n0.22.6 e6ff4ea\nlibchromiumcontent: 65.0.3325.162\nmuon: 5.1.0\nTest plan works but still have issues relating to other domain login (#13564)\n\nVerified on macOS 10.12.6 x64 using the following build:\n 0.22.7 https://github.com/brave/browser-laptop/commit/8bb7e77f69bca186429aafda4bc6ba4d82a5de47\n libchromiumcontent: 65.0.3325.181\n* muon: 5.1.1\nVerified on Ubuntu 17.10 x64 using the following build:\n 0.22.8 3ae27f2cf188b50ff64877a0968361d625fb84ca\n libchromiumcontent: 65.0.3325.181\n* muon: 5.1.2\nAlso checked the following websites using Ubuntu 17.10 x64:\n Google/Gmail - PASSED\n GitHub - PASSED\n* FB - See #13564. Same as https://github.com/brave/browser-laptop/issues/2686. Content doesn't fill up until the window is moved to a certain length (Visible on slashdot.org site, doesn't fill until its stopped)\n\n. Fixed typo . Not sure if the first line about visiting wiki makes sense at top.  I would have it like this \n```\nHave you searched for similar issues? There is a lot of feedback and bug reports that we have received and closed as duplicate.\nPlease search for existing issue via GitHub search or using a search engines. \nPlease check our community site: https://communit.brave.com and also have a look at our Wiki: https://github.com/brave/browser-laptop/wiki/\n`` . Just replacinggreenwith@siteEVColor` fixes it. ",
    "bsclifton": "@bbondy wasn't this fixed by reverting the share functionality?. ready for re-testing. @EPadronU what exactly are you trying to figure out? (can you please explain more?)\nThis issue is pretty old- if you have a specific problem, I'd encourage you to create a new issue.  Thanks! :smile: . This is a Chromium bug: https://bugs.chromium.org/p/chromium/issues/detail?id=641509 and still repro's perfectly (Chromium 54) with the steps by @serv \nWith our new browser-laptop-bootstrap setup, it would be pretty easy to fix this and create a patch (as well as upstream it). Definitely low priority though. Confirmed this doesn't happen with Brave Core; closing as wontfix. +1 from @CliqueBait via https://github.com/brave/browser-laptop/issues/3295\n. @bridiver do you know if the underlying support is there for this?  If so, I can knock this out pretty easily. It should help w/ out extension support. +1 from peterkroon via https://github.com/brave/browser-laptop/issues/11010\n\nSteps to Reproduce\nGo to: https://www.w3schools.com/js/tryit.asp?filename=tryjs_prompt\nClick on button \"Try it!\". @shortstuffsushi not bypassed for any reason- we just haven't had the time to implement it yet\n\nI did rework a lot of the alert code and I believe it should be somewhat easy to add:\nHere is the block of code that gets called when window.prompt is triggered\nhttps://github.com/brave/browser-laptop/blob/41a0523d088f2c90a2148eafd40f52b9d10dcedf/app/browser/tabMessageBox.js#L47-L52\nThe smart move might be to edit the MessageBox component to allow for an edit control and handle prompts using the existing tabMessageBox code\n. Tentatively assigning to 0.23.x since this does cause a crash. I've confirmed this still is an issue and it does seem a bit weird.\nSTR that make it obvious:\n1) Maximize window\n2) Go to prefs; set Tabs => Tabs per tab page to 6\n3) Keep hitting the + next to tabs until you have 5 tabs\n4) Hit the + one more time- notice that all the tabs resize themselves, becoming much wider\n5) Close the 6th tab- notice all the tabs shrink back to their previous size\nThis problem seems to be masked because the browser (at least in my case) defaults to 10 tabs per page. That is enough tabs that it does properly fill out the window and it's not noticeable.\n@bradleyrichter: are you happy with the current behavior?\n. Closing in favor of https://github.com/brave/brave-browser/issues/676. Marked as blocked since we can't really start this yet. Looks to be already fixed :smile: \nhttps://github.com/brave/browser-laptop/commit/d98f76391f78ddce63fe2dd643525d54e6acaf6a#diff-98f0ed24f8f0fed04b7949391f32909e\n. @bbondy after reading more in https://github.com/electron/electron/issues/1954, I think you're exactly right. Basically, it could break the already pinned Brave icon when the auto-updater runs and installs a new version.  I have seen this happen before; the old pinned icon turns into a blank document looking icon and then I need to use the desktop shortcut and re-pin the executable\nI had mistakenly thought the packaging process was overridden with the value provided by the above commit (since the same file handles squirrel command line params)\n. Closing in favor of https://github.com/brave/brave-browser/issues/677. Closing since this appears to be fixed (see screenshot)\nThis may have been fixed with https://github.com/brave/browser-laptop/commit/82a2ac64b9897184cc01feac034c3051728a6490#diff-98f0ed24f8f0fed04b7949391f32909eL11 or an earlier commit\n\n. With not a lot of work, I was able to get this customized pretty nicely :smile: Works great for non-live tile applications.  I created a new issue and put a screencap of a proposed fix there\nhttps://github.com/brave/browser-laptop/issues/2372\n. For this issue, we could start off by just having the checksums available.  It might also be great to have a page showing verified contributors (and their keys)\nWe can also display how to check if the executable is signed:\n- macOS can verify by running spctl --assess --verbose /Applications/Brave.app/. If app is signed, it should return something like this:\n/Applications/Brave.app/: accepted\nsource=Developer ID\n- Windows Authenticode signature can be checked by right clicking the installer and choosing properties. Once open, go to the Digital Signatures tab and double click on the signature. Make sure it says \"The digital signature is OK\"\n- Linux packages are signed (the install process goes over how to add the keys)\nMany of us are signing our commits (which is great) but the version bump commit is not signed (it happens in an automated build). Also merge commits are not signed. +1 from @DarkCoridor via https://github.com/brave/browser-laptop/issues/10601\n\nI am unable to find the fingerprint of the various PGP signing keys you use to sign Linux packages. Thus there is no way to know if the key you downloading at:\nhttps://s3-us-west-2.amazonaws.com/brave-apt/keys.asc\nIs actually the key meant to be there. Any malicious party with access to the AWS infrastructure could swap out malicious code and sign that with a fake key and it would seem \"secure\" to an end user.. @DtpEJsaYXDU4GDH8dE4MyI9VrieF0UZpPZ0K76K great catch- we just recently (last week) merged code for true release channels. After doing that, I published a new Beta... but neglected to update our Linux staging repo \ud83d\ude04 \n\nI'm attempting to do a publish now- please bear with me here. @DtpEJsaYXDU4GDH8dE4MyI9VrieF0UZpPZ0K76K OK the staging repo is now updated \ud83d\ude04 \nWould you mind checking again?. @diracdeltas both keys should be ~encrypted~ signed with my PGP key:\nhttps://keybase.io/bsclifton/pgp_keys.asc?fingerprint=d16c7e228bb0a9571f70605737ff5f19022427f2. @DtpEJsaYXDU4GDH8dE4MyI9VrieF0UZpPZ0K76K RE: some of the above- staging has been updated- the binary there is called brave-beta (not brave).  We just updated the docs today here:\nhttps://github.com/brave/browser-laptop/blob/master/docs/linuxInstall.md#debian-jessie-and-ubuntu-artful-zesty-yakkety-xenial-and-trusty-amd64. As we transition from browser-laptop over to brave-core, we'll want to revisit this discussion\nClosing this in favor of https://github.com/brave/brave-browser/issues/837. Per https://github.com/brave/browser-laptop/issues/5683, we should allow for folks to modify:\n- the size of tabs\n- fonts used in the tabs. Closing in favor of https://github.com/brave/brave-browser/issues/774. @jonathansampson aren't there command line tools available via NPM that you can package / unpack chrome extensions?. @nickschurch thanks- I meant to give an update but totally forgot\nFor everyone subscribed here: I created an experimental extension branch back in December which folks can try here (if you're up for running from source):\nhttps://github.com/bsclifton/browser-laptop/tree/experimental-extensions\nHere's the commit which does the magic (which includes testing steps):\nhttps://github.com/bsclifton/browser-laptop/commit/b777047fabc08c4e077226541ca4caa7e1cd633f\nI tested this out by downloading/installing about 20 extensions and they all seemed to work good (I'll admit, I didn't test in depth).  For folks wanting to try extensions, I'd highly recommend pulling down my fork (or just apply that patch on master). I'm going to close this as wontfix... because it will be addressed with Brave Core - the upcoming version of Brave which uses a forked Chromium UI instead of Muon. We already have this installing extensions just fine and the build in chrome://extensions/ page works great (you can load unpacked extensions, etc)\nWe should have a build of this new Brave available in a few months- hang tight \ud83d\ude04 . @pkieltyka we launched brave-core on our Beta channel recently, which you can find here:\nhttps://brave.com/download-beta\nPer our release schedule, we're targeting a stable release of brave-core just over a week from now (2018 Oct 16)\nAfter the release channel ships, we'll (schedule undecided - but likely in the next few months) work on having this version of the browser update itself to brave-core. +1 from https://github.com/brave/browser-laptop/issues/6488\n\nSteps to reproduce:\n- Navigate to https://twitter.com/ThePracticalDev/status/814551019522785280\n- Click the blue play button\n- Observe tab contents as GIF plays. Closing as wontfix since this is fixed with Brave Core. Closing in favor of https://github.com/brave/brave-browser/issues/675. +1 from @savolla via https://github.com/brave/browser-laptop/issues/10065 \ud83d\ude04 . Labelling with fixed-with-fork. The Chromium fork which we've done (coming later this year - click here for the blog post) fixes this problem.\n\nYou can take a peek at the different themes that @jamesmudgett has put together here (both a dark UI and a light UI):\nhttps://github.com/brave/brave-chromium-themes\nWe don't have any binaries available because it's still a work-in-progress, but in case folks would like to try building from source, please check out:\nhttps://github.com/brave/brave-browser. @jtveg here's the issue for the Android version in case you wanted to post or give it a thumbs up \ud83d\ude04 \nhttps://github.com/brave/browser-android-tabs/issues/81. @killernot see post above (https://github.com/brave/browser-laptop/issues/271#issuecomment-383998029)\nWith the current Muon browser (browser-laptop), this can be quite a chore. We'd definitely welcome any contributions helping achieve this goal, but we do already have this working with our new Chromium UI (aka Brave Core - which should be available in a few months). Screenshot of the Dark theme in action in brave-core:\n\n. @JonnyRedHed it's experimental at the moment, but you can try the new Brave here:\nhttps://github.com/brave/brave-browser/releases\nWe're working hard on getting this ready for Beta. Let us know what you think \ud83d\ude04 . I don't know if there's a way to separate this entirely- I think the best way to solve it would be to create a new profile using the --user-data-dir-name argument. I created https://github.com/brave/brave-browser/issues/695 to track a more elegant solution in brave-core \ud83d\ude04 . Closing as stale since there haven't been any additional comments / updates / +1s. no longer valid. This is underway currently in Brave Core by @Snuupy! Since this won't be addressed in our current codebase (Muon), I'm going to close this issue as wontfix\nFor more info about the fix we ARE doing, subscribe to https://github.com/brave/brave-browser/issues/94 and watch for updates \ud83d\ude04 . Updated labels based on issue (since this is relating to running from source, not the packaged build)\n. no longer valid; we don't replace/insert ads. @huuhaa does anything show in console, if you open the dev tools? (ex: F12 or cmd+option+i) Any info about that is appreciated.  You can also open the network tab and see what HTTP response you are sent back (which I would assume is a 401 challenge, if you're expecting to see basic auth prompt)\n. @aliddell the issue you mentioned above was originally tracked with https://github.com/brave/browser-laptop/issues/9193\nWould you mind leaving some comments there about your setup? (@crysman also didn't have luck with the fix I attempted and is running Xubuntu 16.10).  The fix I attempted was discovered by @DivineOmega and simply updates the .desktop file by providing a different Exec line (is that file being ignored perhaps?)\nBecause you can pass Chromium flags to Brave (which are in the --flagName=value format), the path argument that would get passed to Brave needs to be escaped.  For example:\nbrave -- \"pathHere\"\nBTW: for folks curious about the various flags, you can check out a full list here:\nhttps://peter.sh/experiments/chromium-command-line-switches/. @srirambv many of the non-working switches will be fixed with Brave Core - the documentation of them still has to be done.  I created https://github.com/brave/brave-browser/issues/393 to track that work in Brave Core \ud83d\ude04 \nSince we won't be getting around to it with browser-laptop, I'm going to close this issue as wontfix. Resolved with https://github.com/brave/browser-laptop/commit/98113519e1d335a390301f5d053b6ab5f1a4a43a. @Liunkae are you sure this isn't the same as https://github.com/brave/browser-laptop/issues/4402?\nEach tab should be a different process (EXE on Windows, Helper on macOS).  If so, we can close one as a dupe\ncc: @bbondy . @ksjogo we've kept this functionality removed... but when extensions are better supported, you'll be able to use the extension that @diracdeltas mentions here:\nhttps://github.com/brave/browser-laptop/pull/424#issuecomment-257682572. @lewellyn thanks for calling out the work-around being in the ticket system (private); here's the text for that:\n\nAs a workaround to navigate back using keyboard you can use Alt+Left arrow key to go back to the previous page and Atl+Right arrow key to go the next page\n\nSince you feel strongly, let me re-open your issue and perhaps add some other acceptance criteria. @da0ist alt + left/right arrow was unintentionally broken last release, we have a fix for that \ud83d\ude04  We're working on our next release now. @da0ist hang in there just a while longer! I'm hoping we'll have a release today or tomorrow \ud83d\ude04  \nIf you have any more feedback, please feel free to let us know here or on community.brave.com \ud83d\ude04 . +1 from user @Gelo3D (from https://github.com/brave/browser-laptop/issues/5871). Unfortunately, we won't be able to fix this before moving over to Brave Core. Closing as wontfix\nThis issue is captured in brave-core with https://github.com/brave/brave-browser/issues/598. This is specific to certain sites. We can address this case with a cosmetic adblock filter. @Snuupy is working on this functionality which is tracked with https://github.com/brave/brave-browser/issues/94. Happy to report that this issue is being worked on right now :smile: \nHere's what's currently in master- a bare bones history screen:\n\nYou can right click to delete entries or open them in a new tab. You can also double click entries to open them.\nI'm currently adding search and then I'm also trying to organize the entries by date (along with some style updates).  Suggestions or mockups are extremely welcome :smile: \n. and here's where we're at now:\n\n@bradleyrichter (and anyone reading this too) let me know what you think :smile:\nI grabbed styles from Preferences because I wanted it to look \"Brave-esque\", rather than the mild black text on white background. I put some sample buttons there similar to Chrome, wiring them up wouldn't be too hard (including checkboxes for deleting individual items). We could also put some options above the buttons\nOne thing not shown is search. I am going to implement a search, similar to the bookmarks manager page. This would be on the same line as the \"History\" title.\n. @bbondy does underscore.js have advantages over Array.reduce? Here's a link to the code I put together, it's fairly clean:\nhttps://github.com/bsclifton/browser-laptop/blob/history-page/js/about/history.js#L88\n. Here's a screencap of the proposed look, courtesy of @bradleyrichter! Going to start molding the screen to look more like this...\n\n. Starting to get there... here's where I'm at currently:\n\n~~NOTE: context menu is broken at the moment; will have to add generic functionality for that to sortableTable~~\n. I could definitely be wrong, but it might be easy to add this. We could potentially add this information here:\nhttps://github.com/brave/browser-laptop/blob/0218b28f8a61979997485962de557a00ca5274fb/js/about/about.js\n. What functionality is not met by our current search shortcuts?  Can this issue be closed?\n@bradleyrichter @luixxiul @bbondy . @kirkins our Linux support is tracked with https://github.com/brave/browser-laptop/issues/5282 which I believe @posix4e is working on \ud83d\ude04 . For those reading this, you can turn off tab previews in Preferences, under tabs :smile: \n\n. @tvance929 you're very welcome :smile: Super glad to hear you enjoy it!\n. Just a note for folks reading this: there is a new about:styles page being worked on by @jkup which intends to show all the UI elements in one place \ud83d\ude04 This will help a ton when we get to proper theming\n. @jonathansampson I know we had an issue in which we documented why this was not enabled, but I'm having trouble finding it.  Do you have any info about that?\nRegardless, it would be a pretty cool optional feature (maybe allow a setting to enable, default to false).. +1 from user @da0ist. I definitely miss the purple visited links myself. It would be great if this was addressed soon. @bbondy @alexwykoff should we close this? it seems to be working now. I know we're wanting to add this for sure-\ncc: @bradleyrichter \n. Unfortunately, we won't be able to address this with browser-laptop... but we should with Brave Core (even if just by having an extension available)\nClosing in favor of https://github.com/brave/brave-browser/issues/679. Quick update on this:\nIt won't ship with our next release... but it IS available for testing now \ud83d\ude04 \ud83d\udc4d \nPlease check out our Beta channel...\nhttps://github.com/brave/browser-laptop/releases/tag/v0.21.9beta\nHelp testing this would be very much appreciated \ud83d\ude04 . @krmbzds @kylerchin we have an issue capturing the problem and discussing a fix here:\nhttps://github.com/brave/browser-laptop/issues/13564. Closing as wontfix since we won't be able to address before moving to Brave Core. I opened an issue capturing this functionality there:\nhttps://github.com/brave/brave-browser/issues/665. Closing this issue as stale (and also because the grab area is important)\nLet's reopen if opinions change \ud83d\ude04 . @joeparkerz you can open an issue in our new repo, https://github.com/brave/brave-browser/issues, and describe the functionality you'd like to see\nAs @stevespringett said, with this new code-base, all of the chrome pages are available.  That combined with no comments in a while is why I had closed this issue. This is a feature we will not be adding to the Muon version of our product (ex: browser-laptop). Closing as wontfix- we won't be able to address before moving to Brave Core, which doesn't have tab sets (yet). Is this still the case? It's opening in a new tab for me, but not setting the focus\n(I'm on Windows 10)\n. Confirmed, this is still an issue. Here's a bare-bones way to repro:\n1) Visit https://media.clifton.io/issue-569/2016-05-27-brave-pin.html\n2) Pin the site\n3) Click the \"same domain\" link, notice it works as expected (opens in same tab)\n4) Click back\n5) Click the \"external link\"\n6) Notice it didn't work; it opens in the same tab\nslashdot was a little tricky since they have _blank on almost all of their external elements\n. cc: @bradleyrichter - maybe you can point me to some docs on how pinned tabs should work.\nI have a basic idea just from using them (and they seem VERY cool- almost a better version of a bookmarks toolbar). Any clicks which go to another domain should open in a new tab, right? (regardless of target being set or not- ex: _blank)\n. Closing in favor of https://github.com/brave/brave-browser/issues/882. Fixed with https://github.com/brave/browser-laptop/commit/9a98903a037104f0b031d681db6920b2c7deff15. @bridiver nice :smile: I created https://github.com/brave/electron/issues/78 for ya\nIf you get a sec, check out the fix I did event-wise in https://github.com/brave/browser-laptop/pull/5102\n. @bridiver yes- the performance is noticeably better :smile:\n. @bridiver yup!  and that is captured with https://github.com/brave/electron/issues/78\n. With https://github.com/brave/electron/issues/78 closed, we should retest this starting with 0.13.0 :smile: \nIf it's not fixed, let's remove the milestone and leave some notes here. Gave it a go, performance didn't seem any better.  Was worth a shot :smile: Removing milestone. This issue will be solved when we move to the Chromium UI (Brave Core). +1 from user on Twitter. Per discussion with @diracdeltas, we may even consider an option which the user can enable which creates a new partition for each new tab. Conditionally making it 30px would be easy :smiley: For reference, Chrome is 27px (between the url bar and the bottom of bookmarks toolbar). In Brave though, we have a bordered style above the bookmarks toolbar, which makes it harder to fix this in reasonably (padding, etc).\nThere are also some borders:\n- class style \"navigatorWrapper\" has 1px border-bottom w/ #aaa\n- class style \"bookmarksToolbar\" has 1px border-top w/ #fff\nIn addition to conditionally setting the size to 30px, I'd like to propose conditionally eliminating these two borders IF the bookmarks tb is shown (it's needed when not using the bookmarks tb, since there is no other border below)\n. This is great, thanks! I'll update this tonite to help keep things nice and clean :smile: \n. Coming soon- a whole lot more tests! :smile: \n. s/cloneFrane/cloneFrame\n. Great catch! Fixed :smile: \n. Good catch :smile: Removed!\n. This one is a little weird, since it's a folder (and doesn't have a location). But I did implement location for the one above :smile: \n. sweet, didn't know about this- thanks :smile: \n. Definitely like this :+1: \n. Can the call to this URL be stubbed / replaced with a fixture? (or maybe it is and I just didn't see it).  Would be ideal if we didn't have a dependency on their site :smile: \n. This line has the fix for showing single entries. Before, it would just return the object (which fails when trying to do the map() in the render for the HistoryDay control)\n. The clear modal and context menu in about:history set the value to null, but this works too.  Verified by cherry picking into my branch and manually testing :+1:\n. How does a null page view behave?\n. @bridiver per your feedback, I updated this to use the siteUtil method :smile: \nI'm curious what you think about the temp conversion to/from Immutable. I originally made the siteUtil method detect if the input is Immutable, but if feels bad introducing more code paths.\n. Super nice cleanup with this method :smile: The previous code was hacky (because it could be changed in appStore OR in the navigationBar control) and there were definitely ways to cause it to fail (ex: shows checked but its not bookmarked)\n. Just a ? about this TODO; we solved it already, right? We fetch the item via getMenuItem and then set the checked status\n. I had to lookup waitFor and I think I understand this now\nTo make sure: this code is basically registering another handler for these actions on top of the existing ones in windowStore, right? This is really cool :smile: Great job!\n. GJ breaking this out from index.js- much cleaner (and encapsulated)!\n. wait- just noticed this ipc handling code was already in here LOL- but yeah, I think the locale code that was in index.js was unnecessary\n. :+1: \n. :+1: \n. for checking against immutable, you might check for the presence of toJS instead; I know a lot of other code does that (just a consistency nitpick)\n. to be explicit that you're checking for a truthy value, you could coerce this to a bool, like:\nreturn !!notification.get('options').get('style')\nBut usually when something has that \"smell\", it's best to just check the type instead:\nreturn typeof notification.get('options').get('style') === 'string'\n. Feedback about the method for checking (and what codes to include) is very much appreciated\n. NOTE: this event will only get sent if payments is enabled (to prevent unneeded overhead)\n. Good call- typically REST APIs will use 201 and 202, which shouldn't be returned for regular content :+1: \n. done :+1: \n. there is some commented out code here in the menu.js that I think you can delete, now that you've added import functionality. Search for locale.translation('importFrom')\n. this handler has a LOT going on in it... Any chance we could break this (or parts of it) out into a method? Looks generic enough (not dependent on electron) to put into a utils class, which means we could eventually unit test it too :smile: \n. definitely not a big deal, just a misspelling here:\ns/importBroserDataSelected/importBrowserDataSelected\n. whoops, another one:\ns/importBroserDataSelected/importBrowserDataSelected\n. would it be possible to move this to the new directory structure?\nhttps://github.com/brave/browser-laptop/blob/master/docs/directoryStructure.md\nSo for example, this would move to:\napp/renderer/components\nGreat job on the control :smile: \n. :heart: \n. ah- makes sense.  I'm OK w/ it as-is :smile: \n. Really good find! :smile: \n. OK will check those out- I haven't had success running the webdriver tests on Windows (yet)\n. and doh- can't use because it doesn't wrap\n. The original intention for doing this was that there is only one system menu (and each Window would reference that).  But let me revisit this thought- thanks for bringing it up :smile: \n. will keep it here after talking w/ @bridiver; in the future, we can introduce more window specific state in the appState (deprecating windowStore)\n. I endedup backing out this change. The solution I have is to (on Windows only) reduce the size of elements (urlbar, hide the timing info) so that the window can go as skinny as 480 and still look correct\n. Really stupid nitpick (sorry)- s/Remve/Remove :smile: \n. @bridiver:\n1. I can update the code to do this.  It would be a larger change and would put \"business logic\" into the WindowStore.  For example, if the selection changes from null or -1 to a valid number, the WindowStore would know it needs to create a ContextMenu renderer control, which I guess it would handle by doing another windowAction?  Maybe we can talk this out more\n2. This particular method (showBookmarkFolderMenu) doesn't use electron.remote. However, there are methods in that file (contextMenus.js) which do (specifically for creating / showing popup menu templates)\n. @darkdh thanks for checking this out- I did end up looking at it more and unfortunately, the menu that pops up is a system popup (not one of our custom rendered context menus, like autofill :disappointed:). I'll remove the commented out tests for now\n. Implemented feedback- ready for re-review @bridiver \ud83d\ude04 \n. Follow up- I did find a way to test adding bookmark folders (see commits)\n. gotta drop the .js :smile: \n. Small style question- our project has a mix of:\n- destructuring assignments with and without spaces around the item(s) (see line 34)\n- including using require and then referencing the method name (see line 33)\nIs there a preferred syntax?\n. It was there before, but has unnecessary double parens\nif((condition === value)) { }\n. s/resoruce/resource :)\n. might be a copy/paste thing, but are these comments right? to register or deregister? (looks like it's updating existing rules that are in place)\n. this was MOSTLY just a spacing issue (everything was off by 1 space; git didn't intelligently realize that)\n. thanks for adding these checks in :smile: \n. @diracdeltas that is a great point- one thing we'll want to try is an upgrade from the previous version to make sure that loading or saving the state doesn't break.\n@jkup Can these delete operations be wrapped in a \"tryDelete\" or \"safeDelete\" type of method that checks for existence before deleting?\n. this is the line which broke things (definitely my bad)\n. Glad this came up- this is something I missed while doing the refactor. Resetting the menu status is supposed to clear the selected folder ID. This action never got renamed to the new one\n. Some of the links seemed to be wrong (they went to a PR instead of the issue, sometimes not the right PR either)\n. Done :smile: \n. This check is so that folders that are children of \"Other Bookmarks\" don't show under \"Bookmarks Toolbar\".  Since the above check (line 50) was removed, it will now bind ALL bookmarks to this control.\n. Good eye :smile: The folderId of -1 is reserved for the \"Other Bookmarks\" folder (just like 0 is reserved for \"Bookmarks Toolbar\"). This binding creates an item for each child by matching folderId with the parentFolderId bound to this control. This does match successfully for \"Other Bookmarks\", but not at the root level (the one below which has the isRoot check, which is where \"Other Bookmarks\" is isolated to, the bottom)\nSorry that was an awfully big mouthful :smile: (hopefully it makes sense!)\n. we have something like this in the moveSite code; I'll make sure that code is rock solid by working on some unit tests :smile: \n. These changes were made to prevent appActions.changeSetting() from being called every time. Now it will only call if this is your first bookmark and toolbar is not already visible\n. +1 on @bridiver's recommendation :smile: \n. @cezaraugusto was this file intentionally added?\n. awesome! merging :smile: \n. Got a few extra items maybe we can add to Triage help which I think could be helpful :smile: \n- Helping make sure issues have a clear and understandable name (ex: not something like \"Brave is broken\"\n- The parent post in an issue ideally would have a clear description of the issue and describe the impact to users. Asking folks for screenshots, steps to reproduce, and more information is highly recommended so that the issue is as clear as possible\n- If the issue is a duplicate, please let the issue creator know in a polite way how they can follow and track progress of the parent issue (including an ETA if it's marked with a milestone).\n. Other than those things that popped in my head- looks great! :smile:  ++\n. done- thanks :smile: \n. Would it make more sense to use the window.URL object?\nhttps://developer.mozilla.org/en-US/docs/Web/API/Window/URL\nAlso, another consideration would be if it makes sense to put the logic into our URL utils:\nhttps://github.com/brave/browser-laptop/blob/master/js/lib/urlutil.js\n. I think with the updated design that we'll move to (where app state has control over window state), it would be a no brainer as one action. \nWith our system now, does the WindowStore also receive AppStore events? (if so, would it be possible for us to add the window id in there and then fetch the session object, based on that?)\n. this and the change in addEditBookmarkHanger.js are changes I missed when originally doing that control, which was submitted with https://github.com/brave/browser-laptop/pull/5118\nFocus is now properly set to the title input box when the modal launches (no issue had been filed yet)\n. Added this info in, thanks @aekeus :smile: \n. @bbondy that is a great point- we should be able to do testing for important styles :smile: \n. yes- which is triggered in frame.js, from the page-favicon-updated handler :smile: \n. Totally a nitpick- would it be better to say frequency? like the reconcileFrequency would be every 30 days.  When I see period or duration, it's not immediately clear\n. :heart: ++\n. This might be more of a @bradleyrichter question... but I wonder if this should this be covering both cases?\nLet's say you're within 24 hours of reconciling and you only have the ~5 dollars in your account. You'd dismiss the nag window but then you're out of budget after reconciliation happens.  This is a case where you might want to get nagged again sometime before the next reconciliation period (especially since getting funds in might take > 24 hours)\n(if action needed, can be done in a follow up :smile:)\n. Since this logic is removed (which is OK), maybe we can move what's left into ipc.on() line :smile: I originally had added this because my state got into a situation where I had many duplicates, which caused problems\n. (can be done as a follow up in a later commit)\n. this is sorted alphabetical now\n. same here; alphabetical FTW :stuck_out_tongue: \n. These indexes (indices?) would be great as constants, IMO. Instead of checking against 0, it could look like:\nif (buttonIndex === ledgerButton.Later) {\n. Great job with the above :smile: It's super important to have migrations for the session data\n. could you just put the format of the key? like folder specifies folderId, URLs use location/partition/folderId?\n. with this refactor, the tags field really isn't needed (which is nice).  Because you can determine if it's a folder or not by the folderId.  It might clean things up to remove it\n. At some point (doesn't have to be now, something for all of us to keep in mind :smile:), I think it might be worth creating util methods to help with type conversion / default values.  Something like this:\nconst safeNumber = (value, default) => {\n  const num = Number(value)\n  return isNaN(num) ? default : num\n}\n. Would it make sense to pull this re-ordering out to a common method?\n. Much cleaner + easier to read :smile: \n. note: fix from https://github.com/brave/browser-laptop/commit/a9c3304ec4a646ea27da1a4de7ff47082a1d9481 was kept here when rebasing :smile: \n. note to self: this needs to check the order they're in\n. This is never used, can you remove it pls? :smile: \n. @mrose17 this is seconds now right? (previously was milliseconds?) It does seem to be updated like you suggest (see next line). This is a pretty elegant way to do it, which avoids the complexity of promises. Good job :smile: . This last test here is the one I added which failed (revealing the bug). The Array.reduce that I was doing would returning a non-array when only 1 entry exists (it now properly returns an array). Here is the fix for the bug which led to the revert (which happened with https://github.com/brave/browser-laptop/pull/5867). :+1: . :heart_eyes_cat: (love all the things that happen with this one line). I wonder if there's a clean way to eliminate the mapping, since it's almost redundant;\nex: this returns withBlueIcon, which then maps itself to styles.blueIcon...\nCan we have an array of styles? and then expand using a spread (in the parent)\n<TabIcon customStyles={[styles.blueIcon]} {...this.props} />\n===>\n```javascript\nclass TabIcon extends ImmutableComponent {\n//...\nrender() {\n    const styles = [].concat(this.props.customStyles || [])\n    className = css(...styles)\n//...\n\n```. I mentioned over Slack, but these may (or may not) be better if they were partitioned into logical groups, like color, zindex, breakpoint, etc. Pros of this:\n- could be split into another file easily\n- if (in the future) there were no references in the code to that file, standard.js would raise a lint error / webpack should exclude it\nCurious what others think? @cezaraugusto @bbondy @luixxiul \nFor me personally, I'm good with this as-is: the list is fairly short though and I think it may make more sense to update this in iterations :smile: . Just noticed this now- the new preferred location for components would be in:\napp/renderer/components :smile: \nThis lets us easily break up the rendering portion (client side JavaScript) and the browser portion (which has access to node / makes use of muon (electron)). These class names (along with the other FontAwesome class names) might be a natural fit into the global styles?\nFor example:\njavascript\nconst globalStyles = {\n  //..\n  classAudioPlayingIcon: 'fa fa-volume-up',\n  classAudioMutedIcon: 'fa fa-volume-off',\n  //...\n}. If you move the new tabIcon component to the new location (app/renderer/components), you may consider moving this too :smile: If moved, you'll have to update the paths for the requires here and then also anywhere that includes this (ex: tabs, pinnedtabs). Testing for an extra . might not be a good idea, because folks may use Brave to browse their intranet. It's not a best practice, but many folks will setup a host file entry and access hosts by computer name (instead of domain)\nex: http://computer001/phpMyAdmin/\n. actually- I think this behavior might be OK!  I am almost positive you are correct about the other behavior (because it's happened to me so many times :stuck_out_tongue: ) When prefixed with protocol, it validates just fine: https://github.com/brave/browser-laptop/pull/6086/commits/cd88861cfa29f5e369001386b459ee0fe949cc57. sounds good! :smile: . @darkdh no, I don't think we do; I believe it may have been copy/pasted on accident\nHere is the API doc for reference:\nhttp://electron.atom.io/docs/tutorial/desktop-environment-integration/#custom-dock-menu-macos. I'd suggest just deleting this; comments usually just end up cluttering and we can always look at the previous revision :smile: . @darkdh that would be great actually! @aekeus, would you be able to pull this replacement of search engine shortcut into the formatUtil module?\nit could then be like\nlocation = formatUtil.removeEngineShortcut(location)\n(and would be a noop for ones not containing the RegEx). @cezaraugusto the above mention by @darkdh is correct; we need to actually call addSite (which then calls mergeSiteDetails, where the change was made).  When you call addSite, you'll want to make a test case for each value.  Where it returns:\n- lastAccessedTime = newSiteDetail.get('lastAccessedTime')\n- lastAccessedTime = oldSiteDetail.get('lastAccessedTime')\n- lastAccessedTime = 0\n. @darkdh OK fixed- because I am not sure if the order matters, I moved the delete to above this check. Two things ( cc: @Liunkae ):\n1. We're missing data-l10n-id for this item. We need it to look like this:\n<span data-l10n-id='copyToClipboard' className='fa fa-clipboard' onClick={this.onCopy} />\n2. When you look at about-brave.html, you'll see that for localization this file uses app.properties.  Inside the en-US version of this file, you'll need to be having something like this: copyToClipboard.title=Copy to clipboard. @gyandeeps the ideal approach would be flux-like and to do the following:\n- store the state in our AppStore / AppState. You can view the current layout of the appState here. We'd want to find a home for the new fixTabWidth value\n- Inside onFrameClose, create and call a new appAction which has should also have an event based name (as opposed to something like setFixTabWidth).  onFrameClose seems OK (In the future, other code may want to process on this event)\n- The action then (like other actions) makes a call to dispatcher. This gets handled in appStore.js\n- AppStore then updates the application state\n- main.js should be binding the appState to this control as a property. Here's an example with a different UI control\n- Updating the appState now triggers a re-render\nUsing the immutable control approach is ideal because components themself don't have state; everything goes through the app store.  Even if we insisted on keeping state, it would be better to just change the control to inherit from React.Component. @gyandeeps This is a lot to digest and it's perhaps not the most straight-forward; feel free to hit me up on Slack anytime and we'll work it out :smile: . @gyandeeps I think onMouseLeave is appropriate :smile: . @gyandeeps ahh- ok gotcha... so yes- I would say an event name which is specific is great.  So perhaps onTabClosed?. Instead of getting like this, could you remove the reference to windowStore and then bind currentContextMenuItem as a property in main.js?\nhttps://github.com/brave/browser-laptop/blob/master/js/components/main.js#L938. same as comment above; would be good to remove reference to windowStore and then bind it using a property in main.js. Thanks for updating this :+1: . Regarding the previous comments, it looks like you already had it in here :smile: Any reason you chose to use the version from WindowStore over this one?  It's important to rely on this version, so that the control re-renders when the store changes. I believe it would be useful to keep the previous logic here for the check (because the index should always be an array with length > 0).  The new default to [0] make perfect sense, because this is what we'd like for when autofill pops up :smile: . ~I believe you have the logic for these two items mixed up; since WINDOW_SET_SUBMENU_SELECTED_INDEX was changed to WINDOW_SET_MENUBAR_SELECTED_INDEX, the array check should be there (which then also has a default to null).  You may also keep the check in for WINDOW_SET_CONTEXT_MENU_SELECTED_INDEX, but instead defaulting to [0] like you did above in main.js~\nDisregard my comment above (striked out).  I now see that MenubarSelectedIndex is always having an integer value; If you'd like to keep type checking in place, you can instead maybe compare it against typeof 'number' and make sure it's greater than 0\nRegarding the check for WINDOW_SET_CONTEXT_MENU_SELECTED_INDEX, you may want to default to [0] like you do above in main.js (instead of null). Love these tests :smile: . don't forget to remove this :stuck_out_tongue: . because the code is complex, if you could keep the original comments in there, it would be much appreciated :smile: For example, this one had:\n// Left arrow inside a submenu\n// <= go back one level. The non-English (ex: en-US) files can be left alone; they'll get stripped out when the next internationalization pull happens :smile: . ++ on the try/catch! You'd be surprised that some domains look legit punycoded but actually fail the decoding process.  Not having try/catch has bitten me multiple times in the past :smile: . Sorry if this is a little nit-picky, but could you put this new file into the new directory structure? EX: app/renderer/components/. @luixxiul we sure can; implemented this feedback with https://github.com/brave/browser-laptop/pull/6689/commits/46d07ec1c53fa78be15906e1d24ffc391d4bd58e. no; I manually tested and it doesn't do anything (it still stays ~10px). Also, the \"Add funds\" button has a similar padding. If you remove padding from \"Add funds\" button (ex: set to 0), it looks bad. Really well done here! \ud83d\ude04  This is perfect. \ud83d\udc4c . this is perfect! For anyone else looking at this... I believe this is the best way because there could be many variations of navigator.platform for Linux. We can't rely on process.platform because this code is often invoked in the renderer (like in this PR). This 66 magic number may make more sense as a constant in tabUtil.js. you may also want to check nextFrame; like if (hoverState && nextFrame) {. Seeing all this deleted is beautiful! \ud83d\ude04 . Instead of using 'alwaysAllow', can you import settingsEnums.js instead and check against fullscreenOption. ALWAYS_ALLOW?  Always good to avoid hardcoding (and use the enum value) when possible. Here's another place. I did originally implement it like that- but the buttons have to be shown in reverse order (in order to keep the same \"interface\" as the electron dialog.showMessageBox).\nex: buttons would be ['OK', 'Cancel'] with cancel being index 1 (and the caller specifies cancelId === 1). I think it's OK as-is; it matches the English and also consistent format with closeWindow. This was added specifically so we can stub the method with sinon (and verify it gets called). This has to be removed; It looks like starting with Chromium 56, changes were made to background-image which causes the image to render itself at 100% DPI (rather than scaling to the size of the window). This is no longer needed because the FooterInfo component checks for (and hides) copyright info if no background is shown. I tried, but was unsuccessful \u2639\ufe0f  I verified other folks have the same issue and then implemented it this way. Should this be removed? The comment is fine, but the line of code. NOTE: this was wrong before.  Before, it was this.download.downloadDeleteConfirmationVisible. Accessing child objects from an Immutable object will return undefined.\nI updated this to use the Immutable.js get method to fetch the variable. @michalbe no worries- it's something that bites me all the time (because it fails silently). Frankly, I wish an error would be thrown when it's accessed that way. I can't count the # times I've debugged an issue relating to that \ud83d\ude04 . In case something fails.  For example, with your original commit, it failed because 0 items were found.   This raised an exception which then did not properly restore the sinon spy.  When the next test case ran, it would try to put a spy on the same method but fail (because spy has already been done).  The try is required only because I wanted to use a finally to restore the method which had been spied. Good question- I was thinking it would be nice to use official point sizes and then have everything else relative using em.  @NejcZdovc suggested using rem for font size.  We should work together and propose a standard cc: @luixxiul . @cezaraugusto does this work even for proprietary extensions? (vendor prefix; starting with a -)?. good catch! It already is being translated (these strings get passed to l10n-Id in render)... however, it's expected (per the app.properties file) to be lowercase. I fixed and verified it works by changing the string to nonsense \ud83d\ude04 . Also good catch- I wasn't sure about it at first, because Dialog is not an Aphrodite component... but adding a className using Aphrodite works just fine \ud83d\udc4d . Good call on this- I copied from another modal and it was unnecessary. It may have originally been put there to prevent the modal from closing on click... but that doesn't happen here \ud83d\udc4d . There is a comment showing some which are session and some which are persistent. We can alphabetize but then remove that label, but I don't see value with that. js\ntabs: [{\n    // persistent properties\n    active: boolean,  // whether the tab is selected\n    favIconUrl: string,\n    id: number,\n    index: number,  // the position of the tab in the window\n    title: string,\n    url: string,\n    windowUUID: string,  // the permanent identifier for the window\n    // session properties\n    audible: boolean, // is audio playing (muted or not)\n    canGoBack: boolean, // the tab can be navigated back\n    canGoForward: boolean, // the tab can be navigated forward\n    messageBoxDetail: { // fields used if showing a message box for a tab\n      message: string,\n      title: string, // title is the source; ex: \"brave.com says:\"\n      buttons: [string], // array of buttons as string; code only handles 1 or 2\n      suppress: boolean, // if true, show a suppress checkbox (defaulted to not checked)\n      showSuppress: boolean, // final result of the suppress checkbox\n      cancelId: number // optional: used for a confirm message box\n    },\n    muted: boolean, // is the tab muted\n    windowId: number // the windowId that contains the tab\n  }],. doh my bad- fixed \ud83d\ude04 . Any reason this changes from the regular .includes() to a double negate using !!? The double negate is great for making something is truthy (when you don't care about it's value), but in this case includes() should already be returning a bool. Do all hostSettings entries have a ledgerPayments field? because comparing !== false will be true if that field is undefined.  you might want to change this to something like:\nreturn this.hostSettings && typeof this.hostSettings.get('ledgerPayments') === 'boolean'\n    ? this.hostSettings.get('ledgerPayments') !== false\n    : this.validPublisherSynopsis || (autoSuggestSites && !excluded). if we wanted to make this cleaner, you could do the && for the two conditions above and store in a const, like\nconst showNoFundVerified = !this.enabledForPaymentsPublisher && this.verifiedPublisher\n// ...\ncss(\n    showNoFundVerified && styles.noFundVerified,\n). super small nitpick- would be nice to alphabetize these fields. Sublime has this sorting built in; I believe you'd need an add-on for VS Code (cc @NejcZdovc). Good call \ud83d\udc4d  Since this is already merged, please feel free to do as a follow up, @NejcZdovc \ud83d\ude04 . We'll need to use C style comments for this (see think link for reference).  The C++ style doesn't play nicely with JSX\n\n. also: is it supposed to be flexGrow?. Fixing!. Fixed- that variable exists in other files (with other states- whoops!). Thanks for catching \ud83d\ude04 . I think this is fine as-is... but it could be better as it's own discreet action (in the event that we'd like other reducers to be listening).  Perhaps an action like defaultDownloadPathChanged. Just to confirm:\n@mrose17 when you do a restore, it'll use the previous wallet (what you just restored), right? So the old text here (about transferring the balance to your new wallet) was wrong?. +1 on that. \u2764\ufe0f . ++!. Awesome! thanks for pulling this out- will make testing easy. You can remove this TODO since you put it into the preferences.properties \ud83d\ude04 . This entire method (walletStatus) could benefit from moving over to ledgerUtil \ud83d\ude04  (it would need to be reworked to take ledgerData as input). That would also make mocking it easier. Love seeing all this LESS being deleted \ud83d\ude04 . Was there more that needed to be removed? or did you need to test anything which had been removed so far?. \ud83d\udc4d . Moving to the bottom would be great (so that everything is consistent) \ud83d\udc4d . this variable name is not very clear... Can we name it something more appropriate, like aboutExtensionDetailWidth?. +++++++++++++++++. sure, that works \ud83d\udc4d . this test always fails when I run npm run uitest -- --grep=\"urlBarSuggestions\"... but passes when it's by itself. Updated w/ https://github.com/brave/browser-laptop/pull/7690/commits/db0a11b402a653ca638665ed0d7ffb1b0d80578b. The change looks great.   I think it could be better though if you pulled the logic out to a method and then had a unit test for it, using enzyme \ud83d\ude04 . instead of e.ctrlKey, can you change this to use isForSecondaryAction() in eventUtil?  Thanks \ud83d\ude04 . Can we change to Fixed header bar and tab styles (new flat interface look and feel). Sorry for the confusing diff; This is the fix here (calling GetParent a second time)\nI messed around with my .gitconfig for about 20 minutes trying it to only recognize this one line change before giving up and just checking it in like this. I believe this file in particular was checked in with CRLF (and I'm not about to change my config to do that). Good news: future updates won't have this conflict. instead of an else, this could be cleaner to just return state (no else) \ud83d\ude04 . Misspelling here; s/Notifiy/Notify. This method name isn't entirely accurate, since it's getting the key used to do the lookup in the settings... maybe we can change the name to something like getExtensionKey?. \ud83d\udc32  \ud83e\udd16 . \u2764\ufe0f  the tests. @willy-b looks like this is now using React's setState(). Our ImmutableComponent wrapper will only trigger a re-render if properties are updated (not state).  Changing this forces the setState() to re-render. Overall, we want to avoid React.Component in favor of ImmutableComponent... but About pages are a little different. We tend to need to keep state, because of how data gets transferred to it (see Frame.js). ++ on this comment. Awesome use of this \ud83d\ude04 . @jonathansampson while that is pretty awesome (I love reduce!), I think the above is more readable. Fixing a lint error (my bad on this one- I committed from Windows which doesn't run the npm run lint prehook). Added a test to make sure we don't (going forward, if this changes, etc) replace Google since valid extensions use it. since you had the /g in there, wanted to enforce that this should replace multiple types / occurrences \ud83d\ude04 . chrome != Chrome \ud83d\ude0e . @bridiver I don't remember the original use-case, but I did use this when implementing the per-tab alerts (but then removed in favor of a distinct messageBoxDetail property- part of tab object). fixed!. \u2639\ufe0f . @luixxiul we'll want to pick and choose the times we update dependencies. Unless there is a good reason (need new version to get a feature, we're too out of date, etc) , we should stick with the version there.  This is important to stabilize the codebase.  \nAny updates we do to libraries we use may require a small regression test to ensure the upgrade didn't break any functionality or introduce issues. Nice cleanup \ud83d\udc4d . Object makes sense IMO- I use the array style syntax for accessing the object since the dot notation is not available with a variable.  ex: zoomLevel.SUPERSIZE won't work, hence zoomLevel[SUPERSIZE]. GREAT catch!! \ud83d\ude04 . Can this use the constant for ESC? see app/common/constants/keyCodes.js. Could you update this to be more descriptive? Maybe payments.allow-non-verified-publishers?. same as above comment \ud83d\ude04 . Was this intentionally bumped down to 1 minute?. s/drag tab into new/drag a tab into a new. This one doesn't make much sense as-is... Maybe it could be:\nAdded ability to pin publishers in Brave Payments. Can this include the .? like Added support for .torrent links and files?. Might be useful to users as Added more draggable space by moving noscript into the URL bar. Could also be important to note Added origin for downloads, including unlock icon if download was insecure (HTTP). this one shouldn't be in here since .torrent was introduced this release also (with https://github.com/brave/browser-laptop/issues/6671). \ud83d\ude0e . Fixed readability issues with white text on dark colored tabs. I would vote to move this to the very top since it has a massive impact; it should also include Windows, like:\nFixed issue where default browser was reset after upgrade on Windows. (I talked with @mrose17; it's fine as original or as 1 minute, but he advised 1 minute is optimal \ud83d\udc4d ). Extension manager is huge- maybe moving up a bit. @luixxiul maybe? we could do that, but it would require testing. I would vote to leave it as is.  IMO, using no-important takes away the benefit we get by using Aphrodite.\nWe introduced Aphrodite to our code base because we were getting destroyed by regressions and the goal (I thought) was to make styles NOT overridable.  When it's no-important, styles might be overridden (which can cause regression).. I think I need to understand more about Aphrodite and the use cases for this (I think I'm missing something). Let's definitely chat more about it \ud83d\ude04 . Food for thought on this one- what other types of sharing do we think we'll have?  Could this possibly handle things like Submit Feedback in the Help Menu, etc?. does digg not offer an https URL?. I think these would make more sense as the generic template, like \"Share on {{siteName}}\" and the the l10n library could have the service name input as args. This would prevent translators from possibly changing the usage of the name / brand / platform for the share. ++ on the encodeURLComponent calls \ud83d\ude04 . I don't think this is needed, but it doesn't hurt anything... Since the extension is a product name, it shouldn't be translated. But... using Japanese as an example... I could see writing this word using Katakana more helpful to the user. cc: @luixxiul . @darkdh I like that! \ud83d\udc4d . I left as undefined so that it would skip the below code, which only sets if the value is truthy:\nif (partitionNumber) {\n  siteDetail.partitionNumber = partitionNumber. Updated \ud83d\ude04 . should be updated; doesn't return a promise anymore. Since there are docs on the Muon side, I think it would be helpful to put a link to the docs as a comment; ex:\nhttps://github.com/brave/muon/blob/master/docs/api/session.md#sesclearcachecallback\n(and if needed, update the docs). nitpick- I don't think it's documented anywhere, but we don't have spaces when doing destructuring in most of our code.  So it could look like this instead:\nconst {makeImmutable, isMap, isList} = require('./immutableUtil'). nice cleanup \ud83d\udc4d . @cezaraugusto I understand how !important can be viewed negatively like eval().  However, until we're fully switched over, I can see having !important be a great way to prevent regressions. When we get close to 100% Aphrodite, then you just switch aphrodite => aphrodite/no-important \ud83d\ude04 \nAll that said, we've done an amazing job with our styles since introducing Aphrodite. Before (2016), we were always fighting regressions.  Now, we rarely have them (if ever), even with no-important.  I fully support whatever makes the most sense \ud83d\ude04 . this is awesome- great use of a util. People might think it's silly having this, but it makes mocking VERY easy \ud83d\ude04  \ud83d\udc4d . Bye bye code! \ud83d\uddd1\n\ud83d\ude04 . this is kind of weird; so just to confirm... when Brave is exiting (user chose to quit) and payments aren't enabled / history is set to clear, we destroy the file by setting quitP to true and then logging something?  I mention it's weird because the deletion only happens after the file is written to (versus just deleting the file).. Is this a stale comment? renaming?. @mrose17 ah ok- makes sense \ud83d\ude04 . Per our discussion on Slack, I wonder if this could be sped up using indexOf?  Link you shared: https://jsperf.com/regexp-test-vs-string-includes-vs-string-indexof. @luixxiul I think that's a good name \ud83d\ude04 \nOther names might be too complex, like \"Have URL bar fill entire width\" (which sounds confusing). What is being returned here?. Per our discussions, we want to default this to false, right?  So that content isn't blocked\ncc: @bradleyrichter. My mistake- I think I missed part of the convo \ud83d\ude04  ++. It might be better to create a reference for this (ex: const frame = this.props.frame) and then just pass the frame={frame}, instead of this.props.frame each time. This way, if it changes again, you only change one place. Same with all the stuff above; getting rid of all the duplicate this.props.. SGTM \ud83d\udc4d  \ud83d\ude04 . docs need updating to include the windowId / input fields. derp- this is an individual commit, will go back to looking at the all files changed view \ud83d\ude1b  Disregard (you had already fixed it!). Would it be better to just iterate suggestionList once (ex: w/ a forEach) and use a switch to push results onto empty array?. don't forget to add to state.md \ud83d\ude04 . Would these be better named as passwordSaved / passwordUpdated? (to be more consistent with others that you introduced, like urlBarTextChanged). I just updated it \ud83d\ude04 . whoops- we'll want to take this out. I pulled this out in a separate commit and rebased/squashed it in \ud83d\ude04 . This is what's left; I'll get back to this soon. Nice! Thanks for removing this \ud83d\ude04 . This should have a unit test, IMO. Often times unit tests can document the code as good or better than comments \ud83d\ude04  (the test acting as a specification). s/partialy/partially/g. Now that these are properties, they would be good candidates for unit tests \ud83d\ude04 . Should we still be using windowActions / frameKey? I think it would make more sense to use appAction / tabId. Although, that change might be quite a bit larger. I'd be OK with us doing that later \ud83d\ude04 . can this but put into a property? that way we can unit test it \ud83d\ude04 . @NejcZdovc yeah- basically the ES6 classes have \"properties\" when they're exposed using a getter.  Like:\njavascript\nclass TabPage extends React.Component {\n  //..\n  get tabPageCount () {\n    return Math.ceil(this.frames.size / this.tabsPerPage)\n  }\n  //..\nversus a typical method or function\n```javascript\nclass TabPage extends React.Component {\n  //..\n  tabPageCount () {}\n}\nfunction tabPageCount() {}\n``. Getters are very easy to test using Enzyme \ud83d\ude04 . ahh that's right! I had forgotten \ud83d\ude04  I saw you use getters in https://github.com/brave/browser-laptop/pull/9413, but I now see those are inrender`.  Util function would be great \ud83d\ude04 . When I wrote the unit tests for this, I was unable to find a way to hit this condition (falling back to first).\nWhen you originally pulled the logic out of frameStateUtil and moved here, you had a similar block.  Since it wasn't possible to hit, I had removed it.  Did you see a case where this runs?. Can we use Number.MAX_SAFE_INTEGER?\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER. It might be cleaner to set this above, when the value is gotten from appState. Something like:\nconst shouldShowWelcomeScreen = process.env.NODE_ENV !== 'test' &&\n                                appState.getIn(['about', 'welcome', 'showOnLoad']). actually... nevermind, I have a solution for this \ud83d\ude04 . oh crap- sorry this must have got added when I did a git commit -a; backing this out.... This is perfect! good call setting here (rather than putting the check into the code) \ud83d\ude04 . I think we'll need some more code removed, since leveldown is being removed... I'll have a follow up commit in just a minute. ++. Can you use the ellipsis character for both of these? (ex: \u2026) \ud83d\ude04 . it might be better to set this after reading the value (next line). Something like:\nif (process.env.LEDGER_NOTIFICATIONS_TIMEOUT) timeout = parseInt(process.env.LEDGER_NOTIFICATIONS_TIMEOUT)\nif (!timeout || timeout < 1) {\n  timeout = 15\n}. Could process.env.ADDFUNDS_URL be defined at the top as a const? If the param name changes or it gets moved, there's a lot of hardcoded refs to change. Should we consider logging non-200 responses? ex: If we're constantly getting an error, would be nice to know if it's a 500 error (server) or a 401 (access)... along with details about the error \ud83d\ude04  (presumably in body). Would be great to have a unit test that ensures when windowConstants.WINDOW_ON_TAB_PAGE_MENU happens that electron.remote.Menu.buildFromTemplate fires and that popup is called on the instance that it returns \ud83d\ude04 . Would be good to read action.get('index') into a variable and skip processing if:\n- index is null /undefined\n- index is out of bounds (negative value, over the max number of tab pages). This is definitely something we want to avoid (calling an action in the handler for an action).  If it can't be avoided, I think it would be preferable to call doAction like so:\ndoAction({\n  actionType: windowConstants.WINDOW_SET_BOOKMARK_DETAIL,\n  currentDetail: siteDetail,\n  originalDetail: siteDetail,\n  destinationDetail: null,\n  shouldShowLocation: action.isBookmarked,\n  isBookmarkHanger: true\n})\ncc: @bridiver . this logic here would be better if it was contained inside siteUtil.getDetailFromFrame method, IMO (especially since it can be tested).  There are other places that call this method and they too should be having the parentFolderId and customTitle set (in fact, if the other calls are not setting this, it may be causing a bug / bugs). the data it gets from appStore is the site which matches... getDetailFromFrame should be returning the entry from the sites map (which is what siteUtil does; it's the wrapper around the sites map which is stored in appStore)\nIn this case, getDetailFromFrame is just taking data from the frame and returning it (without transforming it)... rather than doing a lookup and fetching the already existing one.  This code here then copies the data from the existing one (which is a mistake IMO, since it could have just used the existing reference). Here's a quick explanation of why this is a problem:\nif you remove this line:\nsiteDetail = siteDetail.set('parentFolderId', site.get('parentFolderId'))\nThe code would then create a NEW sites entry (which is wrong).  The reason why it creates a new one is because the key has the folderId in it.  The windowStore shouldn't care about this logic- it should just use the object it gets back.  Instead, we are having business logic in the windowStore about a siteDetails entry to avoid a bug (instead of returning an existing reference- the one which the key matches). this would fix the problem, although it's a little more sloppy:\njs\nsiteDetail = appStoreRenderer.state.getIn(['sites', key], Immutable.Map())\n// siteDetail = siteDetail.set('parentFolderId', site.get('parentFolderId'))\n// siteDetail = siteDetail.set('customTitle', site.get('customTitle')). \ud83d\ude0d . the isDarwin that is inside platformUtil is a little different than the one which was removed; it's actually a function that needs to be called (as opposed to the one that was removed above (which only checks process.platform).  This is because platformUtil is safe to use in the renderer (which doesn't have access to node (ex: process.platform).  Instead, it checks navigator.platform. misspelling here; s/showrUrlBarSuggestions/showUrlBarSuggestions/g. that's true- maybe it's OK as-is (for this PR) and that would be the place to tackle it \ud83d\ude04 \nThe example above should have everything (including parentFolderId). In the current code, whatever is found is copied from appState.  So instead of copying it, just use the entire object (which like you said, has favicon, tags, themeColor, etc).  This is great because if we needed to expose those we could.  By not using the real object, we're opening ourselves up to bugs.  For example, what if parentFolderId is changed to parentDirectoryId. If we properly handled it, we'd only need to update in siteUtil.  But because this code is copying the object, we'd have to update in 2 (or more) places. should this have a default (in case null, etc)? ex:\nprops.isFocused = navbar.getIn(['urlbar', 'focused'], false). @NejcZdovc the check in platformUtil has been tested well in both the browser and renderer process.  Typically, if you're in the renderer, process.platform will return undefined- hence the need to also check navigator.platform (which IS set in the renderer). Using this utility method is encouraged over duplicating the code (especially since it has tests \ud83d\ude04 ). this method is HUGE \ud83d\ude1b I'd love to see this (the cookieSetting logic) moved into it's own method so we can easily unit test it. If you don't mind, maybe I can try a rev1 for the test?. Each of these menu types should be in a file (I'd suggest commonMenu- see https://github.com/brave/browser-laptop/blob/2bd7726b6d6ea83f41fbebdfab6b4141f8a5a78b/app/common/commonMenu.js). This would make it easy to unit test each method.  A quick example of something easy to test: you can check each method that's exported to make sure each has a label field that called locale.translation(). . Would be great in a follow up \ud83d\ude04  Everything else looks good. nitpick for this section- it has enough logic and branches (if/else) that it would be nice to pull it out to a function so that it can be easily tested. So much nicer! Thanks for taking the time to properly name these \ud83d\ude04 . \u2764\ufe0f . done \ud83d\ude04 . Is this semi-colon intentional?. \u2764\ufe0f . This is the most important part of the PR.  Without this PR, isDarwin and isLinux are always truthy (because they are set to the function itself, not the return value of the function). This being cached at the top could potentially save some time (avoiding an extra function call and check for navigator). This won't work because Windows requires it when rendering the custom menubar (in the renderer process).  I'll look at submitting a PR which avoids setting it on macOS / Linux and properly sets it (ex: doesn't bind raw object with functions) on Windows. These checks are put in place because if the first one fails (ex: calling isWindows on mac) from the browser process, it checks navigator (which was undefined)... throwing an error when calling navigator.platform. This is not ideal- could use some help finding a better way to do this. This is needed because navigator is undefined in the browser process (which causes a crash).. These tests are failing for me every time \u2639\ufe0f  ...but it looks good in Travis-ci? \ud83e\udd14 . OK just ran them again (3rd or 4th attempt).  Worked great \ud83d\ude04 \ud83d\udc4d . pfft new spell checker ain't got these words, y'all. Could you update this to use the default value format? ex:\nvar lastCheckYMD = state.getIn(['updates', 'lastCheckYMD'], null)\nmight as well make the variables const too instead of var \ud83d\ude04 . is this correct (the subtraction)? should it be + config.offset?. @luixxiul I believe that not having any code in render is confusing. I do understand the intention of moving the logic out, because each function corresponds to part of the BEM path.  While maintaining the styles becomes easier, maintaining the code becomes more difficult.\nFor reference, I personally only try to move JSX/HTML rendering logic out of render into a function if one of these conditions is met:\n- method has logic in it (looping, etc)\n- method is re-usable. For example, backButton and forwardButton are almost identical... it may be possible to reduce this down to one method which takes params\n- method makes code easier to test (and test cases are included) \nIn these cases, depending on the complexity of the method (length, lots of if/else, etc), it may make sense create a component instead.\nBack to this PR.  Moving only the navigationBarWrapper() function back into the render() could be a nice compromise because you can still see some components being rendered (and then the calls out).\nBecause the implications for this (pulling JSX/HTML out to methods) could be serious, I think we should discuss more. whoops- I think the above white space wasn't intended. same here- can you leave the */ on the next line? this matches the style we have in the rest of the app \ud83d\ude04 . @diracdeltas I'm not sure, maybe you can help me understand\nIf you open a new tab and then nav to downloadme.org, filtering picks it up via https://github.com/brave/browser-laptop/blob/0.18.x/app/filtering.js#L150 and restarts the nav process with \"about:safebrowsing#downloadme.org\", causing the previous page to be the full chrome-extension://about-newtab.html. It's not a true interstitial anymore since there is no previous entry for http://downloadme.org\nIf you navigate to a site and turn off your network card while the connection is happening, I would expect the browser to have an error page... but have the proper URL in the url bar (ex: the site I'm trying to reach). I was under the impression that a redirect to about:error happens after the site is unreachable (so the previous entry would be the correct site). doh- missed your previous comments \ud83d\ude1b  (needed to refresh). Let me implement a better check \ud83d\ude04 . maybe it would be good to call out \"(in place of Electron spell checker)\". good catch @NejcZdovc - this was def 0.16.x \ud83d\ude04 . @cezaraugusto can you add a test for a partial match?  like nespressoPods and/or love_nespresso?. calling toJS() might be expensive... but I know this is only used on the about:bookmarks page. could this one use the syntax like:\ngetIn(['values'], Immutable.Map()) instead?. ex: maybe we can do toJS() once. Not that we have to do it now... but I'm Curious what you think @diracdeltas and @darkdh \nSimilar to Ruby and Python, maybe we could create a /migrations/ folder and have a single file (ex: 0-20-0_1st_3rd_fingerprint) with a two possible functions (postMigrate, preMigrate) for each type of migration that we'd like to run. \nWe could then call them like so:\nmodule.exports.runPostMigrations = (data) => {\n  migrations = [\n    require('../migrations/0-12-0_search_xml'),\n    require('../migrations/0-14-0_autofill_data'),\n    require('../migrations/0-20-0_1st_3rd_fingerprint')\n  ]\n  migrations.runPostMigrations()\n}. This is a great change too \ud83d\ude04 . Although it may not be easy, this would be a great method to unit test. I think the name itself is a little vague- it might be better to rename as getYAxis (or similar- since it directly gets assigned to the variable with that name). this had to be moved; translations are only available AFTER the locale finishes initializing \ud83d\ude04 . Existing method was left alone since telemetry also uses it (and the values in that case shouldn't change). New translatable strings must be entered here in order to be accessible by the locale.translate() method.  The name here matches the name in en-US/app.properties. Can we get rid of this comment? I think it's a copy/paste error from earlier \ud83d\ude04 . This list doesn't need to have the names anymore, since those are localized in the countries.properties file.  Do you think we can rename this as countryCodes.js and then only store the country codes themselves?. Since this list is also stored in the countries.js, can we import that instead (and then append or merge the arrays)?  This way, we're only keeping track of the list in one place \ud83d\ude04 \ud83d\udc4d . @dfperry5 exactly \ud83d\ude04 \nIt might look like:\n```\nvar rendererIdentifiers = function () {\n  const countryCodes = require('path/to/countryCodes')\n  return [\n      'downloadsManager',\n      'confirmClearPasswords',\n   //more strings here\n\n  'channelBeta'\n\n].concat(countryCodes)\n}\n```. While it may be faster, it's definitely less readable \u2639\ufe0f  How much of a difference (in terms of performance) are we talking about here? . @NejcZdovc I think removing the punycode encoding may cause a regression\nCan you please test this with an international domain name?\nhttp://www.i18nguy.com/markup/idna-examples.html. ah- totally missed that \ud83d\ude04 \ud83d\udc4c   perfect!. @luixxiul I'd suggest creating a new issue and proposing the strategy. If it's something that is easier for translators and also for programmers, then maybe we can adapt it. Personally, I don't know how helpful it would be. @luixxiul definitely something we'd want proposed in its own issue. Was removing this file intended? It's still referenced in a few places:\nhttps://github.com/brave/browser-laptop/blob/e691f7624f85e36045f6728c4735b1e5e4a0dde0/app/locale.js#L384\nhttps://github.com/brave/browser-laptop/blob/e691f7624f85e36045f6728c4735b1e5e4a0dde0/app/extensions/brave/about-contributions.html#L19\nhttps://github.com/brave/browser-laptop/blob/e691f7624f85e36045f6728c4735b1e5e4a0dde0/app/extensions/brave/about-error.html#L17\nhttps://github.com/brave/browser-laptop/blob/e691f7624f85e36045f6728c4735b1e5e4a0dde0/app/extensions/brave/about-preferences.html#L19\n(possibly others). This (the new implementation) is definitely a lot easier to read; so basically we're just comparing the sites entries to the pinned tab app state.\n- entries in sites AND app state are noop (they already exist, no action needed)\n- entries in sites and NOT in app state are created\n- entries NOT in sites which are in app state are closed. so this here was the actual bug; comparing site entries from pinnedSites to the ones in __alreadyPinnedSites. kind of a lame nit-pick; you could store the text representation of the channels in an enum-like format in channel.js:\njs\nconst channelStrings = {\n  RELEASE: 'dev',\n  BETA: 'beta',\n  // ..\n}\nand then export / import from this file.  Will make updating the constants easier :smile:\nswitch (Channel.channel()) {\n  case Channel.name.NIGHTLY:\n}. been seeing errors for this recently- nice and clean fix \ud83d\ude04 \ud83d\udc4c . \u2764\ufe0f . Could you change this to just log the exception instead? (just ex, instead of ex.stack).  console.error will already log a stack trace \ud83d\ude04 . This one could also just log the raw object ex instead of ex.stack since we'll already get the stack trace. Maybe something like:\nconsole.error('ledger.js initialization failed: ', ex). Same as above- stack trace no longer needed since it'll be included w/ console.error. It might be helpful to also add in where it failed.  For example: console.error('Error when deleting file \"' + file + '\": ', err) . Same as some of the above \ud83d\ude04 . similar to above, would be nice to log that error happened deleting a file (and sharing which file failed). same as above. same as above. macOS is hardcoded as mac_x64:\nhttps://github.com/brave/browser-laptop/pull/10725/files#diff-bbf971d3d6ce3c0f91bf010517f5211aR55. comment left in here \ud83d\ude04 . console.log that we can remove. appConstants.APP_TAB_MOVED can be grouped with appConstants.APP_TAB_ATTACHED (since they have the same code). nitpick: this might be better like (to avoid calling get twice):\n``\nconst siteLocation = site.get && site.get('location')\nif (siteLocation) {\n  parsedHistorySites.push(\n    urlParse(siteLocation)\n  )\n}. maybe I'm missing something- shouldn't this be like:s1.getIn(['parsedUrl', 'host'])/s1.getIn(['parsedUrl', 'pathname'])?. (same with the changes below). @NejcZdovc it was changed from mutable to immutable though... which means you have to usegetin order to read the values. Trying to access like a mutable usually returnsundefined. This could be changed to import the channels directly fromapp/channel.js.const channels = require('../app/channel').channels`\nIf that is an Array:\nif (!channels.includes(channel)) {\nif that is a Set:\nif (!channels.has(channel)) {. same feedback as above. Good call- I think this will have to be AppState actually.  We can could even show badges or progress, similar to that which was added with https://github.com/brave/browser-laptop/pull/9864 \ud83d\ude04 . this could definitely use a small description; I know you didn't write it (thanks for pulling out to a function \ud83d\ude04 ), but it's a little tricky to follow. this.props.contextMenuDetail.get('openedSubmenuDetails') is just fetched above; if it's truthy, we should be able to change the splice to re-use that variable.  So like:\nopenedSubmenuDetails.splice(this.props.submenuIndex, openedSubmenuDetails.size). very nice \ud83d\udc4d  (taking the app name out). This is a slick implementation! \ud83d\ude04  Thanks for the recommendation, @bbondy \ud83d\ude04 \ud83d\udc4d . can you add new strings below for nightly and developer in the formattedChannel method? \ud83d\ude04  Will require adding entries to https://github.com/brave/browser-laptop/blob/master/app/extensions/brave/locales/en-US/app.properties. ~I think this string (in each of the builderConfigs) should match what you have in windowsInit.js.~\n~ex:\n'com.squirrel.BraveNightly.BraveNightly' if nightly\n'com.squirrel.BraveDeveloper.BraveDeveloper' if developer\n'com.squirrel.BraveBeta.BraveBeta' if beta\n'com.squirrel.brave.Brave' for all others~. ~might be good to search for the strings and make sure all occurrences look good~ \ud83d\udc4d . yeah that's true- maybe it's fine as-is \ud83d\ude04 . maybe we should change to also use template literal syntax too- so like:\n --prepackaged=\"${buildDir}/${appName}.app\" +. and my bad \ud83d\ude04  I totally missed these are not the same thing. whoops- s/repsonseAutoAdded/responseAutoAdded. misspelling here; s/hasSeconardImage/hasSecondaryImage/g. another misspelling- s/hasSeconardImage/hasSecondaryImage/g. Would it be better to add these methods to app/common/tabState?\nThese methods are getting information about a private tab... but that data would be in any tab.  Also, private tabs never have their state persisted... so having the file looks a little misleading. like @NejcZdovc mentioned... I believe the logic of actually parsing the number out exists already in frameStateUtil.getPartitionNumber(). There's a lot of these checks... can we consolidate this check into a single method? Maybe it can be added into appConfig (since that already has some environment checks). If there's a problem with this during unit tests, you should be able to stub console.error completely and have it no-op. s/showTabTite/showTabTitle. Can we get a unit test for this? \ud83d\ude04 \n(something which passes null, undefined, passes real value, passes a string, etc). nitpick: we may want to check for frame.get before calling it (in case the input is not an immutable.map). it might be useful to leave a comment about where this number comes from. Because there are multiple checks and assignments for the background color, it would be great to have a unit test for this method to make sure that each case is covered.  With a regex match, it shouldn't be too hard to test (mocking/stubbing may be harder)\nFor example, if tab is not active and is private, we'd always want to make sure it uses theme.tab.private.background (even if isIntersecting is true)\nLet me know if you need a hand with this \ud83d\ude04 . Maybe as a follow up, it would be good to pull out the sorting into something which can easily be unit tested.  Maybe a new method determineZindex or similar (maybe in app/commmon/state/windowState)\nthen the below would be like:\nconst sortedList = windowState.determineZindex(loadedPerWindowImmutableStore)\nsortedList.forEach((wndState) => {\n  appActions.newWindow(undefined, undefined, wndState)\n}). If you did a follow up, this would be fairly easy to add a unit test for too \ud83d\ude04  Basically checking that focusTime gets added to windowInfo. @luixxiul does this also fix https://github.com/brave/browser-laptop/issues/9696?. Sure- add it in \ud83d\ude04 . Is this intentional? Why the / after?. I don't think it hurts anything, but new isn't needed here. immutable.js uses object.create, IIRC. \ud83d\ude04 \ud83d\udc4d . this could also be used to refactor these areas\nhttps://github.com/brave/browser-laptop/blob/54915c9655e2efd0a44a40fe43f2da679500add7/app/browser/reducers/historyReducer.js#L44\nhttps://github.com/brave/browser-laptop/blob/54915c9655e2efd0a44a40fe43f2da679500add7/app/browser/menu.js#L718\nhttps://github.com/brave/browser-laptop/blob/54915c9655e2efd0a44a40fe43f2da679500add7/app/ledger.js#L184\nhttps://github.com/brave/browser-laptop/blob/54915c9655e2efd0a44a40fe43f2da679500add7/js/stores/appStore.js#L433. I did actually convert them but historyReducer had a failing test so I backed out.  I felt it's better to leave those alone since they're outside the scope of this PR. . This section mostly copied from pre-0.21.x https://github.com/brave/browser-laptop/blob/0213d8f30eedf909690c8876fa9f31205bcf0ff5/test/unit/state/siteUtilTest.js#L1068\n@NejcZdovc there might be more tests from the old siteUtil that we can pull over (similar to this). For example, moveSite. this change in particular was causing @darkdh to have duplicate entries... one regular and one with only a favicon entry. These items (verboseP, etc) should be accessible outside the file (or should have another way to override them; ex: read a preference). When running unit tests against these, there's a lot of output. this might be good in ledgerUtil... although, for now it's fine to keep here since it's still using underscore.  Would be great to have a unit test for this though \ud83d\ude04 . This function is HUGE and should be broken out. However, that's outside the scope of this PR \ud83d\ude04 \nThis could use a few good unit tests though- ex: handling when pinned total total > 100%, less than 100%, etc for publishers. these could benefit from a falsey check... something like:\nconst protocol = page && page.get('protocol')\nif (protocol && publisher && !publisher.get('protocol')) {. maybe we can pull this magic number up to the top \ud83d\ude04 . index based for loop should be much faster performance-wise. Another magic number (3) that we can pull up to the top as a constant \ud83d\ude04 \ud83d\udc4d . another one which can benefit from index based for loop.  To get a comparison of each performance, you can check out https://jsperf.com/fastest-array-loops-in-javascript/24\nTL;DR: for..in shows as being ~98% slower. this should be safe to remove now since it's always in source control (if we needed it). for..of \ud83d\ude22  (would benefit from instead being the index based, like for(let i=0;i<publishers.length;i++)). awesome job pulling this out \ud83d\ude04  Nice and clean!! \ud83d\udc4d . Super niceP having this logicP pulled out of ledger.js.  Makes me happyP!  Good jobP! \ud83d\ude06 . Just want to confirm: should this be false? (ex: do any tests use it). I remember seeing an issue where the PDF wasn't showing up... is that related? I think you chose to hide it because (on macOS), it opens a window on top of the print dialog, which I understand.. \u2764\ufe0f . should this be removed?. Good catch; fixed \ud83d\ude04 . logic shouldn't have changed at all (just moved). If PAYMENT_NOTIFICATIONS is set, none of the notifications should be shown. I considered that... but since other messages may be coming through (since this fires on ipc.on(messages.NOTIFICATION_RESPONSE) I didn't want to change the behavior. Great catch- I rolled back to the original behavior (so that there is no change from previous code). is this what triggers the client library to use BAT? (the version: v2). can we pull these up into a constant? could be a nice opportunity to name them in a more readable way.  For example, why are there two possible values? (ledger.brave.com and ledger.mercury.basicattentiontoken.org) The name of the variable may represent the usecase. What action do we need to take here? does BAT have a handler? maybe we should remove this and create a new issue to address. looking at this, this brings up an interesting question... what do previous transactions look like?\nex: we switch over to BAT. Can I still view the reports for the Bitcoin payments I've made? Do we store (in the state) which digital currency was used to settle each transaction?. can we sort this (alphabetically?) \ud83d\ude04 . should this be satoshis? or probi?. since there are now only 3 columns, do we need to remove the last from here? (since this has 4 entries). \ud83d\udc4d . If the wallet transition fails, don't show the alert \ud83d\udc4d . https://www.youtube.com/watch?v=CdqoNKCCt7A. There's a whole bunch happening here- would it make sense to follow up and move this logic into tabState? Like a tabState.getTabsForClose (or similar). same as above- the method chaining should work fine... it's just a lot to read. Love this! Great use of the new migration element. typo here- should be mismatch\nSo this is avoiding the error by not importing Google cookies? Is that an acceptable solution?. Can we pull this out to a function? So then it would look like:\nif (shouldSkipCookie(cookie.domain, cookie.url)) {\n  continue\n}. nitpick: we should probably move all constants like this to the top of the file.  For example, see statePath. I looked at doing this, but since it uses electron.app.getPath() (which may or may not be initialized at the time module is loaded), I think changing that may be better to do in a different PR. Thanks for the suggestion though \ud83d\ude04 . \ud83d\udcaf . Maybe we can put a comment above this just describing why this is needed- for example:\n// fix for incorrectly persisted state (see #11585). good call... let me clean this up a bit more.... (I wasn't checking value since the test fails when an error happens). +1 on what @aekeus said- was this intended?  @bbondy when testing the PR, does a commit hash still show on about:brave?  \nI'm also curious why we'd default channel to empty string, rather than dev?. just noticed this is crash-herald.js.  Maybe in this context (for released builds), the revision doesn't matter (especially since we now version via Jenkins).. is this condition correct? I would think you would only call prune if prune is true?  Is the variable meaning IsPruned (ex: is it already pruned?).  In that sense, this check would make sense.  It's a little confusing. This method (synopsisNormalizer) is border-line approaching too many arguments. I think if it needs any more logic, we should consider passing in a map instead of parameters.  Especially since some are optional. Nice! this is a great way to solve it \ud83d\ude04  For those who may not be aware, the link to the backup page is generated here:\nhttps://github.com/brave/browser-laptop/blob/2d3fd8f19a09fb67a15115f2c073fa5ea8ffa976/app/browser/api/ledger.js#L248-L251\n(Notice how the visible flag comes after the ?, which is what caused the original issue). renamed the variable to be more meaningful (and also match other places in the file). This is the big bug fix- if it's an existing install and hasn't upgraded yet, it needs to start (or in the case where you quit, restart) the transition process.  Otherwise, it should hide the transition because that is no longer valid. simple cleanup to put in helper method. HOWEVER... notice that it says migration instead of migrations.  This was a bug I caught with the unit tests. I'm not sure how this ever returned true?. This is basically what fixes the tests. Without bat-publisher being mocked, I was getting the leak error on my machine. good catch- I removed that from here since that section is basically about updating the wiki (which the FAQ is no longer a part of). s/ledgerVideoCahce/ledgerVideoCache/g. would be nice to use parens to make this clear-  I think you're meaning it to be:\nresult.publisherURL || ((result.protocol || 'http:') + '//' + result.publisherKey). OK I can fix this- we are OK to use the state helper because the path is identical, but it might be sloppy to do so (in case things change). The problem in our case is the validation that is done, which throws the error.\nI'll change it back to the hardcoded path since the state helper shouldn't be used to evaluate ledgerData (even if the path matches). wait- nevermind, I see the problem... fixing. I believe there is a performance impact by using this approach (using mapValuesByKeys)... Going forward, I think it might be better to just assign a value directly.  For example:\njs\nconst providers = {\n  YOUTUBE: 'youtube.com',\n  TWITCH: 'twitch.tv'\n  //... etc ...\n}. cc: @bbondy . Would this be better named as getMediaProvider?. nit: to respect the brand name, it should be YouTube (ex: getYouTubeDuration). @mrose17 I'm going to hold off on merge until @evq 's concern can be addressed (and we have a sign off in https://github.com/brave/internal/issues/141). Let us know if we need to update libs after that is addressed. This is needed because code paths hitting setTimeout() will cause unit tests to crash (seemingly randomly) and in some cases hang.  When the fake timer is destroyed, all methods registered with setTimeout are cleaned up.. Fixed \ud83d\udc4d . I don't know if it makes sense to hide it without providing a work-around. We don't want to encourage using the old servers indefinitely- I think it would be better to update the transition screen to provide a community link about stuck transitions.\ncc: @alexwykoff . nit: no else needed here. I think this is fine here, but for future reference you may consider js/constants/config.js \ud83d\ude04 . this logic (all of what is in this setImmediate) might be better to pull out to a discrete function.  This would help with unit testing and could help with readability. Something like getCreateWindowArgs (passing what's needed). Then whatever is returned is directly passed to the call new BrowserWindow. Unit tests would then be a great way to capture the behavior (of setting fullscreen to false) and the tests themselves would act as documentation (if someone makes a change which breaks the test).  Could we get some unit tests for this?. Was this intentionally removed? I think it was a good test to have (making sure string setting is converted). \ud83d\udc4d . Once possible enhancement- if this setting is true (ex: hide toolbar), it would be better to not show the toolbar in the first place.  To do this, you can remove the check here and instead, ONLY set the value in windowReducer.js/menu.js if that value is true. That prevents the component from being created in the first place. this is an interesting way to check the params- any reason you'd do this over something like assert(spy.withArgs(args_here).calledOnce)?. Great having an event for this! \ud83d\ude04 . much better encapsulation this go-around \ud83d\ude04 \ud83d\udc4d . Here's the bug causing the height issue \ud83d\udc1b  \ud83d\udc40 !! \nshould be:\nbrowserOpts.height = firstDefinedValue(browserOpts.height, windowInfoState.get('height')). s/subscrive/subscribe. s/constructtor/constructor. can this be removed?. This is a change in logic, right? Since February only has 28 days for example. Can you use the add months method instead?\nhttps://date-fns.org/v1.29.0/docs/addMonths. Is this correct? shouldn't it be clearing when it's non-zero?. awesome! Thanks for adding this \ud83d\ude04 . Are we wanting to call this error? It seems like this also contains the success response?. The prior code that does getInfoProp(state, 'bat')... but I'm not seeing anything which sets this.  I think the field name must have been updated from bat to converted at some point.  \nWhy this is important: because ledgerUtil does something similar (in fact, maybe this code can be moved to ledgerUtil?):\nhttps://github.com/brave/browser-laptop/blob/567746835c6c70b1fe2ceecd092953d6d22547df/app/common/lib/ledgerUtil.js#L99-L101\nThe code in ledgerUtil may have a problem too if nothing is setting this value. @NejcZdovc OK great- did you want to do that here also?. @aekeus here's the test I added regarding the previous comment. nice cleanup here \ud83d\ude04 . whoops- this should be bravep \ud83d\ude1b . Curious why this was removed? What is/was emitting this?. To match other places, this (and the function below) might be named with the same casing (ex: isPDFFile). If the functions aren't being exported, they could be changed to isFile and isDownloadable since this file is already named pdfJS.js. nitpick: potentially falsey values could be weeded out to prevent null exception when called. For example:\nvar header = details && details.responseHeaders && details.responseHeaders['Content-Type']. By having this here, do we lose any translation that was being done? Should this be loading using locale.translation()?. Ah- perfect \ud83d\ude04  Thanks for the explanation!. Can you update this to match the it syntax? Like it('sets DOWNLOAD_DEFAULT_PATH when empty', function () {. same as above- the it should read like a sentence \ud83d\ude04 . Where does electron/Muon default downloads to for each platform?. @pureooze since the function just builds the path (using the provided input), the actual input itself isn't important \ud83d\ude04  The important part to note is that the output is prefixed with baseUrl (and the parts afterword are URL encoded). can we put the standard preamble at the top of this file?. Any specific reason for changing this? (just curious - I didn't see any other functions from settingsStore being called). agreed- should have a name like windowActions.onTabHoverChanged. Because it would take some work to either a) create an action like this or b) modify the existing uses of the action which could use a better name, I think that work should be deferred until the code behind setTabHoverState is touched.  Trying to capture this use case and the existing use-cases with one name would be tricky. The long term solution would be to move this logic to reducers. Per comment from @davidtemkin, I believe this should be \"token\" promotions. I know this logic is the same as before, but I think it's wrong.  Should it be:\nsites = sites ? makeImmutable(sites).toList() : Immutable.List(). (makeImmutable won't return falsey values basically). Since the above is checking == null (which should also return true for undefined, right?), I think we can simply make it\nsites = makeImmutable(sites).toList(). \ud83d\ude04 \ud83d\udc4c . looks like your comment just drops off here \ud83d\ude1b . @diracdeltas with @kevinlawler 's PR before fixed the icons being broken in the top right (part of the UI Chrome).  I wonder if we need to store both the Chrome URL + file URL?. I just verified that with this change, the icons still show up as expected \ud83d\ude04   I now see the change you did by wrapping browserAction! \ud83d\udc4d . \nCan't show the audio icon unless you update state \ud83d\ude04 . This would do it! Great catch \ud83d\ude04 \ud83d\udc4d . Where does this 101 value come from? It might be a good idea to make it a constant, since here it appears to be a magic number. ah ok- good to know that it's the default value \ud83d\ude04 \ud83d\udc4d . Do we need to call clearInterval and set to false when payments is turned off?. s/mulitple/multiple \ud83d\ude04 . If more logic is added to runPostMigrations (ex: after FP migration), this condition might be triggered unintentionally causing an immediate exit. Can you create a new method- like fingerprintProtectionMigration- and move this logic there? Then the new code would be like:\nmodule.exports.runPostMigrations = (immutableData) => {\n  fingerprintProtectionMigration()\n  // future post migrations can go here\n}\n  . Added new security option: Strict Site Isolation. Added additional token amounts for Brave Payments. I would bump this up to the 2nd item (below site isolation). Here's where the new default is set as 5 BAT. The actual value (for new installs only) is set to null to avoid \"locking in\" a value. You are absolutely right! doh (great catch!). whoops- looks like you left a console log in there \ud83d\ude04 . Will this condition ever get hit (null/undefined being passed in)? The caller isn't checking for null/undefined before calling .isEmpty() on the param. can we move this up?. Great find! I totally missed this \ud83d\ude04 . \ud83d\ude04 \ud83d\udc4c . nice!! Love this \ud83d\ude04 . I know you'll remove the console.log lines... but I think this would be good to log with LEDGER_VERBOSE \ud83d\ude04 . you might consider capturing new Date().getTime() with a variable and re-using below (when updating state). This way the timestamp is exactly the same in both cases (which should prevent failures when testing, if timestamps don't match exactly). might be good to change what this test is named, so it matches the it style.  For example:\nit('makes call if this is the first attempt', function () {\nand below:\nit('does not make call if within 24 hours of an attempt', function () {. is it worth adding a test for this?. Most of the world uses DD/MM/YYYY format... does moment().format('L') always return the date in MM/DD/YYYY format? or does it respect the user's locale. same concern as above- although, I know this is just a test \ud83d\ude04 . weird; the path before was invalid, right? did references before to tabState work (before this PR)?. ah- I totally see it now \ud83d\ude04 Was up past bedtime and didn't catch that LOL. this extra space at the end is also causing the linter to fail; you can manually run this with:\nnpm run lint. RIP the yoDawg bug fix \ud83d\udcaf \ncc: @evq . I think we should add verbose logging here- something like:\nBitcoin wallet detected; backing up to \"ledger-state-btc.json\" and creating new BAT wallet. food for thought- with more integrations being added, it might make sense to move the URLs into ledgerMediaProviders.js.  That module could then export:\n- type (ex: YOUTUBE, TWITCH)\n- providerUrls (indexed by type). these events would be great to put into a module (so it could work like an enum); ex: twitchEvents.MINUTE_WATCHED . another way you could do this:\nif (['minute-watched', 'video-play', 'player_click_playpause', 'vod_seek'].includes(data.event)). this (and the magic number 10 below) might be better expressed as a constant; like twitchMinimumSeconds (or something like this). For readability and also so it's easy to change both (if needed). should this be moved up to the initial check? ex:\nif (data == null || mediaKey == null || !data.properties) {. for readability, you can use milliseconds.second instead of 1000 \ud83d\ude04 . would this be better named as getDefaultMediaFavicon, since it would only be used when one is not present (ex: when watching live stream on Twitch). is this extra save needed? when the action fires, it'll also run the save. added { so that variables defined here are scoped. updated this to handle detail being falsey. { for scope (same as above). Should we have another check for this, so it only runs once?\nSpecifically we could capture this in the state in an area called \"migrations\" (see example which was removed with https://github.com/brave/browser-laptop/commit/ccee1223cbe565c546b6f103b661ae749bc85971#diff-b4e400e260f324745d12616a8c9c1fc6L377 - was removed since nothing else is using it).\nWhen fix is ran you could set this value to current timestamp and default the value (in app/sessionStore.js) to undefined. Also, note to self: we'll want to update this version before we ship. We might want to create an issue to track that. done with https://github.com/brave/browser-laptop/pull/13473/commits/88c6600706b8c7c01f582197189405b49e2bb178. we need to remove this one. Fixed bugs with ledger session corruption?. sure- that works for me!. can this be more specific? ex: CORRUPTED_SEED? in case there may be other types of corruption (not that I'm advocating for more corruption!) \ud83d\ude1b . @AlexRobinson- that would be great \ud83d\ude04 \ud83d\udc4d . Should this codepath also call webContentsCache.cleanupWebContents(tabId)?. This looks to be the first real change (origin => requestingUrl)- everything else above this line is just renaming, is that correct?. Do you have an example of where the setPermissionRequestHandler handler gets called from? I see the definition in Muon, but am not sure when the handler is called?. UPDATE: found it-\nPlatformNotificationServiceImpl::DisplayNotification\nI wanted to find an example of the args passed in. Looking at the code in Muon...\nmainFrameOrigin maps to current_origin\nrequestingUrl maps to requesting_origin\nSuper glad you fixed this mismatch issue \ud83d\ude04 . this is great \ud83d\udc4d . There's ALMOST enough logic here that we might consider making youTubeUtils / twitchUtils / etc and having a single method exposed (ex: getTwitchData) which is called in the switch.  This could allow for documenting what is being parsed in a clear way (via comments / breaking out sections into private methods / unit tests). Reading this if can be a little difficult (especially if it gets more complex); one approach to increase readability would be to pull the conditions into variables.\nSomething like:\n```\nconst firstPartyTwitch = firstPartyUrl && firstPartyUrl.startsWith('https://www.twitch.tv/')\nconst referrerTwitch = referrer && referrer.startsWith('https://player.twitch.tv/')\nconst isTwitch = (firstPartyTwitch || referrerTwitch) && [\n  '.ttvnw.net/v1/segment/',\n  'https://ttvnw.net/v1/segment/'\n].some(segment => segment.includes(url))\nif (isTwitch) {\n  return ledgerMediaProviders.TWITCH\n}\n. This will be much more useful (having a whole details object vs just what is needed) for when more providers are added \ud83d\ude3b  . I don't think the check `typeof localClient === 'object'` is needed here. Even if it's null, typeof will return `object`. That would be perfect!. we might want to call this something else, like `textAreaBox` (since it may not always be a passphrase). Since this is gone now, can we remove the package.json reference to `react-transition-group`?. should be `.once(`. If time allows, it would be much better to check for an environment variable instead of having the notes about commenting in here. Something like:\nlet WebviewDisplay\nif (process.env.USE_POOLED_WEBVIEW === false) {\n  WebviewDisplay = require('../../webviewDisplay')\n} else {\n  WebviewDisplay = require('../../pooledWebviewDisplay')\n}\n```\nInfo could then be added to https://github.com/brave/browser-laptop/wiki/Command-line-flags. this should be window-prompt. Is this new functionality (seems like it)? Do you have a suggested way to test this specifically? (should an issue be created to capture this?). might be good to check if frames is truthy (ex: action.has('frames')) before using. Could you put parens around this to make the logic obvious?\nWithout them (maybe because it's such a long line), it looks like the OR may only run if the assignment is falsey (OR has higher precedence of course). \nex:\nidleCallbackId = (idleCallbackId || window.requestIdleCallback(relayFrameChanges, { timeout: 1000 })). You should be able to initialize this in one go; such as:\nchangedFrames.push(Immutable.Map({frame})). does this console.log need to be removed / commented out / wrapped with debug?. this (and below) - more console.logs possibly needing removal. oh yikes, good catch\nWe only have automation executing this- it's definitely a rare case that someone would manually run the script. The whole process is automated actually- in jenkins.brave.com, you can view the following jobs:\n- browser-laptop-build-linux\n- browser-laptop-build-macos\n- browser-laptop-build-win32\n- browser-laptop-build-win64\nEach of them runs the ./tools/cibuild.py script which does npm install, builds binary, packages binary, and then uploads to GitHub. The existing process works fine as-is, except the fact that tags aren't considered when searching for the build on GitHub. Instead of blindly using any draft, it should also use the tag name.  If the tag name matches, no input needed from user \ud83d\ude04 . this will throw an error if the attribute doesn't exist- but the catch below properly catches/logs the error. ~Could we make a new task called tooltest? It would be great to isolate unittest to purely the JavaScript unit tests~ . Disregard that actually- since the output is just stdout (ex: unittest-cov wasn't modified), this should be great! Especially handy to have this new logic since npm run unittest runs before push \ud83d\ude04\ud83d\udc4d . This (the shebang) should be the first line, right?. This logic is missing from the new script and is definitely important. There are times where a file gets partially uploaded and then network connection drops. When the build/upload job is re-triggered, it needs to wipe out the files on GitHub. @RyanJarv would definitely be great to have a retry built into the upload script \ud83d\ude04  \nRight now the retry is done manually... Opening up Jenkins and re-queueing the failed build type (ex: win32). When that is manually re-queued, the delete is needed (otherwise GitHub will return an error since the file exists- which may only be a partial upload). Here are two examples from this morning where the upload failed:\nhttps://jenkins.brave.com/job/browser-laptop-build-win32/426/console\nhttps://jenkins.brave.com/job/browser-laptop-build-win64/423/console. This hierarchy is not the folder structure, but how the components are composited within each other, right?\nWould you mind putting a quick note for that?. could you use the constant name here instead?\nif (action.actionType === appConstants.APP_WINDOW_CLOSED && windowCount === 0) {. Same as above comment. Good call- I was wondering that myself \ud83d\ude04 . if only a tri-state value, why not use a string value instead? \ud83d\ude04 . being able to style through CSS is a huge win- I've fought angrily with SVGs when used as a value for background-image (and similar use-cases). Whoops, left a console.log in there \ud83d\ude04 . A little nit-picky... but could we move this code to app/common/lib/bookmarkUtils? Since it's the same as the code above in bookmarkFoldersReducer.js, each of these could be replaced with a single call (maybe the method would be called like closeBookmarksToolbarIfEmpty or something like that)\nShould make the logic easier to unit test too \ud83d\ude04 \ud83d\udc4d . Do we need a test for bookmarksReducer too?. is retries=3 ever used here?. Separate PR is great \ud83d\ude04 \ud83d\udc4d Let's leave it alone. this should be GitHub. that is a perfect place to put it- good call  \ud83d\ude04 . compareVersions will return -1 if less than 0.22.714 and 0 for 0.22.714. It can only be 1 if greater than 0.22.714 (and in that case, the migration won't run). Fixed with https://github.com/brave/browser-laptop/pull/14178/commits/321b2081cd9895ef032358a834f7c68778269a42 \ud83d\ude04 \ud83d\udc4d . After missing this, I fixed this and added some unit tests! \ud83d\ude04 Should cover most of the cases. this file has a LOT of changes- mostly organizing the order of the methods being tested to actually match the order in frameStateUtil.js\nThe important part is the addition of new tests with handles null/undefined frames gracefully. nit: missing the ipAddr param - might be useful to have a quick description for params (ex: how is url different than mainFrameUrl). nit: should be CAPTCHA. might be better captured as Fixed Payments displaying message incorrectly stating that 30 minutes of total usage hasn't been logged (in some situations). intentionally blank?. yup- we can remove gulp. We do use it elsewhere (ex: when packaging our version of PDF.js), but not in browser-laptop. ++ on removing flow. this needs a break afterwards- linter is failing:\n/home/travis/build/brave/browser-laptop/app/renderer/lib/extensionsUtil.js:189:5: Expected a 'break' statement before 'default'.. @diracdeltas yes - I believe it's a dependency of electron-download. Without this, the npm install fails on Linux. I'm not exactly sure where this broke, but you can see more details at https://jenkins.brave.com/view/laptop%20builds%20(child%20jobs)/job/browser-laptop-build-linux/536/console. Let me update the package-lock.json too.... @diracdeltas updated \ud83d\ude04 \ud83d\udc4d . Updated muon to 8.0.7 (extra to). style comment (not blocking by any means \ud83d\ude1b I know it was already like this) - when functions start to have this many params, it might be better to accept a map with named params. @diracdeltas updated! \ud83d\ude04 . @diracdeltas whoops- my bad on that. I'll fix that up \ud83d\ude04 So much for having a legit use for a nagFrequency variable \ud83d\ude02 . No check on Windows needed... but defaultProtocols.every() looks like a much nicer way to do it, thanks! \ud83d\ude04 . Fixed. Fixed. That would be nice for the user- but since the brave-core has auto-update enabled, I don't think it's worth the extra complexity (ex: wget, have user wait, show a loading screen, then attempt).\nCurrently, install takes place when Muon is launched before any UI is shown. Windows has a stub installer which will fetch the latest, but that is very slow for folks outside the US (there is a known issue for that). That is correct- for example, you'd set to true if you wanted to remember that the user had chosen to ALLOW auto-play for a given domain. I considered that- but since it's unlikely we'll get translations (we'd need to wait for them to be done in order to package them), I didn't translate it\ncc: @bbondy @rebron . OMG - no, I didn't do that (yet). Thanks for the reminder \ud83d\ude04 (I'll mark this as resolved once it happens). Looks like it was already there the whole time \ud83d\ude04 \ud83d\udc4d (I think you added it- thanks!)\n\n. ",
    "serv": "Just fyi, in chrome's incognito mode, you are able to reload even though there's no page to reload.\n. Still seeing this log with brave@0.7.x as well.\n```\n$ npm start\n\nbrave@0.7.7 start /Users/jasonkim/projects/node/browser-laptop\nnode ./tools/start.js --debug=5858 -enable-logging --v=0 --enable-dcheck\n\nelectron \"/Users/jasonkim/projects/node/browser-laptop\" --debug=5858\n2016-01-25 23:59:49.627 Electron Helper[47930:3600257] Couldn't set selectedTextBackgroundColor from default ()\n{ version: '0.7.8',\n  name: 'Brave 0.7.8',\n  pub_date: '2016-01-26T02:51:47.572Z',\n  notes: 'New UI, various features, and various fixes. Full details at https://github.com/brave/browser-laptop/releases/tag/v0.7.8',\n  url: 'https://brave-download.global.ssl.fastly.net/releases/0.7.8/osx/Brave-0.7.8.zip' }\n``\n. Here is how I can reproduce this issue.\n1.npm startto start the browser\n2. Go to say, stackoverflow.com\n3. Wait for it to load.\n4. Click on the URL bar. This step will cause the log to print2016-01-27 22:13:24.815 Electron Helper[41434:5026930] Couldn't set selectedTextBackgroundColor from default ()`.\n. @bbondy Check out the new PR above.\n. Can you still repro this bug? I don't think I can repro this. Maybe my repro steps are wrong. Can you review if this is the right repro steps?\n1. Went to reddit.com\n2. Click on random link.\n3. Click on another random link.\n4. Click back\n5. Click back\n6. Click forward. Works\n7. Click forward. Works\n. I tried clicking the star button beside the url bar but I can't repro this. \n. Can you let us know what you get when run these two?\n$ node -v\n$ npm -v\n. ",
    "EPadronU": "Greetings. I'm experimenting this issue currently with both, window.open and an anchor with target=\"_blank\".\nabout:brave\nBrave   0.12.10\nMuon    1.4.26\nlibchromiumcontent  53.0.2785.143\nV8  5.3.332.47\nNode.js 6.5.0\nUpdate Channel  dev\nos.platform linux\nos.release  4.7.8-1~bpo8+1\nos.arch x64\nPinning @bridiver to make sure this is seem.. @bsclifton Done.. ",
    "natalliachu": "I gave the same error in console when I try to attach a doc to the email in Gmail but only when this Gmail account is the second-opened.\n. Reproduced for Mac also (OS X El Capitan)\n. ",
    "hdwong": "+1\n. ",
    "frenchbread": "Related issue - https://github.com/atom/electron/issues/4420\n. ",
    "controversial": "This is a chromium bug, I believe\n. ",
    "wuqunfei": "same bug like https://github.com/electron/electron/issues/4420,do you have any idea about his https://github.com/zcbenz\n. ",
    "hzoo": "In Babel 6, currently the react preset doesn't contain those plugins http://babeljs.io/docs/plugins/preset-react/.\nEquivalents are:\nhttp://babeljs.io/docs/plugins/transform-react-inline-elements/\nhttp://babeljs.io/docs/plugins/transform-react-constant-elements/\njs\n// new .babelrc\n{\n  \"presets\": [\"react\", \"es2015\"],\n  \"plugins\": [\n    \"transform-react-inline-elements\",\n    \"transform-react-constant-elements\"\n  ]\n}\n. https://github.com/brave/browser-laptop/pull/280\n. Are the PR's running travis/tests? (I'm still npm i locally)\n. Looking at the webpack config - I think we can remove the ones there since the babelrc should cover it?\nhttps://github.com/brave/browser-laptop/blob/master/webpack.config.js#L37 - doesn't seem to be a reason to keep both.\n. ",
    "lucidNTR": "what are your thoughts on moving\nsites and\nbookmarks\ninto a pouchDB? we could run the pouchDB on IndexedDB. So storage and performance would be taken care of...\n. ",
    "hsribei": "Also tried to reproduce it but couldn't.\n. Is this on Linux? What URL? Tried to reproduce it with master at d368f70a6c69358fc503a425985d108fa33f3292 on YouTube but couldn't. Pausing hides the muted audio indicator, unpausing shows it again.\n. Could brave/electron dependencies and build instructions be reviewed too, please? I haven't been able to do a build without electron-prebuilt yet. (I can open a separate ticket for the build error if someone's interested in looking at it.)\n. Still observing this behavior on Linux running master at d368f70a6c69358fc503a425985d108fa33f3292 (after the fix commit).\n. ",
    "marktani": "We are currently relying on window.prompt for our dashboard, so support for this would be highly appreciated! :). ",
    "CliqueBait": "+1 from Community: https://community.brave.com/t/dialogue-alert-pop-up-preferences/1974. ",
    "Skayo": "1+ need it for my WebApp....\n(#push). ",
    "mojoaxel": "It is not likely that electron is going to implement prompt.\nsee https://github.com/electron/electron/issues/472. ",
    "shortstuffsushi": "Plus one \"wow, this is a thing?\" I am pretty shocked I've run into this... to be honest, I was just messing around with getting a simple input value. Was this intentionally bypassed for any particular reason?. \ud83c\udf89 Thanks guys. Now if I want to super lazily implement user input, I don't have to do any extra work.. ",
    "LaurenWags": "+1 from community: https://community.brave.com/t/javascript-prompt-not-prompting/11315. Verified with macOS 10.12.6 using\n 0.23.80 53a429f\n Muon 8.0.8\n* libchromiumcontent 68.0.3440.84\nVerified on Ubuntu 18 x64 using\n 0.23.80 53a429f\n Muon 8.0.8\n* libchromiumcontent 68.0.3440.84. +1 from community https://community.brave.com/t/reading-mode-safari-has-it-built-in/3387. +1 from customer email. +1 from community: https://community.brave.com/t/similar-about-config/5088\nSpecifically user would like to see these items on this page: WebRTC; webgl; Prefetch; disableIPv6; Referer Header; enable or disable 3DES cipher; HTML5 ping. ",
    "psimyn": "Can alternatively set tabArea maxWidth programmatically with calc() - does mean that on narrow viewports with only one or two tabs they look very narrow though\nstyle={{maxWidth: `calc(${100 / this.props.tabsPerTabPage}% - ${addTabButtonWidth / this.props.tabsPerTabPage}px)`}}\n\n. @garvankeeley I think this is resolved now\n. I have made a branch with this. The existing behaviour for tab ancestors is a bit confusing user-wise though. It will open tabs to the right of tabs opened from the current tab. Useful for opening mutliple links in a row though\n. Oh yeah, didn't even think of that. I recall a browser that did ancestors, but reset when you switched away. Didn't think of chrome because new tab with keyboard always open far right \n. Given that, the branch should work as expected. @bbondy do you think it's ok to check the setting in the Store, rather than updating add calls to the newFrame action? It doesn't override the value if it exists.\nAlso, missing the \"open left of current tab\" option in design spec - @bradleyrichter is \"left of current tab\" a desired option or it was there for symmetry?\n. @bbondy I'm still not convinced by the ancestor relationship remaining even after you leave the tab. This is the behaviour in the branch currently (and opening links in background tabs does the same thing):\n\nThe confusing part is after you switch to a different tab, then later come back to the first tab and \"to the right\" is to the right of all it's children.\nNot sure of a good solution though, except maybe storing tab children and clearing them on switch.\n. @bradleyrichter I'll rebase this and try the reset children approach over the weekend. Can't think of and bad effects off the top of my head\n. @bradleyrichter I've updated it, and made change to reset the children when switching tabs. \nShould this only apply to new tabs opened from context menu / middle click? Currently this also affects clicking the + button or Ctrl T as well. Still thinking about what the preferred behaviour should be without it spiralling into dozens of config options\nNeeds a bit of implementation cleanup then I'll create PR\n. This looks to have been fixed by @bbondy \n. I think this is due to scripts being blocked - works if you disable Ad blocking\nSame issue as https://github.com/brave/browser-laptop/issues/624 - cc @bbondy \n. @mikeLspohn can you still reproduce this on latest version?\n. quick n dirty fix is to hide then show everytime ctrl f is pressed.\nframe.js:\ncase 'show-findbar':\n  WindowActions.setFindbarShown(this.props.frame, false)\n  window.setTimeout(() => WindowActions.setFindbarShown(this.props.frame, true), 0)\n  break\nNicer way is probably to add a highlightSearchText action or something, which would then need to be unset by the findbar for subsequent renders\n. @bbondy this is fixed already\n. @FrancisTurner iirc selecting the titlebar in Windows allows ctrl c to copy contents \n. @jbmonroe by \"select the titlebar\" I just meant click it. In windows you can ctrl + c the active window to copy the contents (for dialogs at least)\nhttp://www.howtogeek.com/howto/windows-vista/copy-windows-error-messages-to-the-clipboard/\n. @SJ-Diamond what about being able to use the main bar as a search bar, as shown in this ultra-HD gif:\n\nEnter a search engine name, then tab to start search. Backspace in empty field clears it. Could be made a bit more clear with some UI hints, but I think this way allows everything you want without needing multiple search bars\n. @Arandhras they are editable - could be whatever you wanted. And if you just type it uses the default search engine\n\n@SJ-Diamond that is a good point, having 2 text fields could be pretty handy\n. sure, does that mean adding a comment to loading?\nloading: boolean, // show the loading indicator\nIs there a way to run npm test in minimized mode? I tried running it locally before pushing but the constant flashing/focus-stealing forced me to kill it\n. ah, putting in loading getter of tab component is much simpler. Thoughts on this:\nget loading () {\n    return this.props.frameProps &&\n    this.props.frameProps.get('loading') &&\n+    !this.props.frameProps.get('location').startsWith('about:')\n  }\nShould this be different PR/squashed if I'm going to revert other commit?\n. forget to revert when amending, then abandoned ship. New PR at https://github.com/brave/browser-laptop/pull/554 :)\n. do you have something else running on port 8080? \nMaybe check with: \nlsof -n -i4TCP:8080 | grep LISTEN\n. not an especially good way, but you could chain | awk '{print $2}' | xargs kill onto the previous one\n. @bridiver addressed/fixed question - thanks for picking that up!\n. done\n. due to base64 being blocked by CSP. Can fix independently by adding data: to img-src CSP tag\n. @diracdeltas it wasn't just csp, it was also appending#-moz-resolution= to the base64 image string\n. I can't reproduce this. Do you mean you click the address bar and delete the text, then reload doesn't work?\n. Duplicate of https://github.com/brave/browser-laptop/issues/556\n\nyou should remove and re npm install your node_modules/tracking-protection\n. Will be fixed by https://github.com/brave/browser-laptop/pull/566\n. Can you please add links to this wiki page?\n\nhttps://github.com/brave/browser-laptop/wiki/Non-Supported-Video-Sites\n. Was specifically for input types. Currently error on input type submit, for example (noticed on google landing page).\nSince you can't actually select the text, might make more sense to put in a try/catch though..\nCurrent broken case:\n1. Load google.com\n2. Right click \"I'm feeling lucky\"\n3. No context menu, console error\n. is that just for added safety? WindowActions.newFrame defaults the argument to true (including if undefined)\n. updated to use origin + pathname\n. you are a wizard. Was wondering how to set other values. Thanks!\n. @bbondy updated with data-l10n-ids \nlet me know if there is some kind of system in the locale file that I've missed, I just put them near related items\n. updated this and other .binds in here\n. I think it is frameProps - added the following to the catch block\nconsole.log(found.get && found.toJS() || found)\nconsole.log(frameProps.get && frameProps.toJS() || frameProps)\nand it shows this for frameProps:\nObject\n@@__IMMUTABLE_ITERABLE__@@: true\n@@__IMMUTABLE_KEYED__@@: true\n@@__IMMUTABLE_MAP__@@: true\n__altered: false\n_root: Object\n  entries: Array[3]\n    0: Array[2]\n      0: \"findbarShown\"\n      1: false\n      length: 2\n    1: Array[2]\n    2: Array[2]\n    length: 3\nownerID: Object\nsize: 3\nNever happens outside of test mode. I'll look into it a bit more\n. do you mean passing it with the event to onTabContextMenu ? I wasn't big on including it here either, but figured passing it with the event would mean going through Tabs' props\n. Ahahaha that's the one. Knew I'd overlooked super obvious one. I'll look into fixing the tests around page titles and adding a few more\n. ",
    "cezaraugusto": "I'm late here but the UI seems good for me at this moment and the conversation here hadn't been concluded. Can we close it?\n. ok based on previous comments I don't think we have an issue for large screens anymore, and tabArea has a max-width of 184px currently.\nI referenced this issue on #6900, which addresses small screens (or when you have a lot of tabs). \nIf someone think it's still an issue LMK and I'll revoke auto-closing keyword from there.. For people struggling with build errors on Ubuntu 14.02, running a clean install should solve it:\nrm -rf node_modules/ and then npm install\n. @luixxiul had you tried a clean npm install? I'm also using Ubuntu.\n. @bbondy what is the expected behavior? Should it include a muted icon if its muted and a video icon when its video?\nAlso, would it be a good first bug?\n. Was it fixed?\n. @bbondy was it fixed already?\n. Tested here and it works. Was it fixed somehow?\n. @bbondy @diracdeltas is it still pending?\n. adInfo.js is currently under /content/scripts/. So, fixed already?\n. Same as @luixxiul.\nFFI both Firefox and Safari closes the custom context menu (first to open) and opens the default one in a way that both cannot be opened together. \n. Still reproducible visiting https://developers.google.com/web/updates/2015/03/devtools-timeline-now-providing-the-full-story\n. Closed as duplicated.\n. @diracdeltas I agree with you, haven't found a better name for it, so I just copied from the issue.\nShould I change only i10n and keep everything else as disableTitleMode or change everything to showUrlBar instead?\n. yes, our disabled buttons have a small opacity and titleMode's fadeIn animation overrides it. \nIf not set this way, disabled buttons still look enabled for users. \n. Nope, removed. Thanks @darkdh!. \ud83c\udf89 . ok thanks, added one for oldSites and one for newSites. Case for lastAccessedTime = 0 was already covered by @darkdh, since it's the same case AFAIU, I left it as-is.. We should avoid using forceUpdate() to force re-render, it's ill advised by React itself. \nRef: https://facebook.github.io/react/docs/react-component.html#forceupdate\n\nNormally you should try to avoid all uses of forceUpdate() and only read from this.props and this.state in render().\n\nCould you do it in a way to avoid that? thanks!. ok, thanks!. updated, thanks!. \ud83d\udcaf . wow much better ;). thanks, updated. ok, thanks. I had to keep it so FA icon can be white.. yes it migrated to preferenceNavigation. I don't think <list> is a valid element. Lists are tagged as grouping content and AFAICT this tag is not included as one. Can we replace that with just a div? btw ok to keep component name as List.\nRef: https://www.w3.org/community/webed/wiki/HTML/Elements#Grouping_content. ++. After removing synopsis list I've got the following error regarding this line:\nTypeError: Cannot read property 'forEach' of undefined\n    at run (/Users/cezaraugusto/dev/browser-laptop/app/ledger.js:1576:20)\n    at Timeout.setTimeout [as _onTimeout] (/Users/cezaraugusto/dev/browser-laptop/app/ledger.js:749:47)\n    at ontimeout (timers.js:365:14)\n    at tryOnTimeout (timers.js:237:5)\n    at Timer.listOnTimeout (timers.js:207:5)\nprocess exited with code 7. adding sync and plugins tabs made menu taller, so helpfulHints got cut.\nFor small displays it adds a scrollbar to address that. if we have enough display height then put hints at screen's bottom.\nIdeally we should do it on navigation itself but then we lost the active indicator (arrow). we can remove adblockCount and blockedCountTotal classes since they're not used anywhere.\nFor blockedCountTotal there's a test written targeting that selector (see adBlockTest.js) but we can replace className to data-test-id='blockedCountTotal' and on the test file we just update to:\n.getText('[data-test-id=\"blockedCountTotal\"]').should.eventually.be.equal('0'). we can remove  adblockLastETag and also adblockLastChecked class as well. np keeping div element.. can we go ahead on this and localize title? change it to data-l10n-id='removeSite' and then on passwords.properties add \nremoveSite.title=Remove site\nAlso add fa fa-times icon to global.js under appIcons property.. ditto for icon class. same as first comment regarding icon and title. super cool to see LESS files removed ++. it should be .waitForExist('[data-test-id=\"passwordItem\"]')\nYou can check if it works by running npm run watch-test and on other terminal tab run\nnpm run test -- --grep=\"autofills remembered password on login form\". np either way is fine. +++++++++++++++. can we remove that class or just replace it to data-id-test just for future-friendliness?. ditto. ditto. [minor] I think it's more likely to edit logic code more than editing styles, and this way we have to scroll down all Aphrodite stuff to get there. Can we put styles at the end of the file?. \ud83d\udcaf \n\n\"let's use less LESS\". I think there's a typo here (which breaks all l10n for that). \n\nShould be requiresRestart instead. no need to use quotes on keys for Aphrodite. what's the reason of using pt instead of px?. would be better using WebkitUserSelect instead of stringifying. ditto. ++ spread operator ftw. yes, you can double-check looking at devTools for resulted code. I guess Aphrodite uses React built-in styles vendor mechanism. For reference:  \nhttps://facebook.github.io/react/docs/dom-elements.html#style. yep that's intentional. Ledger only recognizes false values. So if it's not on payment list yet (no user action), field will be undefined. If other conditionals don't apply then we consider it's included for payments.. Agree. Will take this for next refactors and just updated Wiki for future reference. Thanks. super ++. I think there's a typo on file name: advanceSettings -> advancedSettings . thanks for this. I think there's a typo on file name -> advanceSettings/advancedSettings. This is replicated although the changes. app crashes if I try to copy key 2. typo. (minor) can you stringify undefined to 'undefined'?. If you didn't yet, please reference that PR also closes #7380 . YESSSS\nThe lesser the LESS, the less\u2122 . STR:\n1. Clear profile\n2. Enable payments\n3. Go to advanced settings\n4. Click backup your wallet\n5. Key 2 doesn't exist\n6. Try to copy key 2. I meant to typeof this.props.checked !== 'undefined', but doesn't matter result is the same, let's keep as-is, sorry . I think you need a check here as well. With those changes synopsis.publishers[publisher] is still undefined at this point. App is crashing for me and pointing on that line.\nWorth note: if you have a site in publisher list error doesn't happen. For publishers on exclusion list (such as Youtube), crash is intermittent. Other publishers instantly crash app.\nSTR: With a fresh profile (no synopsis, no session, no ledger-state), enable Payments and visit a publisher site (i.e. https://clifton.io). nice, let's cc @mrose17 for thoughts. you mean adding to a variable? If so, we can:\njs\nconst notifications = this.props.appState.get('notifications')\nconst hasNotifications = notifications && notifications.size\n...\nhasNotifications && activeFrame\n  ? <NotificationBar notifications={notifications} activeFrame={activeFrame} />\n  : null. thanks, no crashes this time. However I followed STR and publisher is still auto-including for me as soon as it populates payments panel. \nI did a look inside publisherToggle (only part besides payments that changes publisher state) but state is only changed there if you hit urlbar icon, so it must come from ledger itself.\nIMO you might want something similar to this:\nhttps://github.com/brave/browser-laptop/pull/7289/files#diff-9b959b675446ba95e1abe0b81e0f7a9bL566. yep, I removed last comment with wrong video showing STR. After your update it's working fine.\nWhat I saw is that, if you have a clear session with a synopsis file, publishers you had previously are affected by changing auto-suggest, which should only be applied for new publishers. Note that without clearing session-store it works perfectly:\nSTR:\n1. remove session-store file\n2. keep ledger-synopsis.json (supposing it has publishers)\n\nI suppose auto-include should only apply for new publishers and not for existing ones? If I'm wrong then PR is good to go ;). we have a tab property for that, this.props.tab.get('hoverState') which is a prop made for hover events. I think that's the right fit for these changes and you can just remove other mentions for hover you created.\nYou could also change const name to update its meaning for something like isPrivateTab since we're adding a rule that's not exclusive of active  privateTabs. i.e.:\nconst isPrivateTab = this.props.tab.get('isPrivate') && (this.props.isActive || this.props.tab.get('hoverState')) . I think you need another check here. While toggling passwords I got the following error reported on console:\nAn uncaught exception occurred in the main process Uncaught Exception:\nTypeError: Cannot read property '1' of null\n    at properties.forEach (/Users/cezaraugusto/dev/browser-laptop/app/extensions.js:376:57)\n    at Array.forEach (native)\n    at insertLocaleStrings (/Users/cezaraugusto/dev/browser-laptop/app/extensions.js:375:20)\n    at process.on (/Users/cezaraugusto/dev/browser-laptop/app/extensions.js:358:19)\n    at emitOne (events.js:96:13)\n    at process.emit (events.js:188:7)\n    at process.on (/Users/cezaraugusto/dev/browser-laptop/node_modules/electron-prebuilt/dist/Brave.app/Contents/Resources/electron.asar/browser/api/extensions.js:37:11)\n    at emitOne (events.js:96:13)\n    at process.emit (events.js:188:7). fyi: log error happened while toggling last pass and pocket. awesome++++. ++++++++++++++. I know it was here before but not sure what's the reason of having it? row-reverse does nothing here. I think we don't want it ;). (2). (3). :). same. (..). ( .-. ). (..). (\uff61\u25d5\u203f\u203f\u25d5\uff61). (\uff61\u25d5\u203f\u25d5\uff61). method to transform image to base64 is a thenable, so I had to pass result to a state, and styles is not bound to the component, so I can't call this.state there. That's why I had to create a separate stylesheet for each image. pls see comment above. I can't manipulate component-level state without using actions/stores with Immutable. Creating an action/store for that is overkill. Since we're on an about:page there's no big deal to use React.Component. yes I'll update, thanks for noticing. not sure which is going to land first but will include once Honey lands. I think you don't need to check aboutUrls since it will return false with UrlUtil.isHttpOrHttps. \nnoBorderRadius={this.isPublisherButtonEnabled} should work as expected. pls change it to \njsx\n<WidevineInfo createTabRequestedAction={appActions.createTabRequested} />\nnewFrameAction doesn't exist anymore and that makes info icon uncklicable. I endorse creating a new folder to include this file but despite being enthusiastic on creating small components, they're still too small to host their own files IMO. \nSince they're just titles, it's very unlikely that we'll add more methods and bulk file with new code.\nFor the new folder name, I'd suggest something like common/shared to host this, and in future include things like button and our already existent settings component, so for all highly replicated components. Even if we decide to create an about folder -- which I endorse as well -- they should be on that folder. changed to Enzyme instead of Webdriver. future refactoring of about pages will benefit from this instead of relying on common.less file so I took advantage of this PR to add it since it's needed anyway for welcome page. @NejcZdovc @bsclifton could you both left a comment on https://github.com/brave/browser-laptop/issues/8340 regarding BEM? We should standardize our Aphrodite stuff as soon as we can to avoid future rework. @luixxiul left some great insights there.. ++ for section. can we use camelCase here?. ditto. same here. I prefer this way because then I can leave styles on the component itself. Otherwise, I'll have to create a new style for that and put it on the tab itself or inside a third file, and if I do it then I'm not taking advantage of Aphrodite.\nStyle and component should live together so I don't have to run several files to find a simple thing. Things we do such as commonStyles.js is just a hack we found to keep refactoring important stuff while common components aren't ready yet/too nested. Having both together makes regressions less likely. \nIt also simplifies the code, so if for some reason Brad or other less code-experienced member/collaborator wants to change something for a given component, they'll need to go to into just one file.. fyi I created another issue to track that change: #8401. can we put requiresRestart inside commonStyles.js?. ++ no-important pls\nconst {StyleSheet, css} = require('aphrodite/no-important')\n. that's great, I took a look at other browsers and they take that approach as well. Maybe 80vh is good enough?. yep per @luixxiul example, Aphrodite will concatenate styles and the last would take precedence. I think that doesn't happen with cx but definitely happen with standard css(style1, style2).\nI'm against !important whenever possible. I would compare it to JS eval(), it takes precedence whenever it's defined, and that's a bad pattern. It's a feature that might be useful for some edge-cases until we aren't using Aphrodite 100% but long term we should avoid. \nFor new components, !important is a no-op but this is a huge PR and if that was previously defined we should keep it as-is. As we head closer to 1.0 we should avoid re-work and reduce regression risk at all costs. However, wouldn't mind reviewing a follow-up removing that, but for this PR I think we are fine with what we have.. looking at the component and at variables.less it actually never was 50px. cx() is just a lib to apply styles conditionally, so it's affected by the same rules as CSS like deeply nested selectors taking precedence, and !important which overrides everything. \nI don't think there's anything we can do with that but just avoid adding new LESS stuff and keep using until it can be removed.. you need a name here as well, like honey=Honey. If the extension has a different name like pocket (which shows as \"Save to Pocket\"), you'll need to use the same first letter for the variable as well, otherwise, we can't sort by name in extensions table. (just fyi,  I don't think this applies here). \notherwise everything ok inside extensionsTab ++. I think the convo happening regarding extensions name is my fault. I actually created that for extensions such as LastPass where the name is LastPass: Free Password Manager -- which includes product name + tagline. If that's desirable to have the name as-is I +1 on hardcoding names. Sorry for confusion :). thanks \u3057( \u30fb\u2200\u30fb)\uff0f\uff3c(\u30fb\u2200\u30fb) ///. is it needed somewhere? we are removing style class and I can't see any test using it.. I can't get enough of less less :). I think if you just let data-isBraveryPanel works. Above you're passing true as a string, which would evaluate prop to true anyway, so would any other string. For example, data-isBraveryPanel='brave' would be true as well.\nYou can double-check that if you pass data-isBraveryPanel={true}which will evaluate to boolean. Standardjs will warn you saying that it is not necessary:\nValue must be omitted for boolean attributes\nI would just <FormDropdown data-isBraveryPanel {...this.props} />.. if gridStyles.row1col1 appear in both conditions then you could only [css(gridStyles.row1col1)]: true. since all styles use Aphrodite we could make use of its recommended syntax as well:\njs\nclassName={css(\n  !!adsBlockedStat && styles.braveryPanel__stats__item_count_clickable,\n  (!shieldsUp || adControl === 'allowAdsAndTracking') && styles.braveryPanel__stats__item_count_disabled,\n  gridStyles.row1col1,\n  styles.braveryPanel__stats__item_count_adsBlockedStat,\n  !compactBraveryPanel && styles.braveryPanel__stats__item,\n  !compactBraveryPanel && styles.braveryPanel__stats__item_count,\n  compactBraveryPanel && styles.braveryPanel_compact__stats__item_count \n)}\nit may seem weird at first but it looks for the first assumption and only execute the latest if condition evaluates to true. condition && style would write nothing if condition is false.\nSame tip applies for next cases. Let me know if you need a hand rewriting it. that's an example however. I would make (!shieldsUp || adControl === 'allowAdsAndTracking') a variable for better readability and put styles that don't need conditionals (such as gridStyles.row1col1) at first for the same reason.. I don't mind having relative units but curious why we have it?. grid ftw ++. can we move it to global.js and so other colors? you can copy browserButton way and create an object like:\njs\nbraveryPanel: {\n  color: '#3B3B3B'\n}. here's our hero for double scrollbars. introduced here: https://github.com/brave/browser-laptop/pull/8990/files#diff-f94f0ea4252431046502bbe75728ba1fR836. I don't think it is needed for this test specifically. could we take advantage of this PR and add subtleButton to <BrowserButton> component?. variable defines that page can play audio, and is not muted, maybe isNotMuted?. is props required? maybe for redux component? afaik this is only needed if you want to use this.props in the constructor. . can we remove this comment to avoid confusion?. minor: typo. we are returning before fixTabWidth is set to null, this is making tabs unable to recover size after sequential tab close:\n\n. I agree, but // used in renderer is followed by a blank line and then we have // used in other functions. If both applies wouldn't be better to // used in render and in other functions? Reading the code the blank line between both comments lead me to think that comment was left after some code removal.. nice catch. this should belong to global styles. small: let's place isClickDismiss, isBraveryPanel and other props that are true by default in the beginning of component's props. No need to do this now since this component is small enough but please do for future changes. that helps readability and even more for us that do front-end a lot. \nI'm going to update our styles doc soon with that info btw. while it follows this prefs pattern, wouldn't be better to say \"show top site suggestions\" instead?. hi @kumarrishav could you give some context about what do you need from here?. btw I think this method is not needed. only webviewActions.setWebviewFocused(). For parity, we should auto-hide the downloads bar after clicking \"show all\", as you did above.. I agree. any reason why prefer Button over BrowserButton?. I thought it was but removing it increased test speed and adblock was recognized same way. For some reason dataFile is unreachable for a long time and was leading to intermittent fail. Same for other dataFile requests but for adblock seems worse.. ya unfortunately :___(. nice. now that onClick handler is set for <span> the data-test-id should be moved over there as well. Otherwise, some tests that depend on it will perma fail because it is clicking an element that has no listener for changes.. based on above, test id should belong to here, i.e. <span data-test-id='adsBlockedStat' onClick={this.onToggleAdsAndTracking} .... I tested both with and without this forced display and as far as I can tell no visual changes between them. In both cases, setting page to auto-refresh removes titleMode temporarily and letting tab idle while navigating other tab didn't make any action. Please let me know if I should test another scenario for tabnapping.. I have a strong guess that most monitors aren't yet in the same high-res as printers to get absolute units with the same precision. Absolute units are basically made for printed pages.\nIf you're interested, please check https://www.w3.org/Style/Examples/007/units.en.html and lmk if that changed your mind or, if not, lmk your thoughts.. otherwise lgtm. the feature works as expected but turns out to have bad UI. It wasn't introduced in your PR.. hah \"I Know What You Did Last Summer\". no need to do now but would be cool if we have here our browserButton with iconOnly prop. why not aphrodite-fy?. another good case for iconOnly btn. ditto. btw while I really like the getter way, I think we'd better have our navigator buttons inside its own files. We can separate by \"start btn\" and \"end btn\" btw. That is a kind of thing that may change in the near future and tweaks can be made easier. I can help with that, wdyt?. I would suggest moving this to Aphrodite to avoid this long line but titleMode needs its own refactor.. great cleanup. all in. publisher toggle has its own rules which are kind of complicated. this check should work from there. I think only check for titleMode here is better. If we want to add a container just for this component it should live in the component itself. love it. are you adding these comments to justify the change? If so I don't think we need them. Ok to left as a reference for reviewer but better to be done as a review comment. I'm also curious about these BEM references. Self-tracking?. pixel perfection \ud83d\udc4c . \uff3c(\uff3eO\uff3e)\uff0f. I think we'd better make it work with test-id. I can help with that. ditto. ditto. yes, correct. ok count with me. it was listening to a message but taking no action when fired iirc. I can't recall why I didn't remove but given it is doing nothing seems like a leftover so I'm fine removing.. oops \ud83d\ude48 . I think those should be removed too. maybe remove it all given other handlers are not bound to the constructor but curious if that affects reduxComponent. btw there's no listener for tab page previews anymore and I can't preview a tab set.. yes, you can try npm run test -- --grep=\"tab pages tab page previews hovering over a tab page changes it\". thanks for the comment. the front-end gods salute you for this great element \ud83d\ude1c . super cool. wow elegant fix. per-frame hoverState is needed to check whether or not the close tab icon should be shown -- a workaround I did for Aphrodite that can't handle children classes of pseudo-state. Needs to be per-frame.\nAre you suggesting to add a new state that checks whether or not a tab is being hovered, like a global clone of hoverState to avoid iterating over frames? I think so but I'm often confused by state names regarding tabs.. @bridiver before sending this I debounced mouse move but even with 10ms it was leading to bad behavior and tabs were previewing without user action, given they were debounced. The event triggered inside onmousemove is canceled with both mouseenter and mouseleave, which I guess cover the event's cost. . @bridiver I had a hard time moving the delayed state update to frameStateUtil while trying to keep using setTabHoverState (without adding extra actions). \nafaict there's no way to delay state updates without calling an action inside the utils file? Even if so I guess per our convo we are trying to avoid that. If this is not unacceptable I would prefer to leave it as-is.. we don't use it anymore. frameStateUtilsetPreviewFrameKey(..args) now checks for preview mode and returns if there is none. I guess the only use case for that was to delay tab previews for one use case, which we don't have anymore . ok, updated. nope it wasn't, it should check if frame 1 has preview. updated. @NejcZdovc I cherry-picked this from #9923 but I'm unsure why do we need it?. I know it was like this before but could you please add this to globalStyles as well?. this could benefit from the above comment as well. I ended up checking for parentNode instead + nulling pointer events for elements I don't want to be triggered. That method is now tested too.. this avoids parsing styles twice which is ok but still a nit win as it parses again every time a className with css() method is called.\nWhat I'm not confident is that it makes the code less readable and error prone IMHO. cx() will eventually be replaced so I don't think it offers much value. This is just my take so please lmk if you disagree.. \ud83d\udc4c . below we have:\n// TODO: refactor preferences.less to remove !important\nfontSize: `${globalStyles.fontSize.settingItemSubtext} !important\nis that still needed?. feel free to remove. added can not accept partial string match. yes the browser reserves a chunk of memory for that so they're costly if done several times but new tab load and tab's loading animation can benefit too. lmk if you know some other areas. it applies for opacity and transform properties.. not in the scope of this PR to fix it as it was as-is before, but can you add a TODO comment indicating that we shouldn't rely on classList for node checks?. can we change this to yAxis instead? a one-word variable is easy to miss. I guess we should update it to 7.1 to match webpack3. current version (6.2.0) only matches 1.x and 2.x (with deprecation warnings). ref: https://github.com/babel/babel-loader/. it wrote for me. maybe put in .gitignore? or maybe it will be needed eventually due to hash changes?\nalso having Content not from webpack is served from /Users/cezaraugusto/dev/browser-laptop/app/extensions/brave, is that expected?. watch out master ken. \ud83d\udc4c . you're actually passing a string here, so this is actually truthy and not true. For such cases you'd need to pass as a boolean like data-isPanel={true}, but standard will complain. Hidden values are evaluated to true anyway and make standard happy, so <FormDropdown data-isPanel {...this.props} /> is the right take.. if browserButton_panelItem shares the same value then it should be both hosted in global.js, then the comment can be removed. why are we changing styles here?. ++ much better. yessssssss. ok I'm against payments.js styles anyway so doing what you did is better up to a point that we remove that file.. ok thanks. also pls move things out of that most you can. I think that file should be removed. this is super cool. nit: I know it was similar before this change but this double not in bitwise is hard to read. I don't think we need to floor numbers in here so my guess is that we use it only to coerce from string to number? if so a more readable way would be to explicitly coerce to number like you did in #10610.. I guess this can be removed. I don't see this being used anywhere and test pass without this line. <3. cutting-edge!. thanks I'm going to exclude it. this is much cleaner. this seems fragile to me. What if at a given point we decide to update tabs toolbar height?\npinned tabs sizing are also are not used anywhere else so I won't mind having the size explicitly described here.. nit: let's just avoid this in the future, this is hard to read. it always falls to that condition for unit tests even when the test pass for some async reason. I did that first but it only returns either 'black' or 'white' so I made it more verbose to avoid confusion. it was made for an animation I removed before pushing, should not be there. yes I saw that just after pushing. Should be removed here too.. sounds good. throttling tabs as we do now leads to #7925. I tried minimizing perf cost by observing only the first tab in a tab set. I'll share perf wins once I finish this monster. I missed the boolean coercion there !!frame.get('partitionNumber') will coerce falsy (0) to false. nice spot. changed icon__default_props to icon__default_sizeAndColor. Not sure if best but more declarative ya. wow weird standard accepted this, nice catch. you are right. all things that need to be centered are now relying on tab__content_centered not only the tab__identity. not sure what to comment but lmk what you want to and I'll add. perfect. w00t lost in the rebase, let me re-do. in this commit we have:\njs\n            styles.tab,\n            perPageGradient.tab_gradient,\n            // Windows specific style\n            isWindows && styles.tab_forWindows,\n            this.props.isPinnedTab && styles.tab_pinned,\n            this.props.isActive && styles.tab_active,\n            this.props.isActive && this.props.themeColor && perPageStyles.tab_themeColor,\n            this.props.showAudioTopBorder && styles.tab_audioTopBorder\ndo you think this can be improved or that works ok?. better if\n```\n[css(styles.switchControlText_left__label): true,\n```\nlmk if you disagree. don't you prefer spacing brakets?. same as above better if\n```\n```\nunless aphrodite is buggy in such cases\n. same as https://github.com/brave/browser-laptop/pull/10482/files#r139234453. ditto. yep same. ditto. yaya. ^^^. yet another one. nice find. w00t beautiful. nit: this could be styles.actionIcons__icon_pin_isPinned. I like using ch units for width/height but for padding seems obscure. Let me know your thoughts on why this. yep that was just a move of what we had at that moment and method was eventually overridden. agreed on but same as https://github.com/brave/browser-laptop/pull/10691#discussion_r139506804. I'm going to remove them all. Looking now they seem silly as frames may be unavailable at start-up time and you'll end up receiving warning unnecessarily which may lead to future bug reports, where in fact there's no bug but only async methods.. wow eagle eyes. I left a https://github.com/brave/browser-laptop/pull/10691#discussion_r139507556 and TL;DR will eventually remove all warnings. makes sense will move them. not really. That method does not accept numbers or number-like arguments. So a partition passing down 1 or '1' will return 0. I did a fiddle to demonstrate: https://jsfiddle.net/cezaraugusto/okrgjtok/. I would prefer having the icons instead of a FA class. Food for thought if you want to go ahead with this we could gradually remove them in favor of SVG. Sources can be found here: https://github.com/encharm/Font-Awesome-SVG-PNG. there's a PR for that from you (#10978) should it land first then this?. @luixxiul here's our hero for the top border gradient you mentioned . YESSSSSSSS YOU DID IT SIR. \u2763\ufe0f. haha w00t \ud83d\udc68\u200d\ud83c\udfa4 \ud83c\udfb6. grayscale ftw. I don't think so, only other <strong> tag we have is in URL bar, which is not affected by this. I don't think so. works normally in this case. ++!\n...and then drops the mic \u270b\ud83c\udfa4 . any reason why not paragraph?. why is relative unit preferred?. I know it was like this before does but this extra .5px makes any difference?. ya not sure why but please revert this part, the current way is not semantic. ok thanks. oops. I know still WIP but please move this to animations.js file which is avail in 0.19.x too. it used to be a string when you open a new tab (non-partitioned) from a partition but couldn't see it anymore. For context, it still happens this way to frames for example. nice move. in a follow-up: these could be described in about styles too. for me they are all failing. I just did a rebase + push let's see how it goes. if moveNext defaults to true I think we can skip the second argument. nit: I'd prefer the verbose name w/ frameGroupIndex instead. same for other similar named constants. can we make use of data attr instead? something like data-pinned-tab. We're trying to avoid tests w/ CSS selectors so Aphrodite changes could less likely break tests. same as above. thanks for this. nit: just taking advantage of a needed rebase, could you normalize the comment here? like\ndiff\n-//       TODO:\n+// TODO:. nit2: would be cool if you break comments into more lines/less text. Sorry I have a small monitor \ud83d\ude48 . Also same comment from above re normalizing spaces in comments. frames is used across several areas to reference the group of frames we have and can lead to confusion. Please change variable name to something more explicit like elementKeyframes or something you think fits better. same as above re comments extra space. same as above re frames variable. nit: would be cool/preferable to have a helper method instead or just break this down like \njs\nconst shouldTransitionIn = (\n  this.element &&\n  !this.props.tabLoading &&\n  (!prevProps || this.props.favicon !== prevProps.favicon)\n). same as above, given shouldTransitionIn is shared across files, a helper method would be a nice move. like inside tabUIState.js. ditto. I think we should not use debounce here. Debouncing leads to bad preview behavior when previewMode is enabled after consecutive previews. this is already required in beforeEach hook so redundant. uses same source as websocketstest.com script. getting data files from the store is very slow and often leads to intermittent so I added some more time. It's often not that long. may fix too but lots of bravery panel tests are intermittent I'm trying to fix them all in #11651 which includes this too. ya but if no greetings then it will evaluate to true as well. Anyway, your call is correct and the check I was doing for per tab notifications were wrong and I updated. Thanks for checking\nYou can assert now it works by running npm run test -- --grep=\"shows notification for login form\". Let me know if I missed something. this is very similar to NotificationBar and plan is to make it as the comment and merge both components together, that's why it's living there. I just avoided making a big change in this PR to do so. not sure if I get it, it's checking against frameOrigin rn. my bad, fixed in bb324eb12e94eb9f75b82d3eda5364abeb2a233b. active tab page should have the same state when hovering (filled orange). not sure what is happening but this is what I'm seeing now:\n\n. maybe you should enforce the background color on hover for the active tab page too. is this intentional? could be a console.error if so. ya it's was me forcing coercion. I tried without it w/ tests and worked same way so I made your request. ok updated. this now adds 1 month starting from the current date cc @bsclifton . why are we asserting three times here?. were the above deps reviewed by sec team?. cool to see dynamics import for about pages. typo. typo. typo. ditto. hey @user512. The order affects styles the same way as CSS cascading works. The last rule overrides the previous so in your changes, the disabled interface would override other styles, which is the correct and expected behavior. Nice work!. maybe this could be the last conditional but I think it's ok as-is. Thanks!. iirc this logic was used to allow links from the webview to be made as bookmarks. Given this doesn't work anymore code was removed. Commit that made this removal is 86c1ac42ff6ef5aa026cbfa3eae5556d44141479 in case we need it back.\nper git blame cc @bbondy @NejcZdovc if there's other something I missed. nit: no need for space inside brackets. removed in https://github.com/brave/browser-laptop/commit/37b0969414e50c23aab5dd5385ce816e2fcc7080#diff-02c4b23ad267fe636760179e32fa29ceL867. thanks changed in 97f689b6a7c12ca0ee009bdfaf514706e33c0b1a via push -f. ok done. oh my bad this was for another pr thanks for spotting. this should be localized. you can use thel10n.translation(STRING_HERE) method and add that string to common.properties file to make it. see https://github.com/brave/browser-laptop/blob/master/app/common/state/aboutNewTabState.js#L41 an empty array would populate top sites with default pinned site, which should only happen on an empty profile. yes, the 'L' parameter forces month numeral/day of month/year. \nref: https://momentjs.com/docs/#/manipulating/local/ and search for \"Localized formats\".. yes same as above answer. oh noes! fixed. ya shouldn't be removed. added back. done \ud83d\udc4d . ya better, done. not sure if I get it but isn't the seed related to the main device only?. done in 63c57cd76e472929fefdc66b030c088b7c87f4b3. done in 49113e5b3571ccaabaeeb7d6b69ef415cb137dfe. done in 327d4a6da2bbdbff3ffae2a3b0f7df3138be486f\n\n\n\n. second screenshot has the text in different position given the extra footer button eating space. so that option is for other devices (other than the main device). IIRC considering the above use case, if user setup sync again after removing a device, seed will be cleared given that removing the main device triggers RESET_SYNC. . sorry unable to repro but by clicking Leave Sync Chain you trigger DELETE_SYNC_USERwhich iirc clears all data in client. Maybe a response delay from the server? \nCreated #13799 for further investigation. it's unclear to me what those numbers mean. IMO better to have them under https://github.com/brave/browser-laptop/blob/master/app/common/constants/settingsEnums.js and name them something like bookmarkDisplayOptions. if we follow the above comment here we could have\nprops.textOnly = (bookmarkDisplayMode === bookmarkDisplayOptions.textOnly)\nor any other more meaningful name. is there any benefit of inlining SVGs instead of requiring the file here? if perf is the same I'd prefer the latter for readability.. nit can't we put it inside style instead?\nstyle={{ \n  '--bookmarks-toolbar-overflow-indicator-visibility': this.hasHiddenKeys && 'visible',\n  '--bookmarks-toolbar-overflow-indicator-width': this.hasHiddenKeys && `${globalStyles.spacing.bookmarksToolbarOverflowButtonWidth} !important`\n}}\nit wouldn't parse if result is false and IMO it's easier to read. Again this is nit. ya sorry missed the className prop here. I think this is a leftover. Is this being used elsewhere?. nit: we usually add an extra line break between properties when dealing with styles. we can replace it with -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Helvetica Neue\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", sans-serif; which is the default font set for our app. for parity with other exports we use I think it's preferable to use Node.js module.export utility instead of ES6's so module.exports = extended.css(styles[GLOBALS]) would be better. consulting the DOM in React has its cost and we could avoid this by adding a new <div> with the same CSS properties and result is the same i.e.\njs\nrender () {\n  return <div className={css(styles.appContainer)}> \n    <div className={css(styles.error__content)} data-test-id='errorContent'>\n      ...stuff\n    </div>\n</div>. same as above comment regarding line-break. lol tests in Portuguese I don't even have to check git blame :P. thanks for fixing this sir. ",
    "rorycurtis": "I'm running Brave on OSX El Capitan (10.11.3). The browser was running fine for a few days but after leaving it running with multiple tabs open (8-10) the memory (32 GB) and cpu were completely maxed out. Killing the Brave process sorted it.\nLet me know if there's any logs I can provide to help you track it down.\n. ",
    "garvankeeley": "I can't repro anymore, closing\n. On iOS too, when viewed on iPad.\n. 0.7.1 (0.36.3) still has this\n. Edit: I hasn't happened again \u2013i thought i clicked to start the app, but I recall now, it wasn't clicking to start the app, I have brave app set to open on startup, let me try that and see if can repro it.\n. Attempt 1, logout and login again: This time I saw the error appear briefly (for <1s) then disappear and the windows re-opened normally.\n. Attempts 2,3,4: no repro :/\n. No, but perhaps the 2nd or 3rd time. It was soon after an update.\n. it was once, soon after downloading the dmg (I don't think it was my first boot, maybe the 2nd), i didn't look into it further, as i thought it would be an easy repro case :/, but it turns out not to be\n. can no longer repro, closing\n. I would like to see more than the top 500, I think it is too few. I find it often not completing for the sites I go to.\n. \n. Missed an STR step: click on the content window first to apply focus to it\n. os x 10.10.5\n\nOn Jan 25, 2016, at 10:31 AM, William Blondel notifications@github.com wrote:\nOn which OS are you running Brave @bkardell and @garvankeeley ?\n\u2014\nReply to this email directly or view it on GitHub.\n. I am no longer seeing this, been using youtube without a problem. Clearly it was non-html5 videos, but I am not seeing the problem on videos that I originally reported this but with.\n. @bbondy these lists seem to be straight URL matching rules, they don't consider the type of the resource, so I didn't think iOS needed to do its guess-the-resource-type code.\n. Added, thanks for the src link.\nIn future, please add issues to the respective githubs (no details needed, just slap it in there), as messaging volume increases, things are going to get missed.\n. I would need a more detailed spec of what steps are being taken to say where the problems might be. I have only used that approach for JS that doesn't need a DOM. If it does need a DOM, then why not inject it into the current webview for execution?\n. Thanks, nothing jumps out as an issue\n\nre: 1. iOS http filter is a catch-all, I think/hope I can distinguish non-actual-webview requests from others, but currently I don't have this.\nre: Caching:\nAs for UIWebView disk caching, we have to consider the size of the disk cache, and how long a typical browsing session will take to flush that cache. Alternatively we install our own NSURLCache, but then all the code will likely be best written in swift/obj-c. I think the fact the cache can be short-term means that there shouldn't be a problem here, and that the build-in webview caching can be used.\n. ",
    "Cragsterboy": "i have also encountered this bug today on the latest version. Would be nice for this to be fixed, as it is annoying when trying to select text out of url bar.\n. ",
    "skeep": "Just realised that it is possible to select text but it's just that the selection area is too small. So whenever the I cursor comes it's possible to select text in the URL bar.\n\n. ahh you are right my bad.I think it open at the background and I was expecting for a docked panel.\n. ",
    "rob-blasetti": "The tests have been added in a pull request! :D\n. @butlermatt I'm using Mac OS 10.11.3 too, but the video works fine for me with 0.7.12\n. fixed:\n.././filter.h:12:25: fatal error: BloomFilter.h: No such file or directory\non OSX El Capitan with sudo npm install --unsafe-perms \n. i'm getting the same error on OSX El Capitan\n. And on OSX Yosemite too. (tried a different machine)\n. foudn the issue, you have to do npm run watch in one tab to start the server, then npm start in another\n. Works fine on my Netflix now, i'm using OS X El Capitan\n. I have the same issue on:\nOS: Mac 10.11.3\n. @bbondy How are these updated tests?\n. The test is working in the CI check, others are failing though so the build is broken.\nI'll have a crack at fixing it according to the feedback, thanks guys.\n. ",
    "SergeyZhukovsky": "Looks good.\n. @garvankeeley you should look on that commit \nhttps://github.com/brave/browser-laptop/commit/216f14120417ba54082d2e8f011d14904cd35ecb\n. I think there shouldn't be any problems with that on Android, but need some investigation also.\n. https://github.com/brave/browser-android/issues/665\n. Ya just verified it and if we skip first party, it works great. We have two options:\n1. Add it to the tp lib.\n2. Do checks for all platforms.\nWhat do we prefer?\n. Fixed it and updated.\nThank you @SpikeShape for the check.\n. it is a good point, we do it before on Android. ",
    "jiangyang": "Run into this too. The console error points to this.activeFrame.goBack() where this.activeFrame is undefined, same for the forward button. One way to repro is to open 2 tabs, clicks to close one of the tabs and the remaining tab's back/forward would break.\nThe reason seems to be that clicking the tab close button also triggers the tab to be set active so eventually the closed tab is set to active. Attempted a fix here https://github.com/brave/browser-laptop/pull/222\n. late to reply...thanks for looking into this. I didn't go for the tests as I wasn't sure how to assert on the active frame but oh well. I've removed the nativeEvent stop as requested. Thanks again.\n. lol, no worries.\n. ",
    "elsehow": "sounds like that gesture is setting the web frame zoom level in electron, where it should be setting the zoom level on the page only\n. installing with --unsafe-perms fixes this issue for me. @jmcastellote do you have bulid-essential installed?\n. this is the issue, and i can reproduce the bug with the same steps.\ni believe i experienced this in gmail because i loaded mail.google.com, then navigated to a thread.\n. I believe this is a limitation of electron. See atom/electron#2683\n. is it possible to set a relative height/width of window in electron? (e.g. 100%)?\nif not, 800x600 would be a better default than the current, tiny default\n. would that be ~/Downloads? nothing appears in this dir for me\n. I think this could be a permissions problem. in my experience, creating a write stream requires special perms.\n. i say add whatever is easiest. presumably those components are built in a modular way, and can be easily re-styled\nto be clear, my issue is not about the lack of a download manager, but about whether files are really being written to disk...\n. ",
    "DeJaVoo": "I'm not using a VM and it happens to me on Windows 7\n. Additional information, when loading brave.exe with CMD the following error is displayed:\n\"[8496:0128/130531:ERROR:gles2_cmd_decoder.cc(7542)] [.Compositor-000000000600C980]RENDER WARNING: Drawing with no current shader program.\n[8496:0128/130531:ERROR:gles2_cmd_decoder.cc(6830)] [.Compositor-000000000600C980]GL ERROR :GL_INVALID_OPERATION : glUniform4fv: no program in use\n[8496:0128/130531:ERROR:gles2_cmd_decoder.cc(6830)] [.Compositor-000000000600C980]GL ERROR :GL_INVALID_OPERATION : glUniform2fv: no program in use\n[8496:0128/130531:ERROR:gles2_cmd_decoder.cc(6830)] [.Compositor-000000000600C980]GL ERROR :GL_INVALID_OPERATION : glUniformMatrix4fv: no program in u\nse\"\n. ",
    "dotnetCarpenter": "Me too. How do I turn off 3d acceleration?\nWindows: 7 Professional Version 6.1.7601 Service Pack 1 Build 7601\nNode: 5.5.0\nVideo cards: Intel HD Graphics Family & AMD Radeon HD 8670M\nLast brave commit: 8486c0e62e5bd199b2b17011488f4fdbc137d7ab\n. I still get a black window with commit 8c34fe1b0f53f042ee0b11b942bae1fa0e5ba831\n```\n\nbrave@0.7.9 start C:\\Users\\dotnet\\Projects\\playground\\browser-laptop\nnode ./tools/start.js --debug=5858 -enable-logging --v=0 --enable-dcheck\n\nelectron \"C:\\Users\\dotnet\\Projects\\playground\\browser-laptop\" --debug=5858\n```\n\n. ```\ngit log -1\ncommit 8c34fe1b0f53f042ee0b11b942bae1fa0e5ba831\nMerge: 80dbf39 75e8adf\nAuthor: Brian R. Bondy bbondy@gmail.com\nDate:   Wed Jan 27 22:25:49 2016 -0500\nMerge pull request #367 from brave/0.7.10-release-notes\n\n0.7.10 release notes\n\n```\n. ah I see. I'm on a prepaid mobile connection so I think I'll wait a bit, unless my curiosity takes over :baby: \n. @bbondy I've just check it out. it works :+1: \n. ",
    "wblondel": "It's really weird, Youtube works perfectly on my side. It uses the HTML5 player.\n.Windows 10 64bit\n. On which OS are you running Brave @bkardell and @garvankeeley ?\n. I have the same issue. It does the same with Sheets.\n. Hi :)!\nDid you install the Microsoft Visual C++ Runtime Library ?\n. Brave needs Visual C++ Redistributable Packages for Visual Studio 2013 64bit to be installed : https://www.microsoft.com/en-us/download/details.aspx?id=40784\nMake sure it is installed.\n. It works perfectly on my system (Windows 10 64 bit), I don't have any error.\nI'm using a console emulator though (Cmder).\n. Those are not errors, they are just warnings. Build should be successful even with those warnings :)\n. Tried on IE and Edge, same \"issue\". I guess the issue is the website itself.\n. Dupe of #218 \nIt's not released yet :) It will be in version 0.7.10\n. I can't see any differences between the three screenshots :open_mouth: \n. Hi @erossonero,\nDo you have an Nvidia GPU?\n. Some people had the same bug on Chrome/Chromium, they fixed it by updating their GPU drivers or by disabling Stereoscopic 3D in the Nvidia Control Panel.\n. Thanks ! I requested to join the French language translation.\n. ",
    "bkardell": "It's also not working for me console reports an error (a few actually, but this one is relied on by the player) \nUncaught TypeError: Cannot read property 'isMinimized' of nullObject.defineProperty.get @ /Users/bkardell/projects/browser-laptop/node_modules/electron-prebuilt/dist/Electron.app/Contents/R\u2026:81\nObject.defineProperty.get @ /Users/bkardell/projects/browser-laptop/node_modules/electron-prebuilt/dist/Electron.app/Contents/R\u2026:87\n(anonymous function) @ watch?v=EPHmm8JiGbg&list=PLCGAAdUizzH0-aox_bwLBztVCUhRhR7yd&index=26:1\n(anonymous function) @ watch?v=EPHmm8JiGbg&list=PLCGAAdUizzH0-aox_bwLBztVCUhRhR7yd&index=26:1\n. OSX 10.9.2 (can't upgrade for reasons)\n. I'm also getting the error below but it is on OSX 10.9.2... I'd delete and move this elsewhere, but I made the comment before I noticed it's about ubuntu/linux and it doesn't look like  I can delete a comment.\n../././filter.h:12:10: fatal error: 'BloomFilter.h' file not found\ninclude \"BloomFilter.h\"\n     ^\n\n1 error generated.\nmake: *** [Release/obj.target/abp-filter-parser-cpp/addon.o] Error 1\ngyp ERR! build error \ngyp ERR! stack Error: make failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\ngyp ERR! stack     at emitTwo (events.js:100:13)\ngyp ERR! stack     at ChildProcess.emit (events.js:185:7)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)\ngyp ERR! System Darwin 13.1.0\ngyp ERR! command \"/usr/local/bin/node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /Users/bkardell/projects/browser-laptop/node_modules/abp-filter-parser-cpp\ngyp ERR! node -v v5.5.0\ngyp ERR! node-gyp -v v3.0.3\ngyp ERR! not ok \nnpm ERR! Darwin 13.1.0\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\" \"--save\" \"abp-filter-parser-cpp\"\nnpm ERR! node v5.5.0\nnpm ERR! npm  v3.3.12\nnpm ERR! code ELIFECYCLE\nnpm ERR! abp-filter-parser-cpp@1.0.22 install: node-gyp rebuild\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the abp-filter-parser-cpp@1.0.22 install script 'node-gyp rebuild'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the abp-filter-parser-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls abp-filter-parser-cpp\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/bkardell/projects/browser-laptop/npm-debug.log\n. @diracdeltas I was still getting that with node 5.5 yesterday, but I had a host of other problems.  I wound up basically removing all of my node modules & libs (things installed with -g and so on), making sure I chowned it all (I think something at some point must've been run with sudo) and various other hiccups, but ultimately I did get it working last night and ... <3 <3.  I did open another issue about configuable ports - I have too many other things that all want 8080\n. a configuration file is possibly easier/better because you need to match it on the server/browser, right?\n. actually, don't accept this even if you were going to -- I hate it, I'll fix that first.\n. Sorry, I messed this pull up via rebase, just closing it - will resubmit.\n. /me facepalms\n. No, it's not a hassle, I was actually trying to do this and instead of shrinking, the number of commits just kept growing :-p  so... I'll figure that out later I guess.\n. No, thanks for pushing me to spend some time with git terminal :)\n. Er, auto complete- s/no/np\n. hmm I'm getting npm test errors regardless of this change... something is weird.\n. Hmm ok... I looked all over, was unable to find anything related to this that seemed it could plausibly be causing the build failure I was getting here last night, so I just pulled and basically did a commit with no changes to cause it to retrigger and now it passes.  Weird.  I guess possible explanation is that something was amiss with the build itself, or there is a bad test, or the async nature makes the test conditions racey?  I'm gonna leave this here and head to work for the day until someone comments further.  If necessary I can try to squash the commits.\n. Thank you!  ...annnd the build failed.\n. Yeah sure, I agree with this actually - generally I try to adopt the conventions in the file - the issue was that it didn't seem consistent already (requires for example used double above) so I just made a call.  I'll adjust.\n. Yeah, I was originally getting a little fancier with it, looking for a port instead of just using the env in which case I didn't want to repeat it just never backed it out all the way here and I was tired... will adjust.\n. ",
    "butlermatt": "I'm using 0.7.10 and still having this issue myself. My video in question is:\nhttps://www.youtube.com/watch?v=uwV-MHaqR-Y\nMac OS 10.11.3\n. From what I can recall, not all videos are html5. Particularly those with ads at the beginning of the Video still use a flash player. \n. Yes, totally seeing the same issue still. Same notice as my first message posting. Sorry for the delay in responding I didn't get the notice properly.\n. This now seems to be working again. \n. ",
    "onmyouji": "I'm having the same problem, but it happens randomly. Sometimes the video works just fine.\nWindows 7 Home Premium 64-bit\n. ",
    "bagmangood": "Something I just tried (in related issue #386) is re-installing and that let me play videos that hadn't been playing before\n. One problem with not supporting flash - a lot of the web still uses flash pretty extensively (portions of YouTube, most streaming sites). \nFlash is awful, but unfortunately still necessary at the moment\n. First one I found: https://www.youtube.com/watch?v=qkTzDh8IKNU\n. I got check marks on everything on the html5 page. Deleted Brave and re-installed (with the latest version from Brave.com) and now the video plays. Guess I should have tried that first. \n. Created a page on the wiki rather than spam a thread https://github.com/brave/browser-laptop/wiki/Non-Supported-Video-Sites\n. ",
    "dconnolly": ":+1: \n. :+1: \n. ",
    "gripedthumbtacks": "Yes! :)\n. @diracdeltas tested in a debian stretch docker, works fine. but fyi the \"staging\" versions are behind the standard release versions. 0.19.20 is in staging which is a bit older\n$ apt-cache policy brave \nbrave:\n  Installed: 0.19.88-1\n  Candidate: 0.19.88-1\n  Version table:\n *** 0.19.88-1 500\n        500 https://s3-us-west-2.amazonaws.com/brave-apt stretch/main amd64 Packages\n        100 /var/lib/dpkg/status\n     0.19.20-1 500\n        500 https://s3-us-west-2.amazonaws.com/brave-apt-staging stretch/main amd64 Packages. @bsclifton not seeing anything there now for staging. The brave-beta package worked fine after enabling linux namespaces in my test environment\n# echo 1 > /proc/sys/kernel/unprivileged_userns_clone. ",
    "jonathancross": "Thanks for getting this started @diracdeltas, this is important for security and verifiability (Brave is not just a browser, but also a Bitcoin wallet).\nAny progress on  this effort?\nI looked for GPG keys of the top 10 Brave contributors and only found keys for you and @luixxiul (5879E688C4ECE35D), unfortunately.  At the very least, it would be great to have @bbondy sign the releases.\nPS: Would also be great to have SHA256 checksum of each binary.\n. Thanks @bbondy, would be fantastic if you and / or the next release engineer started signing releases so we know you actually created them.  Anything blocking you from doing this?\nYou can then upload your public key to GitHub so users see a green \"Verified\" next to the release.  Of course I get that this is not essential and should not be trusted alone, but it gives users one more way to quickly verify integrity of releases.\nIdeally the dev team should also sign each other's keys.\n\nI think @posix4e is going to be working on this by the way.\n\nI did find 0x55B6A41A4273E82B for @posix4e.  Is Alex going to become the release engineer in the future? . @bsclifton is now creating releases and signing some (with key 0x37FF5F19022427F2), but not the last few unfortunatly. More than half of the commits recently are signed, so we're making progress  :-). > https://www.torproject.org/docs/signing-keys.html.en that lists the keys used to sign the various releases would suffice...\nThis is a good start, but it is only useful because the devs sign their commits and every binary release is also signed.  Doesn't help much if devs are not signing releases.. @diracdeltas Ah, yes, \"signed\" can mean different things.  I was referring to standalone GPG signature files specifically.\nOn torproject.org, users have a convenient link to a gpg signature for each binary.  Doesn't matter much where the signatures themselves are stored (github or brave.com).. FYI: I'm seeing many signed commits with key 4AEE18F83AFDEB23, unfortunatly that key is owned and controlled by GitHub, so it doesn't really improve the situation.. ",
    "posix4e": "It's probably time to roll out new keys for the next release anyway. Let's make sure that it all gets published next time.. Oh crap I will make sure this gets done. Thanks @LilChange . @diracdeltas You should take it ( I thought you already did). Closing this as a dup. Can we close this? @posix4e. @bridiver So long ago i assumed it was fixed long ago. Perhaps we should build a new more specific issue and close this one?. Why are these connected via && instead of multiple - lines?. I actually think the new normal is to name things tools/downloadSyncClient not tools/downloadSyncClient.sh unless you really are a .sh script (not bash). ",
    "LilChange": "Any progress? It seems you have had a new release. Exciting progress on DApps and all \ud83d\ude38  but how hard is it to post the fingerprints of your signing keys somewhere?. ",
    "evq": "@jonathancross those signed with GitHub's key should be limited to merge commits created by using the GitHub web UI to merge PRs. I think the only way to personally sign the merge commits is by performing the merge manually and pushing the result to master.. @bbondy yes I can take this. Just wanted to give an update to everyone; I have U2F working locally on both linux and mac.\nCross platform testing uncovered a few issues; one remains which unfortunately seems to prevent registration on windows. Once I have resolved this, U2F will go up for PR :). @chmanie No, we don't have a flag - it should be automatically enabled. I did some testing and I am investigating the possibility of a platform specific issue. What OS are you using?\nThanks for your help testing btw!. @cannedshrimp what OS are you trying with?. It looks like there is a Mac specific issue, I was able to confirm it as working on Windows and Linux but Mac also did not work for me. Thanks for your help testing, I will investigate more.. @lamaral Interesting, that test site also doesn't work for me. However https://demo.yubico.com/u2f does. Hey @bijeebuss. U2F support was moved back to our current beta channel release, 0.22 - I believe it is no longer present in 0.21. Please let me know if you have an issue if you try 0.22.\nP.S. As an update to others, the mac specific issue mentioned above was resolved in https://github.com/brave/browser-laptop/pull/13345, so as of beta version 0.22.5 U2F has been tested / confirmed as working on Windows, MacOS and Linux.\nThanks all!. oops! same issue in js/about/extensions.js as well. @luixxiul you're referring to possible future failures due to minor version bumps? does switching to tildes instead so we can use patch version bumps sound good?. weird, I will add to .gitignore.\nthat is expected and the same behavior as before (content base was previously set via --content-base=./app/extensions/brave\" in the webpack-dev-server params). upgraded. gnome-keyring is needed at runtime by muon, not sure if removing this will cause issues. \nsee: https://github.com/brave/browser-laptop/issues/10448. good call :+1:. @mrose17 I think comment 1 is still unaddressed? I'd also strongly prefer we address 2 before moving on. The follow up issue seems to be to address the general case, but no reason for us to not adhere to the correct practices now.. this is enforced by ledger and grant servers. they both enforce the max of one grant allocated from a given promotionId per wallet.. should these be ledgerUtil.milliseconds.hour?. --rpcvhosts does the right thing for HTTP, but I don't think it does the right thing for WS. looking into it more...\nhttps://github.com/ethereum/go-ethereum/blob/5d7e18539e32cb4f1aafab8e977e28a7cd34da9c/rpc/http.go#L314. yeah that flag only applies to HTTP-RPC. the Geth WS-RPC doesn't actually have a way to enforce checks on the Host header.\nbut it looks like there are no additional whitelisted origins (for WS-RPC) added beyond those passed via --wsorigins, and in our case we're only passing chrome-extension://...\nso I think we are okay as we continue to pass --wsorigins for WS-RPC and add --rpcvhosts for HTTP-RPC. looks like this block got added during rebase because of a fix within in the original ethwallet branch - https://github.com/brave/browser-laptop/commit/00cdfdd884cf4ba23e141b0693cb7ae940b80ce1#diff-2be38b3d97f35cd818780bac4be979c4R629\nI think we should delete this block. ",
    "foederati": "Hi all, had been meaning to give Brave a try for a long while now. Was disappointed to not see any PGP signatures on the release files... found this issue opened in Jan 2016(?) but still no process together? To clarify, if I want to today download Brave 0.20.29.dmg, there is no PGP signature or even a SHA256 hash I can verify against the file I download?\n. ",
    "RicardoCapricciosa": "Same for me. I'd love to try Brave, but given that it's security and privacy aware and also a wallet I really want to be able to check the download against checksums and/or GnuPG keys.. ",
    "juristr": "yay :smile: :stuck_out_tongue_winking_eye:\n. ",
    "fabricedesre": "npm install failed for me locally:\n[fabrice:~/dev/browser-laptop] master \u00b1 npm install\nnpm WARN engine urlutil.js@0.1.1: wanted: {\"node\":\">= 4.0.0\"} (current: {\"node\":\"0.12.7\",\"npm\":\"2.11.3\"})\nnpm WARN prefer global babel@6.3.26 should be installed with -g\n\ntracking-protection@1.0.8 preinstall /home/fabrice/dev/browser-laptop/node_modules/tracking-protection\nnpm install hashset-cpp && npm install cppunitlite\n\n\n\nhashset-cpp@1.0.13 install /home/fabrice/dev/browser-laptop/node_modules/tracking-protection/node_modules/hashset-cpp\nnode-gyp rebuild\n\nmake: Entering directory `/home/fabrice/dev/browser-laptop/node_modules/tracking-protection/node_modules/hashset-cpp/build'\n  CXX(target) Release/obj.target/hashset-cpp/addon.o\n  CXX(target) Release/obj.target/hashset-cpp/HashSetWrap.o\n../HashSetWrap.cpp: In static member function \u2018static void HashSetWrap::HashSetWrap::Init(v8::Localv8::Object)\u2019:\n../HashSetWrap.cpp:32:31: error: \u2018class v8::Object\u2019 has no member named \u2018GetIsolate\u2019\n   Isolate* isolate = exports->GetIsolate();\n. ",
    "markshust": "@bbondy I am having the same issue. Installing node-gyp globally didn't fix it for me.\nLast few lines of npm install output:\n```\n  \u2502 \u251c\u2500\u2500 oauth-sign@0.8.0 \n  \u2502 \u251c\u2500\u2500 qs@5.2.0 \n  \u2502 \u251c\u2500\u2500 stringstream@0.0.5 \n  \u2502 \u251c\u2500\u2500 tough-cookie@2.2.1 \n  \u2502 \u2514\u2500\u2500 tunnel-agent@0.4.2 \n  \u251c\u2500\u252c rimraf@2.5.0 \n  \u2502 \u2514\u2500\u252c glob@6.0.4 \n  \u2502   \u251c\u2500\u2500 minimatch@3.0.0 \n  \u2502   \u2514\u2500\u2500 path-is-absolute@1.0.0 \n  \u251c\u2500\u2500 semver@5.1.0 \n  \u251c\u2500\u252c tar@2.2.1 \n  \u2502 \u2514\u2500\u2500 block-stream@0.0.8 \n  \u2514\u2500\u252c which@1.2.1 \n    \u2514\u2500\u252c is-absolute@0.1.7 \n      \u2514\u2500\u2500 is-relative@0.1.3 \nnpm ERR! Darwin 15.2.0\nnpm ERR! argv \"node\" \"/Users/markshust/Sites/browser-laptop/node_modules/.bin/npm\" \"install\" \"bloom-filter-cpp\"\nnpm ERR! node v0.12.7\nnpm ERR! npm  v3.4.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! bloom-filter-cpp@1.0.19 install: node-gyp rebuild\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the bloom-filter-cpp@1.0.19 install script 'node-gyp rebuild'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the bloom-filter-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls bloom-filter-cpp\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/markshust/Sites/browser-laptop/node_modules/abp-filter-parser-cpp/npm-debug.log\nnpm ERR! Darwin 15.2.0\nnpm ERR! argv \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v0.12.7\nnpm ERR! npm  v2.12.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! tracking-protection@1.0.8 preinstall: npm install hashset-cpp && npm install cppunitlite\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the tracking-protection@1.0.8 preinstall script 'npm install hashset-cpp && npm install cppunitlite'.\nnpm ERR! This is most likely a problem with the tracking-protection package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     npm install hashset-cpp && npm install cppunitlite\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls tracking-protection\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/markshust/Sites/browser-laptop/npm-debug.log\n```\nAnd here's last few lines of npm-debug.log\n12170 silly gunzTarPerm extractEntry vendor/depot_tools/weekly\n12171 silly gunzTarPerm extractEntry vendor/depot_tools/win_toolchain/README.md\n12172 silly gunzTarPerm extractEntry vendor/depot_tools/win_toolchain/7z/LICENSE\n12173 silly gunzTarPerm extractEntry vendor/depot_tools/win_toolchain/OWNERS\n12174 silly gunzTarPerm extractEntry vendor/depot_tools/win_toolchain/get_toolchain_if_necessary.py\n12175 silly gunzTarPerm extractEntry vendor/depot_tools/win_toolchain/package_from_installed.py\n12176 silly gunzTarPerm extractEntry vendor/depot_tools/wtf\n12177 silly gunzTarPerm extractEntry vendor/depot_tools/git-nav-upstream\n12178 verbose write writing to /Users/markshust/Sites/browser-laptop/node_modules/abp-filter-parser-cpp/package.json\n12179 info preinstall abp-filter-parser-cpp@1.0.22\n12180 verbose unsafe-perm in lifecycle true\n12181 verbose unlock done using /Users/markshust/.npm/_locks/electron-prebuilt-770dbfa353fee535.lock for /Users/markshust/Sites/browser-laptop/node_modules/electron-prebuilt\n12182 info abp-filter-parser-cpp@1.0.22 Failed to exec preinstall script\n12183 verbose unlock done using /Users/markshust/.npm/_locks/abp-filter-parser-cpp-874d1ff503bfb65b.lock for /Users/markshust/Sites/browser-laptop/node_modules/abp-filter-parser-cpp\n12184 verbose stack Error: tracking-protection@1.0.8 preinstall: `npm install hashset-cpp && npm install cppunitlite`\n12184 verbose stack Exit status 1\n12184 verbose stack     at EventEmitter.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/lifecycle.js:213:16)\n12184 verbose stack     at EventEmitter.emit (events.js:110:17)\n12184 verbose stack     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/spawn.js:24:14)\n12184 verbose stack     at ChildProcess.emit (events.js:110:17)\n12184 verbose stack     at maybeClose (child_process.js:1015:16)\n12184 verbose stack     at Process.ChildProcess._handle.onexit (child_process.js:1087:5)\n12185 verbose pkgid tracking-protection@1.0.8\n12186 verbose cwd /Users/markshust/Sites/browser-laptop\n12187 error Darwin 15.2.0\n12188 error argv \"node\" \"/usr/local/bin/npm\" \"install\"\n12189 error node v0.12.7\n12190 error npm  v2.12.1\n12191 error code ELIFECYCLE\n12192 error tracking-protection@1.0.8 preinstall: `npm install hashset-cpp && npm install cppunitlite`\n12192 error Exit status 1\n12193 error Failed at the tracking-protection@1.0.8 preinstall script 'npm install hashset-cpp && npm install cppunitlite'.\n12193 error This is most likely a problem with the tracking-protection package,\n12193 error not with npm itself.\n12193 error Tell the author that this fails on your system:\n12193 error     npm install hashset-cpp && npm install cppunitlite\n12193 error You can get their info via:\n12193 error     npm owner ls tracking-protection\n12193 error There is likely additional logging output above.\n12194 verbose exit [ 1, true ]\n12195 verbose unbuild node_modules/tracking-protection\n12196 info preuninstall tracking-protection@1.0.8\n12197 info uninstall tracking-protection@1.0.8\n12198 verbose unbuild rmStuff tracking-protection@1.0.8 from /Users/markshust/Sites/browser-laptop/node_modules\n12199 info postuninstall tracking-protection@1.0.8\n12200 silly gentlyRm /Users/markshust/Sites/browser-laptop/node_modules/tracking-protection is being purged from base /Users/markshust/Sites/browser-laptop\n12201 verbose gentlyRm don't care about contents; nuking /Users/markshust/Sites/browser-laptop/node_modules/tracking-protection\n12202 silly vacuum-fs purging /Users/markshust/Sites/browser-laptop/node_modules/tracking-protection\n12203 silly vacuum-fs quitting because other entries in /Users/markshust/Sites/browser-laptop/node_modules\n12204 verbose unbuild node_modules/abp-filter-parser-cpp\n12205 info preuninstall abp-filter-parser-cpp@1.0.22\n12206 info uninstall abp-filter-parser-cpp@1.0.22\n12207 verbose unbuild rmStuff abp-filter-parser-cpp@1.0.22 from /Users/markshust/Sites/browser-laptop/node_modules\n12208 info postuninstall abp-filter-parser-cpp@1.0.22\n12209 silly gentlyRm /Users/markshust/Sites/browser-laptop/node_modules/abp-filter-parser-cpp is being purged from base /Users/markshust/Sites/browser-laptop\n12210 verbose gentlyRm don't care about contents; nuking /Users/markshust/Sites/browser-laptop/node_modules/abp-filter-parser-cpp\n12211 silly vacuum-fs purging /Users/markshust/Sites/browser-laptop/node_modules/abp-filter-parser-cpp\n12212 silly vacuum-fs quitting because other entries in /Users/markshust/Sites/browser-laptop/node_modules\n. Looks like node 0.12 isn't supported? This should probably be added to a prerequisites section in the README. I think 0.12 is a dep for other things I develop on locally. \n. ",
    "jimmysong": "I'm getting a very similar error in Linux Mint 17 64-bit\nnpm ERR! hashset-cpp@1.0.13 install: `node-gyp rebuild`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the hashset-cpp@1.0.13 install script 'node-gyp rebuild'.\nnpm ERR! This is most likely a problem with the hashset-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls hashset-cpp\nnpm ERR! There is likely additional logging output above.\n. I'm getting a very similar error in Linux Mint 17 64-bit\nnpm ERR! hashset-cpp@1.0.13 install: `node-gyp rebuild`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the hashset-cpp@1.0.13 install script 'node-gyp rebuild'.\nnpm ERR! This is most likely a problem with the hashset-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls hashset-cpp\nnpm ERR! There is likely additional logging output above.\n. ",
    "ewnd9": "I've successfully installed it on ubuntu 14.04. Did you install dependencies from https://github.com/brave/electron/blob/master/docs/development/build-instructions-linux.md ? \n. I've successfully installed it on ubuntu 14.04. Did you install dependencies from https://github.com/brave/electron/blob/master/docs/development/build-instructions-linux.md ? \n. ",
    "andi1984": ":+1: for specifying the needed node version, maybe in the engines field inside package.json (https://docs.npmjs.com/files/package.json#engines)\n. :+1: for specifying the needed node version, maybe in the engines field inside package.json (https://docs.npmjs.com/files/package.json#engines)\n. ",
    "yurenju": "here we go, I just sent a pr for that.\nBTW, Hi @fabricedesre, it's been a long time to see you :D \n. ",
    "loganallenc": "Hi, the \"engines\" field should be added to all of the repositories. It isn't currently in brave/browser-ios.\n. ",
    "therealklanni": "Great! :metal: \n. Great! :metal: \n. Was planning on looking into this later, thanks @aekeus :+1: \n. Was planning on looking into this later, thanks @aekeus :+1: \n. @nselby have you tried rm -rf node_modules and npm install again? Changing node versions can often do crazy things to npm/node_modules.\n. ",
    "viswanathamsantosh": "I put my thoughts in this doc< https://docs.google.com/document/d/1OJdR2LN9BPwu_6955hVnUmglS383PhEB_EaiMyu0X2o/edit?usp=sharing > .Shared it with elissa as well. feedback is appreciated to make this better.\n. ",
    "brakmic": "Same here, on Win 10 x64, with node 5.4.1\n\n. Same here, on Win 10 x64, with node 5.4.1\n\n. ",
    "tomru": "Experienced the same issue on Linux with node 4.x.\nAfter switching to node 5.4.1, removing node_modules folder and another npm install the issue was solved for me.\n. Experienced the same issue on Linux with node 4.x.\nAfter switching to node 5.4.1, removing node_modules folder and another npm install the issue was solved for me.\n. ",
    "bobpoekert": "I ran npm run postinstall, and it printed a bunch of stuff about sqlite3 when it was running, but after running npm run build-darwin and launching the .app I still got the error.\n\n. I ran npm run postinstall, and it printed a bunch of stuff about sqlite3 when it was running, but after running npm run build-darwin and launching the .app I still got the error.\n\n. ",
    "qbig": "@bbondy bbondy #221 seems to have the same symptom. Confirm running 5.5. tried 'rm -rf node_modules' before npm install \n. I was using node 5.0. would try with 5.5 and update here.\n. Node 5.5, npm 3.5.3, OSX Yosemite 10.10.5\n167053 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/appdmg/package.json'\n167054 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/ampersand-version/package.json'\n167055 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/archiver/package.json'\n167056 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/ampersand-sync/package.json'\n167057 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-code-frame/package.json'\n167058 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/argparse/package.json'\n167059 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-generator/package.json'\n167060 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-call-delegate/package.json'\n167061 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-define-map/package.json'\n167062 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-function-name/package.json'\n167063 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-builder-react-jsx/package.json'\n167064 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-regex/package.json'\n167065 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-replace-supers/package.json'\n167066 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helpers/package.json'\n167067 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-hoist-variables/package.json'\n167068 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-get-function-arity/package.json'\n167069 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-helper-optimise-call-expression/package.json'\n167070 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-messages/package.json'\n167071 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-syntax-jsx/package.json'\n167072 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-syntax-flow/package.json'\n167073 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-syntax-async-functions/package.json'\n167074 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-check-es2015-constants/package.json'\n167075 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-classes/package.json'\n167076 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-computed-properties/package.json'\n167077 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-block-scoped-functions/package.json'\n167078 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-arrow-functions/package.json'\n167079 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-destructuring/package.json'\n167080 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-function-name/package.json'\n167081 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-literals/package.json'\n167082 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-block-scoping/package.json'\n167083 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-for-of/package.json'\n167084 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-parameters/package.json'\n167085 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-object-super/package.json'\n167086 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-shorthand-properties/package.json'\n167087 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-spread/package.json'\n167088 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-modules-commonjs/package.json'\n167089 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-sticky-regex/package.json'\n167090 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-template-literals/package.json'\n167091 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-unicode-regex/package.json'\n167092 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-flow-strip-types/package.json'\n167093 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-react-display-name/package.json'\n167094 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-react-jsx/package.json'\n167095 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-react-jsx-source/package.json'\n167096 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-template/package.json'\n167097 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-es2015-typeof-symbol/package.json'\n167098 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-regenerator/package.json'\n167099 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-types/package.json'\n167100 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-plugin-transform-strict-mode/package.json'\n167101 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babel-traverse/package.json'\n167102 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/buffer/package.json'\n167103 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/cli-table/package.json'\n167104 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/babylon/package.json'\n167105 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/cardinal/package.json'\n167106 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/commoner/package.json'\n167107 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/cli-usage/package.json'\n167108 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/cmd-shim/package.json'\n167109 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/css/package.json'\n167110 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/compress-commons/package.json'\n167111 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/dashdash/package.json'\n167112 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/decompress-zip/package.json'\n167113 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/deep-eql/package.json'\n167114 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/cross-spawn-async/package.json'\n167115 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/crc32-stream/package.json'\n167116 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/defs/package.json'\n167117 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/deglob/package.json'\n167118 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/detect-indent/package.json'\n167119 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/electron-download/package.json'\n167120 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/duplexer2/package.json'\n167121 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/electron-chromedriver/package.json'\n167122 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/doctrine/package.json'\n167123 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/enhanced-resolve/package.json'\n167124 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/esformatter/package.json'\n167125 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/eslint/package.json'\n167126 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/esrecurse/package.json'\n167127 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/esformatter-literal-notation/package.json'\n167128 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/esformatter-jsx/package.json'\n167129 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/esformatter-semicolon-first/package.json'\n167130 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/express/package.json'\n167131 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/fresh-falafel/package.json'\n167132 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/extract-zip/package.json'\n167133 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/findup-sync/package.json'\n167134 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/fstream/package.json'\n167135 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/fsevents/package.json'\n167136 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/get-package-info/package.json'\n167137 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/fs-extra/package.json'\n167138 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/fstream-ignore/package.json'\n167139 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/glob/package.json'\n167140 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/globby/package.json'\n167141 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/glob-stream/package.json'\n167142 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/globule/package.json'\n167143 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/har-validator/package.json'\n167144 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/gulp-util/package.json'\n167145 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/handlebars/package.json'\n167146 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/init-package-json/package.json'\n167147 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/jade/package.json'\n167148 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/is-number/package.json'\n167149 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/inquirer/package.json'\n167150 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/http-signature/package.json'\n167151 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/lazystream/package.json'\n167152 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/js-beautify/package.json'\n167153 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/jstransform/package.json'\n167154 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/js-yaml/package.json'\n167155 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/liftoff/package.json'\n167156 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/match-stream/package.json'\n167157 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/micromatch/package.json'\n167158 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/meow/package.json'\n167159 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/mksnapshot/package.json'\n167160 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/mv/package.json'\n167161 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/node-notifier/package.json'\n167162 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/npm-run/package.json'\n167163 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/nugget/package.json'\n167164 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/npm-registry-client/package.json'\n167165 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/postcss/package.json'\n167166 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/output-file-sync/package.json'\n167167 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/pullstream/package.json'\n167168 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/read-package-json/package.json'\n167169 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/randomatic/package.json'\n167170 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/read-pkg-up/package.json'\n167171 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/rc/package.json'\n167172 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/readline2/package.json'\n167173 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/readdirp/package.json'\n167174 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/recast/package.json'\n167175 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/redeyed/package.json'\n167176 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/regexpu/package.json'\n167177 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/regenerator/package.json'\n167178 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/reduce-function-call/package.json'\n167179 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/request/package.json'\n167180 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/rimraf/package.json'\n167181 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/rocambole/package.json'\n167182 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/serve-index/package.json'\n167183 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/reduce-css-calc/package.json'\n167184 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/rocambole-linebreak/package.json'\n167185 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/send/package.json'\n167186 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/source-map-support/package.json'\n167187 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/serve-static/package.json'\n167188 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/slice-stream/package.json'\n167189 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/spawn-sync/package.json'\n167190 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/standard-format/package.json'\n167191 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/sockjs-client/package.json'\n167192 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/standard-engine/package.json'\n167193 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/tar-stream/package.json'\n167194 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/svgo/package.json'\n167195 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/timers-browserify/package.json'\n167196 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/touch/package.json'\n167197 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/temp/package.json'\n167198 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/unzip/package.json'\n167199 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/through2/package.json'\n167200 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/uglify-js/package.json'\n167201 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/stream-browserify/package.json'\n167202 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/url/package.json'\n167203 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/vinyl-fs/package.json'\n167204 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/watchpack/package.json'\n167205 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/url-parse/package.json'\n167206 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/webpack-core/package.json'\n167207 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/xhr/package.json'\n167208 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/zip-stream/package.json'\n167209 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/webpack-dev-middleware/package.json'\n167210 warn enoent ENOENT: no such file or directory, open '/Users/qiaoliang89/Documents/browser-laptop/node_modules/write/package.json'\n167211 verbose stack Error: abp-filter-parser-cpp@1.0.22 install: `node-gyp rebuild`\n167211 verbose stack Exit status 1\n167211 verbose stack     at EventEmitter.<anonymous> (/Users/qiaoliang89/.nvm/versions/node/v5.5.0/lib/node_modules/npm/lib/utils/lifecycle.js:232:16)\n167211 verbose stack     at emitTwo (events.js:100:13)\n167211 verbose stack     at EventEmitter.emit (events.js:185:7)\n167211 verbose stack     at ChildProcess.<anonymous> (/Users/qiaoliang89/.nvm/versions/node/v5.5.0/lib/node_modules/npm/lib/utils/spawn.js:24:14)\n167211 verbose stack     at emitTwo (events.js:100:13)\n167211 verbose stack     at ChildProcess.emit (events.js:185:7)\n167211 verbose stack     at maybeClose (internal/child_process.js:821:16)\n167211 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)\n167212 verbose pkgid abp-filter-parser-cpp@1.0.22\n167213 verbose cwd /Users/qiaoliang89/Documents/browser-laptop\n167214 error Darwin 14.5.0\n167215 error argv \"/Users/qiaoliang89/.nvm/versions/node/v5.5.0/bin/node\" \"/Users/qiaoliang89/.nvm/versions/node/v5.5.0/bin/npm\" \"install\"\n167216 error node v5.5.0\n167217 error npm  v3.5.3\n167218 error code ELIFECYCLE\n167219 error abp-filter-parser-cpp@1.0.22 install: `node-gyp rebuild`\n167219 error Exit status 1\n167220 error Failed at the abp-filter-parser-cpp@1.0.22 install script 'node-gyp rebuild'.\n167220 error Make sure you have the latest version of node.js and npm installed.\n167220 error If you do, this is most likely a problem with the abp-filter-parser-cpp package,\n167220 error not with npm itself.\n167220 error Tell the author that this fails on your system:\n167220 error     node-gyp rebuild\n167220 error You can get information on how to open an issue for this project with:\n167220 error     npm bugs abp-filter-parser-cpp\n167220 error Or if that isn't available, you can get their info via:\n167220 error     npm owner ls abp-filter-parser-cpp\n167220 error There is likely additional logging output above.\n167221 verbose exit [ 1, true ]\n. ",
    "epu": "Hit this on El Capitan with old node 4. Upgrading to confirm. If this is an issue, can we mention node version constraint / requirement in readme, and/or assert during build?\n. This fixed it for me, but I also had to clear out the npm cache manually, and set my new npm to be first in my PATH. Evoking the new npm via its fq path was not enough.\n. ",
    "leahnnovash": "Thank you. That solved the problem.\n. Thank you. That solved the problem.\n. Yes, I did. I have no idea whether they worked correctly, though.\n. ",
    "groksrc": "I'm getting a different build error on master. Same command: sudo npm install\n```\ngroksrc@ubuntu:~/browser-laptop$ git checkout master\nPrevious HEAD position was 97fabb8... 0.7.7\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\ngroksrc@ubuntu:~/browser-laptop$ sudo npm install\nnpm WARN deprecated css-list@0.1.3: Deprecated.\nnpm WARN install Couldn't install optional dependency: Unsupported\nnpm WARN deprecated lodash@1.0.2: lodash@<2.0.0 is no longer maintained. Upgrade to lodash@^3.0.0\nnpm WARN install Couldn't install optional dependency: Unsupported\nnpm WARN lifecycle abp-filter-parser-cpp@1.0.22~preinstall: cannot run in wd %s %s (wd=%s) abp-filter-parser-cpp@1.0.22 npm install bloom-filter-cpp && npm install hashset-cpp /home/groksrc/browser-laptop/node_modules/.staging/abp-filter-parser-cpp-fcb2148f0d7202dc35370a215a46cf7e\nnpm WARN lifecycle tracking-protection@1.0.8~preinstall: cannot run in wd %s %s (wd=%s) tracking-protection@1.0.8 npm install hashset-cpp && npm install cppunitlite /home/groksrc/browser-laptop/node_modules/.staging/tracking-protection-a18e9ec093409a79dedc6595d5bb61cd\nnpm WARN prefer global marked@0.3.5 should be installed with -g\nnpm WARN prefer global js-beautify@1.5.10 should be installed with -g\n\ncppunitlite@1.0.0 install /home/groksrc/browser-laptop/node_modules/cppunitlite\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/cppunitlite/build'\n  CXX(target) Release/obj.target/CppUnitLite/src/Failure.o\n  CXX(target) Release/obj.target/CppUnitLite/src/SimpleString.o\n  CXX(target) Release/obj.target/CppUnitLite/src/Test.o\n  CXX(target) Release/obj.target/CppUnitLite/src/TestResult.o\n  CXX(target) Release/obj.target/CppUnitLite/src/TestRegistry.o\n  AR(target) Release/obj.target/CppUnitLite.a\n  COPY Release/CppUnitLite.a\n  CXX(target) Release/obj.target/test/test/StackMain.o\n  CXX(target) Release/obj.target/test/test/StackTest.o\n  LINK(target) Release/test\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/cppunitlite/build'\n\nhashset-cpp@1.0.13 install /home/groksrc/browser-laptop/node_modules/hashset-cpp\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/hashset-cpp/build'\n  CXX(target) Release/obj.target/hashset-cpp/addon.o\n  CXX(target) Release/obj.target/hashset-cpp/HashSetWrap.o\n  CXX(target) Release/obj.target/hashset-cpp/HashSet.o\n  SOLINK_MODULE(target) Release/obj.target/hashset-cpp.node\n  COPY Release/hashset-cpp.node\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/hashset-cpp/build'\n\nnslog@3.0.0 install /home/groksrc/browser-laptop/node_modules/nslog\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/nslog/build'\n  CXX(target) Release/obj.target/nslog/src/main.o\n  CXX(target) Release/obj.target/nslog/src/nslog_linux.o\n  SOLINK_MODULE(target) Release/obj.target/nslog.node\n  COPY Release/nslog.node\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/nslog/build'\n\nbloom-filter-cpp@1.0.19 install /home/groksrc/browser-laptop/node_modules/bloom-filter-cpp\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/bloom-filter-cpp/build'\n  CXX(target) Release/obj.target/bloom-filter-cpp/addon.o\n  CXX(target) Release/obj.target/bloom-filter-cpp/BloomFilterWrap.o\n  CXX(target) Release/obj.target/bloom-filter-cpp/BloomFilter.o\n  SOLINK_MODULE(target) Release/obj.target/bloom-filter-cpp.node\n  COPY Release/bloom-filter-cpp.node\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/bloom-filter-cpp/build'\n\nelectron-chromedriver@0.36.0 install /home/groksrc/browser-laptop/node_modules/electron-chromedriver\nnode ./download-chromedriver.js\npre-commit@1.1.2 install /home/groksrc/browser-laptop/node_modules/pre-commit\nnode install.js\nabp-filter-parser-cpp@1.0.22 install /home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp/build'\n  CXX(target) Release/obj.target/abp-filter-parser-cpp/addon.o\nIn file included from ../ABPFilterParser.h:9:0,\n                 from ../ABPFilterParserWrap.h:12,\n                 from ../addon.cpp:7:\n.././filter.h:12:25: fatal error: BloomFilter.h: No such file or directory\ncompilation terminated.\nabp-filter-parser-cpp.target.mk:102: recipe for target 'Release/obj.target/abp-filter-parser-cpp/addon.o' failed\nmake: *** [Release/obj.target/abp-filter-parser-cpp/addon.o] Error 1\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp/build'\ngyp ERR! build error \ngyp ERR! stack Error: make failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\ngyp ERR! stack     at emitTwo (events.js:87:13)\ngyp ERR! stack     at ChildProcess.emit (events.js:172:7)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)\ngyp ERR! System Linux 4.2.0-23-generic\ngyp ERR! command \"/usr/local/bin/node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp\ngyp ERR! node -v v5.4.1\ngyp ERR! node-gyp -v v3.0.3\ngyp ERR! not ok \n...  ...\nnpm ERR! Linux 4.2.0-23-generic\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v5.4.1\nnpm ERR! npm  v3.3.12\nnpm ERR! code ELIFECYCLE\nnpm ERR! abp-filter-parser-cpp@1.0.22 install: node-gyp rebuild\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the abp-filter-parser-cpp@1.0.22 install script 'node-gyp rebuild'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the abp-filter-parser-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls abp-filter-parser-cpp\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/groksrc/browser-laptop/npm-debug.log\n``\n. I'm getting a different build error on master. Same command:sudo npm install`\n```\ngroksrc@ubuntu:~/browser-laptop$ git checkout master\nPrevious HEAD position was 97fabb8... 0.7.7\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\ngroksrc@ubuntu:~/browser-laptop$ sudo npm install\nnpm WARN deprecated css-list@0.1.3: Deprecated.\nnpm WARN install Couldn't install optional dependency: Unsupported\nnpm WARN deprecated lodash@1.0.2: lodash@<2.0.0 is no longer maintained. Upgrade to lodash@^3.0.0\nnpm WARN install Couldn't install optional dependency: Unsupported\nnpm WARN lifecycle abp-filter-parser-cpp@1.0.22~preinstall: cannot run in wd %s %s (wd=%s) abp-filter-parser-cpp@1.0.22 npm install bloom-filter-cpp && npm install hashset-cpp /home/groksrc/browser-laptop/node_modules/.staging/abp-filter-parser-cpp-fcb2148f0d7202dc35370a215a46cf7e\nnpm WARN lifecycle tracking-protection@1.0.8~preinstall: cannot run in wd %s %s (wd=%s) tracking-protection@1.0.8 npm install hashset-cpp && npm install cppunitlite /home/groksrc/browser-laptop/node_modules/.staging/tracking-protection-a18e9ec093409a79dedc6595d5bb61cd\nnpm WARN prefer global marked@0.3.5 should be installed with -g\nnpm WARN prefer global js-beautify@1.5.10 should be installed with -g\n\ncppunitlite@1.0.0 install /home/groksrc/browser-laptop/node_modules/cppunitlite\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/cppunitlite/build'\n  CXX(target) Release/obj.target/CppUnitLite/src/Failure.o\n  CXX(target) Release/obj.target/CppUnitLite/src/SimpleString.o\n  CXX(target) Release/obj.target/CppUnitLite/src/Test.o\n  CXX(target) Release/obj.target/CppUnitLite/src/TestResult.o\n  CXX(target) Release/obj.target/CppUnitLite/src/TestRegistry.o\n  AR(target) Release/obj.target/CppUnitLite.a\n  COPY Release/CppUnitLite.a\n  CXX(target) Release/obj.target/test/test/StackMain.o\n  CXX(target) Release/obj.target/test/test/StackTest.o\n  LINK(target) Release/test\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/cppunitlite/build'\n\nhashset-cpp@1.0.13 install /home/groksrc/browser-laptop/node_modules/hashset-cpp\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/hashset-cpp/build'\n  CXX(target) Release/obj.target/hashset-cpp/addon.o\n  CXX(target) Release/obj.target/hashset-cpp/HashSetWrap.o\n  CXX(target) Release/obj.target/hashset-cpp/HashSet.o\n  SOLINK_MODULE(target) Release/obj.target/hashset-cpp.node\n  COPY Release/hashset-cpp.node\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/hashset-cpp/build'\n\nnslog@3.0.0 install /home/groksrc/browser-laptop/node_modules/nslog\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/nslog/build'\n  CXX(target) Release/obj.target/nslog/src/main.o\n  CXX(target) Release/obj.target/nslog/src/nslog_linux.o\n  SOLINK_MODULE(target) Release/obj.target/nslog.node\n  COPY Release/nslog.node\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/nslog/build'\n\nbloom-filter-cpp@1.0.19 install /home/groksrc/browser-laptop/node_modules/bloom-filter-cpp\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/bloom-filter-cpp/build'\n  CXX(target) Release/obj.target/bloom-filter-cpp/addon.o\n  CXX(target) Release/obj.target/bloom-filter-cpp/BloomFilterWrap.o\n  CXX(target) Release/obj.target/bloom-filter-cpp/BloomFilter.o\n  SOLINK_MODULE(target) Release/obj.target/bloom-filter-cpp.node\n  COPY Release/bloom-filter-cpp.node\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/bloom-filter-cpp/build'\n\nelectron-chromedriver@0.36.0 install /home/groksrc/browser-laptop/node_modules/electron-chromedriver\nnode ./download-chromedriver.js\npre-commit@1.1.2 install /home/groksrc/browser-laptop/node_modules/pre-commit\nnode install.js\nabp-filter-parser-cpp@1.0.22 install /home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp\nnode-gyp rebuild\n\nmake: Entering directory '/home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp/build'\n  CXX(target) Release/obj.target/abp-filter-parser-cpp/addon.o\nIn file included from ../ABPFilterParser.h:9:0,\n                 from ../ABPFilterParserWrap.h:12,\n                 from ../addon.cpp:7:\n.././filter.h:12:25: fatal error: BloomFilter.h: No such file or directory\ncompilation terminated.\nabp-filter-parser-cpp.target.mk:102: recipe for target 'Release/obj.target/abp-filter-parser-cpp/addon.o' failed\nmake: *** [Release/obj.target/abp-filter-parser-cpp/addon.o] Error 1\nmake: Leaving directory '/home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp/build'\ngyp ERR! build error \ngyp ERR! stack Error: make failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\ngyp ERR! stack     at emitTwo (events.js:87:13)\ngyp ERR! stack     at ChildProcess.emit (events.js:172:7)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)\ngyp ERR! System Linux 4.2.0-23-generic\ngyp ERR! command \"/usr/local/bin/node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /home/groksrc/browser-laptop/node_modules/abp-filter-parser-cpp\ngyp ERR! node -v v5.4.1\ngyp ERR! node-gyp -v v3.0.3\ngyp ERR! not ok \n...  ...\nnpm ERR! Linux 4.2.0-23-generic\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v5.4.1\nnpm ERR! npm  v3.3.12\nnpm ERR! code ELIFECYCLE\nnpm ERR! abp-filter-parser-cpp@1.0.22 install: node-gyp rebuild\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the abp-filter-parser-cpp@1.0.22 install script 'node-gyp rebuild'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the abp-filter-parser-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls abp-filter-parser-cpp\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/groksrc/browser-laptop/npm-debug.log\n```\n. I am running node-gyp v3.2.1. Also, I can clone and compile abp-filter-parser-cpp on it's own from source here: https://github.com/bbondy/abp-filter-parser-cpp.git\n. This is essential the same problem: https://github.com/brave/browser-laptop/issues/214\n. ",
    "asiminiceanu": "I am getting other errors mostly because of node command usage on Debian:\nmake: *** [Release/obj.target/hashset-cpp/addon.o] Error 1\nmake: Leaving directory `/home/asiminiceanu/git/browser-laptop/node_modules/tracking-protection/node_modules/hashset-cpp/build'\ngyp ERR! build error \ngyp ERR! stack Error: `make` failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/usr/share/node-gyp/lib/build.js:267:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:98:17)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:797:12)\ngyp ERR! System Linux 3.13.0-37-generic\ngyp ERR! command \"nodejs\" \"/usr/bin/node-gyp\" \"rebuild\"\ngyp ERR! cwd /home/asiminiceanu/git/browser-laptop/node_modules/tracking-protection/node_modules/hashset-cpp\ngyp ERR! node -v v0.10.25\ngyp ERR! node-gyp -v v0.10.10\ngyp ERR! not ok \nnpm WARN This failure might be due to the use of legacy binary \"node\"\nnpm WARN For further explanations, please read\n/usr/share/doc/nodejs/README.Debian\n```\nnodejs command\n\nThe upstream name for the Node.js interpreter command is \"node\".\nIn Debian the interpreter command has been changed to \"nodejs\".\nThis was done to prevent a namespace collision: other commands use\nthe same name in their upstreams, such as ax25-node from the \"node\"\npackage.\n```\n. There are many errors like that. I just listed one. I can list the full output if you want.\n. ",
    "mencattini": "Same problem as asiminiceanu but with Fedora 23.\nnode-gyp isn't availible on fedora repo for me.\nIs there an other way to solve it?\nthanks\n(i can join my npm-debug-log file)\n. ",
    "Aidoboy": "The version of nodejs in Ubuntu's repositories is too old.\nI installed nodejs from here: https://nodejs.org/en/download/package-manager/ and now it seems to work.\nEdit: No, that wasn't the entire problem.\n. @shahbaz17 You need to run npm install --unsafe-perms with sudo\n. @shahbaz17 Totally different errors, not the same result. What do node -v and nodejs -v give you?\n. @bridiver Since you closed it, I can't re-open it  [citation], but it's still broken:\n0 info it worked if it ends with ok\n1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'run', 'watch' ]\n2 info using npm@2.14.12\n3 info using node@v4.2.5\n4 verbose run-script [ 'prewatch', 'watch', 'postwatch' ]\n5 info prewatch brave@0.7.7\n6 info watch brave@0.7.7\n7 verbose unsafe-perm in lifecycle true\n8 info brave@0.7.7 Failed to exec watch script\n9 verbose stack Error: brave@0.7.7 watch: `webpack-dev-server`\n9 verbose stack Exit status 1\n9 verbose stack     at EventEmitter.<anonymous> (/usr/lib/node_modules/npm/lib/utils/lifecycle.js:214:16)\n9 verbose stack     at emitTwo (events.js:87:13)\n9 verbose stack     at EventEmitter.emit (events.js:172:7)\n9 verbose stack     at ChildProcess.<anonymous> (/usr/lib/node_modules/npm/lib/utils/spawn.js:24:14)\n9 verbose stack     at emitTwo (events.js:87:13)\n9 verbose stack     at ChildProcess.emit (events.js:172:7)\n9 verbose stack     at maybeClose (internal/child_process.js:821:16)\n9 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)\n10 verbose pkgid brave@0.7.7\n11 verbose cwd /home/aidan/Source/brave-browser-laptop\n12 error Linux 4.2.0-23-generic\n13 error argv \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"run\" \"watch\"\n14 error node v4.2.5\n15 error npm  v2.14.12\n16 error code ELIFECYCLE\n17 error brave@0.7.7 watch: `webpack-dev-server`\n17 error Exit status 1\n18 error Failed at the brave@0.7.7 watch script 'webpack-dev-server'.\n18 error This is most likely a problem with the brave package,\n18 error not with npm itself.\n18 error Tell the author that this fails on your system:\n18 error     webpack-dev-server\n18 error You can get their info via:\n18 error     npm owner ls brave\n18 error There is likely additional logging output above.\n19 verbose exit [ 1, true ]\n. When I update to node 5, I get an error while building. Give me a minute.\n. I got this: https://gist.github.com/Aidoboy/dbf6b5f6b5c84eaf5e12\nEdit: After installing Node 5\n. /usr/lib\n\u2514\u2500\u252c npm@3.3.12\n-snip-\n  \u251c\u2500\u252c node-gyp@3.0.3\n  \u2502 \u251c\u2500\u252c glob@4.5.3\n  \u2502 \u2502 \u2514\u2500\u252c minimatch@2.0.10\n  \u2502 \u2502   \u2514\u2500\u252c brace-expansion@1.1.1\n  \u2502 \u2502     \u251c\u2500\u2500 balanced-match@0.2.0\n  \u2502 \u2502     \u2514\u2500\u2500 concat-map@0.0.1\n  \u2502 \u251c\u2500\u252c minimatch@1.0.0\n  \u2502 \u2502 \u251c\u2500\u2500 lru-cache@2.7.0\n  \u2502 \u2502 \u2514\u2500\u2500 sigmund@1.0.1\n  \u2502 \u251c\u2500\u252c path-array@1.0.0\n  \u2502 \u2502 \u2514\u2500\u252c array-index@0.1.1\n  \u2502 \u2502   \u2514\u2500\u252c debug@2.2.0\n  \u2502 \u2502     \u2514\u2500\u2500 ms@0.7.1\n  \u2502 \u2514\u2500\u252c tar@1.0.3\n  \u2502   \u2514\u2500\u2500 block-stream@0.0.8\n-snip-\n. It's in there\nEdit: I think running npm-install installs it globally automatically.\n. Updated node-gyp, but I'm still getting the same error.\n. Got it installed on Node 5 by using sudo npm install --unsafe-perm from #214, but I'm getting the original error again.\n. Ubuntu 15.10\nOn Mon, Jan 25, 2016, 11:33 AM Brian Johnson notifications@github.com\nwrote:\n\nWhat Linux distribution/version are you using? I'll see if I can replicate\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/229#issuecomment-174595946\n.\n\n\n\u201cListen to the mustn'ts, child. Listen to the don'ts. Listen to the\nshouldn'ts, the impossibles, the won'ts. Listen to the never haves, then\nlisten close to me... Anything can happen, child. Anything can be.\u201d ~Shel\nSilverstein\n. I got arpund this by using npm run build-package, but now I guess I don't get debug output.\n. Appears to be fixed in v0.7.9dev\n. Wait, now it isn't working. Weird.\n. ",
    "bgiesing": "I am having a similar issue on OpenSuse Leap 42:\n26653 silly lifecycle abp-filter-parser-cpp@1.0.22~preinstall: Returned: code: 1  signal: null\n26654 info lifecycle abp-filter-parser-cpp@1.0.22~preinstall: Failed to exec preinstall script\n26655 verbose lifecycle tracking-protection@1.0.8~preinstall: unsafe-perm in lifecycle true\n26656 verbose lifecycle tracking-protection@1.0.8~preinstall: PATH: /usr/lib64/node_modules/npm/bin/node-gyp-bin:/home/bgiesing/projects/browser-laptop/node_modules/.staging/tracking-protection-aded2df7f2d4096bf8666c0af5400abe/node_modules/.bin:/home/bgiesing/projects/browser-laptop/node_modules/.bin:/home/bgiesing/bin:/usr/local/bin:/usr/bin:/bin:/usr/bin/X11:/usr/games\n26657 verbose lifecycle tracking-protection@1.0.8~preinstall: CWD: /home/bgiesing/projects/browser-laptop/node_modules/.staging/tracking-protection-aded2df7f2d4096bf8666c0af5400abe\n26658 silly lifecycle tracking-protection@1.0.8~preinstall: Args: [ '-c', 'npm install hashset-cpp && npm install cppunitlite' ]\n26659 silly lifecycle tracking-protection@1.0.8~preinstall: Returned: code: 1  signal: null\n26660 info lifecycle tracking-protection@1.0.8~preinstall: Failed to exec preinstall script\n26661 verbose unlock done using /home/bgiesing/.npm/_locks/staging-91ddc4e934d9d29b.lock for /home/bgiesing/projects/browser-laptop/node_modules/.staging\n26662 silly rollbackFailedOptional Starting\n26663 silly rollbackFailedOptional Finishing\n26664 silly runTopLevelLifecycles Starting\n26665 silly runTopLevelLifecycles Finishing\n26666 silly install printInstalled\n26667 verbose stack Error: abp-filter-parser-cpp@1.0.22 preinstall: `npm install bloom-filter-cpp && npm install hashset-cpp`\n26667 verbose stack Exit status 1\n26667 verbose stack     at EventEmitter.<anonymous> (/usr/lib64/node_modules/npm/lib/utils/lifecycle.js:232:16)\n26667 verbose stack     at emitTwo (events.js:87:13)\n26667 verbose stack     at EventEmitter.emit (events.js:172:7)\n26667 verbose stack     at ChildProcess.<anonymous> (/usr/lib64/node_modules/npm/lib/utils/spawn.js:24:14)\n26667 verbose stack     at emitTwo (events.js:87:13)\n26667 verbose stack     at ChildProcess.emit (events.js:172:7)\n26667 verbose stack     at maybeClose (internal/child_process.js:821:16)\n26667 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)\n26668 verbose pkgid abp-filter-parser-cpp@1.0.22\n26669 verbose cwd /home/bgiesing/projects/browser-laptop\n26670 error Linux 4.1.13-5-default\n26671 error argv \"/usr/bin/node\" \"/usr/bin/npm\" \"install\"\n26672 error node v5.4.1\n26673 error npm  v3.3.12\n26674 error code ELIFECYCLE\n26675 error abp-filter-parser-cpp@1.0.22 preinstall: `npm install bloom-filter-cpp && npm install hashset-cpp`\n26675 error Exit status 1\n26676 error Failed at the abp-filter-parser-cpp@1.0.22 preinstall script 'npm install bloom-filter-cpp && npm install hashset-cpp'.\n26676 error Make sure you have the latest version of node.js and npm installed.\n26676 error If you do, this is most likely a problem with the abp-filter-parser-cpp package,\n26676 error not with npm itself.\n26676 error Tell the author that this fails on your system:\n26676 error     npm install bloom-filter-cpp && npm install hashset-cpp\n26676 error You can get their info via:\n26676 error     npm owner ls abp-filter-parser-cpp\n26676 error There is likely additional logging output above.\n26677 verbose exit [ 1, true ]\n. ~~So now I get this error on OpenSUSE Leap with node 5.5, the latest npm/node-gyp, and using @Saynt's unsafe-perms suggestion:~~\nEDIT: Nevermind, forgot to install base devel packages! Stupid me!\n. Are we allowed to add this as a tip to the wiki @bbondy?\nI have done a similar script for Linux that checks for updates first. If there's changes, it runs git pull and npm install first, otherwise it just runs the app.\n``` bash\n!/bin/sh\nLOCAL=$(git rev-parse @)\nREMOTE=$(git rev-parse @{u})\nBASE=$(git merge-base @ @{u})\nverbose=\nusage=\"$(basename \"$0\") [-h|--help] [-v|--verbose] [--rebuild] -- Simple Script to Start (and Update) Brave\nwhere:\n    -h|--help     show this help text\n    -v|--verbose  show verbose output\n    --rebuild     force npm install\"\ncase \"$1\" in\n    -v|--verbose)\n         verbose=1\n         shift ;;\n    --rebuild)\n         rebuild=1\n         shift ;;\n    -h|--help)\n         echo \"$usage\"\n         exit ;;\n  esac\ngit fetch\nif [ $LOCAL = $REMOTE ]; then\n    echo \"No Updates\"\nelif [ $LOCAL = $BASE ]; then\n    echo \"Updating Brave...\"\n    git pull\n    if [ \"$verbose\" = 1 ]; then\n        npm install\n    else\n        npm install &> /dev/null\n    fi\nfi\nif [ \"$rebuild\" = 1 ]; then\n    if [ \"$verbose\" = 1 ]; then\n        npm install\n    else\n        npm install &> /dev/null\n    fi\nfi\necho \"Starting Brave\"\nif [ \"$verbose\" = 1 ]; then\n    npm run watch &\n    npm start &\nelse\n    {\n        npm run watch &\n        npm start &\n    } &> /dev/null\nfi\n```\n. Same here\n. See my response in #312 \n. @PeterJensen This and the FOX News one is because it's blocking third-party cookies (also means Disqus (and other commenting systems), Social Buttons (Facebook, Twitter, G+), etc. also get blocked.)\nThe only solution is to disable it for that site by right-clicking the tab.\n. ",
    "Chaasof": "I have nodejs v5.5, npm v3.5.3 and node-gyp v3.2.1 and I can't finish the npm install :s https://pastebin.mozilla.org/8857451 any solution ? \nThanks\n. ",
    "Adejair": "@diracdeltas  @bbondy  I have the same problem to build brave on Ubuntu, I tried build with differents version of NPM and NODE, I using version V5.5.0 on NODE and V3.5.3 in NPM.\n. @Saynt Thanks, Its work with me.\n. I have same error, I solved this error installing electron-prebuilt from npm, npm install electron-prebuilt --save\nI advise not to do it, because has electron-prebuilt prepared to use in brave, to use it is easy.\ngit clone https://github.com/brave/electron-prebuilt \ncd electron-prebuilt\n./electron PATH_TO_BRAVE\n. Try install sqlite3 manual(in browser-laptop path) npm install sqlite3 --unsafe-perm\nand try command ./electron ~/browser-laptop\n. ",
    "ghost": "I was able to solve this, using:\nsudo npm install --unsafe-perm\n. @shahbaz17 maybe try this: https://github.com/nodejs/node/issues/2814\n. Just take a look at Firefox version 22 (outdated, but had many interesting features loved by power users) or Vivaldi Browser - Blink engine is able to support tons of features and speed, so i really hope you are making use of that opportunity and not just plan to create another simple browser for the masses, but as Brendan Eich is founder of Brave, i guess you have anyway more higher goals for your browser than other projects :)\n. I'm also looking to develop an online service that needs a plug-in and I would really like 100% coverage.  Chrome compatibility is a small plus because that's one less browser to support but it's more important to me at least that there is some way to target the browser.\nI worry about Electron being able to support chrome extentions in a way that won't be buggy.  I feel bad for them being asked to support that and seeing as that's not even on their time table, much less on their time table but unrealistic, I'm a +1 for a rudementry add-on system.  Atom, which electron is coded for seemed to have no problem doing it at that layer.  That's another reason why Electron won't include chrom plugins.  It's not on Atom's radar so it won't be on Electon's.  Could you imagine how borked Atom could get if people injected extensions in there?\nThey forked Electron from Atom so people to could work on it to make it more stable for Atom.  They aren't going to accept features that could create pains for Atom even if by mistake.\n. Hopefully this includes future elements too like history background, download/bookmark page background.\n. Looking forward to this too.. And for the Android:\nhttps://github.com/brave/browser-android-tabs/issues/81. Thanks, Serg, for maintaining the app.. bradleyrichter:  I don't see that in Adv Settings? . my own custom based chrome (black theme)\nwith extensions:\nScriptSafe\nGhostery\nHTTPS Everywhere\nAdBlock\nDark Mode (for every page with options)\n brave. @JonnyRedHed You can also use Stylish scripts with GreaseMonkey instead.. Any update on this? This has been in the works for over two years... Do you need me to come on and write it for you?. @A9G-Data-Droid: Salty? That is not an accurate adjective. I am feeling more antagonistic than anything. As an open source developer, I already understand how it works, but thank you. Sorting by thumbs up does not dictate that it is second in level of importance, it just means it has been voted on, so I would appreciate it if you didn't retort with an assumption which may be incorrect.. A fascinating definition which does not exist in any vetted dictionary, but I appreciate the sentiment. You do not represent the community, you represent yourself. What is important to the community is not what is important to a team.\nAs far as your attempt to elicit a reaction through your last two sentences, I would state the same thing to you, instead of wasting your time attempting to defend something which needs no defense, put your money where your mouth is. I'll be looking for a pull request from you as well.. Nor did I state that I would. Perhaps you would benefit from researching the difference between interrogative and declarative statements. Regardless, I hold no enmity toward you @A9G-Data-Droid, we are both people, and beyond the disconnection which exists because of the internet, I am certain that we would both get along in real life. I will contribute a fix, and I will wait for my pull request to be added to the code base. Thus adding substance to my statements, as you have suggested.. +1000. Still a concern on Windows 10 v10586.71 (Version 1511).\n. Since we are speaking about bars, what would be too nice would be a full status bar, a side bar and add-on bar.\nThat is anyway a large problem of Chromium - Chromium devs do not understand that an optional side bar can be of great use, same like an optional bar for add-on icons, more place for them ;)\n. Same error on windows 10 64 bit.\nis it related to npm install?\nI am using Golang.\n. It would be for sure a great option or power users, as we do want the most possible amount of flexibility over the browser UI, where elements are located.\n. Confirmed for Windows 10.\n. Also, CPU usage is massive. Hopefully you guys can do something to lower memory and cpu usage at some later point :)\n. Good to see that some of my suggestions are considered as useful :D As power user i care of course for tons of customization features and a bit for design too :D\n. Confirmed for Windows 10 v10586.71 (Version 1511).\n. I also prefer how Safari/Chrome do it. 5 tabs is a really strange number as well, I assumed it would be tied to window size or something.\n. Nice to hear that you are open for suggestions :) One thing i forgot, if there is such a smaller field created, there should be an option that you can set search engines in a separate way, so if you have for example Duckduckgo in the main field and Wikipedia in the small additional search field and you are switching to Google in the main, Wikipedia should still stay in the smaller field.\n. A secondary smaller search field enables it to have 2 active search engines at once in the browser. No need for typing keywords or additional search engine names. A more convenient and faster way for making as fast as possible multiple searches. To make it clear, i am only talking about one additional field, where you can easily set a second search engine, not of multiple additional fields.\nSo what is wrong with an optional search field? There are enough browsers which offer minimalism or simplicity. If Brave wants to stick out of the crowd, you should offer also features \"normal\" browsers do not offer. Just ask yourself  why for example an user should use Brave instead of Chrome and Firefox if it offers almost exactly the same functionality. And with the unique structure of Brave you guys could create both a browser, which simple users and power users would love. Electron gives you so much additional unique possibilities, why not using them? Simplicity and features do not exclude each other, as long as advanced features are optional nature so that less advanced users have no reason to scream \"Bloat\".\n. Exactly that is what i wanted to say, sorry if i made myself not clear the very first time. But it is important that you are able to \"lock\" the search engine, so if you switch engines in the main field or the secondary one, that your second choice is kept instead of overwritten (so you have 2 search engines in the UI active instead of one).\n. So, even as optionally available feature a second search box is not wished? Too bad. But the idea about split search which will open dozens of search engines i do find interesting. If this feature is coming like shown in the screen, i am fine with that.\n. That may be true, but still keep in mind that flexibility and also adding so called non famous features these days can bring you quite a lot of users when they discover Brave and find out that it supports their features.\nJust speaking for myself, i see it that way if there is a check box to activate such an additional box or not is not at all browser bloat if it does not get into user's way who do not want to have such a feature. Power users and geeks instead would be very thankful for that even if it is a mouse click away ;)\nJust as a side note: Vivaldi has added it, and even Opera has added it again (even if they are these days mostly about simplicity and minimalism and anti power users), so there is still a need for such a feature.\n. I also would say the mass minimalism/simplicity users are not the main target group of Brave, as that kind of users would instantly label Brave as \"Ads-Ware\" because for that class of users ads are in general bad and they would most likely not understand the concept that there also can be more better kind of ads.\nDelivering to power users instead means that they bring with them their own amount of users which help build Brave's audience, but for this you have to insert their toys. It is a simple calculation ;)\nUsers do in general trust more their supporting guys than a browser developer who has recently entered the competition market, and the more unique the concept is, the more you are in need in the first place for that often dismissed \"vocal minority\" which will advertise and spread the news that Brave is great.\n. Another page with a crash which can be reliable produced here under Windows 8:\nhttps://soundcloud.com/fod-steve - on the right on the link for his fodxm page, make middle mouseclick to open it in a new tab, the browser is instantly closing.\n. As written, go to https://soundcloud.com/fod-steve and look out for the link to \"fodxm\" on the right under followers/following/tracks - make a middle mouse click on it and the browser is closing instantly. Happens everytime here on Windows 8 - Can also reproduce this behavior on various bandcamp links on the bandcamp link page, for example when clicking on my profile and making a middle click to open one of the releases in my collection in a new tab.\nBrowser is instantly closing.\n. Thank you, you guys are really fast in fixing things!\n. I would say take a look how Vivaldi is handling this. That is personally the style i would love.\nAlso, it would be interesting to actually have smaller tab previews in the tabs itself, also in the way like Vivaldi does handle that. You have the tab with the favicon and the site name and beyond a small tab picture/screenshot, also you are able to make tabs with drawing them larger - aka make the tab preview under the tab title and the favicon larger.\nPerhaps you can find some idea like that also useful for Brave?\n. Hopefully you plan not use the standard Chromium design for download manager and other Chromium related internal pages, because they look really ugly and are too simplistic.\n. Agreed, Styling would be also sufficient enough. As long as the end result looks more in line with the Brave design, as design consistency is always a good thing.\n. Thanks :D\n. If you really think about adding that, please only as optional setting. I for myself would prefer to have the reload icon close to forward/backward buttons.\n. Does now work fine, tried it right now, fixed and thanks :)\n. ",
    "digitalcrafted": "@Saynt Thanks!\n. ",
    "SphinxKnight": "Confirming that upgrading npm/node fixes the issue for Fedora 23 as well.\n. ",
    "smcnally": "On Ubuntu 15.04, built Node 5.5 per these instructions\nWas able to build \"successfully.\" Can run server and tests; running browser fails with \"electron: not found.\" Searching through log other tickets to address same. \n. Thanks, @Adejair. npm install completed successfully with a warning:\n\nnpm WARN ENOENT ENOENT: no such file or directory, open '~/browser-laptop/node_modules/electron-rebuild/package.json'\n\nAfter cloning the repo, I've got an electron executable in\n\n/browser-laptop/electron-prebuilt/dist\n\nbut not in \n\n/browser-laptop/electron-prebuilt/\n\nFrom the latter dir, \n\n./electron ~/browser-laptop/\n\ngives me a \"command not found.\" From \n\n/browser-laptop/electron-prebuilt/dist \n\n./electron ~/browser-laptop/ gives me this error:\n\nError opening app\nThe app provided is not a valid Electron app, please read the docs on how to write one:\nhttps://github.com/atom/electron/tree/v0.36.2/docs\nError: Cannot find module 'sqlite3'\n\nwhich I've seen referenced in other tickets. Will continue digging. \n. Thanks, @Adejair. Installed sqlite3 in \n\n~/browser-laptop/\n\nand \n\n~/browser-laptop/electron-prebuilt/dist \n\nand getting new errors re abp-filter-parser-cpp. I'll review other tickets for that.\n. ",
    "shahbaz17": "Hello @Saynt \ni followed your suggested step but received this error. Can anyone help me?\nnpm ERR! Linux 3.19.0-47-generic\nnpm ERR! argv \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"install\" \"--unsafe-perm\"\nnpm ERR! node v5.5.0\nnpm ERR! npm  v3.3.12\nnpm ERR! path /home/shahbaz17/git/browser-laptop/node_modules/extract-zip/node_modules/mkdirp/bin/cmd.js\nnpm ERR! code ENOENT\nnpm ERR! errno -2\nnpm ERR! syscall chmod\nnpm ERR! enoent ENOENT: no such file or directory, chmod '/home/shahbaz17/git/browser-laptop/node_modules/extract-zip/node_modules/mkdirp/bin/cmd.js'\nnpm ERR! enoent This is most likely not a problem with npm itself\nnpm ERR! enoent and is related to npm not being able to find a file.\nnpm ERR! enoent \nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/shahbaz17/git/browser-laptop/npm-debug.log\n. @Aidoboy I did that . Still the same result\n. @Aidoboy And now there is this error\nmodule.js:341\n    throw err;\n    ^\nError: Cannot find module 'npmlog'\n    at Function.Module._resolveFilename (module.js:339:15)\n    at Function.Module._load (module.js:290:25)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at /usr/lib/node_modules/npm/bin/npm-cli.js:20:13\n    at Object. (/usr/lib/node_modules/npm/bin/npm-cli.js:76:3)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n. @Aidoboy \nnode -v 5.5.0\nnodejs -v 5.5.0\n. @Saynt not working after following nodejs/node#2814\n. Hello @serv \n$ node -v \nv5.5.0\n$ npm -v\nmodule.js:341\n    throw err;\n    ^\nError: Cannot find module 'npmlog'\n    at Function.Module._resolveFilename (module.js:339:15)\n    at Function.Module._load (module.js:290:25)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at /usr/lib/node_modules/npm/bin/npm-cli.js:20:13\n    at Object. (/usr/lib/node_modules/npm/bin/npm-cli.js:76:3)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n. @bbondy Here is content of npm-debug.log\nnpm-debug-log.txt\n. @shepitko i didn't get your point. Can you please tell me in detail.\n. It's up and running.\nFinally it worked when i tried SSH version of cloning... \nDon't know why it was not working with HTTPS ???\n. ",
    "ndedic": "Hi,\nI am seeing the following errors:\nnpm ERR! Windows_NT 10.0.10586\nnpm ERR! argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Users\\nedim\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js\" \"install\" \"bloom-filter-cpp\"\nnpm ERR! node v5.5.0\nnpm ERR! npm  v3.4.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! bloom-filter-cpp@1.0.19 install: node-gyp rebuild\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the bloom-filter-cpp@1.0.19 install script 'node-gyp rebuild'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the bloom-filter-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls bloom-filter-cpp\nnpm ERR! There is likely additional logging output above.\nand\nnpm ERR! Windows_NT 10.0.10586\nnpm ERR! argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Users\\nedim\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js\" \"install\" \"hashset-cpp\"\nnpm ERR! node v5.5.0\nnpm ERR! npm  v3.4.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! hashset-cpp@1.0.13 install: node-gyp rebuild\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the hashset-cpp@1.0.13 install script 'node-gyp rebuild'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the hashset-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls hashset-cpp\nnpm ERR! There is likely additional logging output above.\n. ",
    "PunkUnity": "how do you just run the browser? it installed just fine for me on Ubuntu 15.10 using node 5.50\n. Got the browser running. Then tried to make an executable file on my desktop, after which I couldn't run it anymore. Any chance there will be a .Deb file made? Or a binary installer?\n. That should be a good version. I would maybe start over. Hopefully the devs will come up with an easier way to install it\n. ",
    "nujabse": "@diracdeltas \n\nrm -rf node_modules/, then doing npm install again\n\nthat works perfect for me on archlinux! Thanks!\n. ",
    "sroerick": "I'm still having this issue. \nLinux Mint 17.1\nnode v5.5.0\nnpm  v3.3.12\nnode-gyp is installed\nI removed the node files. \nStill getting the \n\nnpm ERR! Failed at the abp-filter-parser-cpp@1.1.5 install script 'node-gyp rebuild'.\n\nerror\n. @elsehow I have tried the same things @jmcastellote did, to no avail. --unsafe-perms, and -g. Both also fail. \nAnd yes, build-essential is absolutely installed.\n. ",
    "jmcastellote": "Very Similar error here.\n- Using:\n  Debian Jessie with regular Main & Contrib repo packages\n  nodejs v5.5.0\n  npm v3.3.12\n  node-gyp v3.2.1\n- I get, after npm install:\n  npm ERR! abp-filter-parser-cpp@1.1.5 install: 'node-gyp rebuild'\n  Looking deeper, I see that file \"BloomFilter.h\" is missing from Brave's module \"abp-filter-parser-cpp\". As this module is self-managed by brave, I cannot replace it with the latest build in github.\n- I have tried, from previous comments (much appreciated, btw):\n  \u00b7 Removing content of 'browser-laptop/node_modules' after first fail.\n  \u00b7 installing with --unsafe-perms\n  \u00b7 installing with -g\n  \u00b7 installing with both options\n-g gives even more strange results. The rest always fails with above error\n. @elsehow @rblasett thanks for double-checking. Yeah, build-essentials 11.7 installed, just like @sroerick .\nInitially I was doing the whole install as root, so I tried with sudo and regular user as you guys show but same results.\n. ",
    "olgabot": "Similar issue with node-gyp not installing on Travis-CI (Ubutnu Linux)\nhttps://travis-ci.org/biom262/biom262-2016/builds/107156450\n. FYI I was able to fix it by adding an empty .npmignore file:\ntouch .npmignore\n. I read somewhere that the .gitignore and .npmignore conflict somehow. Hope that helps someone!\n. ",
    "Udara-U3": "Same issue with node-gyp and installing with --unsafe-perms also with rm -rf node_modules/ npm install errors after tried with every one of this. (on Ubuntu Xenial)\n. ",
    "ashickurnoor": "I am getting the same error. Using OS X 10.10.5 (14F1605) . \nnpm version : 3.7.3\n. ",
    "nkolba": "Hi,  trying to build on a Mac and having very similar problems.  This is the error I'm getting:\n4 errors generated.\nmake: *** [Release/obj.target/keytar/src/main.o] Error 1\ngyp ERR! build error \ngyp ERR! stack Error: make failed with exit code: 2\ngyp ERR! stack     at ChildProcess.onExit (/Users/nkolba/browser-laptop/node_modules/node-gyp/lib/build.js:276:23)\ngyp ERR! stack     at emitTwo (events.js:100:13)\ngyp ERR! stack     at ChildProcess.emit (events.js:185:7)\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:204:12)\ngyp ERR! System Darwin 14.5.0\ngyp ERR! command \"/Users/nkolba/.nvm/versions/node/v5.8.0/bin/node\" \"/Users/nkolba/browser-laptop/node_modules/.bin/node-gyp\" \"rebuild\" \"--target=0.37.7\" \"--arch=x64\" \"--dist-url=https://atom.io/download/atom-shell\"\ngyp ERR! cwd /Users/nkolba/browser-laptop/node_modules/keytar\ngyp ERR! node -v v5.8.0\ngyp ERR! node-gyp -v v3.3.1\ngyp ERR! not ok \nI've tried node v 5.5 as well - clearing node-modules each time and doing a full import.\nnpm version is 3.7.3\nI was on node-gyp 3.2.1 previously - upgraded and now can't seem to get back - don't know if that's impacting anything.\nalso tried doing npm install with --unsafe-perms  - no luck there.\nAny help would be greatly appreciated!  thanks\n. I found this issue, which was the root problem: https://github.com/brave/browser-laptop/issues/807\nI was able to get Brave to build using  the fix with NPM link, but was not able to run it - found hacking it with global install of abp-parser-filter-cpp allowed me to run (woohoo!) but obviously not a good long term solution - so still interested to find out what is wrong in my environment that I can't use the abp-filter-parser from npm...\n. ",
    "j-burt": "I was able to build using the following steps on Windows 10 (64-bit) Build 10586 (not sure if all options I chose are necessary):\n1.  Installed Git-2.7.0-64-bit.exe (choosing \"use Git and optional Unix tools...\").\n2.  Installed node-v5.5.0-x64.msi\n3.  Upgraded npm using powershell as admin:\n   npm install -g npm-windows-upgrade\n   Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force\n   npm-windows-upgrade\n   (choose version 3.6.0)\n4.  Install python-2.7.10.amd64.msi (turned on feature \"Add python.exe to Path\")\n5.  Install Visual Studio 2013 community ed. w/ update 5 (used iso vs2013.5_ce_enu.iso)\n6.  Ran app \"Git CMD\" as admin\n7.  Since I wanted to beta test I used the:  git clone --depth 1 https://github.com/brave/browser-laptop\n8.  Opened the working directory (browser-laptop) with Microsoft Command Prompt as admin and ran command npm install\n9.  I also ran the npm run build-win 64, but didn't create the NSIS based installer (wasn't so sure about the certs needed)\n. ",
    "arthrp": "Dependencies (such as Python) should be specified in build instructions I think.\n. ",
    "eliperelman": "I made some comments, which would also make the git dependencies consistent with the repository field in package.json. \n. I made some comments, which would also make the git dependencies consistent with the repository field in package.json. \n. @helloitu Node.js 0.12.x is too old to run Brave, please update to the latest 5.x line.\n. Honestly I find installing Node.js easier from a package manager than from a zip everytime. You could follow [1] for more info.\nMy preferred route though is to use the \"n\" package on npm, which lets you easily switch Node.js versions:\nhttps://www.npmjs.com/package/n\n[1] https://nodejs.org/en/download/package-manager/\n. Agreed, both \"n\" and \"nvm\" are good Node.js version managers.\n. @teemuteemu would you happen to have a before and after screenshot?\n. I believe it is preferred for GH et al repos as it creates a nice shorthand that is consistent between package.json and npm install. If you look further down in that same section, it shows the shorthands.\nSo if you could clarify, which would you prefer? I can change this to be the longer URL format, or update all the git URLs to use the short format.\n. No worries, and thanks!\n. This could be shortened to:\njson\n\"electron-prebuilt\": \"brave/electron-prebuilt\",\n. This could be shortened to:\njson\n\"vibrant\": \"jariz/vibrant.js#1.0\",\n. ",
    "craigmichaelmartin": "Great, thanks @eliperelman!\n. Great, thanks @eliperelman!\n. Sure thing!\n. That makes a lot of sense. To the point of maintaining / tweaking configs across multiple projects, we could create one shareable config that each projects references.\n. Feross has already articulated his philosophy on this (and even specifically on prefer-const). I happen to agree with his philosophy in general for projects getting off the runway, but not for maturing projects. If you disagree, feel free to close :)\nTo the 'building up a case for owning our own configurations', I'd like to add: no-var, prefer-arrow-callback, prefer-template, prefer-spread, and object-shorthand.\n. There is project similar to standard, xo by sindresorhus, that already handles esnext type rules, but again, I see the value in a mature project owning it. If it is done the right way it is a single sharable config that is an easy install npm published module.\n. :+1: I can be on the look-out for its release and make the rule changes proposed above, if you would like. I'd be happy to take the burden off you, while pushing the javascript standards forward.\n. So, standard v6 was released, and with the ability to make rules configurable! However, the owner quickly dis-espoused this change, and plans a quick v7 release to do away with it. As I've advocated, I believe the right approach is a sharable eslint config. Anyway, we can take advantage of v6 for our purposes. Look out for some PRs :)\n. Yeah, I think that is another reasonable path. I intended to make some PRs for this, but am a bit bogged down with some side projects right now and on the sidelines for this. If you, or anyone, have the time, feel free to run with it!\n. Yeah, standard caught it, I fixed it, and neglected to add it :disappointed: \n. ",
    "jaydson": "Same here.\nI'm on Ubuntu 14.04 with Node.js v5.5.0.\n```\nError opening app\nThe app provided is not a valid Electron app, please read the docs on how to write one:\nhttps://github.com/atom/electron/tree/v0.36.2/docs\nError: Cannot find module '/browser-laptop/node_modules/sqlite3/lib/binding/node-v47-linux-x64/node_sqlite3.node'\n``\n. It seems like it's working now. I removed thenode_modulesfolder and did anothernpm install`.\nI have a different issue related to webpack, so I'll find or create another thread.\nThanks @bbondy\n. I'm running Brave 0.12.7 on Ubuntu 16.10 and I don't have the option \"Enable Google Widevine support\" on my Security panel.\nIs Google Widevine available for Linux?\nWell, as far as I can see, Linux users can't use Netflix on Brave yet.\n. ",
    "vmx": "On Debian I had  directory called ...v46.. instead of ...v47..., symlinking it worked for me.\n. Seems to be duplicate of #219.\n. ",
    "Udokah": "had same issue too, using Mac os running on Nodev5.4\n. ",
    "wiredearp": "Got mine on Ubuntu 14.04 using on Nodev4.2.4.\n. ",
    "sirugh": "Fixed by updating to Node 5.5, deleting node_modules and running npm install.\nsymlinking did not work for me.\n. ",
    "anvk": "Thanks for your reply. Good we closed this issue since it is not really a problem. Please do not get me wrong, I'm not hear to pop out of the blue and say \"Well guys let's switch this whole project to Redux now, won't it be cool!\" \nI'm just curious what was the decision not to go the Redux way while lots of people might say it is the natural evolving of Flux architecture. Or there are plans in the future to do such an update OR there are no such plans because of X and Y and Z...\n. No it is a pretty good answer and I understand. I was just curious if you guys found some reasoning of not going the Redux way and wanted to hear that.\nhttp://stackoverflow.com/questions/33619775/redux-multiple-stores-why-not/33633850#33633850\n. ",
    "neeklamy": "Are there any other safe browsing blacklists out there? With a quick search I found PhishTank, which has API access and is free to use.\nI ask because, whilst this is a great idea, Google can take some time to add sites to the list. I\u2019ve occasionally submitted sites through either their report pages for malware or phising (it\u2019s not always obvious which to use) and days later, they still haven\u2019t been included.\nOn a related note, it would be really nice if there were a tool built into Brave to submit malicious URLs (perhaps with any supporting resources).\n. How much overlap is there between the two projects? PhishTank seems to be more narrowly defined.\nIt\u2019s not clear how much development is happening with PhishTank either, the official blog was quietly shut down a few years ago* and the OpenDNS blog stopped talking about it in 2011.\nStill, I registered for a PhishTank account and have checked out a few phishing pages \u2013 it\u2019s kind of fun clicking away and seeing phishing pages being verified.\nI found a couple more services, URLVoid, they use multiple reputation and blacklists. And URI Blacklist.\nIncidentally, the malware infected site I submitted to Google still hasn\u2019t been added, and is still active (with at least 30 thousand pages).\n*This is the last, most recent blog post on the Wayback Machine, Two years of PhishTank and 1 million phishes (October 28, 2008).\n. It does, I\u2019ve seen this on Brave 0.10.0 and 0.10.2.\nYou can see it here: Google DevTools Timeline (scroll down to the Frame Viewer section).\nWhen full screened:\n- The page\u2019s sidebar and top navigation remain,\n- Where I\u2019d expect the video to appear it is just black (Brave 0.10.0 just full screened the page),\n- The video continues to play in the background,\n- The video\u2019s audio keeps playing.\n\n. And unsurprisingly in both Opera (latest 37.0.2178.54) and Opera Beta (38.0.2220.25).\nSafari (9.1.1) and Safari Technology Preview (latest version 5, 11601.6.17, 11602.1.33) have a similar problem, the video goes full screen, but the page navigation remains.\nThere\u2019s no problem with Firefox (Gecko), so it looks like it\u2019s more of a WebKit bug?\nI\u2019d try an older Google Chrome, but sourcing a reliable download is a bit tricky.\n(All on OS X 10.11.5)\n. Well, it\u2019s still there in the latest Google Chrome too, I\u2019ve submitted a bug report to Google (via Chrome\u2019s built in submission process, Help \u2192 Report an issue\u2026). I will update here if I get any response.\n. I\u2019ve found another example on the Guardian website. Scroll down the page, there\u2019s an embedded tweet which links to a YouTube video, which when made full screen, doesn\u2019t display: Tesla driver dies in first fatal crash while using autopilot mode.\nThis happens whether Brave\u2019s shields are up or down, or up and allowing adverts and tracking (Brave 0.10.4).\nReproducible in Google Chrome (latest version, 51\u2026, and reported to Google via the Help menu).\nWorks correctly in both the latest Safari and Safari Technology Preview 7.\nOther videos on the Guardian website play just fine, scroll further down that page to see another embedded YouTube video (\u201cTesla Autopilot v7.0 Stop and Go Traffic\u201d). This other Guardian video plays fine too, Safety pins puncture racism after Brexit vote.\n(All on OS X 10.11.5)\n. This has been changed in Electron, hidden-inset will be deprecated with 2.0, use hiddenInset instead: native_window_mac.mm\n. Should probably update this comment about whitespace and searching too.\n. ",
    "hamidsafdari": "It does say so in the README.md to run npm run watch first and then npm start.\nRun them in separate terminals.\n. ",
    "breakzplatform": "fixed by deleting all node_modules folder and rebuilding it\n. @bradleyrichter I make that primarily because I got myself trying to back pages clicking on the prevTab button instead of the (bigger) correct one, near the url bar. This implementation looks like Firefox one, but uses the pagination rules of Brave.\n. Screenshots:\nLinks\n\nImages\n\n. I can help with a PR, if needed\n. @bbondy brave could show some warning on preview. something like a purple webpage with the private icon\n. ",
    "Arandhras": "As a long-time user of NoScript on Firefox, I would also like something like that implemented in Brave. Both approaches mentioned by @diracdeltas to whitelist websites are good, and I can't think of a reason to implement only one instead of both.\n. This would be definitely something that I would love. I miss the hackability of \"old\" Firefox releases in terms of UI customization, and being able to achieve that again would be fantastic!\n. I like this too, being able to switch search engines would be very useful... in my workflow it's something I do very often and it would be nice to have it also in Brave!\n. I am not sure I like @psimyn's suggestion. I understand the need of keeping it as simple as possible, but having to write \"google.com\", \"wikipedia.org\" or \"youtube.com\" before every single search in the omnibar is quite a hassle. At the very least, if only a single bar is going to be used, at least you should offer (editable) shortcuts, like what duckduckgo.com does internally (using the previous examples, !g = google, !w = wikipedia, !yt = youtube).\nAnyway, as SJD said a secondary (maybe optional?) search field for using another search engine isn't such a bad idea, in my opinion it is an immediate and logical solution.\n. @psimyn That is awesome, thanks for the clarification!\n. I like the idea that the memory taken by the browser should be somehow limited in cases where the amount of total system RAM isn't that big (4 GB or less). To address this, it should be nice to specify a maximum amount of memory usable by the program.\nWhen the user has many tabs open, the browser would \"forget\" about the oldest tabs open (\"Most Recently Used\" policy) -- this operation would only purge the HTML and media content from volatile memory, of course no session-dependent data should be destroyed.\n. I agree with this absolutely, NoScript is a must-have addon for me on Firefox, having something like it in Brave would be fantastic!\n. ",
    "elia": "@bbondy done. Works fine with 5.0.\n. :+1: \n. ",
    "helloitu": "thanks\n. so , i downloaded the zip from nodejs.org , and , now how install? :P \n. @eliperelman that works here ,  a lot of thanks bro , ^^\n. @eliperelman  hei man , i got another error here , a lot of errors \ngyp ERR! build error \ngyp ERR! stack Error: make failed with exit code: 2\ngyp ERR! stack at ChildProcess.onExit (/home/dosnut/browser-laptop/node_modules/npm/node_modules/node-gyp/lib/build.js:270:23)\ngyp ERR! stack at emitTwo (events.js:100:13)\ngyp ERR! stack at ChildProcess.emit (events.js:185:7)\ngyp ERR! stack at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)\ngyp ERR! System Linux 3.2.0-97-generic\ngyp ERR! command \"/usr/local/bin/node\" \"/home/dosnut/browser-laptop/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\ngyp ERR! cwd /home/dosnut/browser-laptop/node_modules/.staging/tracking-protection-0f503ffa/node_modules/hashset-cpp\ngyp ERR! node -v v5.5.0\ngyp ERR! node-gyp -v v3.0.3\ngyp ERR! not ok \ninstall \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdinstall \ufffd\ufffd\ufffd rollbackFailedO \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdinstall \ufffd\ufffd\ufffd rollbackFailedO \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdrunTopLevelLifecycles \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdnpm ERR! Linux 3.2.0-97-generic\nnpm ERR! argv \"/usr/local/bin/node\" \"/home/dosnut/browser-laptop/node_modules/.bin/npm\" \"install\" \"hashset-cpp\"\nnpm ERR! node v5.5.0\nnpm ERR! npm v3.4.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! hashset-cpp@1.0.13 install: node-gyp rebuild\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the hashset-cpp@1.0.13 install script 'node-gyp rebuild'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the hashset-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR! node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR! npm owner ls hashset-cpp\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR! /home/dosnut/browser-laptop/node_modules/.staging/tracking-protection-0f503ffa/npm-debug.log\npreinstall:abp-filter-par \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdpreinstall:abp-filter-par \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdpreinstall:tracking-prote \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdpreinstall \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdpreinstall \ufffd\ufffd\ufffd lifecycle \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdpreinstall \ufffd\ufffd\ufffd unlock \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdrunTopLevelLifecycles \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdbrave@0.7.7 /home/dosnut/browser-laptop\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd electron-packager@5.2.1\n\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd electron-download@1.4.1\n\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd home-path@1.0.1 \n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd electron-prebuilt@0.36.3 (git://github.com/brave/electron-prebuilt.git#11c3984ca0e0d1188827ab1e84b25ba7435e4b6c)\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd electron-download@1.4.1\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd home-path@1.0.1\nrunTopLevelLifecycles \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdnpm WARN optional Skipping failed optional dependency /electron-builder/appdmg:\nrunTopLevelLifecycles \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdnpm WARN notsup Not compatible with your operating system or architecture: appdmg@0.3.5\nrunTopLevelLifecycles \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdnpm WARN optional Skipping failed optional dependency /chokidar/fsevents:\nrunTopLevelLifecycles \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdnpm WARN notsup Not compatible with your operating system or architecture: fsevents@1.0.6\nrunTopLevelLifecycles \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdnpm ERR! Linux 3.2.0-97-generic\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v5.5.0\nnpm ERR! npm v3.5.3\nnpm ERR! code ELIFECYCLE\nnpm ERR! abp-filter-parser-cpp@1.0.22 preinstall: npm install bloom-filter-cpp && npm install hashset-cpp\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the abp-filter-parser-cpp@1.0.22 preinstall script 'npm install bloom-filter-cpp && npm install hashset-cpp'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the abp-filter-parser-cpp package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR! npm install bloom-filter-cpp && npm install hashset-cpp\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR! npm bugs abp-filter-parser-cpp\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR! npm owner ls abp-filter-parser-cpp\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR! /home/dosnut/browser-laptop/npm-debug.log\n. ",
    "sidstamm": "I was struggling with node and npm versions for a while, then I installed nvm and told nvm to use node 5.5 and all my problems went away. Maybe this will help folks who have similar problems but the great advice from @eliperelman doesn't work. (http://nvm.sh)\n. I had been using node 0.12 on Ubuntu 14.04.  I didn't try 5.4!\n. cc @diracdeltas\n. This is great, thanks for taking this on!  Since the UA fix requires one of two things: Lots of Brave users with the same UA string, or other browsers to reduce bits in the UA... I think that's probably not easily reducible in the short term.  \nI wonder if reducing the canvas hash uniqueness is a particularly difficult fix (I haven't looked into anything about it, though seems like a potential zero-sum perf/privacy tradeoff).\n. I am not convinced you should turn on the DNT header by default (using privacy badger may change my mind), but I do think it would be awesome to support it as an option!\n. ",
    "stshank": "I just tested on Mac OS X El Capitan 10.11.4 beta 1 and got the same error message as @diracdeltas: \"This error has been reported to Google and we'll look into it as soon as possible. Please reload this page to continue.\" This with Brave 0.7.9 (0.36.3).\n. Works for me on Mac OS X El Capitan 10.11.4 beta 3 (or is it beta 4?). Haven't tried on latest Windows.\n. I just tested on Windows 10, also. It didn't crash but it put the focus on the address bar instead of the document text.\n. This is separate from https://github.com/brave/browser-laptop/issues/179\nMaybe I didn't express it well, but what I'd like to see is that it shows the top autocomplete option in the address bar, and when you hit enter, it navigates to that site. Instead, you see autocomplete options down below, so you have to arrow around or click to activate.\n. In other browsers, when I right-click on a Feedly RSS entry title and open the link in a new tab, I get the non-RSS URL in the address bar.\n. ",
    "brettholz": "As another google drive user I can confirm having this same issue. Oddly, copy-pasting a link to the specific file has allowed me access to that file, just not through the intuitive double-clicking of it in google drive.\n. ",
    "teemuteemu": "Sure, here before:\n\nand after:\n\n. No problem, I think Brad's version looks great. I can help with the CSS but I think I have time for it just tomorrow.\n. ",
    "asadotzler": "Sounds like #179 \n. A suggestion: Implement this as a service that syncs to other browsers so that Brave is always the most up to date. Your users will be using multiple browsers, at least for a while, so make their other browser feel like the one that's missing recent additions by being always up to date on things like history, bookmarks, saved passwords and forms, etc.\n. Ideally, you'd migrate this setting from the users previous browser when you do migration. For browsers that do not offer a setting, you should adopt that default behavior. \n. Current tab preview breaks the \"close background tab without the person looking over my shoulder seeing its contents\" privacy use case. A solution to that part of the issue could be to not preview if the mouse is over the close button, only previewing if the mouse is over the title in the tab. \n. Ideally it'd be something like: 100% of the height (minus dock space) and wide enough to accommodate your home page content without horizontal scrolling or other layout bustage. Since you have a blank home page, I suggest you assume users will never change it and make sure it's wide enough to handle most common sites without horizontal scrolling. \n. This is probably a duplicate of #362.\n. Probably want this on the link context menu too. \n. I notice on several two year old laptops.\n. Tested on 0.7.12 on OS X.\n. 1. Visit https://news.ycombinator.com/ and pin the tab. \n2. Click a link to a story\n3. See the off-site story load in the pinned tab.\nAlso the slashdot case fails for me too. Broken on Mac and Windows 0.7.12 build.\n. I can no longer reproduce.\n. ",
    "illuzen": "Came here to post this. +1\n. Yeah I wouldn't over-index on this. \nAs far as \"security thru obscurity\" goes, the relevant keywords here are \"anonymity set\". Maximal entropy is attained with the uniform distribution, which is perfectly symmetric. I think the overall goal should be to make Brave users look very similar to each other, not to make them look similar to Chrome users. Plan for success.\n. ",
    "Hainish": ":+1: \n. ",
    "Indyandie": "Would be great to have something similar to Atom. Have a tidy doc that you can just edit.. ",
    "Krutonium": "I would love to see an arch AUR solution as well.\n. Gotta love how that log file doesn't exist afaik.\n. That file doesn't seem to exist any more, but I can't seem to find the package to patch it to use a different download :/\n. How can I check the version of node I have installed?\n. Stupid Question, I am using https://nodejs.org/dist/v5.5.0/node-v5.5.0-x86.msi so 5.5.0 ofc.\n. npm install is running right now, yes.\n. ```\n\nelectron-prebuilt@0.36.3 postinstall C:\\Users\\pfckr\\Desktop\\brave\\browser-laptop\\node_modules\\electron-prebuilt\nnode install.js\n\nDownloading electron-v0.36.3-win32-ia32.zip\nError: GET http://brave.github.io/browser-laptop-releases/0.36.3/electron-v0.36.3-win32-ia32.zip returned 404\nC:\\Users\\pfckr\\Desktop\\brave\\browser-laptop\\node_modules\\electron-prebuilt\\install.js:22\n  throw err\n  ^\n Error: GET http://brave.github.io/browser-laptop-releases/0.36.3/electron-v0.36.3-win32-ia32.zip returned 404\nbrave@0.7.7 C:\\Users\\pfckr\\Desktop\\brave\\browser-laptop\n```\n-snip of map of the npm_module folder, quite large...-\n```\nnpm WARN EBUNDLEOVERRIDE Replacing bundled node_modules\\electron-rebuild\\node_modules\\npm\\node_modules\\glob with new installed version\nnpm WARN EBUNDLEOVERRIDE Replacing bundled node_modules\\electron-rebuild\\node_modules\\npm\\node_modules\\rimraf with new installed version\nnpm ERR! Windows_NT 10.0.11102\nnpm ERR! argv \"C:\\Program Files (x86)\\nodejs\\node.exe\" \"C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"install\"\nnpm ERR! node v5.5.0\nnpm ERR! npm  v3.3.12\nnpm ERR! code ELIFECYCLE\nnpm ERR! electron-prebuilt@0.36.3 postinstall: node install.js\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the electron-prebuilt@0.36.3 postinstall script 'node install.js'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the electron-prebuilt package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node install.js\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls electron-prebuilt\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Users\\pfckr\\Desktop\\brave\\browser-laptop\\npm-debug.log\n```\n. npm-debug.txt\n. The problem here is literally that it is trying to download a file that does not exist - I checked, it does not exist.\n. I can't figure out where it is requesting the file from in the file yet, but a valid download for it is https://github.com/atom/electron/releases/download/v0.36.3/electron-v0.36.3-win32-ia32.zip\n. Question, what is nodist?\n. Wait, so Brave will support both Firefox AND Chrome extensions?\n. Ah okay.\n. I have also had this happen on YouTube, see #284 (Unrelated, but it is occurring there.)\n. :+1: \n. Still Happening.\n. If you build without python, sqlite3 fails to compile.\nI will remove the NSIS Link\nWill do.\n. TBH I have no idea how to, I did this all online via the website. I'm going to do it all properly via normal git and make a new PR for my own sake.\n. @bbondy Question, should I set up the file to easily document reqs for Linux/OS X? Also, does it compile on Linux/OS X yet?\n. I think I am done with this, unless you want me to change anything else.\n. kk\n. I have no idea how to use Vim, and googling offers nothing of help :X \nDamnit Git...\n. Notepad is also useless for this because of the wrong type of line ending... :/\nNotepad++ seems to be a good bet, lets try to get it to use that...\nErrored on (86) in program files :/\nLets keep trying...\n. So I have it working with Notepad++, but I am not sure about how to actually tell it to squash. I've tried selecting the first commit and squashing everything, that didn't work. I've tried selecting the last commit and squashing everything, that didn't work but did tell me something about \"allow-empty\"... Help?\n. Finally! :D Did it!\n. No problem, I just wish Vim wasn't so damn confusing... nano plz.\nThat and Git. Git should be a bit easier for that...\n. rm -rf\nThe equivalent Windows command would be rd /s /q\nEven with that fixed, it doesn't seem to work...\n. I can't get any shell other than CMD or Powershell to pick up my system path. As for the build script, does it not make sense to have it work properly in a system standard shell?\n. But why would you not support it? By forcing people who want to work on this to install Bash or the like, you are adding unneeded complexity. Simply properly supporting the existing toolset on the host machine as much as possible, you can make it much easier to contribute.\n. @aviolentgrace Thanks :+1: \n. @osworx \n\n. How old is your computer? Anything that is less than a decade old can run x64 Windows.\n. @hoangtronghuy20 Did you bother to read this issue? It will be fixed eventually, but not yet.\n. I could see this being useful in retail locations as well. Up to this point the best implementation I have seen was Some custom browser running on Android connected to a 40\" Touchscreen at a Canadian Tire. It was easy to break by mistake.\n. ",
    "ritesh-pandey": "Brave build successful.\nnpm start gives following error\n\nbrave@0.7.12 start /home/ritesh/github/browser-laptop\nnode ./tools/start.js --debug=5858 -enable-logging --v=0 --enable-dcheck\n\nelectron \"/home/ritesh/github/browser-laptop\" --debug=5858\nfs.js:584\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\n                 ^\nError: ENOENT: no such file or directory, open '/home/ritesh/github/browser-laptop/node_modules/electron-prebuilt/path.txt'\n    at Error (native)\n    at Object.fs.openSync (fs.js:584:18)\n    at Object.fs.readFileSync (fs.js:431:33)\n    at Object. (/home/ritesh/github/browser-laptop/node_modules/electron-prebuilt/index.js:4:42)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n. ",
    "egorse": "+1\n. ",
    "0x20c24": "+1\n. made some time to 'debugging' this issue.\n\"npm install electron-prebuilt --save-dev  \" solved this issue, then i got an error message that tracking-protection module is missing.\n\"npm install tracking-protection \" has the following problem:\ngyp: node_modules/hashset-cpp/binding.gyp not found (cwd: ~/brave/brow\nser-laptop/node_modules/tracking-protection)\n\"npm install tracking-protection --unsafe-perm \" solved the issue, then got another error message that sqlite3 is missing.\n\"npm install sqlite3 --unsafe-perm \" solved that issue.\nHope this helps.\n. ",
    "stealson": "+1\n. ",
    "tw-statics": "+1\n. ",
    "ChristopheLux": "Working like a charm Kubuntu 15.10 Thanks\n. ",
    "rmoriz": "this still doesn't work, neither setting the envs 'PORT',  'BRAVE_PORT' or the npm config 'brave:port' has any effect.\n. ",
    "an-water": "Have you tried making sure you're on node 5.5.0, removing the node_modules folder and running npm install again? ref: #221 #230 \n. for future reference it's node -v. it's also in your error log output that i should have skimmed a little harder. :) \ndid you delete / reinstall?\n. ",
    "SavageCore": "No change after removing node_modules and re running npm install\nnode -v: v5.5.0 \n. Correct. \n. Thanks, @bbondy. I actually solved my issue by completely removing nodist and install latest node 5.5.0 offical package and to clarify if anyone sees this, I also removed node_modules directory prior to install.\n. ",
    "wrkerr": "This is a really important enhancement for me. I daily move between an Android phone, a linux home desktop, and a Windows work laptop. There are a handful of extensions that provide some important security and integration funcationality.\nLike the OP, I too need integration from a cross platform password manager, though preferably not one that stores your password database on their servers like LastPass. Enpass and Keepass are primary examples, though there are others. These are particularly effective when combined with an extension like Authy, which makes two-factor authentication much simpler.\nAdditionally, I would love to have support for some browser integration with a secure messenger that interfaces with android messaging. Signal Private Messenger by Open Whisper Systems is developing a Chrome web app desktop interface that would be wonderful to have. Telegram and others provide similar feature sets.\nLastly, there are several services which leverage browser extensions to provide a simple way to share text, links, and files between devices. Join and Pushbullet are two popular examples, and their browser extensions provide a great deal of multi-device integration and convenience. This would be a great addition.\nAll of these could be achieved if Brave gained support for Chrome extensions and web apps, rather than creating another ecosystem of exensions.\n. @weems, that makes sense to me. Thanks!\n. ",
    "SamHH": "Glad to see this is planned! +1\n. ",
    "nickschurch": "I'll add my voice to the need for some browser apps - keepass/lastpass is a must for me.\n. ",
    "thekevinbrown": "As a developer on Toolkit for YNAB I'd love to be able to support Brave as a platform.\n. ",
    "dogancelik": "You can use KeePass in Chrome and Firefox by using:\n- Chrome extension: Hostname in Title\n- Firefox extension: KeePass Helper\nThen enable \"An entry matches if the host component of its URL is contained in the target window title\", hope this helps.\n\nAlso Chrome extensions are not really necessary right now but allowing users to customize their pages with Userscripts would be a good addition.\nUserscript is a script that works on Opera, Safari, Chrome (6.6m users) and Firefox (1.2m users)\n. ",
    "ElijahLynn": "https://github.com/brave/browser-laptop/wiki/Brave-Development-Timeline\nSays, 1Password, Dashlane and Lastpass are implemented. \n. I am on .10 (Linux), I see support for 1Password and Dashlane in Preferences > Security. I am assuming .11 has the initial support for Lastpass?\n. Awesome, just updated and Lastpass is working flawlessly! I am now posting this from Brave! Sooo fast!!! MMMMMm..\n. +1 for Vim-like extension (or native support), scrolling, back/forward etc. . ",
    "stri8ed": "I am very much interesting in using Brave to try out the Bitcoin integration, but until there is support for WebExtensions, I cannot make the switch from Chrome.\nAdding extension support on a per-extension basis is not a great solution imo. Since you will never satisfy all users needs. All it takes is one missing extension for a user to abandon Brave in favor of an alternative.\n. ",
    "Kinnardian": "Is there a listing of extensions/add-ons that work already?\n. Any updates on this?\n. ",
    "TristanWiley": "Is there any way I can port my Chrome extension to Brave?\n. Sounds good, second question is. How do I add extensions?\n. ",
    "Cassolotl": "+1 'cause Tumblr is a site I use a lot and it is a NIGHTMARE without X-Kit.. @luixxiul On Github project things I've been involved with in the past, +1 is the way you express support for an idea. Is that not a thing on this project?\nI am not very techy and I don't really understand much of this conversation, but the lack of easy browser extension stuff on Brave means it can't be my main browser even though I love the idea of it in general. So I wanted to add my support for this idea.. ",
    "kmharper": "I'm like a lot of people who have largely switched to Brave, but can't entirely get away from Chrome yet.\nOne thing that helped me was to be able to use the Signal Private Messenger Chrome extension without actually opening Chrome (at least in Mac OS X).\n\nOpen Chrome and install the app:\n\nhttps://chrome.google.com/webstore/detail/signal-private-messenger/bikioccmkafdpakkkcpdbppfkghcmihk?hl=en\n\n\nGo to Finder and search (with quotes) \"Signal Private Messenger\" to find the app in your file system. You can browse to Applications > Chrome Extensions if that folder isn't hidden, but if it is, and you don't want to unhide it, just do the search.\n\n\nDrag it to your toolbar or make an alias of it. Now you can open it without going into Chrome.. \n\n",
    "codeduph": "I would like to try Brave as I'm looking for an alternative to FF. However, one thing I really love about FF is their Bookmark. I've try some Chronium Browser and add Extension \"Neater Bookmarks\" or  \"Popup my Bookmarks\" and it works fine and I'm feeling soon to switch and leave FF.\nI hope Brave would allowed user to use some unpopular 'Extension' soon. . ",
    "Zerophase": "The only plugins I think most people really care about are ones that change web page UI. I know personally, I couldn't get by without Stylish making all pages dark, and a couple of Chrome plugins that center Google search results. I'm pretty sure Stylish could be done through other means, and even use the altered css styles.. Doesn't the new version for release in October support all Chrome plugins?. ",
    "droplab": "I think there is quite a large user base for developer extensions also, react-dev-tools, redux dev tools etc... Figuring out how to achieve chrome extension compatibility in Brave would elevate this project to be a serious contender with chrome or ANY other browser. Thanks for all the work on this Brave team!. ",
    "danshumaker": "i'm really enjoying the speed of brave, and while I don't like the slowdown that plugins and extensions have on browsers, I would really really like to have the 1Password (Agilebits) extension working for brave. If and when that happens then I will gladly click the \"Make Brave my default browser\" button.. ",
    "qazip": "How is the support for chrome extensions going? I suppose one can not use chrome extensions on brave yet?\nI'm looking for support to the following:\n\nublock origin (I know you've support for blocking ads, but, for some reason, the invisible space is not being collapsed. I would also like to remove twitter, FB (etc) widgets. I can't seem to do that easily in Brave);\nVimperator: I need vim-like behaviour;\nDark background with white text: It blinds me having to read pages with white background;\nPinboard extension;\nUser agent spoofing could be helpful as well (not sure if Brave supports that, but on panopticlick.eff.org, I'm always unique in Brave, even with Fingerprint protection enabled);\n. \n",
    "c-u-b": "any advice on how to get kinjamprove on brave?. @jonathansampson i have briefly glanced at the instrux on medium, and it appears i need to install chrome.  is there any other way?. ",
    "tbartlett0": "I would like to add my voice to the request for this. Perhaps if it was done similar to the way Firefox can temporarily load an extension through the \"about:debug\" page... this would make it a lot easier (and therefore more likely) that I would test extension that I'm interested in.. @bsclifton  I've had a go at building from your fork but no success yet - haven't had time to troubleshoot what went wrong. Also, that's in a dev VM so I won't be able to run extensions on my main Windows install unless I can get a build running on there too... I'm a bit scared to try!\nI hope there is an option to enable this as a 'debug feature' in one of the official builds sooner or later.... ",
    "nickytonline": "@bsclifton, it's chrome-ext-downloader, npm install -g chrome-ext-downloader. See https://brave.com/loading-chrome-extensions-in-brave for info on how to do the whole song and dance. ;). ",
    "illegalnumbers": "So what troubleshooting and dev tasks are still required to get things enabled?. ",
    "rdbox": "add this application Privacy Possum allows you to block and randomize the fingerprint\n . ",
    "pkieltyka": "can we get an update on current status of a public/stable release for this? I need it before I can move over to Brave. ",
    "paanvaannd": "Something else I noticed about this behavior: my pinned NYtimes tab shows a blank spot (refer to screenshot below) where the audio playback status showed previously.\nOS: macOS 10.12 Beta 4\nAbout the issue:\n- there was no audio or video playing in the main page but for an animation (I assume it was a GIF, as I saw no playback controls for it) on the main page\n- the audio indicator showed that there was audio for the animation though there was not\n- upon refreshing the page a couple hours later, the animation is no longer there on the front page though there is another GIF further down the page (definitely a GIF, no playback controls there)\n- the pinned tab now has a blank area where the indicator was previously though there is no indicator there now\n- unpinning and re-pinning the tab does not fix the gap issue\n- creating a new tab for the same URL and pinning it results in a normally pinned tab without the gap as mentioned above\n\ne: for clarification, though I reopened the same URL with the GIF mentioned in the 3rd bullet point (which was not the GIF that caused the sound indicator to erroneously display in the first place, since that was removed from the front page) when testing pinning a newly created tab for the same URL, there was no sound indicator. It seems like something specific about that animation that was playing before in the first bullet point (the animation at the very bottom of this article, to be specific) that caused the indicator to erroneously display, as this second GIF does not cause the indicator to display though it was present in both cases.\nNOTE: upon visiting the link to the animation I had attributed to the cause of the erroneous indicator playing in the 1st bullet point in a newly created and pinned tab, there was no indicator displayed. The differences in this case were that this animation was not on the main page of NYTimes but in an article itself. Within this article, the animation takes on a click to play behavior whereas when it was on the front page of the site it had an auto play behavior. There was no other video or animation playing when the indicator was showing previously when this animation was auto-playing on the front page.\nTL;DR: Inconclusive results in testing for causes of erroneous indicator activation in the NYTimes website (refer to links above) so I don't know why it was activated in the first place. Further testing needs to be done on how the gap persistence behavior on a pinned tab can be reproduced and under what conditions the gap persists.\n. ",
    "joneschrisg": "I'm seeing the narrower issue of a gap remaining in the pinned tab area in Brave 0.12.1, OS X 10.11.6, when chatting in gmail pinned tab:\n\nThe audio snippets from chat notifications are pretty quick, so this smells like some kind of race condition.\nSince this is happening after the audio-playing indicator is being displayed correctly, should we file a separate issue for this rendering glitch?  (In other words, this issue could be resolved, but most likely the intermittent rendering glitch would remain.)\n. ",
    "aleclarson": "Getting an audio indicator for a <video> element with muted (and no audio track to begin with).. ",
    "aakilfernandes": "@diracdeltas respectfully disagree. WebRTC is a major concern for anyone wishing to browse online without revealing their IP. This includes anyone accessing content banned in their country. Anyone who uses a vpn or tor proxy would not be able to use Brave safely.\n. ",
    "HLFH": "IMHO btw, uBlock Origin can prevent leakage of our non-internet-facing IP address without disabling WebRTC.\n\n. wallabag is the open source alternative to Pocket. =D cc @nicosomb\nIt would be greater to integrate wallabag! \nIf Pocket is added to Brave, I hove that we will be able to remove it!\nThe Chrome extension for wallabag v2 does not seem to be entirely ready btw.\n. ",
    "nashe": "The WebRTC case was not mitigated by 35efd0e (but the geolocation requests and everything else are, as expected). \nNote that uBlock's WebRTC anti-leak is not perfect, most especially for browsers built around Chrome. Anyway, in the issues, some users are complaining about the fact it broke Firefox Hello or Hangouts and that they had to uncheck the option to be able to use it (and yes, you'll read things about \"VPN-as-browser-extension\" - wtf). \nMaybe the whole WebRTC functionality should be disabled by default everywhere and prompting for permission on whitelisted domains (Hello, Hangouts...)? Or prompting for permission everywhere and allowing it on whitelisted domains? \n. I took a look and I can confirm that there is no PermissionType related to WebRTC (most especially STUN) in Chromium: I think the displayed popup asking for permission only spawns because WebRTC needs to use the micro and/or the webcam of the user. That's maybe why the issue on electron was closed.\nOne easy fix would be to create a checkbox in the settings (checked by default, I guess?) and use Ublock's method. A harder one would be to create this kind of permission inside libchromium. You choose :)\n. ",
    "IVXCVI": "Yes! Thanks everyone. Looking forward to the fix.\n. ",
    "Szalacinski": "Any updates on this?  This is the only thing that is keeping me from switching over to Brave as my full-time browser.\n. ",
    "feross": "Is the goal just to prevent users being fingerprinted by malicious websites? The thing is that the browser already contains hundreds of ways to do this -- and I don't think Brave plans to prevent them all -- listing all fonts, screen resolution, detecting number of cores, etc. etc.\nI believe that Chromium has already\u00a0fixed the issue where a VPN user's real IP address could be exposed. See this spec: https://tools.ietf.org/html/draft-ietf-rtcweb-ip-handling-01\nHere's the problem statement:\n\nThe information revealed falls into three categories:\n(1)  If the client is behind a NAT, the client's private IP\n        addresses, typically RFC 1918 addresses, can be learned.\n(2)  If the client tries to hide its physical location through a VPN,\n        and the VPN and local OS supports routing over multiple\n        interfaces, WebRTC will discover the public address associated\n        with both the VPN as well as the ISP public address over that\n        the VPN runs over.\n(3)  If the client is behind a proxy, but direct access to the\n        Internet is also supported, WebRTC's STUN checks will bypass the\n        proxy and reveal the public address of the client.\nOf these three concerns, #2 is the most significant concern, since\n   for some users, the purpose of using a VPN is for anonymity.\n   However, different VPN users will have different needs, and some VPN\n   users (e.g. corporate VPN users) may in fact prefer WebRTC to send\n   media traffic directly, i.e. not through the VPN.\n\nHere's the solution:\n\nBy default, WebRTC should follow the route for HTTP traffic, when\n      this is easy to determine (i.e. not considering proxies).  This is\n      accomplished by binding local sockets to the \"any\" addresses\n      (0.0.0.0 for IPv4, :: for IPv6), which allows the OS to route\n      WebRTC traffic the same way as normal HTTP traffic, and allows\n      only the 'typical' public addresses to be discovered.\n\nSince the default route is used, the gathered IP address should be the same as the VPN route's. At least, that's how I understand it.\n. From the same spec:\n\nBased on these ideas, we define four modes of WebRTC behavior,\n   reflecting different privacy/media tradeoffs:\nMode 1  Enumerate all addresses: WebRTC will bind to all interfaces\n           individually and use them all to ping STUN servers or peers.\n           This will converge on the best media path, and is ideal when\n           media performance is the highest priority, but it discloses\n           the most information.  As such, this should only be performed\n           when the user has explicitly given consent for local media\n           access, as indicated in design idea #3 above.\nMode 2  Default route + the single associated local address: By\n           binding solely to the \"any\" address, media packets will flow\n           through the same route as normal HTTP traffic.  In addition,\n           the associated private address is discovered through\n           getsockname, as mentioned above.  This ensures that direct\n           connections can still be established even when local media\n           access is not granted, e.g. for data channel applications.\nMode 3  Default route only: This is the the same as Mode 2, except\n           that the associated private address is not provided, which\n           may cause traffic to hairpin through NAT or fall back to the\n           application TURN server, with resulting quality implications.\nMode 4  Force TCP and proxy: This is disables any use of UDP and\n           forces use of TCP to connect to the TURN server or peer.  If\n           a proxy server is configured, the TCP traffic will be sent\n           through the proxy, with resulting quality implications.\nWe recommend Mode 1 as the default behavior only if cam/mic\n   permission has been granted, or Mode 2 if this is not the case.\nUsers who prefer Mode 3 or 4 should be able to select a preference or\n   install an extension to force their browser to operate in the\n   specified mode.  For example, Chrome users can install the WebRTC\n   Network Limiter extension for this configuration.\n\nIt looks Mode 2 is the default for sites that are using WebRTC data channel (i.e. the user hasn't enabled webcam/mic access). But if the user does give webcam/mic access (which are considered more sensitive than IP address), then Mode 1 is used.\nSo, it seems there may be value for Brave users in ensuring that Mode 2 is always used -- or there's at least an option to enable that. That will let users use a webcam service over a VPN without revealing their real IP to the remote user.\n. > @diracdeltas it does suggest user approval via a prompt but the major browsers haven't implemented this yet.\nAre you referring to this quote from the spec? \"Future versions of browsers may present an indicator to signify that the page is using WebRTC to set up a peer-to-peer connection.\"\nI don't think any major browsers plan to implement user approval via an actual prompt. The spec refers to an indicator (like an icon) to show that webrtc is active. Since there is already user approval for webcam/mic access, a separate prompt for webrtc access would probably confuse most users.\n\n@diracdeltas I think we are going with the ublock method for now\n\nAm I right in interpreting this as \"Mode 3\" from draft-ietf-rtcweb-ip-handling-01?\n\nMode 3:  Default route only: This is the the same as Mode 2, except\n            that the associated private address is not provided, which\n            may cause traffic to hairpin through a NAT, fall back to the\n            application TURN server, or fail altogether, with resulting\n            quality implications.\n. @diracdeltas Thanks for explaining. That sounds very reasonable.\n\nJust to clarify one last point: I'm pretty sure that \"We propose that this permission grant be expanded to include consent to allow WebRTC to access all IP addresses associated with the user agent\" just refers to re-wording the webcam/mic prompt to mention IP addresses. I don't believe there are plans to prompt for local IP addresses when WebRTC data channel is used, for instance.\nThe spec says:\n\nWe recommend Mode 1 as the default behavior only if cam/mic permission has been granted, or Mode 2 if this is not the case.\n\nI believe this is what Chrome and Firefox currently do.\n. The next version of standard (v6, due shortly) will allow you to modify rules on a one-off basis by adding this to package.json:\njson\n\"standard\": {\n  \"rules\": {\n    \"prefer-const\": 2\n  }\n}\nExtending the eslint shareable config is cool too :)\n. The target URL is internal-only and controlled by us, so I think that we can assume it will always be a magnet link or torrent file. This seems to be the assumption that is made by the analogous getSourceAboutUrl function. Correct me if I'm wrong?\n. Will remove\n. Intentionally trying to catch undefined and null, and != is shorthand. Can make it explicit if you want.\n. We need the iframe to actually have an origin of http://localhost:xxxx so that it can make http requests to the server at that same location. Otherwise, the existence of sandbox makes the iframe have it's own, unique origin.\n. Good catch, will fix\n. This is the torrent name, I don't think we can localize that\n. Probably not, I'll test it without that\n. This was only needed when webtorrent was running in a <script> tag in the chrome extension, so it could connect to http web seeds, and websocket servers. Not needed anymore\n. Oh, nevermind. You mean the next lines. Gotcha\n. This doesn't seem to actually redirect the browser to the given Location header. Instead, it loads about-error.html page. Any ideas?\n\n. None of the changes below this line should be substantive. They just remove repetition that might accidentally allow the dev and prod versions of the CSP to diverge.. This let's us use the DOM node #appContainer right away, without waiting for DOM ready.. This .torrent file detection is pretty conservative. It looks for a torrent mimetype, and only uses the \".torrent\" extension to indicate a torrent if the server sets the 'content-type' to 'application/octet-stream'.. Pulled this into its own component. Fix race condition where media is briefly added to . If there is no file object yet, but there is a serverUrl, then an iframe is added to the page, instead of a \"Loading...\" message.. For http torrent links, we use a hash symbol instead of a query param to indicate the file that is selected, since we don't want to add random query params to the URL, which could cause the server to 404 if it doesn't like it.\nFor magnet links, adding a query param is acceptable since unknown keys are ignored by all torrent clients.. Magnet links get a \"Copy Magnet Link\" button, instead of \"Save Torrent File\" which made no sense.. This is where you can see how torrent links and magnet links are handled differently.. Added a much more descriptive comment here. We're not relying on this IPC succeeding before the page is unloaded. (It only succeeds like 50% of the time.). These handlers make the UI snappier. Lots of fixes went into the next version of webtorrent-remote to support this PR. Published this to npm since it's reuseable and useful in other contexts. It's simpler than the other copy-to-clipboard solutions out there. Unfortunately, this is not just a simple one-liner.. ",
    "taoeffect": "OK, decided to dive down into this. Here's what I found.\nChrome 51.0.2704.63\nVPN disabled:\n\nVPN enabled:\n\nFirefox 47\nVPN disabled:\n\nVPN enabled:\n\nConclusions:\n\nBoth Firefox and Chrome do not seem to leak my public IP.\nFirefox leaks my local private IP\n\nSo I'm surprised that the problem seems to be (solved?) in Chrome, but then again I can't be 100% sure because:\n- I may have tweaked some setting some time ago when I was investigating this\n- One of my extensions may be \"fixing\" Chrome. I tried in Incognito mode where only (I think) HTTPS Everywhere and Ghostery were enabled.\n. Would be great if someone could try reproducing!\nHere's the site I used: https://diafygi.github.io/webrtc-ips/\n. ### Brave 0.10.3\nVPN off:\n\nVPN on:\n\nVPN switch:\n\nConclusions:\n\nBrave is the same as Firefox when VPN is on\nThis time I noticed that when I switched on the VPN while staying on the page, it updated itself, almost as though \"sorta refreshing\", but still saw my real public IP, while also getting my VPN's local IP. I did not attempt to see if the other browsers had this behavior. A refresh of the page is what is shown in the \"VPN enabled\" screenshot.\n\nI should add that both Brave and Chrome will, when not behind a ~~firewall~~ VPN, generate an outgoing connection on port 3478:\n\n. > @taoeffect without a VPN or any extensions, https://diafygi.github.io/webrtc-ips/ correctly identified both my public and local IP on both chrome stable and brave stable, which is what I was expecting. my goal is to fix this in the next release at least when fingerprinting protection is turned on.\nAwesome! ?? \nAnother thing possibly worth considering is to have it disabled by default, but prompt the user when a page uses WebRTC, similar to how browsers request permission for camera or location.\nAlso, apologies for the gigantic screenshots, that's OS X making them huge because of the retina display. It really should downsize them...\n[--- Commented from Asana.com\ncommenter brad richter\n---[aa]\n. ",
    "fippo": "@taoeffect i've shown that a prompt is feasible on mozhacks last year -- and yet I could not get anyone (including myself) in the IETF WG to agree this solves the problem in any way.\n@diracdeltas the paper you're quoting fails to acknowledge unlike when webrtc was first used for tracking the number of ip addresses returned has been somewhat reduced. The lack of a reference to the  ip handling draft made me wonder if the authors are aware of this even (just look at this thread: the draft is highly relevant and wasn't part of the discussion until a few hours ago -- thanks @feross).\nGiven that most of the trackers seem to be copying the same crappy piece of code without understanding it I hope they haven't noticed it is broken.\nIf you want to stub things in a content script you might find this useful. Also for exposing sites that try to use WebRTC hoping you don't notice.\n. ",
    "juberti": "Yes, Chrome has Mode 2 on by default, and uses Mode 1 when gUM permission is granted.\nAs @feross mentions, the study was done before this change was made, and I believe that Mode 2 makes a significant difference in reducing the fingerprinting surface, which should reduce the frequency of this technique in the wild.\nRegardless, Mode 3 seems like a reasonable approach for the special minimal fingerprinting mode, as discussed in rtcweb-ip-handling:\n\nUsers who prefer Mode 3 or 4 should be able to select a preference or\ninstall an extension to force their browser to operate in the\nspecified mode.\n. Sure. There is a performance penalty for disable_non_proxied_udp, so one could imagine a future hybrid setting that was Mode 4 by default, but a less restrictive mode if gUM permission is granted.\n. \n",
    "prkeshri": "Hello guys,\nSame thing happening in my side too.\nWhen I extracted the electron.asar file and wrote a couple of log statements, the following is the output (for any url):\ndid-start-loading\ndestroyed\ndid-start-loading\ndid-get-response-details\nload-commit\ndid-navigate\ndestroyed\ndid-start-loading\n.\n. and so on in the same loop\nThe webView always fires these in the order in a loop. I need to know why does it get destroyed always?\n. Same case here. When I do npm start, everything runs like butter, the facebook,google everything load successfully, but after I make a package out of it, it just keeps on spinning indefinitly. The title changes, though, but the page remains blank!\n. This is happening with tracking-protection.\n[Content]\nUncaught Exception:\nError: The system cannot find message text for message number 0x%1 in the message file for %2.\n\\?\\C:\\win\\browser-laptop\\node_modules\\tracking-protection\\build\\Release\\tp_node_addon.node\n    at Error (native)\n    at process.module.(anonymous function) as dlopen\n    at Object.Module._extensions..node (module.js:440:18)\n    at Object.module.(anonymous function) as .node\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at Object. (C:\\win\\browser-laptop\\app\\trackingProtection.js:8:28)\n    at Module._compile (module.js:413:34)\nAny solution?\nWhat I am using is:\nNode. v6.1.0\nVS-2013\n. But the tracking-protection is compiled for the same arch. (32-bit) only. Same is the case with abp-parser-cpp too! Any solution?\n. ",
    "daanlenaerts": "I'm having the same issue, both on Windows as on OS X. When packaging as an app I get the following error message.\n\n. Issue #219 is about the same problem.\n. ",
    "rixrix": "Hi,\nhad the same error but because I was on Node v4 (README), had to switch to Nodev5 and cleaned up the node_modules and did the following:\n$> npm run watch\n$> npm run start <-- should be run on a separate terminal\nhope that helps ;)\n. oh bugger!... apology for that @cwramsey - maybe a gist of the logs ?\n. ",
    "cwramsey": "Unfortunately it didn't @rixrix. Same exact response. Thanks for the suggestion though!\n. ",
    "bnvk": "This would be great to have :+1: indeed!\n. ",
    "wastedsunsets": "Dark theme would have this browser as my daily driver.\n. ",
    "idprism": "upvote. more likely to use applications that dont hurt my eyes on open.\n. ",
    "yannduran": "\ud83d\udc4d . \ud83d\udc4d . ",
    "ace72": "+1 dark theme as of now cant use this browser at night hurts my eye i hope this gets implemented real soon!. ",
    "pietercdevries": "Is this issue resolved yet? I love the browser but I'am forced to use chrome since I can install dark theme on browser and Gmail. I have a sensitivity to light and already have my displays brightness down. Thanks. Thank you very much!. ",
    "ninthbelief": "Just commenting to say that I'm interested as well. The lack of a dark theme is the number one reason I haven't switched to Brave yet.. ",
    "NamedKitten": "Working on it.. ",
    "eljuno": "+1 from community. +1 from community https://community.brave.com/t/dark-theme-is-a-must-for-you-guys-it-is-really-critical/6726?u=eljuno. +1 from community https://community.brave.com/t/win64-laptop-v0-19-95-general-feedback-minor-issues/11283?u=eljuno. +1 from community https://community.brave.com/t/please-for-the-love-of-some-deity-add-a-dark-theme/12174?u=eljuno. @h3298 please see comment above https://github.com/brave/browser-laptop/issues/271#issuecomment-383998029 for dark theme.\nAnd brave-core will have more extensions support. https://brave.com/development-plans-for-upcoming-release/. +1 from community. +1 from community https://community.brave.com/t/install-locations-for-computers-with-nvme-drives/7988?u=eljuno. +1 from Twitter https://twitter.com/KimeraGaming/status/974044929616887808. +1 from community https://community.brave.com/t/how-to-change-installation-directory/22021?u=eljuno. +1 from community. +1 from community. +1 from community https://community.brave.com/t/reader-feature-for-desktop-version/12201?u=eljuno. +1 from community https://community.brave.com/t/please-install-fido-u2f-functionality-as-soon-as-you-can/11384?u=eljuno. +1 from community https://community.brave.com/t/about-config-equivalent-for-brave-to-tweak-settings-when-necessary-please/13759?u=eljuno. +1 from community https://community.brave.com/t/about-config-on-brave/18539?u=eljuno. ",
    "JackDinn": "Me too, it will be my default browser if a dark UI can be achieved. Please please cos i really like this browser and FF is dying a death v soon.. Ahh, I was getting excited when i see a Brave update today , i updated it with fingers crossed and .... booo ,\n\"This is not the update you are looking for\" .... I cant feel the force just yet :(. This about the 3rd/4th update since i started waiting but still no dark theme, thought it was coming in the \"next\" update :-/ O well im not going anywhere.. dont kid yourself they are never going to do a dark theme. just move on.. they were hard coded which is why they will have a hell of a job to change it and they have much more important things to be doing which they will continue to have. Im not saying definitely never but i personally just dont see it. Plus in the next year or so who knows what other browser offerings there might be.. ",
    "JonnyRedHed": "Dark UI mode will be great. But you could also go the extra mile and also include ALL settings, extensions etc pages in the dark mode UI once turned on.   Maybe even alow each settings page to override dark mode if one so desires.    Making it a full and proper dark mode, front UI and back end pages and UI dark mode.  Mirror over to Android as well please.\nSee a long post here:\nhttps://github.com/brave/browser-laptop/issues/1090#issuecomment-317223311. Dark UI mode will be great. But you could also go the extra mile and also include ALL settings, extensions etc pages in the dark mode UI once turned on.   Coming from a dark webpage made dark by either Stylus or 'Care your eyes' extension (chrome based, Opera etc) onto a bright white background settings page late at night just kills the night eyes.\nAnd also including any drop down menus and of course the page right click context menu/sub menus.\nMaybe even allow each settings page to override dark mode if one so desires.    Making it a full and proper dark mode, front UI and back end pages and UI dark mode.  Mirror over to Android as well please.   \nBe the first dev team to have truly dark mode UI right through the browser on all platforms.\n\nBut until then...\nCare your eyes - chrome extension - can be used in Opera, Chrome, Vivaldi etc.  Good for random web pages you want dark.  Uses a nice dark brown hue for the dark mode which is quite a nice balance of night time or dimmed room colors. Remembers top level domains.   Dev is working on remembering single pages rather than just top level domain.\n*set up: choose white list mode,  then just use the 'Enable at this site'  to make a page dark and have it remember.     Very easy for those random web pages and articles you want dark.\nhttps://chrome.google.com/webstore/search/care%20your%20eyes\n--\nStylus - better than Stylish - no data mining etc of your history and habits.\nhttps://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne?hl=en\nStylus Dark UI - Manage styles page etc with the stylus UI in dark mode.\nhttps://userstyles.org/styles/142097/stylus-gray-matter-chromium-based-or-firefox\n\n\nI have no connection to stylus or the care your eyes extensions.. Can I ask what the dev team think about extending the dark mode onto ALL the back end settings and extension/security pages.  \n\nIncluding any drop down menus, and of course the page right click context menu/sub menus. Right click context should logically also be dark when the dark mode UI is turned on.\nVivaldi seems to do this quite well, but does not go far enough with also including the drop down menus and the on page right click context menu.\nIf dark mode UI is worth doing, then its worth making everything dark including the above.   Maybe have a section in the settings where some adjustments can be made. Such as no including the right click context menu if the user prefers that default white. . So the normal on page right click context menu can't just have a darker background and light grey text and lines etc.\nFor example, see this FF dark context menu style for Stylus/Stylish.  (your have to install it on FF to see it).\nhttps://userstyles.org/styles/98802/dark-context-menu-for-firefox\n. I see, thanks for explaining.\nThen maybe all the back end settings pages etc soon for darkmode UI and the drop down menus and all right click context menus could be a longer term later down the line.. So, are the dev team going to implement extending the dark mode onto ALL the back-end settings and extension/security pages etc.  Is this something you can do soon. \nMaybe also add some settings which show once dark mode is turned on.\nHaving a full and complete (UI and all settings pages) dark mode UI early on will really enhance the Brave browsers appeal.   Especially to night owls!   \nAnd then maybe later on down the road try and also implement dark mode onto all drop down and right click context menus, again with settings to turn that off if the user prefers default backgrounds on right click context menus whilst in dark mode UI. \nSettings for all!. Brave devs,  please just give us the dark UI and all settings/security/extensions pages as well.  Very important to also cover the back end pages for a true dark mode UI.    And then in time work on also allowing the on-page right click context menu and all over drop down menus to have a dark mode option.   But include settings for those, so one can turn dark mode off for right click and drop downs if default white backgrounds is preferred.  \nBack end settings/security/extensions and flags etc can also have toggle switches at the top of each page so when the main dark mode UI is turned on the switches are active so you've the option to turn back to default white BG on some or all settings pages.\nSetting for all.. Maybe in the future of web browser and other software development, the thought of dark mode UI's will be designed/baked in right from the concept phase. So it is easier to implement and fine tune.\nHaving a dark mode UI for the main browser to me also logically means all back end pages, add-ons/extensions, about, settings, security, shields, experiments/flags.    And also optional drop down menus and on page right click context menu option for having that dark as well.   All with settings so the user can customise fully or just a little.  \nDark mode UI in the true sense.. @luixxiul  I don't know code sorry to say.  But I do know 100% what a I want to see and use as and end user.. Proper dark modes are just expected nowadays as we move into 2018, well I expect them anyway from a new browser like Brave.   I have dark everything, everywhere when possible.  Should be there as an option for everything in my opinion.  Please consider moving it back into the important features of your developments 2018 timeline.. Yes not just creating your own dark mode UI, but also some way to darken all your webpages you visit.  Either like the 'care your eyes' extension below. And or allow the Stylus extension as well so we can add page styles.\n\nCare your eyes - chrome extension - can be used in Opera, Chrome, Vivaldi etc.  Good for random web pages you want dark.  Uses a nice dark brown hue for the dark mode which is quite a nice balance of night time or dimmed room colors. Remembers top level domains.   Dev is working on remembering single pages rather than just top level domain.\n*set up: choose white list mode,  then just use the 'Enable at this site'  to make a page dark and have it remember.     Very easy for those random web pages and articles you want dark.\nhttps://chrome.google.com/webstore/search/care%20your%20eyes\n--\nStylus - better than Stylish - no data mining etc of your history and habits.\nhttps://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne?hl=en\nStylus Dark UI - Manage styles page etc with the stylus UI in dark mode.\nhttps://userstyles.org/styles/142097/stylus-gray-matter-chromium-based-or-firefox. Supporting Stylus, - chrome extension will be perfect for a more permanent website darken.  And and the 'Care your eyes' - chrome extension for just random white BG pages you want to just change in the moment.  \nBut,  if the Brave devs really wanted to take a big 'darker web page' leap forward they could take a good look at the 'Care your eyes' - chrome extension and integrate the best dark options into Brave itself. So one can choose from a few different styles of darker themes.  Have it remember not only the domain level but also just the webpage level.  With a remembered domains/pages settings backup option.  \nThen once they do implement the first iteration of dark mode UI, they would also have an integrated on-page dark mode as well.  The first browser to have both dark UI and its own webpage darken feature.\nPretty interesting idea I think....  and also support Stylus :). For me its more than just the UI that needs to be dark.  Having support for Stylus is also important.  I make every dark when I can, not black dark but dark deep blue/grey etc, dimmed white text etc.   And when not using stylus and I come across a white BG news article etc, I use the chrome extension 'Care your eyes'.\nSo can we have support for at least Stylus please.  Your own Dark UI will be great, just like when Opera added there dark mode UI.      Also the back end settings pages, extension page etc would be good to also have dark.    \nI'm no coder so cannot help out in this respect, and it has been explained to me its tricky to do for Opera and Brave adding a dark mode Ui for the background settings pages and drop down menus and on page right click mouse context menu.   But having it on the drop downs and right click context menus would be really cool, once dark mode is turned on.  Maybe have settings section so one can fine tune what parts of the UI are dark, as some might still prefer light default right click context and drop down menus.\n\nAn old post below here showing Stylus and Care your Eyes links. And how to make pages dark with care your eyes.\nFor me at the moment to make web pages dark, the best two options are below in my opinion.\n'Care your eyes' - chrome extension - can be used in Opera, Chrome, Vivaldi etc. Good for random web pages you want dark. Such as some white background article you land on etc but may never return to that site.\nCare your eyes uses a nice dark brown hue for the dark mode which is quite a nice balance of night time or dimmed room colors. It also Remembers top level domains. Dev is working on remembering single pages rather than just top level domain.\n*set up: choose white list mode, then just use the 'Enable at this site' to make a page dark and have it remember. Very easy for those random web pages and articles you want dark.\nurl:\nhttps://chrome.google.com/webstore/detail/care-your-eyes/fidmpnedniahpnkeomejhnepmbdamlhl\n--\nStylus - better than Stylish - no data mining etc of your history and habits.\nFar fewer permissions than stylish.\nhttps://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne?hl=en\nStylus Dark UI - Manage styles page etc with the stylus UI in dark mode.\nhttps://userstyles.org/styles/142097/stylus-gray-matter-chromium-based-or-firefox. Supporting the extension Stylus would be a big step for allowing users to darken the webpages they visit.  And then in time (and its been some time already) your add a dark UI including all the back end settings and extensions pages :). A dark UI, like Opera (stable), and in time extending the dark UI onto the back end pages like Opera developer browser is doing now for 'settings' and 'update' and 'experiment' pages.  They have yet to make the extensions page part of the dark mode UI.  \nI hope brave follows this example.\nAnd then, for me they just need to allow the Stylus extension, then we can import our own set of dark styles or hunt for them on userstyles.org.  And for those pages I just happen upon that I want to darken just to read an article or what ever, then I use the 'Care your Eyes' Extension.  Its night time mode is a nice dark brown hue/blend.  . Brave supports neither at the moment.. There is no dark mode UI to enable. Not yet at least, thats the whole point of this request thread.. So this is work in progress, to be released at a later time.\n@tomlowenthal   you mention, 'but there's also wide extension support which includes Dark Reader or similar tools.'. Is this available now or coming up soon.  When you say similar tools do you mean the extension Stylus?   I have 150 Stylus styles I use across browsers, and would love to load them into Stylus on Brave browser.\nAm very much a dark webpage user.   I currently use the dark website extension called 'Care your Eyes', as it gives a nice dark brown hue to webpages.  \nIf you have followed the Opera browser devs they have been working hard on correcting the tab bar for lots of website icons. Either they are seeing these stats reported by the browser or just working thru a list of the webs most visited websites. I'm guessing from stats reporting in browsers with those users who have it turned on.  They have been better matching the dark mode UI with fav icons,  either replacing the fav icons or working on the edge aliasing effects for them so they stand out better.\nI assume Brave devs will also be doing this.\nAlso with this latest Opera version https://blogs.opera.com/desktop/2018/08/opera-55-0-2994-44-stable-update/  they have migrated over the dark mode for the settings page from the dev browser. Along with some pop-up warning windows in dark mode.  \nAlso the stable channel release also has the update and recovery page in dark mode.  And they are actively working on the webpage right click context menu, and other drop down menus all being dark when the main dark mode UI is turned on.   All looking very good so far.     Opera, Brave and Vivaldi should be among the best browsers having full on dark mode UI's.\nKeep up the good work!. Shouldn't this be left open, for further comment by users.. I couldn't get BraveBrowserDevSetup.exe to install.   . ",
    "AAGZ0921": "Yes, I can't wait, I want to ditch chrome for good, F.lux is good, but not enough.  hopefully this becomes a reality very soon.. Still waiting on this.  Been too long.  I get updates almost daily, nothing, zip, zero, nada.  I'm just going to move back to firefox.. ",
    "egferro": "Please also allow to change theme and color,  grey really sucks. Other than than fantastic job!   . ",
    "ChocoTaco1": "Literally the only thing holding me back from using your browser over vivaldi or firefox. ",
    "hladf": "any news about dark theme?\nwhy not make the dark a default theme??????????\n. ",
    "xywolap": "Great browser but UI is blinding!!!!!...far too bright.  Just an option for say a dark grey or similar background would help.\n. I found a fix... I deleted brave and installed firefox... all is good (perfect actually). ",
    "nimnimnim": "Keep up the good work!. ",
    "A9G-Data-Droid": "I just looked through the settings expecting to find a dark option. I'm glad this thread is already rolling with steam. I use Brave all the time and I'm looking forward to the new theme!. No need for pessimism @JackDinn. What seems hard is sometimes easy. What seems easy is sometimes hard. It sounds like they coded the UI in a way that would make a simple change like color more difficult than it needs to be. The same thing happens with localization projects. If you don't code your entire project to have variable text from the beginning it can be very difficult to change every declared string to a variable and then point those variables to a selector that can pick translated strings. This is similar. They need setting that can change every color in the whole project. These colors may have been hardcoded instead of having variables.. No need to be so salty, Larry. You're on GitHub... Take a look at the code yourself. You can help if you want. You don't need an invitation or to \"come on\".\nIf you sort the issues by \"Thumbs Up\" you can see that this is the #2 most important issue to the community. I think they know.. Still being salty.\n\n(Internet slang, derogatory) Indignant or offended due to over-sensitivity, humourlessness, or defeat (implying the person is a crybaby, shedding salty tears); said of interlocutors expressing indignation, or merely disagreement.\n\nImportance is relative to whom. Notice I validated \"to the community\". The community in this case being people who have voted here, as suggested many times; \"Rather than commenting +1, please put a +1 as a GitHub Reaction\". This suggestion makes it easy to see, by sorting on thumbs, what issues are important to the community. Why did I have to explain that to you?\nNow that you've retorted with an assumption which may be incorrect I suggest you use your \"open source developer\" skills to back up your words with actions. Get to work.. I never stated I would. I merely pointed out that you are being rude and you are welcome to do as you said:\n\nDo you need me to come on and write it for you?\n\n. It's still in \"planning\" stage. It's not even marked \"In Progress\" yet. This issue has the #1 most comments and the #2 most thumbs up. I would like to see it move to \"In Progress\" at least. . If people could load their own extensions they could do anything they want. I think that is also a feature that is coming soon. Then the browser can be as light or feature rich as you want. . ",
    "eighteyes": "I can't look at big patches of white. Until you add dark mode, or another extension to invert web site colors, I cannot use brave. I like consuming text, and I would pay writers via brave if I could consume text comfortably. But I cannot. \nThis is a business decision. Take it upstairs! :). ",
    "VincentBurke": "+1 to dark mode, I'll switch from firefox happily once this is implemented!. ",
    "kj4ezj": "I would really just like Brave to import the Chrome extension Deluminate for this purpose. Deluminate is perfect!\nhttps://chrome.google.com/webstore/detail/deluminate/iebboopaeangfpceklajfohhbpkkfiaa. ",
    "swiftaes": "+1 for dark mode, light sensitivity is lame. ",
    "bwydro": "been using Brave for the last 3 months or so - the dark mode is the last thing that is missing :-) Please make it happen. . ",
    "pdimri": "I like this browser a lot but waiting for dark mode to come so that I can make it my default browser. I am bit disappointed. Till then I am going to use Caf based browser for night mode. . Any timeline to get this feature ? I m using Caf based browser once brave\nhave this feature I can make it my default browser.\nOn Jan 10, 2018 at 9:57 PM, notifications@github.com> wrote:\ndark mode is needed, ASAP. I hate light themes.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/271#issuecomment-356817668,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AhfiT-eO6L4Egf8Y4aKsVLVSAqr2t2Leks5tJYajgaJpZM4HK8kd\n.\n. New update landed on my phone but nothing related to dark mode. Please implement something like Samsung browser's dark/ high contrast mode. I have high expectations from brave team .. I already left the browser. I am using yandex + chrome dark extension , it\nworks for mobile\nOn Thu, Feb 22, 2018, 7:21 PM iFreeFrak notifications@github.com wrote:\n\ni started using the browser today and i leaving the browser until they add\nthe dark theme\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/271#issuecomment-367879185,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AhfiT9Z7VF3_JSP9lL9IrcqWyhLgnifKks5tXhKCgaJpZM4HK8kd\n.\n. Is night mode too hard to implement from dev perspective? It\u2019s actually most awaited and desired feature from brave team.. \n",
    "informationeagle": "Definitely implement a dark mode or theme but, in the meantime, f.lux did help... a lot.  I had glossed over it a while ago but didn't quite get it.  Now, thanks to the Brave Community, I am beginning to see how nicely done it is.  I just read that the dark mode is closer to launch; thanks for an excellent browser and keep up the great work!\n  . ",
    "u147865": "dark mode is needed, ASAP. I hate light themes.. ",
    "midnitehack": "I am a 3 day brave groupie. Love the spirit behind the project. Its hot. But my eyes are dying researching and trading cryptos for hours on end on a 32inch monitor. The other groupies are not just talking about this dark theme. It is beyond critical. It is beyond needed. It is worth 1 satoshi a piece contribution from everyone here... Please lets get it this new year, 1st Q. Thanks for listening to your devoted bravers.. ",
    "Monakiel": "Yes, I'm waiting for it too ! +1. I'm gonna leave Brave in two weeks max if they do not put dark mode. . ",
    "Gmike901": "MY EYESSS!!!\nTried to make the switch today, but can't live without dark UI / night mode (RES).. ",
    "MuchAtHome": "+1 ASAP .... ",
    "adamlacombe": "\ud83d\udc4d. ",
    "fiatphos": "+1 for dark UI, please. \nMay I suggest something like a color-inversion feature, if it can be implemented sooner? I use this extension (High Contrast - picture attached with this comment) in Chrome to invert the color of the pages. I do have to disable it occasionally on some pages - such as pages with lots of pictures - but for the most part I keep it enabled all the time and I am able to browse the web with much less strain to my eyes.\n\n. ",
    "RobLoach": "@fiatphos This is about the User Interface being dark. For the content of the websites being dark, I'd suggest checking out Stylish over at https://github.com/brave/browser-laptop/issues/5727 .\nFor everyone else, rather than commenting +1, please put a :+1:  as a GitHub Reaction, and hit Subscribe. Will save from random notifications that have nothing to actually contribute.. ",
    "souziago": "Migrating from Firefox... No Dark mode... Migrating to Firefox.... ",
    "iFreeFrak": "i started using the browser today and i leaving the browser until they add the dark theme. ",
    "ChrisSalisbury": "+1. ",
    "jeppestaerk": "+1 \ud83d\udc4d . ",
    "stianmandarin": "+1. ",
    "jlawhon": "Adding a +1 to this.  Working in a semi-lit environment, the start-white is harsh on the eyes.  Options to reduce the glare would be most appreciated.. ",
    "dhniels": "Tossing my hat in the ring for a dark mode - would be a really nice feature. Seems like a lot of sites nowadays are offering night modes and being able to toggle brave browser interface to night mode along with the website would be nice :). ",
    "AceFO": "+1. ",
    "iamaya": "2 years and still waiting.. + 10 Million. Please implement Dark Mode.. ",
    "wwwdata": "As far as I understood from this blog post here: https://brave.com/development-plans-for-upcoming-release/\nthis ticket is going to be obsolete when the switch to the chromium frontend is done. Is that correct? . ",
    "hojsone": "+1\nPlease add Dark theme(Mode) so I can completely migrate to Brave, for now I cannot use it much as it is too bright. \nLooking forward to the Dark launch!. ",
    "jonl-percsolutions-com": "Could we not just ad this extension as a stop gap or for those that don't want a full theme:\nhttps://chrome.google.com/webstore/detail/high-contrast/djcfdncoelnlbldjfhinnjlhdjlikmph. ",
    "MariaCobretti": "I am blinded. ",
    "Alrikja": "+1 \ud83d\udc4d. ",
    "jubbbird": "I intend to do a primary browser trial just as soon as there's a dark theme.. ",
    "tron-solo": "+1. ",
    "killernot": "Why is this not yet implemented?. ",
    "betegon": "+1. ",
    "KHarker": "+1 \ud83d\udc4d. ",
    "greyl0ck": "+1 \ud83d\udc4d. ",
    "tconn89": "\ud83d\udc4d \n+1 for Dark mode!. ",
    "so-lost": "+1 \ud83d\udc4d. ",
    "kekukui": "When you say \"Dark UI\" there are really two separate issues here: a dark theme for the browser, and a night reader mode for web sites.  While TLV and Dark Reader both have 5-star ratings in the Chrome store, Dark Reader has a much larger user base.  I have not tested TLV, but did try everything else I could find in the way of night browsing extensions.  The result of those tests is that Dark Reader seems to make the fewest mistakes when inverting bright pages and graphics.  After browsing thousands of sites over several months, I only found a couple dozen which Dark Reader did not handle adequately... and development is constantly progressing.  I would have tested TLV too, if it worked on Firefox like Dark Reader does.  So I would suggest that TLV or Dark Reader should be incorporated as default options in Brave.  Unfortunately, I cannot use Brave on a regular basis without a night reading mode.\nTLV\nhttps://chrome.google.com/webstore/detail/tlv-night-mode/jdkclpamgobjdopkemcojdhbfddoplgg\nDark Reader\nhttps://chrome.google.com/webstore/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh. @JonnyRedHed  \n\nthey just need to allow the Stylus extension, then we can import our own set of dark styles \n\nYou can make your own styles with Dark Reader, try it =)\n\n. Half of the population will never use Brave if it does not support extensions, and the company will go out of business. ",
    "adambaybutt": "+1\nnot going blind is cool.... ",
    "superherointj": "How do I enable Dark mode in Brave?. ",
    "millette": "You enable it with your mind! :-). ",
    "tomlowenthal": "We have a dark UI working right now in the Chromium-based Brave refactor! It doesn't cover tasks like changing the color-palettes of sites, but there's also wide extension support which includes Dark Reader or similar tools. We're not going to continue any work on this within the current Muon-based builds. The dark theme should be easy on your eyes soon enough.. Any future work in this direction will be in brave-browser. Nothing else is going to change in the current Muon-based Brave. The updated Chromium-based Brave will have:\n- a dark browser theme available by default\n- support for various extensions which change site appearance\nFurther discussion on this topic should head over to the community forum.. Moving to the new codebase: brave/brave-browser#534. This wording is okay, but I don't think it really teases out the differences.\n+safeBrowsingControl=Block Phishing and Malware *\n+advancedSafeBrowsing=Protection plus Google Safe Browsing \n+advancedSafeBrowsingInfo=* You can supplement Brave's phishing and malware protection with Google's Safe Browsing service.\n+basicSafeBrowsing=Phishing and malware protection\n+disableSafeBrowsing=No phishing and malware protection. I think we should use both by default. If it's not the default, I can't imagine how many people would turn it on. And this is a protection which most benefits those least likely to wrangle their settings.. ",
    "boozedog": "Yes I have this one installed: Visual C++ Redistributable for Visual Studio 2015 Update 1\nhttps://www.microsoft.com/en-us/download/details.aspx?id=49984\n. That did the trick. Thanks!\n. OK I uninstalled the C++ 2013 redist and I'm getting the error again. Will email u directly.\n. @bbondy ahh yeah you're right. I see that the app is successfully installed to my \\AppData\\Local\\Brave folder. So it's just not able to execute the binary.\n. Correction: app is installed to my AppData\\Local\\Brave\\app-0.7.7 folder.\n. ",
    "Flet": "Another option is to publish a shareable config and use standard-engine to wrap it up in package like standard. \nThis is how semistandard does it! eslint-config-semistandard mutates a couple standard rules then its wrapped up in the engine for ease of use.\n. ",
    "akhilcjacob": "I have a similar problem....\nnpm-debug.zip\n. ",
    "sl1ngblad3": "To build on Windows 10 x64 you need the following installed and you must run the commands in the install instructions from the Git Bash Prompt. I have successfully built on Windows 10 x64.\nGit for Windows\nNode.js for Windows x64\nNullsoft Scriptable Install System (NSIS)\nPython 2.7 (newer versions of Python not supported)\nMS Visual Studio Community 2015 (I did a custom install and ensured Git/Node plugins for VS were checked, make sure the Windows 10 SDK is selected to be installed as well)\nOnce you have the above installed you can build Brave and run it from the build folder. If you want to package it up in an installer and .nupkg for import back into VS 2015 you will need to use the makecert.exe and pvk2pfx.exe tools from the Windows 10 SDK to create a self signed .pfx cert and password or the package build will fail. Once you have the cert you put it in the browser-laptop folder and edit the build-win64-installer file to point to the cert and pass the password during the build.\n. Make sure you select C++ for Visual Studio Community 2015 as I believe C# is the default and I'm pretty sure it's the C++ libraries that are needed to build on Windows.\n. ",
    "yorchv": "To avoid installing packages globally you can do\nexport PATH=\"./node_modules/.bin:$PATH\"\n. ",
    "prodoelmit": "@bbondy , I've used shallow clone: \n```\nFor beta testers:\ngit clone --depth 1 https://github.com/brave/browser-laptop\n```\nI'll try it with latest versions later. \nI think the problem was that webpack wasn't installed at all. It was just my choice to install it globally. \n. ",
    "parvez3019": "okay i'm looking into this\n. ",
    "aviolentgrace": "@PFCKrutonium you might want to pull the latest and give it another shot. My change that uses rmdir instead rm on windows is in master now.\n. I made the recommended changes. Thanks!\n. As an aside, I'd love to know how to squash these two commits... I use git a lot locally for my own code so I'm no stranger to squash/fixup and rebasing my changes, but i'm new to the way GitHub organizes & names the branches. \nFor example, I don't have a clue how to pull down this 'aviolentgrace:patch-2' branch GitHub is hosting for me... Is there an easy way for me to get branches (such as this patch-2 branch?) set up locally with remote tracking so that I can more easily work with these kinds of changes?\n(In the future, I suppose I should just make a topic branch on my machine and then push origin HEAD from the get-go...)\n. Thanks, although it seems the instructions there are out of date or don't work if they're  your own changes!\ne.g., this step...\nAt the bottom of the pull request, click command line. Follow the sequence of steps to bring down the proposed pull request.\n...The text \"command line\" doesn't show up anywhere on any of the pull request pages. (I even checked another pull request that I didn't make just to see if it was a \"my request\" vs \"their request\" UI issue... nope! The 'merge' and 'command line' option is just gone...)\n. Thanks for the help, Brian!\nOn Sun, Jan 24, 2016 at 6:18 PM, Brian R. Bondy notifications@github.com\nwrote:\n\nLooks good, thanks.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/pull/299#issuecomment-174372423.\n. I think i'll nix the cleaning message due to the async nature of execute. (I'm fairly new at node.js, is there a way to make execute serialize for things like cleanup that should finish before continuing?)\n. Ah, thanks! I just saw this after coming up with something similar (but\ndifferent). I can re-shape it to use append/push as appropriate. Let me\nknow!\n\nOn Sun, Jan 24, 2016 at 10:30 AM, Brian R. Bondy notifications@github.com\nwrote:\n\nIn tools/buildPackage.js\nhttps://github.com/brave/browser-laptop/pull/299#discussion_r50639652:\n\n@@ -19,11 +19,24 @@ var env = {\n   NODE_ENV: 'production'\n }\n+console.log('Cleaning build target')\n+\n+if (isWindows) {\n-  var cmds = [\n-    'if exist ' + buildDir + ' rmdir /s /q ' + buildDir,\n-  ]\n-  execute(cmds, env, console.log.bind(null, 'done'))\n  +} else {\n-  var cmds = [\n-    'rm -rf ' + buildDir,\n-    'rm -f dist/.dmg dist/.nupkg dist/.exe dist/.msi dist/RELEASES dist/*.zip',\n-  ]\n-  execute(cmds, env, console.log.bind(null, 'done'))\n  +}\n\nPlease do this:\nPut the var cmds = []\nAt the top\nThen do cmds.push(...) for the remove call per platform.\nThen below where you removed the commands do:\ncmds = cmds.append([...])\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/pull/299/files#r50639652.\n. I played around with push/append. Looks like .append() (for adding multiple elements to an array) doesn't exist in this version of js; i'm already using .concat() in my latest commit, so as long as the overall approach doesn't grate, it should work!\n. \n",
    "wklm": "I could take this ticket \n. hi @bbondy thanks for your answer. I'm absolutely in love with this project so I want to contribute. \n\"We don't have a preferences page yet but I plan on doing one for 0.8.\" So I will wait for 0.8, but is there anything I could help with now? Do we have any project roadmap, so I can have an overview? Or should I just go through TODOs? \nthank tou @diracdeltas \n. ",
    "SKGrimes": "it looks like duckduckgo has been added to the search functionality. I appreciate it, and sure others do as well. +1.\n. ",
    "prabhakaran8737": "@bbondy Okay Thanks\n. ",
    "noscripter": "I encountered the same problem too. npm-debug.log error content:\n```\nnpm ERR! Darwin 15.3.0\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\" \"--verbose\"\nnpm ERR! node v4.2.6\nnpm ERR! npm  v2.14.12\nnpm ERR! code ELIFECYCLE\nnpm ERR! electron-chromedriver@0.36.0 install: node ./download-chromedriver.js\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the electron-chromedriver@0.36.0 install script 'node ./download-chromedriver.js'.\nnpm ERR! This is most likely a problem with the electron-chromedriver package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node ./download-chromedriver.js\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls electron-chromedriver\nnpm ERR! There is likely additional logging output above.\n```\nMy node version is 4.2.6.\n. ",
    "nselby": "Thanks!\nOn Mon, Jan 25, 2016 at 12:43 PM, Brian Johnson notifications@github.com\nwrote:\n\nBrave requires node v5.x. I'll update the readme to make that more explicit\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/304#issuecomment-174599332\n.\n\n\n\nNick Selby\nStreetCred Software, Inchttp://streetcredsoftware.com\nmob 817 203 4074\nfax 817 659-2996\n3901 Arlington Highlands Blvd\nArlington, TX 76018\n. SO that's fixed and then I get to the end of the install and the world hates me:\nDarwin 15.2.0\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v5.5.0\nnpm ERR! npm  v3.3.12\nnpm ERR! path /Users/nselby/browser-laptop/node_modules/extract-zip/node_modules/mkdirp/bin/cmd.js\nnpm ERR! code ENOENT\nnpm ERR! errno -2\nnpm ERR! syscall chmod\nnpm ERR! enoent ENOENT: no such file or directory, chmod '/Users/nselby/browser-laptop/node_modules/extract-zip/node_modules/mkdirp/bin/cmd.js'\nnpm ERR! enoent This is most likely not a problem with npm itself\nnpm ERR! enoent and is related to npm not being able to find a file.\nnpm ERR! enoent \n. ",
    "conanoc": "I got the same error as @nselby and fixed by removing modules and installing again. Thanks.\n. \"failed to locate cl.exe\" means you need MSVC build env variables. Try using MSVC Developer Command Prompt.\n. ",
    "renhuihhh": "https://www.npmjs.com/package/electron-prebuilt this maybe solve the  problem \"electron: not found\" \n. ",
    "PeterJensen": "v5.4.1\n. ",
    "lukemulks": "FYI - I'm rolling this issue into a parent initiative that I'm working on for social media network ads (w/in networks, and in embedded widgets and SDKs in the larger Web) - Tracking that initiative here for reference: #7678\nNote: The focus for the initiative will be on stripping tracking wherever possible, while retaining functionality, but we may ultimately resort to button replacement if testing proves that is the only solution that will fully cover off. . I've investigated this issue following the release of v0.14.0, and am no longer observing the issue as reported. Social networking buttons are displaying and clicking through as expected for both foxnews.com and tmz.com. \nI've also been checking social media button functionality with Brave Shields activated across several other domains, and am observing consistency with what has been observed for foxnews.com and tmz.com. \n\n\nPart of the cause is that FB/Twitter and other 3p social widgets have updated the way that they've functioned after ad blocking support increased. \n\n\nAnother reason this is less of an issue (visually) is that FB in particular has had several updates to the way they handle social tracking between when this original issue was opened, and now. \n\n\nScreenshots of TMZ.com with the social media buttons displaying and functioning w/Shields up as expected. \nTMZ: Shields up, showing FB tracking blocked and buttons displaying:\n\nTMZ: Shields up, showing post-click share behavior for FB and Twitter share buttons:\n\nFoxnews.com HP, displaying the social buttons w/Shields up and tabs that load on click to share: \n\nFoxnews Politics section, displaying social buttons w/Shields up and share widget (post-click): \n\nAdditionally, I dug into the Facebook ad and marketing API documentation, and applied the custom filters to block tracking, remarketing and audience tracking events that take place with the current FB embeds (outside of Facebook.com): \n https://github.com/brave/adblock-lists/issues/21\n Filters above have been merged with the adblock-lists master as of today. \nThere are a couple of noteworthy items: \n* Some publishers may be running functional, but deprecated social widgets. I tried to apply the filters above to be flexible enough to cover those cases. If any instance arise, are discovered or reported, we'll handle them on a case by case basis. \n\nThere may be some instances where the social widgets are applying a form of tracking that is hidden within the core functionality of the widget, or applied using experimental or veiled to bypass traditional measures for observing in network traffic (switching to protocols not exposed in dev tools, making requests from disk cache, etc.). While we hunt for these things, if they are discovered we'll also handle case by case. \n\nI'm going to close the issue at this point, but can open a new one and reference this issue if needed in the future. . ",
    "adamcweitzman": "I can't seem to add the bar, just downloaded latest prod. version yesterday\n. ",
    "schnesim": "I just tried solving this issue by replacing the cache folder with a symlink pointing to a RAM disk. But apparently Brave re-creates the cache folder on every start removing the symlink in the process.\nToo bad.... ",
    "15w34r0n3D4y": "How can I get logs? Build with errors...\n. \n\n\n. ",
    "Frulko": "Could you share the part of your code that work between electron and netflix ? \nI've tried several times but i got the same error each time.. \nThanks ! \n. ",
    "TerrySlack": "Ads are appearing in brave mobile.  The only way I can turn them off is to turn scripts off in the badge, which isn't a long term solution.. ",
    "quesada": "I see adword ads on google search results. The first time I see them in 15 years using an adblocker in other browsers. Considering that this is your UVP, I expected better.. ",
    "dumptyd": "This seems to be a somewhat known bug but I see empty spaces on every site where the ads would be.\nThis is what reddit and youtube look like on Brave.\n\n\n. ",
    "Leon422": "Please fix this. It negates a large part of the reason to block ads in the first place :(. ",
    "mgonto": "+1 . ",
    "Tribex": "Same on Ubuntu 15.10 here.\n. Just for the record, unable to reproduce on 16.04.\n. ",
    "iamtjg": "I have not been able to tie it to anything directly either yet.  Once this error occurs new sites/pages do not render but sites already loaded continue to function.\n. ",
    "caofb": "@bbondy update to node 5.5 didn't solve the problem\n. ",
    "AlienHack": "I got the same problem, \nusing Visual Studio 2015 Update 1, Windows 7 64 bit Professional SP1\nApp threw an error when running [Error: The system cannot find message text for\nmessage number 0x%1 in the message file for %2.\n\\?\\E:\\Brave\\browser-laptop\\node_modules\\sqlite3\\lib\\binding\\node-v47-win32-x64\\\nnode_sqlite3.node]\n. Here is the error message by running npm start\n[Window Title]\nError\n[Main Instruction]\nA JavaScript error occurred in the main process\n[Content]\nUncaught Exception:\nError: The system cannot find message text for message number 0x%1 in the message file for %2.\n\\?\\E:\\Brave\\browser-laptop\\node_modules\\sqlite3\\lib\\binding\\node-v47-win32-x64\\node_sqlite3.node\n    at Error (native)\n    at process.module.(anonymous function) as dlopen\n    at Object.Module._extensions..node (module.js:450:18)\n    at Object.module.(anonymous function) as .node\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:313:12)\n    at Module.require (module.js:366:17)\n    at require (module.js:385:17)\n    at Object. (E:\\Brave\\browser-laptop\\node_modules\\sqlite3\\lib\\sqlite3.js:4:15)\n    at Module._compile (module.js:425:26)\n[OK]\n. After adding the environment variable, and npm install, the problem is still persisted\n\n. \nGot new issue\n. ",
    "Chtewa": "Hi,\nI got the same problem, and I fixed it by adding \"C:\\Python27\" in the path variable in the environment variables. and delete the node_modules, then npm install.\n. @AlienHack for this we should wait for the fix, look at #189.\n. ",
    "woodev01": "I've just had this same error message using node-usb. I am running windows 7 with 64bit arch. If bbondy is correct, is there any way around this issue?\n. ",
    "mamiu": "Same error on windows 7 64bit.\nAny suggestions?\n. ",
    "mcdemarco": "Re 8ac6ff7, overloading the navigation with hidden shortcuts is not a fix on a mac; now there is no way for the user to disable the extra command-left-arrow and command-right-arrow shortcuts for back and forward because the menu is still using the (standard, btw) command-[ and command-] shortcuts for them.\nI noticed this because I already have the command-arrows mapped to Spaces, so now when I change to the previous desktop Brave also mysteriously navigates back one page.\n. I'd also like to note that this issue (of adding alt-arrow key navigation) is not an OSX issue and behavior on the mac should not be changed, even though there is an alt key available.  Mapping the alt-arrow sequences as requested could cause problems similar to the one I described above, although there would be fewer actual complaints because it's not a popular system-wide shortcut sequence.  In general the relationship between shortcuts and app menu items should be one-to-one on the mac so that they can be remapped by the user (in System Preferences under Keyboard).\n. The issue in the title does not appear to be resolved, since it asked for an alt-arrow mapping on Windows that still does not exist; the change added ctrl/cmd-arrows instead.\n. ",
    "c-johnson": "I was going to open an issue about cmd+ and cmd+ being tied to back/forward.  I use them often in text boxes to mean \"go to beginning / end of line\", and it's frequent enough that it's very annoying to use Brave with my current workflow.  Maybe I'm a weirdo, though.  Normalizing shortcut / cmd preferences across operating systems sounds like some people are going to be displeased no matter what.  \nUpdate:  I should clarify, the issue is that while text boxes are focused, cmd -> and cmd <- should navigate to beginning / ending of line.  I peeked around for how I might patch this, but it looks like electron:webview probably handles this, which I'm not sure how to navigate :p\n. ",
    "DamianStanger": "I use windows 10 and can confirm that alt+left / right does not work. This is standard behaviour for all windows based browsers. Muscle memory is a hard one to change.\n. +1\nId like to hook into my auto hotkey script\n. +1\nId like to hook into my auto hotkey script\n. ",
    "Oldpedro": "same on os/x; I can load amazon.com, but not my regular amazon.co.uk\n. 'Check for update' for chrome and firefox is on the  'about ' dialog (and in fact happens automatically when selected). Safari doesn't have one because it's updated via app store.  Makes sense to have it where the version number is displayed.\n. In osx brave you can copy this text no problem (\"Version: 0.7.11\nElectron: 0.36.5\nlibchromiumcontent: 47.0.2526.110\")\n. ",
    "cmscritic": "Gotcha, should found that other bug report. Thanks.\n. ",
    "Cromian": "Ah sorry bout that. \n. ",
    "PatrickJS": "I have this problem too (middle click via trackpad). In Chrome another great feature is having the new tab selection as the first option \n. thanks!\n. dup of https://github.com/brave/browser-laptop/issues/341\n. For mac to uninstall an app you simply drag and drop into trash. For some apps they also include an uninstaller, usually inside the installer. Otherwise installing an uninstaller helps for apps that also saves files outside of Applications/ with http://freemacsoft.net/appcleaner/\n. ",
    "unsystemizer": "@bridiver I just noticed on the current Brave version right-click & open in new tab opens the link in the middle (literally) of the screen. And this isn't consistent: \n- You're in the last tab: new tab will be the next\n- You're in on right-hand side of a multi-screen tab list, say to the right on tab group 1 out of 2: new tab opens right after the tab where you open it (so \"the next\"), while existing tabs are pushed to the right\n- This scenario that I noticed today is if you're on the left hand side of \"group 1\", the new tab opens in the middle of the screen (maybe 2-3 tabs to the right), although there's 2 groups (screens) of tabs \n. ",
    "steve-obeck": "OSX  10.11.3\n. I'm on 0.7.8 and its the 0.7.9 update\n. You mean for testing?  I can\n. Yes - works in the Admin account. Installed and Updated to 0.7.9  Orignally installed as a \"user\"  but it never prompted for Admin creds as you would expect\n. ",
    "xjru": "I'm running the version that was linked to in the invitation email. I suppose that's a release build. The about box says 0.7.9 (0.36.3). \n[Edit] Now I'm running version 0.7.10 (0.36.5). The issue is unchanged.\n. ",
    "damengilland": "Duplicate of #310 \n. ",
    "trouserless": "additionally, navigating through the menus to preferences (Brave->Preferences) is greyed out and therefore non-selectable.  Nor is the keyboard shortcut working as referenced by #366 \ntldr; no way to see/edit preferences.\n. ",
    "timcarr89": "Zoom level seems to be remembered when all but the containing directory of a URI is the same. For example, navingating on google results pages the functionality works as expected.\nOn the imaginary page: \"example.com/site/page1.html\". If a link points to any other page within the \"/site/\" directory (excluding its subdirectories), the zoom level is kept, otherwise it resets.\n. ",
    "ckknight": "My zoom isn't even remembered with the following steps:\n- go to e.g. https://www.reddit.com/\n- zoom in\n- refresh\nExpected:\nZoom level stays the same before and after refresh\nActual:\nZoom level resets to 100% after refresh\n. ",
    "morinted": "I'll add to this and say that on subsequent zoom ins (after the page zoom has been \"forgotten\") using command/control plus, command/control minus, you'll get it relative to the previous zoom level.\nI'll write this in sequence, assuming that every command/control plus adds 10% to the zoom level:\n1. Page load, zoom 100%\n2. Press command/control plus, zoom level goes to 110%\n3. Command/control R, page refreshes, is back at 100%\n4. Press command/control plus, zoom level goes to 120%\nSo it would seem that the zoom level is just not reapplied on page load, but it is remembered.\n. ",
    "HoltMansfield": "Dealbreaking issue for me\n. ",
    "ham1": "Also, I'd expect zoom level to be remembered across tabs for the same (sub-)domain. e.g.\n1. Open https://github.com/brave/browser-laptop/issues\n2. Zoom in/out (pressing ctrl +/-)\n3. Open an issue in a new tab with Ctrl+click\nExpected: New tab to be same zoom level as tab in step 1\nActual: New tab has default zoom level\nAlso:\n4. Open a different issue in a new tab with Ctrl+click (from tab in step 1)\nExpected: New tab to be same zoom level as tab in step 1\nActual: New tab has default zoom level\nFinally:\n1. Open https://github.com/brave/browser-laptop/issues\n2. Open 2 new issues in 2 new tabs with Ctrl+click\n3. Zoom in/out on the first issue (pressing ctrl +/-)\nExpected: All 3 tabs to match the zoom level of the zoomed out tab.\nActual: Other 2 tabs have default zoom level\n. ",
    "vekat": "Indeed, I just noticed this when I tried to access my router's web interface.\nIt needs to support the basic auth login prompt when unauthorized.\n. ",
    "NeilMasters": "Came across this issue while testing 0.7.12 and the work around(admittedly not the best) is to pass the auth details across in the url for example http://username:password@example.com\nBrave remembers the user/pass for the current session anyway so no need to re-auth constantly.\n. In my case this issue is now resolved for me on latest release.\n. ",
    "designfrontier": "This bit me with an okta SAML/Active Directory login. Completely blows up without showing a basic auth dialog for me. I can provide better repro steps and screen shots if needed.\n. ",
    "huuhaa": "Any estimated time when this will be fixed?\nI tried to login at my Inteno DG200ALA router and got only blank page, with no errormessage at all (no login prompt etc.). But it's probably the same issue described at here earlier?  Tried also with fingerprint protection disabled but same result.\n. ",
    "Hrxn": "I didn't directly ask about the size of the installer, my actual question was: Is it bundled with Node, in any form?\n. I didn't directly ask about the size of the installer, my actual question was: Is it bundled with Node, in any form?\n. ",
    "julianusti": "I have the same issue\nnode v. 5.7.0\n. ",
    "Emaren": "I have the same issue\nnode -v 5.10.0\n\u279c  node_modules npm install -g generator-ionic\nmodule.js:341\n    throw err;\n    ^\nError: Cannot find module 'npmlog'\n    at Function.Module._resolveFilename (module.js:339:15)\n    at Function.Module._load (module.js:290:25)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at /usr/local/lib/node_modules/npm/bin/npm-cli.js:20:13\n    at Object. (/usr/local/lib/node_modules/npm/bin/npm-cli.js:76:3)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n\u279c  node_modules node -v\nv5.10.0\n\u279c  node_modules npm -v\nmodule.js:341\n    throw err;\n    ^\nError: Cannot find module 'npmlog'\n    at Function.Module._resolveFilename (module.js:339:15)\n    at Function.Module._load (module.js:290:25)\n    at Module.require (module.js:367:17)\n    at require (internal/module.js:16:19)\n    at /usr/local/lib/node_modules/npm/bin/npm-cli.js:20:13\n    at Object. (/usr/local/lib/node_modules/npm/bin/npm-cli.js:76:3)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n. ",
    "CAPerkins22": "I don't think entering or exiting fullscreen is the only way pinned tabs automatically reload. I was just writing an email in Gmail and both of my pinned tabs refreshed mid-keystroke.\n. Happens for both mail.google.com and tweetdeck.twitter.com for me\n. ",
    "mrandre": "I can reproduce this bug if: \n1. I have a pinned tab.\n2. I navigate the pinned tab away from the original pinned url.\n3. I resize the window in anyway.\nThe tab refreshes, and goes back to the original pinned url. Indeed, all pinned tabs with subsequently modified urls revert to the original URL. Not sure if this is the same issue.\n. In the latest release of Brave, I am no longer experiencing this issue.\n. ",
    "sderosiaux": "Yes, same issue on Windows with Ctrl+left/right. I would add the problem occurs also in the address bar, not only in the tabs.\n. ",
    "pdohmen91": "No I just installed brave with the installer I got some days later.\n. ",
    "fghafoor85": "Clicking on uninstall on windows 10 does nothing!\n. ",
    "safaldas": "hi how do I uninstall in Ubuntu. ",
    "mikegleasonjr": "On OSX I...\n\ndragged and dropped the app into the bin\nemptied the bin\nrm -rf ~/Library/Application\\ Support/brave/\n\nI don't know if there are files anywhere else... ",
    "cesc1989": "In Ubuntu or Ubuntu based distros, it can be removed via dpkg:\nsudo dpkg --purge brave. @vermasaksham can it be removed from Ubuntu Software Center?.\n",
    "vermasaksham": "I downloaded Brave Browser via. Ubuntu Software Center. I used the command 'sudo apt remove brave', it says \"Unable to locate package brave\" and I also tried giving the command 'sudo dpkg --purge brave' but nothing happend. So how to remove it?. ",
    "Nhoj1983": "So I checked, no hulu, crunchyroll, daisuki, gamespot (video), or funimation available.   Mostly geek related sites but seriously going to be hard to make brave my browser if it doesn't support a large amount of what I use the web for which is streaming.  I really like brave and I agree flash isn't great but it's kind of needed atm.  I realize some sites are more important but I know a lot of people who use at least one of these pretty regularly.\n. ",
    "FutureSomeOne": "Twitch.tv !!!!! almost every single gamer go to this site, there will be even more people go to twitch when there is a tournament, if all the gamers (who use computer the most) can't go to their streaming website, they will just switch to other browser\n. ",
    "Spammie": "ehm, I wana use spotify website on my laptop but it requires flash what do I do ?\n. Well I was in brave and I couldn't access it to listen to some music, it prompts me to download flash ...\n. ",
    "JuanJalar": "Videos on CNET's web pages won't play in Brave, first because of its built in ad blocking, then even when ad blocking is turned off, because they say they need Flash to play.  For instance, if you scroll past this CNET article on Brave's mobile release today, http://www.cnet.com/news/brave-software-ad-block-browser-clears-google-hurdle/, you come to a video on Facebook reactions that just won't play.  In other instances, CNET says it won't play a video because I have ad blocking on.  Then when I turn it off, I get a message that I need to install Flash. \n. ",
    "dscycler": "cbs.com requires flash.\n. Pandora.com requires Flash.\n. ",
    "dukrat": "VMWare vCenter vSphere Web Client requires Flash.\n. VMWare vCenter vSphere Web Client requires Flash.\n. ",
    "zeg-io": "Foxnews.com watch live requires flash\n. ",
    "dschneiderch": "http://www.espnfc.us/ seems to require flash although http://espn.go.com/ does not.\nVersion: 0.8.0\nElectron: 0.36.8\nlibchromiumcontent: 47.0.2526.110\nChannel: dev\n. ",
    "mdkberry": "cmcmarkets.com.au trading platform needs flash\n. ",
    "jetrd001": "Twit.tv recomended the Brave browser, so I tried it ... strangly you can watch the recorder potcasts but not the Live stream... this needs Flash .. Bummer .\n. ",
    "DivineOmega": "Excellent idea on restricting Flash use to predetermined white list.\n. ",
    "jbshirk": "+1 for html5 (at least)\n. ",
    "osmestad": "https://listen.tidal.com also requires Flash\n. ",
    "stevenado": "the next links doesn't work normaly:\nhttp://ici.radio-canada.ca\nthe videos doesn't work there cause flash is not activated:\nhttp://ici.radio-canada.ca/rdi\nhttp://ici.radio-canada.ca/audio-video\nhttp://ici.tou.tv/dans-l-oeil-du-dragon\nit's a good idea to not activate flash, but can we get the video link to be able to play it directly with an external tool like vlc or mplayer?\n. ",
    "hucekes": "Amazon Prime Music insists on Flash\nBrave 0.9.3 Electron 37.7 Windows 10\n. ",
    "Copypasty": "Well... I'm sure there's a very small market, but flash gaming sites don't work..\nhttp://www.kongregate.com/\nhttp://armorgames.com/\nhttp://miniclip.com/games/en/\netc.\n. ",
    "3CirclesChurchCommunity": "Are you kidding?  No flash support means Brave is useless to me and many, many others.  When I go to Hulu, CBS/ABC/NBC news, or thousands of other sites I CAN'T PLAY A SINGLE VIDEO!!!  USELESS!\n. ",
    "tukoz": "Brave v0.8 is just the same total lack in this field.\nE.g. no --help (nor man page), open in new {tab,window,private-session}, or else that I could find.\nAny plan for introducing some basic command-line switches?\n. Hey thank for answering! Roadmap?\n. About #397 does it build on != Windows platforms?\n. Howdy! and I can't wait to read @osworx feedback. To my understanding team deserves it since they did as they said they would \ud83d\udc4d\n. ",
    "salty-horse": "It would also be nice to know what --version of Brave I have installed without launching it.. ",
    "JamoCA": "I perform this same function on Windows using Firefox and an \"OpenWith\" extension.  This Add-on enables me to instantly launch any other browser using the current URL.  As of 3/8/2017, Brave Browser only opens using the URL IF the browser isn't already open.\n\nIf Brave is already open, nothing happens.\nIf Brave is not open, the browser is launched with the URL... and another Brave browser window with the previous session's URL is also opened. ???\n\nI'm currently doing this w/Chrome, IE, Edge, Opera, Safari... Brave is the only browser to misbehave.\n(NOTE: I've added \"--\" as command line argument and it seems to work.  Additional clicked links while Brave is open are launched as tabs within the already-open Brave browser.). ",
    "aliddell": "Ditto -- have 0.18.16 as my default browser on Ubuntu and xdg-open will exhibit the exact behavior @JamoCA mentioned. I could modify the command line passed to it to maybe fix this -- if I knew what flags I could use.. @bsclifton Sure I will. Thanks for the info.. ",
    "SamJongenelen": "When hovering with mousepointer over a tab and pressing the scroll wheel (some mouse support this), the tab under the pointer is closed. (Chrome/Edge/IE has it)\n. ",
    "throwaway2348": "I ran into this issues as well and it has twice stooped me from trying Brave. It doesn't give one a good feeling security-wise when software distributed for windows and endeavoring to be secure lacks a timestamp and SHA256 signature.\n. ",
    "paulcbetts": "@diracdeltas This is a different bug than what I was think of at lunch, you need to pass /fd sha256 to the signtool parameters (i.e. the same place where you specify the cert file and password) and make sure you have a SHA2 cert\nHere's the parameters we use for signtool at Slack: /a /fd sha256 /f ${certPath} /p ${certPassword} /t http://timestamp.verisign.com/scripts/timstamp.dll\n. You don't need any account or setup to use that URL, it's public \n. Yep, if you're on the latest version, you should be mostly safe (I say 'mostly' because it is very difficult for any app to say with 100% certainty that this is solved, there are so many ways to get into that trap, many involving the internals of OS / library code)\n. https://github.com/Squirrel/Squirrel.Windows/pull/590 and https://github.com/Squirrel/Squirrel.Windows/commit/6722c66f776c93d83cc35cd7b79ccab676eb7b2b are the relevant parts. Basically, before anything at all is loaded, call SetDefaultDllDirectories. This is actually already fixed if you update to the latest Squirrel.Windows\n. ",
    "kdpuvvadi": "What about Win32 users?\n. ",
    "osworx": "@bbondy thx, means brave is dead for me - and for about 60% of all users worldwide ..\n. @PFCKrutonium Funny talking here ..\nBrave wants to earn money through the replacements of adverts - their business.\nIf they do not support 32bit installations, they will loose money - their business.\nWhen I (and some others) are using 32bit machines / installations - my business, and I will have reasons to do so.\nHas nothing to do how old are our computers.\nWhat you are running, and thinking - again your business.\nBut keep such for yourself.\n. ",
    "Mparaiso": "@PFCKrutonium It's still 10% using a 32 bit version of Windows ( Windows 7 for instance ) ,  1 out of 10 , so what does your message mean ? \"the hell with these people\" ? All browser vendors on Windows provide a 32 bit version of their product , even IE 11.\n. ",
    "SidepocketNeo": "Well this solves the issue on my end, I know that x64 is more secure and has better performance BUT as most will agree with me, I'm also not made out of money to get a new machine. More like two or three years from now I can afford one. Are the Linux versions locked at x64 as well because then I can dual boot.\n. So happy this is now on 32 platform. Running it, will be looking for bugs. Thanks!\n. ",
    "Ken-Saunders": "I hope that y'all do provide 32-bit versions eventually and not alienate anyone. \nIt does go without saying but I'm saying anyway that Brave of course can't afford to with the field that its in.\nIt's probably easier to enter into the cola market and be successful then the browser one. \nI think that it's brave that, oh, wait, Brave, ah ok. Just kidding and trying to lighten it up.\nI'm using a PC less than a decade old running 32-bit Windows 7 with the latest 32-bit versions of Firefox, the \" cutting edge\" Nightly, Thunderbird, Daily, and so on and I hardly feel as if I'm behind the times using old tech. \nWhile I'm not a metrics expert, in my opinion and experience, you have to be very careful here and not always go by raw stats. I see Mozilla making that mistake with some to a lot aspects with Firefox and they're pissing off and losing the early adopters types and power users. The ones not afraid to try anything, dig in, contribute, stay loyal, and help build. Many are looking for an out but there isn't a suitable one. \nBrendan and you bbondy are aware of that.\nFor the record, I'm not one of those.\nIf I didn't have such respect and admiration for Brendan and wanting to see him succeed, and if I weren't so anxious to see more competition against Google, I would have moved on the moment after having my first issues with Brave as I did.\nNot many others would/will stick with it ya' know.\nHopefully issue #80 will avoid all of this frustration and confusion in the future.\n. Wrong link\nhttps://github.com/brave/brave-website/issues/80\n. ",
    "hoangtronghuy20": "I setup brave on Win 7 (32bit) and Win 7 (64 bit) but It error \nI hope the developers fix this.\n\n. ",
    "inian": "Am able to reproduce the bug with the following HTML document\n<html>\n   <input type=\"search\" placeholder=\"hello\"></input>\n   </html>\n\n. This happens to me only when I have focus on the dev-tools and right-click on the window I am debugging. \nThis is because BrowserWindow.getFocusedWindow() can return null if no window is being focussed (doc). I don't think the focus actually shifts to the window even though you right click on the window from another window. \nWe should have a check here if the value returned from the function is null\n. Looks like most browsers on Mac do not have a \"Check for update\" option in the menu bar at all..But I agree it being under File menu is unusual..probably would be a better fit under the Application menu or under the help menu..\n. ",
    "mikeLspohn": "Yep, still reproducible for me as well using the 0.7 OSX.\n. Yep, still reproducible for me as well using the 0.7 OSX.\n. ",
    "spongessuck": "Reproducible with Brave 0.12.5 on Mac OS X 10.11.\n. ",
    "Tombsmen": "Also should be able to drag tabs between open instances of Brave.\n. Windows 10 Pro\nVersion 1511 (OS Build 10586.71)\nIntel Core i5-4670K 3.4GHZ\n32GB - Kingston Value Ram\nRaid 0 - Samsung 850 SSD(2)\nMSI - Z87-G45 Gaming (MS-7821)\nNot sure what else you would like but feel free to let me know.\n. Windows 10 Pro\nVersion 1511 (OS Build 10586.71)\nIntel Core i5-4670K 3.4GHZ\n32GB - Kingston Value Ram\nRaid 0 - Samsung 850 SSD(2)\nMSI - Z87-G45 Gaming (MS-7821)\nNot sure what else you would like but feel free to let me know.\n. Wasn't sure if these two issues were seperate or the same problem thus two tickets.\n. see ticket #412 \n. The top two sentences are the same design sugestion as ticket #405  I think  #405 should be merged with this ticket.\n. You must have fixed it as it now works, or did you simply white list the site?\n. So I left the tab open for a bit and eventualy it went to a black page, so I then turned off Block Ads, still goes to a black page. Then I turned off Ad replacement Engine, still after a few seconds black out page.   After which I turned of Block Tracking, still after a few second completely black page. I have been closing the tab between attempts and leaving each feature disabled untill the end.\n. hasanhuseyincakir Ctrl + Y is the key set for Brave Ctrl + H is for other browsers.\n. Turns out chrome does this but Brave is faster and has built in AD blocking and anti tracking.\n. ",
    "scunliffe": "You rock! I've never had a browser vendor react so fast!\nOn Thu, Jan 28, 2016 at 11:39 PM, Brian R. Bondy notifications@github.com\nwrote:\n\nCheers! It'll be in the next version.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/410#issuecomment-176571009\n.\n. This also occurs in Gmail, when I get a Facebook notification email (e.g. about a comment to a post)... the big blue \"View on Facebook\" button if middle-clicked will close/crash? the browser too.\n(I'm not sure if this is caused by the same issue, or unrelated)\n. Sounds like this might be similar to the issue I reported in Twitter/Gmail: https://github.com/brave/browser-laptop/issues/425\n. Just got version 0.7.11 and this has been implemented (thus I'm closing this issue)\n. Just got version 0.7.11 and this has been implemented (thus I'm closing this issue)\n. I've created a test case for alert, confirm, prompt, and print that exhibit the issues.\n\njsDialogs.zip\n. ",
    "thepup": "Could you put your system details? I'm running El Capitan and can't reproduce this issue.\n. Could you put your system details? I'm running El Capitan and can't reproduce this issue.\n. ",
    "mkwardakov": "Looks like brave crashes on ctrl+click on links that are designed to be open in new tab on simple click and works with other links.\nSame with middle-click.\n. ",
    "flienteen": "Seems more like a bug on brave/electron-prebuilt because it works fine when running it with mafintosh/electron-prebuilt\nDuplicate of #398\n. ",
    "ppetrov": "I think it's because of the href target attribute set to _blank (target=\"_blank\") and with the Ctrl+Click it's like open in new \"double\" tab.\n. That's really annoying for me too.\n. I think it's because of the href target attribute set to _blank (target=\"_blank\") and with the Ctrl+Click it's like open in new \"double\" tab.\n. ",
    "Kzeir": "Yeah, 7 tabs consuming almost 1.5 gb of RAM \n. Don't know why \n\n. ",
    "visionpoint": "Currently 5 tabs opened, on OS X (10.11.4) and the memory consumption is up to 1.66GB. In comparison, I've got Opera running with 12 tabs simultaneously consuming less than Brave.\n\n. @bbondy Apologies for the late response Brian. To answer your question: yes, fresh start on both browsers. Here's another fresh start test but with Firefox this time. Same five tabs open, Brave ~1.20GB vs. Firefox ~900MB -- these numbers seems to remain more or less steady when running the same websites/amount of tabs on both browsers. Certainly not as wide a gap as my previous test with Opera. Also, Brave has much less of a memory footprint than Chrome. \n\n\n\n. @bbondy Building functionality like The Great Suspender sounds awesome. If you haven't already, take a look at the OneTab extension in Chrome. Not only does it reduce memory consumption significantly, but it may increase productivity and reduce clutter in the amount of tabs open by providing a \"workspace\" where all tabs can be accessed from swiftly. \n. ",
    "legacybass": "Looks like this is still being looked into. I thought I'd show my experience as well. 5 tabs open on version 0.11.0 and still using lots of resources. One of them is a website I'm working on so the dev tools are up. Otherwise, just regular websites.\n\n. ",
    "Skavenger0": "Brilliant, I will give it a go and let you know how I get on.\nEdit: O that link isnt the Brave installer. Yes please could you send me a copy. skavenger@rv-online.co.uk\n. ",
    "thesohelshaikh": "https://github.com/brave/browser-laptop/releases. ",
    "jsynowiec": "One of such sites was the news site from Poland: http://www.gazeta.pl/0,0.html\n\n. ",
    "nbourdais": "I am more accustomed to Ctrl+L which works.\n. ",
    "ChrisRfr": "I would add another keyboard shortcut,\nAlt+Enter to open a search or url typed in a new tab.\n. ",
    "mikeal": "Is there a way to disable this?\n. @diracdeltas I'm 100% for that. It's the first browser features I disable on a new install and I'm pretty sure it is a crazy IE relic.\n. If this goes back in can it please be configurable because a lot of people hate it :). ",
    "ksjogo": "How can I enable this again? The zendesk is not visible.. ",
    "lewellyn": "As #6156 was closed, indirectly referencing this issue via #5781 and #5491, I'm here. So far this issue and #1302 (plus a UI problem I submitted via email which doesn't have an associated issue on Github that I can find so far) are keeping me from setting Brave as my default browser.\nThis is highly unfortunate, since this issue reads like only one platform has an issue with it so every platform has to lose it. And there's apparently some sort of workaround but it's not available to those of us who can't access those Zendesk tickets. :-1: . ",
    "da0ist": "Backspace nor Alt+Left arrow (my usual method in browsers) doesn't work for me (ThinkPad X220/Ubuntu 16.04).. Great, I was about to give up on Brave! My wife says it's good to try new\nthings, but ALT+Left arrow is hard wired into my brain!\nOn Wed, Mar 29, 2017 at 9:03 AM Brian Clifton notifications@github.com\nwrote:\n\n@da0ist https://github.com/da0ist alt + left arrow was unintentionally\nbroken last release, we have a fix for that \ud83d\ude04 We're working on our next\nrelease now\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/pull/424#issuecomment-290137959,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHk-drq_A_Bns7ELSI2imQLgWUZGLwc4ks5rqoDVgaJpZM4HPJnM\n.\n. I like your attitude!\n\nOn Wed, Mar 29, 2017 at 11:52 AM Brian Clifton notifications@github.com\nwrote:\n\n@da0ist https://github.com/da0ist hang in there just a while longer!\nI'm hoping we'll have a release today or tomorrow \ud83d\ude04 If you have any more\nfeedback, please feel free to let us know here or on community.brave.com\n\ud83d\ude04\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/pull/424#issuecomment-290189188,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHk-dnOZ4uxAEPXW9EQx86g4ouPenO-hks5rqqhegaJpZM4HPJnM\n.\n. Actually, one feature I am used to using when surfing reddit, for example,\nis for links I've visited to look visually different so I know I've been to\nthem? Is this something I can enable? Right now, links look the same before\nand after first click.\n\nOn Wed, Mar 29, 2017 at 9:11 PM Ward... James Ward james_ward@yahoo.com\nwrote:\n\nI like your attitude!\nOn Wed, Mar 29, 2017 at 11:52 AM Brian Clifton notifications@github.com\nwrote:\n@da0ist https://github.com/da0ist hang in there just a while longer!\nI'm hoping we'll have a release today or tomorrow \ud83d\ude04 If you have any more\nfeedback, please feel free to let us know here or on community.brave.com\n\ud83d\ude04\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/pull/424#issuecomment-290189188,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHk-dnOZ4uxAEPXW9EQx86g4ouPenO-hks5rqqhegaJpZM4HPJnM\n.\n. No, but I was told if I had any other issues to reply to this thread.\n\nOn Thu, Mar 30, 2017 at 6:20 AM Nejc Zdovc notifications@github.com wrote:\n\n@da0ist https://github.com/da0ist is this something that is related to\nyour last request? #512\nhttps://github.com/brave/browser-laptop/issues/512\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/pull/424#issuecomment-290408317,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHk-dngLI4uLSk8EVlc_FGGM5A2z2wwHks5rq6wugaJpZM4HPJnM\n.\n. \n",
    "NejcZdovc": "@da0ist is #512 something that is related to your last request?. Sure, it's removed.. Done. Done. :smile: that's why I added TODO :stuck_out_tongue: . Honestly I forgot about it, it's fixed now. Done. Added. We need null here, so that other component's (menu bar) know what status we have. I moved default [0] to contextMenu.. Currently some test's are failing, still investigating why this is happening. If I do test manually (added longer pause) with my mouse and keyboard, test is successful.. Ok, the only thing that is now not working, and that's why test are failing, is enter. Enter is not prevented and that's why form is refreshed and test fails. Although it's strange, because event is prevented in contextMenu. I added test that check's if enter is prevented or not.. Added. Fixed. Fixed. Removed. Done. I was thinking about it, but I am not sure.. Can you please move this line after the line 'security.passwords.active-password-manager', so that properties are ordered alphabetically. I think we should add translated string here. I think we should add translated string here. I think we should add translated string here. Please order these and child properties alphabetically. use const. use const. use const. use const. use const. use const. I think this is not necessary, because you are just stopping propagation in this function. We should use Aphrodite here as well. We should use Aphrodite. Yeah I notice that button component has I10n-Id, but when I changed to the another language there was still the same string.. These properties should be alphabetize as well. I am talking about these properties: \nmessageBoxDetail: { // fields used if showing a message box for a tab\n      message: string,\n      title: string, // title is the source; ex: \"brave.com says:\"\n      buttons: [string], // array of buttons as string; code only handles 1 or 2\n      suppress: boolean, // if true, show a suppress checkbox (defaulted to not checked)\n      showSuppress: boolean, // final result of the suppress checkbox\n      cancelId: number // optional: used for a confirm message box\n    }. Yeah, we should keep all properties in the state.md sorted alphabetically, so that we can easily read through it. ++. Just a left over. Moved. Removed. @bsclifton fixed this. Hmmm, it's not crashing for me. Can you please provide some reproduction steps?. Fixed. Why would we want to compare it as a string?. https://github.com/brave/browser-laptop/pull/7481/commits/f3754515ccab859ee56acd09d168c95c722cc871 it's already in. I tried this steps, but key 2 exists for me and copy is working as well. So the problem is not in a copy but in fact that key 2 doesn't exists. As discussed on a Slack, this is specific to one ledger-state.json file and I can't reproduce it with my ledger or on fresh profile, so I think this is not related to this PR. Moved. Let's switch to aphrodite. Let's use aphrodite. No more less :smiley: . you have in a previous else if(process.env.NODE_ENV !== 'development') , that means that your else would only trigger if you are in development and in darwin. I needed to replace page2Url with origin, because we are now suggesting shorter urls #7534. Ok this is failing, because your history would be different. I reset now history before the test . Ok, but why would be failing now. It was outside the if statement before this PR. It was strange for me when I was doing this change, but I left it there because it was there before. Will move it inside the if. @cezaraugusto can you please try again. I rebase it on the master and now I don't have any crashes.. It's working for me. Do you have auto include set to off in payments?. No this is something that needs to be fixed. I have implemented this, but it was causing a crash for some X reason (you noticed this in your first comment). So I removed it for now and will try to find another solution today. @cezaraugusto I changed the logic now, can you please try it again. @bsclifton This test is failing, because settings is not found in the getSettings in ledgerTable.js file https://github.com/brave/browser-laptop/pull/7642/files#diff-e168dd994d1e4de3f340af83899a20f5R247.\nProblem is that this is failing https://github.com/brave/browser-laptop/blob/master/js/settings.js#L58. More specific this statement settingsCollection.constructor === Immutable.Map is false . Which is strange, because as you can see I am passing settings prop as an Immutable.Map.\nAny idea what is the problem?. Typo: bordeRadius -> borderRadius. Please use hex #FFF. Use cx here. Use cx here. Use cx here. Use cx here. please use HEX code for the color. I was thinking more something like this:\n```\n<span className={cx({\n  fa: true,\n  'fa-folder-o': true,\n})}\n``\nThis way you don't need+ '  ' +and it's more readable in my opinion. Thank you will do. Why did you change this back to regular class?. Sorry, I didn't read you comment in the commit. Make sense, so let's create an issue for this and track all things that need's to be done there.. One suggestion maybe. Instead of having one big objectstyles`, maybe create 4 objects:\n\nstyles (general and small styles)\nstylesHeader\nstylesPage\nstylesTable\n\nWhat do you think?. Please change this to HEX. I would move this component into commonForm.js as well. Thank you. Please verify the change. Done. Done. Fixed, thank you. cc @darkdh \n@diracdeltas I am not familiar with this code, so any feedback and help is more then welcome. Code from @diracdeltas first comment was added. change to insecureConnection. data-test-id -> testId. data-test-id -> testId. data-test-id -> testId. data-test-id -> testId. data-test-id -> testId. Do we need this ID?. let's use basic user select and not a webkit. Please move this two definition into the common file and use it in all files. Thank you. Do we need this testId? If not please remove it, because is really generic.. Can we change this to more specific id?. ditto. ditto. we are using different css for this two states. Icon is different color if shield is down or disabled. Yeah I wanted to create util for now and then when moving to redux create shield state. What do you think should we move this into frame or shield state? Keep in mind that we have a lot of logic for the panel. Why do we have english text hardcoded?. Can you please change this to data-l10n-id='copied' />. Let me try to rework it. I found another example that is not working correctly:\n\n. Please split this into single component per file. You should create new folder and place everything there. Name of file == component name, for this example sectionTitleWrapper. yeah what I would do is add folder for it. This way we know that all style components for about pages are there. Problem with multiple components in one file is that it's really hard to know what you have.. what if we create new folder in renderer folder named styles and we place all styling components into it (one component per file). In there we would keep the same folder structure as we have in components folder. This way we keep the context of it. What do you think?\nThis is one option. Another one is to make exception for styling components and keep them in one file (I still prefer splitting them)\ncc @bbondy @bsclifton @cezaraugusto . Regarding including, I also like this destructured approach. What I would suggest is something like this.\nYou are now creating things for sectionTitle. Create folder sectionTitle and place all components into it. Then in this folder create file index.js where you are exporting all this components. This way you can easily use your approach and file structure is still search and time friendly :smiley: . Based on this PR I will crate wiki regarding best practices, so that we will all work in the same way. So this PR is really important, we should define and think things in detail. Please don't change things yet until we find and define how should we tackle this one. . we don't have this in yet. I didn't yet implement redux here, so we have what we have for now, but when I will add redux to it, we will have primitives.. This PR only removes refs from Frame.. done. this is still necessary, but I need to refactor it, because if you require windowStore in appAction (you are requiring it, because I am are calling windowActions in appStore)  you are getting errors. I will move this logic from windowActions into reducer, so that we don't need store here.. I removed it in #8381. we can change a name, but one problem with this name is that is really generic and we only need margin bottom here. What happens if you would need margin top and bottom in this component?. let's use BEM then. ImmutableComponent was moved into app folder, please update this path. Why do we need this component? I don't see real benefit of having it.. I am not sure if we need component for two divs. What I would suggest is to create divs where we now use this component and move styles into notificationStyle file and use it from there.\ncc @cezaraugusto . Moved. not sure which function should be used. Done. Done. Done. you are correct we are not receiving anything here, that's why I added if typeof undefined. Done. Code updated. Shouldn't here be array and not object?. Please translate this values. You don't need string here. Can you please reorder imports in something like this: https://github.com/brave/browser-laptop/blob/master/js/components/main.js or https://github.com/brave/browser-laptop/pull/8225/files#diff-169b96dac6a9688438a29c5013735bda\nThis way it's really easy to find if you are searching for something.. +++++ On splitting into a new file :heart: . @luixxiul please update this path. make sense. Can you please redo this page so it will be aligned with this new approach that was added in this PR https://github.com/brave/browser-laptop/pull/8237. Basically you need to change this line in the same was @luixxiul did it https://github.com/brave/browser-laptop/pull/8237/files#diff-e3eeb751016b2ce9f8278efce585a461L659. ditto. done. done. @luixxiul not sure, we need to ask @bsclifton about this code, I just reordered imports.. Please use cx syntax for class name, you can see example bellow. Thank you. Done. Done. Done. Can you please remove this id. Why do we still need ordinary class?. Do we need this class?. Do we need this class?. Do we need this div, because if statement it false we display only ul. This function returns ul, so you need to add li wrap before calling this function . Do we need this class?. Do we need this class?. Do we need this class?. Do we need this class?. Do we need this class?. Do we need this class?. Do we need this class?. We don't need cx here anymore. Can you please translate this?. We don't need cx here anymore. We don't need cx here anymore. Fixed. removed, so its fine :smile: . You are correct. Fixed.. Can you be more specific here, maybe pinnedDisabled?. Can you be more specific here? Maybe messageBoxDialog?. Can you be more specific here? Maybe showSuppressSwitch?. Please add translation here. I think that you could do this tests insider previous forEach. Can you please explain why selected should be removed? I just run npm run test -- --grep=\"about:history\" on a local machine and it's working correctly. Also master is not failing. Same goes for all selected removed bellow.\nThank you. we will remove all this props in redux PR, so I think it's not necessary to do it right now.. I think that we don't need to set react state anymore. You should reinstall brave (https://gist.github.com/NejcZdovc/5dd0e6789049c2ff715ef891c87f9760) and update node to version 7.9. This error should be fixed then.. All variables that are used in renderer needs to be defined in mergeProps. ditto. perfect thank you. Currently the only problem with the title not updating is when you use navigation buttons, so when tab state changes. What should I wrote in todo? TODO fix race condition with appState. Yeah props is required because of redux. More about this PR #9061. Can you tell me a little bit more about this? I added this because this way you exactly know what is used in renderer and what in other functions in the component. Because of that changing and looking for thing should be easier then looking at a big list of variables.. Yeah sorry, didn't check out the code. If nothing is added for a renderer, this line should be removed. I agree. Fixed. Fixed. Fixed. @cezaraugusto this if was copied from https://github.com/brave/browser-laptop/pull/8396/files#diff-15331dd5e010a9a3d250a1a37d851653L132. If I remove it from a function is working correctly, but I would like to understand why it was there in the first place . Ok, now I can see where the problem was. I switched if statement. It's fixed now.. Is this correct change, because the comment at the top states that site should be at the third position (2), but you changed this value to 1. If this is correct then I would add some description about it beside this comment, otherwise it could be confusing. Yeah this is the last cycle in build lifecycle, so this should be executed when scripts are finished.. I skipped this last one, because it uses computes styles and I am working on another PR that will change that in the same version (0.18.x). So that I don't need to change it twice I will fix it in #9176 after this one is merged.. @luixxiul no need, because I will include it in #9176, that will be part of 0.18 as well. I won't :smile: . nice, fixed. I will fix all computed styles in #9176, so I think there is no need for TODO. it's not done yet :smiley: but yeah, both functions used here get something from state (state as a first param, that's why I added them to state). Should we only put things into state folder if they manipulate state?. sure I can move it into publisherUtil.js. done. Moved into windows.js. Done. Moved. Done. Done. The only problem with calling this function from this file is that we don't have document, so you can't do document.querySelector. Any idea how to fix this? @bridiver . You mean into function?. Yeah when I am doing refactors I try to keep it as close as possible, because this way we are less error prone and we will have a few more iterations of redux components anyway when we will start moving into apps state (state helpers). Problem is that you can't use getter in mergeProps, because you don't have access to the component. So what we can do is create helper in util file. Yes you can use getters for html content so that renderer is not that big, but one thing that you need to be carful is that you always trigger re-render when needed. That means that you shouldn't do any calculation inside the getter that can change getter return.. the only thing that we are doing here is checking if linux or not and we can't test getters in redux components. same as bellow. What we can test is if props are set correctly, so that we move for example isFullySecured into state helper and do a unit test there.. Done. Test added. Moved into util file and added unit tests. @bsclifton @bridiver I would need your help here. What we need to add here is state (now we only get action) so that you can check it the same way we do it for sites. How should we address this problem?. I was thinking to add state directly in same as we do with other reducers. One thing that we can also do is get state only in this case with getState. we don't want to do that, let's discuss it more on the call. because this is this WIP and I need to check some things before finishing this PR. You are correct. Fixed. I would leave it here, because we have all constants files here and this are constants. Comment added. Removed. removed. Done. Done. Done. I would leave it. I checkout my PR that refactored this function and I see that medium was not there before either. How come that we need to add it now? Was this working correctly before in previous versions or never?. You have redirectedResources in two level array and this function gets second level into one level.\nExample:\n{\n  google: [\n    'google.com',\n    'google.si',\n  ],\n  fb: [\n    'facebook.si'\n  ]\n}\ninto \n[\n    'google.com',\n    'google.si',\n    'facebook.si'\n]\n. updateStatus + updateUtil -> updateState ?. this is done, but we need to find a way to fix IME problem. I would leave updateStatus in constants folder, because that's what we have there. What we can do is rename this file and move it into state folder. What do you think?. Moved to state. Moved. Because we are not sending anything in the action anymore. We have everything that we need directly in the store already. We are saving data here already https://github.com/brave/browser-laptop/pull/9457/files#diff-23ca389e2bcb77191b5a9c10900eb3a3R697. actions has no params https://github.com/brave/browser-laptop/pull/9457/files#diff-5fea3af223318beea03d50c8ee3de64dR591. Done. Removed. fixed. moved. In all components we have this like that, so I would leave it for now and we can move it in all components to the bottom in a different PR. nit: teh -> the. Pre-commit is a hook which will run some X script (in our case linter) when you try to do git commit. And if this script returns false, commit will not be executed.. @cezaraugusto You commented this block, so can we remove it? (in this PR https://github.com/brave/browser-laptop/commit/2648803d46d3f02ce3c5dfb2f0e3007fec20642f#diff-303f0b6a297506f2cc18bf7b4cb370c5R428)\n@diracdeltas Do we need this ipc call at all, now that is commented out? . doh, my bad :smile: . Ok, thank you. Let's wait for @diracdeltas conifmation as well. Here we should probably change from e.dataTransfer.files.length into e.dataTransfer.items.length. ditto. ditto. So right now we have only comment in this call. We need to determinate what to do with it. Currently we are not doing anything. Now if you don't have any objections I will remove it otherwise we need to add some logic into this function. In this state it's waste of space :smiley: . Thank you for your inputs, function removed . Instead of sending the whole object we are sending only keys. So we have list of keys and this way we are not triggering re-renders. We send this key to the child components which gets the whole object from the state.. I agree that we need to convert this, but not sure if this PR is the right one to do it in. One thing that we also need to discuss is how can we call other actions inside the reducers. One case that I had was calling an actions that was then handled in multiple reducers. So we need to define this. Done. Fixed. so we didn't replace files object with items, but we only added items into dataTransfer?. Let's do it like this, which is more reliable. Same for currentDetail.\ncurrentWindow.get('bookmarkDetail', Immutable.Map()). For example this refactoring\nhttps://github.com/brave/browser-laptop/pull/9678/files#diff-de5d4f1b019deecc5b1926970450546cR392\nhttps://github.com/brave/browser-laptop/pull/9678/files#diff-733d30fbf34816322d3f25dd59c1eb99R747\nI know that is in anti-pattern, but I am not sure how to achieve it otherwise (I already talked with @bsclifton about it), so I am opened for any suggestions how to fix this and have only one action per call. I didn't find any good approach with the current implementation.. make sense, then we don't need to change this line :smiley: . yes and this is what I am doing in a lot of PR's right now. Moving actions into the reducers, so that I can remove state from components to have only primitives.. Because this function expect data to Immutable https://github.com/brave/browser-laptop/blob/master/js/dndData.js#L26. What I can do is add a check in this function and if data is Immutable convert it, otherwise leave it as it is.. Fixed. what I can do is move this into the new app action and call other actions out of this new action. What do you think?. I refactored menu.js so that now uses correct implementation of the reducer and have access to the sate. But still we can't remove location completely, because eventStore don't have access to the store and I don't feel comfortable refactoring it in this PR.. I am talking about this file https://github.com/brave/browser-laptop/pull/9678/files#diff-bc67a4599e41618040dc83b94144397aR99. Why I moved this into separate action is because we need to get detail of the frame so we can add it into sites.\nHere we need to have access to the window state: https://github.com/brave/browser-laptop/pull/9754/files/e0827f5b092eecfbe915b23838fb9dccc8fdcc5b#diff-be01d0957f991e2400072d82d108450fL142. Probably the naming is wrong here, so I fixed it. We send activeFrameKey from this line https://github.com/brave/browser-laptop/pull/9754/files/e0827f5b092eecfbe915b23838fb9dccc8fdcc5b#diff-51a114fecaac13cd41162f4c956e7508R114 and then get it back here as Immutable Map with this function https://github.com/brave/browser-laptop/blob/26a580bc3148ec427465c3e266e6bd42778da786/js/dndData.js#L11\nSo we don't receive the whole frame, but we send end receive only frameKey. This is not loaded in the right context, but I am not sure how to switch to the right one. Not sure why this logic should be in siteUtil.getDetailFromFrame. In this if statement we are getting data from appStore and adding them to the siteDetail. Not sure where else would we be using this? We use this function in 13 different places. We only want to access appStore in reducers and not in components.. Yeah, we want to remove this, but sadly we need to keep it for now. You will see this pattern in other PR's as well. For this particular case we will remove it in #9710, because we will remove setBookmarkDetail as per our discussion.. ~~Not sure that we can to that, because now in your example you overrode sites from window state, which means that bookmark will not have favicon, tags, themeColor etc. It will only have parentFolderId, title and customTitle~~. we are only missing parentFolderId in this example, I just checked and everything else is there. But I think this whole PR, will be redundant when I do #9710 :smiley: . done. done. done. isDarwin = () => {\n  return process.platform === 'darwin' ||\n    navigator.platform === 'MacIntel'\n}\nit first checks process.platform === 'darwin' same as we did in the removed code. Isn't then this the same or can navigator.platform === 'MacIntel' lead into wrong determination of the OS?. We only use it in if statement, so we don't need it, but I added it anyway :smiley: . fixed. So just move the whole content of this function into another window action?. done. I totally agree and I forget about this one too frequently. Fixed. Done. problem is that ipc.emit is not working in urlBarReducer. as pre our discussion, I added TODO's, so that we remove this shortcut.. I can create a new app action, but we will be calling appActions.createTabRequested from it, so it will be again action inside an action.. I am not sure that that's enough. So if you check out  createTabRequested you will see that we have two places where we call APP_CREATE_TAB_REQUESTED.\nFirst: https://github.com/brave/browser-laptop/blob/master/app/browser/reducers/tabsReducer.js?utf8=%E2%9C%93#L138\nSecond: https://github.com/brave/browser-laptop/blob/master/app/browser/reducers/sitesReducer.js?utf8=%E2%9C%93#L158\nNow if instead of calling this app actions I just do tabs.create some logic will be lost, which would be called otherwise. This is the main reason why I keep using actions, because they are used in different places and I could regress some logic if I just pick one. What I don't want to do is duplicating a code.\n. Problem is that is not working for me. Most of the times we use if with 0, maybe 1. But my use case is that I need to focus last active tab, which is this case 19 (we have 20 tabs). But if do .tabByIndex(19) second tab is selected.. Just pushed new version with tabByIndex(19) so you can try it out. I am thinking that something is not ok with handles?. Based on our conversation yesterday I would suggest that we merged this PR. This file bookmarkActions.js was not really the focus in this PR, so I would suggest that we create a follow up where we would refactor only this file.. test fixed based on @cezaraugusto findings. I am not sure that I understand this test. You move mouse into frame 1, you click on it, then you wait for frame 1 to be active and then you check if frame 2 is in preview?. Do I understand this test correctly or maybe I am missing something?. Me again :smiley:  Please use waitForElementCount(..., 0), because reverse is hard to read and we should avoid it. This was already fixed, so if you rebase to the master, you can remove this code :wink: . Please change this from return to continue. done. This section is fully covered with tests. I wouldn't move it into the function that is exportable. What we can do is move this block into the new function but keep it in the same file for internal use.. Can we use platformUtil here?. can we change to this const {getSetting} = require('../../../js/settings')?. can we change to this const {firstDefinedValue} = require('../../../js/lib/functional')?. should we use state.getIn(['defaultWindowParams', 'y'], undefined) here? and for all examples above?. This function was changed, please update it based on this file https://github.com/brave/browser-laptop/blob/master/app/renderer/components/navigation/navigationBar.js#L49. This can be removed. This can be removed, because you already have this.props.bookmarked. Remove this props, it's not needed anymore. This props is not needed anymore. Home button is missing middle click code\nhttps://github.com/brave/browser-laptop/blob/master/app/renderer/components/navigation/homeButton.js#L27. I think that this component can be Immutable component with passing activeTabId. I think that this component can be Immutable component with passing activeTabId. Please move onStop function into this component (don't pass it as a prop), so that components are more decoupled. Can you please double check what is needed and what not. Please move remaining props into appropriate blocks (used in renderer or used in other functions). can we move this functions back into renderer. I agree that some parts are good to move into getters, but we should still keep some code in the renderer. This was is easier to see what we are doing.. Please move this back to the renderer. Please move this back to the renderer. Please move this back to the renderer. this TOD only means that I should reorder this new entities in this md file when all properties are fixed. Regarding sort, I was thinking of creating simple sort object that would have siteKey and order key. This way we can have bookmarks and folders split, but still keep the order that we need for the bookmark toolbar. Something similar we use for tabs as well.\nWhat do you think?. I think that this can be removed and we only use tabs for it.. fixed. Yeah, I think it is. Because we don't use ; and you have } in the last line and this line starts with [, so this could lead into errors. I found out that we only use top sites in new tab, so top sites will be automatically added to the new tab top sites list inside the newTab component. Top sites will not be part of the state anymore.. we need it. this is needed, because we add data-test-id to span element, but click is added to div element and if you want to do click in the test you need to have data-test-id on div as well.. this TODO can be removed now. Can you please remove it in the follow up and you can close #9000 with it? :smiley: . this TODO can be removed now. Can you please remove it in the follow up and you can close #9000 with it? :smiley: . yeah I think that race condition is no longer present, that's why I suggested to do a follow up, remove todos and close issue #9000 . This will be a good one ++. Can you just please handle null scenario as well. Let's say that os is not on our list we would like to return just os value as is and not undefined/null. Thank you. fixed. :+1: . you can't have two data attributes with the same name, so it would be something like this [data-test-id=\"fa-unlock\"][data-test2-id=\"insecure-color\"] and yes we can always do that. In this case we don't need getAttribute, but we can just if data attribute exists:\n.waitForVisible('[data-test-id=\"fa-unlock\"]')\n.waitForVisible('[data-test2-id=\"insecure-color\"]'). Can we do it in this one? Because we changed logic of how color is added in this PR, I think this test should be fixed here\nFollow ups just add issues and PR's to the already long QA testing list :smiley: . Sure, I will add it to my TODO and will probably do it today. can you please sort this alphabetically?. Can you please use Aphrodite, so move this css into js file. More info here: https://github.com/brave/browser-laptop/wiki/Refactoring-styles-to-Aphrodite. Thank you :smiley: . Please sort this alphabetically. all properties in state.md should be sorted alphabetically. now is d -> ha -> hi -> s -> m. @bsclifton @bbondy in which PR for 0.18 did we fix this. I think that async menu was already implemented in Jun,probably in 0.16.x. Please use state helpers, here for example: bookmarkFoldersState.getFolder(state, action.get('destinationKey')). Please use state helpers. Please use state helpers. Please use state helpers. Please use state helpers. Please use state helpers. Please use state helpers. Can we create constants file like siteTags. Because this way we are less error prone.. This way we have state path defined only in one place bookmarkFoldersState and if we want to refactor anything it will help us a lot.. You can use here folder.get('key'), which is already string so you don't need to use toString(). action is immutable, so it should be action.get('siteKey'). I see that I already made a mistake few lines above, will fix that part in my PR :smiley: . Fixed. @ayumi can we remove this function? This function is not relevant anymore. So if we needed it we need to write a new one in historyUtil file. @ayumi now it does :smiley: . Is this check added, because we still have tags property on other devices? tags were removed from browser-laptoprepo. siteTags.DEFAULT was deprecated. ditto. as an alternative we can add type property to the history object like we have it for bookmarks and bookmarks folders and use siteTags.HISTORY. sounds good to me, let's remove it. Please sort this alphabetically . Is this change necessary? If not, can you remove line above?. np. done. we need it here. sure. done. I really like this idea ++. We were talking with @bbondy when can we remove some old migrations from session store file and this solution would solve it. What I would suggest as well is to create an upgrade script. So it automatically check if file for that version exists or not. For example: let's say that you are upgrading from 0.10 to 0.15.4. When we start the upgrade process we determinate that we need to check versions 0.10.x to 0.15.4 (it can be many versions in between, hot fixes). Then we check if file migration/0.10.15.js (hot fix) exist and if so run both pre and post migration. Then you check if migration/0.11.jsexist and so on. I would have one file per version and it would be standardized with predefined functions. This way we know exactly what was added/removed in which version.. Renamed and tests added. yeah this PR just moves things around and don't change any functionalities or introduce new ones. I also see that you are passing frameKey and tabId into CommonMenu.sendToFocusedWindow. which only accepts focusedWindow and message. what should we do for this line. lastEmittedState is local variable in appStore. Done. We need to return this new state to the appState. We just remove this dependency in #10514. Do we need it back?. :+1: . This is code is not called, because windowActions is not propagated to the windows. We could be using appState and introduce new object ui and fill this things into it. We could clear it at the end. This would be a first step of migrating window state ui into app state ui. @bsclifton wdyt?. Correct this is used to convert from possible string to integer. This conversion is a lot faster then parseInt or parseFloat. Why I changed this conversion in #10610 is because we need negative number (other bookmarks is -1) as well and this conversion only converts in positive integer.. jsperf is not working right now, so I can share specific numbers, but if this is less readable I can change it to Number() conversion. Not a problem. Changed ~~ to Number. Note that I didn't changed parentId conversion, because I already changed that in Other bookmarks PR. yeah I can remove this one, it was copied from another place. Done. Punycode was just moved from component into appState. This way we have actual and correct data in the state. https://github.com/brave/browser-laptop/pull/10659/files#diff-23ca389e2bcb77191b5a9c10900eb3a3R142. Not sure why we need to move this in to the new function. You could just create Immutable.Map() in your test (as far as I can see is that the only place that you use it).\nconst key = pinnedSitesUtil. getKey(Immutable.fromJS({\n  location: 'something',\n  partitionNumber: 1\n})). Do we have it defined in two places? :smiley: I am not aware of it. For pinnedSites we have only one getKey and format AFAIK. I preserved the same functionality, I didn't change anything. So it's working the same way it was before. The only thing that I changed is naming, because we had/have both things in it . Yeah this is how we have it now :smiley: \nhttps://github.com/brave/browser-laptop/blob/6fe9849cd3aea3faddf379b96fddb7abdecdd247/app/renderer/components/main/main.js#L533. Yes this is used in this PR #10325. what do you propose? split it and use it separately?. Logic was not changed with this PR, so cc @bbondy for this thoughts. @bsclifton I see what you mean. Let me double check. @bsclifton yeah it's working correctly. You can have regular object in immutable object\n\n. you are correct it's working without this one now, so I will remove it. Thank you. debug was added so that window is not closed and you can view dev tools and see what is wrong. not sure that I follow, are you saying that I should add windowId to the app action and this way I don't need separate windowAction?. because it was wrong. Default folderId can't be 0, because 0 is bookmark toolbar and -1 is other bookmarks. I noticed this when I was adding buildFolder function and adding unit tests for it. and if don't have any folders that means that it should be 1 and not 0. this was not a problem before (and it still isn't) because we are passing at least empty Map into this function and that's why this if is not triggered. But in unit test first thing that you do is pass null into it :smile:  What we could do as well is to check if map is  empty and then trigger this if. . there was a discussion about ~~ vs Number here https://github.com/brave/browser-laptop/pull/10325#pullrequestreview-57656377 and because it was not readable I changed it to Number in some parts. Other ~~ occurrences (this line as well)  are fixed here https://github.com/brave/browser-laptop/pull/10610/files. I prefer ~~, but please check this comment https://github.com/brave/browser-laptop/pull/10325#discussion_r137261789. yeah after this PR and #10610 are merged there will be no more ~~. done. done. moved. done. nice catch, done. done. done. done. was this done intentionally? we are not using align center anywhere else. done. Current logic is working (no reports about any problems), so I would suggest that if it's not working we should open new issue for it. If we just want to refactor it we should open refactor issue. I think that this PR is not a right place to fix this, because we didn't introduced this naming in this PR. done. done. Just a reminder that we need to update this value, before merging. I see that you use this pattern a lot. I am curious why we wouldn't like to see this error in test as well?. I see that we use this check in different places, can you please create function in utils for it. Function should receive location as param, so that we can reuse this function in other places. We can create followup where we would fix other places, that are not included in this PR. This way we would have 'about:newtab' defined only in one place.. Same as for 'about:newtab' we should do the same with about:blank. s/state/State/g. s/Utis/Utils/g. s/settings/Settings/g. s/Utils/Utils/g. s/state/State/g. define frame.get('isPrivate') as a variable, so that we don't get it twice. define frame.get('location') so that we don't get it 3x. define frame.get('partitionNumber') as a variable sot that we don't get it 3x. I think that this should be renamed to checkIfTextColor, because we are sending color in as a param. we already have this function in frameStateUtil.getPartitionNumber. I think that we need to add check here if > 0, because every frame has partitionNumber, but default value is 0. Which class name will be used here?. we need to keep this, because every single ownProps should be passed into new props object. ditto. ditto. ditto. please add // Styles. please add // Components. please add // State. Move this definition one line higher and then use this when defining frame. you need to pass frameKey in new props. ditto. this should be cached at the top as it was before\nconst platformUtil = require('../../../../common/lib/platformUtil')\nconst isWindows = platformUtil.isWindows()      \nconst isDarwin = platformUtil.isDarwin(). this needs to be moved at the top where we have react and immutable. please remove this line. we should check if this value was actually changed\ncomponentDidUpdate (prevProps) {\n    if (this.props.isPinnedTab && !prevProps.isPinnedTab) {\n      this.observer.unobserve(this.tabSentinel)\n    }\n  }. use variable defined at the top frameKey. In this component and all bellow we should be passing tabId into them. please sort this alphabetically. can we simplify this to return state.getIn(['ui', 'tabs', 'previewTabPageIndex']) || tabPageIndex. getFrameByKey can return null as well so we need to add check here as well frame && !frame.isEmpty(). we need to add null check here as well. This is called quite a lot of time when resizing, can we doubnce it?. ok will check out unit tests and try to fix it, so that we can remove this check. I think now is a little bit confusion, so if you want to keep this title I would change color param to boolean to isWhite. can you please elaborate a little bit more. I don't see a real benefit and we are reducing performance when calling action without state change. Because mouse move is happening on a tab and this functionality is limited to this component, I don't see why we can't have it inside the component.. I am not sure how to clearTimeout with debounce function? If we can use clear then this can be used yeah\n. issue created https://github.com/brave/browser-laptop/issues/10989. Now I saw that it would be great to first remove # and then /, so that would links like https://tweetdeck.twitter.com/# become https://tweetdeck.twitter.com.\nSo old code would be changed to:\nreturn url\n      .replace(/#*$/, '') // remove trailing  #\n      .replace(/\\/*$/, '')  // remove trailing /\nwhere we would remove trailing # and then check new string for trailing /\nThis is what I put together .replace(/((#?\\/?)|(\\/#?))$/, '')\n@bbondy What do you think about new regex?. done. done. now we have appAction for import :smiley: . yes it is, because if we define it like we did before (without /) it assumes that we want to get node punnycode which is deprecated https://nodejs.org/api/punycode.html. This way you specify that you are referring to the npm package.. I plan to cover all this functions in #10310, it will be unblocked soon. If we only checking here if exists I would change it to state.hasIn([STATE_SITES.BOOKMARKS, siteKey]). we are for looping Immutable.Map, which I am not sure how can I do it with index based for loop. I use this approach vs publishers.forEach() because it should be faster.. answered above. answered above. they don't and this should be false. We only create this window to generate PDF which we want to save when window loads.. done. yeah my plan for later is to remove underscore and move even more functions into util. Current ledger file is better, but still have a lot of function (which some you can't unit test) in single file. agree will try to move it in the next PR's. you don't need this check, because getPublisher always return Immutable.Map\n```\ngetPublisher: (state, key) => {\n    state = validateState(state)\n    if (key == null) {\n      return Immutable.Map()\n    }\nreturn state.getIn(['ledger', 'synopsis', 'publishers', key]) || Immutable.Map()\n\n}\n``. done. done. :smile: . done. correct I already removed it, just didn't push it yet :). done. cc @mrose17 . don't forget to move this. yes and we usebat-libraries instead ofledger-. Check inpackage.json. @mrose17 will not more about it, because he added them. This is TODO for me, because I am not sure that we need bitcoin handler anymore. We don't use it anymore. @mrose17 can we remove this?. nice catch I forgot to implement this part, which @mrose17 told me about it. @bsclifton can you please crate issue for it, so that I don't forget :smiley: (add release-blocking to it). we should have probi everywhere. we add forth (fiat) column dynamically. will be fixed with #11296. fixed in #11296. just received confirmation from @mrose17 that we still need to keep it. removing TODO tag. @diracdeltas any suggestions on the copy?. @diracdeltas we have text in backup file as wellNote: This key is not stored on Brave servers. This key is your only method of recovering your Brave wallet. Save this key in a safe place, separate from your Brave browser.` should we modify it?. will add the same text that we added in the dialog. done. crap :smile: . done. this is not part of this PR. done. done. done. done. done. I think this change is not correct, because you could have wallet that have unconfirmed balance, let's say 10$. Then you import wallet from the backup, which have unconfirmed balance 0. New value will not be saved.\nAnother use case is when your unconfirmed balance is handled, you can't hide that message, because 0 will not be saved.\nThis return in the if block is more or less from the old code. What I would do is to change it to\nconst unconfirmed = parseFloat(body.get('unconfirmed'))\nif (unconfirmed >= 0) {\n    state = ledgerState.setInfoProp(state, 'unconfirmed', unconfirmed)\n    if (clientOptions.verboseP) {\n      console.log('\\ngetBalance refreshes ledger info: ' + ledgerState.getInfoProp(state, 'unconfirmed'))\n    }\n}\n. will push to this PR. Can we use ref={(node) => { this. element = node }}?\nI don't see a need to use findDOMNode for this scenario.. Can we change this to const newClientPath = pathName('ledger-newstate.json'), so that we call pathName only once. Same can be done with statePath. Can we maybe use variables here as well?\nLike: .waitForVisible(``${contextMenuItemText}[data-l10n-id=emptyFolderItem]``). not sure that I follow. What I was suggesting is that we use variable, so that if data-test-id is changed we can only change variable and everything will work. ok sounds good. Please move this into a separate file. will check the whole ledger.js file and replace it where needed . done. done. done. done. done. done. done. done. done. done. done. done. done. Only later I notice that this can be variable, so I change it for 0.21 and 0.22. This is how it looks now\nhttps://github.com/brave/browser-laptop/blob/e6225e0a6acf67eaf40dc362f989d17010cc4cc2/test/misc-components/downloadItemTest.js#L88-L89. fixed. no it's not, this PR is still WIP and I am not sure why I tagged you and marshal (probably automatically when I was creating this PR). Sorry. This was set to false to debug something.. good point. @diracdeltas that's not the case. We only get favicon if there is not one. yes if you set it to null it will work. More info here: https://github.com/brave/browser-laptop/blob/master/app/browser/api/ledger.js#L1146. done. done. This is failing for me and only see disabled screen on payments when upgrading from 0.18.x. This is the error:\n(BLESSED_EXTENSION context for mnojpmjdmbbfmejpflffifhffcmidifd) http://localhost:8080/gen/aboutPages.entry.js:17915: Uncaught AssertionError: state must contain an Immutable.Map of migrations{AssertionError: state must contain an Immutable.Map of migrations\n    at validateState (http://localhost:8080/gen/aboutPages.entry.js:173611:10)\n    at Object.inTransition (http://localhost:8080/gen/aboutPages.entry.js:173626:13)\n    at EnabledContent.render (http://localhost:8080/gen/aboutPages.entry.js:102839:41)\n    at http://localhost:8080/gen/aboutPages.entry.js:78075:21\n    at measureLifeCyclePerf (http://localhost:8080/gen/aboutPages.entry.js:77355:12)\n    at ReactCompositeComponentWrapper._renderValidatedComponentWithoutOwnerOrContext (http://localhost:8080/gen/aboutPages.entry.js:78074:25)\n    at ReactCompositeComponentWrapper._renderValidatedComponent (http://localhost:8080/gen/aboutPages.entry.js:78101:32)\n    at ReactCompositeComponentWrapper.performInitialMount (http://localhost:8080/gen/aboutPages.entry.js:77641:30)\n    at ReactCompositeComponentWrapper.mountComponent (http://localhost:8080/gen/aboutPages.entry.js:77537:21)\n    at Object.mountComponent (http://localhost:8080/gen/aboutPages.entry.js:25250:35)}. This is working because this is not state but ledgerData which is generated here https://github.com/brave/browser-laptop/blob/f52a10989bb9c632c2fbbfecb2ec538fa28cfc7c/app/browser/tabs.js#L243 We can't use state helper here. Yes it's intentional. Because this is not really an error, it's just log that there was a race condition and it will be re-triggered after another call. I used what we have now for other constants, but I can change it. We need to add deep merge for state migration. Suggestion by @bsclifton https://github.com/KyleAMathews/deepmerge. fixed. fixed. replaced with string. do we need to have !! if I understand correctly firstFrame is (if exists) map, so I think that we should be ok without double negation. will add it after PR will be confirmed. not sure why we are passing state in, which we get in the same way as we did before?. we get it from bat-publisher library https://github.com/brave/browser-laptop/pull/11727/files#diff-3cdfdb124f718787d584e9e2b82fcedcR2505, with ledgerPublisher.getMedia.getPublisherFromMediaProps. cc @mrose17 . done. done. done. we can switch to loadash as well. In https://github.com/brave-intl/bat-publisher/blob/d896a93465df57b3cca227b90530f0b40044d5fc/getMedia.js#L77 we call publisher oembed, which is defined here https://github.com/brave-intl/bat-publisher/blob/d896a93465df57b3cca227b90530f0b40044d5fc/media/providers.json#L7 (for youtube is https://www.youtube.com/oembed?url=https://www.youtube.com/watch?v=kLiLOkzLetE) and we get back something like this\n{\"html\":\"\\u003ciframe width=\\\"480\\\" height=\\\"270\\\" src=\\\"https:\\/\\/www.youtube.com\\/embed\\/kLiLOkzLetE?feature=oembed\\\" frameborder=\\\"0\\\" gesture=\\\"media\\\" allowfullscreen\\u003e\\u003c\\/iframe\\u003e\",\"title\":\"This Is Brave\",\"thumbnail_height\":360,\"version\":\"1.0\",\"provider_name\":\"YouTube\",\"thumbnail_width\":480,\"width\":480,\"author_name\":\"Brave\",\"author_url\":\"https:\\/\\/www.youtube.com\\/channel\\/UCFNTTISby1c_H-rm5Ww5rZg\",\"height\":270,\"thumbnail_url\":\"https:\\/\\/i.ytimg.com\\/vi\\/kLiLOkzLetE\\/hqdefault.jpg\",\"provider_url\":\"https:\\/\\/www.youtube.com\\/\",\"type\":\"video\"}\nwhich contains author_url. Accidentally removed in #11882. versions updated in this PR. @bridiver here are some numbers https://github.com/brave/browser-laptop/pull/10690#issuecomment-325886207. I would add higher values, because now we are setting timeout between 1ms and 500ms. should we hide transition overlay when busy fails for the third time?. Should we also specify chromium version here? 62.0.3202.94. yeah, because now we don't have this threshold anymore. We are sending actual milliseconds in that we receive from youtube.. We are sending ignoreMinTime: true into addPublisher, so we don't need to set min visit time anymore. no we don't need this two params, but we need the last one buttonActionId, so I need to pass them in. main fix\n```\n\nnew bigNum('1234').toFormat(2)\n'1,234.00'\nnew bigNum('1234').toFixed(2)\n'1234.00'\nNumber('1,234.00')\n1\n``. actual fix. no it's not. Fixed. renamed. because we add timeout to the test sequence which is representing time spent to crate wallet. we need to fix this line as well, we don't havebatanymore. yeah will fix it in this PR. fixed, @bsclifton please re-review. we need to change this to 0.19.118, but is here for testing purposes for now. done. fixed. fixed. fixed. fixed. fixed. Can you change this one tolocale.translation(l10nId, {siteName: siteName})? We already have a mechanism for variables in the translations. . not sure that I follow, this change is not working for you?. ok, let me try it. ok I see what's going on, will fix it, so that this will work as well. @sergiorojasa ok this should be working now, can you please check out if everything is ok now? I pushed my fix commit to your PR. let's change this one to<. let's change this one to>. fixed. it's just for safety, because we trigger boot via action, so there could be race problem if we trigger interval in other place. fixed base on our slack conversation. console removed. no \ud83d\ude03 . you are correct, I was using seconds to test code out and forgot to change it back, nice catch. why do we need another standard linter command?. ok for me it's working with normal lint as well. This line checks if data is corrupted and if that is the case we don't use cache, but fetch is again. We always check for synopsis as well. If synopsis or publisher in the state are missing, we initialize it again, so that we don't have corrupted data.. do we need another toString? we are doing it on the line 267. no, using vsc \ud83d\ude03 . can we use justkeyhere same as forisPinned?. will change to your read when #12920 is merged. done. fs is defined locally, so not sure if there is any scenario where fs would exists?. done. done. we want to reduce amount of calls, so we only want to call update server when referral fails.. server can be in a different zone or not aligned with the browsers, so we need to check until referral is successful. We havereferralTimestampabove which will not trigger this checks anymore as soon as we get a green light from the server. We can add amount of attempts after which we will just stop checking?. done. done. you are correct, fixed. we have check aboveif (!updateState.getUpdateProp(state, 'downloadId')) {. switch to false, before merge!!. Yes purpose of this PR is to track progress, add comments for others and prepare code for the review. When review is done and code (PR) is approved we will merge it to the appropriate version.. we don't set it to false, we actually set value (timestamp) to it in the ledger reducer. But how would we know that we don't need to check for referral code?. this file check is the only indicator that we have to know if install is from referral or not. on thing that I can do is to set referral flag to false after we fail the first time. Because this should be only checked once that should be fine. wdyt?. @diracdeltas . currently on my macbraveis lowercase. ok implemented here b93829db3d5eaf7b0803625f225b87f5ac2b4748. Implemented logic: we only check for that file once. And if we get error when preformingfs.access` we will not check again. because server is currently expecting code 1234 for testing, so I change it to just check if we have code. added. true, done. done. not sure, but I added it anyway \ud83d\ude04 . it was not invalid, we just went one more step up and then back into the app folder. where now we just go one folder up and then into common. @bsclifton this line is problematic as well, because I think that we only want EV to be green. Please remove this line. We are doing translations via Transifex https://github.com/brave/browser-laptop/blob/master/docs/translations.md. this url's are used only here, so I wouldn't add it into the providers. done. added new syntax. we can, done. done. done. done. done. done. added private check. this block was moved, because we need to get data from mixpanel which is blocked on our side and we need to get data first and then block it. no need. problem is that they are using jquery library for selectors, and we use native html selectors\n\nmetascraper: $('meta[property=\"og:image:secure_url\"]').attr('content')\nwe: html.querySelector('meta[property=\"og:image:secure_url\"]').content. I can move selectors to the different file, so that it will be easier to upgrade. rules moved. I tried to mimic scraper code as much as possible, so that when doing upgrades we will not have a lot of problems, code changes. we don't need twitch to use this functionality. done. removed. done. done. oh yeah, my bad, copy-paste mistake. done. added some logging, so we use it now \ud83d\ude03 . done. We need to assign this call to the state, so that we actually save this change:\nledgerState.setBackupStatus(state, true) -> state = ledgerState.setBackupStatus(state, true). same as above. same as above. Can we just move this out of the tab create and do if check. If backupAction print create tab else open dialog?. fixed. Can we do state == null? This way we prevent null pass as well. next one will be CORRUPTED_DOOH \ud83d\ude0e \nyeah I can change it. Don't forget to add translation for this two buttons. it's still WIP, will remove it at the end. remove at the end. Not sure how I could do this. Any suggestions?. updated. yeah we can refactor this in the next version, so that is easier for the further implementations. updated. then maybe just plain and simple localClient. Let's extract this block into separate function and just call this function here. Also please replace this block in other places that you can find it with this new function. You don't need to pass newReconcileTime, you can just pass null in, which will default to 30 days.. done. yes this code is on the master as well, where I only moved this code into named funtion. let's extend this check to if (publishers.isEmpty() && client.isReadyToReconcile(synopsis)) {. This way we are not pushing back time every time run is called, but we push it back only once every month.. please replace this with const. url !== null let's change this to url != null. This way we are checking null and undefined. fixed. problem with that function is that it allows files as well, where we need to only check/have url's. This is the reason why I crated new function. \ud83d\udc4d . @jasonrsadler this test should fail. We should not apply / at the end if / was not there from the gecko . other unit tests are failing because of that. @jasonrsadler this only need to happen once right?. lets create new state helper aboutPreferences in app/common/state. with three functions hasBeenBackedUp (or something like this instead of noBackupKeys, getProp and setProp.. yes, let's move this into the state. let's move this into aboutPreferences state helper. fixed. done. Let's move all this 3 props into the state. Please add getter to the aboutPreferencesState.js and we can use it directly (so that we will not have getter for every prop). Same as comment above, let's add setter in aboutPreferencesState. can you please wrap this tests with this code?\ndescribe('shieldsReducer unit tests', function () { ... }. Please add check if tldjs.getDomain(location) is null. I think that we need to return state here, because we don't want to reset currentUrl and currentTimestamp. This will not work for youtube and twitch url's. let's remove prop, because we changed this to specific publisher function, so it's not needed anymore. I think this one can be problematic, perf wise. getVerifiedPublisherLocationProp is called from mergeProps, which is called a lot of times. ['ledger', 'locations'] can be a really big list which we convert from immutable to regular (expensive) and then filter that potential big list. \nI didn't run the code yet, but can't we just do state.getIn(['ledger', 'locations', url, prop]) where url is created on line 76?. can we extract this value that we set to backupNotifyTimestamp so that we don't need to do get one line bellow. Value should be the same. Let's move this into ledgerNotifications.js at the top of the file as const. we should check here if state.getIn(['about', 'preferences']) instead of state.get('ledger'). This can be removed as well. Let's just have preferences: {}. You can export it then, so this const can be used in tests as well (if you need to modify it). if you need someone to brainstorm with just let me know. not that I am aware. we can do const parsedUrl = urlParse(url) || {} just to be safe and then we can remove that if check. I would go with short version. getVerifiedPublisherLocationProp -> getVerifiedPublisherLocation\nLet's rename it, because we don't have prop anymore. Please remove this empty line. Do we need to change this? Because we try to use data attributes, so that we are not binned to the html elements. This can be const. Should this be commented out?. (state.getIn(['about', 'preferences', 'backupSucceeded']) || state.getIn(['about', 'preferences', 'recoverySucceeded'])) || false -> (aboutPreferencesState. getPreferencesProp(state, 'backupSucceeded') || aboutPreferencesState. getPreferencesProp(state, 'recoverySucceeded')) || false. I would here check only for key, because sometimes you would like to assign null to some prop in the state. Please remove this as is not in the store anymore. backupNotifyCount -> backupNotifyCount:number. We need to add backupNotifyTimestamp into this section. also backupSucceeded. this can be removed, because backupNotifyInterval is not in the state anymore. let's get this from the file, so that we have only one definition of this const. let's figurate it out, it would be good to keep this one in. please add check if interval exists and if it's an array. state.setIn(['about', 'preferences', 'backupSucceeded'], status) -> aboutPreferencesState .setPreferencesProp(state, 'backupSucceeded', status). state.setIn(['about', 'preferences', 'updatedStamp'], date) -> aboutPreferencesState .setPreferencesProp(state, 'updatedStamp', date). let's remove 0, because we don't know what type of data we will return (number, string , object, array, ...). let's add null check for key and return null if key is null or undefined. I think that we can move this check before location = pageDataUtil.getInfoKey(location). I think that we should check if enabled and only if enabled we should add this template. Please add unit tests for this function. Please add unit tests for this function. please remove this line. I think that you can do just appActions.onLedgerBackupSuccess(true) and remove success variable, because false is not used. I think that 1s is to fast. Let's do 5s. 10 * ledgerUtil.milliseconds.second, 15 * ledgerUtil.milliseconds.second -> 2 * ledgerUtil.milliseconds.minute, 5 * ledgerUtil.milliseconds.minute. It's hard to QA it if things are in seconds. process.env.LEDGER_NOTIFICATION -> process.env.LEDGER_VERBOSE. process.env.LEDGER_NOTIFICATION -> process.env.LEDGER_VERBOSE. Do we need to pass variable in, where in reducer we just set true and not use this variable?. Is this used?. I think this file is not needed here. could we instead of triggering this every 3s, trigger this only after MIN_VISIT_TIME?. also we have min count, so that means if you set this for 10, you need to visit this site 10 times. Maybe we should only add this timer if this visit would hit this minimum. This means that we would not add timer until you have 9 visits already logged and this is your 10 visit. Only in this case we would add timer, which would be min visit time\n@ryanml wdyt?. We need to remove this one before merging into the master. that's a good point. Let's keep it like it is now. yes let's do that. @jasonrsadler this is the only thing that I found, so I will just fix it and then I will merge this PR. Please rename this to something more verbose like hasRequiredVisits. Please rename this to something more verbose like getRemainingRequiredTime. Can we just check here if publisherVisits is number?. Can we just check here if publisherDuration is number?. please use aboutPreferencesState.setPreferencesProp here as well. please move this function setRecoveryStatus into aboutPreferencesState and use setPreferencesProp for all 3 props. Thank you. I think this should be null, so that you will not hit INTERRUPTED by default. I think this call is not needed, because we already have it in onRecoveryOverlay. done. done. I think that as soon as fuzzing is triggered we should display notification, even if something was not send over correctly. wdyt?. null check added. good catch, not needed. comment added. If I go to the link above it says Brave Browser: Fast AdBlocker - Apps on Google Play. I think we need to update it. @Jacalz . Place of this function is not perfect. Where would you put it, so that I can also add unit tests?\ncc @bsclifton @petemill . Can you please add check if sites is defined?. I was thinking about that file but was not sure. Ok let me put it there. Thx. Normally if we want that one function is used by another component, we would move it into util file. I think we are good here. moved. lol I added them but then forgot to actually add them \ud83d\ude04 thx. tests added. not sure, this is what it was used so far. done. fixed. removed. fixed. We use 14.5px in other places by default, so that's why I set it here as well. Not sure if needed. Not sure if needed. I don't think that this is needed, because we will delete all data related to the payments in the state, so when you run it again it should override this file if still exists. fixed. fixed. We would like to keep memos, because we use them for debugging if needed. nit: this can be one liner assert(onChangeSettingSpy.withArgs(settings.PAYMENTS_ENABLED, false).calledOnce). I think this test is not needed as we test it more detailed bellow. test added. @jasonrsadler can you please move if check into the function as well. we could also include that purging is not reflected in the table (which was not the case before that, synopsis would be purged, but table would not be so you would be stuck in pushback hell). Let's move this one into onLedgerQRGeneratedCallback so that we have the whole logic there and we can just do  .on('end', module.exports.onLedgerQRGeneratedCallback.bind(index, chunks)). Can we move this whole try/catch into onInitReadAction. Why do we need this in public object? We get this automatically when we run spec. TODO remove. Can we instead of duplicating span and copy pasting styles, have just one function for this action and then inside that function we can trigger different stuff based on the flag. This way it's easier to refactor things or add some new classes to the span, less error prone.. We should not log private tab url's. Same here. Same here. fixed. I think this needs to be Brave-Ads-Trial. If I understand correctly this is dmg file name.. We can remove gulp. I didn't find usage anywhere\ncc @bsclifton . Let's reroute onResponse through appAction so that we will get state from the reducer.. This will not work AFAIK, because we bind updateList to this function and bind is first param and then params that are added. Is this working correctly?. hmm, so it's other way around? bind at the end, that's strange. Please add unit test for it. Please add all this state fields into state.md as well. @jasonrsadler This should be removed, because what happens if you do second contribution. why was appAction removed?. We need to track timeout and clear it before we add a new one. This variable needs to be random so like between 45 to 60s. that's true, appConfig shouldn't have this timers in ther. This shouldn't be changed. Not sure if we need new entity, maybe just create options inside userModel. This way we don't need to pass another object into components. then we should fix clear and preserve locals. we have access to this key braveAds?. I think that state here is not needed. I think this is not needed any more, because we trigger check only after init is done, so we can stay with 10-15sec\ncc @bbondy . let's go back to the first implementation that was 45-60s (I think that init + 45s should be enough). this should be random for example 50s to 70s. This should be delayed as well. state in this case could be already outdated. You have up to 70s old state inside. @ryanml . done. Do we need appAction? you have state that you need in this function. Please add this prop into state.md. what we will get with 10 sec delay?. we should check default ruleset from client as well. Aren't publishers immutable object?. could you have large publisher set with less then 30min? . Can we optimize this one to stop counting when you are over 30min?. I guess if you set visit time to min, then table could be quite big before you reach 30min. Let's keep it like you have it. We should be getting publishers from the state and not synopsis. This one can be removed and do a reducer directly on publishers list.. We should do browser activity check only if ledgerStatuses is FUZZING\nif (curBrowsingTime >= minTime || ledgerStatus !== ledgerStatuses.FUZZING) {. you can just do key.get('duration') (please rename key to publisher). nit: can we just rename exclude in result and have one return?. Why this was added?. Yeah I was too fast with this one, I though that you were doing something else, sorry. explained in DM. is this change needed?. ",
    "DocWatson": "I'm having a similar issue with links in Gmail. On Windows 10. The issue occurs if I left click on a link or middle click. However, if I right click and \"open in a new tab\" the link opens without issue.\n. Just updated. No problems on my end! \n. Yep, pretty sure this is a duplicate of #425. The latest update should fix this :)\n. Should be. #425 fixed this problem for me a week or so ago.\n. ",
    "jairomtzant": "I am using GMail and I get the same but using Shift + Right Click.\n. ",
    "LightningK0ala": "+1 this would definitely encourage me to migrate to brave sooner! Great work by the way guys!\n. +1 this would definitely encourage me to migrate to brave sooner! Great work by the way guys!\n. ",
    "smithkl42": "FWIW, this is probably the main thing keeping me from using Brave as my default browser. The sync-across-devices feature in Chrome is really helpful, and (so far as I know) Brave doesn't have it yet. Other than that, Brave is so much faster and more stable that it's really what I would like to use.\n. ",
    "darkdh": "PR is on its way. It supports importing bookmarks, history, cookies from other browsers along with new way of importing from bookmarks html.\nFollow-up items are in https://github.com/brave/browser-laptop/issues/2107#issuecomment-248221558\n. you can see the tracking ticket here\nhttps://github.com/brave/browser-laptop/issues/7071. I did some little hack on electron for 77c534a. I think maybe we can make some changes on electron to extract the detail attributes from certificate. It may be a long term and better solution and we can reduce the effect to integrate with node-forge\n. @diracdeltas do we have to submit a issue which is sending the entire cert object via IPC causes a renderer crash?\nAnd do we still need a link for user to download raw certificate after showing more detailed information ?\n. But I have it tested on my local side and autofill seems fine.\n. Yeah, I cannot click on the pop-up context menu either.\nBut I got username/password filled when page loaded.\n. Updated in 69bd164c2160a1ae2323d56b8cb8de40ebe930d6, thanks.\n. Yes, and also update button of password prompt in 94d28c7\n. Thanks for reminding, @diracdeltas. Fixed!\n. Thanks yan!\n. Thanks for your advice, @diracdeltas.\n. Thanks for the feedback. Fixed in 1477399\n. Fixed in 90f62be6c22934e55142a1e2b6a0981854e58a1c. Thanks.\n. This should be APP_REMOVE_AUTOFILL_CREDIT_CARD\n. Fixed in d700753\n. Thanks for clarification. Changes has been made in 66dc10c.\n. Move it to load start in cecb967\n. made naming consistent in cecb967\n. you're right. it will make the code more readable. addressed it in cecb967\n. Updated in 138692c. Thanks\n. Updated in 138692c. Thanks\n. ah, you are right. I forgot to add it.\n. Sounds better. I will changed to use frameProps.get('location')\n. But the handler is for electron dependent bookmarks object and whole block is meant to handle it specifically. So I am not sure that we can pull out a generic method from it.\n. addressed it in 1dee63d2b030914676811eef44829cbd972907a2.\n. Thanks. fixed it\n. You can try .click('.contextMenuItemText=Add Folder')\n. Addressed in 7de0c05.\n. Address in 7de0c05.\n. Nice for parent traversing!!!\n. Thanks for taking care of non multi table selection. \ud83d\udc4d \n. Can we move this into mergeSiteDetails?\n. great coverage!\n. I use -1 for \"Other Bookmarks\" in importer too.\n. Ah, no it must be a rebase mistake\n. fixed. thx\n. maybe provide a example would be more clear, like git fetch origin pull/1234/head:pr-1234\n. Maybe also specify state owner must possesses state.selection property\n. we can append an example under this line just like my previous comment and readers can replace 1234 as their PR number in a glimpse.\n. Who dispatches WINDOW_SET_FAVICON? I didn't see it in this PR\n. I see. \ud83d\ude1b \n. because dashlane doesn't create context menus and other's do which cause repeated entries shows in https://github.com/brave/browser-laptop/issues/5291\n. ok, I see. removed!\n. ++\n. This is the root cause of last backed out\nhttps://github.com/brave/browser-laptop/commit/766722ad8e33706de2d53b6137e011ce233296a0#diff-23ca389e2bcb77191b5a9c10900eb3a3R443\n. Is this duplicate move to navigator intended?\n. type 123/123. will be search string on other browsers. fixed in cd71e0e and test is also covered. Mainly changing logic of end with period, which is \nbrave.com/123. will be url and brave/com/123. will not. do we need accelerator for dock menu? . I think maybe we should move these three styles to parent selector of .sectionTitle\nso the original sectionTitle style will remain the same.\nPresent look:\n\nExpected look:\n\n. Please see the comment in less/about/siteDetails.less. And if we do so, width: 424px would be aligned. @  NejcZdovc, I think we should remove accelerator.. Sorry, I didn't put the icon aligned. What I meant is \n<div className='title'>\n  <span className='sectionTitle' data-l10n-id='versionInformation' />\n   <span className='fa fa-clipboard' title='Copy password to clipboard' onClick={this.onCopy} />\n </div>\nWe wanna keep the original attribute for version information like orange color.\nSo we can put the attributes of display and justify-content into .title\nAnd as @luixxiul suggest, we can add margin-right to .fa-clipboard. \nThat is the same margin-left aligned with the sortable table below. Maybe we should pull removeEngineShortcut into utility function in the future, @bsclifton ?. Can we use Immutable.List() ?. same as https://github.com/brave/browser-laptop/pull/6115/files#r91848663. I guess you might forgot to call addSite for this siteDetail and you may need to leverage previous processedSites as first argument.. But it has already printed name: message + stack. Ex.\nDeprecationWarning: Calling an asynchronous function without callback is deprecated.\n    at maybeCallback (fs.js:95:42)\n    at Object.fs.appendFile (fs.js:1237:14)\n    at debug (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/updater.js:30:6)\n    at Object.exports.updateUrl (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/updater.js:52:3)\n    at Object.exports.init (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/updater.js:91:25)\n    at PackageLoader.load (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/index.js:732:15)\n    at fs.readFile (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/package-loader.js:16:5)\n    at tryToString (fs.js:425:3)\nIt would be like this after added\nDeprecationWarning\nCalling an asynchronous function without callback is deprecated.\nDeprecationWarning: Calling an asynchronous function without callback is deprecated.\n    at maybeCallback (fs.js:95:42)\n    at Object.fs.appendFile (fs.js:1237:14)\n    at debug (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/updater.js:30:6)\n    at AutoUpdater.autoUpdater.on (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/updater.js:246:3)\n    at emitTwo (events.js:106:13)\n    at AutoUpdater.emit (events.js:191:7)\n    at Object.exports.init (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/updater.js:98:19)\n    at PackageLoader.load (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/index.js:736:15)\n    at fs.readFile (/Users/darkdh/Projects/browser-laptop-bootstrap2/src/browser-laptop/app/package-loader.js:16:5)\n    at tryToString (fs.js:425:3)\nPlus node's warning message might be too many of them\n(node:18561) DeprecationWarning: Calling an asynchronous function without callback is deprecated.. Test looks good but I think we should remove oldSiteDetail's tags to make it closer to our use case \"Bookmark a site after it is added to history\". I think we should just move L663 here. Just like reverting the part of this commit https://github.com/brave/browser-laptop/commit/7fb2e4c30c98b592c00fc390648f99672a6caad7#diff-733d30fbf34816322d3f25dd59c1eb99L651. We should check !!selectedMenuItem.get('submenu') here. You can press right at the end of submenu to see what happened. It will be undefined on popup menu and null on menubar. I think this line should be (this.props.selectedIndex === null) ? false : this.props.selectedIndex.length > 1\nThere is a chance this.props.selectedIndex will be null regarding https://github.com/brave/browser-laptop/pull/6452/files#diff-195859572336a7940350e808382f7fe8R398\nSTR:\n\n. updated in f9861f9a72359cf5ea5af829e3b273151ef60d2c. will do. Could you put this check in scroll-touch-begin? Because we don't want user to restart for every system setting change. Other browsers do not require restart and we should have the same behavior.. I think this ) should be in L39 so that resourceType !== 'mainFrame' only affect isThirdPartyHost(firstPartyUrl.hostname || '', url.hostname). lgtm now! Thanks for doing this \ud83d\ude09 . We need a better way to deal with the out of order.\nThis will cause significant slowness. sorry for the confusion, new never save password list will migrate and save in chromium as the password entry with blacklisted_by_user = true attribute.. It will be saved in our user dir as Login Data sqlite format encrypted by OS keychain.\nSo for example if you are on Mac, Brave will prompt to ask keychain permission.. sure will do. good call, will make a copy.. If it has already migrated, the original password will be empty and it won't do a second migrate.\n(Re. previous comment, will also make a copy of password). @bridiver I tried to do it in sessionStore at the migration section but our migration requires electron.session. And at that time app is not ready so we will have Error: Session can only be received when app is ready. getSitesLikeKey seems not very instinctive to me. Maybe getSiteBySubKey? And we can extend this function to support more sub key if needed. Is it supposed to be 0?. Will do. \nThese two state set lines are under if (passwords.size) {...} which use to check non-migrated data and I think inside of passwords.forEach((password) => {...}) is called once per password. sorry my bad for typo. I think it should be getSitesBySubkey the plural :stuck_out_tongue: . It is for displaying origin for message box\nhttps://github.com/brave/browser-laptop/pull/8751/files#diff-d4f09c262fdb2f86d8f7407afb926c8eR19. will do. If the default is false, the notification won't popup in most of the cases because https://github.com/brave/browser-laptop/pull/8751/files#diff-d4f09c262fdb2f86d8f7407afb926c8eR21\nThe only case it will show up is users toggle global autoplay to block and without site setting of autoplay to the website\nThe setting is similar to our default fullscreen setting.. will do a follow-up along with\nhttps://github.com/brave/browser-laptop/blob/b2618c911863b7930b054b3f6562224d6acf3cbe/js/flash.js#L83. fixed in 4652c1f. Yes, we will sort sites after ADD, REMOVE, MOVE in this PR. comment added. we need to add PasswordStore::Observer on muon per discussion.. \b++. why removing this.props.currentDetail? This will cause save not working. you will also need to set \nprops.currentDetail = currentDetail\nprops.originalDetail = originalDetail. guid arg here can be removed now. forgot to remove?. s/Favourites/Favorites/. currentSelectedBrowser would be better. we can remove this check. type will always has value which comes from muon.. nice cleanup. I think this check can be removed. Is there any case it will have value when componentWillMount being called?. neat pick. The order is different than others. \bThe firstPartyUrl should be cookieException[0]. I will make it right in the commit changing the cookie exception to map. ah, I forgot to remove the workaround. thanks. :sweat_smile: yeah, I forgot to remove. We don't delete history for a reason which is to prevent https://github.com/brave/browser-laptop/issues/7238 from happening. This line will cause the regression of #7238.\nMaybe we should revisit this after #10136 landed. ah, I forgot to remove it. Thanks. but I tried this PR with STR in #7238. bookmark will disappear and pinned tab will also disappear after relaunch. ++ for aggregated migrations. We have many migration scattered around now and some of them are made by me :stuck_out_tongue_closed_eyes: . I think we should also check if legacyPasswords exists or not. If so, we should delete it to prevent our session data from getting bloated.. gnome-keyring is deprecated by libsecret. unless you happened to be the 3%\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=466975. And I think this is the deps for keytar use not for muon which will be precompiled before browser-laptop can use it.. In what case will require us to manually close tab?. any reasons for why not just using page = page.trim()?. we will also need mac_x64 for widevinecdmadapter.plugin on MacOS\n\n. ah, my bad. It seems weird to me to pull dependency from app folder for tools. ef52180ed10eab223971c605854398adcaeea422. They are like blackbox even if I can see the name and value. And it is not a single cookie cause problem so I narrowed them down to a small set.. path should be ../js/lib/appUrlUtil. no result comparison?. ditto. ditto. as mentioned in https://github.com/brave/muon/issues/320#issuecomment-340082014. we should also remove shouldSkipCookie and its unittest. I don't know the root cause but when I tried to use APP_SET_STATE, it has no effect for these two preferences.. addressed in 130d7ef77722cab1c3e416d6b74efdaf59005e6a. addressed in 130d7ef77722cab1c3e416d6b74efdaf59005e6a. It will try to get path of chrome::DIR_DEFAULT_DOWNLOADS in atom_api_app.cc\neventually leads to \n```c++\n    case chrome::DIR_DEFAULT_DOWNLOADS:\nif defined(OS_ANDROID)\n  if (!base::android::GetDownloadsDirectory(&cur))\n    return false;\n\nelse\n  if (!GetUserDownloadsDirectory(&cur))\n    return false;\n  // Do not create the download directory here, we have done it twice now\n  // and annoyed a lot of users.\n\nendif\n  break;\n\nin `chrome/common/chrome_paths.cc`\n`GetUserDownloadsDirectory` has different implementation on different platforms\nIt will be `~/Downloads` as default. addressed in b2f581ca0ec3f461bb27afacd1e3539963c84ad6. ditto. oops, I must yanked and pasted too many times \ud83d\ude1b . it is the default value of `SWIPE_NAV_DISTANCE`, are you suggesting make it into settings constant? We don't allow users to config it so why bother?\nhttps://github.com/brave/browser-laptop/pull/12434/files#diff-de5d4f1b019deecc5b1926970450546cR257 here doesn't appear to be magic number to you?. do we need to handle `content-status-displayed-and-ran` which indicates both passive and active mixed content?. never mind, I forgot we default block that active mixed content scripts so it won't reach that case. it should be `setAsDefaultProtocolClient(p, desktopName, [\"--\"])`, desktopName is not part of args. my bad, Linux implementation only reads desktop name so no need to add extra args\nthe args that needs -- is https://github.com/brave/browser-laptop/pull/12795/files#diff-23ca389e2bcb77191b5a9c10900eb3a3R507. https://github.com/brave/muon/blob/80442e401dd3f78d55f78daf2f5f2d8505970296/atom/browser/browser_linux.cc#L92. it uses default value `Defaults to process.execPath`. we should add `['--']` just for Windows just like `protocolHandlerMigration` did. although it does no harm to Mac implementation because we don't use those args\nhttps://github.com/brave/muon/blob/80442e401dd3f78d55f78daf2f5f2d8505970296/atom/browser/browser_mac.mm#L79. thanks for reminding.. just fixed in 9048d8a5ac1e4ebe96027306b0fc087051a9aae1. btw, the correct value should be `SiteInstance`\nhttps://github.com/brave/muon/pull/473/commits/c3d6769ba628f4da20d9907dc44dfb6821036d03#diff-df5c427fd693f9ebb2e5952cf0e9c8c7R749. it is better to test `eb\u0430y.com/@eb\u0430y.com` or something like that which makes both contains punnycode. it is better to use `getExtensionsPath('bin')` so that we can have different binary in it like `geth`\nand also need to check platform for Windows in order to use `tor.exe`. yeah, or we will get trouble on Windows.\nif defined(OS_WIN)\n// Windows-specific LaunchProcess that takes the command line as a\n// string.  Useful for situations where you need to control the\n// command line arguments directly, but prefer the CommandLine version\n// if launching Chrome itself.\n//\n// The first command line argument should be the path to the process,\n// and don't forget to quote it.\n//\n// Example (including literal quotes)\n//  cmdline = \"c:\\windows\\explorer.exe\" -foo \"c:\\bar\\\"\nBASE_EXPORT Process LaunchProcess(const string16& cmdline,\n                                  const LaunchOptions& options);\n``. yeah, we must move it out.. it is actually a bug @diracdeltas mentioned in https://github.com/brave/muon/pull/473#issuecomment-376620108. This can be done in muon so we can remove it here. ditto. Can we also add chromium doesn't have mediaPermission in content setting? It is actually microphone && camera in chromium. again, that is intentional forfeatures::kTouchpadAndWheelScrollLatchingenabled in c69 and master does't have the compatible version of muon now.\ncould you try 0.23.x-c69 branch first?. did you deletenode_modules/electron-prebuiltand redo a npm install?\nIf you didn't, that means you don't have the correct muon version.. you can also try https://github.com/brave/browser-laptop/releases/tag/v0.23.202beta which is just built from that branch and contains this fix. I believe the problem you talked about is no way to cancel the navigation once you reach 100%. you can try to fix that. But I don't see so called incredibly high sensitivity. I'm going to emit more attributes from muon for this event so I can update the precise units. you can try 0.23.x-c69 again now. new muon build is ready . why can't we check default browser by https://github.com/brave/browser-laptop/blob/646212bafbce0b1bb8e93919435d27613b7af20c/app/index.js#L258?. can we put space here instead of insidedefaultBrowserArg?. And by the method, you should be able to check default browser on Windows.persist` means \"remember this decision\" and there is nothing needed to be memorized . ",
    "Kainzo": "So... is it possible to have your passwords retrieved from Chrome? cause I want to move to Brave to break up with Google.... ",
    "fermulator": "In the \"import browser data\" (v0.19.134-1), don't see the ability to import Firefox \"saved tab state\", I presume that is not yet implemented? (can't find an open ticket for it either). ",
    "zvezdaburya": "Encountered the same problem in Ubuntu 14.04 using brave 0.8.3.\nI took a look at  ~/.local/share/applications/mimeapps.list and found that brave was not added under [default applications] so I added it manually, basically copypasting the lines which ended in firefox.desktop and replacing firefox.desktop with brave.desktop. \nNow brave shows up in default applications and can be selected, however when clicking a url in a program, say telegram, the browser launches with a blank window. If the browser is already running nothing happens, no new window, tab or anything. That might be my own mistake though, I am sure I have missed a step somewhere...\n. ",
    "jakedappcast": "I didn't know how to set default programs in the browser and for most people who don't know how here is a link explaining the steps: http://www.groovypost.com/howto/change-default-browser-windows-7/ \n. ",
    "johvan": "Windows 7 and the first one.\n. ",
    "CtrlAltDefeat94": "417\n. ",
    "Jacalz": "+1 from community https://community.brave.com/t/please-install-brave-to-proper-location/5755?u=jacalz. The thing is that it would be better to have an open sourced reader mode integrated in to the browser than having a closed source reader mode extension. Mercury reader is good but since Brave is a browser that cares about privacy, maby it should be better to use mozilla readability instead \ud83d\udc4d Then we can truly know that the sites you are visiting doesn't get leaked \ud83d\ude05   . This is fixed now :+1: . Fixed now with latest commit :+1: . I would suggest we do because then we can drop the \u00ae part at the end.... This is now fixed :+1: . ",
    "Nitrooo": "+1. ",
    "SRyGit": "Windows workaround sugestion: redirect your folder:\nYou got to log in with another account (so you don't have modify problems), then move\\copy your AppData\\Local folder to another drive, then modify your registry for your Local AppData to the new location. Then restart and log in and all of your growing data location would be on a different drive.\nThis would save space on C:, in fact, you could do this for your whole Profile if you want, which I sometimes use to revert a C: drive without reverting my profile\\documents\\etc. changes.\nI do not know yet how W10 upgrades handle this yet; not tested, but I'm assuming that Enterprise accomodation will have it covered, unless they want you on UEV or such eventually.\n. ",
    "Neustradamus": "We need possibility to install in the good folder and for all users.. ",
    "hasanhuseyincakir": "Ctrl + H doesn't work either.\n. ",
    "opyh": "Is there an ETA for that? That's really the biggest thing that prevents me from being able to try Brave as my main browser\u2026\n. ",
    "dunn": "Based on the forward- and back-button context menus, it looks like each BrowserWindow has its own history.  Does this mean that Electron has no concept of global history and it'll have to be implemented from scratch in Brave?\n. ",
    "Duranis": "This seems like a downer.  Received a Brave - UPDATE message.  Went ahead with it thinking either 1) would reopen with the tabs I currently had open...no it did not (yes I did have that preference turned off - but when the browser prompts you to perform an update and that it needs to restart perhaps either bypass the preference and restore pages on restart or give the option to override your preference at that time) that did kinda irritate me because I had forgotten I had that option off.\nBut 2) History : I should be able to see my history and restore the tabs that A) I had opened last (...Firefox - \"Restore Previous Session\") or B) at least see the history of pages I have opened over the course of today, yesterday, etc...  Sadly I cannot see any history, no history log at all and the \"Reopen Last Closed Window\" does squat.\nWindows 7 Ultimate\nBrave 0.11.4\n-Updated: Also the CTRL+Y doesn't work if that really is a function within Brave.\n`Sadly I had to edit this comment, unable to do so from within Brave had to do it from Firefox.\nDoh! forgot had SCRIPT turned off as well.  Was fine after I enabled scripts on GitHub\n. ",
    "doriandrn": "It's all about font-smoothing rendering.\n. ",
    "erossonero": "Hey Brian, yes im running 0.7.10 (app-0.7.10)\n. @wblondel NVIDIA GeForce GT 530\n. @wblondel updating the video card drivers worked. It shows white now.\nThanks!\n. Closing this, it seems to have been fixed!\n. ",
    "ramons03": "Same Issue for me. Even if you have multiple tabs. It closes the entire browser.\n. ",
    "cortig": "The OS X app has a vast number of .lproj folders inside it's resources, but they're all empty. If I had to guess: it'd be coming at a later stage\u2026\n. and so did-I :-)\n. Problem solved with 0.7.11 :-) The app is launching fine for me now.\n. Problem solved with 0.7.11 :-) The app is launching fine for me now.\n. OmniWeb has the command, right in the OmniWeb menu and so do Camino and DEVONAgent Pro.\nFirefox and Chrome are a bit different since they wanted to offer the exact same UI on all platforms.\nAs far as I'm concerned, I'd rather see Brave stick to the general OS X look and feel for the OS X version and the Check for Update command should then be right there in the Brave menu.\n. ",
    "grshotton": "I found that I could not run Brave 0.7.10 if it were installed in the system Applications folder (OS X showed an error dialog saying it was damaged and could not run). But when installed in a subfolder of my (non-administrator) user's home folder, it runs and updates correctly.\n. ",
    "FrancisTurner": "Almost certainly related. But note there is no CTRL-Clicking\n. Not in windows. Can't select the text\n. Nor do I in Linux. Neither in the Help menu nor the righthand menu referenced by @jbmonroe \nIn windows I'm only getting it in the Help menu\n. I did not know that. But yeah it appears to work. \n. It works now with the current build\nHit About this. Click anywhere in the dialog that pops up. Press CTRL-C and you get the following\n[Window Title]\nBrave\n[Content]\nVersion: 0.7.15\nElectron: 0.36.8\nlibchromiumcontent: 47.0.2526.110\n[OK]\n. That explains it :)\n. That explains it :)\n. Adidtional text per suggestion in issue #558 \nBrave uses port 8080 to communicate between its client and server sides. If you are using port 8080 for something else then you can set the environment variable BRAVE_PORT to make it use a different one.\ne.g.\nBRAVE_PORT=9001 npm run watch\nBRAVE_PORT=9001 npm run start\n. This is after a git pull and npm install.\n. ah yes. A zombie previous version of webpack :)\nIs there a good way to kill one wihtout manually doing kill ?\n. Test\n\n. Based on the test above: the latest build pulled from github does drop the image correctly but ALSO opens the image in a new tab - see attached\n\n. Agree. Further testing suggests a werid JS issue on some sites. Closing.\n. YOu should probably link to the Troubleshooting page. The two pages are probably complementary.\nDefintiely need to note that for dev use you HAVE to get the right versions of node etc. \n. Should I also move the previous node-gyp line as well? \n. ",
    "jbmonroe": "I don't even get Help|About Brave now.\n\n. That doesn't work at all for me.  \"Selecting the titlebar?\"  What does that mean?  Ordinarily text selection is clicking and dragging.  Clicking and dragging the title bar just moves the window.\n. For the last two builds I can't get an \"About\" dialog at all, so even if \nCtrl+c works, there's nothing to grab.\nOn 2/15/2016 7:19 PM, Simon Knox wrote:\n\n@jbmonroe https://github.com/jbmonroe by \"select the titlebar\" I \njust meant click it. In windows you can ctrl + c the active window to \ncopy the contents (for dialogs at least)\nhttp://www.howtogeek.com/howto/windows-vista/copy-windows-error-messages-to-the-clipboard/\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/brave/browser-laptop/issues/463#issuecomment-184450306.\n. \n",
    "Infernoman": "Update on that quickly. I was able to get the tab back when i pinned an existing tab. From there I was able to go onto the facebook tab and see the video playing in full screen and close the video and tab. But the browser is still in full screen with no way to remove it from that mode.\n. ",
    "madalinignisca": "Ctrl + Shift + I    / Cmd + Opt + I is actually the main shortcut keys for \"Developer tools\" in Chrome and Firefox (may be in Opera and some other).\nF12 is the default for Internet Explorer and accepted by Chrome on Windows only.\nMaybe like Chrome does, both shortcuts should be there for convenience and acceptance of most of us.\n. No we have to move my hand... Why not respecting what the majority supports? CMD/CTRL + Shift + I?\n. Thank you. I'll try it at home later on a personal project.\n. ",
    "m14t": "Here's a screen shot of what I see when attempting to view a video in Brave (without using any SiteHacks):\n\nThe help center link, https://help.netflix.com/support/27451, suggests updating the WideVine (a Google company for DRM video) component, by going to chrome://components/, but that url does not work in Brave.\n. ",
    "vurstp": "Experiencing the same issue as m141\n. ",
    "MegaUber": "I've gotten it to work on os x, Widevine and Flash on everything. \nline 102 - frame.js\nthis.webview.setAttribute('plugins', 'true')\nThis is what i used to make the webview always have plugins, after that its just a matter of adding in the proper plugins and app.commandLine.appendSwitch.\nI also for safe measures added \nplugins: true\nto appStore.js lines 124 and 215\nIf you'd like to see what i did for my app.commandLine i'd be happy to share :)\nI managed to do all this without rebuilding electron or anything, just adding a few lines of code to the current files that brave is using. \n. Here is a link to a gist i put together that might or might not help if i did this right lol\nand I'm sorry I'm kind of new to actually well sharing on github, what is PR?\nWidevine && PepperFlash\n. ",
    "jneumann": "I just submitted a PR for this. https://github.com/brave/browser-laptop/pull/1293\n. ",
    "iangelov": "Still very much an issue. One could use the experimental Flash support, but that's clearly undesirable (I yearn for the day in which we could get rid of it for good).\n. ",
    "h3xp4n": "I am Brazilian and I would like you to help me in this problem .. I can not in any way implement Widevine in browswer. My twitter @EuNlope \n. Algu\u00e9m pode mandar a linha de c\u00f3digo pra mim por gentileza? Someone can have the line of code for me please?\n. They decided whether or not to put the Widevine component in the next version or in future versions?\n. Can you tell me how I can add it to the browser ..?\n. OK thank you.\n. Still do not intend to add Widevine to the browser?\n. Ok thanks, it is noteworthy that the Brave is on track, great browser ...\n. At last brought this to the browser .. Let's see how it behaves with the adoption of this plugin.\n. ",
    "mattapperson": "Still a major issue with amazon prime video too\n. ",
    "BrendanEich": "@jaydson we got the Google blobs for Win and Mac in time for 0.12.7 but Linux is different. @bbondy can say more, but should have it in next release.\n. In general for \"rich\" (as in pwnable) legacy media types handled by extensions, we want a setting to disable.\n. Don't you want return new Set(...args) for full generality? No point collecting the  traversed arguments in args past the first one if you use only the first one.\n. ",
    "kirkins": "Any updates on the linux release?. ",
    "tvance929": "Saw that about 10 seconds AFTER I left a message on this thread.  Thank you guys for knocking that out!  Love this browser!\n. ",
    "pluma": "This makes aggregator sites like Hacker News and Reddit harder to use because it's impossible to tell at a glance what links you've visited or not.\nI'm guessing this is based on a misunderstanding of the privacy risk: although other browsers allow modifying some of the visual properties of visited links (especially color) the visited state is not exposed to the DOM (e.g. via element.matches) and the styling can not use properties that would alter the link in a way that is recognisable in JS (e.g. switching fonts to check for a size difference).. As a citation for the claim that this is a fundamental usability feature:\nhttps://www.nngroup.com/articles/change-the-color-of-visited-links/\nI think it can even be argued that this is an accessibility feature because it reduces the cognitive load when browsing link lists (e.g. reddit, HN, as above), especially for people with mild cognitive disabilities.. ",
    "pmkary": "~I think #6395 is probably related to this issue. So this might be with all link styles in general~\nUpdate it wasn't the case, the problem was (and still is) within Chromium project.. ",
    "dominykas": "\na pretty cool optional feature\n\nNot sure I agree. This is a fundamental browsing UX feature, esp. on any sites that you return to frequently that it's likely desirable to be on by default. Ever since I switch to Brave as my default, this is the single major issue I have with it. It is painful on various classified ad websites (planning some big purchases...) and it is painful on search engines (esp. when searching for the same thing using different keywords).\nThere may be scope for some intelligent handling if this is an \"optional\" feature (e.g. suggest to turn it on if the site is visited frequently and has long lists and the visitor is going through these lists clicking multiple items). In fact in the situation described, I'd even consider a notification to turn on the visited link highlighting even if the website sheet does not have :visited configured.. ",
    "Pitasa": "It would be great to have Pocket available, but it would be even better to have it 'integrated' in function rather than doing what Mozilla did, disabling the addon and replacing it with a crippled version. Just  saying you integrated it but with all the functionality destroyed  isn't really integrating it.\nIn Firefox, the old addon version worked much better than the integrated version. If you can integrate it and restore the functionality from before it was integrated it would be really nice.\nFor example, when you visit a page that you have already bookmarked, the old version would light up the Pocket button so that you know you have already marked it. The button acted as a toggle, so you could mark and unmark by clicking the same button on and off. \nThe old version had a drop down so that you could, in a single click view a list of last 10 or so pages added, you could then click on a page in the list and view the original, full webpage.\nThe Firefox integrated version of Pocket hides the pocket list away in bookmarks, which is pointless, as it's easier to use bookmarks instead. Worse, it only allows wiewing a crippled version of the page, meaning another click to view the full original page - another reason to use bookmarks instead.\nAll this means that in Firefox, the integrated version of Pocket is useless compared to the pre-integration version.\nPlease do integrate Pocket, but please make it work at least as well as the old Firefox pre-integrated addon version.\n. ",
    "sebastianmacias": "+1, this is so far the only thing keeping me from switching entirely to brave. I even tried the bookmarklet but didn't work.\n. ",
    "borisrorsvort": "@HLFH  It's quite dangerous to integrate a new tech that has no adoption yet. Think about if it goes unmaintained\u2026 Then brave would have to pick it up to keep his users happy. Pocket is not open source but is well maintained and probably still for a while. Also, most non tech people will never install wallabag themselves.\n. ",
    "nicosomb": "\nhas no adoption yet\n\nIt's like the 1st required experience for a job :) \n\nPocket is not open source but is well maintained and probably still for a while.\n\nThink about if they don't find any business model.\n\nAlso, most non tech people will never install wallabag themselves.\n\nThat's why we also have SaaS.\n. ",
    "thechild": "One other option would be to just include this chrome extension (https://mercury.postlight.com/reader/) to get a great reader view.. ",
    "rdetert": "+1 Reader Mode is the one thing I miss from Safari on desktop. I can read so much faster.. ",
    "calebbarr": "+1. ",
    "ironfish": "+100. ",
    "stephenkilpatrick": "Add me to the +1's.. ",
    "davidhfo": "Another +1.. ",
    "iamhenry": "Looks like this isn't a priority but I'm going to +1 this as well. . ",
    "patertmg": "Got  #Mercury Reader Extension (but not  #Evernote Extension)  to work following this article: https://medium.com/@jonathansampson/testing-chrome-extensions-in-brave-8e25d1f7386d. @jonathansampson Great so long! There are only two minor concerns: (1) don\u2019t know why, but Mercury doesn\u2019t show an icon - there\u2019s only a grey space up in the corner, so I have to click \u201cblindly\u201d on it (2) would be even better if i could define a shortcut to start Mercury. Thanks!. ",
    "blacktop": "+1. ",
    "oleim": "+1  (Using Brave as default and this is the only feature I miss.). ",
    "skotzko": "+1. ",
    "mbabco": "Add me to the list of folks who would love a readability feature.. ",
    "okiess": "+1. Just tried it on my 0.19.139 installation on MacOS and it doesn't work yet.. ",
    "bigt2000": "I also would love this option.  It is one of my favorite built in features in Firefox and Vivaldi.   Honestly I really love Brave.   I am just waiting for more of these features and add on support to show up before it will be perfect.  . ",
    "jmalonzo": "This might be an issue with electron - https://github.com/atom/electron/issues/3226\n. Oops! Thanks a lot @bbondy \n. ",
    "juniorz": "When I try to login on Google, it asks me to install this extension: https://chrome.google.com/webstore/detail/gnubbyd/beknehfpfkghjoafdifaflglpjkojoco\nBut there's no install button.\n. ",
    "geekgonecrazy": "Pretty big blocker for me to be able to switch over fully.  Would it be a matter of just baking in that extension?  Or are there API's its going to need?  Based on that electron issue linked it looks like there might be some missing API's?\n. @bridiver from my understanding yes that's essentially what's happening.  I think it does do some checks in the USB HID tree polling for descriptors. \n. @bridiver yeah the yubikey that completely acts just like a HID device works no problem.  Its the ones now based on the U2F standard that does a little more then the just pretend to be an HID device.\nThis is the standard that sites like Github / Google etc have embraced and now offer as a 2 factor authentication method.\n. ",
    "terribleplan": "There is a new standard on the block called U2F, and yubikeys can now do\nthat. It actually performs some crypto to identify you to the site, and as\nsuch there is no way it could simply be a keyboard.\nLook into it, it's pretty neat:\nhttps://fidoalliance.org/specifications/overview/\nOn Jul 12, 2016 16:52, \"Aaron Ogle\" notifications@github.com wrote:\n\n@bridiver https://github.com/bridiver from my understanding yes that's\nessentially what's happening. I think it does do some checks in the USB HID\ntree polling for descriptors.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/518#issuecomment-232193065,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AEN0L3TouNHFtG1q23CCxIeHeYKo985Hks5qVAyCgaJpZM4HQoIU\n.\n. \n",
    "eamsden": "There is discussion about adding Chromium's U2F support to Electron at electron/electron#3226. \n. I can see the following paths forward\n- Hack Electron to expose Chromium's \"gnubby\" extension that supports U2F/FIDO.\n- Hack Electron to expose chrome-hid and copy the \"gnubby\" code in Brave\n- Copy the \"gnubby\" code to Brave and port it to use node-usb\n- Write a new U2F/FIDO drive for brave on top of node-usb\n- Write a new Native Node module to bind libu2f-host\n. If I read the docs correctly, cryptotokenPrivate is just for the UI to get explicit user permission to register a token with a website. That had to be native in Chromium because it had to show a native toolbar. But all of Brave's UI is JS on top of Electron, right? So it should be fairly easy to implement that and then pull in the rest of the necessary stuff from Chrome?\n. OK I'll look into that next time I get some spare hacking time.\n. How do I pull my changes to libchromiumcontent to electron and Brave?\n. ",
    "willy-b": "Somebody else can probably answer this better than me, but if you put browser-laptop, brave-electron, and brave-libchromium content in sibling directories, brave-electron has scripts to help with this.\nGiven that electron and libchromium are in sibling directories, \nyou can run npm run libchromium-bootstrap (one-time) and npm run libchromium-build (each time) to update brave-electron with your libchromium changes.\nFinally, to push the updated brave-electron to browser-laptop, you can use npm run browser-build from brave-electron.\n. (extra detail)\nBy sibling directories I mean brave/browser-laptop, brave/electron, and brave/libchromiumcontent all share the same parent directory:\nwilly@xeris:~/projs/git/3rd/brave$ ls -1 | grep \"electron$\\|libchromium\\|browser\"\nbrowser-laptop\nelectron\nlibchromiumcontent\nAll the npm scripts I mentioned are in brave/electron:\nwilly@xeris:~/projs/git/3rd/brave$ cd electron\nwilly@xeris:~/projs/git/3rd/brave/electron$ cat package.json | grep \"\\-build\\|bootstrap\" | grep -v \"watch\"\n    \"bootstrap\": \"python ./script/bootstrap.py\",\n    \"browser-build\": \"npm run build && rsync -avz --delete out/D/Brave.app ../browser-laptop/node_modules/electron-prebuilt/dist/\",\n    \"libchromium-build\": \"../libchromiumcontent/script/bootstrap && ../libchromiumcontent/script/update && ../libchromiumcontent/script/build && ../libchromiumcontent/script/create-dist --no_zip\",\n    \"libchromium-bootstrap\": \"./script/bootstrap.py -v --libcc_source_path ../libchromiumcontent/dist/main/src --libcc_shared_library_path ../libchromiumcontent/dist/main/shared_library --libcc_static_library_path ../libchromiumcontent/dist/main/static_library\",\n    \"browser-build-linux\": \"npm run build && rsync -avz --delete out/D/ ../browser-laptop/node_modules/electron-prebuilt/dist/\",\n. ditto! opened a PR to switch to ipcMain.removeListener and I agree this way is much simpler. thanks :-)\n. I scan the desktop bitcoin QRs from my phone usually...\n. Nice catch!\nFIXED in https://github.com/brave/browser-laptop/pull/3391/commits/fb828b511bf895c79f33745d74c3fa837224e6bf#diff-4b50ff14dadc9756719a577a72f520d6R466\nBTW, this screenshot points out another issue: The currency for the balance is BTC when the wallet is empty, and always USD when non-empty (just confirmed locally). \n. Yes, @mrose17's updates in ledger-client v0.8.46 brought in by #3397 are really nice.\nThey save me from having to add a historical btcPrice to the transactions entries, and obsolete the btcPrice I added :-)\n. Sorry @diracdeltas, hold on just a minute, I haven't pushed the merge of @mrose17's update which includes this. \nWhen you see the merge commit with latest master then you can come in full guns blazing :-).\n. @diracdeltas, while @mrose17 updated the docs/state.md in https://github.com/brave/browser-laptop/commit/5040058845acf9dd9700424a8a85940dc28457f7 , he didn't update  app/ledger.js to whitelist the contribution field to be picked from ledger-client transaction result. Thus after #3397 the contribution field still wasn't making it to UI.\nI am updating the comments and code in ledger.js right now. Let me know if this is available in a different commit I can cherry-pick, because enabling transactions[n].contribution probably shouldn't be part of this PR.\n. Whoops! I had added a line for btcPrice there, then removed it after you added the transactions[n].contribution field that made btcPrice unnecessary. But it looks like I didn't restore the old code style properly :-)\nA pure whitespace change also happened merging #3434 because we both added 'contribution' to the whitelist. But I needed to be up to date with master, so only change was whitespsce.\n. fixed in: https://github.com/brave/browser-laptop/pull/3391/commits/6c8274d4abb47a2063d4d24c55d6369083f7a89f#diff-e3eeb751016b2ce9f8278efce585a461R581\n. So I did do that for the displayed date: https://github.com/brave/browser-laptop/pull/3391/commits/48b0171bb5ad37071d360358522f242ea132ce7d#diff-e3eeb751016b2ce9f8278efce585a461R1258\nThis is for a filename, so toLocaleDateString is a little awkward with the slashes and lack of zero-padding. But sure, I can use toLocaleDateString and then replace the '/' with '-'s and let the lack of zero-padding be.\n. Wow, glad you caught this :-).\nFixed by https://github.com/brave/browser-laptop/pull/3391/commits/2a729d9aacc94127d7bddb5338449cd915235f8c#diff-4b50ff14dadc9756719a577a72f520d6R513\n. Your recommendation fixed this: https://github.com/brave/browser-laptop/pull/3391/commits/2a729d9aacc94127d7bddb5338449cd915235f8c#diff-4b50ff14dadc9756719a577a72f520d6R500\n. This should be argv[2] and has been fixed (follow-up commit already in this PR)\n. Good question, @mrose17. This change ensures Brave has the right path to ledger-state.json when NODE_ENV is set to development.\nReason:\nFor these utility scripts, the userData path is retrieved via app.getPath(\\\"userData\\\") run in ./tools/lib/utilApp/index.js (three directory levels removed from the base of the repo).\nBefore this change, ./tools/utilAppRunner.js was running brave with --user-data-dir=brave-development, which would cause Brave to look in ./tools/lib/utilApp/brave-development instead of ./brave-development.\nWhat tests do you think it might break?\n. Should add pageBreakAfter: 'always' here in contributionStatement__page so that there is a page break in PDF between pages.\nCurrent code:\n\nWith pageBreakAfter: 'always':\n\n. I think you fixed this in next commit which was force pushed over this and the previous one, but pageBrakeAfter here (https://github.com/brave/browser-laptop/pull/7887/commits/2f16bbdcd71706a1c29f2fe20183f5835fc93031#diff-dfc3cf3000430cbd1575b0223b06163fR630) should be replaced with pageBreakAfter. curious: why separate the brave logo style here rather than keeping it with the other styles as before (styles.braveLogo)?. same question as above: why not keep this style with the others as before (styles.verified) rather than creating it here?. why switch from ImmutableComponent to React.Component?. Makes sense. Thanks!. ",
    "jonrh": "Blocks me from switching from Chrome. Bit of a shame since Brave is so incredibly enticing otherwise!. ",
    "Georgi87": "Our team is looking into this issue to allow the use of hardware wallets with electron apps. Please contact me (via gitter) if you are working on this too to evaluate the current state of development.. ",
    "kspearrin": "bitwarden supports U2F login and since Brave's user agent is the same as Chrome there is no way for us to filter it out as unsupported. This causes the U2F screen during login to always show as the default for users that have configured U2F on their account (as opposed to one of their backup methods such as authenticator app).. ",
    "tadhgpearson": "Ironically, because I have U2F on my Github account, I had to open Chrome to add my support for this issue!. ",
    "kylerchin": "I want da u2f. I prefer Brave for privacy and security purposes, but I really would like to use my Ledger Wallet to Auth to Github. . I really need this, the only thing stopping me from using brave full time.. ",
    "rucuriousyet": "Take a look at https://github.com/flynn/u2f... Its a pretty good library (written in pure Go) that might help you create a mostly if not completely node based u2f extension for Brave.... I could implement this in golang but I'm not sure how we could integrate\nthis into electron... It would be pretty each to use golang via cgo as if\nit were a c shared lib. Any interest here?\n-sent from my OnePlus X\nOn Jan 18, 2018 9:57 AM, \"Niels Faurskov\" notifications@github.com wrote:\n\nCome on guys. This is literally the only thing holding me off from\nswitching. It's 2018, you guys are getting traction, please implement this\n:)\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/518#issuecomment-358671225,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AIIciPJSLSAVttzDcMuCvPMgnchctBSdks5tL1vjgaJpZM4HQoIU\n.\n. More than willing to make a contribution here if needed.\n\n-sent from my OnePlus X\nOn Jan 18, 2018 2:27 PM, \"Seth Moeckel\" smeck1999@gmail.com wrote:\n\nI could implement this in golang but I'm not sure how we could integrate\nthis into electron... It would be pretty each to use golang via cgo as if\nit were a c shared lib. Any interest here?\n-sent from my OnePlus X\nOn Jan 18, 2018 9:57 AM, \"Niels Faurskov\" notifications@github.com\nwrote:\n\nCome on guys. This is literally the only thing holding me off from\nswitching. It's 2018, you guys are getting traction, please implement this\n:)\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/518#issuecomment-358671225,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AIIciPJSLSAVttzDcMuCvPMgnchctBSdks5tL1vjgaJpZM4HQoIU\n.\n\n\n. \n",
    "ferologics": "@evq any update on the windows registration issue?. ",
    "esc": "+1 can help with testing. ",
    "164-dame": "Just a side note, as a (important point here) -----> Privacy based browser, it is essential to support fido u2f. Not only yubikeys but also trezor and thetis among others have fido u2f products, and I feel that I should be able to use them in my browser of choice. \u2764\ufe0f \n  . ",
    "jazerix": "Come on guys. This is literally the only thing holding me off from switching. It's 2018, you guys are getting traction, please implement this :). ",
    "ryscar13": "Also had issues today with U2F on the current standard version of Brave. Worked fine in Chrome. . No luck here either with the v0.21.9 beta. Still getting an error message that something went wrong when trying to use my yubikey with google... Did the old version of Brave need to be uninstalled? I didn't try that.. Running MarCOs High Sierra v10.13.3. I can confirm U2F working on Google with the new Beta release on Mac High Sierra! Also worked on https://demo.yubico.com/u2f\nNice job!. ",
    "chmanie": "\nHelp testing this would be very much appreciated\n\nI tried (using v0.21.9beta) and neither a GitHub login w/ YubiKey or wallet functionality (Ledger Nano S) are working (no error messages, just nothing happens).\nDo I have to set a flag or activate U2F somehow?. Same here. I\u2019d be happy to help and debug this further (when given the instructions). ",
    "lamaral": "I tried it on Windows 10, with the version linked above and it didn't work with the Yubico test page: https://demo.yubico.com/start/u2f/neo?tab=register.\nIt worked with GitHub and Google tho. \nJust to add on the discussion, I once had trouble with Google and Firefox and read somewhere that Google implements the U2F part slightly different from the standard and that's what broke Firefox. . @evq This site works for me.. ",
    "bijeebuss": "Any updates on this? Mine setup does not work (confirmation does not appear on device)\nUbuntu Desktop 16.04 LTS\nLedger Nano S Firmware 1.4.1\nBrave 0.21.18\nIt does work with the same setup and chrome. ",
    "krmbzds": "I couldn't get Github or YubiKey Demo to work.\nOS Details\n```\nProductName:    Mac OS X\nProductVersion: 10.13.4\nBuildVersion:   17E202\n````\nBrowser Details\nBrave: 0.22.721 \nV8: 6.6.346.32 \nrev: bfe7cdd026c68013236ebe206a33448db9370fca \nMuon: 6.0.12 \nOS Release: 17.5.0 \nUpdate Channel: Release \nOS Architecture: x64 \nOS Platform: macOS \nNode.js: 7.9.0 \nBrave Sync: v1.4.2 \nlibchromiumcontent: 66.0.3359.170\nNewly formatted computer so it's mostly a default setup.\n. +1\nI agree with everything mentioned above.\nIn addition, I would like to disable conflicting shortcuts.\nThese shortcuts conflict with Spectacle:\n\n\u2325 + \u2318 + \u2192\n\u2325 + \u2318 + \u2190\n\nBehavior:\n- Resizing the window to the right half of the screen also switches to the next tab.\n- Resizing the window to the left half of the screen also switches to the previous tab.\nSame thing should apply for other conflicting shortcuts as well.\n. ",
    "swarnava": "\n. \n. ",
    "psantos10": "I have the same issue too: Os X El Capitan: 10.11.3\n. ",
    "jacobmischka": "Okay great, thank you for the update.\n. ",
    "3esmit": "I think this is a really important feature for daily use, I just got nuts trying to make a download in Brave Browser. It does the download but silently...\n. ",
    "foafron": "I couldn't give you an exact percentage, but reliable, robust, open source browsers w/ kiosk mode built in aren't easy to find (especially one's that have a timed reset).  I work at a library and would have tons of use cases for something like that.\n. ",
    "sanecito": "+1 for this...no clickable link still in the details bit regarding updates.\n. ",
    "halo": "I would just like to mention that configuring the browser via command-line would be helpful for mass-deployment. Having multiple machines makes me not want to spend much time clicking around manually in about:config 10 times (though it's certainly useful if you only have one installation of Brave).\nIt's tedious to configure browsers in an automated way (except maybe Safari). Brave could stick out here as a little more developer-friendly. Someone suggested even a .braverc file that holds advanced configurations. Now, that would be innovative! :)\nLooking to and fro the issues, I found the defaultSettings but I'm puzzled as to where exactly these are persisted on my drive (in fact, I'm not even sure whether electron is responsible for handling this or not).\n. ",
    "Xeru": "Definitely support this concept, would be great to have more advanced config options.. ",
    "stevespringett": "For me, I need to disable webassembly for various security reasons. I have it disabled in Firefox and Chrome, but unable to disable it in Brave.. @joeparkerz actually, it has been implemented. The Brave Dev version incorporates this. So you can now go to chrome://settings/ or chrome://flags/ for example. And of course you can go to chrome://about/ to list all the internal URLs. The Dev version is very much like Chrome though, same look, same config, etc. They no longer seem to be hiding the fact that its built on Chrome.\nI haven't personally tested it, but it is there.. ",
    "EvilGnome6": "+1.\nI would like the ability to change the following settings:\n1) Don't load pinned tabs until I select them.\n2) Don't replicate pinned tabs to new Windows.\n. ",
    "optomux": "Why has this not been implemented yet???\nWhats the point of this browser if I can configure it.. this has to be a joke right?. You can't be serious. chrome:flags, chrome:settings are both available on Chrome!\nSo what kind of advantage am I getting here?. ",
    "indutny": "Just in case, I just followed instructions in readme, attempting to build and run it, and got this.\n. Thank you, will take a look at it today!\n. It builds and runs perfectly now, thank you!\n. I doubt that it will fix it. This path doesn't seem to be resolved automatically at that stage.\n. ",
    "TognaBologna": "If \"Dropping tabs onto sets\" means dragging a tab from one Brave window to another Brave window, that is not working on OS X 10.11.5 (15F34) with Brave 0.10.4. When I drag a tab from one Brave window to another, it either replaces the tab I am trying to place it next to or it will duplicate the tab onto the new window, while still keeping it in the old window.\n. ",
    "sirkitree": "This is my only pet peeve with Brave so far. I love everything else. With multiple monitors it's pretty important to me.\n. ",
    "NumDeP": "Hi @petemill , in relation to @sirkitree 's pet peeve, as well as for other users that utilize multiple monitors using Brave as it matures, what do you think of having the tab-set chain follow the mouse area instead of moving a tab towards one of the tab-set? \nI realize this may cause frustration for many users as it may resemble ping-pong every time a tab is dragged off for whatever reason but perhaps motioning a tab in a particular way brings the tab-set chain closer to the cursor, for example, a rainbow motion above the tab area which has to at least touch the top part of the browser frame.. I mistakenly read the title to 'support dragging a tab INTO another tab set', however I think my proposal still has some merit @petemill . Say if I have 20 tabs, set for each tab-set and I have 80 tabs open, assuming I'm in the first of the four tab-sets that would be available and I wanted to drag a tab towards (not into) the fourth tab-set, it would be killer dragging it past 69 tabs like the capture implementation shows in #11720 wouldn't it? \nI probably shouldn't have called it chain but sticking to calling multiple tab-sets a chain, don't you think it would be brilliant if multiple monitor users and even users in general that have many tabs and tab-sets open, to drag a tab directly into a tab-set and bringing greater ease of this functionality by having the chain of tab-sets follow the cursor as the intention of dragging a tab is made as described in my previous comment?\nI think your capture implementation showing 'Tab sorting between tab-pages' in #11720 is brilliant but I think both methods would be preferred but my method more so utilized, no offence. If both methods were to be implemented, I think the only time Tab sorting between tab-pages as you show in #11720 would be used is if users had less than 8 tabs set for each tab-set, meaning they would have many tabs open or if tabs were close to the far right or on the far left of the browser if that makes sense.. I'm sorry I was viewing #11720 and I assumed from the gif 'Tab sorting between tab-pages' that, that was the only option of dragging a tab into another tab-set. . Exactly what I meant @bradleyrichter but in addition to this it would be a neat feature to have the page indicators move to the sides of the cursor i.e left and and right, when the intention is made to move a specific tab to a different page indicator. \nSo imagine there are 20 tabs open and a users has '10' selected for 'Number of tabs per tab set:', there would practically be 2 tab page indicators with 1 highlighted orange just below the url bar in the center, correct? If I'm in the first highlighted tab of the two tab page indicators and I wanted to move tab number 1 and tab number 10 into the second tab page indicator, rather than dragging those tabs towards the un-highlighted tab page indicator, it would be quite different and set it apart form the other browsers if the un-highlighted tab page indicator were to move left and right as soon as the intention is made, don't you think? \nAs mentioned above in regards to the intention and that it may cause frustration for some users bringing resemblance to ping-pong every time a tab is dragged off for whatever reason but perhaps motioning a tab in a particular way could indicated the function for bringing one of tab page indicators or all the un-highlighted tab page indicators closer to the side of the cursor, for example, a rainbow motion exactly where the tab lies which has to at least touch the top part of the browser frame so the tab page indicators don't move will-nilly.\nI seriously hope I made myself clear this time round, otherwise I'm going to start to think there's something wrong with me. Maybe it's because we're not utilizing large screens to ascertain the benefit of this or perhaps you are and I'm terrible at descriptions but I think it would be rather unique and probably later construed as essential feature for those that have close to a 100 and over a 100 tabs open.. ",
    "petemill": "Not sure I follow what you mean by tab-set chain follow the mouse area @NumDeP. Tab dragging has been fully re-implemented with #11720 (which hasn't yet been merged to a release, but is targeted, for the time being, at 0.23) and the methodology in this for moving between pages is to drag to the prev / next page arrow indicators, with a pause built-in to ensure intention.. @NumDeP you can already drag a tab directly to any page by dragging to any tab page indicator and letting go. In #11720, you don't have to drag it physically past all the tabs, you just hold on at the next/prev indicator and it will keep progressing the tab to each tab page until you let go. Not perfect, no.. @NumDeP sure, but I mean right now in the current release you can drag to any tab page indicator. @luixxiul all the removed styles that were in SettingsCheckBox were already in switchControls.less. The one that wasn't is the space between the label and the switch element. See description for question on whether this should now match all other uses of SwitchControl in the app.. In my search, no other component currently uses the small variant apart from about:preferences, this moves the previous style override to the shared component as the large variant already was.. The label is now being rendered by the switchControl, and the findBarTestStyle style overrides have been changed to aphrodite-style findBarTextStyles css.. Previously the text was rendered with a label element outside the SwitchControl. This made it easier to have custom spacing without affecting the switchControl css, but it broke the label being able to toggle the switch. Now that the SettingsCheckbox (and all usages of that) is passing the text to SwitchControl for labels,  the style would have to either be part of SwitchControl or a style override from the usage location, adding to the fragmented style definition problem for the component, that will have to be resolved or integrated in a future refactor. Note that not all uses of SettingsCheckbox have this spacing (see the Payments tab), so this spacing is very specific to a couple of places. Happy to do that if it can't be resolved now, but thought I'd try just in case it was a simple ok in order to avoid the fragmentation.. I took another look at it and added a prop to SettingCheckbox that enables 'compact' styles (i.e. no gap). So by default, the gap is there. So, there should not be a visual regression anymore as long as https://github.com/brave/browser-laptop/pull/10470/commits/773dbb14ddfc90ec0e8958e5516075790174ec3a is ok. @darkdh this happens when you have > 1 window open, you then unpin a tab in window 1. This code calls upon window 2+ to close the previously-pinned tab. Whether or not this is what we want to happen I guess is beyond the scope of this bug fix, since that is the previous functionality. I myself have noticed some edge-cases that could end up with losing user webview state in a tab, but I'll log a separate issue for that.... @NejcZdovc the aim here was to avoid having 2+ separate places where this format of string 'key' for pinned tabs is defined (${location}|${parititionNumber}). The action onPinnedTabReorder requires this key, the generation of which which was previously hidden inside another function.\nHere, I expose the getKey function from one place, so that if we want to change that format (perhaps introduce a new property, or change the separator charactor, etc) it is controlled by a single function.\nNow that I've explained the why, I'm happy to change it - maybe I can get it from the existing state, or the DOM, or something...  \u263a\ufe0f . Well there would be if I added a new place here \ud83d\ude00 , but I've taken your advice and instead made copies of the 'SiteDetail' structure the original function requires.. Yes, though mainly on the previous L100 when determining which should be closed. The bug could have been remedied by hacking that line, but the __alreadyPinnedSites cache wasn't helping much and was growing in size on each call because of L82, so seemed better to rewrite.. Thanks for the spot - I had just read that \"don't do this\" section today and had the same thought. @luixxiul yes, my mind getting confused with the different characters for bem that we're using! I've just updated all the names and think that they're conforming now so would be interested in what you think of the latest - thanks! . thanks - done. @NejcZdovc I'm pretty sure in this case node would be the instance of the component class and not the required underlying DOM element, since that ref={} attribute is on a custom React component, not a normal HTML element. findDOMNode traverses the rendering structure to get the ultimate html element. tbh all this could be refactored to a simpler structure, but that would be a subsequent PR. @luixxiul if you are asking will the ref={ ... } work here - then yes because it's directly on html element.. sure - I had just copied what was there originally but makes sense to make the positive changes now. @cezaraugusto just to confirm - by normalize do you mean you don't want the text with the same indentation as I have it? You want it to wrap underneath the 'TODO:' from the previous line?. sure - I have about 12k pixels \ud83d\udcbb \ud83d\udcfa \ud83d\udcfa . Normal download, via .url() (and I assume content-disposition), was correctly not showing the prompt. But when choosing 're-download' it calls webContents.downloadUrl which I assume has a default to show the prompt, and it was not explicitly being set here to false.. Whilst it highlights this specific area, it may harm the ability to scan of the rest of the render structure because typically blank lines should be used for component separation, and not usually in the middle of a component definition. I would suggest that the comments themselves act as padding between the lines of code, to highlight their importance or grouping. But this was your code so I\u2019ll add the spacing back before I\u2019m done. Thanks. Seems like a better practice and more consistent with the way other functions are structured. Plus it avoids calling AppStore.getstate multiple times in a row for multiple windows (though yes I know it is a very cheap function) and it feels cleaner and easier to test. Plus I\u2019m not sure at all why the function had the AppStore require inside the function before...?? Was it to stop the module from being evaluated in case it wasn\u2019t ever required in the process (I can\u2019t imagine that happening). moved to config.js. I have split all the window creation, showing, deferred showing, and timeout showing logic to a different place - app/browser/windows.js which seemed an appropriate place which deals with calling functions on a muon BrowserWindow (and children). It's also the same place that the whenRendered action is handled, so that nicely puts all the logic in one place, including the temporary but ugly win.__blah properties - so they are at least encapsulated in one module.\nI created tests for this new logic in windowsTest.js handling:\n- showing the window immediately\n- showing the window if the timout expires\n- showing the window on whenRendered firing for the window\n- ensuring the window is fullscreen or maximized on each of those scenarios \nI also created tests for most of the existing action handler logic for APP_NEW_WINDOW in windowReducerTest.js, of which there were no existing tests, including tests for:\n- creating the right tabs in the new window\n- window position and size\n- maximizing the window. @bsclifton In this case, sure that more expressive function could be used. I was just being consistent with the other tests here, which need to inspect the windowOptions object argument for property values, and not necessarily enforce every property on the object argument. If there's a nicer way to do that vs being tied to the argument order I'd love to learn!. @bsclifton I updated the couple of tests I could using that syntax. It looks nicer, thanks. Only downside is the error messages aren't as expressive as using the chai.assert functions.. oh good spot @bsclifton, I remember deleting that code \ud83e\udd26\u200d\u2642\ufe0f . It was mainly so I could vertically center the ':' character in the time. I just wasn't sure if it existed in all locales, so I did this.... I should copy / paste more!. My 2c is that it's actually cleaner (as well as more performant) to put this logic in the component - the UI component is deciding when the right UI actions have been performed by the user and the action should be sent, not the store.. @bsclifton I changed this so I could register a stub for getSetting. I couldn't see another way to do it unfortunately, but if there's a way to do it whilst preserving the ability to directly reference the child function of the settingsStore object in the module, I'd be keen to learn. The function is stubbed with the following:\n+      this.stubGetSettings = sinon.stub(this.settings, 'getSetting',\n+        (settingKey, settingsCollection, value) => {\n+          if (settingKey === settings.TAB_CLOSE_ACTION) {\n+            return tabCloseSettingValue\n+          }\n+          return false\n+        }\n+      )\n+    }). done, and rebased. @cezaraugusto it seems to me like this code does do something at the moment. Whilst it's broken to drag a link from the webview in the same window, I can successfully drag links from another Brave window, or from another browser / app (e.g. Chrome). It may be a fixable bug to get it working again from the webview in the same window. Is there an issue logged for this that you've created / found?. Wondering why a new prop has been added here, but no change to the Tab component to utilize it. Is this fixing a different bug?. @NejcZdovc this function can be used to read the code so the path is kept in one place. Let me know if it doesn't meet your requirements.. Update to npm published package before merge. Please update to simply 'promoCode', or even better use the function for reading first-run promoCode from the module I included in #12920 . got spot. - went missing during testing the different syntax. I definitely wanted to use async here but would have to convert windowsInit to be more async - at the moment it does everything sync. Happy to convert if that's better.. yeah was interfacing with the spec + code that was already done in #12798 to read from this file - consistency was an ok reason to not suggest we change it. fixed whitespace issue. remove this when updated muon-winstaller has been published to npm. remove this when updated muon-winstaller has been published to npm. that comment is still in the separate function, perhaps I should just put that logic inline here too since there's only 1 usage and it's 1 line. thoughts?. @bridiver I inlined it for now. Normally I like the functional / semantic language of bundling that logic out, but it was causing confusion in this case.. How come we're setting this to an array with one null item inside and not an empty array with [] @cezaraugusto ?. confirmed, is lower-case on v0.20 and up. Need to account for builds which don't result in pkg output. yep, just some tiny clean up whilst there. lint error here. Just a little something in each window's console.log to aid window debugging (when in dev mode, and set to show debug messages).. This constant does not exist. This should be set whenever window is updated (not only when it's ready) as we want to save when each window last had focus. Also we can use new Date().getTime() as milliseconds are perfectly fine, we don't need to resolve to a microsecond for this.. Should we also consider logging these lines / conditions?:\n- tab is null or destroyed\n- aboutTabs[tabId] is null?\n- aboutTabs[tabId] is initialized at ipcMain.on(messages.ABOUT_COMPONENT_INITIALIZED\n. activeTabHistory and webContentsCache[].openerTabId (openerTabId is the only prop changed here) are only called in response to tab events coming from muon, not app state actions. Is that enough to satisfy your concern @bridiver? My thinking was to change them immediately to actually avoid a race condition, in case we're getting the tab 'detached' / 'destroyed' event quicker than the store can update those values - and we need the values updated then so that the next active TabId can be correctly chosen. Or is your concern that the tabReplaced action may rely on that data?\nEither way, I should test that detaching a tab correctly sets the appropriate parent tab on detach, because there may be an issue with the 'temporary' contents id, in which case even if isPlaceholder === true we should call webContentsCache.tabIdChanged and activeTabHistory.tabIdChanged since that is window-specific and the info is needed on tab.on('will-destroy') which is fired very soon after tab-id-changed.. ^ detaching is fine, and we shouldn't change the activehistory / openerTabId tabId for placeholder replacements since tabs.moveTo directly calls tabs.getNextActiveTabId passing in the moved tabId (and not the temporary replacement tabId) - so detaching and setting the appropriate next tab active in the departing window, depending on preference, works nicely.. Is it worth spending the time to get this for...of...recurse loop into a flat iteration loop considering that if this code gets run the app is in an unusable state anyway? I do not believe it will further impact the user apart from making sure we get the correct error logged and therefore fixed more quickly.. The trouble is that immutablediff does not throw an error object, just a (dynamic) string. This is the only case I've seen immutablediff fail so far, and I did not want to go down the route of either:\n- parsing the string, since it could change in a later immutablediff version\n- assuming string vs Error object would mean a null-key error, since that could also change\nAgain, since the app will be unusable in this state, I wanted to err on the side of caution with regards to making sure we get the right error output and reported, so that we can solve the issue. But happy to take advice on this.. So... I was intrigued by the challenge, and tested what I came up with for a non-recursive function. It runs ~30% slower than the recursive one https://jsperf.com/immutable-find-null-paths-recursion-vs-iteration  Perhaps someone can improve on it.\n\n. I suppose it is conceivable that in webContentsCache module, tabData.tab could be null, but tabData could be an object. I don't think there is a code path where that can happen at the moment, but it wouldn't be bad to explicitly call cleanupWebContents here, in case that state happens in the future. wdyt?. @NejcZdovc did you mean to leave debugger statement in?. can we make it clearer that this will only reload if the url is the same, perhaps naming the param something like reloadMatchingUrl or reloadIfMatching?. Thanks for the note @jumde! I haven't satisfied linter and some tests yet. Some of this code was written in an experimental mode with things added, removed, or changed very quickly. But right now we're pretty locked down on architecture and are in clean-up mode, so that's what I'm looking in to over the course of the next day or 2.. This code was moved in https://github.com/brave/browser-laptop/pull/13783/commits/23f5b719fd8ee0a610e8d52685602f4fc37221f7. At this point, I believe that the tab content area is not fullscreen, but other UX may be (e.g. the window). Agreed that if that's the case, perhaps isFullscreen is not the best variable name here, although it's more of a state description - \"This tab is in fullscreen mode or not, so tell the tab's content to go fullscreen too, or not)\".. Thanks for the spot. I actually haven't done a pass of cleanup or lint fixing as we're still debugging a couple display issues.. Is parsed.path always a string, and never null / undefined? I'm guessing so if the test cases without path are working.... Please don't use the muon BrowserWindow API raw. Instead please use the app/browser/windows.js API, specifically getAllRendererWindows or getActiveWindow. The former should be enough as it makes sure the hidden window isn't included.. Do we need this rather than just remove the digg item from templateUrls. From a quick search I could not find any other usage of the templateUrls export from share.js.. I don't think that would be appropriate. Those numbers are here purely so that this component (only) will re-render when the mode changes. Putting that in a separate file only spreads logic that is otherwise fully self-contained in to another module. Plus, this is not a settings enum. This value is simply a tri-state value for a prop so that we can compare if the next update has a different display mode. It's irrelevant what the value is, apart from textOnly, which is why that is specified as a prop with a more understandable name.. The purpose of this prop is already to make a readable name: \"textOnly\" as that value is used in other places in the component, whereas the exact value of bookmarkDisplayMode is not considered anywhere else. I can add a comment to make it more explicit, or encapsulate in if statements instead of short-hand (and also remove the double-up of expensive bookmarkUtil calls which I just noticed).. Benefit is:\n- no extra network request\n- ability to style through css\nSure, it can be imported as a separate component, e.g.  <BookmarksToolbarOverflowIndicatorIcon /> and since this icon is changing in the icon project and I'm using this technique for most new icons, then I'll be sure to favor not having the <svg> paths make the other components look messy. I'd prefer to make that change for that release if that's alright with everyone else.. I think this would be more messy since these CSS properties would also need to be added and removed as part of the calculateNonFirstRowItems () function which you'll see adds and removes this class in order to measure which bookmark icons fit with and without the overflow indicator.\nSure, I could put the style JSON retreival in a central function, but then we are splitting where the CSS is defined for the Component to two places, which IMO reduces maintainability. Here, it is a class name that has a purposeful name, but if we're adding and removing specific css properties in the component lifecycle, that can be difficult to understand.. Since I was re-visiting the code, I put the svg in a separate module \u2705 . Scratch that... it was appropriate because there is already an enum that I didn't know about, and it's being called many many times for each action / render cycle, so I started using it and then went down a rabbit hole of optimizing it for readability and less state lookups... \ud83e\udd37\u200d\u2640\ufe0f  \u2705 . I did not end up doing this as we don't have access to process.env in the front-end, and whilst I could transfer such a property from browser to environment variable, I felt that this is not something (right now) someone other than a developer looking at the source code needs to experiment with, yet.... It seems like with improvements on C66, the need for the pooledWebview is less, and possibly we can replace with the simpler webviewDisplay in the next release, after I have more time to test properly. The purpose of pooledWebview is to avoid a flash of blankness (usually white) between attaches of different tabs, which does not seem as noticeable with C66 in initial testing. However, I did not feel comfortable making the permanent switch as that would require another couple rounds of testing to reach the same level of confidence we have with pooledWebview. This action does not get called without that property. Should we have a policy of trusting our actions in the way that they are currently being called, or optimize for possible future mistakes?. I've left these console.logs in as this is an experimental class at the moment, which we may switch to in an upcoming release.. I was just about to do this, but then realised that this may make the merge a bit more of a pain, especially package-lock.json, across branches. Perhaps a separate PR unless you think that it won't be a pain?. @NejcZdovc how about app/common/state/extensionState.js?. state = state.set(.... Is this going to be expensive calling this iterative filter function many many times each time we render / check state for changes? That will be fixed with #12105, but in a different release, but just a little concerned this will affect performance as in a render-cycle, possibly hundreds of frameStateUtil functions will get called, and each one will then run this filter.. Why would we ever want this function to return an Immutable.Map?. Addressed, thanks for the spot. This will not result in a tor tab when there are 0 windows open, which is a common macOS scenario (as judging from the number of issues that were raised when I had a similar bug!).\nIn order to fix this we simply need to make the openFramesInWindow function inside app/browser/windows.js aware of the tor: property for the createTabRequested options argument.. With this change, perhaps we should not make it seem like a global setting a more like a setting just for the current tab: 'Make this tab much more private with Tor'?. small nitpick here that IMO it would be preferrable to have the prop be more semantic, e.g. shouldDisplayIcon. @diracdeltas does it not work just to use the same localImage property which calls getFaviconUrl?. er yeah this needs to - looks like a rebase issue from before -> after the signle-webview project. Tab's now detach every time they are made inactive / active, so this will break something (minor).. oops missed out a key word\n\nthis needs to go\n\nThanks for the spot. Shouldn't this be a \\ instead of a /. I'm sure Windows will accept it though, so just a nit. @bsclifton did we modify the build environment to contain this BUNDLE_NAME variable?. ",
    "martin-001": "Node.js 5+\nPython 2.7\nVisual Studio 2013 or 2015 .... installed and download brave setup from softpedia\n. ",
    "johjeff": "I am unable to install on Windows 7 as well. Running Windows 7 Enterprise and can't install the Brave Browser Beta downloaded 2/3/2016 from the link in the email from Brave. I have installed other applications with no issue, and I ran the installer as a regular user, and then tried as an administrator.\nOS Info:\nWindows 7 Enterprise SP1 64-bit\nHardware:\nDell Latitude E6430\nIntel Core I5-3320M\n10GB RAM\nSamsung SSD 128GB PM830\nAttaching the setup log as well.\nSquirrelSetup.txt\n. ",
    "JaneSmith": "This can still be reproduced on version 0.18.22 on Windows 10. I experience poor touch usability in general with Brave.. ",
    "dhgwilliam": "Happening for me on Linux, building brave from master 0846eb8c8a6b40ee2cb86235974c73d1db5f058a . Slack icon shows up initially but disappears after some consideration.\n{ brave: '0.7.12',\n  npm: '3.3.12',\n  ares: '1.10.1-DEV',\n  http_parser: '2.6.0',\n  icu: '56.1',\n  modules: '47',\n  node: '5.5.0',\n  openssl: '1.0.2e',\n  uv: '1.8.0',\n  v8: '4.6.85.31',\n  zlib: '1.2.8' }\n. ",
    "rifazn": "Will changing the ~/.brave-gyp to $HOME/.brave-gyp help?\n. ",
    "Codes4Fun": "This seems to be specific to GitHub and maybe other websites, I can reproduce the bug with GitHub on Chrome and FireFox. And drag and drop text works on Brave for other sites like:\nhttp://www.w3schools.com/css/tryit.asp?filename=trycss_background-color_body\nSo I think GitHub is doing some fancy scripting.\n. ",
    "poiru": "Much of this is due to <webview> being slow to resize. See https://bugs.chromium.org/p/chromium/issues/detail?id=639867\n@bbondy @bridiver Have you considered patching libchromiumcontent to fix or work around this?\n. FYI, resizing performance for webviews can be improved quite a bit with electron/electron#7658 (cc @bridiver, @bsclifton).\n. ",
    "SpikeShape": "Ah sorry. I didn't see that. Going to try that, thanks.\n. ",
    "shepitko": "I had the same problem, but I deleted gulp, and installed him again. And Problem is solved.\n. ",
    "trongthanh": "I think it's same for Cmd+Click a link on Google search result page to open new tab. The newly opened tab shows the redirecting URL of google.com, not the target URL.\n. ",
    "artc": "Hey Brian,\nI do some development work, and the sites-under-development are protected\nby a popup that asks for a UID/Password before people can see them.\nhttp://publicdocs2.wpengine.com , for instance.\nIt is a corner case, I admit, but I suspect there are a fair number of\nsites out there that do this.\nCheers,\nArt\nP.S. Big thumbs up for you guys getting back so quickly!\nArt Campbell\n                                      artc@artc.net\n    \"... In my opinion, there's nothing in this world that beats a '52\nVincent and a redheaded girl.\" -- Richard Thompson\n    No disclaimers apply.\n  DoD 358\nI support Community Supported Journalism at www.TheGrotonLine.com\nOn Wed, Feb 24, 2016 at 10:12 PM, Brian Johnson notifications@github.com\nwrote:\n\n@artc https://github.com/artc what sites are not working for you?\nPopups should only be blocked if they are not user initiated (opened by\nclicking a link or similar action)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/issues/901#issuecomment-188582707\n.\n. \n",
    "anandbagmar": "for some reason it just did not work for me earlier, but is working now ... I guess we can close this for now. I will let you know with more specifics if it happens again. Thanks\n. ",
    "johanalkstal": "I tried both from the in-mail link and from brave.com front page link.\n. No first time installing Brave on Windows.\n. That I do.\n. Indeed. I think that is good advice overall. :)\n. ",
    "charbelrami": "thanks!\n. ",
    "cataza": "It does not block ads which have close X button. When i click close button, its popup new tab. \nhttp://blogtruyen.com/truyen/ballroom-e-youkoso/chap-041\n. It not block banners at all\n. ",
    "antonycourtney": "Thanks for the positive feedback @bbondy. The current prototype is certainly rough, developed to demonstrate the concept, determine if the integration was even possible, and to see if there's interest from Brave in adopting this before I do too much more work on it. \nFor additional background it may be helpful to check out the (2 minute) Tabli overview screencast showing the production Chrome extension version of Tabli: https://www.youtube.com/watch?v=yRxOr2-urzg\nMay also be worth skimming screenshots in the usage guide: http://www.gettabli.com/tabli-usage.html\nI am fine with dropping the Tabli name and am open minded about making UI changes to make this fit more naturally / seamlessly into Brave. The prototype is a popup from the toolbar for now because that was expedient and how the Chrome extension version works. Might be more natural and intuitive to try integrate this into the top-level \"Window\" menu (which unfortunately just says \"Brave\" for every window right now...), though that will likely be a big chunk of work. And open to other ideas. Look forward to @bradleyrichter's feedback / guidance.\n. @bradleyrichter: Thanks for taking the time to build and try it out.\nI'd be delighted work with you on a tighter integration of this functionality into Brave. I would have loved to have had the latitude to do some of that for the Chrome version but was limited by Tabli being just an extension. Would be great to be able to build this functionality directly into the Browser (where it belongs IMO) and get the UX really right.\nLet me know what you think would make sense for a next step. Happy to chat live if you are around at wework SF.\n. ",
    "tarciosaraiva": "Quitting Brave and opening again got rid of the triplicated tabs.\n. All good. I tried a couple of other times and all is well, didn't happen again so far. Will keep and eye out, if it happens again, I will let you know.\n. ",
    "twisterghost": "Will do\nOn Sun, Feb 28, 2016, 12:41 PM Brian R. Bondy notifications@github.com\nwrote:\n\nIn js/commonMenu.js\nhttps://github.com/brave/browser-laptop/pull/948#discussion_r54353314:\n\n@@ -151,7 +151,7 @@ module.exports.preferencesMenuItem = {\nmodule.exports.bookmarksMenuItem = {\n   label: 'Bookmarks manager...',\n-  accelerator: 'CmdOrCtrl+Alt+b',\n-  accelerator: process.platform === 'win32' ? 'Shift+Alt+B' : 'CmdOrCtrl+Alt+B',\n\nRight idea to fork it but pls use the same shortcut as Chrome here for\nfamiliarity's sake. That's Control+Shift+O for bookmarks manager on\nWindows. And Command+Alt+B for OS X.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/brave/browser-laptop/pull/948/files#r54353314.\n. ~~But wouldnt we want it to be windows or darwin?~~\n\nMisread. Got it.\n. b2f332a\n.  024ebdc\n. ",
    "lewiscowper": "Courtesy of https://github.com/ModernPGP/icons/ licensed under CC Public Domain https://github.com/ModernPGP/icons/blob/master/LICENSE.txt\n. ",
    "replacepreg": "This version (which you do) is suck, because everyone is not expert!\nSo, for example, I can use my friends computer, I can login to facebook and I can login that way:\n1. Login Facebook\n2. Fill username, password\n3. Type 'Enter'\n    A dialog came, I did not read it, or my hand went to key with carelessness.\n4. Type 'Enter'\nFinally: I fucked up. At least you can remove 'Default focus' from the button. Chrome doing it.\n. ",
    "rohanthacker": "@bbondy @bradleyrichter  I believe I misinterpreted the ticket, My mistake, excuse that\n. It is, It should be on another branch, not sure how it slipped in. This change is to tackle the new bookmark design.\n. ",
    "ayumi": "thanks, that is helpful \u2013 I decided to check getTabCount\n. I like checking each tab.\nCloning and webview src seems to be tested earlier here (line 133) so I think checking each tab:nth-child has the correct [data-frame-key] would be good.\n. thx, that is a good idea\n. i think I check for this on line 694 \u2013 is that right?\n. thx good idea \u2013 fixed it\n. i feel it \u2013 updated\n. Thanks! I'm checking that it's a string now.\n. Minor: To help one find the default value of minDuration, it might be helpful to link to ledger-publisher or the respective readme\n. thanks good call\u2013 it was originally there but i removed it (oops).\ni added it back\n. what's this\u2013 does it pertain to the idle state\n. I think it's clearest to indent the 3 parameters equally\n. good idea\n. that sounds fair\n. thanks, i've updated it\n. as a result of this PR we can remove changeSettingPaymentsEnabled at ln 134 and the reason arg in this function initialize(paymentsEnabled,reason) (it was added to fix this)\n. i like it\n. I like your comment, i think it'd make the code easier to follow.. maybe button indexes should be replaced by button values or something .. like if buttonValue === ledgerButton.later\nThe index shouldn't matter, just the button action. This would also handle cases where button sets don't contain Later or Turn off because they're not applicable.\n. Thanks! updated the PR.\n. After this is merged let's confirm this is legit. See https://github.com/brave/internal/issues/14. I added bundle.js and testbundle.js from brave/sync-bundles as the first release of brave/sync.\nDownload latest prod (non pre-release) version:\nsh\ncurl -O $(curl -s https://api.github.com/repos/brave/sync/releases/latest | grep \\/bundle.js | head -n 1 | cut -d '\"' -f 4). minor: 1 letter variables are difficult. :+1:\nDELETE_SYNC_PREFERENCE_TYPE, 'device' sounds odd. i wonder if it's more intuitive to split it into DELETE_SITE_SETTINGS and DELETE_DEVICE.. should it be Object.assign(siteSettingDefaults, {hostPattern}) ? as is i think the custom hostpattern is always overwritten as empty string. I think Deletes are only sent when objectId is set, however it's probably good to check and skip it if it's a Delete.. minor: maybe clarify it may be sent when restoring from existing seed. minor: typo?. so i had this issue on initial bookmarks sync because although newObjectId() returns the objectId, appState.getIn(['sites', 123]) doesn't immediately reflect the objectId.\nI decided to move the generation to sync.js and memoize them as they're generated.. thx, i feel it now and removed the param.\nthe problem i had was in going from parentFolderId to parentFolderObjectId.\nexample:\n- 2 bookmarks in a folder\n- sync bookmark 1. it looks up its folder by parentFolderId, and sees the folder has no objectId so sets it.\n- sync bookmark 2. it also looks up folder by parentFolderId, and again sees the folder has no objectId so sets it. this happens faster than the setting of the objectId.\ni've retained the memoing in sync.js, and updated createSiteData() to use site.parentFolderObjectId if already set.. thx, will clarify.\nthis is the browser-laptop site field whitelist.. good catch. nice \ud83d\udd3c. where is diff passed into this?. minor: it's a little hard to read this ternary within a function call; might be cleaner to assign a variable right before.. minor: i think this should emit a warning. minor: so you can't disable brave sync. lets add some\nicons: {\n  128: 'img/sync-128.png',\n  48: 'img/sync-48.png',\n  16: 'img/sync-16.png'\n},\n\n\n\n. hmmm i forgot.. doesn't seem useful i'll remove. it didn't work, but maybe i can try a little more. Earlier I tried to use a Textbox however I couldn't get the prop ref={} to work so the input didn't work[0]. I gave up and used a standard input.\nThis branch doesn't seem to set the device name either.\n[0] Maybe this: https://facebook.github.io/react/docs/refs-and-the-dom.html\nTest Plan:\n- Clear profile\n- Enable sync and name the device\n- Observe terminal for the device name\u2013 should not be \"browser-laptop\"\nAlso tested by: yarn test -- --grep='\"^Sync Panel\"'. I applied this class as a hack to make the \"button pressed / secret visible\" state have a larger button. wideButton might be inappropriate so I can explicitly set a width for these buttons.. 5px was insufficient :). :100: . start2. i see, this is a feature :+1: . i think siteUtil.getBookmarks() does this. previously we extracted this out for clarity \u2013 is moving it into the function call needed?. on the first sync, i feel like we should just check records for any bookmarks and enable the toolbar here. it seems unnecessary to pass showBookmarksToolbar here and 8 more times in syncUtil.js. could also add an IPC message for DELETED_USER and wait for that. for initial sync, if we apply all bookmarks and folders at once, this will always return null; so folders don't sync.\nwe could fix this by first applying folders and folderless bookmarks and folders (to ensure correct ordering); then applying foldered bookmarks. see below for more info. bookmark folders:\ninstead of applying all bookmarks, i think we should first apply all folderless bookmarks and folders, then apply foldered bookmarks. otherwise we won't be able to resolve bookmark.parentFolderObjectId -> parentFolderId, so bookmarks will end up folderless.\nbonus points to recursively apply (top level folders/items, then second level, etc) to better ensure folders ids are available when we need them.. affirming that existing objects aren't needed \u2013 it would have been resolved upstream during get_existing_objects -> resolved_sync_records. minor: maybe clarify it's a batch of records possibly not yet applied.. an existing object's app state key path should be an array of at least length 1. so for siteSettings: [\"siteSettings\", {hostPattern}]. good catch. :+1: . this looks like a little basic; what do you think of: \n<Button l10nId='syncRetryButton' className='primaryButton' onClick={this.retry.bind(this)} />. if u do the Button change this can be removed. :+1:. good catch \u2013 now checking. thx\u2013 it's not; i removed it. minor: can newSiteSettings be const?. g00d idea. minor: commented code. after reading the PR a bit, it seems to me that skipSync is a flag set to inform reducers of the original cause for addSite (a browser record vs. a downloaded record). is it worth mentioning that here for clarity?. I think this change causes all bookmarks to show up as History items.\nIt might be that https://github.com/brave/browser-laptop/blob/master/app/common/lib/historyUtil.js#L19 is now returning every site not a bookmark folder.\nRepro:\n1. Start pyramid 0, enable Sync and visit archive.org and wikipedia.org\n2. Start pyramid 1, join pyramid 0's sync group\n3. Examine pyramid 1's history \u2013 it has the 2 sites.\nExpected: Pyramid 1's history should be empty because history doesn't sync by default.. i did. @diracdeltas hmm that fixed half of it\ntry syncing to the forsaken lindy ... group. i see a lot of history items.\nshould this line be\njs\nreturn !!siteDetail.get('lastAccessedTime') && (!tags || tags.size === 0). i don't think there'd be a crash any more due to the change to downgrade the throw into console.log.\nOn bookmarks == history, I think that's not obvious to a user; so if I synced my bookmarks I'd expect history to be empty. It would only make sense if I understood the sites data model. However, this is how it currently happens in master so this is probably ok.. Note for reviewers: this is most important change, to filter out non-matching sites as soon as possible to avoid downstream property lookup. thanks! i've updated this PR to use indexOf instead of includes.. The first 5 properties are lazy / accessor functions, so this is to populate those properties.. i don't think is always correct because if other devices add records out of order, the id list will be even more jumbled.. bookmarking a page doesn't seem to trigger this function. how would that state change get reflected here?. This should only iterate over a median of 1 or 2 keys.\nWe could have a location-to-bookmarked cache if we assume a location can be bookmarked only once.. i think it's called once per site icon shown on newTab, when you open a new tab.\nit seems to be pretty fast.. I did check. It gets called once per newtab tab square, but it runs in <= 1ms.. is this no longer needed?. it probably shouldn't be recreated every time (my bad) but this is okay for now. sure; i wanted to keep it concise but i agree \"pend\" (v.) is an uncommon usage.. hmm yeah that's a good idea. oops. should it be versionInformationAdded?. should it be versionInformationAdded?. sorted collections are not easily possible with Immutable.JS right? and we probably don't want to re-sort on each sites mutation\ncurrently i'm working around this by keeping separate sorted lists of siteKeys & scores (redis-sorted-set) in memory, populated at program init and with each ADD/RE/MOVE _SITE event.. re-sort on every sites mutation has been a source of serious perf issues, so as long as we don't do that it's okay.\ni'm actually working on something similar for caching history and topsites. downside is the cache is available in the same process only.\nit would be nice if there existed an Immutable.JS sorted map.. I checked my prod user profile and versionInformation is present.\ncat ~/Library/Application\\ Support/brave/session-store-1 | python -mjson.tool | less. this is correct\u2013 this is \"Find records whose timestamps are after 30s ago\", looking in the past because records created 0\u201330s ago could be inconsistent.. It's not a current Sync feature, so I think we should add it after the base Sync fixes are merged.. for syncing history sites, we actually don't need tags nor type. I thought it might be useful to have a reusable isHistorySite() but I think I'll just re-remove it from this PR.. Removed this because syncUtil.createBookmarkData() adds objectIds. oops, was a mis-rebase. good catch!. minor: this differs slightly from the other usage in frame.js where pdfjsOrigin includes the trailing /. no particular reason. lodash seemed well maintained.. ",
    "mrose17": "Sure! \u00a0Feel free to remove it... Just there for debug!\n/mtr\nOn Mon, Aug 15, 2016 at 4:51 PM -0700, \"yan zhu (@bcrypt)\" notifications@github.com wrote:\nIn app/ledger.js:\n\n+\n-  return data\n  +}\n  +\n  +/\n- * publisher utilities\n- /\n  +\n  +var currentLocation = 'NOOP'\n  +var currentTimestamp = underscore.now()\n  +\n  +var visit = (location, timestamp) => {\n-  var setLocation = () => {\n-    var duration, publisher\n  +\n-    if (location !== currentLocation) console.log('new location: ' + location)\n\n@mrose17 can we remove this console.log? URLs from private browsing should not be logged\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. great point! fixed in https://github.com/brave/browser-laptop/commit/86583f1ec1bc6d7127cc8632c2fb727a1b39d98d\n. @bbondy - i'd prefer that as well. however, the link has to be stored locally for privacy considerations.\nso, what is required is a small API that allows ledger.js to store/update an image locally and get back the associated URL...\n. if someone will tell me what the API is, i can modify ledger.js ... but (like so many things!), i don't know the API...\n. @bbondy @diracdeltas tells me i misunderstood what you were asking... sorry! i've got a PR that fixes the default icon issue...\n. agreed. i'll remove that.\n. not at all! good catch.\n. the original bug was caused by going from 'on -> off' and then having the timer fire.\nif someone does 'on -> off -> on', then client has changed, and when the timer fires, the old client is used..\nthat's why there's a check that the client instance hasn't changed.  your thinking?\n. some people keep the wallet on another device and use the camera on that device...\n. actually btcPrice is now OBE based on what's in master\n. +1\n. actually it is currency1/BTC, e.g., the number of dollars/cents per bitcoin...\n. agreed. no longer needed.\n. sure!\n. +1\n. i suspect that sometime post-beta we will need to use something like https://github.com/xsolla/currency-format in order to format properly...\n. oops! i'll fix it in master momentarily... sorry!\n. use this.transaction.get('contribution').get('satoshis')\n. i don't quite understand this change. it looks like 1 line got split to 3, but no other changes... what are my eyes not seeing? thanks!\n. because the \"real\" string tends to be a long base64 value. all we really need to know is whether a value is present or not, the \"...\" serves that purpose... otherwise, you get a lot of scrolling in the console window with very little useful content.\n. ok, who should we re-assign it to in order to implement a more general solution?\n. since i am not familiar with the code, and you wrote it, let me defer the changes to you... less likely to have an inadvertent mishap... thanks!\n. Set takes at most one argument, which is an array. if i were to pass args instead of args[0], then i would need to do use .apply() as well. i will make it clearer.\n. because that is the actual default value, and when the synopsis is written out, i don't want it to be zero, so that when someone starts the browser without process.env.NODE_ENV being test, they won't get surprised... but, i see an easier fix. please stand by.\n. yes, as noted in the PR, it's included here as well.\n. @diracdeltas - i think the latest commit simplifies things.\n. as @diracdeltas is fond of saying: don't forget to update docs/state.md\n. +1\n. it is actually, just a warning!\n. +1\n. +1\n. i suspect that localization has to occur in the browser in the ui subsystem. \nis there really a better key than just a text string? both buttonText and titleText can be used as the key values. am i missing something?\n. as mentioned in my reply: i don't think that's a good idea, but let's give it a shot and see what happens.\n. +1\n. in this case, no... because in the function i need access to both the key and value, not just the value...\n. indeed. on the way.\n. more more accurately, not needed!\n. i know. i intensely dislike that syntax.\n. +1\n. thanks. that's easy to handle.\n. i don't think this change is needed given my change. do you agree?\n. @bbondy - just so i'm on the same page: the change here doesn't break anything, i merely believe that it is unnecessary. there's no harm in keeping it...\n. fine. \n. yes, at some time in the future, we're not going to count idle when you are on an audio(/video) page... so, i've just put in a comment as a reminder that a check can start there.\n. it is better to call setTimeUntilReconcile with a null timestamp and let the ledger-client package figure out the next time.\n. you shouldn't use callback here, since that's used for client.sync ... look at how the call to setBraveryProperties does it!\n. probably better to get rid of return and add a break line -- that would be consistent with everything else in the function.\n. thank you for adding the default case!\n. why did the indentation change?\ni agree that line 446 is indented too much, that must have been a slip of the finger. i thought it would be:\nclient = ledgerClient(state.personaId,\n                            underscore.extend(state.options, { roundtrip: roundtrip }, clientOptions), state)\n. except that this is the only example of that style of indentation in the file...\nperhaps we can compromise by putting the first parameter right after the \"(\", and the \")\" right after the final parameter?\n. true. it is used only in one place. remove it?\n. in order for the ledger code to actually do the pruning, you'll need this line. just remove the \"* 1000\". in order for the ledger code to actually do the pruning, you'll also need this line. . @willy-b - what's the motivation behind this change, i think it might break some other tests.... @cezaraugusto - good catch, fixed, thanks!. correct. wallet recovery is now actually \"recovery of old wallet\" rather than \"transfer the balance of the old wallet to the new wallet\". yes, it's weird: this deals with a race condition that @NejcZdovc found during testing.\nit's done that way because the file may be in the process of being written when we want to delete it. in which case, if we unlink the file, we might just then go ahead and write it again. hence, always delete in this case.... oops! fixed.. i'm not sure whether it makes sense. it is certainly counter-intuitive: if you have successfully written the file, and the user is quitting, and the ledger isn't enabled, and history is to be deleted, then get rid of the synopsis file... reminiscent of https://www.youtube.com/watch?v=GoxcyV4DJuY. these last two are fixed in bat-publisher@1.2.1 and bat-client@1.4.2. 1. bat-publisher is being passed a URL that the browser is playing. whether it is http? is immaterial. the goal is to look at the URL string and figure out where to look for the oembed data.\n\n\ni think that this is a worthy future, but not essential at this point. it is certainly good to have routines that parse data run in a separate context. it's not clear to me why that is \"more necessary\" in this case. we can open up an issue for this, and when we do, it would be worthwhile to see what other cases might exist!. 1. is addressed. we aren't opening a URL, we are parsing it in order to find an oembed provider. if the browser decides to play it and then ask for information, then the module will provide the information.  however, in the interest of moving things along, i have pushed bat-publisher@1.2.3 that makes this change.\n\n\nit is not a simple thing to make this change (it has to be made in the browser). nor am i convinced that it makes sense to require this code be held to a standard higher than any other code in the browser. as i noted in my comment.\n\n\neverything has a cost. i suppose we can address 1, because it's a small change, even if i do view it as unnecessary. in addressing 2, it has a large cost (i already researched it with @NejcZdovc) and addresses a theoretical concern. there is significant cost to that we will not be able to merge this upcoming week. i don't have an issue with the browser folks reviewing the issue that @diracdeltas created after this merge, and having the same standard applied to the entire browser. i most certainly have an issue having this new standard being applied in this context and in this timeline.. approved.. shouldn't balance be passed as the parameter?. because the lint-stanadrd command generates output so that it can be parsed by programs that will position the editor to each error. when you do the --verbose | snazzy thing, you lose that.. you probably don't use emacs. this is an interesting question: my thinking is that we don't need hasFunds, it's a good idea for folks to keep a balance, regardless. wdyt?. shouldn't we just call this notificationTitle ?. i think from the browser's perspective: it needs a title, text, and url for the notification.\nit doesn't really matter if the title was a category yesterday, an advertiser today, or something else tomorrow... the original \"ask\" from the folks at research was to report the SSID, the IP address and the geolocation for each event. i changed this so that the browser would detect the SSID internally, and allow the user to optionally select a tag from a static list to go along with it. that tag would be reported instead of the three things in the original ask.\nthe list of tags has entries like \"home\", \"work\", \"transit\", etc., which are both generic and user-selected. i suspect that this is much less a privacy risk than the data requested in the original \"ask\".... my understanding is that it is only for test groups. when differential privacy is added, perhaps it will return; however, i have no data on that.. @kevinlawler - either http: or https:. thank you!. i believe so, we are seeing it work now in the current RC under private test.\n. it still is in the usermodel branch, which we regularly rebase from master to stay current with \"the latest and greatest\", however, afaik, none of the usermodel branch has gone into master.. thanks!. ok.. both the exit/close handlers should do the same thing: log the code & siginal, and restart geth.\nthere should be a handler for error that logs the error and does not restart geth.. since geth is probably undefined at this point, will cleanupGeth actually kill that pid?. yes. it's intentional: if someone is on the test network, or someone turns on GETH_LOG, then we get logs, otherwise not. in other words, for production use, no logs by default; for testnet use, logs by default.. ",
    "Sh1d0w": "The only reason I did this is because if I use only one porperty to check for both the button and the input, is that the input will be highlighted in red intially, which I think should happen only if you submit empty string. However with the disabling of the button if it is empty it is not necessary, so I will refactor.\nThanks for the feedback.\n. Actually in case of Bookmark this.props.currentDetail.get('title') will always be set as the website's title, so even if you have empty customTItle, you should not see grayed button and if you submit the title will fallback to website's title.\n. Good point, moved.\n. Yes, previously it deleted everything now it preserves only the UI position params. If you selected the option to start only with home page you don't want tabs and frames from the previousl launch, no? :)\n. Since it will be an empty array I don't see any problem if it is not unset, because on the next initialization it will be set to empty array again. Let me know if you want me to add check tho\n. You are right, haven't tested it tho. Closing.\n. I have added two more. If you think I missed some, please let me know I will add :)\n. Ah, I am so sleepy. Fixed, thanks\n. Done\n. ",
    "jkup": "It looks like that's called by onFind in frame.js https://github.com/brave/browser-laptop/blob/master/js/components/frame.js#L1024\n. @bradleyrichter how does that sound to you? I was just going off your mock https://cloud.githubusercontent.com/assets/13509546/18232727/0a78554c-728b-11e6-9146-e8196a95e39d.png\n. how does this approach look?\n. Nice catch! I totally forgot to add the word 'visit' before the button like @bradleyrichter has in his designs! Fixed.\n. Can you help me understand why? Will I also need to create and pass down actions for updating those keys as well? Thanks!\n. Yeah, should I just wrap it in an if check or do other operations need this too?\n. I'm not super familiar with the ledger but from looking at it I think I can remove the .boot() line. Because the \"recover\" and \"backup\" actions shouldn't be able to be fired unless ledger is already enabled -- right?\n. @diracdeltas I took it out and it seems to work fine but would love to hear @mrose17 weigh in!\n. sorry! fixed.\n. fixed.\n. Can this still return -1? If so won't a .filter() throw?\n. Yeah totally. My only point with \"linting\" was that Aphrodite doesn't have a robust ecosystem of tools available like PostCSS does.\n. Should it only show the location if you already have the site bookmarked (similar to the star behavior)? Or always show the location when you cmd+d or select it from the menu?\n. @mrose17 ok so the problem right now in master is that it's first stored in ledgerData and then here it's added to ledgerData.synopsisOptions.\nIf it needs to be in synopsisOptions is the fix moving the initial value from the root of ledgerData?. If it's all good with you, I might try moving tab.js later. I tried moving it now but it has a lot of deps to move around.. I updated it with my understanding of what would be good! Would love to hear comments!. Moved!. ",
    "minustime": "@bsclifton Do we download the .properties file from Transifex after it's been reviewed and then generate a PR? I think that piece needs a little bit more clarification.\nThis is what I see in Transifex for one of the property files:\n\n. ",
    "dcposch": "@bbondy do these CSP rules apply only to the braveExtension, or to all extensions?\n. done!\n. hmm. that doesn't seem to work\n. nvm, figured it out!\n. fixed\n. fixed\n. fixed\n. removed\n. removed\n. ",
    "gyandeeps": "Is the expectation, that we want to move the placement of icon slightly to the left?. ah i see now. Sorry abt that I dint realize we lost the color of the title. Will make the change tonight.. I am not able to understand the use case here. Can you please explain the issue u r seeing?. k. But i dont think you need to make this change since now its if-else so only one class gets returned by this function. So you can never have a fa-search fa-list together.. yes and when you try to search something on about:preference page then it will hit the search if condition on top and start showing the search icon. because that what you want when you are searching doenst matter on which page u r on. That how i am thinking about this.. I have to use forceUpdate here because we inherit from ImmutableComponent and not ReactComponent. ImmutableComponent checks for props only to make the render update work.\nforcedUpdate has been used in other places also (possibly because of the above reason).. @bsclifton I do understand your approach. I dint do that since this tab width change s such a small state change. It has no impact on the other areas of the application.\nWill make the change as you suggested.\nSide note: I think in some places i have seen similar (to what i have) approaches taken.. @bsclifton Here we need to change the width based on 2 different events. One is when the frame is closed and one onMouseLeave. Any suggestions on what kind of event name you would prefer for latter.. Why I asked was because onMouseLeave event is very generic looking from a appState perspective. \nI can make it specific to tab like onMouseLeaveTab, etc. based on our slack chat, will use onTabClose and onTabMouseLeave as event names.. this is already old :smile: ... latest is 3.5.3. ",
    "leighmcculloch": "Shouldn't matter if the output is spammed because only stdout not stderr should be piped. . ",
    "anonrig": "Why not use localSearchTerms.map(e => e.get('searchTerm')) which is more readable?. ",
    "michalbe": "Thanks! I never worked with ImmutableJS before, so most of my code in there was just a blind guess.. THIS is the part I missed! Thanks!. Why there's a try block in here?. ",
    "mrpapercut": "Oh boy do I feel stupid. Yes, absolutely right, should've been more careful. Rev 770596a adds Cmd+Alt+U for darwin always, and adds the Cmd+C only if not in dev-mode. ",
    "kumarrishav": "I added default value as {this.props.currentDetail.get('name') || ''} to avoid the warning (because of react 15 upgrade).\nwarning.js?8a56:36\nWarning: AutofillAddressPanel is changing an uncontrolled input of type undefined to be controlled. Input elements should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components.. same here.. fixed.  I wasn't aware of this utility func. @NejcZdovc Thanks . . Did you mean like this:  origin && localFileOrigins.some((localFileOrigin) => origin.startsWith(localFileOrigin)) @diracdeltas . Yeah, this will be doable. . @bradleyrichter this doesn't seem working. But code is same as what's there in for menu.js\nCan i have some input on this. Thanks. ",
    "kevinlawler": "@bsclifton The in-progress fix for cookies.getAll is here:\nhttps://github.com/brave/muon/compare/chrome-cookies-getall\nThis should either suppress that error outright or should be able to be modified in some way to do so. I think it is waiting on further testing.\nI'm on Slack if anyone with an interest in this wants to discuss.. should be able to. let me see. done. I played with the CSP file but couldn't get the violation to reveal itself either. It might be some other security restriction. The error from the console is\n[75566:775:0922/145254.257520:ERROR:CONSOLE(0)] \"Not allowed to load local resource:\n    file:///Users/user/Desktop/brave/browser-laptop-bootstrap/src/browser-laptop/app/extensions/metalmash/images/icon-19.png\", \n    source: chrome://brave/Users/user/Desktop/brave/browser-laptop-bootstrap/src/browser-laptop/app/extensions/brave/index-dev.html (0)\n\nand it disappears when switching to chrome://brave. Subsequently the image loads.\n. added in 1bc13ba\n. this naming scheme was inherited from the fields in the original bat-ads-feed.json and is kept consistent through the variable names. the two change options we have are: we can change it in the variable names only and make it inconsistent with the data (touches this repo only), or we can change it from here back to the original data (requires touching this repo & brave-intl/bat-usermodel & npm publish). lmk if you want me to change. ",
    "romamatusevich": "We have sites to test:\n- { location: 'https://brave.com', title: 'Brave' },\n- { location: 'https://brave.com/test', customTitle: 'customTest' },\n- { location: 'https://www.youtube.com' },\n- { location: 'https://www.facebook.com' }\nPer this test scenario:\n- click on [data-sort=\"Brave\"]\n- activate shift and click on [data-sort=\"https://www.youtube.com\"]\nSelected should be:\n- { location: 'https://brave.com', title: 'Brave' }\n- { location: 'https://www.youtube.com' }\nNot selected should be:\n- { location: 'https://brave.com/test', customTitle: 'customTest' }\n- { location: 'https://www.facebook.com' }. By the way I see that in TraviCI tests for about:history are passed.\nTried locally, but get errors:\n1) about:history page content \"before all\" hook:\n     WaitUntilTimeoutError: Promise was rejected with the following reason: Error: unknown error: Cannot read property 'appStoreRenderer' of undefined\n      at execute() - brave.js:507:19\n2) about:history double click behavior \"before all\" hook:\n     WaitUntilTimeoutError: Promise was rejected with the following reason: Error: unknown error: Cannot read property 'appStoreRenderer' of undefined\n      at execute() - brave.js:507:19\n3) about:history multi-select behavior \"before all\" hook:\n     WaitUntilTimeoutError: Promise was rejected with the following reason: Error: unknown error: Cannot read property 'appStoreRenderer' of undefined\n      at execute() - brave.js:507:19. Unfortunately after the cleanup and install the same result with errors. Anyway this issue is specific for me so I close the PR.. ",
    "abs-zero": "you mean these two lines: \nwindowActions.setDownloadsToolbarVisible(false)\nwebviewActions.setWebviewFocused()\n?. ",
    "Garbee": "These kinds of things won't work with the current OpenSUSE Leap for example. It is only running RPM Version 4.11.2 by default. It needs a specific package built for it.. We need a solution that resolves Leap as well. Otherwise that's the entire stable desktop platform of openSUSE left out. And in resolving it for Leap, that will resolve it for Tumbleweed as well.. There is an issue open for discussing solutions before working on the actual code side. That way when work is done we are sure what happens is going to at least have a chance.. What effect does this change have on leap though? Would the build's output RPM even continue to work with the new keyword on an older system?\nHaving one solution that works for more systems is better than rolling out two solutions that work in different ways. Hence why I am proposing in the main issue having a second build just for OpenSUSE. I am waiting on input from the team as to what would need to be done and allowed before putting in the work on something that may get rejected since it isn't setup how they'd prefer it get hosted.. ",
    "mati865": "I mentioned it fixes only on Fedora and oS Tumbleweed.. I'll close this PR if someone opens PR with better solution.\nFor now let's put it on hold.. Alternatively I'll remove \"Fixes\" keyword so this can be merged as fix for Tumbleweed and issue will remain open for Leap users.. Nothing has changed for Leap:\n```\nProblem: nothing provides (GConf2 or gconf2) needed by brave-0.20.0-1.x86_64\n Solution 1: do not install brave-0.20.0-1.x86_64\n Solution 2: break brave-0.20.0-1.x86_64 by ignoring some of its dependencies\nChoose from above solutions by number or cancel [1/2/c] (c):\n```\nConsidering this issue is 6 months old I still think fixing it for Tumbleweed is better than having it broken on both.. @luixxiul it never worked on both Leap (stable) and Tumbleweed (rolling).\nWith this PR Tumbleweed is fixed and Leap remains unchabged (broken).\nMaybe I should remove \"fixes\" tag?. @luixxiul no problem, I'll rebase it when I return home.. ",
    "dfperry5": "Yeah, so basically countryCodes.js is just an array of all the country codes? then append that to the array in app/locale?. ",
    "snyderp": "Fixed in \nSorry for all these issues, most just curious if the general approach is appealing for a patch.  If so, and if fadd50814 is not up to snuff, I'll give the PR a careful head-to-toe before sending it back to you. ",
    "kjozwiak": "Added :) Nice catch \ud83d\udc4d . ",
    "pureooze": "Possibly a silly question, but will this path work on other machines? Seems to me the path is hardcoded.. ",
    "davidtemkin": "yes, thanks. ",
    "sergio-rojasa": "I tried your suggestion and I tried other way using ${locale.translation(l10nId)} ${siteName} but it also didn't work. when I lookup locale.translation, I found out that  it only accepted one argument.. The change is not working for me.. ",
    "user512": "@luixxiul, thank you for the feedback, just fixed as you recommended.\nI am not very familiar with styling in this app or styling in React, would you mind telling me how does order affect styling? I tried reading https://github.com/brave/browser-laptop/blob/master/docs/style.md but can't find how order affect styling.\nWould be great if you can suggested some reading about styling in React, thanks \ud83d\ude04 \n. ",
    "jumde": "if the width is not required, can we remove it instead of commenting it out?. safeBrowsingAll - Google + Brave Safe Browsing\nsafeBrowsing - Brave Safe Browsing\nI was thinking safeBrowsingAll will be the safeBrowsingControl by default. . I checked yesterday, and I did see some headers in lowercase. Strict-Transport-Security and strict-transport-security. With urlParse:\ntps://oogle.com/search?q=s%3A%2F%2Fwww.lcebook.com%2F\n{ hash: '',\n  hostname: '',\n  host: '',\n  href: 'tps://oogle.com/search?q=s%3A%2F%2Fwww.lcebook.com%2F',\n  path: '//oogle.com/search?q=s%3A%2F%2Fwww.lcebook.com%2F',\n  pathname: '//oogle.com/search',\n  port: '',\n  protocol: 'tps:',\n  query: 'q=s%3A%2F%2Fwww.lcebook.com%2F',\n  search: '?q=s%3A%2F%2Fwww.lcebook.com%2F',\n  origin: '' }. with new URL\nURL {\n  href: tps://oogle.com/search?q=s%3A%2F%2Fwww.lcebook.com%2F\n  protocol: tps:\n  hostname: oogle.com\n  pathname: /search\n  search: ?q=s%3A%2F%2Fwww.lcebook.com%2F\n}. Fails here: <a href=\"tp://ttt.com\">Test Url</a>. yes, working on that.. The variable names  need to be updated here. \nIn https://github.com/brave/muon/pull/540. I updated the origin to be the security origin of the current frame, and the mainFrameUrl to the URL requesting the permission. . Yes!. Its a demo key that I generated. We can switch the key and updated the signature files once we are ready to ship.\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nmQINBFqrIn4BEADgqJTNhqw8B/T7huOm31dDzkqJEB8pIpcML35POcYs5CwOvGO2\ns2rzCh6Atys212CCZEMs4spWAReXux0KirKq0ON9N8modct2AcNS5bSdmyMhQehP\nwb1jt3bVX6nufJqrlYIf34LdHx3DAUhLr8bFSK9Hskt15Q5UyT0UKUfSl5t69zLf\nDFZObR0aHqltfuenFfquO6aUpXopyhd6L89Jsm/o7vME6vdG/TJ3U97AV5wwDlrH\nmRUWrXxgqcPrrKPJ0SdQ3cf36iPdvglsVC0m9LU6XzTph61gD1JnXmYmxmRtubYu\nwr9N2JB+aTxR3TsOn3hfpWVrLGME6wpFMkvRzVaHQc8PUJhVMmeZHXECr264/R9d\nPDCAFoqaAiXjhvDbtYK2iWTdos2WWFZ+SdfSQaNBv37nQ5UO2sZfa/iKwVzu7Xka\nVHCKckm37PBNQwVmwUjunTa3TpKE7Mxygm1v3dCofxCm+Eq9/4uyL6sVMMbtBiUI\n1rY9G8zyF8Z+n+jQmiMHtwk2pBp7lQf4bnSUrc401MQ2WOX67COU2DY4j4cUaGzi\n6/StRDUKX+3InXEaNymPYuelAK6iafh+TvOeH4nRfz/mmlL4deWZKeyuEgqZK6E3\nuCxyUbwXwfqbs0REma58gl7qCOOmBRDUxGlOryxdHGph4Hj4MK9GcDazEwARAQAB\ntC5QcmFuamFsIEp1bWRlIChEZW1vKSA8cHJhbmphbC5qdW1kZUBnbWFpbC5jb20+\niQJOBBMBCAA4FiEE07dgRmQdLCde+McomT2q8CmO1P4FAlqrIn4CGwMFCwkIBwIG\nFQoJCAsCBBYCAwECHgECF4AACgkQmT2q8CmO1P7PkQ/+KLBGeErNQTV0I6dvSTdd\nKfQTcLmc1xnGIqcCYP1evu54XmZmHJwr6O7TdRovo/ycotKeKbZLug6QTr9Az+uv\nGd1hL3WC4D+67KDbJHupCowW3RPKYmhHTgvKC74czN5IzAX8CsjtXMSWbCS9iqgG\nQewQJsfHvvFG+r1HwUs37N7L0Oev1g2qzdP+pLOKwAgA62o7xUtUIQETUPjO1D9P\nG09G2QPLGwEQwPOaSk2dom5bmHBBVkAXXrWmgZ8cDdIJJxGcFneRcIYBhA6wxAGz\nvOKnTWYN6W4OC4X4TDUhrUTdwCjoScBdrX4GAbolWeI++d23b/6PL47HtnGiTl64\nKtvmKKSqSvImOHBT78GmI0mdZ9VBfbyr5blC/wuww/Du3ahVvdsFv+30HEpsOaUd\nCyK7A3wiT0O+69M7SpTMhA2/QU3AHZfPDo9EGCAgh9xeljN2Thcqxl+vyAWBteVv\n5PUXs46rHU3F1dqHLlGlHTZwY6MOcTSPegHIGV+vZoJwfuj8IQbw/x0712SUJzvX\nc4HsBsePkJe3TaRVqVdAysCRK3a/pVDp9Rcf2FCRTXdDKBZeli28/0md81CiGFHf\nEaoW/JFFy6d91iW+RB2E8GefYDpa9+JrheUSDV3aPoWprX3yQiIeWz5jpINsQStm\nakWrUSRBaq7kcZeMJnJRysA=\n=GCo9\n-----END PGP PUBLIC KEY BLOCK-----\n``. 1. Save the key to the file saydemo-key.asc` \n2. gpg --import demo-key.asc\ncurl was installed, I updated the windows box with gpg4win. Good catch! fixed. This is still needed, muon.url.parse for muon.url.parse('sms://bing/kfdk') returns NULL origin. The warning message if this change is not present, the warning message will read Allow Brave Browser to open an external application?. Host is also null for arbitrary URLs:\nUrl: hps://nodejs.org/en/download/\n{ hash: '',\n  hostname: '',\n  host: '',\n  href: 'hps://nodejs.org/en/download/',\n  path: '//nodejs.org/en/download/',\n  pathname: '//nodejs.org/en/download/',\n  port: '',\n  protocol: 'hps:',\n  query: '',\n  search: '',\n  origin: '' }. @riastradh-brave  - can you try npm install in browser-laptop and confirm if the binary is present in app/extensions/bin.. Updated!. https://github.com/brave/sync/pull/198. This text will only show up if Brave Safe Browsing is enabled. . Not needed?. If the tab is already FullScreen, do we need to set it to full screen again?. 'xattr -d com.apple.quarantine /Applications/Brave.app || true. In cases where the .app doesn't have a quarantine flag xattr -d might fail.. &&?. I created a new bundle for all, verified that the hashes for the content matches. May be related to timestamp or ordering of files. yes. true?. Users update cadence is different, can we download the latest pkg/installer instead of embedding in the installer in resources? Users might end up installing an older version if the users update muon after a new version of brave-core is released. . @bsclifton - If the init script fails before this, the <platform>Init.js script will try to install brave-core again, what do you think about writing errors to the same file? In that case, if the script throws any errors before this line the init script will not run again.. ",
    "AlexRobinson-": "Oh woops, forgot I left that in there. Nice catch!. Will do! I'll also use useParse here to keep it consistent\nhttps://github.com/brave/browser-laptop/pull/12754/files#diff-b9f459fd47114771333b78b87fac7daaR363. it seems urlParse always returns an object\nhttps://github.com/brave/browser-laptop/blob/master/app/common/urlParse.js#L19\nSo it should always be non-falsey\nWould you still prefer a check in there? If so should we display any errors to the user? Or just ignore the fail and do nothing?. Any thoughts on this @diracdeltas . Can do! Did you want me to replace the other locations this text appears as well?\nE.g.\nhttps://github.com/AlexRobinson-/browser-laptop/blob/ef1cb6caf42f1a79c71715e20bb2f450e58d74b6/app/browser/tabMessageBox.js#L24\nhttps://github.com/AlexRobinson-/browser-laptop/blob/ef1cb6caf42f1a79c71715e20bb2f450e58d74b6/app/browser/tabMessageBox.js#L38. ",
    "locklin": "OK, will do. \nI'm assuming the purpose of this PR is to ultimately merge back into main branch?\nI apologize for my ignorance; most of my career I'm out working on my own repo, which eventually gets used by clients. . ",
    "ryanml": "@diracdeltas Per this request I've pushed a change \ud83d\udc4d . @NejcZdovc apologies there, i've removed this line.. @diracdeltas sounds like a good idea. I can include that in to an action in this PR. Should I move all of the other restart notices in the codebase to the new aboutAction as well, or do that in a separate PR? Thanks!. @NejcZdovc good call, changes pushed. Very good catch, will update. adjusted. So here lays the problem I'm having and the way I chose to test it revealed this:\nIn the case we are adding something via the history item context menu, that site has already been visited and in some capacity captured in ledger state. So using getInfoKey() for ledgerState.getLocation(state, location) pulls in location data just fine.\nThe same will work for bookmarks added with the '+' (you would have had to visit the page already)\nWHere tldjs.getDomain becomes helpful is if I make a bookmark for a site that I haven't visited yet and manually enter the location. In that case ledgerState.getLocation(state, location) returns nothing as it has no record of the site. This way a key for the domain can be generated without depending on getLocation()\nWith this in mind, I would be compelled to make the use of tldjs.getDomain a special case only for those bookmarks and not for history entries since we can trust the ledgerState for the location data. Since the publisher key ends up being the url without the protocol, it doesn't seem to have any unintended side effects.\nLet me know your thoughts :) @NejcZdovc @diracdeltas . adjusted. updated. @bradleyrichter for comparison's sake:\n\n\n. @diracdeltas per our conversation, tldjs.getDomain() is no longer in use. Additionally, the context menu item is disabled for custom bookmark locations that are either invalid or without a protocol.. Agreed, done. Template only added if menu option should be enabled.. Thanks for fixing \ud83d\udc4d . I think this approach would be a lot more efficient yes, especially for minimums with multiple visits. It only would not work for one scenario:\nSuppose your minimums are 1 visit for 1 minute, and you've made one visit but only for 41 seconds. Visiting the site again with this approach you'd have to wait 60 seconds for the full MIN_VISIT_TIME to pass.\nTo get around that, maybe we could calculate the time remaining, (In the above scenario, calculate 60000 - 41000 = 19000 and set the timeout to 19000). Does that sound agreeable? . the setRecoveryStatus method inside ledger state is called when the conclusion of the recovery has occurred, (success/fail) or when it is reset. In both cases recoveryInProgress should be set to false as the attempted recovery is over.. @NejcZdovc refactoring pushed. @petemill good thought, I did a search and it looks fine to remove. I've pushed an update removing the excludedShareSites addition. I left removing Digg from templateUrls a separate commit for ease of search should we want to add it back at any point.. Could this be changed to something like APP_ON_LEDGER_FUZZING?. Following other comment, maybe this should be onLedgerFuzzing. Should we set this prop after newStamp has been validated on line 510?. That sounds fine yeah, I just assumed that if the check failed the process to that point would be so quick it may not be worth it.. Extra log :). Could you maybe refactor updates to recoveryBalanceRecalculated as its own function inside aboutPreferencesState, similar to the other functions dealing with recovery props? Just to keep things consistent :). Do you think you could add some tests or perhaps a comment block explaining the logic inside the inner loop? (Perhaps what values of each row are being compared to determine the sort check and why?) It is understandable why the old JSON.stringify comparison of each row may not have been efficient but it was more readable :). Is this inner if necessary? the upper check for this.props.rows[i].length > 0 wouldn't pass for falsy objects.. A check shouldn't be needed, the sites are pulled from this function and it will just stay as empty array if no deletedSites are available.. Could this block perhaps be extracted to a separate function and exported? It shouldn't change any of the existing tests you've put in place.. Is there a reason this isn't just 15px? it looked fine with it for me. (nit) could we maybe separate new Date(grant.get('expirationDate') * 1000).toLocaleDateString() in a to a formatting function?. batch should be set to Immutable.Map() here, it is of type object in bat-client. See above, should be data.batch = {}. would it be helpful to set data.memos = [] in here?. (nit) could you add a case for newStamp: 0? Then coverage should be at 100% :D. ++. ++. Log :). (Small) could we maybe bake this in to this.props so we have something like this.props.paymentInProgress?. See above. Sgtm, thanks!. Where is this being called? Seems like it should tied in to deleteWallet. Got it \ud83d\udc4d . ++. ++. I think we should capture this in a common variable (whether in appConfig or something scoped only to ledger.js) then we can share it between all of the needed delays. fixed. This is now delayed as well. App action has been created to remedy this, a fresh state will be used in these actions now.. Definitely a good call.\nI'm going to go through and clean up the conventions, also since this endpoint includes exclude info I may remove the verified prefix common throughout this PR. @jasonrsadler done, a test has been added to reflect this change. \ud83d\udc4d . nit\nLet's wrap this in an if statement (if (togglePromotionTimeoutId)). Yep, agreed. No purpose for at that point. List fetches will continue if they reenable. I like it!. Good spot. It doesn't hurt anything at the moment but we can change this in a future PR.. @jasonrsadler done. Also I can confirm that I am receiving 400 for the promo PUT using the test code on master.. Yep, good catch. Will remove \ud83d\udc4d . removed. It isn't entirely necessary but for large publisher sets I thought an async action may be best.. ++. This should probably be ~15 seconds, it's just that publisherInfoData may not be yet available due to startup delay. @NejcZdovc added. addressed in slack. done. In the current conditional, the activity calculation is not done and state is returned as curBrowsingTime >= minTime && ledgerStatus !== ledgerStatuses.FUZZING are the requirements. So it will proceed with the check if ledgerStatus === ledgerStatuses.FUZZING or am I missing something?. done. @NejcZdovc you can iterate over a Map using for (let item of map) so this works. done. done. Can do. done. Good catch, in the event that geth is undefined the kill will not go forward. Will fix.. ++. fixed. Can do \ud83d\udc4d . In any case we are checking for if (err), let's go ahead and output it via console.error. is this included intentionally? i think that would should let GETH_LOG be the sole deciding indicator for logging, lest there is value in always having debug output on ropsten. thanks for these ones ++. ++. Eh, sometimes I go a little extreme on the parens :) I can clean it up. ",
    "MargarytaChepiga": "The extra space between an icon and address is caused by the padding. Looked okay with the secure connection, however as @diracdeltas mentioned with others not really. Changing to 5px 5px 5px 5px makes it better.. You are right actually. Sorry for that, I am gonna figure it out asap and update the PR. Okay?. ",
    "jasonrsadler": "Linter didn't catch that one. I went back too far on the squash. @diracdeltas Is this back to normal with the right changes?. @mrose17, during our coding session, we created hasFunds but the linter picked it up as unused. My assumption was the notification should be shown based on the original criteria and also (added above) if the user has actual funds in the wallet. Can you confirm this? Thanks.. Agree. But something else is appending the trailing '/' at the end of the url during normal browsing.\nExample: using latest release type in brianbondy.com and press enter. The trailing '/' gets appended at the end.\nAs for the tests, will fix.\nLet me know what your opinion is regarding the current navigation behavior.. '....will be replace the current...' should be '.....will replace the current....'. @diracdeltas That works well. Thanks!. I wondered about that myself. @mrose17 or @NejcZdovc would have to reply on that but I can move them.. correct. Once true, it's true forever. Done.. @diracdeltas I'm going to go with a combo and also to make sure another protocol isn't passed in.\nif (!url.startsWith('http://') && !url.startsWith('https://') && !url.includes('://')) { url = `https://${url}` }. Yes thank you.. Which I guess is why the function passed.\nThanks for catching.. That may be the case. The number of refactors could have made it obsolete. I'll double check my numbers to make sure. Thanks. Done. The problem I was running into is that sometimes the url is formatted inconsistently. Sometimes, there's a '/' at the end, sometimes it's left off which makes it difficult to get an exact match on the key.\nI agree ['ledger', 'locations'] will get too big to pass back and forth. I'll need to rethink this.. This got me thinking: From everything I've seen in this so far. URLs already have the protocol resolved before they get to this point. @diracdeltas or @NejcZdovc, do you know of any exceptions where URLs don't have a protocol already before getting to the publisherToggle renderer? If not, then I might have been overthinking shortenUrlToDomainTLD logic. Done. Done. No. It either should have been removed or I need to get with you as to why it errors out at that point?\n. Good catch. . Requested changes made. This will for testing purposes. It will only run with LEDGER_NOTIFICATION=true npm start so that QA can see the seconds that pass. This is a wip - sorry. This is a wip - sorry. Done. WIP. Did run lint pick that up for you or did you just happen to see it. No. Are you sure you want to put this under verbose? It would be nice if QA saw just the time passed rather than filter through all the other messages. Also, when run in the future, you'll get the time thrown out to the console every 5 seconds. . same as above. No. It's not.. should this be state.setIn([....], !status) or will it always be false on setRecoveryStatus?. Check for client.state != null. To prevent having to call .bind from each usage (at the time, anticipated future use).. No. that's a leftover with no cleanup. Removing childSelector. Yes, I saw that on the styling guidelines after the fact. Done.. Done.. Agree. Done.. Agree. Done.. This one I might need your help understanding.. Thanks. fixed.. You got it. From a reusability factor, is it possible another component could call into this without init'ing sites first?. Do we need tests on these two?. Were we deprecating the use of className cx()? It's implied from the styling guidelines but I don't know for sure.. can we just use [css(styles.enabledContent__overlay, styles.enabledContent__captcha)]?. These don't look like they're used here. They're defined in the captcha component as well.. ....this ^. I meant:\nis styles.enabledContent__overlay and the enabledContent__overlay below it reference the same styling? If so, then just:\nclassName={css(styles.enabledContent__overlay, styles.enabledContent__captcha)}. I think we should make sure the file is deleted successfully before disabling payments.. Can we move this conditional to a separate function so it's clearer what's happening?. Done. Needed for mock callback:\nhttps://github.com/brave-intl/bat-ledger-spec/pull/14/files#diff-1cd62db996c478976cbe58e450dfcf9dR240\nI never explicitly get the client in js/contributions. If we're getting it before this, let me know and I'll update. gets 'em every time.. I can define it above but above this is preferences with a lot getting set in renderer state. I'd prefer to leave this one 'as is' (at least in this file).. I can have it baked at this point.. Done.. Done.. Done.. Gone.. It's a placeholder. Waiting for @bradleyrichter or someone from UI to say the text in place of button is ok. If it's not then we'll keep the button during reconcile and this would be called instead.. I'll review. In my runs, results was being populated into err and causing failures. Not confirmed. I'll review and let you know.. Reworked this to check if the contribution is done. That solution will need to be manually set by the caller to reset for next contribution. We have to have a way to break out to complete the test.. @ryanml It was told to me in the past that the settings object was for settings exposed in preferences (I know there's things in there that don't adhere to that but I think we want to avoid adding more non-user-exposed items to settings). \n@NejcZdovc done.. We're mocking out/recoding the appAction calls so that test flow doesn't get lost in the reducer.. This is for holding the available locales array. The problem is, when user clears ads history, the entire userModel object is cleared and we lose the locales.. Under 'Clear Browsing Data', should 'Brave ads' not be 'Brave Ads'?. Yes:\nhttps://github.com/brave/browser-laptop/blob/usermodel/app/extensions/brave/locales/en-US/preferences.properties#L75. What would you propose? Currently on clear, userModel is set to an empty Map. My thinking was maintainability. We could use userModel for clearable items and userModelOptions for retained items. Otherwise, we'll need to make sure any future preservable items are accounted for.. Correct, state is not used here. Done.. Your call @NejcZdovc . Done.. I think the intention with the 'P' members (verifiedP, etc) was to be more descriptive in the naming. I think we should use descriptive names for this. wdyt? (Applies to all newly created 'P' members below.. Need to wrap JSON.parse in a try/catch.. Is it possible to hose state here? (Does it need an appAction). Disregard. Jumped the gun on that.. Oh! Not a nit for me. Thanks.. I think we should move this call to the APP_INITIALIZED hook. in here:\nhttps://github.com/brave/browser-laptop/blob/master/app/browser/reducers/ledgerReducer.js#L613\nThis gets called after most of the browser startup work and ledger.initialize and could save us a little bit on startup :) wdyt?. I know I'm late to the party, but for future ref: \nIs state getting updated at all in updatePublishers?. Are these done?. ",
    "NHDaly": "This might also prevent closing through the File menu. I don't think that's desired.\nis there a way to see if this was invoked via the keyboard accelerator or via the file menu?. ",
    "hferreiro": "This repo should be moved to brave/. ",
    "Ordissimo": "effectively,\nThank you. ",
    "riastradh-brave": "Suggestion: Just use a single number for this, e.g. 42 as in tor-3.2.10brave42, representing the number of the build of this tor executable.  I don't think it matters which version of Brave it is intended for (we might conceivably reuse it for several versions), but we may need to change it if we make a new build of tor with a different set of configuration options, for instance.. I tried\n\nnpm install\nrm -rf node_modules && npm install\nrm -rf brave-linux-x64 && rm -rf node_modules && npm install\n\nand none of them left a tor executable in app/extensions/bin, or a file named tor anywhere in the directory tree (except for .git/.../refs/.../feature/tor which is obviously something else!).. pebcak. Test equivalent decimal representations of IP addresses?\nNo harm if we say that 127.1 and 127.0.0.1, or 1.2.3.4 and 001.002.003.004, are distinct, but we should be explicitly intentional about it.. Test v4-mapped IPv6 addresses vs equivalent IPv4 addresses?. Just to be clear: This is supposed to be the complement of an equivalence relation now, yes?  I.e., its complement is supposed to be transitive, reflexive, and symmetric?  Can this be noted in the comment?. done in 453e327b099187651abd294ab409517431991378. Callbacks make forEach a little tricky.  If this should be done with mkdirSync, I guess that's OK, but I figured it would be better to avoid that.  (I'm not sure this is necessary, but the ordering of directory creation in muon vs browser-laptop is not obvious, so I figured it would be safer to keep this logic than delete it.). done in 428280759b7f9fe963d3bea7a9b7f169311ecf44. Will do.. done in 8f532a9a58155a82d65050fce4d647193d9dc894. How does that help to do multiple ones in a loop?  I guess I could replace the whole thing by a single mkdirp for the deepest subdirectory, but I didn't want to embed the assumption that there is a single deepest subdirectory in that function.. Works for me: downloads, hash verifies, launches successfully, passes npm run unittest in browser-laptop.. Maybe this could be done in two separate commits to make the audit trail clearer -- one commit with no functional change to refactor, and another commit with the one-line functional change?. So that's why there's been so much squashing around here that makes my historian skin crawl!. Just FYI: An error here means not that there was a problem opening a circuit, but that there was a problem in subscribing to the circuit establishment notifications.  (It's rather unlikely that this would happen.). Why does this logic run only if we have flash enabled and tor enabled?. Maybe I don't understand what chrome.contentSettings.torEnabled means?. Got it.  Maybe we can have a function that returns a boolean with a clearer name?. FYI, the bootstrapping doesn't restart if tor decides it's offline and then back online -- the bootstrapping happens only when we initially launch tor.  I don't know if this makes a difference here, but if, e.g., you rely on a notification that the bootstrapping is up to 100%, that won't happen in this case.. Won't this leave the timeout to fire and call onTorInitError a second time?  Maybe that's harmless, but it seems like three states -- null, false, true -- are unnecessary here, unless I'm missing something.. https://github.com/brave/browser-laptop/pull/14507/commits/e88950c38d07843f245b35ab48e0ed32cae3cd4f. I arranged the caller of this to also do onTorError(null).  Is that good enough?. 81f8a9b0f. c15ca4b15. 5bdfbf0ec. 7da84c8f6. Ugh, thanks.  Where is this API documented?. UGHHH WHY. done. @diracdeltas It is because upstream bat-* packages were updated to use random-lib 3.0.0.  I filed PRs to remove those dependencies.  Once they are merged, I expect it will go away.  We can hold off until those PRs are merged and double-check if you like:\nhttps://github.com/brave-intl/bat-client/pull/92\nhttps://github.com/brave-intl/bat-ledger-spec/pull/27\nhttps://github.com/brave-intl/bat-publisher/pull/41. done in 2dae1d575e40b916f544e656c0b1d91a3fda9156. ",
    "rvagg": "fixed and force pushed. ",
    "mbacchi": "I haven't run this myself, but this assumes the user is manually executing this script. Is that the only way its done today?. ",
    "RyanJarv": "I thought just the upload was automated, not publishing?. Didn't see anything running it in jenkins at least, is it being run somewhere else?\nMy thinking is if we do automate the publish part it will at least be gated.. Sorry for the delay, got that removed.. Thinking here was if the file exists something went wrong (network or otherwise) and we would want manual intervention.\nMaybe makes sense to add a retry to the upload?. Yep, thanks. Fixed this. @bsclifton added some retry logic if you have a sec to take a look at this again. ",
    "catilac": "oh, good catch! thanks. i'll make the changes now.. ",
    "joelwass": "After the recent master UI updates, this condition had to be added so that if the suggestion simply included the url, it would only fill the url bar when a suggestion index is selected.\nThis can be avoided if #14433 ends up getting merged, since the first suggestion would always be what the user is typing in.. what's the intended purpose of this line and line 276? that seems to cause the issue i mentioned in the discussion . yea, still broken off of 0.23.x-c69 branch. yes i rm rf'd node modules on the 0.23.x-c69 branch and the issue still occurs. Also the issue i mentioned still occurs in https://github.com/brave/browser-laptop/releases/tag/v0.23.202beta\nwould you like me to try to fix?. ",
    "Slava": "what about other tools like Flow?. the subsequent commit removes both (as well as references to flow plugins). I don't understand why this is needed. Maybe you can remember the context of this commit? https://github.com/brave/browser-laptop/pull/14734/commits/c375ba35c4192da94e2c3dc1aa9f9958a9ce1044. I think I added it because whatever the Meteor app compiles into uses new Function. I can look into how tweaking the minifier and try to get something that doesn't use eval.. Ok after spending some time on this I tracked it down to this \nhttps://github.com/facebook/regenerator/issues/336. It is an unsafe line in regenerator that used to compile web3js package for Meteor. . hmm maybe not exactly this, but something very similar that tries to get the value of global. would setting the following options be sufficient?\n--rpccorsdomain value  Comma separated list of domains from which to accept cross origin requests (browser enforced)\n  --rpcvhosts value      Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (default: \"localhost\")\nWe should set these after we get more concrete metamask integration?. \ud83d\udc4d . Bumping it to 14, on my macbook it take 1.320s.. is the extra pair of parens meaningful? Seems like it wouldn't change anything to remove them and the line would be read the same:\n\nget processId or if it doesn't exist gethProcessId or if geth was running get geth pid. \n",
    "humphd": "@diracdeltas OK, I've added this in https://github.com/brave/browser-laptop/pull/13587/commits/0224cd6595b5f8df80bf5018da0c87c495f9d7e9.. "
}