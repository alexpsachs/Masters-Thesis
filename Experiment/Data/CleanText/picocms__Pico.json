{
    "quma": "I have the same problem ?\n. ",
    "jasonrobb": "What are your symptoms? If you can give more specifics about what you're seeing, that would help. Thanks!\n. (Pardon my belated reply here.) Spiffin, is there any chance you could share your repository?\n. There are two ways I can think of off the top of my head.\n1. You could hard-code your navigation onto the page. Go to /themes/default/index.html and start writing your HTML right before the {{ content }} tag on line 20 (I think).\n2. You could put your navigation in a separate file called nav.html, save it in the /themes/default/ folder.\nThen, in /themes/default/index.html on line 19 (after the body tag and before the {{ content }} tag) write: {% include 'nav.html' %}.\nIf you want to make your navigation dynamic,  you'll have to read the Twig manual to figure that out: http://twig.sensiolabs.org/documentation\nGood luck!\n. ",
    "spiffin": "Hello Jason\nI have a basic installation here: http://pico.spiffin.net - using the default htaccess file.\nhttp://pico.spiffin.net/sub - throws a 404\nhttp://pico.spiffin.net/sub/page - throws a 404\nhttp://pico.spiffin.net/content/sub/index.txt - displays the text file\nIf I throw a test file (test.html) into the sub directory:\nhttp://pico.spiffin.net/sub/test.html - throws a 404\nhttp://pico.spiffin.net/content/sub/test.html - displays the html file\n\nSo .. either htaccess isn't rewriting properly .. or something else?\nBTW the above is running on Apache 2 & PHP 5.3\n. Works for me .. thanks purplefish32.\n. ",
    "lukemetz": "Hello,\nI was having the same problem.\nAdding \"Options +FollowSymLinks\" to my .htaccess file seemed to do the trick.\n. ",
    "purplefish32": "I am having the same issues as @spiffin with a straight git clone of the repo\nI tried adding \"Options +FollowSymLinks\" to my .htaccess file, setting a base url (http://localhost/user/Pico/), setting all files to 777, still no luck \nI am running a Debian box\n. Found the cluprit : \nif($url) $file = strtolower(CONTENT_DIR . $url);\nshould be : \nif($url) $file = CONTENT_DIR . $url;\nOn linux boxes urls are case sensitive so /Pico != /pico\nPlus if you just do a stupid git clone the default folder starts with an uppercase letter\nWill do a pull request\n. ",
    "the-golem": "Forgive me if posting on a closed bug is improper. I'm having the same issues that spiffin was having. I've applied the multicase fix proposed by purplefish32, and added +FollowSymLinks to my .htaccess file (as suggested by lukemetz), but neither have solved my issue. Like spiffin, I can navigate to the text files in a similar fashion. \nI have also confirmed through phpinfo() that mod_rewrite is indeed enabled.\nI don't know if that would have any impact on anything, but I should probably point out that this is installed on my local Scientific Linux 6 server, which is behind a cable \"modem\", and I've set up a dynamic dns subdomain through freedns.afraid.org in order to access the server remotely.\nThe site is available here: http://golem.pwnz.org/pico\nThanks.\n. @johnko Thank you, that did it.I didn't even think about checking that option. Now I'll know better for next time.\n. ",
    "johnko": "@the-golem If you're running Apache httpd, did you set AllowOverride All in your host/virtual host configuration? You may need to tweak the AllowOverride if you don't want to let .htaccess files override other parameters.\n. @the-golem No problem :)\nFWIW, I had the same issue and figured it out, but thought it was just me so I never posted about it :p\n. @yckart @mathroc \nI like the snippet idea, I may do that.\nUse case:\n- large legal footer\n- text heavy content in sidebars\n. So let's have some sort of plan before I start coding.\nWould it make sense to add another metaheader (like when you did Theme ) but this time for Snippet: keyname content/path/file.snip?\nThen the flow somewhere after calling read_file_meta parsing would be to grab any file and allow it to pass through to twig (theming) as {{ snippet.keyname }}??\n. @ghuger Looks pretty good to me, I might do a pull request into my fork after I get around to testing this!\nThanks a bunch!\n. ",
    "vephinx": "@the-golem I'm still running into this issue. Have a look here: http://vexis.hostt.net/pico/\n. ",
    "everslick": "insert something like this in your theme index.html:\n```\n   \n\n{{ site_title }}\n     {% set delim = config.menu_delimiter|default('|') %}\n     {% set menu_headers = [] %}\n\n     {% for page in pages %}\n        {% set title = page.title|split(delim) %}\n        {% if (title|length == 2) and (title[0] not in menu_headers) %}\n           {% set menu_headers = menu_headers|merge([title[0]]) %}\n        {% endif %}\n     {% endfor %}\n\n     <div class=\"right\">\n        <ul id=\"TopMenu\">\n           {% for menu_header in menu_headers %}\n              <li>\n                 <a href=\"#\">{{ menu_header }}</a>\n                 <ul class=\"noJS\">\n                    {% for page in pages %}\n                       {% set menu_item = page.title|split(delim) %}\n                       {% if (menu_item|length == 2) and (menu_item[0] == menu_header) %}\n                          <li><a href=\"{{ page.url }}\">{{ menu_item[1] }}</a></li>\n                       {% endif %}\n                    {% endfor %}\n                 </ul>\n              </li>\n           {% endfor %}\n\n           {% for page in pages %}\n              {% set menu_item = page.title|split(delim) %}\n              {% if (menu_item|length == 1) and (page.title != '') %}\n                 <li><a href=\"{{ page.url }}\">{{ page.title }}</a></li>\n              {% endif %}\n           {% endfor %}\n        </ul>\n     </div>\n\n  </div>\n\n\n```\nNow you can prefix the Title: in your pages with a menu i.e. Nice Menu|Original Tile for Page\nDefault delimiter is \"|\", can be overridden in config.php\nI used this here: 1541.org\nbest regards...\nclemens\n. ",
    "gilbitron": "Not sure this is something that will be overly popular so going not going to merge it.\n. Thanks for the contribution George. I'm not going to merge this as it's something I want to spend time on implementing properly but this is a good base to work from.\n. No it doesn't I'm afraid. Everything will respond with a 200 code. Although we have just fixed the 404 to respond with a 404 header.\n. Are you sure this is a bug? If you see http://gilbert.pellegrom.me/php-month-number-to-month-name-the-easy-way it shows the \"next page\" link without a prev_page.\n. Could be a PHP version issue (I use 5.4.4). I'll dig into this a bit more and see if I can recreate it.\n. I think dropping the vendor folder would be an issue for some folks, as they might not download the release file, they might simply just download the repo. So for the sake of \"ease of install\" I think we should keep it just now.\nMoving closing PHP tags to another pull request is a good idea.\n. Thanks for putting this together. I've merged the separate pull requests that are included in this proposal so not going to merge this.\n. Thanks for putting this together but going to go through docs and update myself.\n. I appreciate all of this work guys, but pull requests should be limited to one feature per request. This is great as a fork but impossible to consume in one pull.\n. Pull requests should be limited to one feature per request. This is great as a fork, but to much for a single pull request.\n. I'm about to push v1.7. I suggest you wait till I've done that, then see what features you can re-submit as individual pull requests.\n. Manually merged this change.\n. Added \"Template\" integration in v0.8.\n. Hi guys. Apologies for my lack of activity with Pico. I have so much other stuff to do that Pico is not a priority at the moment. I would be happy to appoint some maintainers if people are looking to help maintain the project?\nAs for the general direction of Pico, I want to keep it lean, simple and fast. There are merge requests for all kinds of things but I see most of these as \"customisations\", which are fine for the sites you may be building, but they are not global functionality which should be included in Pico core. \nPart of the idea behind Pico is that it is a base to build on top of. So customisations are actually exactly what you should do with Pico but I don't want to bloat the core with features that not everyone will use. So if you make a customisation that you think others will benefit from then make it into a plugin.\nAs for things that should change in the core, improving the navigation structure is one of them. Also adding some kind of testing structure would be great.\n. Manually merged this change.\n. @shoostar Good idea. I'll make a page in the wiki for feature requests and I'll vet what goes in there.\n@NeoBlack I would appreciate any help your company would be willing to give.\n. See https://github.com/gilbitron/Pico/wiki/Feature-Requests\n. It should only be called once per page in get_pages(). We need it to convert the content to HTML for the excerpt.\n. Not including the closing PHP tag is deliberate and helps prevent the \"white screen of death\".\n. I sold Pico to https://github.com/picocms a while ago. I am no longer involved in the project.\n. Sounds like a good plan. I was disappointed when I sold Pico that there has been no development on the project.\n. I've decided to make a new effort: https://github.com/BaunCMS/Baun\n. Unfortunately you can't use htaccess to redirect from the root to the public directory (as far as I'm aware). Baun is written from the ground up so it has a much nicer, more extendable architecture compared to Pico. There is no plugin functionality at the moment, but this is something I plan to add in the future.\n. I released Baun v1.2.0 the other day and it now comes with an auto-installer script for those who don't have SSH access http://bauncms.com/blog/plugins-auto-installer-and-more\n. Just to fill in the story about why Pico was created in the first place: I wanted something I could throw up on a server that would turn markdown files into web pages. I was frustrated with the complexity of existing CMSs (e.g. WordPress) and while they are great in many situations, it was just too much hassle for a small personal blog. At the time I was inspired by projects like Dropplets but wanted something that was stupidly simple. So I made it. PHP, Markdown and Twig were just technologies I was familiar with at the time, which made creating Pico simple and quick.\nAfter Pico became popular I didn't have the time to maintain it so I sold it. I was a bit disappointed at first that the new owners didn't seem to do anything with it, but it's nice to see folks like @PhrozenByte moving things forward again.\n. Congrats on the release of Pico 2.0.0 guys \ud83c\udf89. ",
    "yckart": "@mathroc  Does not work... I'll redirected to the prompt after setting password/username. Any ideas?\n. > it does not authenticate you?\nYes/No, it shows the login dialog again.\nHas nothing changed! I think there's another problem... It seems so, that pico can't find the requested file. for example, if i try to visit the sub-page, I get allways an 404 error-code. Have tested it on my local machine and even on an online apache server...\nUpdate\nI've downloaded your repo, but get even the same error...\n. @mathroc \narray(33) {\n  [\"REDIRECT_STATUS\"]=>\n  string(3) \"200\"\n  [\"HTTP_HOST\"]=>\n  string(14) \"localhost:1337\"\n  [\"HTTP_CONNECTION\"]=>\n  string(10) \"keep-alive\"\n  [\"HTTP_USER_AGENT\"]=>\n  string(108) \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11\"\n  [\"HTTP_ACCEPT\"]=>\n  string(63) \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"\n  [\"HTTP_ACCEPT_ENCODING\"]=>\n  string(17) \"gzip,deflate,sdch\"\n  [\"HTTP_ACCEPT_LANGUAGE\"]=>\n  string(35) \"de-DE,de;q=0.8,en-US;q=0.6,en;q=0.4\"\n  [\"HTTP_ACCEPT_CHARSET\"]=>\n  string(30) \"ISO-8859-1,utf-8;q=0.7,*;q=0.3\"\n  [\"HTTP_COOKIE\"]=>\n  string(36) \"PHPSESSID=evisapv7vdfphcuksikgu567v7\"\n  [\"PATH\"]=>\n  string(480) \"C:\\Program Files\\Common Files\\Microsoft Shared\\Windows Live;C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\Windows Live;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\nodejs\\;C:\\Program Files (x86)\\QuickTime\\QTSystem\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\MinGW\\bin;C:\\MinGW\\MSYS\\1.0\\local\\bin;C:\\MinGW\\MSYS\\1.0\\bin;C:\\Python32\\python.exe;C:\\Ruby193\\bin;C:\\Users\\yckart\\AppData\\Roaming\\npm\\\"\n  [\"SystemRoot\"]=>\n  string(10) \"C:\\Windows\"\n  [\"COMSPEC\"]=>\n  string(27) \"C:\\Windows\\system32\\cmd.exe\"\n  [\"PATHEXT\"]=>\n  string(62) \".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.RB;.RBW\"\n  [\"WINDIR\"]=>\n  string(10) \"C:\\Windows\"\n  [\"SERVER_SIGNATURE\"]=>\n  string(0) \"\"\n  [\"SERVER_SOFTWARE\"]=>\n  string(31) \"Apache/2.2.21 (Win32) PHP/5.3.9\"\n  [\"SERVER_NAME\"]=>\n  string(9) \"localhost\"\n  [\"SERVER_ADDR\"]=>\n  string(3) \"::1\"\n  [\"SERVER_PORT\"]=>\n  string(4) \"1337\"\n  [\"REMOTE_ADDR\"]=>\n  string(3) \"::1\"\n  [\"DOCUMENT_ROOT\"]=>\n  string(17) \"D:/Webentwicklung\"\n  [\"SERVER_ADMIN\"]=>\n  string(14) \"mail@localhost\"\n  [\"SCRIPT_FILENAME\"]=>\n  string(47) \"D:/Webentwicklung/Kunden/NMK-Bau/pico/index.php\"\n  [\"REMOTE_PORT\"]=>\n  string(5) \"61372\"\n  [\"REDIRECT_URL\"]=>\n  string(27) \"/Kunden/NMK-Bau/pico/.draft\"\n  [\"GATEWAY_INTERFACE\"]=>\n  string(7) \"CGI/1.1\"\n  [\"SERVER_PROTOCOL\"]=>\n  string(8) \"HTTP/1.1\"\n  [\"REQUEST_METHOD\"]=>\n  string(3) \"GET\"\n  [\"QUERY_STRING\"]=>\n  string(0) \"\"\n  [\"REQUEST_URI\"]=>\n  string(27) \"/Kunden/NMK-Bau/pico/.draft\"\n  [\"SCRIPT_NAME\"]=>\n  string(30) \"/Kunden/NMK-Bau/pico/index.php\"\n  [\"PHP_SELF\"]=>\n  string(30) \"/Kunden/NMK-Bau/pico/index.php\"\n  [\"REQUEST_TIME\"]=>\n  int(1354708479)\n}\nbool(true)\n. @mathroc I've some large pages and want to keep them clean. So I thought why not creating a sub-folder in each page and call it snippets for example, so i can then get them via shortcode. Or even better combined with your draft-approach as snippet extension ;-)\n. @johnko I would be glad! :-)\n. @ghuger Yeah, nice work! I'll took myself deeper in it when I'm not so busy. But looks pretty good so far.\n. ",
    "mathroc": "@yckart when you set draft_auth on the config file, accessing the page cause the authentication dialog to show up but when you enter the username and password it does not authenticate you?\nin lib/pico.php, before the line : \n    return $_SERVER['HTTP_AUTHORIZATION'] === 'Basic '.base64_encode($credentials);\nadd this one:\n    var_dump($_SERVER['HTTP_AUTHORIZATION']); var_dump('Basic '.base64_encode($credentials)); exit;\nthe next time you try to autenticate, it will print 2 string, tell me if they are the same, they should be if you enter the correct username and password and if $_SERVER['HTTP_AUTHORIZATION'] report correctly the authorization request header\n. ok, can you, \n1. load a page asking for authentification in your browser\n2. add \n    var_dump($_SERVER); \n    var_dump(!isset($_SERVER['HTTP_AUTHORIZATION'])); \n    exit;\non line 63, before \n    if(!isset($_SERVER['HTTP_AUTHORIZATION']))\n3. try to authenticate\nit should print an array and a boolean, can you tell me what you got?\nthe array should be contains a string at the 'HTTP_AUTHORIZATION' that look like \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\"\nif it's empty or null maybe there are some configuration where HTTP_AUTHORIZATION is not available directly but might be if PHP_AUTH_USER and PHP_AUTH_PW are into the array. \nPlease post here what you got and I'll try to fix it (remove private info before posting)\n. that's weird, is that what was shown in response to you after trying to authenticate? because there is neither HTTP_AUTHORIZATION nor PHP_AUTH_USER. \nif this was shown after you tried to authenticate, maybe you have a configuration issue either in PHP ou in Apache\n. When you suggesting {{ content.page }} you're thinking to use it in the template? why would you do that?\nAnyway you can't do that from the template and neither from your markdown-ed content\n. @yckart yeah I get the idea when it's in markdown. In the template I think there is something similar that' already possible : http://twig.sensiolabs.org/doc/templates.html#including-other-templates \nbut that way you can't include markdown content (if you do it won't be transformed into html). That should be enough for the content that is present in every page.\n@yckart @johnko anyway the the .snippet thing could be useful for complex pages or for content that you might want to reuse. And I think using .snippet would be better than be able to include any content. That's because you might not wish the snippet content to be discoverable alone.\n. @johnko I'm not sure, I was thinking about using snippet into the markdown content, something like:\n```\nmy title\n[include:chapter1]\n[include:chapter2]\n[include:chapter3]\n```\nwhich would replace [include:chapter1] by chapter1.snippet file content before transforming markodwn into html.\nif you want to use snippet in the template, it depends on what you're trying to achieve, I can think of 2 features:\nfirst, your template have emplacement for potential additional content (eg: left_column, right_column, header, etc.) and this content is not always the same (if it's always the same you can just use http://twig.sensiolabs.org/doc/templates.html#including-other-templates ). In that case, yes you could have an additional header to assign an additional content, eg : \n/**\n * snippets: left_column=column2,header=main_header\n**/\nalternative syntax (require more change in the function parsing header metadata):\n/**\n * snippets.left_column : column2\n * snippet.header : main_header\n**/\nthen it's about as you said, the only difference I introduced is that you can have multiple snippets\nthe second feature would be to write part of the template in markdown, that would be solved as a Twig tag extension : http://twig.sensiolabs.org/doc/advanced.html#tags with a snippet tag you could do, in the your template:\n<html>\n <head>\n  <title>My title</title>\n </head>\n <body>\n <div id=\"left_column\">{{ snippet left_column }}</div>\n <div id=\"right_column\">{{ snippet right_column }}</div>\n <div id=\"main\">....</div>\n </body>\n</html>\nnot sure what you and @yckart are interested in\n. ",
    "cosmonaut": "Ran into this bug and went through debugging before noticing that there's a pull request that solves it just sitting here...\n. ",
    "ghuger": "I added a snippet tag so that I could have a global sidebar that is easy to update. I tried to base the solution around the excellent suggestions in this thread - it works like the second example that @mathroc posted above.\nI would really appreciate any feedback!\n. ",
    "clawfire": "there is no really standard for Markdown formated text extension. Most of people use .md but there's many of extension who say \"hey, it's a markdown formated document\"\n. ",
    "loklaan": "@clawfire Thanks, this pretty much resolves my question.\nI looked further into the issue on the markdown mailing list & stack exchange and it seems clear to me now that markdown was not supposed to be a file format, but instead a meta formatting inside text files.\nI still think I'll use .md instead, though.\n. ",
    "znk": "To use html blocks in snippets, dont forget to add markdown=1 like:\n<div class=\"navlist\" markdown=1>\n``` html\n\n\nGoogle\nDLFP\n\n\n```\n. ",
    "ibes": "Yes, the links rock on you site (I like the styling).\nBut I can rebuild the issue with every combination of order and order_by\nMy PHP version: 5.4.6 - might that be a reason, why it doesn't work -> different error management?!\n. ",
    "napcae": "You can customize this in the config.php. See the documentation for more information.\n. Did you look up your server log? I think either your .htaccess or apache is misconfigured. Please provide more information for further assistance.\n. This is a new error. One had access to the frontpage at least one day ago.\n. Just link it from the template. So yes, it is possible.\n. ",
    "mauris": "Agreed with @napcae. Maybe @gilbitron can close this issue?\n. ",
    "rubenvincenten": "36 fixes this.\n. ",
    "chanchal1987": "@gilbitron Please close this issue. It is already resolved.\n. There must have to create one option to enable and disable it also.\n. I am getting while opening this URL.\n```\nWarning: parse_url() expects exactly 1 parameter, 2 given in /homez.318/netplume/www/pico-cms/libs/functions.php on line 404  \nFatal error: Call to undefined function: json_decode() in /homez.318/netplume/www/pico-cms/libs/functions.php on line 55\n```\n. ",
    "bbrks": "What HTTP server are you running? Apache?\n. Please see the Pico Pagination plugin.\n. You must've read my mind. I was going to create a page on the wiki for Apache, Lighttpd and nginx rewrites after I got in from work tonight.\n. ",
    "tylershuster": "Yeah. http://tylershuster.com/ If you want to see\n. Problem is most likely with shared hosting. Time to reverse bad decisions.\n. ",
    "nandeeshmp": "It clearly says \"You don't have permission to access / on this server.\" Please correct the file and directory permissions. \n. No need to clear cache. If you have correctly set the site title in config.php, then it should work. \n. ",
    "Tulpenzwiebel": "Sorry for opening a closed issue again, but I don't understand how you fixed it, because I have the same issue.\nEDIT: Adding Error-Log\n[Tue Sep 03 22:04:51 2013] [error] [client w.x.y.z] Request exceeded the limit of 10 internal redirects due to probable configuration error. Use 'LimitInternalRecursion' to increase the limit if necessary. Use 'LogLevel debug' to get a backtrace., referer: https://domain.tld/\nSecond Edit:\nClosed for me, thanks to my webhoster I got the answer. I had to add RewriteBase / to the .htaccess\n. ",
    "stephenkeable-allies": "I found that tweaking the .htaccess and adding the following after the RewriteEngine On line fixed my issue on shared hosting:-\nRewriteBase /\nRewriteRule ^index\\.php$ - [L]\n. ",
    "q2apro": "@stephenkeable-allies Thanks for the solution. Fixed it for me too!\nFor documentation, my error message said: \nPHP Warning:  PHP Startup: zip: Unable to initialize module\nModule compiled with module API=20060613\nPHP    compiled with module API=20100525\nThese options need to match\n in Unknown on line 0\n. ",
    "pbloem": "Had this problem, and I couldn't get access to the error logs. For the people coming here from google, I found the problem by commenting out all the lines in the .htaccess. This removed the 500 error, and showed the homepage (but not other pages, obvs).\nI then removed the comments line by line, and found that the offending line was \nRewriteRule ^(config|content|lib|vendor)/.* - [R=404,L]\nRemoving the \"=404\" part worked. I suppose my host may have an outdated version of apache...\n. ",
    "davidsivocha": "Sounds like a stupid one, but did you make sure you had the Site Title in an un-commented portion of the config.php file?\n. ",
    "jfoucher": "Good catch, fixed\n. ",
    "molhambakir": "is it solved?!\n. ",
    "Frodox": "I think, sure  :)\n. @p-meier  Thank you very much! It's really helpful :)\n. Or highlight.js\n. @NeoBlack  page.excerpt is useful, if use Pico for blogging. So I can have a list of posts and brief text of them on main(for example) page.\nYes, original exerpt can cut at mid-words and doesn't show html tags(it strips them), so I just write pico_smart_cut plugin for that :D will be in my repo soon\nBut I agree with 97 Is there a posible way to improve Pico? I love it :)\n. @erufenix , There is no imbedded syntax-highlighting in the PicoCMS ...\nBut.. it can be done quite easily. \nFirst of all, you should mark your program code as code in .md files.\nYou could use backtricks \"\", or tab (4 spaces) before code (check [official markdown guide](http://daringfireball.net/projects/markdown/syntax) and [php-markdown](http://michelf.ca/projects/php-markdown/concepts/)).\nThis will prodice output likeYour code.. here.and ` respectively. \nNow, you can use any dynamic code highlight JavaScript library. For example, Syntax Highlighter, highlight.js and so on.\n. @pjrvs it's pretty simple: {{ prev_page }}, as {{ next_page }}, just has all meta-info as in {{ page.* }} available. \n{{ page.title }}\n{{ page.url }}\n{{ page.author }}\n{{ page.date }}\n{{ page.date_formatted }}\n{{ page.content }}\n{{ page.excerpt }}\nSo, you need to add in your theme's index.html code like \n<p> rudimental test\n        prev title: {{ prev_page.title }}<br>\n        link: {{ prev_page.url }}<br>\n        by: {{ prev_page.author }}<br>\n        date: {{ prev_page.date_formatted }}<br>\n        </p>\nAlso, it's good to check, if nessesary metavalues exist, and if {{ prev_page / next_page }} exist at all.\nExample\n{% if next_page %}\n/// your stuff\n{% endif %}\n. --1\nNow, user can just clone repo and blog will work. \nBut after this commit -- it will not. Did you write an instruction, how to install composer, twig, php-markdown and how to get it all together working?\n. @dav-m85 \nNowadays I am totally agree with you :) But half year before (wow!) I think generally about newbies who needs some instruction and so on. Because copy-pasting a command from github's tutorial, it is not big deal. But required installation of some new software is just another level (level up) of experience =) I think good tutor will be fine enough.\n. @ChristianGiupponi  @Snip1 , Hey, Guys, did you read the manual? :)\n@gilbitron has imbeded this feature since.. Pico v0.8 (?).\nSo, to use different layout for different pages, follow the next steps:\n1. Create new page tempate in your theme folder. For example, except blog/themes/pure/index.html (in my case), create new one: blog/themes/pure/topics.html with nessesary layout.\n2. Change pages header like this:\n\n/*\nTitle: Welcome\nDescription: This description will go in the meta description tag\nAuthor: Joe Bloggs\nDate: 2013/01/01\nTemplate: topics\n*/\n\nLine Template: topics will make all magic -- if file themes/your_theme/topics.html exists, it will be the template for page; otherwise it will be themes/your_theme/index.html\n. Also, looks like you can do it with twig, like: create new page in new theme folder (folder-two.html), and create template with needed pages. How to filter pages? I think with if and string comparasion.\nThe most effective way, as I think, it's to create a plugin that would filter pages Before Render. But  if you have a lot of folders, it does not look very comfortable...\nI don't know what do you exactly want to achive, so I just make an assumption :)\n. @flashpixx I think, blank lines before and after a code block will fix an issue.\nAlso, you have defined a code block with indent, or smth else, right?\nWrong\nTest\n*\n!*.bak\nanother text\nCorrect:\n```\nTest\n*\n!*.bak\n\nmore text\n``\n. @acstll but you also change one important thing  -- $data might have undefined keys now.\nActually, if, for example,authornot setted (I never set it),$data['author']will lead to\"Notice: Undefined index: author in ... \"`, and it's true :)\nBut in old case, \n'author' => isset($page_meta['author']) ? $page_meta['author'] : '',\nit will be fine.\nI'm no sure, if it's good idea to change behavior in such way.\n. @camelCaseWeb @berthelemy Yup, you are right - by default Pico's parser remove all  comments block.\nMy solution looks like this: https://github.com/Jecomire/Pico/commit/b1367809881bc8075f775d21c00dabd63d7a2032\n// I allow to remove only first comment-block.\n(fork original repo, create branch, and change it as you want :) )\n. @berthelemy There is already opened bug #67 ... (I spied the solution there =) )\nI think, @gilbitron just haven't enough time to fix such things or he has another point of view on this one :)\n\nAny reason why this shouldn't be incorporated into the original Pico?\n\nActually, I think it's good idea too :) I'll try to open PR.\n. It's a good idea - to create a plugin anyway.\nActually, I don't know in which order do you want to sort originally, but\ncheckout this one https://github.com/ollierik/Pico-Placing , for example.\n. Did you think it's a good idea to change to php-markdown-extra-extended instead of php-Markdown-Extra? I think, it's a serious decision and should be done by @gilbitron .\nWhat is the pros, actually? :) \nFor myself, for example, I found nothing useful. phpMarkDownExtra is a pretty nice.\n\nAlso: some empty and thus useless index.html in some folders are removed (the CMS still works though)\n\nI thought the initial idea is obvious - to prevent directory listing :)\n\nExcerpts are also parsed in markdown, previously all HTML ...\n\nOu, Yup. So I  needed to write a plugin for myself =)\n. > I'm actually building my blog using Pico, but I've to change something in the core (which is commonly a bad idea, yes, but Pico is still young), so @gilbitron can decide whether to accept this or not.\nGood idea. But, as I see, @gilbitron  is a bit busy last time.. so be ready for that :)\n\nHmm, I don't have that problem?\n\nactually, there is .htaccess with lines:\n# Prevent file browsing\n Options -Indexes\nwhich do the same (and in more right way, as I think). So, yes, these index.html-s can be deleted now. I just do not agree with the phrase some empty and thus useless :)\n\nThat'd be cool indeed, \n\nOk, I'll create a github-repo.\n. > Hmm, I might add this PR to my TIL (Today I Learned). I'm not a pro when talking about this stuff, the blog is actually my first web-project. It's currently running on WordPress CMS, but I found out it was/is slightly painful to templatize while Pico is pretty straightforward and easy to maintain, so I hope I can contribute it back (now or later) :)\nSo am I :+1: \n. > @Stijn-Flipper \n\nThat'd be cool indeed\n\nOk, check out https://github.com/Jecomire/pico-custom-post-preview-plugin , please :)\n. @Akthalian i just cloned the last Pico version from github and it works fine on localhost. (on server as well)\nFirst of all, start to testing it on localhost ;) You will save your nerves.\nThen, try to delete all demo content, (sub folder), and create your own (in content folder). As i remembger, I had smth like that, and it helped me.\nIt look's like #109 and some other, but I cannot reproduce them\n. @crea1 it's not missing, it's a security one :)\nhttp://stackoverflow.com/questions/2263760/skipping-php-end-tag\n. @x421 You miss an important thing, as I think :)\na $headers array has next structure: (actually, try var_dump($headers) )\nit is a map/dictionary. \nSo, it has keys and values.\n- keys (i.e. $headers['key']) -- by this value ('key') you will access your value in template, like {{ page.key }}\n- values (i.e. $headers['key'] => 'MetaName' ) -- name of meta in .md file, whose value should be placed as value for  $headers['key']\nIt a bit tricky to explain.. So. If you have a meta info like\n/*\nTitle: ...\nDate: ...\nTags: github, develop, code, php\n...\n*/\nand want to add tags on your page in twig-template like {{ page.tags }},\nyou should add line:\n$headers['tags'] = 'Tags';\nPay attention to the case of letters.\n. First of all, yes, I also used adv_meta later, but you can do it by yourself, right.\n\nAnd as you may have read, I got access to that value, but only, if I call that page but not from outside of the page.\nThat only works for if I call the page (and the page has this meta key), I want to use it in a loop on the index for every file and echo it.\n\nHgm, did you try something like:\n``` php\n{% for page in pages %}\n    <h2><a href=\"{{ page.url }}\">{{ page.title }}</a></h2>\n    <div class=\"meta\">\n        {% if page.kurz %}<span class=\"...\"> {{ page.kurz }}</span>{% endif %}\n    </div>\n\n{% endfor %}\n```\nIt's loop over all pages, and inside it you can access all meta for every post.\nOr I didn't understand you..\n. What's the different from #128 ? :)\n. > Any idea on how to add custom meta tags as a plugin file \nTry to check out advanced meta plugin.\n. Did you set correct $config['base_url'] in config.php, like\n$config['base_url'] = 'www.domain.com/blog/)';\nAnd try to checkout apache-error/access logs. Looks like you get wrong urls (from domain.com , but not from domain.com/blog/).\nI also used blog in subfolder and in works fine (so, it can works :D).\n. And did you have /home2/zenimotc/public_html/domain/blog/content/404.md exactly?\nDo you have home2 with 2 on the end? =)\nAnd is there right permissions for web-server to access?\n. Ou, I thought you are using a localhost... (did you tried on localhost?)\nkhgm, actually, \n\nAs of Twig 1.x, the token parser broker sub-system is deprecated. The following class and interface will be removed in 2.0:\n- Twig_TokenParserBrokerInterface\n- Twig_TokenParserBroker\n\nsource\nI have no ideas :(\n. Yup, I also thought about it.. but if you just git clone it, you can't miss htaccess ... but all may be :)\nAlso, you see main page, but dont's see one post.. it's also looks like htaccess problem\n. Start from apache/php error/access logs\n. So, you are not alone :) #127 \n. Local fix, while Pull Request is still pending\nhttps://github.com/gilbitron/Pico/pull/141/files\n. Also, try to check out fork of Pico -- PhileCMS, may be you will like it :)\n. Why did you remove all Visibility-declarations, ie public, protected and so on?\n. ",
    "kvanlierop": "as a temporary 'solution' I've limited what the menu shows to only those things that don't have a date. Because I'm currently using this for a static site and not something with a blog or feed I can use the dates to 'hide' the pages from certain sections, including the menu. \nNot ideal but it's a quick fix.\n. Thanks, this looks like a workaround that could be implemented in many different ways. Given that I don't ever expect to be using Pico for a multi author site, this field could be used for a general custom field.\n. Turns out I'm an idiot.\nSorry.\n. This would be a valued addition allowing for something as basic as a Categories field to be added.\n. Am I correct in assuming that the plugin would only be needed if you intend\non having more than one value (ie. cat1, cat2, cat3) for a Category\nvariable?\n. Ah, that makes sense. Looks just like what I was looking for.\n. try {% if page.date == False %}\n. I've just tried this code and it works to display just the posts without a date:\n{% for page in pages if page.date == False%}\n{{ page.title }}\n{% endfor %}\n. From what I understand there isn't any support for Categories as it stands. I've tried to add additional variables into the header but can't get it working. As a work around, you could use the Author field as a categories field if that suits you.\nPerhaps those with the available skills (not me) could alter the base code to allow for user specified variables to be added to the header of each post/page. I know Kirby & Stacey have this option.\n. Interested in this too. I can't seem to figure out the syntax for the life of me.\n. ",
    "gourmetbreakfast": "What I did is limit it based on the \"Author\" name, since my site is single author. If I want something to show up in the  menu, I make the author \"Menu.\"\nFor some pages, I have submenus where the author is something like \"Recipes\" and in my template I have an alternate menu loop if meta.title == \"Recipes\"\n<header id=\"header\">\n    <div class=\"inner clearfix\">\n        <h1><a href=\"{{ base_url }}\">{{ site_title }}</a></h1>\n        <ul class=\"nav\">\n            {% for page in pages if page.author == \"Menu\" %}\n            <li><a href=\"{{ page.url }}\">{{ page.title }}</a></li>\n            {% endfor %}\n        </ul>\n    </div>\n</header>\n. You need to uncomment the line in PHP. I made the exact same mistake! I just copy and paste the line above where the comment starts \nThis is a mobile email.\nOn Jul 16, 2013, at 4:32 PM, vinceekg notifications@github.com wrote:\n\nI have created a new theme based on the default one in a directory \"viv\" and set the config.php like this:\n$config['theme'] = 'viv';\nBut it is still the default theme which is \"loaded\": the changes I made in the \"viv\" theme are not taken into account, but if I change anything in the default theme, it is taken into account.\nI am probably blind or stupidly simpler than Pico, but do you have any idea where it could come from?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "ghost": "The pagination plugin has all sorts of issues.\n. Hi @kvanlierop, thanks for the reply. I tried replacing your code with what I had listed in the nav:\n{% if not page.date %}\nbut unfortunately it's still not listing the pages in the nav. No links are listed at all.\n. My fault - I forgot to change the endif to an endfor. \nThanks again for the help!\n@gilbitron - the code that @kvanlierop wrote above worked for fixing my nav pages issue. Maybe it needs to be merged with the documentation page?\n. I know it's an old issue but just dropping in to say that I had this problem too. Manually grabbed the .htaccess from the repo and all works fine.\nEdit: forgot to say I downloaded from the Pico website rather than cloning the repo)\n. Thanks, I'm using this now. Would put a vote in to name it Template instead of Layout, if it matters. After all we are switching HTML files and index.html is already referred to as the template. (I know the docs give the example of adding meta.layout, but it seems suited to a different potential feature, for example applying CSS with  Layout: 2col => <body class=\"2col\">).\n. @pomaxa ok, I'm not familiar with twig before using Pico. I just meant the feature here is switching templates from index.html to another file in our theme folder. I think a common use case will be creating templates for things like Posts, Pages, Archives, right? Whether that template has a different layout or not is another matter. I don't mean to argue semantics but just my suggestion based on the existing terminology. Either way thanks for coding up this feature :)\n. There is no admin backend. Creating/editing/deleting content is just creating/editing/deleting text files. You can read more here: http://pico.dev7studios.com/docs.html#creating-content\n. I had to uncomment LoadModule php5_module libexec/apache2/libphp5.so from /etc/apache2/httpd.conf to get the php interpreter working. \nThis link pointed me in the right direction: http://coolestguidesontheplanet.com/get-apache-mysql-php-phpmyadmin-working-osx-10-9-mavericks/ \n. That only works for if I call the page (and the page has this meta key), I want to use it in a loop on the index for every file and echo it.\nEDIT:\nMaybe it wasn't clear what I want to do:\nI have files with the key-meta and for every file I want to echo that key on my start page. Similiar scenario:\nI have files with a blog-meta and want to echo them only on a blog sub-page\n. Thank @timseverien for the link, I'll look into it.\n@Jecomire I know for sure, that in every file there is a key named 'kurz' (Yes, lowercase, which is why I added \n$headers['kurz'] = 'kurz';\nand not \n$headers['kurz'] = 'Kurz';\nAnd as you may have read, I got access to that value, but only, if I call that page but not from outside of the page.\n. Yep - will do. Just trying to figure out what it is doing. Thanks!\nUpdate - that got it. Now on to the sub pages not resolving!\n. This fixes base_url for me on debian wheezy nginx/php5-fcgi\n. @gilbitron, Alright thanks for quick reply Gilbert.\n@mydalon, Since this project is open-source you can just fork it. Because this new person who bought it is not maintain it anymore.\nCan we have reply from the owner of this repo ? Thanks.\n. This works, thank you!\n. @PhrozenByte Thank you for the quick response and for letting me know. :blush:\n. ",
    "rewdy": "Yep, @kvanlierop. I've actually written a tagging (or categories, etc) plugin that will be available if/when this or a similar update is made. :)\n. @kvanlierop Well, yes and no. You would be able to list categories on individual entries with just the added behavior this commit creates (without an additional plugin). If you would want to make a page that lists all entries in a category, you would need added functionality. The plugin I've created gives the ability to link to a list of entries in a given category.\n. ",
    "jackkeller": "I'd be interested too, I'm running Nginx and my conversion is slightly off to where it's treating sub pages as downloads.\n. ",
    "brandonrobertz": "Did anyone get this working with nginx?\n. Got it ...\n```\nlocation / {\n        try_files $uri $uri/ @pico;\n}\nlocation @pico {\n        rewrite ^(.*)$ /index.php;\n}\n```\n. ",
    "kpavlov": "That issue is resolved: #47  , #63. Waiting for pull request to be accepted\n. Resolved. See #47 or #63 \n. Resolved. See #47 or #63 \n. ",
    "jeromegamez": "+1 for development versions, but this would undo the possibility to download a release, drop it in some folder and start creating content. If the download link on the website doesn't just refer to a release download here on github, this shouldn't be a problem, but I can't tell.\nPersonally, I would move the removal of closing PHP tags in an own pull request, because this is a different issue.\n. I just wanted to consider the possibility that Gilbert had the drop-in issue in mind. Otherwise I totally agree with you, @troyswanson.\n. ",
    "troyswanson": "I think the git repo should be for development use only. For people who want to use the system right out of the box without installing composer, include a .zip file that contains the dependencies already, and remove the composer.json file. I think it isn't too much to ask, though, for people to install composer so that they can build the system from scratch every time.\nAgreed about moving the PHP close tags to a different issue.\n. Fair enough. In fairness I don't know the spirit of this project or what the goals of the repo are. All I know is I personally dislike seeing vendor folders in repos that use composer ;)\n. I would push another commit that conforms to the indentation style\n. Looks like a cool improvement. Mo' hooks, mo' awesome.\n. ",
    "vinceekg": "Thank you!\n. ",
    "abtrout": "It's totally possible to run Pico on lighttpd; you just need to set up mod_rewrite rules in lighttpd.conf. The rules required depend on your setup, but in general you want to send anything Pico related to Pico's index.php.\nFor example, these rules do the necessary redirects if I had Pico in pico/:\n```\n$HTTP[\"host\"] == \"mysite.com\" {\n    url.rewrite-once = (\n        \"^/pico/content/(.*).md\" => \"/pico/index.php\"\n    )\nurl.rewrite-if-not-file = (\n    \"^/pico/(.*)$\" => \"/pico/index.php\"\n)\n\n}\n```\nThings just need to be tailored to your setup, in particular.\n. ",
    "wudu": "Thanks, that works.\nBut I just testet with noscript blocking JS. If JS is disabled ckicking a link makes pico show the website visited before pico...\nWhy do people think they have to use JS by force just because they can, no benefit here...\nPico, no thanks...\n. ",
    "Yago": "Otherwise, you can use Twig :wink: \ntwig\n{{ page.url | split('/') | last }}\n. ",
    "rick4470": "I figured out my issue it had to do with apache configurations \nLinux users->   \n. ",
    "jbleuzen": "I had the same problem with the pico website download...\n.htaccess not included, but thanks to @rick4470 comment got it working pretty quickly...\n. If you downloaded Pico from the homepage, the .htacces needs to be created manually on your server.\nCreate one with the following : \napache\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . index.php [L]\n. ",
    "fuzzyfox": "Have added some other nice functionality, still v0.7 proposal.\nNew functionality:\n- Title detection if not provided in file meta section.\n- Now ignores dofiles, as well as editor autosave files.\n- Some changes to repo setup for easy update.\n. Surely its better to ensure that your php configuration is correct rather than try and force timzone changes in the code.\nCheck your php.ini file. Its pretty good to not tie timezones to applications where possible. \n. ",
    "james2doyle": "You should only be serving your clients processed CSS. It doesn't make sense to be compiling it server-side on the fly.\nSince you are using LESS you can have it compile on save by using the less.js file in your theme only while testing/building your theme. You'll notice that the LESS site also suggests compiling before sending it to the server. See the LESS Usage Section.\nYou can also use a watching script. I use this one for LESS. It does a great job! You can also look at using grunt.js and the grunt-contrib-less task.\n. I know what you mean. If you are using Git to push your files to the server you can try looking into the post-recieve hooks which run a script after it gets your files. This would require the LESS CLI to be installed on your server.\nYou could make a plugin that just compiled LESS into CSS and then caches it or overwrites a file. It is totally possible. Check out the pico editor plugin because it reads and write files and you may be able to discern some information that will point you in the right direction. There is a PHP version of the LESS compiler that you could use to compile the new file.\n. +1 for this\n. Here is an example of what I do to pass data info to templates.\nI start with a header.html partial:\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>{{ meta.title }} | {{ page_tagline }}</title>\n</head>\nThen in my actual layout/template I will use the with attribute on an include tag:\nhtml\n{% include 'partials/header.html' with { 'page_tagline': 'Some Fancy Page' } %}\nThen it would render to something like:\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Page Title | Some Fancy Page</title>\n</head>\nAlso you can always create your own meta tags with a simple plugin. This would require little work and would allow the dynamic classes you are talking about, without messing with the layout in case there are name conflicts or something. But I digress!\nI don't really care what they call it, templates or layouts, I think it is pretty clear that this is a feature that is needed.\nThe alternative dirty way to do templates now, without editing the \"core\", is to use a custom meta and then detect what it is, and load the appropriate partial. At least thats what I would do if I wanted to leave the core pristine. But you would have quite the ugly index file if you had a lot of templates.\n. This is pretty close to #75. But it is a good example of how to do sidebars/layouts. I want this feature also!\n. I assume @gilbitron will come up with a version that solves the issue. Similar to what he did with the meta data, there were a bunch of PRs for flexible meta data and he wrote a nice way to extend it.\n. Last update, 0.7, he only added about 2-3 of the community additions. He didn't merge the PRs, but replicated the functionality in his own way. So there are currently 2 PRs asking for this feature so hopefully something like this feature gets implemented in the next version.\n. +1 for the friendly email. Maybe he has a maintainer in mind to promote.\nIt's possible that all these features are not inline with the philosophy that Gilbert has for Pico, which is totally fair. It seems like he wants to keep the core as slim as possible, by extending it with plugins. But some things can't be done via the plugins.\nIn that case, it might be best to fork the project to a new one and develop it as a small team.\n. @tyeeman I haven't found anything like Pico before. Maybe (Perch CMS)[http://grabaperch.com/]. \nI actually found a way to do multiple sections in one Markdown file, rather ingenious if I say so myself.\nHere is my markdown file.\n\nHere is what my code is on the index.html template.\n\nIt looks for an hr and then splits it into an array. Then I can call each section into a specific part of my template.\nSo that lets me split a Markdown file into different sections. Works well. What I am actually doing is building a little tabbed section component. So in this case there are 2 tabs.\n. @tyeeman It uses the built in TWIG split filter. No plugins required. You can do it right now. It could be a bit slow on a large file, because it is literally looking through a string and cutting it. You can choose whatever character you want to split by. So you could even split by <section 1> or something.\nBut you can start using it right now.\n. @NeoBlack makes a good point. Moving excerpts into a plugin would be better all around. In fact the excerpt could be done in a Twig filter.\nI actually developed a filter called first_paragraph which I believe to be better than excerpt because it won't cut mid sentence. I just inform my client that the first block is the intro, and they get it.\nI can also add the {{ content|first_paragraph }} in the meta description, so it is more automatic than having to rely on them writing it. If there is a meta description set in the markdown than I use that instead of first_paragraph.\n. I have always wanted to make a small, lightweight, markdown-based CMS. Pico really was exactly what I was looking for.\nI've developed about 6 plugins for Pico, more if you count the ones I haven't shared. I have also answered a few issues/questions on the Github issues page. I have about 3 sites, in production, that run Pico. So to say I haven't tried to support Pico, or I haven't given it a chance, is wrong.\nI think Pico can still go on and live. Phile is now quite different. It may be based on 0.8, but I am tempted to run a diff and see if there is any resemblance anymore. I am considering taking the line out, just because @NeoBlack has done a great job and now it is almost completely unrecognizable. \nI think we are all objective with our PRs and Issues. A few weeks ago @NeoBlack made an issue/comment regarding the number of times get_pages is called. Gilbert said it was for the excerpt. @NeoBlack said, \"why not just use/reuse the meta description or move this into a plugin?\" I mentioned that this could be easily done with a Twig filter. These suggestions went unheard.\nSo I understand what @Snip1 is saying. I don't agree that Pico is dead, more like \"loosely maintained\". If you want something with better performance, regular updates and improvements, service locator (override template engine and parser), more verbose plugins, caching, data store, and reasonable support, then please check out PhileCMS.\n\nIf you want to see Phile in production, my personal site runs the latest Phile, with the Sundown parser. You can see it is insanely fast.\n. @shawnsandy I agree with you on most points. We can all wax poetic about the follies of open source, but I think you are exaggerating the amount of times open source projects get forked into new ones.\nThe first commit of Pico was 6 months ago. Phile came about because there was a slow development cycle, lack of issues being addressed, and performance with multiple pages. Also we were looking for something a little more verbose, and in order to do that, the fork has become more \"complicated\", speaking in terms of PHP complexity. So you can stick with Pico, there is absolutely nothing wrong with that.\nBut what happens when you encounter an error you can't fix? Or worse, don't know how to fix it, because you are \"not a developer\"?\nThat's when having PRs and issues solved, also known as progression, would be nice.\n. @shawnsandy I agree with you about the support base, but right now that is what is lacking, and that is why it was forked. I was hesitant to start the fork because of this very reason (split community, lack of users), and just doing a ton of work for nothing. If that strong support base is so crucial, what can we say today about the state of Pico support?\nSo far I am extremely happy with the work of @NeoBlack and the resulting speed and abilities of Phile. We have almost twice as many commits as Pico and we are going on day 14. But that needs to be taken with a grain of salt, of course.\n. This was suggested by Gilbert a couple weeks ago in a large discussion\n. @Snip1 it didn't seem like he was up for the rewrite. This is probably why most PRs getting \"merged in manually\". But I am happy with the fork, it has gone much farther than I was expecting. At first I didn't want to even go outside of the single-file-style that Pico uses, but @NeoBlack convinced me and I am quite glad he did. It has lead to infinitely more flexibility. \nPhile now has the choice of 3 template engines (Twig, Lex, Smarty) and 2 different markdown parsers (PHP-Markdown and Sundown(PHP C-Extension)). Which is pretty cool to me!\n. Phile is a fork of Pico I started with @neoblack\nhttps://github.com/PhileCMS/Phile\nOn Friday, March 7, 2014, Snip1 notifications@github.com wrote:\n\nI am currently back to db-centric sols. Anchor is the toy-de-jour.\nI rather doubt Pico will be the \"next BIG thing\"... even the head dev\n(Gil) isn't particularly interested in it.\nOn 2014-03-07, at 3:47 PM, prodigy2m wrote:\n\nPico is the next BIG thing. There are lots of file based CMS's around,\nhowever, PICO is very clear and focused on simplicity and performance. Our\ndevelopment group found this framework to be on top 10 best. I am looking\nforward seeing more people using and developing plugins for Pico.\n\nReply to this email directly or view it on GitHub.\n\n\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/108#issuecomment-37073941\n.\n\n\nJames Doyle\nt:  @james2doyle https://twitter.com/james2doylew: ohdoylerules.com\nhttp://ohdoylerules.com\n. ",
    "mrockwood": "Sorry, I should have been clearer. You're right, LESS shouldn't be compiled on the fly. I was envisioning something like the WP-Less plugin that compiles once and caches the compiled CSS for later use.\nThe reason I would prefer compilation to be done server-side is to make it even simpler to develop, deploy, and maintain sites by housing everything needed in one folder, while avoiding as many extraneous scripts/apps/terminal commands as possible. Basically, I just want to throw something in my Pico folder and forget about it. \nBut it doesn't look like any of the other flat-file CMSs offer what I'm looking for, so it may not be possible. Anyway, thanks for your response. I guess I'll keep using less.app.\n. ",
    "PhilipMcGaw": "My Example: http://philipmcgaw.com/ is my main page \nhowever rather than being on the top level of the navigation bar http://philipmcgaw.com/Guides/ZPanelCP/GettingStarted/ should be Guides > ZPanelCP > GettingStarted\nI guess wrapped in a number of <UL>s\n. ",
    "allanjude": "Wrote a patch for it: https://github.com/gilbitron/Pico/pull/54\n. There is an extra ) at the end, my bad\n. jbluezen: I left the original there because I thought it was clearer what it was doing. Ignore directories. and .., and all files that begin with .\nThey can change it if they wish when they merge it.\n. ",
    "inhumantsar": "I'm also having trouble with 404s under Apache. I've got the .htaccess in place and permissions are fine all throughout. mod_rewrite is enabled and operational. See below.\n```\n$ tail /var/log/apache2/error.log\n[Wed Sep 04 09:51:24 2013] [error] [client ::1] File does not exist: /var/www/keystone/maintenance, referer: http://localhost/\n[Wed Sep 04 09:51:25 2013] [error] [client ::1] File does not exist: /var/www/keystone/favicon.ico\n[Wed Sep 04 09:52:32 2013] [error] [client ::1] File does not exist: /var/www/keystone/maintenance, referer: http://localhost/\n$ a2enmod rewrite\nModule rewrite already enabled\n$ cat /var/www/keystone/.htaccess \n\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . index.php [L]\n\nPrevent file browsing\nOptions -Indexes\n```\n. I fixed this by changing the AllowOverride setup in Apache's site config to include the mod_rewrite directives http://httpd.apache.org/docs/2.2/mod/core.html#allowoverride\n. If you have mod_rewrite enabled then AllowOverride All should do the trick.\n\"FileInfo\" is the one you want if you want to be specific.\n\nShaun Martin\nshaun@samsite.ca // 604 282 6361\n[ linkedin http://ca.linkedin.com/pub/shaun-martin/a/583/32a/ ]  [\nwwwhttps://samsite.ca\n ]  [ g+ https://plus.google.com/101809916798364924046/posts ] [\nfbhttps://www.facebook.com/shaun.allen.martin]\nOn Thu, Sep 19, 2013 at 1:40 PM, guardadoe notifications@github.com wrote:\n\nI have the same issue, I'm using WAMP. Could you please paste exactly what\nyou added/changed?\nI tried the following and none worked:\nAllowOverride AuthConfig Indexes\nAllowOverride All\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/55#issuecomment-24771539\n.\n. \n",
    "xiaozj": "Ran into a similar issue when not installed in the root directory.\nFixed it by adding the line RewriteBase /subfolder/2nd-level after RewriteEngine On.\n. That I did, I configured the base_url as well as adding the RewriteBase in .htaccess.\nAlso, I changed Options -Indexes to Options +FollowSymlinks -Indexes per suggestion from this closed issue, however that didn't fix my problem while the RewriteBase rule did, but I left it in there due to laziness. Just saying on the off-chance that it's somehow making everything work.\n. ",
    "Snip1": "Did you enter appropriate data in the config.php file at $config['base_url'] = '';                 // Override base URL (e.g. http://example.com) ?\n. @skegr & @grouchal ~ I apologize for what you perceive as my tone... and you are not entirely wrong in that perception.  However, allow me to at least try to explain.  \nI am not unfamiliar with Open Source, nor a total n00b at working with OS apps.  So, I make it a point to test relatively newer contributions to the sphere... the likelihood is that the developer and interested third parties (such as yourselves) are more likely to still be involved and interested in moving the solution forward.  Also, I really have been searching for quite a while for exactly what Pico purports to offer... so I got excited as well.\nHowever, Pico is still quite rough and somewhat obtuse to deal with... so I asked what I thought was a fairly simple and reasonable question... and got no response over the course of several days.  That surprised me, so I checked into the forum here.  And lo and behold: basically nobody gets an answer in anything like a timely manner.\nSo then I did what I thought was another reasonable thing: I asked the developer directly where to go for documentation and support, as it appeared this forum clearly wasn't it.  His response?  \n\n\"There is no official support for Pico I\u2019m afraid, but Github is definitely the best place to ask yes.\"\n\nSo... what am I to think?  Nobody answers here, and the dev isn't even interested.  If that is not \"dead... probably\" what is?\nI will be checking out Phile (why did you delete your post, @tyeeman)... who knows?  Maybe that's the one ;)\nBTW.. interesting that nobody replies to actual issues, but lots of responses to this.  Not quite sure what that means, but it is curious.  Is everyone basically in the same boat as me... needing Mr Pellegrom?\n. (Replying via email... not sure that will work)\nNot that I know about these things... but could Pico not have been taken over by yourself and NeoBlack?\nOn 2013-11-07, at 3:08 PM, James Doyle wrote:\n\n@shawnsandy I agree with you about the support base, but right now that is what is lacking, and that is why it was forked. I was hesitant to start the fork because of this very reason (split community, lack of users), and just doing a ton of work for nothing. If that strong support base is so crucial, what can we say today about the state of Pico support?\nSo far I am extremely happy with the work of @NeoBlack and the resulting speed and abilities of Phile. We have almost twice as many commits as Pico and we are going on day 14. But that needs to be taken with a grain of salt, of course.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nJohn Snippe\nMyeloma: http://www.snippe.ca\nScribblings: http://blog.snippe.ca\n. OK... so now I am REALLY curious!  \nIf Gilbert already was open to the idea, and  since Pico already has some pretty significant cred/buzz going... why Phile?  Could your optimizations not have been done within the Pico framework (or alternately, might Gilbert have been cool with what sounds like a basic re-write?)\nATM, this does sound a little bit like re-inventing the wheel.. but of course, we wouldn't have NASCAR if that wasn't an ongoing reality, would we?  ;)\nAt this point I'd really like to apologize to Mr Pellegrom for my grumpies the past day or so... I am starting to see the light regarding Github et al.  It really is a somewhat different biosphere than what I have been used to, and I should have stayed on shore for a few more days (weeks? months?) before wading in and discovering it is deeper than I thought...\n. On 2013-11-07, at 3:42 PM, James Doyle wrote:\n\nPhile now has the choice of 3 template engines (Twig, Lex, Smarty) and 2 different markdown parsers (PHP-Markdown and Sundown(PHP C-Extension)). Which is pretty cool to me!\nUbiquity Rulz ;)\nJohn Snippe\nMyeloma: http://www.snippe.ca\nScribblings: http://blog.snippe.ca\n. I am currently back to db-centric sols.  Anchor is the toy-de-jour.  \n\nI rather doubt Pico will be the \"next BIG thing\"... even the head dev (Gil) isn't particularly interested in it.\nOn 2014-03-07, at 3:47 PM, prodigy2m wrote:\n\nPico is the next BIG thing. There are lots of file based CMS's around, however, PICO is very clear and focused on simplicity and performance. Our development group found this framework to be on top 10 best. I am looking forward seeing more people using and developing plugins for Pico.\n\u2014\nReply to this email directly or view it on GitHub.\n. I assume you have not moved the sub folder out of the content folder?\n. I'm not familiar with YAML, so pardon the likely ignorance of this question, but:  how does this enhance Pico?  Can you give an example in the default template?\n. I've been in contact with Andrew Meyer who wrote the pagination plugin... apparently it isn't easy or trivial.  I haven't heard of any progress on that end.  It would be nice, wouldn't it?\n\nOn 2013-12-13, at 9:40 AM, kvanlierop wrote:\n\nInterested in this too. I can't seem to figure out the syntax for the life of me.\n\u2014\nReply to this email directly or view it on GitHub.\n. check out https://github.com/shawnsandy/adv-meta... there is a meta method of setting your page template in that plugin\n. I haven't used it, but would assume one would create a new .html and in the .md content file meta, specify it.\n\nOn 2013-12-02, at 5:17 AM, Christian Giupponi wrote:\n\nThanks @Snip1 I have downloaded it!\nI have added the layout variable and I can access it with {{ meta.layout }} but now in the index.html how can I use it? I mean, should I create multiple if in the index.html?\n\u2014\nReply to this email directly or view it on GitHub.\n. On 2013-12-15, at 10:58 PM, jumelles wrote:\nHello,\nI'm not sure what else to try since I've gone through all the issues on here. I'm running PHP 5.4.9-4ubuntu2.4 on my own server. I can access .md and .txt files in subdirectories just fine, but if I try to go to (for instance) my contact page I get a 404.\n\nWhen I hover the contact url on the home page, I get http://dividedframe.com/?contact... why does the ? show up?\n. ",
    "abely": "There were actually two different issues being discussed in this thread:\n1. The OP had a 404 issue because pico was installed in a userdir. For rewrite to work properly, RewriteBase should be added in .htaccess. In his case, pico was located in /home/Sebastian/public_html/github/pico, and the RewriteBase line should be something like this:\n# right after RwriteEngine on\n   RewriteBase /~Sebastian/github/pico/\n2. inhumantsar's issue was because he installed pico in /var/www/keystone, and by default, the site setting (usually /etc/apache2/sites-enabled/000-default) does not allow override for /var/www, thus .htaccess wouldn't work. So he had to change the site setting (most likely 000-default), and enable override for the /var/www directory, like this:\nAllowOverride FileInfo Options\nHope it helps.\n. Is there a way to workaround the issue? My web host only has PHP version 5.2.17, and I am not a pico developer.\n. Then I get\n[19-Dec-2013 18:00:35] PHP Warning:  Unexpected character in input:  '\\' (ASCII=92) state=1 in /home2/insweatc/public_html/pico/vendor/composer/autoload_real.php on line 23\n[19-Dec-2013 18:00:35] PHP Warning:  Unexpected character in input:  '\\' (ASCII=92) state=1 in /home2/insweatc/public_html/pico/vendor/composer/autoload_real.php on line 23\n[19-Dec-2013 18:00:35] PHP Parse error:  syntax error, unexpected T_STRING in /home2/insweatc/public_html/pico/vendor/composer/autoload_real.php on line 23\nand my autoload_real.php looks like this:\n``` php\n<?php\n// autoload_real.php @generated by Composer\nclass ComposerAutoloaderInit68d29614b81b64051229769b084d96b6\n{\n    private static $loader;\npublic static function loadClassLoader($class)\n{\n    if ('Composer\\Autoload\\ClassLoader' === $class) {\n        require __DIR__ . '/ClassLoader.php';\n    }\n}\n\npublic static function getLoader()\n{\n    if (null !== self::$loader) {\n        return self::$loader;\n    }\n\n    spl_autoload_register(array('ComposerAutoloaderInit68d29614b81b64051229769b084d96b6', 'loadClassLoader'), true, true);\n    self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader();\n    spl_autoload_unregister(array('ComposerAutoloaderInit68d29614b81b64051229769b084d96b6', 'loadClassLoader'));\n\n    $vendorDir = dirname(__DIR__);\n    $baseDir = dirname($vendorDir);\n\n    $map = require __DIR__ . '/autoload_namespaces.php';\n    foreach ($map as $namespace => $path) {\n        $loader->set($namespace, $path);\n    }\n\n    $classMap = require __DIR__ . '/autoload_classmap.php';\n    if ($classMap) {\n        $loader->addClassMap($classMap);\n    }\n\n    $loader->register(true);\n\n    return $loader;\n}\n\n}\n```\nAny idea?\n. I just found PHP 5.3 could be enabled on my host, and it is no longer an issue for me. Thanks all the same!\n. ",
    "dotku": "RewriteBase works!!!\nhttp://www.weijinglin.name/labs/php/pico/sub/\n. ",
    "Royaljerry": "Now it all seems working for me in a subfolder. What I just discovered is that if you instal Pico in a subfolder and use Alias in httpd.conf (like me, who doesn\u2019t like to use the default root for each project) Pico dies. But as soon as I moved the stuff to www/my_subfolder/ it suddenly started working. A strange, but hopeful situation.\n. ",
    "alexandre-mbm": "Way 1\n\nRewriteBase /Pico/?\n@dotku, how is your RewriteBase?\nWay 2\nxml\n<VirtualHost *:80>\n        DocumentRoot \"/home/alexandre/Web/Pico\"\n        ServerName pico\n        ServerAlias *.pico\n        <Directory \"/home/alexandre/Web/Pico\">\n                Options All Includes Indexes\n        </Directory>\n</VirtualHost>\nI try to access http://pico/sub/page\nAnd this results in \"The requested URL /sub/page was not found on this server.\"\nSolution! In way 2.\nbash\nsudo a2enmod rewrite\nsudo service apache2 restart\n. @netomx, the problem was lacks of the rewrite module.\n. Probably already is enabled.\n```\nalexandre$ sudo a2dismod \n[sudo] password for alexandre: \nYour choices are: alias auth_basic authn_file authz_default authz_groupfile authz_host authz_user autoindex cgi deflate dir env mime negotiation php5 reqtimeout rewrite setenvif status\nWhich module(s) do you want to disable (wildcards ok)?\nalexandre$ \n```\nPress ENTER for deactivate none. rewrite is in my list above.\n. ",
    "netomx": "Have you tried enabling \"AllowOverride All\" in Apache?\nErnesto Villarreal\nOn Wed, May 21, 2014 at 4:17 AM, Alexandre Magno\nnotifications@github.comwrote:\n\n[image: pico-not-found]https://cloud.githubusercontent.com/assets/957501/3038077/a91f16ba-e0c8-11e3-94fc-4d4f5685c8ac.png\nRewriteBase /Pico/?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/picocms/Pico/issues/55#issuecomment-43732230\n.\n. Is that new? I don't recall enabling that on my server\nOn May 21, 2014 12:48 PM, \"Alexandre Magno\" notifications@github.com\nwrote:\n@netomx https://github.com/netomx, the problem was lacks of the rewrite\nmodule.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/picocms/Pico/issues/55#issuecomment-43790973\n.\n. What does the error logs shows?\nOn Jan 22, 2014 8:07 PM, \"Akthalian\" notifications@github.com wrote:\nSo were you replicating the problem on my site at least?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/138#issuecomment-33090848\n.\n. Can you give us your web server error log?\nOn Apr 14, 2014 5:40 AM, \"Adrian Valenz\" notifications@github.com wrote:\nI don't know why my local pages didn't work either. Kind of a bummer. So I\njust coded my site live in a different directory\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/picocms/Pico/issues/146#issuecomment-40352855\n.\n. \n",
    "amad": "users can define layout for each page or content using meta.layout\nphp\n/*\nTitle: Simple content\nAuthor: Stunt\nDate: 2013/08/04\nLayout: post.html\n*/\n. ",
    "nclm": "Sorry about that, my PHP version was not right.\n. ",
    "joe-swann": "I had this and wound up editing my php.ini file and restarting Apache. I did this by uncommenting the line with date.timezone and adding my timezone info.\nI did continue to have this problem and discovered the my php.ini file, which was named php.ini.default had to be named php.ini. When I renamed the file the error went away.\n. ",
    "myhonor16": "easy fix https://github.com/gilbitron/Pico/issues/68#issuecomment-23356296\nThis bit of code should be pushed to the project to avoid this problem from occurring on systems where date.timezone is not defined in php.ini\n. this has to do with the recent versions of php\njust add date_default_timezone_set('US/Eastern'); to index.php\n. ",
    "cmattoon": "Alright, all is well. Apologies for all the commits!\n. Can you confirm you've removed the block comments (lines 3 and 23 in config.php)? \n. ",
    "Addvilz": "Excuse me, but would you at least be so kind to indicate reason why pull request was effectively rejected? Does it needs some improvement, does not conform with some guideline or where exactly is the problem?\nThanks.\n. ",
    "plainey": "Willing to reproduce, but.. Just to be sure, which version of Appserv did you try with? 2.5.x branch or the new 2.6 with PHP6?\n. ",
    "nickl1": "It's AppServ2.5.10 with PHP 5.2.6.\n. ",
    "jorap": "I think I know why the issue is happening...\nIt says that pico requires 5.2.4+\nTwig is installed in pico using Composer but Composer requires PHP 5.3.2+\nThe DIR php constant is available in PHP 5.3.0\nThe issue will be resolved if the server is at least PHP 5.3.2+\nor Twig is configured in pico without using Composer.\nI do hope Twig is integrated in pico without using composer so that more people can use it.\n. ",
    "SampathKKK": "Warning: require_once(DIR/composer/autoload_real.php) [function.require-once]: failed to open stream: No such file or directory in /home/content/i/n/d/indianconstruc/html/admin/vendor1/vendor/autoload.php on line 5\nFatal error: require_once() [function.require]: Failed opening required 'DIR/composer/autoload_real.php' (include_path='.:/usr/local/php5/lib/php') in /home/content/i/n/d/indianconstruc/html/admin/vendor1/vendor/autoload.php on line 5\n. please help me out of this problem..\nadvance Thank to you..\n. ",
    "MaxGfeller": "You have to have PHP 5.3 installed to use the \"DIR\" magic constant:\nhttp://php.net/manual/en/language.constants.predefined.php\nTo preserve compability with PHP 5.2 the developers would have to replace\n\"DIR\" with dirname(__FILE__)\n2013/8/18 Chris R. Albon notifications@github.com\n\nI uploaded Pico but I only see a blank php page of death. After turning on\nerror reporting, I get this:\nNotice: Use of undefined constant DIR - assumed 'DIR' in\n/hsphere/local/home/livenoma/writemorefaster.com/vendor/autoload.php on\nline 5 Warning: require_once(DIR/composer/autoload_real.php): failed to\nopen stream: No such file or directory in /hsphere/local/home/livenoma/\nwritemorefaster.com/vendor/autoload.php on line 5 Fatal error:\nrequire_once(): Failed opening required\n'DIR/composer/autoload_real.php'\n(include_path='.:/hsphere/shared/apache/libexec/php5ext/php/') in\n/hsphere/local/home/livenoma/writemorefaster.com/vendor/autoload.php on\nline 5\nI figured I had the wrong version of PHP, but I just checked and am\nrunning 5.2.10. Any ideas?\nHere is my phpinfo: http://www.writemorefaster.com/test.php\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/65\n.\n. Oh - it seems to be a composer problem. Since composer does not work with\n5.2 it should be noted on the Pico home page somewhere.\n\n2013/8/19 Max Gfeller max.gfeller@gmail.com\n\nYou have to have PHP 5.3 installed to use the \"DIR\" magic constant:\nhttp://php.net/manual/en/language.constants.predefined.php\nTo preserve compability with PHP 5.2 the developers would have to replace\n\"DIR\" with dirname(__FILE__)\n2013/8/18 Chris R. Albon notifications@github.com\nI uploaded Pico but I only see a blank php page of death. After turning on\n\nerror reporting, I get this:\nNotice: Use of undefined constant DIR - assumed 'DIR' in\n/hsphere/local/home/livenoma/writemorefaster.com/vendor/autoload.php on\nline 5 Warning: require_once(DIR/composer/autoload_real.php): failed to\nopen stream: No such file or directory in /hsphere/local/home/livenoma/\nwritemorefaster.com/vendor/autoload.php on line 5 Fatal error:\nrequire_once(): Failed opening required\n'DIR/composer/autoload_real.php'\n(include_path='.:/hsphere/shared/apache/libexec/php5ext/php/') in\n/hsphere/local/home/livenoma/writemorefaster.com/vendor/autoload.php on\nline 5\nI figured I had the wrong version of PHP, but I just checked and am\nrunning 5.2.10. Any ideas?\nHere is my phpinfo: http://www.writemorefaster.com/test.php\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/65\n.\n. But since the whole vendor directory is checked in directly in the Pico project, the end user does not need to run composer itself (which requires PHP 5.3). So if you would only update the AutoloadGenerator from composer, that would work in my opinion: https://github.com/composer/composer/blob/master/src/Composer/Autoload/AutoloadGenerator.php\n\n\nSo only Pico developers needed to have PHP 5.3 while the users still could use 5.2. But i don't know if the guys behind composer would merge that in.\n. You could edit the vendor/autoload.php file manually and replace __DIR__  with dirname(__FILE__)\n. ",
    "chrisalbon": "Ah, that makes sense. The specs on the website need updating then, they claim Pico only requires 5.2.4+\nOn Monday, August 19, 2013 at 9:56 AM, Max Gfeller wrote:\n\nYou have to have PHP 5.3 installed to use the \"DIR\" magic constant:\nhttp://php.net/manual/en/language.constants.predefined.php  \nTo preserve compability with PHP 5.2 the developers would have to replace\n\"DIR\" with dirname(__FILE__) \n2013/8/18 Chris R. Albon  \n\nI uploaded Pico but I only see a blank php page of death. After turning on\nerror reporting, I get this:  \nNotice: Use of undefined constant DIR - assumed 'DIR' in\n/hsphere/local/home/livenoma/writemorefaster.com/vendor/autoload.php (http://writemorefaster.com/vendor/autoload.php) on\nline 5 Warning: require_once(DIR/composer/autoload_real.php): failed to\nopen stream: No such file or directory in /hsphere/local/home/livenoma/\nwritemorefaster.com/vendor/autoload.php (http://writemorefaster.com/vendor/autoload.php) on line 5 Fatal error:\nrequire_once(): Failed opening required\n'DIR/composer/autoload_real.php'\n(include_path='.:/hsphere/shared/apache/libexec/php5ext/php/') in\n/hsphere/local/home/livenoma/writemorefaster.com/vendor/autoload.php (http://writemorefaster.com/vendor/autoload.php) on\nline 5  \nI figured I had the wrong version of PHP, but I just checked and am\nrunning 5.2.10. Any ideas?  \nHere is my phpinfo: http://www.writemorefaster.com/test.php  \n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/65\n.  \n\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/gilbitron/Pico/issues/65#issuecomment-22856029).\n. \n",
    "jduerr": "Did anyone figure out how to get pico running on PHP 5.2?\nI'd love to set pico up on our NAS. But an update to php 5.3 is available for that old box, sadly.\nAlready tried using MaxGfellers tip - get the  Unexpected character in input warning like abely.\n. ",
    "cwiggs": "@jduerr FYI in case anyone else has this problem.  I was having a problem with this with Dokuwiki, and found my way here.  To fix that I just installed an older version of Dokuwiki.  That same fix might work with Pico.\n. ",
    "ChamodyaDias": "running \"composer update\" command worked for me.(windows). ",
    "PhrozenByte": "It's kinda weird that this Issue is actually the first Google result for this error message, even though Pico users won't experience it. Anyway, it's nevertheless a good idea to help all non-Pico users who seek help.\nWelcome to the GitHub repository of Pico, a stupidly simple, blazing fast, flat file CMS. Even though you're here by chance, we might offer you a great alternative. Visit us at http://picocms.org/ and see http://picocms.org/about/ for more info. :+1: \nDepending on the actual error message you experience, the solution differs:\n\nNotice: Use of undefined constant DIR - assumed 'DIR' in /var/www/html/\u2026\n\nUnfortunately I've to tell you that you can't run this application on your webserver :disappointed: To be more presice, you shouldn't run any application on your webserver. Your webserver runs a desperately outdated version of PHP (PHP 5.2 or earlier) that didn't receive any security updates since January 2011:exclamation:\nNaturally nobody can't prevent you from doing it anyway. What will prevent you from doing it is the fact, that the application you're trying to install won't run on this outdated version of PHP and requires a newer PHP version. You will likely find the required PHP version in the application's README.md or install instructions.\nThere's no other solution than updating your PHP version.\n\nWarning: require(vendor/autoload.php): failed to open stream: No such file or directory in /var/www/html/\u2026\n\nPlease check your application's install instructions (maybe in its README.md), it looks like just uploading all of the application's files to your webserver isn't enough and you've to go through some more steps. Likely you'll have to open a shell, navigate to the desired install directory of the application and run composer install.\nHowever, you really should check the application's install instructions :wink: \n\nCannot find 'vendor/autoload.php'. Run `composer install`.\n\nIt looks like you're a Pico user and got lost :smiley: You likely downloaded a Source code archive instead of one of Pico's release archives by accident. Just refer to Pico's install instructions and download the pico-release-[version].tar.gz archive instead of one of the Source code archives.\nIf Pico won't run nevertheless, you can join us on #picocms on Freenode IRC to get help. Alternatively, please don\u2019t hesitate to create a new Issue on GitHub. Also see the \"Getting help\" section in Pico's docs.\n. Fixed with #252\n. I was recently thinking about this idea while working on Pico 2.0 (#334) and thinking about Pico 3.0 (#317), but came to the decision, that we shouldn't explicitly allow replacing Markdown with other \"content processors\" (like Twig).\nIf you want to use Twig for some \"more complex\" pages you can already do that. Simply create a content/my_complex_page.md with\n```yaml\nTemplate: my_complex_page\n```\nand a matching themes/my_theme/my_complex_page.twig. Add your contents to the Twig template and you're ready to go.\nIf you want to create a larger number of such \"complex\" pages and don't want to create both a (basically empty) .md file and a .twig template, you can also write a plugin that searches for .twig files in e.g. the themes/my_theme/complex_content/ directory, adds them to Pico's pages array (onPagesLoaded event) and intervenes appropriately when a \"complex\" page is requested (basically hook into the onRequestUrl event to detect the request and change the $templateName argument of the onPageRendering event). However, I don't think that this feature is widely needed, thus this isn't going to make it into Pico's core.\nIf you rather want to extend the Markdown processor (i.e. the Parsedown class) with some custom features (like #318), you can do this starting with Pico 2.0. There's a new onParsedownRegistered event that passes Pico's $parsedown object as reference, allowing you to replace it with another object (however, the object's class must extend the Parsedown class, otherwise you'll break Pico).\nIf you want to completely replace Markdown, YAML and/or Twig with something different, you can extend Pico's class and replace the respective methods as you want (Pico is open source). We obviously will neither officially support this nor will this work with all existing plugins or themes out there, but you definitely can do this if you want to.\nThank you for your feedback anyway! \ud83d\udc4d . @dkyme, simply add e.g.\nphp\nsetlocale(LC_TIME, 'de_DE.utf8');\nto your config/config.php. You can get a list of available locales by running locale -a on your server's shell.\nThe use of strftime() and setlocale() is fraught with problems in some environments, thus this is kind of a workaround; we're planning to release a official i18n plugin with Pico 1.1, see #334.\n. I don't agree, the article consists of wrong assumptions (the file structure has nothing to do with how \"far away\" contents are from root - it's a matter of how many links Google must follow to reach this page), obviously false pretences (did you ever see a file extension on Google?) and a completely contradictory conclusion that is radically opposed to this quote:\n\nIllyes stressed again that there are no ranking benefits dependent on how you create your URL structure.\n\nAnyway, you can still write a simple plugin to let Pico understand URLs like /foo-bar-sub-page.html (= content file /foo/bar/sub/page.md):\n``` php\n<?php\nclass FlatUrls extends AbstractPicoPlugin\n{\n    public function onRequestUrl(&$url)\n    {\n        if (substr($url, -5) === '.html') {\n            $url = substr($url, 0, -5);\n            $url = str_replace('-', '/', $url);\n        }\n    }\n}\n```\nYou can then use a Twig macro like the following to create URLs in your theme:\n``` twig\n{% macro flat_url(base_url, page_id) %}\n    {{ base_url }}/{{ page_id|replace({ \"/\": \"-\" }) }}.html\n{% endmacro %}\n{% import _self as util %}\n{% for page in pages %}\n    {{ page.title }}\n{% endfor %}\n```\nI didn't test these code snippets, but they should do what you want (at least basically). It's very likely that plugins which depend on Pico's URL structure don't work with this. Pico neither recommends nor supports something like this.\n. Fixed with #252\n. Ideas about how to achieve this in a backwards-compatible manner are appreciated! I though about this with Pico 1.0/#252 too, but didn't found a satisfying solution. Please also note that we don't want to increase complexity (at least not considerable; \"stupidly simple\").\n. We'll very likely implement this with Pico 2.0, see #317.\n. This feature will be shipped with Pico 2.0, see 9254240 for implementation details. For feedback about this feature, please refer to #334. Thank you for bringing this up!. As far as I understand this issue right, it is about replacing Markdown, YAML and/or Twig with something different. There are no plannings to completely replace these core parts of Pico, neither in the near, nor the distant future (i.e. Pico 3.0 and later, #317).\nHowever, Pico already allows one to achieve most things people are trying to do (like using pure Twig instead of Markdown to represent contents; see https://github.com/picocms/Pico/pull/110#issuecomment-301251348), but we definitely won't support things which are against Pico's basic idea (Markdown + YAML + Twig + \ud83c\udf89 = Pico - in the simplest, but still most powerful way possible). Adding more and more abstraction contradicts Pico's demand for simplicity (what also applies to the source code).\nPlease refer to https://github.com/picocms/Pico/pull/110#issuecomment-301251348 for a more detailed answer why this isn't going to happen, and some explanations on how to still achieve things like this.\nThank you for your feedback anyway! \ud83d\udc4d. Cannot be merged anymore and a plugin-based solution is preferred. Please refer to #235 for the ongoing discussion about this idea.\n. I'm not able to reproduce this, it probably already got fixed in ParsedownExtra. If this is not the case don't hesitate to reopen this issue.\n. Does your config.php still contain the return $config statement?\n. Oops, that was the wrong global.php :smile:\nSure, it's a good idea to wait for about 1-2 weeks to get a little more feedback before merging this, it's a quite big update\n. I'm not really sure what you mean. In this PR posts aren't sorted by the Date meta header directly, instead they are sorted by $data['time'], the timestamp resulting from a strtotime() call. What sorting would you expect?\n. @bricebou, sure, that's pretty easy. The most important changes are regarding the event system. You can use the transition table at the PicoDeprecated class docs to see the new event names. Some events changed their parameters to be more consistent, so you should compare them to the sourcecode of DummyPlugin (formerly Pico_Plugin) - or simply use the list below. Then add extends AbstractPicoPlugin to your class and you're done :smiley:\nIf you're using internal links to other pages, you shouldn't use $settings['base_url'] anymore. Use $this->getPageUrl($page) instead, otherwise your plugin requires a working URL rewriting setup. I recommend to delete the .htaccess file while developing, that's the easiest way to guarantee support of the new routing system.\nIt's recommended, but not required, that you rename your classes to follow the PSR principles, so e.g. Pico_Leaflet becomes PicoLeaflet and the plugin file name becomes PicoLeaflet.php.\nHere's a list of changes to the event system that are relevant for existing plugins:\n- All events were renamed - see the transition table at the PicoDeprecated class docs for details\n- You can access all Pico variables using public getter methods, so instead of public function request_url(&$url) { $this->url = $url; } to remember the requested URL you can simply use $this->getRequestUrl()\n- onContentLoaded and on404ContentLoaded dropped $requestFile - use $this->getRequestFile() instead\n- onSinglePageLoaded dropped $meta - use $pageData['meta'] instead\n- onSinglePageLoaded passes $pageData indexed by ID - use array_values($pageData) when necessary\n- onPageRendering changed its parameter order to $twig, $twigVariables, $templateName\n- onPageRendering now passes $templateName with its file extension\n. No, I didn't change anything regarding configuration, it's still all inside a single config/config.php.\n@all \nThere are some \"What do you think?\" questions in the PR message, the most important about the need to register new meta header variables during onMetaHeaders. It would be nice to get a little feedback about that, I'm currently tending to remove the need to register new meta variables (as it is required in Pico 0.9). Registering a meta variable still guarantees the existance of the array key, so you don't need isset() checks. It also still allows plugin developers to access a meta variable through another array key.\n. Thanks @PontusHorn \n@theshka: I suggest to wait 1-2 more weeks, I'm still hoping for more feedback (+ I currently don't have time to update the docs :smile:)\n@all: Feedback is still appreciated!\n. No @Lomanic, you're not missing anything, you just found some bugs which should be fixed now, please try again :smiley:\n@dav-m85: These are quiet big changes, so, in my opinion, releasing them as Pico 1.0 is justifiable. Please remember that Pico never had a stable release - all previous releases were pre-releases (0. versions), this actually would be the first stable release. There are no BC breaks, but the changes regarding the plugin system are enormous. I even recommend to keep the PicoDeprecated plugin for a very long time (e.g. until Pico 2.0). Pico already has a ecosystem that depends on these deprecated features, releasing a new, incompatible version cuts Pico off from its own ecosystem. I agree that at least auto-enabling the PicoParsePagesContent plugin should be removed with the next bigger release (e.g. Pico 1.1) - this plugin really has a big performance impact (as Pico 0.9 had...).\n. @Lomanic: Can you please report this issue to erusev/parsedown-extra? Maybe they'll fix this problem before we merge this PR.\n. @Lomanic, excerpts were removed by default, you can re-enable them by adding $config['PicoExcerpt.enabled'] = true; to your config.php. PicoExcerpt depends on PicoParsePagesContent, what eliminates all performance advantages of Pico 1.0. You should move the excerpt contents to the Description meta header and add %meta.description% to the beginning of your content file. By the way, PicoExcerpt gets automatically enabled when a old plugin is loaded, thus this is no BC break.\nYou moved your config.php to config/config.php.template? This should disable your custom configuration and Pico falls back to its default configuration.\nCan you please provide a copy of your website for debugging? Simply leave your contents directory out. Please send me an email through the contact form at http://daniel-rudolf.de/contact.\n. @Lomanic, I casually found (and fixed) a bug in PicoDeprecated that could lead to your problems with 3rd party plugins, but I can't confirm that without a copy of your Pico installation. Please try it yourself.\n@all, I'll update the docs in the course of this week, so I would like to call you up for testing and further feedback. @theshka, I then recommend to merge this PR in the next week, this unfortunately seems to be the only way to get the necessary attention to receive more feedback.\n. @theshka: Yes, changelog and docs still need a update. I'm currently working on some more improvements and will then update the docs accordingly. I think this PR can be merged in the course of the next week - as long as nobody gives feedback that needs action (@all, feedback is still appreciated!). I think this isn't in a hurry, a week sooner or later isn't important.\n. @Lomanic: Thank you for providing your Pico install! I've fixed all problems related to Pico - as far as I can tell everything else works now as expected. :smiley:\nThe remaining Warning: array_unshift() expects parameter 1 to be array, null given in .../vendor/erusev/parsedown-extra/ParsedownExtra.php on line 28 error is related to your downgraded parsedown-extra version. It seems that your downgraded parsedown-extra version is incompatible to the current version of parsedown. Newer versions of parsedown-extra check for parsedown >= 1.5.0, so you could try a 1.4.x release. Otherwise please refer to @erusev.\n@bricebou: My wording was a little bit ambiguous. Starting with Pico 1.0 you don't need isset() checks anymore. Please see lib/Pico.php#L630 and lib/Pico.php#L642.\n. I've updated Picos inline docs, feedback is appreciated (click here to see the parsed version). As said, I'm no english native speaker, it would be great if someone reviews what I wrote. The inline docs should contain answers to any questions a typical user could have, so please check for completeness, too.\n. A PR would be great, thanks @theshka\n. Heads up! I'll merge this PR on 6th November, the new release will be called 1.0.0-beta.1. I would like to call you up for testing the new release, feedback is always appreciated!\n. Actually #252 doesn't really \"fix\" this, it just contains a workaround for broken webservers by assuming requests through port 443 are HTTPS requests. You should still fix your webserver configuration.\n. It's the default HTTPS port, not the only HTTPS port.\n. Just let this be said, we don't support @phillbailey's multi-domain solution, however there are (as of Pico 1.0.0-beta.2) no (known) side-effects when doing something like this.\nAnyway, it could lead to problems in the future, so I recommend you to use Pico's official multi-domain solution by changing Pico's config dir (see Pico::__construct()) in your index.php. When also changing Pico's plugins dir dynamically, you can even use old plugins on a per-domain basis.\nSimply change line 17 of your index.php to e.g. \"config/\" . $SERVER['SERVER_NAME'] . \"/\" and create a config/example.com/config.php.\nAnother example of how you could use Pico's multi-domain solution is described in #301.\n. No @theshka, unfortunately this isn't that easy. The referenced commit only detects that the file is a symlink, @dmelo probably then hides this page in his own theme. This is no generic solution. One could use symlinks for different reasons, e.g. providing contents that are stored in a users home directory. We must validate that the symlink really is a duplicate (symlinks can cascade, it's not just a single in_array()) and then provide a way to exclude this page safely (we can't just remove it from $pages, this would break Pico::discoverCurrentPage()). Imho the use case doesn't justify the added complexity. Anyway, it's still possible to implement this as a plugin...\n. No, any further work would then require another PR :smile:\nBy the way, probably it would be helpful if I get Collaborator status - or, even better, convert the @picocms account to an organization. We could then put the website into the picocms.github.io repo, what is much more flexible and easier to maintain than a single gh-pages branch. It would also be advisable to work on \"official\" plugins (like the editor) in repos that are under control of @picocms. Can you propose this to @gilbitron?\n. I think @picocms is a second user of @gilbitron. Converting this user to an organization and adding all persons involved as admins should be the best solution, so we're able to manage repos, too. @theshka, can you please take care of this? I think you know how to connect to the responsible person as you got your Collaborator status from somewhere, too :smile:\n. Ah, okay, hopefully someone checks the @picocms user for all these notifications... It's a little bit mysterious that someone bought Pico and never communicated who he or she is... This would be impossible in Germany :smile:\nAnyway, I've updated Picos inline docs (see 40dbd0e), the docs on the website probably will be nearly the same. The website will additionally contain a Install section (just a copy of the Install and Run sections of the README.md) and a pretty short Upgrade section (no BC breaks, so we don't have to tell much to a normal user :smile:). Feedback is appreciated! (but please use #252)\nAs far as I can see the only thing missing are docs for plugin devs...\n. By the way: To speed things up a little bit, help is appreciated! Simply open a PR on my fork.\n. Ok, thank you @theshka and @picocms \n. I've added auto-generated class/method docs to the website using phpDocumentor, you can find the docs at https://phrozenbyte.github.io/Pico/phpDoc/master/\n. Thank you for your hints regarding config.php, these problems concern people which are still using Pico 0.8. We'll add the necessary steps to move a legacy config.php to config/config.php to the docs. Additionally I'll see how this could be solved with PicoDeprecated. That's the reason why I said we need more testing for Pico 1.0 :smiley:\nAnything else you mentioned is already in progress. Thank you for your feedback!\n. Heads up! I'll merge this PR on 6th November, the not yet finished plugin dev docs will be finished within the next weeks and before releasing the final Pico 1.0.0. Feedback is always appreciated!\n. Thank you for your feedback @Lomanic! I've created a new issue regarding the broken links in the class docs (see phpDocumentor/phpDocumentor2#1672).\nRegarding the content and content-sample directories, I decided to let Pico guess the correct content directory, so it's not necessary to change the config/config.php anymore (see ebe007b).\n. It's good practice to separate contents and assets, you even shouldn't make your content dir accessible from outside. Anyway, this is not related to Pico, its something about your webserver config. If you're using Apache, you can add the following rules to the beginning of the existing rewrite rules in your .htaccess:\nRewriteCond %{DOCUMENT_ROOT}/pico/content/$1 -f\nRewriteRule ^(.+)$ content/$1 [END]\nTo put this very clear: We don't support this! Pico is highly extensible and we already know access control plugins, which are completely useless if the raw content dir is accessible from outside.\n. In my opinion this is out of Picos scope, it's not our job to explain how a webserver is configured. Any other opinions about that? @theshka \n. I think our configuration suggestions would be (per-definition...) wrong, there are too many platforms with different configuration strategies out there. For example, I'm using Debian, using the suggested template will definitely break Debians default configuration. It's even hard to link to a website that explains the webserver configuration, I don't know any website that even covers the major platforms, far less any platform. My personal opinion is, that someone, who isn't able to google for the right solution for his platform, shouldn't have a root server, he should stay with managed webspace. So, I think it's best to remove all configuration examples, except for Pico-specific things like URL Rewriting.\n. We'll have a solution with the upcoming Pico 1.0 release. Until then, here you go: http://daniel-rudolf.de/files/pico0.9-vendor.tar.gz\n. The solution depends on what you're trying to do. If you just want to reference the image, wrap it into another element (selector is .my-class img):\nmarkdown\n<span class=\"my-class\">![Image of Octocat](https://assets-cdn.github.com/images/modules/logos_page/Octocat.png)</span>\nOtherwise you can use a preceding reference element to really get the paragraph (selector is .my-class + p):\nmarkdown\n<p class=\"my-class\"></p>\n![Image of Octocat](https://assets-cdn.github.com/images/modules/logos_page/Octocat.png)\n. The routing system will be completely overhauled with our upcoming Pico 1.0 release, see #252. Feedback is appreciated!\n. Actually I'm not sure about this, I think this can be achieved using one of those third-party tools (in GitHubs terminology \"Webhooks, Services and Integrations\"). In the past, either someone else did this or I did it manually so I don't have experience with that. I had the impression that maybe @dav-m85 has experience with it? Otherwise someone has to familiarize with this topic...\nManually the process looks more or less like this:\n1. create & push a Git tag\n2. run composer locally\n3. create a ZIP archive from the resulting installation directory (so vendor/ is included)\n4. draft a release on GitHub (including the corresponding parts of the changelog.txt)\n5. upload the ZIP archive as binary\n6. run phpDocumentor locally, output goes to a new folder in the gh-pages branch\n7. link the new phpDocs directory on the website\n8. commit & push the changes to the gh-pages branch\n. @theshka: Following http://semver.org/ looks like a good choice, so instead of releasing 1.0-beta we'll release it as 1.0.0-beta.1. The final version is 1.0.0. Are you through with that?\nRegarding branches: I know many projects using a separate develop branch (most of them because they are using Vincent Driessens git-flow concept). In our case I don't think it is necessary to use such a complex workflow. Development should happen in the master branch, we consciously don't tell people to use the master branch, but tags. A regular user downloads the binary anyway, even when using composer we suggest to use the latest tag in our README.md. Assumed we have concurrent versions in the future (I don't think this will happen...) we can simply create a oldstable branch. I suggest to use PRs for everything, so you (and anybody else) can look through my changes before merging and I can look through your changes. As far as I know that's exactly the workflow recommended by GitHub (and I like it because of its simplicity) :smile:\nWhat do you think? @dav-m85 and @all, your feedback is appreciated, too :smiley:\n. Just for clarification: I suggest to use branches within the picocms/Pico repo, not within our own forks. For example, a future pico1.1 branch should be part of the picocms/Pico repo, not of a fork. As soon as development reaches a point where feedback is appreciated, a PR is opened. After some time (very soon for bugfixes, other improvements should have a reasonable feedback phase) the PR is merged and the branch can be deleted.\nAnyway, this just affects @picocms, @theshka  and me. It makes working together on new features much easier, the current situation of constantly opening PRs on my fork just to merge small changes isn't good. By the way, for the transitional phase (until Pico 1.0 is finally merged) I added you as Collaborator to my fork so you don't have to open PRs all the time.\nI suggest to prefix our development branches reasonable, e.g. feature/ for bigger features, enhancement/ for smaller improvements and bugfix/. What do you think?\n. I would like to receive a little more feedback about Pico 1.0 before releasing it as Picos first stable release (especially more testers with a bigger variety of plugins). The PR imho hasn't received enough attention for this massive update yet. Going through the whole alpha/beta/rc/release process is indeed not necessary, a (hopefully single) beta should be sufficient to get the wanted feedback and we can release Pico 1.0 some weeks later. It's probably not necessary do repeat this in the future, but Pico 1.0 is a little special. :smile:\n. Actually just the website updates are missing, concretely a little more dev docs and the missing sections of the user docs. Unfortunately my time is limited at the moment :(\nI really hope releasing Pico 1.0.0-beta.1 gives us the wanted feedback. Many users don't want to follow dev talks, but will test a new release. Releasing it as 1.0.0 straigth bears the danger of problems and disenchanted users. Imho Pico 1.0 simply wasn't tested enough yet...\nRegarding phpDocumentor: According to travis-ci/travis-ci#2111 and some own testing, it isn't possible to combine branch whitelists with tag-based auto deployment. Unfortunately it is necessary to whitelist the gh-pages branch, because Travis implicitly blacklists it. As far as I can tell we have two options: Either wait for travis-ci/travis-ci#2111 to be resolved and creating the class docs manually until then (the issue is from March 2014, so I don't have the hope that this will happen soon :disappointed:) or let @picocms create a distinct picocms.github.io repo. :unamused: \n. I suggest to delay the dev docs after the release of Pico 1.0.0-beta.1. We should finish the dev docs before releasing Pico 1.0.0, but I think we shouldn't delay the beta release much longer... I'll finish the user docs within the next days, so I suggest to merge #252 and #260 on Friday, 6th November. What do you think?\n. Jekyll and especially its template engine Liquid drove me nuts... :unamused:\nApart from the missing \"Ensure restricted access\" section on the upgrade page (I'll add just a few sentences tomorrow) the website and Pico 1.0 is ready to merge. As you probably already noticed I made some last-minute changes to Pico 1.0 that arose while I wrote the docs. Hence I would say we shouldn't stick very strict on \"don't add new features\" between 1.0.0-beta.1 and 1.0.0... Maybe there are some more things we forgot to address.\nI'll merge both PRs tomorrow towards evening (\"evening\" in terms of UTC).\nAny wishes, problems, complaints or comments? :smiley:\n. No, it's not necessary to change the .md file headers from C-style comments to the YAML Front Matter syntax. Admittedly Pico::parseFileMeta() says that C-style comments are deprecated, but I don't think it will ever be necessary to drop the support of them. Anyway thanks for this hint, I'll add a sentence about it, the page also doesn't mention that meta headers must start on the first line of the file now.\n. @theshka: I pushed the missing additions, can you please look through them so I can merge the PRs?\n. Here we go :smiley:\nUnfortunately the auto-generated release didn't work as expected. It indeed took the tagged commit to give the release a title and message, but the the title was v1.0.0-beta.1: Version 1.0.0-beta.1 (i.e. the tag name was prepended) and the message wasn't parsed with Markdown. I had to copy the contents over manually.\nhttp://picocms.org/ requires a forced Refresh to work (Strg + F5).\n. I tried to clarify the suggested branching concept in 6638c2b, @theshka, do you agree with that?\nHow do we want to proceed regarding the automated generation of phpDocs?\nedit: @theshka moved the to-do list to the top of this post, so that it shows up in issues overview\n. Actually the \"What's New\" section should be a more extensive (and not pared-down) version of the changelog. It should describe the changes in a not so \"techy\" manner (i.e. addressing users, so the description of changes only affecting devs can be shorter). From CHANGELOG.md:\n\nThis changelog only provides basic information about the enormous changes introduced with Pico 1.0.0-beta.1. Please refer to the UGPRADE section of the docs for details.\n\nWith \"UPGRADE section of the docs\" we ultimately mean the upgrade.md (what is linked by _docs/upgrade.md). The upgrade.md already contains a first (currently commented out) version of the \"What's New\" section, its sufficient to overhaul and extend these contents. @theshka wrote them on basis of my pull request message.\nSplitting the section into a \"for users\" and a \"for developers\" part seems to be a good idea, nevertheless the \"real\" upgrade steps for developers (i.e. \"How to upgrade my plugin\" - the equivalent to the first paragraphs of the \"How to upgrade\" section in the upgrade.md) should go to _plugin-dev/upgrade.md. This section should basically be a more extensive version of this comment.\nA \"How to upgrade my theme\" section shouldn't be necessary, the changes are already described in the existing \"How to upgrade\" section in the upgrade.md. I think most users are using custom themes, so these steps also affect ordinary users and thus shouldn't be part of the dev docs. I think you know the necessary steps pretty well, so you can verify this and make additions/changes when necessary :smile:\nThe cookbook should stay independent, as its concept is to provide a collection of various code examples. Every example should have a \"The problem\" and \"The solution\" part describing the example step-by-step. The \"Blogging\" section of the docs should be part of the cookbook instead, not of the user docs. The cookbook should finally be mentioned both in the user and dev docs.\n. Exactly, the _docs/upgrade.md states just some \"generic\" steps to upgrade Pico, the actual upgrade tutorial for Pico 0.8 or 0.9 to Pico 1.0 can be found in the upgrade.md. The current \"How to upgrade\" section already describes some changes relevant for users, consequently the new \"What's new\" section should indeed give a hint about them, but shouln't repeat them. The main part of the \"How to upgrade\" section (without its sub-sections) already is a kind of \"tl;dr\", I'm not sure how we could make this shorter. Anyway, I look forward to your pull request, thank you for helping us! :smiley:\n. No, it's intended to keep _docs/upgrade.md (i.e. the user docs) and the upgrade.md (distinct page about upgrading to Pico 1.0) separated (i.e. a completely separated page - as it is right now) - the first describes the upgrade process in a generic manner without saying a single word about the changes, the latter is just about upgrading to Pico 1.0. Actually I don't think that it's necessary to change _docs/upgrade.md at all.\nPlease keep in mind that the \"What's new\" section should extend the \"How to upgrade\" section, not the other way round or that a user is required to read both sections. It should be obligatory for a user who's upgrading to Pico 1.0 to read the \"How to upgrade\" section, reading the \"What's new\" section should be completely optional. Therefore the \"How to upgrade\" section should describe only features that could possibly affect backwards compatibility (now or in the future), whereas the \"What's new\" section describes all (better: not yet mentioned) user-relevant changes.\n. I suggest to fit a 1.0.0-beta.2 release in, what do you think?\n. Hmm... Makes it harder for composer users to set up their website.\n. Yeah, renaming phpcs.xml to .phpcs.xml and build to _build sounds reasonable, the index.php.dist should remain unchanged - as a hint for composer users to use this file when possible.\n. I'll merge #273 before tagging v1.0.0-beta.2, can you please look through the changes again? All other PR's aren't finished yet, I had no time to look through #276 and we have a ongoing discussion about #292, so we should postpone them.\n. Here we go: https://github.com/picocms/Pico/releases/tag/v1.0.0-beta.2\n. :smiley:\nJust fyi: The reason why I suggested this intermediate release is, that my time for Pico will be very limited in December and January. So please don't be surprised if my contributions peak off in the next two months.\n. Thank you! The progress we made together recently would not have been possible without the kind support by all of you guys, whether by code contributions, writing on the docs or by giving your opinions, ideas or support in general :smiley: Pico got an community project as its best :smiley:\n. I would like to suggest the release of the final 1.0.0 within the next days (on Thursday would be perfect, kind of a Christmas present :smile:). I also suggest to defer the overhaul of the \"Development\" and \"Cookbook\" pages on our website - they are nice to have, but not absolutely necessary, especially because we actually don't loose any information compared to Pico 0.X. I merged all remaining pull requests yesterday and will look through the outstanding parts of the upgrade.md (#276) today (edit: done). Please take a look at #306 and the commits (especially a853925abc1e5e9263a7aba3f95ce2a9f37f5c0a and 4751bcf6eef45c98c0e59109bfcae49b7e3e5816) I pushed recently.\nAs elucidated in https://github.com/picocms/Pico/pull/297#issuecomment-161146348, I'm planning to release Pico 1.1 pretty soon (by way of comparison: #252 is 4 months old, v1.0.0-beta.1 1.5 months) - probably within the first quarter of 2016. @theshka, what's about https://github.com/picocms/Pico/pull/297#issuecomment-164336279?\nWhat do you think? (especially, but not exclusively, @theshka)\n. Yes, a completely refactored default theme is one of the key features planned for Pico 1.1, please refer to #270 for details. I'm even planning to use Pico for our website, but that's probably something for the more distant future than for Pico 1.1. Your help is, as always, very appreciated! :smiley:\n. Done :gift_heart: :smiley:\nI would like to thank all of you guys who made this possible, either by code and documentation contributions, general support, reporting issues, giving ideas or by participating in discussions, helping us to find the best solution. Pico and the community we built together are awesome, thank you!\nMerry Christmas :santa: and a Happy New Year 2016 :fireworks:\n. Works like a charm, thanks @dav-m85!\nIt took me a trial & error run to understand that it's not necessary (nor possible) to encrypt the GITHUB_OAUTH_TOKEN when using a env variable. Makes sense.\n@theshka, can you contact @picocms once again so he/she enables Travis? Step by step:\n- Go to https://travis-ci.org/ and authenticate using GitHub\n- Go to the profile page (https://travis-ci.org/profile/picocms) and enable the Pico repo. The repo may not be visible immediately (there's a yellow \"Syncing from GitHub\" badge on the top of the page), just refresh after a short period of time, giving Travis the chance to fetch all repos from GitHub\n- Click on the settings icon next to the enable button and enable the \"Build only if .travis.yml is present\" option\n- Add the environment variable \"GITHUB_OAUTH_TOKEN\". A token can be created by browsing to https://github.com/settings/tokens and clicking the \"Generate new token\" button. The only scope to select is \"public_repo\". Give it a description (e.g. \"automatic releases for picocms/Pico\") and generate the token. Use the shown token as value for the environment variable.\n@theshka, to prevent manual amendments we need to make sure to tag a commit with a nice commit message, e.g.\n```\nPico 1.0.0\n\n[New] ...\n[Changed] ...\n```\n. Great, it works, thanks @theshka, @dav-m85 and @picocms! Travis automatically added the repo to my dasboard and after pushing a commit, Travis automatically start building the PR.\n. I've moved the Website/Documentation ToDos to #323\n. Moved to PR #334\n. Looks good :+1:\n. Nice hack. Same for the theme, looks great! :+1:\n\nUnfortunately this reveals a practically relevant bug: The missing urlencode() in Pico::getPageUrl() (note to myself: It should be rawurlencode()...). Whereas the anchor sign (#) has the described, not so bad side-effect, ampersand (&) and question mark (?) break Pico - which one depends on enabled URL rewriting. Both are commonly used characters in page titles.\nTherefore @smcdougall, I've to tell you that we have to fix (remove) this with the final Pico 1.0.0 :unamused:\nBesides the possibility of writing a (unnecessary complex and very slow) plugin, I suggest you to use a toc meta header to implement TOCs. That's a pretty common solution for Markdown files. We're using the same technique on our website.\nExample:\n``` yaml\ntoc:\n    item-on-level-1:\n        _title: Item on Level 1\n        item-on-level-2a: Item on Level 2 (a)\n        item-on-level-2b: Item on Level 2 (b)\n    another-level-1-item: Another Item on Level 1\n\n```\ntwig\n<ul>\n    {% for sectionKey, section in meta.toc %}\n        <li>\n            {% if section._title %}\n                <a href=\"#{{ sectionKey }}\">{{ section._title }}</a>\n                <ul>\n                    {% for subSectionKey, subSection in section if subSectionKey != \"_title\" %}\n                        <li><a href=\"#{{ subSectionKey }}\">{{ subSection }}</a></li>\n                    {% endfor %}\n                </ul>\n            {% else %}\n                <a href=\"#{{ sectionKey }}\">{{ section }}</a>\n            {% endif %}\n        </li>\n    {% endfor %}\n</ul>\n. By the way: When a toc meta header is no suitable solution for you, please don't hesitate to tell us what you're trying to achieve, we'll find a solution :smiley:\n. Our website is unfortunately not realized with Pico, but with Jekyll (quite similar software, just worse... The reason why I'm saying this is not because I'm a Pico developer...). This is a compromise we had to make: our project has no server, so we're relying on GitHub Pages, what either supports static HTML pages or Jekyll. We decided to use Jekyll, even with its downsides it's better than maintaining static HTML pages.\nPico doesn't have something similar to Jekylls \"collections\" concept, as far as I can tell their only reason to exist is that you can't get the rendered contents of a arbitrary page with Jekyll. With Pico you have this ability (e.g. {{ \"sub/page\"|content }}). With Pico you can simply use any folder to realize what a collection does in Jekyll. Actually you're already doing this with your great widget system :smiley:\n. Thank you! If you have any question which is not answered in our docs, please don't hesitate to open a new Issue :smiley:\n. Done, thank you @smcdougall!\n. 1. Do you specify base_url and/or content_dir in your config/config.php?\n2. If yes, which are the concrete values (you can replace your domain by example.com)?\n3. Is it config/config.php or just config.php in Picos root dir?\n4. Can you please give me the output of the page when adding\n   var_dump($this->config, $_SERVER['REQUEST_URI'], $this->requestUrl, dirname($_SERVER['SCRIPT_NAME']), $this->currentPage['id'], $this->getPageUrl($this->currentPage['id']), $this->currentPage['url']); die();\n   to a new line before line 354 of lib/Pico.php? Please don't forget to remove the line afterwards.\n. Thank you @smcdougall for providing the debug information, the problem will be fixed in the next release! :smiley:\n. Don't worry about it, it's a developers daily business to fix bugs, so please keep pointing out any problem or question you come across! :smile: We are always very glad to receive feedback, it's highly appreciated and we love to see people using our work :smiley:\n. Hmm, what sentence do you mean exactly? The current content of the \"What's new\" section is meant to exist just temporarily and should be replaced completely. If someone experiences a problem while upgrading, he/she should refer to the \"Getting help\" section, use GitHubs search engine and open a new Issue when necessary. Solving all problems in a single Issue (at worst multiple problems at the same time) makes things just more complicated, or what do you think?\n. Ah, I see. The problem is that a ordinary user usually doesn't know how to differ between \"I have a question/a problem\" and \"This is a bug\" - it's up to the developers to decide this. #272 is a good example for this :wink:\nAs long as everybody knows the difference it indeed makes things easier, but as soon as a user reports a bug in this Issue, we get into a hell of a mess. Using separate Issues also makes the whole process a little bit more structurized and makes linking to a specific problem and its solution easier.\nPlease always link to the \"Getting Help\" section, as this section describes how a user can help himself first before creating a new Issue.\n. Screenshots shouldn't be necessary, the process isn't that complex. Furthermore, performing an update by deleting single files (i.e. cleaning up a existing installation) is extremely error-prone! That's the reason why I decided that users should backup their files (it also forces users to create a backup...), install Pico newly and apply their customizations (i.e. config, contents, themes and plugins) to this clean installation. Please note that the contents which are currently commented out are older than the currently visible contents!\nUnfortunately I even don't like the new structure, the reason behind splitting the page into two separate and equally entitled \"How to upgrade\" and \"What's new\" sections was, that this way a user understands at first glance that he has to read just the \"How to upgrade\" section to know what he has to do. With your suggestion he is also required to read the \"What's New - Changes for Users\" section - as a user, I wouldn't expect this and it probably results in many Issues like \"Why is {{ page.excerpt }} not working anymore?\" and \"disabling URL rewriting doesn't work\".\nPlease see the second paragraph of my comment in #268.\n. Yeah, you summarized pretty well what I personally see as a \"ordinary user\". However, @theshka and @picocms (and others) don't necessarily share my opinion :smile:\nMaybe we should go with your idea of having three distinct and equally entitled sections. The first section addresses everything a \"I'm neither creating custom plugins nor themes\"-user needs to know, the second section addresses everything a \"I have my custom theme\"-user needs to know and the third section includes the \"under the hood\" changes. The latter will be extended by the dev docs (_plugin-dev/upgrade.md). I don't know how these sections should be named (neither \"How to upgrade\" nor \"What's new\" fit...), maybe someone has a good idea...\nEnsuing from the old upgrade.md (this one), the first section is basically the \"How to upgrade\" section without its sub-sections plus the \"Ensure restricted access\" section and the part of the \"Routing system\" section talking about Markdown files. The second section basically consists of the remaining contents and the other half of the \"Routing system\" section. The third section needs to be added.\nDo you think this is a good plan? :smiley:\nbtw @theshka, what do you think about this?\n#edit: btw, do you know that GitHub automatically deploys your changes? You can find them here: http://smcdougall.github.io/Pico/upgrade.html (internal links are always broken, you must change the URL manually to navigate to different pages)\n. Sounds reasonable, I look forward to your concrete suggestions :smiley:\n. I'm also tending to keep the upgrade instructions in upgrade.md. Sure, they are quite redundant, but keeping them makes it easier for users and allows us to refer to additional/optional steps, like changing internal links to meet the new routing system. Furthermore it would be just absurd when a user has to visit another page to get this information, for all that he is on a page called \"Upgrade Pico 0.8 or 0.9 to Pico 1.0\"... :trollface: \nI have qualms about moving the contents of the \"How to upgrade\" sub-sections (\"Routing System\", \"Drop of {{ page.content }}\" ...) to \"What's new\" without considerable changes. They are currently very clearly written in a \"What to do\" manner instead of \"We changed ...\". That's the main difference between the \"How to upgrade\" and \"What's new\" sections - the first provides guidance, the latter is \"fyi\". Since we need these instructions anyway, we shouldn't change anything here.\nFollowing this, we should think about another approach. The \"How to upgrade\" section could be divided into \"for just Markdown-editing users\", \"for theme designers\" and \"for plugin developers\", although the latter just links to plugin-dev/upgrade.md. The \"What's new\" section doesn't make any differentiation hereof.\nAs a result we have something similar to:\n- How to upgrade?\n  - ... for users\n    - General instructions\n    - Routing system\n    - Ensure restricted access\n  - ... for theme designers\n    - Routing system\n    - Drop of {{ page.content }}\n    - Drop of {{ page.excerpt }}\n  - ... for plugin developers\n- What's new- Initialization\n  - Routing system\n  - Plugin system\n  - Backward Compatibility\n  - The Small Beads\n  - Changelog\n. @smcdougall: Yes, a short hint about the \"Drop of{{ page.content }}\" and \"Drop of{{ page.excerpt }}`\" sections in Step 5 is reasonable, just like we do it in Step 4 for the Routing System. I'll take a closer look in the next days, but it seems pretty good at first glance :+1: :smiley:\n. Pico 1.0 is backwards compatible to Pico 0.9 and 0.8, so old plugins should still be fully functional.\nPico 1.0 introduces a brand new routing system that is now compatible to any webserver. Even URL rewriting has become optional. Anyway, many old plugins (especially those which add new \"pages\" like Pico_Sitemaps sitemap.xml) don't know anything about this new routing system, so they still require you to enable URL rewriting.\nBecause you're asking about those \"weird looking\" URLs like http://example.com/?sub/index, I assume that you haven't enabled URL rewriting. Please make sure to also upgrade Picos .htaccess file and any other rewriting rules you configured in your webserver.\nPlease refer to the upgrade tutorial on our website, Pico's .htaccess file and the corresponding section in the docs.\n. You must set $config['rewrite_url'] = true;in your config/config.php (as stated in the docs), not false (false = \"don't rewrite URLs\"). The Pico_Sitemap plugin works just fine with Pico 1.0 (even without @theshka updates), I tested it myself.\n%2F is a side-effect of the routing method we use, it's a technical requirement, otherwise the URLs would be invalid. You wouldn't see this with enabled URL rewriting.\n. We unfortunately can't help you when you don't give us some more information. As said previously, the plugin works just fine here.\n1. What exact plugin are you using? Is it https://github.com/DaveKin/Pico_Sitemap?\n2. What happens when you browse to http://example.com/sitemap.xml - a PHP error, a empty page, the 404.md is shown?\n3. Does http://example.com/?sitemap.xml work?\n4. Can you still access your page contents?\n5. Do internal links in your navigation look like http://example.com/?sub/page or http://example.com/sub/page?\n6. When you browse to http://example.com/sub/page, does the desired page show up? If not, what shows up?\n7. What PHP version are you using? Did you check the error.log of your webserver?\n. This isn't related to Pico, please refer to your webhoster (i.e. cloud9 customer service).\nWhen browsing to the URL you provided, there's a fully functional Pico installation, including the Pico_Sitemap plugin. If you have any other problem or question, please don't hesitate to reopen this issue.\n. Sorry, I thought it would be faster when I make the necessary changes by myself instead of listing all steps. Great idea anyway :+1: It works just fine now :smiley: See https://travis-ci.org/PhrozenByte/Pico/jobs/92800594\n. What a ordeal... Complexity exploded... But works great. See regular commit build and release build. Or see below :smile:\nThe branches to build are configurable by the comma-separated env variable DEPLOY_PHPDOC_BRANCHES, what can be modified using the web interface.\n. Thanks :smiley:\nI actually didn't take a closer look to the doc changes yet, I'll catch up on this in the next days.\n. I don't think it's necessary to describe the build & release process in such detail, especially not what Travis automates for us - one can look into the .travis.yml to find out the exact steps. A short paragraph like\n\nWe're using Travis CI to automate the build & release process. It generates and deploys phpDoc class docs for new releases and on every commit to the master branch. Travis also prepares new releases by creating Pico's pre-built packages and uploading them to GitHub. You can trigger this process by pushing a new Git Tag, what references a (usually empty) Commit which message follows the following template: ...\n\nshould be sufficient. The \"Analysis phase\" actually isn't relevant for the build & release process (why should one draft a new release on a previously failing build? :smile:). The manual steps should be in continuous text, the whole section seems so overwhelming otherwise. Btw, we always have to amend the release on GitHub, see https://github.com/picocms/Pico/issues/268#issuecomment-154492172.\n. I've added PHP_CodeSniffer, it basically tests code submissions against PSR-2 coding standards. Any comments about it?\nThank you for your amendments, it's now very close to perfection! :+1: :smiley:\nI've converted the Issues template to continuous text and slightly updated the build & release process section. I hope the changes are okay, can you please approve them? If this is the case, you can merge the PR afterwards. :smiley:\n. The Travis build fails (i.e. shows a warning, but doesn't correct anything), but still executes all subsequent commands of the script section. See https://docs.travis-ci.com/user/customizing-the-build/#Customizing-the-Build-Step:\n\nWhen one of the build commands returns a non-zero exit code, the Travis CI build runs the subsequent commands as well, and accumulates the build result.\nIn the example above, if bundle exec rake build returns an exit code of 1, the following command bundle exec rake builddoc is still run, but the build will result in a failure.\n\nBecause we don't have any subsequent commands in the script section, it actually stops after a failure, i.e. Travis neither updates the docs nor deploys new releases. This actually is intended, some checks of PHP_CodeSniffer are fatal (e.g. PHP parse errors), very serious (e.g. the deprecated or performance warnings) and I personally even consider PSR-2-violations as a contradiction to our \"deployable\" requirement when pushing to master.\n. Pico isn't able to find the content dir you specified. Is your config.php located in Picos root dir or in config/config.php?\n. Can you please give me the output of the page when adding\nvar_dump($this->config, file_exists($this->getConfig('content_dir') . '404.md')); die();\nto a new line before line 354 of lib/Pico.php? Please don't forget to remove the line afterwards.\n. The content directory /var/www/pico/content/ doesn't exist. Please check your installation directory.\n. PHP unmistakable states that the directory /var/www/pico/content/ either doesn't exist (scandir(/var/www/pico/content): failed to open dir: No such file or directory - i.e. your screenshot doesn't show /var/www/pico) or isn't visible to the PHP process.\nThis is a misconfiguration of your webserver. Please check your webserver configuration (this issue is completely independent of Pico) and make sure that the directory is accessible by your webserver/PHP process. Unfortunately the configuration of webservers is out of our scope. Sorry :disappointed:\n. The problem weren't wrong permissions of the content dir, but of Pico's root dir - otherwise the message would have been Permission denied, not No such file or diectory.\n. Works just fine for me. Double-check your template, it's very likely that there's a typo or syntax error in your Twig template causing this.\n\n. Ah, I see, I completely overlooked the \"in .md format\" part. My bad, sorry.\n@theshka: erusev/parsedown-extra unfortunately seems to be a little bit abandoned regarding the deployment of new releases. We can either switch back to dev-master in our composer.json or draw attention of @erusev to this, a new release definitely makes things easier and is more reliable (beckon @erusev :wink:)\n@edDimensi: This is a bug in a upstream project Pico uses. As a temporary fix you can replace your vendor/erusev/parsedown-extra/ParsedownExtra.php with the current development version of erusev/parsedown-extra.\n. No, we'll close this as soon as we have a \"real\" (non-temporary) fix :smiley:\n. @erusev: Thank you! :smiley:\n. Yes, we'll promote your theme on the website. At the moment I'm not sure where and how, but we'll find a good place for it :wink:\nPutting you theme on GitHub is a good idea in general, this way it's very easy for us to give you feedback and you can receive feedback from your users. I'll (maybe @theshka too) look over it by then.\nThe toc header isn't standardized or something, it's just a pretty widely known, reasonable solution to solve this problem. I think I found it a long time ago on Stack Overflow, but unfortunately can't give you a concrete URL.\n. Can you please provide us the contents of the files composer.lock, vendor/composer/autoload_namespaces.php and vendor/composer/installed.json?\n. Hmm... composer installed Pico v0.9 instead of the current v1.0.0-beta.1. Can you please also provide your composer.json? When did you run this installation?\n. I'm not referring to Pico's composer.json at vendor/pico/picocms/composer.json, I need your custom (root) composer.json.\n. There it is :wink:\nYou can't use plugins for Pico 1.0 with Pico 0.9 and older. We highly recommend you to upgrade to the current v1.0.0-beta.1.\n. The page shouldn't contain plugins/themes for Pico 0.9 at all\n. With the release of v1.0.0-beta.1 I personally dropped support for Pico 0.9 :wink:\n. See 2a33837. We should remove the Pico 0.X Plugins section with the final release of Pico 1.0.0.\n@smcdougall: You can give us a one-sentence-description of your theme and we'll add it to the website :smiley:\n@theshka, regarding support of Pico 0.9: I don't see any advantages in supporting an old version of Pico which has known flaws and problems, or what do you think?\n. @smcdougall: Done\nApart from that I completely agree with @theshka's remarks. I know that my statements often seem to be a little bit \"cold\", but please don't be surprised about that, I'm no english native speaker, I try to do my best :wink:\n. First of all: Thank you for your contribution/PR!\nUnfortunately I can't see a use case where this is actually a problem. When you use Pico as a dependency, why would you call vendor/picocms/pico/index.php directly? Wouldn't you rather copy it to your projects root directory (i.e. the httpdocs dir of your webserver)? Wouldn't you furthermore change Picos config, plugins and themes dir to bypass the need to change anything inside your vendor directory? I would say (we should discuss this @dmelo, @theshka) that Pico's default index.php is intended to be used for standalone installations and as an example for people using Pico as a dependency, not for calling it through vendor/picocms/pico/index.php. What do you think?\n. Hmm... Okay, basically this seems to be a valid use case.\nUnfortunately I'm not very pleased with the idea of haphazardly looking for a autoload.php in ../../../vendor/ - a application should never assume anything about the directory structure below its own root directory, this can drastically go wrong and even cause security problems. Hence we need a way to safely distinct between a regular standalone installation and the use as library - but without heavily increasing complexity.\nJust to be clear: We absolutely want to support the use of Pico as library, that's the reason why we specify \"type\": \"library\" instead of \"type\": \"project\" in our composer.json. Any ideas?\n@dav-m85, as our packagist/composer/travis specialist, do you have an idea?\n. The examples are a rather unfortunate choice (ZFTool and Behat are \"binaries\", thus they are usually used through vendor/bin anyway; LassoMultilogBundle shows the bootstrap script for unit tests; Baun also expects just vendor/autoload.php), but howsoever, you're completely right when saying that others do it that way. Nevertheless I think it's a very very bad idea to do it that way... :wink:\nIt's furthermore a little bit self-contradictory: we try to work around a non-default use case by assuming defaults - just consider a \"config\": { \"vendor-dir\": \"a-custom-vendor/path/\" } in the composer.json of the root project.\n. Pico doesn't take this into account, it simply doesn't work :smile: As far as I know it's not possible to get any information about composer on runtime, especially not without knowing where the autoloader.php is. But maybe I'm just missing something... Maybe someone else knows more.\n. I'll merge your PR, albeit grudgingly. It seems to be the only solution, even this still remains a very bad practice and possible security flaw (we, at least, can pin to composer...). Anyway, that's not your fault, thanks for your contribution @dmelo! :+1: :smiley:\n@theshka, I'm thinking about adding a different index.php without path searching for our pre-built packages (i.e. a index.php.dist that is added as index.php to our release packages on Travis). What do you think?\n. \n. You're not using Pico's Twig_Environment (onPageRendering()'s $twig parameter), but your own Twig_Environment ($twig_editor), that simply doesn't know Pico's custom filters. The reason for this might be the need of another Twig loader (specifically a Twig_Loader_Filesystem instance pointing to the plugins template dir), but that's no good solution anyway. Call $twig->setLoader($loader) instead, change $twigVariables and $templateName appropriately and remove the echo $twig_editor->render() and exit calls (same applies to @theshka's fork btw :wink: :smiley:)\n. I have planned to write a admin plugin from scratch for Pico 1.1, just fyi. :wink:\n. @Lomanic: I don't have a concrete plan yet, just telling the necessity to do it. I think building a new admin plugin from scratch gives a better result. Your ideas sound excellent. It would be great if you take care of this! :+1: :smiley:\n. Thanks @joshas for the hint about the .git dirs, reduces archive size from 8.41 MB to 339 KB  :flushed:\nbtw: The only difference between the release archives and Pico's source code actually is the additional vendor dir, so - as instructed in our README.md, the user docs and on the download page - you can safely download the source code and run composer yourself. :smiley:\n. Yes, this is a known problem. Unfortunately I've absolutely no idea how to work around this: What behavior would you expect? Silently ignoring it? The result would be that this page has no meta data, so e.g. the page title is empty (we could at least fallback to the filename), but I think hiding such problems makes the situation worse.\n. No, it's not the regex, the exception is thrown by the Symfony YAML parser. Any thoughts about the expected behavior (also @theshka)?\n. @theshka: I don't think that this was on purpose, more a typo. Anyway, we should link to the YAML specs somewhere, like we already do for Markdown and Twig. I've added this in 6cb378e.\nI personally don't want to add  comprehensive error handling to Pico, it increases complexity without any advantage for ordinary users. Plus, there's no big difference between showing an exception (or a white page on production systems with disabled display_errors - this is intended!) and a \"nice\" fatal error page.\nThis doesn't mean that we shouldn't work around recoverable (non-fatal) errors, especially errors which occur while normal usage (like this one). As far as I can tell at the moment, we have three options:\n1. Do nothing, just keep throwing the exception\n2. See #293\n3. See #294\nWhat do you think?\n. This would heavily increase complexity, therefore: No. display_errors is a php.ini config, this is non of our business :wink:\n. Fixed with the merge of #294. Thanks @AeonFr for reporting! :+1:\nAlso thanks @theshka and @smcdougall for giving feedback!\n. Since Pico 1.0 the meta data of all pages is available through $pages, therefore you can read the error string via $pages[...]['meta']['YAML_ParseError'].\nHowever, you can't do anything meaningful with it :wink: The only use case I can think of is highlighting the malicious page in a admin plugin...\n. Looks great! :+1: :smiley:\n. @theshka, can you please look through the changes and merge the PR afterwards? Thanks! :smiley:\n. :+1:\n. We're not in a hurry with this, the current default theme is not broken or something. Pico 1.1 will follow Pico 1.0 pretty soon. It's quite contradictory to tell people that Pico 1.0 is fully backwards compatible to Pico 0.8 and 0.9, and simultaneously changing any recognition value... A new theme btw breaks compatibility!\nAlso: Don't forget that Bootstrap 4 is alpha!\n. What's the reason for closing this PR and deleting the branch? Postponement is not abandonment :wink:\n. Sure, I don't see any reason to start over, you did a great job, it's just a little bit too early to merge :smiley:\n. @joshas, can you please elaborate on why you think Bootstrap is too \"heavy\"? Even it is currently implemented different, we're planning to use the Bootstrap theme as default and dropping the current default theme in Pico 1.1.\nBootstrap is widely known and a \"fully featured\" framework, something we cannot say about Pico's current default theme. Our default theme's concept is kind of \"throw me away and build something own\", Bootstrap gives users something to work with for their own website. With \"Use Bootstrap\" we don't wanna say that we will use a vanilla Bootstrap theme, @theshka's current work already looks different.\nedit: To emphasize this: I don't insist on using Bootstrap, it's all about giving users something to work with.\n. Hmm... Quite reasonable arguments.\nFirst of all: Templates. I dare say you're right that we should keep the templates as simple as possible, i.e. spare includes and generally minimize the number of templates. Probably one or two templates are sufficient, e.g. a index.twig and a blog.twig to accomplish the desire for supporting blogging (at least basically). A complex template structure like the one we're using on our website definitely confuses beginners. This also increases customizability.\nSecond: Stylesheet overhead. Sure, Bootstrap has a large footprint. When assessing this, we should think about what we actually want to achieve first. Personally I'm completely focusing on the question: \"How can we give users something to work with?\". But what does that mean?\n- Users need something with which they can layout their website. Bootstrap's grid system is a pretty good solution for that.\n- Users shouldn't care about styling fundamental HTML elements, like headers, text (typography in general), lists, tables, code, images, etc. - basically everything Markdown supports without using HTML. Important to mention: Out of the box! This is something Bootstrap only provides partially, e.g. tables require a .table class to be styled. That's a problem...\n- Lastly there are some features quite every website needs - like a navigation component, buttons and forms.\nThat's it. We don't need Bootstrap's JavaScript features like modals and dropdowns, we don't need badges, labels, progress bars or panels. Bootstrap actually allows custom builds, so reducing Bootstrap's footprint is possible - at least in theory. But this increases our problems about how we can keep Bootstrap up to date.\nWhat do you think about that?\n. Starting with Pico 2.0 there will be a completely refactored default theme with heavily simplified templates and stylesheets (please refer to https://github.com/picocms/Pico/pull/334#issuecomment-237041996 and https://github.com/picocms/Pico/pull/334#issuecomment-237077916 for details). Pico's new default theme includes styles for all fundamental HTML elements, is very easy to extend and is a perfect starting point for users to create their own theme. I think this is sufficient for our goals (as elucidated above).\nHowever, Bootstrap still is a widely known and \"fully featured\" framework many people would love to use. Thus I made the decision to create a official bootstrap theme with the typical Bootstrap + jQuery + Font Awesome troika before releasing Pico 2.0 (#334). Naturally we'll feature the theme on our website (http://picocms.org/themes/). Please stay tuned!\nThanks @theshka for your awesome work! \ud83c\udf89 I'll use most of it for Pico's new official Bootstrap theme. Also thanks to all other commenters for their feedback! :+1:. This feature will be shipped with Pico 1.1, see 00603f6 for implementation details. For feedback about this feature, please refer to #334. Thanks @smcdougall for bringing this up!\n. It neither has any advantage nor disadvantage to delete the content-sample folder, it's just usually re-created when updating Pico. However, your suggestions sound reasonable, we're looking forward to your PR :+1: :smiley:\n. This is intended behavior. However, with Pico 1.0 we completely overhauled initialization, therefore it's very easy for you to realize such a shared Pico instance by yourself. Simply create a custom index.php by copying Pico's original one and changing line 16 to something like dirname($_SERVER['SCRIPT_FILENAME']).\n. As our CONTRIBUTING.md states, the inline user docs must follow a hard line length of 80 characters. This improves readability in text editors. This inconsistency to the user docs on our website is due to technical reasons. A automatic syncing technique isn't desirable, the inline user docs should be an abstract of a much more extensive user doc on our website, what is just currently missing. Thanks for your PR anyway :+1:\n. Thank you @smcdougall :+1:\n. It wasn't intended that adding custom query data to an URL wasn't supported, so I've added a sane way to do this in 0c85d70. We probably will never support reading query data generically and without plugins, as this would introduce serious security issues ($twigVariables[...] = $_GET; unfortunately is no good idea). Input validation is hard - even for experienced programmers. It's nearly impossible with Twig. I'll reason this in detail when I have time for it, we can discuss the advantages and disadvantages after that. Sorry :unamused:\n. Just a note/hint to myself for later elaboration of a possible solution: Allow registration of scalar query string parameters.\n. I'll have a solution or at least a detailed explanation in the next few weeks, together with Pico 1.0.1 and first dev versions of the promised plugins for Pico 1.1 (see #270) :smiley:\nNotePaper looks great btw! :+1:\n. The blogging plugins will not make your work obsolete (the plugins will be very minimalistic, \"stupidly simple\" applies to official plugins, too :smile:), just a small portion of it and even this doesn't mean, that you have to remove it from NotePaper - you can keep it as fallback. :smiley:\nAdditionally, there's no decision made whether official plugins are distributed together with Pico or not. I'll start a discussion about this in an new issue when I've formed a initial opinion about it.\n. This feature will be shipped with Pico 1.1, see a74db1d for implementation details. This feature has furthermore been backported to Pico 1.0 using a (official) plugin, see PhrozenByte/pico-http-params for details. For feedback about this feature, please refer to #334. Thanks @smcdougall for bringing this up!\n. By the way: The gradient is cut off on purpose, letting the gradient span over the banner - even with a radial gradient - makes it look a little odd, isn't it?\n\ncss\n.top-wrapper {\n    background: radial-gradient(farthest-side at top left, #2eae9b 120px, #2a2a2a 40%);\n}\n.top-wrapper header { background: transparent; }\n.top-wrapper .banner .slotholder { opacity: 0 !important; }\n. Great idea, I've added the border :+1: :smiley:\n. Fixed in v1.0.0 (will be released tomorrow). Thank you for reporting this! :+1:\n. I think we should reconsider the use of the pri: Normal and status: In Progress labels to reduce the number of used labels per issue (i.e. remove these labels). They are some kind of \"default\", thus it imo makes sense to only tag an issue with a pri and status label when its priority/status isn't the default. @theshka, what do you think?\n. Resolved by 2ac189d670bea1cc2dafdbb1fc094859b598d37d, see http://picocms.org/phpDoc/\n. Great work! :+1:\nHowever, for reasons of clarity and comprehensibility, I suggest a approach that is a little bit different. Instead of listing all labels from top to down, I think it is meaningful to describe just the type labels this way. All other labels change their meaning in conjunction with a type label - partially significantly.\nExamples:\n- The usage rules of pri: High are very strict for type: Bug (security and showstopper bugs only), but this isn't the case for type: Idea/type: Enhancement/type: Feature, where they can be used nearly highhanded.\n- Whereas we never label a type: Bug with status: Rejected (we either use status: Conflict, status: Won't fix or type: Invalid instead), status: Rejected is completely fine with type: Idea/type: Enhancement/type: Feature\n- status: Won't fix is exclusively used with type: Bug, status: Pending Merge only with type: Enhancement and type: Feature pull requests\n- ...\nThere are many more rules like this, so this would result in a quite big list of limitations, exceptions and dependences, what makes it very hard to understand. I gave a rough outline in the second paragraph of #308. However, using a table instead of a list seems to be a good idea.\n. Picos's plugin system is very powerful and allows various solutions for this problem. I think the one you have chosen (prefixing the request URL with HTTP_HOST) already is one of the best possible solutions, because it changes the way Pico handles requests least. Actually you just have to move your code from index.php to the onRequestUrl event:\nphp\nclass HostBasedContentsPlugin extends AbstractPicoPlugin\n{\n    public function onRequestUrl(&$url)\n    {\n        // we don't have to validate this user input here,\n        // Pico already assumes $url to be possibly poisonous\n        $url = $_SERVER['HTTP_HOST'] . '/' . $url;\n    }\n}\nThis allows you to use domain-based contents, if you rather want to use Pico as a \"full\" multi-domain installation with even different configs, plugins and themes, please refer to #254 and #301.\n. Please don't forget that $_SERVER['HTTP_HOST'] is user input and needs validation! As long as your webserver configuration doesn't prevent this as a side-effect, users can exploit this by sending malicious contents (like ../../../../some/folder/you/dont/want/to/be/readable) as Host header.\nMy example avoids this by just modifying the request URL, what is user input as well and therefore gets validated by Pico.\n. The date on a copyright notice specifies how far back the copyright claim is made, therefore it is the date of first publication.\n. Using composer isn't possible, composer archive doesn't include the vendor directory (maybe just because it respects Pico's .gitignore, however, this doesn't change anything) and composer furthermore doesn't seem to allow executing composer install in a composer script... :confused: Anyway, it simply doesn't suit our needs.\nSee 827be2c for implementation details.\n. Due to some strange TLS bug in Ubuntu 12.04 LTS used by Travis CI, we cannot access shields.io using HTTPS. Downgrading to SSLv3 would have avoided this problem, but SSLv3 is disabled due to the POODLE attack. shields.io requires HTTPS. At the moment I don't have any idea how to solve this...\nDownloading badge...\n--2016-01-14 15:07:30--  https://img.shields.io/badge/release-test-blue.svg\nResolving img.shields.io (img.shields.io)... 104.18.44.160, 104.18.45.160\nConnecting to img.shields.io (img.shields.io)|104.18.44.160|:443... connected.\nOpenSSL: error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure\nUnable to establish SSL connection.\n. After playing around a little bit with a Ubuntu 12.04 LTS virtual machine, curl came to my mind... I've absolutetly no idea why curl works, but wget does not (it's an issue with OpenSSL and both use it the same way...), but anyway - it works!\nSee Travis job #96.1 and 613a362 of PhrozenByte/Pico for an example. As always, feedback is appreciated! :smiley:\nNote to myself: Before merging this add both the license and initial release badge to badges/pico-{license,version}.svg of our website/gh-pages branch.\n. I'm a little disappointed with the extent of feedback :disappointed:\nWe mean \"feedback is appreciated\" absolutely serious, this is no empty phrase! Pico is a community project!\n. Your feedback definitely means something! I don't think that feedback can ever get \"annoying\" or out of any use. Every feedback is helpful. It either endorses our current idea or forces us to view things different - what eventually encourages new, better ideas. Even if we didn't share the opinion ultimately, we took it into consideration. Feedback is a prerequisite for finding the best solution. Even when you can't add something concrete to the solution of a problem, you can still give feedback regarding the need for a fix or what your approach would be to find a solution. This is even true for :+1: or :-1: comments, they tell us whether we're on the right track or not.\nIn general, one can say that when there's a  label, you can't ever do anything wrong with commenting on it. This is actually also true for issues without this label, but with this label, we particularly ask for feedback. :smiley:\nMaybe we should add these communication principles to our CONTRIBUTING.md :smile:\n. Thank you for your feedback @Crank1d! :+1:\nI did not really understand what data you're suggesting to store in these XML files. Pico leaves page presentation (i.e. how a page in a specific folder (e.g. blog) looks an behaves) completely up to themes. For example, @smcdougall's NotePaper theme interprets content files differently based on YAML headers (e.g. NotePaper's widget feature or blog articles). NotePaper specifically also allows you to set a Tag meta header and lists all pages containing a specific tag (so implementing categories shouldn't be a problem either).\nAs far as I understand your suggestion right, Pico already allows you to do something like this - it just doesn't require you to create a separate XML file, you can simply store that information in the YAML header of the content file.\n. As far as I understand Grav's documentation right, blueprints are about metadata for plugins and themes, not about pages. Pico has no administration backend. We're indeed working on a editor plugin for Pico 1.1 (see PhrozenByte/pico-admin), but that's rather a \"enhanced\" text input field. Much more \"administration backend\" is in contradiction to Pico's \"stupidly simple\" goal (what isn't limited to the user-side, but also Pico's sourcecode).\nPico doesn't have a \"parent-child\" relationship of pages in the narrow sense. When it comes down to \"folder-specific meta data defaults\": Pico absolutely allows you to do something like this, e.g. by creating a _meta.md file and adding its meta data to all other pages in this directory by using the onPagesLoaded event with a very simple plugin. Apart from that, Pico leaves the directory structure completely up to the user and maybe a custom theme that interprets the directory structure to do something special (like listing all pages in categories).\n. > Just a thought... If you wanted to add the feature sooner, it'd probably be easier to make the \"static website generator\" a manual process for the initial implementation.\nActually it's already possible to use Pico as a static website generator - simply use wget -r to recursively get a static version of the website. Whether the result is usable or not depends on what plugins have been \"installed\". The primary target of this feature actually is caching the HTML results to boost performance, using Pico as static website generator is just a side benefit.\nThe decision to use Jekyll was made before I knew about what power Travis gives us. So, if you want to do a little research whether we can use Pico 1.0 instead... That is something which I would greatly welcome. :wink: :smiley:\n\nMaybe you'd want them to be two separate components anyway. A \"worker\" that builds the static site and an optional \"watcher\" daemon/process that provides the file tracking and automation.\n\nI haven't thought about a concrete implementation yet. So, yeah, maybe :wink:\n\nWhat about having some kind of performance monitoring in Pico?\n\nWe'll keep this in mind (I've added it to the list above), but at the moment there are some ToDos which will boost performance significantly (Markdown cache, lazy loading of pages...), so it IMHO doesn't make much sense to publish performance stats when we already know that we can do much better.\n. A plugin developer shouldn't be able to replace the Markdown parser with something different (what would be possible with a Pico::setParsedown() method). Unfortunately I don't have a ironclad solution either. You can find my current ideas in #317 (3rd item of \"Event system\"). I really appreciate your feedback about those ideas!\n. We'll implement this feature by adding a new onParsedownRegistered(Parsedown $parsedown) event to Pico 1.1. Please refer to #334 for further discussions about this.\n. Thank you for your bug report! Starting with Pico 1.1 we'll ship a brand-new, official admin plugin developed from scratch, so please stay in touch. Please don't be confused that I'll close and label this issue as Invalid - it doesn't affect Pico's core. However, as said, we'll address this in our upcoming new admin plugin. :smiley:\n. Any GitHub user can edit our Wiki - if you have something to share, please go ahead and add it to the plugins/themes list! :smiley:\n. Thank you for reporting this! :+1:\n. Thank you for your bug report! This turns out to be a misconfiguration of your PHP installation. Please check your php.ini and set the date.timezone option to a appropriate value. We'll suppress this warning in Pico 1.0.1. Additionally, Pico requires PHP's mbstring extension due to parsedown, the Markdown parser Pico uses. Please make sure to use a PHP installation with mbstring enabled.\n. @smcdougall: See http://picocms.org/docs/#upgrade resp. https://github.com/picocms/Pico/compare/13c5255d376612d748430d2bc5281813d14c920d...484afa03265d4a24f7eb594d5d60448da322cef9\nProbably not the final solution... However, I don't like how we present our documentation in general - apart from its content-related shortcomings... Unfortunately I've no idea how to solve this. I don't have time to substantially extend and revise the docs... :disappointed: \n. Yeah, I don't really like the solution either, but it was the best I could accomplish without changing everything :smile:\nThe problem is that I don't have a real direction either. The docs just seem to be unsatisfying in whole. The only sections I really like are the parts taken from the README.md (Install, Upgrade, Run - they should be as short as possible to give users a clue about how easy this whole process really is - and most of Contributing and Getting Help), the upgrade.md and the things of nginx.md I've read so far (I'll read it in whole after you've finished it btw :smiley:)... Everything else (i.e. the things taken from the inline user docs) seem... just abridged (don't get me wrong, they're fine for the inline user docs and as kind of example content, but not for our real user docs).\nThere should be much more content about how to create pages, what Markdown is, the %\u2026% placeholders, how pages are accessed, how to manage assets, how the meta header works, what YAML is (I don't know a single good YAML tutorial :unamused:) - and the completely missing developer docs (at least we've something about how to create themes in the regular docs... even though very superficial... but we actually have nothing about how to create plugins). To sum up: Everything. :unamused: \nRegarding the \"how to present the docs\": I like https://readthedocs.org/. But we don't have the content to split it up into many subpages... Despite the fact that the current docs are actually too long and to varied for a single page.\n. Sorry for the delay, I wanted to read the final version of the nginx docs first.\nYou've written so much, but I'm not sure what to answer other than \"Yes, you're completely right\" and \"Full ACK\" :smile: As said, I like your nginx docs and thus also the writing style. As a non-native speaker (who mostly writes in English rather than actually speaking it :wink:) my language surely tends to be a little more sterile. A little more personality definitely is a good idea. :smiley:\nStarting with a page about \"What Pico is\" is a great idea! :+1:\n. New:\n- Use Webpaint portfolio (\"Showcase\") to re-implement customization.md with extended information about and screenshots of all plugins and themes\n  - Use distinct data files (_data/plugins.md and _data/themes.md) to make adding plugins/themes much easier\n  - See phpDoc.html and _data/phpDoc.md as a reference\n  - Look through the wiki to include more plugins and themes\n. > Food for thought, but would a \"History of Pico\" page be something you think would be interesting?\nSure, why not? :smiley:\n\nWhat about a page called \"Upstream Projects\" that lists and goes into some detail about which upstream projects Pico is built on? I don't think this information is actually listed anywhere at the moment...\n\nThey are listed in Pico's composer.json :wink: Don't know whether regular users care about this. However, the projects should be mentioned in the corresponding docs sections (i.e. Parsedown in the \"Text File Markup\" section). Apart from that we could include their logos somewhere... Maybe a \"Thanks\" page or something like that, could be supplemented by a list of Pico's contributors (see e.g. http://twig.sensiolabs.org/contributors).\n. @smcdougall: See https://github.com/picocms/picocms.github.io resp. https://picocms.github.io/\nI think that I've changed every reference to the gh-pages branch, but the four-eyes principle is probably a good idea here...\n. > When will picocms.org point to the new repo?\nSoon, I'll contact @picocms to migrate the domain.\n. Hmm... I was wondering, should we manage Issues regarding Pico's website (including Pico's docs) here or in the picocms.github.io repo? What do you think @smcdougall?\n. > lol, I figure that would be part of the process. Good luck with that.\nNo, this shouldn't be a problem anymore, I was able to contact him. :smiley: He did it already, http://picocms.org/ is now served by the picocms.github.io repo.\n. The gh-pages branch is now officially abandoned in favor of the picocms/picocms.github.io repo, see 5956c50. Please have an eye on broken links, images, references to the gh-pages branch or similar.\n. @smcdougall: Since you finally are a Collaborator, do you want to take responsibility for the website and the docs? Just making things \"official\" which are already reality. :laughing: Naturally, I'll still read most Issues and PR's, and give feedback when I think it is necessary (especially when you tag/mention me/ask for feedback), however, I would like to hand over the \"daily work\".\n. Since there are no open discussions I'm moving this to picocms/picocms.github.io#7 :smiley:. Yes and no. :wink:\nYou can't prevent Pico from parsing a page (doing so is planned for Pico 2.0, see #317; feedback is btw highly appreciated), but it makes no difference whether you discard the output of the 404.md or any other page. Instead of hooking into onPageRendering, hook into onPageRendered and replace $output.\nOff Topic: Provided that you don't do anything else in your onRequestUrl hook, you can replace it with a simple Pico::getRequestUrl() call in onPageRendered.\nYour plugin could then look like the following, neither a ajax.md nor a ajax.twig required. :smiley:\n``` php\nclass PicoAjax extends AbstractPicoPlugin\n{\n    public function onPageRendered(&$output)\n    {\n        if ($this->getRequestUrl() === 'ajax') {\n            // query goes here, which returns JSON list\n        header($_SERVER['SERVER_PROTOCOL'] . ' 200 OK');\n        header('Content-Type: application/json');\n        $output = json_encode($query);\n    }\n}\n\n}\n```\n. Thank you for your feedback! This summarises my plannings for Pico 2.0 pretty good, so please stay tuned :smiley:\n. Thank you for pointing this out @coofercat! :smiley:\nJust to re-emphasize this: Please don't forget that \"PHPs built-in web server is for development and testing purposes only\" (see Pico's README.md/user docs). The PHP manual additionally says:\n\nThis web server was designed to aid application development. It may also be useful for testing purposes or for application demonstrations that are run in controlled environments. It is not intended to be a full-featured web server. It should not be used on a public network. \n. A plugin was never required to do something like this :wink:\n\nYou can implement arbitrary deep tree navigations completely without a plugin using Twig. You could either use recursion (refer to Twig's macro feature or simply use includes; for an example see our \"Recursive table of contents\" cookbook entry; basically you just have to port the plugins sourcecode to Twig) or an iterative algorithm (any recursive algorithm can be implemented using just iterations :smile:).\nHowever, usually you don't want arbitrary deep tree navigations anyway. You're probably searching for a navigation that supports child items (i.e. two levels max). This is pretty easy to implement:\n``` twig\n\n    {% set parent_page = null %}\n    {% for page in pages if page.title %}\n        {% if parent_page and (not (page.id starts with parent_page)) %}\n            {% set parent_page = null %}\n            \n        {% endif %}\n    <li{% if page.id == current_page.id %} class=\"active\"{% endif %}>\n        <a href=\"{{ page.url }}\">{{ page.title }}</a>\n\n        {% if (not parent_page) and (page.id ends with '/index') %}\n            {% set parent_page = page.id|slice(0, -6) %}\n            <ul>\n        {% else %}\n            </li>\n        {% endif %}\n{% endfor %}\n{% if parent_page %}</ul></li>{% endif %}\n\n\n``\n. You mean [Twig'sinclude](http://twig.sensiolabs.org/doc/tags/include.html)?\n. Do you really think we can help you with this kind of problem description? :wink: Please refer to [the Issues section of ourCONTRIBUTING.md](https://github.com/picocms/Pico/blob/master/CONTRIBUTING.md#issues).\n. - What does \"nothing\" mean? Does the website show ...\n  - a PHP error or exception? What does your webserver'serror.logsay?\n  - a blank page? What does your webserver'serror.logsay?\n  - Pico's example contents?\n  - Pico's404.md(\"Not Found\")?\n  - one of your webserver's error pages (403 Forbidden, 404 Not Found, 500 Internal Server Error)?\n- What are the source/download URLs of the plugins you're using?\n- What steps are necessary to reproduce the problem?\n- What steps have you taken to solve the problem by yourself?\n. As ourCONTRIBUTING.md` states:\n\nConcerning problems with plugins or themes, please refer to the website of the developer of this plugin or theme.\n\nI'll try to help you anyway, but will tag this issue as type: Invalid.\nThe admin plugin seems to work with disabled URL rewriting only. So please try the following config in your config/config.php. Replace the PicoEditor password variable with the hash of your password (below is foobar), you can use this website to generate it. You can then access the admin plugin from http://example.com/pico/?admin. Please make sure that your webserver has write access to your content directory, otherwise you can neither create nor edit any pages.\nphp\n$config['rewrite_url'] = false;\n$config['PicoEditor'] = array(\n    'enabled'   => true,\n    'password'  => '0a50261ebd1a390fed2bf326f2673c145582a6342d523204973d0219337f81616a8069b012587cf5635f6925f1b56c360230c19b273500ee013e030601bf2425',\n    'url'       => 'admin'\n);\nPlease note that we'll release a official admin plugin with Pico 1.1, so please stay tuned.\nRegarding the pico_private plugin: Works just fine for me. Please note that the plugin's default behavior is to protect only pages which set the meta variable Private: true (the README.md is a bit confusing about what's the default). Please read the plugin's README.md on how to configure this plugin!\n. This is nothing for Pico's core, but can be implemented using a plugin. As far as I can tell there's no plugin for this at the moment. Below is some (untested!) example code realizing a Published: NO|YES meta header. You can use it as a starting point to extend it to your own needs.\n``` php\nclass PicoPageDrafts\n{\n    public function onMetaHeaders(array &$headers)\n    {\n        $headers['published'] = 'Published';\n    }\npublic function onPagesLoaded(\n    array &$pages,\n    array &$currentPage = null,\n    array &$previousPage = null,\n    array &$nextPage = null\n) {\n    // TODO: also check $currentPage, $previousPage, $nextPage; support dates and date ranges\n    foreach ($pages as $pageId => $page) {\n        if (isset($page['meta']['published']) && (strtolower($page['meta']['published']) === 'no')) {\n            unset($pages[$pageId]);\n        }\n    }\n}\n\n}\n``\n. Will you get Pico's 404 page or your webserver's 404 page?\n. URL Rewriting isn't working. Make sure Apache'smod_rewritemodule is enabled. What are the contents of yourconfig/config.php? I assume you forced URL rewriting to be enabled.\n. So, the page title currently links to/pico/index, whereas Welcome links to/pico/?index, Sub Page Index to/pico/?sub/indexand Sub Page to/pico/?sub/page? TryCtrl+F5.\n. Hmmm... You tried a force reload withCtrl+F5` when viewing the 404 page, right?\nBecause only index is affected, it's maybe a side effect with Apache's strange MultiViews feature... Please try replacing Options -Indexes in your .htaccess with Options -Indexes -MultiViews.\n. Apache's MultiViews \"feature\" really is a curse... Actually not a bug of Pico, but it's probably a good idea to make sure MultiViews is disabled. I'll update Pico's .htaccess. Thank you for reporting this! :smiley:\n. This feature will be shipped with Pico 1.1, see 988a23f for implementation details. For feedback about this feature, please refer to #334. Thanks @smcdougall for bringing this up!\n. Update: This feature will still be shipped with Pico ~~1.1~~ 2.0, however, with a different approach. See 9b7523b9e8fd418d9307208b8cde5b190703b1fb for implementation details. For feedback about this feature, please refer to #334. Thanks @smcdougall for further feedback about this there!. This happens when Apache is configured to disallow overwriting Options with AllowOverride None (or similar). This shouldn't be a problem for Pico, the line just ensures that directory listing (the Indexes option) and Apache's MultiViews feature is disabled (what is Apache's default anyway). You can safely leave this line commented out.\nDid you try Pico's default .htaccess with just the last line commented out? Provided that the .htaccess you posted above works, this should work also. It protects you from users trying to access the raw contents of your website.\nSince version 1.0, Pico basically doesn't require a .htaccess at all. It just enables URL rewriting and some basic protection against malicious user requests (like accessing the raw contents). However, as long as you don't want to use plugins which implement authorization, you can safely go without it.\nIf you encounter any other problems, please don't hesitate to ask :smiley: \n. Hmm, yeah, it seems that your webserver doesn't support PHP. Unfortunately you can't use Pico without a working PHP installation :disappointed: \n. Sure, Pico should work just fine with CGI PHP. :smiley:\nPlease try creating a info.php with <?php phpinfo(); and navigate to this file using your webbrowser. Provided that it outputs information about PHP, you can simply upload Pico (with the .htaccess which doesn't give you errors) and you should be ready to go. Maybe you're required to make the info.php (and Pico's index.php) executable (755 permissions).\nOtherwise the webserver isn't configured to execute PHP files automatically. You're then required to add AddHandler fcgi-php-fpm .php or AddType application/x-httpd-php .php or something similar to your .htaccess. Unfortunately we can't give you more detail about this, it is completely up to your webserver's configuration and you have to ask your admin about what the right configuration is.\nTip: FTP clients (like e.g. FileZilla) usually allow to change file permissions (i.e. chmod) with a context menu. There even exist FTP clients for Android & iOS. :wink:\n. I'm afraid PHP 5.3 is a hard requirement. PHP 5.2 is ancient and hasn't received security updates for more than five (!) years... :unamused: \n. Using composer is completely optional, please refer to the \"Install\" and \"Upgrade\" sections of our README.md, download page and/or user docs.\n. Updates (antedates/deferments from/to Pico 2.0, see #317):\n- Antedate pico-composer project\n- Antedate installing plugins via composer\n- Antedate plugin API versioning (new DummyPlugin::API_VERSION constant)\n- Antedate #318 by refactoring event system (also move $twig parameter of onPageRendering event to a dedicated event)\n- Defer official Multilanguage plugin\n- Defer official Search plugin\n. New ToDos:\n- New plugin: Support independent (meta) data files (e.g. content/catalog.yml). The files are accessed the same way as pages (e.g. {{ data.catalog.items }}). If a data file has the same name as a markdown file (e.g. both content/catalog.yml and content/catalog.md exist), the data file is still accessible through {{ data.catalog }}, but its data is non-recursively merged into {{ pages.catalog.meta }} (YAML frontmatter takes preference). ~~The same happens for all pages (non-recursive) in a directory if there's a data file with the same name as the directory (e.g. _collection.yml and _collection/ directory). You can enforce recursion for e.g. _collection/subdir/ by creating _collection/subdir.yml.~~\n- Drop {{ site_title }} and {{ rewrite_url }} in favour of their {{ config.* }} equivalents. Rename {{ current_page }} to {{ page }}. Drop {{ is_front_page }} (use {% if page.id == \"index\" %} instead). Preserve BC with PicoDeprecated.\n- Calculate the previous and next page for all pages (doesn't increase calculation time, array_search() in Pico::discoverCurrentPage() walks through all pages anyway). Drop {{ next_page }} and {{ previous_page }} in favor of their resulting {{ page.* }} equivalents (see above). Preserve BC with PicoDeprecated.\nNew decisions to make:\n- ~~Implement the data files feature (e.g. content/catalog.yml) using a plugin instead~~ (Yes)\n- Ignore all pages starting with a _ for the page navigation by default (e.g. _meta.md and all files in _collection/ are skipped)\npossible BC break, maybe we should defer this to Pico 2.0?\n. One of the goals of this feature is to directly manipulate data from other services which don't necessarily understand the concept of a YAML frontmatter (e.g. the files in the _data folder of Pico's website are generated by Shell scripts; Pico in contrast doesn't need a distinct _data folder). Config variables aren't supposed to be used to store \"global\" meta data - it's intended to use them to configure Pico's core and plugins (yeah, basically the configuration :smile:). Additionally, editing the config file (i.e. a PHP file) is a media disruption (something I'll possibly address in the future) and breaks the concept of \"control the contents of your website by editing plain text files in the content/ folder\".\nThis feature neither breaks anything nor changes the way Pico behaves, it's a completely independent, additional feature which doesn't affect anything else. A user isn't forced to use it and it's not planned to break current approaches (wouldn't be possible without breaking Pico in whole anyway).\nHowever, I actually already decided to implement it as a plugin. Probably not every user needs this and it can be implemented as a plugin, so the main prerequisites to add something to Pico's core aren't met. Additionally, I'll very likely drop the feature of treating data files named after directories specially.\nAll other new ToDos are basically to make a theme designer's life easier and drops legacy features (but still without breaking BC) :wink:\nBtw: {{ include(template_from_string(content)) }} :stuck_out_tongue_winking_eye: \n. Ah, I see. Yeah, I'll change how PicoDeprecated works anyway, so this definitely will not break BC until you don't explicitly/manually disable PicoDeprecated :wink:\n\nSo... are you implying that template_from_string will be enabled? :smirk_cat:\n\nOh, I overlooked that this needs to be enabled manually. No, I'm not planning to enable this by default.\n. > Maybe Pico could offer template_from_string as an advanced config option? Something we'd only recommend to power users who need (or expect) the ability to use twig in their content files.\nThe problem of providing options for discouraged functions is, that users will use them - even when they don't know the implications. Many users actually need a \"push\" into the right direction. Therefore: No. However, it is still possible to enable this feature with a plugin. As a consequence, the discouraged function gets less attractive (because a user must take more steps) and the recommended alternative gains importance.\n\nImagine that you had a large data-set you wanted to put in a table. This data changes often, and you really don't want to have to edit an HTML table every time a change occurs. [...] By placing your table data in a matching .yml file, then generating it dynamically using twig, you could save yourself a lot of work. :smile:\n\nI'm not sure what the problem is, you're building the HTML table with a Twig for loop anyway!? The Template meta header exists for a reason. It's absolutely fine to create a template which is literally used by just a single markdown file. That's one of the reasons why themes should use includes to provide the basic layout - otherwise a user wouldn't be able to add custom templates. You will never cover all use cases of a all users with your theme - therefore you should make it easy for users to create custom templates.\n\nOr maybe you want to have it sorted alphabetically, but not have to do this by hand every time you add data (mix in shifting table-rows, and that would be a nightmare).\n\nThat's why Pico provides a sort_by Twig function... :wink:\n. > Yes, but that was my point. You could do that, but it's a cumbersome and roundabout solution for a one-off layout.\nDon't get me wrong, your argument is completely valid! However, adding abstraction layers always leads to problems like that. By choosing a highly structured solution you always loose flexibility. Just think of Twig - we could use plain PHP instead (originally PHP wasn't more than a template engine). This is also true for software architectural patterns like MVC (Pico's content/theme separation is loosely based on the MVC pattern). Therefore, sure, you're completely right, however, the resulting disadvantages (we'll run into problems, just think of Jekyll and what a pain in the ass this content/theme mix is...) IMHO outweighs the advantages. And, as always, you can still achieve it with a plugin :smiley:\nBtw, from my own personal experience: Initially you can't think of any other use case for it (\"one-off layout\"), but a year later you're using it for 10 other pages, too. :laughing:\n\nOne of these days I will successfully sway you in an argument. :persevere:\n\nYou already did many times in the past, just think of #305 as one of the bigger examples or countless smaller things :wink: :smile:\n. Just because I'm reluctant doesn't mean that you didn't clearly win - it's the result that counts :stuck_out_tongue_winking_eye: Ideas without a concrete suggestion often need some time and further discussion to have an effect, so don't underestimate your arguments :wink:\n. Pico Admin just got a major update! However, Pico Admin is still just a developer preview and not yet usable...\n\n. > Wow, you're building this from scratch? :+1:\nSure :wink: Pico Editor is very old, it doesn't benefit from Pico 1.0's plugin system and is a bit cluttered. Furthermore I feel like there should be a \"bigger\" plugin that demonstrates how plugins should be written. However, naturally I'm still depending on third-party projects like https://github.com/NextStepWebs/simplemde-markdown-editor\n. @all, I'm thinking of a simple way to implement a \"Save As\" dialog for PicoAdmin and would like to ask for ideas. On the one hand I don't want to create a full-featured dialog like in desktop applications, on the other hand adding just a text field sounds like a pretty inconvenient solution. The only idea I came up so far was to use the file navigation on the left - as long as the \"Save As\" dialog is open and a user clicks on one of the pages (e.g. sub/page.md), the path gets copied into the text field. One then just has to change the file name. However, I'm not really satisfied with this solution... Any other or additional ideas?\n\n. A full-page dialog is something I'm trying to avoid.\n\nI was thinking about integrating it completely into the navigation (i.e. no dialog at all), but didn't had a good idea about how to integrate it yet... I was thinking about letting a text field slide down as first item when hovering over an directory in the navigation (i.e. sub.md as representation of the sub/ folder and sub/sub (there's a sub/ missing :smile:)) or something like that...\n. As you've said: We're just brainstorming. I'm thinking of both UX and amount of work.\nHere's a (broken) mockup:\n\n\nAs an alternative, I was thinking about dropping the \"Create New\" toolbar button (it's the first button) and forcing the user to specify the file name at the very beginning (\"dropping\" just means that it won't be in the default toolbar, one can still add it manually). I was thinking about adding a \"Create New\" button next to every page in the navigation (there's already going to be a small delete button when hovering over a page). When clicking on this button, the very simple notification-alike dialog (https://github.com/picocms/Pico/pull/334#issuecomment-234104177) shows up with the selected path pre-filled. The same dialog is going to be used when clicking the \"Save As\" toolbar button (pre-filled with the old path in this case).\nI'm trying to make the whole process simpler while keeping the UI as simple as possible (minimalism is key). I just think that typing a full path is pretty inconvenient, thus I'm searching for some \"reference point\".\n. > The idea of a \"Create New\" button next to every page is confusing. If this were a \"Duplicate page\" button, that would be okay, but \"Create New\" is confusing.\n\nI really don't like that green notification/dialog\nThis would be labeled \"Create New...\" or something, not \"Save As...\".\n\nYou're going into too much detail for a brainstorming. How the button is being named or the color of the notification/dialog are completely unimportant details at this point... :wink:\n\nAs far as my proposal goes (the file tree dialog), I wouldn't think it would take much effort.\n\nIt does. :wink: The file navigation is created by server, not by client.\n\nInstead of a text field, maybe a \"Create New #\" (replace # with a new page icon) button that appears at the top of the directory you're currently hovering over. This would be significantly less confusing than the \"next to every page\" idea.\n\nSounds legit, good idea. However, without a visible \"Create New\" label (i.e. just the icon) - there's simply not enough space for that.\n\nBut, the Create New buttons are also there now. So if a user wants to save as a new file in a particular directory, they can click the corresponding \"Create New\" button to populate the field with the directory path, the same as before.\n\nHmm... Yeah, some sort of a always (\"always\" in terms of \"as long as the dialog/notification is open\") visible \"Apply\" buttons instead of \"Create New\" buttons next to directories...\n\nThis example has kind of shifted to a \"Create New\" system instead of a \"Save as\" like you originally asked about...\n\n\"Create New\" and \"Save As\" are intended to work the same way.\n. As promised in 39d4a7c2aecd09fc8d4dcbe437ebd58b868e9da2: Here's Pico's new default theme (looks quite the same, however, with completely refactored source code). The mobile navigation is opened with a nice, smooth, CSS3-based animation (any modern browser and IE10+). The default theme generally works fine with IE9+.\n\nREADME.md Screenshot\n\n\nMobile View (Closed Navigation)\n\n\nMobile View (Opened Navigation)\n\n. Screenshot of theme testing page\n\n. @rbukovansky, thanks for your feedback! Unfortunately I've to tell you that we'll pretty likely not ship this feature with Pico 1.1, but defer it until Pico 2.0. Pico follows semantic versioning, what basically means that we never break BC (backward compatibility) with a 1.x release. Despite the fact that Pico's default theme actually isn't intended to be used for a productive website and more a starting point for your own theme, it still is a BC breaking change.\nHowever, you can achieve this very easily yourself. Simply edit your Twig template and replace the navigation with something similar to the following:\ntwig\n{% for page in pages if page.title %}\n    {% set pageDepth = page.id|split('/')|length %}\n    {% if (pageDepth == 2) and (page.id ends with \"/index\") or (pageDepth == 1) %}\n        {{ page.title }}\n    {% endif %}\n{% endfor %}\n. I'm thinking about renaming Pico 1.1 to Pico 2.0 (and the currently planned Pico 2.0 to Pico 3.0), primarily due to the fact that PicoAdmin requires the following BC-breaking change (strictly speaking; however, I don't think that it actually breaks something).\n\nOrder plugins (execution order matters!) by evaluating their dependencies. Older plugins implicitly depend on PicoDeprecated. See tsort, marcj/topsort.php, haberco/topological-sort-php.\n\nThe problem I'm facing is, that the execution order of plugins matter: When a plugin hooks into the onRequestUrl event, it might do stuff a dependant plugin relies on. Thus it is crucial that events of the dependant plugin are always fired after all plugins it depends on. Up to this point it was mostly the user's responsibility to make sure that plugins are executed in the right order by adding numerical prefixes.\nThis change is imminent because the (not yet released) PicoSession plugin initializes the session during the onRequestUrl event, whereas the PicoAdmin plugin expects the session to be already initialized in this event. Thus PicoSession must be executed before PicoAdmin (what isn't the case due to the present alphabetical order). I don't want to add numerical prefixes because this problem isn't limited to PicoAdmin and PicoSession, it also applies to the admin modules concept which allows plugin developers to extend PicoAdmin.\nRenaming Pico 1.1 to Pico 2.0 furthermore allows us to antedate some minor, but probably very useful BC-breaking changes (still I don't think that it actually breaks any existing plugin or theme):\n\nAdd only pages of the first level to the page navigation by default (e.g. page.md and sub/index.md, but not sub/page.md)\nIgnore all pages starting with a _ for the page navigation by default (e.g. _meta.md and all files in _collection/ are skipped)\nRemove PicoParsePagesContent (add it to the plugin portfolio on Pico's website)\nRemove PicoExcerpt (add it to the plugin portfolio on Pico's website)\nDon't sort pages when a unknown $config['pages_order_by'] is specified\nLoad plugins from plugins/<plugin name>.php (non-recursive) and plugins/<plugin name>/<plugin name>.php (the class file must be named after the directory) only. Plugins with multiple classes may need to register an autoloader on their own. Also see #203\nI'm not sure about this one yet, as this might actually break some old plugins...\nTrigger the onMetaHeaders event only once, cache results of Pico::getMetaHeaders().\n\nBesides: Pico's new default theme actually is also a BC-breaking change...\nThe additional programming effort isn't a problem, all changes are actually pretty minor.\nFeedback is highly appreciated! (@all, specifically @smcdougall). Done :smiley:. > - Load plugins from plugins/<plugin name>.php (non-recursive) and plugins/<plugin name>/<plugin name>.php (the class file must be named after the directory) only. Plugins with multiple classes may need to register an autoloader on their own. Also see #203\nI haven't found a single plugin that depends on including all PHP files recursively. Most plugins consist of a single file anyway, just some plugins need multiple files - and just a few of them actually violate the desired plugins/<plugin name>/<plugin name>.php constraint. This issue can be fixed by simply renaming the directory to match the class name. However, I'll give the whole procedure some room for minor mistakes by matching directory and file name case insensitive (PHP treats class names case insensitive, too).\nDefinitely a BC break, but I think the problems are negligible. Any other thoughts about that?. I'm thinking about changing the current solution for #330... Instead of reading config/*.config.php files, we might use .yml files instead; this includes removing even the main config/config.php in favor of config/config.yml. Needless to say that we don't break BC, config/config.php will still be read by PicoDeprecated (the same way we still read a config.php in Pico's root dir). As we all know, YAML is very powerful and allows us to do quite the same things as with PHP (except for things we never supported intentionally, like adding arbitrary PHP code). However, YAML is much easier to understand, more user friendly (Pico users must know YAML anyway) and (at least a bit) more error-tolerant (however, as we know from #292, it's definitely not perfect).\nAny thoughts?\n\nFurthermore I was thinking about the following two ToDos:\n\n\nSupport multiple plugin dirs\nSupport multiple theme dirs\n\n\nTheir only reason to exist is due to the fact that they solve two related ToDos:\n\n\nCreate a (de facto never updated) pico-composer project to allow composer users to install Pico as dependency and benefit from composer's update mechanism; see gilbitron's BaunCMS/Baun repo\n\n\nWhen creating a pico-composer project, a user wants to install his/her plugins/themes into the \"root\" {plugins,themes}/ dirs. However, by supporting just a single plugin/theme dir, we wouldn't be able to load Pico's default theme and plugins (i.e. PicoDeprecated) - they wouldn't be present in the \"root\" {plugins,themes}/ dirs, but vendor/picocms/pico/{plugins,themes}. Supporting multiple plugin/theme dirs allows us to load plugins/themes from both locations.\n\n\nAllow Pico plugins to be installed through composer.json. I've no idea how to realize this at the moment... Possible solution: composer/installers\n\n\nWhen \"installing\" plugins and themes manually, one moves them to the {plugins,themes}/ dirs. However, complex plugins with external dependencies (like Pico's official admin plugin) and for composer installations, one wants to use composer instead. By supporting multiple plugin/theme dirs, we can let composer install plugins/themes just regularly to vendor/[developer name]/[project name] and let Pico treat these dirs as additional plugin/theme dirs. However, there are still open questions (e.g. we deny access to the vendor/ dir in our .htaccess by default, however, themes always include at least a CSS file that needs to be accessible).\nAnyway, supporting multiple plugin/theme dirs might not be the best solution to these ToDos.\nI was thinking about using composer/installers, what allows us to install plugins/themes directly to Pico's {plugins,themes}/ dirs instead of vendor/[developer name]/[project name]. composer/installers is a pretty common solution to do things like this, so this shouldn't be a problem at all. Thus we don't need multiple plugin/theme dirs to support composer-based plugin/theme installations.\nHowever, this doesn't solve the problems we have with a pico-composer project. Due to the fact that PicoDeprecated is the only pre-shipped plugin (DummyPlugin actually is no \"real\" plugin) and Pico's default theme is the only pre-shipped theme, we might simply remove them from the picocms/Pico repo and use separate picocms/pico-deprecated and picocms/pico-theme repos instead. This allows us to specify them as dependencies for picocms/Pico, what effectively changes nothing compared to the current situation.\nThe reason why I don't want to support multiple plugin/theme dirs is, that it adds pretty much complexity to Pico. For example, what is the expected return value of Pico::getPluginsDir()? How does one influence the execution order of plugins? It simply isn't necessary as we have (as I think) better alternatives.\nAny thoughts?\n. As discussed above and in preparation for Pico's composer starter project, Pico's default theme has now a new home at https://github.com/picocms/pico-theme. This is also true for the PicoDeprecated plugin, which can now be found at https://github.com/picocms/pico-deprecated.\nPlease note that installing Pico will silently fail (at least until you navigate to the website) until composer/installers#359 is merged and released. This isn't crucial until we actually release Pico 2.0, so there's no big hurry. You can use symlinks (ln -rs vendor/picocms/pico-theme themes/default and ln -rs vendor/picocms/pico-deprecated plugins/PicoDeprecated) as a workaround.. Pico v2.0.0-beta.1 is finally here! \ud83c\udf89 \u2764\ufe0f \nSee #401 . Pico v2.0.0-beta.2 is out now! \ud83c\udf89\nSee https://github.com/picocms/Pico/issues/401#issuecomment-359288809. Pico v2.0.0 is out now! (yes, the stable release!) :tada:\nSee https://github.com/picocms/Pico/issues/401#issuecomment-401617414. This depends on how you want to create a multilingual website :wink:\nThe easiest solution might be to create corresponding subdirectories in your content directory (e.g. content/en, content/de, content/jp...) and duplicate the contents. With a simple Pico plugin or a appropriate .htaccess RewriteRule, you can redirect requests to your index page (i.e. http://example.com/pico/) to the appropriate language subdirectory (e.g. http://example.com/pico/en/). In addition, you should extend your theme to provide a language selector. Pico has no built-in i18n capabilities, but we're planning to create a official plugin for this with Pico 1.1.\n. Pico 1.0 should work just fine with ISO-8601 dates. Can you please provide some concrete examples of dates with which you experience problems and provide the respective outputs of\n- {{ page.date }},\n- {{ page.date_formatted }},\n- {{ page.date|date(\"Y-m-d\") }},\n- {{ page.time }} and\n- {{ page.time|date(\"Y-m-d\") }}?\nCan you please also provide the value of your date_format config variable (i.e. the line with $config['date_format'] in your config/config.php)?\n. Fixed with Pico 1.0.2. Thank you for reporting this @csholmq! :+1:\n. What does \"funky\" exactly mean? Did you clear your browser cache?\nCan you please provide the pages_order_by and pages_order config variables (i.e. the line with $config['pages_order_by'] and $config['pages_order'] in your config/config.php)? What exact Date meta header values result in the unexpected behavior and what's the behavior you expect (i.e. the actual order and the expected order of the pages)? Please also provide the above date outputs of all affected pages ({{ page.date }}, {{ page.date_formatted }}, and so on); don't just include the wrongly ordered pages, but also the respective previous and next page (or: simply include all pages).\n. :confused: :question:\nSorry, but your English is really hard to understand and I've absolutely no idea what you're talking about right now. Please rephrase your issue.\nRegarding your comment in #323: Please don't comment on random issues which aren't relevant for your problem. I've deleted your comment there. We don't ignore you, quite the opposite is the case.\n. This is a bug in our documentation. Thank you for reporting this! :smiley:\nPlease try {% if not (page.id starts with \"blog/\") %}...{% endif %}.\n. Pico's default theme didn't support definition lists, i.e. they weren't styled at all. I've now added a very basic CSS rule (will be released with Pico 1.0.3), but please keep in mind that Pico's default theme actually isn't intended to be used for a productive website, it's more a starting point for your own theme. Thank you for reporting this anyway @Marcussacapuces91! :+1: \n. Your themes look great! :+1: I'll merge this. Thank you! :smiley:\n. Thank you for your PR @yeouchien! Can you please give us a brief overview about what nitrous.io is and what it can do for users and plugin+theme developers of Pico? What's the advantage for Pico's core developers and the Pico project in whole? Why should we promote such a service in general and why should we promote this particular project?\n@picocms @theshka\n. Thank you @smcdougall for elaborating this, I'm inclined to agree with you.\nUnfortunately @yeouchien we can't accept your PR, thanks for your contribution anyway!\n. Thank you @ErickMR19!\n. Great to hear! Looking forward to your PR :+1: :smiley:\nJust a minor suggestion: You don't need a regex when installing Pico to the root directory (the regex's objective is to remove the subdirectory part of the URL). The following works just fine in this particular case:\nnginx\nlocation / {\n    try_files $uri $uri/ /?$uri&$args\n}\n. I'm not sure yet, depends on how the docs page will look like.\n. It should be sufficient to let the PHP location block match index.php only. Pico doesn't require PATH_INFO either.\n. I don't feel like having the appropriate background knowledge to tell what solution is better...\nThe only thing I can say is that Pico neither uses PATH_INFO nor needs to execute any other file than index.php. Security always comes first, simplicity second. If both solutions have the same security level, choose the simpler one.\n. Just a short question about the PATH_INFO topic: What happens if you remove both the fastcgi_split_path_info directive and if statement? Wouldn't be a try_files $uri =404; sufficient then?\n. I've tried it in a virtual machine with Debian Jessie and the following config works just fine for me. By the way, Debian's default config uses try_files, too (plus some extra lines which seem to make PATH_INFO work, but that's none of our business :smile:).\nnginx\nlocation ~ \\.php$ {\n    try_files $uri =404;\n    fastcgi_pass unix:/var/run/php5-fpm.sock;\n    fastcgi_index index.php;\n    include fastcgi_params;\n}\nI haven't read the document in whole yet, but the parts I've read yet look great. I'll catch up on that after you've finished your work :smiley:\n. I just noticed that this is one of the solutions described in nginx's wiki: https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#passing-uncontrolled-requests-to-php :smile:\n. Yeah, according to the comments in the file the additional lines are about making PATH_INFO work, thus we shouldn't need them.\n. @smcdougall, your thoughts about the reasons for using 404 Not Found instead of 403 Forbidden are completely right (plus some minor other \"technical\" reasons about how Apache works). Some other projects (like ownCloud) do it the same way.\nUnfortunately I don't like extending the config|content|... rule to these fully static files in the base directory. I don't see a reason why we should block access to them by default. @Robby-, can you please explain your thoughts?\nHowever, using Pico's 404.md for blocked contents makes absolute sense. ~~I'll see if and how we can achieve this with Apache.~~ #edit: I've implemented this with 49cb6c144a6c8a11b408667138046c61978e92cc and 31e55ca24a9cf01200a360e01a37cdc9c241c054. Pico now also always uses the on404Content... execution path when serving a 404.md (i.e. Pico sends a 404 Not Found header even when requesting http://example.com/pico/?404 directly; 404.md has always been treated specially, thus this actually isn't something new; see 6234be88b02ae465381d26e2d33f93180aae7643). However, passing $0 ($uri with nginx) and giving Pico the chance to find a appropriate content file instead of redirecting everything to 404.md seems to be a better idea (see 31e55ca24a9cf01200a360e01a37cdc9c241c054 for a explanation).\n. Starting with Pico 1.1 you can use try_files $uri $uri/ index.php; (sort of - see the updated inline user docs for a real example) no matter Pico is installed in a subdirectory or not (i.e. no regex necessary), see 6465c2b0a99b5262f25083af70b94668c1cac6af for details.\n. > I should be able to easily get the existing examples finalized, merged, and then work on 1.1 afterward.\nThat's probably the best way to deal with it :smiley:\n. Hmm... Yeah, hiding the version number isn't a bad idea (i.e. blocking access to composer.json, composer.lock and CHANGELOG.md - even though I don't know other composer projects doing this), but what's about README.md, LICENSE.md and CONTRIBUTING.md? Sure, they actually don't provide information what isn't accessible in another way (and the MIT license doesn't require a user to let a website visitor know the license of the software used), but they still may help a visitor of a website to determine which software is being used - maybe he wants to use it, too. Furthermore a user can still remove the files or block access to them manually. What do you think about adding composer.json, composer.lock and CHANGELOG.md as compromise? Or can you think of reasons why blocking access to README.md, LICENSE.md and CONTRIBUTING.md has more advantages than disadvantages?\n. @smcdougall's nginx configuration page finally got merged and he IMHO did a great job! :smiley: You can find the final document at http://picocms.org/in-depth/nginx/. Any further thoughts about this @all?\n@smcdougall, @Robby-, @iwedler\n. Thank you @Robby- for reporting this! :+1:\n. Ah, ic, thanks for the explanation :smiley:\n. Ah, no, Kramdown does support fenced code blocks, but it requires you to add a empty line before and after the fenced code block.\n. Okay, I've finished reading. Reading and fixing should never happen simultaneous :wink: ~~You can btw directly answer to my comments by clicking the Add a line note button, otherwise the comments get completely out of order and it's extremely hard to follow the discussion.~~ (#edit: I've just noticed that you've found it already :smile:)\n\nAnyway, I'll answer your comments here this time.\nGeneral notes:\nI love it! :heart: Sure, there are small issues, but none of them is even close to being \"mission critical\" :smiley: As you've already noticed (:smile:) I'm a perfectionist (:wink:), so please don't be offended by so many comments - they are all just very minor issues I stumbled over. I could have fixed them after merge myself, but it's your document, so I thought it would be better to tell you where I see open issues instead.\nAfter you've finished your work I'll read it again and merge it (that's not urgent! Do it whenever you've time for it). Again, I cannot emphasise enough that the document is great! :+1:\nSection \"Getting Started\", first paragraph: https://github.com/picocms/Pico/pull/345#issuecomment-215705468\n\nWhile the example... starting point, here we will provide a more in-depth look at Nginx configuration.\n\nYeah, I like that! :+1:\nSplitting the document into subsections: https://github.com/picocms/Pico/pull/345#issuecomment-215708293\n\nI used \"Getting Started\" as an introduction to the tutorial portion of the page.\n\nTrue. \"Nginx Configuration\" sounds good. This is completely up to you, it just came to my mind immediately after reading this sentence.\nHow to name blocks: https://github.com/picocms/Pico/pull/345#issuecomment-215708912\nThen maybe simply just \"Nginx's server configuration is broken into blocks.\" or something like that? I just stumbled over it while reading :smile:\nNginx and HTTPS: https://github.com/picocms/Pico/pull/345#issuecomment-215709592 + https://github.com/picocms/Pico/pull/345#issuecomment-215731584\nYeah, I'm using Let's Encrypt, too (and I love it). 353a17bbc3f623e4728b92dd6810c54d75065e6f is a absolute perfect solution! :+1:\nDirectory listing (autoindex off; and Options -Indexes): https://github.com/picocms/Pico/pull/345#issuecomment-215711817\nAh, I see. Yeah, then it's probably best to simply remove the half sentence in brackets as it doesn't apply to nginx anyway.\nDenying access globally: https://github.com/picocms/Pico/pull/345#issuecomment-215719269\nI look forward to your solution for it :smiley:\nMoving the \"Deny access\" section below \"PHP Configuration\": https://github.com/picocms/Pico/pull/345#issuecomment-215719269\nAh, okay, thanks for clarifying this!\nPHP with nginx vs. PHP with Apache: https://github.com/picocms/Pico/pull/345#issuecomment-215724461\nYep, simply remove the comparison, it's just fine then :smiley:\nOS-Dependant examples: https://github.com/picocms/Pico/pull/345#issuecomment-215725785\nHmm... I don't have a real solution for this. But you had one :wink: 353a17bbc3f623e4728b92dd6810c54d75065e6f is just fine!\ntry_files instead of the very complex location regex, fastcgi_split_path_info and if: https://github.com/picocms/Pico/pull/345#issuecomment-215726643 + https://github.com/picocms/Pico/pull/345#issuecomment-215756031\nYes, I've tested it, works like a charm. :smiley:\n. Yes, you can safely remove fastcgi_split_path_info. You can also use a much simpler regex like location ~ \\.php$ { }.\nThe purpose of this directive is to imitate the PATH_INFO feature to allow SEO-like URLs out-of-the-box. PATH_INFO actually is part of the official CGI specification (see https://tools.ietf.org/html/rfc3875#section-4.1.5), but is practically limited to Apache (see https://httpd.apache.org/docs/2.2/mod/core.html#acceptpathinfo). Alternative webservers (like nginx - or IIS, lighttpd, httpd...)support PATH_INFO with workarounds only. Many configurations out there don't have those workarounds enabled. Thus it's usually a bad idea to use PATH_INFO. However, there are (better) alternatives - like QUERY_STRING.\n. Using root sounds promising, I look forward to your changes for Pico 1.1. I'm fine with not adding a superior section, it was just an idea. Maybe when you update the document for Pico 1.1. We'll see :smiley:\nI've merged your PR with some very minor changes (see fa07158a032b22cdc841e0ff0208f58096c57c93). :tada: Thank you for your efforts @smcdougall, absolutely great work! :+1: :smiley:\n. Thank you @ghuron! :+1:\n. Good point, thank you @smcdougall :smiley:\n. Thank you @Robby- for sharing your idea! :+1:\n@all, feedback is appreciated\n. This feature will be shipped with Pico 1.1, see 1b3ef75 for implementation details. For feedback about this feature, please refer to #334. Thanks @Robby- for bringing this up!\n. Sort of. Pico's default theme uses the \"Open Sans\" font by default, which is loaded via Google Fonts. You can use another font or provide a local copy of the .woff2 file (provided that the license allows this, I don't know) with your theme. Please keep in mind that Pico's default theme actually isn't intended to be used for a productive website, it's more a starting point for your own theme.\n. Unfortunately we can't do anything else than navigating to the demo, clicking \"View source\" and adapting the HTML code. :unamused: However, I don't think that the originally purchased theme was much more than that. You can use wget -r to retrieve a recursive copy of the demo if you want to work locally. I don't have anything else either. :unamused: \nRegarding the theme's license: @gilbitron sold the project to @picocms, I'm pretty sure this contract also included the theme's license. If not, it's @picocms's responsibility, not ours :wink: Pico is @picocms's property (however, mostly just the name \"Pico\", the copyright of contributions naturally remains by their authors and there's not much left from the original sourcecode @gilbitron sold to @picocms).\n. Sorry, I was on vacation the last few days.\nThe Fancybox feature looks great! :+1: However, the first image \"group\" IMHO should contain Pico's default theme only - after all, custom themes are mentioned later anyway. This allows you to let the image float: right.\nWhat do you think about mixing the two mentioned Fancybox styles (3 (current) and 2)? The first one (portfolio3) is more suitable for just one or two or a very big number of images, whereas the second one (portfolio2) is much nicer for a limited number of images (like theme screenshots or the second image group; adding a screenshot with a .md file to this group would be great btw).\nI don't like Liquid either. It makes things so unbelievable hard, is unpredictable, and its feature set is very limited... Every time I work with Liquid ends in \"What the fuck is wrong with this template engine?\"... Unfortunately it isn't that easy to use Pico as a static website generator. It's planned for Pico 2.0. :unamused: \n. No, it isn't about using Twig in Markdown files - you must add a distinct Twig template to your theme to achieve something like this. This is absolutely intended behavior and loosely follows the MVC pattern by explicitly separating Markdown (Model) and Twig (View). In addition, some of our competitors support this (like Jekyll) and it simply doesn't work well. It ultimately confuses users and makes things harder (simply compare the _docs folder with content-sample/index.md). By the way, this loose orientation on the MVC pattern is the reason why I'm a bit reluctant about #305 (however, the advantages exceed the disadvantages in this case, thus Pico 1.1 will support #305).\nThe problem with using Pico as a static website generator is, that Pico was never intended to be used that way. Sure, you can use wget -r to get a static version of a Pico website, but this neither guarantees a full nor a working copy of the website. Pico should know what pages can be cached statically (e.g. dynamic pages of a search plugin aren't) and cache them itself rather than using some external tool like wget. I'll develop a plugin for Pico 2.0 to allow this, but at the moment, Pico 1.1 is more important :smiley:\n. Regarding the portfolio2 style: Can please also add both the category-wrapper and touchcarousel? They are the key aspect of this style and IMHO look pretty awesome :smiley:\n. Yes, the entire carousel.\nMaybe we should think about a different approach to make the include a bit simpler. On first glance, I suggest to let fancyboxtemplate.html handle the whole carousel with all its images (with other styles than carousel, you can simply display all images one after another). With Pico/Twig we would have passed a hash to the include, but with Liquid, we can't initialize arrays/hashes, thus we have have to circumvent this. I suggest to use the YAML frontmatter.\nyaml\ngalleries:\n    workflow:\n        headline: Carousel Headline\n        description: Carousel Description\n        style: carousel\n        images:\n            -\n                heading: Content Folder\n                description: An example of a content folder in Pico.  This one is from a writing website.\n                thumbnail: /style/images/docs/about/thumbnails/content_folder.png\n                fullsize: /style/images/docs/about/fullsize/content_folder.png\n            -\n                heading: Pico's Config File\n                description: Here's an example of configuring Pico.\n                thumbnail: /style/images/docs/about/thumbnails/config.png\n                fullsize: /style/images/docs/about/fullsize/config.png\ntwig\n{% assign gallery = \"workflow\" %}\n{% include fancyboxtemplate.html %}\ntwig\n{# access carousel data with site.galleries[gallery] #}\n{% for image in site.galleries[gallery].images %}\n    <img src=\"{{ image.thumbnail }}\" alt=\"\" />\n{% endfor %}\n. Instead of <div markdown=\"1\"> you can use {{ image.headline|markdownify }}. Markdown in YAML shouldn't be a problem, you just need a way to let Jekyll interpret it as Markdown.\n. btw: I'm always online on Freenode IRC. I'm using a ZNC bouncer, so I'm not necessarily reading all messages immediately even when IRC says I'm online, but I'll answer as soon as possible. I've stumbled on many flaws and mischiefs of Jekyll and Liquid in the past, so, before you despair, please don't hesitate to ask. I was very close to this point more than once, Liquid can be really annoying... :unamused: \n. I would like to leave this completely up to you. Personally it wouldn't bother me to create standalone1, standalone2, \u2026 \"galleries\", so you don't have to change your current code, but choose the solution you think is best. I don't see a reason for fancyboxtemplate.html to explicitly support a single image, a \"gallery\" with just a single image results in the exact same HTML code, but, as said, this is completely up to you :smiley:\n. 1) Hmm... Actually I still like the style, even with just two images. It provides some sort of \"separation\" to the content and lets it look like a gallery (what IMHO wasn't the case before, the images were just \"there\"). I was thinking about letting the \"category box\" flow into the TOC-reserved space on the left, but this made it look \"too important\"...\n2) You can combine markdownify with remove, see e.g. https://github.com/picocms/Pico/blob/gh-pages/_includes/pageHeadline.html#L4\nOff Topic: However, letting the \"category box\" flow into the TOC-reserved space on the left made me wonder if we could adapt this as replacement for <h2> elements (<h2> only!)... What do you think?\n\n. You don't have to mess around with various responsive sizes, simply use calc():\ncss\n@media only screen and (min-width: 960px) {\n    .category-wrapper .carousel-wrapper {\n        width: calc(100% - 280px) !important;\n    }\n}\n@media only screen and (max-width: 959px) {\n    .category-wrapper .carousel-wrapper {\n        width: 100% !important;\n    }\n}\n.touch-carousel {\n    width: 100% !important;\n}\nAdd to style/css/ie8.css (who the hell cares about IE8? :smile:):\ncss\n/* I'll edit this post, VirtualBox doesn't like to boot my windows VM right now ^^ */\nLow responsive sizes make the category look like a header, thus I suggest to add the following additional rules:\ncss\n@media only screen and (max-width: 959px) {\n    .category-wrapper .category-info {\n        background: #efefef;\n        padding: 25px;\n    }\n}\n. The merge was a mistake, accidentally did a git push instead of a git push fork. Seems like I've fucked up the PR with that and GitHub isn't able to restore the old state... :unamused: Sorry for that. Can you open a new PR please?\nA answer to your comments follows later.\n. @smcdougall: @Lartza initially pictured this issue on IRC and I wasn't able to solve it, so I suggested him to open this issue. I thought it would be best to let our nginx experts help him :smiley:\n. Looks great, thank you! :+1: Can please add the theme to our wiki, too?\n. > 1)\nUltimately it's probably personal preference :smile:\nI don't feel like that we're wasting space here. The carousel provides a better separation and gives the user a hint about what he's reading/seeing right now (i.e. it introduces the user into the contents of the gallery). Without the category, he just sees a random screenshot and has absolutely no idea what we're trying to tell him - unless he explicitly clicks on the image. But why should he click on the screenshot, we don't cause him to do so. The category initially tells him that we're trying to explain something to him with these screenshots.\nAdding more screenshots to the theme gallery shouldn't be a problem. The workflow gallery is another topic, but I feel like that there are important steps missing anyway. The first screenshot should show the root directory of a Pico installation to tell the user some kind of \"Simply upload Pico's files to install Pico, that's it!\". The second screenshot shows the configuration, the third and fourth ones, how contents are created (i.e. a screenshot of a content/ folder and a Markdown file). Probably it's also a good idea to add a screenshot of themes/default/index.twig and plugins/DummyPlugin.php to represent theme and plugin creation.\nBasically the first two screenshots introduce the user into installing Pico, the third and fourth into creating contents (the \"Web Pages Without HTML\" section) and the fifth and sixth into customization (the \"Flexibility and Customization\" section).\n\nOff Topic\n\nWe should keep this in mind for the future :smiley: I'll add a hint to #323 so we can make a decision about it later.\n\nCSS calc and low resolutions (i.e. responsiveness)\n\nYeah, great, isn't it? However, this doesn't work for IE8, but IE8 lacks support of so many modern CSS features (like media queries), that this shouldn't be its biggest problem. IE8 now simply always uses the low resolution style (see smcdougall/Pico#1). It doesn't have to look good, but it should be at least usable. Generally speaking, hiding the category may be another solution, but for now I've fixed the styling in smcdougall/Pico#1.\n\nPR is something GitHub specific\n\nYes, it is :wink: You're right, I did a hard reset immediately after I've noticed my mistake, but GitHub was faster. As far as I know it isn't possible to re-open a already merged PR (even when the merge has been reverted or resetted already...). Sorry for the inconvenience :disappointed:\n. Hmmm... You're right, this nearly 4:3 ratio looks a bit odd. :worried:\nYou could either create widescreen screenshots with a shadow to let the image result in the current ratio (i.e. add blank/transparent areas to the top and bottom) or improve the carousel such that it supports a variable height. I can implement the latter and open a PR if you want to. \"More professional style images\" are a good idea in any case. :+1:\nHowever, with widescreen screenshots your point with \"wasting\" space by using the carousel style gains more and more in importance. I still prefer the carousel over the original solution, but the carousel with its category box, plus much narrower widescreen images, plus the parent .three-fourth container, might be too much (or \"too less\" :smile:). What do you think about forcing the \"low resolution\" style (improved version below) inside a .three-fourth container?\n\ncss\n.category-wrapper .category-info {\n    padding: 1.5em;\n}\n.category-wrapper .category-info h3 {\n    float: left;\n    margin: 0 1em 0 0;\n}\n.category-wrapper .category-info span {\n    vertical-align: sub;\n}\n. > Do you mean variable width?\nNo, I really mean variable height - but not in terms of \"per image\", but \"per carousel\" (i.e. allow widescreen images without padding, so we aren't restricted to 220px).\n\nI tried adding a background color to the wrapper\n\nHmm... Don't know... It feels a bit \"wrong\" with a background... :confused: Even with a padding for the images... However, the dark background is definitely \"too much\". I'm not sure about that...\nRegarding the appearance of the carousel description... What do you think about making this dependent on the contents to display? A longer text should get more space (i.e. a separate paragraph), short text (like the current ones) shouldn't.\n\n. > This could work, but we might run into trouble with making the heading box a matching size\nExactly. :wink: As said, I can open a PR if you want to.\n\nI've got one more idea for you, the carousel being styled like a code block\n\nI don't find it fully satisfactory, however, it's the best one we have at the moment. Maybe I get used to it after some time... We'll see. As said, I'm not very sure about this... :confused:\n\nIs it in regards to the description being a <span>?\n\nNo, I was talking about whether to let the description float next to the header or to provide more space by using a separate paragraph with extra padding below the header. Using YAML shouldn't be a problem.\n. > I'll leave that one up to you. If you think it'd be useful, then go ahead.\nI'm offering this solely for the purpose that you can create good looking widescreen screenshots :wink: If the forced height of 220px isn't a problem for you, we don't have to put work into this and keep it the way it is.\n\nI haven't done any actual work on any of these styles.\n\nI'm looking forward to your final suggestion :smiley:\n\nFor a longer description, would you move it so that it's only underneath the header or have the first line remain next to the header?\n\nUnderneath the header. However, I'm actually asking whether you want to insert longer descriptions or stick to the current short ones. As said, I'm not talking about how YAML and Markdown interacts, the implementation or anything - just whether you want to add longer descriptions or not. If you want to stick to short descriptions anyway, we can keep it the way it is (next to the header) :wink:\n. > Turns out, I was right the first time. inline-block instead of float allows the paragraph to be next to the heading if it's shorter, but appear below it if it's longer.\nGreat hack! :+1: Didn't knew that the solution is that easy. This will come handy in the future :smiley:\n\nStill don't have a way to do multiple paragraphs\n\nDo you mean something like .three-fourth .category-wrapper .category-info p:first-of-type to let only the fist paragraph be displayed as inline-block and all succeeding ones as the default block?\n\nI guess a variable height (or width!) carousel would be a good improvement if you want to implement that.\n\nSure, I'll implement that. However, at the moment I'm on a business trip, I'll implement this at the beginning of next week.\n\nDo you think I should change that margin for all carousels\n\nYes, it's a good idea to unify this - for all carousels. :smiley:\nLooks good btw! :+1: I'm still not completely used to it, but we'll see :smiley:\n. > The margin is there because in the original portfolio design it was the only thing separating the carousels.\nThis should anyway be realized with a empty <div class=\"margin-top\"></div> element consuming the desired additional space - because this is more likely the \"special\" case, not the other way round. Additionally it's usually easier to add more space then reducing already consumed space :smile:\n. Internet Explorer again... Unfortunately I wasn't able to find a solution that lets the height of .category-info match the largest image height (actually there's a solution with display: table; however, this always feels like a very dirty hack...) - IE10 neither supports display: flex nor CSS browser switches. Thus it seems that we can't use arbitrary image heights with the original portfolio2 style. However, this problem doesn't exist for your new \"code block\" style (new name: carousel-box; btw, I'm slowly getting used to it :smiley:), so this shouldn't be a big deal. We can have a closer look at the problem with the portfolio2 style when we really need to. See smcdougall/Pico#2.\nAnd sorry or the delay :disappointed: \n. The changes are ready to merge :smiley:\n. I'll read and comment on the document in the next couple of days :smiley:\n. > If you want, you can read through smcdougall@3a76be4 for my thoughts and/or PR with your own thoughts added.\nI'll do this in the next couple of days, too :smiley:\n\nOn that note, apparently it's got the wrong upstream branch set up (picocms:master) so I need to fix that too, lol.\nIs there a way I can tell git that this new docs-notes branch should have origin/docs-notes as its remote (to push to), but upstream/gh-pages (or maybe my own origin/gh-pages) as its upstream? :confused:\n\nUnfortunately I don't think that this is possible. This seems to be a bug of GitHub falsely detecting a common commit between master and gh-pages (what isn't the case).\n\nBefore I rewrite too much there, we should probably discuss whether we want to keep the docs layout the same or modify it.\n\nI'm not sure about this. What would you prefer?\n\nWould you want the existing content revised, or scrapped for something more in the style of the About and Nginx pages?\n\nThis depends on how you want to do this, I'm more focusing on the result than the \"how to\" :wink:\n\nIf we were to have a conversation over prospective changes to the docs, would you want that to be in #323 or to create a new issue for each idea (like #345)\n\nA new issue for each idea is probably better for the reasons you've mentioned already. :smiley:\n\nIf you'd like, I can create a \"Docs Revisions\" issue just for brainstorming ideas for the Docs page.\n\nFor just brainstorming (i.e. not a specific idea for a particular page), #323 should be fine.\n. > Eagerly awaiting your feedback. :smile:\nThe most important first: It looks absolutely amazing! :heart: Great job! :+1: :smiley:\n\nIn some cases, the documentation is quite good, but in other cases it would be better to start from scratch. I think the main problem would be expanding things. I can try to cram extra information into every section, but it'll probably flow better if I started from scratch instead.\n\nI'm completely fine with this strategy and looking forward to your suggestions :smiley:\n\nI think I like the idea of breaking the single page of docs into multiple pages, each with a clear focus.\nWhat do you think of this idea of breaking the docs up and rebuilding them in focused pages?\n\nAs far as I understand you right, the result should be something like \"telling a story\", what sounds very promising. :smiley: Does this mean that you want to keep the current page structure with a \"generalized\" main page and in-depth sub pages (like the current nginx section in _docs/config.md and the in-depth/nginx.md page)? The result will definitely be interesting to see. However, in this case we need a different approach for the page layout (i.e. how the contents are being presented). After all we both reached the conclusion that the current layout isn't the best some time ago...\n\nI got the portfolio layout rigged up using the same YAML frontmatter tactic we approached the carousel with.\n\nGreat! :+1:\nFor plugins and themes it may be useful to use Jekyll's collection feature (like _docs), what allows you to use a file per plugin/theme. It will get much more structured and easier to maintain (simply add a new file describing a new plugin and it will automatically show up in the portfolio). This also makes it much easier for you to use Markdown for the headline and body: You can simply include the file and don't have to deal with escaping Markdown in YAML (at least for the body and headline, i.e. your info feature (great solution btw! :smiley:) stays the way it is).\n\nI set up Jekyll on my own server\n\nI should probably do the same some time soon... :smile:\n\nI've uploaded to a new branch. It's also got the current changes from #352\n\nThat's completely fine, I'm pretty sure the About page will be merged before the new Customization page. Unfortunately I didn't have the time to read through the contents yet :disappointed: \n\nThe difference being that it'd be one portfolio per page, since it takes up 90% of the page.\n\nDefinitely makes sense. However, I don't think that plugins and themes are appropriately separated with the current approach. This doesn't mean that it should be possible to open both a plugin and theme portfolio at the same time, but there should be a clearly visible separation of them. Categories (the \"All\", \"Plugins\" and \"Themes\" buttons) should be used to organize plugins and themes on their part (e.g. \"Blogging\", \"Social\", \"Developer\" for plugins and \"Single page\", \"Multi page\" for themes, i.e. there should be two \"groups\" of categories, one for plugins and one for themes).\n. Sorry, my time is very limited at the moment. :unamused: I haven't forgotten your new PRs and comments and will look through them as soon as possible. Sorry :disappointed: \n. Okay, I think I caught up with all comments and PRs. If I've missed something please let me know. Hopefully I'll have time to read the About page and answer your e-mail tomorrow.\n. I've finished reading. Looks great! :smiley: There are just some minor issues, shouldn't be a big deal. Great work @smcdougall! :+1:\n. You're right! How about:\n\nWant to Contribute?\nVisit us on GitHub and help us making Pico even better!\nYou're encountering a problem with Pico? We'll do our best to help you! \n. Regarding the website's footer: Done.\n\nI'm not sure why you want to use square thumbnails again. You can use widescreen screenshots for the portfolio, too. The only requirement of the portfolio is, that all images of the particular row have the same height - but it doesn't force a specific height. :wink:\n. Personally I prefer widescreen thumbnails on the carousel, even if this means that we have to maintain them separately. You have to do it anyway - the descriptions differ. Squared thumbnails unfortunately look very odd on the carousel... :unamused: \n. First of all: Sorry for the late response.\n\nOkay, so I've written two \"real world\" style examples, one for Markdown and one for YAML.\n\nActually I didn't mean \"real world example\" with \"real example\" (:laughing:), however, it's fine :smiley:\nA full \"Sally's\" tutorial is a good idea! :+1:\n\nThe markdown heading would really be the site title in a practical application, but I feel like it's needed here to introduce the example.\n\nActually I don't see a problem here :smile:\n\nI'll probably rewrite the example to one context or the other (either a landing page, or a blog-post). Which idea do you like better?\n\nI think it might be better to use the landing page as example. Makes things easier (like the social buttons problem).\n\nI thought of a small issue with the social button idea: these would either have to be on every page's YAML or use another implementation (such as parsing all markdown files ahead of time, like NotePaper's widgets). It's not a huge deal, but it does affect how I'd implement it in the sample content.\n\nWe should add a hint to our docs to explain how to use \"global\" meta data like social buttons. Actually it's very easy: create a content/_meta.md with just a YAML header, don't let the page navigation show this page and access the meta data using {{ pages[\"_meta\"].meta.social }}. No need to parse the contents, we parse meta data of all pages anyway (otherwise it wouldn't be possible to create a page navigation). However, Pico 1.1 will support independent content/meta.yml files with just meta data (like Jekyll's _data folder, just better :smile:).\n. > But why stop half-way there? :laughing:\nSure, why not :smile:\n\nI'm just thinking that if we recommend a place for \"global\" metadata, it should be very similar to the final implementation.\n\nI'll think about it. However, as you've said, this is just an example. You don't have to address this problem on the About page. However, if you can think of another good and small example for both lists and associative arrays - I'm open to suggestions :smiley:\n\nHow far out is 1.1 anyway?\n\nHard to tell, heavily depends on my free time... :unamused: \n. I'll think about this.\n. Hint: bf1663c\nbtw: You don't have to merge upstream gh-pages into this PR all the time, git merges the changes later anyway, this just floods the history with unnecessary commits. You even don't have to merge upstream gh-pages when there are conflicts, it is sufficient to resolve them just before merging the PR.\n. There are three solutions:\n- Don't merge when it isn't absolutely necessary. :wink: Merge conflicts can be a reason, depending on how \"serious\" the conflict is. Or when there are changes you depend on. See the merge commits of #334, they are either because of serious merge conflicts or changes on master I was depending on. Just to see how the new footer looks IMHO is no real reason (:laughing:), you can change the HTML locally or merge locally and reset the merge before pushing. However, you don't have to change anything now, this is just a advice for the future :wink:\n- git rebase. However, never do a git rebase when you've pushed the commits already (what is the case; the so called \"golden rule of rebasing\"). Just google for what git rebase does (and what the difference to git merge is). Don't use it until you know what git rebase is! Usually git rebase is used to resolve conflicts between the same local and remote branch, e.g. when someone else pushed to the branch recently and you can't push your new commits.\n- I could squash merge this PR. However, this squashes all commits of this PR to just a single commit. That's IMHO a bit too much \"cleaning\", development history is important :wink:\n. As soon as smcdougall/Pico#3 is merged and you've given me your okay, I'll read through the page a last time and merge it afterwards :smiley: It finally comes to an (happy) end :laughing: \n. I would like to leave this completely up to you :wink:\n. See https://github.com/smcdougall/Pico/pull/3#issuecomment-234596421\nAfter you've merged smcdougall/Pico#3 and resolved the last ToDo (\"Compare and merge Fancybox styles with original styles\"), I'll read through this PR a last time and merge it afterwards. :+1: :smiley:\n. I've absolutely nothing to grumble about, it's great! :+1: :smiley:\n. I've read through everything, absolutely great work, it's just perfect! :+1: :smiley: :tada:\nCan you please fix the two remaining CSS bugs (see comments above)? I'm not sure how to replace #fancybox-thumbs li { margin: initial; }, when using margin: 0 the thumbnails break into multiple lines, when removing the rule altogether they overlap...\nI'll merge this PR afterwards. Again, great work! :+1:\n. All good things are worth waiting for :laughing: Again, amazing work, thank you @smcdougall! :+1: :tada:\n. @smcdougall, what do you think about adding a large \"Learn more\" button on both the start page and our README.md linking to your about page (suggestions are very welcome :laughing:)?\n. > Personally, it's a good time for me to have this finished...\nOk, thanks for letting me know. May you do well in your new/old job! :+1: :smiley:\n\nGot to go for now, but let me know what you've got in mind. :smile:\n\nSomething like 1bf157049a52328199105a972fe3f2c07ebf9486 and e59d2d1bf5dff4e94c452f0d61710976519760ea. Any suggestions (especially for the README.md, I did not have an idea how to link to both the landing and about page)?\n. Sure :smiley:\n. @smcdougall summarized it quite well. :+1:\nThe main difference to the alternatives you've mentioned is, that Pico is no static website generator (I don't know any of them apart from Jekyll, that's just what they say on their websites). Pico doesn't generate static HTML pages (however, we're planning to officially support this with Pico 2.0) which can be uploaded somewhere, it's a PHP application running on your server (like Drupal). Pico serves dynamic websites. This adds flexibility and allows things like a admin or search plugin, what wouldn't be possible with a static website generator.\nThe main difference to other flat-file CMS (i.e. not static website generators, however, this mostly also applies to them) is Pico's actual simplicity. Many alternatives argue that they are simple, but they aren't. Maybe in terms of usability (what doesn't mean that Pico isn't simple in terms of usability, it IMO definitely is), but not in terms of processing and the actual source code. Since Pico 1.0 this is a bit veiled (because of the very extensive code documentation), but Pico's core is below 1000 lines of code (see the lines of code statistics below). The first version of Pico released in 2012 had just 114 lines of code.\nThe original author, @gilbitron, unfortunately isn't involved in Pico's development anymore, thus it's hard to say why Pico has been created initially. The only thing I can say is why I've chosen Pico - and that was because of Pico's simplicity and the very logical and easy to comprehend workflow (i.e. \"how to do things\"). And not to forget this: Pico uses technology I already know (PHP, Markdown, YAML, Twig) - so why should I choose alternatives I don't know? Additionally, the plugin system is dead simple (basically just a bunch of hooks/callbacks) but extremely powerful at the same time.\nThe history of my \"takeover\" (:wink:) of the project can be quickly explained: I wanted to use Pico 0.9 for one of my projects (because I love how Pico does things, see above), but I didn't like the condition of the source code (bad code documentation, messy coding standards, various smaller bugs) and missed some minor features. So I decided to do a code refactoring and open a PR (Pico 1.0). @theshka, the maintainer of the project at this time (I really hope he comes back some time soon :cry:), liked my improvements and caused @picocms (the new owner of the project after @gilbitron sold it) to add me as a Collaborator. That's it. Since then I'm developing Pico.\nI hope this has given you an idea of the \"What\" and \"Why\" of Pico. Please don't hesitate to ask if something is not clear :smiley:\n```\n$ cloc --by-file-by-lang lib/* index.php\n       5 text files.\n       5 unique files.                            \n       0 files ignored.\nhttp://cloc.sourceforge.net v 1.60  T=0.02 s (287.4 files/s, 116334.4 lines/s)\nFile                                       blank        comment           code\nlib/Pico.php                                 147            617            631\nlib/AbstractPicoPlugin.php                    21             96            146\nlib/PicoTwigExtension.php                     20             95            123\nindex.php                                      4              7             15\nlib/PicoPluginInterface.php                    8             82             12\n\nSUM:                                         200            897            927\n\nLanguage                     files          blank        comment           code\nPHP                              5            200            897            927\nSUM:                             5            200            897            927\n```\n. You can find two plugins from third-party developers in our Wiki implementing contact forms for Pico. Alternatively you can use one of the (free or paid) contact form services out there (just google for it), for which you often just have to include a HTML and/or JavaScript snippet.\n. As always: Looks great! :+1:\n. Note for myself: Use https://github.com/picocms/Pico/pull/358/files/a48924bbc2d3ce208c86554d6c05dae667132d8e..HEAD to get a diff of all changes except for the changes of #352\n@smcdougall: The cherry pick command is git cherry-pick 8819d4379aea0814e1bae513660cc65abdba0bb3^..9cbce8c7b60548f6e496865b852bc32ff7795ba0 e3b1a1e676dc5ecd4e91046853a70709aa87fa86^..b81b7e743186ac4c53c609726e5b34bffd8cb8e9 in this case btw :wink: (again, you don't have to, just want to let you know)\n. Looks great so far! :+1:\n\nBetter representation of Plugins (especially when too abstract for a screenshot)\nPossible Style: \"muted\", gray puzzle piece background with persistent overlay text, but only turns green on hover.\n\nI really like this idea :smiley:\n. In response to https://github.com/picocms/Pico/pull/352#issuecomment-225431294:\n\nSince you didn't comment on it, the Puzzle Piece image was just something I made really quick as a placeholder. I couldn't find a puzzle piece image that was both free and attribution-free, so I just made my own.\n\nYeah, I like it, great idea! :+1: :smiley:\n\nUltimately, I wasn't sure how to handle images for plugins. While some plugins generate things that could be represented by screenshots, others will be more abstract.\n\nAs I've said already, I like the idea of a \"gray puzzle piece background with persistent overlay text\". This is a convenient solution for the plugins overview, but not for the details view (i.e. when clicking on a plugin). The portfolio details are pretty oriented towards the screenshot, what doesn't work quite well for most plugins. :unamused: \nThis doesn't mean that I think most plugins can't be visualized. A pagination plugin could show the pagination, a tags plugin its tag cloud. Others can be visualized a bit more abstract, but still \"on the topic\" - a search plugin could show a big search icon, a multilanguage plugin country flags. But most plugins have in common that they can't be visualized with a large screenshot.\nUnfortunately I don't have a solution for this problem... Maybe by shrinking the screenshot's width halfway through and using the additional horizontal space for a second text column? The details view of plugins should be less high in general.\n. > If you wanted a literal second column (and not just extra width), we could come up with a special separator in the markdown that marks the end of the first column.\nI was thinking about letting the title span over both text columns (i.e. the space is reserved), using the right column for tags/info and the download button and the left column for the description (or maybe the other way round).\n\nWhat's your opinion of Move images into collection from my list up above?\n\nPlacing them in _themes makes sense, however, I'm not sure whether this is even possible. A (sub-)folder per item shouldn't be necessary.\n. Great to hear that! :+1: :smiley:\n. > It's made me notice that Markdownify is leaving these line-breaks after all the variables. I could add rstrip to each of them, but since it doesn't visibly effect anything I figure they should probably just be left alone. What do you think?\nAs long as it doesn't have a visible effect, you can ignore it. :smiley:\n\nThe styles are still a little rough, but the effect is there.\n\nLooks good! :+1: It looks a bit odd (black text doesn't fit quite well and the text is a bit too large), but you've said that you're still working on it, so, anyway :smile:\n\nCan you tell the difference between the two implementations? [...] I could always convert the others to use CSS as well.\n\nYes, unfortunately on first glance. :unamused: You should definitely use CSS in both cases for the reasons you've mentioned already.\n\nThere may be a way to require CSS transitions to complete before continuing, but I'm not sure at the moment.\n\nYou shouldn't use :hover for this - you can't manipulate :hover with JavaScript. Use JavaScript to add a HTML class (e.g. .hover) to the element as soon as the mouse enters the element. Remove the class when the mouse doesn't hover the element anymore. Use window.requestAnimationFrame() to make sure subsequent code is executed not before the CSS changes have been applied. Then use window.setTimeout() with the transition duration as timeout length to wait for the transition to finish. Clear this timeout when the mouse leaves the element in the meantime.\nHere's a example I've written to slide a element up and down (it obviously does something completely different, it's just to illustrate the use of window.requestAnimationFrame() and window.setTimeout()). However, you might use it to fix the \"100% CPU usage\" problem (what IMHO is quite important btw)...\n``` js\nutils.slideUp = function (element, finishCallback, startCallback) {\n    element.style.height = element.offsetHeight + 'px';\nwindow.requestAnimationFrame(function () {\n    element.classList.add('slide');\n\n    window.requestAnimationFrame(function () {\n        element.classList.add('up');\n\n        if ((startCallback !== undefined) && (startCallback !== null)) {\n            startCallback();\n        }\n\n        window.setTimeout(function () {\n            element.classList.add('hidden');\n            element.classList.remove('slide');\n            element.classList.remove('up');\n            element.style.height = '';\n\n            if ((finishCallback !== undefined) && (finishCallback !== null)) {\n                window.requestAnimationFrame(finishCallback);\n            }\n        }, 500);\n    });\n});\n\n};\nutils.slideDown = function (element, finishCallback, startCallback) {\n    element.classList.remove('hidden');\n    var elementHeight = element.offsetHeight + 'px';\nelement.classList.add('slide');\nelement.classList.add('up');\n\nwindow.requestAnimationFrame(function () {\n    element.style.height = elementHeight;\n\n    window.requestAnimationFrame(function () {\n        element.classList.remove('up');\n\n        if ((startCallback !== undefined) && (startCallback !== null)) {\n            startCallback();\n        }\n\n        window.setTimeout(function () {\n            element.classList.remove('slide');\n            element.style.height = '';\n\n            if ((finishCallback !== undefined) && (finishCallback !== null)) {\n                window.requestAnimationFrame(finishCallback);\n            }\n        }, 500);\n    });\n});\n\n};\n```\ncss\n.hidden {\n    display: none !important;\n}\n.slide {\n    overflow: hidden !important;\n    -webkit-transition-timing-function: ease-in;\n            transition-timing-function: ease-in;\n    -webkit-transition-duration: .5s;\n            transition-duration: .5s;\n    -webkit-transition-property: height;\n            transition-property: height;\n}\n.slide.up {\n    height: 0 !important;\n}\n. > I don't really like that its inconsistent with the thumbnail-ed items, but I thought it was worse having it be small. Maybe the small size would work now that the rest of the effect is there.\nI assumed that the inconsistency is just an bug... Consistency is key! Simply add a CSS rule or change the existing one to make it consistent, the font size isn't controlled by JavaScript.\n\nWhat do you think, Original size, or something in-between?\n\nIt's not just the font size, it looks a bit odd in general. I'll have a look as soon as you're happy with the solution, I would like to leave the details up to you :smiley:\n\nI don't really know Javascript well enough to do that. :disappointed:\n\nSure, no problem, I'll open a PR.\n. > Consistency is key... so do you consistently not sleep or is it only when you feel the urge to check GitHub early in the morning? :wink:\nCrime never sleeps. So do I. :trollface:\n\nSeriously though, is it just the behavior difference? :confounded:\n\nYes, you can see it on first glance when moving the mouse over the page... Not for fun, just when browsing the site normally. Besides the obvious text style differences :wink:\n. > It's part of the name.... but every single plugin ever developed for Pico starts with \"Pico\". :expressionless:\nYeah, removing that makes sense :laughing:\n\nAlso, should I add `target=\"_blank\" to the \"Download\" buttons?\n\nI think most users want to keep the plugins page open anyway, so, yeah, adding target=\"_blank\" is probably a good idea.\n. http://stackoverflow.com/a/14527379 :wink: :smiley:\n. That's because git is a content tracker, not a file tracker (just google for \"git content tracker\" to read more about it). git mv is basically just mv and git add. git doesn't commit/save the information that a files has been moved, it always detects moved files just on-the-fly when git log is called (however, git status knows this when git mv has been used, that's the reason why git status told you something different). You've changed the file that much, that git isn't able to detect the connection between them anymore. However, this is no big deal, you can simply ignore it. lib/Pico.php isn't connected to lib/pico.php anymore, too :wink:\n. > If I'm understanding you right, the \"renamed\" status I keep striving for is only for my own benefit? Git will automatically try to figure out what files are what based on their contents... even if I've moved them?\nExactly.\n. Looks great! :+1:\nYou can upload source files to the same directory, however, to prevent the need of using Git Large File Storage, please don't do this until you've considered the image to be final.\nbtw, fyi: smcdougall/Pico#4 :wink:\n. fyi, see https://github.com/picocms/Pico/compare/7ebcfede934cf89a62d7653f2eba25b419497254...e1a8764771aa06bb31c4229d9c987da642718a62\nNot sure about that, but you probably can't move plugins/admin.html to _plugins/admin.html, but you should test whether plugins/admin.html interferes with your _plugins directory (if this is the case we'll have to find a solution). Furthermore I suggest to use - instead of _ - they look better in URLs (i.e. you should rename your _plugins/file_prefixes.md to _plugins/file-prefixes.md, same for other plugins and themes).\n. > It shouldn't interfere at all.\nPerfect :+1:\n\nAlso, as far as I know, even if you put admin.html in _plugins (which we probably shouldn't, since it's not part of the \"collection\"), it would still be moved to plugins on build.\n\nAre you sure about that? I would rather expect that admin.html gets part of the collection array (what would likely break _includes/portfolio.html) and is removed.\n. > I'll make sure to double check it\nShouldn't be necessary, I was just wondering, we don't need it anyway :wink:\n. Hmm... The PR's diff is finally broken beyond repair... I'm not sure why this is the case, GitHub usually is pretty good at hiding diffs from superfluous commits, but it completely fails for this PR... GitHub is probably more and more confused by the commits from #352. However, here's a working diff: https://github.com/picocms/Pico/compare/gh-pages...smcdougall:customization (mostly a note to myself :smile:)\n\nFinally decide to spend some time on this and...\n\nAt least I'm not the only one who goofs :laughing: \n\nAnd before you say anything\n\nYeah, I've noticed that :stuck_out_tongue_winking_eye:\n\nSo... I want to tackle that Two-Column layout idea, but I'm not really sure what to do with it.\n\nI was thinking about either a three-column layout (columns: screenshot | description | tags and download button), a two-column layout with floated screenshot (columns: description and floated screenshot | tags and download button), or a two-column layout with a full-width description (columns: description | screenshot, tags and download button) - see below for a bad illustration. The title of the plugin should always span over all columns. Depends on what looks better... The descriptions shouldn't be considerably longer than the current ones.\n\nPlugin Name\n|  |  |  |\n| --- | --- | --- |\n| small screenshot | Lorem ipsum dolor sit amet, | By: \u2026 |\n| (use puzzle as fallback) | consectetur adipiscing elit. | Last Updated: \u2026 |\n|  | (this is the description) |  |\n|  | \u2026 | [Download] |\n\nPlugin Name\n|  |  |\n| --- | --- |\n| [small screenshot] Lorem ipsum dolor sit amet, consectetur | By: \u2026 |\n| adipiscing elit. (description floats around the screenshot) | Last Updated: \u2026 |\n| \u2026 |  |\n| \u2026 | [Download] |\n\nPlugin Name\n|  |  |\n| --- | --- |\n| Lorem ipsum dolor sit amet, consectetur adipiscing elit. | small screenshot |\n| (this is the description) | (use puzzle as fallback) |\n| \u2026 |  |\n| \u2026 | By: \u2026 |\n| \u2026 | Last Updated: \u2026 |\n| \u2026 |  |\n| \u2026 | [Download] |\n\n. > What diff isn't working for you?\nPrimarily partial diffs. However, comparing the branches works fine, so, nevermind. :smiley:\n\nThe last one I don't like. It feels like it would be inconsistent with the other entries to have the screenshot on the right.\n\nHow about interchanging the columns then? (I don't want to say that I prefer this one, really depends on how they look and that there's not too much empty space)\n\nPlugin Name\n|  |  |\n| --- | --- |\n| small screenshot | Lorem ipsum dolor sit amet, consectetur adipiscing elit. |\n| (use puzzle as fallback) | (this is the description) |\n|  | \u2026 |\n| By: \u2026 | \u2026 |\n| Last Updated: \u2026 | \u2026 |\n|  | \u2026 |\n| [Download] | \u2026 |\n\n. > @PhrozenByte changed the base branch to picocms:gh-pages-2 from picocms:gh-pages\n\n@PhrozenByte changed the base branch to picocms:gh-pages from picocms:gh-pages-2\n\nfyi: GitHub's new \"Change the base branch of a Pull Request\" feature allows us to fix the broken PR diff, works just fine now :smiley:\n. Hmm... Now that I can see it, having the plugin's title on the right feels \"wrong\" for some reason. I'm not sure why...\nI've experimented with moving it to the left, but it still looked odd (there's too much free space between the columns then). However, also moving the screenshot there made it look surprisingly well. The main problem is where to move tags (\"By\" and \"Last Updated\") and the download button to... The download button could float on the right, but tags? I've absolutely no idea...\nWhat do you think?\n\n. > The biggest reason I don't like it is that it deviates too much from the original layout. :disappointed:\nI think it's generally a good idea to uniformly use the same layout for all plugins, thus we indeed have derivative layouts between plugins and themes, but not within.\n. > As the commit message notes, this probably requires some double-checking. I'm pretty tired at the moment and noticed a pretty big issue before committing.\nI don't know what you mean, it looks great! :smiley: :+1: But more importantly, do you like it?\nFor me there's just one open question left regarding the visual presentation:\nDo you think we should use the default theme image for plugins without a screenshot, or should we rather use the puzzle piece image? In my PR I've already removed fancybox for plugins without images (see smcdougall/Pico#6; defaultImage).\nBesides that, in my view, there are just two things left before this can be merged:\n- Some of the theme descriptions (e.g. NotePaper is perfect, but \"Just Pico\" needs some more text) and quite all plugin descriptions feel \"incomplete\". The old layout didn't require much text per item, but both themes and plugins layouts require some text, otherwise they look a bit broken.\n- As always, please merge all CSS rules into the regular stylesheet. I think that you've done most of it already, so it's probably no more than moving the remaining rules. However, you should look through them, there's a \"Temporary?\" comment somewhere. Furthermore, please don't forget to upload the source files of the puzzle piece graphic and default thumbnail :smiley:\nI didn't read the submission guidelines yet, are they supposed to be ready to merge (I'll read them then)? Alternatively you can open another PR for them if you want to, this shouldn't prevent us from merging this PR.\nbtw: I don't think your ToDo \"Provide \"Documentation\" on how to use gallery and portfolio\" is necessary as long as it isn't required to add new plugins/themes. There are some more open ToDos I'm not sure about.\n\nNow, I've been meaning to post here for a bit. I've had very little time to work on this lately. [...] Ultimately, I haven't had any time or energy to work on... well... anything.\n\nThat's how it was for me as well: Too much work :laughing:\nReally, don't even think about that this might be the tiniest fragment of a problem! There are more important things, especially as a hard-working person like you are. You do something when you've time and inclination to. As always, I really look forward to your work, but don't force yourself to do something, this should be fun, not a duty :smiley:\n\nJust open a PR and I'll try to keep an eye on GitHub to merge it. [...] This redesign feels so close to completion.\n\nSure. :smiley: It definitely is very close to completion! So I've opened a PR finalizing the last few things and it should be ready to merge now (besides the things above). See smcdougall/Pico#6 for details.\n\nMaybe sometime soon I'll be able to work on #359.\n\nI look forward to it! :smiley:\n. Sounds great! I look forward to the final tweaks :+1: :smiley:\n\nI'd written the CSS in a way that affected the regular layout as well. :unamused:\n\nI've probably fixed this in smcdougall/Pico#6 without even thinking about it :laughing: \n\nI think it should use whatever is defined in the defaultThumbnail variable for that page. So in this case it would be the puzzle piece image.\n\nOkay, so we need a higher resolution version of the puzzle piece image (the max width is 333px btw) :smiley:\n\nThey're about 95% done. The content should be complete, it just needs some finalization.\n\nSo, should I read the submission guidelines in the next couple of days or should I wait until you've finished them?\n. After you've merged smcdougall/Pico#6, can you please check the styles for IE8? IE8 doesn't support the CSS opacity property (but it still supports e.g. opacity: 0.5; with -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";), so can you please add some basic (!) rules to ie8.css so that it is at least usable?\n\nOkay. How do you want to do that then? Do you want the existing file to be higher resolution, then scaled down for the regular thumbnails? Or do you want to have an entirely separate file.\n\nA separate file with a higher resolution is probably better.\n\nYeah, go ahead. You'll need to read them before you can tell me about all the parts you'll inevitably want me to rewrite. :stuck_out_tongue_winking_eye:\n\nOkay great, I'll read them in the next couple of days.\n. Not 100% sure whether the virtual machine idea, or Wine, or both were jokes (:laughing:), so, just to be sure: You can use IE's developer tools (F12 key) to emulate older IE versions, see https://msdn.microsoft.com/en-us/library/dn255001(v=vs.85).aspx\n. Hmm, yeah, that's because Jekyll automatically escapes \"normal\" ' (e.g. website's) with its typographic counterpart \u2019 (e.g. website\u2019s), but doesn't do this in code blocks (where this wouldn't be appreciated). The reason why this worked in the past actually was no more than luck, we need escaping. I'm working on it right now and will open a PR very soon.\n. Here we go: smcdougall/Pico#7\n. Actually it wouldn't be a big deal to change this to a normal (invisible) child element and clone this element every time the user opens the detail view. Using a data-* attribute is just one of multiple possible solutions which all make no big difference. With proper escaping the data-* attribute works just fine, that's the reason why I didn't change it in my rage code refactoring. However, if this really bothers you I can change it.\n. > I removed it because it didn't really serve a purpose.\nI agree.\n\nBut maybe it could be there (pinned to the beginning), with a paragraph about how you can use it as a base for your own theme...\n\nThat's probably rather something for Pico's docs.\n. :laughing: \nAfaik the fullsize image is still in use (as default image for plugins without a screenshot). I don't think it's necessary to rename the file. We should furthermore also keep the thumbnail - just for consistency. The images don't interfere with anything, so... :smile:\n. I didn't notice the saturation until now :smile: This is completely up to you, you've made the image :wink:\n. So true, so true...\nHowever, please don't forget that we don't need full support for old IE versions, support is graduated. No support for IE7. IE8 users get a very basic experience, it doesn't have to look \"perfect\", no eye candy (gradients, animations, transitions...), the only goal is that the page is usable. It's absolutely fine when the page looks quite different with IE8, it really just has to be usable. IE9 users should get a fully functional website that looks good, however, eye candy is optional. Only IE10+ users get full support, some of the eye candy might even require IE11+.\nAfaik the portfolio style already satisfies these requirements! Just IE8 isn't usable at the moment, because title and description are always visible without a background color, what makes them hard to read depending on the thumbnail (see e.g. SimpleTwo). Simply add a background color (maybe with opacity/-ms-filter) and you're done.\n. > The banner issue I mentioned however, should also be as simple as adding a background-color.\nSetting the background to Pico's green probably is a pretty rough color transition. However, setting the font color of \"Pico\" to Pico's green might be a easy and convenient solution.\n. > Anyway, I'm probably not going to worry about it. I've just been putting off the IE8 stuff because when I feel like doing actual work, I'm never running Windows. :wink:\nI recommend setting up a Windows (7 or 10) VM, e.g. with VirtualBox :wink:\n\nI'm an ArchLinux and Gnome user. How about you?\n\nDebian Jessie and GNOME 3.14 :smiley:\n. > Debian's an interesting choice. I'm sure it must be pretty stable, but Gnome 3.14 was forever ago, lol. (Arch already has the recent 3.22 release).\nUpgrading the system roughly every 2 years is IMO enough work :laughing: Although it isn't necessary, I usually start from scratch to get a shiny new system. In the meantime I want a stable system that doesn't change much - for the sake of productivity. Not least because the GNOME devs have a \"great\" sense for removing useful functions and replacing them with pure idiocy (like \"Who needs a video player queue?\" and \"He's pressing a key in Nautilus? Let's start a recursive search!\" :clap:).\n\nI'm guessing you got into Debian because of its prevalence in the server space?\n\nNo, although my servers are running on Debian, too. I've started using Linux with Ubuntu (like so many others) and switching to Debian isn't such a major step.\n. > I guess I can't really call them transitions since... that's the incompatible part... but at least the default and hover states work now, even without a \"transition\" between them.\nNo problem at all, as said, no eye candy for IE8 and IE9. They don't deserve it. :wink:\n\nI also found a clever fix for the heading gradient, so that works now. :smile:\n\nDoesn't work for me, the filter is there but has no effect for some reason :confused:\n\nbtw: IE9 doesn't support linear-gradient either, so you might want to add the header workaround to ie9.css, too.\n\nRight now the biggest thing still not working is the card view. It's really broken, especially at lower resolutions (1024x768).\n\nIE8 doesn't support media queries. We don't need to support low resolutions with IE8 (there's no IE8 on mobile devices anyway).\n. >  That's the important thing, right?\nNot necessarily. As said, the black background together with setting the font color of \"Pico\" to Pico's green is fine for me. This is up to you :wink:\n\nWait... what does Windows Mobile run? (Not that anyone uses it).\n\nI don't think that there are (practically) any Windows CE devices out there anymore - and it's EOL. The newer Windows Phone is based on Windows 8 and 10 (i.e. IE10+). Never tested it and I will probably never test it. :laughing: \n. > Here's your problem: DX filters are no longer supported :wink:\n\nHmm... That's odd. The image issue I described with the card layout doesn't seem to happen in IE11's testing mode. That's going to make it harder to figure out. :confused:\nWhat if we could link to specific themes/plugins using an ID\n\nSee smcdougall/Pico#8\n\nAlso, the Windows Mobile/Phone thing wasn't a serious question, lol.\n\nI know. Nevertheless, just fyi :stuck_out_tongue_winking_eye: \n\nDo I get a bonus every time I use the word contribute. :laughing:\n\n:laughing: \n. Try removing position: absolute and setting display: inline-block (float: left will pretty likely have some side-effects). However, you'll have to test it (don't forget to test nesting!) with older IE versions and mobile browsers... The reason for this mess might be IE6 or some other very old browser we explicitly don't support anymore - or some obscure mobile browser... :unamused: \n\nOr we could change it specifically within the card layout to avoid unintended breakage... :thinking: \n\nNo, this should be fixed everywhere.\n. > Okay. Is there something wrong with using float? Did you find something it breaks?\nI didn't test it specifically for Pico's website, just experience :smile: However, just my 2 cents, the decision is up to you.\n. > do you have any insight on that YAML issue I was having in the beginning?\nMaybe a reserved word for Jekyll or something, idk.\n\nSo, awhile back you mentioned wanting a high-resolution version of the Puzzle Piece image for the fullview screenshot. I was thinking of recreating it as an SVG\n\nSure, why not. IE9+ supports SVG, i.e. using SVG should be fine. Use a .png for the default thumbnail and add a appropriate display: none; to ie8.css so that IE8 users don't see the SVG fullsize default image at all.\n\nAt the very least I need to make it so the Default Theme isn't used as a stand-in anymore.\n\nPersonally I've nothing against using the default theme as stand-in... Your decision.\n\nWait... could git perform diffs on SVGs? :open_mouth:\n\nSure. However, the diffs aren't very useful :laughing: \n\nThen, all that's left on my list is \"Find a replacement for the None category? (created when I removed multi-page)\" [...] Maybe that's unnecessary though. I mean... not every item has to belong to a category, right?\n\nI agree.\n\nUnofficially (or, at least, not on my list), there's the idea of creating a defaultThumbnail for Themes. [...] we probably wouldn't accept submissions that didn't provide images, so I guess we don't need a special thumbnail for them.\n\nI agree.\n\nThen there's the idea of a plugin-specific Contribute Tile image. Could probably still create one of those.\n\nThat would be great! It feels a bit \"misplaced\" on the plugins page.\n\nAnyway, rambling aside, this is getting surprisingly close to finished. :smile: :tada:\n\n:+1:\nJust tell me when you're ready and I'll read through everything a last time before merging it. :tada:\n. > :laughing: I meant more that it could operate on file deltas instead of having to reupload entire files every time there's a change.\nThe SVG shouldn't be that big :wink:\n\nThoughts? I didn't give the SVG a white background. I think I like this effect.\n\nHmm... IMHO the stripes look a bit odd when they are even darker than the surrounding, already very dark background. Maybe it also needs some sort of separation (i.e. a border), however, I'm not so sure about this. :neutral_face: \n. Can you please try making the stripes slightly brighter than the background?\n. > Here's the new Plugin Contribute Tile image.\nI like it, looks great! :+1: :smiley: Just one minor thought: The black plus sign might be a bit too dark for the pretty light background, instead of #000000 I recommend something like #616161 (this is the default text color of our website).\n\nTake another look at the Submission Guidelines, specifically the Getting Started section and tell me what you think needs work.\n\nLooks good! How about mentioning alternatives to shell commands (as many people use IDE integrations and some even seek for graphical tools like TortoiseGit (Windows), GitHub Desktop (Windows, OS X) or gitg (Linux)) and transforming this whole section to either some paragraphs of continuous text or a numbered list (probably rather the latter)? IMHO the following two pretty good GitHub Guides should be mentioned somewhere:\n- https://guides.github.com/activities/contributing-to-open-source/\n- https://guides.github.com/activities/forking/\n. > Would it suffice to simply mention that there are GUI options?\nYes, mentioning them is enough. However, I suggest also linking at least GitHub Desktop.\n\nI think my proposal would be adding an intro paragraph mentioning GUI clients, the web interface, where to learn some basic instructions, and how to contact us (IRC) if they need help. Then go into the existing content/shell commands, but formatted better (perhaps as a numbered list).\n\nSounds like a good plan :smiley:\n\nOh, not sure if you noticed, but the contribute tile has puzzle pieces in the background! :laughing:\n\n:laughing: No, I didn't notice them. Looking forward to your improvements :smiley:\n. There's an scaling issue with the SVG in IE 8-11. You can fix it by adding the following CSS rule to style.css:\ncss\n.portfolio-detail-view.card .content > .image > img {\n    width: 100%;\n}\n. > Okay, made some improvements to the Plugin Contribute Tile. :smile:\nLooks great! :+1: :smiley:\n\nAdded some info to the beginning of the Getting Started section. Converted the rest of the content to an ordered list\n\nVery good! Can you try removing the paragraph after the bold \"headers\" (Fork, Clone, Checkout, Make Changes...)? I think that this might be the reason why it looks a bit odd. Btw, there's a whitespace missing between the Fork SVG image and the word \"Fork\".\n\nLet me know what you think of it / where you think it still needs work.\n\nSo, does this mean that this is ready to merge and I should read through everything a last time? I'll do this tomorrow then :smiley:\n\nYay! Wasn't expecting that in my inbox.\n\n:tada:\nWe'll furthermore move from the gh-pages branch to picocms/picocms.github.io after we've merged this PR. This should also make your countless contributions much more visible. :smiley:\n. > Yes. Everything is \"Ready-to-Merge\", minus whatever papercuts we discover between now and then.\n:+1: :smiley:\n\nAlso... doesn't that technically mean I should point to that repo in the Submission Guidelines? Or are both locations going to be maintained?\n\nWe'll see what changes are necessary when switching the repo :smiley:\n. See smcdougall/Pico#10 for my (hopefully final) thoughts :smiley:\n. What's the size of this file?\n. Hmmm... I tend to suggest Git LFS. It's probably the \"cleanest\" solution. What do you think?\n. That's correct, however, the problem is that I can't think of reasonable alternatives at the moment. :unamused: \n. > Well, since it's not required for this PR, I'd suggest leaving it off for now.\nI agree. However, this is nothing we should forget about (i.e. add a ToDo to our list if we don't resolve it now)\n\nMy reasoning for this is that, later on I can always delete said repo without disturbing anything. (No need to worry about commit histories, old versions, etc).\n\nActually that's one of the reasons why a separate repo is no good idea :unamused: We should keep everything at one place.\n\nOh, and btw, your date format broke things:\n\nGitHub wasn't complaining about it :smile: :wink:\n. > Yeah, but you were worried about the extra space that would take up.\nThat's the reason why I was suggesting Git LFS :laughing: With Git LFS the file is stored separately on a arbitrary server (GitHub e.g. hosts such servers). The large file is then replaced by a simple text file pointing to that space in the repo.\n. > Well, if it's how you want to handle it, that's fine.\nThis is rather a brainstorming than a decision :laughing: \n\n1) Where do you want the file in our repo? (the text pointer)\n\ndunno. _themes/images/fullsize/contribute.kra?\n\n2) Where will the real file be? Is that storage something that GitHub offers (and for free)\n\nAfaik: Yes. Never used it either. See https://git-lfs.github.com/\n\nAt this point it's just waiting on you.\n\nSure, go on and merge it. As you said, this isn't required for this PR.\n. :confetti_ball: :tada: :beers: \nAmazing work @smcdougall, thank you! :+1: :smiley:\n. > I've got a little more work to do though.\n:laughing: \n\nAlso, one plugin I cut from the old page was \"Pico Navigation\".\n\nI probably tested it, but I'm not sure. Anyway, it is going to be incompatible with Pico 1.1 and most people use a custom theme anyway, so simply leave it out. It's discouraged anyway, this can easily be achieved with Twig.\n\n:open_mouth: I can edit your comments now.  I went to click on the \"reaction\" button and hit Edit by mistake.\n\nYep :laughing: \n. > Unlike some people. :stuck_out_tongue_closed_eyes: \ncough no idea about who you're talking cough :laughing: \n. Note for myself: Use https://github.com/picocms/Pico/pull/359/files/a48924bbc2d3ce208c86554d6c05dae667132d8e..HEAD to get a diff of all changes except for the changes of #352\n@smcdougall: You can btw cherry pick the additional commits on a clean branch using git cherry-pick 3a76be4^..e28a3da if you want to :wink: (but you don't have to, just want to let you know)\n. In response to https://github.com/picocms/Pico/pull/352#issuecomment-225431294:\n\nI was thinking of not having a main page anymore. [...] Each document would have it's own ToC subsections breaking things down, but not replace the global ToC.\n\nAh, I see. Sounds like how readthedocs is organized. I'm completely fine with that. I look forward to your suggestions :smiley:\n. Done, see https://github.com/picocms/Pico/compare/d222e809079a1c4b05225d093615d30898b1afa3...cec55eaccad757733f65718a6849a49522d5315b :smiley:\n. Nice to hear that! :smiley:\nAfaik we've already discussed the general direction (however, I'm not sure where :smile:). Just a organizational note: Please move all individual pages to a separate directory (e.g. docs; finally a new feature without Jekyll Collections :laughing:). The first page looks good! :+1:\n\nIf you get the chance though, give me a :+1: or :-1:. :smile:\n\n:+1:\n:laughing: \n. Moved to picocms/picocms.github.io#6.... :+1:\nThank you @BesrourMS! :smiley:\n. Unfortunately this isn't supported by erusev/parsedown-extra at the moment. There's a pending PR, see erusev/parsedown-extra#86. However, even the original PHP Markdown Extra Parser doesn't support this (even though the docs claim so; try http://parsedown.org/extra/). Please note that erusev/parsedown-extra is an upstream project.\nIn the meantime you can use HTML.\n. > I think it was just to maintain compatibility with Pico in a subfolder...\nYes, this was the reason for it. However, it affects the nginx config only, Apache/.htaccess works just fine.\n. Yes, it works just fine with Apache. .htaccess already includes the ^ in question.\n. So @smcdougall, any updates on this? :wink:\n. It doesn't have to be a \"perfect\" solution, it's temporary anyway - Pico 1.1 doesn't need this, see 6465c2b0a99b5262f25083af70b94668c1cac6af\n. Fixed in Pico 2.0 (resp. the corresponding website updates), see https://github.com/picocms/picocms.github.io/commit/8ccd6610646d31c950ee42f5c2c3b60878a824bc. This will be merged as soon as we finally release Pico 2.0 (hopefully soon...). Someone :laughing: \n. @blocknotes's pico_edit plugin unfortunately doesn't support changing the admin URL. However, we're working on a official admin plugin for Pico 1.1 what will support this, so please stay tuned.\n. I originally wanted to say something like\n\nWow, what a coincident. I was searching for a meaningful, short example of a plugin for our about page (#352) - and this is just the perfect example! :+1: :smiley:\n\nHowever, some time after I've started writing the example, I realized that this is going to be much more complex than I thought in the first place. This definitely is nothing for Pico's core (most users don't expect something like this to happen), but it can be realized with a plugin (like... yeah... anything). I could say that I'll keep this in mind for Pico's official blog plugins we're planning to release together with Pico 1.1 (#334), however, I didn't want to stop after I've started to work on the example code, thus you can now use some sort of \"commissional work\" \"for free\".\nTo cut a long story short: https://github.com/PhrozenByte/pico-file-prefixes\nHave fun! :laughing: :smiley:\n. Personally I neither know what MobileDetectBundle is nor what you're trying to achieve with it. Can you please elaborate?\n. I'm still neither sure what he's trying to achieve nor what the actual question is. Do we support this piece of software in particular? No. Do we support doing something like what this piece of software does? Sure, why not. Is it possible to make this particular piece of software work with Pico? Maybe. Do I think that it is meaningful to do something like what this software does? Very likely not, there are probably better solutions, depends on what he's trying to achieve.\n. As far as I understand the README.md of MobileDetectBundle right, the project is (mostly) a Symfony wrapper for https://github.com/serbanghita/Mobile-Detect. Thus you can use this library straight to do your checks and change Pico's $config['theme'] variable during the onConfigLoaded event.\nHowever, I don't think that server-side, UA-based detections are a good idea in general, you should use a theme that works great on both desktop and mobile devices instead. This ultimately depends on what particular problem you're trying to solve with this detection. However, if you really want to use it, sure, that's possible.\n. First of all: We always love to hear that someone wants to contribute, so, welcome! :smiley:\nAt this point we use GitHub Issues for quite everything, including this kind of question, so you're completely right here. :+1:\nWe've changed the parameter order with Pico 1.0. The deprecated before_render event receives the parameters before_render(&$twig_vars, &$twig, &$template), however, the new onPageRendering event receives onPageRendering(Twig_Environment $twig, array &$twigVariables, &$templateName). Note that $twig_vars and $twig have been interchanged.\n. First of all, thank you for your PR and making Pico even better @mpavelka! :+1:\nUnfortunately I've to tell you that this is against Pico's recommended way of managing assets. Let me explain the reasons:\nPassing static files (like images) through PHP is a highly unperformant solution. A user usually generates just a single dynamic/interpreted request per page impression (i.e. the actual page), plus a much higher number of static requests (e.g. stylesheets, images, JavaScript ...). A dynamic/interpreted request causes an order of magnitude higher performance impact on your server than a static request and is - by far! - the most important limiting factor of how many concurrent requests your webserver can handle.\nBy serving just one image through PHP, a single page impression results in two dynamic/interpreted requests. Serving just two or three images are then very likely sufficient to cause the same performance impact as two \"normal\" page impressions. This bisects the number of concurrent requests your webserver can handle!\nTherefore passing static file requests through PHP is no option. However, I agree that users want to store their assets together with their contents. Nevertheless, we deny access to the content/ folder for security reasons. This protection actually isn't necessary for a vanilla Pico installation because it serves all contents of the content/ folder anyway, however, plugins may restrict access to certain pages. As this may cause hidden security issues for users who want to use such plugins, we deny access to the content/ folder by default (\"security by default\").\nThis unfortunately leads to a conflict of aims between convenience and security. The obvious solution is to still deny access by default, but allow access to certain files (e.g. by matching MIME types). However, configuring your webserver to do so is (besides its still not negligible performance impact) a pretty complex topic and varies from webserver to webserver. I think that this is a topic for very advanced users only.\nThus we recommend to create a distinct assets/ folder. This definitely is not a convenient solution, but - as far as I know - the only practicable.\nPersonally I recommend you to configure your webserver to behave as elucidated above. If you still want to pass asset files through PHP, I recommend you to create a plugin (simply hook into Pico's onRequestFile event). Again, thank you for contributing! :+1:\n. @mpavelka, you're welcome, I've added this to Pico's ToDo list to create a appropriate \"advanced asset handling howto\" :smiley:\n@smcdougall, do you want to incorporate the above explanation into #359 (beginning with \"Nevertheless, we deny access to the content/ folder for security reasons. [\u2026]\")?\n. Hi and Welcome to Pico @lostideaslab!\nI assume you're trying to use the current URL in a Twig template that isn't called through a page, but a plugin, correct?\nAt the moment we don't pass the request URL to Twig because this might create security issues (e.g. {{ request_url|content }} combined with a request like http://example.com/pico/../../../../etc/passwd and :boom:, we've a working exploit). Our problem here is that Pico::$requestUrl is intentionally just the raw string representing the request part of the URL the user requested. In contrast, Pico::$requestFile already references a (not necessarily existing) content file - and plugins may change this to something else, even to files outside the content dir. It might be a good idea to add something in-between to Pico 1.1... I'll think about that.\nIn the meantime you'll have to pass the URL on your own. What exactly are you trying to achieve?\n. I'm still not sure what you're trying to achieve. How are you going to use the parent and grandParent keys?\n. Ah, I see, yeah, definitely makes sense. So it's about pages after all. You even don't need a plugin for that, you can achieve this with just Twig: :smiley:\ntwig\n{% set parents = current_page.id|split('/')|reverse %}\n{% set parent = parents[1] %}\n{% set grand_parent = parents[2] %}\nGetting a page's siblings is easy, too:\ntwig\n{% set parent_path = current_page.id|split('/')|slice(0, -1)|join('/') ~ \"/\" %}\n{% for sibling in pages if page.id starts with parent_path  %}\n    {{ sibling.title }}\n{% endfor %}\nUsing page.id is completely fine for that and doesn't expose you to the risk of security issues due to malicious request URLs :smiley:\n. Pico actually doesn't differentiate between showing a single page and listing pages - Pico leaves this up to themes. If you have any other question, please don't hesitate to ask :smiley:\n. First of all, thank you for your contribution @lostideaslab! :+1:\nAt the moment I'm not sure what to do. Examples like yours are predestined to be part of Pico's cookbook, but as you'll probably notice on first glance, it actually isn't ready to use yet (better: it's no more than a intention; that's the reason why there's no link to it on our website). However, at the moment there are some other things in the making which tie up our resources and this probably won't change in the near feature, so this will very likely get lost - what is extremely unfortunate :unamused: :disappointed: \nDo you think you can help us? :smiley: It would be marvelous if you think about how a cookbook can be organized and displayed (the current one is just a short draft without any claim to be useful, even as a template) and help us implementing it. You can find our website on the gh-pages branch.\nRegarding the actual examples: Looks great to me! :+1: Maybe @smcdougall wants to say something about it, he implemented a tag cloud with his NotePaper theme. The only remark I would like to make is that you can use Pico's official \"HTTP Parameters\" plugin instead of QueryParamProvider. The plugin backports functionality that will be integrated in Pico's core starting with Pico 1.1, so your example won't even need any plugin with Pico 1.1 (what is currently under development) and later if you use the HTTP Parameters plugin.\n. I look forward to your suggestions and your PR @lostideaslab! I'll close this issue for now.\n. Pico uses Parsedown (resp. Parsedown Extra) to parse Markdown contents - it's way faster than the original Markdown parser. Unfortunately Markdown (the markup language) never was fully standardized and the specs are pretty ambiguous. As a result, all Markdown parsers behave more or less differently (the original Markdown parser e.g. violates its own specs pretty often). I'm not sure whether this is really a bug, however, you can report this behavior to Parsedown Extra, maybe they decide to change/fix it. Unfortunately this is out of Pico's control, Parsedown is a upstream project.\nAs far as I know, the markup you're trying to achieve isn't possible with Parsedown. However, depending on what you're actually trying to achieve, there might be alternative solutions, e.g. by using a nesting <div>:\nhtml\n<div markdown=\"1\" class=\"myclass\">\nThis is a second *test*\n</div>\nresults in\nhtml\n<div class=\"myclass\">\n<p>This is a second <em>test</em></p>\n</div>\n. Looks great :+1:\n. Done, see c1e3e9c. Hopefully we can merge #358 soon, I'm so used to @smcdougall's great work that our current page looks sooooo ugly... :laughing: \n. As always: Thanks! :+1:\n. The contents of the \"current page\" aren't loaded twice, there's a check in Pico::readPages() that ensures this. The goal of Pico::discoverCurrentPage() is primarily to determine the next and previous pages (something we can't do until we've sorted the pages).. btw: v1.0.0 behaves exactly the same, only versions prior to v1.0.0-beta.1 (e.g. v0.8 or v0.9) behave different.. All in all: Yes.\nHowever, there's a \"more recommended\" way of using excerpts: Don't rely on (very likely quite bad working) automatisms, rather create the excerpt on your own. Add the excerpt to a YAML variable (e.g. Description) and include it by using %meta.description% in your Markdown file. See Pico's content-sample/index.md for an example.\nIf you really want to create excerpts automatically, I recommend implementing the first_paragraph filter to work with Markdown contents instead (e.g. by searching for \\n\\n instead of </p>), i.e.\nTwig\n<div class=\"post\">\n    <h3><a href=\"{{ page.url }}\">{{ page.title }}</a></h3>\n    <p class=\"date\">{{ page.date_formatted }}</p>\n    {{ page.raw_content | first_paragraph | markdown }}\n</div>. Looks like an issue with your composer installation to me. Did you try https://getcomposer.org/doc/articles/troubleshooting.md#degraded-mode? If this doesn't help, please refer to composer/composer, join composer's IRC channel and/or open a new Issue there. Alternatively you can simply use one of Pico's pre-bundled release packages instead.. @dkyme, sorry for the late response, thanks for testing! :smiley: Very strange issue. What browser and webserver software are you using?. @dkyme: Have you checked your webserver's error.log and a possibly existing separate PHP log?. Sure, that's fine @dkyme, you don't need a separate PHP error log, I'm mentioning this only because people must look at all possible places where PHP errors can show up. In your case the webserver's error.log already shows everything we need. This was a bug in Pico Admin, I've fixed it. Thanks for reporting! \ud83d\udc4d . @dkyme: Again, very strange issue. Can you please add the following code to line 347 in your lib/Pico.php (after the $this->triggerEvent('onRequestFile', ... line)?\nphp\nvar_dump($this->requestUrl, $this->requestFile, $_SERVER, $this->config); die();\nThen navigate to the following pages and give me the output (you might want to use pastebin or something similar; I need the output of $this->config only once, i.e. you can remove this last variable in subsequent requests). When a error page of your webserver shows up, simply tell me what exact error is shown and check your webserver's error.log.\n\n/\n/?sub/page\n/sub/page/\n/?admin\n/admin\n/?admin/content/edit/index\n/admin/content/edit/index\n. > Is it an expected behaviour that navigating to /admin the redirect immediatly goes to /admin/content/edit/index while showing the login?\n\nYes, this is expected since there's currently just one admin module installed.. @rxng: No, there are also no plannings to add such a feature. It definitely is possible (Pico's plugin system is very powerful), however, things like a role system are explicitly out of Pico's scope (i.e. you can create a plugin for that, however, there will never be a official plugin).. @Chris2011 Unfortunately not, \"it's done when it's done\" \ud83d\ude1e Releasing Pico 2.0 is more important right now and my time is very limited.. @filisko PicoAdmin initially was part of Pico 2.0's roadmap, but isn't anymore. However, PicoAdmin will be the next project right after releasing Pico 2.0.\nIf your question rather was whether #334 is the roadmap for Pico 2.0 (i.e. your question isn't related to PicoAdmin): Yes, #334 is the roadmap for Pico 2.0.. One of the more important tasks is updating Pico's changelog (including a \"What has changed\" page), writing upgrade instructions and updating the docs (including the install instructions, users should now use a composer-based installation when possible). Pico \"as is\" (i.e. the source code) is basically ready for release. Help is very welcome! \ud83d\udc4d . Pico Admin was deferred in favour of Pico 2.0. Pico 2.0 is feature-complete, but the website wasn't updated yet due to limited time. Help is appreciated.. Pico denys access to the content folder for security reasons, see https://github.com/picocms/Pico/pull/368#issuecomment-243231769 for a detailed explanation (starting with the 5th paragraph).\nPlease also refer to http://picocms.org/docs/:\n\nAs a common practice, we recommend you to separate your contents and assets (like images, downloads, etc.). We even deny access to your content directory by default. If you want to use some assets (e.g. a image) in one of your content files, you should create an assets folder in Pico\u2019s root directory and upload your assets there. You can then access them in your markdown using %base_url%/assets/ for example: ![Image Title](%base_url%/assets/image.png)\n\nSimply create a assets folder, upload your .pdf to this folder and add a link to it in either one of your content/Markdown files (e.g. [Download `test.pdf`](%base_url%/assets/test.pdf)) or one of your Twig templates.. You've downloaded a source code archive rather than a release archive. Simply use https://github.com/picocms/Pico/releases/download/v1.0.4/pico-release-v1.0.4.tar.gz instead \ud83d\ude03 . It's a mistake of GitHub Pages silently changing things and doing some crazy shit - again... \ud83d\ude12 \nIt's fixed now. Your browser might cache the wrong redirection, if it is doing so, simply directly navigate to http://picocms.org/docs/. Sorry for the inconvenience.. http://picocms.org/docs/#config:\n\nYou can override the default Pico settings (and add your own custom settings) by editing config/config.php in the Pico directory. For a brief overview of the available settings and their defaults see config/config.php.template. To override a setting, copy config/config.php.template to config/config.php, uncomment the setting and set your custom value.. @Zanatoo: Check your file permissions, PHP/your webserver likely isn't able to access the files.. Great to hear that @Prolegomenes, thanks for your feedback! Our wiki is editable for everyone, you can add your website to the Showcase yourself if you want to :smiley: :+1:. I've answered this question in #picocms on Freenode. Just for the record, this is the final solution @sajidmc was asking for:\n\n```twig\n\n    {% for page in pages if page.title %}\n        {% if parentPage and not (page.id starts with parentPage) %}\n            {% set parentPage = null %}\n                \n\n        {% endif %}\n    {% set pageDepth = page.id|split('/')|length %}\n    {% if pageDepth == 1 %}\n        <li><a href=\"{{ page.url }}\">{{ page.title }}</a></li>\n    {% elseif (pageDepth == 2) and (page.id ends with \"/index\") %}\n        {% set parentPage = page.id|slice(0, -5) %}\n        <li>\n            <a href=\"{{ page.url }}\">{{ page.title }}</a>\n            <ul>\n    {% elseif (pageDepth == 2) and parentPage %}\n        <li><a href=\"{{ page.url }}\">{{ page.title }}</a></li>\n    {% endif %}\n{% endfor %}\n\n\n{% if parentPage %}\n    {% set parentPage = null %}\n        \n\n{% endif %}\n```. > My only concern would be that this makes the contributing page run a bit long\nWhat do you think about moving everything except for the \"Issues\" and \"Contributing code\" sections to a separate DEVELOPMENT.md? These sections aren't really related to \"contributing\", they rather explain in-depth how we want to organize our project.... Nothing special to consider here, simply create a plugin for Pico that handles the AJAX requests to load the next few posts when the user reaches the bottom of the page. AFAIK there's no plugin for something like this yet, i.e. you'll have to develop it on your own.\nPico uses a event-based system that allows you to hook into Pico's processing. Have a look at Pico's plugins/DummyPlugin.php, Pico's class docs and the developer docs (still WIP).. Your webserver doesn't support PHP resp. PHP isn't enabled on your webserver. You'll need to enable PHP. If you e.g. want to use PHP with mod_php, install the libapache2-mod-php package. You can check your webserver configuration by creating a info.php in your httpdocs directory (e.g. /var/www/html) with the following contents. Open it in your browser, infos about PHP should show up. After you've installed/enabled PHP, Pico should work just fine.\nphp\n<?php\nphpinfo();. Try Ctrl + F5. Things like this can only happen when PHP isn't working at all, since your webserver is sending the raw contents of the index.php. Check your webserver's error.log (e.g. /var/log/apache2/error.log).. Try installing the php7.0-xml package, not sure why this isn't installed by default on Ubuntu 16.04. You might have to restart Apache afterwards (service apache2 restart).. Heck, since when is Ubuntu's default LAMP installation that incomplete? \ud83d\ude12 All these packages are usually part of the default installation of a LAMP system (i.e. \"recommended\" in terms of dpkg/apt)... I've absolutely no idea why Ubuntu changed that \ud83d\ude15 \nAnyway... Try installing the php7.0-mbstring package.\n\nI keep getting the same result as before\n\n~~By \"the same result\" you don't mean that you get run(); in your browser, but rather a completely white page, do you? Because the errors in the error.log and getting run(); are mutually exclusive :smile: If not, try Ctrl + F5 (i.e. a force reload in your browser).~~ I've missed that you edited one of your comments above.\nNevertheless, we're getting closer... \ud83d\ude06 Maybe there are some more packages missing which should already be installed... If it still doesn't work, please keep attaching the error.log :smiley:. Great! \ud83c\udf89 You're welcome!\nIf you have any other problem, please don't hesitate to create a new Issue, comment on this Issue or to join us on #picocms at Freenode. Happy testing! :smiley: . First of all: Thank you for your contribution @Foolre! :+1:\nI was thinking about this and there are some problems from my perspective. I'm unfortunately not very experienced with Docker, so please pardon possible misunderstandings if I'm wrong.\nThe only direct issue with your PR is that it uses PHP's built-in webserver, which is intended for testing and development purposes only. PHP's docs expressly state that it \"should not be used on a public network\" (i.e. in productive environments). Thus a official Docker container for Pico should rather use a Apache- or FPM-based container.\nThis leads us to a more general problem: Decisions. Should Pico's official Docker container rather use Apache (i.e. mod_php), or FPM? If it is the latter, what webserver (and Docker container) should be used (Apache vs. nginx vs. lighttpd vs. I don't know)? Should Pico's official Docker container use PHP 5.6, 7.0 or 7.1? Should the Docker container base on Alpine Linux or a \"full-featured\" basis like Debian?\nAs you can see there are a bunch of variables I'm not sure about to make a definite decision. Creating a Docker container for Pico is no big deal, it doesn't really differ from the normal installation instructions, just instead of directly executing the commands we put them in a config file. Users might want to make their own decisions regarding the Docker image to use (see above).\nThus I tend to rather create a appropriate section on our website describing (ref: @smcdougall) how using Pico with Docker might look like. However, I definitely didn't make a decision yet, feedback and other opinions (including yours @Foolre!) are highly appreciated!. > maybe it's a better fit in the documentation with some examples\nEven though our decision was to create a Docker tutorial just in the short-term and to create a actual Docker container in the long-term, I guess that it's rather realistic that we just create a Docker tutorial in the long-term \ud83d\ude09 I've added this to our website's ToDo list (see picocms/picocms.github.io#7).\nPlease note that postponed is not abandoned, but since it's rather a long-term thing I'm closing this now. We will get back to this PR when creating the Docker tutorial... \ud83d\ude04. Pico uses Symfony YAML to parse the YAML frontmatter and follows the YAML standard pretty strictly. Numeric values might get interpreted as octal. Postal codes are numeric strings, so you should explicitly tell Symfony YAML to interpret it as string to avoid false assumptions by the YAML parser:\nyaml\n__companyPostalCode: \"09111\". First of all: Thank you for your contribution! :+1:\nUnfortunately there are some problems with your PR:\n\nThe file to include isn't checked in any way, just think of %include% \"../../../../../etc/passwd\". Starting with Pico 2.0 (see #334) you can use the Pico::resolveFilePath() method for things like that.\nThe exception message should include the name of the file which is trying to include the missing file.\nIt should be possible to include multiple files, not just a single one. However, be careful about recursion (what might be a valid feature, but circular includes are bad).\n\nHowever, I'm not 100% sure whether we should support a %include% tag in Pico's core. We try to follow a pretty strict separation of content and presentation, i.e. you should think of Markdown contents more like a (pretty powerful) \"input field\" in some CMS's admin panel (like WordPress). All the crazy stuff can (and should) be implemented using Twig in your theme (and we encourage people to create own or at least modify existing themes).\nJust an example: A single page of my company's website consists of a bunch of content files in a directory, which are arranged in a certain way (more specifically, they are arranged as \"cards\" one after another). Your %include% tag might be an alternative to this, but it's way less powerful than editing the theme you use.\nJust to make this clear, I like your idea and think that there are users that would \u2764\ufe0f to use a %include% tag in their Markdown files, I'm just not sure whether we should include this in Pico's core. However, I didn't make any decision yet, more input is welcome!\nIf we make the decision not to merge this, you have my strong vote to create a plugin and promote it on our website. Simply hook into the onContentParsing event and do your replacements there, virtually no changes to your code necessary. \ud83d\ude03\nphp\nclass PicoMarkdownIncludesPlugin extends AbstractPicoPlugin\n{\n    public function onContentParsing(&$rawContent)\n    {\n        // your code\n    }\n}. > About adding %include% tag in Pico's core - after some thinking over I agree with you that it will be better to make a plugin instead.\nSince there was no other feedback and we agree on this, we should probably create a plugin instead. So, after you've created said plugin (you can use e.g. https://github.com/PhrozenByte/pico-file-prefixes as \"template\" for the repo), I'm happy to officially promote your newly created plugin on Pico's website \ud83d\ude03 \ud83d\udc4d . I'm closing this for now, waiting for your plugin to promote it on our website \ud83d\ude03 \ud83d\udc4d \n. Thank you for letting us know @AndiLeni, great work! \ud83d\udc4d \nYou can add your fork to the plugins page of our Wiki to promote it. Optionally you can also take look at the Submission Guidelines of our website.. I've added your plugin to https://github.com/picocms/Pico/wiki/Pico-Plugins. Thanks again @AndiLeni!. This issue is not caused by Pico, Pico always returns the same URL for a page.\nNevertheless, you don't need things like a 301 redirect to fix this, simply add a canonical link element to your theme, e.g.\ntwig\n{% if current_page %}<link rel=\"canonical\" href=\"{{ current_page.url }}\" />{% endif %}. The \"search engines see duplicate content\" issue is fixed by the canonical link element. If you want a \"cosmetic\" fix (i.e. a 301 redirect), use Apache's mod_rewrite or similar. Again, this issue isn't caused by Pico.. This is expected behavior. Pico is open source, you can extend the Pico class and overwrite the necessary methods to change it. Said cosmetic issue can be fixed using Apache's mod_rewrite. Pico never used inconsistent URLs.. What exact \"server-side error during parsing\" do you experience?\nAdding a meta value with a whitespace in its key works just fine.\n```yaml\nkey with: some whitespaces\n```\nresults in\narray (size=9)\n  ...\n  'key with' => string 'some whitespaces' (length=16)\n  ...\nThere's no need to slugify anything here, you can access such a meta value in Twig using {{ meta[\"key with\"] }}.. That's the reason why you shouldn't use spaces in meta keys \ud83d\ude09 Simply use key_with in your YAML frontmatter, so that you can access the meta value using Twig's dot notation (i.e. {{ meta.key_with }}).\nbtw: date_formatted isn't intended to be set in the YAML frontmatter, its value is automatically generated by Pico's core. You can \"slugify\" a meta value's key by hooking into Pico's onMetaHeaders event and registering the meta value. The following example plugin registers the meta value Key with (note the space and the uppercase K) and makes it available using the key_with key (note the underscore, i.e. {{ meta.key_with }}):\nphp\nclass SomePicoPlugin extends AbstractPicoPlugin\n{\n    public function onMetaHeaders(array &$headers)\n    {\n        $headers['key_with'] = 'Key with';\n    }\n}. AFAIK there's no \"download manager\" plugin or something like that yet. A very simple solution is to upload the ZIP files (like any other asset file) to your assets/ folder, create a content/download.md and list all files to download there.\nPlease also refer to our User Docs:\n\nAs a common practice, we recommend you to separate your contents and assets (like images, downloads, etc.). We even deny access to your content directory by default. If you want to use some assets (e.g. a image) in one of your content files, you should create an assets folder in Pico\u2019s root directory and upload your assets there. You can then access them in your markdown using %base_url%/assets/ for example: ![Image Title](%base_url%/assets/image.png). This is up to the theme you use. You can either use one of our many community-developed themes (there are some featured themes on our website, and even more on our wiki), or develop a custom theme on your own (see our docs, Pico uses Twig as template engine). Categories (or tags) are pretty easy to realize with pure Twig, however, there are also some plugins out there carrying everything out theme-independent. Again, please refer to our docs; you can find plugins on both our website and our Wiki.. First of all: I don't think that this is a good idea. Nevertheless, Pico is open source and has a powerful plugin system that allows you to achieve this on your own. You'll have to extend Parsedown, the Markdown parser Pico uses - there's an article about extending the parser in the Parsedown wiki. Starting with Pico 2.0 (#334) you can replace Pico's Parsedown parser object using the onParsedownRegistered event.\n\nhttps://github.com/picocms/Pico/blob/fc76d37dbca70c7e6aefa3807f005860d73bbb0b/plugins/DummyPlugin.php#L426-L436. Please refer to nextcloud/cms_pico on GitHub for questions about how to use Nextcloud's Pico integration.\nAs an exception: Yes, sure. You can find Pico's plugins and themes dirs in the apps/cms_pico/Pico dir. When uploading a plugin, it is immediately available to all websites. When uploading a theme, you first have to add it to your NC instance using the Pico configuration page in NC. See cms_pico's Wiki page for more info. If you have any further questions about Nextcloud's Pico integration, please refer to nextcloud/cms_pico - this makes it easier for others to find solutions to already answered questions.. What do you mean by \"resizing images\"? Choosing the right zoom factor to properly display the image on your website is up to the theme you use (and your browser, of course). If you rather mean \"physically\" resizing the image (i.e. changing the dimensions of the image itself and reducing the file size of the .jpg/.png/...): Pico neither supports auto-resizing images (however, as always, you can still write a plugin if you want to), nor does it include any kind of \"asset handling\". You should always upload images roughly in the sizes you need (to get a good file-size-to-image-quality-ratio), the rest is choosing the right zoom factor (see above).. Parsedown Extra, the Markdown parser Pico uses, unfortunately doesn't support this at the moment. Afaik there's a open PR for that, but wasn't merged yet.\nI nevertheless believe that this is up to your theme. Contents and how they are presented should be separated strictly. If you want a smaller images that e.g. floats around text, you should use a appropriate CSS class. Parsedown Extra supports adding classes to images (e.g. ![](http://example.com/my_image.png) {.float-right} and CSS .float-right { float: right; width: 40%; }).\nFor everything else is plain HTML in the .md file the right solution. Markdown just tries to make writing contents easier, it isn't intended to fully replace HTML.. Pico is a open source project, there's no official commercial support, installation service or suchlike. However, if you need help you can take a look at our docs, open a new Issue with a concrete question right here on GitHub or join us on #picocms on Freenode IRC. See http://picocms.org/docs/#getting-help. This is a feature tailor-made for your website, this is no feature of Pico itself.\nThe natural solution is that you've a content/en/certification.md file representing the contents of www.wrapcompliance.org/en/certification and a content/zh/certification.md file representing  www.wrapcompliance.org/zh/certification. If this is true - and this is just guessing from my side! - you'll have to create a content/XX/certification.md with contents of the certification page in language XX. Depending on how i18n is realized in your website's theme, you might also have to add the XX language somewhere (might be a config value in your config/config.php or just config.php, depending on the Pico version you're using). Again, I'm just guessing, this feature was made explicitly for you by the company that made the website.. Thanks for letting us know @haheute! \ud83d\udc4d\nThese packages are used by upstream packages, not by Pico itself. We unfortunately don't have any influence on this. Furthermore they are only installed when installing Pico with development dependencies. You don't need them if you don't want to contribute code to Pico's core, so you can safely remove them by running composer update --no-dev.. Pico always generates URLs without a trailing slash, so URLs with a trailing slash shouldn't exist. However, they definitely do exist sometimes. This mostly happens when humans manually edit URLs.\nSearch engines like Google can usually handle the duplicate content problem pretty well. However, personally I wouldn't rely on that either. You can (and should) add a canonical link Tag to your theme to help search engines like Google to understand your website's structure:\ntwig\n{% if current_page %}<link rel=\"canonical\" href=\"{{ current_page.url }}\" />{% endif %}\nThis solves the problem that search engines might see duplicate contents completely. If you additionally want to do a 301 redirect when encountering a URL with a trailing slash (the other way round isn't possible without extending the Pico PHP class, because Pico always uses URLs without a trailing slash), using .htaccess is the correct solution. Just to make this clear, you should add the canonical link Tag to your theme nevertheless you're using a 301 redirect or not \ud83d\ude09 \n~~However, I wouldn't recommend using mod_rewrite in this particular case. mod_rewrite is about URL rewriting. It indeed also supports URL redirection, but is quite complex (especially when using multiple RewriteCond and RewriteRule) for this actually pretty simple task. So I rather recommend using mod_alias. Simply add the following to your .htaccess:~~\n~~RedirectMatch permanent ^/(.+?)/+$ /$1~~\n#edit: Pico 1.0 requires pretty complex rewrite rules that interfere with a much simpler mod_alias based solution. Thus you'll have to use mod_rewrite to solve this issue with Pico 1.0. If you're using Pico 2.0, you can use the much simpler RedirectMatch directive instead. Anyway, add the following to your .htaccess, right before the first RewriteCond. Don't forget to change /path/to/pico to fit your needs.\napacheconf\nRewriteRule ^(.+?)/+$ /path/to/pico/$1 [R=301,L,QSA]\ndup of #391 . Looks like URL rewriting isn't enabled. You have added the RedirectMatch to your .htaccess and left everything else unchanged, correct? Try adding $config['rewrite_url'] = true; to your config/config.php to force enabled URL rewriting.\n\nI already use canonical to get rid of pagination problem (for pages like /page/2) in Pico pagination plugin.\nWill it conflict with this one?\n\nI guess not.. Ah, indeed, I can now reproduce this issue. Pico 1.0's RewriteRule is interfering with mod_alias \ud83d\ude12 Since Pico 2.0 has a completely new routing system this won't be an issue with Pico 2.0. So, it seems like you must use mod_rewrite instead (sorry, my fault... \ud83d\ude1e). Remove the RedirectMatch directive and add (please remember changing /path/to/pico to match your setup):\napacheconf\nRewriteRule ^(.+?)/+$ /path/to/pico/$1 [R=301,L,QSA]\nI'll edit my answer above, so others aren't lead into the wrong direction.. This is likely a caching issue of your browser (browsers cache 301 redirects, they are called \"permanent\" redirect for a reason \ud83d\ude04). Clear your browser's cache or try another browser/device.\n\nRewriteRule ^(.+?)/+$ /home/chaguan/MYSITE.com/www/$1 [R=301,L,QSA]\n\nBecause of this I assume Pico isn't installed to a subdirectory, right? If this is true, you likely rather need RewriteRule ^(.+?)/+$ /$1 [R=301,L,QSA] here \ud83d\ude09 \n\nI tried to add this Rule just before other rules\n\nYou should add the rule to the top, right after the commented/unused RewriteBase directive. However, please note that both RewriteCond and the first following RewriteRule belong together, thus you mustn't add it between RewriteCond and RewriteRule ^(.*)$ index.php?$1 [L,QSA], you should rather add it before RewriteCond.\nbtw, that's the reason why I suggested using mod_alias (what unfortunately isn't working so well together with Pico 1.0): mod_rewrite is sometimes a bit... hacky... and not intuitive at all.... Apache's mod_rewrite module is likely not enabled.\nFirst of all, make sure that you've actually uploaded Pico's .htaccess file to your server - it's a hidden file and is often left behind. Furthermore, make sure that the file is actually named .htaccess on your server, not htaccess, htaccess.txt or anything else.\nTry removing the <IfModule mod_rewrite.c> and the matching </IfModule>. If you get a 500 Internal Server Error, you can be sure that mod_rewrite isn't set up correctly. Check Apache's error.log for the error message. It likely tells you one of the following:\n\nApache's mod_rewrite module isn't enabled/loaded. Ask your server administrator how to enable/load mod_rewrite (e.g. on Debian/Ubuntu you'll have to run sudo a2enmod rewrite and sudo service apache2 reload).\nYou're not allowed to use mod_rewrite in a .htaccess file. Make sure AllowOverride FileInfo (or AllowOverride All) is set in your virtual host config file.\n\nIf you don't get a 500 Internal Server Error, try accessing http://example.com/pico/CHANGELOG.md - you should see Pico's 404 page (if you rather see Apache's 404 page, make sure the CHANGELOG.md file exists). If you rather see the contents of the CHANGELOG.md, you can again be sure that mod_rewrite isn't set up correctly. Again, check Apache's error.log for the error message.. > I'd love to make a full tutorial on setting Pico 2 up and creating templates once it's released. Maybe even in-depth documentation about that (like Pico's Twig filters and data structure, ...)\nI'd love to see that! \ud83d\udc4d Pico's documentation definitely needs improvements, @smcdougall had some great ideas and is currently working on a rewrite of the docs with a completely different approach. I'm sure he'd be very grateful about some help! See picocms/picocms.github.io#6\n\nBut I was wondering if full support for subdirectories would be on the feature list soon?\n\nI'm not sure what you mean by that, can you please elaborate a little bit more? If it's basically about making the pages array accessibly through a tree structure: We're planning to release a official plugin for that with Pico 2.0. I was even thinking about adding it to Pico's core lately. It's a quite essential feature for theme developers and not really possible with pure Twig (actually, it is possible, but not very robust...).. Yeah, that's exactly what a page tree does. There are already some plugins out there implementing this, but always with some additional features (like @nliautaud's PicoPagesList).\nHowever, I don't think that we'll implement the \"accessing ALL pages in a directory\" (i.e. all decadents of a page, not just children) use case, because this would conflict with our plans to overhaul Pico's page discovery in Pico 3.0 (the far, far future... \ud83d\ude06 see #317). Anyway, this shouldn't be a problem because leveling out a tree structure is very easy (no plugin necessary, just pure Twig).\nI believe that page trees are pretty common stuff, that's the reason why I was thinking about adding this to Pico's core lately rather than using a plugin (like Pico's official PicoHttpParams plugin).\nHaving a separate meta-data-only .yml file in a directory is another topic, that's currently not planned (see the \"Data files plugin\" in #317).. I made the decision to add a page tree to Pico's core rather than creating a official plugin. I think a pretty high percentage of our users need something like that and it's such a basic thing to do, that many theme developers will use the new possibilities to build even more powerful themes.\nPlease refer to 28d2648 for implementation details and the Pico::buildPageTree class docs.\n@clausbertels @nliautaud . Pico's second beta release is out now! (v2.0.0-beta.2)\nThe second beta primarily includes the new page tree (see https://github.com/picocms/Pico/issues/401#issuecomment-345458255) and the full changelog for Pico 2.0 (see CHANGELOG.md).\nPico 2.0 is basically ready for release! However, we really need some support to update our docs and website for Pico 2.0 - this is the only thing missing before we can release Pico 2.0! We have to update our docs (especially the install instructions) and write upgrade instructions similar to http://picocms.org/in-depth/upgrade/ including a \"What's new\" section targeting our users. Help is highly appreciated! See picocms/picocms.github.io#18 and partially picocms/picocms.github.io#7\n@smcdougall @picocms . @nitrix: It says \"second beta\", not \"second major release\" \ud83d\ude04\nHowever, as I was trying to point out, the code itself is ready to release. The only reason why this is just the second beta and not the final release are the missing docs and website updates - help is appreciated btw. I'm using Pico 2.0 in production for months now.. > I second the motion that the whole projects structure is getting very confusing with development seemingly split between issues, branches, pull requests and a pre-release. Then again I don't have quite a lot of experience on Github.\nActually it's quite simple. Pico's development happens in the pico-1.1 branch, #334 is just the pull request for this branch. Our website can be found in the picocms/picocms.github.io repo. Since Pico 2.0 wasn't released yet we use the pico-2.0 branch to prepare the website for the release. picocms/picocms.github.io#18 is the pull request for this branch.\n\nIf someone could write a very rough and quick guide for me to upgrade my own site to Pico 2 I can get started on writing a novice guide for installing as well as upgrading. (collaborating with @smcdougall probably)\n\nI appreciate it! \ud83d\ude04 I wrote the updated general install & upgrade instructions yesterday (see https://github.com/picocms/Pico/blob/pico-1.1/README.md#install) and started (i.e. it's incomplete and still work in progress) writing the Pico 1.0 to Pico 2.0 upgrade tutorial today (live demo: http://phrozenbyte.github.io/Pico/in-depth/upgrade-pico-20/).\nYou can use this tutorial to test Pico 2.0!\nSince Pico 2.0 introduces various BC-breaking changes we need detailed instructions on how to solve issues resulting from updating to Pico 2.0. However, users should not just solve the issues from BC-breaking changes, but should also stop using now deprecated features. This unfortunately requires some knowledge about the actual code changes... \ud83d\ude1e\nHowever, we additionally need a \"What's new\" section for all major changes, including those which don't necessarily lead to a change in existing installations. This doesn't require knowledge about Pico's source code, reading through Pico's CHANGELOG.md should be sufficient to write it. \ud83d\ude04. @iagovar: Please refer to Pico's user docs:\n\nIf a file cannot be found, the file content/404.md will be shown. You can add 404.md files to any directory. So, for example, if you wanted to use a special error page for your blog, you could simply create content/blog/404.md.. I'm not sure why you are asking the same question you've asked before a second time. This has been answered already, see https://github.com/picocms/Pico/issues/414#issuecomment-363395284. :tada: Pico's second major release v2.0.0 is out now!\n(yes, Pico 2.0 is officially stable now!)\n\nIt took a long time, but I think the waiting was worth it! :smiley: I think I don't need to make a long speech about it (especially because it was stable since v2.0.0-beta.3 anyway), so it only remains for me to say a big and heartfelt \"thank you\" to everyone who helped making this possible.\nPlease refer to Pico's new upgrade docs to find out what has changed and how to upgrade your Pico 1.0 installation to Pico 2.0. The docs target Pico users, not just developers, and therefore also includes a complete list of all new features (and we're not talking about a few minor changes here, it's a major release for a reason :laughing:).\nAs always, feedback is highly appreciated!\nHave fun with Pico's second major release! :heart: \n@theshka @smcdougall @picocms. Sort of... I didn't want to create a copy of config/config.yml.template in picocms/pico-composer. Anyway, since we're referring to it in the user docs, I guess it's better to add it, even though it requires us to update the file there when we upgrade the config template in the main repo. Fixed in https://github.com/picocms/pico-composer/commit/40b146f75d7ccb8200ca4570da4e8b408ce7581d. Thank you for bringing this up @bricebou :+1: . @bricebou http://picocms.org/in-depth/features/http-params/. You need a Pico-specific plugin class in any case, so how about simply putting said class in the plugins/MyPicoPlugin/MyPicoPlugin.php file? You can then do your setup (like registering an autoloader or including other files manually; you can even load other plugins there using the Pico::loadPlugin() method) in the MyPicoPlugin::__construct() method of the class. Including arbitrary files is unexpected and pretty bad behavior - not to mention the negative performance impact.\nWith Pico 2.0 we're trying to overhaul how plugins and themes are managed (also refer to Pico's picocms/composer-installer). Thus we made some BC-breaking decision for the future. These decisions are the main reason why we've released this as Pico 2.0 and not Pico 1.1 (what was the original plan, that's the reason why the branch is named pico-1.1).. Can you please elaborate on why this would require a Pico-specific build and release process? As far as I can see you just have to move plugins/ThePlugin_Pico.php to plugins/ThePlugin/ThePlugin.php. If ThePlugin.php is already used by another class, simply tell your users to rename the ThePlugin directory to ThePicoPlugin and use ThePicoPlugin.php.\nYou're definitely right that not firing an exception has no performance impact, I was rather referring to Pico's old behavior including arbitrary files. However, I still believe that being more explicit here and throwing an exception is better than silently ignoring it. Additionally we don't want \"decoupled\" plugin files and directories: everything that is related to a plugin should either be in a single file or go into a single directory. Everything else just confuses users.\nExplicitly failing if something goes wrong has another advantage: Just think of a plugin that limits access to specific files/paths (you created such a plugin, did you? \ud83d\ude09). I'm sure the admin wants to know when this plugin couldn't be loaded for some reason (e.g. because he accidentally named the directory PicoUser and not PicoUsers after an update).. I really can't see any problem here: Simply create a plugins/ThePlugin/ThePlugin.php and you're good to go. I don't think that there's a single multi-CMS plugin out there that can't conform to this absolutely simple requirement (including p01contact). This is no rocket science...\nI can't understand why you're tempting providence by using strong words like \"depreciating the user experience\" - especially because I truly believe that handling just a single file or directory per plugin, and not doing unexpected things like silently ignoring plugins (what might even be a security issue), are strong improvements towards user experience.\nFurthermore, please note that Pico has no \"own\" UI. We can't display warnings. We just can bail out - what has the big advantage that it's impossible to miss.. Just to make this clear, this was no termination of discussion from my side, I'm still open to suggestions. I really appreciate feedback!\nI understand your point: We're planning (a beta is no final release, there's still some room for changes) to introduce pretty strict requirements here (although \"strict\" doesn't necessarily mean \"complex\").\nUnfortunately I can't see a solution, we've conflicting goals here: Silently ignoring files or directories in the plugins/ dir is a absolute No-Go. We want a more reliable (in terms of \"no unexpected behavior\") plugin infrastructure, since some plugins do pretty important stuff, even security-related stuff like access control. So we must either ensure that it is impossible to miss a plugin (e.g. due to a typo in the directory name), or tell users what is going on. One solution to the latter might be to issue some kind of warning (no PHP warning since this wouldn't make any difference to throwing a exception), but the problem is that Pico has no way to actually display it somewhere. Pico has no \"own\" UI, all themes must be able to display these warnings - and we have no control over themes whatsoever. So to bail out by throwing a exception is our only solution. Thus all that remains is to ensure that it is impossible to miss a plugin. But how? We can't support non-self-containing plugins (like the file/directory structure you've mentioned in https://github.com/picocms/Pico/issues/402#issuecomment-342131717) without ignoring files or directories in the plugins/ dir.\nBesides all of that, we must keep in mind that we're talking about theory here - afaik there's not a single plugin that can't meet these requirements. This has a huge impact on the topic's importance and might lead to a fundamentally different weighting of said conflicting goals.. Sure, simply create a appropriate Twig template. You can include the parsed contents of arbitrary pages using Pico's content Twig filter. To include e.g. the content's of project01/index.md, use {{ \"project01/index\"|content }} in your Twig template (e.g. portfolio.twig) and add Template: portfolio to the YAML Frontmatter of portfolio-directory/index.md.. Sure, simply use a meta variable. Add e.g. the following to the YAML Frontmatter of portfolio-directory/index.md\nyaml\nprojects:\n  - project01\n  - project02\nand use the following in your portfolio.twig:\ntwig\n{% for project in meta.projects %}\n    <div>{{ (project ~ \"/index\")|content }}</div>\n{% endfor %}. Try one of the following Twig snippets (I didn't test them):\n\nList articles of the last 2 months only\n\ntwig\n{% for page in pages|sort_by(\"time\")|reverse %}\n    {% if page.time >= date(\"-2 months\") %}\n        <h2>{{ page.title }}</h2>\n    {% endif %}\n{% endfor %}\n\nList the 7 most recent articles only\n\ntwig\n{% for page in pages|sort_by(\"time\")|reverse|slice(0, 7) %}\n    <h2>{{ page.title }}</h2>\n{% endfor %}. Simply add a a condition, like the {% if ... %}...{% endif %} in the first snippet.\nTo exclude all pages without a date, simply use the condition {% if page.time %}...{% endif %}. To explicitly hide a page from your pages list, add the line unlisted: true to the YAML front matter of said page and use the condition {% if not page.meta.unlisted %}. Alternatively you can ignore all pages in a specific path ({% if page.id starts with \"about/\" %}...{% endif %}). Multiple conditions can be consolidated using and (or or, depending on what you're trying to do; use brackets (( and )) for even more complex conditions). The snippet might look like the following in the end:\ntwig\n{% for page in pages|sort_by(\"time\")|reverse|slice(0, 7) %}\n    {% if page.time and not page.meta.unlisted %}\n        {{page.id|content}}\n    {% endif %}\n{% endfor %}\nfyi: The pages are not sorted by the last modification time of the .md file, but rather by the Date meta header in your page's YAML front matter. Add e.g. Date: 2018-01-04 to a page's YAML front matter and that page will be sorted before a page with Date: 2018-01-01 (actually the newer page is sorted after the older one, but the reverse Twig filter instructs Pico to reverse the sorting, resulting in the desired behavior). Pages without this meta header are ignored due to the {% if page.time %}...{% endif %} condition.. Works just fine for me. Make sure to strictly follow the theme's and rewdy/Pico-Pagination's installation instructions (rewdy/Pico-Pagination e.g. only considers pages with a Date meta value). Please note that themes (like BesrourMS/clean-blog) must know about the pagination plugin, i.e. neither the default theme nor blocknotes/just-pico won't ever show a pagination until you actually modify the theme accordingly.\nIf you still can't make it working, please refer to the 3rd party theme and/or plugin developers:\n\n@rewdy's Pico-Pagination plugin\n@BesrourMS's clean-blog theme. BesrourMS/clean-blog with rewdy/Pico-Pagination. However, I'm just making sure that this is neither a issue with Pico, nor an obvious issue with the theme or plugin. Please refer to the 3rd party theme and/or plugin developer for getting help.. config.php.template is a template. Rename it to config.php \ud83d\ude09 . Quoting from our website, Pico's sample contents and the header in the config/config.php.template:\n\n\nYou can override the default Pico settings (and add your own custom settings) by editing config/config.php in the Pico directory. For a brief overview of the available settings and their defaults see config/config.php.template. To override a setting, copy config/config.php.template to config/config.php, uncomment the setting and set your custom value.\n\nDid you actually uncomment the config variable (remove the // at the beginning of the line)?\n```php\n<?php\n$config['theme'] = 'astral';\n``. No problem at all, you're welcome \ud83d\ude03 If you have any other question, please don't hesitate to ask, either by creating a new Issue on GitHub or by joining us on [#picocms on Freenode IRC](https://webchat.freenode.net/?channels=%23picocms). I'm afraid this isn't possible. The%meta.*%syntax is meant to be a simple and convenient way of including (or rather replacing) static contents like a description or title, not for things like arrays what would require a pretty complex parser. Depending on what you're trying to achieve a Twig-based solution is probably the best way to go.. Parsedown, the 3rd-party Markdown parser Pico uses, unfortunately has some known limitations regarding custom HTML elements. Anyway, since a search page is rather part of a website's structure than a website's contents, I recommend moving Google's code to a Twig template. Simply create asearch.twigwith the code of Google's custom search in your theme's directory and create asearch.mdwithTemplate: searchin its YAML Frontmatter.. Unfortunately you're providing basically zero information about what you're trying to do.. You can use arbitrary conditions when iterating through your pages list to filter pages in Twig templates (see https://twig.symfony.com/doc/1.x/), e.g. use something like the following in yourthemes/my_theme/index.twig`:\ntwig\n{% for page in pages %}\n    {% if page.author == \"John Doe\" %}\n        <h2>{{ page.title }}</h2>\n    {% endif %}\n{% endfor %}\nI'm still not sure what you're trying to do, you'll have to ask way more specific questions. Please refer to Pico's docs (http://picocms.org/docs/) for basic details about how Pico works and how to customize Pico to fit your needs. Especially take a look at the Customization section. You can find 3rd-party themes (http://picocms.org/themes/) and plugins (http://picocms.org/plugins/) on our website, and even more themes (https://github.com/picocms/Pico/wiki/Pico-Themes) and plugins (https://github.com/picocms/Pico/wiki/Pico-Plugins) in our wiki.. Try the 3rd-party Pagination plugin.. Please take a look at the plugin's README.md.. Then you'll have to create the appropriate JavaScript code to load a pages list using AJAX. You can create a page returning JSON by creating e.g. a themes/my_theme/pages_ajax.twig and a small plugin to set the HTTP response's Content-Type of this page to application/json. Take a look at Pico's plugins/DummyPlugin.php, http://picocms.org/development/ and the code of existing Pico plugins out there. AFAIK there's no plugin or theme using something like this yet, so you'll have to develop it on your own. If you have any concrete question while developing this please don't hesitate to ask. However, I unfortunately can't provide you with the final solution, this is up to you (or some other developer).. You can get the URL of the current page using {{ current_page.url }}. Please note that this variable is undefined for \"virtual page\" that are generated by a plugin on-the-fly. However, this variable doesn't include HTTP GET (or URL GET) parameters.\nIf you rather want to access HTTP GET ($_GET in PHP) or HTTP POST ($_POST in PHP) variables, use Pico's official HTTP params plugin (http://picocms.org/plugins/#entry-http-parameters). Please note that this plugin will be part of Pico's core starting with Pico 2.0 (currently in beta).. Correct. The PHP version your hosting provider uses has a known issue with this function. Update your PHP version.. I'm not sure what you mean by \"external\" YAML data. Do you want to access the meta headers of a arbitrary page? Try e.g. pages[\"sub/page\"].meta. Just to be sure, you're trying to do this in a Twig template (i.e. a .twig file, not .md), right? What error message shows up in your webserver's error.log? If you remove the lines in question, does the website work? The syntax seems to be correct, but are you sure that the page you're trying to include actually exists? Double check this by printing out the page ID (i.e. {{ \"personalia/#{meta.language}/#{meta.medewerker}\" }}).. Try this:\ntwig\n{{ pages[\"testfile\"].meta.variable1 }}. Great to hear that! \ud83d\udc4d If you have any other question, don't hesitate to ask \ud83d\ude03 . Actually neither {{ \"testfile.md\"|content }} nor {{ pages[\"testfile\"]|content }} works \ud83d\ude09 You probably rather mean {{ \"testfile\"|content }} and {{ pages[\"testfile\"].content }}. You should always use {{ \"testfile\"|content }}.\n{{ pages[\"testfile\"].content }} works only if the page contents have been parsed already. This is only true if...\n\nyou have previously called {{ \"testfile\"|content }}, or\nyou're accessing the contents of the requested page, or\nyou have the PicoParsePagesContent plugin enabled (please note that we'll remove this plugin with Pico 2.0 due to performance reasons, so you really shouldn't rely on it).\n\nAlways use {{ \"testfile\"|content }}.. The problem is a really, really small typo: You're using ---- (four dashes) instead of the expected --- (three dashes) after the YAML Front Matter. Due to this, Pico won't recognize this as a YAML Front Matter (resulting in variable1: \"aap\" variable2: \"noot\" variable3: \"mies\" template: index getting print out on the page). {{ pages[\"bagger\"].meta.variable1 }} is the correct syntax.. Heavily depends on what you're trying to do \ud83d\ude09 \nA common task is to build a navigation tree like the examples from https://github.com/nliautaud/pico-pages-list. For that you'll need a Twig macro (untested, gotta go now \ud83d\ude06):\n```twig\n{% macro tree(parent) %}\n    {% import _self as utils %}\n    \n        {% if parent.page %}\n            {{ parent.page.title }}\n        {% endif %}\n        {% if parent.children %}\n            \n                {% for child in parent.children %}\n                    {{ utils.tree(child) }}\n                {% endfor %}\n            \n        {% endif %}\n    \n{% endmacro %}\n\n    {% import _self as utils %}\n    {{ utils.tree(pages[\"index\"].tree_node) }}\n\n``. You're getting tree nodes when accessingchildren`, not pages.\ntwig\n{% for node in current_page.tree_node.children %}\n    {{ node.page.id }} : {{ node.page.title }}<br />\n{% endfor %}\nHowever, please note that nodes don't necessarily represent a page (that's the reason for for the {% if parent.page %} in my last comment's example). See http://picocms.org/phpDoc/v2.0.0-beta.2/classes/Pico.html#method_buildPageTree. Yeah, looks great! \ud83d\udc4d . What does \"breaks\" mean and what exactly are you trying to do?. Can you provide me with your content files (stripped down to just title and date is fine) and the exact Twig template snippet you use? I can't reproduce this.. Works fine for me\n\n. Ah, ic, that's weird... Really weird. Nevermind, fixed in 03cc101. Simply replace your local vendor/picocms/pico/lib/Pico.php with the current development version (should be fair enough for testing): https://github.com/picocms/Pico/blob/pico-1.1/lib/Pico.php\nThanks for reporting! \ud83d\udc4d . No, this would significantly increase the code's complexity. Furthermore I couldn't think of an actual use case for it.. The rewrite rule in https://github.com/picocms/Pico/issues/42#issuecomment-21218049 was written for Pico 0.9 and isn't compatible with Pico 1.0. However, it should work again with Pico 2.0. Simply try the latest beta release of Pico 2.0 (see https://github.com/picocms/Pico/releases and #401) with the rewrite rule in https://github.com/picocms/Pico/issues/42#issuecomment-21218049. Don't worry about Pico 2.0 being in beta, it's actually ready-to-release, we just haven't finished the docs/website updates yet.. Yes, you'll have to tell Pico that URL rewriting is available.. @tony5: You should furthermore make sure that access to Pico's internal files and dirs is denied (see https://github.com/picocms/pico-composer/blob/master/.htaccess). I guess (untested, just on the basis of https://github.com/picocms/Pico/issues/42#issuecomment-21218049 and lighttpd docs) that the rules should look like the following in the end:\n```\n$HTTP[\"host\"] == \"example.com\" {\n    url.rewrite-once = (\n        \"^/pico/(config|content|vendor|composer.(json|lock|phar))(/|$)\" => \"/pico/index.php\",\n        \"^/pico/(.+/)?.(?!well-known(/|$))\" => \"/pico/index.php\"\n    )\nurl.rewrite-if-not-file = (\n    \"^/pico(/|$)\" => \"/pico/index.php\"\n)\n\n}\n```\nIf you've installed Pico to the document root rather than to the subdirectory pico/, the rules should look like the following:\n```\n$HTTP[\"host\"] == \"example.com\" {\n    url.rewrite-once = (\n        \"^/(config|content|vendor|composer.(json|lock|phar))(/|$)\" => \"/index.php\",\n        \"/.(?!well-known(/|$))\" => \"/index.php\"\n    )\nurl.rewrite-if-not-file = (\n    \"^\" => \"/index.php\"\n)\n\n}\n```\nCan you please test these rules? Please make sure that access to e.g. http://example.com/pico/config/config.yml is denied (Pico's 404 page should show up) and give me feedback about whether this works or not, I'll then add it to the Pico docs.\n#edit: Fixing regex for dot-files.. Yeah, it seems like the only easy-to-configure webserver is Apache, but Apache has the disadvantage of a comparable bad performance... Anyway, it works, this is what counts \ud83d\ude06 Thanks for testing! \ud83d\udc4d \n#edit: Done, see 9c182bd. This is a task predestined for the page tree shipped with Pico 2.0. You can download the latest beta from https://github.com/picocms/Pico/releases (also see #401). Don't worry about Pico 2.0 being in beta, it's actually ready-to-release, we just haven't finished the docs/website updates yet.\nFirst create a index.md in all folders representing categories and add a YAML header (e.g. content/my_category/index.md):\n```yaml\ntitle: My category\ncategory: true\ntemplate: category\n\n```\nListing categories (your index.twig):\ntwig\n<ul>\n    {% for category in pages[\"index\"].tree_node.children %}\n        {% if category.page and category.page.meta.category %}\n            <li><a href=\"{{ category.page.url }}\">{{ category.page.title }}</a></li>\n        {% endif %}\n    {% endfor %}\n</ul>\nListing pages in a category (your category.twig):\ntwig\n{% if meta.category and current_page.tree_node.children %}\n    {% for child in current_page.tree_node.children %}\n        {% if child.page and not child.page.hidden %}\n            <div>\n                <h3><a href=\"{{ child.page.url }}\">{{ child.page.title }}</a></h3>\n                <p>{{ child.page.description }}</p>\n            </div>\n        {% endif %}\n    {% endfor %}\n{% endif %}\n#edit: Splitting templates.. This is not possible (on purpose). Use a Twig template instead (e.g. add Template: special_page to the YAML header of content/special_page.md and create a themes/my_theme/special_page.twig). If Twig really isn't sufficient, you'll have to create a Pico plugin instead (refer to the plugins section in the user docs, the (unfinished, help is highly appreciated) dev docs at http://picocms.org/development/ and Pico's DummyPlugin).. No. There isn't much to consider specially for Pico, creating themes is mostly just Twig (https://twig.sensiolabs.org/doc/1.x/). Pico's default theme (at least starting with Pico 2.0, however, you shouldn't develop a theme for Pico 1.0 at this point anymore anyway; see https://github.com/picocms/pico-theme) is a good starting point. There's also a small themes section in the user docs (http://picocms.org/docs/#themes). We're unfortunately lacking a bit of docs, help improving this situation is highly appreciated. Many questions have been asked before here on GitHub (use the search function) and if you can't find an answer, don't hesitate to ask (either using a new Issue or, if it's just a small question, using Freenode IRC) \ud83d\ude04 . Looking forward to it, thanks! \ud83d\udc4d. Yes, looks good! \ud83d\udc4d . Please refer to the install section in Pico's README.md, or our user docs, or the download page:\n\nJust download the latest Pico release and upload all files to the httpdocs directory (e.g. /var/www/html) of your server.. There's no second step when using a pre-bundled release, that's it \ud83d\ude04 composer is a completely different installation method.\nYou can install Pico either using a pre-bundled release or with composer.. Rendering a site directly from an external source is probably not a good idea - performance reasons, you know \ud83d\ude09 However, this doesn't mean that you can't use a Git repository (e.g. on GitHub) to manage your website.\n\nFirst of all I recommend using Pico 2.0 (don't worry about Pico 2.0 being in beta, the only reason this isn't the final release is that we're still working on the docs - help is highly appreciated btw), it made things like this way easier. Simply fork picocms/pico-composer, clone your repo locally and run composer install. Add your .md filtes to the content/ directory as well as all plugins and themes you want to use. Then commit & push your changes. After you've tested your website locally, open a shell on your webserver, navigate to the desired install directory and clone your GitHub repo. Run composer install to actually install Pico - and you're ready to go \ud83d\ude03\nIf you want to update your website simply apply your changes (either locally (don't forget to commit & push), or using GitHub's online editor) and then do a git pull on your webserver to apply the changes to your productive website. You can even automate this process using a cronjob, or a Git hook, or a GitHub webhook.. This is a temporary error due to Pico 2.0 officially still being in beta. You can safely lower the minimum stability for Pico's components (Pico itself, the official PicoDeprecated plugin and Pico's official default theme) by running the following commands (this updates the composer.json):\n$ composer require --no-update picocms/Pico:^2.0@beta\n$ composer require --no-update picocms/pico-deprecated:^2.0@beta\n$ composer require --no-update picocms/pico-theme:^2.0@beta\n$ composer install\nHowever, just copying over the files from Pico's pre-built package has virtually the same effect \ud83d\ude04. Sure. Simply refer to the \"URL rewriting\" section in Pico's sample contents or the \"URL rewriting\" section in the user docs. Did you restart your Apache webserver? Is Pico's .htaccess file present in the installation directory? Make sure that AllowOverride for the installation directory (or one of its parent directories) is set to at least AllowOverride FileInfo or AllowOverride All.. No, this is necessary to use .htaccess. There is no \"lack of documentation\", this issue is not related to Pico, but to a broken webserver config. Configuring your webserver is out of Pico's (and any other CMS', including WordPress') influence. Check your webserver error log. The error might be related to your webserver config disallowing the use of the Options directive. However, I unfortunately don't have a crystal ball, I'm just guessing what might be wrong with your webserver config. Try removing the Options directive from Pico's .htaccess file. Also remove all .htaccess files in parent folders, they indeed might break your webserver. If you rather want to use WordPress, use it. This is just a hobby, we don't force anyone to use Pico.. The vendor/ dir is ignored on purpose, it's composer's job to create it. Refer to what I wrote above:\n\nAfter you've tested your website locally, open a shell on your webserver, navigate to the desired install directory and clone your GitHub repo. Run composer install to actually install Pico - and you're ready to go \ud83d\ude03\n\nMake sure the file permissions are correct and your webserver and/or PHP user can access the files. If the webserver/PHP user can't access the vendor/ dir, it also won't be able to notice that vendor/autoload.php exists.\nAs said previously you can also manually upload the vendor/ dir instead of using composer install.. You basically applied the installation instructions for Pico 1.0 to Pico 2.0. This still works, but has the effects you described above. Starting with Pico 2.0 the main picocms/Pico repository is no longer the \"frame\" of Pico installations, but rather a dependency of a new separate \"frame project\" (picocms/pico-composer). It's picocms/pico-composer that installs both the PicoDeprecated plugin and Pico's default theme, picocms/Pico just suggests installing them.\nSee the \"Install\" section of Pico 2.0's README.md. If you've read the README.md before and remember that it looked completely different in beta 2, then you're absolutely right. We've updated the installation instructions just recently and after the release of beta 2, so you couldn't know this (i.e. you didn't make anything wrong). Nevertheless I highly recommend re-installing Pico using one of the new official Pico 2.0 installation methods. For a composer-based installation use the following:\ncomposer create-project picocms/pico-composer .\n\nThe Package \u2026 is abandoned messages are caused by development dependencies of Pico when installing Pico with development dependencies (what is the default when using composer install). These packages aren't necessary in a productive environment (try composer install --no-dev). Anyway, the messages don't cause any harm, they can be ignored.. You can simply use one of our pre-bundled releases (it's the pico-release-v2.0.0-beta.2.tar.gz from https://github.com/picocms/Pico/releases/tag/v2.0.0-beta.2, not Source code), upload all files to your webserver and you're ready to go \ud83d\ude04 . You should try to contact the plugin developer, just because he didn't change anything for a year doesn't mean that he's no longer supporting his plugin. AFAIK this isn't possible with rewdy/Pico-Pagination, but the plugin developer might add this feature. It doesn't hurt to ask \ud83d\ude09\nAnyway, starting with Pico 2.0 (you can safely use it in production, the only reason this isn't final yet are missing docs, see v2.0.0-beta.2 and #401) you don't really need a plugin for that. You can use the page tree together with the possibility to access HTTP GET/POST variables to implement pagination with pure Twig. See #412 for some info about the page tree, and PhrozenByte/pico-http-params for info about accessing HTTP GET/POST variables (you won't need this plugin, it's already in Pico's core starting with version 2.0, but the API is exactly the same).\nUnfortunately I can't provide you with a copy-and-paste snippet, you'll have to figure this out on your own, I just can tell you that it is possible. If you made this working I'd love to add the snippets to our cookbook, allowing others to learn from your work.. Where does the category come from? You're using some sort of plugin for this, right? What plugin? How does it work? I'm unsure about what you are even trying to do. You're basically providing zero information :wink: . So, basically your directory is the category. What you still need is a way to store the category's name (and other metadata). It's probably best to simply use content/category/index.md for that. Another thing you've to do is to guess the category of a page (i.e. extract category from a page like category/page). Some simple string manipulation should do the job.\ntwig\n{% if current_page %}\n    <span class=\"navigation\">\n        Est\u00e1s en <a href=\"{{ base_url }}\">{{ site_title }}</a>\n        {% set pathComponents = current_page.id|split(\"/\")|slice(0, -1) %}\n        {% for subPath in pathComponents %}\n            {% set category = pathComponents|slice(loop.index0)|join(\"/\") ~ \"/index\" %}\n            &gt; <a href=\"{{ category|link }}\">{{ pages[category].title }}</a>\n        {% endfor %}\n    </span>\n{% endif %}\n~~The snippet above is untested.~~\n#edit: Snippet updated. Should work then :wink: . I've updated the snippet, see above. This is indeed a issue caused by a bug in your PHP installation, likely even caused by some distribution-specific or hoster-specific patches applied to your PHP build (because I can't find a single broken PHP version, see https://3v4l.org/v0Od9).\nThe only \"real\" solution here is to upgrade to a fixed PHP version. Working around this issue by removing the third argument of all class_alias() calls might be a temporary solution (however I'd never recommend you to do this yourself (see below); nevertheless you might want to use some search & replace rather than doing this manually).\nPlease note that Pico itself doesn't use class_alias(), it is used by Twig, the template engine Pico uses (a \"upstream project\"). Thus working around this is out of our control. I'd recommend you to open a new Issue on https://github.com/twigphp/Twig and ask them whether they can remove the third argument of their class_alias() calls. This shouldn't make any difference (because the class is defined right before the class_alias() call, so PHP won't try to autoload anything anyway), but please be aware that this is not a bug in Twig (i.e. they aren't doing anything wrong). Pico v2.0.0-beta.2 uses Twig v1.35.0.. dup https://github.com/picocms/Pico/issues/401#issuecomment-372650321 https://github.com/picocms/Pico/issues/414#issuecomment-363395284. If you've installed Pico to the document root (e.g. /var/www/example.com/), then is ../my/content (i.e. /var/www/example.com/../my/content --> /var/www/my/content/) outside your document root and thus not part of your Virtual host. Thus you'll have to use a different domain/subdomain to access your assets. Pico generally shouldn't have any problem using a content directory outside your document root, as long as PHP doesn't prevent Pico from accessing the files (due to a open_basedir restriction for instance).. Pico uses a event-based system that allows you to hook into Pico's processing. Have a look at Pico's plugins/DummyPlugin.php, Pico's class docs and the developer docs (still WIP, help is highly appreciated).\nSpecifically refer to the $twig parameter of the onPageRendering event - this is the Twig_Environment object you need to register your custom filters, functions, tests, tags or extensions.. Check your server's error.log, you likely got an PHP Parse Error somewhere :wink: . Sure! :+1: :smiley: You can find the developer docs in the _development directory of the picocms/picocms.github.io repo: https://github.com/picocms/picocms.github.io/tree/master/_development. Just an educated guess: file permissions\nThings like this might be caused by plugins, but since you're saying that it worked before, I don't think that this is the case here. So, the only thing left are file permissions. Pico doesn't do much beyond looking at the files in your content dir and taking them as pages. If the page doesn't show up at all, it could simply be that Pico really doesn't \"see\" that page.. Refer to Pico's README.md for installation instructions. If you need help in how to create a Symfony bundle (i.e. how to use Symfony), you should ask the awesome guys from Symfony. If you have any concrete question about Pico, please don't hesitate to ask.. twig_config is passed through to the Twig_Environment class, allowing you to set arbitrary Twig environment options. See https://twig.symfony.com/doc/1.x/api.html#environment-options for a complete list of options.\nTo answer your question: The twig_config.cache option is either false or a path to the desired cache directory. Try\nyaml\ntwig_config:\n    cache: /path/to/twig/cache. Unfortunately I'm not sure what you're trying to achieve, can you please further describe what you're trying to do?. You can access a page's meta data (e.g. the page's description) in your Twig template using {{ meta.description }}.. Thanks! :+1: . Try something like this (untested; written for Pico 2.0):\n```php\nclass PicoLastModificationPlugin extends AbstractPicoPlugin\n{\n    const API_VERSION = 2;\npublic function onMetaParsed(array &$meta)\n{\n    if (!isset($meta['modificationTime']) && file_exists($this->getRequestFile())) {\n        $meta['modificationTime'] = filemtime($this->getRequestFile());\n    }\n}\n\npublic function onSinglePageLoaded(array &$pageData)\n{\n    if ($pageData['id']) {\n        $fileName = $this->getConfig('content_dir') . $pageData['id'] . $this->getConfig('content_ext');\n        if (!isset($pageData['modificationTime']) && file_exists($fileName)) {\n            $pageData['modificationTime'] = filemtime($fileName);\n        }\n    }\n}\n\n}\n``. Pico isn't doing anything special with yourblog` directory, it is just discovering all your pages - and this takes some time for 2,000 pages. We'll squeeze the maximum performance from discovering files with Pico 3.0, but if you're depending on metadata (e.g. when sorting blog posts by date), you can't really improve this without caching.\nIn the meantime you can hook into Pico's onSinglePageLoading event to prevent Pico from loading specific files by setting $skipFile to true, likely depending on the currently requested page (i.e. prevent Pico from discovering files in the blog directory if it doesn't have to). This should improve performance significantly. However, managing 2,000 pages will always be noticable without caching. You should really think about adding some caching technique, or at least about how you could limit the number of pages.. Pico itself doesn't use sessions, there's likely some 3rd-party plugin using PHP's session management. Search for the session_start function in Pico's plugins/ directory (or the phrase session in general). You could use command line tools like grep (with the -R option) to search for the strings.\n\nWould you please be so kind to assist me with this or you let me know whom to contact for some assistance with this?\n\nI'd say the best contact for questions like this is the developer that created the website.. This should work just fine, there's likely rather something wrong with what you've copied. Anyway, if you just want a include a map, use Google Map's \"Share\" feature instead (https://support.google.com/maps/answer/144361, resulting in a simple <iframe>). If you really want to use the JavaScript API, you should rather create a appropiate Twig template and use appropiate meta variables to change the map's behavior.. You musn't split HTML tags over multiple lines.. Thank you for your contribution! :+1: Since we've finally released Pico 2.0 (see https://github.com/picocms/Pico/issues/401#issuecomment-401617414), I think this is obsolete now. Sorry for the late response.\nWe would be happy if you give Pico 2.0 a try (including Pico's new official YAML-based config). Please refer to Pico's new upgrade docs to find out what has changed and how to upgrade your Pico 1.0 installation to Pico 2.0. If you have any question, please don't hestitate to ask.. Good point, thank you for bringing this up! :+1: Fixed in https://github.com/picocms/picocms.github.io/commit/f5bed1b6eb01b2dcfd43a630587e8571865d76c0 (the docs will be synced later), the changes will go live together with Pico 2.0 (hopefully this or next weekend).. I'd guess that you've forced Pico into using URL rewriting (rewrite_url: true in your config/config.yml), even though you haven't configured your webserver proberly. Try https://domain.xyz/?index - it should work fine. You can now either remove rewrite_url: true from your config/config.yml or refer to the \"URL Rewriting\" section in Pico's docs to actually make URL rewriting work with your webserver.\ntwig_config: { debug: true } enables Twig's debug mode. It is usually used by theme developers and isn't relevant here.. picocms.org unfortunately doesn't support HTTPS yet, but enabling HTTPS is planned. HTTPS support for custom domains is a rather new feature of GitHub Pages.. There were some breaking changes in Pico 2.0 towards theming. Please refer to the current WIP version of Pico's upgrade docs at http://phrozenbyte.github.io/Pico/in-depth/upgrade-pico-20/ to see what has changed and how to make your theme compatible with Pico 2.0.\nFurthermore it seems that you're using the category meta wrong? In category.html there's L14 and L17, so you're comparing a page title (meta.title) with a boolean (category: true in your YAML Front Matter)?. You are not required to use Pico's new page tree system if you had a working solution before. Your old solution should work with Pico 2.0 without any changes necessary. #414 is a completely different approach, you can't mix this solution with your solution.\nIf you really want to use Pico's page tree system, refer to the current WIP version of Pico's page tree documentation. The tree_node.children array is not a list of pages, but a list of tree nodes. You're rather looking for item.page.meta.category - but note that item.page doesn't necessarily exist (see the docs).. Unfortunately I can't help you if you just give me \"it doesn't work anymore\" :wink:\nThe plugin with this config shouldn't make any difference here.. There were some changes regarding the handling of meta headers that weren't registered by a plugin. See the 5th paragraph of http://phrozenbyte.github.io/Pico/in-depth/upgrade-pico-20/#amazing-new-features-for-theme-developers. You should access the meta value \"Category\" using meta[\"Category\"] (note the uppercase C, i.e. case matters now).\nThe AdvancedMeta plugin never really was necessary. Its existance is a sign that Pico's handling of meta headers was a bit confusing in the past. That's one of the the reason why we no longer do unexpected things and simply pass unregistered meta headers through without change.\nTheme developers don't have to register meta values. You just have to make sure that you use the exact same keys, i.e. if your theme uses {{ meta[\"category\"] }}, use category: My category in your YAML Front Matter. If your theme rather uses {{ meta[\"Category\"] }}, use Category: My category in your YAML Front Matter (note the uppercase C).. Try debugging which values the variables page.meta[\"Category\"], page.meta[\"category\"] and cate actually hold. Enalbe Twig's debug mode by adding twig_config: { debug: true } to your config/config.yml and add {{ dump(page.meta[\"Category\"], page.meta[\"category\"], cate) }} (after for, before if) to your Twig template.. What does {{ dump(current_page, version) }} output? (outside the for loop). Yes, that's because this is no Pico 2.0 installation :wink: You said that you were trying to \"move from version 1 to the latest Pico's development\", but you're still using Pico 1.0. You can download the latest beta of Pico 2.0 here: https://github.com/picocms/Pico/releases. You've cloned the master branch, that is always the current stable release branch. Until Pico 2.0 is released, Pico 2.0 is found in the pico-1.1 branch (development startet as Pico 1.1 and was later renamed to Pico 2.0). This is explained in Pico's CONTRIBUTING.md. Anyway, you shouldn't use Git branches for a productive website anyway, but rather the latest release.\nYou can download the latest beta of Pico 2.0 here: https://github.com/picocms/Pico/releases. Pico's pre-bundled release is basically just a Composer installation packed in a ZIP archive. There's virtually no difference between a pre-bundled release and a Composer installation, both use picocms/pico-composer as a basis (however, you can't use picocms/pico-composer directly without changing Composer's minimum-stability until Pico 2.0 is released, thus I'd recommend to simply use the pre-bundled release, composer works with pre-bundled releases, too).. That's how it is supposed to work.\nTemplate is a registered meta header that intentionally changes the meta header's key. That's the reason why it is only accessible using {{ page.meta[\"template\"] }}. Just refer to Pico's onMetaHeaders event.\nThe reason why you can access the unregistered meta header Category using both {{ page.meta[\"category\"] }} and {{ page.meta[\"Category\"] }} is explained in http://phrozenbyte.github.io/Pico/in-depth/upgrade-pico-20/: {{ page.meta[\"Category\"] }} is the correct one for Pico 2.0, but PicoDeprecated preserves BC by making the meta value also accessible using {{ page.meta[\"category\"] }}. You can disable PicoDeprecated by adding PicoDeprecated.enabled: false to your config/config.yml.. Just place it in config/synhigh_conf.yml (or config/config.yml if you prefer a single config file) and use onConfigLoaded(&$array) as before. Sure, just refer to http://phrozenbyte.github.io/Pico/in-depth/upgrade-pico-20/ for changes that mostly affect users, and https://github.com/picocms/Pico/blob/pico-1.1/CHANGELOG.md for the full changelog, including all changes relevant for developers. You can disable Pico's PicoDeprecated plugin by adding PicoDeprecated.enabled: false to your config/config.yml.. yml\nsynhigh:\n  theme: Emacs\n  autoloader: true\n  autobrush:\n    \"bash shell\": Bash\n    \"txt plain text\": Plain\n    \"js jscript javascript\": JScript\n    \"tex latex\": Latex\n    \"php\": Php\n    \"xml xhtml xslt html\": Xml. Forgive me for being so straightforward, but please try to find a solution yourself (especially by reading the docs) before asking such basic questions. It's a simple YAML list.\nyml\nsynhigh:\n  brush:\n    - Bash\n    - Plain\n    - JScript\n    - Latex\n    - Php\n    - Xml. I'm sorry, but I'm not sure what you're trying to do. What do you mean by \"get the plugin handlers rolling\"? What does your plugin do? What do you want it to do? Where can I find the plugin's source code? How does your content file look like? How does your Twig template do?. The plugin only loads images of the current page, what is IMO pretty reasonable because it has a significant performance impact. Anyway, since it looks like you won't need the metadata provided by the plugin anyway, I'd suggest to simply not use this plugin. Add a teaser meta variable to your YAML Front Matter and use that meta variable in your Twig template.\n```yml\ntitle: My first blog post\ndescription: This is my first blog post.\nteaser: assets/first-blog-post-image.png\n\n%meta.description%\nIsn't this great?\n```\ntwig\n{% for page in pages %}\n    <h3><a href=\"{{ page.url }}\">{{ page.title }}</a></h3>\n    {% if page.meta.teaser %}<img src=\"{{ base_url }}/{{ page.meta.teaser }}\" alt=\"\"/>{% endif %}\n    <p class=\"excerpt\">{{ page.description }}</p>\n{% endfor %}. It would be easier to rewrite the plugin. However, I definitly don't recommend this because it has a significant negative performance impact.. I don't really see a reason why matching the category by title is necessary, it's a rather error-prone approach (as you're experiencing right now). How about adding Category: my_category_1 to your root/supcategory/category/index.md (see https://github.com/picocms/Pico/issues/438#issue-335085179) and using the same Category meta header in your category page (root/supcategory/category/page.md) to match the page? You just have to replace the cate variable (meta.title right now) by meta[\"Category\"].. Works fine for me with double quotes:\n\n\n. You're using the DummyPlugin as of Pico 1.0, not of Pico 2.0.. For what? Registering a Twig function? No. You can access $twig using the onTwigRegistered event.. GitHub's web search only searches in the repo's default branch (the master branch), and since Pico 2.0 is still in beta, you will therefore search in the source code of Pico 1.0. I'm not sure why you even want to use GitHub's web search, it's so inflexible... Simply search your local files or, even better, check your local plugins/DummyPlugin.php directly.. Comment for un-stale-ing this issue\nDidn't forget about answering this, just haven't had time for it yet.... We already promote plugins and themes on our website, unfortunately there isn't really a counterpart for Twig snippets yet. Anyway, creating one might be a good idea. There's just the currently not really used Cookbook on our website. As always, help is highly appreciated!\nThe snippets look really great and are exactly the way it should be used. Just some minor notes:\n\nincludes/pagination.twig: {% if pagi_prev_page is not null %} is obsolete, it never evaluates to false. I guess you rather want to use {% if pagi_prev_page < 1 %} (and remove the style=\"visibility: hidden;\").\nincludes/pagination.twig: Same for {% if pagi_next_page is not null %} (shoulud be {% if pagi_next_page > pagi_maxpage %})\nincludes/pagination.twig: What is pagi_maxpage|number_format for? The number_format Twig filter doesn't make much sense here.\nincludes/pagination.twig: Not really about the Twig snippet, but rather the CSS of your theme: It should be sufficient to mark the active page in the pages list just once: .pi_a for the li element and .page_active for the a element is redundant, .pi_a for li should be sufficient.\n. Please refer to Pico's user docs at http://picocms.org/docs/. It's {{ \"sub/page\"|content }}.. > Wouldn't it be better to have one plugin for authentification on which other plugins could depend on ?\n\nDefinitly! We don't want to invent the wheel multiple times. However, we can't just use PicoAuth for this purpose. We always try to be as \"stupidly simple\" as possible - and this doesn't just embrace the UX, but also Pico's source code. Official plugins always just incorporate the \"bare minimum\" to do a job.\nPicoAuth is the \"definitive Pico plugin for auth\" right now. It does a really great job. But it doesn't include just the \"bare minimum\", it includes some rather \"advanced features\" like OAuth, a registration form and password reset/change forms. Implementing these \"advanced features\" again require even more things \"under the hood\" - like mailing, caching and storage.\nFor official plugins we always take the perspective of the \"most basic user\" - and for editing pages online, you don't need to distinguish multiple users. Thus our goal should be to secure compatibility. For example, we might create some common API (class interface and events) and config for auth, and some sort of a PicoBasicAuth plugin implementing the \"bare minimum\". However, that's not all. We furthermore have to think about how to safely disable and replace other plugins (i.e. PicoAuth needs a way to \"overrule\"/replace PicoBasicAuth).. @tumapav \nI was rather thinking about passing responsibility than replacing PicoBasicAuth by a more advanced plugin like PicoAuth. Just imagine PicoBasicAuth as some sort of \"container\" for auth plugins: Its main purpose is to trigger the onAuthInit event that carries $this (i.e. a instance of PicoBasicAuth). The event serves the purpose to allow other plugins to discover PicoBasicAuth. Apart from that it implements (just) the getAuthenticator() and setAuthenticator(AuthenticatorInterface $authenticator) methods. getAuthenticator() returns PicoBasicAuth's basic implementation of an authenticator by default, whereas setAuthenticator() allows advanced plugins like PicoAuth to set their own authenticator. PicoBasicAuth then simply passes responsibility to this authenticator.\nMost of the auth process should be implemented using events, just like PicoSession for session handling. There should be a bunch of events in PicoBasicAuth's authenticator that must be implemented by authenticators of more advanced plugins like PicoAuth, too. Anyway, it doesn't mean that more advanced plugins can't add more events. The important thing is, that it's not the respective authenticator that receives Pico's core events, but PicoBasicAuth - and it's always PicoBasicAuth (not PicoAuth!) that passes events to the authenticator.\nIf a plugin just needs auth (like PicoAdmin), it must simply depend on PicoBasicAuth. If the user installs PicoAuth, it silently replaces the authenticator by a more advanced one and PicoAdmin won't ever notice any difference. Anyway, if a plugin specifically requires more advanced auth, it must simply depend on both PicoAuth and PicoBasicAuth.\nAs far as I remember you chose to implement a own session handler because you were worried about PicoSession not being stable (what is a good reason!). Anway, since session handling is a rather \"self-contained subject\", I don't think there's a reason for plugins to implement their own session handling as soon as PicoSession is final. What I'm trying to say is: IMO we don't need a general approach to replace arbitrary plugins by other plugins, auth is rather a exception here. However, maybe I just can't think of good reasons. Do I miss something?\n\n@bricebou @tumapav \nRegarding the plugins page on Pico's website:\n\nI'd like to also ask if the structure of the plugin page on the Pico website is going to change now when Pico 2.0 is released.\n\nI don't think that it's reasonable to remove plugins for Pico 1.0 from Pico's website as long as they work with Pico 2.0 (they should; if a plugin doesn't work with Pico 2.0, it should be removed). We might simply distinguish plugins developed for Pico 1.0 and Pico 2.0 by tags.\nSame for the wiki: Plugins that aren't compatible with Pico 2.0 should be moved to a separate \"Pico 1.0 only\" section, everything else should be in some sort of a \"current\" section. The wiki is world-editable, help is appreciated! :smiley:\n\nI was wondering if I can help with Pico website, updating the plugin page ?\n\nYes! :+1: You're right that we shouldn't add plugins untested, however, the approval process consists of two more or less independent tasks: (1) whether the plugin actually works and its docs are coherent, and (2) whether the source code looks fine. Help is highly appreciated! It would be really great if you find some time to check all promoted plugins whether they still work with Pico 2.0. Same for all open PRs in the picocms/picocms.github.io repo. :smiley: . @bricebou \nI finally found some time to check the plugins. Unfortunately they aren't really ready to be promoted on Pico's website:\n\nPicoTags::tags_sorting(): Remove both array_flip() and use usort() instead of uksort(). However, I'm not sure why the tags array needs to be sorted!? :confused: I guess if one wants tag B to be listed before tag A, it means that tag B is more important. This is different for the tags overview page, the tags should be sorted there, but just there.\nPicoTags: Not sure what the nbcol feature is for... Doesn't make much sense to me. How about the batch Twig filter?\nPicoTags: Not sure what the excluded_templates is for... If a page shouldn't have tags, the tags array should be empty.\nPicoTags::onRequestUrl(): It should be rawurldecode() instead of urldecode(). Furthermore the strip_tags() call has no effect (must be called with the result of rawurldecode()). However, strip_tags() doesn't work proberly anyway, you must call Twig's escape filter nevertheless. Otherwise special characters like < (without >, i.e. no tag) and & will still cause problems. If forcing the escape Twig filter isn't desirable, simply use a character whitelist for tag names, like [a-zA-Z0-9_\\.\\-].\nPicoTags: There are various calls to explode(), even though the contents are YAML. If the plugin expects an array, the user should declare an array. Don't use separators like | or ,.\nPicoTags::onPagesLoaded(): The $pages array looses its keys. This is a absolute no-go!\nPicoTags::onPagesLoaded(): You might want to implement $this->ptags_delunique using array_filter()\nPicoTags::onPagesLoaded(): Not sure what the else clause labelled as \"Workaround\" is for...\nPicoSimpleStats: This really isn't something for a plugin... This should be implemented in the theme. The valid use cases for modifying $output in onPageRendered() are very, very limited.\nPicoXMLSitemap: See Pico's official https://github.com/PhrozenByte/pico-robots\nPicoSyntaxHighlighter: Same as with PicoSimpleStats\nPicoCookieBAR: Same as with PicoSimpleStats\nPicoLeaflet: The source code is very confusing... Not sure whether this is like PicoSimpleStats and should be implemented using pure Twig.. @bricebou \n\n\nI've used arry_flip() and uksort() because I'm french and I need to sort tags with accents, diacritics...\n\nPicoTags::tags_sorting(): That's not the problem. Simply replace the whole method by usort($array, 'PicoTags::wd_unaccent_compare_ci'); (i.e. remove both array_flip() calls). It does absolutely the same as uksort() and a respective array_flip() call just before and after it, and saves the array_flip() calls.\n\nI like the character whitelist idea but I'm far from understanding how to implement that...\n\nPicoTags::onRequestUrl(): Try something like\nphp\nif ($this->is_tag) {\n    $this->current_tag = preg_replace('/[^a-zA-Z0-9_\\.\\-]/', '', substr($url, 4));\n}\n\nI've encountered an issue with that : https://github.com/picocms/Pico/issues/444#issuecomment-401586254 \n\nPicoTags::onPagesLoaded(): You must use foreach ($pages as $id => $page) { } and add items to your $new_pages array by using $new_pages[$id] = $page;\n\nIt's from the Dan Reeves' first version of the plugin. As I've said I'm far from being a coder... so I don't always understand what I'm doing :-/\n\nPicoTags::onPagesLoaded(): So, you should still look into it and if you can't see how it makes any sense, remove it :wink: . Good point :+1:\nI've deleted all merged/obsolete branches, including pico-1.1 and gh-pages.\nWe won't introduce a develop branch. Please refer to the \"Branching\" section of our CONTRIBUTING.md for details. Due to the fact that we officially don't support Pico installations using the picocms/Pico repo as a basis since Pico 2.0 anyway, there's simply no reason to ensure that master is a stable version of Pico. We furthermore don't support multiple stable releases at a time. GitFlow would be a bit exaggerated here... :wink: . I don't think that Pico's branching concept is confusing, I rather think that you're just so used to GitFlow, that you're (falsely) trying to apply its principles to any other project. Using release and feature branches is way older than GitFlow, it's even older than Git itself. Same for what master is (it's just Git's default branch, no more or less, what \"default\" means depends on the project; btw: AFAIK there's not a single reference to master without \"master isn't for production\"). Since GitFlow is no \"new\" approach, but rather a composition of widely known principles taken to the extreme, you'll always find resemblances - what might boost the false impression Pico's branching concept might be similar to GitFlow. It isn't.\nMoving to a fully Composer-compatible environment was a massive change concerning Pico's project structure. This was a unsatisfying situation for sure and it took way to long (due to very limited time). The simple reason why the branch was named pico-1.1 and not pico-2.0 is because you can't rename a branch with a open PR on GitHub.\nIm not sure what you mean by \"betas were tarballs on two different repos\". What two repos? You could install Pico 2.0 using Composer from the start, I simply didn't document it anywhere. We're encouraging people to ask if something is unclear, we're lacking documentation in general. I simply don't have time for it.\nI'm not sure which \"3 different threads for version 2.0\" you mean; there was #334 (code) and picocms/picocms.github.io#18 (docs). Both focused on completely different things. It's true that both were massive TODO-lists. That's because they started the same way as #317.\nAgain, we're encouraging people to ask if something is unclear and to give feedback. This is the first time I'm hearing that you want to contribute to Pico. Why didn't you simply ask? I'm happy to answer any question. However, I won't document things if there's not even a small hint that one might actually want to read it...\nSo: What is unclear or missing, so that we enable you to contribute to Pico? I'm really looking forward to any help! :+1: . This is known and documented behavior. See http://picocms.org/phpDoc/v2.0.0/classes/Pico.html#method_evaluateRequestUrl\nQUERY_STRING always takes precedence over REQUEST_URI, because we can't possibly be sure that REQUEST_URI actually works (if REQUEST_URI is http://example.com/pico/, is this due to not working URL rewriting, or because the user actually requested the index page?). There are some more reasons (like not making old URLs invalid when enabling URL rewriting, or for simple debugging reasons).\nHow about ?output=default?. Strictly follow Pico's installation instructions from http://picocms.org/docs/#install. Using Pico-master.zip won't get you a supported Pico installation.\nSimply forget about content-sample, it's a leftover from Pico 1.0. As soon as you've created content/index.md this file should be served. However, since you're getting a blank page, you're rather experiencing a misconfiguration of your webserver resp. a PHP error. Check your webserver's error.log and your webserver config.. Can you please try the following config?\nlocation ~ ^/((config|content|vendor|composer\\.(json|lock|phar))(/|$)|(.+/)?\\.(?!well-known(/|$))) {\n    try_files /index.php$is_args$args =404;\n}\n\nDo you have any good ideas for NginX configurations for protecting those directories but still allowing .html files to be served from /content ?\n\nThis isn't possible on purpose. If you really want to add a static HTML page, simply upload it to the place you want it to be - like /var/www/html/my_non_pico_page.html. However, I guess you're just trying to use HTML in your content files. Just note that you can add HTML to your Markdown files, the markup is simply passed through (just add the contents of the <body> element of your content/test.html to content/test.md - it shoud work just fine).\nIf you need Twig on a per-page-basis, simply create a appropiate .twig file in your theme's folder (e.g. themes/my_theme/my_special_page.twig) and add Template: my_special_page to the YAML Front Matter of the desired page (e.g. content/my_special_page.md).. > when I do that, I again get the same error:\n\n[emerg] invalid number of arguments in \"location\" directive in ... [my NginX config file]\n\nThat's not the same error, before it was in \"try_files\" directive. Check the location line, there's likely a typo or something like that.. > Curious: why -- if we are trying to lock out any public access to those directories -- are we using \"try_files /index.php$is_args$args =404;\" rather than just \"return 404;\"\nIt allows you to use Pico's 404 pages rather than your webserver's. Actually it doesn't really make much of a difference :laughing: \n\nThanks again! :-)\n\nYou're welcome!. You can hide the desired page using a simple Pico plugin:\n```php\nclass HiddenSearchPlugin extends AbstractPicoPlugin\n{\n    const API_VERSION = 2;\npublic function onSinglePageLoaded(array &$pageData)\n{\n    if ($pageData['id'] === 'search') {\n        $pageData['hidden'] = true;\n    }\n}\n\n}\n```. For the Nextcloud Pico CMS app, please refer to [nextcloud/cms_pico`](https://github.com/nextcloud/cms_pico) for getting help.. Neither do I know whether the developers of the Nextcloud Pico CMS app made changes to the default theme or not, nor whether this is actually a problem with the theme or not - you provided zero information about what the problem is. I'm sorry, but I can't help you, because I simply don't know deeply enough what the Nextcloud app exactly does - I don't follow its development, it's a 3rd-party project.\nAnyway, Nextcloud's Pico CMS app still uses Pico 1.0. We completely overhauled Pico's default theme with Pico 2.0 for a good reason, the old default theme was quite broken. No matter what: please refer to nextcloud/cms_pico for getting help. Either for making sure this problem isn't caused by the Nextcloud app, or for asking them to update the Nextcoud app to Pico 2.0.. Ok, wow, PHP is sometimes really weird... I didn't really understand this patch so I investigated a bit, and it's true: If $_SERVER['SCRIPT_NAME'] = \"/index.php\"; (and it looks like this is the only situation), dirname($_SERVER['SCRIPT_NAME']); returns \\ under Windows. Who knows why, but e.g. /pico/index.php results in /pico. Weird...\nCan you please remove the CHANGELOG.md changes or update it to the following?\n``````\nVersion 2.0.2\nReleased: -\n* [Fixed] Support Windows paths (`\\` instead of `/`) in `Pico::evaluateRequestUrl()`\n``````. Great, thank you for your contribution! :+1: . @bitmarte: Sorry, it took some time, unfortunately my time is very limited at the moment. Here we go: https://github.com/picocms/Pico/releases/tag/v2.0.2\nFor some reason all Travis builds fail, Travis seems to have massive network problems right now (sometimes resulting in network-related errors, sometimes in stalling and time outs). :unamused: I've tried it >10 times over roughtly 3 hours, but it still doesn't work. Thus there's no pre-built release package yet. I'll try again in a couple of hours... composer-based installations aren't affected by this.\nThanks again! :+1: . Disclaimer: I don't know anything about PatternLab and never used it. I just did about 2 minutes of investigation (i.e. just a quick peek) here...\nPatternLab seems to be a static website generator. If you can hook into PatternLab's execution, it might be possible the create components that can be used by Pico. At least I can't see a obvious reason why it shouldn't be possible. So you should simply try it yourself. Naturally there might be some obstacles and I'm pretty sure there's some (development) work to do that you'll have to take yourself. In the end it might even turn out to be impossible. Nevertheless, it would be great if you share your experience and work with others, and document possible/common problems and obstacles.. This isn't possible, Pico strictly separates plugins and themes. You'll have to create a separate plugin.\nAnyway, you can (and should) add a dependency to the plugin in your theme's composer.json (and vice-versa in the suggest section of the plugin's composer.json if it's a hard dependency) to make sure it is installed when requiring your theme in your website's main composer project (assuming you're using a Composer-based installation of Pico, what is recommended in general and particularly for situations like yours).. > Meaning, it's not meant to be reused or distributed but it's branded and with custom functionality for a single hosted site and the layout/styling is always kept in sync with the functionality (the code).\nI totally understand your point! Actually this is pretty common, I'm facing the same problem with many websites. But it's rather easy to solve: You're not required to use Composer for your website-specific theme and plugin. Pico still (and always will) support local themes and plugins. Simply add both to your main Composer project resp. your website's Git repo (i.e. by adding the files to the plugins/MyPlugin/ and themes/MyTheme/ dirs), allowing you to manage content files, the website-specific theme and the theme-specific plugin all in one place. You can use picocms/pico-composer as a basis.\n\nAre there any plans on enabling running code from within a theme?\n[\u2026]\nIs there any reason why running code from themes couldn't simply be a config option in the installation where the host would decide if they want to allow it? That way it could be off by default but still be available for more customized installations.\n\nNo, there are no plans to allow that in Pico's core. We truly believe that separation of concerns is a good thing. This is also the reason why we don't support Twig in content files. It's part of Pico's concept that neither content files, nor themes can introduce malicious code to the server (JavaScript is a different thing).\nAnyway, this only concerns Pico's core. Thus:\n\nWould a similar plugin be frowned upon or accepted into plugin lists or repositories\n\nI don't see any reason why we should decline such a plugin, so, sure, we would accept such a plugin (as long as it meets the submission guidelines).\nHowever, I'd rather recommend keeping it as simple as possible, i.e. not concerning Composer here. Simply write a plugin, check whether the file themes/<current theme>/<current theme>.php exists, include it (see Pico::loadLocalPlugins()) and use Pico::loadPlugin() to load the plugin. However, I'd still recommend using the main repo approach described above, it's easier :smile: . You'll have to create a plugin to get this done - but don't despair, it's pretty simple. Just take the following few lines (taken from https://github.com/PhrozenByte/pico-robots):\nphp\nclass PicoModTimePlugin extends AbstractPicoPlugin\n{\n    public function onSinglePageLoaded(array &$pageData)\n    {\n        if ($pageData['id']) {\n            $fileName = $this->getConfig('content_dir') . $pageData['id'] . $this->getConfig('content_ext');\n            if (file_exists($fileName) && !isset($pageData['modificationTime'])) {\n                $pageData['modificationTime'] = filemtime($fileName);\n            }\n        }\n    }\n}\nYou can then access the modification time of a page's content file using {{ page.modificationTime|date(\"m/d/Y\") }}. Please note that this might not be what you actually want, the modification time might geht updated by your operating system even if you didn't change anything. Thus I'd recommend using a meta header instead.\nUnfortunatly there's no way to tell when a file has been created on Linux (to be precise, whether it is possible or not depends on the filesystem you use, and if it is possible, the code necessary to access this information might vary). I again recommend using a meta header instead (e.g. Pico's default Date meta header).. If Pico fails to guess the installation's base_url becazse if a complex server config, simply set it manually by adding the following to your config/config.yml:\nyml\nbase_url: https://www.***.fr/TEST\nJust refer to Pico's config/config.yml.template for more info about Pico's config options.. So, the URL is correct (e.g. https://www.***.fr/TEST/the-name-of-some-page)?\nIn this case it's the webserver's fault with a inproberly configured DocumentRoot, making it impossible to use RewriteRule. Please refer to your server admin for further assistance.\nIn the meantime you can disable URL rewriting by adding the following to your config/config.yml:\nyml\nrewrite_url: false. Hmm... Unfortunately I don't really understand what you're trying to achieve and why you're trying to achieve it. :confused:\nI first though you're trying to move some files to a folder different than httpdocs, but this doesn't seem to be the case. What are the advantages of moving Pico to a sub-folder, but not the index.php?. Thanks for the explanation, I think I understand what you're trying to do. However, I don't think that this approach is the best way to achieve what you're trying to do. How about adding Pico's .htaccess RewriteRules to your main /var/www/html/.htaccess (with adjusted paths of course)? You'll have to do this to enable URL rewriting anyway. It works without any change to Pico and furthermore allows you to keep your main httpdocs directory even cleaner, because you can keep Pico's index.php in the picocms subfolder.. Thank you for your contribution @jjtmp! :+1: However, as explained above, I think there's a better solution to achieve what you're trying to do. Thus I will close this now. If you have something to add, please don't hesitate to comment. @ALL, more feedback is still appreciated!. Most plugins and themes written for both Pico 0.x and Pico 1.0 should work fine with Pico 2.0. There were some BC-breaking changes indeed, but they affect just a rather small number of use cases, thus it's expected that most \"old\" plugins and themes work.\nPico's wiki is completely user editable and we don't really maintain the contents there. We'd love to see if you test some plugins and themes (i.e. check whether they work with Pico 2.0) and create a distinct Pico 2.0. Help is highly appreciated! :+1: . It's onTwigRegistered now, see https://github.com/picocms/Pico/blob/e172dd20a1fe230d162bd918299840aa32e849d2/plugins/DummyPlugin.php#L519-L531\nDon't forget about adding the API_VERSION constant, otherwise your plugin won't be recognized as Pico 2.0 plugin. See https://github.com/picocms/Pico/blob/e172dd20a1fe230d162bd918299840aa32e849d2/plugins/DummyPlugin.php#L26-L31. Please strictly follow the installation instructions as stated in Pico's README.md, or on our website. You'll have to download a release archive, no source code archive.. Please make sure to correctly upload all of Pico's files to your webserver. Double and triple check this. Both errors indicate that something went wrong while uploading Pico's files.. > www.domainname.something/subdomainname does not work. I had to enter\n\nwww.domainname.something/subdomainname/index.php in the addressbar\n\nCheck your webserver config, it must be configured to use index.php as index file. If you're using Apache, use the DirectoryIndex directive. If you're using nginx, use the index directive.. Not sure about whether we should add explicit support for UTF-8 BOM or not. UTF-8 BOM are known to cause problems, so I'm not sure whether we should \"promote\" them by explicitly supporting them...\n@all, feedback is appreciated!. Unfortunately I can't reproduce this. This Markdown\nmd\n* foo\n  * foo\n      * foo\n        * foo\n          * foo\nresults in\n\nThe rather unexpected intendation of the 4th \"foo\" is likely due to the mixed whitespace intendation. This Markdown\nmd\n* foo\n    * foo\n        * foo\n            * foo\n                * foo\nreslults in\n. Pico uses Parsedown as Markdown parser, so to put a long story short: Regarding Markdown, Pico does, what Parsedown does. Due to very limited time, we don't plan to create our own Markdown parser.\nAnyway, customization is one of Pico's main advantages. You can use Pico's onParsedownRegistered event to hook into Parsedown's processing. See Parsedown's wiki for more info about how to create a Parsedown extension and how to add your own syntax rules to Parsedown.. Using element-specific styling rules (like width and height of a image) is considered rather bad practice, because viewing your website with a 4K desktop screen or your smartphone makes a huge difference. You should use CSS classes instead. With CSS classes you can define how a element (a image in this case) behaves in relation to its parent element, like consuming 100% (default), 75% or 50% of the available space, e.g.\ncss\nimg { width: 100%; }\nimg.small { width: 75%; }\nimg.xsmall { width: 50%; }\nYou can then use those CSS classes in Markdown using e.g.\nmd\n![api.png](.attachments/api-6c96846f-6a2f-4ad3-9a5e-5d96071cfbbb.png) {.small}\nApart from this recommendation: Pico uses Parsedown as Markdown parser, so to put a long story short: Regarding Markdown, Pico does, what Parsedown does. Due to very limited time, we don't plan to create our own Markdown parser.\nAnyway, customization is one of Pico's main advantages. You can use Pico's onParsedownRegistered event to hook into Parsedown's processing. See Parsedown's wiki for more info about how to create a Parsedown extension and how to add your own syntax rules to Parsedown.. Good idea, we've incorporated this in https://github.com/picocms/picocms.github.io/commit/42a7207162d65fa1be3d998d9de292aee12195af :+1: . There are no plans to add this to Pico's core. Anyway, one of Pico's main strengths is its extensibility using plugins and its extensive event system. There are indeed plans to create a official i18n plugin with Pico 3.0 (see #317), however, due to very limited time, this probably isn't going to happen soon.\nHowever, you actually don't really need a i18n plugin to create a multilingual website. The easiest solution is to create corresponding subfolders in your content directory (e.g. content/en, content/de, content/jp, \u2026) and duplicate the contents. With a appropriate .htaccess RewriteRule you can redirect requests to your index page (i.e. http://example.com/pico/) to the appropriate language subdirectory (e.g. http://example.com/pico/en/). In addition, you should extend your theme to provide a language selector. Fixed strings in your theme can be replaced by simple YAML-based language files (e.g. config/lang.yml), that can be used with {{ config.lang.some_string }} in Twig. You can use a Twig macro or a small Twig function to shorten the syntax (including the well known gettext _ alias).. Since we couldn't (and don't really wanted to) prevent users from using GitHub as some sort of support forum, we simply made the decision to officially use GitHub for any kind of support request, not just for bug reports and feature requests. So, please don't hesitate to open a new Issue on GitHub if you have any question about Pico, including support requests.\nNaturally this is no final decision - we all hope that Pico's community grows, so there might be the point when we really need a forum, mailing list or something like that, but we're not at this point yet.  The only other official support channel besides GitHub is #picocms on Freenode IRC (although the channel is often idle). Also see http://picocms.org/docs/#getting-help\nThank you for creating the Facebook group. Help is always appreciated and I always love to see when someone is helping others to use Pico! :heart: . The Twig variable pages is a list of all pages, indexed by page ID. There's no Twig variable page (without s), unless you define it; page.title refers to the pages loop shown below:\ntwig\n{% for page in pages if not page.hidden %}\n    <p>{{ page.title }}</p>\n{% endfor %}\nThis snippet tells Twig to iterate the pages list and assign the currently iterated item to the page variable, allowing you to print out the page's title using {{ page.title }}.\nIf you want to access the current page, use the current_page variable, e.g. {{ current_page.title }}.. Yes.\nI'd just recommend using a slightly different syntax. The current syntax doesn't allow you to access pages in sub dirs (like sub/page.md). Use {{ pages[\"_social\"].meta.icon }} instead.. 1. Yes, you can safely move/copy all of Pico's file to a different directory (including webroot of course)\n\nThis is due to how composer create-project picocms/pico-composer works. Unfortunately we can't really change that. However, I guess the install instructions can be made more precise here. I'll update them accordingly, thank you for your feedback! :+1: . That's correct @Lomanic. However, since we unfortunately can't assume that Composer is installed globally, we recommend users to download composer.phar first. Unfortunately the guys from Composer didn't decide to treat a directory with just the composer.phar in it as \"empty enough\", but decided to rather let Composer bail out...\n\n@ctuxboy isn't the first user stumbling over this, thus I think it's better to update the docs accordingly. On occasion I also updated the install instructions for developers :smile:  See 8826bf4bfed59cffac5a5f53fdc3f38db668e815 resp. https://github.com/picocms/picocms.github.io/commit/39bb74290b2aa0c07baaedbe55c418654031c6ee. The Clean Blog theme (not \"simple-blog\") is not a official theme, it's just promoted. Both are expected to work with Pico's latest version nevertheless. Official plugins/themes were made by Pico developers and are treated the same way as Pico itself, i.e. if something is broken, we will fix it. If a promoted plugin/theme is broken, it's up to the third-party developer to fix it; if he doesn't, we will remove it from the promoted plugins/themes list.\nAnyway, there was some confusion about how to use this theme in the past, so I guess it's the same issue as before: You must add Template: post to the YAML Front Matter of all your posts. It's kinda unintuitive I guess... See https://github.com/BesrourMS/clean-blog/blob/master/content-sample/post.md. Our current blogging example is the most bare bone example I can think of. In fact, step 4 is no longer necessary since Pico 2.0. So, the only remaining step which requires Twig is step 3 - and this step already includes a fully working Twig snippet that just needs to be copied.\nThus I unfortunately can't really understand where any difficulties araise. Since there was some trouble using the \"Clean Blog\" theme before about this particular step, the only simplification I can think of is to no longer recommend creating a distinct Twig template for blog posts (blog-post.twig; step 2). Anyway, I'm not sure whether this is really an improvement; if a user missed this step it would have worked anyways, and users will likely need a distinct Twig template for blog posts later. I've updated the blogging example accordingly (removed steps 2 and 4, splitted step 3 in two steps), see cbed65c.\nAnyway, if you want to create your own theme, you must learn Twig (no need to learn PHP though). There's no way around this, if you want to create something own, you'll have to learn how to do it. If you don't want to learn Twig you can use a third-party theme. There are quite a lot themes with blogging support out there (see http://picocms.org/themes/ and https://github.com/picocms/Pico/wiki/Pico-Themes). They often follow pretty different strategies to deal with blogging, there are many ways to do it.. Thank you for your contribution @bitmarte! :+1: \nFixed in 8494997 and v2.0.4. If you want to create a TOC automatically, you'll have to write a plugin to extend Parsedown (the Markdown parser Pico uses).\nBesides that you can use the ### This is a headline {#this-is-a-headline} Markdown syntax in your content files to add anchors to headlines. You can then add a list of all anchors and their respective title to the YAML header of your content file and use this information to create a TOC using Twig. See \"Table of contents\" on http://picocms.org/cookbook/. We recommend using Pico's default Date meta header. Also see #455 . Pico uses Parsedown as Markdown parser (resp. Parsedown Extra, Parsedown's extension for Markdown Extra), so to put a long story short: Regarding Markdown, Pico does, what Parsedown does.\nUnfortunately there's a known issue with footnotes in Parsedown Extra since Parsedown 1.7, see https://github.com/erusev/parsedown-extra/issues/118. Development of Parsedown Extra isn't very active, but there's a beta release of Parsedown Extra (v0.8.0-beta.1) that seems to fix the issue. Since it doesn't seem that there's going to be a stable release soon, I've just released a beta release of Pico (~~v2.0.5-beta.1~~ (not released yet, see below)) that uses Parsedown Extra 0.8 and Parsedown 1.8 (as said, both currently in beta).\nSome extra testing is required before deploying this as a stable bugfix release of Pico 2.0. Please keep in mind that this is a rather outstanding move; stability is very important to Pico, depending on a beta release of a library is bad. However, the fact that this is a long-living issue in Parsedown Extra (and that apparently not much is happening) is bad, too. Thus extra testing is required. Please test ~~v2.0.5-beta.1~~ (not released yet, see below) whether it fixes your issue and doesn't break your other Markdown files.\n@all: There were pretty massive changes in Parsedown 1.8, there might be issues with existing Markdown files in the wild, so: Additional testing is highly appreciated! Not just related to footnotes, but all your Markdown files in general.\n\nNote about v2.0.5-beta.1: v2.0.5-beta.1 has not been released yet because Travis CI seems to have a major outage: jobs start with major delays only, making it virtually impossible to deploy a release (the latest build is running for over an hour now...). Will release v2.0.5-beta.1 tomorrow.. v2.0.5-beta.1 is out now.\n@ALL: There were pretty massive changes in Parsedown 1.8, there might be issues with existing Markdown files in the wild, so: Additional testing is highly appreciated! Not just related to footnotes, but all your Markdown files in general.. You must install the PHP DOM extension. Correct me if I'm wrong, but KDE Neon is based on Ubuntu, right? If this is true, the PHP DOM extension is in the php7.2-dom virtual package, which is provided by the php7.2-xml package. Install the php7.2-xml package on your system, e.g. by opening a shell and running:\n$ sudo apt-get install php7.2-xml. Revert all your changes you made to your php.ini and restart PHP and/or your webserver (or: simply reboot). The extension isn't loaded, otherwise the message won't appear. Check your phpinfo whether the extension is loaded (create a info.php with the contents <?php phpinfo();) and check PHP's error.log for related messages.\nIf it still doesn't work, please contact the support/community of KDE Neon and/or Ubuntu to get help to proberly setup your webserver resp. PHP. Pico requires PHP 5.3.6 or above (PHP 7.2 works fine) with the extensions dom and mbstring loaded. Unfortunately I'm neither using KDE Neon nor Ubuntu, thus I can't provide more help about how to setup a webserver on your distribution. KDE Neon might use different package sources, so that the PHP DOM extension isn't actually provided by the php7.2-xml package, but another package.. My apologies for this late response @aferrop! Unfortunately my time is very limited lately and I still haven't had time to make the changes necessary to Pico's website to support multilingual user docs. This is still on my todo list and my top priority for Pico.\nThank you for your contribution, it's very appreciated! :heart: . External third-party sitemap scanners rely on recursively navigating through your website in the hope to find all pages. This is a very error-prone process and often doesn't yield the expected results. Thus you should use a plugin instead. For creating a sitemap.xml automatically you can use Pico's official PicoRobots plugin.\n\nAlso the plugin PicoRobots won't show all files.\n\nWhat does this mean in particular? Can you provide a link?. ~~Since your website works completely fine, sitemap.xml lists all pages and all pages are accessible, the error is in these third-party services failing to work as expected. You should contact the customer service of these services.~~\n#edit: Check your robots.txt, you explicitly disallow crawling your website:\nUser-agent: *\nDisallow: /\nDisallow: /config/\nAllow: /tmp. It's likely still the robots.txt, remove the Disallow: / rule. If it still doesn't work, contact the customer service of these 3rd-party services, this is no error in Pico.. My apologies for this late response @stefanocpp! Unfortunately my time is very limited lately and I still haven't had time to make the changes necessary to Pico's website to support multilingual user docs. This is still on my todo list and my top priority for Pico.\nYour contribution is very appreciated. Thank you! :heart:. What do you mean by \"how to make them appear here\"?\nThe Travis failure is unrelated to your changes, see https://github.com/picocms/Pico/commit/7c1e8897170e1ec2853fc29c694e8bae0a1d51a2. Looks like you edited files in multiple branches. This pull request is the stefanocpp-ita-1 branch, but you also edited files in the stefanocpp-ita branch and master branch.. Please check Pico's config/config.yml.template, pages_order settings.. Add nav: 1, nav: 2, nav: 3, \u2026 to the YAML Front Matter of your pages (use the numbers to define the order of the pages) and use the following pages_order config in your config/config.yml:\nyml\npages_order_by_meta: nav\npages_order_by: meta\npages_order: asc. You can either use a 3rd-party contact form service (just search for \"Contact Form Services\", but please keep privacy in mind when using such services) or a plugin for Pico to keep full control. If you choose to use a plugin, please refer to the Plugins page in our Wiki; it currently lists the following contact form plugins:\n\nnliautaud/p01contact\nufgum/PicoContactModal\ngidlov/pico-contact\n\nPlease note that our Wiki is fully community-driven and all plugins listed there were developed by 3rd-party developers. Unfortunately we can't provide support for them.. Try {% set latest_page = pages|sort_by(\"time\")|last %} (it's the same as pages|sort_by(\"time\")|reverse|first, but skips the reverse filter, so that the latest post is actually the last item in the sorted pages list). Sorry, I'm not sure what the exact question is. After setting the latest page's data to the latest_page variable, you can access it as usual:\ntwig\n{% set latest_page = pages|sort_by(\"time\")|last %}\n<a href=\"{{ latest_page.url }}\">{{ latest_page.title }}</a> <p>{{ latest_page.date_formatted }}</p>. This is due to a misconfiguration of your webserver. Your webserver provides Pico with contradictory environmental information, making it virtually impossible to properly determine the base URL automatically. Check your webserver config, especially the environment variables passed to PHP, namely the SERVER_PORT and HTTPS environment variables (other related environment variables are shown here). Otherwise you'll have to configure the base URL manually or write a plugin to properly resolve the conflicting environment variables.. The best way to create a recursive page menu is Pico's page tree feature. You can add the following Twig snippet to your themes/my_theme/index.twig:\n```twig\n{% macro tree(parent) %}\n    {% import _self as utils %}\n    {% for child in parent.children %}\n        \n            {% if child.page %}\n                {{ child.page.title }}\n            {% endif %}\n            {% if child.children %}\n                \n                    {{ utils.tree(child) }}\n                \n            {% endif %}\n        \n    {% endfor %}\n{% endmacro %}\n\n\n{{ pages[\"index\"].title }}\n\n\n    {% import _self as utils %}\n    {{ utils.tree(pages[\"index\"].tree_node) }}\n\n```. This question is rather unrelated to Pico, but HTML/CSS. If the default theme doesn't meet your needs (what's rather expected, Pico's default theme is intended as a starting point for creating a own theme), you can choose to use one of our great 3rd-party themes. You can find a selection of excellent themes on our website and a even greater list of themes in our Wiki.. Short answer: You can't. On purpose.\nAnyway, Pico comes with a very powerful plugin system to do what you want. Just create a simple Pico plugin (create plugins/PicoUberGallery.php with the following contents) and utilize a Twig function:\n```php\n<?php\nclass PicoUberGallery extends AbstractPicoPlugin\n{\n    public function __construct(Pico $pico)\n    {\n        parent::__construct($pico);\n        require_once('/home/user/public_html/ubergallery/resources/UberGallery.php');\n    }\npublic function onTwigRegistered(Twig_Environment &$twig)\n{\n    $twig->addFunction(new Twig_SimpleFunction('gallery', function ($name) {\n        return UberGallery::init()->createGallery($name);\n    }));\n}\n\n}\n```\nYou can then use it in your Twig templates (e.g. themes/my_theme/index.twig) using:\ntwig\n{{ gallery(\"2019_NZ\") }}. No, you can't call this in your content files. Pico isn't different to virtually any other CMS here, the concept behind is called \"separation of concerns\". Your content files are supposed to define your contents, not the layout/structure of your website. This is up to your theme.\nAnyway, naturally you can still use the same template and plugin for any gallery on your website. Simply replace the currently static \"2019_NC\" string with a meta variable. For example, add the following to the YAML Front Matter your content file (e.g. content/my_2019_nz_gallery.md):\n```yaml\ntitle: This is my 2019 NZ Gallery\ngallery: 2019_NZ\n\n```\nAnd use this snippet in your Twig templates (e.g. themes/my_theme/index.twig):\ntwig\n{% if meta.gallery %}\n    {{ gallery(meta.gallery) }}\n{% endif %}\nSee http://picocms.org/docs/#text-file-markup and http://picocms.org/docs/#themes. Pico works this way for historic reasons; it was originally designed to provide rather small websites, not blogs with hundreds or even thousands of articles (there's no definite limit, there are Pico installations with 100 pages and more running just fine; it all depends on your hardware and the load your website receives).\nAnyway, you're completely right. Thus we're planning to overhaul the page discovery process and implement a directory-tree-based page discovery with Pico 3.0. We did some groundwork for this with Pico 2.0 by implementing Pico's page tree and allowing pages and directories to be hidden. But we didn't change anything about how Pico 2.0 discovers pages; this is planned for Pico 3.0. Anyway, if you need to iterate all pages (e.g. when a pagination plugin tries to determine the number of pages), Pico still would have to discover all pages. This is a inherent consequence of Pico being a flat-file CMS.. Pico reads and parses the YAML Front Matter for all content files on startup. The contents of a page are parsed on demand (only exception: the requested page, the contents of the requested page are parsed on startup).. Unfortunately I'm not really sure what the actual question is; what do you mean by \"for each page, the search is executed again\" and \"only the appropriate part is shown\"?. Ah, I see. Yeah, sure, every request is handled independently, i.e. the search is executed again. That's the reason why projects like Lucene exist, implementing a search in a feature-rich but still performant manner isn't trivial. This isn't possible with pure Twig, you'll have to write a plugin. Instead of re-inventing the wheel, it's probably best do utilize projects like Lucene.. Which URL is shown in your browser when navigating to a non-existing page? Are you redirected to Pico's index page (i.e. the base URL is shown in your URL bar), or are just the contents of index.md shown instead (i.e. the non-existing URL is shown in your URL bar)?. We can do this :smiley: Let's see what's going on after Pico has read the page's contents... Create plugins/PicoDebugPlugin.php with the following content, request a non-existing URL and provide the output:\nphp\n<?php\nclass PicoDebugPlugin extends AbstractPicoPlugin\n{\n    public function onContentLoaded()\n    {\n        var_dump($_SERVER);\n        var_dump($this->getPico());\n        die();\n    }\n}. I personally prefer prefixing interfaces/traits with I/T towards adding Interface/Trait - but that's nothing I insist on. More opinions are appreciated.\n. @theshka (https://github.com/picocms/Pico/commit/968dc183db9fe57ad94fb5e2a536e52fc0d13243), are there any reasons that oppose using e.g. 0.7.* instead?\n. The ROOT_DIR, LIB_DIR and VENDOR_DIR constants are required before calling the constructor, so it's impossible to move them there.\nSplitting constant definition (global.php) and instantiation of Pico allows developers to integrate Pico into their own ecosystem and overwrite the constants as necessary. It allows e.g. the following:\n``` php\n<?php\nclass MyApplication {\n    protected $pico;\n// snip\n\nprotected function initPico() {\n    // either include the global.php\n    require_once(PICO_DIR . 'global.php');\n    // or define the constants on your own\n\n    $this->pico = new Pico();\n}\n\n// snip\n\n}\n```\nAnyway, this is no good solution at all, I focused too much on the existing code. I'll overhaul this, probably by replacing the constants with something better... Thanks for bringing this to my attention.\n. Like in Pico 0.9, we exclude all 404.md files in any folder (e.g. sub/404.md). Pico 0.9 however always uses the \"root\" 404.md. What do you think about supporting directory-specific 404 files?\n. Like in Pico 0.9, files are strictly sorted in alphabetical order, so sub/bar.md and sub/foo.md are listed before sub/index.md. What do you think about making an exception for index files, so sub/index.md is sorted by sub instead?\n. One could want to use a different 404.md for his blog, e.g. showing a tag cloud, what wouldn't make much sense for non-blog-pages. Apart from the use case, should we then still exclude all 404.md files or just the \"root\" 404.md?\n. Please take a look at fc7632b and cdef7a6; any feedback?\n. I think the added 10 LoC is it worth to resolve this undocumented and not expected behavior...\n. See the commented line and 77f9390 :smile:\nPico 0.9 excluded all 404.md files in any directory from the pages list, even they weren't functional. This never was documented and is unexpected behavior - you either expect that only the global 404.md file is removed or that Pico supports per-directory 404.md files. The first solution would break BC, so I decided that the additional 10 LoC are it worth to resolve this problem.\n. Providing an easy way to integrate Pico in other applications was the intention of removing the constants, so this definitely is a completely fair use case. It is not necessary to move the whole config handling to index.php, it's entirely sufficient to provide an API to do such things - so I've added a Pico::setConfig() method. See method docs and 1419cf1 for details.\n. We forbid access to vendor/ with our .htaccess by default. Probably a composer install script could solve this by copying the necessary assets to themes/ or we could use one of Bootstraps CDNs. Any ideas?\n. Isn't this obsolete when always specifying the full page width of 12 columns?\n. I've found a good article about this problem elaborating our possibilities. Additionally we can:\n- write a simple helper script to copy the bootstrap assets to the desired directory\n- add a whitelist entry to .htaccess (this will prevent users (like me) to put the vendor directory somewhere outside httpdocs)\n- use one of Bootstraps CDNs\nSo we have at least 10 possibilites. Any thoughts @theshka, @dav-m85?\n. https://getcomposer.org/doc/articles/scripts.md\n\nNote: Only scripts defined in the root package's composer.json are executed. If a dependency of the root package specifies its own scripts, Composer does not execute those additional scripts.\n\nvia #285\n. Yes, definitely!\n. There's a reason why this is configurable :wink:\n. For the sake of readability the heading syntax should remain consistent\n. If we want to support Blogging officially, the section should be removed completely.\n. Is there any reason to shorten this title? Sure, makes sense for the ToC, but in continues text it rather impedes readability.\n. What's the reason for removing this link?\n. Bold text really should be enough highlighting :wink:\n. No! The composer setup is not just for developers. There's no change necessary in this section...\n. This obviously is no <blockquote>... :wink: This highlighting isn't necessary at all, the old version was just fine.\n. Users can make their own choice, some people prefer composer, others pre-bundled releases and some people (even non-developers) want to use git (the latter is a little more complicated and requires some knowledge in git, but explaining this is out of Pico's scope, thus it's not part of the docs). The sections don't build on one another, they're completely independent.\n. The point I want to make is not this particular paragraph. It just makes no sense that we have a step-by-step-tutorial below, what describes how to use Pico as a blogging software, if this is already part of the default theme.\n. Not used\n. The redirect_from plugin is used for BC; this is a new page, thus not necessary.\n. Missing ';'\n. Shouldn't this be in the Pico location block?\n. GitHub Pages (i.e. Kramdown) unfortunately doesn't support fenced code blocks correctly (three different Markdown parses are a pain...). See http://smcdougall.github.io/Pico/docs/#nginx-configuration. But indentation works fine :smiley:\n. For the \"short\" setup example it may be easier for a user to set $config['rewrite_url'] = true; in config/config.php instead. From my rather unexperienced point of view regarding nginx's configuration, this would probably end up in trial & error and a angry myself blaming Pico why it isn't working. :smile:\n. Can you please add a \"Learn more...\" here (see Upgrade section above)? Sure, we'll probably change this, but in the meantime...\n. Please don't mix inline and footnote URLs (i.e. move the URLs to the bottom here). This isn't necessary for nginx.md as you're using inline URLs uniformly there.\n. I don't think that this is true, otherwise the provided example would be wrong or seriously incomplete :wink:\nThe difference rather is that the example provided here is more comprehensive, also covers the relevant general webserver configuration, explains the Why and weighs alternatives. :smiley:\n. I'm no native speaker, but \"three main parts to configuring\" sounds a bit odd. :unsure:\n. Hmm... The \"three sets of rules we will be developing\" (btw: you're also covering the general webserver config, so shouldn't it be four?) just screams to use sub-sections, i.e.\n- Getting started\n  - General Server Configuration\n  - Denying Access to Pico\u2019s Internal Files\n  - PHP Configuration\n  - URL Rewriting\n- Example Configuration\n- Advanced Configuration Tips\n. I don't think that blocks is a actual \"name\". Just \"Nginx's server configuration is broken into sections.\" should be fine :smiley:\n. Can you please add a URL to a tutorial how to configure HTTPS with Nginx (plus a sentence that SSL isn't covered by this example, but its use is recommended)? Nowadays HTTPS is what you should want to use 99% of the time :smile:\n. > since they're disabled unless specified in Nginx, but this isn't always the case in Apache\nThis is also the case in Apache, but it's a common misconfiguration. I'm not sure whether this is true for nginx, too.\n. This rule also affects non-Pico subdirectories, isn't it? Especially blocking access to content globally may cause trouble with other software. Does Nginx allow cascading location blocks? Otherwise a users needs to adjust the base path (i.e. / or /pico/) manually :unamused:\nIn general: Shouldn't this section come after the PHP configuration or is this necessary because of Nginx's processing order? The document should follow a golden thread from \"General Configuration\" to \"Pico's configuration\" - at least as long as Nginx's configuration order doesn't foil it.\n. > Unlike Apache (which sends every document to PHP automatically), Nginx is more streamlined.\nThat's not entirely true. :wink: Actually Apache and Nginx handle PHP the exact same way: you configure a file extension (or multiple file extensions) and the webserver sends all requests to files with this file extension to PHP (still abridged for Apache; Apache uses MIME types, but they ultimately also mostly depend on file extensions). The difference between mod_php (Apache) and FastCGI (both Apache and Nginx) is about how the webserver communicates with PHP (i.e. how PHP processes are handled, so it's a more technical question), not how requests are handled. The difference between Apache and Nginx is that Linux distributions ship more intelligent default configurations for Apache, so Apache users don't have to deal with this on their own.\n. Your example isn't OS-Dependant. Apart from file paths (i.e. where the FastCGI socket is located, more precisely /var/run/php5-fpm.sock) you can use the same config for Windows :smiley:\n. Shouldn't this be try_files as discussed in https://github.com/picocms/Pico/issues/343#issuecomment-213793577?\n. Why is Document Root formatted as code?\n. > By referencing /, Nginx will load index.php\nReading this, we can save a round trip by directly rewriting to /index.php?$uri&$args.\nAlso: php vs. PHP\n. /pico/index.php?$1&$args;, see above\n. \"What's different is...\", \"What is different is...\" - shouldn't this be something like \"The difference is...\"?\n. I think it's a good idea to let the components, i.e.\n\nAn easier solution might be to place all the common components (index, access denials, php rules) into a separate file\n\ndirectly link to the appropriate sections above :smiley:\n. Can you please move the file to in-depth/nginx.md?\n. You mean picocms.org? Sure, see http://themes.iki-bir.com/webpaint/multipage/full/\n. Yeah, sure, this is completely fine :smiley:\n. I'm pretty sure that even \"expert webmaster's\" aren't invariably aware of what this is :smile:\n. Maybe. We should emphasize advantages, not disadvantages by e.g. highlighting Pico's extendability and small footprint (what already implies that a user needs to make his \"hands dirty\"). However, we shouldn't make empty promises, so a sentence like\n\nPico is not a turn-key solution.\n\nis completely fine.\n. Off Topic: We should add screenshots to http://smcdougall.github.io/Pico/customization/, too.\n. :question: \n. - Maybe a short sentence that many webhosters sell various webhosting packages and that the smallest (i.e. cheapest) frequently doesn't include a database?\n- Maybe also a short sentence about performance: Connecting to the database usually is one of the bottlenecks.\n. Maybe a short sentence that Pico even usually doesn't need to write any data (at least when you don't use the admin plugin)? Allowing PHP to create/modify files on the webspace sometimes is a bit... frustrating to setup. And it improves security, when PHP isn't able to write to the webspace, a attacker can't upload malicious code permanently.\n. The formatting looks a bit... odd. :smile:\n. Yes, indeed. Maybe you can (substantially, i.e. not by copying them) use the first two paragraphs of https://en.wikipedia.org/wiki/Markdown#History to improve the section even more. :smiley:\n. Yep. At least a very basic example.\n. Docs yes, definitly, Cookbook not until it's presentable.\n. Maybe a short sentence that Twig is so powerful, that you don't need plugins for most typical tasks.\n. What's LUP?\n. Unfortunately not (as far as I know). You'll need to read and adapt the HTML sourcecode manually :unamused: \n. I think that a user usually already knows what a CMS is when he discovers Pico. I don't think that we should target at \"first offenders\" (in creating a website) :smile:\n. You can format it like <p>paragraph</p> to highlight the tag\nhtml\n<code>**&lt;p&gt;**paragraph**&lt;/p&gt;**</code>\n. > frequently doesn't include a database\nprobably wasn't the best example :laughing:\nThe point I want to make is that Pico has very low system requirements and runs on nearly any webspace.\n. You could alternatively use\n\nEvery paragraph of your site would be contained in <p> tags, links would have an <a href=\"http://example.com\"> tag, \u2026\n\nif you want to really separate code and vocabulary items :wink: I was just trying to improve the formatting only and keep it the way you decided it would be best (i.e. to mix code and text) :smiley:\n. Good point. Now I'm not so sure about it anymore :smile: I think you should probably do it the way you think it's better.\n. That's a great idea! :+1: :smiley:\n. btw: The Jekyll docs say that it's {% include footer.html param=\"value\" variable-param=page.variable %} and that the variables can be accessed using {{ include.param }} resp. {{ include.variable-param }} - see https://jekyllrb.com/docs/templates/#includes. However, this has never worked for me either :wink: Maybe it works now since GitHub Pages switched to Jekyll 3 recently...\n. Jekyll and especially Liquid's docs are a pain in the ass... I can't say anything else about it...\n. Yeah, Liquid doesn't like this either, stumbled on this while developing phpDoc.html. You need a temporary variable (yep, unbelievable stupid, isn't it?):\ntwig\n{% assign images = site.galleries[include.gallery].images %}\n{% for image in images %}\n    ...\n{% endfor %}\n. You really should use different templates for different content categories, e.g. using the same template for blog posts, the blog overview and the landing page makes the template nearly impossible to understand and maintain. Use includes for common parts of a website (e.g. header and footer). See the _layouts and _includes folders of Pico's website :wink:\n. No. But I'm planning to do so :smile:\n. It should be sufficient to link to more in-depth pages for Apache, nginx, PHP's built-in webserver and maybe others here...\n. Actually I didn't want to say that you should change NotePaper, I meant it completely independent of NotePaper. :wink: For an existing theme this approach is completely fine.\nHowever, we shouldn't recommend this approach for new themes.\n. The whitespace after the : (content of  <span class=\"lite1\">) isn't intended, is it? Furthermore, the border-bottom spans over a whitespace after the element for some reason, I don't know why this happens, but it looks a bit odd.\n. The carousel seems to be a bit too fast. Is this customizable?\n. > Pico is a stupidly simple, blazing fast, flat file CMS.\nThat has been said in the headline already. Kind of, at least.\n\nFor those of us who aren't an expert webmaster\n\nEven as a \"expert webmaster\" one could be unaware of what \"flat file CMS\" means. Just \"But what does that even mean?\" is better. However, the headline states the same question already :smile:\n. > Databases can also often be a bottleneck on your site\u2019s performance, especially on a small website, where a database-driven CMS is simply overkill.\nHmm... Small websites usually don't encounter any performance bottlenecks anyway - because they're small. However, sure, I know what you're trying to say. You should probably simply remove the \"especially on small websites [...] overkill\" part of the sentence.\n. > The workflow gallery is another topic, but I feel like that there are important steps missing anyway. The first screenshot should show the root directory of a Pico installation to tell the user some kind of \"Simply upload Pico's files to install Pico, that's it!\". The second screenshot shows the configuration, the third and fourth ones, how contents are created (i.e. a screenshot of a content/ folder and a Markdown file). Probably it's also a good idea to add a screenshot of themes/default/index.twig and plugins/DummyPlugin.php to represent theme and plugin creation.\n\nBasically the first two screenshots introduce the user into installing Pico, the third and fourth into creating contents (the \"Web Pages Without HTML\" section) and the fifth and sixth into customization (the \"Flexibility and Customization\" section).\n. We should directly link to https://daringfireball.net/projects/markdown/basics and https://daringfireball.net/projects/markdown/syntax - the \"Main\" page actually isn't relevant for us.\n. The example should include some more basic features of Markdown, at least italic and bold text, links and images (+ lists and a heading of course). How about using actual content (i.e. not just some example content) for that?\n. Please use ISO-8601 dates instead (i.e. YYYY-MM-DD). That's btw also recommended by the YAML standard :wink:\n. A list, associative array and multiline text in the example would be great :+1:\n. A short sentence that \"stupidly simple\" also applies to Pico's code base, not just its ease to use, would be great. :smiley:\n\nSee https://github.com/picocms/Pico/issues/355#issuecomment-222965389, https://github.com/picocms/Pico/issues/355#issuecomment-222967970\n. Note: Don't forget to update these URLs in #358 \n. Why is \"Themes\" quoted? Are they no \"real\" themes?\n. Instead of this theme (we already have a sidebar theme with SimpleTwo in the gallery), a screenshot of one of those \"card\" themes (e.g. Identity) would be great. Also an additional screenshot of a \"blog\" theme (e.g. \"Clean Blog\") might be a good idea.\n. A short paragraph about how plugins work with Pico would be great (i.e. event-based hooks, manipulating Pico's processing, PicoPluginInterface resp. AbstractPicoPlugin, mention DummyPlugin...) - plus how damn simple this process is, you don't have to study to write a plugin (like this is the case for other CMS).\n. It is never mentioned that Pico is Free Software under the MIT License.\n. \"Blazing fast\" should be mentioned here (besides \"lightweight footprint\")\n. Wasn't it your girlfriend who said that WordPress's configuration overwhelmed her? This (not your girlfriend in particular, but that \"too complicated, don't need it\" :smile:) should be covered somewhere.\n. I don't think a normal user is interested in this.\n. I just remembered why 3 was missing originally. development.md was 3, but the page is hidden at the moment anyway.\n. Sure, we don't use this at the moment, but what's the reason for removing it?\n. Maybe in the revised docs :smiley:\n. Ok, sure, I'll open a PR in the next couple of days\n. Yes, the difference is the use of slashes. YYYY-MM-DD is a ISO-8601 date, using / actually is pretty uncommon (except for the U.S.).\nYAML (and Pico) explicitly understands ISO-8601 dates and parses them accordingly. All other date formats are rather a gambling game whether they are parsed correctly or not. See PHP's strtotime() function. The docs say:\n\nTo avoid potential ambiguity, it's best to use ISO 8601 (YYYY-MM-DD) dates\n. I feel like repeating the nearly exact same sentence once again is a bit odd. However, it isn't that important. If you find a better solution I appreciate it, if not, it's also okay.\n. How about using the description for a multiline text example and social links of Pico for an associative array? It shouldn't be a big deal to add them to Pico's sample contents, too.\n. Sure, why not? :laughing: \n\nWe can even combine lists and associative arrays for this (what is also a very common use case for theme developing):\nyaml\nsocial:\n    - title: Visit us on GitHub\n      url: https://github.com/picocms/Pico\n      icon: github\n    - title: Check us out on Twitter\n      url: https://twitter.com/gitpicocms\n      icon: twitter\n    - title: Join us on Freenode IRC Webchat\n      url: https://webchat.freenode.net/?channels=%23picocms\n      icon: chat\n. I know that this (probably, I'm not sure :smile:) is grammatically correct... However, \"Pico's\" doesn't \"feel\" like \"Pico is\" for me in the first place... It's a bit odd to read :unamused: \n. This should be [catalog](%base_url%?catalog) :wink:\n. I don't assume something, [catalog](%base_url%?catalog) is the way to support both enabled and disabled URL rewriting :stuck_out_tongue_winking_eye: \n. The ? directly after the % is necessary (actually not technically, but for the user) to distinguish page URLs from absolute URLs (e.g. assets). Adding the / makes no difference anyway, http://example.com/pico?sub and http://example.com/pico/?sub are the exact same URLs. Pico automatically adds the / just to make the URL look nicer when it detects a page URL.\n\nI feel like I should know this... :unamused:\n\nSee here :stuck_out_tongue_winking_eye: \n. :+1:\n. How about the following?\n``` liquid\n{% if include.defaultThumbnail %}\n    {% assign defaultThumbnail = include.defaultThumbnail %}\n{% elseif page.portfolio.defaultThumbnail %}\n    {% assign defaultThumbnail = page.portfolio.defaultThumbnail %}\n{% else %}\n    {% assign defaultThumbnail = \"/path/to/a/completely/transparent/or/grey/or/whatever/color/image/just/to/reserve/the/correct/dimensions.png\" %}\n{% endif %}\n ... \n\n``\n. You don't need atransitionon both.overlayand.overlay:hover, you can remove this one.\n. See above\n. You can remove this wholeIMAGE HOVERsection and replace it with CSS3 transitions. The portfolio scripts don't depend on JS transitions, you can use the same code you're currently using for.defaultThumbnail.\n. I think this should be in/style/images/`, the portfolio isn't necessarily limited to docs.\n. See this comment - you can safely remove the buggy JavaScript-based hovering and use CSS3 transitions instead.\n. :laughing:, no, I didn't like the JS-based transition. I just thought that the other JS code relies on a JS-based solution - what isn't the case. So, yeah, replace them with CSS3 transitions :smiley:\nRegarding the fade-in and fade-out timings: Your decision, I thought it wasn't intended and just a small mistake.\nbtw: Can you please merge the additional portfolio CSS rules into the \"regular\" stylesheets afterwards?\n. I was wondering... This \"Fancybox\" block is the styling of the \"standalone\" gallery, is it? Shouldn't this be nearly identical to the .touchcarousel styling? You could add CSS selectors to the already existing rules to clean this up and integrate it into the \"regular\" stylesheet. Makes it much more maintainable. :wink: :smiley:\n. > If you want to engineer something in Javascript to make the animation \"complete\" itself like we discussed, you can.\nI think this was a misunderstanding. You said that\n\nThere may be a way to require CSS transitions to complete before continuing\n\nHence I thought that JS needs to do something after the transition has completed (e.g. \"add a element after the transition completed\" or something like that). I don't like this transition \"lagg\" at all! We don't need JS here.\n. {{ image }} is missing {{ site.github.url }}\n. Missing {{ site.github.url }}\n. Is id=\"myCarousel\" necessary? Very likely not, it isn't unique anyway.\n. Works without this ID for me :wink:\n. Hmm... You're right, don't know why it didn't notice that while testing. In this case please use a unique ID, e.g. entry-{{ forloop.index0 }}-carousel.\n. Yes, please. It is bad practice to re-use the same ID for completely different contents, even when the ID is technically unique and the different contents are never part of the page at the same time. Shouldn't be a big deal anyway :wink: :smiley:\n. I don't think this [][]() URL is intentional :smile:\n. Oh, :laughing:, you're right, my fault :smile:\n. Don't forget to update these links in #358 :wink:\n. This breaks <= IE 10, initial isn't supported.\n. initial isn't supported. Use height: auto; instead.\n. > will explain the layout and structure of those files\n. The last two sentences IMO sound a bit \"harsh\". How about something like \"We'll look at your plugin/theme and might give feedback on how you can make your work even better\" (or words to that effect). I don't think that it is necessary to explicitly tell people that we reserve the right to reject any submission.\n. That's not the case anymore. With page.portfolio.defaultImage set, that default image is shown, otherwise simply nothing. That's also true for the \"jumbovision\" layout (i.e. the themes page), but a screenshot is quite obligatory for a theme.\n. That's not the case anymore likewise.\n. Not sure why, but \"section\" sounds a bit odd at this point :smile:\n. I don't think that <h3> (or even deeper) headers are necessary at this point.\n. > This category is kind of redundant isn't it.  It may not survive until the final version...\nYep :smile:\n. > Maybe this would be better refered to as portfolio, as most websites you'd make yourself could be considered \"personal\"\nSounds reasonable.\n. How about \"utility\" plugins?\n. > that adds extends twig\n. If I did not know the template code, I would not know what this means... How about renaming the key to description and documenting it with something like \"a one-liner describing your theme/plugin, shown next to its title\"?\n. You should refer to the above section here.\n. Hmm... It is not possible to declare multiple \"blank\" lines this way, isn't it? How about \"If you use a _ as first character of the identifier, you can create a line without a visible identifier\" (and obviously also implementing it this way :smile:)\n. > keep in mind that the description area is very narrow (it's roughly 40 characters wide)\nThat's only true for themes (jumbovision layout). The card layout (i.e. plugins) even require a longer description, otherwise the detail view looks very odd.\n. Please add a blank line after the YAML frontmatter\n. Definitely. It would be great if we could move this to a (very short!) distinct page that we can re-use for those \"Found a typo?\" boxes on our website:\n\nIt can imagine that you don't have to actually write this on your own, it should be possible to find help documents on the web (maybe GitHub Help or GitHub Guides?).\n. Hmmm... I just had an idea about this section. Instead of having a \"boring\" plain text describing how to contribute plugins and themes respectively, what do you think about adding a special item/tile with a big +? We could even include the contents of the in-depth/submission_guidelines.md directly into the detail view of this item, so that it looks quite similar to the plugin's card layout (just without the metadata). What do you think?\n. Maybe, let's try :smiley:\n. Yep, I've removed that. :+1:\n. Maybe, I don't remember, but as you've said, I actually didn't read it before. However, I think that such a help page is a absolutely great idea - i.e. to help people so that they can help us :laughing: \n. > I do think it would be a little hard to read though. Especially with white text on black. (And changing it to somehow have a white background inside the content area sounds odd).\nYeah, that's probably true.\n\nI'm thinking maybe make it a regular item, with a special fullsize image and description pointing to the regular Submission Guidelines page.\nFor the fullsize image, maybe something like a collage of themes and code or something split diagonally between a theme and its code [T/C].\n\nSounds good! :+1: Can you create some sort of a mock-up or draft? So that we can see how it \"feels\", not that you're putting much work into it and it doesn't feel right in the end.\n\nFinally, I don't like the idea of removing the existing \"Contributing\" section from the page. Not sure if you meant that this \"boring\" text should be removed or not, but my vote is no.\n\nNo, that's not what I was trying to say, I commented just on some random line :laughing:\n. Using definition lists is a great idea! However, with the current formatting they don't change much. My intentions aren't really related to the semantics, but the formatting. 5 out of 7 sections consist of just a single line of text, so that the heading takes more space than the whole paragraph. This IMHO looks a bit odd. However, with definition lists we've the necessary freedom to change the formatting. What do you think about something like the following?\n\n``` css\ndt {\n    width: 140px;\n    margin: 0 20px 10px 0;\n    float: left;\n    font-size: 16px;\n    font-weight: bold;\n}\ndd {\n    margin: 0 0 20px 160px;\n}\n@media only screen and (max-width: 479px) {\n    dt {\n        width: auto;\n        float: none;\n    }\n    dd { margin-left: 0; }\n}\n```\n. Yeah, good idea! :+1: :smiley:\n. Hmm... Yeah, 200/220px really is a bit too much space. We probably need something else without floating here. However, we should rather discuss this in #359. You can push your stashed changes to #359 if you want to (so that we definitely don't forget to think about this later).\n. Looks good! :+1: :smiley:\nI think it's fine to show it under \"All\" only. Looking forward to the final contents. However, the tile should always use the card layout (i.e. add layout: card to _themes/zzz_contribute.md). The image itself is work in progress, is it? The only thing I'm not so sure about is whether we should add it to beginning or the end of the list. What do you think?\n. > We should probably change layout to something else.\nYeah, definitely.\n\nCreated a new image for the Contribute tile. Not necessarily 100% final, but any input is welcome.\n\nLooks great! :heart: :smiley:\n\non the Plugins page it's a little out of place though (since there's an absolute lack of screenshots/color).\n\nYeah, maybe a little bit. How about using the default thumbnail's background for plugins?\n. ... or view, or template, or something like that, that's not so important :smile: I think renaming just the YAML variable is enough, simply leave HTML/CSS/JS at layout.\n. Using a different layout leads in 99% of the cases to rejecting the submission (I even can't think of a single reason why a plugin/theme should use a non-default layout, this parameter actually is for things like zz_contribute.md only), so I don't think it's necessary to mention view at all.\n. However, mentioning how to change the button's text definitely makes sense :smiley:\n. Sure, we should keep a closer eye on this and will very likely reject submissions with non-default button texts as long as this inconsistency isn't justifiable (the guidelines should probably mention this).\nHowever, I can spontaneously think of various situations in which a custom button text is desirable. For example, one could submit a \"Twig plugin\" which actually doesn't consist of a downloadable plugin file, but a Twig macro that can be inserted into a existing Twig template. Or a featured How To/tutorial. I'm not sure whether we should promote paid themes/plugins (this is nothing we should bother our heads about now), but if we do, the button text should be \"Purchase\" or something like that.\nI'm not sure what our default button text should be. \"Download\" actually isn't completely true as most plugins and themes usually require some additional configuration, so \"More Info\" might be a better one. What do you think?\n. \"View on GitHub\" is too long. \"Learn More\" sounds good. :+1:\n. Perfect :+1: :smiley:\n. Should be moved to/integrated into media-queries.css\n. Please remove the last two sentences, it doesn't sound very self-confident :wink:\n. This should be a link to a help page or something, see https://github.com/picocms/Pico/pull/358#discussion_r80362323\n. The list style is broken for some reason :unamused: \n. This actually should be obligatory to get listed on this page :laughing: (Nevertheless it isn't quite true at the moment, however, we shouldn't mention this explicitly)\n. ",
    "creating": "Sorry, solved it via the meta module.\n. ",
    "andrewjomelia": "I encountered a similar issue that was resolved by revising my server timezone in php.ini. All other adjustments to the time can be made from that baseline. \n. ",
    "jgnmoose": "This stumped me for a bit until I read this thread. On OSX Mavericks you have to copy the php.ini.default and set the time zone.\nsudo cp /etc/php.ini.default /etc/php.ini\nUncomment and set date.timezone\ndate.timezone='America/Denver'\nRestart apache\nsudo apachectl restart\nEverything was good to go after that.\n. ",
    "dav-m85": "@theshka well I find a bit harsh to close all issues without explaining quickly why to the community. :-1: \n. @theshka Just pointing this out. Anyway, thanks for the cleanup and making the repository live again :tada: \n. Can you make the title of your PR mor explicit ? (Update pico.php does not ring a bell). Thanks !\n. +1 This is basically a big reason I would use philecms over picocms. Having a vendor versioned makes the composer completely unusable (cannot leverage common lib, regression testing with higher versions, include in another projet).\n@Frodox your comment is interesting. If a user is cunny enough to git clone, then he's normaly able to install composer and run install. For the other users, we shall consider distributing a zip with all deps or a compiled phar as it is done with composer.phar.\n@caseycs Nice addition. I would consider adding some documentation to instruct users how to install dependencies, at least by directing them to the documentation.\n. Duplicate of #169 \n. +1 Nice job doing the diff and providing data on the library change.\n. In my opinion, since we got now composer in pico, we shall leverage its dependency capability to achieve plugin requiring one another.\n(long time I haven't been around, pretty amazed by the work done here @theshka. Good job !)\n. Why is the vendor directory included in the project ? composer.json is basically sufficient to deal with dependencies, and composer.lock to enforce some versions.\n. Nice job adding a forum man !\n. That's no big deal, Pico is just not url_decode-ing the url before doing the file lookup. You should issue a PR quite easily on this one.\n. It works pretty well for me. MD does not interpret what you put in the parenthesis and copy it as is in the href attribute of the hyperlink. Indeed specs/basix.pdfsi relative to your current URL.\n. Regarding the philosophy of the project, I would stick with a flat-file storage search engine, like the one provided by http://framework.zend.com/manual/1.12/fr/zend.search.lucene.html\n. @eschwartz You can google this, you'll find a lot of sites with flat file cms comparison.\n@gilbitron Nice to see you're still in the trade :)\nIMHO, one of the strenght of Pico is that it is being installable without any shell access. It would be nice to keep it in future works. A custom composer autoloader could do the trick.\n. @MorganConrad I like your suggestion 1, and it seems that there are some work already ongoing for suggestion 2.\n. The \"compiled\" version get my vote. We could pack with it a composer installation along with autorun install scripts (like first request no autoload.php => create it, and after autodiscover added plugins), and keep the git installation for those who like to play with the shell (like myself).\n. Who owns picocms.org ? @theshka ? Consider migrating this to github.io ?\n. As said by @PhrozenByte,\n\nHow to fix the \"composer problem\" discussed in #221 and #223? There's a very simple solution: When creating a release on GitHub (after you've pushed the tag) you can upload \"binaries\". Simply execute composer locally, create a ZIP archive and upload the result as \"binary\".\n\nIt would be nice to add a travis on this one.\n. I suggest providing an already \"composer installed\" package build for those use cases.\n@theshka :+1: Like this change, vendor was a pain.\n@johnnywon Sme reading on why it is a bad idea of having vendor tied to your local subversion tree: https://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md\n. Nice work @PhrozenByte. That's a LOT of work you put it here, I've been myself tempted of forking but always get back to the source. If you're sure the changes does not introduces any BC breaks, I would suggest sticking to semver and just increment the minor version.\nAlso I find really difficult to review all changes in one single PR, everything is mixed. It would be IMHO simpler to split the PR in multiple sub components and submit them to a temporary 0.9-dev branch. @theshka ?\nI would consider switching to 1.0 branch once we got some testing coverage and definitely remove the stuff you introduce as deprecated in this PR.\n. :+1: travis\n. This is unrelated to Pico @fourtonfish.\n. Your problem is not related to Pico but to your webserver configuration (apache or nginx or something else). Google for \"virtualhosts \". Sorry for not being more specific.\n. You're in @theshka. Plugging auto-update could be cool. @picocms does not seem to have a packagist account. Closing the issue until further notice.\n. @theshka @PhrozenByte yes, travis is the tool for the task. It has a github release upload feature that allows to run a build for a specific tag and push the corresponding release tarball into github.\nIt has also a more advanced artifact build feature, but it requires to have a s3 instance somewhere to host the builds.\n. From my own experience, this is indeed the best process with a small team like here. Let's create branch pico 1.1 as soon as 1.0 is merged.\nRegarding the semver, I'm not sure about going alpha/beta/rc/release. This heavier semver cycle is meant for getting feedback from the community. IMHO, let's release 1.0.0 straight !\n. @theshka @PhrozenByte You may have a look at my fork, gives the following results:\n- https://travis-ci.org/dav-m85/Pico/builds/87812453\n- https://github.com/dav-m85/Pico/releases/tag/v0.9.2beta (notice the pico.tar.gz)\nI haven't dealt with gh-pages yet, for this part I'm less confident.\n. Hahah this is serious cool stuff here. Let's get it merged !\n. @theshka @PhrozenByte A goot point here, we maybe should dispatch a message when the permissions are wrong but the directory exists.\nWant a PR on this ?\n. My bad. You're right.\n. Sorry for the lag, busy BF week :)\nI join @PhrozenByte on the subject, this is terribly bad practice to allow loading composer from another path from within a library, with the clear exception of phar archives.\nReasons are numerous, but the three mains are:\n- security. It becomes really easy in some situations to load a malevolent script placed outside of the root.\n- usage. What if for some reason my project is renaming vendor for composer_plugin:\n``` json\n{\n    \"config\": {\n        \"vendor-dir\": \"composer_plugin\"\n    }\n}\n```\nWill you then add another exception to the if else if else if else if loading ? I even not mention global install where pico would be in a totally different directory.\n- performance. You add in extraneous file_exists and if instructions for all requests. Small overhead indeed, but still overhead.\ntl;dr; @dmelo As mentioned earlier, copy the index.php in your root, rename it test.php and use it as is to check your design. NEVER execute code directly from within vendor. Many things could happen, including loss of hair and appetite for destruction.\nDid i quote GnR ?\n. Nice @Lomanic. What do you mean by \n\nperhaps to add to it an anti-bruteforce system (fail2ban-like).\n?\n. Nevermind, issue with my composer cache.\n. and why not ($_SERVER['HTTPS'] != 'off' || $_SERVER['HTTPS'] != '') ?\n. Mh why not a stable constraint here ? Gonna break at the next composer update.\n. Been a while I haven't seen hungarian notation. I would suggest considering the sf2 usage, tht would be PicoPluginInterface\n. What is the purpose of moving those constants in a separat file ? Why not moving them to the Pico class constructor for example ?\n. Well that is roughly what I had in mind when spoting these constants. Looks tidy now :)\n. I wonder if we could move configuration directly in index.php, instead of maintaining a separate configuration file (or at least code the configuration retrieval here).\n\nLet me elaborate. I'm using Pico within a Silex installation, redirecting all calls to a specific pattern to the Pico->run function. Thing is Silex has already its configuration system, and having Pico duplicates a bit the logic (I need to maintain/deploy one conf file specifically for it).\nSomething cool would be:\nphp\n// index.php\n$confArray = array(\n    'someconf'=>array()\n);\n$engine = new Pico($confArray);\n$engine->run();\n... but of course it would oblige us to remove index.php from the repo, provide template for it and make things more complicated in the end.\nOne way to mitigate this would be to change the Pico constructor signature, kinda \"if $config is array then load it instead of fetching a configuration file\".\nOf course, this is a new feature and it would be totally ok to postpone it until 1.0 is merged. I can provide PR if the feature sounds usefull to you guys. @theshka @PhrozenByte ?\n. If I get you well, you changed the build target directory to _build in order to avoir collision with the directory containing the phpdoc shell scripts.\nCould we have rather moved the scripts to a \"bin\" directory and leave the build target dir untouched ? Hard to tell what is the difference between build and _build if you're not familiar with the project.\nJust my two cents.\n. ",
    "theshka": "Many of these threads are 2 years old with no new activity. In the interest of cleaning up I quickly reviewed the threads and closed any that I thought were resolved or abandoned. I will gladly reopen any issue or pull request anyone raises issue with. \nRegarding this thread specifically, the config.php.template file now contains date_default_timezone_set('UTC'); and I figured this issue was resolved. \nThanks, I hope this clears up any confusion @dav-m85\n. I'm really glad to have the opportunity to help stimulate a new dialog regarding Pico. Your input is highly valuable and I've noticed your participation in many threads; equally glad to see you're still around @dav-m85 :) \n. b586c9fd5f6978034060ebceaaef50b18aa4eba8\n. Broken link, cannot add to Wiki. \n. Plugin is featured in Wiki. \n. +1\n. The Pico Placing plugin takes care of this functionality more eloquently. \n https://github.com/ollierik/Pico-Placing\n. +1 because, grammar. ;) \n. Added to wiki. \n. #67, #130, #131, & 483334170f268f76a028bd6615f633760c855bb4\n. Thanks, glad to see you back in the threads @dav-m85 :+1: \n. Duplicate #168 \n. Added to Wiki: https://github.com/picocms/Pico/wiki\n. I haven't investigated why {{ page.date_formatted }} returns an improperly formatted date, but I just used the {{ page.date }}variable instead as a workaround for now... \n``` html\n{% if is_front_page %}  Front page lists all blog posts \n\n    {% for page in pages %}\n        {% if page.date %}  Note we check for Date field (posts) here \n\n{{ page.title }}\n{{ page.date }}\n{{ page.excerpt }}\n\n        {% endif %}\n    {% endfor %}\n    \n{% else %}  Single page shows individual blog post \n<div class=\"post\">\n    {% if meta.title %}<h2>{{ meta.title }}</h2>{% endif %}\n    <p class=\"meta\">{{ meta.date }}</p>\n    {{ content }}\n</div>\n\n{% endif %}\n``\n. It's a Twig boolean, set inPico.php, around Line: 102'is_front_page' => $url ? false : true`\nJust before that, it tests if you are on the main index page, or not, around this bit:           \nphp\n/// Get the file path\nif($url) $file = $settings['content_dir'] . $url;\nelse $file = $settings['content_dir'] .'index';\n. Fixed: dfd2533805c008b8ddac732e5ae7f3f55cf91f20\n. @aidangarza, I think that looks great as well. Different than what I was expecting, but I can definitely see a case where that kind of navigation would be beneficial. \nI updated the navigation menu and submitted a PR. It retains the current style/feel, but is responsive. Here's a demo: http://heshka.com/demo/Pico until the request is merged. :+1: \n. Doesn't composer create the required vendor directory when you install? \n. Issue #121, #211 removed the vendor folder. \nIssue #213 updated readme: https://github.com/picocms/Pico/blob/master/README.md\n. I agree, unfortunately issue #199. There does seem to be people still interested in Pico, but it's not getting updated frequently by the collaborators. \n. Does @picocms want help from the community, @gilbitron ? \nI'd be willing to help cleanup/close some of the Issues & PRs. Let me know. \n. Thanks, @picocms! I have closed ~80+ Issues, merged as many PR's as I could understand, updated the documentation, wiki, and change log. Now at version 0.9.. \n. Demo: http://heshka.com/demo/Pico\n. Is it wise to include php in your markdown pages? Why not in a theme/template or plugin? \n. In the case of dynamic content on pages, that should be achieved through a plugin. If you follow MVC design Pico would look something like this; \nModel - Database - Markdown Files\nView - Layout - Theme/Twig\nController - Logic - Pico/Plugin\nI don't think including PHP in your View is good practice. \n. No worries, thank you for your input. I hope you continue to find ways to use and contribute to Pico :+1: \n. It was suggested in the issues that I linked you to earlier that; Pico be split in to two branches. One for development (no vendor) and one for production (complied). As this project was dead in the water before I arrived, I am willing to entertain this. Would you like to make the desired changes and submit a pull request for feedback? \n. Perhaps a composer auto-installer script could be crafted for those without SSH access. \n@johnnywon you may also want to consider using BaunCMS https://github.com/BaunCMS/Baun\n. This is why feedback is so important in developing! \nAlthough I agree with @mistergraphx , Pico should be installed locally then pushed to your server, hence composer wouldn't be a problem for those without SSH. However, I do see how this can be problematic for those less technically inclined, and I would entertain putting the compiled vendor folder back in the repo to have that 'upload-and-go' feel. \nWith all that said, it is messy to keep the vendor folder, so I think it would be best to split this project in to two branches, one without composer for developing, and one with for distribution. Agree/Disagree?  \nIn response to @rosewoodmarketing, I do not think including the admin panel, etc. is keeping with the \"stupidly simple\" manta everyone is so keen on. Pico should be a solid core and extensible though the library of plugins that have been developed for the class. Like you said, not everyone is using Pico in the same way. If you need a WYSIWYG editor, there is already a couple plugins for that. \nI hope this has given anyone interested in developing for Pico a place to start. Pull-requests should not pile up any longer, so feel free to submit some for consideration. \n. I found this article sums up the FFCMS landscape pretty well: https://www.ostraining.com/blog/general/2014-static-websites/ , one of the major drawbacks is that these systems is that These are great platforms, but only for a niche audience of developers and designers. Perhaps this isn't the project for you to try and have your clients navigate? \nI don't think Pico will ever be the next Wordpress, as @mistergraphx said \"Pico is just one class, and it's (or will) become to be a problem/limit.\" \n. @all ...  closing this issue, any further discussion please see #252 \n. Please see issues #121, #211, #216. You need to run the composer install. Instructions are available in the README. \n. Because it is good practice to keep the vendor directory out of git. \nThis update was committed before I started collaborating on the project. \n. I suspect that it might be the namespace on line 1 of pico.php.\nTry replacing use \\Michelf\\MarkdownExtra; with use \\ParsedownExtra;\nIf that doesn't work, try setting the base_url to localhost in the config.php file. \n. Fixed in commit: 529e268d5b799b558c6f15b4d587dcfbcea8acfb\n. Okay, so the problem is that it is not possible to call a method on an object just created with new before PHP 5.4. I haven't actually tested this yet, but something like this should work...\nphp\n/**\n * Parses the content using Parsedown-extra\n *\n * @param string $content the raw txt content\n * @return string $content the Markdown formatted content\n */\nprotected function parse_content($content)\n{\n    $Parsedown = new ParseDownExtra();\n    $content = preg_replace('#/\\*.+?\\*/#s', '', $content, 1); // Remove first comment (with meta)\n    $content = str_replace('%base_url%', $this->base_url(), $content);\n    $content = $Parsedown->text($content);\n    return $content;\n}\n. Actually fixed in e942d40187e3d4f94cd3efccfa13c04c05824348 \n. Hi there, please have a look at these issues: #108, #168/#136\nSince the markdown engine was recently switched from MarkdownExtra(0.8) to Parsedown-Extra(0.9), I don't think it's likely at this time. Also, as mentioned in #108, one downside of Pico is that it is not possible to replace the markdown parser, template engine or cache engine easily with a plugin.\nYou are, however, more than welcome to swap out the markdown engine in your own fork of Pico. \n. I'm unable to reproduce this. \n- I did a fresh clone of the repo\n- Installed and ran Composer\n- Un-commented the $config['content_dir'] = 'content-sample'; line and changed it to $config['content_dir'] = 'content';\n- Saved the changes & renamed the config.php.template file to config.php\n- Renamed the content-sample dir to content\nI have a feeling you didn't rename the config.php.template to config.php for the changes to take effect. If this doesn't resolve your issue; please provide more details, and I will assist you further. \nEdit: I've changed the wording to more explicitly state how to override the default settings in the config.php.template file. Commit: 5744a5650ab73129611f357d7b995f085a79e433\n. Sorry, @Lesik ,\nAgain, I'm unable to reproduce that issue. Have a look at my test. \nA blank page usually means you have error reporting suppressed in your php.ini or .htaccess Check the servers' error log and respond with the message it is giving.\n. This is the one my test case is using, just the default .htaccess\n```\n\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d \nRewriteRule . index.php [L]\n\nPrevent file browsing\nOptions -Indexes\n```\nDepending on your setup, you could try using RewriteBase\n. I'm not familiar with the host, and It's hard for me to say.  I know that 500 errors are typical of a .htaccess misconfiguration. :stuck_out_tongue_winking_eye: \n- Double-check the file permissions. \n- Is your Pico installation in a subfolder? Have you tried RewriteBase? \n- I'd also echo a phpinfo(); and make sure the server configuration is proper. \nIf nothing else, try submitting a ticket to your host. It could be a misconfiguration of their Apache install, who knows? Having access to the log file could give you crucial information.\n. It's no problem. I'm no master myself, and this helps me just as much as it helps you. \n- Generally speaking, files: 644 & folders: 755. \n- It shouldn't, since the subdomain would point to the document root, but It really depends on your host and their configuration. Try throwing a RewriteBase / <- notice the trailing / right after RewriteEngine On and see if that fixes things, if not, revert. \n- Basic things: Is the server running PHP 5.3+? Is mod_rewrite listed under Loaded Modules? This also provides you with a lot of information on how the server is configured, and what mods/extensions are available to use. Shared hosting can be tricky.\nHave you tried this in a local environment?\n. You may get more information from these issues as well: #100, #22\n. Happy Pico'ing! :+1: \n. This has been discussed several times. The issue is always RewriteBase, and it's specific to your installation. #3, #22, #34, #55, #100, #109, #193, #226 \n. Fixed in: 48e5c9e5003cd2b24bd3a972812e6ca4980aace9\n. Hi Matt, glad you're exploring Pico! \nThat is the correct behaviour, relative paths should not be used. All requests which are not a file or directory are routed through the index/Pico, parsed by markdown, and then output through {{content}} in your Twig template. \nYou could create a static folder to host your public images, and use a absolute path in your .md files (e.g. domain.com/content-sample/images/image.jpg) -- or for images in your layout, you could create a custom theme/template and use a path relative to it by appending to the twig variable  {{ theme_url }}/your/image.jpg\nHope that helps! \n. Could you be more specific? Do you need to crop it dynamically? Are you just trying to resize it? Have you tried accomplishing it with CSS? \n. I'm not aware of any Pico plugin that exists for this purpose. You could, however, consider using another class to do this. I've used this one in the past: https://github.com/claviska/SimpleImage\n. The project has changed quite a bit since #116 / I started collaborating, would you be interested in implementing any of these suggestions and submitting a new PR?\n. Un-comment RewriteBase in the .htaccess file. \n227, #226 , #100, #22\nhttps://github.com/picocms/Pico/issues?utf8=\u2713&q=htaccess\n. IF (this instance of $config is an array) { merge the array with the defaults } ELSE { this instance of $config is equal to the default array. } is proper. My custom configuration is taken in to account. Did you rename the config.php.template file to config.php and uncomment the lines you are trying to affect? \n. You need to pass variables to and use Twig in the views, and plugins to include PHP logic in your pages. Kind of discussed in: #219 ... I can link you to my theme where I use the image plugin to generate an array of images that I access as Twig variables in my templates, if that will help any. \n. Since PHP 5.1.0 (when the date/time functions were rewritten), every call to a date/time function will generate a E_NOTICE if the timezone isn't valid, and/or a E_WARNING message if using the system settings or the TZ environment variable.\nYou will need to setup your config.php file and uncomment the date_default_timezone_set line \n. Great work! I would definitely like to push this upstream-- it's so fresh, so clean :+1: \nJust a couple small problems to fix straight away: \nIn global.php there's some funky paths still set to your environment; replacing the first two lines, and THEMES_DIR path does the trick:\n``` php\n//define('HTTPDOCS', realpath(rtrim(DIR, '/')) . '/');\n//define('ROOT_DIR', realpath(HTTPDOCS . '../httpdocs-includes') . '/');\ndefine('ROOT_DIR', realpath(rtrim(DIR, '/')) . '/');\n//define('THEMES_DIR', HTTPDOCS . 'themes/');\ndefine('THEMES_DIR', ROOT_DIR . 'themes/');\n```\nand line 377 of pico.php throws a NOTICE when $_SERVER['QUERY_STRING'] is null. \nphp\n//$pathComponent = $_SERVER['QUERY_STRING'];\n$pathComponent = (isset($_SERVER['QUERY_STRING']) ? $_SERVER['QUERY_STRING'] : '');\nI'd like to get some more input, anyone else still following Pico?? \n. > @theshka, I then recommend to merge this PR in the next week, this unfortunately seems to be the only way to get the necessary attention to receive more feedback.\n@PhrozenByte yes, I think so as well, this is looking excellent! ... The change log and docs will need updating still, yeah? \n. @PhrozenByte could you chime in on this thread? https://github.com/bricebou/pico_ganalytics/pull/1\nI'm not sure what I'm dong wrong with respect to the enabled/disabled state of plugins. @bricebou \n. I can go through and review spelling/grammar @PhrozenByte... Would you like them as line comments or pull-request on your fork? \n. Can this be merged with #252? @PhrozenByte \n. Okay, thanks for the clarification. \n. Have you tried issuing just php -S localhost:8080 without the ./ or -t operator? Then accessing it from the same http://localhost:8080/\n\nURI requests are served from the current working directory where PHP was started, unless the -t option is used to specify an explicit document root. If a URI request does not specify a file, then either index.php or index.html in the given directory are returned. If neither file exists, the lookup for index.php and index.html will be continued in the parent directory and so on until one is found or the document root has been reached. http://php.net/manual/en/features.commandline.webserver.php\n. Noted for #252, thanks. \n. How are you trying to access them within Pico? I cannot replicate this issue. \n\n1) Placed a test folder in the root Pico directory, \n2) Placed several test .jpg images in the directory, \n3) Created a testing.md markdown file in the contents-sample folder,\n4) Placed an image tag pointing to the above test folder/file ![AltName](http://localhost/test/test.jpg)\n5) Viewed the page at http://localhost/testing\n6) Works as expected. \nThe .htaccess file (https://github.com/picocms/Pico/blob/master/.htaccess/) has exceptions for files and directories on Lines 5&6, so Pico shouldn't be blocking it @marciotoledo \n. @PhrozenByte would you like me to merge this now? \n. I agree, @PhrozenByte does need collaborator status :) .... @gilbitron no longer owns this repository, so that is something @picocms will have to do, as for the Pico Editor plugin, hopefully he will see and respond to this. \n. @PhrozenByte https://github.com/picocms/Pico/issues/199#issuecomment-69314387 / https://github.com/picocms/Pico/issues/216#issuecomment-97112211\n. @PhrozenByte I was able to communicate with the owner and they have added you as a collaborator. They were not interested in converting the profile to an organization, however... Let me know if there's anything else I can do. \n. As @gilbitron no longer owns this repository and had a listing here: https://packagist.org/packages/gilbitron/pico, I would say that this new https://packagist.org/packages/picocms/pico listing can be used going forward. Does @picocms have a packagist account? My username is the same there as here @dav-m85 \n. @dav-m85 I've spoke with and added the @picocms owner to the packagist account https://packagist.org/users/picocms/, and have requested that they initialize the auto-update web hook. :+1: \n. While I do agree it is out of Pico's scope @PhrozenByte, the Wiki does offer instructions for NGIX, and others. Perhaps we can include this in the wiki, or just remove them all and have examples for none? \n. Perfect, then lets move to clean up the examples, and going forward reiterate that web server configuration is not within the scope of this project. :+1:\n. @ungeruehrt I believe it's Markdown that automatically wraps everything in the <p> tag, not Pico. \nUnfortunately, Markdown's image tag syntax does not support ids or classes. You could, however, use a regular HTML <img> tag in your .md and assign it a class=\"foo\" then subsequently target it in CSS. \ncss\n.foo {\n     //your style\n}\nOtherwise, you would have to target all images within paragraphs using something like: \ncss\np > img {\n      //your style \n}\n. What does our build and release pipeline look like? How should this be accomplished automatically?\n. I've added a section to the development documentation for this (https://github.com/PhrozenByte/Pico/pull/5)\nIf someone could point in the right direction, I could start to familiarize myself with the topic as a contingency.  Would something like travis-ci be the tool for the job? \n. I am not opposed to working in the master branch and continuing to use PR's for everything @PhrozenByte, nor am I opposed to sticking with semver and the resulting 1.0.0-beta.1/ 1.0.0. :+1:  I'll keep updating the plugin-dev page as we work out the details for the release process as well. \n. I like the idea of prefixing branches as you have defined @PhrozenByte , it will obviously help to keep things in order and I don't see any reason to not adopt that change as well. I will add it to the documentation. \n. There is a part of me that wants to merge this straight away too @dav-m85 , but I think we should stick with @PhrozenByte's plan to release this as Pico 1.0.0-beta.1, then scrap the extended a/b/rc/r release process for subsequent releases of Pico. \nThat said, I don't know how much more feedback we can reasonably expect. I think many people have moved on from Pico entirely, and the #252 thread has already seen the most participants in a conversation for some time. What are you thinking as a timeline @PhrozenByte? \nAdditionally, do we have an idea of what we still need to accomplish before moving ahead? I'd like to help anyway I can, sometimes it's just not clear where to jump in :laughing: \n. That's agreeable @PhrozenByte, I updated the due date on the Version 1.0.0-beta.1 milestone, and created another for the full 1.0.0 release. :+1: \n. Looks like things are starting to come together :+1: \nAs you've said before, this is a special version of Pico, being flexible with the newly introduced SemVer requirements when going from beta.1 to 1.0.0 is totally reasonable. \nI briefly went over the upgrade.md page to correct spelling/grammar, then thought: when upgrading content files from 0.x to 1.0.0-beta.1 does one need to change the .md file headers from /*...*/ to --- ... --- to reflect the changes made by introducing YAML? This should be mentioned somewhere in the upgrade page as well. \n. @PhrozenByte, I reviewed the changes. Looks good :+1: \n. Yeah, the branching concept makes good sense @PhrozenByte, I was on a little hiatus, but will start knocking off some of this ToDo list this week. :) \n. Added README.md to gh-pages branch in 66bcb181cc82d760573a00d2bf472e4c7fb900c9\n. > @PhrozenByte: Decide where to put links to it (inline user docs? website user docs? website dev docs?) and actually create the links\nI think the link to cookbook would be good in the  Getting Help ... for users part of the docs. It's likely they are the ones who will benefit most. I also added a blurb about it to the Wiki. \n. Considering there have been numerous large changes between 1.0.0-beta.1 and now, I wouldn't oppose another beta cycle. \nI know it would be a pain at this point, but I was thinking, how would you feel about moving all Pico user/source files in a src directory; isolating the build-related directory and files in the root of the project? Do you think this would unnecessarily complicate things, or provide better cohesion and organization when viewing the project files? \n. Alternatively, can we hide/prefix the files .phpcs.xml, .index.php.dist,_build?\n. Made the changes in #295, whenever you get a free minute, just make sure I didn't miss any :) \n. Sorry @PhrozenByte, just to clarify... should we clear up the 4 remaining PR's and 4 \"To-Do\" items in this thread before tagging v1.0.0-beta.2 and starting the second beta cycle? \n. #273 looks good, I like the improved error handling and the update to the inline docs is great :+1: \n... I also renamed the milestone and moved the discussed issues to the next version. \n. Nice! :+1: \nhttps://twitter.com/gitpicocms/status/671388691143766017\nAuto docs is awesome :heart_eyes: \nhttps://travis-ci.org/picocms/Pico/jobs/93989737\nhttp://picocms.org/phpDoc/v1.0.0-beta.2 \nAlso, #289 :pray: \npico-release-v1.0.0-beta.1.tar.gz = 8.4MB \npico-release-v1.0.0-beta.2.tar.gz = 342kb!!! \n. @PhrozenByte deserves ~~most~~ all of the praise :bow: You've definitely earned that time off in Dec/Jan :laughing: \nI'm behind the Twitter account thus far, more of a manual-bot at the moment @Lomanic lol \n. I've modified the due date on Version 1.0.0 Milestone, Merry Ho-Ho :santa: \n:+1: \n. This is great, @dav-m85! Thanks for the example file to get us started. I think the PR should be on @PhrozenByte /Pico1.0 branch. We will need to customize it further before committing to master.\nAt first glance, it appears that you can create another travis.yml in the  gh-pages branch, and include it to be built by whitelisting it in the main travis.yml?  (http://docs.travis-ci.com/user/customizing-the-build/#Building-Specific-Branches) \n. I've sent @picocms an email with the request and instructions @PhrozenByte, they've been pretty quick to respond in the past, so I'm sure this will be taken care of post-haste. \nI will make note of the new commit message format mentally, and somewhere in the docs as well. :+1: \nEdit: @picocms has now setup travis-ci on their end, let me know if there are any issues with it, and I will reach out again.\n. Closing this pull request. See #297 \nMoved the feature/bootstrap-theme branch from theshka/Pico to picocms/Pico\n. This behaviour is confirmed to happen in Pico 1.0.0-beta.1 as well. Perhaps this discovery can be included in the Creating Content section of the docs? \nThe theme looks great, btw @smcdougall :smile: \n. I like the proposed changes @PhrozenByte, it only adds functionality and thats great. :+1:  Perhaps including an example in the cookbook section of the docs and replacing the blogging instructions to use the new filter?\n. Make sure you set a completely-formed base_url in your config/config.php directory  (e.g http://localhost:8080 with no trailing slash) ... That solved the issue for me @smcdougall :+1: \n. To be completely honest, I feel like this is too many \"upgrade/how-to\" sections. I think we are all mostly together on this; however, please let me know if I'm missing the point of https://github.com/picocms/Pico/issues/268#issuecomment-156616276 + entirely @PhrozenByte @smcdougall ... Both the _docs/upgrade.md page (which is fine how it is) and the (still needed) _plugin-dev/upgrade.md page (currently the info is in /plugin-dev.md) sections should point to /upgrade.md.\n\nInside that single /upgrade.md page, sections should be divided in to:\n- How to upgrade \nUsually you don\u2019t have to consider anything special when upgrading a existing Pico 0.8 or 0.9 installation to Pico 1.0. You basically can follow the regular upgrade instructions as if we updated the MINOR version.\n  1. Create a backup of your Pico installation. You will need the files later!\n  2. Empty your installation directory and install Pico ordinarily.\n  3. Copy the config.php from your backup to config/config.php. You don\u2019t have to change anything in this file.\n  4. Copy the content folder from your backup to Pico\u2019s installation directory. As a optional step, you can (but aren\u2019t required to) make your content files compatible with Pico\u2019s new routing system. You\u2019ll find detailed instructions on how to do this in the \u201cRouting system\u201d section below.\n  5. If applicable, also copy the folder of your custom theme within the themes directory of your backup to the themes folder of your Pico installation. Again you can (but aren\u2019t required to) make your theme compatible with Pico\u2019s new routing system.\n  6. Provided that you\u2019re using plugins, also copy all of your plugins from the plugins directory. Don\u2019t copy the plugins/pico_plugin.php - this is not a real plugin, but Pico\u2019s old dummy plugin.\n- What's new\n  - ...for users (we already have this, notwithstanding our slight difference in definition of a user. It's basically an expanded version of https://github.com/picocms/Pico/pull/252#issue-103755569) \n    - Initialization\n    - Routing System\n    - Drop of {{ page.content }}\n    - Drop of {{ page.excerpt }}\n    - Ensure restricted access to content directory\n    - Plugin System\n      - Backward Compatibility\n    - Further Reading\n  - ...for developers \n    - why doesn't it just point to the changelog?\n    - link to the class documentation \n\nThen in _plugin-dev/ keep it simple and use the same language as with the above \"What's new ... for users\"\n- Basics\n  - Core\n  - Plugins\n  - Your First Plugin \n- Upgrade \n  - Migrating 0.X -> 1.0 (the most imperative notes for upgrading a plugin) \n  - Link to /upgrade.md (...for users, ...for developers)\n- Plugin Wiki\n\nAt the end of the day, we are on GitHub, I would suspect that any \"user\" who is going out to find a framework for generating websites from markdown files is a) pretty niche, and b) is already somewhat familiar with programming. \nOtherwise, why not just keep the instructions dead simple-- remove all mentions of #252 comment, class methods, and \"nitty-gritty\" changes... This would be for someone who doesn't know anything about programming whatsoever at all, and point all \"power-users/developers\" to the #252 comment, the changelog, and the PhpDocumentor class documentation? \n\np.s. @smcdougall why don't you just install the Jekyll gem and run the changes you make locally before pushing? That's probably the easiest method... also look in to git rebase for cleaning up commits, and git reset, git checkout, or git revert commands for restoring your working tree to another point. \none more thing, all of your anchor tags in the upgrade.md do not work, you need to define them like this: \n```\nThis is my link's DisplayText, and I will add the URL\n...later in the document, on it's own line, with nothing in front of it.\n```\n. I'm sure @PhrozenByte took care of that little caveat in https://github.com/picocms/Pico/commit/2a43b21bae12f535dde95016d52282d0e182b2e4 @smcdougall, I'll take a closer look at the rest here soon too :) \n. I think, grammatically, it should be in Title Case to match the headings @smcdougall...  The inconsistencies are not there on purpose :laughing: \nIt should also be noted (and has been fixed most places) that \"Pico\" is a proper noun. It should always be capitalized, and when talking about Pico in another context; it should be possessive and not plural (i.e. \"Pico's\", not \"Picos\")\n. Thanks @smcdougall, @PhrozenByte took care of it in 2aa571152de530ec038acdd6393780d7d6ea2d57 :+1:  \n@all: I also rebranded the picocms.org stylesheet to match Pico's default theme in 8deb744fed2120892678e8e333787e2ae7670200\n. Additionally, I have a pull request on the Pico Sitemap plugin that is updated for the new version of Pico: https://github.com/DaveKin/Pico_Sitemap/pull/7\n. I was looking through some other repositories that auto-generate their documentation and upload to the gh-pages branch, and although I know for fact that this commit doesn't work, I feel like I'm on the cusp of something here... Could you take a look at https://github.com/theshka/Pico/commit/f062640bb1e87c82108067d238b47e7289ea11df @PhrozenByte?\n. No need to apologize at all @PhrozenByte , thanks for cleaning up the idea. I'm just happy we can have all this documentation generation happen automatically for the next release :grin:\n. :boom::exclamation: I think that it looks great @PhrozenByte \nYou've made the script highly reusable, for every type of commit, branch and tags!, accounted for the potential race conditions, and tested that it works ... if you're confident with it -- merge at will. :smile: \n. I'm absolutely fine with the Code Sniffer checking for PSR compliance. :+1:  Out of curiosity, does the Travis build fail if it detects a violation, or does it correct it and move on? \n. Do you have a file called 404.md in your content/ directory @abr4xas? \n. I do not receive this error unless I delete my 404.md from the content-sample directory, so I'm not sure why if you have the file there that it would be throwing the exception. \nCan you double-check these things: \n- Do you have a base_url set in config/config.php, or is what you posted the only portion of your config you have customized?\n- Do you have the right permissions set on your custom content/ directory? (i.e. 755)\n- Do you have a YAML header in the 404.md file?\n- Do you have URL rewriting enabled or disabled? \n. I am able to replicate this issue @PhrozenByte. \nIt appears to be solved in the latest master of parsedown-extra as per https://github.com/erusev/parsedown-extra/issues/53 and https://github.com/erusev/parsedown-extra/commit/cbd74e2e1fc8985f5bcafc5066bfa960caa60800\n. Hopefully @erusev can release a 0.7.1 update before we release Pico 1.0.0 @PhrozenByte, otherwise it's probably best to use the dev-master and have this bug resolved? I guess we will wait and see which happens first :watch: \n. Thanks for resolving that so quickly @erusev :+1: \n. I will have a look at the code a little closer here this week @smcdougall ; in the meantime, I have submitted PR #284 which could lead us in the right direction for including all plugins and themes on a single page. \n. Closing the topic; mostly resolved. \nNotePaper theme is featured on picocms.org in 2a33837d4 & 8644376c :) \n. I suppose in the not-so-distant future, the page will only display Pico 1.0 plugins & themes, but we haven't exactly dropped support for Pico 0.X yet, so why not have them featured at all @PhrozenByte? I liked the tabs idea if we are trying to be accommodating of prior plugins  :+1: \n. Touch\u00e9\n. Don't ever feel like your input isn't important @smcdougall! Pico hadn't been actively maintained or developed in almost a year. All of our contributions (no matter how small or large) are the only thing keeping Pico relevant-- so if you're interested in seeing Pico grow and flourish, comment away! ;) \n. When you put it that way, I would say that Pico's default index.php is intended for standalone installations @PhrozenByte. It's true, I probably don't fully understand what a project that includes Pico the way you described looks like... You say you don't see any use case where someone would call vendor/picocms/pico/index.php directly, I can't say one way or the other :confused: \nWhy do you call it directly @dmelo?\n. While I agree it feels haphazard to assume anything about the directory structure above Pico, it appears that others deal with this issue similarly to my first thoughts in https://github.com/picocms/Pico/pull/286#issuecomment-159107251 @PhrozenByte \nSee: \nhttps://github.com/zendframework/ZFTool/pull/31/files\nhttps://github.com/BaunCMS/Baun/blob/master/baun\nhttps://github.com/Behat/Behat/blob/master/bin/behat#L21\nhttps://github.com/lassodatasystems/LassoMultilogBundle/commit/56203d5250bfcd5f9e9d6a0f954136709df5a88d\nI'd also be interested to know if anyone else has another method for determining if this is indeed a standalone installation or being used as a library. \n. Not the most shining examples, no. :laughing: \nAlbeit I'm out of my depth here, but if you add \"config\": { \"vendor-dir\":... to the root project composer.json how does Pico take that into account in index.php? Can something like $composer->getConfig()->get('vendor-dir');be called? \n. It seems nobody from the Composer project can provide a more detailed or better way of doing it.... :astonished: Here's some discussions I found: \nhttps://github.com/composer/composer/pull/234\n\n\"I think the correct way is to include DIR.'/../vendor/.composer/... or DIR.'/../../../.composer/..., much like the solution ... Because that way you account for \"installs as a top level project\" and \"installs as a dependency within $vendor/composer/composer/\". It's not super nice but I honestly don't know what else to do.\"  - Repo Owner\n\nhttps://github.com/composer/composer/issues/2904\n\nit should actually handle COMPOSER_VENDOR_DIR more gracefully, or at all even. Something like this should do the trick:\nphp\nif (getenv('COMPOSER_VENDOR_DIR') && is_file(__DIR__ . '/../' . getenv('COMPOSER_VENDOR_DIR') . '/autoload.php')) {\n    require(__DIR__ . '/../' . getenv('COMPOSER_VENDOR_DIR') . '/autoload.php');\n} elseif (is_file(__DIR__ . '/../vendor/autoload.php')) {\n    require(__DIR__ . '/../vendor/autoload.php');\n} elseif (is_file(__DIR__ . '/../../../autoload.php')) {\n    require(__DIR__ . '/../../../autoload.php');\n} else {\n    // ...\n...they mostly are talking about \"binaries\" too, I guess. \n\nhttps://github.com/composer/composer/issues/3645\n\n...\nWell how do you explain this then :\nphp\n// installed via composer?\nif (file_exists($a = __DIR__.'/../../../../../autoload.php')) {\n    require_once $a;\n} else {\n    require_once __DIR__.'/../vendor/autoload.php';\n}\n...\nfirst case is about being installed as a dependency (locally or globally does not matter) while the second case is about being the root package\n...\nSo basically, having both always make sense right ?\n...\nyes.\n\n... every answer has a different amount of level changes :joy:\n. @PhrozenByte, if it could be baked in to our deploy script, that would actually be a very smart solution to the problem and potential security issues while not affecting composer users... It would just sit in the build directory? \n:+1: for that idea!!! \n. I'm sure there's a more elegant way of doing it, but, we should probably check for composer locally and in the parent directory too before setting php configuration options, no?   \n`` php\n// load dependencies\nif (file_exists(__DIR__ . 'vendor/autoload.php')) {\n    // local composer install\n    require_once(__DIR__ . 'vendor/autoload.php');\n} else if (file_exists('../../../vendor/autoload.php')){\n    // root composer install\n    require_once('../../../vendor/autoload.php');\n} else {\n    // composer needs install...\n    die('Cannot find composer/vendor/autoload.php-- trycomposer install`');\n}\n//require_once(DIR . 'vendor/autoload.php');\n```\n. I don't actually know @dmelo :confused: ... Discuss in #285?\n. Showcase\n\n\n\n\n\n\n. \n.  <img alt=\"picoscreenshot\" src=\"https://cloud.githubusercontent.com/assets/640217/11484528/1cba1878-9774-11e5-8f37-b139392c83fb.png\" /> \n ![pico screenshot](https://cloud.githubusercontent.com/assets/640217/11484858/07f1e43c-9776-11e5-809d-712fa87c5aad.png) \n\n. This has been basically fixed in my fork, I think this needs more discussion though, in a new issue... \nIf @Lomanic is interested in developing the Pico-Editor-Plugin source to be on par with Pico 1.0 (and possibly use as Pico's 'official' admin plugin) by all means, please do. I basically copied it verbatim from gilbitron's repo, and wrapped it in @PhrozenByte's DummyPlugin for Pico 1.0, and included some of the outstanding PR's on the original fork. \nIMO, it needs a rewrite. There is lots of missing functionality, and it's very finicky/rigid. \n. Well then, even better! :laughing: \n. I'm a fan of your ideas for the plugin as well @Lomanic \nSome things it seriously needs to address in it's current state: \n- creating, opening, saving, and deleting markdown files that are in sub/ directories. \n- currently it needs to be cloned into, or renamed PicoEditor to function, if you do not specify, it gets cloned as Pico-Editor-Plugin\n- perhaps a small asset-manager? \nSome things you already mentioned\n- better login \n- better error handling \n- better code in general \nIt would be very much helpful if you were able to take care of this! :+1: :smile: \n. This is a had discussion, I'm afraid. Due to an outpouring of user feedback, we opt to include the vendor dir in release archives as to keep with Pico's \"stupidly simple \" mantra and provide \"upload-and-go\" functionality. We do however keep it out of the repo, and instruct developers to clone and run composer. Thanks for you feedback :) \n. My opinion is that Key:Value is not a valid header, and it should throw the exception. Perhaps we could clarify the importance of having the space Key: Value in the header to avoid mistakes like this somewhere in the user documentation @PhrozenByte ? \nP.S. @AeonFr, if you add something like syntax highlighting javascript to the editor, it may help to visualize the error before you save. \n\n. If we are going to work around the recoverable error, 2/#293 has my vote, otherwise I'd say just throw the exception. :neutral_face: \n. I misunderstood, I would like to actually merge #294; it will show the exception but still allow you to browse to the admin plugin, etc... As you mentioned more expansive error handling is added complexity, and I think if we start going down the \"nice\" error message route(i.e. #293) this is \"puling at the thread\" so-to-speak... (even though I initially like it better) \n. :+1: the code is actually much more readable and verbose; I also noticed from last time that you added caching too!!! Awesome stuff here @PhrozenByte \n. I had originally planned on merging this with v1.1.0, however, I think this should be included in the final v1.0.0, and unless anyone has major objections or sees any glaring flaws, I would like to merge it soon. \n. abandoned.\nbranch can be restored or copied from https://github.com/theshka/Pico/tree/feature/bootstrap-theme if you'd like to use anything from it for #270 :+1: \n. That is how it currently is setup @joshas see: https://github.com/picocms/Pico/tree/feature/bootstrap-theme/themes\n. The reason why I split everything in to includes is to have a collection of \"building blocks\" for users to include in custom layouts. I don't really see it being a problem having a couple variations of layouts and accompanying snippets as examples. Sure it is something new to learn, but Pico has introduced many new things in 1.X, including new default plugins, twig extensions, etc... \nAs for keeping the current default theme, why not? This could ship as the new default \"blog\" theme, and have the current default theme ship as an auxiliary \"bare\" theme. \n@PhrozenByte mentioned, Bootstrap can be both simple and full-featured. Compiling a custom build and including only the minimal configuration would solve the remote dependencies concern as well... Keeping it updated wouldn't be too much of a problem, because you can save your build config.json to import on the bootstrap website. \n. Theme looks great @PhrozenByte, thanks for keeping in mind that we are trying to unify the branding of Pico in your rewrite.\n. @PhrozenByte, @dav-m85 ... No, I think that was just overlooked at some point. I would say to use a stable constraint here instead of the dev branch. \n. Out of my depth with this one, and have no strong preference either way; however, PicoPluginInterface sounds more natural to me than IPicoPlugin. :speak_no_evil:\n. Thanks for the fresh eyes :eyes:  @PhrozenByte !\nSince 4.0.0 isn't available on CDN yet, I opted to just create a post-install-cmd script in composer.json to copy the needed files to the theme directory, and therefore keep utilizing composers depenodency-managemnt. \n. Old habits die hard! You are definitely right, specifying just col-xs-12 will apply to that one tier and all those above it. Changed. \n. I suppose that when Pico 1.1.0 is ready to go, a Bootstrap 4 CDN will be available, if not, its just as simple to use Bootstrap 3. Then there will be no need to include with composer, or use the post-install-cmd script. Thanks for catching that!\n. With the addition of the code sniffer .xml, should we also have a .phpdoc.xml file in the root instead of hiding the ignore list inside the script? \n. I proposed the prefix _change not to avoid collision with the shell scripts, but rather to signify that the directory is not apart of Pico's main files. Hope that clears it up @dav-m85 :smile: \n. That is true, so why does the README have different styled headings? :confused: \n. Oops! Copy pasta :frowning:  I'll fix that... \n. Currently: \nUsing a pre-bundled release\nJust download the latest Pico release and upload all files to the httpdocs directory (e.g. /var/www/html) of your server.\nComposer\nStep 1 - for users\nDownload the source code of Pico's latest release, upload all files to the httpdocs directory (e.g. /var/www/html) of your server and navigate to the upload directory using a shell.\nStep 1 - for developers\nOpen a shell and navigate to the desired install directory of Pico within the httpdocs directory (e.g. /var/www/html) of your server. You can now clone Pico's Git repository as follows:\nWhy is the same \"for users\" instructions there twice under different headings? \n. Even though I'd like to provide a blog example, it needs to be stated \"Pico is not blogging software - but makes it very easy for you to use it as a blog.\" I don't think removing the section completely is necessary. \n. ",
    "pomaxa": "@vitasonline it's kind a wired to do stuff like that. Maybe it will be easier to change template for exact content file?\n. @vitasonline just write Layout in meta and specify filename to use. I'll try to attach example tomorrow; I have realize such possibility in https://github.com/pomaxa/Pico/tree/v0.6.3 . I've PR it, but for now you can fetch it from my fork\n. @gilbitron should I break it into separate features? or maybe there is another solution? cuz I really wanna to PR all this changes. This PR is including almost all the functionality of previous PR and issues; \n. ok. I'll wait for it; And thanks for the project. It's really useful.\n. @carboxymoron can you describe the idea, when you will need to apply class to the body tag, instead of using different template? If template we are talking about twig as a template engine, then it is much cleaner to use smart type of template inheritance; i.e. to have \"footer.html.twig, header.html.twig, menu.html.twig and etc\"  and have multiple template/layouts - name it as you like, with code like file simple_layout.html.twig contain -> \"include header1.html.twig, some html , include footer\";l\n. ",
    "vitasonline": "how to specify a template for a specific page content ?\n. ",
    "NeoBlack": "+1 I think this identical with my pull request #88 \n. Hi everyone,\nthanks all for your feedback.\nI have take a look at the code of pico and some plugins. currently I try to code a plugin which add support for multi column layouts, but there are some problems which can not be handled with the hooks, so changes in the core are needed. for example the \"config_loaded\" hook is called to late, because I need the config in the \"after_load_content\" hook, which is called before the \"config_loaded\" hook.\nalso, currently it is not possible to use all feature of the twig template engine, e.g. blocks within the *.md files.\nI think one solution could be to use markup for columns within the *.md files like this:\n{ column:content }\n   markdown here for the content column\n{ /column:content }\n{ column:sidebar }\n   markdown here for the sidebar column\n{ /column:sidebar }\nwithin the template file use:\n{{ content }} or {{ sidebar }} to render the markdown from *.md files.\n. I think the main problem is located in the core of pico, I will spend some more hours in code review\n. So, with some lines of code (I think it was only 20 lines), I have added multi column support to the core.\nI have made a pull request, please vote for it if you like. \nHere are the pull request: #89 \n. @tyeeman I have now found some more parts in the core which has to be changed for multi column support.\nAs first step I have now added a support for multiple templates, currently this is not possible, because the filename \"index.html\" is hard coded in the core. I have fixed it, can you make some testings? You find the patched version here:\nhttps://github.com/NeoBlack/Pico/tree/feature/multiTemplateSupport\nThe main idea is: define a Template in the meta to use an other template file. e.g.:\n/*\nTitle: Welcome\nDescription: This description will go in the meta description tag\nTemplate: content-sidebar\n*/\nIn this case the content-sidebar.html file is used instead of index.html file.\nThis is the first step on the way to multi columns :)\nUPDATE:\nIf this part is working, I will create a pull request and work on the next step, which is the support for multiple columns / blocks.\n. thanks for testing, I have create the pull request id #90 \n. After @gilbitron accept my pull request for the multi template support, I have now implemented the multi column support based on the latest version of pico. You can find the pull request here #94 \n. @ksuehring yes, your are right. The file was missing, because the gitignore file. I have added now to the branch.\n. please see the discussion on issue #86 for more background to this pull request\n. Yes, I have test it with my own test project, there I have changed all *.md files and removed the marker {{ content }} from template file. Than all works fine. I think I have found the problem, I will remove this pull request. And spend some more hours to fix this.\n. @james2doyle yes, looks like the same issue and concept. Your patch checks if template exists, I forgot this in my patch, but else it is the same...\n. I have now added the file_exists check also to my branch, with fallback to index.html\n. Hi @all, what a create discussion here :)\nI think a little bit more action at this repository where really great. The last days I have talked to some people on my company and we think pico is great idea for some small websites or lowlevel CMS projects.\nBut there are some missing features like multiple templates, multiple columns, editing backend or a better navigation concept. We are interested in supporting this project. Not with money, but with software development and implementing some core features. But before we can do that, we need the guarantee that our implementation will be merged into the core.\nIf branches will not be merged into the core or take to long time, we will not do that.\n@gilbitron you are the owner and maintainer for this project, what is the spirit of your project? How could we help and improve pico? Which priority has this project for you? Sometimes people has a great idea, but after a while other things are more important. Is this project still your baby?\n. @shoostar I think, this is a great idea. @gilbitron I think a page in the wiki is a good place for a list of feature requests. We could than pick up some of this features and implement it. Yesterday I wrote, that my company would support pico with coding, what do you think about it?\n. thanks for the link, I have added some features and ideas to the list\n. new pull request with id #94 \n. I think the best way is to code a plugin for this, take a look at the documentation about the plugins:\nhttp://pico.dev7studios.com/docs.html#plugins\n. Yes, this is the correct way. Download the Google Sitemap Plugin, in this plugin an other hook is used to detect the URL an activate the plugin only for this page.\nthe code above is from the sitemap plugin:\npublic function request_url(&$url) {\n    if($url == 'sitemap.xml') $this->is_sitemap = true;\n}\n. > My problem is I do not know how to pass a variable from the request_url function to this one. I have searched a lot on stackoverflow and google and can't seem to find an answer.\nI think you could use the object skope. e.g. define a property in your class like this:\nprotected $myVar;\nAnd than set this property in request_url with:\n$this->myVar = 'foo';\nThen you can access this property in every method of your class with:\n$this->myVar;\n. ok, but where will be the excerpt used? I can't find any usage of the excerpt in the core, only a hint in the documentation, that this could be accesed by the page variable.\nMaybe this could be removed or moved to a plugin!? For other SEO thinks, we has the meta description part, why not add a meta option for the excerpt?\n. I am sure the newly added issue #97 based on this issue\n. @frodox thanks for your hint, I think a plugin for the excerpt is the best way to improve the performance and use it only if really necessary. \n\nIs there a posible way to improve Pico? I love it :)\nOf course, I think so :)\n. No, I have stopped working on pico. The branch exists and Gilbert can use it if he want.\nJames Doyle and me started an own fork, we have refactored the core complete and the next step is to port some pico plugins on our new plugin structure.\nYou can find the our fork here: http://philecms.github.io/Phile/\nMy offer to support pico was not be answered and the development speed of pico is to slow for our requirements. but it is ok, this is the power of opensource, we have the freedom to make our own project. We wish Gilbert all the best with pico.\n. Hi @Leetcore \n1500 posts are to much for the current structure of pico.\non every request all files will be loaded and parsed. Currently I am working on some performance issues. This will take a while, also because I am not sure, if @gilbitron the author of pico will accept all my changes. This is a ongoing process.\n. Hi everyone,\nAt first, Gilbert did a great job and he has a really good idea. This was the reason for me to start working with pico. After some testings I found some issues, which I have fixed. I started a pull request and after some days and some messages the fix was merged. I offer Gilbert to support the project with our company three times, but get no reaction. He sad the main idea is, to hold the core small and implement features by plugins, this also a great idea. But after I am installing 4 plugins, my test site was very slow, this happens because the plugin structure is not optimal. e.g. the method get_pages was called over 100 times per Request and every call was parsing the complete page.\n\nI offer Gilbert to do some refactorings and introduce some object oriented code to make it more performant. Gilbert not respond to my offer. After Gilbert told me that pico has not the biggest priority, James and me started the fork PhileCMS to work on our own implementation and to speed up the development. After some days we have refactored the complete core, but still with the same idea, a small core and features in plugins.\nPhileCMS introduce a service locator, which makes it possible to replace the markdown parser, template engine or cache engine easly with a plugin. The new plugin structure works well and PhileCMS is a lot faster than before. (The template engine, cache engine and the markdown parser are plugins in PhileCMS)\nPico and PhileCMS are both open source, everyone can help to improve, and also Gilbert can look at Phile and use our code to improve Pico if he like. James and me are not the bad guys, this is the spirit of open source! \n. One addition: Yes, the plugins are not compatible, it was not possible to get pico plugins run on the new plugins architecture. At the beginning we hope to get this working, but the main goal for PhileCMS was the performance and the plugins structure was a big performance issue. But we are working also on new plugins, a list can be found in the wiki.\n. @grouchal I was searching a long time for a small CMS for our customers and on my research I found pico. I like it and will use it on our projects. but for reasons I have listed above, it was not possible to use it in a production environment. I love the spirit of open source and I think we are on the right way. Gilbert has the choice to decide which parts of our code he will use for pico or not. And when he is ready to do more for pico, he can get all of our code, that is open source.\nI can not tell my boss that I work a bunch of hours on a project and do a lot of changes without the warranty, that the changes will be merged into the core. We can not work with a tool which has to be patched on each release. Do you know what I mean?\n. @shawnsandy thanks for your posting. I agree with James, so I will not answer the same thinks again. we have rewritten the Core within some days, the community will be bigger the next time. The documentation is one of our next tasks, we have started with some pages in our Wiki.\n. @shawnsandy I am not sure, if I understand your question. What do you mean exactly? Give me some examples and I will give you an answer ;)\nMost of the core components are implemented as a service, this makes it possible to replace the template engine, markdown parser, cache system or the new data storage engine with your own, without touching the core. The plugins can register for events, this makes it possible that the a method like get_pages will only be called if plugin has registered for this event. To access pages, you have to use the new page repository, which give you all pages, or one page by path (all with a great php object cache).\n. ok, we have some core methods in an utility class, which can be used by any plugin. e.g. \\Phile\\Utility::resolveFilePath(\"MOD:myPlugin/config.php\");\n~~the method returns the full file path to the config file in the plugin folder. the method get_files was complete removed, but general: all methods which are useful can be added to the Utility class and an will be accessible in all plugins. If you think a method like the get_files method is good a idea please open an issue on the phile project and we will add it or maybe code it by your self and create a pull request.~~ we have added a method to receive files on a directory, you can use this method like this:\nUtility::getFiles(CONTENT_DIR, '/^.*\\\\'.CONTENT_EXT.'/');\ncurrently we have no login system, but this is planed as a plugin, and sure this login would be available for all other plugins. in the future we will support dependencies for plugins, so you can define your plugin needs an other plugin. \n. I would say, turn on the display_errors and show us what errors occur. a blank page is often an hidden error. Look at the log files or enabled the display_errors option.\n. Yes, I had the same probleme with pico in a subfolder, but I think settings the base_url in the config.php will fix this issue.\n. ",
    "shawnsandy": "Great... Thanks!\n. Interesting conversation, while I do not consider myself a developer I do write a little code, I was looking for a simple easy to use database free, lightweight PHP CMS and Pico was the best solution I had found and would never use it for any high content site or blog for that matter, it is not designed for that. So it did not matter that it was not the fastest, it was fast enough, did it need improving absolutely.\nBut I do not care for questions like these, no opensource project will grow if we expect it to be perfect from start it's success is dependent on the support of it's users. WordPress for example is very faaaaaaaaaaaarr from perfect but it has a huge community of contributors that work together on improving it, and this it why has grown to become the one of the most popular OS project on the planet.\nAs for Phile I took a look at and it is well written, OOP based, seems faster, but I decided to stick with Pico because \n- I did not have the time to rewrite my plugins (published/unpublished) or any of the others I use into Phile plugins. \n- It lacked the support base (users) 11 watchers, 10 stars 1 fork (2 since I will fork it)\n- The documentation was not much better that Pico\nSo what happens when another developer does not agree with Phile's core philosophy and Forks, that will not help Phile, the only thing it does is create more fragmentation something that is a huge problem in the OS community.\n. @james2doyle -- Sorry, but my point was not about how many times but that forking divides the support base and that a strong support base is crucial to the success of OS projects.\nPico at it's core is a single file -- lib/Pico.php. I did encounter several things I could not fix and I did not want to wait on the slow development cycle, so modified the Pico class so that I could extend it and overwrite whatever functions I needed to change, I submitted the changes and they were added to the Pico pulled (manually).\nI love what you guys are doing, my hesitance to commit is solely a personal preference.\n. @james2doyle, @NeoBlack -- For the most part I agreed with Gilbitron as it pertains to keeping Pico very lightweight and keep customizations out of the core. If you plan to run a full blown blog or website for that matter a flat file system is not the way to go speed would be the least of your problems, .\nThe problem with Pico is that it was not written with DRY principles in mind and already there was a lot of copy and paste code ( get_pages() ) flying around in plugins. I am interested to see how you guys dealt with that. For example can I reuse a core function in my plugins or extend a plugin or do I have to copy and paste it??? \nIf these things are adequately being addressed then you would have convinced me that the fork was worth it. \n. @NeoBlack\nExamples \n- Pico_slider the get_files(), (not get_pages my bad) is copied from Pico.php even though function could be made available the dev and other plugins...\n- Pico Editor contains a simple and easy to use login system, but cannot be used by other plugins, if you need a login system you have to rewrite one or copy and paste the code for you plugin.\nEven some of the plugin I have written I have done the same thing.\nIMO the practice leads to bloated code, much like what we see within the WordPress, I am hoping that you found a way to address issues like this...\n. ",
    "trevordixon": "This is a great addition. I hope it gets accepted soon!\n. ",
    "carlosrivas55": "Thanks\nexcuse me, but please check this www.pico-cms.com\n. ",
    "ksuehring": "The fix was merged in 022334ff13cde8660c2c9b25b4e5bd1a8b687704\n. Thanks a lot for implementing this. This was also a feature that I was looking for and had a hard time working around.\nI will try to test as soon as I find some time for it.\n. @NeoBlack Is it possible that content-sidebar.html is missing in that new request?\n. AllowOverride needs to be set in the apache server configuration in the directory context because it limits what can actually be changed using .htaccess files. If that is set to None, the .htaccess file will be completely ignored, see:\nhttp://httpd.apache.org/docs/current/mod/core.html#allowoverride\nOn a site that I would set up for users, I would probably disallow loading modules in .htaccess because that can be potentially dangerous.\nI'm loading the module in the server configuration, but still need the following override options:\nAllowOverride Indexes Options FileInfo\nSo maybe it's best, if you talk to your server administrator.\n. ",
    "lacosz": "Notice: Use of undefined constant ture - assumed 'ture' in /var/www/pico/lib/pico.php on line 208 \n. Thank you!\n. ",
    "dlazesz": "Please recheck your config. I can't find any 'ture' string in the source files.\n. ",
    "mixxmac": "If you use the patch in this thread... https://github.com/james2doyle/Pico/commit/a968a51c3236a837896e8e8ccf0d521c87c7deb4\n... then you could use a different template for pages (e.g. using Layout = page for the about us page, and adding a page.html file into your the theme folder.\n. ",
    "shoostar": "I'm not gonna lie, I feel like a complete idiot for missing that... Thanks for the info, it worked perfectly :)\n. Seems like there could be quite a few different ways to go about this. What exactly are you looking to put in your sidebar? Are you planning on having static content in there (such as social network links, a bio, etc.), or are you trying to pull in stuff from other pages on your site?\n. I would use the Advanced Meta plugin, and create a sidebar template using that. You can also create multiple sidebar templates, of which you can assign in each page of your website. So you could do something like this:\n/*\n    Title:\n    Author:\n    Date:\n    Layout: sidebar1\n*/\nsidebar1 would actually be sidebar1.html in your template folder, and you can put whatever content you want into each one of them, if you want different sidebars for certain pages on your site.\n. @NeoBlack @ksuehring Just a quick question, but why does content-sidebar.html need to be included in the pull request? For true multi-column/multi-template support, file naming should be agnostic, and based solely on the end-user.\n. Have a look at this. :)\n. It doesn't look like Gilbert actively maintains this project, so I'd say for the time being, someone should create their own fork with all these changes (@NeoBlack, for this feature, anyways) and just submit PRs to that.\nMaybe a better solution might be to try and send Gilbert a quick friendly email, mentioning that there's a couple PRs awaiting his approval. With as much activity as this repo has seen in the past few weeks, it might give him reason to check back here once in a while, if only to at least finish up some merges and whatnot.\n. Maybe before you appoint any maintainers for this repo, we could come up with a list of things that you'd personally like to tackle with this project, in regards to core functionality additions/changes? That way, anyone working on this project can also help keep in on the same track that you had initially planned for this.\n. Can you please verify that you have a .htaccess file in the root of your installation, and that your server has mod_rewrite enabled? Also, if you do have a .htaccess file, have you modified it at all?\n. Yes, the AllowOverride All needs to be in the .htaccess file. As it's easily missed, make sure you have 2 'R's in that phrase. I'm thinking that your server probably doesn't have mod_rewrite enabled though, as @hampton444 mentioned. That's definitely a quick and easy fix, though! :)\n. That's awesome of you to post the documentation in French online, but I think you'd be better off using either Github Pages, or simply hosting a repo on here with the documentation as the readme.md file. That way, you don't have to worry about your site going down, as it already has.\n. Understandable. Only reason I suggested Github Pages was because it's a proven reliable host for simple web pages, especially ones that are specific to documentation. Regardless, thanks for all your time and effort that you've put into translating this! :)\n. ",
    "reyman": "? pico parse and transform markdown on server i suppose, so my question is transformation of source code embeded into md file to html rendering with syntax highlighting :)\n. ",
    "timseverien": "According to markdown's official documentation, to write code you have to indent it with a tab or at least 4 spaces (http://daringfireball.net/projects/markdown/syntax#precode). It will be wrapper in pre and code tags. Then you can use one of the many JavaScript syntax highlight libraries to do the syntax highlighting. Take Prism for example: http://prismjs.com/\n. @x421 Perhaps you can just use or find the answer in the Advanced Meta plugin: https://github.com/shawnsandy/adv-meta\n. ",
    "bricebou": "Hi,\nI've just worked on a plugin to add automatically SyntaxHighlighter to pages. You can find it here:\nhttps://github.com/bricebou/pico_SyntaxHighlighter\nI'm not a developper, that's my first plugin, so I'm not sure the code is the most effective but it works great ; you can check it here for example: http://momh.fr/tutos/GCweb/GCweb_champs_perso\nDon't hesitate to review the code and to tell me how to improve it !\nEDIT : I've rewriten the entire plugin, trying to be more \"organized\" and \"clean\" ; don't hesitate to comment on the code, on the two versions, and to give me some advide :)\nThanks :)\n. Hi,\nI've just worked on a plugin to add automatically SyntaxHighlighter to pages. You can find it here:\nhttps://github.com/bricebou/pico_SyntaxHighlighter\nI'm not a developper, that's my first plugin, so I'm not sure the code is the most effective but it works great ; you can check it here for example: http://momh.fr/tutos/GCweb/GCweb_champs_perso\nDon't hesitate to review the code and to tell me how to improve it !\nEDIT : I've rewriten the entire plugin, trying to be more \"organized\" and \"clean\" ; don't hesitate to comment on the code, on the two versions, and to give me some advide :)\nThanks :)\n. To show the date of blog posts, you have to use {{ meta.date }} and I think it's possible to use {% if meta.date %}.\n. Check the config.php: you should have this line\n$config['pages_order_by'] = 'alpha';    // Order pages by \"alpha\" or \"date\"\nYou have to uncomment the line and change the value to date ant that should work.\n. What is your goal ? Because, maybe you are going to exclude this page from the variables Pico defines (as the pages array).\nWouldn't it be better to use the template meta inside a simple md files:\nTitle: Your Title\nTemplate : docs\nWith no content of course ; then in your active theme root you crete a docs.html files with what you want.\n. Have you looked at the Dan Reeves' picotags plugin : https://github.com/DanReeves/picotags\nWith this one, I don't have any issue.\n. Hi,\nMaybe you can find a way around using the pico-navigation plugin : https://github.com/ahmet2106/pico-navigation\nYou can look at a modified version of the plugin in my repo : https://github.com/bricebou/pico-navigation/blob/master/at_navigation.php \nI wanted to exclude some subcategories and specific posts from the menu.\n. Hi,\nSorry for the delay... \nFor the navigation I've used the Pico Navigation plugin (https://github.com/ahmet2106/pico-navigation). I've modified it slightly as you can see in my repo (https://github.com/bricebou/pico-navigation) excluding pages that doesn't have \"category\" as template or exluding pages from their title.\nHope it can help :)\n. I'm not sure, but maybe it's not a Pico's problem... Have you tried to read the documentation for htaccess ? Maybe there is a way to use a rewrite rule that changes spaces to the right unicode character ?\n. Hi,\nIt would be nice to see new developments on Pico !\nA few time after I just discovered Pico, I've heard about Phile ; but for a non-developper like me, Pico is just perfect. The little I looked to Phile, it seemed to me much more difficult to achieve what I wanted... \nPico is quite simple to understant (and I don't understant the whole thing) and I managed to write some basic plugins, mixing usage and fun...\nI'll look the evolution of what you are planning to do @eschwartz and maybe I can help with testing. The backward compatiiliy seems interesting but maybe it's quite difficult to achieve ?\nOne thing that seem important to me is that we have a complete documentation, with examples, snippets, comments in the code ; this way, non-developpers can understand the structure, the way the cms works...\nSorry for my english, I hope you'll understand.\nSee you !\n. @gilbitron Thanks for the sharing ! Unfortunately, I won't be able to use it because of my shared hosting : I can't access to the server through SSH and can't define a new vhost.\nIs it possible to use an htaccess redirect from the root to the public directory ?\nCould you give us some information about the pros of Baun, in comparison to Pico ? Do you plan to add some documentation about plugins ?\nThanks :)\n. Hi,\nFirst of all, I'm not a developer and english is not my native language ; but it's great to see Pico under active development !\nI don't understand all the implications of this pull request and I can't evaluate your code, but, based on some comments, it seems great. And it's coherent with the purpose of Pico : simple. And I agree with a proposition that have been already made : Pico should be available as an archive to keep its installation simple and the more wide as possible (you don't always have an SSH access to perform composer on shared hosting).\nI've written some small plugins for Pico and I was wondering what would be necessary to make them coherent with the changes you made. I'd like them to be fully compatible with this new version, and not use the deprecated \"way\".\nWould it be possible for someone here to review my code and give me some advice, recommendations... to perform an update. \nHere are the repositories:\n- https://github.com/bricebou/pico_leaflet (adding Leaflet to Pico) \n- https://github.com/bricebou/pico_SyntaxHighlighter (SyntaxHighlighter for Pico)\n- https://github.com/bricebou/pico_piwik (Piwik for Pico)\n- https://github.com/bricebou/pico_ganalytics (Google Analytics)\nThanks in advance and thanks for all the work @PhrozenByte, @theshka and others made !\n. Thanks for these precisions. I'll look into it, it will be my second semester's hobby...\nIf I understand correctly, each plugin should have its own config/config.php file ?\n. Ah ok, I've misunderstood lines 36 to 38 in https://github.com/PhrozenByte/Pico/blob/pico1.0/plugins/00-PicoDeprecated.php\nThanks again.\n. @PhrozenByte sorry for the delay but I'd like to react to your comment https://github.com/picocms/Pico/pull/252#issuecomment-138115044 \nMaybe I don't really understand what you say about registering new meta variables but I don't see how you don't need isset() checks. For example, with the Leaflet plugin or the Tag plugin, you still have to check if the variable is set for each page. But I may misunderstood... :/\n. Yes it is normal but there were debates about having a complete version of\nPico.\nAfter downloading Pico you have to run\ncomposer install\nBut i think it is said in the readme\nLe vendredi 9 octobre 2015, Wisnaeme notifications@github.com a \u00e9crit :\n\nNope. It's me too. Fresh download. :-(\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/picocms/Pico/issues/265#issuecomment-146973151.\n\n\nBrice Boucard\n. You can download Pico localy then run composer before uploading on your\nremote server\nI remember debates about having a ready to install version of Pico.\nI think we should call @theshka https://github.com/theshka on this\nLe vendredi 9 octobre 2015, Justin R. St-Amant notifications@github.com\n<javascript:_e(%7B%7D,'cvml','notifications@github.com');> a \u00e9crit :\n\nI don't suppose you can just run $ php composer.phar install locally, and\nupload everything to the remote server?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/picocms/Pico/issues/265#issuecomment-146976087.\n\n\nBrice Boucard\n. Thanks for your amazing work !. I've installed the release through composer and I was wondering if it's normal that the config/ dir is empty ? I understand it's in the vendor arborescence but for users, it's quite strange, don't you think ?\n. You're welcome @PhrozenByte :-) \nI was looking for the doc regarding accessing HTTP parameters (https://phrozenbyte.github.io/Pico/in-depth/features/http-params/) but I can't find it on picocms.org. Is it normal? or maybe you're working on it and I'm too fast... \nI wanted to make a link in a post I wrote about Twig pagination (update in https://github.com/picocms/Pico/issues/443). . Ok ! But I don't find any link to it from the left-side menu or from the main page content :-/. It's because it's the previous version of the code but I've changed my yaml content header because  thought the \"category\" meta was from the core based on https://github.com/picocms/Pico/issues/414... :-/\nInitially, here what a supcategory index.md:\n\n/\nTitle: Mon parcours\nAuthor: Brice Boucard\nLicense: Creative Commons Attribution-ShareAlike 4.0 International License\nTemplate: supcategory\n/\n\nAnd here is the category meta index.md:\n\n/\nTitle: Ma\u00eetrise Sciences du langage\nAuthor: Brice Boucard\nLicense: Creative Commons Attribution-ShareAlike 4.0 International License\nTemplate: category\nCategory: Mon parcours\n/\n\nMy theme on v1 renders that : http://momh.fr/parcours/M1 But, with v2, it doesn't show anything but the title.\n. So, I'm trying to use in my category.twig template the current_page.tree_node.children mentioned in https://github.com/picocms/Pico/issues/414 but it seems it's \"empty\"...\n{% for item in current_page.tree_node.children %}     \n{{ item.category }} - {{ item.title }} <br>\n{{ meta[\"Category\"] }} <br>                      \n{% endfor %}\n. The thing is: what worked doesn't work anymore...\nI was using the AdvancedMeta plugin and declared some meta this way:\n$config['custom_meta_values'] = array(\n    //page category\n    'category' => 'Category',\n    //page status\n    'license' => 'License',\n    'thumbnail' => 'Thumbnail'\n);. Of course :-)\nIt was more kind of a question: do I have to keep with the version 2 of Pico the AdvancedMeta plugin, or is there a way to let it aside ?\nI thought it was no longer necessary... and I thought you didn't have to declare custom meta...\nBut, of course, I wasn't clear --\"\nThanks :-))). Ok...\nBut in my category.twig template, I have this:\n{% for page in pages %}\n    {% if page.meta[\"Category\"] is sameas(cate) and page.template != 'category' %}\n        <li>\n            <a href=\"{{ page.url }}\">\n                <time class=\"vtl_date meta\" datetime=\"{{ page.date }}\" ><span>{{ page.date|date(\"d/m/Y\", \"Europe/Paris\")}}</span></time>\n                <div class=\"vtl_point\"><i class=\"fa\"></i></div>\n                <div class=\"vtl_label\">\n                    {{ page.title }}\n                </div>\n            </a>\n        </li>\n    {% endif %}\n{% endfor %}\nOf course, it doesn't produce any result.\nIf I try to replace page.category with page.meta[\"Category\"], it doesn't produce anything...\nAny idea ? Thanks :-). Thanks !\nIt seems that the trim Twig filter is a part of the solution: using {% set cate = meta.title|trim %} and then if page.meta[\"category\"]|trim is sameas(cate) renders some results.\nBut:\n- it seems that meta in the meta are \"lowercased\"... in my md files, Category: test is accessible with page.meta[\"category\"] but isn't with page.meta[\"Category\"]\n- I'm surprised to see that the template variable is no longer available simply with page.template but needs to be called with `page.meta[\"template\"]. Here again, the initial capital is left aside.\nThanks again !\n. Here it is:\narray(11) { [\"id\"]=> string(17) \"parcours/M1/index\" [\"url\"]=> string(38) \"http://dev.localhost/parcours/M1/index\" [\"title\"]=> &string(29) \"Ma\u00eetrise Sciences du langage\" [\"description\"]=> &string(0) \"\" [\"author\"]=> &string(13) \"Brice Boucard\" [\"time\"]=> &string(0) \"\" [\"date\"]=> &string(0) \"\" [\"date_formatted\"]=> &string(0) \"\" [\"raw_content\"]=> &string(181) \"/* Title: Ma\u00eetrise Sciences du langage Author: Brice Boucard License: Creative Commons Attribution-ShareAlike 4.0 International License Template: category Category: Mon parcours */\" [\"meta\"]=> &array(10) { [\"title\"]=> &string(29) \"Ma\u00eetrise Sciences du langage\" [\"author\"]=> &string(13) \"Brice Boucard\" [\"license\"]=> string(65) \"Creative Commons Attribution-ShareAlike 4.0 International License\" [\"template\"]=> string(8) \"category\" [\"category\"]=> string(12) \"Mon parcours\" [\"description\"]=> &string(0) \"\" [\"date\"]=> &string(0) \"\" [\"robots\"]=> string(0) \"\" [\"date_formatted\"]=> &string(0) \"\" [\"time\"]=> &string(0) \"\" } [\"content\"]=> &string(0) \"\" } NULL\nIt seems that the version doesn't show anything, isn't it ?. Hum... I don't understand... \nI've used git clone git@github.com:picocms/Pico.git and run composer install... what have I done wrong ?\n. Hum... --' Sorry...\nSo, I'm now running the latest beta of version 2.\nBut I still see a problem with no-case sensitive meta.\nin my twig category template:\n{{ page.template }} -- {{ page.meta[\"template\"]}} -- {{ page.meta[\"Template\"] }} <br>\n{{page.category }} -- {{ page.meta[\"category\"]}} -- {{ page.meta[\"Category\"] }}\nAnd here the result:\n-- index --\n-- Master professionnel \u00c9dition -- Master professionnel \u00c9dition\nAnd here is the meta header of my content file:\n/*\nTitle: Histoire de l'\u00e9dition : la censure en France...\nDescription: Dossier d'histoire de l'\u00e9dition : la censure en France... de la censure \u00ab officielle \u00bb \u00e0 la \u00ab censure invisible \u00bb\nAuthor: Brice Boucard\nDate: 2009/07/02\nLicense: Creative Commons Attribution-ShareAlike 4.0 International License\nTags: \u00e9tudes,\u00e9dition\nCategory: Master professionnel \u00c9dition\nTemplate: index\n*/\nI can't give you the result of the dump command you gave earlier because of a memory limit (small and slow computer and memory limit fixed in php.ini fixed at 256 MB)...\n. I have this parameter set on default in my config.yml:\nDummyPlugin.enabled: false. Sorry ! too fast reading\n. Made it working ! ... --'\nThanks again :). Ok, thanks for the precision :-)\nIs there a documentation about the changes, so I can make my plugin fully compatible without the need of PicoDeprecated plugin ?\nIs there a way to test if I call function that are no longer in use ?\n. Ok, thanks for this.\nI've just looked to this old development and I was wondering if I'm right. Two questions:\n- here is a part of the old configuration:\n$config['synhigh']['theme'] = 'Emacs';\n$config['synhigh']['autoloader'] = true;\nIn YAML, will it be that ?\nsynhigh:\n  theme: 'Emacs'\n  autoloader: true\n- and what about arrays:\n$config['synhigh']['autobrush'] = array(\n  'bash shell' => 'Bash',\n  'txt plain text' => 'Plain',\n  'js jscript javascript' => 'JScript',\n  'tex latex' => 'Latex',\n  'php' => 'Php',\n  'xml xhtml xslt html' => 'Xml'\n);\nWill it be:\nsynhigh:\n  theme: 'Emacs'\n  autoloader: true\n  autobrush: ['bash shell' => 'Bash',\n  'txt plain text' => 'Plain',\n  'js jscript javascript' => 'JScript',\n  'tex latex' => 'Latex',\n  'php' => 'Php',\n  'xml xhtml xslt html' => 'Xml']\nThanks again !. Thanks !\nBut, I still have an issue... with this part:\n$config['synhigh']['brush'] = array(\n    'Bash',\n    'Plain',\n    'JScript',\n    'Latex',\n    'Php',\n    'Xml'\n);\nsynhigh:\n  brush:\n    \"Bash\"\n    \"Plain\"\n    \"JScript\"\n    \"Latex\"\n    \"Php\"\n    \"Xml\"\nwith or without quotes, I have a PHP Fatal error..\nPHP Fatal error:  Uncaught Symfony\\\\Component\\\\Yaml\\\\Exception\\\\ParseException: Unable to parse at line 42 (near \"\"Bash\"\"). in /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php:288\\nStack trace:\\n#0 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(320): Symfony\\\\Component\\\\Yaml\\\\Parser->doParse('\"Bash\"\\\\n\"Plain\"\\\\n...', false, false, false)\\n#1 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(246): Symfony\\\\Component\\\\Yaml\\\\Parser->parseBlock(29, '\"Bash\"\\\\n\"Plain\"\\\\n...', false, false, false)\\n#2 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(320): Symfony\\\\Component\\\\Yaml\\\\Parser->doParse(Array, false, false, false)\\n#3 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(246): Symfony\\\\Component\\\\Yaml\\\\Parser->parseBlock(9, 'theme: Emacs\\\\nau...', false, false, false)\\n#4 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(78): Symfony\\\\Component\\\\Yaml\\\\Parser->doParse('synhigh:\\\\n  them...', false, false, false)\\n#5 /home/bbrice/webdev/www-dev/vendor/picocms/pico/lib/Pico.php(884): Symfony\\\\Component\\\\Ya in /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php on line 288, referer: http://dev.localhost/parcours/M2pro/\nBeside of that and beside of plugin filename, it seems that this plugin is version 2 compatible ! :-). You are forgiven... I'm sorry, but I'm just a hobbyist coder and it's been a while I touched this code, and I didn't know what to look for exactly. I'm going to open a new thread however regarding another plugin...\nSo, I made it work and the PicoSyntaxHighlighter is ready (it seems to me) for Pico CMS version 2. The code is here: https://github.com/bricebou/PicoSyntaxHighlighter \nAgain, sorry and many thanks !. That's not the issue... \nThe twig code with what you mentionned commented:\n<h1>{{ meta.title }}</h1>\n{# {% set cate = meta.title|trim %} #}\n<ul class=\"wlist vtl categ\">\n    {% for page in pages %}\n        {# {% if page.meta[\"Category\"]|trim is sameas(cate) and page.meta[\"template\"]|trim != 'category' %} #}\n            <li>\n                <a href=\"{{ page.url }}\">\n                    <time class=\"vtl_date meta\" datetime=\"{{ page.date }}\" ><span>{{ page.date|date(\"d/m/Y\", \"Europe/Paris\")}}</span></time>\n                    <div class=\"vtl_point\"><i class=\"fa\"></i></div>\n                    <div class=\"vtl_label\">\n                        {{ page.title }}\n                    </div>\n                </a>\n            </li>\n        {# {% endif %} #}\n    {% endfor %}\n</ul>\nAnd the HTML output for two articles which title starts with [Avanc\u00e9]:\n```\n\n\n26/06/2018\n\n\n            LaTeX\n        \n\n\n\n\n26/06/2018\n\n\n    </div>\n</a>\n\n\n\n\n26/06/2018\n\n\n    </div>\n</a>\n\n\n\n\n26/06/2018\n\n\n            GCweb\n        \n\n\nAs you can see, the `vtl_label` div appears empty for two entries. Here are the meta headers of these two files:\n/\nTitle: [Avanc\u00e9] GCweb : Modier l'intitul\u00e9 des champs\nDescription: Modifier l'intitul\u00e9 des champs affich\u00e9s par GCweb\nAuthor: Brice Boucard\nDate: 2011/08/04\nLicense: Creative Commons Attribution-ShareAlike 4.0 International License\nTags: GCweb,web,GCstar,biblioth\u00e8que,php,Sublime Text\nCategory: GCweb\nTemplate: index\n/\n\n/\nTitle: [Avanc\u00e9] GCweb : Ajout de champs personnalis\u00e9s\nDescription: Ajouter des champs personnalis\u00e9s dans GCweb\nAuthor: Brice Boucard\nDate: 2011/08/05\nLicense: Creative Commons Attribution-ShareAlike 4.0 International License\nTags: GCweb,web,GCstar,biblioth\u00e8que,php\nCategory: GCweb\nTemplate: index\n/\n. I've tried to switch to the default theme and to access the page where I have a meta title with brackets.\nTitle: [Avanc\u00e9] GCweb : Modier l'intitul\u00e9 des champs\n```\nAnd here is the PHP error I get:\n[Wed Jun 27 22:15:57.843942 2018] [php7:error] [pid 21610] [client ::1:40088] PHP Fatal error:  Uncaught Symfony\\\\Component\\\\Yaml\\\\Exception\\\\ParseException: Unexpected characters near \" GCweb : Modier l'intitul\\xc3\\xa9 des champs\" at line 7 (near \"Title: [Avanc\\xc3\\xa9] GCweb : Modier l'intitul\\xc3\\xa9 des champs\"). in /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Inline.php:76\\nStack trace:\\n#0 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(536): Symfony\\\\Component\\\\Yaml\\\\Inline::parse('[Avanc\\\\xC3\\\\xA9] GCweb...', false, false, false, Array)\\n#1 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(258): Symfony\\\\Component\\\\Yaml\\\\Parser->parseValue('[Avanc\\\\xC3\\\\xA9] GCweb...', false, false, false, 'mapping')\\n#2 /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Parser.php(78): Symfony\\\\Component\\\\Yaml\\\\Parser->doParse('Title: [Avanc\\\\xC3\\\\xA9...', false, false, false)\\n#3 /home/bbrice/webdev/www-dev/vendor/picocms/pico/lib/Pico.php(1335): Symfony\\\\Component\\\\Yaml\\\\Parser->parse('Title: [Avanc\\\\xC3\\\\xA9...')\\n#4 /home/bbrice/webdev/www-dev/vendor/picocms/pico/lib/Pico.php(442): Pico->parseFileMeta('/*\\\\nTitle: [Avan...', Array)\\n#5  in /home/bbrice/webdev/www-dev/vendor/symfony/yaml/Inline.php on line 76\nI've tried without any success with double quotes, single quotes...\nTitle: \"[Avanc\u00e9] GCweb : Ajout de champs personnalis\u00e9s\"\n. Hum... inexplicable, but today, after booting my computer, it works just with double quotes...\nSorry for the noise.... Yeah, I figure that out...\nI should use the onTemplateRendered with the &output variable?\n--\nBrice Boucard\n\nLe 28 juin 2018 \u00e0 16:19, Daniel Rudolf notifications@github.com a \u00e9crit :\nYou're using the DummyPlugin as of Pico 1.0, not of Pico 2.0.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I'll give it a try ! But I don't understand... I'm a bit frustrated, cause I launched the search Twig_Environment on this repo and this function didn't appear... (https://github.com/picocms/Pico/search?q=Twig_Environment&unscoped_q=Twig_Environment)\n\nSorry, and many thanks !. I wanted to make sure I wasn't missing anything... :-(\nAgain, so sorry for all the noise I make...\nTime to play with Twig filters and functions... Thanks again !. I've tried to work on a better way to integrate this pagination on different template files and I produced this how-to on my website: http://momh.fr/tutos/Pico/pico_twig_pagination\n@PhrozenByte You can copy this, if you think it's good and useful, into the picocms website.\nIf you find a better way, let me know !\nHere it is: inside your index.twig (for example), paste this code and set the variables:\n```\n{#  number of pages to display per page #}\n{% set pagi_slice_length = 5 %}\n{#  the array of pages to use #}\n{% set pagi_pages_array = pages %}\n{#  the base URL of the page the pagination applied\n    it can be a more complex string, concatenated like this:\n    base_url ~ \"/tag/\" ~ current_tag\n}\n{% set pagi_base_url = base_url %}\n{#  the name to use as the URL parameter (?page=xxx) #}\n{% set pagi_http_param = 'page' %}\n{% if url_param(pagi_http_param, 'int') is not null %}\n{% set pagi_basepage = url_param(pagi_http_param, 'int') %}\n{% set pagi_slice_start = pagi_slice_length * (pagi_basepage - 1) %}\n{% else %}\n{% set pagi_slice_start = 0 %}\n{% set pagi_basepage = 1 %}\n{% endif %}\n{% set pagi_maxpage = (pagi_pages_array|length / pagi_slice_length)|round(0, 'ceil') %}\n{% for page in pagi_pages_array|slice(pagi_slice_start, pagi_slice_length, preserve_keys) %}    \n\n{{ page.title }}\n\n{% endfor %}\n{% include 'includes/pagination.twig' with [pagi_basepage, pagi_maxpage, pagi_base_url, pagi_http_param] %}\n```\nYou have to create a includes/pagination.twig file in which you have to paste this code:\n```\n{% set pagi_next_page = pagi_basepage + 1 %}\n{% set pagi_prev_page = pagi_basepage - 1 %}\n{% if pagi_maxpage > 1 %}\n  \n    {% if pagi_prev_page is not null %}\n      Newest posts\n    {% endif %}\n{% for item in range(1, pagi_maxpage|number_format) %}\n  <li class=\"pi {%if item == pagi_basepage %} pi_a{%endif %}\"><a href=\"{% if item == 1 %}{{ pagi_base_url }}{% else %}{{ pagi_base_url ~ '/?' ~ pagi_http_param ~ '=' ~ item }}{% endif %}\" class=\"page_item {%if item == pagi_basepage %} page_active{%endif %}\">{{ item }}</a></li>\n{% endfor %}\n\n{% if pagi_next_page is not null %}\n  <li class=\"pi\" {% if pagi_next_page > pagi_maxpage %}style=\"visibility: hidden;\"{% endif %}><a href=\"{{ pagi_base_url ~ '/?' ~ pagi_http_param ~ '=' ~ pagi_next_page }}\" title=\"Older posts\" id=\"next_page_link\">Older posts</a></li>\n{% endif %}\n\n\n{% endif %}\n```\nIt's awful, but it works ! ^^\nA live example: momh.fr/. No worry @PhrozenByte :-)\nI've just updated my second comment (I forgot the pagi_pages_array variable in my for loop).. Comment for un-stale-ing this issue\nI'm going to work on adding options to display only X items when the maxpage is too important.. Just in time !\nSo I've worked on a a way to reduce the number of displayed pages !\nHere is my new includes/pagination.twig: \n```twig\n{% set pagi_next_page = pagi_basepage + 1 %}\n{% set pagi_prev_page = pagi_basepage - 1 %}\n{% if pagi_max_near_by is null %}\n  {% set pagi_max_near_by = 2 %}\n{% endif %}\n{% if pagi_maxpage > 1 %}\n  \n    {% if pagi_prev_page is not null %}\n      Newest posts\n    {% endif %}\n{% if pagi_basepage - pagi_max_near_by > 1 %}\n  <li class=\"pi\">&hellip;</li>\n{% endif %}\n\n{% for item in range(1, pagi_maxpage|number_format) %}\n  <li {% if pagi_basepage - pagi_max_near_by > item or pagi_basepage + pagi_max_near_by < item  %}style=\"display:none;\"{% endif %} class=\"pi {%if item == pagi_basepage %} pi_a{%endif %}\"><a href=\"{% if item == 1 %}{{ pagi_base_url }}{% else %}{{ pagi_base_url ~ '/?' ~ pagi_http_param ~ '=' ~ item }}{% endif %}\" class=\"page_item {%if item == pagi_basepage %} page_active{%endif %}\">{{ item }}</a></li>\n{% endfor %}\n\n{% if pagi_basepage + pagi_max_near_by < pagi_maxpage %}\n  <li class=\"pi\">&hellip;</li>\n{% endif %}\n\n{% if pagi_next_page is not null %}\n  <li class=\"pi\" {% if pagi_next_page > pagi_maxpage %}style=\"visibility: hidden;\"{% endif %}><a href=\"{{ pagi_base_url ~ '/?' ~ pagi_http_param ~ '=' ~ pagi_next_page }}\" title=\"Older posts\" id=\"next_page_link\">Older posts</a></li>\n{% endif %}\n\n\n{% endif %}\n```\nI've made a new blog post about that here: http://momh.fr/tutos/Pico/pico_twig_pagination_bis\nAnd you can see it live here: http://momh.fr/?page=5. Hum... I tried this one before posting... but without any success (the page.id return the correct path):\n{% for page in pages %}{{ page.id }} // {{ page.id|content }}{% endfor %}\nI'm doing a lot of things wrong.... Hum...\nI've tried to get back to the basics: using the default theme and the content-sample. It wasn't working because of file permissions...\nBut then, moving back to my content and my theme, another issue: it seems that the PicoTags plugin (https://github.com/bricebou/PicoTags/blob/master/PicoTags.php) I've tried to rewrite causes the pages array issue :-/\nIt's strange, cause I have the right {{ pages|length }}and all the{{ page.id }}. It's only the{{ page.id|content }}that doesn't display anything.. After some more investigations, it was due to the fact that PicoTags rewrited thepages` array:\nhttps://github.com/bricebou/PicoTags/blob/823b31b9f264866f449d3de629e779bf52b15aa4/PicoTags.php#L190-L191\nDeclaring a new array and a new Twig variable does the trick. I might ask later for a code review, once I've tried more this plugin and pushed to GitHub the changes.\nSorry, again.... Hi,\nI've worked again on my plugins and splitted the PicoSimpleStats plugin into two plugins:\n- PicoSimpleStats (https://github.com/bricebou/PicoSimpleStats)\n- PicoCookieBAR (https://github.com/bricebou/PicoCookieBAR)\nPicoSimpleStats depends on PicoCookieBAR.\n@PhrozenByte I was wondering if I did that right:\nhttps://github.com/bricebou/PicoCookieBAR/blob/29e9f95bdf1a8c5b09616967a671c6dd6744fde3/PicoCookieBAR.php#L19\nand then\nhttps://github.com/bricebou/PicoSimpleStats/blob/0c76a82eadc72c6647a1274ff0c973f29aa65e21/PicoSimpleStats.php#L52\nThanks in advance for your comments :). Thanks a lot @tumapav !\n\n\nPicoTags \n\nI'll update the README with your recomandations (missing {{ base_url }} Markdown headers...)\n\nAbout the XSS vulnerability risk, maybe I could add a test inside the onRequestUrl function, before checking if it starts with the tag string ? \n\n\nit took me some time, and a lot of failed attempts... but here is where I've come so far:\n\nadding the strip_tags function within the onRequestUrl function:\nhttps://github.com/bricebou/PicoTags/commit/49fae65481794507e782cd2a20559160c41f77f7\nusing the |e filter inside Twig template this way:\ntwig\n<a href=\"{{ base_url }}/tag/{{ tag|e('url') }}\">#{{ tag|e }}</a>\n\n\n\n\n\nWhat do you think ?\n\nPicoCookieBAR : thanks ! Here are the changes I made:\nhttps://github.com/bricebou/PicoCookieBAR/commit/c617dd50390b45c0b1cb4f67783501d454cd9d0b\n\nWhat do you think ?\n\n\nPicoSimpleStats : I haven't worked yet on the composer way of doing things :-/\nFirst, I wanted to add the cookieBAR script as a submodule or a subtree of my own plugin but when you use the zip download on GitHub, it doesn't download any of the depedencies... :-/ \nI'll look to composer once I've finished my theme upgrade (and it's quite long to find the right color palette)\n\n\nPicoXMLSitemap and PicoSyntaxHighlighter : I've updated the README files with your suggestions.\n\n\nThanks again !. Thanks a lot @tumapav :-))) I've modified the README, removed the link within the h2...\nI haven't look at your plugin, but I will :-) I'm working on a new plugin that will replace SyntaxHighlighter with Prism (https://prismjs.com/index.html) : https://github.com/bricebou/PicoPrism. Hi @PhrozenByte and @tumapav ! \nI am thinking about creating a LinkChecker plugin for Pico, but it implies that I \"create\" a page only registered users would see.\nSo, I thought to some plugins of yours: PicoAuth and Pico Admin ; it seems to me that each plugin implements it's own authentification process.\nWouldn't it be better to have one plugin for authentification on which other plugins could depend on ? \nUnfortunately, I am far from being able to do that :-/. Great ! :-) But I'll let @tumapav react and the two of you discuss about that (it's way above my level) :)\nI've worked on PicoLeaflet : https://github.com/bricebou/PicoLeaflet.\nIt adds Leaflet interactive maps to Pico pages ; you can see it live here: http://insta.momh.fr/\nI was wondering if I can help with Pico website, updating the plugin page ? But I don't think it's a great idea to simply add files to this folder https://github.com/picocms/picocms.github.io/tree/master/_plugins\nDo you want to keep only Pico 2 native plugins ?. @PhrozenByte : thanks a lot for your review !\nFirst, I'm not a developer and I've worked on this plugin essentially for fun. I read the docs, try a lot of things, test a lot what I get, but I don't understand everytime anything...\n\nPicoTags::tags_sorting(): Remove both array_flip() and use usort() instead of uksort(). However, I'm not sure why the tags array needs to be sorted!? confused I guess if one wants tag B to be listed before tag A, it means that tag B is more important. This is different for the tags overview page, the tags should be sorted there, but just there.\n\nHum... I made tag sorting an option so you can disable it. When I add tags to a blog post, I write them as they come in mind, and I'm not sorting them based on their importance...\nI've used arry_flip() and uksort() because I'm french and I need to sort tags with accents, diacritics...\nWhen I first work on this plugin, three years ago, that was the only way to make the sort work.\n\nPicoTags: Not sure what the nbcol feature is for... Doesn't make much sense to me. How about the batch Twig filter?\n\nI didn't know about that Twig filter. And you are right, it wasn't useful, it was more like a test I've made.\n\nPicoTags: Not sure what the excluded_templates is for... If a page shouldn't have tags, the tags array should be empty.\n\nYou are right ! I'm still thinking as if Pico was in it's 0.9 version, when you have to declare the meta to use in your content headers.\n\nPicoTags::onRequestUrl(): It should be rawurldecode() instead of urldecode(). Furthermore the strip_tags() call has no effect (must be called with the result of rawurldecode()). However, strip_tags() doesn't work proberly anyway, you must call Twig's escape filter nevertheless. Otherwise special characters like < (without >, i.e. no tag) and & will still cause problems. If forcing the escape Twig filter isn't desirable, simply use a character whitelist for tag names, like [a-zA-Z0-9_.-].\n\nI'm not sure how to handle that : I've made several tests with rawurldecode() but it wasn't working well with spaces. The better result was achieved with urldecode()...\nI like the character whitelist idea but I'm far from understanding how to implement that... \n\nPicoTags: There are various calls to explode(), even though the contents are YAML. If the plugin expects an array, the user should declare an array. Don't use separators like | or ,.\n\nOf course... Still using Pico 0.9 way of thinking... :-(\n\nPicoTags::onPagesLoaded(): The $pages array looses its keys. This is a absolute no-go!\n\nI've encountered an issue with that : https://github.com/picocms/Pico/issues/444#issuecomment-401586254 \nBut I don't really know how to handle that...\nCan you point me to the right way to solve that issue ?\n\nPicoTags::onPagesLoaded(): You might want to implement $this->ptags_delunique using array_filter()\n\nI'll check that.\nPicoTags::onPagesLoaded(): Not sure what the else clause labelled as \"Workaround\" is for...\n\nIt's from the Dan Reeves' first version of the plugin. As I've said I'm far from being a coder... so I don't always understand what I'm doing :-/\n\nPicoSimpleStats: This really isn't something for a plugin... This should be implemented in the theme. The valid use cases for modifying $output in onPageRendered() are very, very limited.\nPicoXMLSitemap: See Pico's official https://github.com/PhrozenByte/pico-robots\nPicoSyntaxHighlighter: Same as with PicoSimpleStats\nPicoCookieBAR: Same as with PicoSimpleStats\nPicoLeaflet: The source code is very confusing... Not sure whether this is like PicoSimpleStats and should be implemented using pure Twig.\n\nAll the other plugins were more like experiments. I'll check your pico-robots and I'll work much more with Twig.\nThanks again.. What is the unexpected behaviour you are referribg to?\nLe dimanche 4 octobre 2015, Daniel Rudolf notifications@github.com a\n\u00e9crit :\n\nIn lib/Pico.php\nhttps://github.com/picocms/Pico/pull/252#discussion_r41097723:\n\n\n{\nreturn $this->content;\n}\n  +\n/**\n* Reads the data of all pages known to Pico\n*\n* @return void\n*/\nprotected function readPages()\n{\n$pages = array();\n$files = $this->getFiles($this->getConfig('content_dir'), $this->getConfig('content_ext'));\nforeach ($files as $i => $file) {\n// skip 404 page\nif (basename($file) == '404' . $this->getConfig('content_ext')) {\n\n\nI think the added 10 LoC is it worth to resolve this undocumented and not\nexpected behavior...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/picocms/Pico/pull/252/files#r41097723.\n\n\nBrice Boucard\n. ",
    "tyeeman": "Yes, I just did this. I asked the author via email recently but he said it's up to me to modify Pico if I want certain functionality. I have come across a few small cms's recently that are awesome, like Pico, but they only include one content area, which is a shame. The author thought it would be too hard to code to do this but I'm not a coder so he may be right. Anyway here is how I got around it ------\nSince there is only one {{content}} tag, I placed my markup in the top of any page.md, then below that I included my templates code that had div tags including all the content between the tags. To make the content markdown compatable, include in any div tag this - markdown=\"1\". Now remove all the html tags in all the divs so you can use straight markdown. It works if you use multimarkdown. I think I had to download that and replace the current markdown.php file in Pico. That multimarkdown file allows markdown within html and of course html within markdown. So there you go. Kind of a kluge, but it's working for me. \nSo how about someone suggesting how to add multiple content areas. I suggest this - Add some meta data at the top of any page that tells Pico what content it will be, like Content: sidebar1\". So what page to put that content? Use the meta \"Title\" information (\"Title\" is page name usually). Then when parsed that pages content goes into\n{{Title-sidebar1}} area of the template, where Title is the actual page name like so - \n{{AboutUs-sidebar1}}\n{{Home-sidebar1}}\n{{Contact-sidebar1}}\nSo all the above 3 Pico tags would be copied into the \"sidebar1\" div of the template, just as shown. Each of the different pages now receive their particular content in sidebar1.\nUpdate - Just found the \"pico_get_by_filename\" plugin, I'm going to try it!\nUpdate - Yes, it works but every page will have this same content, not quite the same as wanting different content for every page in any area, so I'll have to stick to what I described above.\n. Ok, this sounds just what I want but I'm a little confused on how to install the Advanced Meta Plugin. Here is what I have come up with. Please correct if I'm wrong.\n1. Create my sidebar1 content like so with the new meta value (Layout) -- Question - Below is the sidebar1 content only as far as I can tell, it has nothing to do with a template does it? How do we tell Pico to use a sidebar1 template, that is what I don't understand.\n/\n    Title:\n    Author:\n    Date:\n    Layout: sidebar1\n/\nMarkdown content goes here.\n\n2.Copy adv_meta.php to my Plugins folder. \nCopy the following to my Pico config.php --\n$config['adv_meta_values'] = array(\n        //use custom page template(s)\n    'layout' => 'Layout'\n    )\n\nSo now I have the sidebar1 content written and told Pico about the new \"layout\" meta, so to get the sidebar1 content into my theme's sidebar1 div do I just put {{ meta.layout}} into my theme's sidebar1 div??  This can't be right. Where does \"sidebar1\" come into this? I'm going to have multiple sidebars so how do I differentiate between them? I've obviously missed a step!\n. Yes, Neoblack, that last comment is exactly what I want, and I'm sure lots of others do also. That would be awesome. \nIn the adv-meta plugin discussion yesterday I also mentioned something similar, like adding \"Area: sidebar1\" meta at the top of any .md file so that the content in that .md file would be placed into the template at {{sidebar1}}. Would this be simpler to code or would the markup for columns within the .md files method be easier?\n. Very nice NeoBlack. Thanks for the fast work. Can I think of this feature as \"blocks\" instead of \"columns\". I'm just visualizing typical web pages and not many have more than 3 columns, but lots of sites have multiple blocks on a page which appear within those 3 columns.\n. Ok NeoBlack, some bug must be here.  As I click every page in my menu, the same page is showing up all time and even though that page has no other columns than the normal \"content\", I'm getting all columns showing in their areas. Please check. I downloaded the 4 changed files and imported them into v0.7 of Pico.\nI did a few more tests. If I only have one page in my content folder it works fine. When I start adding pages it only wants to show one no matter which others I click on.\n. Hi NeoBlack\n  Yes, I tested it and it works fine here. Please continue.\n. Yes, I looked at that yesterday, but it protects the whole site, I just want one folder (and sub folders) protected. I left a question asking if this was possible. Do you know if it is? Maybe I just add the code to whatever folder I want to protect, but I'm not so sure it will work that way without a modification.\n. I will leave my comments here instead of the Multi Column Issue. \nI have tested this first version and some bug must be here. As I click every page in my menu, the same page is showing up all time and even though that page has no other columns than the normal \"content\", I'm getting all columns showing in their areas. Please check. I downloaded the 4 changed files and imported them into v0.7 of Pico.\nI did a few more tests. If I only have one page in my content folder it works fine. When I start adding pages it only wants to show one no matter which others I click on.\n. @NeoBlack \n   Just wondering how these pull requests work. Do we wait for Gilbert to OK your change before you can continue or are you continuing to work on the mulitple column areas per page?\n. What got me so excited was small markdown cms's which Pico just fits the bill. But trying to find this type of cms that has multiple content areas (or columns if you want to call it that) is very hard to find. There is another great one like Pico, called WIB (worse is better) at madpropellerhead.com and I recently suggested he add this feature too, so he's thinking about it. I found an old one called zerocms that had snippets that could do multiple areas per page but the snippets only work with textile, not markdown, even though the manual says it will. Has anyone found a small markdown cms that has this feature (multiple editable areas per page)?\nNeoBlack's mod is what I'm waiting for I guess. Forking and modding it like James mentioned sounds like the best idea for now.\n. That looks great James! Exactly what I need. Looking at it, is there a way to add something else in the markdown file so anyone could see where that section is placed in the template, like hr1, hr2. \nCan you possibly get it to us here somehow or is it not fully coded yet?\n. Awesome! I will try it!\n. @james2doyle  It works great using your method. Thanks. I tried using  , etc. but it did not work properly. Looks like the word that splits must be the same throughout the md file and template.\nSo it looks like we have column mode now, not ideal, but pretty close, NeoBlack made the multi-template mod recently, I believe I saw an online backend editor in the plugin section made by Gilbert, yes it's the Pico Editor Plugin. So all that is left in NeoBlack's list above is to do the Menu Nav enhancement. I think Pico has come a long way in a very short time. Thanks to you and NeoBlack!\nThere seems to be a Nav plugin already. I don't know what NeoBlack was thinking about improving but there is this one that's better than the default if someone needs it.\n. Hi Frank \nHow come you closed this? Did Gilbert agree to include it?? \nTony \n----- Original Message -----\nFrom: \"Frank N\u00e4gler\" notifications@github.com \nTo: \"gilbitron/Pico\" Pico@noreply.github.com \nSent: Friday, November 1, 2013 4:51:19 AM \nSubject: Re: [Pico] [FEATURE] multi column support (#94) \nClosed #94 . \n\u2014 \nReply to this email directly or view it on GitHub . \n. Great. I will follow you there!\n. ",
    "IMcD23": "For anyone still having problems with using multiple divs of content in their pages, there is a workaround.\nIt is possible to use HTML and markdown in your content files. Here is an example:\n\n< div id=\"title\" markdown=\"1\">\n ## Insert markdown here\n \n< div id=\"content\" markdown=\"1\">\n ## Insert more markdown here\n \n. \n",
    "Shamazo": "I read through the Pico docs and did a few searches, and I am a little confused as to how the plugins work. so if i used the 'before_render(&$twig_vars, &$twig)' hook, would my code run on every page before it rendered? if so would the easiest way be use an if statement to check the url then run my code if it is on the right page?\nSo if I wrote a plugin to get the input from the form and send it as an email. I would have the plugin only run on the page the user is taken to after submitting the form. Would this have the same effect has having php in the same file as the rest of that page?\nDoes that sound about right?\nThanks \n. Awesome, thanks man. I got a proof of concept working, i just need to write the code to do it properly now. \n. Okay I am 90% done, I have one problem though, I am not fully familiar with php so forgive me if this is dumb but,\nI have my request_url function, which checks the url, then if it is the right page does the stuff to get input from the form and send the email. I have a variable in here that is set to whatever appropriate error message depending on what is missing from the form.   I am using another function inbuilt into pico, before_render, which I am using to pass a new variable to twig with my error message.  My problem is I do not know how to pass a variable from the request_url function to this one. I have searched a lot on stackoverflow and google and can't seem to find an answer.\nThanks\n. Thanks for the quick answers. I have my email plugin working well. I was wondering if you could hlep me with a slightly different problem. I am trying to set up a blog in the folder /blog. I read the docs and I was wonder how I can use   {% for page in pages %} , to be something along the lines of, for page in  {% for page in blog %}.\nThanks\n. ",
    "Leetcore": "You should look at https://github.com/Circa75/dropplets/blob/master/dropplets/functions.php they do exactly the same - and with caching. :+1: \n. Thank you, for the fast response and your work.\n. ",
    "sergeweyland": "Have you managed to identify the problem by now, or do you still have it?\nI'm experiencing the same issue, on my laptop running a LAMPP system as well on my webspace. (Preview running on http://www.konrad.re/pico/ ) I adjusted the config-file to sort on alpha and asc. The order changes into a different order when I adjust it do desc, but still nothing alphabetically. I have a suspicion that it's actually sorting based on creation date instead of filename, but I can't really verify it.\nThe Pico-script orders the pages array based on the PHP functions ksort() and krsort(), which should usually work. I tried adding SORT_STRING as an extra sort flag to these functions, but that didn't really help.\nOn second thought, mightn't it just be that these functions sort based on the array position, instead of the filename or title? This does seem to make some sense, since on line 259 it is shown: else $sorted_pages[] = $data; Thus, they array key actually is the position of a page in the array.\nAll right! Problem fixed! Here's the fix:\n1. Open /pico/lib/pico.php\n2. Go to line 259\n3. Insert \"$page\" between the square brackets, so you get this: **else $sorted_pages[$page] = $data;\n. ",
    "hampton444": "Thanks for the response but I really need something more stupidly simple!!\nHow do I check?\nI write software but am a true virgin in this area!!\nCheers\n----- Original Message ----- \n  From: eduardogonrod \n  To: gilbitron/Pico \n  Cc: hampton444 \n  Sent: Wednesday, October 30, 2013 12:26 PM\n  Subject: Re: [Pico] Confused - probably a stupidly simple problem! (#100)\nHave you checked your server is picking the .htaccess?\n\u2014\n  Reply to this email directly or view it on GitHub.\n. Hi Jon\nI have .htaccess in the root folder - as downloaded in the package.\nI have tried to establish whether or not mod_rewrite is enabled by using suggestions on the web.\nI know PHP 5.4.21 is used.\nphpinfo() gives me lots of info but nothing about mod_rewrite!\nI also used the following but get the same as phpinfo()\nphp\n if( ! function_exists('apache_get_modules') ){ phpinfo(); die; }\n $result = ' not available';\n if(in_array('mod_rewrite',apache_get_modules())) $result = 'available';\n\n<p?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n\nCheck for mod_rewrite\n\nphp echo apache_get_version(),\"</p\nmod_rewrite $result\"; ?>\n\n\n\nmy guess is that mod_rewrite isn't enabled but that is born from complete ignorance!!\nAppreciate your help\n----- Original Message ----- \n  From: Jon Schuster \n  To: gilbitron/Pico \n  Cc: hampton444 \n  Sent: Wednesday, October 30, 2013 12:59 PM\n  Subject: Re: [Pico] Confused - probably a stupidly simple problem! (#100)\nCan you please verify that you have a .htaccess file in the root of your installation, and that your server has mod_rewrite enabled?\n\u2014\n  Reply to this email directly or view it on GitHub.\n. Hi\nI presume 'AllowOveride All' is a line in .htaccess?\nIf so I've tried adding it but it made no difference.\nI think it is probably time for me to contact my server admin and ask the question.\n(I'm beginning to feel like an early explorer, sailing off into the unknown wondering if I'm going to fall of the edge of the earth!!)\nThanks for your suggestions - if I find the answer I'll get back\nCheers\n----- Original Message ----- \n  From: eduardogonrod \n  To: gilbitron/Pico \n  Cc: hampton444 \n  Sent: Wednesday, October 30, 2013 6:44 PM\n  Subject: Re: [Pico] Confused - probably a stupidly simple problem! (#100)\nHi, \nI'd say getting those error 500 most likely is due to mod_rewrite disabled. \n  If you have enough permissions in the server it would be just a matter of \n  enabling the apache module, or if it is enabled already maybe you should \n  add \"AllowOverride All\" in your root folder but this depends on your \n  current setup. \n2013/10/30 hampton444 notifications@github.com \n\nHi Jon \nI have .htaccess in the root folder - as downloaded in the package. \nI have tried to establish whether or not mod_rewrite is enabled by using \nsuggestions on the web. \nI know PHP 5.4.21 is used. \nphpinfo() gives me lots of info but nothing about mod_rewrite! \nI also used the following but get the same as phpinfo()\n<?php \nif( ! function_exists('apache_get_modules') ){ phpinfo(); die; } \n$result = ' not available'; \nif(in_array('mod_rewrite',apache_get_modules())) $result = 'available'; \n?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"> \n\n\nCheck for mod_rewrite\n \n<?php echo apache_get_version(),\"mod_rewrite $result\"; ?> \n\n \n\nmy guess is that mod_rewrite isn't enabled but that is born from complete \nignorance!! \nAppreciate your help \n----- Original Message ----- \nFrom: Jon Schuster \nTo: gilbitron/Pico \nCc: hampton444 \nSent: Wednesday, October 30, 2013 12:59 PM \nSubject: Re: [Pico] Confused - probably a stupidly simple problem! (#100) \nCan you please verify that you have a .htaccess file in the root of your \ninstallation, and that your server has mod_rewrite enabled? \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014 \nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/100#issuecomment-27408720 \n. \n\u2014\n  Reply to this email directly or view it on GitHub.\n. Jon\n\nTried adding AllowOverride All but that then gave me an error and failed to load the welcome page!\n\n\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d \nRewriteRule . index.php [L]\n\nAllowOverride All\nPrevent file browsing\nOptions -Indexes\n\nThe FAQ for my server does say I am unable to change webserver configuration but does say RewriteEngine in .htaccess will activate mod_rewrite module.\nI have asked for clarification.\nThanks for your help\n----- Original Message ----- \n  From: Jon Schuster \n  To: gilbitron/Pico \n  Cc: hampton444 \n  Sent: Wednesday, October 30, 2013 8:40 PM\n  Subject: Re: [Pico] Confused - probably a stupidly simple problem! (#100)\nYes, the AllowOverride All needs to be in the .htaccess file. As it's easily missed, make sure you have 2 'R's in that phrase. I'm thinking that your server probably doesn't have mod_rewrite enabled though, as @hampton444 mentioned. That's definitely a quick and easy fix, though! :)\n\u2014\n  Reply to this email directly or view it on GitHub.\n. Hi\nHave had a response from my admin.\n\"The error message shows that there is a misconfiguration in your .htaccess file. Kindly check your rewrite rules and conditions.\"\nI was hoping for a little more than that!!\nI have used .htaccess as downloaded.\n\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d \nRewriteRule . index.php [L]\n\nPrevent file browsing\nOptions -Indexes\nAny more suggestions?  \nCheers\n----- Original Message ----- \n  From: Karsten Suehring \n  To: gilbitron/Pico \n  Cc: hampton444 \n  Sent: Thursday, October 31, 2013 10:34 AM\n  Subject: Re: [Pico] Confused - probably a stupidly simple problem! (#100)\nAllowOverride needs to be set in the apache server configuration in the directory context because it limits what can actually be changed using .htaccess files. If that is set to None, the .htaccess file will be completely ignored, see:\nhttp://httpd.apache.org/docs/current/mod/core.html#allowoverride\nOn a site that I would set up for users, I would probably disallow loading modules in .htaccess because that can be potentially dangerous.\nI'm loading the module in the server configuration, but still need the following override options:\nAllowOverride Indexes Options FileInfo\nSo maybe it's best, if you talk to your server administrator.\n\u2014\n  Reply to this email directly or view it on GitHub.\n. Found IT!\nAdded a / before index.php \nie  RewriteRule . /index.php [L]\nThanks all - perhaps I can now get on to trying Pico\n. ",
    "eduardogonrod": "Hi,\nI'd say getting those error 500 most likely is due to mod_rewrite disabled.\nIf you have enough permissions in the server it would be just a matter of\nenabling the apache module, or if it is enabled already maybe you should\nadd \"AllowOverride All\" in your root folder but this depends on your\ncurrent setup.\n2013/10/30 hampton444 notifications@github.com\n\nHi Jon\nI have .htaccess in the root folder - as downloaded in the package.\nI have tried to establish whether or not mod_rewrite is enabled by using\nsuggestions on the web.\nI know PHP 5.4.21 is used.\nphpinfo() gives me lots of info but nothing about mod_rewrite!\nI also used the following but get the same as phpinfo()\n<?php\nif( ! function_exists('apache_get_modules') ){ phpinfo(); die; }\n$result = ' not available';\nif(in_array('mod_rewrite',apache_get_modules())) $result = 'available';\n?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n\nCheck for mod_rewrite\n\n<?php echo apache_get_version(),\"mod_rewrite $result\"; ?>\n\n\n\nmy guess is that mod_rewrite isn't enabled but that is born from complete\nignorance!!\nAppreciate your help\n----- Original Message -----\nFrom: Jon Schuster\nTo: gilbitron/Pico\nCc: hampton444\nSent: Wednesday, October 30, 2013 12:59 PM\nSubject: Re: [Pico] Confused - probably a stupidly simple problem! (#100)\nCan you please verify that you have a .htaccess file in the root of your\ninstallation, and that your server has mod_rewrite enabled?\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/100#issuecomment-27408720\n.\n. \n",
    "allengaller": "I did everyting you guys said, still have the 404 subpage issue.\n. I have the same 404 problem!\n. UPDATE:  Problem solved\nIn Apache httpd.conf:\n\n    Options all\n    AllowOverride all\n    Order allow,deny\n    Allow from all\n\n'AllowOverride none' -> 'AllowOverride all'\nHi Pico Team, \nI am a huge fan, but now I need help.\nMy local site has the same problem:\n1. Main page is ok. It works.\n2. ANY other link doesn't work.\n3. I have a .htaccess file in the root of my installation, and that my server has mod_rewrite enabled.\nLooks like I have the subpages 404 issue: 'My sub pages aren't actually loading (404)' at issues/109\nI double check the htaccess file, the permission, and missing file. I try everything, but it still don't work:\nI have /content/about/index.md file, but when I access url: siteurl/about/index, it gets 404.\napache_access_log:\n127.0.0.1 - - [07/Apr/2014:18:22:25 +0800] \"GET /about/index HTTP/1.1\" 404 209\napache_error_log: \n[Mon Apr 07 18:22:25 2014] [error] [client 127.0.0.1] File does not exist: /Users/allengaller/Sites/spotlight-site/web/server/about\nFYI: \nMy PC side of local site works just fine. And my Linode online site works fine too.\nBoth using Pico!\nAllen\n. ",
    "madc": "Got the same issue as @hampton444. Prefixing the index.php with a slash fixed it. Maybe the default .htaccess needs some rewriting?\n. ",
    "eschwartz": "Any update on this? This seems kind of critical for a php library...\n. FYI: If anyone is having trouble installing Pico with composer, add this to your composer.json:\njson\n    \"repositories\": [\n        {\n            \"url\": \"https://github.com/picocms/Pico.git\",\n            \"type\": \"git\"\n        }\n    ]\nThat will tell composer to look at this github repo for the package (instead of just on packagist).\n. Hey -- I'm starting up a new project inspired by Pico, which is backwards compatible with existing apps and plugins.\nSee my whole spiel in #208.\n. One other thing to add -- I'd like to keep this backwards compatible with existing sites and plugins, so folks who already have something going can migrate to the new version.\n. Cool, thanks @pschmitt  -- that looks like what I was imagining. I'll have to play around with that.\n. After being directed to Pico, I started looking around at other static-site generators, and found sculpin. It passes all of my requirements, except for:\n1. it's not compatible with Pico (of course)\n2. There are test, but coverage is limited to some core components\n3. I can't read through the entire source in one sitting\n3 worries me just a little, and only because of 2. 1 is not a concern to me, but it may be to others.\nI think there could be room for something that accomplishes all three of these goals, or at least 2 and 3. It would mean trading extensibility for a small code base, but that could be valuable for some people. \nI'm pretty bad at writing concise code (I just like my DI and AbstractFactoryResolverFactoryServiceInterfaces too much), so this is probably not a job for me. \n. Wow, cool. \nI started this knowing only about a few lightweight/flat-file CMSs, but it looks like there are a ton out there.\nYou know what would be really nice... would be a wiki which listed all the different CMSs, with some bullet points for each.\n. Also, this obligatory relevant xkcd.\n. ",
    "hassankhan": "Ahh, couldn't resist, ended up doing a complete rewrite (I should get a life), if you want to have a peek, check it out :smile: \n. ",
    "berteh": "for future reference there's one at https://github.com/picocms/Pico/wiki/Pico-Themes\n. will have a look, thanks. \nIn the meanwhile stumbled upon https://github.com/mwgg/Pico-Search too.\n. ",
    "jrmgx": "thank you\n. ",
    "skegr": "@Snip1 - Your comment is not a constructive contribution. Gilbert built a great foundation and put loads of effort into getting Pico to v0.8 along with the myriad other projects he's involved in, and the folks that have forked it to create Phile are carrying the torch. This is how Open Source works, and it's working.\n. ",
    "grouchal": "I think this is a bit harsh, the last release was less than a month ago.\nDevelopment may be slow for your needs, but dead is something else.\nThe Phile code does seem to address some good points, but has incompatible plugins which is a shame. Forking at this early stage seems to be a mistake.\nIt would be nicer if there was more responses from gh to issues and if he doesn't have time, he should try and get some help. I think it is good that pico core is kept to a minimum but that doesn't mean all suggestions should be ignored.\n. @NeoBlack I think you have made some sane architecture choices, but I just wish they could happen within the pico project. I think Gilbert must agree too because you are trying even more to reduce the core.\nIf Gilbert really has abandoned the project it would make sense to fork, but hopefully he has not and is going to comment soon. For all we know he might be on a Buddhist retreat in Tibet at the moment working out which decisions need to be made next ;)\nI would like to see your changes (or similar) made to the pico project so that it can improve, but if Gilbert has no time or is unwilling to share the project then there is no other option but to fork! but I think it is a bit soon now.\n. I've moved on to Jekyll\n. You may have to wait a while to get this pull request accepted - have you thought about Phile: https://github.com/PhileCMS/Phile they are already solving these problems after getting frustrated with the lack of responses from @gilbitron \n. ",
    "CraXyOW3": "15 days ago was this post https://github.com/gilbitron/Pico/wiki/Feature-Requests\nIn the same run there had been discussion of gilb to get support for his project.\nGood thing with making a fork of Pico is that there is \"competition\" and that is a ground rule for having something to get better at what it is, no matter what it is.\nOne bad feeling i get about Phile comparing to Pico is that gilb is mentioning the downsides while Phile only shows the possitive things, that means in short that there are no major areas of improvement to be done. But that is just my opinion, self made reverse marketing?\nCertainly i will try Phile but I'm holding my thumbs for Pico.\n. ",
    "prodigy2m": "Pico is the next BIG thing. There are lots of file based CMS's around, however, PICO is very clear and focused on simplicity and performance. Our development group found this framework to be on top 10 best. I am looking forward seeing more people using and developing plugins for Pico. Great work. And thanks!\n. @james2doyle  Nice! I am following Phile CMS now :)\n. ",
    "stbucher": "I figured, it works when installed on a subdomain, but not in a subfolder. This is not mentioned in the installation instructions, and it seems this wasn't like this with the previous version.\n. ",
    "eisenherzz": "I have problems even on a sub-domain (http://test.eisenherzz.de).\nUsing $config['base_url'] = 'http://test.eisenherzz.de'; has unfortunately no effect. Any suggestions?\n. I am just testing pico. It is more or less a virgin installation. I just copied it on my web-server (without any changes) and already had problems with the demo content.\n. Argh, found my issue...It is basically the initial reported issue. My sub-domain is pointing on a sub-folder on my webserver. \n. Sorry for this misunderstanding. I have no solution but still the problem initially reported.\n. ",
    "Akthalian": "Can you provide some more info about your solution? My sub pages aren't actually loading (404)\n. Thank you for your reply. The issue only happens with that site. I have other items hosted on server (shared hosting) and they do not have this error. This is also the only PHP application/webpage that I run.\nWhat would you suggest as a means of troubleshooting?\n. So were you replicating the problem on my site at least?\n. Nothing conclusive. I took the content out of folders and its working fine though. Seems odd that it was causing that problem\u2014perhaps something to put on a pull request? \nI'm saying that because I feel like its not the way that was supposed to work (i.e. not as intended) and also its not really intuitive. \nAt this time, my issue is resolved. Thanks alot for pointing me in the right direction!\n. ",
    "sharpmachine": ":+1: it would be awesome if this was accepted upstream...\n. This fork works with getting Twig functioning, but plugins don't appear to work :frowning: \n. ",
    "Christophe-Aubry": "Yes I know ! My web site is down !\n. My web site is running... and the documentation is accessible again.\n. @shoostar It's a good idea, but I'm not comfortable with using GitHub, and I wanted to use daux.io.\n. ",
    "marckline": "The documentation issue still stands; however, I was able to get the current version running on PHP 5.2.6 with some simple but tedious modifications:\n- Rollback to previous versions of Markdown and Markdown Extra, which don't use namespaces and are PHP 5.2 compatible, in the vendor folder\n- Removal of the reference to Composer's autoloader in /index.php\n- Addition of manual require statements to load Markdown and Twig classes in /lib/pico.php\n- Modification of Markdown function call further down in pico.php to match the previous version's naming structure\nI hope that this helps someone else in a similarly lame situation where your hands are tied like mine are.\n. ",
    "exadeci": "I have this old hosting I'm trying to install Pico on, thank you for posting the steps that you applied.\nPico is now working I just need to fix the theme.\n. ",
    "rubenvarela": "\nWhat is a realistic number of .md 'content' files that a system like Pico (or Phile) can handle before it starts to noticeably slow down\n\nThis will depend on the server, the stack and the network speed of the server.\n- If you have a fast server, but the stack it's running on is configured incorrectly, the speed will suffer.\n- If you have a good server, but the stack is optimized and well configured, it'll run well.\n- Since you're transmitting data, if the network speed is slow, the site will slow down. If you have many users, you'll notice this quickly.\n\nand what can be done to ease that potential congestion?\n\nFrom the application's perspective, Caching. The easiest thing to do would be to generate static .html files and serve those instead of dynamically generating them for each request. You won't get much faster than that. If it's still slow, you'll need to check the stack and network speed.\n. Not sure where that's appearing. I just did a fresh install of Pico.\nI'm using OS X 10.9.1, the built-in Apache server and the built-in PHP and I didn't see that.\nI downloaded Pico using Safari (7.0.1) and then simply moved the content to the root directory of this virtual host.\nmv ~/Downloads/Pico-master/* ~/Sites/picotest.local/\nmv ~/Downloads/Pico-master/.* ~/Sites/picotest.local/\nHere is a screenshot of what I'm seeing.\n\n. ",
    "msosvi": "By using YAML, Pico doesn't need a custom meta plugin. Also with YAML format you can describe a collection that is converted to a PHP array (tags collection, for example).\nYAML is used in Jekyll, the static site generator behind Github Pages, for page meta info.\n. You are right,  with this change Pico doesn't need a custom meta plugin.\n. ",
    "epeli": "This would be awesome. It would make it much easier to migrate from Jekyll to Pico. I got interested in Pico because it is basically like Jekyll but without a build step. Different header format was a bit  disappointment because I could not just drop in my Jekyll markdown files.\nAlso Github supports YAML headers in markdown:\nhttps://github.com/blog/1647-viewing-yaml-metadata-in-your-documents\n. Actually the metadata syntax is now already a subset of YAML. The comment syntax is just incompatible with the de facto style used in Jekyll, Github, Assemble.io,  Wintersmith.io and many others. They use three dashes (---) at the start and at the end of the metadata section instead of C style comments. I'd love to see Pico supporting dashes in addition to the current one.\nExample:\n```\nTitle: Foo  Bar\nHeader 1\n```\n. > You will then be able to access this (meta) value via the {{ meta.layout }} template variable.\nhttp://pico.dev7studios.com/docs.html#adding-custom-meta\n. ",
    "williamgrivera": "This is a great feature! I'm not a developer and I have been hours trying to add custom meta to pages. Right nowwe have to use a hook to add custom meta to pages but with this everything inside /**/ of each page will be cosidered as a meta field. Is that right?\nI'm looking forward to build a lot of websites using Pilot. But custom meta is holding me. I do prefer this way.\n. ",
    "josh7weaver": "Did this feature get shelved? I'd like to give my vote for integrating it +1\n. ",
    "mistergraphx": "There is no need to add the YAML Symphony component, just changing the regular expression to this :\n```\n/\n     * Parses the file meta from the txt file header\n     \n     * @param string $content the raw txt content\n     * @return array $headers an array of meta values\n     /\n    protected function read_file_meta($content){\n        global $config;\n    $headers = array();\n\n    // Add support for custom headers by hooking into the headers array\n    // Is no longer needed but kept for compatibility reasons.\n    $this->run_hooks('before_read_file_meta', array(&$headers));\n\n    // Add any meta-headers from your *.md-files.\n    if (preg_match_all('/^[-]{3}.(.*?)[-]{3}/ims', $content, $match) && isset($match[1]) && isset($match[1][0])) {\n                $lines = array_filter(explode(\"\\n\", $match[1][0]));\n                foreach ($lines as $line) {\n                        if (strpos($line, ':') == true) {\n                                list($key, $val) = explode(':', $line);\n                                $headers[trim(strtolower($key))] = trim($val);\n                        }\n                }\n\n                if (isset($headers['date'])) $headers['date_formatted'] = date($config['date_format'], strtotime($headers['date']));\n\n            return $headers;\n    }\n}\n\n```\nexcept if you plan tu use multi-dimentional arrays in meta in the future ... but actualy it's not implemented in Pico.\ni already use this and it works ...\n. Hi @geedmo,\ni just test your modifications, with 90 articles, and i've a better result without :\nas you say, the testing method is what it is ;-) but i'm astonished of these results.\n\nWithout optimisation :\nStart: 05:20:41\nEnd: 05:20:41\nProcessed: 90\nElapsed\n0.23807597160339 seconds\n\nWith complete optimisation (page_content() & exerpt):\nStart: 05:34:32\nEnd: 05:34:32\nProcessed: 90\nElapsed\n0.29801678657532 seconds\n\nWithout parse_content() only\nStart: 05:24:01\nEnd: 05:24:02\nProcessed: 90\nElapsed\n0.30226588249207 seconds\n\n. Hi,\nAfter doing more test\n- exerpts recalculated each time we load a page,we lost 0.10 ms each time we load a page with this.\ni've a flat file cms tool that i've made for me (named Little), the solution i've found is to write a temporary index.json file containing page list, page url, page.title, resume, md5 sum ... each page we just've to verify the index state and compare it to the the file system ... may it's quicker than parsing on every action ...\nSo i've test rendering the same article in Little and Pico (with cache enabled)\nPico with Twig : Elapsed: 0.1051 seconds\n\"Little\" with mustache.php : Elapsed: 0.095 sec\nPlaying with this, i've discover that the choice of the template engine is a perf issue too ! Twig is slower, due to he template inherance and more complex/logical layouts certainly.\n. The only reason i can see : is for documentation purpose ;-) like in other apps php config\nThe multiline style comment is not the most appropriate in this case. May it's better to use the one line style comment // so the user could uncomment line by line ...\n. So ? any news about the maintainer ?\nActually, everybody fork pico and work in his own version. Fork is useful when merging is possible, but actually not.\nNo roadmap or discussions about where this open-source project goes.\nFinally the solution is maybe to make a spork and start a new community around this evolution.\n. if you rename : _test.php the plugin is not loaded, a plugin is loaded only when the class name and the file name are the same. in your case it's always false.\n. No you're not going crazy ;-)\nthe only difference is that you test if $ext is the last match, so this work in your use case. \nif you simply rename using only .disable or .back without hte $ext it'll do the same job. \nstrstr() function just find if the $ext is found in the string $file : in your case it's always true. just change the .ext ;-) using .back or .disable.\nreplacing the strstr() by a preg_match() is using more memory and time, this function is used frequently in pico, i'm not shure it's really useful.\nmay using strpos() 'll be  a memory gain in this case.\n. > It's starting to sound like we agree on the problem ..\nYes, ;-)\nAdding unit testing to Pico, could certainly be a great addition for discussing about benchmark and optimisation.\nThe path_info is certainly better, you're right.\ni'm just wondering if adding the Symphony Finder component to do all the file system task, could not be a better solution, even to be used by our plugins.\n. i've done this with a plugin.yaml description file im my case only the plugin with this file are loaded.\nhere is my modified function if it can help :\n```\n/\n     * Load plugins\n     \n     * a plugin is minimaly described by a name in a plugin.yaml config file\n     * and a class/file . name, class and file must be identicals\n     \n     * \n     \n     * @todo each web site must load only site.config activated plugins\n     /\n    protected function load_plugins() {\n    $this->plugins = array();\n\n            $yamlFiles = $this->get_files(PLUGINS_DIR, 'plugin.yaml');\n\n            if(!empty($yamlFiles)){\n                foreach($yamlFiles as $file){\n                    $plugin =Yaml::parse(file_get_contents($file));\n                    $plugin['path'] = str_replace('plugin.yaml','', $file);\n                    $php_file = $plugin['path'].$plugin['name'].'.php';\n\n                    include_once($php_file);\n                    if(class_exists($plugin['name'])){\n                        $obj = new $plugin['name'];\n                        $this->plugins[] = $obj;\n        }\n                }\n            }\n}\n\n```\nLook how many pull-request are waiting , there is an issue about a new maintainer or active team for Pico. Nobody 'll never pull anything ...\n. all your suggestions make me thing at \"Piecrust\" project ...\n. :+1: \n. @rosewoodmarketing :\nThe auto-installer can be a plugin, to keep the core of pico as stupid that it say's ;-)\nI use a modified version of pico, but the goal is to install it locally first and publish and maintain your website(s) after. Once you have install an instance of Pico locally, you can clone it for your customers\u2026\nFor the other considerations, there is some plugins to do those jobs (live editing, wysiwyg, file management). I think the core of Pico must stay \"simple\", but the segmentation of the Baun core is interesting in  some points, actually Pico is just one class, and it's (or will) become to be a problem/limit.\nJust for example, i 've to use Markdown Extra on some projects and Parsedown by default \u2026 a formatter class that can be extended could be a good point, a plugin class with a plugin description file could be another ;-) .\n. ",
    "pjrvs": "Using the open graph plugin and advanced meta plugin, i hacked it to work with open cards for both twitter and facebook.\n. This is the ONLY thing I haven't been able to figure out, everything else I've got working really well on my own site which runs PICO.\n. I too have a problem with trailing slashes causing 404s. I'd rather not have to write redirects for all my popular posts.\n. Agreed with what's been echoed above. .9 is no longer \"stupidly simple\" to install. I'll stick with .8 (which I use and love).\n. I agree that if there was a version I could basically drag/drop to a server, I'd be game and very appreciative.\n. I don't use for client sites, but for my own (which gets ~50k uniques/month) it's perfect. I write in markdown any way, and when I see traffic surges, I dig that there's no DB to bog down load time. Still though, simple as possible without being any simpler... I'm down for that.\n. ",
    "jbmoelker": "+1\n. @Jecomire similar to @caseycs we also implemented composer. It is much cleaner and easier to maintain as a dependency. However the issue remains that the config file will be inside the vendor directory which would typically be ignored when using composer. We fixed this with a composer post install script copying a local config file over the vendor one. It wasn't a very neat solution and the lack of extendibility without editing source code actually led us to write our own Markdown based wiki system. Will add a link once that is public. Until then, Pico is still a good option. This was our fork: https://github.com/voorhoede/Pico/commits/master\n. ",
    "chrfritsch": "+1\n. ",
    "ChristianGiupponi": "Thanks @Snip1 I have downloaded it!\nI have added the layout variable and I can access it with {{ meta.layout }} but now in the index.html how can I use it? I mean, should I create multiple if in the index.html?\n. ",
    "BarinsGhost": "@Frodox! Thank you so much, I've been looking for this for days now. \n. ",
    "kursusHC": "No one to help ? \nPico is definitlely great but seems useless to me without that feature. \n. @Stijn-Flipper thanks for the page.url trick, it works great ! \n@Jecomire Thanks but indeed it would be a bit heavy for my setup. \n. ",
    "STOWouters": "I'd have thought that something as this would work for you:\ntwig\n{% for page in pages %}\n    {% if \"/blog/\" in page.url %}\n        {# do something here with the page having \"/blog/\" in the url #}\n    {% else %}\n        {# do some other stuff when that's not the case #}\n    {% endif %}\n{% endfor %}\nnot tried it on myself, but 'on the top' I suppose this would work. However, if you were aiming to display all blog pages for example, you should consider mcb Blog plugin.\nNote: the algorithm is, of course, far from efficient when you have tons of pages, you can also write a plugin (with a small php knowledge) for this feature you requested for, it's also fun :--)\n. Yeah, it's maybe a (too) big change and I didn't know whether to PR or not, I'm actually building my blog using Pico, but I've to change something in the core (which is commonly a bad idea, yes, but Pico is still young), so @gilbitron can decide whether to accept this or not.\n\nI thought the initial idea is obvious - to prevent directory listing :)\n\nHmm, I don't have that problem?\n\nOu, Yup. So I needed to write a plugin for myself =)\n\nThat'd be cool indeed, :+1: \n. Hmm, I might add this PR to my TIL (Today I Learned). I'm not a pro when talking about this stuff, the blog is actually my first web-project. It's currently running on WordPress CMS, but I found out it was/is slightly painful to templatize while Pico is pretty straightforward and easy to maintain, so I hope I can contribute it back (now or later) :)\n. Awesome! Here, a cookie for you: :cookie: \n. I don't think it's an issue in Pico. After googling around, I can conclude it's rather a browser/ISP/LAN/... issue than Pico. Did you got that message when entering your site only or also in other sites?\n. I'm also not a pro in PHP, but I would start to disable ALL plugins and check whether you've still this issue with the core of Pico (which I doubt, it runs well here - or try to reinstall the core perhaps). If the core is working smooth, then start to enable the plugins (everything under the plugins dir) one-by-one (by moving it to another directory outside the plugins/ directory, so this plugin will not load) until you got the error message again and report this issue to the plugin maintainer perhaps :) \nIt could be also an hosting issue, but let's first see whether this issue is caused by one of the plugins or in the core of Pico before unnecessary :scream:-ing the system admin from the host service :wink:\n. Can you describe your directory structure by example and the url where this goes wrong?\n. see https://github.com/PhileCMS/Phile/issues/57 \n. Looks like the same as #68 , perhaps take a look at it?\n. They are not removed, it's Git thinking it's removed, but they are just moved to another directory, quite strange...\n. ",
    "flashpixx": "Yes the blank lines fix the problem\n. IMHO this does not work, because I can only read the meta data from the current page, but for sorting I need meta data of all pages. Picos config.php supports sorting:\n// Order pages by \"alpha\" or \"date\"\n$config[\"pages_order_by\"] = \"alpha\";\nI think I will patch this option with the \"meta data\"\n. ",
    "jumelles": "Sorry, that's a link left over from a workaround I tried! I've changed it\nnow.\nOn Mon, Dec 16, 2013 at 7:24 AM, Snip1 notifications@github.com wrote:\n\nOn 2013-12-15, at 10:58 PM, jumelles wrote:\n\nHello,\nI'm not sure what else to try since I've gone through all the issues on\nhere. I'm running PHP 5.4.9-4ubuntu2.4 on my own server. I can access .md\nand .txt files in subdirectories just fine, but if I try to go to (for\ninstance) my contact page I get a 404.\n\nWhen I hover the contact url on the home page, I get http://dividedframe.com/?contact. http://dividedframe.com/?contact...\nwhy does the ? show up?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/125#issuecomment-30663787\n.\n. \n",
    "teuio": "I am having similar redeclaration problem with nginx. Commenting out the require (require(LIB_DIR .'pico.php');) from index.php fixes the problem.\n. ",
    "int3rlop3r": "I dont think this has anything to do with nginx. I came across the same problem using apache.\n. ",
    "outrunthewolf": "A weird one :monkey_face: \n. would changing the line:\nrequire(LIB_DIR .'pico.php');\nto\nrequire_once(LIB_DIR .'pico.php');\nfix the issue? \n. Made a p/r to update the index file, should patch it for now. \nhttps://github.com/gilbitron/Pico/pull/141\n. @picocms Cheers dude \n. ",
    "andreburgaud": "I just faced the same problem after installing a plugin via composer. Composer generates file vendor/composer/autoload_files.php with the following content:\nphp\n<?php\n// autoload_files.php @generated by Composer\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\nreturn array(\n    $baseDir . '/lib/pico.php',\n);\nThis conflicts with loading pico.php in index.php. I'm not sure what should be the best approach. For now commenting either line works. Any suggestions from the PHP experts? \n. ",
    "pfiaux": "Commenting one of them out is definitely the right approach. I would opt for the one in index.php.\nComposer is actually configured to insert that statement which makes sense. If however you wanted to remove it from composer you'd have to go to composer.json and uncomment the following lines:\n\"autoload\": {\n    \"files\": [\"lib/pico.php\"]\n}\nThen when you run the install it should not generate the statement any more. But again I'd say the composer way is a bit more elegant.\n. You could also use twig's sort function.  But it probably wouldn't help much for a custom order unless you're trying to sort by index or reindex the pages array beforehand:\n{% for user in users|sort %}\n    ...\n{% endfor %}\nhttp://twig.sensiolabs.org/doc/filters/sort.html\n. ",
    "scottzirkel": "Same issue here. Changing to require_once cleared it up for me.\n. ",
    "hongster": "Thanks @outrunthewolf. Can @picocms please accept his pull request?\n. ",
    "iign": "This works great for me. Thanks. Would be great to see it pushed by @picocms \n. @picocms Thanks, mate!\n. ",
    "picocms": "Done, sorry about the delay.\n. Many thanks @theshka!!\n. ",
    "acstll": "@Jecomire @gilbitron well it's a shame this project has no tests, because I'm not 100% sure I'm right but\u2026\nThe $data['author'] gets set to an empty string here: https://github.com/gilbitron/Pico/blob/master/lib/pico.php#L172, as all other meta tags variables in case you don't give it a value on the .md file. So the change should be unnoticeable. (I did a var_dump of $data on the example site and it looks right.)\nApart from that, Twig doesn't care about unsetted vars if you configure it that way. So you'd should have no problem anyways.\nI'm not a PHP developer so I apologize if I'm doing something wrong.\n. ",
    "khanduras": "Couldn't you have a defined string like \"Unknown\" or \"N/A\" that could be the ultimate backup for any undefined meta variable?\n. ",
    "camelCaseWeb": "+1 \nI'm struggling with the same behaviour here\u2026\nI want to use Pico primarily for code documentation and lots of my code-to-be-documented is php!\n/**\n     * title\n     *\n     * @var string\n     * @validate NotEmpty\n     */\n    protected $title;\nProduces (only) the Following output:\nprotected $title;\n. Can't line 138 (pico.php)\n$content = preg_replace('#/\\*.+?\\*/#s', '', $content); // Remove comments and meta\nbe modified to only match __not-__indented comments? or only the first Comment in document? \nOr, since line-through (~~~) is not used, could that make a reasonable wrapper for the pagemeta?\n. OK... Totally new to Regex, but this is a dirty workaround that solves the problem for today, \nassuming there will always be \"Title: \"  between / and / ;)\n$content = preg_replace('#/\\*(.*?)(Title: )(.*?)\\*/#s', '', $content); // Remove comments and meta\nI don't see why any other comment than the first (pagemeta) should be removed from $content in the first place! Isn't it bad practice to use comments in markdown formatted text in any other context than codeblocks?\n. ",
    "berthelemy": "Thanks @Jecomire It seems to work perfectly. Any reason why this shouldn't be incorporated into the original Pico?\n. Ah, thanks. I hadn't seen that original bug. Closing this one.\n. Hi Philipp,\nI\u2019m not an expert with Pico, but perhaps you could define an additional metadata field (order) in each page, and then use that in the theme?\nRegards,\nMark  \n\nMark Berthelemy\nManaging Director\nTel: 01773 881 227\nMob: 07922 146 761\nWeb: www.wyversolutions.co.uk (http://www.wyversolutions.co.uk)\nWyver Solutions Ltd | Company number: 5731173 Registered in England | Registered address: First Floor, 6 Bridge Street, Belper, Derbyshire, DE56 1AX\nOn Tuesday, 7 January 2014 at 13:04, Philipp Kraus wrote:\n\nHello, I have defined in my index.html\n{% for page in pages %} {% if page.title %} {{ page.title }} {% endif %}^M {% endfor %}\nand I would like to sort the pages array or would like to change the ordering of the output list. A the moment the pages are list in lexicographical order, but I would like to define an own order.\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/gilbitron/Pico/issues/132).\n. Ah, yes. I see what you mean.  \n\nIn which case, could you order by URL? Put a prefix like 05_, 10_ etc at the beginning of each filename?  \nMark  \nOn Tuesday, 7 January 2014 at 19:46, Philipp Kraus wrote:\n\nIMHO this does not work, because I can only read the meta data from the current page, but for sorting I need meta data of all pages.  \n\u2014\nReply to this email directly or view it on GitHub (https://github.com/gilbitron/Pico/issues/132#issuecomment-31771958).\n. \n",
    "enrique3": "@pbloem I ran into this problem while copying over a blog. I found that if index.md and page.md have the same title, you are unable to visit page.md and what is displayed is index.md.\nWhat worked for me is using adv-meta by shawnsandy. I then assigned the title of the document to a new value while changing the actual title to \"Title - Category\"\nTitle: <document title> - <category>\nSlug: <document title>\nNow using this example will work around the issue above and produce a working link and a title without it being \"Title - Category\".\n{% for page in pages %}\n<a href=\"{{ page.url }}\">{{ page.slug }}</a>\n{% endfor %}\n. @Nimrod I think you are missing the .htaccess file in the root directory of Pico with the following information\n```\n\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . index.php [L]\n\nPrevent file browsing\nOptions +FollowSymLinks\nOptions -Indexes\n```\nThis page looks completely different than this page http://iemagoo.nl/blog/\nI think one of the 404 error pages is the servers and the other is Pico...\n. @Jecomire  Right but, if you were to use git clone to your desktop and then ftp the finished product to a server via \"window\" to \"window\".. might not copy the hidden files. Use Filezilla to verify that the .htaccess is in the directory.\n. ",
    "superbilk": "Short: You can access it with\n{{ meta.kurz }}\nLong:\nFrom my Meta-Plugin\npublic function before_read_file_meta(&$headers)\n{\n    $headers['subtitle'] = 'Subtitle';\n}\nIn my page.md\n/*\nTitle: Product Owner Course\nSubtitle: Methods and skills that will make you better and more effective in your new role\n*/\nAnd in my template.html\n<div class=\"page-header\">\n  <h1>{{ meta.title }}</h1>\n  <p class=\"lead subh1\">{{ meta.subtitle }}</p>\n</div>\n. ",
    "shopuz": "I just figured out that issue #128 was because of the trailing slash :)\n. ",
    "zenimot": "Sure.\nThe website is iemagoo.nl\nPico is in the sub-folder: blog (e.g. iemagoo.nl/blog)\nIn the config I've added 'pages_order' and 'pages_order_by'.\n. Yes. I did set the base url in the config file (without trailing slash).\nI found the error_log and see 2 errors. \nPHP Warning:  file_get_contents(/home2/zenimotc/public_html/domain/blog/content/404.md): failed to open stream: No such file or directory in /home2/domain/public_html/domain/blog/lib/pico.php on line 53\nPHP Fatal error:  Class 'Twig_TokenParserBroker' not found in /home2/xyz/public_html/domain/blog/vendor/twig/twig/lib/Twig/Environment.php on line 1115\n. The 404.md is there now, but doesn't change a thing.\nAs for the home2, that is something the hosting company has set. That is\nnot something I can change. (?)\nI would think the permissions are set right. What settings would I look for\nspecifically?\nI still find it strange I can view the index page of blog posts, but not\nthe single blog post pages.\nAnd I think the PHP Fatal error is the problem (and not the PHP Warning of the missing 404). \nPHP Fatal error:  Class 'Twig_TokenParserBroker' not found in /home2/zenimotc/public_html/@dev/test/blog/vendor/twig/twig/lib/Twig/Environment.php on line 1115\n2014-02-24 20:02 GMT+01:00 Christian notifications@github.com:\n\nAnd did you have /home2/zenimotc/public_html/domain/blog/content/404.mdexactly?\nDo you have home2 with 2 on the end? =)\nAnd is there right permissions for web-server to access?\n\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/146#issuecomment-35922027\n.\n\n\nwww.zenimot.nl | @zenimot http://www.twitter.com/zenimot\n. The .htaccess seems to do the trick!\nThank you all for helping.\n2014-02-26 23:14 GMT+01:00 enrique3 notifications@github.com:\n\n@Jecomire https://github.com/Jecomire Right but, if you were to use git\nclone to your desktop and then ftp the finished product to a server via\n\"window\" to \"window\".. might not copy the hidden files. Use Filezillahttps://filezilla-project.org/to verify that the .htaccess is in the directory.\n\nReply to this email directly or view it on GitHubhttps://github.com/gilbitron/Pico/issues/146#issuecomment-36184347\n.\n\n\nwww.zenimot.nl | @zenimot http://www.twitter.com/zenimot\n. The .htaccess got my blog working.\nDon\u2019t know if it was a Twig error.\n--\u00a0\nTom Oude Egberink\nSent with Airmail\nOp 22 april 2014 at 10:25:05, Maciej Jankowski (notifications@github.com) schreef:\nHey @Nimrod @allengaller\nI ran into a similar error message while trying to use Twig.\nDid changing the .htaccess helped with twig error?\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "adrianvalenz": "I don't know why my local pages didn't work either. Kind of a bummer. So I just coded my site live in a different directory\n. ",
    "maciejjankowski": "Hey @Nimrod @allengaller \nI ran into a similar error message while trying to use Twig (without cms, just by itself)\nDid changing the .htaccess helped with twig error?\n. ",
    "Manaus": "Thanks, \nI see a \"PHP Fatal error:  Cannot redeclare class Pico in \"/Users/.../lib/pico.php on line 12\"\n. ",
    "yuwash": ":+1: For php-non-experts, an example setLocale in the config.php file could be useful. (replacing the $config['date_format'] or adding to it, if it still seems to be useful)\n. ",
    "dkyme": "Since I'm a php-non-expert, where do I got to add the setLocale?\nMy German Page looks strange with English Months\n. Thank you @PhrozenByte , works fine!\n. Happy New Year to you all!\n@PhrozenByte thank you for the preview, I'm looking forward to the new Version of Pico. Specially the possibility of data files let me try the preview, buuuut.... I couldn't make it work.\n```\nMoved Temporarily\nThe server encountered an internal error or misconfiguration and was unable to complete your request.\n...\nAdditionally, a 302 Found error was encountered while trying to use an ErrorDocument to handle the request.\n``\nshowed up after I generated the password (in my case 1234) and posted$config['PicoAdmin']['auth_token'] = '$2y$12$YVdIOfOsXYCdm/MWPtHqC.rKuukJLOp6Ljqp.MudY7seH5mPbx/Hy';\n`\ninto confi.php at the plugin section and clicked on the link.\nManually i can go to admin/content/edit/index and everything is working nicely - Thanks again!!\nAlso, directly going to admin/login filling in the password, nothing happens, no redirect which I assumed.\nBut all in all, thank you for the new PlugIn, letting me learn a lot on how to do things in Pico and Twig ... and of course thank you, @smcdougall and @theshka for the effort you put in Pico.\nYours,\nCornelius. @PhrozenByte, no problem.\nBrowser is Chrome latest Version 55, and Webserver both Apache, one Synology and a shared Host.\nBut on shared Host the new .htaccess didn't work at all, I could not get clean Urls at all, only ?sub/page\n. @PhrozenByte: the error.log of synology complains:\n\ncomm with server \"/php-fpm-handler\" aborted: error parsing headers: malformed header '307 Temporary Redirect', referer: http://192.168.0.111/pico2/admin\n\nSo far I failed setting up a separate PHP log on my shared host, since I'm more an Copy'n'PHPaster :-(\nI edited .htaccess in beginning with\nphp_flag log_errors on\nphp_value error_log \"/www/htdocs/xxxxxx/errorlog/errorlog.txt\"\nbut no file was written, or overwritten (after creating an empty file) in the folder which is chmod0777.. Thanks @PhrozenByte ... that works wonderful on my Synology NAS!\nOn shared Host the URL redirect doesn't works properly.\n/?sub works - /sub not\n/?sub/page AND /sub/page/ works - /sub/page Not\n/?admin redirects to /admin/content/edit/index but shows frontpage\nif I use the .htaccess of Version 1.0.4 everything works fine. \nbtw: this would be better in another issue queue? For example #334 ?. @PhrozenByte: Don't slap me \ud83e\udd14  After pasting the vardumps to pastebin, and deleting the line from Pico.php, I got confused by the vardumps still showing up.\nIt came to my NewbieMind that emptying the cache sometims solves problems.\nEverything is working fine and as expected! Thank you! \ud83d\ude04 \nIs it an expected behaviour that navigating to /admin the redirect immediatly goes to /admin/content/edit/index while showing the login?. Have you had a look at the Plugin TooManyPages, @omniperspective ?\nhttps://github.com/bigicoin/PicoTooManyPages\n. ",
    "artmonger": "Same here. \nWarning: require_once(__DIR__composer/autoload_real.php) [function.require-once]: failed to open stream: No such file or directory in /WebSite/pico/vendor/autoload.php on line 5\nFatal error: require_once() [function.require]: Failed opening required '__DIR__composer/autoload_real.php' (include_path='.:/usr/local/lib/php:/WebSite/php/pear/PEAR:/WebSite/cgi-bin:/WebSite/php') in /WebSite/pico/vendor/autoload.php on line 5\n. ",
    "jfarthing3": "Answered in https://github.com/picocms/Pico/issues/65\nBasically, you need PHP 5.3\n. ",
    "natir": "May be you can just add part of twig template to call your block in markdown source, it's work for html code. Markdown make no changement in source if isn't use markdown syntaxe. \n. If your web server is nginx see this wiki page https://github.com/gilbitron/Pico/wiki/Using-Pico-with-Nginx\n. ",
    "Fatalerr": "make sure there is a 'index.md' in the 'sub' directory at least.\n. ",
    "lardern": "Thank you\uff01I have solved this problem.I move the file .htaccess under the documentRoot,then it work better\n. ",
    "popp3000": "It doesn't work for me. How did you get this working? \nIf I write {{ page.directory_url }} in index.html, the output is http://example.com/sub which is more or less the same as the output of {{ page.url }}. \nI'd like the output to be http://example.com/content/sub to access the images in the folder content/sub/\n. ",
    "Shastick": "I actually get the /content/ non text content using url rewriting with Apache. The directory_url allows me to build the links to the images before they are rewritten.\nIt is similar to page.url, but the directory_url allows me to link to an image in the same way both in an index.md page or any other .md page. \nEg: in the directory content/sub_a/sub_b/ I have an index.md and a page.md. An image (linked from both the index.md and page.md) is stored at sub_b/lolcat.png. Now, in the template, using the page.directory_url, I get the sub_a/sub_b/ string, regardless of if the link that is accessed is sub_a/sub_b/,sub_a/sub_b/index or sub_a/sub_b/page. From the index.md and page.md I can refer to the image by its filename, lolcat.png\nI used rewriting because from the template it is not possible (or hard?) to change the lolcat.png to the full content/sub_a/sub_b/lolcat.png url, whereas doing a relative reference to lolcat.png from a page having url /sub_a/sub_b/page gives the /sub_a/sub_b/lolcat.png url, which is then rewritten by Apache when the query happens.\nThe rewriting rule if it can help:\n<IfModule mod_rewrite.c>\nRewriteEngine On\nRewriteBase /pico\nRewriteCond %{REQUEST_FILENAME} !content/\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^/?(.+\\.(gif|jpg|png|txt|pdf|zip))$ content/$1 [L]\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . index.php [L]\n</IfModule>\nThat works for me in my setup. Granted, directory_url might not be the best name for that ;)\n. ",
    "geedmo": "PhileCMS is more complex and it goes beyond the philosophy of Pico.\nJust my opinion, thanks anyway.\n. ",
    "mazuhl": "I think this might be what you're looking for (from the original project author):\nhttps://github.com/gilbitron/Pico-RSS-Plugin\n. ",
    "37dogs": "Try using draft. Here's a blog post about how to integrate the two. \n. ",
    "elbotho": "To clarify, the MIME-Errors are not your problem, but the modernizr-Error is?\nWhen and where does it appear? What else is happening?\n. Very nice! Maybe this should be in the wiki?\n. What links? Can you provide a link to your site?\n. The documentation of the plugin says nothing about extra pages. But maybe you should ask them directly: https://github.com/szymonkaliski/Pico-Tags-Plugin/issues\n. There are also some questions over at stackoverflow.\nUnfortunately there is no picocms tag yet. But you can use pico to find them:\n http://stackoverflow.com/questions/tagged/pico\n. Ok. If you are indeed not trolling:\nThis is not a bug and this is not specific for Pico.\nSee http://stackoverflow.com/questions/497908/is-a-url-allowed-to-contain-a-space\nor http://stackoverflow.com/questions/1547899/which-characters-make-a-url-invalid\n. The links I posted tell you that you shouldn't use spaces in urls.\nTo solve your Problem rename the\nWelcome to My Website.md-file to\nWelcome_to_My_Website.md or something else without spaces.\n. ",
    "msharp1": "Sorry, I'm blind. It's there.\n. ",
    "jacmgr": "See install instructions here: https://github.com/gilbitron/Pico-Editor-Plugin\nYou decide on password and make the sha1 hash of the password and then cut and paste the hash into your plugin config file : pico_editor_config.php\n. ",
    "absoluto": "so i need an extra plugin to be able to login?\nwouldn\u00b4t it make sense to include this into the core? who does NOT want to login?\nthanks and greetings!\n. ",
    "dannymarx": "I have nearly the same problem.\nHer is the answer\nhttps://github.com/picocms/Pico/issues/55\n. ",
    "ciolben": "If you have IIS 8 or >,\nyou can translate the .htaccess rewrite rules into web.config in your root folder like this:\n.htaccess\n<IfModule mod_rewrite.c>\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d \nRewriteRule . index.php [L]\n</IfModule>\nOptions -Indexes\ninto web.config\nxml\n<configuration>\n    <system.webServer>\n        <!-- ... your config here ... -->\n        <rewrite>\n            <rules>\n                <rule name=\"Imported Rule 1\" stopProcessing=\"true\">\n                    <match url=\".\" ignoreCase=\"false\" />\n                    <conditions>\n                        <add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" ignoreCase=\"false\" negate=\"true\" />\n                        <add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" ignoreCase=\"false\" negate=\"true\" />\n                    </conditions>\n                    <action type=\"Rewrite\" url=\"index.php\" appendQueryString=\"true\" />\n                </rule>\n            </rules>\n        </rewrite>\n        <directoryBrowse enabled=\"false\" />\n        <!-- ... your config here ... -->\n    </system.webServer>\n</configuration>\nIf you have an older version of IIS, you need the specifiy the rewrite section as follow before <system.webServer> : \nxml\n<configSections>\n    <sectionGroup name=\"system.webServer\">\n        <sectionGroup name=\"rewrite\">\n            <section name=\"rewriteMaps\" overrideModeDefault=\"Allow\" />\n            <section name=\"rules\" overrideModeDefault=\"Allow\" />\n        </sectionGroup>\n    </sectionGroup>\n</configSections>\nYou can find more help here.\n. ",
    "ItsNathanG": "@zachdyer Just look in the source code. (:\nFor example, in pico.php there is a function on lines 131-145:\n``` php\n     /\n     * Parses the content using Markdown\n     \n     * @param string $content the raw txt content\n     * @return string $content the Markdown formatted content\n     /\n    protected function parse_content($content)\n    {\n        $content = preg_replace('#/*.+?*/#s', '', $content); // Remove comments and meta\n        $content = str_replace('%base_url%', $this->base_url(), $content);\n        $content = MarkdownExtra::defaultTransform($content);\n    return $content;\n}\n\n```\nThis parses the raw content and returns the Markdown formatted content. \nIt is then rendered on line 107: $output = $twig->render($template .'.html', $twig_vars);\n. ",
    "phanos": "you could create a file content/docs.html.md\n. ",
    "CodeAlDente": "It's just common to use extensions for pages. I'd like to have all pages named foobar.html instead of having a directory structure. Also, it would be nice not to go way too deep with the structure, but to use dashes or underscores.\nSo instead of /foo/bar/sub/page it should be /foo-bar-sub-page.html or /foo_bar_sub_page.html. For ethically reasons and for Google (= http://www.thesempost.com/the-importance-of-url-structure-according-to-google/).\n. ",
    "andrewminton": "Figured it out!\nUsing the before_parse_content hook.. woop :)\n. Ignore me.. stupid file permissions on mac.\n. ",
    "masfur": "Solved with html\n\n. ",
    "okkhoy": "@masfur  could you provide an example?\nwhere have you placed the image(s)? is it in the content folder or elsewhere on the internet?\nI have the images along with the markdown files, however the image is not displayed on the page.\ni use  format. doesn't seem to work.\n. ",
    "loganmhb": "What \"strange data\" does current_page.url display for you -- can you give more context? That seems to work for me.\n. ",
    "pywebdesign": "I just found out your cms, it is very amazing! good work!\n. ",
    "gidlov": "Added arbitrary header metadata also. :)\n. ",
    "CaptainPackers": "Thanks. I will have a look.\n. Thanks. I will look at these too.\n. It looks like that forum was intended for pico editor\n. I'm using Gilberts template and the index page shows by blog but the date is '70-0101', almost as though it doesn't recognize the date format and is returning the equivalent of zero (0) [January 1, 1970 is what is returned by a lot of program when 0 is stored as the date integer]. I am trying to use a 'YY-MMDD' date format. \nAlso, no hyperlinks are being created to the blog, but I suspect that could change if I ever get this date issue figured out.\n. ",
    "grabur": "Simply:\n{% for page in pages %}\n    {% if page.url ends with '/' %}\n        <li><a href=\"{{ page.url }}\">{{ page.title }}</a></li>\n    {% endif %}\n{% endfor %}\nI had some issues with an earlier version of Twig, but updating  the library to the 1.16 series fixed it.\n. If you have Pico installed in your document root, use paths relative from that.  You can then use a forward slash at the beginning of your asset paths. E.g.\nsrc=\"/static/flicks/groovy-movie.webm\"\n. Out of the box install in sub folder in the web root (version 0.8 on Debian Wheezy) works for me with no path definitions added to the config file.  They auto resolve.\nYour web server log extract suggests a file is being requested with an absolute file system path, rather than a web path.\nI'll guess that you are trying to use the base_dir variable to load a web asset?\nIf you have a public asset (stylesheet, images etc) and you want to pull them into your theme use theme_url.\nAdding {{theme_url}} in the body of theme/default/index.html outputs the following for me:\nhttp://localhost/sandbox/Pico-master/themes/default\nIf I were wanting to use my own theme, I'd copy the default folder, and give it a name say 'example', and specify it in my config.php:\n$config['theme'] = 'example';\nYour theme_url will now read something like:\nhttp://localhost/sandbox/Pico-master/themes/example\n. ",
    "dgleba": "Thank you --- that worked:\nI wrote myself the following notes:\nFor video, the  'src='  should be from the web root with a preceding slash.\nsrc=\"/1test/pico2/files/slidepedestalswrong.webm\"\nThe above example is for a file in C:\\p2\\xampp\\htdocs\\1test\\Pico2\\files\\slidepedestalswrong.webm. The web root is: C:\\p2\\xampp\\htdocs.\n<div>\n  <video controls=\"controls\" width=\"520\"> <source src=\"/1test/pico2/files/slidepedestalswrong.webm\"\n     type=\"video/webm\"> Your browser does not support the video  tag. </video> \n    <br>\n</div>\n. I found this\nhttp://stackoverflow.com/questions/990392/htaccess-rewrite-to-redirect-root-url-to-subdirectory\nIt seems to allow redirect to a folder.\n. ",
    "the-drunk-coder": "Hmm, starting again from scratch in the root folder, things work out well ... strange ... \n. ",
    "lf94": "Yes, I had the same issue. There were a couple of things that had to be corrected.\nOn debian sid:\n1. Went into /etc/apache2.conf and added AllowOverride all to /var/www/ Directory section.\n2. a2enmod rewrite\n3. service apache2 restart\n4. Go to your Pico CMS installation. Make sure you have the .htaccess file! It is NOT INCLUDED WITH THE .zip FILE. If you don't have it, copy it from https://github.com/picocms/.\n5. Now this is the step that really shot me in the foot. At this point you should be getting 403 errors. I did a chmod -R 777 to my folder, but you are better off handing your Pico CMS folders over to the apache user. Do chown -R www:www /your/pico/installation/folder.\nI hope the maintainers post a guide for others, I spent 2 hours just scratching my head wondering why it wasn't working correctly. Never had this issue with Kirby CMS, another flat file based CMS.\n. ",
    "PhoenixPeca": "OHHH!!! sorry for my post for I added a joke(You just misinterpreted it as an issue unrelated to PICO). I thought it was funny. LET ME CLEAR THIS.\n\nWhat I mean is that I created a page inside the content folder.. The page was named Welcome to My Website, \n\nIt was listed in the navigation bar,\n\nbut when I clicked the link in the navigation bar I got a 404 error. Just try it for yourself and see what I mean... \n. That makes sense. I understand your point. But in my humble opinion, It's not just my problem, It's every user's problem. \nIf it's not a bug then why can't Pico CMS identify markdown file named with spaces so that it can exclude it in the listing in the navigation bar? I didn't even received a warning saying \"The Markdown File you Created has spaces and Pico doesn't know how to deal with it or similar for debugging purposes. All I get is a 404 error saying the file doesn't exist in the content folder, in fact it do exist.\"\nI tried another CMS (Grav) to find the same problem but I can't find the problem with Grav, I think it is Pico's problem. The developer of Pico should write a code that deals with this problem. Of course not all people know that as much as possible he/she should not use spaces in naming files in the internet unless they know what and how to use (%20) is, right? Sadly Pico doesn't support (%20), however, I expect this to be fixed in the next release of Pico. Anyway, this is just a simple problem, there's no big deal. If you insist to consider this a bug. It's up to you. I understand your point. Thank You!! and Merry Christmas.\nI'm sorry for my English if you find it wrong in terms of grammar.\n. OKAY! :)\n. ",
    "xor-gate": "I have exact the same problem:\nOS: Arch Linux\nHTTP Server: Apache Server version: Apache/2.4.10 (Unix)\nPHP: 5.6.3\nI tried to debug: https://github.com/picocms/Pico/blob/master/lib/pico.php#L186\nThen var_dump($config) resulted in NULL. Which seems not to load the variable. \nI tried to output the result of include_once and it returns true.\n. ",
    "diversemix": "You are correct. These lines are still commented out ... I was misled by the comment \"Override any of the default settings below:\" .. Can I suggest the comment is changed to something like \"Please un-comment this code to override any of the default settings below:\"\nI think my preferred option would not to have the code commented out, is there a reason for this? \nAnyway thanks again for you help :+1: \n. ",
    "bitwombat": "Hmm... well using my exact case:\nhttp://pico.localhost/productive_property/energy/windows\nwith \nBASIX rates the U-value of various window types and assemblies [here](specs/windows_basix_specs.pdf)\nGives me a URL of http://pico.localhost/productive_property/energy/specs/windows_basix_specs.pdf\nMissing the \"windows\" subdir.  If I put that in, then the content is not relocatable.\n. For what it's worth, Kirby and Grav both take that same MD to be relative to the current page (the behaviour I hope from Pico).\n. Yes, pico makes a relative URL like <a href=\"specs/windows_basix_specs.pdf\">.  Which I would have seen if I had done my due diligence (sorry).\nSo somehow I was browsing to http://pico.localhost/productive_property/energy/windows rather than http://pico.localhost/productive_property/energy/windows/ (trailing slash)\nGrav heads this problem off at the pass by making the link like\n<a href=\"/energy/windows_basix_specs.pdf\"></a>\nSo I think that may make this issue status \"yeah, but still\".  Pico makes a relative link exactly as specified in the MD, but if it added the last path element, the link would work if the user did or didn't have a trailing slash on the URL.\n. ",
    "mydalon": "I assume, this is because in your URL http://pico.localhost/productive_property/energy/windows\n\"windows\" is not a directory but the filename. So it gets removed when the url is created by the browser. \nThis is most likely not a pico/twig issue. From what I gather pico should create a <a href=\"specs/windows_basix_specs.pdf\" ...> link, leaving the url as it is. Check this in your website sourcecode, and adapt your url structure accordingly.\n. Is this the reason why there are quite some open pull requests? Does it still make sense to try to collaborate on this project?\n. ",
    "fulldecent": "Bump. Easy, simple fix. Ready to go.\n. ",
    "coofercat": "Another use case (with a vanilla download of Pico): Create /content/new.md and put some content in it. Check on the site, and sure enough, there'll be a title in the navigation with a link to /new.\nNow go and rename it to new.md.disabled. Check the site again, the link will still be there, but to /new.disabled, which will 404 if you click it.\nNext, apply my little adjustment and try this again - now the file is (correctly) ignored and not present in the navigation.\nAs for plugin PHPs - I can't get your suggestion to work. If I create test.php and put some junk in it so that it crashes out the request if it's included. If I name it test.php, _test.php, _test.php.disabled, ilike.phpprogramming or pretty much anything else it's still loaded.\nOr... am I doing something crazy?\n. It's starting to sound like we agree on the problem...? I don't think it should be necessary to remove the 'extension' from the middle of a filename to have it ignored though. Some text editors just add a \".bak\" or similar to the end of the filename when they save out drafts, and those shouldn't be included in file scans.\nI'm happy to differ about the implementation of a fix though (my change was quick, rather than high quality). Using strpos() looks like you'd end up doing something like:\nif(!$ext || strpos($file, \".$ext\") == (strlen($file) - strlen(\".$ext\"))) $array_items[] = preg_replace(\"/\\/\\//si\", \"/\", $file);\nAlternatively, I guess you could also do something like:\nif(!$ext || substr(strrchr($file_name,'.'),1) == $ext) $array_items[] = preg_replace(\"/\\/\\//si\", \"/\", $file);\nSome looking around suggests that actually, the solution should be more like this (not tested it yet though):\nif(!$ext || pathinfo($file, PATHINFO_EXTENSION) == $ext) $array_items[] = preg_replace(\"/\\/\\//si\", \"/\", $file);\nIt would take some benchmarking to figure out which is the quickest and lowest memory, but I'd suggest the pathinfo() solution is the most \"PHP\", and so probably the fastest - all the others (my preg_match() included) are essentially recoding a built-in function, which probably isn't such a great idea.\n. I just had a look at Symfony Finder - it looks pretty nice. Whether to use it or not, and indeed to implement some unit/performance testing looks more like a feature request rather than this little bug report though (as much as I agree with both sentiments).\nWhen I get a chance I'll produce a PR for this specific issue, although I understand that it'll probably sit in the pull queue for quite a long time :-(\n. ",
    "four43": "+1\n. ",
    "pschmitt": "There is another rather active fork, PhileCMS: https://github.com/PhileCMS/Phile\nPlugins are not compatible anymore though.\n. ",
    "romanov": "@gilbitron PHP 5.4? How about 5.3? http://phpversions.info/\n. ",
    "MorganConrad": "First, want to ask what is the status of these efforts?  Been playing briefly with Pico and like a lot of it, but have a couple of suggestions.  Might do them myself for play.  But might be better to tag along with your guys efforts.   \nIn get_pages():\n1. Don't read all files recursively from the root content folder for all urls.  If you are in a subfolder, i.e. \"blogs\", read pages from that folder, i.e. content/blogs, not from content.  With perhaps a \"don't recur\" option.\n2. Improved parsing of the page meta stuff.  Ideally, it reads all the jey value pairs between some delimiters, not just the title, url, ... excerpt based upon a complex regex.  So you don't need to write an extension to add your own tags, they sho up automatically. \n. ",
    "fourtonfish": "Is there a way to do this in the latest version?\nThe best I could do was something like this:\n{% include 'contribute.html' with {'relative_path': current_page.url | split(base_url) | last } %}\nThen in contribute.html, I have this:\n<p>\n  This website is <a href=\"https://github.com/botwiki/botwiki.org\">open source</a>. <a href=\"https://github.com/botwiki/botwiki.org/tree/master/content{{relative_path}}.md\">Click here</a> to edit this page.\n</p>\nThis obviously doesn't work, since some files are index.md and some are, for example, holidaybot4000.md.\nAlso, I believe that from the snippet above it should also be clear what I'm trying to do.\nThe only solution I can think of is something like a custom Twig function, but I can't really see how to add one.\nAny help would be very appreciated.\n. When ordering posts by date, would it make more sense to use something like this?\nif ($order_by == 'date' && isset($page_meta['date'])) {\n      $sorted_pages[$page_meta['date_formatted'] . $date_id] = $data;\n      $date_id++;\n  } else {\nCurrently it's this.\n$sorted_pages[$page_meta['date'] . $date_id] = $data;\nThis seems to be the only thing that works for me, as I'm using the date format of MMMM DD, YYYY (eg August 31, 2015).\n. @PhrozenByte \nWell, if you go to https://botwiki.org/tag/twitterbot, the posts are now correctly ordered while using the MMMM DD, YYYY format (see this for an example).\nIf I go back to using $page_meta['date'] for sorting, it seems almost random.\nFeel free to clone https://github.com/botwiki/botwiki.org and play with it locally.\n. @PontusHorn Ah, my bad, I think I only looked at the most current stable, not this PR.\nWell, great job, then :-)\n. @dav-m85 And yet it got fixed.\n. @PhrozenByte Ah, can you elaborate on that? Isn't 443 the HTTPS port?\n. Ah, I think I know what's going on now, it's CloudFlare. Thanks a lot!\n. ",
    "dmelo": "bump\n. Hi @derhuerst . About git subrepos, I think it could be a solution. But composer already covers that. It would be redundant to manage the dependencies both through git submodule and composer. Moreover, composer is (in my opinion) far better choice for dependency management.\nGiven that you have chosen composer for dependency management, you don't need to keep your dependencies (even as submodules) inside your project. Projects like zf2 and apigility are good examples of how to use composer with git.\nI'm not sure if I understood you last remark. The config.php is a file that the user must edit. But you don't want those changes to be tracked by the Pico repo. A good solution is to 1) create a config.php.template file, that is tracked by git and 2) list the config.php into the .gitignore. This way, the user can copy config.php.template to config.php and edit it, without get the changes tracked on Pico.\n. bump\n. am I missing something? There are many open pull requests for this projects and the latest closed pull request is from February 2014. Is this project continuing on another fork, or something?\n. Makes perfect sense to me. I will go over the docs, to modify it where it sees fit.\n. Thank you for the efforts.\nI have changed my Pico to inform when a page is a symlink. Then on my theme I only list the pages that are not.\nBut I agree with @PhrozenByte when he says this is better suited to be on a Plugin. I will transform this change into a plugin.\n. Modify Pico to inform if a page is a link is easy. I have added something like \n$data['symlink'] = is_link($page);\nInside get_pages method. It works fine. The problem is. I can't find an easy way to implement this as a plugin. The hook get_page_data don't have the $page. To use the get_pages hook seems like an overkill, since I would have to recalculate the key for $sorted_pages and that require rebuild $page_meta\n. I've installed pico and wanted to test if everything was working:\ncomposer require picocms/pico\ncd vendor/picocms/pico\nphp -S 0.0.0.0:8899\nWhen I accessed http://localhost:8899 however, it was giving an error message. Saying it couldn't find vendor/autoload.php. Just thought it would be nice if Pico worked right away even installed that way.\nFor debugging, while I'm implementing my own public/index.php (which creates a instance of Pico), it is good to be able to compare it with a working instance (php -S on the vendor/picocms/pico).\n. I have changed the way to look for autoload.php, on the PR.\n. Is it better to check file_exists on both locations instead of fixing the set_include_path? I truly don't know.\nThere is no major improvement with this PR. It would just keep Pico working OOTB even if loaded as a dependency.\n. ",
    "derhuerst": "Have a look how Kirby structures its git repo.\n\nIt is a good practice to keep all the vendor directory out of git.\n\nYou could use git subrepos to link to the original vendor repo. That's a clean and practical solution.\n\nThe same goes to files that are meant to be edited, like config.php and the content directory.\n\nIn case you split up the project into a core and a deploying repo (like Kirby did), I think its not necessary anymore.\n. I agree.\n. ",
    "MatthiasKauer": "After getting the site up the index.md refers to a physical location content/index.md which isn't there anymore for instance. It is called content-sample now.\n. ",
    "aidangarza": "I suggest adding reflex. I just made a really simple site using Pico and Reflex together, and it turned out quite nicely IMO --> demo\n. ",
    "HugoGresse": "I have the same issue. Sure I will run composer update but the documentation say : \nFirst download and extract the latest version of Pico.\nUpload the files to your server (via FTP or some other deployment).\nThat's it. Tweak the .htaccess file if required.\nEdit : the last release zip (in github) contain the vendor folder\n. Thanks, it will be great to update the website\n. Ok, I will switch to Baun : https://github.com/BaunCMS/Baun\n. ",
    "gurustave": "Useful for any case where you want more dynamic content on individual pages. \nIE: You want a different random quote or image to be displayed on a page each time it is loaded.\nIE: You want to load data in a separate file or site (Like when making API Calls) and load it into pages.\nThough thinking this through, this could add a tad bit of overhead, I will rewrite it as an option that is off by default and can be turned on in the config. \n. You can add PHP page parsing support via plugin, but to do so you basically need to bypass the calls to file_get_contents. which would add even MORE overhead to Pico. \n. That is a fair point. I am primarily a C developer (and sometimes a backend web developer in Node) So I don't generally have to deal with front-end views. Thank you.\n. ",
    "johnnywon": "Respectfully, .9 needs to be fixed before this project goes forward. If \"Pico is a stupidly simple, blazing fast, flat file CMS\" then I don't see why the functionality of .8 was scrapped for a command line install as a pre-requisite for making Pico work. \nThe dead-simple drag and drop and it works is what attracted me and my friends to Pico, v.9 absolutely should be even simpler to install and use.  \nDuplicate: #223 \n. Honestly, I do not have the skills to make the desired changes. Your efforts are much appreciated, especially from people like me who are more design than PHP expert. My suggestion would be to go back to the original ethos of Pico \"stupidly simple, blazing fast, flat file CMS\" and keep-on with a singular production branch that might error on the side of messy but \"stupidly simple\" and \"blazing fast.\" \nIf it is poor practice to have a /vendor folder, it should be weighed against the simplicity of install, especially for laypersons, since it would mean greater overall usage vs. organizational efficiency.  I think the growth and simplicity of Pico is credit to it's dead simple install and we must continue the cause. \n. I would recommend keeping it simple with the original ethos \"stupidly simple\" and \"blazing fast.\" \nAnything that requires an auto-installer script, or SSH access, or any dependency greater than PHP is unnecessary friction. \n. Eric & Mistergraphx I think have nailed it. The mantra of \"stupidly simple\n& blazingly fast\" should guide our decisions rather than introduce friction\nlike an installer script or create unnecessary complexity for the sake of\n\"being proper.\"\nOn Wed, Jun 3, 2015 at 5:30 PM mistergraphx notifications@github.com\nwrote:\n\n@rosewoodmarketing https://github.com/rosewoodmarketing :\nThe auto-installer can be a plugin, to keep the core of pico as stupid\nthat it say's ;-)\nI use a modified version of pico, but the goal is to install it locally\nfirst and publish and maintain your website(s) after. Once you have install\nan instance of Pico locally, you can clone it for your customers\u2026\nFor the other considerations, there is some plugins to do those jobs (live\nediting, wysiwyg, file management). I think the core of Pico must stay\n\"simple\", but the segmentation of the Baun core is interesting in some\npoints, actually Pico is just one class, and it's (or will) become to be a\nproblem/limit.\nJust for example, i 've to use Markdown Extra on some projects and\nParsedown by default \u2026 a formatter class that can be extended could be a\ngood point, a plugin class with a plugin description file could be another\n;-) .\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/picocms/Pico/issues/221#issuecomment-108621547.\n. I don't see why we have to run composer install when the previous update worked without it. You've created an extra and unnecessary step. \n. If it is \"good practice of keeping the vendor director out of git\" and \"Pico is a stupidly simple, blazing fast, flat file CMS.\" then why would you intentionally make this harder? This means I can't ask my clients to just download the zip and run it on their web server, they need SSH and install something they're not familiar with. This is a significant problem to real people. \n. \n",
    "rosewoodmarketing": "I'm going to add my little plug to emphasize the value of \"stupidly simple & blazingly fast\". Someone will have to determine what that is (its obviously different for different people) but I'll add my little voice. :-)\nI use Drupal for my client sites, but I've been on a quest to find something more simple and lightweight for smaller websites. What I see on the home page at picocms.org sounds perfect. And it would seem to me that Pico has a lot going in that direction and would find a lot of users with that interest.\nBut...command line / Composer installation? No way. Gotta be simple. Upload and go. Fantastic.\nI'm going to take it a little farther and suggest that the admin interface be integrated though in the basic download - or offer a download with admin and one without. For me, all client websites need an admin interface. With WYSIWYG. Simple WYSIWYG tho...really simple. Only a few options. No image placing, tables, etc. Just the minimum text formatting basically. Keep the dev stuff in the files, that's fine. But clients should be able to edit and create pages in a simple interface.\nAnyhow...that's from my perspective. :-)\n. @theshka, the value of the admin panel in the normal Pico download I think would very much be a benefit in keeping with the \"stupidly simple\" operation many of us are looking for. I don't mind editing files, but I have very few clients who I'd even try to explain how to edit website files. A simple admin panel is much more of a common interface even basic computer users are used to using.\nLike @johnnywon said, if a CMS requires the command line to install (or add plugins), then I'm out. Maybe some day I'll be geek enough to use it. :-)\n. ",
    "jcm2226": "I'm getting the same error, but I'm using the newest version. \n. The problem was resolved after I upgraded to 5.4. Are you sure the line\nthat calls ParseDownExtra is compatible with 5.3?\nOn Mon, Jun 22, 2015 at 7:08 PM, Tyler Heshka notifications@github.com\nwrote:\n\nReopened #224 https://github.com/picocms/Pico/issues/224.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/picocms/Pico/issues/224#event-337297927.\n. Thanks!\n\nOn Tue, Jun 23, 2015 at 10:53 AM, Tyler Heshka notifications@github.com\nwrote:\n\nOkay, so the problem is that it is not possible to call a method on an\nobject just created with new before PHP 5.4. I haven't actually tested\nthis yet, but something like this should work...\n``php\n$Parsedown = new ParseDownExtra();\n$content = $Parsedown->text($content);\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/picocms/Pico/issues/224#issuecomment-114555131.\n. \n",
    "Lesik": "Oh man, I'm sorry. I didn't notice content_dir was already set in the config.php, so I set it twice.\nYes, I did rename config.php.template, I'm not quite that stupid ;-)\nSorry, my bad, no issue here.\nI face a different issue though, I can't access any files in the subdirectories, for example /sub.\nIf you want another page within the sub folder, simply create a text file with the corresponding name (e.g. content-sample/sub/page.md) and will be able to access it from the URL http://yoursite.com/sub/page.\nDoesn't work for me, I just get a blank page. Tried setting chmod to 777, didn't help. Should I open a different issue for that?\n. And again this issue was my fault. I'm starting to feel embarrassed.\nI though I copied the .htaccess file when transferring my local folder to the server, but because \"hidden files\" were turned off, Nautilus (my file manager) didn't copy that file over.\n6. That's it. Tweak the .htaccess file if required.\nWith the default .htaccess (from this repo) I get a 500 server error accessing /sub. Could you share your .htaccess for comparison?\n. I have the same one. I get this error when accessing /sub:\nInternal Server Error\nThe server encountered an internal error or misconfiguration and was unable to complete your request.\nPlease contact the server administrator, and inform them of the time the error occurred, and anything you might have done that may have caused the error.\nMore information about this error may be available in the server error log.\nAdditionally, a 500 Internal Server Error error was encountered while trying to use an ErrorDocument to handle the request.\nI don't have SSH access on my server, just SFTP (German hoster 1und1.de), so can't check logs. Any idea what could be wrong anyways..? :(\n. - What permissions should be set? Usually CMSs want full 777, but I haven't seen anything in the Pico docs\n- It's not in a subfolder, but on a subdomain. Would I need RewriteBase?\n- phpinfo(); results in a giant output, what should I look for?\nI know how difficult it is to deal with inexperienced people, thanks for having patience with me. Webdev isn't my field, I just want to host my Java projects with a simple CMS.\n. RewriteBase / did it, thanks. I wonder what the value of RewriteBase was before, shouldn't / be default? Anyways, thanks for your help :)\n. I am aware of the \"twig way\", but was hoping for something simpler (a <?=$cash?> is quicker than creating a new php file plugin etc).\nBut if that is against the way Pico is supposed to run, I understand that. Thanks for your response :)\n. ",
    "mattcooperwright": "Hey, thanks so much for the great response. I'm glad that it's not me doing something stupid!\nIt's a shame though because i'm currently using ftp software to mirror a local file structure onto my server and so it could have been really efficient to simply use relative file paths - especially for my less technical colleagues.\nBut not a problem really. thanks very much. love the PICO!\n. ",
    "marciotoledo": "Hi @theshka I'm exploring PicoCMS and I created a content-static folder in same level of content, and put a image inside but is not working as I'm waiting. I need access images directly.\nThanks\n. Ok, great. I will try the plugins.\nThank you.\n. ",
    "microcipcip": "Yes I mean dynamically, for example:\n![alt text](http://www.img.jpg?width=350&height=350&crop \"Title text here\")\n. I was thinking about something like https://github.com/mosbth/cimage or https://github.com/lencioni/SLIR , but I can't get them to work correctly (mostly because of issues with the relative path)\n. ",
    "SimoneS93": "Sure, I'll do it over the weekend.\n. I did it, but I don't know if it is worth. In my opinion Pico needs a complete rewrite.\n. ",
    "marcus-at-localhorst": "Not sure if I am right here, but I would like to second the request:\nI wrote a small plugin to render content files with Jade template syntax (using this: https://github.com/Talesoft/tale-jade)\nUnfortunately Jade's is choking on the YAML block and I can't use the raw content and jades internal caching mechanism.\nMy Plugin is a little bit of a crutch but for a small site, it works.\nSo I would love to see an easier way to choose the rendering engine for content files.\nIt could be determined by the contents file extension\nblog-2016-03-14.md => Parsedown\nplain.html => No processing\ncomplex. jade => jade renderer\nblog-2016-04-05.textile => textile renderer\ncontent.wiki => wikimarkup\nThis would make it easy to choose the right markup for whatever the content is.\n. I would use DOMDocument for this\ncreate a plugin file TweakOutput.php\nand put in this content:\n```php\nfinal class TweakOutput extends AbstractPicoPlugin\n{\n    /\n     * This plugin is enabled by default?\n     \n     * @see AbstractPicoPlugin::$enabled\n     * @var boolean\n     /\n    protected $enabled = true;\n/**\n * Triggered after Pico has rendered the page\n *\n * @param  string &$output contents which will be sent to the user\n * @return void\n */\npublic function onPageRendered(&$output)\n{\n    // don't work through XML Documents\n    if( ! (strpos($output,'<?xml') === false) ){\n        header('Content-Type: text/xml; charset= utf-8 ');\n        return;\n    }\n\n    $output = mb_convert_encoding($output, 'HTML-ENTITIES', 'UTF-8');\n\n    $doc = new DOMDocument();\n    $doc->preserveWhiteSpace = false;\n\n    $doc->loadHTML($output);\n\n    // add target _blank to external lins\n    $links = $doc->getElementsByTagName('a');\n    foreach ($links as $item) {\n        $href = parse_url($item->getAttribute('href'), PHP_URL_HOST);\n        if (!empty($href) && $href != $_SERVER['HTTP_HOST']){\n            $item->setAttribute('target','_blank');\n            //$item->setAttribute('rel','nofollow');\n        }\n    }\n    $output = $doc->saveHTML();\n}\n\n}\nThis script goes through all `<a>` compares their `href` value with the current `$_SERVER['HTTP_HOST']` and if it is an external link it adds `target=\"_blank\"` to open those pages in a new browser window.\nUncomment `$item->setAttribute('rel','nofollow');` and all links get a `rel=\"nofollow\"` attribute.\nTweak the if condition to exclude links from being treated like:php\nif (!empty($href) && ($href != $_SERVER['HTTP_HOST'] OR $href != 'myownproject.com')){\n  $item->setAttribute('rel','nofollow');\n}\n```\ndepending on how valid your input html is, DOMDocument may choke and mess things up, but that's a different story :)\n. something is wrong with this line:\nif( ! (strpos($output,'<?xml') === false) ){\nI don't know what exactly, but you can comment out the whole if  block to get past this and see if the script works.\nAlso google for the error and see if there is something that causes that error. (Did you start that plugin file with <?php ?. ",
    "pecuchet": "Strange, I just reverted the changes I made on the get_config method of Pico, just to double check. The problem is the same: when I have $this->config = @include_once(ROOT_DIR . 'config.php') (line 203) $this->config is not assigned with the array values in config.php, but merely 'true'. After that the first error I get is \"file_get_contents(content-sample/404.md): failed to open stream\", which is logical since in my config.php the content folder is not 'content-sample' and there is no content-sample folder in the root.\nThe if-else is indeed ok, but for me include_once only returns a bool (as expected). Here is the simple change I made on the get_config method:\n```\n@include_once(ROOT_DIR . 'config.php');\n$defaults = array(\n    // left as is\n);\nif (is_array($config)) {\n    $this->config = array_merge($defaults, $config);\n} else {\n    $this->config = $defaults;\n}\n```\n. It seems to be fixed as per 399b73aa3b229570ec36ad4280e04ab4bad36b59. Thanks to @PhrozenByte.\n. ",
    "MumuSec": ":+1: \n. Hey benjam1n,\nthere is an htaccess file in the repo: https://github.com/picocms/Pico/blob/master/.htaccess\n-mumu\n. For me, the best way to do it is, to have multible virtualhosts.\nLike:\npublic/\n-pico1\n-pico2\nSo every virtualhost has its own folder with its own installation.\n-Mumu\n. ",
    "benjam1n": "Solved. It didn't work because I didn't have htaccess file. Don't you think we could add it to repo?\n. ",
    "PontusHorn": "This looks great to me. Would be more than happy to see it merged.\n@fourtonfish, have you looked through the changes in the PR? The code you're referring to isn't used anymore in it. Your problem, as I understand it, is already fixed here.\n. @PhrozenByte I think it's reasonable to require meta headers to be registered, as it makes the usage of the header more predictable. Not a huge issue either way though.\n. Using meta.description for excerpts is fair enough, but it might be a good idea to run it through Twig's striptags filter when printing it in <meta name=\"description\" />, to allow for some basic formatting of the excerpt.\n. I've been using this for two small sites for about two weeks without any issues. No errors logged despite regular traffic. I'm using two plugins of my own making which have been updated to work with this version - haven't done any testing worth mentioning with plugins that haven't been updated.\n. Typo in \"processing\".\n. Wrong parameter name - should be $rawContent\n. Wrong parameter name - should be $fileExtension\n. Should use the $fileExtensionLength variable defined in line 901 instead of the strlen() call.\n. Wrong string concatenation operator\n. Wrong string concatenation operator\n. Wrong string concatenation operator\n. Typo in \"string\"\n. Personally, I don't see a particularly compelling use case that makes up for the added complexity that would bring.\n. This seems like a good improvement. I'd say it makes more sense in most cases. For other cases, there's always the plugin hook onPagesLoaded.\n. ",
    "Lomanic": "Hi, thank you for your work on Pico @PhrozenByte !\nUnfortunately, I tried to install your pico1.0 branch with PHP 5.3.3-7 and Apache with mod-rewrite enabled like below with the following result when testing in the browser:\nFatal error: Can't use method return value in write context in /var/home/XXX/www/picocms4/lib/Pico.php on line 838\nSteps I used to install:\nbash\ncd www\nwget 'https://codeload.github.com/PhrozenByte/Pico/zip/pico1.0' -O 'Pico-pico1.0.zip'\nunzip Pico-pico1.0.zip\nmv Pico-pico1.0 picocms4\ncd picocms4\ncurl -sS https://getcomposer.org/installer | php\nphp composer.phar install\nI just replaced this problematic line by if ($this->getConfig('base_url')) { following this SO answer and then it complained that there were no config/config.php file to include, so I copied the config/config.php.template file to config/config.php, and now there are a lot more errors when testing in browser:\nNotice: Undefined variable: config in /var/home/XXX/www/picocms4/config/config.php on line 61\nWarning: DOMDocument::saveHTML() expects exactly 0 parameters, 1 given in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 492\nWarning: DOMDocument::loadHTML(): Empty string supplied as input in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 471\nCatchable fatal error: Argument 1 passed to DOMNode::removeChild() must be an instance of DOMNode, null given, called in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 496 and defined in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 472\nWas PHP 5.3.3 support dropped or is it something else? I see in composer.json that it requires \"php\": \">=5.3.2\", so it should be OK, am I missing some steps, some doc? Should I and could I open an issue for this pull request?\n. Thanks @PhrozenByte for the quick fix!\nI changed the two modified files (config/config.php.template and lib/Pico.php), copied config.php.template to config.php and got these errors:\nWarning: DOMDocument::saveHTML() expects exactly 0 parameters, 1 given in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 492\nWarning: DOMDocument::loadHTML(): Empty string supplied as input in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 471\nCatchable fatal error: Argument 1 passed to DOMNode::removeChild() must be an instance of DOMNode, null given, called in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 496 and defined in /var/home/XXX/www/picocms4/vendor/erusev/parsedown-extra/ParsedownExtra.php on line 472\nAfter some research, it looks like Parsedown-extra uses DOMDocument::savehtml() with the $node parameter, and so we need PHP 5.3.6 (I have 5.3.3 ; see savehtml()'s Changelog). You will have to raise the php version requirement in composer.json (Parsedown-extra should do it itself, I'm surprised it does not include a minimum php version in its own composer.json). I will perhaps downgrade Parsedown-extra until it does not use this function (this is just for testing, I will then migrate to a better updated environment). I will report which version works with php 5.3.3. \nEdit: Parsedown-extra 0.3.0 just gives warnings on php 5.3.3. Next step for me is to test my plugins and template against your pico1.0 branch, stay tuned :wink:.\n. OK, I migrated my old pico (v0.8) to your v1.0 fork install, moved my plugins, moved my theme, moved my old config.php to config/config.php.\nTo migrate from my previous pico version (v0.8 I think) I copied my old config.php to config/config.php.template and added return $config; at the end of the file, otherwise I just had the default configuration. I copied my theme and my plugins to the right dirs and so far my theme is not broken. Unfortunately, I don't have excerpts of my articles on the default page (as a blog), with the {{ page.excerpt }} twig var.\nTested plugins:\n- Lomanic/Pico-Editor-Plugin : can login but all the paths with slashes are broken\n-  rewdy/Pico-Pagination : paths with slashes are broken, but listing on the 1st page works\n- pico_search is broken for the same reason\n. @PhrozenByte I confirm that you solved the issues with my legacy themes and plugins (last commit tested: 27d6946), I just had Notices/Warnings that I could easily disable :+1: . Now I think I will have to upgrade the plugins I use so they don't rely on the 00-PicoDeprecated.php shim, I will probably wait for your branch to be merged in master.\n. Hi @PhrozenByte and @theshka \nI think it should be more clear in the docs how to make compatible a legacy theme with pico v1, specifically one has to replace {{ base_url }}/about to {{ \"about\"| link }}, but {{ page.url }} does not need to be remplaced by {{ page.url | link }}.\nAlso a legacy config.php is not a drop-in replacement to config/config.php as you have to add return $config; at the end of the file. Plus you probably have to set $config['content_dir'] = 'content/'; instead of the  content-sample default.\n~~On a related note, is there a way to have (in the gh-pages branch, generated by travis-ci perhaps?) a browsable \"readthedocs\"-like online documentation which would exploit the PSR-5 PHPDoc Standard applied in the source code? It would be really easier to contribute to pico development with that. Or perhaps this documentation is already there but I did not see it.~~ It is at the end of the docs , this should be really more accessible/visible : https://phrozenbyte.github.io/Pico/phpDoc/master/ (link here was broken)\n. Relative links in phpDoc look broken, link to PicoPluginInterface is broken here, it should be this link\nPlus here in the same file to Pico::__construct() and Pico::run(), and others.\nIt is indeed better to have a dedicated v0.x -> v1 migration page :+1:  But it still lacks a little step to replace the content dir to content-sample (or to edit the config/config.php with $config['content_dir'] = 'content/';, I think keeping a proper content dir is better as it prevents it to be modified during an upgrade).\nI will test the final 1.0.0beta during the following days, on my 5.3.6 php (on Apache) and a shiny 5.6.14 php (on nginx) to confirm everything is fine.\n. Awesome work :+1: It only gets better and better :smiley: \nThe twitter bot is a nice addition, who owns it?\n. Hello @theshka @PhrozenByte \nThanks @PhrozenByte for the tip, it will be in my next commit.\nI'm indeed interested in developing this plugin, what do you think should be rewritten @theshka ? What will be the differences with your own plugin @PhrozenByte ? \nI was planning perhaps to add to it an anti-bruteforce system (fail2ban-like), improve error detection when using AJAX calls (not enough rights to write/create/delete .md file mostly), perhaps making the AJAX admin/{new|open|save|delete} endpoints REST-like using HTTP error codes, use the awesome woofmark JS editor too instead of epiceditor (hard for me as I am really bad at making beautiful HTML and CSS). Nothing fancy, I'm waiting for your suggestions, I'm totally OK about building a new plugin from scratch if you think it is a better thing to do.\n. @theshka I was planning a minor change for a more flexible plugin dir too, just checking the current dir name and pass it to the editor.twig renderer like the $this->url var (I don't know if it is the same idea you have about this issue). But it would be a problem with #203 perhaps.\n. @dav-m85 The plugin would log in a file failed login attempts for each IP address, if an IP address fails X times (X being configurable in config/config.php) it gets rejected during a defined time (customizable in config/config.php too).\n@theshka https://github.com/coexec/pico_admin provides an asset manager I think.\n. :+1: Even delete the content-sample dir after content dir is created.\n. Excuse me, no, I wanted to write that it should say in the documentation that once user has created the content dir he can (and should?) delete content-sample.\n. @tilboerner plugin is not updated since 5 years, I think you should use this fork which has been ported to Pico v1 and shows how to change the site title (a twig variable) depending of the locale. You could then extend it to your own defined variables to be used in your twig templates. . I did not test it but composer create-project picocms/pico-composer .  should create the files in the current directory instead of ./pico-composer.. ",
    "phillbailey": "Bit late I realise, but I solved the same problem slightly differently. I have a main config file (config.php) and site specific configs (config.example.com.php and config.0.0.0.0.php for local testing). They're all running on Nginx in production.\nIn the config.php file, set the base URL and then require the site specific config with all the usual settings.\nphp\n$config['base_url'] = 'http://' . $_SERVER['HTTP_HOST'];\nrequire_once('config.' . $_SERVER['SERVER_NAME'] . '.php');\nNeither of the sites receive that much traffic, so I've not seen particular performance issues doing it this way. The benefit of 1.0 is that you can enable plugins on a site by site basis, in 0.8/0.9 obviously that's not possible without editing the plugin. \n. ",
    "biscuitNinja": "I realise now there's actually already a plugin for this\nhttps://github.com/mcbSolutions/Pico-Plugins/tree/master/mcb_Blog\n. ",
    "RuZniki": "Yes I tried, it works fine.\nphp -S localhost:8080\nBut in README php -S 0.0.0.0:8080 ./, maybe it need to be changed.\n. ",
    "jstamant": "@PhrozenByte Thanks for the insight. I'll definitely have to work on my mod_rewrite rules. I was still using the same rules supplied in .htaccess, which I'm sure isn't good practice. I'm good with regexps, but mod_rewrite still managed to scare me off :confused:...\n. I don't suppose you can just run $ php composer.phar install locally, and upload everything to the remote server?\n. Thanks. Reading #252 gave me a better idea what pico has in mind for portability across different web servers. Only makes sense to use query strings.\n. By adding an assets folder in Pico's root directory, like you suggested, I managed to serve the .pdf file out of it. I read the comment in #368, and creating a seperate assets folder remains convenient for both my small-scale websites.\nThanks, @PhrozenByte.. ",
    "Wisnaeme": "Nope. It's me too. Fresh download. :-(\n. Thanks Bricebou\nAs I can't use commands on my remote server I guess Pico is no use to me then.\nOh well.\n. Hmm. Maybe. I'll need to think about this. \nQuite disappointed with the \"Not working at download\" state of the project.\nCurrently looking elsewhere for a flat CMS. Only have very simple needs and need a solution within next 4 hours. Can't really be bothered chasing up this project as I'd need to build a local server.\nClock's'a'tickin'\n. Thanks for that. I've got it installed and will play around now.\n. ",
    "tibor": "Hi and thanks for your ideas.\nUnfortunately the css solution doesn\u2019t fit my needs because I definitely need to get the parent wrapping element. WordPress has a filter function for such cases \u2013 is there nothing close to that available with Pico?\n. ",
    "smcdougall": "@PhrozenByte I could probably make up a \"What's New\" section sometime tomorrow.  Since it's in the Upgrade section, I assume it should be a pared down version of the change log.  Something of a user-friendly \"What do I need to know to upgrade\" list?  I was thinking of breaking it down into two sections, one \"for users\" and one \"for developers\".  And maybe include a link to the change log for additional details.\nI could also work on getting some of those cookbook ideas into a full page of developer tips (and/or merge them into applicable areas of _docs).\n. I guess when I said \"pared down\", I meant in regards to the separating out the developer stuff.  Make the user-facing changes clear and well explained, while downplaying the backend fixes that a user doesn't need to worry about.\nWhat's New?\nFor Users\n\nconfig.php has moved to config/config.php and new options have been added.  Be sure to move your existing config and update it if needed.\nYou can now define Custom Meta Headers for use in your themes.  Access custom headers using {{ meta.yourheader }} in your template or %meta.yourheader% in your content files\n\nFor Developers\n\n\nInaccessible files are now excluded from pages list\nPico now requires PHP >= 5.3.6\n\n\nIt sounds like we're on the same page, you just explained it better.  Also, after writing this comment, I realized that I've been looking at the wrong upgrade.md (the presumably live version in _docs).  The current version does look pretty good.  It's thorough, if a bit dry to read.  I feel like a \"For Users\" section should be one part \"easy to read\" and one part \"TL;DR\".\nAnd the cookbook thing I was thinking of merging with docs was the \"assets\" page you already took care of. :unamused:  I do like the idea of a \"the problem/the solution\" format though.\n. I'm trying to rework the entire upgrade.md right now.  The commented area is much easier to read, so I'm working it into the rest of the document and rewriting it where needed.  The main issue I see is that there is a lot of information all over the place.  Much of it seems redundant and is clearer in some areas than others.  I'm going to make it \"flow\" the best I can.\nAlso, is the intention that this will replace the _docs/upgrade.md section of the site, or should it be a separate page?  Right now it feels like it's written as a separate page.  At the very least it seems like it should be it's own, independent section (probably below the generic upgrade section) because the changes from 0.9 are likely much greater than any changes going forward (the handling for which are already covered in the generic section).\n. Good, because what I've got so far sounds like just what you're looking for.  It's still a work in progress, but I've restructured a lot of it.  I'll submit a pull request in a few min so you can check out the direction I'm going in.\n. As far as the docs/website changes go, I don't see a reason to think of them as being \"tied\" to this release.  Sometime I plan to go through it all and work out any rough or hard-to-read sections.  Other than the upgrade page(s) though, nothing else needs to be tied to the 1.0.0 release, so why not keep things \"rolling\" and silently update each section as the work gets done?\nI definitely like the changes in #306, and would even like to see something similar implemented in the default Pico theme (perhaps for 1.1).  It's just a little too simple as is, and I think it gives the wrong impression of how powerful Pico can be.  I wouldn't mind putting some work into this idea in the future, since it's one of the few things within my coding capabilities. :smiley:\nI'd also be willing to work on writing some paragraphs to go with those cookbook examples (and future ones) that way it can grow into a proper page instead of a bunch of unexplained code.  Right now we have the ingredients of the cookbook, but it still needs some cooking steps.\nI look forward to the final release of 1.0.0.  As @theshka said almost a month ago, @PhrozenByte you've done so much work to revive/reinvigorate Pico and bring about this release.  I think a quick look at Contributors says all that needs to be said about the time you've put into this project.  Thanks for all your hard work. :tada: :+1:\n. I plan to take a crack at expanding the cookbook at some point (as well as the other docs), but I haven't had the time lately.  Unfortunately, my daily \"productive time\" went away mid December and won't be back until around the end of February.  I'd still like to make the time to work on it soon though.\nJust wanted to reassure you that I'd still like to help and haven't \"moved on\" or anything. :wink: \n. @PhrozenByte It's okay, I sort of figured this would happen.  Your solution sounds really robust though.  I looked over the sources of the Pico site and I'm pretty intrigued by the concept (especially by the \"collection\" folders).  Is there a resource you could link to that goes into more detail?\n. Okay, I figured out what I wasn't understanding in your example.  I went back and looked at the 1.0 changelog again and noticed that you can now make any meta headers that you want without needing to write a plugin to parse them.  Nice Work.\nGlad you like my widget system. :smile:  At some point, I'll probably rework it to use custom meta headers instead of dedicated folders.  \"if meta.widget\" seems a little more elegant than \"if \"/widgets/\" in page.url\".\nBack to the point though, glad to have squashed a last-minute bug before 1.0.  I'll see if I can work in your solution for TOCs into my theme.  Going forward it'll be a better solution than a URL hack anyway.\nCongratulations on 1.0.  Glad to see development on Pico continuing.  Keep up the good work! :+1:\n. @PhrozenByte Thanks again for that example code.  I was able to get it working and customized a bit.  It'll be a feature included in the next update of my theme.  This new ability to use custom meta headers together with your example of using a meta array has got me thinking of a ton of potential customization ideas!\n. @PhrozenByte I made it recursive! :laughing: \ntwig\n{% import _self as macros %}\n{% macro rnav(toc) %}\n  {% import _self as macros %}\n  <ul>\n    {% for sectionKey, section in toc %}\n      {% if section._title %}\n        <li>\n          <a href=\"#{{ sectionKey }}\">{{ section._title }}</a>\n          {{ macros.rnav(section) }}\n        </li>\n      {% elseif sectionKey != '_title' %}\n        <li>\n          <a href=\"#{{ sectionKey }}\">{{ section }}</a>\n        </li>\n      {% endif %}\n    {% endfor %}\n  </ul>\n{% endmacro %}\nThought I'd share.  If you'd like, one of us can put it in the cookbook whenever that gets done. :smiley: \nEdit: For context, it gets called with this:\ntwig\n{% if page.id == current_page.id and page.meta.toc %}\n  {{ macros.rnav(page.meta.toc) }}\n{% endif %}\n. Well, that was quick.  Glad I updated my comment before you looked at it.  It originally had two bugs I hadn't caught yet.\n. @theshka Yes, I mentioned that in my post.  It's fine if that's what has to be done, but the comment next to base_url suggests that it should be an override, not a required setting.\n@PhrozenByte I've got my content_dir set to \"content/\", but base_url is undefined.  Config.php is in the config folder.  Here's the debug output.  There's a lot of custom config variables for my theme.  Also, my Pico folder is symlinked to /var/www/testing, but for some reason in the debug output php is reporting the original location.\narray(27) { [\"site_title\"]=> string(27) \"Testing @ McDougallhome.net\" [\"theme\"]=> string(9) \"NotePaper\" [\"pages_order_by\"]=> string(4) \"date\" [\"pages_order\"]=> string(3) \"asc\" [\"content_dir\"]=> string(63) \"/home/mcdougall/sync/Simon/files/Documents/Web/testing/content/\" [\"timezone\"]=> string(5) \"UTC-5\" [\"site_logo\"]=> string(22) \"/content/site_logo.png\" [\"front_page_mode\"]=> string(1) \"y\" [\"front_page_limit\"]=> int(10) [\"toc\"]=> string(17) \"Table of Contents\" [\"copyright\"]=> string(0) \"\" [\"disqus\"]=> string(5) \"front\" [\"disqus_shortname\"]=> string(15) \"development-***\" [\"css_override\"]=> string(25) \"/content/css-override.css\" [\"og_image\"]=> string(25) \"/content/site_logo_og.png\" [\"bottom_links\"]=> string(3) \"Yes\" [\"bottom_links_first_text\"]=> string(14) \"<< First\" [\"bottom_links_prev_text\"]=> string(9) \"< Prev\" [\"bottom_links_next_text\"]=> string(9) \"Next >\" [\"bottom_links_last_text\"]=> string(13) \"Last >>\" [\"bottom_links_top_text\"]=> string(11) \"Back to Top\" [\"bottom_links_separator\"]=> string(1) \"|\" [\"base_url\"]=> string(34) \"http://testing.mcdougallhome.net//\" [\"rewrite_url\"]=> NULL [\"date_format\"]=> string(5) \"%D %T\" [\"twig_config\"]=> array(3) { [\"cache\"]=> bool(false) [\"autoescape\"]=> bool(false) [\"debug\"]=> bool(false) } [\"content_ext\"]=> string(3) \".md\" } string(16) \"//DA/chapter-two\" string(14) \"DA/chapter-two\" string(1) \"/\" string(14) \"DA/chapter-two\" string(48) \"http://testing.mcdougallhome.net//DA/chapter-two\" string(48) \"http://testing.mcdougallhome.net//DA/chapter-two\"\n. Cool! :+1: I don't mean to point out all your bugs, really.  I'm just bringing things up as I come across them while I get my theme ready for 1.0 (and it's own new feature set). :sweat_smile:\n. At the very end of the file (in the commented section).  I'm trying to rework the whole document at the moment.  The discussion seemed like an okay idea.  Something to keep open for a little while during the transition.  A place for people to go \"Help, I deleted my config accidentally and now my site won't load\", or other issues that aren't tied to a bug.  I don't see it being busy enough to get too complicated, and wouldn't be any more difficult than a forum thread would anywhere else.\nIf you'd like though, I can rework it to reference the \"Getting Help\" section or just point to the Issues GitHub page.\n. Okay.  Sounds like a plan. :+1: \n. I think the toc might be a little screwed up a the moment as well.  Only some of the items were working properly for me.  I'm not yet sure what the issue is.  Anyway, it's a work in progress as I said, so I'm mainly looking for feedback on the new structure.  I'm still working to refine the actual text where needed.\nAlso the broken images are from @theshka's original content.  I don't know if he's got some images for it, if I should make some, or if they should just be removed.\n. I agree, I don't think screenshots are necessary they were just already there.  I'll remove them.\nI agree about the installation method.  Both methods were in the file, however this one was worded better so I used it as a base.  I'll rewrite it using the \"delete everything\" method.\nI think we have differing ideas of users, and I don't know which one is more accurate.  When I picture a user, it's someone who has chosen Pico to make an easy site for displaying content.  They likely have downloaded a theme from the wiki and are not that interested in making their own.  They would treat themes as they would plugins, like self-contained entities that they wait for the developer to update.\nSo, when I imagine what a \"user\" wants to know about updating, it's what I've put in the \"How to Update\" section.  Simple, concise instructions, that don't overwhelm them with details.  If I knew nothing about how themes worked and I saw update instructions telling me about how {{ page.excerpt }} doesn't work anymore, it wouldn't be helpful.  \nThat was my logic anyway.  And I guess by that logic, I should have called it \"For Developers\", which would be further from what you're looking for.\nYour idea of a \"user\" however is what I would consider either a \"power-user\" or on some level a \"developer\".  Someone who wants to know the gritty details of how things have really changed.  Someone who writes or customizes their own theme.  Someone who would likely gloss over the first section and jump right into the \"What's New\" section.\nNow, given the fact that this is web design and administration we're talking about, I'll give you credit that the user-base probably does skew in that direction, and you'd know better than me.\nFood for thought though, as a \"php developer\", you see anyone who doesn't touch the php as a \"user\", while as a \"theme developer\", I see anyone who doesn't touch the theme as a \"user\". :confused: \nSo, what would you like to see done with this?  I could make the \"What's New - For Users\" section into more of a \"Update Details\" while the \"Under the Hood\" becomes just \"What's New\".\nI've been previewing it with the site's styles as opposed to GitHub's that way I can get a better idea of what the finished content would look like.\nMy main focus is to try to bring this file up to the quality and readability of the other Documentation.  I want it to be approachable by anyone (casual user, power-user, or developer) and not feel overwhelming.\nPlease note, I've been trying to follow your guidelines as best I can.  I think the issue is more this difference of philosophy I've described than a difference of opinion about the structure.\nI'll try again to head in the direction you've suggested, but with an \"everyone's a user\" mentality instead.\n. Actually, I didn't even know the upgrade page was live on the website... :unamused: Apparently it needs a more prominent link... or I need to be more observant.  As far as the GitHub thing goes, I did get an email earlier telling me that the name \"picocms.org\" was already taken, lol.  I was wondering what that was about.\nAlthough I like the elegance of having two sections, I've been staring at this document all day and there's just so much information.  There's definitely three distinct sections, but I think I've thought of a solution.\nThe general update information really is redundant. Why not just remove it altogether and replace it with one line a link pointing back to the Upgrade section of docs.  I'm thinking maybe the Upgrade section of docs should be revised a little bit.  There's nothing really wrong with it, and it sounds okay, I just think it should stand out a little more.  I'll let you know when I figure out what I mean by that... I just feel like it needs... something.\nBack to upgrade.md.  With the regular \"How to Upgrade\" steps removed, the page could just focus on the specifics.  \"How to Upgrade\" would be just the advanced update stuff, while the remaining \"Under the hood\" would become \"What's New\".\nThis would keep the simple instructions clean (as they're on the docs page, where they should be), and keep the page focused on just the advanced, 1.0.0 specific, upgrade instructions.\n. Sorry for the messy commits.  Not sure how to clean them up, and my attempt at reverting didn't work so I just \"pushed\" a copy where I had undone the last two commits.\nIf there's a way to clean up the history (if it even matters) before finalizing this page, let me know and I'll do it.\n. Alright, now it's where I wanted it to be at the first commit this morning. :unamused:\n@PhrozenByte Any thoughts about this layout?  Also, is there an easier way to get to the rendered page besides typing in the url?  I was poking around but couldn't find one.\n. @theshka I don't know... The more I've been thinking about it, the more I like the idea that this should be a dedicated document about the transition to 1.0. The general upgrade instructions are the same as any release, so including them seems redundant.\nBy removing them, it gets right to the point. Plus, users likely already know the upgrade process, it is dead simple after all.\nI wouldn't be entirely opposed to bringing the plugin-dev instructions into this document though, if only for the sake of having one upgrade document.\nThanks for the tip about the Jekyll gem, I'll probably grab that later. I was trying to use HarooPad to roughly preview the site styles, but it only shows the Markdown content and not the rest of the page. I don't care for the program though and it was partially to blame for all the toc commits. Once I switched back to Atom, I realized right away that I'd screwed up the toc indentation.  Atom + Jekyll will probably be my workflow going forward.\nAnd sorry about those links at the bottom, I thought they were broken. I didn't realize that's how it was defining them.\n(I tried to send this reply multiple times from my phone... if a duplicate shows up later, that's probably why).\n. Okay, that's two against one in favor of keeping the general instructions, so I'll admit defeat. :wink: \nAs far as the layout goes, I like it.  The only real issue I can spot is the multitude of \"Routing System\" sections.  There's already two in the document, and this layout suggests three.  It's a really problematic subject since it does touch all threes sections.  My first thought was to maybe restrict the \"For Users\" version to just \"Url Rewriting\", but then it wouldn't cover the new Markdown variables, etc.\nFor the sake of readability, I'd like to make sure they aren't to redundant.  One way to deal with it could be to link from one \"Routing System\" section to the next (\"If you're a theme developer, you'll find more information about the new Routing System in the section below.\").\nAnyway.  I like this layout.  I think it's got a pretty clear distinction of what's upgrade related vs what is new \"under the hood\".  I'll draft it up later tonight if I have time.  If one of you would like to write more content for \"What's New\", that would be great.  Most of the technical stuff on the changelog goes over my head. :smiley:\n. @PhrozenByte Sorry, didn't get the time to work on this that I'd hoped for.  New structure, as you suggested.  Added an \"Additional Information\" header between the general instructions and the more advanced information.  I don't like calling it \"Additional Information\", so let me know if you have a better idea.  I just thought it should be separated from the steps slightly.\nAlso, I realized something while reading through this for the billionth time.  The general instructions suggest that a users could copy their custom themes back into Pico, however this would likely break without enabling PicoDeprecated due to the lack of page.content/page.excerpt.  Unless they are also using an old plugin, PicoDeprecated won't be automatically enabled just because they're using an old theme.  Maybe there should be a note or other instructions for accomplishing this?  What do you think?\nhttps://smcdougall.github.io/Pico/upgrade.html\n. Any other suggestions for this file?  The link to .htaccess is broken because I changed the gh_release to v1.0.0, not sure what to do about that.  I also want to go through and standardize the capitalization of some of the links.\nWhen referencing another section (eg \"see [Routing System]\"), should the link use Title Case like the header it's referencing or be lower case like the rest of the sentence?  It's inconsistent throughout the document right now.\n. I'll look it over for any \"Pico\" inconsistencies, but I would have fixed those already if I'd seen them. :wink:\nI thought of the Title Case issue when I realized I'd written \"For Theme Designers\" on one link and \"for theme designers\" on another.  I never know what to write for links.  It's always hard to avoid the urge to just write \"click here\". :laughing: \n. Hmm... I added more backticks to some of the code-oriented links (eg  [`Pico::setConfig()`] , matching some that were already formatted like that.  It makes almost no difference under the site's current style to have them formatted as 'code' though, so I'm thinking I might just remove them all.  It made sense at first that regardless of them being links, the code should be highlighted.  Now I just think it makes them harder to read though.  Thoughts?\nAlso, it feels just about ready for deployment, minus maybe adding additional \"What's New\" items.\n. Yay! :smiley: \n. @theshka FYI, that .htaccess link is still broken.\nIt uses {{ page.gh_release }} which I changed in the header to be 1.0.0.  I wasn't sure whether to just rewrite the link to reference the master branch or how you guys would want to proceed with it.  If you want to change it, the link is at the bottom of the file and reads:\n[RewriteFile]: {{ site.gh_project_url }}/blob/{{ page.gh_release }}/.htaccess#L7\n. Uploaded it here.\nStill kind of a GitHub noob, I've probably learned more in the last few days then the last six months though.  It seems like everything's made it in one piece.  Uploaded the stable version to master and made a separate \"testing\" branch (linked above) for the new version.\nDon't mind the large amount of comments at the beginning of index.twig and a few other files.  It's a bit of a mess, but you'll find everything below it nice and neat.\n. @theshka Yeah. Other than any general tips (eg \"you could do this better if you...\"), if I have any specific questions I can always just tag you or @PhrozenByte since the theme is on GitHub now.  Thanks for all the help.\nI think the code is in pretty good shape now.  I've learned a lot more about twig (and GitHub :sweat_smile:) while developing this release.\nMy 1.4.0 release should be finished.  I'm going to be releasing it as soon as I get a chance to look it over one last time.\nDuring development I kept thinking of new ideas I'd like to pursue for the next version.  Some of these will probably involve changes and enhancements to Pico (1.1+) as well, so I'll open some new \"feature request\" issues when the time comes. :smile:\n. Hmm.   It took me a minute to realize that I was supposed to click on the toggles.  Not sure how to make this more apparent.  I thought about putting a \"+\" in front of each header, but that looked awful (tried it using my browser's code inspector).\nAnother idea would be to use tabs instead.  Have 1.0+ and 0.X tabs under each section, with the 1.0+ being the default.  This would also prevent the page from looking blank when first loaded, while subtly guiding a user toward the 1.0+ content.\n. Or that. :laughing: \n. Also, you've made me realize how unflattering that loosely based on the Anarcho Notepad theme line is.  I'll probably remove that going forward, since the only remote way it's \"based\" on that theme is the similar styling and using the same (free) background. :unamused:\n. For now, probably go with what I wrote on the wiki: \"Dark wood grain, lined paper, and sticky note widgets.\"  If I think of something better I'll let you know or pull request it in the future.\nAs far as Pico 0.X support on the site, I think I agree with you (not that you asked for my input :stuck_out_tongue:).  A lot of the old plugins are likely unmaintained and a fresh start would be better than pointing to a bunch of incompatible plugins.  Besides, this is kind of a one time thing.  In the future there will likely be less breakage between versions.  Even if it feels strict right now to say that the previous versions are no longer supported, it's being done for the sake of making Pico better in the future.\nAlso, feel free to tell me to butt out. :wink: Just trying to give feedback where I can since it's usually just the two of you.\n. Your English is good enough.  If it wasn't for your profile saying Germany, I'd never have guessed. :wink: \nBut don't worry, you've left enough friendly comments that when you seemed a little \"cold\" I figured you were just being blunt / to the point. :smiley: \n. Personally, I think that Pico should throw more error messages instead of just crashing silently.  In it's current design, it makes it really hard to debug issues if you've made more than one change or changed more than one file.\nI also think it could be beneficial from a theme developing perspective too.  I don't know if it would be possible, but messages like \"Error parsing twig template\" or \"Twig error: malformed expression\" would be immensely helpful.  I can't tell you how many times I've broken my theme with malformed logic and gone \"which one of those five changes was the one that broke it?\".\nFor this issue, a message of \"Error parsing file header: filename\" would be much better than a blank page, though it wouldn't help with the issue of the Editor not working.\nWhat about ignoring files with malformed headers?  Not ignoring the metadata, but the whole file.  Although still silent, the fact that their file isn't showing up would be an indication in itself that something is wrong with it.  This would allow the site (and editor) to keep functioning, but wouldn't be \"hiding\" the problem.\nI don't know, I just really really hate the idea of content files being able to bring down a site.  A messed up theme or plugin, sure, but not a content file.\n. Maybe something in-between? #293, but check if the theme contains the new 'YAML_ParseError' variable.  If it doesn't, display a blank (or slightly styled) page with the contents 'YAML_ParseError'.  This would provide a nice error message, instead of throwing an exception, even if the theme didn't include error support.\nAlso, should the new variable be specific to YAML errors, or could it be used to catch other errors and therefore be called something different (like just \"ParseError\")?  I'm not sure if there are any other non-fatal error types that could be caught this way, it was just something I thought of.\n. @PhrozenByte Also, is there a way to display_errors instead of a blank page? I had no idea... :sweat: \nIf there isn't a way to turn that on in the config.php, there really should be.\n. Ah, okay.  The way you said it made me think there was some secret Pico setting I didn't know about. :laughing: \n. Finally had a chance to test this and then realized... if the YAML error is stored as only a meta variable, it can't actually be used for anything because it would only be accessible on the page that's giving the exception.  I tried accessing it though the page variable, but I couldn't make that work either.\n. Yeah, I thought it should be available within pages, but I couldn't get it to work.  I was probably just doing something wrong.  Didn't really have the chance to properly focus on it, but I'll play around with it more soon.\nI'm hoping to use it in a fashion similar to your example in #293, to help prevent toc errors (or other YAML errors) in NotePaper.\n. @PhrozenByte Yeah... I must have been really tired from the holidays because it's pretty clear in those comments that I wasn't even thinking clearly let alone coding properly.\nAnyway, here's what I had in mind back then, finally coded.  It'll be in the next version of NotePaper, which I should be done with soon.  I've been so busy cramming new features into NotePaper that I could have released several versions by now. :unamused: \n\nThese warnings will appear on every page (except obviously the one that throws the exception when browsed to).  The idea is that it would be helpful to a user who has either edited a few files and doesn't know which one is causing trouble or who hasn't yet realized there's an error.\nThought I'd share, since to my knowledge no one else has implemented a use for your YAML_ParseError variable yet. :wink:\n. Thanks! :smile:\n. This is a good point. I'd forgotten, but I did start my NotePaper theme by deconstructing Pico's default theme. It works really good as a example theme. Still, it's impracticable to use the default theme for anything but the most basic of websites.\nI'm not sure what the solution would be though. Maybe have content-sample continue to use an updated version of the current theme while any user content uses the new theme. That wouldn't solve the \"first-impression issues though\"\nOr a better idea, the current theme could be renamed \"template\" and included with the release but not used. The inline docs could then include information about switching to the template theme (or creating a copy of it, etc) to learn how theming works. This would be a similar concept to the plugin template that's already included in Pico.\n. If you mean Pico should delete content-sample by itself I'd have to disagree.  Something about letting it delete it's own (or any) files would be a little worrying to me.  Also, it should really be up to the user.  They may want to keep it as reference after all.\n. Oh.  Yeah, I agree then, lol. :sweat_smile:\n. Acknowledged, Captain. :wink:  :+1: \n. PR #303 & #304 :smiley: \n. Okay, cool, I'll have to try that later. :smile: \nI figured it might be something that simple since index.php is so streamlined (not that I knew the PHP to do it).\nSlightly related, but what about packaging.  Is having Pico packaged for a distro something that would ever be on the agenda?  I'd probably be able to create an Arch package for the AUR easily enough.  I know it isn't something that's really necessary due to Pico's simplicity, but sometimes people just like having updates handled by their package manager. :wink: \n. Hmm... changing the root directory in index.php, but not changing the autoload.php seems to have another benefit too... I no longer need to symlink the vendor or lib folders since they'll still execute from their original locations. :smiley: \n(I assume this was the reason you didn't mention the autoload line, I just happened to notice it also had a seperate __DIR__ declaration.) :wink:\nNow if only I could do the same for the themes folder. :laughing: The external resources like css and images are loaded through apache though, so that would never work.\n. To answer your initial question, no, every page doesn't need a title.  How a page without a title will display however depends on your theme.  The default theme does expect you to have a title for each page though.  It uses the title to generate the text for the navigation links, but nothing else.  Other themes may use the page title more prominently though.\nIf your desire is to not have these pages show up in the navigation at all, you could modify your theme to omit pages without titles.  You'd do this by wrapping the section that generates your navigation in:\n{% if page.title %}...{{ page.title }}...{% endif %}\nIn the default Pico theme, you could simplify this by adding a condition to the for loop that generates your navigation.  The modified section of index.twig would look like this:\ntwig\n                    {% for page in pages if page.title %}\n                        <li><a href=\"{{ page.url }}\">{{ page.title }}</a></li>\n                    {% endfor %}\nHope this helps. :wink:\n. Glad to hear it. :+1: \nAlthough Pico is written in PHP, your theme templates are actually written in a template engine called Twig.  If you're interested in learning more about Twig, you can read it's Documentation at http://twig.sensiolabs.org/.  And of course you can learn more about how it applies to Pico in Pico's own Documentation.\nYou can also check out my NotePaper Theme here on GitHub (Demo Website) for a more intermediate example of coding in Twig.\nThere are also many other themes listed on the Wiki, however they may not be updated for Pico 1.0 just yet!\n. Actually, one idea could be to use twig comments to hide the changes inside the docs version that way if you copied over index.md's content, you wouldn't be clobbering the changes you needed to preserve. You'd just have to remember to swap out or uncomment the changes.\n{# some changed text or tags #}\n. Okay, I'll get that updated shortly. It doesn't matter as much to me, it's just easier to edit without the line breaks. :wink:  Either way, I'd rather see it consistent. I just wanted to ask before I formatted it one way or the other.\nWhat about the content? I tried to make a few sections more readable, but only in that first section I was working on.\nAt some point, I'd like to look over all the docs and clean them up accordingly. :smile:\n. https://github.com/picocms/Pico/commit/0c85d708204c72fc80dcfc07344036eaf10e4d08 Well that's certainly more than one line.  I take it you like the idea?  Yours is certainly more elegant than the ? and '?' ~ current_page.id ~ '&' I'm using right now. :wink: \nNot sure how you plan to handle the reading of query data (most of your code is over my head), but it'd be neat to keep it in array format.  With the example above that I'm using, I have access to various bits of the query using TwigGetUrl.queryitem.  ?page=5 is accessable as TwigGetUrl.page.\nAnyway, looking forward to seeing how this comes out. :smile: \n. :disappointed: \nI look forward to discussing it more.  Just gonna dump some thoughts here while I'm thinking of them.  I know you're busy, so don't feel like you have to read or respond to this today, I'm not expecting you to. :wink:\nI'm no security expert, or even a php programmer, but here's how I see it:\n1) Pico is already using query strings for its routing system, meaning any way a malformed or exploited url could break Pico's PHP already exists (and is presumably already protected against).\n2) Since this variable would pass through Pico without being modified, there is no way for it to interact with PHP at this stage, therefore no PHP security concerns (for the moment).\n3) My assumption about your security concerns is that they therefore must occur in the processing of Twig.  A malformed or exploited url could break Twig.  At this point though, it seems like any breaking would be occurring outside of Pico, and therefore not really Pico's concern.  Not a great way to look at it, but I wanted to throw that out there.\n4) So at this stage, responsibility would seem to fall on the theme developer and/or Twig itself.  I'd argue that any input validation would be the responsibility of the theme developer, since only they would know what kind of value to check for.  If their theme breaks because they didn't validate it, then that was their fault and nothing Pico did wrong.\n5) Any breaking that occurs because of a malformed or exploited url within Twig should be extremely minor.  This would most likely just cause a conditional statement to return incorrectly or something.  Depends on how the theme developer was using the variable in the first place.  I just dumped a whole bunch of crap into a query string and couldn't manage to break my own implementation.\n?page=3*2\"5(%00g77+3  config.NotePaper.toc.text config.site_title site_title {{ site_title }}\nUsing this value, not only did Twig print the value on the page properly (minus the %00, which got correctly interpreted as null and thus didn't display), but it didn't even break my math code. Twig's math apparently ignored everything after the initial \"3\" and all of my links and page rendering continued to work as if it read ?page=3.  Apparently, Twig is already really good at handling and escaping information.\n6) Finally, if there is a way to severely break Twig using a malformed or exploited url (maybe one containing PHP code), this would indicate a huge security issue in Twig that should be fixed.  Again though, not an issue with Pico.\nAnyway, didn't mean to rant.  Apparently I had a lot more to say than I thought.  Again, this is just my perspective on the matter, and as my knowledge of how PHP, Pico, and Twig work internally is quite limited, I fully expect to be wrong on a few of those points.\nI do at least understand why non-validated user input could be a problem, and that it's usually how most exploits occur to begin with.  :wink:\n. So in relation to this, I now have a third feature I've written for NotePaper that utilizes this, a Tag Cloud.\nI'll get back to that in a moment though. The first two features are a custom implementation of pagination (which excludes any \"Widget\" pages), and a rudimentary search feature (which searches page titles, descriptions, and content for a query).  Both pretty basic tasks that don't involve any complex data.\nAnyway, so the newest feature I created is a Tag system, which can parse a meta.tags variable and create both a list and \"cloud\" of tags for your page.  The list is mostly uninteresting, but the cloud is pretty cool.  It makes the tags different sizes based on the number of occurrences.  It's my attempt at recreating the common \"Tag Cloud\" widgets that different blogging platforms usually offer.\nThis feature on its own works fine without reading query data, but it loses its interactiveness.  When it prints the tags on the page, they are links ending with \"?tag=tagname\".  Clicking them basically mimics the search feature but checking against meta.tags instead of the name/description/content.\nNow that I've rambled on about that... I did actually have a point. :unamused: \nI wanted to offer the Tag list/cloud code for the cookbook if you think others would find it interesting.  It's somewhat long however (about 100 lines), and still has some limitations.  For instance, tags can't yet contain spaces, because it breaks the query string and fails html validation, but it should be easy enough to substitute the spaces when I get around to it.\nSo anyway, if you think it's interesting (despite being non-interactive without a query plugin), I'd be happy to clean it up and document it for the cookbook.  If you're interested, you can have a look at the code here.\nI'd still like to have that conversation about reading query data if you have time.  \nIf you have any other suggestions for making things interactable, I'd love to hear them.  I just want to be able to click on a link and have it affect the rendering of the next page using Twig.\nIf I were using PHP, I feel the answer would obviously be using a GET request and query data.  Not having that capability is limiting my creativity. :laughing:\n(Well, I guess it hasn't been that limiting, since I've gone ahead and written features around query data anyway... still, I'd like to have a \"proper\" way for them to work.)\n. lol, I completely forgot you were making Blogging plugins.  Hope I didn't write that tag cloud for nothing. :worried: \nOh well, it was fun to do, and a good practice.  I think Twig's a lot more powerful than you give it credit for. :wink:\nI've always enjoyed writing web pages, but I don't often have the content to fill them with.  Writing a theme for Pico provides a fun solution for that problem.\nIn the next version, I've expanded the idea of css overrides to being outright \"themes\" for NotePaper. NotePaper would be more of the structure, with the appearance being flexible (since wood grain and sticky notes may not be the look most users are going for exactly).\nIt's grown a lot since I started it.  I wish I'd had it on GitHub since version 1.0, because that file is long gone now. :disappointed:\n. Thanks for the reassurance, but I was mostly kidding. :sweat_smile:\nI'm really not upset about it. I look forward to seeing what those plugins look like. :smile:\nMy vote would be to call them \"Optional Extras\".  A separate download, but front and center.  Also, make sure they're clearly labeled as \"Official\" that way users would feel confident about using them.\nI forgot to mention earlier, but my \"Productivity Time\" should be coming back later this week so expect more activity from me.  Long story short, my job usually involves a decent amount of \"on call\" time where my only responsibility is to be ready if I'm needed.  It gives me a nice mostly-quiet productivity environment to get stuff done with only occasional interruptions.  Dec - Feb has been an exception to this, but soon it should be business as usual.  What better way to use free time than work on Open Source though. :wink: \n. :+1: Nice. That cutoff gradient does seem a little odd though, but I think I've got a solution.\nTry adding this :wink::\n.top-wrapper header {\n    border-bottom: 1px solid transparent;\n    border-image: linear-gradient(135deg, white, #2A2A2A 40%) 1;\n}\nFYI, I've never actually used border-image before.  I just thought it really needed a gradient bottom border so I looked up how to do it.  Might have to remember this for the future though...\n\n. If it means anything, my feedback was going to be: \"If it's a bug in Ubuntu and they don't feel like fixing it, I wouldn't bother working around it.\"\n12.04 is an old release, and although it's still supported by Canonical, it's gotten to the point where they aren't paying much attention to it (especially with a new LTS due out in April).  Given that it's a bug in SSL, I'm surprised they wouldn't address it, but with the bug labeled \"Undecided\" importance, I wouldn't expect them to at this point.\nOn a side note, I just realized that bug was reported Sept 2011... over a month before development of 12.04 was even started... :confused:\nAnyway, I didn't end up saying anything because I'm out of my league on these development issues and because you found an answer pretty quickly.  I would wonder about your fix though.  Why does it work?  Did someone put a workaround into curl causing it to fallback to SSLv3 automatically?  Might be worth investigating.  I'd like to say that anyone having issues should just upgrade to 14.04, but there's probably a lot of older web-hosts that haven't upgraded, etc.\nI don't mind chiming up on issues like these... I just worry that I'll get annoying and/or not really be of use. :wink:\n. Personally, I'm either anti-social and keep quiet, or I'm so talkative I'll reply every other comment.  There is no in-between. :laughing:\nI think the feedback problem stems from the fact that there aren't many people watching the project right now.  Other than me, you, @theshka, and one or two others, I haven't really seen anyone else here.  There's been plenty of one-off issues being opened, and there's definitely a fair amount of Pico users... just not that many interested in it's development I guess.\nThe question becomes then... how do we raise awareness of the Pico Project and not just it's software.  I don't really have an answer for that.  As you'll remember, I stumbled in the door making an Issue or two.  I probably would have moved on just as quickly if I hadn't been asked to stay. :wink:\n. Just a thought... If you wanted to add the feature sooner, it'd probably be easier to make the \"static website generator\" a manual process for the initial implementation.  The automation (presumably the harder part) could be developed in stages afterward.\nMaybe you'd want them to be two separate components anyway.  A \"worker\" that builds the static site and an optional \"watcher\" daemon/process that provides the file tracking and automation.  This would also allow users the freedom to decide it they wanted the extra automation or whether they'd rather rebuild manually.\nAnyway, just some stray thoughts from having dealt with my odd, manual Jekyll setup.\nEven if it had to be rebuilt manually each time, it might get Pico to a state where you'd want to use it for the website sooner. :wink:\n. Another random thought.  Not really big enough for it's own issue.\nWhat about having some kind of performance monitoring in Pico?  I'd call it separate from the \"static website generator\" because it could be useful for regular, dynamic Pico sites.\nBasically, I've noticed with Jekyll that whenever it rebuilds the site, it tells me how long it takes.  I've noticed that certain actions (like jsonify) take a LOT longer than others.  I think it would be interesting for Pico theme and plugin developers to be able to measure the impact of their actions.\nIt would probably be a toggle or a plugin, since it wouldn't really have a production use.\nA detailed breakdown of performance timings could be cool too.\n```\nPico Core.................................10ms\nPlugin 'something_low_level.php'..........20ms\nParsedown.................................80ms\nPlugin 'pagination.php'...................50ms\nTwig using template 'NotePaper'..........200ms\n\nTotal Rendering Time.....................360ms\n```\nThe timings here are of course made up.\nAgain, just an idea I had for the future.  I can make it a new issue if you'd like.\n. > The primary target of this feature actually is caching the HTML results to boost performance, using Pico as static website generator is just a side benefit.\nYeah, I'm interested in seeing how it plays out.  I've played with Nginx's caching abilities and seen my pages go from 500ms+ down to near instant loading times.\nMaybe I should go write a script that wget's into a static folder on demand. :laughing:\nFor the performance stats, I'm more curious from a theming perspective.  It would be interesting to be able to track performance changes between different ideas.  If I change the way something works, and all of a sudden it's taking an extra 100ms or more, I'd know that my implementation was poor.\nIt would actually be kind of interesting to see how NotePaper performs next to a barebones theme.  There's probably a way I could send a request to php directly from a shell, then time the response using some command line trickery.  I might see what I can do if I'm every working on NotePaper.  Far too busy for that at the moment though.\n. Wow, there's a lot of neat stuff in there.  I had no idea that \"Markdown Extra\" had all those features, I've only read the original \"Daring Fireball\" documentation.  markdown=\"1\" seems especially helpful, so thanks for the heads up!\n. > Add a sane way to add \"Read more...\" pages\nI lied, I have one more comment to make tonight.  I'm not sure if this is what you mean or not, but I definitely think these \"Read More\" links need to stand out better.\nWhen I worked on the Upgrade page a few months back, I had to struggle to find the link to it at first.  Same thing goes for this Nginx page.\nIf you're skimming the page, the link is practically impossible to notice.  The heading I added to the Nginx section in my PR is a partial solution for this.  I wanted it to be visible to someone who was looking specifically for the Nginx documentation.\nIt's not a complete solution obviously, as we probably don't want a new heading for every time we need to go \"hey, we wrote a page about this\".\nAnyway, just in agreement that there's an issue.  I don't know yet what the solution is, but even a giant:\nRead More: Upgrade Pico 0.8 or 0.9 to Pico 1.0\nwould be an improvement.\n(And if you actually meant \"We need a better way to organize the read more markdown files, then maybe add another bullet for \"Making read more links more obvious\".) :wink:\n. First of all, you've probably noticed, but there's a small text shift when you hover on \"Learn More...\"  For some reason, the smaller text seems to take up half a pixel more than the big text, causing the paragraph below to rise slightly when you hover.  The size of the h2 goes from 27px down to 26.5.  It's an odd behavior, and the only fix I could find was to set a height on the h2 (not a good solution, just an observation).  Actually, another solution could be to give it a position: absolute to simply remove it from the flow of the document.\nI'm not sure if I like the current style of the \"Learn More...\".  It's definitely an improvement over nothing, but for some reason it makes me think it's going to pop up one of those annoying JavaScript help bubbles.  You know, when a poor-quality website says something confusing and has to stick a (?) next to it with a pop up explanation.  I don't know why, but that's what it makes me think of.\nI'd like to help out more with the Documentation.  I've been meaning to ask about it for... awhile now.  As you've seen with the Upgrade and Nginx pages, I can write a half-decent document when I set my mind to it.\nI just need some direction.  \"Extend and revise the docs\" has always been a bit vague.  If you can come up with some guidelines to what kind of changes you'd like to see, I'd be happy to work on it.\nTomorrow (4/27) I should have some time to continue the Nginx page.  If you want to give me another project to start on after that, just let me know. :wink:\n. I'll start going through everything and see what I can come up with.  I think I get what you mean though.\nWhat we've got now is the simplified, overview of Pico.  We have the short, simple examples that are designed to\n1. Get the user setup with Pico as quickly as possible and\n2. Not overwhelm the user with too many details.\nWith that basis, it seems what we lack falls into two categories. \n1. Expanded sections that provide broken-down baby-steps explaining the how's and why's of using Pico.  Information on Markdown, YAML, Twig (and more specifically its role in Pico), Creating content, personalizing your experience, etc, etc.  If we get more issues opened by... one user in particular, these should be docs that we can point to saying \"Did you read this first? It explains everything you've just complained about.\"\n2. Expanded information and tips for advanced users.  Deep dives into examples of Theming and plugin development.  Ways to use Pico in more elaborate situations.  Examples that show how Pico can be used for any level of project, not just a simple website with a few pages.\nWe should expand the documentation from mostly being on a single page to wiki-like levels of detail.  It should provide more information than you need to know, but in a way that's optional and doesn't feel like required reading.\nPerhaps the reason we've gotten a few issues like what I mentioned above is because Pico's identity is still a little under-represented in the current documentation.  The website briefly describes what Pico is, but now how it should be used.\n\nPico isn't a turn-key solution, but rather a slim and powerful platform that, with a little perseverance, can be much more personalized and elegant than the competition.  While software like WordPress exists to be that turn-key solution, it's a bloated, heavy, and hard to customize experience.  It can be great until you hit that brick-wall of discovering that you can't accomplish what you wanted with its existing themes and plugins.\nThere are far too many static websites out there that were built on WordPress out of convenience.  (I'm not trying to solo out WordPress here, it's just the example I was using.)  Pico's documentation needs to help a user better understand what Pico is, and why they might want to use it.  \n\"A stupidly simple & blazing fast, flat file CMS\".  Great, but that's the what, not the why. \"Pico is a lightweight, easy to use framework for building and managing a customized website using simple Markdown files.\"  Okay, that's not great either, but I was trying to cram it into one sentence. :laughing: \nI think I've rambled a bit here, so /rant.\n\nThe last thing I wanted to touch on was my writing style.  With the two pages I've done so far, I've tried to go for a \"tutorial speak\" tone of voice.  I've been trying to use casual language to explain things with a little more personality.  The current Pico Documentation is a little more sterile, but I feel like overall it too was going for that more casual approach.  Personally, I think it makes the reading less intimidating than, say, trying to read manual pages for example.  I'd like to continue this tone with any new content and keep Pico looking like a friendly option.  Perhaps try to build up a community a bit while we're at it. :smiley: \nWhat do you think about this tone? I don't want it to sound too much like \"hand holding\", but I'd rather that than sounding too much like a robot.\n. Actually, in relation to that rant.... Maybe that's the best place to start!  A page detailing \"What is Pico\".  It's something very noticeably missing from the existing docs.  Other than the bullet points on the splash page, there's really no information on what Pico is.  Right now, the Documentation jumps right into How to Install Pico, without going onto why you'd even want to.\n. Okay.  I'll work on it sometime when I'm free.  You see, I've stumbled a few times trying to explain to others what Pico is.\n\"I've been working on this thing called NotePaper.  It's a theme for a software called Pico.  It... um... makes websites out of Markdown files.  Oh, Markdown is... you know what, nevermind.  I make a thing that you can use to make a website that looks the same as mine... using this other thing that makes websites.\"\nThat's pretty close to the kind of conversation I've tried to have with non-techie family members.  I'm sure any user that doesn't immediately understand the terms \"flat-file\" and \"CMS\" on Pico's splash page are probably feeling about the same.\nI want to write the page that will convince them that they'd rather use Pico than another solution. :smile: \n. > Use Webpaint portfolio to re-implement customization.md\nThat could be pretty cool.  I plan to keep chipping away at the website after the About page is done.\nSince it's within my knowledge to work with it, I can focus more on the website while you continue work on 1.1, etc. :smile: \n. Food for thought, but would a \"History of Pico\" page be something you think would be interesting?  Or do you think there would even be enough content for one?\nTwo main talking points could be\n-  @gilbitron's original Pico and the direction he planned for it.\n-  Pico's \"revival\", and the reasoning behind that.\nJust bringing it up because it was asked about in #355.\n. What about a page called \"Upstream Projects\" that lists and goes into some detail about which upstream projects Pico is built on?  I don't think this information is actually listed anywhere at the moment...\n. Yeah, I was thinking of a combination of \"thanks\" and \"blame them\". :laughing:\nSince they aren't listed on the website though, many users may not realize Pico is built on existing technologies.  I've seen plenty of Issues opened about upstream bugs (yesterday's being what made me think of this).\nI doubt it would reduce the number of these Issues, but it would at least be a place people could reference or that we could point people to.\n. Hmm... I think you can check off that reference to #349 (#352) now. :wink:\n. Some brief searching in Atom doesn't reveal anything.  I'll keep an eye out for issues though.\nThose _config.yml variables sure come in handy when migrating. :wink:\nWhen will picocms.org point to the new repo?\n. > Soon, I'll contact @picocms to migrate the domain.\nlol, I figure that would be part of the process.  Good luck with that.\n\nshould we manage Issues regarding Pico's website (including Pico's docs) here or in the picocms.github.io repo\n\nProbably over there, but I guess it depends on how you want to treat it.\nIt could be treated as a separate entity, or we could consider it as more of a \"dummy repo\" that's just for code.\nThere's also some of GitHub's integration to think about.  It's much easier to link to and discuss items belonging to the same repo.\nI think I'd lean toward migrating things over there, but I'll support whatever you decide.  You've got a little more experience dealing with these sort of things. :wink:\n. Sure. :+1:\nI think I can handle it. :smile:\n. Okay, so taking a look at https://southernhedgehogs.org/pico/, I'm guessing that you're trying to build your site off of the default Pico theme.  While this is okay, please note that the default theme is older, barebones, and really just meant to get you started.  We're even discussing replacing it in a future release (https://github.com/picocms/Pico/issues/270).\nThe default theme is really meant to be a simplistic sample for you to look at to get a quick idea of how Pico and Twig work.  The real power of using Pico comes from leveraging Twig templates (Pico \"Themes\") to customize Pico to your liking.  Obviously you've messed with this a little with the changes you've made so far.\nYou'll also notice in the Pico Documentation, the very first line under Blogging reads: \"Pico is not blogging software\".  That being said, that doesn't mean that it can't be used for blogging, but as you're discovering, it just takes a little extra effort.  No part of Pico is pre-configured for blogging, and the examples provided in the docs are just that, examples.  They should get you started, but you'll have to invest a little more time to refine the behavior of your site to your liking.  Personally, I find this to be Pico's biggest advantage over Wordpress and other solutions.  With a little effort, you can customize everything to meet your needs.\nMe or @PhrozenByte would be happy to help you solve individual problems and Twig conundrums, but we cannot write your entire site for you. :wink: You should check out http://twig.sensiolabs.org/ for quite literally all the knowledge you could ever need about writing Twig templates.  Their documentation is very good.  You can use what you learn there together with the Pico Docs to figure out how the two work together.\nFinally, you can check out the Customization Section of the website, as well as the Plugins and Themes sections of the wiki for some more \"ready-to-go\" options.\nPersonally, I write the NotePaper Theme (Example Site), which has some basic blog-like functions.  I've got a new 1.5 release coming out this week (possible later today if I get it together), so you can check back for that soon.\nUltimately, if you find Pico doesn't suit you needs or is too much work for you right now, come check us out again when we reach version 1.1.  We've got some dedicated blogging features planned for that release.\nI hope this helps get you going in the right direction.  Again, we're happy to help as long as you are willing to keep the discussion kind and courteous.\n. Yeah, you should try talking to the customer support of your webhost.  They may also be able to provide more insight about their configuration.  They might even be willing to make changes if necessary.  Customer support reps are usually able to pull some strings if it means keeping a customer.\n. :+1: \nAlso, glad to see some of my ideas in that list. :wink: :smile: \n. I like the modular config implementation (https://github.com/picocms/Pico/commit/988a23fd024b065811185fca517939e59d561473) (the concept of it, can't really critique the php).\nMy only concern would be that .config.php is an odd naming convention / file extension.  There isn't really anything wrong with it, it just struck me as odd.\nIn practice, it would probably work well though.  NotePaper.config.php is just as good, if not better than NotePaper-Config.php.  :unamused:  It just seemed like a weird thing to require.\nI suppose it'll help enforce a unified naming scheme between developers though. :laughing:\nAnyway, nice work with it.  I was expecting a feature like that to take more than one commit! :+1: \n. > New ToDos:\n\n\nBreak EVERYTHING, but in the nicest possible way.\n\n\n:wink:\nAlso, while I like the idea of having data files (extra possibilities are always fun), I wonder how useful they'd really be.  Right now, you'd have to utilize them in your theme to have them do anything useful, and I don't really see the advantage of that over using config variables (other than maybe easier formatting).\nNow, if this were combined with something like template_from_string and some custom code on a specific page that acted on its extra data... well, it would behave a bit like Jekyll, wouldn't it... :unamused:\nStill, it'll be interesting to see what could be built with these extra data structures. :smiley:\n. When I said \"Break Everything\" I meant with the variable name changes.  Not sure if that was clear. :sweat_smile:\nI was just trying to be funny. :laughing:\nAnyway, it definitely all sounds interesting.  Honestly, I don't care what gets broken.  I'm the biggest fan of having \"new stuff to play with\".  I'd rather be on the bleeding edge of my software than be bored. :wink:\nSo... are you implying that template_from_string will be enabled? :smirk_cat:\n. > Oh, I overlooked that this needs to be enabled manually.\nOkay.  Yeah, a while back I wrote a modification for NotePaper replaced most {{ content }} tags with template_from_string versions and used a \"plugin\" (one or two lines in the DummyPlugin) to enable the feature.\nIt works surprisingly well, but the setup was over-complicated and I didn't actually need this feature, I was just making it for fun.  I felt that I was \"messing with forces beyond my control\" (or some other over-dramatic super-villain-y warning), and decided not to commit the feature.  After all, there must be a reason this isn't on by default, right? (Such as security concerns).\nAt some point I'll probably polish it up and release it as an optional feature.  It doesn't really benefit NotePaper much since NotePaper is geared toward written content and doesn't leave much wiggle-room for restructuring its layout.\nMaybe Pico could offer template_from_string as an advanced config option?  Something we'd only recommend to power users who need (or expect) the ability to use twig in their content files.  People coming from Jekyll or other CMS's.\nBy default, Pico's content files should be for content, nothing else (thus, the default).  But content could mean different things to different people.  With some of the new YAML data options planned, template_from_string could provide some nice added utility.\nImagine that you had a large data-set you wanted to put in a table.  This data changes often, and you really don't want to have to edit an HTML table every time a change occurs.  Or maybe you want to have it sorted alphabetically, but not have to do this by hand every time you add data (mix in shifting table-rows, and that would be a nightmare).\nBy placing your table data in a matching .yml file, then generating it dynamically using twig, you could save yourself a lot of work. :smile:\nI'm sure I don't have to go into hypothetical situations with you, you're the programmer after all. :wink:\nWhat do you think of making this a toggle though? :confused:\n. > It's absolutely fine to create a template which is literally used by just a single markdown file.\nYes, but that was my point.  You could do that, but it's a cumbersome and roundabout solution for a one-off layout.\n\nThat's one of the reasons why themes should use includes to provide the basic layout\n\nYou've technically got a point there... :unamused:\n\nThat's why Pico provides a sort_by Twig function... :wink:\n\nYou've missed the point here.  This is exactly what I was implying, but in the context of my argument, you would be using it in the .md file instead of a Template.\n\nTherefore: No.\n\nOne of these days I will successfully sway you in an argument. :persevere:\n. It's never a clear victory though. :stuck_out_tongue_winking_eye:\nIt's good that you've always got a clear focus of how you want things done though.\n. That is why you supposedly keep me around, isn't it. :stuck_out_tongue_closed_eyes:\n. > Pico Admin just got a major update!\nLooking good!\nWow, you're building this from scratch? :+1:\nAt first glance, I thought it was built on the ever-forked Pico Editor. :laughing:\n(A much improved version of it, of course :wink:) \n. Definitely!\nAnd I think the sheer number of forks it has shows just how long that plugin has been on \"life support\" for.\nI look forward to seeing the finished version.  Although I probably won't use it myself, I think it'll solve a barrier of entry for many users (especially those using a web host and/or shared hosting account).\n\nPersonally, I like my own setup.  I have all the \"common files\" of Pico symlinked to one Pico install on my server, with the unique files (content, config, assets) synced by Owncloud/Nextcloud.  It gives me local access to all my content, while automatically uploading any changes.\nI'm just spoiled though. :sweat_smile:\n. Just some random brainstorming, but what about having another copy of the file tree show as part of the save dialog.  Not a full featured file manager, just a copy of the tree view you already have.\nYou wouldn't be able to navigate anywhere, it would just provide a more intuitive place to click to grab the filenames from.\nAlso, you'd probably want to dim the rest of the page while the dialog is up in this case... otherwise the two identical file trees would look weird.\nWhat do you think?  It would function the same as what you're already describing, but would hopefully feel more intuitive than having to click on the regular tree.\nMost UI's train us that when a dialog box is open, we can't click on what's underneath.  I think that's the main problem with your suggestion.  It goes against that usual experience and that makes it feel \"wrong\".\nEdit: I made a mock-up.... because I could. :laughing:\n\n. Well, that's up to you.  Just wanted to offer my two cents. :wink:\nYou said you were trying to avoid a \"full-featured dialog\", so my idea was a compromise.  It's functionally the same as what you've suggested, just presented differently.\nI thought you were more worried about the logistics of a \"full-featured dialog\" (extra coding or dependencies, security concerns, integration with the other parts of the plugin, etc) than the appearance.\nPersonally, I think your version looks okay.  It reminds me a lot of Atom's file renaming box (and also its command palette).  But it does still need something.\nIt could be as simple as highlighting the navigation box to draw attention to it when the save dialog is up.  Something like a 1px, Pico-colored, border around the navigation tree.  That could very well look awful, but I thought it was a good example. :laughing:\n. As always, there's a line you have to balance between minimalism and usability.\nI don't like the idea of dropping the \"Create New\" button, that just sounds like it'd be confusing. :confounded:\nI think the goal should be to make the UX to be as intuitive as possible, even at the expense of some minimalism.  The idea of a \"Create New\" button next to every page is confusing.  If this were a \"Duplicate page\" button, that would be okay, but \"Create New\" is confusing.\nWhich \"Create New\" button should I click? Does it matter as long as it's in the same directory? Am I overwriting my existing file by clicking \"Create New\"??  These are questions I'd be asking as a new user (of the Plugin, not necessarily Pico).\nIf you're really set on using this \"Notification\" style dialog, I think your original idea is much better.  There's nothing really \"wrong\" with it.  If you hadn't asked for input, I wouldn't have thought anything bad about it.\n\nI'm thinking of both UX and amount of work.\n\nAs far as my proposal goes (the file tree dialog), I wouldn't think it would take much effort.  Of course, I don't know how your current code works either.\nThe idea was that you could reuse/call the same code that draws the file tree in the first place.  It would function exactly like you described in your first comment, https://github.com/picocms/Pico/pull/334#issuecomment-234104177, but would just be in a different place on the page.\n. Also... I really don't like that green notification/dialog. :wink:\nGrey was much sleeker looking.\n. Also, I forgot about the \"text-field\" idea.  It's okay, but still not as good as the initial concept.\nInstead of a text field, maybe a \"Create New #\" (replace # with a new page icon) button that appears at the top of the directory you're currently hovering over.  This would be significantly less confusing than the \"next to every page\" idea.\nWhen a user clicks on this button, have the \"Save As...\" Dialog from https://github.com/picocms/Pico/pull/334#issuecomment-234104177 appear, populated with that location.  This would be labeled \"Create New...\" or something, not \"Save As...\".\nFurthermore, with this setup, it could be used for \"Save As...\" as well.\nWhen a user clicks \"Save As\", the dialog appears from https://github.com/picocms/Pico/pull/334#issuecomment-234104177, with the previously mentioned \"click on the navigation\" message.\nBut, the Create New buttons are also there now.  So if a user wants to save as a new file in a particular directory, they can click the corresponding \"Create New\" button to populate the field with the directory path, the same as before.\nThis example has kind of shifted to a \"Create New\" system instead of a \"Save as\" like you originally asked about... I liked where my idea was going though. :laughing:\nThe only thing I don't know about is how this \"Create New\" button would \"push down\" the directory contents without being annoying.  Maybe it should always be displayed, but faded instead of hidden.\n(Edit: Maybe instead have a \"New Page\" and \"New Folder\" button next to each directory.  You'd probably want to add the Root directory to the tree as well, just for a place to put these buttons.)\nEven with this \"Create New\" button, I think it's counterpart should still remain in the default toolbar.  Sometimes you just want to write without knowing if you're going to save it or not. :wink:\n. > specifically @smcdougall\n\ud83d\ude06\n\nOverall, I've got no opposition to renaming this release.  It's had very lofty goals from the beginning and always felt like a bit much for a single minor version bump.\nThe way you've described the plugin dependency issue seems like something that was once minor has snowballed into a bigger issue.  I don't see what the point of trying to work around it would be, since any fix would both be only temporary and somewhat hacked together.  It'd be a lot of extra effort for the sake of keeping the version number the same.\nSo, your logic is pretty sound.  It seems like it'd be a good idea to label this 2.0 going forward.  I mean... it's just a number after all. \ud83d\ude09 \nAnd the other issues you mention seem like they'd be decent quality-of-life / UX improvements, so it's a good excuse and time to take care of those as well.. Nope, way over my head. \ud83d\ude09. I am definitely, 100% for using YAML-based config files.  When put together with reading all configs in the folder, I think it would be a huge UX improvement over having to paste custom lines into config.php.\nI'd envision that a theme could ship with it's own custom .yml to be placed into /config.  Perhaps we should also call this the \"recommended\" method as well, because at the moment there's no standard way of adding variables.  Some themes provide a standalone .php config (NotePaper), others have lines to add to config.php.  Some themes use the YAML Frontmatter of index.md for variables (for example, other themes that @BesrourMS and I have ported).  It's kind of a mess... \ud83d\ude05\n\nAs far as the Composer stuff goes, I don't know much about it.  \ud83d\ude12\nAs always though, simplicity is better.  Multiple theme/plugin folders sounds like a headache.\nAlso, separating pico-deprecated and pico-theme into separate repo's sounds like it could be handy.  Personally, I think these could be optional items.  Do we really have that much community content that still relies on the pico-deprecated plugin?\nThe release of 1.0 seemed to do a good job of clearing out old content.  90% of the items in the Wiki got updated, and most of the remainder aren't really relevant anymore.  Not sure if this will hold true for 2.0's release or not, but my point is just that I think those still interested (and up-to-date) with Pico are using modern add-ons.\nNot that it weighs in too heavy at 15.9 KB, but I think the idea of it being in a separate repo furthers the idea that it is only meant to be a workaround for older content, not a permanent solution.\nJust my 2\u00a2 though.... and at this point I'm rambling... \ud83d\ude09. I don't know, I don't have a good feeling about this.  It's one thing to support Pico on your platform. In itself, that seems like an okay idea.  It's another thing entirely to include a section about it in Pico's readme (or even on the website for that matter).  At that point it would appear not just to be supported, but endorsed by Pico.  Neither of which are really the case.\nFurthermore, let's be honest here, this is advertising.  Plain and simple.  I don't think that Pico should be advertising for a service that it's not affiliated with, even if it did provide a good service.\nI don't think there's any benefit to this either.  I feel like current users will be unlikely to need such a service, and may not appreciate being advertised to.  More importantly though, I feel like this could be confusing to new users.  With such a prominent location in the readme, new users may feel that this is the recommended option for setting up Pico, rather than just a third party service.\nMy vote is No.  If you want to include a Pico Quick Start option on nitrous.io, great, more power to your users, but I don't think the advertisement for it belongs in Pico itself.\n. In order to block access to config or other folders, I think you'd need to match it with regex similar to this:\nlocation ~ /(config|content|content-sample|lib|vendor)/.* or location ~ /config/.*\nThe important part being that you'd need to tell it to match anything in the config folder, not just the folder itself.\nIf you haven't checked it out yet, there's some more examples at https://github.com/picocms/Pico/commit/d8f916691809b19b05104906ee3700c5cf3f8407.  The discussion started there, but should really be continued here.\nIt's a really funny coincidence that you brought up the Nginx issues when you did because I just decided to check it out.  Together it seems we've generated a bit of interest on the topic.\nNot sure if I'd agree with the idea of including the php block in every location block... but I didn't even know you could nest location blocks.  I've got a lot of similar sections across several different site configs, so I plan to explore using include to simplify that process a bit.\nSo far it sounds like we have three different approaches to the subject that each have some benefits and drawbacks.\nUltimately, there may not be a \"right\" answer, but we'll have to decide what would be the best configuration for new users.  An experienced Nginx user will likely be able to take whatever example we provide and fit it to their own needs/preferences anyway.\n. So, there's a few criteria that I think should be focused on for the example config:\n- Ease of Use - The easier to implement, the better.  If it can be configured in a way that requires almost no user interaction (like being as simple as adding .htaccess), that should be the goal.  If possible, require no editing by the user.  Perhaps it's just a config file that they add to their site config using include.\n- Performance - One of the biggest benefits of Nginx is the performance it brings.  From the brief research I've done, it seems that different solutions can have vastly different performance.  They even have a section of their documentation titled Things to Avoid at all Costs.  I'm not sure, for example, if using Location to rewrite the url vs using rewrite has any sort of performance difference.  They both seem like valid options, but if I had to guess I'd say rewrite is more taxing.  While this difference is probably not enough to matter, we should still treat each situation as if it will be a production level deployment with tons of simultaneous users.\n- Simplicity - Why write in 50 lines what can be done in 10.  The example should be simple and easy to read.  Unfortunately, I think it'll be hard to draw the line between what counts as \"configuring Pico\" and \"general Nginx configuration\".  Do we hold the user's hand to make sure they get PHP configured properly or should this be up to Nginx tutorials?  As I've described, I had a lot of difficulty with PHP due to the way Nginx processes Locations.  The information on this issue was surprisingly hard to find and not something that was immediately obvious to me when I encountered difficulty.  We could write probably write pages and pages about different configuration solutions, so I'm really not sure where the line would be drawn.  Perhaps provide a simple example config, but an entire page of additional reading if the user is interested.\nJust some food for thought to hopefully spark more discussion.\n. Ah, that makes sense.  Good to know.\nDo you have any other input on the criteria I thought up?  You seem like you're probably the most experienced of the four of us right now. :smiley:\n. So what has worked well for me was a separate pico-common config that I include in all my Pico sites.  It contains all the access rules and the php rule.  The main benefit being that it gives me one place to edit the common settings for all my sites.  I also have a second pico-root config that contains the rewrite rule currently in Pico's docs.  Most of my sites have Pico in the Document Root, so I just include pico-root for quick access to that configuration.  The one site I have setup with dual Pico subfolders has it's own configuration instead of including pico-root.  Here are the two examples:\n- pico-common\n``` nginx\n        index index.html index.htm index.php;\n    location ~* /\\.ht {\n            deny all;\n    }\n\n    location ~* /(config|content|content-sample|lib|vendor) {\n    return 404;\n    }\n\n    location ~ \\.php$ {\n            fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n            fastcgi_pass unix:/var/run/php5-fpm.sock;\n            fastcgi_index index.php;\n            include fastcgi_params;\n    }\n\n```\n- pico-root\nnginx\n       location ~ ^/(.*) {\n                try_files $uri $uri/ /?$1&$args;\n        }\nPico-root (or a manual rewrite configuration) gets included after pico-common in the server block.\nWhat I'm aiming for here is simplicity.  I like writing something once and using it everywhere.\nJust wanted to share what seems to be working well for me.\nI plan to draft up a Docs page about Nginx configuration sometime later today.  My plan is to extend the existing section slightly, then link to another page entirely about Nginx.  The page will be able to go in depth about the how's and why's of different configuration tips.  It'll touch on important points, like Nginx's processing order, the fact that Nginx uses a centralized configuration (and how that makes configuring Pico a little harder), etc.\nObviously I'm by no means an expert on the topic, but I think I've gathered enough information to provide a good write-up on the subject.  After I get the initial write-up done, it'd of course be open to further contribution.  @iwedler, I'd especially like it if you could weigh in a little on your config, such as why you prefer your @pico fallback location over the regex location method (Pros, cons, etc).\nI'll link the page and the PR here once I've written it.\n. That's true I suppose.  It got lost somewhere in my quest for a universal config. :laughing:   Would you rather I restore that example to the Docs and use the location ~ ^/pico(.*) as an optional \"How to configure Pico in a subfolder\" example?\n. Random discovery:\nSetEnv PICO_URL_REWRITING 1 in Apache is\nfastcgi_param PICO_URL_REWRITING 1; in Nginx (in the PHP location block)\nNo more $config['rewrite_url'] = true; :smile:\nThat'll definitely be going in the Nginx page.  I'm partway done with it so far, but it's taking longer than I though.  Probably won't have it up today, but it's definitely in progress.\n. I finished a rough draft of the page.  Take a look at #345.  Any input is appreciated. :smiley:\n. I had forgotten about cgi.fix_pathinfo.  Since PHP configuration is a little out-of-scope for Pico's docs, it sounds like the best solution would be to match only index.php.  I'll probably add a brief explanation and/or a link with more details about why we've chosen this.\nAlso, I'd like to make the PHP block as simple as possible.  While the other blocks are meant to be copied, the PHP block is really just an example.  I'll try to emphasize this a little more.  Since PHP configuration is somewhat dependent on the user's system, I don't want them to just copy and paste it.  It should only be used as a reference.\n. :confused: I've actually flip-flopped on this and I think I'd rather just mention cgi.fix_pathinfo as a warning.\nI've had time to reread my page and remember that I planned to link to a php-fpm tutorial anyway.\nI don't like the Nginx Wiki's example because it uses an if statement and I'm trying to keep the configuration as lean as possible.\nAlthough I like the elegance of specifically matching index.php, I feel like it would be over-complicated to explain.  I think it would require extra effort as well, such as:\n- If you used location /index.php$ You'd have to either have Pico in your Document Root or configure it to include your subfolder.\n- If you used location ~ /index.php$, you wouldn't have to configure anything, but I feel you'd still be vulnerable to the security risk described above.\nOn top of that, I think I'd have to break PHP Configuration into \"Document Root\" and \"Subfolder\" sections, which would make it more confusing.\n. Nah, now that I've thought about it, I don't want to lock it down to index.php either.\nAnd Nginx even states that If is Evil. :laughing: \nThe thing is though, if they haven't followed another guide to properly setup php-fpm, then it's not going to be listening on that socket anyway.  The copied Nginx rule won't do anything as far as I know.\nI think a good, \"Warning:\" should be sufficient to inform a user about the security issue.  Ultimately though, nothing we're providing in this example is at fault for the security issue. :confused: \n. It's a tough call.  I really don't want to make the example code more complicated than it has to be.  Also, to me, it feels a lot like a workaround to what is clearly an insecure default setting for php-fpm.  I don't like workarounds, lol, I'd rather a proper fix.\nI will give it credit that it's the official recommendation of the Nginx Wiki though.  I can see merits to doing it either way.\n@PhrozenByte, @iwedler, what do you think?  I'll go whichever way the crowd goes on this issue.\n. I'll likely include the if statement.  The only extra security it brings is security from the user's own misconfiguration, but that is still extra security.\nUltimately, if the user wants to remove that line because they feel they know better, they can!\nA user who isn't as experienced though would benefit from this extra included protection.\nI suppose it's on the same level as blocking .htaccess or denying Indexes in Apache.  These are safety measures that should be set by an experienced user, but they're provided nonetheless.\n. On the subject of .htaccess, I've been wondering what would be more secure: Denying access to the file, or returning 404.\nThe general example floating around the web is to use deny all to prevent access.  But technically this does still inform a malicious party that there is a file there, it's just being denied.\nReturning 404 on the other hand, would be the same response they'd get if the file really didn't exist.\nI'm sure there's a good reason that deny all is used in every example I've come across, so I'm not about to change it.  It's just something I've been wondering about.\n. I don't know.  I don't think so, because the issue is with php-fpm, not Nginx.  Nginx doesn't actually try to load the .php file, it just passes the path along to php-fpm.  If we put a try_files in there, my suspicion is that it would either:\n- Try to serve the .php file as a download if it was before fastcgi_pass, or\n- Ignore try_files altogether if placed after fastcgi_pass.\n. @PhrozenByte On a side note, how does the document read to someone who's not familiar with Nginx?  I tried to make it both informative and easy to skim over for someone who already knows Nginx.\n. I'll try out that example in a little bit and see if I can't break it. :smiling_imp:\nI'd love for the solution to be that simple, but I have my doubts.\nOverall, I think the content of the page is done.  I've reread it a few times and it seems pretty good to me.  I'm just looking for things that may not come across as clear as I thought they did.\nI've also got to decide what to do with _docs/config.md.  I need to figure out if it's feasible to boil down the examples and fit just the important bits on that page, or if I'll have to take the section out and just provide a link to the new Nginx page.\n. Huh... neat.  Makes me wonder why it's not the example included in Ubuntu.  It's probably been added more recently.\nThat makes me wonder if that solution works on all versions of Nginx.  The version in 14.04 is really old (1.4.6).  It came out shortly before 14.04's release.  Really need to find the time to either upgrade my server to 16.04 or migrate it to Arch. :unamused: \nI'll test out the example and double-check that it works okay on my older version of Nginx.\n. If you mean the path for config, content, etc, I don't think you'd have to adjust it for a subdomain.  Since your regex doesn't begin with ^, it'll match it anywhere in the url, not just at the beginning.  You'd still have to change the path on the error_page line, so perhaps that's what you meant.\nI hadn't thought of adding those other files to the 404 rule.  That's a good idea.  I'll test it out sometime and add something similar to the example.  @PhrozenByte Those files should probably be added to Pico's .htaccess as well.\nThis doesn't actually answer the question you quoted from me though.  I was asking specifically about the .htaccess file itself.  Is it better to deny access to it or to return 404?  All the examples online suggest using deny, but my own logic tells me that using return 404 would be \"safer\".\n. My assumption for his reasoning is that these are files that are included by default in Pico, but not intended to be accessed on the webserver.  Although they pose no security risk, they are files that a determined user could navigate to.\nI don't know if they should be blocked or not, but I had never thought about the fact that they can be accessed.  When I read his comment, I had a moment where I thought \"you can't do that... can you?\".  Sure enough, if I navigate to /README.md on one of my Pico sites, it does indeed fetch me Pico's readme as a download.  (Well, it would, if it wasn't NotePaper's readme I have stored there...)\nIt just feels a little uncomfortable.  I just went through the \"Pico Showcase\" on the Wiki... all but three entries willingly offered me their README.md file.  And one of those three appeared to be down altogether, so I can't really count that.  Two of the readme's weren't even for Pico. :laughing:\nI don't know what else to say about it (plus, I'm tired and his is going to be my last comment for the night).  I just hadn't even thought about the fact that obviously these files would be accessible.  I'd assume the same probably holds true for the owners of all the Pico sites I just probed. :unamused:\nAnyway, I still don't know if they should be blocked by default, but was my reaction after reading @Robby-'s comment.\n. I should never say something is my last comment for the night :unamused:\nJust caught up on some of the commits from the last few hours.  I'll add .git to the Nginx 404 rule like in https://github.com/picocms/Pico/commit/49cb6c144a6c8a11b408667138046c61978e92cc and see about rewriting it to Pico's internal 404 document as well.\n. I'll have a chance to finish this up tomorrow (4/27).  Do you want me to focus on 1.1 for it or focus on getting instructions finished for Pico's current version?\nI should be able to easily get the existing examples finalized, merged, and then work on 1.1 afterward.\n. I thought so too. :+1:\nI'm going to finish it up with the examples we had finalized a few days ago.  Things like using Pico's internal error page can be an enhancement for 1.1.  It's a simple enough idea, but it will take a little more debugging before I'm sure we have a bullet-proof example.  With that in mind, it might as well be done with the new infrastructure in 1.1.\n. Indeed.  I think it still deserves more discussion going forward.  For now I'm working to finalize what we had, and we can address the rest afterward.  In 1.1, it'll be much easier to use Pico's internal error page for things as well.\nI could also potentially add a tip near the bottom about blocking access to those other files.  I definitely understand where you're coming from.\n. I'm really not sure where I stand on the issue.  I'd rather keep the examples simple, but if it could be a security issue then maybe it needs to change.\nRight now, I'm looking at keeping feature parity with .htaccess.  If we decide to block these files, I feel it should be in both places.\nBy the way, I noticed something that might need to be fixed in .htaccess because it needed to be fixed for Nginx.  When you added .git to the rewrite rule in .htaccess, you forgot to account for .'s meaning in regex.  A period would match any character, so while it would technically work, it should probably be changed to \\. to escape it.\nI've done that in my current copy of Nginx.md, and I've also combined the .htaccess rule with the rest of the Pico folders, since they're all return 404 now anyway. :smiley:\n. I think I've addressed most of the concerns we've discussed here, minus the ones postponed for 1.1.  I'd call this page ready for review now.  There's probably still some last minute fixes to make, so tell me what you think.  Go ahead and tear it apart. :wink: \nhttp://smcdougall.github.io/Pico/nginx/\nhttp://smcdougall.github.io/Pico/docs/#nginx-configuration\n. Great, now I need to update it again. :unamused: \n(:laughing:)\n. I wasn't sure about those.  I had just based it on another page, so I left them in.  Thanks.\n. Thanks, those semi-colons are the bane of my existence.  I leave them off at least once every time I edit a config file. >.<\nUnfortunately, it won't work in the Pico location block.  It needs to send the variable externally to PHP, and because of how the blocks are processed, it won't \"remember\" it from the Pico block when it gets to the php block.\nIt's a two-step process, first the url is rewritten to \"/?some/page/url\" using the Pico block, then it checks it again and matches it against the PHP block.  It then sends the page to php-fpm for external processing, which is when it needs to know the variable.\n. Huh, wow, I did not notice that.  Why does it work in nginx.md then?  Wouldn't they be processed the same?\n(I put it in a code block because the * in the example was messing up my syntax highlighting in Atom.)\n. Oops, that was supposed to reissue the same commit... guess I did it wrong. :laughing: \n(Figured it out)\n. Ah, okay.  Should be fixed now.\n. Yeah, that was written with the original example in mind.  What do you think it should say?\n\"While the example... starting point, here we will provide a more in-depth look at Nginx configuration.\"\n. >  you're also covering the general webserver config, so shouldn't it be four?\nI don't know, I counted it separately since it wasn't something specific to Pico...\n\n\nGetting started\nGeneral Server Configuration\nDenying Access to Pico\u2019s Internal Files\nPHP Configuration\nURL Rewriting\n\n\nI used \"Getting Started\" as an introduction to the tutorial portion of the page.  Before that, it was more informative than instructive.  It was just meant to be a transition, so I'm not sure if all the other steps should be part of it.\nIf you're configuring the URL Rewriting, you aren't really \"getting started\" anymore.\nIt would work okay as a subsection though, but maybe called something other than \"Getting Started\".  \"Nginx Configuration\" for example, but something that isn't also the title of the page.\n. > I don't think that blocks is a actual \"name\". Just \"Nginx's server configuration is broken into sections.\" should be fine :smiley:\nhttps://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/\n. > Can you please add a URL to a tutorial how to configure HTTPS with Nginx (plus a sentence that SSL isn't covered by this example, but its use is recommended)? Nowadays HTTPS is what you should want to use 99% of the time :smile:\nGood idea, I'll probably link to Let's Encrypt.  I've tried it, and it's really easy to use.  Much more so than other solutions I've tried.\n. > > since they're disabled unless specified in Nginx, but this isn't always the case in Apache\n\nThis is also the case in Apache, but it's a common misconfiguration. I'm not sure whether this is true for nginx, too.\n\nI'm not sure.  I had too look up the configuration of Indexes when I was writing that part.  I think this is what you have to use: http://nginx.org/en/docs/http/ngx_http_autoindex_module.html\nI had to search for it, and hadn't come across it at all beforehand.  I've never seen any examples specify \"autoindex off\" in the same way that many .htaccess files do.\nSo yeah, I'm not sure, but I haven't really seen it mentioned anywhere as an issue.\n. > This rule also affects non-Pico subdirectories, isn't it? Especially blocking access to content globally may cause trouble with other software. Does Nginx allow cascading location blocks? Otherwise a users needs to adjust the base path (i.e. / or /pico/) manually :unamused:\nYes, it blocks access to them anywhere.  I thought it'd be better than having to customize it depending on your subfolder.  I found the subfolder issue a little annoying, so I tried to condense it all into the Rewrite section.  Having \"Pico in Document Root\" and \"Pico in a subfolder\" for every section sounded too confusing.  I've been trying to avoid differing configurations wherever possible.\nNginx does allow nesting location blocks though, so there is some potential there.\nKeep in mind though, this configuration only affects a given virtual host.  But, I guess I could see the issue if they were for example, running Pico in /pico/ and a forum in /forum/, /forum/content/ would then be blocked.\nsigh This is the trouble with coming up with a single example that works in all cases.\n\nIn general: Shouldn't this section come after the PHP configuration or is this necessary because of Nginx's processing order? The document should follow a golden thread from \"General Configuration\" to \"Pico's configuration\" - at least as long as Nginx's configuration order doesn't foil it.\n\nIt needs to come before PHP.  If it comes after PHP, then Nginx will match that rule first, meaning any PHP files (config.php for example) won't get denied.\n. > The difference between Apache and Nginx is that Linux distributions ship more intelligent default configurations for Apache, so Apache users don't have to deal with this on their own.\nOuch.  lol.\nHow would you have me explain the differences then?  It's still somewhat internal vs external, as mod_php is part of Apache, while php-fpm is a separate software from Nginx.\nI feel like most of your issue would be addressed by removing is more streamlined.  It and combining the two sentences.  Maybe also drop It does not handle PHP itself., to minimize the comparison between the two.\n. > Your example isn't OS-Dependant. Apart from file paths (i.e. where the FastCGI socket is located, more precisely /var/run/php5-fpm.sock) you can use the same config for Windows :smiley:\nGood to know, but I mainly wanted a reason why a user shouldn't copy and paste it (and also, I haven't tested it on anything but my own server).  Should I just say that configuration \"differs slightly\" depending on your OS?\n. > Shouldn't this be try_files as discussed in #343 (comment)?\nI never got a chance to test that and I guess it got lost in the discussion afterward.  If you know it to be working, I'll replace the if statement with that.  Otherwise I want to test it first and make sure it protects against the security issue.\n. Yay, I've caught up with you. :wink:\nThis comment thread is just about as out-of-order as it could be.\n. > I'll probably link to Let's Encrypt.\nHave you tried Let's Encrypt before?  I believe it's fairly new.  Just wondering if it should be a casual recommendation or a project-backed one.  Probably something like \"You can check out\" vs \"We recommend.\"\nEdit: Actually, for that matter, we don't mention HTTPS/SSL at all in the main Docs, so there's some room for improvement there too.\n. > Why is Document Root formatted as code?\nSometimes I like how it formats things.... :unamused: \n. > Reading this, we can save a round trip by directly rewriting to /index.php?$uri&$args.\nI don't know if it really saves a \"round trip\" or not.  My assumption for how it works is that it would just \"tack on\" the name of the index file if unspecified.\nEither way, I'll add index.php to match it up closer with .htaccess.\n. Considering you're from Germany.... it would probably be in poor taste to call you a \"Documentation Nazi\", huh? :unamused:\nSeriously though, I appreciate all the help. :wink:\n. > I think it's a good idea to let the components directly link to the appropriate sections above :smiley:\n:+1: \n. I've tested test try_files $uri =404; and it seems to work properly.  Oddly enough, even with cgi.fix_pathinfo = 1, my server returned an \"Access Denied\" message from PHP (it was not a message from Nginx).  There must be another security option somewhere else in Ubuntu's default config that I don't know about.\n. :unamused: I just realized I could have replied to each of your comments inside the line-note.\nI don't know,  I guess I just thought that button was for adding a new note. :disappointed: \n. > [That line you removed about answering me this one time]\nMy excuse is that I was thinking that adding a new line note would put it at the end of the thread anyway.  I didn't realize until I clicked on it that it would create a little sub-thread for the reply.  It makes sense though, and seems handy.  I'll use that next time.\n\nI'm a perfectionist (:wink:)\n\nMe too.  I understand. :laughing:\n. > try_files instead of the very complex location regex, fastcgi_split_path_info and if\nSo it's safe to remove fastcgi_split_path_info?  I haven't tried that myself, but the point of the line seems to be to separate out any path following the .php file (example.com/index.php/some/url) and give it to PHP as a variable.  Since Pico instead uses a query string internally, I can see why that wouldn't be needed.  Just wanted to make sure there's no other purpose it might server for us.\nHonestly, I've just been including the line because I've seen it a lot in examples... I don't actually know what purpose it serves on the PHP side of things or what that path information is used for. :sweat_smile:\n. sigh So I don't really have a better option for the denial rule at the moment.  I added a little note about it in-case it causes issues.  I don't really think it's worth the extra effort at this point when I'll probably have to rewrite half the document for 1.1 anyway.\nIn the future, a solution might be a location block containing all the Pico rules.  Using a setup like that, there should be a way to state Pico's location once and have all the other rules conform to it.\nI experimented a little while back with adding a separate root declaration inside of a location block and it did successfully change the $document_root variable inside the location block.  The problem was that it didn't impact $uri at all.  I think this was due to the change being after Nginx had created the $uri (it was inside the rewrite rule block).\nPerhaps by declaring a Pico location with a new root, we could treat all the nested locations (the existing blocks) as if Pico were installed in Document Root.  If this worked, we could potentially provide one Nginx example that would work no matter where Pico was installed.  You'd enter Pico's location once and all subsequent rules would use it.  This would also make all our rules affect only Pico, and eliminate the need to worry about interfering other software on the same virtual host.\nJust speculating at the point, but it would be worth looking into in the future. :smile:\n\nAlso, in regards to adding a new subsection to the document where Getting Started is...  I'm not sure it's necessary.  I'm just looking at the rendered page and imagining adding a new header.  It feels a little redundant.  There would only be two sections not inside it (Example Config and Advanced Tips), so it feels a bit like the entire document would be inside the new section.  The document as a whole is about \"Nginx Configuration\", and every section in it is directly related to that topic (except for where I've already broken it down).\nI don't know.  As always, I'm open to any arguments you have in favor of it, I just don't think it adds any benefit right now.\n\nAnd, I think that's everything.  Let me know if I've forgotten to address any points we discussed.\nAnd sorry for the extra long reply. :sweat_smile:\n. I actually have a question about this.  Why not always use https for the connection to Google Fonts?  That's what I've done in NotePaper and it works fine.  Even if the regular page is loaded over http, that doesn't mean the connection to Google Fonts has to use http as well.\nIt just seems like being secure by default would be the better option. :confused:\nEdit: Reading the changlog, I see that this was done to avoid a \"Mixed Content\" error when using https.  My argument then would be that when using http for loading the page, it's insecure anyway.  The browser is not going to complain that a single element was secured on an insecure page (only the opposite).\n. I agree.  Although I don't notice it a lot, that /index does bug me when it occasionally shows up.  I've never really thought about it too much, but now it's going to bother me, lol\n. I've given it a place on the site's Navigation because I think it's an item that belongs there.  I think I've done it properly, but let me know if I've messed up.  As far as I could tell (I searched for Nav: in Atom), Nav: 3 was unused, so I bumped the Docs up to 3 and made \"About\" the new Nav: 2.\n. @PhrozenByte Making some progress on that lightbox idea.  The real problem is just that I'm working blind.  Here's some information I've determined.\nWe're currently missing HUGE parts of the Webpaint source code.  Only the parts relevant to Picocms.org were ever uploaded to Github.  We also only have templates for the type of pages originally used on the site, which doesn't include anything with lightboxing.\nAll the JavaScript is there however, the issue is just figuring out how to format or adapt our content to use it.  Apparently, Webpaint is also supposed to come with Help Documentation, which we're missing as well.\nBasically, if we had a copy of the source, it would end any current and future frustrations with modifying the website.  I may look into getting a copy just to better understand what's going on behind the scenes.\nAlso, I'm a little curious about our licensing of Webpaint.  My assumption is that @gilbitron holds the original license to use Webpaint on picocms.org.  Now that he's moved on from the project... do we even technically have the right to keep using it?  It's difficult to say how that works since there isn't really an official Pico \"organization\" to \"own\" it.  Just some food for thought.\nIf we did have a full, unmodified copy of Webpaint as reference for developers, I'm not sure where it could even be stored.  We can't really host it in the GitHub repo, as it's not open code.\nWhat are your thoughts on everything?\nOh, and don't worry, I'm going to reset all those \"Ignore this commit\" commits when I'm done messing around with it.\n. Well, we could do more, but it would likely involve buying another copy of the theme and this time keeping it somewhere accessible.  I tried searching around a bit for a cough less legit cough version that might have the Documentation intact, but couldn't find anything.\nBasically the theme itself is much bigger than the portion we have, but since most of it is just static HTML, it was discarded.  I'll try to rebuild the bits that I can though. :wink:\nI think what I'd ultimately like to do with the lightbox feature is to make it a module we can pull in when needed.  It would be really useful if it could be called in a manner similar to Twig's macros.  You could specify the image url, thumbnail url, name, and description, and have it rendered accordingly without having to recreate the HTML.\n. So, I've got two styles of thumbnail \"working\" right now.  At the moment they're just hardcoded copies from the Webpaint demo site.\nhttp://smcdougall.github.io/Pico/about/\nOne style has a name and description that fades in, the other has a magnifying glass to click on.  For some reason, the magnifying glass is way over to the right side at the moment (likely a side effect of chopping up the original code). Its proper location will be the bottom right corner of the image (or technically, wherever we want it).\nWhich of these styles do you like better?\nThey're both being used in a way different from their original purpose, so I'll have to rewrite it no matter which one we go with.  I think which ever one we use should be consistent across the entire site, so choose whichever you think would be a better fit.\nPersonally, I like the first style better, but I think the magnifying glass would be a better fit for the site as a whole.\n. Okay, I've got to move on with this now, so to view the two styles, check out:\nhttp://themes.iki-bir.com/webpaint/multipage/full/portfolio.html\nvs\nhttp://themes.iki-bir.com/webpaint/multipage/full/portfolio2.html\nI've got an initial version of a \"macro\" created that pulls in the necessary HTML structure using some variables and include.  It's not the most elegant thing at the moment, requiring you to copy/code five lines (four variables and the include statement) for each image, but it's better than typing the HTML every time.\n. Alright, this is starting to shape up a bit.  This is going to be an odd pull request though, since it's half about page, half lightbox feature.\nSince my last comment, there's now another, optional line for defining the \"relation\" of the images.  It's used for the Next/Previous feature of Fancybox.  Alternatively, I could have hardcoded it, but I liked the idea of being to group the thumbnails into different sections instead of one long list of everything on the page.\nLet me know when you get a chance to look at it and if you like the direction it's going in.\nAlso... I really hate Liquid so far.  Twig is so much more powerful.  When are we going to move the site over to using Pico? :wink:\n. > Sorry, I was on vacation the last few days.\nNo worries, I figured as much. :wink:\n\nHowever, the first image \"group\" IMHO should contain Pico's default theme only \n\nYeah, I was torn about that.  I didn't feel like it was enough so I left a copy of the NotePaper screenshot there as well. :laughing: \nI like the idea of floating it right.... I'll see if I can work floats into the \"Macro\" as well because that could be handy.\n\nWhat do you think about mixing the two mentioned Fancybox styles\n\nI'm planning to work both styles in as a toggle/variable.  Something to keep in mind however is that these styles are part of Webpaint and independent of Fancybox.  If we don't like either of Webpaint's styles, we can easily make our own.\nMost of the \"Macro\" code right now is just structure for Webpaint's overlay.  Fancybox only really requires an image wrapped in an anchor like this:\n<a href=\"large_image.jpg\" class=\"fancybox\" title=\"Sample title\"><img src=\"small_image.jpg\" /></a>\nSo it's pretty open ended how we style it.\nIf you get a chance, check out my current implementation of the \"Macro\".  There's a lot of variables before each include, but the only required ones are the urls.  It's not the most elegant solution, but it seemed like a better idea then having to copy and paste a large section of HTML every time we need an image.\n\nadding a screenshot with a .md file to this group would be great btw\n\nOkay, I'll do that.  That middle group is more or less the \"workflow\" group.  I wanted to provide a visual representation of working with Pico.  After drawing comparisons between Pico and other CMS's, I thought it would be a good idea to show readers what that looks like instead of leaving it to their (potentially scared away already) imagination.  A screenshot showing a markdown file being edited would fit in great with this idea.\n. > Unfortunately it isn't that easy to use Pico as a static website generator.\nWhat exactly is it that Jekyll can accomplish that Pico can't?  Is it pulling in markdown files as templates?  Because I've got that covered already. :smile:\nGoes to link a file and realizes it's sashed in my local git repo and not yet on GitHub :disappointed:\nOkay... well... I've got a feature I was testing in NotePaper to process Twig code inside markdown files.  It uses Twig's (disabled by default) Template from string feature.  It's inherently insecure, but the idea is that you could add a meta variable to your markdown to inform the theme it should process {{ content }} as a template instead of just printing it on the page.  Or just use it by default instead of using a variable.\nSo, the obvious issue is that you allow anyone with access to the content folder to execute code.  It doesn't seem like that big of an issue because at that point, they'd likely have access to Pico's other folders.  It's a can of worms I didn't want to open yet though, so I didn't commit the code.\nTemplate from string is an interesting feature though, and I plan to play with it more when I have time.  If you want to try it out, use this to enable the feature in Pico (then add it to a theme of course):\npublic function onPageRendering(Twig_Environment &$twig, array &$twigVariables, &$templateName)\n  {\n    $twig->addExtension(new Twig_Extension_StringLoader());\n    $twigVariables['TwigStringLoaderEnabled'] = true;\n  }\n(The variable is just for the theme to decide whether to use include or not).\n. Commit, Push\nAll images float right\nFacepalm\nI suppose I should clear those variables when I'm done rendering the image.\n. Actually, having static pages cached sounds pretty cool.  I was playing around with using Nginx to cache Pico pages and liked the result.  Pages went from 500-600ms load time to near instantaneous.  The problem was that I couldn't come up with a good strategy for clearing that cache when updating a file, since it's not meant to be used as a permanent cache. :unamused:\nHmm, I didn't actually known that Jekyll served static copies of its pages.  That explains why it takes every commit a minute or so to take effect.  I hadn't really thought about it before.\nAlso, I wasn't suggesting that Twig's Template from String method should be a default behavior.  That would be horribly confusing to users.  And it would probably break a lot. :laughing:  I just meant that it's there if at some point that was a necessary feature for transitioning Pico's own website.\nAnyway, it sounds like a cool feature for the future.\n. I guess I'm confused.  Do you want me to implement the entire carousel?\nI've been purposely trying to boil it down to just the image that way it could be used wherever/however we needed it.  I didn't think we really had enough images to need the carousel itself.\nI should be able to implement it without too much trouble if that's what you want.  I'll add it into the \"Macro\" as another option.  At present, there will be three, tentatively called \"overlay\", \"magnify\", and \"carousel\".  The carousel will likely need a special start and end segment, so it may look like:\n```\n{% include fancyboxtemplate.html, image_style: \"carousel_start\" %}\n...\n{% image 1 vars %}\n...\n{% include fancyboxtemplate.html %}\n...\n{% image 2 vars %}\n...\n{% include fancyboxtemplate.html %}\n{% include fancyboxtemplate.html, image_style: \"carousel_end\" %}\n```\nAnyway, it's definitely doable if that's what you want.  Just wanted to check first.\nActually, if it were done like this, you should be able to use either style, overlay or magnify, inside the carousel as long as Fancybox doesn't capture any of the carousel click/drags.\n. Yeah, I would have used hashes from the start if it was an option.  Amusingly, I already thought \"If I could use YAML, these image variables would be so much easier to read\".\nThat's a good idea, I'll start working on it.  I still think that the carousel is a little overkill (for this page especially), but I do like the idea of having it made available for future use on the site.  Who knows, maybe it'll look good. :wink:\n. Question about YAML.\nI just finished making it so that we can use Markdown inside the image descriptions (for links, but ultimately it could be used for any formatting).  It screwed up the indentation a little in fancyboxtemplate.html, but it makes writing descriptions easier.\nWill writing Markdown work okay in the YAML section without breaking things?  From what I've seen before, it seems like everything after the colon is captured/escaped, but I've never really tested that.  Are there any special characters, etc, that will break it?\nA simple \"yes, it should be fine\" or \"no, watch out for blank\" is enough.  :wink: \nI really need to properly read up on YAML sometime anyway. :unamused:\n. > Instead of  you can use {{ image.headline|markdownify }}\nCool, that should fix the indentation in fancyboxtemplate.html too.\nAt the moment, without that quirky indentation (the markdown=\"1\" tag and contents can't be indented), the </div> gets treated as Markdown text and the entire rest of the page goes into the Fancybox description. :laughing:\n. Here's my logic on the issue (from IRC).\nFirst, Fancybox uses a \"rel\" html attribute to determine which images are in the same group.  These grouped images have thumbnails and next/prev buttons, regardless of where they are on the page.  As long as they're in the same \"ref\" group, they're connected together.\nIn the current implementation, its value is being determined by include.gallery, which we're also using to determine what set of images to use.  In my previous implementation, you could choose not to assign the relation variable and have an ungrouped image.\nSo I'd like a way to have a stand-alone, ungrouped image with a blank or missing \"rel\" attribute.\nOne way to do this would be to create a new gallery for each stand-alone image.  While this works, it feels like it's a lot of extra YAML, and a lot of room for error.\nAnother way, the way I was planning, is to have a dedicated \"standalone\" or \"default\" gallery that holds ungrouped images.  This could be done in several ways, for example with a hardcoded name like \"standalone\" or with some other variable that causes fancyboxtemplate.html to omit the rel attribute.\nAt the moment, I've made that the standalone gallery, but it's subject to change as I further the implementation.  (Actually, I've removed it for now, for the sake of a proper commit.)  The idea would be that maybe you'd call the image with:\n{% include fancyboxtemplate.html gallery='standalone' index=\"2\" %}\nI guess that would require a change to the flow of fancyboxtemplate.html and its loop though.  \nWhat do you think though?  Would it be better to have a new gallery for each image?  Maybe it would be easier... :confused: \n\nAs far as the carousel goes, my plan is to see if I can wrap the carousel container code in a conditional statement so that if you're using \"carousel mode\" it will use that and if not it'll default to a \"standard mode\" for single images (trying not to say \"standalone\" because that's not what I mean here... since you could have a non-carousel image that is part of a group).\nUltimately, this should be the \"end-all be-all\" for all future images, containing different styles of \"portfolio\", \"carousel\", and standard (and/or stand-alone) images.  It should be able to handle everything from a single inline image in the Docs, to a detailed portfolio of themes. :smiley:\n. @PhrozenByte Oh, and thanks for working on this with me today. :smile:\nIt's coming along nicely!\n. Well... the way Webpaint implements most of these involves several container <div>'s, an unordered list and list items.  It's great if you want to use one of their designs, but it's a lot of extra code if you've only got one inline image that you wanted to use with Fancybox.\nWhat I've been trying to do so far is separate all this extra stuff from the images themselves.  All I wanted was thumbnails! :laughing:\nI think it's all unnecessary for this About page, but, I do like the challenge. :wink:\nSince you've mentioned other ideas for it in the future, I might as well write the code for it now.  I'm already half-way there after all.  I do like the styles the Webpaint offers, it just didn't seem necessary for our website before.\nI'm going to let the code take the reigns for now.  I'll finish implementing the carousel bits and see where that takes me.  Once I see what the finished code looks like, it may reveal an entirely different method of handling it anyway.\nI'm out of time to work on it today, but I'll probably work on it sometime tomorrow morning.\n. So some quick feedback while I'm working on it:\n1) The docs layout isn't wide enough to accommodate the carousel because of the one-fourth div containing the Table of Contents.  This can obviously be worked around, but it makes the carousel feel really cramped.  It would only display two images and the heading box.\n2) Markdownify is nice... but it's adding extra paragraph tags to everything (headers, description paragraphs, etc).  This doesn't seem to happen with markdown=\"1\" because in that case Kramdown(I think?) is aware of the surrounding HTML.\nI'm a little tired this morning, so it's going a bit slow.  I spent more time than I want to admit staring at the wrong file.  I was comparing a static version of portfolio with a post-javascript portfolio2 wondering what kind of \"black magic\" the Javascript was doing to generate the carousel. :confounded:\n(Once I figured out my mistake, implementing the carousel was easy though. :laughing: )\n. sigh  The carousel width is hard-coded in several places.  The carousel, wrapper, etc, each have a set width value in the regular styles, as well as in the various \"responsive\" size styles (in another style sheet).  I'm not going to have time this morning to track down all the locations and do the math to make the carousel look good on the docs pages.\nI've got a temporary style set up for now.  It only applies to the full-size version, and will still look broken if you resize the window below a certain resolution.  I may also change it later since I didn't calculate the new width, I just lowered it until it fit.  If you get a chance, go check out what the carousel looks like:\nhttp://smcdougall.github.io/Pico/about/\nKeep in mind, the carousel uses a fixed size for images, so that's why all the thumbnails look squashed.\n\nAlso, the \"overlay\" style looks completely broken in the carousel.  Since your mouse typically moves faster than the carousel scrolls, you trigger all the overlays as you scroll.  It just doesn't work together design-wise, so I'm not going to pursue implementing that.\nIt'll have its own special mode when I recreate the regular portfolio style anyway.\nSo there will probably be four options:\n- Carousel\n- Magnify (Just the magnifying lens, without the carousel)\n- Portfolio\n- Overlay (Just the overlay, without the portfolio)\n\nActually, looking at it, portfolio is pretty intense.  There's a lot more to it than I thought.  Maybe it'll be it's own file. :confused: \n. I had half of this reply typed earlier but ran out of time.  You left another comment though, so you get a GIANT reply. :stuck_out_tongue_winking_eye: \n\n1)\n\nI don't know, I feel like it needs to lose the heading.  It just takes up so much space and doesn't really do anything productive, at least, not in this case.  Since none of the galleries have enough images that they need to be hidden, I feel like that heading box is wasting space that was better used before.  I also liked how the larger galleries before served to break up the content.\nI agree that they were \"just there\" before, but I liked their arrangement.  The three images in the workflow group had a nice, <hr> like effect.  Not only did it mark the end of the intro, but provided example screenshots before moving on to the next section.\nIt still does this, but, as I said, it feels like wasted space to have that heading there instead of just showing all three images.\nI also liked the 2x2 grid I had with the themes gallery.  It was big enough that you couldn't miss it, but not so big that it interrupted the article.\nThe only image I really don't like is the first image of Pico's default theme.  It's the very definition of \"just there\".  At the very least, I think I'll give it some more margin so it's not being eaten by the text.  The bigger problem is that the image is mostly white and blends in too much.  The other images have darker colors or window borders, so it's not as bad on them.\nIf I can't find a better solution for it, I may just retake that screenshot and capture the 1px window border as well (I'll keep the title bar cut off though, no need to waste space. :wink: ).\n\n2) You can combine markdownify with remove\n\nI'll check that out.\n\nOff Topic\n\nI like it, but I think it might cause more trouble than it's worth.  I think the appearance would need to be refined a bit, and I'd worry it would cause the page content to \"run together\" between sections.  Also, it could overlap with the Table of Contents if it was too high on the page.\nI think what I imagine when I see it is a box that follows along the side of the page to remind you what section you're on.  When you hit the next section, it would be pushed out of the way by the next heading.\nI can't think of a good example of this, but on a quick search, I found this example.  Imagine that, but with a box on the side.  Not saying we should do that, just trying to describe the idea.\n\n\nsimply use calc()\n\nO_O\nI had no idea that was even a thing.  I have wanted to do that so many times... how have I not heard of that?\n\nwho the hell cares about IE8?\n\nYeah, I haven't even looked at that file.  I didn't really plan to either. :laughing:\nI gave up trying to accommodate IE a few years ago.  Modern CSS and HTML5 just have so many useful and fun tricks to try to worry about compatibility issues.\n\nLow responsive sizes make the category look like a header\n\nWow, it really does.  When I looked at it earlier, I actually thought it vanished altogether... :unamused: It really blends in.\n. Way to merge that while I'm taking too long to write a comment. :unamused: \nEdit: So what did you do? Merge it and then revert it? :confused: \n. Huh... that's odd, you'd think you could reopen one.  Perhaps if you did a hard-reset of the Pico repo?  (Maybe that's what you did, idk, \"gh-pages is now 78e1f4e\" isn't very specific).\nThen again, I guess a PR is something GitHub specific, and probably not tied directly into Git.\nEither way, this thread is getting a little long and I think most of the older comments have been addressed already.  I'll open another one. :wink:\n. I'm currently trying to reproduce your issue, but I'm not seeing this behavior.  We did see it a lot when we were debugging our Nginx documentation, and it was usually related to a Regex rule being above PHP, causing the page to never actually get sent to php-fpm.  This doesn't seem to be the issue in your case obviously, but I thought it was worth mentioning.  A file being served as a download usually means that, for whatever reason, it wasn't sent to php-fpm.\nOne thing I'm seeing is that you don't have an index statement (eg index index.php;).  This bit me at first when I was testing your config, but it has the opposite effect, causing / to fail, but not /index.  Maybe you have an index line defined elsewhere, but if not, try adding it under your root line.\n@PhrozenByte, do you see any glaring issues that could be causing this behavior?\n. I'm far from an expert. :confounded: \nI tested the two location blocks and they seem to work fine.  When I tested it, I had to change the location of php-fpm.sock and fastcgi.conf; to match my own server, but other than the lack of index index.php I mentioned, everything worked as expected.\n. Okay, so I guess my question would be what file is downloaded?  Is it Pico's index.php or Nginx's index.html.  You'll have to actually check the contents of the downloaded file because it'll get its name from the URL.\nThe only thing I can think is that try_files is serving a static index file instead of moving on to the index.php rewrite.\n. Oh wait.... I think I derp-ed a bit here...  I've had the wrong root folder on my testing domain this whole time due to some other stuff I was testing.\nOkay, without any more info, I'd definitely say that it sounds like you've got a static file called index in your document root that's being served as a download.  The try_files statement is finding that file and serving it first.  Normally, it would not find a static file, then move on to using Pico.\nSorry, I've got to go for now, but I'll check back later.  Let me know if this helps, and if not I'll try to work on it some more.\n. Okay.  I figured you had index defined elsewhere.  No, you don't need to define it again as long as you have it somewhere.  I can't think of any other reasons why you'd have had this behavior.  As I outlined, there's a lot of things that could cause it, but you've already got most of your bases covered.\nI'm sure @PhrozenByte has told you, but our Nginx Configuration page is quite new and was written by a user who's far from an Nginx expert (Me :laughing:).  It's got a decent amount of information though.  There's also the discussion we had about it at #343.\nIf it was a cache issue, it could have been an issue with Nginx's cache, not your browser or CloudFlare.  Nginx could have been caching its original index file at /usr/share/nginx/html/index.html due to some unusual cache settings... or something.  I don't know much about caching though, so it's just more speculation.  The odd behavior definitely seems like it was rooted in Nginx though.\nGlad you've got it working now.  We'll be around to try to help more if the issue comes up again. :smiley: \n. Nice work porting another theme.  I see you're leveraging Twig a little more now too.  I'm glad you liked my idea for those social icons. :smile:\nKeep up the good work.  These open themes seem to be a pretty good, untapped resource for bringing more customizability to Pico!\n. > Without the category, he just sees a random screenshot and has absolutely no idea what we're trying to tell him\nIn my original idea, the screenshot would have been full-size and the caption would have been centered underneath it.  I guess I lost sight of that idea.\n\nThe first screenshot should show the root directory of a Pico installation to tell the user some kind of \"Simply upload Pico's files to install Pico, that's it!\"\n\nThat's a good idea.  They weren't really intended to be \"steps\", and I didn't have any order to them yet.  I was just kind of adding them as I went along.\n\nYeah, great, isn't it? However, this doesn't work for IE8\n\nsigh I think over all the years and across all the old versions of IE, Microsoft has held back the \"modern\" web by about 20 years.  Some of the newer CSS capabilities are really useful.  I'm always discovering new things I didn't know you could do with it.\nSpeaking of CSS tricks, I was surprised to discover that the the overlay from the Portfolio style uses Javascript to fade in when the magnifying glass from the carousel just uses CSS animations.  It seems like both could be done easily using CSS, but I didn't see a point to rewriting what already works (plus, Fancybox is using Javascript anyway, so it's not like there's an advantage to switching it)\n\nSorry for the inconvenience\n\nMeh.  I was getting tired of scrolling to the bottom of that thread anyway :wink: \n. I recreated all the screenshots at a size that was a multiple of the Carousel image size.\nI'm not sure I like the new images.  I'm considering maybe using the previous size, but with cropped thumbnails.  Those could look broken though... :confused:\nWhat do you think of it?\nThe images aren't that different, especially when you consider that the old (widescreen) ones had a lot of padding on the left and right.  It's just the fact that these square-er images feel old, as if they were using a 4:3 ratio (they aren't, but it's close).\nThe original Webpaint examples actually use different images for the \"thumbnail\", that were specifically made for that size.  That doesn't really apply to this use case though.  (I can't really use a screenshot of a tiny window for the thumbnails. :laughing:)\nFor the Themes though (and later, the proper Themes gallery), I could create a more professional style images.  I could depart a little from the \"screenshot\" look and create images that are cropped to just the browser viewport.\nThe thumbnails could be taken with the square(er) ratio in mind, while the full view could be widescreen.\nWhat do you think of a more stylized look like that?  Could it be the answer?\nAnd GDI, I just realized the stupid Firefox \"Hello\" button made it into all those screenshots.  Apparently I hadn't hidden it on this machine.  That's going to bug me. :weary:\nI guess it doesn't matter if I end up re-doing them all again though.  But seriously though, it took forever to recreate them. :sob:\n. > You could either create widescreen screenshots with a shadow to let the image result in the current ratio (i.e. add blank/transparent areas to the top and bottom)\nYeah, I thought about just padding the screenshots so they'd be square.  It didn't sound like it would look good though.\n\n\"More professional style images\" are a good idea in any case. :+1:\n\nYeah, I think I'm going to go that route anyway.  Having the window chrome looked good when it was only a screenshot or two.  I felt like it helped clue you in to what you were looking at (an example of Pico in a browser window).\nNow that there's a bigger \"gallery\" of themes, it seems like the better option would be to focus on the Themes themselves (regardless of how nice my Arc Themed windows may look. :wink:)\nAlso, I like the better presentation that the dedicated thumbnails on Webpaint have.\n\nor improve the carousel such that it supports a variable height\n\nDo you mean variable width?  The having a variable height would look a little odd.  So does width, but much less so in my opinion.\nI think that the square, tile-like images work much better for the carousel than wide ones though.  Of course, even with support for variable size images, there's no reason we couldn't choose to use the square ones where it looks good.\n\nWhat do you think about forcing the \"low resolution\" style (improved version see below) inside a .three-fourth container?\n\nMaybe... And I'd just gotten used to the current style too.  I think it needs something though.  The heading feels a little disconnected from the carousel that way.  I tried adding a background color to the wrapper, and that seems like it's got potential.  I tried both matching the heading color and using a lighter color, but neither style felt quite \"right\".\nIt might be a step in the right direction to do that though.\n. Actually, two additional thoughts on the low-res style.\n1) The heading starts to look a little bit like the regular H2's...\n2) I like that the description has more room.  It's definitely an improvement over the \"text crammed into a box\" look.\n. \nThoughts? :confused: \n. > No, I really mean variable height - but not in terms of \"per image\", but \"per carousel\"\nOkay, that makes sense.  I was imagining images of different heights, side-by-side.\nThis could work, but we might run into trouble with making the heading box a matching size when using the original layout (on pages without .three-fourth).\n\nHmm... Don't know... It feels a bit \"wrong\" with a background... :confused:\n\nI kind of like the separation it provides from the main article.  The dark color above was from the page footer, while the light one was just the initial heading background color.  I wouldn't go with either of them as is, but I still thought they were interesting to think about.\nI've got one more idea for you, the carousel being styled like a code block:\n\nI was avoiding rounding any corners because Webpaint is very square, but I think it works here. :confused: \n\nA longer text should get more space\n\nI guess I'm not sure what you mean here.  Is it in regards to the description being a <span>?  It's actually supposed to be a paragraph but I changed it when I noticed Markdownify was creating double paragraph tags.  I guess I forgot to change that back.\nMore importantly though, the description supports markdown but I don't know if we can add a new line without breaking YAML.  I discovered that you have to use quotes around your description if you want to use markdown links.  I think the issues I ran into had to do with [ and ] having a purpose in YAML.\nAnyway, back to the point... if you can quote a line-break without breaking YAML, then there's no reason we couldn't let Markdown handle the differences in longer descriptions.\nSorry if this comment is a bit harder to read than normal.  It's late and my proofreading skills are failing me. :sleepy:\n. > As said, I can open a PR if you want to.\nI'll leave that one up to you.  If you think it'd be useful, then go ahead.  (Remember, this was originally only supposed to be an About page :laughing:).\n\nit's the best one we have at the moment\n\nIt was just food for thought.  All the styles were just eyeballed in my browser until it looked good enough for a screenshot.  I haven't done any actual work on any of these styles. :wink:\n\nprovide more space by using a separate paragraph with extra padding below the header\n\nThat's probably a good idea, just keep in mind that since the description is being treated as markdown, it should be able to generate its own paragraphs.\nFor a longer description, would you move it so that it's only underneath the header or have the first line remain next to the header?  ~~If you want to keep the first line next to it, it may be as simple as making the h3 and the first p display as inline-block(s).~~ Actually, scratch that.  I must have turned off float when I was messing around, because float should already handle this just fine.\n. Okay, just did some tests with some positive and negative results.\nLine-breaks do not break YAML if they are within quotes... but they don't generate new paragraphs either. :disappointed:\nThey seem to be stripped out when YAML creates the variable.\nI've removed the span for now, and made the parent div process markdown.  That, coupled with some blank lines results in p tags being generated by Markdown for each line.\nThe only thing left to do is figure out how to create a multi-paragraph description without YAML stripping it out.\nWorst case, it could be an array of paragraphs and a {% for %} loop, right? :unamused:\n. >  As said, I'm not talking about how YAML and Markdown interacts\nI know, I know, I just can't help but think about these details. :wink:\nEither way, the span and p thing was something I never meant to leave that way.\nI don't know if I'll have the energy to work on this at all today.  I've had a long 24-hours and I'm probably just going to unwind for the rest of the night.\n(We'll see though.  If I get into it, I usually have fun with this stuff anyway :laughing:).\n. >  ~~If you want to keep the first line next to it, it may be as simple as making the h3 and the first p display as inline-block(s)~~\nTurns out, I was right the first time.  inline-block instead of float allows the paragraph to be next to the heading if it's shorter, but appear below it if it's longer.\nSo, I implemented the code-block style from above on any three-fourth pages, and in the process got the variable length description working. :smile:\n(Still don't have a way to do multiple paragraphs if we wanted that, but one step at a time. :unamused:)\n\nI guess a variable height (or width!) carousel would be a good improvement if you want to implement that.  I'm just really not happy with the current thumbnails and full-size screenshots.\nMaybe with the variable height implemented, a shorter carousel (with widescreen images) would look better.  The carousel is pretty big... it takes up almost a third of the height of my 1080p monitor.  While this works in it's original portfolio, it's a lot of space inside a document.  Moving the heading above it didn't exactly help that either. :unamused:\n\nI'm also going to reduce the large (60px) margin below the carousel to match its surroundings (the paragraphs use 20px for example).\nDo you think I should change that margin for all carousels or only the three-fourths carousel?\n. > Didn't knew that the solution is that easy.\ninline-block can be really useful sometimes.  I wasn't sure it would behave like that until I tried it though. :wink:\n\nStill don't have a way to do multiple paragraphs\n\nNope, I meant that there isn't currently a way to create a second paragraph in the description variable because YAML seems to strip out any line-breaks.  Other than that, it's all ready to go.  if the description variable contains multiple lines, they should appear as separate paragraphs.\n\nlet only the fist paragraph be displayed as inline-block\n\nI hadn't thought about it before, but that's a good idea.  Otherwise a short paragraph could start on the same line as the previous one.  I didn't think it was necessary before, but I'll add first-of-type to it so that doesn't happen.\n\nYes, it's a good idea to unify this - for all carousels\n\nThe margin is there because in the original portfolio design it was the only thing separating the carousels.  If we were to ever make a page like that, they would have a smaller space between them.  With the three-fourths carousel, I plan to match the margin on the paragraphs for consistency with the rest of the page.  On a page that's not filled with text however, we may want the original margin.\nJust trying to think ahead before changing it...\n. Okay.  Just wanted to explain my thinking.  I'll cut the margin down to a matching size. :+1:\n. Yeah, I knew the height of .category-info would be a pain.  That's why I let you deal with it instead of trying it myself. :wink:\nWere you done, and ready to merge the changes, or did you want more time to mess with it?\nAlso, don't worry about the delay.  I've had a lot going on and I haven't had the energy to work on this, so it's no big deal.\nIf you were really what was holding me up, I'd probably have just started writing another page by now. :laughing:\n. Okay, finally got a chance to look over everything.  Thanks for the code/formatting cleanup.  That div wrapper certainly helped with the indentation of everything.\n(I'll try to overlook that my tabs have been converted to spaces.  I know I'm in the minority there. :wink:)\nSo I've restored the first set of images (the others are still in the repo in case we want to switch back before everything is done).\nI think it feels like an improvement.  I like the slimmer/shorter carousel.\nI may have faked the \"Pico Folder\" image since it was created only in the square aspect ratio.  I spliced it together with the \"Content Folder\" image because it was quicker than setting up my dummy folder for another screenshot. :laughing:\nI've left the very first screenshot (Pico's Default Theme) a little bigger, since it's not part of a carousel.  Also, it's the first real depiction of what Pico \"is\", so I feel it should be a little prominent.\n\nI hate it when I visit the website of a project and can't find a picture of what it looks like right away.  You can list all the features you want, but if you can't show me what it looks like then it feels like you're hiding something.\nEven if the software/etc looks awful in said pictures, reading the features can often still persuade me to try something.\nBut if I read even the most extensive list of features and there's no screenshot, I almost always look for something else.\nFirst impressions are important.  I don't want to have to install something just to see if I think it'll work for me.\n\nThat's my long-winded reasoning on having the screenshot front and center. :unamused:\nI don't know what happened, a rant just sort of snuck in there.\n. To go back to the original premise of this PR (well, the original one anyway), what do you think of the document itself?\nI still have some notes hidden at the bottom (which I've made more readable), but the more times I read the page over, the more I think it's good enough as is.\nThat's the problem with trying to keep the page balanced.  There's a lot more I could add to it... but the more information, the more bloated it would become and I'd rather keep it as readable as possible.\nRight now I feel like that balance is pretty good overall.  It's informative without being too overwhelming.\nI'm sure there are still some things that could be a little better though.\nEdit: Well, apparently it passes the girlfriend test, so that's got to say something. :laughing:\n. Okay. :+1:\nI've also created a doc-notes branch where I've added some notes inline to everything in _docs.  They're mostly sarcastic, but I was just writing down anything that came to mind.\nIf you want, you can read through https://github.com/smcdougall/Pico/commit/3a76be4356ad418855ee5c320728b75e58448ad2 for my thoughts and/or PR with your own thoughts added.\nI'll open a PR here at some point, but there's not enough done yet.  I don't even know if this is what I'll be working on next or if I'll create a new page (for example a redesign of customization, that could be fun).\nWhenever I decide that I am working on it, I'm going to merge it into my gh-pages branch anyway.  This was just a temporary branch to scratch down some ideas.\nOn that note, apparently it's got the wrong upstream branch set up (picocms:master) so I need to fix that too, lol.\nBefore I rewrite too much there, we should probably discuss whether we want to keep the docs layout the same or modify it.  You've mentioned at least two ideas in the past: 1) Simple inline sections with \"Learn More\" pages and 2) A ReadTheDocs style with a table of contents tying individual pages together.\nWould you want the existing content revised, or  scrapped for something more in the style of the About and Nginx pages?\nIf we were to have a conversation over prospective changes to the docs, would you want that to be in #323 or to create a new issue for each idea (like #345).  I figured that you may want to keep #323 streamlined with only ideas and not extra discussion.  After discussing two or three ideas it would probably become a mess to read through.\nIf you'd like, I can create a \"Docs Revisions\" issue just for brainstorming ideas for the Docs page.  I think it warrants a lot of discussion right now.  I like that the current Docs are able to fit on one page because it feels less intimidating, but ultimately they don't provide much information.\nI'm really starting to see what you mean about them needing work.  It's funny because when I started with Pico, I thought they were fine.  I guess my brain was just filling in the blanks as needed.  Rereading them now, I wonder how I even knew where to start.  There are a lot of instances where I've gone \"I know it says blank somewhere, it has to say blank somewhere!  Nope, it doesn't say blank anywhere.\" :confused:\n. Is there a way I can tell git that this new docs-notes branch should have origin/docs-notes as its remote (to push to), but upstream/gh-pages (or maybe my own origin/gh-pages) as its upstream? :confused:\n. > This seems to be a bug of GitHub falsely detecting a common commit between master and gh-pages (what isn't the case)\nI created the new branch locally, not on GitHub, so I figured it was just confused.  I assumed it was a case of origin/docs-notes exists, but upstream/docs-notes (from picocms) doesn't so GitHub just figures \"it must be from master\".\nI'll just ignore it for now.  It only really affects the \"x commits ahead, x commits behind\" message anyway.\n\n\nI'm not sure about this. What would you prefer?\nThis depends on how you want to do this, I'm more focusing on the result than the \"how to\" :wink:\n\nI don't know. (You get a nickle for every time I say that. :wink:)  I think I'd be leaning toward rewriting things just for the freedom it provides.  I could easily read through everything (as I've done a few times) and throw some edits here and there, but in the end, that'll be the same document, just a little clearer.\nIn some cases, the documentation is quite good, but in other cases it would be better to start from scratch.  I think the main problem would be expanding things.  I can try to cram extra information into every section, but it'll probably flow better if I started from scratch instead.\nI think I like the idea of breaking the single page of docs into multiple pages, each with a clear focus.\n- An \"Installing Pico\" page that covers, in-depth, the concepts of installing and configuring Pico, your webserver (well, links to external resources anyway) and etc.  Everything up until you're looking at Pico's sample content.\n- A \"Creating Content\" page that goes over YAML and Markdown.\n- Perhaps a general, \"Usage\" type page that covers things like how URLs work, how to lay out and organize your website, separating content and assets, more about config options, etc.\n- Customization: An in-depth guide to installing community themes, creating your own, understanding Twig, Pico variables, everything.  Not plugins though.\n- A separate page for Plugins (and plugin development).\n- Maybe a combination of \"Getting Help\" and \"Contributing\" (or \"Getting Involved\").  It should be a generally community-focused page.  On that note, I think it would be great if we eventually had a place for non-development, non-bug related community discussions.  I don't want to say a \"forum\" because that feels like a really outdated notion, but a \"place\" to develop a community nonetheless.\nThis has gone on for a bit, so I'll cut myself off.  It's off topic here, so I may repeat some of these ideas in their own Issue.  Mostly though, I'm out of time and have to pack up for the moment.\nWhat do you think of this idea of breaking the docs up and rebuilding them in focused pages?  Also, they'd finally be \"Docs\" where right now... they're kind of just \"Doc\". :unamused:\n(Final note, you also get a nickle every time I've written so much in a comment that I've decided to go back and insert a horizontal rule between topics... :disappointed:)\n. I was too tired to write today... which somehow means I can still code okay. :unamused:\nI got the portfolio layout rigged up using the same YAML frontmatter tactic we approached the carousel with.  Every field is a variable... it's a lot to write for each item, but it means the entire page can be populated using variables and for loops.  And of course it's less than having to rewrite the HTML every time (and for every item).\nThis isn't live or on GitHub yet.  I set up Jekyll on my own server.  It was a royal pain because I needed a newer copy of Ruby than Ubuntu 14.04 provided, etc etc (definitely not \"stupidly simple\" :wink:).  Anyway, I can't link it at the moment because Jekyll is only running temporarily.  Maybe tomorrow I'll figure out how to set it up properly.\nMoving on though, the moment you were waiting for:\n\nThis is all coded in the Customization(2) page right now.  It'll be a trivial matter to move it to an _includes file though.  The idea would be the same as the gallery.html, call it on demand.  The difference being that it'd be one portfolio per page, since it takes up 90% of the page.\nI'll get some real entries into it and post another screenshot.  If we could knock this out quick enough, it could even be included on this PR. :smiley: (If not, getting the About page live takes priority though!)\nEdit: I guess I meant include the implementation here, but it would probably be best to merge it when the accompanying Customization revamp is done in case changes arise. :sweat_smile:\nBased on the screenshot, what do you think of my YAML structure?  I tried to simplify it wherever possible, there are even some items (like \"Date\" and \"Author\" in the screenshot) that are generated dynamically using the hash key.  You can make them say anything instead of mandating arbitrary information (using the Keys is also why these ones are capitalized).\nportfolio:\n  categories:\n    theme: Themes\n    plugin: Plugins\n  items:\n    -\n      heading: Pico&#39;s Default Theme\n      description: It&#39;s a bit bare... but that&#39;s intentional!<br><br>These apostrophes are escaped because the entire section of html is within single-quotes and will break without them escaped.<br><br>This needs a better solution...\n      thumbnail: /style/images/docs/about/thumbnails/default_theme.png\n      categories: theme\n      meta: Custom Theme\n      link: http://picocms.org\n      images:\n        - /style/images/docs/about/fullsize/default_theme.png\n        - /style/images/docs/about/fullsize/default_theme.png\n        - /style/images/docs/about/fullsize/default_theme.png\n      info:\n        Date: 6/10/16\n        Author: Simon McDougall\n        _blank: Whatever Items You Want\nI'm pretty pleased with how quickly this one came together.  The only real issue I had was a misplaced <div> that messed up the page layout.  It took me way too long (and a side-by-side comparison to the original) to figure out the problem.\nI'll probably get this uploaded in some form or another tomorrow.  Probably in its own branch until it's ready.\n:smile:\n. Borrowed the About page content to test the new template.  The first item is of course just the original placeholder and would be removed later on.\nDone for tonight, just wanted to share. :smile:\n\n. I've uploaded to a new branch.  It's also got the current changes from #352, since it was based off my gh-pages branch.  Wasn't sure if I should PR it because of the duplicate changes. :confused: \nhttps://github.com/smcdougall/Pico/commit/8819d4379aea0814e1bae513660cc65abdba0bb3\nYou can see it live here:\nhttp://testing2.mcdougallhome.net/customization2/\nEagerly awaiting your feedback. :smile:\n. > It looks absolutely amazing! :heart: Great job! :+1: :smiley:\nThanks! :smile:\n\nDoes this mean that you want to keep the current page structure with a \"generalized\" main page and in-depth sub pages \n\nI was thinking of not having a main page anymore.  Clicking the docs link would bring you to a shorter \"Overview\" type page (or maybe directly to the first page, \"Installing Pico\" for example).  From there, you could use the Table of Contents to find the relevant document.  Each document would have it's own ToC subsections breaking things down, but not replace the global ToC.\nWhen on the Overview Page:\n* Installing Pico\n* Creating Content\n* Customization\n* Getting Help\nWhen on Creating Content Page:\n* Installing Pico\n* Creating Content\n   * YAML\n   * Markdown\n   * Etc\n* Customization\n* Getting Help\n\nFor plugins and themes it may be useful to use Jekyll's collection feature\nI hadn't thought of that.  That's a great idea.  Maybe we could even include a blank YAML template/file for contributes to copy and fill out.  It could make the process a lot simpler than having to edit the existing content.\n\n~~Do you know how Jekyll handles merging the YAML frontmatter of multiple documents?~~  If there were a bunch of portfolio variables (one per file) would they be merged or would the final entry clobber the rest?\nEdit: Yes, yes it would.  But I've already got it all figured out in the new thread. :wink: \n\nI should probably do the same some time soon\n\nDon't.  :laughing: It was a pain.  I've actually just got Nginx pointed at the static _site folder right now.  I can't seem to make Jekyll run in the background so I'm just running jekyll build --watch when I'm working on it.  For some reason if it's not in the foreground of my ssh session it just stops working.  The process continues, but it stops building the pages. :angry:\nI used the github-pages gem to make sure I had all the dependencies.  There was a package in the Ubuntu 14.04 repo for Jekyll, but I figured it would be too old.  Every tutorial I found used the Gem... but they also suggested things like running jekyll serve from a shell and then making your webserver proxy-pass to localhost:4000.  Given that jekyll builds static pages, I'm not sure why you'd ever want to host things on its built-in webserver, but I found multiple tutorials that suggested this!\nIt's been pretty handy for testing this page, so I'll probably figure out a more permanent setup whenever I get around to migrating my server to Arch Linux.\n\nThat's completely fine, I'm pretty sure the About page will be merged before the new Customization page.\n\nOkay.  I was pretty sure that Git/GitHub would figure out that the histories match whenever they were merged.  I'll open a PR for that then and we can continue the discussion there.\n\nHowever, I don't think that plugins and themes are appropriately separated with the current approach.\n\nAbout half way through I had a moment where I thought \"Oh no, I didn't separate them!\", but then I remembered that I was using the categories to separate them.  I agree that it doesn't feel quite right this way though.\n\nCategories (the \"All\", \"Plugins\" and \"Themes\" buttons) should be used to organize plugins and themes on their part \n\nI like that idea.  I'm not sure how the javascript will behave with multiple portfolios.  The bulk of the portfolio simply uses Isotope, and shouldn't care if it's used multiple times.  The portfolio is called using Webpaint's own scripts though, so I'll have to see how they'll behave.\nIt may require some reworking to make it behave correctly, but we'll see.  Unfortunately if it needs work it'll be up to you.  I haven't used javascript since I learned it in high school 8 or 9 years ago. :sweat: \nSometime I should really learn that again.  And maybe php. :wink:\nOn my end, there's one change I'll have to make to the template to allow multiple portfolios, but it's not a big deal.  I just have to tell it to keep a persistent count of FancyBox groups that way the Plugins and the Themes don't get their screenshots mixed together.  Right now it's just using the loop index for convenience, so a second loop would generate the same group numbers.\nSince you didn't comment on it, the Puzzle Piece image was just something I made really quick as a placeholder.  I couldn't find a puzzle piece image that was both free and attribution-free, so I just made my own.  That was the best my laptop touchpad would allow me to do, but if you like it I can make a quality version of it.\nUltimately, I wasn't sure how to handle images for plugins.  While some plugins generate things that could be represented by screenshots, others will be more abstract.  We could use a placeholder like this for the more abstract plugins, or maybe just revert the plugins section to it's original text version.\nI certainly like the presentation of the portfolio for them... but if they all have the same icon it's not too helpful.\nWe could also style them in a way where the .overlay text displays all the time, but only turns green on hover.  This way you could see at a glance what each plugin was, even without screenshots.\nApparently I'm brainstorming as I go here, because now I'm thinking that maybe a more \"muted\", gray puzzle piece background with the permanent overlay text would be a good look.\nI think I've rambled on enough for now.  You'd probably have a quicker time reading my About page than trying to catch up on my comments. :unamused: \n. One more quick question...\nI have something else, not Pico or development related that I wanted to get your input on.\nDoes the contact (or \"Kontakt\") form on your \"Placeholder\" site work? :wink: \nIf so, I'll just send you an email.\n. Okay, yeah, multiple portfolio's break the page really bad.  Most of the important stuff is id based, so both portfolios try to activate their content sections at the same time.\nNot saying it's not doable, just that at a first glance I wouldn't know where to begin with it. :unamused:\n. Also, more as a note to myself, with all @BesrourMS's Single-Page themes lately, this should definitely be it's own category.\n- Single-page layouts\n- Static Websites\n- Blog-Style sites\nJust to think up a few.\n. Mwhahaha, fear my Pull Requests! :smiling_imp:\nLet's continue the relevant discussions there. :sweat_smile:\n. No Worries.  I figured you were busy. :wink: \n. I've read over everything and now I've got a nice long to-do list up top. :point_up:\nProbably not going to get to these today, but I've got plenty of time tomorrow onward that I'll be working in it. :smile:\n. Random thought... but shouldn't the website footer also link to the Contribute section of the Docs?\nRight now it only links to GitHub and Issues.\n. 1) It should be \"make\", not \"making\".  I almost didn't catch that, I had to read it again to figure out why it sounded funny.  \"You're encountering a problem with Pico?\" sounds a little off as well.  It's grammatically correct, just a little odd sounding.\n2) I don't think that \"help us\" stands out enough.  Reading it, I would assume it was another link to somewhere on GitHub.\nMaybe something like:\n\nWant to Contribute?\nLearn about how you can help us make Pico even better!\nEncountering a problem with Pico? We'll do our best to help you.\nBe sure to visit us on GitHub.\n. Back to \"square\" thumbnails by the way.  Kind of invalidates the work you did making the carousel work with different sizes though. :unamused:\n\nMy intention is that when #358 is merged, I'll change the URLs on this page to use the same resources as it.  No sense in having two sets of images.  Also, in the future it'll be easy to pull from those if we want to change the themes shown on this page.\n. For the portfolio, I feel like the square ones work better.  As we discussed before, the extra space on the thumbnails isn't really useful.  The themes will either: 1) Reach a max size, making anything extra be empty margin space, or 2) expand forever, making all the extra space filled with text, which doesn't really add anything new to the image.\nI also like the way the square thumbnails form this grid elegant looking tiles.  At one point, the screenshots got mixed up and the fullsize ones got accidentally used as thumbnails.  In my opinion, these widescreen tiles just didn't look as good as the squares.\nIf you'd like, I can post a screenshot of this so you can see which you like better.\nI do like the widescreen thumbnails a little better on the Carousel, but I'd rather use the same images as on the Themes page for simplicity (and consistency I guess).\n. Alright, alright, I'll change them back. :laughing:\n. Yeah, especially with the abundance of Pico's in the possessive sense.  Pico is was too wordy, so I've changed it to Installation is Easy!\nThough now I can't help but notice how \"easy\" and \"simple\" everything is... :unamused: :laughing:\n. Aaaaaand the carousel has apparently reverted to it's old style.  How did that happen??\nI'm trying to figure it out...\nEdit: Alright, should be fixed now.  In trying to restore the removed section, I somehow made it much worse...\n. Okay, so I've written two \"real world\" style examples, one for Markdown and one for YAML.\nIt's a little fudged right now, but should work for an example.  The issues I have with it are:\n- The markdown heading would really be the site title in a practical application, but I feel like it's needed here to introduce the example.\n- The YAML example treats this as a \"Sale\" blog-post, not the landing page.  I could easily change either example to make them more consistent though.\n- I thought of a small issue with the social button idea: these would either have to be on every page's YAML or use another implementation (such as parsing all markdown files ahead of time, like NotePaper's widgets).  It's not a huge deal, but it does affect how I'd implement it in the sample content.\n- Also, this affects the \"context\" of the YAML example... if it's a blog post, that's a weird place to put your social buttons, but if it's an index page, it'll be more applicable.\nI'll probably rewrite the example to one context or the other (either a landing page, or a blog-post).  Which idea do you like better?  For that matter, do you like this example at all? Lol.\nIf you like the example, it may be an interesting idea to expand upon and make a full \"Sally's\" tutorial.  Separate from the main documentation, it could be a complete walkthrough of config, content, and theming a Pico site. :smile:\n. > Actually I didn't mean \"real world example\" with \"real example\"\nBut why stop half-way there? :laughing:\nI didn't actually plan to use a \"real world\" example either, it just sort of popped into my head.  I blame my gf, she was writing something and one of the locations was a flower shop.  It wasn't called \"Sally's\" though, but once I thought of the idea, the rest just snowballed from there.\n\nI think it might be better to use the landing page as example. Makes things easier (like the social buttons problem).\n\nThat's what I was thinking.\n\nWe should add a hint to our docs to explain how to use \"global\" meta data like social buttons.\n\nThat's an interesting idea... I would have just placed them in my config though. :wink:\n\nNo need to parse the contents, we parse meta data of all pages anyway\n\nI meant more like iterating over pages in search for social buttons (for page in pages if page.meta.social) than actually \"parsing\", but either way the point was that it would be a silly way to implement social buttons.\nIf you'd like to \"officially\" recommend using _meta.md (or another empty file) as a suggested \"design concept\", I can implement that for the sample content.\nHow far out is 1.1 anyway?  I'm just thinking that if we recommend a place for \"global\" metadata, it should be very similar to the final implementation.  Otherwise, it seems odd to recommend it at all with proper support \"on its way\".\nAnd of course, there are the options of 1) Not actually explaining the \"social\" part of the YAML example... it is only an example, or 2) Changing the array example to something else.\n. > Hard to tell, heavily depends on my free time... :unamused:\nI figured it would (:laughing:).  It was more or less something to think about in the context of \"recommending something\".\nIf there's not going to be enough time for anyone to find this suggestion and/or try to implement their own _meta.md before 1.1, then recommending it would feel kind of pointless (especially when I intend to rewrite everything anyway).\nWe don't exactly have the biggest theming community at the moment, and I doubt anyone would rush to implement a partial \"feature\", especially knowing that a permanent version is on the way.\n. > Hint: bf1663c\nI saw that.  I'll take a look at it tomorrow and make sure everything matches up correctly with my example. :wink:\n\nYou don't have to merge upstream gh-pages into this PR all the time\n\nI know I don't have to, but I'm also trying to keep my working-copy up to date.  In this case, I had merged upstream so I could see how the new footer looked on the portfolio pages... then I noticed the issue on the website.\nI wasn't going to merge those changes in, because I'm deleting that page, but this change caused a conflict.  I know I can resolve it later, but that costs me my green checkmark. :confounded:\n:arrow_down:\n. (...Though I would like a way to clean those up if you've got one.  I don't see the point of having a \"merge commit\" when all the commits that were merged show in their proper location of the history anyway.)\n. > Don't use it until you know what git rebase is!\nThis is the logic behind a lot of Git commands I've avoided in the past.\nWhen I first started using GitHub, there were a few times where I did things I didn't understand to my local repo.... so I just deleted it and cloned a new copy because I didn't know how to reset it yet. :sweat_smile:\n- Note: I keep forgetting this conversation is on #352. :sweat:  I wrote this next part thinking about #358.\nI've kind of dug myself into a hole on this one though, since it accidentally started as a copy of #352 to begin with.  I never got that cherry-pick to work either.  It tried to do some things I wasn't happy with and I didn't have time to work though it.\nIn the future I'll try to be more mindful of my upstream merges.  As it stands, these recent PR's have given me some good practice with maintaining and manipulating my commit history.\nI'm getting there... :laughing:\n. While we're deciding on this, there's another thing I've been debating on.\nThe screenshot folders I've titled fullsize and thumbnails.  Should thumbnails be thumbnail for consistency?  Do you even like these names?\nAs you know, I've carried this naming convention into https://github.com/picocms/Pico/pull/358, so if we change it, it has to be changed in a lot of places... :unamused:\nI figured we should probably get that finalized before merging this. :sweat_smile: \n. I don't know what I want to do, that's why I was asking your opinion. :confounded:\nIf you really don't care either way, I guess I'll leave it.  When I'm writing out the file path, thumbnails feels awkward, but if I'm saying \"Put it in the thumbnails folder\", thumbnail would sound a lot more awkward. :laughing:\n. Alright, I've revised your section. :smile:\nGive it a read if you'd like and tell me what you think.  In a lot of places, I've deconstructed what you've wrote and reassembled it in a way that reads easier.\nAs usual, nothing you've written was wrong, just sometimes it can be rearranged to flow better. :wink:\nAlso, in the last paragraph, I've switched around all the \"easy\" and \"simples\".  This had nothing to do with what you wrote:\nFirst, I tacked on \"It's really that easy!\" to the end of a paragraph.  But then I ran into \"easy\" a few words into the next paragraph.  So I changed it to \"simple\".... then I found another \"simple\" shortly later.\nIn the end I think I managed to swap every \"easy\" and \"simple\" in the paragraph. :unamused: :sweat_smile:\nAt least now I think no two \"simple's\" or \"easy's\" are near each other. :triumph:\nWe need more synonyms for our documentation... :laughing:\n. So, I've integrated all of the duplicate styles back into their original sections, and I've moved everything else that was necessary up into the relevant sections.\nThe only items that haven't been merged above are the things I'm still working through.\nThese remaining styles have to do with the  \"standalone\" gallery.  Most of it relates to an ugly hack that I'd like to improve, but I'm not sure how to.\nThink back to before the carousel, when the images were just arranged side-by-side on the page.\nBy making the standalone items \"inline-block\", I somehow introduced a small amount of space at the bottom, where the div was a few pixels bigger than the image.  This causes the green overlay to hang over the bottom, and I think it also slightly effects the positioning of the hourglass in it's style as well.\nMy \"ugly hack\" was to remove all line height from the containing div (.fancybox), then manually define the line height within the overlay div (.overlay).\nI don't see a reason to hold back this PR because of it, but I'm probably going to attach some kind of \"ugly hack\" note to it when I move it up into the regular section.  Maybe a line that reminds us / tells a future person to reference #352 for details.\n. Done?  Maybe? lol.\nLet me know if you find anything that needs to be fixed.  Otherwise... I guess this is awaiting review. :smile: \nUnbelievable that this has taken almost three months to finalize.  Especially when most of the written content was done in the first few commits.\nSometimes it's crazy how small projects like this can scale up once you get going.\n. Okay, I'll get those two sections fixed in the next few minutes (unless that margin thing causes issues).\n. Yeah, the overlap was what I made this style to solve.  It's a style applied to li elsewhere on the site.\nI'm not seeing any problem with margin: 0 or margin: auto.  I've decided to use auto just because the point is revert it to the default.  It doesn't specifically have to be 0, so auto seemed like the correct choice.\n. Thanks.  I've been happy to help.  Hopefully this page will help bring even more users to Pico. :smile:\nPersonally, it's a good time for me to have this finished...\nThis Wednesday will be the last day at my current job, and so the current \"Productivity time\" that I have will be going away.  For the moment, I'm taking up my old (retail) job, that way I don't miss a paycheck.\nThis means I'm going to have a bit less time to work with the Pico project every week, but in no way means that I'm going away.  After all, I've still got plenty of \"projects\" around here to work on. :wink:\nI'll probably still be watching GitHub like a hawk, but if I happen to disappear for a few days at a time, I've likely just been busy with work and I'll be back soon.  :sweat_smile:\n. > what do you think about adding a large \"Learn more\" button\nSure, why not. :smile:\n. By \"start page\" do you mean the landing page (eg picocms.org)?\nHow large of a button?  Something that fits in or something large and flashy like a starburst in the corner?\nGot to go for now, but let me know what you've got in mind. :smile:\n. > May you do well in your new/old job! :+1: :smiley:\nThanks.  It's going well so far, but I am not used to working this hard anymore.  My first real day was quite the workout (:dizzy_face:), but it felt pretty good.\nHmm... how about this for the readme:\n\nPico is a stupidly simple, blazing fast, flat file CMS.\nVisit us at http://picocms.org and see http://picocms.org/about/ for more info.\n. Glad you approve. :smiley: :+1:\n. Hate to tell you, but you're in the wrong place.  Pico has no connection to the software demonstrated in those videos.  Following a link on their Vimeo account will bring you here, where they have apparently rebranded their product some time ago.\n\nAt first glance, I would assume their software abandoned, since their landing page mentions the rebranding, but has no links besides a pdf manual.  I would probably suggest finding an alternative.\nWe would of course be happy to have you as a user of Pico, just keep in mind that we are not that software and have no affiliation with them.\n. We're working on it.  Honestly, lol.\nCheck out this work-in-progress About Page if you'd like an overview of using Pico.  It should be enough for you to get an idea if Pico would be right for you or not.  The content of this page is done, it's just waiting on some updates to how the images are presented.\nJust be aware that since it's a work-in-progress, it could break if I happen to be working on it when you check it out.\nWe also do have a \"cookbook\" in the works, but it's far from presentable at the moment.\nAnd of course, if you do decide to give it a try, we're here to help with any issues you run into. :smiley: \n. > ...in a good text editor. And it looks really clean!\nYour content files are formatted as \"Markdown\", which you can learn more about here.  The syntax is simple enough that you don't need a special editor for it.  It was designed to be readable on its own.\nThat being said, there are many editors that support Markdown.  Personally, I use GitHub's Atom editor, but it's a bit overkill for just Markdown.  If you're going to do any other coding (HTML, CSS, Twig (available with a plugin)), I'd definitely recommend it though.\nAs far as designing your site, you can look at the Default Theme, located at themes/default/index.twig, for a good example.  It's a bit bare-bones, but it's intended to be a basis for designing your own layout.\nPico's \"Themes\" are actually Twig Templates.  Twig offers a lot of functionality for customizing your site.  You can learn about Twig more in-depth here, and our Documentation gives an overview of what variables Pico uses to generate your site.\nIf that's a little too much for you though, we have a small, but growing selection of pre-made themes available on the Pico website and a few more available in the wiki.\nPersonally, I develop a theme called NotePaper (demo site), which offers quite a bit of customization out-of-the-box.  You could also use NotePaper or other themes as reference material for creating something of your own.\n\nIMO if you had the simplest cookbook instructions on how to make a rudimentary site\n\nWe really do have a cookbook started, but it hasn't gotten the attention it needs yet.  Pico was actually a stagnant project up until last fall when @PhrozenByte gave it some long needed improvements.\nAt the moment it's more-or-less the two of us.  I'm trying to slowly chip away at the documentation, and hopefully in a few months it's going to look entirely different.\n\nDo I ask simple new user question here?\n\nYou can check the Getting Help section of our docs for more information, but to sum it up:  If you're unable to solve a problem you can create a New Issue here on GitHub, or for that matter, you could continue this thread.  @PhrozenByte will probably close it at some point soon, but we'll still get notified if you post a comment.\nYou can also check out #picocms on Freenode IRC.  @PhrozenByte is always logged in there and is usually willing to help.  He's away from home at the moment, so his ability to respond may be limited until sometime next week.\nUnfortunately we don't have any mailing list, forum, or etc for simple questions (maybe in the future...), but we won't turn you away for asking them either. :wink:\nSorry if this was a lot to read... I do that. :unamused:\nWe're always excited to have new users though, so if you think Pico is something you'd like to stick with we're happy to have you. :smiley:\n. A Markdown editor will have it's own styles, unrelated to your markdown, that it uses to \"preview\" the file.  While you can usually customize the styles of your editor, they will be unrelated to how the file really looks on your Pico site.  It's also possible that if you're trying to add styles to some HTML in your Markdown editor, it may not support that.\nThe styles for your Pico content should be part of your theme, and unrelated to the Markdown.  Markdown just provides a quick, readable way to create content.  If you need to build a more complex/unique page, you'll probably have to use some HTML.  At least for the complex parts.  And you could switch back to Markdown for any simpler parts.\n\nIf you're talking about site-wide styles, your best bet would be to link a stylesheet in your theme.\nIf you're still using the default theme, add something like:\n<link rel=\"stylesheet\" href=\"{{ theme_url }}/personal.css\" type=\"text/css\" />\nto themes/default/index.twig, then put your styles in a personal.css file in that same folder.\n(Of course, there's nothing preventing you from editing the existing style.css file either.)\nYour Markdown is converted to HTML when the page is rendered, so just add styles to the corresponding HTML elements.\n\nIf you need to add some specific, not site-wide, styles to an element in your Markdown, you'll have to use HTML.\nFor example, if you had an image, and you wanted that one image to float: right, but no others anywhere on your site, you could use HTML.  It would look something like:\n```\nSome markdown text.\nA Markdown Heading\nA paragraph with an image that floats.  \nAnother paragraph.\n```\nThis, of course, gets quite tedious, so I'd only recommend it for \"one-off\" styles that you don't want to make a global rule for.\nThere are other ways to accomplish this as well (such as adding an id or class using Markdown Extra, but I figured I'd keep it as simple as possible.\nMarkdown is just for your page content.  You can think of it like this:\n- Markdown + Theme (HTML/Twig Template and Styles) = Rendered Website\nHope this helps. :smiley:\n. I'm probably not the perfect person to answer this (afaik, @PhrozenByte is still away at the moment), but I'm going to give it a shot.\nPico was created about six years ago by @gilbitron as a \"side project\".  You can read his original post if you're curious, but keep in mind that it's not an accurate representation on the current state of the project.\nAlthough, Pico's been around a while, it's seen quite a bit of development over the last year due to @PhrozenByte's revival of the project.  Unfortunately, I can't say much about the in-between time, as I've mostly only been around this last year.  When I first discovered Pico, it was at version 0.8, and essentially dead.  It hadn't seen an update in almost two years!\nI'd actually like to hear @PhrozenByte's story of why Pico was revived and who was responsible, so hopefully he'll chime in when he returns home.  I suspect @theshka also played a role in the decision to revive Pico, but he seems to have left the project behind as his last participation was several months ago.\nAt the moment, I'm working on revising Pico's Documentation, which is a bit sparse.  I've got an About Page that you can check out if you're interested.  It's a work-in-progress (and thus not on the official website yet) but the content is essentially done.\nI haven't tried most of the alternatives you've mentioned above.  I came to Pico from a database-driven CMS, and could give you a hundred reasons why I prefer it over one of those.\nI believe the overall goal of Pico could be summed up as \"to provide a simpler, more intuitive, and more easily extendable platform\" than the alternatives.\nUsing Markdown (& YAML) for page content brings simplicity and ease-of-use.\nUsing Twig for Theming provides a powerful framework for building your website layout.\nAnd finally, Pico can be extended by creating Plugins directly using PHP.  These plugins can hook into Pico's infrastructure and allow you to extend its features without having to modify Pico itself.\nAnd again, I've never had a chance to use the alternatives you've mentioned.  I'm sure they provide some or all of these features as well (especially, say, using Markdown).  Ultimately, it probably comes down to the fine details of the implementation.\nHopefully this helps to inform you a little.  We love to have new users, so stick around give Pico a try if you think it'd be right for you. :smiley: \nNot that I haven't tagged him enough in this, but @PhrozenByte could really give you a better technical overview than me.  He's been away from home this last week, but should be back (and back on GitHub) sometime soon.\n. Don't forget, we're here to help if you need it. :smiley: \n. Nope, \"Personal\", thought Identity is another good one of a similar vein that he's ported.\n. Np.  Just happened to be looking at this thread when you asked. :wink: \n. > use Jekyll's collection feature\n~~Okay, so from what I think I'm understanding, portfolio.html would become alayout instead of an includes?~~\nEdit: Nevermind, it seems like I could probably just do exactly as it was already done, just with different variables.  I'm just poking around the existing files and figuring it out as I go.\nEverything else would stay largely the same except the main loop would iterate on the collection and each page's individual variables instead of on portfolio.items.\nThis sounds pretty promising... :smiley:\n. Okay, it's all rigged up using collections.  I haven't added anything specific to collections into portfolio.html, only an override that accepts include variables for both the portfolio and the categories variables.  The categories override is so that later on we can potentially have multiple portfolios, with separate categories by defining a second categories variable in the YAML.\n{% include portfolio.html portfolio=site.customization categories=page.portfolio.categories2 %}\nIf neither item is defined, it falls back to loading them from the current page.\n. > > Possible Style: \"muted\", gray puzzle piece background with persistent overlay text, but only turns green on hover.\n\nI really like this idea\n\nMe too.  Unfortunately, the Overlay opacity is being controlled using Javascript, not CSS.  Changing it in the CSS results in it being overwritten by styles JS puts directly onto the HTML elements.  Creating this second style will require a little more work, so I've been putting it off, but I think it'll look good in the end.\n\nBut most plugins have in common that they can't be visualized with a large screenshot.\nMaybe by shrinking the screenshot's width halfway through and using the additional horizontal space for a second text column?\n\nIt wouldn't be too hard to add a second style where the pop-up content is displayed differently.\nIf you wanted a literal second column (and not just extra width), we could come up with a special separator in the markdown that marks the end of the first column.  Or we could limit the height of the pop-up (right now I believe it will expand to the size of the content).\nAnother reason for I split the Plugins to another page was that I thought they'd need more work than the Themes page.  Themes feels like it's already 90% complete, where Plugins still has a ways to go.\nI've actually debated keeping the old customization page for just plugins, but I think the Portfolio is at least slightly better than that solution.\nThe biggest difference right now is that you can't see what the plugins are at a glance.  Themes are almost entirely visual, so thumbnails work great for them.  I'm hoping that once the new overlay style is set up that the plugins, it'll bring back that \"at a glance\" readability that it's lost.\n\nWhat's your opinion of Move images into collection from my list up above?\nI'd like the images somewhere in the collection folder so that all the (contributed) files would be in one place.\nDo you have a preference or should I just place theme wherever I think makes sense?\nRight now I'm leaning toward _themes/thumbnails or maybe _themes/images/thumbnails to separate them from the .md files.\nOr maybe each item (markdown and images) should just get it's own folder... hmm.\n. From some quick experimentation I've found a few things:\n- If I place images in the collection folder _themes, Jekyll will create a folder named themes and place the images there.\n- Since Jekyll also creates a themes folder for themes.md, everything gets put in the same folder (both the index.html and the images).\n- Renaming themes.md to themes2.md resulted in two foldes, themes (images) and themes2 (index.html).  This tells me that Jekyll is intentionally creating the themes folder when it finds images there, regardless of whether there's a page of the same name.\nSo it looks like this idea may work better than we thought. :smile:\n. (Also just realized that on my last commit yesterday I didn't actually add the image files) :unamused:\n(Which made my current git status very confusing). :confounded:\n. I've got an initial version of the plugin thumbnail style done.  The styles are still a little rough, but the effect is there.\nI've recreated the hover effect using CSS transitions instead of Javascript.  This change only affects the plugins with no thumbnail (currently designated by a plugin category in their YAML).  Everything else still uses the Javascript.\nCan you tell the difference between the two implementations? (Besides the differing styles).  \"Pico Edit\" has a proper thumbnail, so it's using Javascript, while everything else on that page is using CSS.\nI could always convert the others to use CSS as well.  I'm not sure what the benefits of using one or the other is (browser compatibility for example).  I'm using CSS for this effect though because it's what I know, and because of its ability to easily select and modify different elements independently.  I know Javascript can do this too, but the keyword here was easily. :stuck_out_tongue_winking_eye:\nThere is one difference between the implementations that I can see.  When you hover on the Javascript versions, the animation always completes, even if your mouse leaves the element.  It always does a full fade-in and a full fade-out.  The CSS version starts fading out the moment your mouse leaves, even if it didn't finish fading in.\nIn some regards, I like this better, because it feels less \"laggy\" when you mouse over them quickly.  The Javascript version feels like it's always trying to catch up.  The downside is that it's significantly less fun to move your mouse back and forth quickly on it (:laughing:).  Compare moving your mouse over items rapidly on the Themes page vs the Plugins page and you should see the difference.\nThere may be a way to require CSS transitions to complete before continuing, but I'm not sure at the moment.\nEdit: A quick search seems to suggest that queuing transitions would require using Javascript on the CSS. :disappointed:\n. I moved the trailing white space on the colon : to after the span and used rstrip to remove the leading white space.  This fixes the underline issue.\nIt's made me notice that Markdownify is leaving these line-breaks after all the variables.  I could add rstrip to each of them, but since it doesn't visibly effect anything I figure they should probably just be left alone.  What do you think?\n. > (black text doesn't fit quite well and the text is a bit too large)\nThe original size was too small, and made the space seem empty.  I also blame my laptop again (:laughing:): viewing it on a 13-inch screen vs the 24-inch monitor I use at home makes a big difference!  Maybe I'll go with a size that's somewhere in-between.\nI don't really like that its inconsistent with the thumbnail-ed items, but I thought it was worse having it be small.  Maybe the small size would work now that the rest of the effect is there.\nI made the text bigger before I had the effects or transitions done.  This made the smaller text look like it was just broken, not intentionally visible.  The larger text made it feel like it was being displayed on purpose.\nWhat do you think, Original size, or something in-between?\nI made the text black for readability while I was testing it, but that doesn't really match anything else.  I kind of forgot to come back to that.  Do you think it would look okay matching the regular page text? (#616161)\nAs you know, I'm open to suggestions on everything.  I just try to keep working on it when you're not around to give me input.  Sometimes that means not getting it right on the first try. :wink:\n\nYes, unfortunately on first glance. :unamused:\n\nReally? :confounded:\nI thought it was pretty convincing other than the small behavior difference.\n\nyou can't manipulate :hover with JavaScript\n\nI didn't really intend to.  I didn't think the difference was that bad.  If I was going to make both effects consistent, it was going to be matching the CSS version. :unamused:\n\nHowever, you might use it to fix the \"100% CPU usage\" problem (what IMHO is quite important btw)\n\nI don't really know Javascript well enough to do that. :disappointed:\n(This applies to either suggestion)\nWhile I can change a value here or there, or copy and tweak a section... that's about as far as my abilities go.  It's kind of annoy to think of how I used to know Javascript, even if Javascript in 2008 was a very different beast.\nSometime I'll brush up on it. :sweat_smile:\nIn the meantime though, if you've got an idea of how you think it should work, you can make a PR on it.  I don't mind having it use Javascript, I've just been trying to work with what I know.\nActually, another reason I was trying to make it work using only CSS was so that you wouldn't have to do it for me. :laughing:  I'm not much of a help if I have to keep having you fix things.\n. Consistency is key... so do you consistently not sleep or is it only when you feel the urge to check GitHub early in the morning? :wink:\nJust making some changes in my browser, I think it looks pretty good with the original size and (#616161) as its color.  Definitely better than it looks now.  I was mostly focused on getting the hover effect to match before.\n\nSimply add a CSS rule or change the existing one\n\nIt'll be easy enough to fix... these are all things that I added. :unamused:\n\n\nYes, unfortunately on first glance. :unamused:\n\n\nSeriously though, is it just the behavior difference? :confounded:\nOr do you just wildly mouse over items for fun like I do? :laughing:\n. ....I'm debating whether I should drop the \"Pico\" before every plugin name.\nIt's part of the name.... but every single plugin ever developed for Pico starts with \"Pico\". :expressionless:\nAlso, should I add `target=\"_blank\" to the \"Download\" buttons?  Only asking because the old ones have it.  I'm pretty sure that anyone browsing the site is going to know how to open something in a new tab if they wanted to though.\nI don't really care one way or the other, just wondering your opinion.\n. Not sure why https://github.com/picocms/Pico/pull/358/commits/e9d82e90b6ffea5325165f42e91617866d7935ea shows as a delete and create instead of a rename/diff... before I committed it, it showed correctly.\nOh well, it's almost entirely different anyway.  Maybe it was easier for Git to think of it that way instead of as an edit. :confused:\n. Ah, so apparently I should have committed the file, then modified it? :sweat:\nI used git mv to move it, then I modified it.  It showed correctly under both git status and git diff, but then when I committed it said \"create...(etc)\", \"delete...(etc)\".\nIn the past, as long as I've used git mv and not just mv, the changes have been tracked correctly.  If it had simply been unable to track the file, it would make more sense, but as I said, before my commit it was correctly tracked.\nI have noticed in the past that it doesn't seem to keep track of moved files if I stash or reset them though.\nOh well.  I'll try resetting and recommiting it to see if it tracks the changes.  If not, it's not a big deal, as this was mostly a rewrite anyway.\n. Lol, okay.  I always thought that using git mv was making a special note of it (since it says \"renamed original --> new\").  I don't think I've actually tried moving files normally then using git add.  I usually backtracked once I saw the \"untracked file\" warnings.\nIf simply using git add would have made it notice that the files were related.... well, that would have saved me a lot of git mving individual files in the past. :unamused:\nI get what you (and that post) are saying about Git not being a file tracker... I'm just trying to wrap my head around how it really tracks.\nI still think it's an odd/misleading behavior of git status.\nIf I'm understanding you right, the \"renamed\" status I keep striving for is only for my own benefit?  Git will automatically try to figure out what files are what based on their contents... even if I've moved them?\nUp until now I've been very careful to make sure everything I moved had that \"rename\" status. :sweat_smile:\nIf I'm way off-base, just say so, you don't need to explain the whole thing.  I'll research it in more detail sometime. :wink:\n. I've revised the Default Plugin Thumbnail. https://github.com/picocms/Pico/pull/358/commits/dd52bfef8a7b20072f451faa86462d2de51bce6e :smile:\nNot sure as I'd call it \"Final\" yet, but this copy at least isn't lopsided.  This is the version I'd actually want to work on instead of the rough draft I made before.\nIf you have any ideas on how to improve it, let me know. :art:\nMy first thought is that it might be a little too big.  I thought the old one was a little too small, but now I'm not so sure. :confused: \nAlso, if you'd like, I can upload the source files somewhere, I just have no idea where I'd put them.\n. > Looks great! :+1:\nThanks. :smile:\n\nbtw, fyi: smcdougall/Pico#4 :wink:\n\nYeah, I haven't gotten a chance to look at it yet.  Revising this image was my way of at least accomplishing something today.  I'll check out https://github.com/smcdougall/Pico/pull/4 in a little bit. :sweat_smile:\n. @PhrozenByte, you may have noticed I've been inactive the last few days.\nSorry, I've just had a busy week.  I assume you've been inactive (on GitHub anyway) for the same reason :wink:\nI should be able to get some decent work done in the next few days.\nAlso, I'm starting to get a little burnt out on these two PR's.  I'm ready to merge them (when they're done, obviously) and start working on something new, lol. :smile:\n. It shouldn't interfere at all.  In the tests I did before, the contents of plugins was simply merged with the contents of _plugins when the site was built.\nAlso, as far as I know, even if you put admin.html in _plugins (which we probably shouldn't, since it's not part of the \"collection\"), it would still be moved to plugins on build.\n. > Are you sure about that?\nI really don't know.  I only tested it with image files.  Since these weren't...  \"collectible\", for lack of a better word, Jekyll moved them to the non-_ folder on build.\nI'll make sure to double check it, but overall Jekyll doesn't seem too picky.  It creates a plugins folder for both plugins.md (which becomes plugins/index.html) and for _plugins/images.  It doesn't seem to care that they both build into the same folder.\nIt's rather convenient, but maybe this isn't even an intended behavior. :laughing:\n. Finally decide to spend some time on this and...\n- Atom breaks\n- I forget to merge a section in style.css\n- I reset my local repo to the wrong point\n- Owncloud silently refuses to sync the _plugins folder to my server (it gets confused sometimes when I checkout different branches, massive file changes and such)\n- Explosions\nBut now, with all that out of the way, I can finally get to work on this...\n(And before you say anything, I merged gh-pages in specifically because I needed the updated style.css.  Now I can work on merging some of these styles into the main sections). :wink:\nEdit: :point_down: Oh, hey, look at that.  I got my green automerge checkmark back. :smile:\nI know it's pointless, but it makes the OCD part of me happy.\n. So... I want to tackle that Two-Column layout idea, but I'm not really sure what to do with it.\nI'm trying to imagine what content will go there.  I don't really want someone's full readme to be pasted into the new section, but I also don't want it to be just a line or two followed by a bunch of empty space.\nJust to get an idea of what it could look like, I took the screenshot below.  This section is really annoying to work with using the browser's code inspector because it's all generated by JavaScript.  Since any little interaction (changing the window size, clicking out of the content area, etc) will destroy the element, any temporary modifications get destroyed with it. :confounded:\nAs such, this example is very basic.  In an actual implementation, I'd probably move some of the right side content, like the title and info lines, over into the larger area.\nI have no problem with coding this section, but if you've got any (even rough) ideas of what you'd like it to look like, give me an example.\nI feel like we may have had a discussion about it many months ago, but if I recall correctly, it was pretty vague.  I'll look through the comments and see if I find anything useful. :laughing:\nEdit: It was here: https://github.com/picocms/Pico/pull/358#issuecomment-226978497\n\n. What diff isn't working for you?\nhttps://github.com/picocms/Pico/pull/358/files\nSeems correct to me.  Most of the files in this PR are entirely new, and the only \"incorrect\" ones I can see are the files that were new in #352 (about.md, gallery.html, etc), which still show as being entirely new.\n\nOkay, those are some pretty good ideas.  I'll see what I can do with them.  I like the idea of the small screenshot (even if it's the default thumbnail).\nI think I like your middle layout best.  The first one might seem like too much wasted space under the screenshot.  Maybe not, I'd have to see how it looks, but between that and the second one, I like the floating screenshot better anyway.  The last one I don't like.  It feels like it would be inconsistent with the other entries to have the screenshot on the right.\nI'm also thinking that there should be an option to manually enable this layout, even if the user has provided a fullsize screenshot.  Also, I'll probably disable the magnifying glass on the default thumbnail icon, but keep it for any entries that provide a screenshot.\n. Cool!  And as an added bonus, all those #352 commits cluttering the beginning of this PR page are gone. :smiley:\nI thought I'd have a chance to work on this yesterday and today, but I've been busy.  Maybe I'll have a chance later tonight.  Either way, I'm going to try to have this two-column part implemented soon.\n. So here's my initial attempt at the \"Two-Column\" layout.  This is the structure from your second example, but at the moment, the image size (50% of the column) feels a bit more like three columns.  The image is floating though, so the space underneath it is used for longer text.\nHere's a few variations.  Tell me what you think.\n\n- As described above.\n\n\n- The same, but with some additional text, so you can see the text flow around the image.  At the moment I'm having an issue with the margin underneath.  The margin on both edges is the same, but the bottom edge also has the 24px line-height working against it (and in this screenshot, also a break between paragraphs :confounded:).  Not sure how to make this look better at the moment, but I'll try to fix it at some point.\n\n\n- This one uses a smaller screenshot, 30% of the column.  Probably closer to what you imagined, but it feels odd clicking on a thumbnail, only to have an even smaller image show up with the new content.  Might be necessary to overlook that though, because the small screenshot looks a little better in the content area than the bigger one did.  Of course, there's still a magnifying glass you can use to full-view the image too.\n. Maybe. :confused:\nMy first impression was no, but I think it's growing on me.\nThe biggest reason I don't like it is that it deviates too much from the original layout. :disappointed:\nI don't know though. :confounded:\n. @PhrozenByte I implemented your layout.  As the commit message notes, this probably requires some double-checking.  I'm pretty tired at the moment and noticed a pretty big issue before committing.  Hopefully everything else I wrote is correct though. :worried:\nThe styles could probably use some work too...\n...and there's several duplicate sections of the HTML/Liquid that I'm not sure how to condense yet.\n\nNow, I've been meaning to post here for a bit.  I've had very little time to work on this lately.  I can't believe it's been 19 days since my last commit.\nI've been working full-time at my retail job lately, and it's left me with little time or energy to code anything.  I still plan to chip away at this when I can though.\nBut, my feelings won't be hurt if you'd like to work on it.  Go ahead if you have time.  Just open a PR and I'll try to keep an eye on GitHub to merge it.  You can even completely rewrite things if you'd like (it probably needs it).\nThis redesign feels so close to completion (especially if you ignore the new columns layout idea).  I don't really want to see it sit in PR purgatory forever. :confounded:\nMaybe sometime soon I'll be able to work on #359.  Since there's no code involved, it should be a lot easier to pick up and put down that project (depending on my schedule) than this one.  There should be a lot less \"What does this part do again?\" involved. :stuck_out_tongue_winking_eye:\n\n:moneybag: :point_left: Here's your <hr> fee, since this is a long one. :wink:\nUltimately, I haven't had any time or energy to work on... well... anything.  My personal projects have suffered as well recently.  Other than work, I've been very.... dead, to the world.\nI sincerely miss contributing to Pico though.  Hopefully I'll be over this hurdle soon, but at the moment, there's no end in sight. :disappointed:\nHoping to participate more soon. :cry:\n. > I don't know what you mean, it looks great!\nWell, that's good. :laughing:  I was really tired (and had also been drinking a little) while I worked on that.  Everything seemed in order, but right as I was about to commit it, I found an big issue.  I'd written the CSS in a way that affected the regular layout as well. :unamused:\nSo I just wanted to be sure there weren't any other goofs I'd overlooked.\n\nDo you think we should use the default theme image for plugins without a screenshot, or should we rather use the puzzle piece image?\n\nI think it should use whatever is defined in the defaultThumbnail variable for that page.  So in this case it would be the puzzle piece image.\nI actually intended to make some kind of a \"paint bucket\" style image for the Themes page as well.  Probably unnecessary though, since a theme lacking a screenshot isn't really appealing.  At the time it was more of a \"for fun\" idea. :smile:\n\nSome of the theme descriptions and quite all plugin descriptions feel \"incomplete\".\n\nYes they do. Didn't have much to go on, lol. Just Pico. :laughing:\nI'll see what I can do with them.\n\nplease merge all CSS rules into the regular stylesheet\n there's a \"Temporary?\" comment somewhere\n\nOf course.  The \"Temporary?\" comment was because I didn't know if I'd be keeping that \"saturate\" filter on the puzzle piece / default theme image or not.  I had originally planned to just use a desaturated image, but used a filter in the meantime.\nI think it actually looks better without the filter, since the green matches the rest of the site anyway.  I'll remove that style.\nAs for the rest of the styles, I plan to make some new subsections for them within the Portfolio section.  They'll probably be the same as what's already there, just moved into the main portfolio styles.\n\nI didn't read the submission guidelines yet, are they supposed to be ready to merge\n\nThey're about 95% done.  The content should be complete, it just needs some finalization.  There's some inline notes that need to be removed as well.  I was also hoping to come up with some better categories for themes and plugins, which would need to be addressed in this document as well.\n\nI don't think your ToDo \"Provide \"Documentation\" on how to use gallery and portfolio\" is necessary\n\nProbably not... though I've probably already forgotten some of the extras I coded into it. :confounded:\nIt was mainly in-case we ended up using the Portfolio implementation again elsewhere later on.\n\nthis should be fun, not a duty\n\nIndeed.  And it was.  I miss that.  It was something I'd look forward to working on each day.  Hoping I'll be able to get back to that point soon. :beers:\n\nSo I've opened a PR finalizing the last few things and it should be ready to merge now.\n\nCool! I'll check it out soon. :smile:\n. > I've probably fixed this in smcdougall/Pico#6 without even thinking about it :laughing:\nNah, I fixed it before the commit.  But it was a very very obvious mistake, so I was worried I may have made more.\n\nOkay, so we need a higher resolution version of the puzzle piece image.\n\nOkay.  How do you want to do that then?  Do you want the existing file to be higher resolution, then scaled down for the regular thumbnails?  Or do you want to have an entirely separate file.\nFor that matter, the puzzle piece graphic itself is an SVG, so I can make it any size we want. :smiley:\n(The finished image with the background, etc is a bitmap though. :unamused:)\n(Not that the effect couldn't be recreated in the SVG... hmm...)\nIs 333px the width that you want?\nAfter we're done with this PR, I'll open another one with a single commit (for the \"large file storage\" reasons we discussed before) containing all the assets/source files.\n\nSo, should I read the submission guidelines\n\nYeah, go ahead.  You'll need to read them before you can tell me about all the parts you'll inevitably want me to rewrite. :stuck_out_tongue_winking_eye:\n. Sure....\nlooks around for an old virtual machine with IE8\nOr maybe it'll run in Wine...\n:fire: :boom: :fire:\n:stuck_out_tongue_winking_eye: jk though.  I've added it to the todo list. :point_up:\n. I was only half-joking.  I didn't know about that though, so I'll have to check it out.\nAs you know, I generally just... ignore IE.  Whenever I need to check how broken IE makes things, I usually just use any random online screenshot service. :unamused:\n(Not that it would work in this case).\nI do have a reluctant Windows install for a few things though. :laughing:\nIf anything, my joking above is more about how to avoid rebooting into Windows than anything else. :wink:\n. So that's the new \"Code Review\" feature.  Neat.\nIt'll make finding the comments related to changes a lot easier. :wink:\n. :laughing:  I just got really confused.\nI saw you an issue of yours over at spin83/multi-monitors-add-on (purposely not a link), and thought I was on the wrong page for a minute.  (It's an old comment, but someone recently replied to it).\nIt's one of the only other projects I watch on GitHub*, so I found it funny.\nJust wanted to share.\n*I maintain an AUR Package of the extension. :wink:\n. So... I was playing around with extending the description (item.content) of the plugin entries (specifically using yours) when I noticed an odd bug.\nFor some reason, if there are any single quotes inside a code block ' it breaks that entire entry on the page.  It seems to be a markdown related issue, because the break is caused by the opening bracket on <li being escaped into &lt;li and then being rendered as text on the page.\n(Note, at first I thought it was a quote issue, since that section of portfolio.html has given me a ton of issues with escaping quotes.  As far as I can tell though, it's a coincidence and that's not what's happening here.)\nThis happens if there's a single quote ' anywhere inside a code block though, so I'd consider it to be a pretty severe issue.\nFor example: Check out this example code thatdoesn't work.\nIf we can't find a way to work around it, we'll at least have to keep it in mind when accepting submissions... :disappointed:\n. So it was a quote issue.\nHonestly, this whole time, I've absolutely HATED the way this entire setup is contained in one HTML attribute.  I know why it is, it's just a real pain to work with, especially when trying to safeguard against dynamic content.\nAt this point, I think there's more safeguarding and escaping in portfolio.html than functional code. :laughing:\nGlad it was a simple fix, otherwise this could have been really annoying.\n. No worries.\nI could have asked you to fix it, but I wanted to see if I could figure out the issue myself. :smile:\n. > However, if this really bothers you I can change it.\nNot at this point. :laughing:\nMaybe back at the beginning when everything was breaking though.\n. Hmm... should there be a tile for the default theme? :thinking: (:point_left: I think that's my new favorite emoji.)\nThere was one that I used for testing in the beginning.  I removed it because it didn't really serve a purpose.\nBut maybe it could be there (pinned to the beginning), with a paragraph about how you can use it as a base for your own theme...\nEdit: This is mostly just me wondering what to do with the default theme screenshots I have. :laughing:\n. Okay, fine then. Hmph. (:wink:)\nSeriously though, do you think I should remove these assets or keep them for future use?\n- Thumbnail\n- Fullsize\n. Okay :+1:\nAlso, it's only the default plugin image because I haven't changed it yet. :unamused:\nWhile you're active, another question.  What do you think of the filter: saturate(50%); style on the default plugin thumbnail?  It's a holdover from when I was first writing the transitions.  I'm leaning toward removing it because 1) it's very subtle anyway and 2) it changes the puzzle piece from \"Pico Green\" to a greyish-green.  Also, it's not supported in older browsers, etc.\n. > I didn't notice the saturation until now :smile: This is completely up to you...\nOkay.  I'm going to remove it next time I work on the styles then.\nBtw, I did take a look at it in IE.  It was like a train wreck turning back the version numbers.  It just gets progressively worse with each old release.\nIt bothers me that Microsoft holds back IE versions on old versions of Windows.  It's bad enough that it takes them forever to meet standards, they could at least backport those updates.\nSigh, I've had a very anti-Windows day (repairing a coworker's computer).\nAlso, more of a note for me, I'm going to see if I can make the website's header fall back to \"Pico Green\" instead of black for older IE.  The gradient doesn't work under IE8 (iirc), so I might as well make it fallback to the right color.\n. > Simply add a background color (maybe with opacity/-ms-filter) and you're done.\nOh no, I definitely wasn't going to try to fix everything. :laughing:\nJust enough to make it usable.\nThe banner issue I mentioned however, should also be as simple as adding a background-color.\n\nAfaik the portfolio style already satisfies these requirements!\n\nIt does fail pretty gracefully, considering.  Those CSS transitions are really the only thing that need a workaround.\n. Hmm, yeah, it's definitely made more difficult by the fact that the same green is also used for the active/hover text.  I hadn't thought of that when I suggested it.  I was more thinking about the fact that it used to be solid green when the site was first recolored.\nAnyway, I'm probably not going to worry about it.  I've just been putting off the IE8 stuff because when I feel like doing actual work, I'm never running Windows. :wink:\n\nHmm, I guess we've never really touched on this directly before.  :laughing:\nI'm an ArchLinux and Gnome user.  How about you?\n. > I recommend setting up a Windows (7 or 10) VM, e.g. with VirtualBox :wink:\nChecks VirtualBox ...Wow... I actually have a Windows 7 VM set up... :sweat_smile:\nI thought the only Windows VM I still had was XP.  I'm surprised this survived my drive cleanup a little while ago.\n\nDebian Jessie and GNOME 3.14 :smiley:\n\nDebian's an interesting choice.  I'm sure it must be pretty stable, but Gnome 3.14 was forever ago, lol. (Arch already has the recent 3.22 release).\nI'm guessing you got into Debian because of its prevalence in the server space?\nI was an Ubuntu user for quite a few years.  I switched to Arch because I'd heard good things about it and I was sick of Ubuntu's software always being \"stale\".  I wanted to be running the latest Gnome, but Ubuntu always lagged at least 6 months behind.  I just like new things, lol.\nThe software availability is what keeps me on Arch though, despite it sometimes having rough edges.  No other distro can match the vastness of the AUR. \nAny time I've tried to move away, I have to spend a few hours trying to get everything set up.  Finding PPA's or repos containing my favorite software, tweaking things to my liking, etc.  By the time I'm done, I've usually hit some quirk or roadblock that causes me to ask why I'm bothering.  Then I just reboot back into Arch. :laughing:\n. > \"He's pressing a key in Nautilus? Let's start a recursive search!\"\nUgh, I hear you.  As much as I like having the latest, greatest everything, sometimes with Gnome it feels like one step forward, two steps back.  This example is one change I couldn't get over... but on Arch I've got Nautilus Typeahead. :wink:\nBut, you know, at least under Linux we have the freedom to choose what works best for us. :smile:\nIf only the rest of the world would get on board.\n(Might still be slightly in my Anti-Windows mentality... I still have one more Windows computer to fix for someone...)\n. Anyway, back on topic, I've got some IE fixes done for the tile transitions.\nI guess I can't really call them transitions since... that's the incompatible part... but at least the default and hover states work now, even without a \"transition\" between them.\nI also found a clever fix for the heading gradient, so that works now. :smile:\nRight now the biggest thing still not working is the card view.  It's really broken, especially at lower resolutions (1024x768).  I believe the image is floating somewhere off the left side in \"no man's land\".  I only think this because at one point I was able to get its magnifying glass icon to appear over there.\nThen, on the right side, the Learn More button also has a tendency to go off the edge, and/or under the x button.  This is less of an issue, since it's really only happening at resolutions below where our small screen layout should be kicking in.\nNot really sure how to address these issues.  I might take a look at it in IE11's compatibility mode to see what's really going on with that image.  IE8's Developer Tools are... well, I feel bad for any developer that's had to seriously use them. :laughing:\nOtherwise, if you've got any ideas for how to address the \"card\" layout issues, feel free to. :stuck_out_tongue_winking_eye:\n. > Doesn't work for me, the filter is there but has no effect for some reason :confused:\nHuh... I'll have to investigate that.  It works in real IE8, lol. :thinking:\n\nThat's the important thing, right?\n\nbtw: IE9 doesn't support linear-gradient either, so you might want to add the header workaround to ie9.css, too.\n\nI planned to.  Just wanted to be able to test it in IE9 before I added it.\n\nWe don't need to support low resolutions with IE8 (there's no IE8 on mobile devices anyway).\n\nThank god, lol.  That'd be a nightmare.  Wait... what does Windows Mobile run? (Not that anyone uses it).\nI mostly just wanted to point that one out since I discovered it.  My VM was initially stuck in low-resolution.  For some reason the \"Guest Additions\" weren't working on my first boot.\n. Here's your problem: DX filters are no longer supported \ud83d\ude09\nEdit: Also, by changing the settings in \"Internet Options\", I was able to get the filter to show correctly in IE11.  So, it does work. \ud83d\ude04 \nAlso, the Windows Mobile/Phone thing wasn't a serious question, lol.  Let's hope that platform never comes back (though I wouldn't argue with a successful, true FOSS mobile OS).\n. Hmm... That's odd.  The image issue I described with the card layout doesn't seem to happen in IE11's testing mode.  That's going to make it harder to figure out. \ud83d\ude15\n. So... I just had an interesting feature idea that I'll probably hate myself for...\nWhat if we could link to specific themes/plugins using an ID, eg http://picocms.org/plugins/#pagination instead of http://picocms.org/plugins/#entry-4.\nThis would allow specific items to be linked to directly, which can't be done right now due to the dynamic nature of the numbering.\nIt's just a thought, and likely not possible without modifying the JavaScript (also not sure if that'd be in scripts.js or part of Isotope...).\nJust didn't want an idea to pass by without writing it somewhere. :wink:\n. Do I get a bonus every time I use the word contribute. :laughing:\n. > See smcdougall/Pico#8\n:open_mouth:  So that's what you've been up to.\nAs usual, I'll merge this, then find a bunch of bugs in it for you. :stuck_out_tongue_winking_eye:\nI have no idea how your changes fix the IE11 issue, but I'll take your word on it until I get a chance to test it. :smile:\n. Types like a maniac\nI feel like I'm on fire this morn... afternoon... whatever time of day it's becoming. :triumph:  :laughing: \nCommit Commit Commit\n. The reason why our bullets aren't positioned correctly is because they aren't bullets. :tired_face:\nThey're absolutely-positioned :before content. :confounded:\n. The solution seems to be to replace position: absolute with float: left (on the :before element).  I've tested this on a Docs page and everything seems to look identical with either style.\nUnless you think this could break something elsewhere, I think it'd be a good fix.\nOr we could change it specifically within the card layout to avoid unintended breakage... :thinking: \n. > Try removing position: absolute and setting display: inline-block.\nOkay.  Is there something wrong with using float?  Did you find something it breaks?\n. Well, both methods seem to work, even in IE8.  inline-block actually pushes the lines apart a little bit, but we could probably use some height to fix that.  It also makes the bullet appear slightly lower. :confused: \nIf it's okay with you, I'm going to use float since that creates an identical effect without needing other styles.\nI don't think it should create any issues... It's not like the \u2022 is going to float away anywhere, it's stuck inside the <li>. :laughing:\nWe can always come back and address this if we find that it creates an issue later on.\n. Wow... nearly complete on those to-dos...\nBefore I remove it, do you have any insight on that YAML issue I was having in the beginning?  It didn't end up affecting anything, so we never talked about it.\nBasically, my string was being treated as an array.  No idea why.\nYou don't need to investigate or anything, but if you had any quick thoughts like \"it's because you didn't put a blank line under your frontmatter\" (:laughing:), let me know.\nOtherwise, it was never a real to-do, so it's getting demoted from a checkbox to a bullet point.  I'll delete it for good after I hear from you.\n\nSo, awhile back you mentioned wanting a high-resolution version of the Puzzle Piece image for the fullview screenshot.  I was thinking of recreating it as an SVG (which the actual puzzle piece was anyway, just not the background).  Is this something you still wanted?  At the very least I need to make it so the Default Theme isn't used as a stand-in anymore.\n..and even if I make the SVG... I guess we still need a PNG for compatibility reasons...\nAlso... an SVG would be a much smaller source resource to upload to the repo.\nWait... could git perform diffs on SVGs? :open_mouth:\n\nThen, all that's left on my list is \"Find a replacement for the None category? (created when I removed multi-page)\"\nMaybe that's unnecessary though.  I mean... not every item has to belong to a category, right?  There probably shouldn't be a \"this is a regular, completely normal site design\" category, that'd be kind of dumb. :thinking:\n\nUnofficially (or, at least, not on my list), there's the idea of creating a defaultThumbnail for Themes.  I guess that's more of a \"for completeness\" thing than a requirement.  We already have a generic defaultThumbnail, and we probably wouldn't accept submissions that didn't provide images, so I guess we don't need a special thumbnail for them.\nThen there's the idea of a plugin-specific Contribute Tile image.  Could probably still create one of those.\n\nAnyway, rambling aside, this is getting surprisingly close to finished. :smile: :tada:\n. > Sure. However, the diffs aren't very useful :laughing:\n:laughing: I meant more that it could operate on file deltas instead of having to reupload entire files every time there's a change.  It would also theoretically take up MUCH less space as you made changes to the file.\n\nJust tell me when you're ready and I'll read through everything a last time before merging it.\n\nI'm working on improving those last few image assets right now. :+1:\n. \nThoughts?  I didn't give the SVG a white background.  I think I like this effect.\nAlso... this makes me really wish we could use the SVG version for the thumbnails too, but I don't want to have to write a fallback solution for IE8. :confounded:\n. > The SVG shouldn't be that big :wink:\nNo, but it was a cool idea.  Quit ruining it. :wink:\n\nMaybe it also needs some sort of separation (i.e. a border), however, I'm not so sure about this. :neutral_face:\n\nAww.  It's not like the white version has a border either.  It'll probably look more out of place. :laughing:\n. \nThis wasn't on purpose either, but I thought I'd share.\nI forgot my box only had 10% opacity when I duplicated it to create the background.\nShould have probably just set a background color :unamused:\n. Wait... no, I was right to make a box the first time.  The \"Background Color\" I was thinking about is just for within Inkscape.\n\nAnyway, this time for real, White Background.  What do you think?\n. \n(Following a discussion on IRC, I tried to match the stripes to the container... but left the background white).\nIt makes my head hurt. :laughing:\n. \nAnd one with White stripes, but a transparent background. :wink: \nEdit: This, but swapped colors.\n. \nNo idea what happened here... but I almost like it. :confounded:\n. Here's the new Plugin Contribute Tile image. https://github.com/picocms/Pico/pull/358/commits/e242df2adfa5dca785808d9ced963b4249c5938f\nI'm not 100% sure that it's good yet, so let me know your thoughts.  If you like it, then it can probably grow on me. :wink:\nI'm just at the end of my usefulness for the night, so I'm committing what I have at this point.\n\nI'm going to be away from home for the next few days (until Sunday night).  That doesn't mean I won't check in, but you probably won't see me as much.\nTake another look at the Submission Guidelines, specifically the Getting Started section and tell me what you think needs work.  It should be the last part of this project. (Unless you hate the Plugin Contribute Tile or something.)\nAnd before you say something about the formatting, be sure to read the commit message I left on https://github.com/picocms/Pico/pull/358/commits/57d465b9bf4ed9fad46404310a5a801d0cebf726. :laughing:\nI'll have my laptop with me while I'm away, so if there are major changes to make, I can probably take care of them tomorrow night. :wave::smile: \n. I lied, sneaking on the computer when I should be getting ready to go. :sweat:\n\nI recommend something like #616161\n\nI'll give that a try and see how it looks.\n\nHow about mentioning alternatives to shell commands\n\nThe main reason I went with CLI instructions was to keep the section brief.  Originally, I thought it'd just be some links with a \"figure it out yourself\" sort of feel.  I decided that it would be easier just to write out instructions though, since that would have a very clear \"flow\" to it, which acted as a writing aid.  (I already knew the steps it had to say, so I just had to write some notes around them).\nThe other reason I went with CLI instructions is because presumably they're the same on all platforms.  Mac and Windows users might prefer to use a GUI, ~~but they technically have~~ No, you're right, Windows users especially are unlikely to have a command line version of Git. :thinking:\nWould it suffice to simply mention that there are GUI options?  For that matter, they could probably make all the changes right through GitHub if they really wanted, so there's that too.\nI don't think I knew GitHub had guides.  I mostly come across their regular help pages, so I linked a few of those already.  If there's any other good ones you know of, I can link those too (and/or replace the existing links).\nI think my proposal would be adding an intro paragraph mentioning GUI clients, the web interface, where to learn some basic instructions, and how to contact us (IRC) if they need help.  Then go into the existing content/shell commands, but formatted better (perhaps as a numbered list).\nThat's all I've got time for right now. Sigh  I've got a long list of stuff to either prepare or pack.  I'll check in again later if I can.\n. Oh, not sure if you noticed, but the contribute tile has puzzle pieces in the background! :laughing:\nAs a note to myself, they're way too faded out to see, but the background still stands out too much from the other tiles.  Try desaturating the background instead of lowering the opacity.  More visible puzzle pieces, but blending in better with the other tiles.  Should be a win-win. :smile:\n. Okay, made some improvements to the Plugin Contribute Tile. :smile:\nNow to work on the Submission Guidelines...\n. Added some info to the beginning of the Getting Started section.  Converted the rest of the content to an ordered list (Honestly, it doesn't look too different other than the numbers :unamused:)\nLet me know what you think of it / where you think it still needs work.\n. Yay! Wasn't expecting that in my inbox. ............................................................... :point_up:\n. > Can you try removing the paragraph after the bold \"headers\"\nSure.\n\nBtw, there's a whitespace missing between the Fork SVG image and the word \"Fork\".\n\nI know.  With the previous layout, the line break was splitting the word \"Fork\" onto the next line.  I tried using an &nbsp;, but Markdown ate it or something (it got converted to a regular space).  I'll add that back now that it won't look funny.\nFor that matter, you'll notice the fork icon is an embedded SVG.  It's \"borrowed\" from here on GitHub. :unamused:\nI was surprised to learn that the fork icon and several others on GitHub are embedded right into the page.  But, that being said, I'm not really sure if I should (legally) be using it.  Let me know if you want it removed. :wink:\n(When I first investigated it, I thought it would be an embedded font character or something.)\n\nSo, does this mean that this is ready to merge and I should read through everything a last time?\n\nYes.  Everything is \"Ready-to-Merge\", minus whatever papercuts we discover between now and then.\n\nWe'll furthermore move from the gh-pages branch to picocms/picocms.github.io after we've merged this PR. This should also make your countless contributions much more visible. :smiley:\n\nCool!  I'll let you handle that so I don't explode the website though. :laughing:\nAlso... doesn't that technically mean I should point to that repo in the Submission Guidelines?  Or are both locations going to be maintained?\n. So, to address my last \"to-do\", I have an asset source file (a Krita .kra) of the Contribute Tiles (both are in the same file) to include somewhere in the repo.  This is the only \"source file\" to upload because the defaultThumbnail and Plugin defaultThumbnail can both be recreated using the .svg of the \"fullsize\" plugin image. (_plugins/images/fullsize/plugin.svg)\nWhere should I put this .kra file?\n. 6.7 MB.  I've cleaned it up and trimmed it down, so that's the final size.\nIf you don't want it in the repo, I can always put it elsewhere (or create a personal \"Pico Resources\" repo).\n. > Hmmm... I tend to suggest Git LFS. What do you think?\nNo idea, never used it.  I'm pretty sure you specifically said that you didn't want to have to resort to that though...\n. Well, since it's not required for this PR, I'd suggest leaving it off for now.\nIn the meantime, I'll do what I suggested and upload the file to a personal repo.\nMy reasoning for this is that, later on I can always delete said repo without disturbing anything. (No need to worry about commit histories, old versions, etc).\n. Oh, and btw, your date format broke things:\nLiquid Exception: undefined methodgsub' for # in _includes/portfolio.html, included in plugins.md`\nGood thing I'm removing them. :wink:\n. > Actually that's one of the reasons why a separate repo is no good idea :unamused: We should keep everything at one place.\nYeah, but you were worried about the extra space that would take up.  I just mean that temporarily it's better than implementing a different solution, then deciding you don't like it and having it stuck in the ever-growing git history.  (To my understanding, even if said large file was deleted later on, it would still be taking up space).\n\nGitHub wasn't complaining about it :smile: :wink:\n\nWell my Jekyll instance refused to regenerate the site. :angry: :stuck_out_tongue_winking_eye: \n. Where would you like me to make a note about it?  It's kind of useless on this PR as it'll be lost in the \"closed\" section.\nI could also make a note in the zzz_contribute file if that'd be helpful.\nEdit: Uploaded\n. > That's the reason why I was suggesting Git LFS :laughing:\nWell, if it's how you want to handle it, that's fine.  My questions are:\n1) Where do you want the file in our repo? (the text pointer)\n2) Where will the real file be?  Is that storage something that GitHub offers (and for free), or will it need to be another location (such as the temporary repo I made :unamused:)\n. At this point it's just waiting on you.\nMinus the one source file, and our decision there, everything is ready to merge.\nThe only \"conflict\" is that customization.md has been removed altogether in my fork, while here it's been added to since I started this PR.  The solution is, obviously, to delete it.\nI can merge it (:smile:) or you can.  Either way, I'll wait for your final permission. :wink:\n. Okay! :+1:\nI'll also investigate the Git LFS thing if I have some time.\n. Aaaaand it's Official! :tada: :beers:\n. I've got a little more work to do though.\nApparently I never added Pico HTTP Parameters to the Plugin page. :sweat_smile:\nAlso, one plugin I cut from the old page was \"Pico Navigation\".  This is because it was last updated 3 years(!) ago.  If you know that this plugin is still compatible / relevant to modern Pico, I can add it back though.\n. :open_mouth: I can edit your comments now.  I went to click on the \"reaction\" button and hit Edit by mistake.\n. Now to be responsible and test my changes before pushing them to the real website.\nUnlike some people. :stuck_out_tongue_closed_eyes: \n. ...so what happens when @BesrourMS goes to make a PR later this week and discovers that cusotmization.md is gone? :laughing:\n. If you haven't found them yet, I've written some Submission Guidelines that show how everything works.\nObviously, I've already made entries for all of your existing themes.  When you go to submit another one, go ahead and copy one of those as a template. :wink:\n. > You can btw cherry pick the additional commits on a clean branch\nInteresting.  I'll check it out at some point.  Git is always surprising me.  I'm a Git wizard compared to six months ago, and I've still only scratched the surface of what it can do.\n. https://github.com/picocms/Pico/pull/334#issuecomment-255223633 that's a good cookbook example :wink:\nEdit: Not sure if there's no edit button on GitHub's mobile page, or if I'm just not seeing it....\nAnyway, I'm adding a note about this example to the description above. If you think of or come across any other good examples you've left floating around here on GitHub, be sure to link them.\nWhile I wasn't considering the cookbook part of this rewrite, there's no reason why it couldn't be. :smile:.\n. Lol, okay then. :laughing: :+1: \n. Had a rough couple of weeks, but I've been able to get a little work done.\nI'll open a new PR sometime soon so we can discuss this over on picocms.github.io.\n(Plus, I've scrapped this branch.  It was only meant to be notes.  I've started over, and I'm just using the old branch as a reference.)\nFirst page of the rewrite is \"content complete\", though I'm sure there will be lots of revisions and edits by the time everything else is done.\nhttps://smcdougall.github.io/picocms.github.io/installing/\nYou can leave feedback if you want, but I'm mostly just sharing.  \ud83d\ude09\nIf you want to provide more general feedback, such as on the direction I'm going, you can.  The more specific stuff can probably wait though, as it's obviously still very much a work-in-progress.\nI won't be around again until tomorrow though.\nIf you get the chance though, give me a \ud83d\udc4d or \ud83d\udc4e. \ud83d\ude04\n. > Please move all individual pages to a separate directory\nThey will be.\nI actually never intended to commit them there.  I recently (finally) changed my server over to Arch, and at the moment I don't have Jekyll installed.  So instead, I started committing the changes to view on GitHub Pages. \ud83d\ude06\nI'll reorganize them as I get farther along. \ud83d\ude05\n. sigh After all the time we spent going over these rules, I did not want to open this Issue. :disappointed:\n. Are you sure that the .htaccess rule doesn't block all lib folders?  The last time I tried one of the editor plugins I couldn't get it to work.  That was when I was running Apache with Pico's .htaccess.\nI didn't care enough at the time to bother diagnosing it, so I don't know if it was the same issue.  It caused the same symptoms though, a blank area where the editing/text field should have been.\n. I don't know how I missed that. :open_mouth:\n. No... I haven't really thought about it. :sweat:\nThe only solution I can think of right now is to use change the regex to start with ^/pico (like the later example) if you have Pico in a subfolder.\nThe reason why we didn't sugget that originally was to keep configuration to a minimum.\nSigh I don't think there's going to be an elegant solution for this.  We might just have to provide two configurations.\nAt some point, I'll try to rewrite that section and move the Root/Subfolder explanation to somewhere earlier in the document.\nAs long as it's written well, it shouldn't be a big deal.  The explanation would really boil down to \"change all your /'s into /pico/'s\"\n. @PhrozenByte Seems to be a Symphony thing for detecting a mobile device and redirecting them.\nhttps://github.com/suncat2000/MobileDetectBundle\n. Sure.  :+1:\nI've made a note on #359 to come back here and reference your explanation.\n. I can't really add much, but feel free to take a look at my implementation.\nThe relevant code spans from Line 224 to 318.\nI don't have much of a coding background, so it's probably a little rough around the edges and hacky in spots.\nIf you would like to contribute to the website, we'd love the help.  When @PhrozenByte says our resources are a bit tied up right now, what he really means is:\nOur resources: :point_right: @PhrozenByte :point_left:\nSo help is always appreciated.\nPersonally, I'd like to see the Cookbook become more of a collection of mini-tutorials than just some code snippets.  If you feel up to writing a proper tutorial containing your code examples, some explanations and reasoning, and the basic steps of how to implement it, that'd be really cool.  Basically just make it approachable for anyone to figure out.\nOther than that, the two of us are usually available here on GitHub if you need help. :smiley:\nIt's entirely up to you though.  Don't feel like you have to.\nIf not, thanks anyway for your contribution.  We'll try to find a home for it in the not-too-distant future.\n. Note: Sorry for the delayed response.  I started this commend a few days a go, but I've been too busy to come back and finish it. :confounded:\n\n\nespecially I am thinking for people with only HTML and CSS background.\n\nYes, that's exactly what I meant.  I've been aiming to make all of Pico's Documentation clearer and more accessible.  Ideally, I'd like our Docs to be accessible to anyone, but the overall assumption is that most users will have at least a partial background with HTML and CSS.\n\nare you passionate about education?\n\nSomewhat I suppose.  As someone who's never had a real chance to pursue a college education, I'm not the biggest fan of the educational system here in the US.\nI would consider myself pretty passionate about Learning and Knowledge though.  I think anyone should have the ability to learn something if they want to.  \nKnowledge on the Internet has always been an invaluable tool to me.\nHelping others is also something I take great pride in.  (In fact, as a side note, I think that everyone should have to work a mandatory amount of time in a retail job during their life.  It gives you a greater appreciation for the little things, and people, that make the world work.)\nThat mentality is probably a big reason why I'm into Open Source.\nSince I'm not experienced enough at coding PHP to contribute to Pico's core, I like to help out with side projects here, like the Documentation.  In a way, it satisfies both that desire to help people and the feeling that knowledge should be available for anyone.\nPico's main Documentation is currently in really rough shape.  It's there, but it's hard to read, especially for someone who's less technically-inclined.  My next project is going to be to revamp everything into a more tutorial-like state (similar to my Nginx page).  No hand-holding, just easier to read language, and deeper dives into certain topics. :smile:\nNow if I only had more time to work on it... :unamused:\n. May I suggest the change:\nA \"Coming Soon\" Theme For Pico CMS\nOtherwise it sounds almost like this \"Launch\" theme is the one that's \"coming soon\". :wink:\n. And great, another theme I've got to screenshot for our Super Secret* Customization Redesign. (https://github.com/picocms/Pico/pull/358)\n*not really a secret at all\n. It really does.  I often forget that my working copy isn't what the real site looks like yet. :laughing:\n. Looks pretty good.  It's got the girlfriend approval factor, lol.  She says she'd probably use that over editing text files directly. (I'd probably stick to text files, but that's just a personal preference :wink:)\nI like the password hash generator, it's a nice touch.  Probably a huge usability improvement too (especially over the old readme instructions of the Editor plugins).\nFrom my brief look at it, everything seems really simple, polished, and well thought out.  It seems straightforward enough that anyone could just sit down and use it.  That's a huge plus, as you know how I'm always arguing the case of Pico for the non-techie user.\nAlso, sorry for the radio-silence lately.  Besides the holidays, I've also been getting ready to move at the end of the month (so... in just a few short days).  It's been really hectic, but everything should be back to business-as-usual in a few weeks.\n\nMerry Christmas, Happy Holidays, and Happy New Year to you and everyone in the Pico community!\n@PhrozenByte Thank you for all the hard work you've put into Pico this year.  Looking forward to the 2.0 release (whenever it's ready).\nLet's plan for a big push toward growing Pico and its community throughout 2017!. No, I think having everything on one page is the right approach for now.  It's a good all-in-one place for \"the rules\".  Until it grows a little bigger, I don't think it's outgrown CONTRIBUTING.md yet.\nDevelopment doesn't sound like the right name either though.  Obviously, we should call it HOW-WE-ORGANIZE-OUR-PROJECT-IN-DEPTH.md.  That'd be a much better name.. @PhrozenByte Totally not running Pico in a richarvey/nginx-php-fpm container for all my sites at the moment.  :unamused:\nI'm not super experienced with Docker.  I've done their tutorials around the basics of pulling and running containers, but checked out around the time Docker Compose and multi-container orchestration started becoming the focus.  It's an area I'd love to learn more about, but it's hard to wrap your head around the subject matter when it scales up so quickly.  (My brain unfortunately doesn't run Docker, so it can't just scale up to match the needs of reading their documentation. :laughing:)\nFrom what I know though, all the concerns you've laid out are valid ones.  There are a LOT of decisions to be made around this.  Shipping Apache for instance, would be be very in line with our \"Stupidly Simple\" mentality... but not so much on the blazing fast, low resource / overhead part.\nAlthough running in Docker would seem to mitigate some of the risk of using PHP's built in webserver, I've read plenty to suggest that escaping the confines of a Docker container is far from impossible.  Sadly, that means that any official Pico Docker container would need to be treated and secured just as well as a regular installation would.\nThere's a lot to discus about this, but I think it could be an interesting topic for the future. :smiley:. Overall, the hardest part of this is that, if/when we provide an official Docker container, it has to be set up exactly how we want to deliver Pico to our users.  It's not just that we have to make a lot of decisions about the software, it's that we have to choose what we feel would be best for the user.\nWe don't really have the time or resources to maintain multiple branches (\"tags\", I guess, in Docker), so we really have to nail one or two (at most) as being the Pico setup.  And really, the only reason I say \"or two\" is because I think the possibility to choose between an Apache or FPM based container would provide a lot of benefit to users.\n@PhrozenByte would probably agree with you about the Debian base (:wink:), but an Alpine container wouldn't be hard either, since it could likely be based on the existing Apache and FPM containers.  Normally it would be more difficult to target Alpine due to possibly having to compile code or package specifically for it, but that's not an issue with Pico.  The composer commands would be the same.\nDebian though, would provide the user with more utility if they wished to modify or base their own container on top of ours.\n\nFurther on, I think a Docker container should contain one service, expose 1 port and the image should be ephemeral.\n\nThat is the Docker project's core philosophy, as far as I know. :wink:\nAnother consideration we haven't touched on is how the actual usage of the Docker container would work.  Where does the user mount their files?  How do we split that up?  Pico's root directory contains three to five folders that any given user will need access to (content, config, and assets being the most manditory, then optionally themes and plugins).\nOn a side note, that's how I split my own Pico sites up.  Each site has a unique content, config, and assets folder, while everything else is shared between my sites, giving me only one Pico instance to maintain.  (I don't mean this should be done in relation to Docker though.  This is just how I had my sites set up before I put them in a container).\nSo how do we handle these folders?  Do we configure five separate mountable volumes?  That seems like it would be a bit messy.  Also, any existing content (the sample config, optional plugins, the default theme, and the sample content/inline docs) would be mounted over.\nIt's hard to come up with a one-size-fits-all solution for these issues.\n\nIn the end these are considerations an operator should decide for himself on a case by case basis, possibly together with a developer.\n\nTrue, but that's also part of the usefulness of Docker.  If we do provide a decent base container, it could be customized by any user to fit their own needs.  So I definitely think it's something we should do in the future.\n\nmaybe it's a better fit in the documentation with some examples\n\nThis is something that could maybe be done in the short term, however I personally don't feel up to it at the moment.  I think that most likely, a good time to target all this for would be the upcoming release of 2.0, which @PhrozenByte is always teasing being \"right around the corner\".  I'm also \"working\" on a rewrite of the documentation to coincide with this release (\"working\" meaning, only when I have the time :confounded: ).  I think that a Docker guide could find itself a home in our new documentation as well.\nUltimately though, the same decisions would have to be made before hand, be they suggestions in the Documentation, or decisions we make in composing our own container.  Any documentation we provide has to reflect what we feel is best for our users.. I might just be blind, but is there any documentation anywhere about how to use Webpaint?  I've seen the demo site before, but is there a guide or readme on to how to use its features?  Like what elements or classes need to be used and how they are styled.\n. lol, the notes were more for my benefit, but I appreciate you going over them.\nHere, I was just wondering if I should break up \"what a CMS is\" and \"what flat file means\" into subsections.  I don't think there ended up being enough content for that though.\n. Yeah, it's a difficult line to walk: between \"Pico requires a little bit of work\" and \"No, wait, come back, it's really not that difficult\"\n. > frequently doesn't include a database\nReally?  I've only ever used a few webhosts before, but they've all included databases.  They were all shared hosting, lowest-tier solutions too.\nI could see a free hosting account not having database support, but I didn't know there were any paid solutions that were too cheap to offer it.\nThose are the kind of troubles you forget about after a few years of running everything off a server in your living room. :laughing:\n. Oh, and I was going to mention database performance too.  I guess it got left out at some point.\n. I hadn't actually looked at the live version since I pushed that. :laughing:\nI just wanted to subtly poke at the annoyances of writing content in HTML without needing an example block.  I also didn't want it to look broken, with random tags thrown in, so I formatted them as code.\n. :+1:\nI didn't think of including a \"History Lesson\".  That's actually all new to me as well, I've never thought to look into it.\n\ncreated the Markdown language in 2004\n\nI had no idea it was so old either.  It seems like it's gotten more popular in the last few years.  I guess according to the Wikipedia article, that would be around the time it started to be standardized (2012 - 2014).\nI tend to write in plan text more than anything, so this last year I've been instinctual formatting anything I write using Markdown's syntax, even if it's not going to be parsed as it. :laughing:\nHuh, there's also a really good example table in that article that compares the Markdown, the HTML it generates, and its rendered appearance.\nI think I'm going to link to that Wikipedia article first, then link to Daring Fireball as a place to learn the syntax instead.\n. Okay.  I'll poke around and see what I can come up with.\n. Do you think I should trim down the \"What is a CMS\" type content then?\n\nAs far as \"first offenders\" go, I have an interesting (if off-topic) example.\nMy (long-time) girlfriend wanted to set up a personal site for some writing she's done on various other websites.  I described both Pico and WordPress, and she wanted to try WordPress for its familiarity and ease-of-use.  She hadn't used it before, but it was familiar just in the sense that the workflow is the same as submitting things to other sites.\nAs far as computers go, I'd call her somewhere between intermediate and advanced (she knows a lot more than she gives herself credit for, but often lacks the confidence to act on that knowledge).\nAfter I set it up for her, she spends about 30 minutes going through all the options, trying to personalize it and make it work just right.  She then goes \"yeah, this is too complicated.  I don't need all this stuff, I just want to post my writing\".\nNow she's using Pico and NotePaper. :laughing: \n\nSo personally, I'd love Pico to be the first option someone tries.  That'll probably never be the case though.\n. Okay, that could work.\nYou know, half the time you correct me when I use code around vocabulary items, and the other half you suggest it or even do it yourself. :unamused: \nBut yeah, that should look a little neater than all the broken code segments. :wink:\n. It would probably be either the same or a similar example to what's in the Docs.\nOf course, I plan to expand that section soon too.  That's why I linked it as DocsYAML / said it went \"in-depth\" when at the moment it's a bit of a stretch to say that.\n. :+1:\nThat's certainly my approach with NotePaper.\n. Lol, I left that one vague in case you came across it.  I felt it warranted its own discussion, but again, it's going to be off-topic. :unamused:\nLinux UnPlugged\nIt's a podcast from Jupiter Broadcasting.  There's a lot of free-form discussion in it.  During the show there's a live audio chat open to audience members (though it's typically the same contributes).\nA little over a year ago, someone mentioned Pico during an off-hand discussion about alternative CMS's.  It was literally something that was passed over without much thought, but I liked the description enough to come check it out.\nNow, that was just before your \"in-hostile takeover\" ( / revival) of the project.  It would have been when 0.8 was current, because that's the version I started on.  It's been so long, and so much work has been done that Pico feels entirely different now.\nSo, I thought that in the future* it would be interesting to get Pico featured on there or the Linux Action Show (their main show) to raise awareness of it.  It could be a news article for them to read or a full blown interview about the project.\n(*maybe 1.1 or whenever the more blogging-oriented work is done.  I don't know, blogging just seems like it would be the \"mainstream\" expectation of a CMS.)\nAnyway, what are your thoughts on this idea?\n. Needed to wrap them in <strong> because Markdown inside HTML elements isn't parsed.  I tried adding markdown=\"1\" to the code tag, but that didn't work either.\nSo by trying to joke about how annoying writing content in HTML is... I had to write my content in HTML. :confounded: :laughing:\n. I guess I hadn't refreshed the page because I didn't see your last comment.\nThe problem is that I tend to use code as pay attention, this is important and not just for actual code. :unamused:\nBut yeah, the idea was to emphasize what a pain it is to HTML for your content.  I like having all the extra tags in the paragraph because it encapsulates that feeling more.  It's difficult to read, which is the point.  Someone who knows HTML will stumble on reading it and go \"yeah, that is a pain\".  Someone who doesn't will hopefully go \"is that really how people used to write web pages?\"\n\nThis all makes me think of the mentality around the HTML and CSS split.  HTML was dictated to be for structure while CSS was for style.  Maybe we need another split, where Markdown is the new content format for the web and HTML is just the overall page structure.\nYour browser would understand Markdown and when you get to your main content, you could just switch to using Markdown for that part. (kind of the reverse of how Markdown usually gets parsed now). :laughing:\n. That would explain some of the difficulty I'm having.  I had to break the gallery variable out into it's own line to get the page to build, but then the for loop wasn't running.\nI was using the syntax I found here: https://help.shopify.com/themes/liquid/tags/theme-tags#include\nDidn't realize it was different.\n. sigh\n. I was actually worried that Jekyll wasn't passing parent variables to the included template at all.\n. On a side note, my eventual implementation didn't need this, it only needed to use page.galleries instead of site.galleries.\n. > You really should use different templates for different content categories\ncough :unamused:\nI know though.  Eventually I'd like to break NotePaper up into smaller, more maintainable chunks.  It's already hit that point of being difficult to understand.\nI probably should have built it differently from the start.\nI do think that this section (or its rewritten equivalent) should go into more detail of how to leverage different templates though.\n. I know you didn't mean it like that.\nIt's true though. :laughing:\n. It is really fast.  We could probably change it somewhere in scripts.js.  I don't know if we could make it customizable (or if we'd want to), but I'm sure we'd be able to change it permanently.  I don't like it either, so I'll see if I can track down where it's set.\n. Huh.  I hadn't noticed that.  I'll move the white space to after the span.  I'm usually working from my laptop (13\", 1080p screen), so maybe the border issue wasn't as obvious on the smaller screen.  That space is definitely what's causing the problem with the bottom border though.\nI also need to figure out why there's a space rendered before the colon.  I think it has something to do with Markdownify.  I was working on that before, but I guess I forgot about it.\nI'll add that to my notes. :smiley:\n. Hmm.  I agree, the \"expert webmaster\" part isn't as good.  I'll remove that.  \nThe next part, I don't know.  It is restating the headline, but the paragraph needs something to start it off.  Jumping right into \"In the most basic sense\" doesn't really work.  I feel like something has to be asked, even if it is the same as the headline.\nWhat do you think?  If I condensed it to remove the \"webmaster\" part would that be enough or are you really set on having the rest of the line changed? (Which is fine, I'd just have to find a better way to present the first two sentences).\n. Yeah... that was kind of wedged in there.  I feel like they're both valid points, just not together. Databases can bottleneck your site, and are overkill on a small site (just not necessarily a bottleneck).\nI'll see what I can do to revise it.\n. I'll see what I can do about this.  The captions do need to be improved a little anyway.  It's hard to know when to draw the line between not enough and too much information though.\nI'll take some more screenshots and see how it looks.\nI guess if we expect the user to expand the first image, then flip through them, it should probably tell a story in the process.  Right now they're not really connected at all, just a bunch of \"examples\".\n. I thought about that, but I couldn't decide which one so I just used the main page.  It could be confusing this way though, especially with talk of a \"software tool, written in Perl\" that as far as I know isn't even around anymore.\nI'll use those links instead.\n. I'm confused... isn't this what I've done?  Or do you mean I need dashes -?\nIf so, then I've got so many files incorrectly using slashes for dates. :unamused:\n. Hmm... I think I disagree, mostly because Pico doesn't use any arrays in its Metadata by default.  Though this idea and the multi-line text would make good examples for the proper YAML section.\nBut, if I use \"actual content\" for the markdown example above, for consistency I should do so here as well.\n. I think that was a relic of a previous version.  I think I started it as Pico's \"Themes\" are actually Twig Templates but changed the wording so it would sound better.  I'll remove them.\n. I'll work on that.  Fortunately I've got a big supply of theme screenshots from #358 :laughing:\nThere was actually a reason I included both of those.  The sad truth is that there aren't many themes for Pico, so I wanted to make sure I had a fair representation of themes that were intentionally made for Pico, rather than those that had been ported.\nIt was only later on, when I was writing the description, that I realized \"Simple Sidebar\" was a port too. :disappointed:\nBut the balance was still 2:2, so it worked okay.\nI'm always really torn about including BesrourMS's themes.  They are gorgeous, but they're ports.  I feel kind of like it's not fair to the original creator to give him the credit for all of them.  That's why I've shied away from using them, and why I put \"Ported By/Original By\" on the new Themes page.\nSigh It's like, I don't want to discredit his work on these, he's definitely been working hard on them, but at the same time I want to make sure the original authors receive equal or greater credit for thier work.\n. This is what that @PhrozenByte note is there for. :stuck_out_tongue_winking_eye:\nI really don't know enough about how plugins work to write that.  If you want to provide me a paragraph or two, I'd be happy to edit them though.\n. :scream:\n. Yup. :laughing:\nExcept when I described the two, she wanted WordPress, and I tried to push her toward it, not Pico.  Even with that, she still only lasted through about half the configuration and got annoyed with it.\nOn that note though, the NotePaper - Sidebar theme was written for her, lol.\n\nThese last few notes were things I wanted to convey, but never found a good place to.\nI'll try to work that in somewhere.  I feel the same way though.  I usually have to click through four or five settings pages in WordPress before I find the setting I'm looking for.\nI also feel that Pico's simplicity gives it a really sane set of defaults.  I never feel like I have to change much when I set up a new site.  WordPress however I could spend an hour configuring and still not have it perfect.\nI'm not going to include the \"defaults\" issue in the article, since it's mostly a matter of opinion, but I'll try to find somewhere to talk about the interface / configuration part.\n. Nope.  It probably doesn't have a place on the About page, even if I were to write something about it.  I think somewhere you suggested something about Markdown's history, and this note was just part of brainstorming about that.\n. I have no idea what happened here.  It seems like it was part of my initial commit, so it must have been an accident.  I blame my laptop again.  Its mouse buttons are part of the touchpad and sometimes when I'm working, it'll interpret them as a touch, sending the cursor flying across the screen.  It's caused me to accidentally select and type-over / delete things before, and I have no other explanation for how this section was removed. :sweat_smile:\n. So... you want to add something to Pico (sort of anyway)... just for the sake of an example.  :laughing:\nI shouldn't like that idea, but I do.\nHow about I add them to the footer, similar to on the website?\n(A little while ago, I did something similar for Identity, https://github.com/BesrourMS/Identity/pull/2)\n. Actually, that could make a good cookbook idea for the future too... :smile:\n. Sounds Good. :smiley:\n. Alright.  Thanks for clarifying that.  Yeah... the US is weird about a lot of things.  I feel that the rest of the world has a pretty clear understanding of our stance on most things: When there's a completely backwards and archaic way of thinking about something... that's the best way. Sigh\nAnd at one point, I actually had myself trained to use dashes on all my dates too. :wink:\nWhen we wrote product dates on boxes, we used dashes so we wouldn't risk the slashes looking like slanted 1's.  Sometime since then I've reverted to using slashes though. :unamused:\n. Interesting.  Knowing I could do that would have helped with Identity.  Maybe I'll go back and change it too.  Until working on these Jekyll implementations, I didn't know YAML could do so much.\nMy implementation on Identity was <url>: icon, that way the key for each item would be unique (as opposed to icon: <url> only allowing one use of each icon).  Obviously this solution was a little hacky though, and not user friendly.\nWith all these different ways of structuring your data, I should really read up on YAML sometime.\n. No, it should be [catalog](%base_url%/?catalog). :smile:\nI always forget that URL rewriting is a thing.  But really, how do you know that \"Sally\" doesn't have her webserver set up to rewrite? :wink:\n. Hmm... how about that... it does work.  I feel like I should know this... :unamused:\nThat behavior seems a little inconsistent when %base_url% normally doesn't include a trailing slash.\n. So, I want to have the plugin category (now plugin-thumbnail) also force the usage of the built-in thumbnail.\nIf a user is submitting a plugin and wants to use this style, they should only have to specify\nyaml\ncategories:\n  - plugin-thumbnail\nand not have to also add\nyaml\nthumbnail: /plugins/images/thumbnails/plugin.png\n\nI'm not sure how I feel about this solution though.\nI really don't like making a page-specific change to the generic portfolio.html.  I know that this is only for the Pico website, and therefore can be as hacky as we want it to be... but it still feels more like a workaround than a proper solution.  Any other solutions I could think of were much more complicated and didn't seem worth the effort.\nLet me know if you have any ideas on how to handle this better.  :confused:\n. Hmm.  Yeah, that would work pretty good.  I thought of something similar, but it sounded a lot more cumbersome in my head.  :sweat:\nI was too focused on the idea of tying the thumbnail to the plugin category specifically.\nActually, it would probably work a lot better if I changed the \"plugin\" style to simply be a \"Default Thumbnail\" style. :unamused:\nMaybe I can make a stand-in graphic for Themes as well (and of course make a better version for Plugins).  And the idea of a blank fallback image would also help prevent breaking if there's no thumbnail.\nAlright, taking it in a new direction then. :smile:\nThat's just what I needed. :+1:\n. Actually, I do.  One affects the fade-in (:hover), while the other affects the fade-out.  If you turn off the regular style, you'll see it abruptly goes back to normal when your mouse leaves, instead of fading out.  This was more pronounced in Firefox than Chrome.\nThis was also done to mimic the timings of the Javascript version.\nIf you turn off the :hover style, it does still work correctly, but the timing doesn't match the other version, which has a slightly faster fade-out than fade-in. :stuck_out_tongue_winking_eye:\n. True.  I hadn't really thought about where to put it...\n. I thought you liked the JS based transitions better.\nI'd be more than happy to kill them and use CSS3. :laughing:\nThe timing question still remains though.  With two CSS transitions declared, the fade-in and fade-out can be different lengths.\nThe fade-out is slightly quicker.  Personally, I like the difference, even though it's subtle.\nDid you want me to remove one of them?\n. Okay, I thought that here you liked the original effect better than my version.\nRereading it, that was obviously just in my head.\nIf you want to engineer something in Javascript to make the animation \"complete\" itself like we discussed, you can.  I'll implement it my way first, then if you want to change it from :hover to a hover class, you're free to.\nIt's probably unnecessary though, once they're all using the same effect I think it'll look fine.  Even though it's less \"fun\" to mouseover the CSS version rapidly, I think it's a little more elegant that it starts fading out immediately when the mouse leaves instead of lagging behind.\n\nCan you please merge the additional portfolio CSS rules into the \"regular\" stylesheets afterwards?\n\nYou mean move these styles up above?  Sure, I'll add it to my to-do list.  They're just easier to find at the bottom. :laughing:\nI should probably do that for everything I've added.  The styles for #352 are down there as well...  :unamused:\n. Honestly, I don't remember.  When I first added it, I didn't want to \"mess up\" any of the existing styles, so I copied them to the end.\nI need to go back over everything and compare it side-by-side.  Most of it is probably identical to what's above. :sweat_smile:\nFor that matter, once we switched to the carousel... the \"standalone\" concept didn't really get enough attention.\nI'll make a note to look it all over.\n. Alright! :tada:\nCome here Javascript... :smiling_imp: :hocho: \nIt's okay, I think we'll be okay until we hit the point of \"Decorate the website? I thought you said Delete the website.\"\n. This part had to do with differences between a single image and multiple. :confused:\nI didn't add this ID, it was part of the original implementation.  All I did was add the if statement to combine the two layouts.  In the original, the two styles (single or multiple image) were simply hard coded.\nI'm pretty sure I tested it, and the ID was needed for the scripts to work correctly.\nAlso, the ID is technically unique at the time it's rendered.  All of this code is (annoyingly) contained inside an html attribute.  It's the Javascript that renders it to the page, so at all times there is (technically) only one \"myCarousel\".\n. Yeah... that's my fault.  It works without it because I've had all the file paths start with /.\nI forgot to go back and correct that. :unamused: :sweat:\n. Hmm, I'll investigate it then.  Maybe it just needs the classes. :smiley:\n. Just did a quick search in Atom for \"myCarousel\" across the entire site.  This is the only occurrence of it.  Guess it's going away. :laughing:\nEdit: Wait.... hmm...\n. Nope, without this ID on both the div and the href of the arrows (a tags) the carousel function doesn't seem to work.\nEdit: \nIt doesn't matter what the ID is, but it seems to have to match between the div and the href of the arrows.  That's why it's not found anywhere else in the site, it's not the ID itself that matters but just that they're matching.\n. Let me know if you notice any other places I've left this off. :sweat_smile:\n. I can change it if you want, but it seems unnecessary. :confused:\nAs I said above, this entire section is contained in an attribute of the li tag named data-detailcontent.  It's rendered later on (and at a different position on the page) by the Javascript.  Because this section is created and destroyed by the script, there's only ever one ID of \"myCarousel\" at any given moment.\nBut, if you'd like, I can still change it. :wink:\n. Agreed. :+1: \n. You'd have to ask yourself :wink: \nWait a minute though, that's not part of the link, that's just text in parenthesis! :laughing:\n. > Update About page URLs\nIt's been on my to-do list over there for awhile now. :smiley:\n. Of course it doesn't. :confounded:\n. I found the second-to-last sentence too harsh, that's why I tried to soften it a little with the last one. :unamused:\nI'm still not happy with it either though, so I'll work on it.\n. Okay... maybe this page needs a little more work than I thought. :unamused:\n. You know I haven't touched this document since before your PR... :stuck_out_tongue_winking_eye:\n. Agreed.\n. Probably not. :laughing: \nAny suggestions?  I could just bold any further items.\n. Oops. :laughing:\n. I think I got \"meta\" from the class of the <span> it goes in.\nAt the time, a \"description\" variable was still being used for the description, not the markdown contents.\nThis sounds acceptable.  I think there was still code that would look at item.description if it existed. Did you remove that already?\n. Agreed.  I may have written this part first, before finalizing the section above.\n. Hmm.  I never thought about that.  I guess it wouldn't be possible with the current implementation.\nThat's a good idea.  I also like your \"visible identifier\" line.  I could not figure out what I wanted this line to say.\n. :laughing:\nI'll add something about both views.  Also, I'm sure the concept of multiple layouts needs to be refreshed elsewhere too.\n. facepalm\nI feel like you have to remind me to do this a lot. :sweat_smile:\n. Okay.\nFor some reason I feel like you had some input in adding a \"Getting Started\" section to the end of this.\nThat doesn't make sense, since you apparently hadn't read it before now, so I must be remembering something wrong.\nMaybe I just didn't like how the page just abruptly ended after the code example. Shrug\n. I really like the idea of a big plus tile. [ + ] :+1: :+1: :+1: \nI don't think it's a good place to put the entire submission guidelines though.\nI would have said that the content area likes to close itself too often to have long content, but you fixed that with your \"Rage Refactoring\". :laughing: :wink:\nI do think it would be a little hard to read though.  Especially with white text on black. (And changing it to somehow have a white background inside the content area sounds odd).\nI'm thinking maybe make it a regular item, with a special fullsize image and description pointing to the regular Submission Guidelines page.\nFor the fullsize image, maybe something like a collage of themes and code or something split diagonally between a theme and its code [T/C].\nFinally, I don't like the idea of removing the existing \"Contributing\" section from the page.  Not sure if you meant that this \"boring\" text should be removed or not, but my vote is no.\nThere's no reason we couldn't have it in both places.  :wink:\nI just don't want it to be harder to find.  It should state clearly on the page that we want contributers.\nAlso... the \"Wiki\" parts of that section aren't big enough to stand on their own. :laughing:\n. Not sure what to do here.  I used the headings just because they're a quick and easy way to break the content in to subsections.\nThe first few items aren't a big deal, but once I got down to Available Categories it got a little harder to format.\nFor example, definition lists would probably work good for this section... but it becomes a bit more complicated with the nested sections.  Nested definition lists is also somewhat of a formatting nightmare, but could work.  Also, we don't currently have styles for definition lists.\nI'm going to hold off on it for the moment, but let me know what you think about it.\nIs there an easier way you'd layout this section to avoid the problem?  For that matter is your problem with the appearance of the headings or the semantics of it?  Give me some ideas of what you'd like and I'll work on it.\nOh, and bold doesn't work.  Much too small.\n. Actually, with some fumbling around with it, I think I can make the existing content work with definition lists.\nJust had to fight with Markdown Extra until I had my syntax just right.\n. Sure. Looks pretty good.\nWe could also use these styles elsewhere if we're going to make them site-wide.\nFor example, we could use definition lists to tidy up the big list of Twig tags in the Docs.\n. \nThoughts?\nI had to increase your width/margin to 200/220px to accommodate {{ is_front_page }} without it getting split between lines.\nNot 100% set on that change though... it makes the definitions on the Submissions Guidelines page feel a little far from their terms.\nI also tried making the Docs list items not code so they'd take up less space, but the Twig tags don't look good in the regular font.\nGonna stash this for now, but let me know what you think.\n. I've made a note about it in the PR description on #359.\nI pushed the changes to that branch, but I haven't tested them on it.\nIt's more of a scratch space at this point.  When I actually begin work on that project, I'll be starting fresh, with both a new branch and new documents.\n. I've made an initial version of the \"Plus\" tile.  Right now its written content is just a copy of the contributing paragraph, but that'll be changed (as well as probably... everything else about it).\nAnd, it has a \"Learn More\" button instead of a download button.  Glad I put that in a variable. :laughing:\n. Hmm... I didn't think of this before.  Should the + button show in all categories?  I haven't added any to it, so it only shows under the \"All\" view.\n. Yes, the image is a work in progress.  I started to write that, then I realized that essentially everything was work in progress, so it felt redundant to say.\nHuh, I didn't realize (or forgot) that you made it so we can set the layout on a per-item basis.  I'll do that.\nPersonally, I think it belongs at the end of the list.  The concept being that, by contributing, you'd make the list longer.  Also, it didn't look good at the beginning. :laughing:  It started at the beginning of the Plugins page because nothing came alphabetically before \"Contribute\".  So the zzz_ was a quick way to make it always be at the end of the list.\n. We should probably change layout to something else.  It's apparently a Jekyll variable.  Using it in this case throws a warning:\nBuild Warning: Layout 'card' requested in _themes/zzz_contribute.md does not exist.\nIt functions correctly either way, it just seems like we don't want to be causing warnings if we don't have to. :wink:\n. Created a new image for the Contribute tile.  Not necessarily 100% final, but any input is welcome.\nLooks pretty good on the Themes page... on the Plugins page it's a little out of place though (since there's an absolute lack of screenshots/color).\n. Any suggestions for layout's replacement?  Best I could think of was \"design\". Also, would there be anything that needs changing (for consistency) in the JavaScript? I think I saw a new attribute in the HTML.\nI'll see what I can do for the plugin one.  I don't really want to base its design on the current (screenshot-less) content, when that could change down the line. But I also think it stands out right now, in a bad way.\n. Okay, I've gone with view on the off chance that we migrate the website to Pico in the near future. :wink:\n(avoiding template) \n. Yeah, I more or less agree.  I just noticed I hadn't written anything about those two items, and decided to add something quickly.  I meant to follow it up with a comment asking your opinion, but I've been dealing with other things and forgot about it. :unamused:\n. Would we really want people changing the button text though?  It just seems kind of inconsistent if we let people choose what they'd like it to say.\nOn that note, one of my very first To-Do items :point_up: was to decide what that button should say. (Download, View on GitHub, More Info, etc).\n. Maybe. The Contribute tile says \"Learn More\", so we could also go with that.\nBetween the two, which do you like better? \"More Info\" or \"Learn More\"?\nWe could also go with something like \"Visit Page\". Hmm. :thinking:\nAnd I also like \"View on GitHub\", because these days I don't take a project seriously unless they're on GitHub. :laughing:\n\"Visit us on SourceForge\"? No thanks. :-1:\n. :laughing: Okay.\n. Okay. :+1:\n. Yup.  It's on my to-do list :point_up:\nIf you've got a quick fix for it, go ahead.  I haven't investigated it any further yet. :wink:\n. :laughing:\nIt was just some fluff from their Readme.  I'll remove that line then.\n. ",
    "dimensi": "I turned on mod_rewrite in config.php and .htaccess file is put on your server. Now I have an old kind of links like \"mysite.com/sub/page\". I love it, thank you. But sitemap still does not work, it means that he simply does not support the 1.0 version and wait for a new version?\nWhat about strange links \"http://mysite.com/?sub%2Findex\" why instead of \"/\" indicates to me \"% 2F\"?\nI wrote the $ config ['rewrite_url'] = false; and used .htaccess you gave me and still links of this type mysite.com/?sub%2Fpage instead mysite.com/?sub/page. Why is / is replaced with% 2F? Thank you in advance\n. \"You must set $config['rewrite_url'] = true;\"  i do it. I have done so from the beginning, and I still do not what does not appear in the site root\n. omg sorry, I thought I should have a file sitemap.xml, but it turns out it is available only at ...\n. Excuse me, but I really do not understand why I have everything right the first time is not going as it should. To test your pico cms I have used the services of service cloud9. After I installed the sitemap plugin to the virtual server, I will give this error \"JsonWebTokenError: invalid signature\". I tried to delete a file, but the error remained. I restarted the server, but the error remained. I ran the site through apache and php web server, but the error remained. It helps only the complete removal of the server. I tried to install the sitemap on your local server. And it worked without problems.\nhttps://test-eddimensi.c9users.io/\n. I'll use the standard theme and the problem persists! I do not know what the problem is, help me! Somehow the word placeholder always deleted! If you write p1aceholder, the word remains. Deletes the whole word is placeholder !!\n\n. What me do? Wait ? I can fix it with something like guide \"How to fix parsedown\" ??\n. PhrozenByte thx you very much. I do what u me say and it now work great. Thx and sorry for my english. I must close this issue?\n. ",
    "abr4xas": "@theshka yes sir\n. - Do you have a base_url set in config/config.php, or is what you posted the only portion of your config you have customized?\n  - My base_url is tma.local/pico\n- Do you have the right permissions set on your custom content/ directory? (i.e. 755)\n  - Yes\n- Do you have a YAML header in the 404.md file?\n  This is my 404.md\n```\nTitle: Error 404\nRobots: noindex,nofollow\n\n```\n- Do you have URL rewriting enabled or disabled?\n  - enabled\n\n. @PhrozenByte in config/\n.  Output:\n``` php\nWarning: file_get_contents(/var/www/pico/content/404.md): failed to open stream: No such file or directory in /var/www/pico/lib/Pico.php on line 649\nWarning: scandir(/var/www/pico/content): failed to open dir: No such file or directory in /var/www/pico/lib/Pico.php on line 1213\nWarning: scandir(): (errno 2): No such file or directory in /var/www/pico/lib/Pico.php on line 1213\n```\nSorry:\nphp\narray(11) { [\"site_title\"]=> string(4) \"Pico\" [\"base_url\"]=> string(22) \"http://tma.local/pico/\" [\"rewrite_url\"]=> NULL [\"theme\"]=> string(7) \"default\" [\"twig_config\"]=> array(3) { [\"cache\"]=> bool(false) [\"autoescape\"]=> bool(false) [\"debug\"]=> bool(false) } [\"date_format\"]=> string(5) \"%D %T\" [\"pages_order_by\"]=> string(5) \"alpha\" [\"pages_order\"]=> string(3) \"asc\" [\"content_dir\"]=> string(22) \"/var/www/pico/content/\" [\"content_ext\"]=> string(3) \".md\" [\"timezone\"]=> string(3) \"UTC\" } bool(false)\n. The content directory exist\n\nhttps://github.com/picocms/Pico/issues/279#issuecomment-157915148\n. thanks, folder permissions were changed.\n. ",
    "erusev": "just released 0.7.1 of parsedown-extra - it should include a fix for the issue in question\n. @theshka it's been resolved for quite some time - i should have included it in a release much earlier\n. ",
    "AeonFr": "Yes of course. This is composer.lock \n{\n    \"_readme\": [\n        \"This file locks the dependencies of your project to a known state\",\n        \"Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file\",\n        \"This file is @generated automatically\"\n    ],\n    \"hash\": \"84806675447f7a95d4f79cc45d928128\",\n    \"content-hash\": \"445c22d963668182069bdfef2ec49989\",\n    \"packages\": [\n        {\n            \"name\": \"michelf/php-markdown\",\n            \"version\": \"1.3\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/michelf/php-markdown.git\",\n                \"reference\": \"fcdd3e0781ae40c2b9847874e0755ff4f5559688\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/michelf/php-markdown/zipball/fcdd3e0781ae40c2b9847874e0755ff4f5559688\",\n                \"reference\": \"fcdd3e0781ae40c2b9847874e0755ff4f5559688\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.3.0\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-lib\": \"1.3.x-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Michelf\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Michel Fortin\",\n                    \"email\": \"michel.fortin@michelf.ca\",\n                    \"homepage\": \"http://michelf.ca/\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"John Gruber\",\n                    \"homepage\": \"http://daringfireball.net/\"\n                }\n            ],\n            \"description\": \"PHP Markdown\",\n            \"homepage\": \"http://michelf.ca/projects/php-markdown/\",\n            \"keywords\": [\n                \"markdown\"\n            ],\n            \"time\": \"2013-04-11 18:53:11\"\n        },\n        {\n            \"name\": \"nikic/fast-route\",\n            \"version\": \"v0.6.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/nikic/FastRoute.git\",\n                \"reference\": \"31fa86924556b80735f98b294a7ffdfb26789f22\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/nikic/FastRoute/zipball/31fa86924556b80735f98b294a7ffdfb26789f22\",\n                \"reference\": \"31fa86924556b80735f98b294a7ffdfb26789f22\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.4.0\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"FastRoute\\\\\": \"src/\"\n                },\n                \"files\": [\n                    \"src/functions.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Nikita Popov\",\n                    \"email\": \"nikic@php.net\"\n                }\n            ],\n            \"description\": \"Fast request router for PHP\",\n            \"keywords\": [\n                \"router\",\n                \"routing\"\n            ],\n            \"time\": \"2015-06-18 19:15:47\"\n        },\n        {\n            \"name\": \"picocms/pico\",\n            \"version\": \"v0.9\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/picocms/Pico.git\",\n                \"reference\": \"4ef01ecc22d90f763535a15adce36f85cf621c28\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/picocms/Pico/zipball/4ef01ecc22d90f763535a15adce36f85cf621c28\",\n                \"reference\": \"4ef01ecc22d90f763535a15adce36f85cf621c28\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"michelf/php-markdown\": \"1.3\",\n                \"php\": \">=5.2.4\",\n                \"twig/twig\": \"1.18.*\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"files\": [\n                    \"lib/pico.php\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Gilbert Pellegrom\",\n                    \"email\": \"gilbert@pellegrom.me\"\n                }\n            ],\n            \"description\": \"Pico is a flat file CMS, this means there is no administration backend and database to deal with. You simply create .md files in the \\\"content\\\" folder and that becomes a page.\",\n            \"homepage\": \"http://picocms.org/\",\n            \"keywords\": [\n                \"cms\"\n            ],\n            \"time\": \"2015-04-29 02:50:41\"\n        },\n        {\n            \"name\": \"twig/twig\",\n            \"version\": \"v1.18.2\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/twigphp/Twig.git\",\n                \"reference\": \"e8e6575abf6102af53ec283f7f14b89e304fa602\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/twigphp/Twig/zipball/e8e6575abf6102af53ec283f7f14b89e304fa602\",\n                \"reference\": \"e8e6575abf6102af53ec283f7f14b89e304fa602\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.2.7\"\n            },\n            \"type\": \"library\",\n            \"extra\": {\n                \"branch-alias\": {\n                    \"dev-master\": \"1.18-dev\"\n                }\n            },\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Twig_\": \"lib/\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"BSD-3-Clause\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Fabien Potencier\",\n                    \"email\": \"fabien@symfony.com\",\n                    \"homepage\": \"http://fabien.potencier.org\",\n                    \"role\": \"Lead Developer\"\n                },\n                {\n                    \"name\": \"Armin Ronacher\",\n                    \"email\": \"armin.ronacher@active-4.com\",\n                    \"role\": \"Project Founder\"\n                },\n                {\n                    \"name\": \"Twig Team\",\n                    \"homepage\": \"http://twig.sensiolabs.org/contributors\",\n                    \"role\": \"Contributors\"\n                }\n            ],\n            \"description\": \"Twig, the flexible, fast, and secure template language for PHP\",\n            \"homepage\": \"http://twig.sensiolabs.org\",\n            \"keywords\": [\n                \"templating\"\n            ],\n            \"time\": \"2015-06-06 23:31:24\"\n        }\n    ],\n    \"packages-dev\": [],\n    \"aliases\": [],\n    \"minimum-stability\": \"stable\",\n    \"stability-flags\": [],\n    \"prefer-stable\": false,\n    \"prefer-lowest\": false,\n    \"platform\": [],\n    \"platform-dev\": []\n}\nautoload_namespaces.php\n```\n<?php\n// autoload_namespaces.php @generated by Composer\n$vendorDir = dirname(dirname(FILE));\n$baseDir = dirname($vendorDir);\nreturn array(\n    'Twig_' => array($vendorDir . '/twig/twig/lib'),\n    'Michelf' => array($vendorDir . '/michelf/php-markdown'),\n);\n```\n\u00ednstalled.json\n[\n    {\n        \"name\": \"michelf/php-markdown\",\n        \"version\": \"1.3\",\n        \"version_normalized\": \"1.3.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/michelf/php-markdown.git\",\n            \"reference\": \"fcdd3e0781ae40c2b9847874e0755ff4f5559688\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/michelf/php-markdown/zipball/fcdd3e0781ae40c2b9847874e0755ff4f5559688\",\n            \"reference\": \"fcdd3e0781ae40c2b9847874e0755ff4f5559688\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.3.0\"\n        },\n        \"time\": \"2013-04-11 18:53:11\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-lib\": \"1.3.x-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-0\": {\n                \"Michelf\": \"\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Michel Fortin\",\n                \"email\": \"michel.fortin@michelf.ca\",\n                \"homepage\": \"http://michelf.ca/\",\n                \"role\": \"Developer\"\n            },\n            {\n                \"name\": \"John Gruber\",\n                \"homepage\": \"http://daringfireball.net/\"\n            }\n        ],\n        \"description\": \"PHP Markdown\",\n        \"homepage\": \"http://michelf.ca/projects/php-markdown/\",\n        \"keywords\": [\n            \"markdown\"\n        ]\n    },\n    {\n        \"name\": \"twig/twig\",\n        \"version\": \"v1.18.2\",\n        \"version_normalized\": \"1.18.2.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/twigphp/Twig.git\",\n            \"reference\": \"e8e6575abf6102af53ec283f7f14b89e304fa602\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/twigphp/Twig/zipball/e8e6575abf6102af53ec283f7f14b89e304fa602\",\n            \"reference\": \"e8e6575abf6102af53ec283f7f14b89e304fa602\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.2.7\"\n        },\n        \"time\": \"2015-06-06 23:31:24\",\n        \"type\": \"library\",\n        \"extra\": {\n            \"branch-alias\": {\n                \"dev-master\": \"1.18-dev\"\n            }\n        },\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-0\": {\n                \"Twig_\": \"lib/\"\n            }\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Fabien Potencier\",\n                \"email\": \"fabien@symfony.com\",\n                \"homepage\": \"http://fabien.potencier.org\",\n                \"role\": \"Lead Developer\"\n            },\n            {\n                \"name\": \"Armin Ronacher\",\n                \"email\": \"armin.ronacher@active-4.com\",\n                \"role\": \"Project Founder\"\n            },\n            {\n                \"name\": \"Twig Team\",\n                \"homepage\": \"http://twig.sensiolabs.org/contributors\",\n                \"role\": \"Contributors\"\n            }\n        ],\n        \"description\": \"Twig, the flexible, fast, and secure template language for PHP\",\n        \"homepage\": \"http://twig.sensiolabs.org\",\n        \"keywords\": [\n            \"templating\"\n        ]\n    },\n    {\n        \"name\": \"picocms/pico\",\n        \"version\": \"v0.9\",\n        \"version_normalized\": \"0.9.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/picocms/Pico.git\",\n            \"reference\": \"4ef01ecc22d90f763535a15adce36f85cf621c28\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/picocms/Pico/zipball/4ef01ecc22d90f763535a15adce36f85cf621c28\",\n            \"reference\": \"4ef01ecc22d90f763535a15adce36f85cf621c28\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"michelf/php-markdown\": \"1.3\",\n            \"php\": \">=5.2.4\",\n            \"twig/twig\": \"1.18.*\"\n        },\n        \"time\": \"2015-04-29 02:50:41\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"files\": [\n                \"lib/pico.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"MIT\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Gilbert Pellegrom\",\n                \"email\": \"gilbert@pellegrom.me\"\n            }\n        ],\n        \"description\": \"Pico is a flat file CMS, this means there is no administration backend and database to deal with. You simply create .md files in the \\\"content\\\" folder and that becomes a page.\",\n        \"homepage\": \"http://picocms.org/\",\n        \"keywords\": [\n            \"cms\"\n        ]\n    },\n    {\n        \"name\": \"nikic/fast-route\",\n        \"version\": \"v0.6.0\",\n        \"version_normalized\": \"0.6.0.0\",\n        \"source\": {\n            \"type\": \"git\",\n            \"url\": \"https://github.com/nikic/FastRoute.git\",\n            \"reference\": \"31fa86924556b80735f98b294a7ffdfb26789f22\"\n        },\n        \"dist\": {\n            \"type\": \"zip\",\n            \"url\": \"https://api.github.com/repos/nikic/FastRoute/zipball/31fa86924556b80735f98b294a7ffdfb26789f22\",\n            \"reference\": \"31fa86924556b80735f98b294a7ffdfb26789f22\",\n            \"shasum\": \"\"\n        },\n        \"require\": {\n            \"php\": \">=5.4.0\"\n        },\n        \"time\": \"2015-06-18 19:15:47\",\n        \"type\": \"library\",\n        \"installation-source\": \"dist\",\n        \"autoload\": {\n            \"psr-4\": {\n                \"FastRoute\\\\\": \"src/\"\n            },\n            \"files\": [\n                \"src/functions.php\"\n            ]\n        },\n        \"notification-url\": \"https://packagist.org/downloads/\",\n        \"license\": [\n            \"BSD-3-Clause\"\n        ],\n        \"authors\": [\n            {\n                \"name\": \"Nikita Popov\",\n                \"email\": \"nikic@php.net\"\n            }\n        ],\n        \"description\": \"Fast request router for PHP\",\n        \"keywords\": [\n            \"router\",\n            \"routing\"\n        ]\n    }\n]\nEdit\n: in case it's somehow relevant I'm posting my full config file here\n```\n<?php\n$config['site_title'] = 'JJC, Insumos Odontol\u00f3gicos';\n$config['base_url'] = '/vendor/picocms/pico';\n//$config['theme'] = 'mytheme';\nhttps://github.com/PontusHorn/Pico-Tags\nhttps://github.com/gilbitron/Pico-Editor-Plugin\n$config['PicoEditor'] = array(\n    'enabled' => true,\n    'password' => '{my shapassword}'\n);\nhttps://github.com/shawnsandy/adv-meta\n$config['custom_meta_values'] = array(\n  //page slug keep lower case\n  'slug' => 'Slug',\n  //page category\n  'category' => 'Category',\n  //page status\n  'status' => 'Status',\n  //Type -- page, post, plugin. It is used in twig like this: {{ page.type }}\n  'type' => 'Type',\n  //Page Thumbnail -- (theme/images)\n  'thumbnail' => 'Thumbnail',\n  // image for page icon -- (theme/images/)\n  'icon' => 'Icon',\n  //use custom page template(s)\n  'tpl' => 'Tpl');\n.\n{\n    \"name\": \"picocms/pico\",\n    \"type\": \"library\",\n    \"description\": \"Pico is a flat file CMS, this means there is no administration backend and database to deal with. You simply create .md files in the \\\"content\\\" folder and that becomes a page.\",\n    \"keywords\": [\"cms\"],\n    \"homepage\": \"http://picocms.org/\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Gilbert Pellegrom\",\n            \"email\": \"gilbert@pellegrom.me\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.2.4\",\n        \"twig/twig\": \"1.18.*\",\n        \"michelf/php-markdown\": \"1.3\"\n    },\n    \"autoload\": {\n        \"files\": [\"lib/pico.php\"]\n    }\n}\n```\nps: I just installed it today in my computer with php composer.phar require picocms/pico\n. Oh, sorry :dizzy_face: \n{\n    \"require\": {\n        \"picocms/pico\": \"^0.9.0\",\n        \"nikic/fast-route\": \"^0.6.0\"\n    }\n}\n. Thanks for the help !\n. Solved, sorry I uploaded wrong files :confounded: \n. I have the feeling this has something to do with the regex in parseFileMeta() function in lib/Pico.php\npublic function parseFileMeta($rawContent, array $headers)\n    {\n        $meta = array();\n        $pattern = \"/^(\\/(\\*)|---)[[:blank:]]*(?:\\r)?\\n\"\n            . \"(.*?)(?:\\r)?\\n(?(2)\\*\\/|---)[[:blank:]]*(?:(?:\\r)?\\n|$)/s\";\n        # ...\n   }\nI can't understand a single character of that regex but it was in the stack trace.. :P\nThe problem broke my hole site, even the editor plugin. It would have been better if only that page would break (well, at least I could log in to picoeditor and fix it through the browser)\nI guess for now is just a matter of being careful about it\nThanks for the answer :raised_hands: \n. Yes, I'm all for that change, I'll try implementing it myself!. \nI'm also discovering that the [ character is ilegal inside a meta header if it's the first character. (ej: meta: [). It's good to now where the error is, from the PHP error message, but It would be much nicer if all the other pages remain accessible!\nThanks for the answers, btw! \n. ",
    "joshas": "Good idea, one step less for setup.\nJust remove /vendor/twig/twig/.git/ directory in future releases, please.\n. Isn't Bootstrap a bit too heavy to be on default Pico theme? I'd like to suggest keeping current default theme as default, and maybe shipping Bootstrap theme as additional.\n. Oh, this looks good :)\n. I like the simplicity of current default theme. One html template, one styles file and absolutely no external dependencies (except fonts). By looking through index template new user can quickly figure out how themes work. Change a few lines of code, adjust some styles and you're good to go. Perfect starting theme for micro websites.\nThe proposed Bootstrap theme comes a bit of complexity. First: more files. One will need more time to get accustomed with it, find where's what. Second: Bootstrap adds about 100KB of its own styles and scripts. jQuery is required for some js components to work. Not everyone needs fully featured CSS framework to get a simple site running.\nI use Bootstrap (as a whole and separate components) for a bit bigger projects and absolutely love the grid system. Work that @theshka has done is amazing. I believe that a lot of users will find Bootstrap theme useful and won't waste time searching for another CSS framework just to get started.\nI only hope, that current theme will be included in default distribution, at least as a \"blank\" theme.\n. ",
    "chinanoahli": "It help a lot! Thx!\nI'm not familiar with php at all :+1: \n. ",
    "oschettler": "Cool trick, thank you. I will check out the plugin API more thoroughly.\nMeanwhile, I have found another solution: I have prefixed the content_dir with HTTP_HOST in config/config.php like so:\n$config['content_dir'] = 'content/' . $_SERVER['HTTP_HOST'] . '/';\n. Oha, thank you for pointing this out.\n. ",
    "Crank1d": "I have idea on how to make pages more flexible - in other words, having \"custom page types\" based on XML schema file (or YAML, maybe?) in content directory without writing specific meta data into every .md file.\nThis would make Pico more CMS-like and structured, so for example, if someone would like to have \"blog\" or \"products\" type of pages, each containing alot of \"child pages\" (subpages), he should create XML schema file called \"blogposts.xml\", which contains info/data describing how subpages should behave, like order of pages, pagination count etc. and any pages associated with schema put into subfolder in content directory. This would probably branch content directory structure into several subfolders for specific page type so structure would be something like \"default\" - for default pages, \"posts\" - for blog posts or any other page types. Index pages for those page types could also contain page loop/query of all of its child pages - just like blog has, similar to Wordpress but still being simple.\nAlso, maybe having another XML file for post categories which would contain something like page IDs under specific category section (\"Animals\", for example) and when category URL is requested, category page would do the loop and display all pages associated with this category page.\nI think this would be possible but would require to rewrite core Pico files, since creating Blog plugin alone would not have access to way/order pages are displayed since Pico searches folders recursively for .md files in content directory.\nThis would increase complexity of Pico but it would be a welcome feature which could possibly draw more people to use Pico for their website, especially those having smaller blog dedicated to specific subject, like personal travel blog, for example.\n. Something like \"Page Blueprints\", implemented in GRAV - http://learn.getgrav.org/forms/blueprints\nScheme file would contain custom defined meta data for all its child pages/subpages, so there would be no need to define custom meta from plugin.\nMaybe Im wrong, but Pico currently doesnt support \"parent-children\" relationship of pages?\n. OK, thanks for explanation.\n. Thanks for explanation. After doing bunch of CMS benchmarks regarding which to use for my new website (all of them required database connection), I was not satisfied with performance of Wordpress, which is overkill for shared hosting. After doing some browsing, I had recently discovered Pico and got very impressed with how fast it is, especially on shared hosting and planning to use it for news/blog/portal website, with custom plugin which would take care of basic things which most of blogs have, like categories and pagination. Flexibility is probably main issue with Pico, currently. Core seems very \"hard-coded\" and option to choose between native PHP templating and TWIG (or any other template engine) would be very welcome. Since Im planning to use Pico for my future websites which would have more-less similar structure, I would provide feedback on any problem or issue when I find some.\nKeep up the good work and just dont let whole project turn into monstrosity Wordpress has become. Pico just needs some issues to be resolved, while keeping things simple (and small) and It would be great. :smile: \n. ",
    "Chris2011": "What is happened with the Static HTML Cache? Is this the Pico Cache plugin: https://github.com/glumb/pico_cache?. What is the name of it?\n. Ok I got it, Identity right?\n. Ok thx.\n. @PhrozenByte is there a plan, when this will be released? I tried Pico Edit, it is ok but your implementation looks much better.. ok, thx for the info :). ",
    "iagovar": "Allow PHP includes in pages please.. Mmm, how do I configure the 404 error?. Is there any possibility to implement the ability to put PHP includes inside .md files? I'm doing it through jquery and it's a bit messy to be honest. Thank you, I'll download the 2.0 version and tell you if it worked.. It worked! Now I have another question. I want to put a PHP include inside a .md file. but it seems to output in plain text. Is there any way to scape the markdown interpreter for a few lines or any other way to do something similar?. Well, if someone has the same problem, I'm doing it throug jquery:\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<script> \n$(function(){\n    $(\"#tabla-webs\").load(\"path/tabla-webs.html\"); \n});\n</script>\n<div id=\"tabla-webs\"></div>. @PhrozenByte what if I change the documents format from .md to .html in the config file? Will that allow me to use php include?. :(. Hi, I'm not using any plugin, I'm using Pico 2 beta. \nI'm just editing my theme page template. So when a page is shown, this breadcrumbs bar is shown.\nSo if the user is in /category/article there will be a bar saying \"You are in Main Site > Category\", he can click in \"Main Site\" to go back to the index page, or \"Category\" to go back to the parent category.. Hi, I already have a category page, I did as stated here: https://github.com/picocms/Pico/issues/414\nEdit: missed things in your comment. I'd try your proposal and see how it goes, thx.. It seems to not be working:\n\nExample:  https://www.amagazine.es/electronica/grabadora-de-voz-para-entrevistas. It works! Thank you so much!. > Template: post\nWell, hope you don't want to kill me but I imported posts from Wordpress to Markdown and I had layout: post instead of template: post. It's not even the first time that I do this and I already knew that I had to change it, but somehow I just forgot about it.\nSorry.. > If you want to create a TOC automatically, you'll have to write a plugin to extend Parsedown (the Markdown parser Pico uses).\n\nBesides that you can use the ### This is a headline {#this-is-a-headline} Markdown syntax in your content files to add anchors to headlines. You can then add a list of all anchors and their respective title to the YAML header of your content file and use this information to create a TOC using Twig. See \"Table of contents\" on http://picocms.org/cookbook/\n\nOk, thanks!. ",
    "wlabarron": "The Static HTML caching feature would be fantastic and probably quite convenient for a Search system to use.. Thanks for the quick response!\nI've duplicated DummyPlugin, set $enabled to true and written this:\nphp\npublic function onPageRendering(Twig_Environment &$twig, array &$twigVariables, &$templateName)\n    {\n      $testFunction = new Twig_Function('testFunction', function () {\n        return \"Test works!\";\n      });\n      $twig->addFunction($testFunction);\n    }\nWhen I open a page in my browser I get a totally blank page - I'm not even calling the function anywhere. What am I doing wrong? The PHP I'm familiar with is a lot simpler than this so sorry if this is something totally straightforward I'm missing.. Aha! Error logged was PHP Fatal error:  Uncaught Error: Cannot instantiate abstract class Twig_Function. I went into vendor/twig/twig/lib/Twig/Function.php which says that Twig_Function is deprecated and Twig_SimpleFunction should be used instead. Swap that over, works perfectly! Thank you for your help, @PhrozenByte.\nSo for anyone looking to add a custom Twig function using a Pico plugin, this is what I ended up with in my plugin:\nphp\npublic function onPageRendering(Twig_Environment &$twig, array &$twigVariables, &$templateName)\n    {\n      $testFunction = new Twig_SimpleFunction('testFunction', function () {\n        return \"Test works!\";\n      });\n      $twig->addFunction($testFunction);\n    }. Would this be something useful for the developer docs? If so, I\u2019m happy to do a little write-up.. Speaking mainly as a user, I've not done any heavy testing of themes and plugins in the Wiki, however in my experience Pico Menu Hiding, Pico Minify and Pico Placing are all working OK, along with my custom theme (although I am having some trouble with a custom plugin). There are some backwards incompatible changes to Pico in 2.0 according to the Upgrading page, but I'd think most Pico 1.0 themes should work OK, maybe with a little modification, until the Wiki is updated with some 2.0 stuff.. It was the API_VERSION constant that I didn't have, thank you!. ",
    "ufgum": "Ok. i did it...and did not messed up the wiki :-)\nThank you!\n. ",
    "nem25": "Great! That did it!\nI also landed up using XAMPP which had everything set up properly.\nThanks!\n. ",
    "khartahk": "Thank you for this. I'll try it this way. Just one more question - not directly related but just an extension of this - how can I include multiple template files in one file so that I don't have to have this menu code duplicated in all different templates but just stored in one file that when changed is then reflected in all the templates that are using it.\n. Twig's include works nicely. The tree navigation puts all the pages on the same level so I'll have to dig into that a little bit more to understand how it should work but thanks for the direction.\n. ",
    "Senri88": "Pico version 1.0.0, Plugins: pico_private, PicoEditor.\nWhen i have installed the plugins nothing happens...\n. The website displays normaly...\nWhen i try to enter the editor i get 404\nWith the pico_private plugin im expecting to get a login prompt of some sort when i browse to the site but it just displays normaly...\npico_private: https://github.com/jbleuzen/Pico-Private\npico-editor:https://github.com/theshka/Pico-Editor-Plugin\n. ",
    "sonst-was": "It looks like my webservers 404:\n\nNot Found\nThe requested URL /pico/index was not found on this server.\nApache Server at domain.de Port 80\n. I had URL rewriting forced to be enabled once, but currently it is not set (commented out). Had to change the file extension, because .md is not allowed.\nconfig.txt\n\nHavent really figured out how to make new pages, but using the sample content mod rewriting seems to  works, it shows e.g. /pico/sub/index as URL.\n. No, basicly everything links to mod rewritten URLs, the page title and Welcome to /pico/index, the Sub Page Index to /pico/sub/index and the Sub Page to /pico/sub/page.\nWith the exeption of links to /pico/index all other links work.\nI just tried it with another browser (previously Chrome, now Edge) and it doesnt work as well. You can give it a try here: http://sonst-was.de/pico\n. Yes, tried force-reloading (and another browser, which shouldnt be affected by old cache stuff neither).\nBut adding -MultiViews to the htacces worked ;) Thanks for the really fast help!\n. > You basically applied the installation instructions for Pico 1.0 to Pico 2.0.\nWell... damn :(\n\nNevertheless I highly recommend re-installing Pico using one of the new official Pico 2.0 installation methods. For a composer-based installation use the following:\n\nActually I didn't planned to use the composer-based installation method, it was suggested to me by Pico itself ;) My webhoster changed their system recently and before I was unable to use composer so I just uploaded it and thought it was good (as I did with 1.x). I planned to do the same now with beta2 but then it said it wants composer. \nBut I'll try to reinstall Pico as soon as I'm home (my tablet lost its WiFi connection so I'm unable to do this from work using Guacamole :P).. I just did that and everythings working.\nThanks again for your help!. ",
    "JazzMaster": "I cant attach a ZIP?\n. ANYHoo..there are some advantages to owning domains and websrvers.... Ive linked the file on my main page. CSS might need some tweaks. southernhedgehogs.org The WWW will not redirect due to a cert issue glitch with LE when I had the cert made. Should be fixed in a few months.\n. ",
    "randombitsofcode": "[Edit: sorry, I reread your question and realized you asked to comment out the file index exclusion. The file index doesn't work (clicking on subfolders other than /plugins and /themes produces 500 error) when the line is commented out, which is why I initially started pruning the .htaccess file, to see why it was doing that.]\nYes, I've just copied the exact .htaccess to be sure and it still gives the 500 error. Deleting the file completely gives me the file index. I have a feeling this is something to do with the .php implementation, but I don't really have any evidence. If I click index.php directly from the file index, it simply outputs \"run();\" onto a blank page.\nI don't know if it means anything, but the folder I am running pico from is inside the /public_html for my host, so it's not running out of the \"root\" of my account.\nThanks for your help!\n. It does (or it says it does!), but I guess it hasn't been enabled for my account. I'll see if I can get someone server-side to enable it, then try again. Thanks!\n. So, a little progress: php (and perl) is supported but only through cgi-mode,\nquote:\n\"PHP runs in CGI mode using suexec because the supporting server is a multi-user commodity server (vs. running mod_php on a \"private\" host)\"\nand to make matters worse, I'm working away from home, so I've now had to resort to using an ssh client on my phone and typing out unix commands (I'll look for a more user friendly client) to ensure text-mode and chmod easily, and I'm not sure if that level of effort will be justified in the long run, but I've waded in this far so I might as well continue. (And thanks btw for keeping up with me!)\nMy next question is, does it still look like it would be possible to run pico, given that I'm restricted to cgi-mode? I've done a couple of test scripts to make sure it works, but I don't know if something as advanced as pico is likely to work.\n. Yeah since I'm working on borrowed computers right now I can't actually install an sftp client, but I've managed with the clients I'm using on my phone thus far.\nphpinfo worked, and it tells me they're using php 5.2.11, whereas pico says it won't work on less than 5.3. Is that a hard requirement?\n. ",
    "rbukovansky": "I'm :+1: x billion for this:\nAdd only pages of the first level to the page navigation by default (e.g. page.md and sub/index.md, but not sub/page.md)\nThanks.\n. @PhrozenByte OK. Thanks!\n. ",
    "desvu": "do not forget meta tags\nrel=\"alternate\" hreflang=\"\"\n:)\n. ",
    "csholmq": "$config['date_format'] = '%Y-%m-%d';\nThis is my YAML for the current page:\n```\nTitle: VSCode packages\nDescription: As a follow up to my Atom packages...\nAuthor: Sebastian Holmqvist\nDate: 2016-03-10\n\n```\nAnd this is the output:\n\ndate: 1457539200\ndate_formatted: 1970-01-01\ndate|date: 2016-03-10\ntime: \ntime|date: 2016-03-16\n\nIf I change to Date: 2016/03/10, the output it produces is:\n\ndate: 2016/03/10\ndate_formatted: 2016-03-10\ndate|date: 2016-03-10\ntime: 1457539200\ntime|date: 2016-03-10\n. Thank you for patching! :+1: \n. @PhrozenByte Actually, this fixed the parsing, but my pages are still sorted funky.\n. Apologies. During my debugging I reconfigured to $config['pages_order_by'] = 'alpha'; which just happened to sort my pages almost chronologically due to my file naming. This was a false alarm!\n. \n",
    "yeouchien": "Hey @PhrozenByte ! \nWe just want to make it incredibly quick and easy to contribute themes & plugins for Pico. The QuickStart button provides a way to create a sandbox Pico dev. environment with everything setup and installed to start building things right away.\nWe\u2019ve found that reducing the friction in getting started helps considerably with engaging more developers to participate in open source projects. There\u2019s also some really powerful \u201cgoogle-docs\u201d style collaboration features so developers can pair program and help each other out. It\u2019s 100% free for up to 2 projects.\nAll the best.\n. ",
    "Robby-": "Hi, I'm the same Robby from IRC. While your proposed solution works, the solution I'm using is actually to include the PHP location block in each location block where I need it. To avoid having to duplicate this in too many places I put the PHP location block in a snippet file and include it in each location block as needed.\nThe reason I'm currently doing it like this is because of the following.\nNot sure if this is useful for the situation described in this issue, but here is a problem I had:\nThe other day I was looking to password protect some specific directories of another PHP application with nginx and http auth and I found that PHP was still getting executed instead of requesting http auth.\nThe following links has relevant reading material on nginx and (nested) location blocks:\nhttps://serverfault.com/questions/375961/nginx-basic-http-authentication-on-php-script\nhttps://serverfault.com/questions/119076/how-to-use-fastcgi-globally-and-basic-auth-in-sublocations-in-nginx\nBack to pico.\nNote: I'm not using a subdirectory for pico anymore, I've put it in the root directory instead.\nSo, I noticed pico has an .htaccess file and I wanted to do some nginx equivalent of protecting for example pico's config directory, by doing this:\nlocation /config/ {\n  return 403;\n}\nBut, the above does not block access to /config/config.php (a blank page is shown instead of a 403).\nSo, taking into account the information in the 2 links I mentioned above, the following location block does block access to /config/config.php:\nlocation /config/ {\n  location ~ [^/]\\.php(/|$) {\n    return 403;\n  }\n}\nOther than that, my current location block for pico is like this:\nlocation ~ ^/(.*) {\n  include snippets/fastcgi-php-custom.conf;\n  index index.php;\n  try_files $uri $uri/ /?$1&$args;\n}\nMy snippets/fastcgi-php-custom.conf contents, based on the information in this link:\nlocation ~ [^/]\\.php(/|$) {\n  fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n  if (!-f $document_root$fastcgi_script_name) {\n    return 404;\n  }\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n  fastcgi_index index.php;\n  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n  fastcgi_param PATH_INFO $fastcgi_path_info;\n  include fastcgi_params;\n}\nNote that I'm not knowledgeable about regex, so most likely there's a better way to do some of the things I mentioned. I just wanted to share my findings.\n. Looks great so far! The only issue is the php example location block, it poses a security risk. It is best to use the example from the nginx wiki due to security reasons mentioned here. Using the example mentioned in the first link doesn't require changing the cgi.fix_pathinfo setting either (it says so in the Notes section on the bottom) as it can break things that rely on PATH_INFO/PHP_SELF. For some reason the second link doesn't mention that.\n. I know its meant as an example, but people are people and will copy paste, so its better to have a secure example in there in the first place. Also, do keep in mind people who may also wish to run other .php files on a Pico site, I'm sure there's people out there that would or do.\nWhat's the problem with the if? It's perfectly fine to use it there. For Pico's case, and since the consensus here seems to have become to lock it down to index.php only, I guess the if statement is not needed, but otherwise it should be there.\n. Reading the above, I feel more than one example configuration seems to be needed. For people that use Pico and also have other .php files, so it can't be locked down to just index.php (and then the if statement becomes a must-have for security).\n. Yeah, I've seen that If is Evil page, but note that they also say that it is perfectly fine to use it there in the Notes section at the bottom of the PHP example page. Then there also becomes no need to even touch or mention cgi.fix_pathinfo at all.\n. That that is Debian's default config doesn't mean its safe, though. ;) I also use Debian, but I trust the nginx wiki more on this.\nEdit: Upon further inspection, you seem to be missing or have left out some parts, @PhrozenByte.\nIf we take everything in the default Debian config into account, thus also the include files, then this is the full default example Debian provides:\nlocation ~ \\.php$ {\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  try_files $fastcgi_script_name =404;\n  set $path_info $fastcgi_path_info;\n  fastcgi_param PATH_INFO $path_info;\n  fastcgi_index index.php;\n  include fastcgi.conf; (I did not paste the contents of this file however as it is too big)\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n}\nI guess this may work out afterall, and also be safe then.\n. Oh, I was just editing my post. :)\n. @smcdougall\n\nOn the subject of .htaccess, I've been wondering what would be more secure: Denying access to the file, or returning 404.\nThe general example floating around the web is to use deny all to prevent access. But technically this does still inform a malicious party that there is a file there, it's just being denied.\nReturning 404 on the other hand, would be the same response they'd get if the file really didn't exist.\nI'm sure there's a good reason that deny all is used in every example I've come across, so I'm not about to change it. It's just something I've been wondering about.\n\nI've come up with an elegant way to fix this:\nlocation ~* /(config|content|content-sample|lib|plugins|vendor|CHANGELOG.md|composer.json|composer.lock|CONTRIBUTING.md|LICENSE.md|README.md) {\n  error_page 404 /?$uri&$args;\n  return 404;\n}\nThis makes Pico return its own 404 instead of nginx's own errors, which is even better I think.\nNote that I'm using Pico in the root directory, so for Pico installations in subdirectories, the path should be adjusted.\n. Sorry for the late response.\n@smcdougall I also think 404 is the better response, instead of a 403.\n@PhrozenByte My reason for adding these files to the 404 block is just personal preference I guess.\nI do not wish these files to be served at all to someone who probes the webserver for seemingly random files, I guess I could just remove them manually on each Pico installation, but this method seems much more practical. Also changelog files and the like can be used to determine or find out if any vulnerable software may be installed on the webserver.\n. I just had the idea of trying $config['base_url'] = '/'; and that seems to work around the issue (Pico is in the root directory of the server).\n. @PhrozenByte and thank you for fixing it so fast. :)\n. ",
    "iwedler": "@smcdougall To block access to folders and files this rule is enough, no need for more regex.\nlocation ~* /(config|content|content-sample|lib|vendor)\nThe essential part is WHERE you place this. It MUST be before the php processing rule in order to block also php files. Processing order is the word. I testet it and posted a config here: d8f9166\n. ",
    "nydame": "Got it. Thanks for your response.\n. ",
    "Lartza": "index index.html index.htm index.php is defined in nginx.conf, I didn't see a difference defining index index.php; in the Pico config.\nThe file was surely pico, pico->run() or something like that and everything.\nBut the \"problem\" now is that the site works :P I rebooted my PC but otherwise nothing hasn't really changed. I think this was a cache (browser or CloudFlare) issue, even though that sounds a bit weird to me. But I can't think of anything else?\n. ",
    "BesrourMS": "@PhrozenByte & @smcdougall Thanks guys\n. I think this link will be my target : https://github.com/smcdougall/Pico/tree/gh-pages/_themes \ud83d\ude1c\n. You are welcome @PhrozenByte \n. ",
    "leegold": "I'd like to try your CMS but the documentation is too scant.\nYou need step by step cookbook example, just a couple of those...\n. What I'm doing is looking at: C:\\wamp\\www\\pico\\content-sample\\index.md\nin a good text editor. And it looks really clean! By that example I think I can make some headway.  I could actually use an editor and make snippets/clip list and syntax definition..\nIMO if you had the simplest cookbook instructions on how to make a rudimentary site ... that's how I learn at least...on the other hand most of the magic seems in the .md file...\nDo I ask simple new user question here? Is there a mailing list for the simple probably obvious questions?\nThanks\n. ",
    "yonas": "Thanks for your detailed response @smcdougall :)\nI come from a Drupal background, and there seems to be a lot of common technologies here (PHP, Twig, YAML), which caught my attention. A Pico-Drupal bridge would probably not be hard to develop.\nI'm looking forward to hearing from @PhrozenByte .\n. @PhrozenByte @gilbitron Thanks guys, I think I'm going to be using Pico as the perfect lightweight compliment to Drupal. With so many similar technologies, people in the Drupal community would have a very easy time making Pico their favourite flat-file CMS. Cheers :+1: \n. ",
    "Narann": "Thanks for the fast answer!\nI'm very sad to hear that... I guess I will have to write a custom plugin for this.\n. ",
    "blocknotes": "@marcellecrist: to change the path you need also to rename the plugin folder to 'admin' and every path reference to 'admin/' (you could do a search of pico_edit inside the plugin folder). If I were you I would choose something less predictable, just for a bit more security\n. ",
    "kalvn": "You rock, thanks :)\nAnd by the way thanks for this great CMS which perfectly matches what I was looking for. Keep going :)\n. ",
    "1adrianb": "@PhrozenByte , thanks a lot for your answer. What I am trying to achieve is to serve a different template/page based on the device(ex mobile or pc)/browser. If you have other suggestion about how this can be achieved let me know\n. ",
    "bluesalt-labs": "Wow, this was a long time ago. But I just wanted to thank you! I was able to get the PicoPrivate plugin working for Pico 1.0 :). ",
    "mpavelka": "@PhrozenByte, thank you very much for the most exhaustive explanation to the topic, it makes a lot of sense.\nI'm sure I'm not the first one to wonder about this problem, perhaps it would help others too to include a little how-to with above described solution in docs/about page.\n. ",
    "captainhusaynpinguin": "thanks for the explanations.\nI'm migrating a website from WP to Pico and there are lots of nested directories.\nOkay, I looked a bit around and I learned a little from the Breadcumbs plugin for Pico 0.x and here is a plugin I wrote that assigns two fictional parent and grandParent meta-s to current page:\n```\n<?php\nclass DParents extends AbstractPicoPlugin\n{\n    private $url = array();\n    protected $enabled = true;\npublic function onRequestUrl(&$url)\n{\n    // your code\n    $this->url = $url;\n}\n\n\npublic function onMetaParsed(array &$meta)\n{\n    // your code\n    $parents = array();\n    $parents = array_reverse(explode('/', $this->url));\n    if (isset($parents[1])) {\n        $meta['parent'] = $parents[1];\n    }\n    if (isset($parents[2])) {\n        $meta['grandParent'] = $parents[2];\n    }\n\n}\n\n}\n```\n. I use it to for navigation purposes, for example:\nhere is an article about \"Brexit and Scotland\" on the 6 issue of \"The Lost Ideas Lab Journal\": lostideaslab/journal/6/brexit-scottish-love-letter.md\nNow on the top section of the page, you have this bar with the link \"issue 6\" so you can go back to the parent directory.\nA future use from this key is going to be to display links to other articles from \"issue 6\" on the bottom of that article. If you don't know who is your parent, you don't know who are your siblings, but with this tiny piece of code Pico is much smarter. Now that article \"brexit-scottish-love-letter.md\" can call its siblings by name and they will be availabe for the user, if he or she wants them to!\nThe main purpose of these two keys is to be able to take advantage of opportunities that a flat file CMS provides in developing your theme. \n. Exactly! Great!\nI just thought current_page only works when you are listing pages ...\nThank You!\n. Thanks for your comments, I understand that this should be rather in a tutorial for learning purposes.\nand I agree that it doesn't fit much to the cookbook.\nSomebody asked me a while ago, how would I start a new learning experience instead of the current education system and I am still thinking what can be the best ... Maybe I will implement this example there ...\n@smcdougall I still need to think more about how to present the \"proper tutorial\", especially I am thinking for people with only HTML and CSS background. [I am currently in bad personal conditions] so I need a bit time to think and implement it ...\nPS. by the way, one question, are you passionate about education? \n. ",
    "zittergritte": "Thanks @PhrozenByte for your comment, seems this issue is already known for Parsedown Extra, see <p markdown=\"1\"> shows unexpected behavior #68\n. ",
    "zeleznypa": "But there is also double implementation of the parsing meta headers etc. Why not to move the first part into the \"readPages\" part?. Sorry, I looked into the v1.0.0 version :). ",
    "rxng": "this looks really great! is there support for per user permissions?. ",
    "filisko": "@PhrozenByte, Is this the roadmap for the version 2? https://github.com/picocms/Pico/pull/334. @PhrozenByte Oh, I see now.\nI will have a look at the left tasks and see if I can help at any.\nThank you @PhrozenByte !. That's good to know, I liked the idea of having official plugins with basic functionality, I'm sure it will help to get more people used to Pico and be able to use it in a bit more user-friendly way. \ud83d\udc4d . ",
    "AndiLeni": "Is there an update for this project?\nI've been following this one for some time now.. @jens1o \nAll right,\naccording to the checklist, it's not finished. \nI don't see any information about whether the project was moved, outsourced or cancelled.\nCorrect me if I'm wrong.. I don't know how this might help, but Baun CMS, which is based on Pico, has an interesting approach that seems to be successful throughout. \nSee: https://github.com/BaunCMS/Baun\nMaybe it is suitable to take up a few ideas :). Thank your for your answer!\nWorks perfectly.. ",
    "jens1o": "see #334 . ",
    "philipca": "Many thanks for the prompt answer PhrozenByte. \nNow that I've uploaded the correct file-contents, I see the content-sample/index.md 'welcome' page. So all looks good for me to get started....\nBut one small problem:at the foot of the page it says:\n\n For more help have a look at the Pico documentation at http://picocms.org/docs\n\n\nBut when I visit http://picocms.org/docs I get a 404 ErrorPage, with the address bar of my browser showing: http://picocms.org/[object%20Object]\nIs this a mistake of yours, or another one of mine???  . Thanks. I now have the docs. I want to try different themes, and I've uploaded one to the /themes/ folder, but I am told to edit 'config.php' file to point to it.\nBut I can't find 'config.php'  --  there's a folder in my upload called 'config' where I thought I would find it, but in that folder is only one file called 'config.php.template' and I can't seem to open or edit that.\nMore help please!!!!. ",
    "Zanatoo": "\nYou've downloaded a source code archive rather than a release archive. Simply use https://github.com/picocms/Pico/releases/download/v1.0.4/pico-release-v1.0.4.tar.gz instead\n\nI've just downloaded https://github.com/picocms/Pico/releases/download/v2.0.4/pico-release-v2.0.4.tar.gz and I'm getting the same error. Maybe it's because I'm on localhost? What's more confusing is there is a vendor/autoload.php there. \n(I'm not a developer either.  Just looking for a very light CMS). ",
    "Prolegomenes": "@PhrozenByte \nGreat!, This is done !\nThank you . ",
    "GabrieleZucca": "You were right, but even after installing both libapache2-mod-php7 and libapache2-mod-php I keep getting the same result. PHP seems to be ok since the info.php page i created is working fine.. This is the /var/log/apache2/error.log, I only changed the extension to .txt because otherwise I wouldn't have been able to load it.\nerror.txt\nEDIT: Now the page is just blank.. Nothing to do, I keep getting the same result as before. This is the new error file:\nerr.txt\nI don't know if it can help, but I've also tried using Grav and it displays a page with the following error: \n\n'mbstring' extension is not loaded. This is required for Grav to run correctly\n. It works! Thank you very much!. \n",
    "Foolre": "The file I commited is made for local dev/testing of Pico. It mounts the code as a directory, it doesn't contain a copy of the source code.\nFrom a Pico-in-production-under-heavy-load perspective, FPM would probably be the best choice. This enables scaling both the webserver and FPM instances seperately. For simplicity I would stick to mod_php.  When it comes to considering the webserver or php version, I suggest to go for the best documented / supported options.\nRegarding the container base, my personal preference on this is Debian-slim. However alpine is (a bit) smaller, by keeping Docker images small they can be transferred back and forth much faster.  Alpine can be useful when you want to squeeze every bit of performance out of your box. But you have to deal with the musl compiler, documentation. Building and maintaining Alpine-based Docker images is something I find annoying and they're actually not safer as often projected. Just a bit smaller and a bit more efficient.\nFurther on, I think a Docker container should contain one service, expose 1 port and the image should be ephemeral. So going for the full feature images including text editors, sshd etc. isn't something I would consider.\nIn the end these are considerations an operator should decide for himself on a case by case basis, possibly together with a developer.  Once the needs of the user get more complex (seperate scaling of the PHP instance for example) it is fair to expect the user is able to do this himself.\nHowever Docker can make it simple to try out, test and develop apps quickly, which was the idea behind my pull request. But I changed my mind about putting it in the source code, maybe it's a better fit in the documentation with some examples.\n. ",
    "icro": "Thanks for your reply. I've changed it.. ",
    "AlexanderKrutov": "Hi Daniel,\nthank you for the quick reply!\nI slightly modified the code according with your comments.\nNow it's possible to include many files not just one (I've missed this case) and exception message is more informative. As for checking of include file path - I've left it as is for now because there is no Pico::resolveFilePath() method in the target branch yet. Of course the checking should be added after merging with 2.0.\nAbout adding %include% tag in Pico's core - after some thinking over I agree with you that it will be better to make a plugin instead. In other case, there can be cases when using something like %include% is prefered. \nFor example, if we have some static text/html/md block which used in many content files, like this:\nmd\n... some page-specific content ...\ncommon_block\n... rest page-specific content ...\nThe alternative, as you correctly noted, is use of twig template, but it will require separation of each content file into own \"header\" and \"footer\" and single \"common_block\" files. That's why I decided to do the PR.\n. ",
    "Chrischii": "But the content is still accessible through two urls... Canonical tag doesn't change anything of this issue, I want only one url version on the whole website with trailing slashes at the end of urls, and if you try to access one url without trailing slash it must 301 redirect to the right version. Internally all urls should be created with a trailing slash, therefore the redirect is only for users who remove the trailing slash or links from other pages who misses the trailing slash.. Pico generates the urls without a trailing slash by standard, right? So the canonical link element contains always urls without a trailing slash (with the exception of the root which always has a trailing slash and the non-slash version is 301 redirected to the slash, it so much mixing there). I don't want both urls with the same content are accessible (crawl management). Therefore I must use redirects to the non trailing slash version, but I want to use urls with trailing slashes.... ",
    "1deadpixl": "That's fair, I got a parsing error when using dot notation to get the meta value. I see that it works when using bracket notation but I think this breaks the established design pattern. Consider that the built-in meta value \"Date Formatted\" is stored under the key \"date_formatted\", as well as many other built-in variables that use underscores in place of spaces. It's easy to assume that custom meta keys would be converted in a similar manner.\nThanks for pointing out the use of bracket notation, at least now I can continue using the current version with key names that make sense.. Great! Thanks for the tips\u2014I appreciate the help and explanation.. ",
    "AlexL777": "OK, Thanks! \nHave it now under http://picocms.wpzweinull.ch/sub/downloads realized.\nPico CMS is very complicated for me because everything is based on directories and I do not get a bit clear.\nI wanted to create categories, but after several attempts I gave up.\nA question: DropDown-Mavigation is not possible or?. OK, thanks for the tips. I am not concerned about links to colleagues websites, but only my own to different projects, which I link in their own Pico blog.\nSo I wanted to have rel = nofollow and solved it:\nRobots: index,nofollow\nThat should work. But this only applies to my links. Foreign links may remain doFollow \ud83d\ude38 . Thanks for this work and I have just done it.\nWhen I call the homepage of my Pico blog I have this error.\nParse error: syntax error, unexpected '') === false) ){' (T_CONSTANT_ENCAPSED_STRING) in \n/xxxxxxxxxxx/picocms.wpzweinull.ch/plugins/TweakOutput.php on line 21\n\nDoes it mean that my HTML is not valid? I also blogged with Markdown Pad 2.. ",
    "Ricardosgeral": "it is possible to use themes and plugins in the nextcloud integration?. even so, it's not changing anything PhrozenByte. ok. I feel stupid now! it was that. I'm not a programmer\nthanks. ",
    "pjotrek-b": "Thanks for your reply :smile:\nI'm using some images in a resolution higher than the one I want to display it in (on purpose).\nTherefore I was wondering if it was possible to add size information to the Markdown image-link to scale it dynamically in the browser.\ne.g.: width=70% or width=400px, etc.\nCurrently, I'm embedding these images using plain HTML:\n<img src... width=\"...\">. ",
    "rsjowell": "Thanks, my question is this. We are a global non-profit group so we asked that our site be able to support different languages. They set Pico up so that each page we created would have a different URL directory according to the language (for instance, www.wrapcompliance.org/en/certification or wrapcompliance.org/zh/certification). We need to know how to add another one of these language codes to the system.. ",
    "haheute": "Ok.. and thanks for the explanation. ",
    "metzker": "Thanks.\nI already use canonical to get rid of pagination problem (for pages like /page/2) in Pico pagination plugin.\nWill it conflict with this one?\nI tried to add RedirectMatch just as you said.\nAnd i got\n/blog/article is OK\n/blog/article -> redirects to\n/blog/article?blog/article/\nWhat am I doing wrong?. $config['rewrite_url'] = true already and URL rewriting is working i mean my URL are like\nsite.com/blog/article not like site.com/?blog/article\nAnd if i delete RewriteRule ^(.*)$ index.php?$1 [L,QSA] it stops working and i get only site.com/?blog/article working\nbut after adding your proposed RedirectMatch i have this situation when trying to access trailing slash-ended urls.\nI'm using shared hosting so i guess they can have some weird configs on their side... But what should i ask them to check?. I tried to add this Rule just before other rules and i got 404 on every page of the website.\nSo i added it after all RewriteRules.\nAnd i still have problem that if i call trailing slash it redirects me to site.com/blog/article?blog/article\nMy .htaccess now\n`\n    RewriteEngine On\n# May be required to access sub directories\n#RewriteBase /\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\n\n\n\nRewriteRule ^(.*)$ index.php?$1 [L,QSA]\nRewriteRule ^(\\.git|config|content|content-sample|lib|vendor)(/.*)?$ index.php?$0 [L,QSA]\nRewriteRule ^(CHANGELOG\\.md|composer\\.(json|lock)) index.php?404 [L]\nRewriteRule ^(.+?)/+$ /home/chaguan/MYSITE.com/www/$1 [R=301,L,QSA]\n\n\n\n\n<IfModule mod_env.c>\n    SetEnv PICO_URL_REWRITING 1\n</IfModule>\n\n`\n. it works! Thank you very much. Such a relief...\nI think my problem was that I didn't know the rule:\n\nplease note that both RewriteCond and the first following RewriteRule belong together\n\nAnd that's why I tried 10+ different solutions and got zero result... \ud83e\udd26. ",
    "clausbertels": "I'm developing locally. I had the mod_rewrite enabled.\nBut I had set the AllowOverride to all in the vhosts config file, but not in the httpd config file. It was still set to none  over there. Setting it to all fixed the issue. \nThank you for the quick reply and for maintaining my favourite cms.\n. These are wonderful improvements! Thank you for taking so much of your time to provide us with such a great and lightweight cms. I'd love to make a full tutorial on setting Pico 2 up and creating templates once it's released. Maybe even in-depth documentation about that (like Pico's Twig filters and data structure, ...)\nBut I was wondering if full support for subdirectories would be on the feature list soon? So I can access only pages (and the dir's metadata in a separate .yml) in a certain directory in my templates. The current CategorizedPages plugin does this job, poorly, by reading and exploding the url but this doesn't seem like a very robust method. . > I'm not sure what you mean by that, can you please elaborate a little bit more?\nIt's basically about what you said. But for others that might read this;\nLet's say my site looks like this:\n\nI'd like to be able to set a template on ./portfolio/index.md in which I can access all of it's folders and those folders' pages' yaml headers and content. This way I can easily create a landing page for all of portfolio's content by using i.e. {{ for p in current_dir }} {{ current_dir.icon }} {{ p.title }} {{ endfor }}. But this is, I think, very difficult to program because you have to account for all the possible use cases:\n- accessing ALL pages in a directory\n- accessing only direct pages or dir(s) in a directory\n- accessing a page's directory's metadata\n- etc..\nI think it's quite essential too, but others might not need this. I'd be very happy with an official plugin!\nI'll definitely have a good look at @smcdougall's PR!\n(good thing we're in the same time zone @PhrozenByte. Love the fast responses.). I second the motion that the whole projects structure is getting very confusing with development seemingly split between issues, branches, pull requests and a pre-release. Then again I don't have quite a lot of experience on Github.\nIf someone could write a very rough and quick guide for me to upgrade my own site to Pico 2 I can get started on writing a novice guide for installing as well as upgrading. (collaborating with @smcdougall probably) . Reading up right now, saw that \"download the latest Pico release\" links to v1.0.6 ;)\n@PhrozenByte I'll be updating this comment with questions as I try getting my site running with 2.0\nSome questions:\n ~~Any info on how to convert to config.yml yet?~~ Found the template file!\n Why is pico 1.0 inside pico2.0/vendor/picocms/pico? \n* Trying to replace PagesList plugin with native page tree capabilities is gonna take me some time \ud83d\ude04 . I'm using the front matter social in the template to display the icons in the header (much like the default content-sample). I'd like to also inline those links on the page. Since it's a small site and I only need this on one page I'm fine just using markdown link references and editing two places in the future. But I could imagine that, for a bigger site, inlining meta links could prove useful.\nThanks for letting me know I'm not crazy. I was trying so many things!\nIssue resolved. . Hey, it works! That's not my use case but I'll see how far I can get with this info, see if I can dissect the code, haha.. @PhrozenByte \nSo, a template with the following code is used on the index page of an arbitrarily deep subdirectory:\n{% for page in current_page.tree_node.children %}\n    {{ page.id }} : {{ page.title }}<br />\n{% endfor %}\nIt renders the id's of the pages in the same directory as the index page just fine, but it doesn't render the titles. What am I doing wrong here?. > See http://picocms.org/phpDoc/v2.0.0-beta.2/classes/Pico.html#method_buildPageTree\nI wasn't aware, thanks! Since I'm just a hobbyist coder I made a little graph for myself to clear things up. Is this correct?\n. Your initial nested macro code breaks when sorting by descending date. Any idea why?. It doesn't render anything but the root node. I'm just testing the page tree system to see what can and can't be done with it and how. ;). https://github.com/clausbertels/pico2-pagetree-test \nThe snippet is in the themes/claus-one/index.twig file. . Did you sort by date, descending? . There's no easy way to traverse up the tree, is there?. ",
    "nitrix": "I can tell a lot of time went into this.\nI, myself, was even working on a better admin panel and doing improvements on your CMS on my side. Seems like you're always ahead of the curve.\nI really like the project, the decisions it made, the vision it has, how receptive it is to feedbacks and the continuous love its getting.\n@PhrozenByte hats off. Great work (:\nI'll definitively try the new version.. I'm a little confused because the releases page shows it as pre-release, yet you claim it's released. Then, there's the name -beta in it that adds to the confusion. Then there's the fact all of this work exists on a branch named pico-1.1 and not develop or master as you'd expect.\nOther than that, I love the project and what you guys are doing.\nJust these few points to iron out ;). Thanks, I'll close the task.\nJust to inform you quickly though:\n\nwe officially don't support Pico installations using the picocms/Pico repo as a basis since Pico 2.0 anyway, there's simply no reason to ensure that master is a stable version of Pico\n\nThat's fair, even though people will probably assume master to be stable, since naming your branch master is already a convention of its own in that regard.\nUnfortunately, I could see the documentation be misleading:\n\nthe master branch always consists of a deployable (but not necessarily deployed) version of Pico.\n\nWhatever that means. As a user, I'd totally read this as the master branch being stable and deployable to production.\nI'm guessing your intention here was to say that it should always be in a healthy state for development purposes, but not necessarily tested well enough to be production ready. And there, you've basically re-invented the develop branch, excepted you've confused everyone along the way.\n\nGitFlow would be a bit exaggerated here\n\nIs it? You already want the semantics of a healthy develop branch for development, you already have feature/ and fix/ branches schemes, you tag your releases and your documentation claims that the master branch is deployable. That's literally GitFlow, except each part is a little wrong.\nLet me insist, because you've been fumbling around with a makeshift strategy for the past months. I had to follow the work on a branched named pico-1.1 for version 2.0, betas were tarballs on two different repos, there were 3 different threads for version 2.0, each being massive TODO-lists.\nWhat if people want to use your project? Or, in my case, contribute? Can't. I know I tried. It's an organizational mess. Thankfully, it's getting better and I hope my criticism can contribute improving it further... :wink:. ",
    "nliautaud": "Congrats !\nEverything works fine here, and I confirm that my plugins are (or will be) compatible with 2.0.\nPicoUsers, PicoPagesList, PicoPagesImages, PicoOutput, PicoContentEditor and P01contact.. @clausbertels concerning pages, the PicoPagesList plugin should provide what you're looking for.\nEx. getting pages of a given directory : \ntwig\n{% set filteredpages = pages | only('portfolio/') %}\n{% for p in filteredpages %}\n...\nOr of the current directory :\ntwig\n{% set currentpath = current_page.id | replace({'/index': ''}) %}\n{% set filteredpages = pages | only(currentpath) %}\n{% for p in filteredpages %}\n.... Using plugins/MyPicoPlugin/MyPicoPlugin.php as a required Pico-specific handle would require CMS-agnostic plugins to implement a Pico specific build and release process. Allowing a subdirectory without this file, and lean on an external Pico specific handling file allow system-agnostic distribution without inner changes or specific releases, for example: \n```\nplugins/\n    ThePlugin\n        app/\n            Main.php\n    ThePlugin_Pico.php\nother CMS imaginary strategy : \nplugins/\n    ThePlugin_OtherCms.php\nThePlugin\n    app/\n        Main.php\n```\nIt seems to me that not firing an exception on missing file if there is a subdirectory without this particular file, and lean on the existing behavior on looking for a specific plugins/MyPicoPlugin.php file would not impact performance, not include any arbitrary file or change Pico strategy.. The manipulation that you describe is what I would encapsulate in a specific build. Document it and require the user to do it is totally a possibility thus (and I'll probably do that myself), but such operations are always altering the user experience so I'm opening the discussion about reducing additional install steps in that case.\nI hear you about non-decoupled and explicitly failing (instead of a warning for example). It's all about opiniated strategy vs flexible one, and I'm okay with both. \ud83d\ude42 \nIn that case I wanted to raise that these arbitrary requirements will depreciate a bit the user (or plugin developer) experience of the agnostic plugins, that will probably make them less common or reduce their impact in opposition to those only packaged for these requirements.\nThere are other solutions that I'm skipping because not entirely satisfying, like allowing the configuration of the plugin handler path (an additional install step again), or targeting plugin files that starts with the directory name (back to a less clean include strategy), etc.. I'm not pointing any problem here. Seeing that the 2.0 plugin handling require a slightly more restrictive structure than 1.0, I just wanted to know about the possibility to allow the handler file next to the plugin directory, and not considering directories only as plugins self-contained bundles.\nI thought that it would be imaginable, without creating bad behaviors, performance pitfalls, unexpected behaviors or ignoring plugins, hiding errors or using UIs (I just mentioned the idea of php warnings :/).\nAs I said I heard and respect your choice to allow only one-file/one-dir structures (which is the point closing my suggestion), and noted that it would a bit, slightly depreciate the installation process of a plugin not pre-bundled that way. I totally agree that one-file/one-dir is simpler too...\nSorry for the intervention, and no words were strong here so sorry if it wasn't clear.. To make this clear, I'm ok with your points \ud83d\ude09\nThe choice of strictly considering every directory as a plugin bundle is indeed reinforcing security; and the alternatives to the strict application of \"if there is X directory, it should contain X.php handle\" which respect the security requirements that I think of are equally complex to the user or unnecessary to the overall ecosystem.\nI'll add new instructions for installing the contact plugin on Pico 2.0.. I see, thanks. Was using that as a shortcut feature, so that's not really important. Removed that.. ",
    "ILDaviz": "thx man \ud83d\udc83 . ",
    "omniperspective": "Gefeliciteerd !!\ud83d\ude4f. I will explain a bit more:\ntestfile.md\n\nvariable1: boe\nvariable2: bah\n\nsome text\nI get the content of en external markdownfile like testfile.md with \n{{ \"testfile.md\"|content }}\nBut how to get variable1 ?\n{{ \"testfile.md\"| meta.variable1 }}  will get nothing\n. I'm ashamed, it works.\nWas it that simple......\nZucht\nHenk.. For the export as ..\nI use \n{{ \"testfile.md\"|content }}    to get the contect\n{{ pages[\"testfile\"]|content }}  this gets the content as well.\nWhat should I use and any reason why so?\nWould like to learn ..\nHenk.. filename \"bagger.md\"\n\nvariable1: \"aap\"\nvariable2: \"noot\"\nvariable3: \"mies\"\ntemplate: index\n\nThis is the bread and butter of text.\n~~~\nin Pico 2.0.2 I'm able to retrieve the data in the data part of the file with\n{{ \"bagger\"|content }}\nBut I'm now unable to get the data from the YAML part\n{{ \"bagger\"|.meta.variable1 }}   gives an error 500\n{{ \"bagger\"|meta.variable2 }}   gives an error 500\n{{ pages[\"bagger\"].meta.variable1 }} doesn't work in 2.0.2\nWhat is it that I don't understand?\nWhat is the correct syntax to get the YAML variable data?\nI'm unable to solve this, please help.\n. facepalm ;-(\nThanks for the correction.. After a big facepalm ;-), english is not my native language, but now reading is the answer was already documented in the comments.\nThanks for the answer, especially for the link to Twig_Environment class.\nItem can closed.. @PhrozenByte \nBeste Daniel, thanks for your information, clear info.\nI will try to implement this fix, and see what gain I will get.\n@dkyme \nBeste Dkyme, thanks for the information on the plugin, the name of the plugin was a no-brainer to\nunderstand that I was not the first person to encounter this behavior.\nI'm running on version 2.0-Beta-003, and I'm not sure if this plugin will work on version.\nBut I will implement this plugin in a 1.0.6 version where I have the same issue's.\nThanks both.\nRegards Henk.\n. Thanks Phrozenbyte for the extended reply,\nas always great support, and a good start for me.\nThis will be my first project to build a PicoCMS plugin.\nkind regards Henk.. I have the PicoRobots plugin working, and will see all files.\nBut still https://www.xml-sitemaps.com/ or SeoFrog Spider can't see all files.\nThe site:  https://juridisch-woordenboek.nl\nA legal dictionary for students, build with DataTables and Pico.\nIt drives me nuts, and don't know how to diagnose this problem,\nthis last is gives the most frustration \nInfo:\nThese are the directory's en there directory file permissions.\n[jrdschwrdbknl@web001 content]$ pwd\n/home/jrdschwrdbknl/public_html/content\n[jrdschwrdbknl@web001 content]$ ls -l\ntotaal 96\n-rw-r--r-- 1 jrdschwrdbknl jrdschwrdbknl   232 jan 11 22:10 404.md\n-rw-r--r-- 1 jrdschwrdbknl jrdschwrdbknl   499 jan 11 22:10 afkortingen.md\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 algemeen\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 arbeidsrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 bestuursrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 bouwrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 erfrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 faillissementsrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 goederenrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 huurrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 incasso\n-rw-rw-r-- 1 jrdschwrdbknl jrdschwrdbknl   471 jan 11 22:10 index.md\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 mediarecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 ondernemingsrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 onderwerp-intellectueel-eigendom\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 procesrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 sub\n-rw-r--r-- 1 jrdschwrdbknl jrdschwrdbknl   519 jan 11 22:10 titulatuur.md\n-rw-r--r-- 1 jrdschwrdbknl jrdschwrdbknl  1749 jan 11 22:11 uitleg.md\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 vastgoedrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl 12288 jan 11 22:03 verbintenissenrecht\ndrwxrwxr-x 2 jrdschwrdbknl jrdschwrdbknl  4096 jan 11 22:03 vve\n[jrdschwrdbknl@web001 content]$ \n. I have some fixed the robots by adding the the 'robot name' but it doesn't change.\nAlso the option to contact seofrog spider is a good one, BUT if I give seofrog a spin on\nhttps://pico-cms.org it works ;-) But I don't know the version on what that is running.\nIt must be something else, but again I don't know how to diagnose this.. ",
    "stale[bot]": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed in two days if no further activity occurs. Thank you for your contributions! :+1:\n. ",
    "M4rtine": "is it possible to load dynamically in spite of a name variable ? Do you understand ?. HTTPS Work for me. I'm using this\nhttps://github.com/alejandroliu/ForceHttpsPlugin. :D i'm sorry. ",
    "stefanocpp": "Hello,\nI think I have a similar question:\nI'd like to have few pages rendered in a single one, i.e. few .md documents that end up in the same html output one below the other. I thought I could copy and paste them in the same .md doc, but this isn't the best solution (because, for one, it's manual) and doesn't allow me to put footnotes at the end of each article instead of at the end of the whole page.\nI think this could be done via Twig, but I'm not a developer or anything and while I began studying Twig manuals, I'm weeks away from understanding how to make it work.\nWhat I'd like is the index page to load the \"n\" most recent articles I wrote either by saying \"only articles in the last 2 months\" or \"only 7 most recent articles written\". I'm not interested in having older ones kept in \"previous\" pages since I'm to archive them in the appropriate section of the website manually.\nThanks in advance and thank you for all the work you pour into Pico!. Thank you very much!\nI used snippet 2 and worked. Since I didn't need titles but rather content I changed it to:\n{% for page in pages|sort_by(\"time\")|reverse|slice(0, 7) %}  \n    {{page.id|content}}  \n{% endfor %}\n\nand it worked.\nI now have a page that gets filled in a manner I cannot figure out.\nI'd like to have it picking the 'Date' in YAML frontmatter so that if I change one bit of an old article it doesn't jump to the top. I also have few \"about\" pages which I don't want to end in the index.twig output and I'm wondering how to rule them out - but if I manage to get the YAML date working I could date them 1900 and not worry about them anymore.\nthank you for any further help!. thank you very very much!. First of all, thanks for releasing a new beta following my issue!\nI tried v2.0.5-beta.1 on my existing md files and this is what turned out:\n\nfootnotes work!\n\nheadings kind of work, but the bug is minor since the closing hashes aren't necessary. Anyway, closing # show up in parsed html, but only if followed by some character - including white spaces. So, for example, these get rendered correctly\n    ## heading 2 and heading 2 #\nwhile these\n    ## heading 2 ## and ## heading 2 #s\nget rendered as\n    heading 2 ## and heading 2 #s\nnow, putting letters after the closing hash is pointless, but I used to put space space return after closing hashes when I began writing with markdown. Nowadays, I don't use closing hashes anymore, but still use space space return even after headings as a habit.\nThis output is obtained even if breaks in the markup are set to be reflected in the parsed output too.\nAgain, this bug is very minor, but it exists nonetheless.\nSetext-style headers with = and - work just fine even with space space return\n\n\nimages show up\n\ninline html works\n\nI tried to read some of the comments on ongoing work on parsedown, but I think I understood 30% of what was being said. So, if I can be of any further help, please let me know since I can't get any further than this for now in understanding what might be some weak points to test.. I am translating all the files in my pull request because I don't know how to make them appear here... is it a problem?\nHow can I fix the problem with Travis?\n. Like Nepose did for the Polish translation, where every file he edited showed up in the page for Polish translation under pull requests.\nAll the files I translated are here https://github.com/stefanocpp/Pico: is it the right place to put them?. What a mess. Can they be used where they are now or should I put them somewhere else?. ",
    "kkarthik23": "Hi,\nThanks for the response, much appreciated.\nI am using clean-blog and rewdy/Pico-Pagination and it is showing pagination but if I limit 4 articles to the first page and want to see the next 4 articles by clicking on the older posts then it does not show those old 4 articles and maybe i am missing something and will review it again. \nCould you please let me know what theme you are   using since pagination works fine for you?\nThanks again.. Hi,\nThank you so much for your help.\nI found out what the problem was, when i was using the built in php web server it didnt work but when i started using apache web server pagination started working, so I think i had configured it properly but maybe there was something different in the way i was running it with the built in  php web server.\nI am using BesrourMS/clean-blog with rewdy/Pico-Pagination.\nIt is all working fine, thanks for your time and help. \nThanks again.. ",
    "sqwoteg": "I have page base_url/pages.\nI have many other pages base_url/page/page.title.\nI need to load every page title to make a list.\nThey should be loaded piece by piece because there are too many pages.\nWhat more information do you need?\n. I did it\n{% for page in pages %}\n    {% if page.author == \"John Doe\" %}\n        <h2>{{ page.title }}</h2>\n    {% endif %}\n{% endfor %}\nBut when there are too many pages the page with the list of pages loads too long, so I want to load the list item by item after load of the page with this list.... In other words I need \"SHOW MORE POSTS\" button. Is there possible to make \"show more\" istead of \"next\"?. I read it. I understand that it possible to make \"Show more\" link to next page, but I need to insert new links in the same page without reload\n. Thank you for try to help.. . {{ page.url }} didn't work for me. Thank you again. I downloaded clear pico cms.. \n\n. Probably it is a problem with my hosting provider. ",
    "tony5": "@PhrozenByte \nthank you very much!! that did work!! I need to learn more about the subject.\nthanks for the fast reply and I will mark this closed.\ntake care.\n. opps, same issue it's not redirecting properly :(. I think I have it?\nrewrite_url: true\n. @PhrozenByte \nit does work! and Pico's 404 page shows up accessing config.yml\nif you are on a non standard port it needs to be $HTTP[\"host\"] == \"example.com:8080\" {\nas well as \"rewrite_url: true\" in config.yml\nI usually use apache but in this case I am forced using lighttpd.\nthanks for the help, I appreciate it, I tried for two weeks to get this to work. LOL\n. ",
    "PiersMorgan": "I will work on the documentation if that is what is required! And if required i can work on Pico 2.0 themes when needed.. I have modified the Docs and i am continuing to do so i am certain i have forked the correct one and made edits accordingly, would you be able to check for me?\nhttps://github.com/PiersMorgan/picocms.github.io. I have opened a pull request.. ",
    "wergin": "Thanks for the quick answer.\nwhat is with step 2?\n`Step 2\nDownload composer and run it with the install option:\n$ curl -sS https://getcomposer.org/installer | php\n$ php composer.phar install`. Thank you very much!\nNow I will start :-)\nGreetings wergin. ",
    "eppz": "Thanks for getting back. I will do something similar, probably add the content/, plugins/ and themes/ folder to a submodule to my fork of pico.\nI was hoping for a \"deployless\" workflow, but I'm not complaining at all. Pico already saved my day, thanks for that.. Well, pico 2 just said that:\nCannot find 'vendor/autoload.php'. Run `composer install`.\nOn install, it says:\n```\n$ curl -sS https://getcomposer.org/installer | php\nDownloading...\nComposer (version 1.6.3) successfully installed to: /composer.phar\nUse it: php composer.phar\nSome settings on your machine may cause stability issues with Composer.\nIf you encounter issues, try to change the following:\nThe OpenSSL library (0.9.8r) used by PHP does not support TLSv1.2 or TLSv1.1.\nIf possible you should upgrade OpenSSL to version 1.0.1 or above.\n$ php composer.phar install\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - The requested package picocms/pico ^2.0 is satisfiable by picocms/pico[2.0.x-dev, v2.0.0-beta.1, v2.0.0-beta.2] but these conflict with your requirements or minimum-stability.\n  Problem 2\n    - The requested package picocms/pico-theme ^2.0 is satisfiable by picocms/pico-theme[2.0.x-dev, v2.0.0-beta.1, v2.0.0-beta.2] but these conflict with your requirements or minimum-stability.\n  Problem 3\n    - The requested package picocms/pico-deprecated ^2.0 is satisfiable by picocms/pico-deprecated[2.0.x-dev, v2.0.0-beta.1, v2.0.0-beta.2] but these conflict with your requirements or minimum-stability.\neppz-MacBook-Pro:tangram.eppz.eu eppz$ \n```\nThen the site is still:\nCannot find 'vendor/autoload.php'. Run `composer install`.\n. Anyway, I copied over manually the latest beta 2 release, now it works fine. I cannot update, however. Same error messages.\n```\nz$ php composer.phar update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - Installation request for picocms/pico ^2.0 -> satisfiable by picocms/pico[v2.0.0-beta.2].\n    - Removal request for picocms/pico == 2.0.0.0-beta2\n  Problem 2\n    - Installation request for picocms/pico-theme ^2.0 -> satisfiable by picocms/pico-theme[v2.0.0-beta.2].\n    - Removal request for picocms/pico-theme == 2.0.0.0-beta2\n  Problem 3\n    - Installation request for picocms/pico-deprecated ^2.0 -> satisfiable by picocms/pico-deprecated[v2.0.0-beta.2].\n    - Removal request for picocms/pico-deprecated == 2.0.0.0-beta2\n``. Thanks, I just did that. Yay, now I can bothupdateandinstall. I sure wanted to maintain uplink, I could already updatesymfony/yamlcompared to2.0.0-beta.2release.. Just a quick question, you are such responsive. \ud83d\ude04 \nCan I create redirect pattern like:my.site.com/presskit, insteadmy.site.com/?presskit`.\nI have some links already shared, I want to preserve them.\n. Huge thannnnkkksss for your assistance!. Hi, have rewrite enabled, however, it does not resolve the URLs.\nI have this in my httpd.conf:\nLoadModule rewrite_module modules/mod_rewrite.so\nAnd this in my config.yml\nrewrite_url: true\nBut it still only works with ?. Which prevents me from using pico actually. Can I work this around with some direct .htaccess magic perhaps?\n. Thanks! Can I put this into .htaccess somehow?\nOn the production environment, I have no control over server configuration (luckily mod_rewrite is turned on there as well).. Thanks, now I just actually want it working. It just shows response code 500 now.\nI have worked the hell around it, just exported static pages, as this already consumed my entire afternoon. I could have installed 500 WordPress within this timeframe.\nThis redirection issue - and the lack of documentation on it -, just killed the purpose of simplicity. I still want to use pico, but first I need to see it working in production (not only on a local MAMP server).. Thanks for your answer, and the suggestions. I totally understand, I just had to ventilate some frustration over. \ud83d\ude03\nI'll fiddle with this once I'll have time for that. I do not want to use WordPress, I really want something more lightweight. . I tried both suggestions, also tried to hardcode base_url, no luck. Can I turn on error logging somehow?. I added:\nerror_reporting(E_ALL);\nini_set('display_errors', '1');\nIt says:\n```\nWarning: require_once(/vendor/autoload.php): failed to open stream: No such file or directory in /index.php on line 29\nFatal error: require_once(): Failed opening required '/vendor/autoload.php' (include_path='.:/usr/share/php:/usr/share/pear') in /index.php on line 29\n```\nBut autoload.php is there. Furthermore, it works when running local. Could this be something due to the \"manual\"  installation I did?. Wow, I just found /vendor is ignored in .gitignore. Hopefully, adding will solve the issue. Seemingly it has nothing to do with .htaccess.. I can't run scripts there, only upload files. Anyway, I removed .gitignore files actually all around.. Yay, now it works.\nI set rewrite_url: true per documentation (!), now that works as well. \ud83d\ude04 . I'd appreciate if you could take a look at Unable to add filter \"navigation\" as extensions have already been initialized please. Those folks seem much less responsive.. ",
    "Petemcp": "Thanks for the really quick and clear response. I'll try nudging my host to see if it's something they can tweak before I go down the route of hassling twig Devs or embarking on a collosal find and replace nightmare.. ",
    "tanghus": "Thanks for the fast reply :smiley: \nI've now set up a subdomain - assets.example.com - in which I will keep the same structure as the content.\nSadly I don't have access to create subdomains outside of my allotted web-space, as I was hoping to also manage the assets in my Nextcloud instance, but this will do finely for now.\n. ",
    "maxlefou": "Sorry to have forgot to mention it:\nI checked the permissions, they didn't changed, were the same for all the md files, old and new.. ",
    "Tyxiang": "Thank you for your attention.\nI want to implement the layout in the picture:\n\nI found that the contents of part A and part C come from the Metadata in the .md file.. I see!. I found the reason myself. The default is to sort by key \"author\", you must change the order according to \"order\" in config.yml.\npages_order_by_meta: order         # Sort pages by meta value \"author\" (set \"pages_order_by\" to \"meta\")\npages_order_by: meta               # Change how Pico sorts pages (\"alpha\" for alphabetical order, \"date\", or \"meta\"). ",
    "in8sworld": "Thanks so much!  I was able to get it working in Pico v1 with just the first part of your function (note the added date function to make the date non-Unix time) saving it as the filename PicoLastModificationPlugin.php in the plugins directory and by including  {{ meta.modificationTime }} to my blog page twig file.  I wasn't sure how I would use the second portion of your function.\nclass PicoLastModificationPlugin extends AbstractPicoPlugin\n{\n    const API_VERSION = 2;\n    public function onMetaParsed(array &$meta)\n    {\n        if (!isset($meta['modificationTime']) && file_exists($this->getRequestFile())) {\n            $meta['modificationTime'] = date (\"F d, Y\", filemtime($this->getRequestFile()));\n        }\n    }\n}\nI then added an if statement to that twig template so that the modification date line only shows up if I manually set a moddate field in the YAML header.  This way I can choose if I want folks to know that I'm editing the post after the fact or not (helpful when I've got a lot of older posts to put up but don't want them all to appear like I edited them recently when all I did was move the files around)\n{% if meta.moddate %}\nModified on {{ meta.modificationTime }}\n{% else %}\n{% endif %}. ",
    "nephilim75": "Hello\nThank you so much. Looks like it came from the contact plugin. It helped a lot. :-)\nThere is another question. Google offers a JS based Maps API which is explained here. But it is not working in an MD file just by copying and pasting it into the content page. Do you see a way in Pico to get this code implemented and working well?\nKind regards\n//neph. I have already a map embeded as advised. Unfortunately it is cookie based. But I want to get rid of all cookies and adding a JS based map will solve this.\nI have added this to the page:\n<div id=\"map\" style=\"height: 300px width: 300px\"></div>\n<script>\n  function initMap() {\n    var uluru = {lat: -25.363, lng: 131.044};\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 4,\n      center: uluru\n    });\n    var marker = new google.maps.Marker({\n      position: uluru,\n      map: map\n    });\n  }\n</script>\n<script async defer\nsrc=\"https://maps.googleapis.com/maps/api/js?key=***API_KEY***&callback=initMap\">\n</script>\nAnd this is what I get displayed:\n\nIn case I made something wrong, I dont find the error.\nKind regards\n//neph\n. ",
    "dannyhan12": "Sorry, meant to make this pull request on my own master. Closing now. . ",
    "zingmars": "This is an issue with picocms.org (the website for this project) and not picoCMS itself.. ",
    "jannejava": "This is still broken, unfortunately.. ",
    "maulwuff": "What I want to achieve is, to put a teaser image to each entry of a blog list. \n\nThe image should be provided by the pico-pages-images plugin (https://github.com/nliautaud/pico-pages-images)\nThis plugin uses onPageRendering to add images to twig:\npublic function onPageRendering(Twig_Environment &$twig, array &$twigVariables, &$templateName)\n    {\n        $twigVariables['images'] = $this->images_list();\n    }\nso they can be accessed in the twig template like\n{% for image in images %}\n    <img src=\"{{ image.url }}\" alt=\"{{ image.name }}\" {{ image.size }}>\n{% endfor %}\n\nThe code to get a list of blog style entries is from http://picocms.org/docs/#blogging\n{% for page in pages %}\n            <h3><a href=\"{{ page.url }}\">{{ page.title }}</a></h3>\n            <p class=\"excerpt\">{{ page.description }}</p>\n{% endfor %}\n\nI am looking for a way to get the image part into this loop ;-) so I can write like \n{% for page in pages %}\n            <h3><a href=\"{{ page.url }}\">{{ page.title }}</a></h3>\n            <img src=\"{{ page.images[0].url }}\">    <<<<------- image I want to get\n           <p class=\"excerpt\">{{ page.description }}</p>\n{% endfor %}. hmm, this would make images static. \nAt the moment I just need to drop them into the content folder next to the md file, and the plugin will pick it up (I added some modification so the plugin looks for images with the file name pattern, like  filename.*\\.jpg, which will find i.e. filename.001.jpg filename.002.jpg ...\nIs there a way to call a plugin manually from inside a plugin? Or would it be easier to rewrite the plugin so that it would  go with the onPagesLoaded event?. ok, thanks for your advice. I'll give it a go, the system is small (60 pages atm) and runs from a ssd, because why not ;-)\n. ",
    "tumapav": "Hi, I've tried all of your plugins and checked their source code, here's my feedback:\n PicoTags\n  * There is a risk of a reflected XSS vulnerability on the tag pages that are produced by the plugin. E.g. page /tag/<script>alert(0)</script> will execute the script. I always thought Twig does auto-escaping by default whenever {{ }} is used to print out variables. However, autoescaping is by default disabled in Pico CMS (see the $defaultTwigConfig in Pico source). Now the question is if it should be escaped with htmlspecialchars() in the plugin code when assigning the user input into the $twigVariables or in the template using a Twig filter. I think it's better in the template, because if someone sets autoescape: true in twig configuration in config.yml, the output of the plugin would be double-escaped if the first variant was used. Therefore I suggest you to update just the readme of your plugin and output the user input like this: {{ tag|e }}.\n  * I noticed there is a {{ base_url }} missing in a few links in the example usages in the readme.\n  * The c-style page header is marked as deprecated in Pico, better to include the --- delimiter for page meta sections in the example.\n PicoCookieBAR\n  * $this->cookiebar_url will be undefined (php notice) if configuration property cookiebar_theme is missing. Would be nice if cookiebar_url had a default value so the bar will appear as soon as the plugin is installed (and will not require to specify a cookiebar_theme in the config, even as an empty value).\n PicoSimpleStats\n  * The way how you pass the cookiebar_preventive from PicoCookieBAR to PicoSimpleStats seems fine to me. The plugin works very well.\n  * Possible suggestion: If you would add installation using composer, the dependency PicoCookieBAR could be configured to be installed automatically via a requirements section in composer.json.\n PicoXMLSitemap and PicoSyntaxHighlighter\n  * Nothing to add, works well.\n  * Maybe a suggestion: In your plugin readme's when printing an example yaml configuration, you can start the code block with ```yaml which will then highlight the individual options, it's much easier to read and easy to distinguish configuration options from comments.\nI wrote everything I could think of while trying these plugins out, hope it helps. I think all of these plugins are useful, thanks for the work you put into creating them.. As this is a thread about plugins for Pico 2.0, I'd like to share my new plugin PicoAuth (GitHub: picoauth/picoauth), which provides extensive authentication and authorization solutions for Pico CMS. A simple demo is available at https://picoauth.xyz/.. PicoTags: The changes you made are good. Having strip_tags() in the plugin is a good addition in case someone forgets to use the |e filter in their template. I checked the README of PicoTags and it seems you forget to add it on one place, check this line:\ntwig\n<h2>Posts tagged <a href=\"{{ page.url }}\">#{{ current_tag }}</a></h2>\nI consider this one as the most important that should be escaped, because current_tag is the only place in the plugin where a user input gets reflected in the response. On all other places the tags are written by page authors and we don't generally expect them to be malicious (but it's still good to escape it).\nAlso on this line page.url is undefined so the href will always be blank. Maybe you meant {{ current_page.url }}, but that wouldn't work, because tag page is not a real page in Pico. Since it's a link to the current page, you can use something like href=\"#\" or remove the link completely.\nUpdates in the other plugins are good :+1: . I agree that PicoAuth does not fit the \"stupidly simple\" requirement when it comes to choosing a universal Pico authentication plugin. I don't mean that it isn't simple to use - all the advanced features are either pre-configured or disabled by default, but as you say, it doesn't include just the bare minimum.\nHowever, when it comes to authentication, it could be difficult to balance the simplicity and a good authentication security. That's why I like the idea of giving a user an option to switch the authentication dependency of a plugin to an alternative to get more advanced options (or even to use other authenticators like SSO in case of PicoAuth).\nI can imagine that there would be an official User interface similar to PicoAuth\\User and every plugin that requires authentication would after successful authentication receive an instance of it without a need of knowing how it was obtained. This would be done either by PicoBasicAuth directly or by another official plugin that would only serve for interfacing authentication plugins. Right now I am not sure how to achieve the plugin interchangeability considering that the $dependsOn cannot be changed by the plugin configuration, because Pico sorts the plugins before the configuration is even read. (I wanted to add a similar plugin selection to PicoAuth by giving a user a configuration option to choose if PicoSession should be used for session management. I couldn't implement this because of above.) No matter how it will be actually implemented, I am interested in modifying PicoAuth to make it compliant with this Pico authentication interface.\nI'd like to also ask if the structure of the plugin page on the Pico website is going to change now when Pico 2.0 is released. I would be glad if PicoAuth would be included on this list, but it requires Pico 2.0 so I'm not sure if it can just be added next to the plugins that work with 1.0. Similar question about the Pico Plugins page on the Pico wiki. Will there be a new heading just for Pico 2.0 plugins?. > We don't need a general approach to replace arbitrary plugins by other plugins, auth is rather a exception here. However, maybe I just can't think of good reasons. Do I miss something?\nThat's right. The method of passing responsibility to auth plugins by using events is good and probably even better than the one with replacing plugins I was thinking about, because in your solution the change to a different plugin happens automatically as soon the plugin is installed, which makes it easier and doesn't require an additional configuration. I'll be happy to update PicoAuth to use the mentioned interface in the future when the specification of AuthenticatorInterface and the required events are determined.\nI also agree with you that there is no need for plugins to implement their own session handling when PicoSession is released. I already have the implementation of PicoAuth\\Session\\SessionInterface which uses the current PicoSession ready, so I will be able to make this change very quickly as soon as PicoSession is ready.\nNow I've added PicoAuth plugin to the list of plugins in the wiki. I assumed the \"current\" section you mentioned will be the one currently labeled \"Plugins for Pico 1.0+\". I couldn't figure out how is the list ordered, so I've put it next to Pico Users.. ",
    "FBachofner": "If I place a simple html file in the Pico content folder like so:\n/content/test.html\nEverything else being equal, should Pico \"get out of the way\" and should I see the document by browsing to:  http://www.example.com/test.html  ?\nIf so, I am not getting that test.html file either.\nPerhaps the suggested nginx.conf files (here and here) are not quite right ?. It seems that the \"Pico-master.zip\" file downloadable from https://github.com/picocms/Pico  is quite different from the \"pico-release-v2.0.0.tar.gz\"\n\"Pico-master.zip\" includes both a /content-sample and a /lib folder\nThe /lib folder has 4 PHP files in it which seem germane to the operation of Pico.\nI will reinstall from that file and report back.. After installing from \"Pico-master.zip\" I am still getting no document served from Pico.\nI did notice I can now see my simple html file, but I have to browse thusly:\n    http://www.example.com/content/test.html\nIt seems to me I should be able to browse to http://www.example.com/test.html  (i.e. no \"/content\" folder specified ), but that doesn't work . . .. Thanks for insisting I check NginX and PHP configuration.  While the logs clearly showed status 200 (i.e. the page was getting served), you inspired me to learn that on Ubuntu, NginX serving blank pages is apparently a known (occasional) problem\nThe solution is to add\nfastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;\nto the NginX config file\nThis is detailed here ... original source here\n[ Perhaps the NginX config suggestions should be annotated to address this common issue? ]\nRemaining problem / Question:\nFor NginiX configuration, Pico documentation suggests\nlocation ~ ^/((config|content|vendor|composer\\.(json|lock|phar))(/|$)|(.+/)?\\.(?!well-known(/|$))) {\n     try_files /index.php$is_args$args;\n     }\nThis leads to an error:\n[emerg] invalid number of arguments in \"try_files\" directive\nIt does work with a slight modification:\nlocation ~ ^/((config|content|vendor|composer\\.(json|lock|phar))(/|$)|(.+/)?\\.(?!well-known(/|$))) {\n     return 404;\n     }\nHowever, then a file like test.html (not test.md) from Pico's /content directory results in 404\nDo you have any good ideas for NginX configurations for protecting those directories but still allowing .html files to be served from /content ?\nThanks in advance!. Hi @PhrozenByte \n\nCan you please try the following config?\n\nwhen I do that, I again get the same error:\n[emerg] invalid number of arguments in \"location\" directive in ... [my NginX config file]\nRegarding the .html documents issue:\nNo, I am not trying to use html in my Pico content files.  If I were interested in that, I would just move to something like Flextype which is conceptually almost identical to Pico but uses html instead of markdown for content.\nActually, I am trying to keep a few \"legacy\" pages online.  I don't want to re-write them and also don't want to be tempted to \"wrap\" these in whatever styling and navigation system I apply to the forthcoming Pico site.  At the same time, I was also hoping to not have them at a separate folder (i.e. like www.example.com/legacy_pages )\nOf course, by putting them in a separate folder within my document root I guess I can very easily \"bypass\" Pico for this type of content.  I'll give it a shot.\nThanks for your help so far!. Hi @PhrozenByte\n\nThat's not the same error,\n\nD'Oh!  My Bad.  I actually did have the same error on a (different) server configuration the other day and forgot which error occurred where.\nWell, you were right.  My \"typo\" was that I didn't properly comment something out.  Your suggested configuration works now.\nCurious: why -- if we are trying to lock out any public access to those directories -- are we using \"try_files /index.php$is_args$args =404;\" rather than just \"return 404;\"\nThanks again!  :-). > It allows you to use Pico's 404 pages rather than your webserver's.\nFYI, I got a Pico-styled 404 page whichever directive I used.. ",
    "rollanders": "Do you mean that the default theme is compatible with Safari browser on iPad in other installations but not in the NC? That the issue is only related to the NC app? . I reinstalled Pico CMS using these instructions https://www.c-rieger.de/nextcloud-meets-picocms/\nTherafter I had no problems. It worked also in iPad. I guess the installation uses the latest version of Pico CMS, Thanks\n. ",
    "bitmarte": "Hi @PhrozenByte ,\nyou need to publish a new release to packagist.org in order to include our fix.\nIn fact when I try to install pico from composer I retrieve the previous version, so I must to override the source from my vendor dist folder.. Hi @PhrozenByte,\nI am sorry for my crazy editor.. ",
    "nsrosenqvist": "Are there any plans on enabling running code from within a theme? I know many other CMS's keep to the same policy but it makes it so much more inconvenient for many developers for when a theme is custom made and it's basically created as the entire site and not just a skin. Meaning, it's not meant to be reused or distributed but it's branded and with custom functionality for a single hosted site and the layout/styling is always kept in sync with the functionality (the code). For those use cases, when it's not for shared hosting and the site never intends to \"change\" theme, but simply keep developing its theme, can't it be allowed to run code from within the theme? Otherwise two separate code bases and repositories need to be maintained even though they are completely dependent on each other.\nI was very frustrated with this hard separation of concerns when using OctoberCMS a couple of years ago, any small feature had to be released as a plugin and greatly increasing maintenance burden of projects, so I developed a Themes+ plugin that loaded code from within a theme into a \"Theme\" PSR-4 namespace. However, it got rejected from the plugin repository due to not being inline with their goals. Would a similar plugin be frowned upon or accepted into plugin lists or repositories (if possible to hook-in to Composer's autoloader when using Pico)?\nIs there any reason why running code from themes couldn't simply be a config option in the installation where the host would decide if they want to allow it? That way it could be off by default but still be available for more customized installations.. @PhrozenByte thank you for your detailed response.  Good to know the official stance on this! Then for now I'll probably just make one plugin containing the specialized functionality and will evaluate later if it's worth splitting up into different plugins.. ",
    "TimotheeMathieu": "Thanks for the fast answer,\nI already saw this configuration and I already did that but the error is still the same.\nconfig.yml is \nsite_title: Test                    # The title of your website\nbase_url: https://www.***.fr/TEST/              \ntheme: default    . Thanks a lot, it works now with the \"rewrite_url: false\" .. ",
    "jjtmp": "The main goal is to keep the main http site directory clean because this directory always tends to get full by \n\nOld index.html files (backup)\nMedia / static content directories\nNotes to editors\nDirect content which you put there to share it just this moment [I know ... this is bad practise] but forget to clean up\nFeatured sub-sites\n\nIn order to manage all these files (and not to loose overview on clean-ups thus making dangerous deletions) it is IMHO important to stash helper files which don't have to do with this particular website.\nAnd you can more easily prevent access by .htaccess e. g.\nAnd a clean web directory (with two CMS files instead of 13) has less puzzling impact on the editors / administrators.\n. ",
    "zounp": "Hello  PhrozenByte,\nThanks for your help. As I wrote I read the documentation on installing. Especcially this part:\n\"\nI want to use a pre-bundled release\nDo you know the feeling: You want to install a new website, so you upload all files of your favorite CMS and run the setup script - just to find out that you forgot about creating the SQL database first? Later the setup script tells you that the file permissions are wrong. Heck, what does this even mean? Forget about it, Pico is different!\nStep 1\nDownload the latest Pico release and upload all files to the httpdocs directory (e.g. /var/www/html) of your server.\nStep 2\nOkay, here\u2019s the catch: There\u2019s no catch. That\u2019s it! Open your favorite web browser and navigate to your brand new, stupidly simple, blazing fast, flat file CMS! Pico\u2019s default contents will explain how to create your own contents. \ud83d\ude0a\n\"\nFrom (the link from the above text)\n     https://github.com/picocms/Pico/releases/tag/v2.0.2\nI downloaded\n     https://github.com/picocms/Pico/releases/download/v2.0.2/pico-release-v2.0.2.tar.gz\nI extracted that gz file and uploaded the contents via FTP to the webserver at the hostingprovider as described before.\nThe README.md file I found in pico-release-v2.0.2.tar.gz is about the \"Pico Deprecated Plugin\". It is in /. I think the README.md you refer to is in /pico. It has the same text as above.\nI still do not have a clue how to resolve the issue.\nWhat to do?\n. Thanks. I counted files with Filezilla. Both the extracted pico-release-v2.0.2.tar.gz file and the files and folders have the same amount of files and folders.\nI downloaded the pico files from the webserver to a different folder on my PC and ran diff -r on that folder and the folder with the extracted pico-release-v2.0.2.tar.gz file. No differences were found.\nAlso, when uploading picocms with Filezilla no errors were encounterd.\nThe server has Php 5.6.38 Installed and Php 7.1.23 Installed (php2)\nWhat to do?. Hello  PhrozenByte,\npicocms is running now. I removed the local extraction directory and all the files on the server and extracted again and uploaded agian. Now I have a different set of files and folders. See attachments\npicocms.newset.txt\npicocms.oldset.txt\npicocms.newset.txt is working now although there was a catch:\nwww.domainname.something/subdomainname does not work. I had to enter\n www.domainname.something/subdomainname/index.php in the addressbar\nI do not understand why the files in the oldset got extracted and uploaded the way they were. I can not reproduce it.\nThanks for the quick help :-), Zounp\n. ",
    "jflepp": "I understand what you mean and agree with you that this concern is worth thinking about before implementing.\nBut in my opinion a corresponding error message should be shown, explicitely dissallowing BOMs because they are not supported. Or at least mention this topic in the documentation.\nOtherwise users (like me) are being confronted with a really confusing behavior.. I fixed it for myself using a small plugin\nhttps://gist.github.com/jflepp/fb8e46369ab88907020fbd143fa2b8b5\nThis is for sure not the best solution, but it solves my problem for now. ",
    "anasram": "Thanks, it works fine.\nAlso, I just detected that using tabs is the best way to generate concurrent lists.. I just submitted it here:\nhttps://github.com/erusev/parsedown/issues/684. > The easiest solution is to create corresponding subfolders in your content directory...\nYou're talking here about multilingual content. For this propose I already use Multi-language plugin, thanks to @TilBoerner.\nWhilst I'm talking about multilingual UI, which means multi-language support in Twig templates themselves.\n\nIn addition, you should extend your theme to provide a language selector.\nFixed strings in your theme can be replaced by simple YAML-based language files...\n\nThis is exactly what I'm talking about. Unfortunately, I'm not a PHP expert, may @TilBoerner be interested in adding such a feature to his plugin?. ",
    "ogamespec": "Nice answer.\nCan you duplicate it in picocms.org to future users?. You can close this issue.\nThanks!. ",
    "ctuxboy": "Hello @PhrozenByte ,\nThanks that you appreciate this.\nI love this awesome cms, really good work.\nIt is really 'stupidly simple' cms but sometimes a helping hand is very handy.\nThanks for the tip about adding issues on Github :)\nI'm not a pro developer, but i can helping myself with simple code (HTML, CSS, PHP, a little knowlegde of twig,...) so this cms is really nice!!! . @PhrozenByte thanks for your help!\nThe reason trying this is building a theme with a 'hidden' md-file:\n_social.md\nTrying out for show in a current page, the only way i found is this:\n{{ pages._social.meta.icon }}\nIs this the right way, for doing this?\n. Oh okay, now i understand.\nThanks a lot for your help!\nLooking in several themes; but couldn't find a good example.\nThanks a lot man :). Hi @PhrozenByte & @Lomanic ,\nI appreciate you all for this awesome support :-)\nI'm a newbie with PicoCMS but love it ;)\nTrying follow the docs, but for a beginner, sometimes, not so easy to understand.\nStep by step it succeeds to understand.\nOkay, now i do so:\n1. install PicoCMS with composer in the generated dir my_domain.be/pico-composer/ (=dev environment)\n2. copy the files from my_domain.be/pico-composer/ to the webroot my_domain.be/ (=production\nenvironment)\n3. if there is an update copy agian from the subdir to the webroot\nHope this is a good workflow for developing with PicoCMS.\n. UPDATE:\nI read the changes in the Readme.md now it's clearify.\nInstalled PicoCMS directly in the webroot using composer with success!!!!. /themes/your_theme/index.twig\nMaybe there is also a header.twig\nDepends witch theme you use.. Hello,\nI found it.\nSetting the right permissions and my first test-website with PicoCMS works well :-). Hi @PhrozenByte,\nThanks for your fast answer.\nInteresting issue (#455)\n. ",
    "loseth": "Thank you for your reply, that did the trick. \nI'm trying out the clutter theme by the way, and perhaps my stumbling blocks will show where it might be better explained for a newbie.\nFirst it was step 4 where the left side menu got mangled up, skipping that step fixed that. \nThen in step 3 what should be in the blog.twig file to begin with, this turned out to be just the same as in index.twig and blog-post.twig.\nAnd then where to insert the suggested code in blog.twig, and this should go right after this:\n<main class=\"main-content\">\n    <article class=\"article\">\n        ...\n        {{ content }}\n    </article>\nThank you again, and for the updated documentation. And yes I will definitely find some time to learn Twig!. ",
    "kc0dxf": "Yes, that package is installed but I still get the message.  . ",
    "CodeTipsy": "My menu: Home, Contact, About us, Impressum, Poducts concert in Home, Products, About us, Contact, Impressum.\nconfig.yml\npages_order_by_meta: ?\npages_order_by: ?\npages_order: ?\nWhat should I do?\nThank you.. That's exactly what I was looking for. Works great!\nMany thanks PhrozenByte.. Thank you very much for the information!\n That makes me happy.  ;o). {% for page in pages|sort_by(\"time\")|last %}\n                    {% if page.id starts with \"blog/\" and not page.hidden %}\n                        <a href=\"{{ page.url }}\">{{ page.title }}</a>\n                        <p>{{ page.date_formatted }}</p>\n                    {% endif %}\n                {% endfor %}\nThank you very much for the information.. {% for page in pages|sort_by(\"time\")|last %} {% if page.id starts with \"blog/\" and not page.hidden %} <a href=\"{{ page.url }}\">{{ page.title }}</a> <p>{{ page.date_formatted }}</p> {% endif %} {% endfor %}\nThis code is perfect for my website!\n I just wanted to say thank you for the fantastic service.\n. You see http://picocms.org/cookbook/\n. Thanks for the tip. . @media (max-width: 360px) \n{ \n    #mt { font-size: 0.7em; }\n    #ea {  font-size: 1.2em; }\n    #mql { font-size: 0.7em; }\n}\nPerfect for mobile screen.. ",
    "Nepose": "Hi :smiley: \nThe way you propose is possible, though you will have to place mail.php in assets/ folder. Any other location may cause 500 error or requesting script will return 404 error rendered by Pico. In fact, non-Pico-logic PHP should be avoided everywhere outside those assets.\nYou can also try writing your script like plugin, using Pico events. There is a getFormParameter method which gets value of particular POST variables. My idea is, for instance, to post mail to http://yourwebsite.com/mail. When loading website, your PHP will look by onRequestUrl method for URL - if it is /mail, than the form parameters will be read by getFormParameter and mail will be sent.\nOf course there is also non-PHP, but the simplest Formspree :wink: . ",
    "jchhenderson": "Thanks!\n\u2026but does that mean I cannot call the plugin directly from my .md file?  I ask because I was imagining a .md for each gallery that could use the same plugin.\nCheers,\nJames.\nOn 9 Mar 2019, at 19:33, Daniel Rudolf notifications@github.com wrote:\nShort answer: You can't. On purpose.\nAnyway, Pico comes with a very powerful plugin system to do what you want. Just create a simple Pico plugin (create plugins/PicoUberGallery.php with the following contents) and utilize a Twig function:\nphp\nclass PicoUberGallery extends AbstractPicoPlugin\n{\n    public function __construct(Pico $pico)\n    {\n        parent::__construct($pico);\n        require_once('/home/user/public_html/ubergallery/resources/UberGallery.php');\n    }\n\n<prepublic function onTwigRegistered(Twig_Environment &$twig)\n{\n    $twig->addFunction(new Twig_SimpleFunction('gallery', function ($name) {\n        return UberGallery::init()->createGallery($name);\n    }));\n}\n\n}\nYou can then use it in your Twig templates (e.g. themes/my_theme/index.twig) using:\n{{ gallery(\"2019_NZ\") }}\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/picocms/Pico/issues/489#issuecomment-471214746, or mute the thread https://github.com/notifications/unsubscribe-auth/AhCiwDi9VZ5WKobnWywOYu7G5Ib0uBLbks5vVAyfgaJpZM4bmsh7.\n. ",
    "ohnonot": "I see now that a \"hidden\" file or directory still shows up in the pages array, and can be queried e.g. for a page summary, but it cannot be accessed directly.\nHow much exactly is collected everytime the page array is built? Is it just a file listing, or does it already fill the array with all available data, metadata, parsed content...? (i'm not sure if these are purely visions for the future, or if you compare things to the current situation)\nAnyhow, thanks for the clarifications so far. At least I know where I'm at now.\nI hope things improve as my blog grows.. Thanks for the clarification.\nRelated question:\nI built a search page that paginates itself by means of the url_param function.\nAs I understand it, for each page, the search is executed again, and only the appropriate part is shown.\nIs it possible to avoid that?\nI saw some examples that made me think that this should be possible, but I'm hazy on the whole concept of POST/GET.. have you seen the search.twig I linked?\nso i enter /search?q=gnu (just an example)\nand the twig template searches the pages array for the string \"gnu\", and puts pages that match in a results array.\nbut i also implemented pagination, so the twig template shows only the first, say, 10 results, and shows a link at the bottom /search?q=gnu&p=2\nnow the way i see it, clicking on that calls the search page and its template again, and the whole search is being executed again, only this time it shows results 10 - 20.\nIs it possible to avoid that?. > That's the reason why projects like Lucene exist, implementing a search in a feature-rich but still performant manner isn't trivial. This isn't possible with pure Twig, you'll have to write a plugin. Instead of re-inventing the wheel, it's probably best do utilize projects like Lucene.\nApache Lucene? Isn't that way too much? The search is trivial, and it is already happening in a satisfactory way, all i'm asking about is pagination, and not repeating something that's been done already...\nAnyhow, my question is answered. Maybe one day I'll start making plugins.\nAnd thanks for being so active here almost single-handedly!. the non-existing URL is still shown in my URL bar, but I see index.md.\ni wish i knew how to troubleshoot this.. ^ this reveals sensitive information, be careful when using it and make sure to move it completely out of your site root when done!\nI think I solved it.\nI just found out that the same happens for special pages like /about, /contact etc.\nThis is what happens:\nthese pages don't have a template defined.\nMy index.twig (the default if no template is defined) does not have a simple content section anymore, because it just lists the most recent posts.\nDefining a different template in 404.md, contact.md etc. makes them show up properly.\nSorry for the noise; I'd been working on this very long hours and lost the overview.\nPS:\nI'd still love to get an answer to another question. I know an issue tracker is not exactly the right place for this, but since there's neither forum nor mailing list.... ",
    "auyongcheemeng": "($_SERVER['HTTPS'] != 'off' || $_SERVER['HTTPS'] != '')\nWon't the above will always be true? for:\n$_SERVER['HTTPS'] = '';\n$_SERVER['HTTPS'] = 'off';\n. "
}