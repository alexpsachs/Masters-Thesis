{
    "sapegin": "Would you mind to send me your code at artem@sapegin.ru so I could debug it?\n. Published a new version, now it should work. Let me know if you encounter any other issue.\n. Do you have something in /Users/timm/Projects/ui-toolbox/node_modules/react-styleguidist/node_modules/webpack-hot-middleware? Also try to check npm ls if something is missing.\n. Probably because it\u2019s installed as a dependency of your project.\n. Most probably it\u2019s my misunderstanding of how npm and Webpack work ;-)\nI\u2019ve changed the path to absolute because it didn\u2019t work with relative path. Do you have webpack-hot-middleware in your package.json? Which version?\n. Can we close this issue too?\n. @MaheshakaMudli Please make a demo project as described here and open a new issue.. Yeah, I think I know how to fix it.\n. Please try with 0.1.4.\n. Great to hear it!\n:shipit: \n. I\u2019ll add .jsx support but the last error is strange. Looks like Babel ignored settings in .babelrc. Would you mind sending me your code at artem@sapegin.ru so I can debug?\n. Please try 0.1.5.\n. At least is\u2019s something new ;-) I can reproduce it, so I\u2019ll try to fix it soon.\n. Should work in 0.1.7.\n. I had both of them before 0.1.7. Try to reinstall the dependencies: \nrm -rf node_modules\nnpm install\nIf it doesn\u2019t help I\u2019ll need some code to debug because I can\u2019t reproduce these errors anymore.\n. Works with this config:\nmodule.exports = {\n    title: 'React Components',\n    rootDir: './frontend',\n    components: 'src/js/components/icon/*.jsx',\n    styleguideDir: './docs-react'\n};\nrootDir shoudn\u2019t point to the project root with node_modules etc. It drives Webpack mad when it tries to compile stuff inside node_modules. I should clarify in the docs and improve config validation.\n. I\u2019m glad to hear it ;-)\n. @mik01aj could you please move this to a new issue? I\u2019ll look at it.\n. Sure, I forget to add .jsx extension.\n. You can do something like this but I\u2019ll add .jsx support soon.\n. Nice, didn\u2019t know about that!\n. That\u2019s even better. Can you make a PR for that?\n. (Actually you can commit directly to the repo now ;\u2013)\n. @panayi Yeah, pull request for that would be very helpful.\n. Not sure the second options has any benefits but it\u2019s much more complicated.\nincludeOnlyComponentsWithExampleFile \u2192\u00a0skipComponentsWithoutReadme?\n. @mik01aj good point, I didn\u2019t think about that.\n. We should document ignoring. I think we can add a section like Recipes for such things. So I\u2019ll leave it open for now ;-)\n. There\u2019s an option to do that \u2014 skipComponentsWithoutExample ;-)\n. It also might be difficult to implement. And I\u2019d like to have a style guide config as isolated from the code as possible.\n. I\u2019ve added to the FAQ how to ignore components using the components option.\nI\u2019m closing this for now. Feel free to submit a pull request if you need a simpler way to ignore components.\n. Thanks for your comments! Pull request or an issue with any ideas on how to better implement each of these would be very cool. \n. Thank you very much, I appreciate any help. If you need to discuss something feel free to contact me.\n. And for the first item I think it\u2019s already there.\n. I already pass the title from config to React so it\u2019s easy to extend this to other options (or the whole config).\n. @onemanstartup Not a plan but a wish ;-) Pull request are very welcome.\n. @psachs21 That could be useful but I have no idea how to implement it in a good way.\n. @psachs21 Probably we can specify a module with the custom StyleGuide component, require it in src/index.js and render instead of the standard one. Not sure if it works ;-)\n. @psachs21 Not sure it\u2019s a good idea. I\u2019ll look at your fork later, maybe I\u2019ll came up with something.\n. @jeroenverfallie There are three loaders but it\u2019s a good idea, I thought about that.\n. I\u2019ve tried another approach to extending style guide and it could be enough for some use cases. In my case it was react-intl integration. I\u2019ve added two container components StyleGuide and Wrapper where you can inject your code using Webpack\u2019s aliases.\nstyleguide.config.js:\njs\nwebpackConfig.resolve.alias['components/Wrapper'] = path.join(__dirname, 'lib/styleguide/Wrapper');\nlib/styleguide/Wrapper.js:\n``` js\nimport React, { PropTypes } from 'react';\nimport { IntlProvider } from 'react-intl';\nexport default React.createClass({\n    displayName: 'Wrapper',\n    propTypes: {\n        children: PropTypes.node.isRequired\n    },\nrender() {\n    return (\n        <IntlProvider locale=\"en\">\n            {this.props.children}\n        </IntlProvider>\n    );\n}\n\n});\n```\n. I can\u2019t reproduce it:\n\nMaybe there are some other fields like defaultProps\u2026\n. I don\u2019t know what react-docgen is returning for your component. If you show me the full component code, I could debug it.\n. Thanks! The feature itself is fine ;-)\n. :+1: \n. Awesome, thanks!\n. Great, thanks!\n. https://github.com/FormidableLabs/component-playground/blob/master/src/components/preview.jsx\n. Coooool, thanks!\n. Did you try babel-plugin-react-display-name?\n. Looks like I should remove this from the Styleguidist because I have an error:\n```\nERROR in ./lib/styleguide/setup.js\nModule build failed: ReferenceError: The plugin \"react.displayName\" collides with another of the same name\n    at PluginManager.validate (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/plugin-manager.js:159:13)\n    at PluginManager.add (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/plugin-manager.js:213:10)\n    at File.buildTransformers (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/index.js:237:21)\n    at new File (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/index.js:139:10)\n    at Pipeline.transform (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/pipeline.js:164:16)\n    at transpile (/Users/sapegin/izumi/kao/node_modules/babel-loader/index.js:12:22)\n    at Object.module.exports (/Users/sapegin/izumi/kao/node_modules/babel-loader/index.js:69:12)\n @ multi main\nERROR in ./~/react-styleguidist/src/index.js\nModule build failed: ReferenceError: The plugin \"react.displayName\" collides with another of the same name\n    at PluginManager.validate (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/plugin-manager.js:159:13)\n    at PluginManager.add (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/plugin-manager.js:213:10)\n    at File.buildTransformers (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/index.js:237:21)\n    at new File (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/file/index.js:139:10)\n    at Pipeline.transform (/Users/sapegin/izumi/kao/node_modules/babel-core/lib/transformation/pipeline.js:164:16)\n    at transpile (/Users/sapegin/izumi/kao/node_modules/babel-loader/index.js:12:22)\n    at Object.module.exports (/Users/sapegin/izumi/kao/node_modules/babel-loader/index.js:69:12)\n @ multi main\n```\nLooks like we don\u2019t need to require this plugin because it already a dependency of babel-core 5.8 and babel-preset-react (for Babel 6).\n. Looks like it doesn\u2019t help much :-(\n\n. I\u2019ve tried these, all of them don\u2019t work:\n- https://github.com/timbur/codemirror-jsx/blob/master/jsx.js\n- https://github.com/rarous/brackets-jsx/blob/master/main.js\n- https://gist.github.com/jquense/265b46c740da4d20a718\n- https://github.com/codemirror/CodeMirror/pull/3605\n. The best I could achieve so far:\n\n. They highlight most of the JSX in one color:\n\nBut we can apply the same hack with hiding error.\n. I\u2019m closing it until CodeMirror has proper support. \n. @petetnt Cooooooool! Thanks!\n. What file?\n. Should be better after 1d819cdb16ace614fdd1c26aa5397875eb512583.\n. Done in 1.0.0.\n. Just checked: everything is working for me.\n. What\u2019s more important is that it\u2019s invalid Markdown ;-) \nBut this commonmark looks very promising, I\u2019ll try it.\n. Right now HTML is disabled in Markdown, not sure if we need to enable it.\n. Then I\u2019ll close this.\n. That would be very nice because now it\u2019s hard to understand.\n. I think it\u2019s much better ;-)\n. Cool! I\u2019ll add Mocha soon.\n. Mocha is here!\n. Cool, thanks!\nAbout tests:\n1. Complex regexps could be tested. It probably means extracting extracting them to utils.\n2. I thinks we can test that loader returns valid JavaScript (try to compile it with Babel?).\n. Or you can just export these function from the loader and use them in tests.\n. Cool! And a simpler way is always better ;-)\n. Cooooool!\n. Thank you very much!\n:shipit: \n. Cool, thanks!\n. Could you please fix this and I\u2019ll merge it?\n. Whitespace is good ;-) But I like your changes.\n. That\u2019s because your editor do not use EditorConfig ;-) I hate this feature of Markdown actually but I\u2019ll revert my changes and change EditorConfig settings.\n. Much better ;-)\n. We have 21 and I already started thinking about that too ;-) \nI like how it\u2019s done in Bootstrap. I think we don\u2019t need nesting for the first version, it could be just a list of components with position:fixed with or without scrolling spy.\n. I also like a search field like here.\n. I don\u2019t really understand why we need meta data support for that.\n. Of course it could be useful for other things like grouping.\n. @mik01aj Agree on both of your points ;-) I\u2019m trying to reduce the number of open bugs now, so can\u2019t start right now too.\n. Great!\n. It\u2019s definitely enough for the first version because it\u2019s million times more useful that the navigation we have now ;-)\n. There are infinite number of possibilities unfortunately (for tools developers)\nAll your points are good though ;-)\n. Looks like this is already done in basic form.\n. Nice! Do we really need this \u201cdefined in\u201d? I think just path is enough.\n. Bigger margins: +1.\nBold headers: \u20131 ;-)\nIt\u2019d be nice to make styleguide themable though.\n. Almost ;-) Why do you need margin-top instead of margin-bottom?\n. But it\u2019s the same as margin-bottom on the header.\n. <header>\n  <h2/>\n  <div>description</div>\n</header>\n.header {\n  margin-bottom: 1rem;\n}\n. Yes, about the same thing. The problem is: you introduced margin-top, which, I believe should (and can) be avoided.\n. Cool, thanks!\n. There are two bugs: \n1. Bug in Markdown that puts paragraphs.\n2. Bug in Styleguidist that do not have proper styles for bullets. \nThe latter should be fixed now. So I\u2019m closing this issue \u2014\u00a0the former bug will be fixed (hopefully) after some future Marked update.\n. That\u2019s useful but right now I have no idea how to implement that.\n. Few things:\n1. Do we need to mix components and plain documents in one section?\n2. Do we need to \u201clink\u201d to particular components instead of folders of components?\nIt could be something like this:\ntoc: [\n  {title: 'Overview', docs: 'some/path/README.md'},\n  {title: 'Components', components: 'path/to/components'},\n  {title: 'Big Important Section', docs: [\n    // ...\n  ]},\n],\ncomponents: function(config, glob, folder) {\n  return glob.sync(config.rootDir + '/' + folder + '/**/*.js').filter(function(module) {\n      return /\\/[A-Z][a-z]*\\.js$/.test(module);\n  });\n},\ntoc\u00a0config option and folder\u00a0attribute are optional (so it backwards compatible).\n. It\u2019s implemented in a basic form.\n. I don\u2019t want to have two sets of classes. But we can add add many classes as needed, we don\u2019t have to use all of them internally ;-)\n. I\u2019ve implemented the second approach and also did some significant refactoring of styles. I hope it\u2019s better now.\nNow you should be able to customize Styleguide like this:\ncss\n.ReactStyleGuidist-colors__base {\n  color: #f0f;\n}\n.ReactStyleGuidist-common__font {\n  font-family: \"Comic Sans\";\n}\nAnd the add this CSS file as an entry point in Webpack config.\nUnfortunately it doesn\u2019t work for Markdown styles because composition in CSS modules works only with local classes.\n. No reason, we can change it ;-)\n. The next thing is better Markdown rendering. Would be nice to have CSS classes for everything in Markdown instead of using cascade and global classes.\n. It wasn\u2019t easy. I hope I didn\u2019t make it worse ;-|\n. Good, I\u2019ll try it on my project on Monday.\n. Or we can just append component path to key.\n. Yeah, I think so.\n. Not sure I can help you much with this. And I agree that it\u2019s not in the scope of this project. But if you need the examples loader I can extract it to a separate package.\n. @mik01aj You have push access ;-) I\u2019ll make a new release.\n. That\u2019s difficult but important task. But I\u2019m still not sure about the best (or at least good) way to solve it. \nPassing the config (not just a file path) explicitly would be the best but seems impossible with loaders. But we can start with just a file name, it\u2019s better than nothing anyway.\n. Better than nothing, don\u2019t know how to improve it ;-)\n. Cool! I\u2019d suggest to close it now until anyone wants more.\n. I\u2019m working on Node API and thinking about removing this hack. But I want to preserve functionality you need. Check #183 for details.\n. Of course it does it. But I don\u2019t understand how you run styleguidist. Did you install it globally?\nWorks fine for me:\n```\n~/example\n\u276f npm i -D react react-dom react-styleguidist\n~/example\n\u276f ./node_modules/.bin/styleguidist build\nBuilding style guide...\n```\n. Never tried that and not sure it works. Actually I don\u2018t see any reason to do it :-)\n. Right now it says:\n\nThese commands supposed to be placed in package.json scripts (see Installation section above). If you want to run them from command line do it like this: ./node_modules/.bin/styleguidist.\n\nIf you see any value in working global installation and can fix it I\u2019ll be happy to merge a PR.\n. Please never put React as a dependency. It should be peer dependency as I just did at 3275603a59b4d629155ae9e449bd06a845578a40.\n. That\u2019s fine. Peer dependencies are responsibility of the package user. npm will tell you if they are missed.\n. > Any ideas on what needs to be done?\nThat\u2019s what I wanted to ask you :-| No ideas right now.\n. react-docgen do not export any information about the component object. I think we can add a custom resolver function to the config. Like this:\njs\nresolveComponent = function(filepath) {\n    return 'require(' + JSON.stringify(filepath) + ').otherKey';\n}\nAny better ideas?\n. Yeah, that might work.\n. @stinoga I think ignoring such components is the only way now.\n. @TigerC10 If you or anyone could submit a pull request to fix that it would be very cool.\n. Please test in 4.0.0, it might be fixed.\n. Closing this for now. Feel free to reopen if you still have this issue.\n. @albermav I can reproduce it but have no idea why it doesn\u2019t work. react-docgen can\u2019t detect the right component for some reason.\n/cc @mxstbr Could you please help with this us?. @mxstbr Awesome, it works! I\u2019ve added an example to the FAQ so people could google it. Thank you very much!. @jameslaneconkling This looks like a bug in react-docgen.. Cooool, thanks!\n. :+1: \n. We can throw an error and suggest to ignore the component. \n. I\u2019ve added an example component that uses require(). Could you add this docs to the Readme?\n. No worries ;-) I\u2019m going to release 1.3 soon (I hope before my vacation that star), so I\u2019m trying to add missing docs before that.\nBTW, will you have time for #28 soon? I\u2019d like to have it in 1.4.\n. Thanks, I already have a sticky sidebar, so I can just copypaste an actual TOC code from your commit ;-)\n. @mik01aj Are you working on it already?\n. I think I should use something like react-styleguidist/components instead.\n. @mik01aj I couldn\u2019t make aliases work with relative paths. For components overriding.\n. I\u2019ve added a todo of things that can be done.\nOverriding particular components is already possible but not documented.\n. Changing entry file is also possible via Webpack config but is a bit complicated. Something like that:\njs\nupdateWebpackConfig: function(webpackConfig, env) {\n  if (env === 'production') {\n    webpackConfig.entry[0] = 'newentryfile';\n  }\n  else {\n    webpackConfig.entry[1] = 'newentryfile';\n  }\n  return webpackConfig;\n}\n. Looks like we have the first and the last.\n. The most important things are done, feel free to submit pull request for everything else you might need.\n. Thanks, I\u2019ll do that. Pull request would be even better ;-)\n. @mik01aj Would be nice to see your styleguide. Ours is quite simple so far.\n. @mik01aj :+1: :shipit: \n. I was trying to find a simpler way to do what you want but couldn\u2019t so I\u2019ve added state to examples:\n\nI\u2019ll add an example and docs later.\n. Yes. I\u2019m not sure whether we need a way to define the default state and how to do that. Right now you can do something like this:\njs\n'prop' in state || setState({prop: 42});\n. :+1: \n. In the next few days.\n. @sunesimonsen It\u2019s here! ;-)\n. Thanks!\n. Great idea especially if the have a single line descriptions not just links. There\u2019s also a Source-compatible fork for the Styleguidist \u2014\u00a0https://github.com/sourcejs/sourcejs-react-styleguidist.\n. Coooool!\n. @mik01aj I\u2019ve added a FAQ (merged your two questions in one) and a list of similar projects. Would cool if you could proofread it.\n. Sorry it wasn\u2019t obvious ;-|\n. I\u2019ve just noticed that lodash is available in examples. Worth noting that somewhere in the Readme.\n. Looks like Travis has some problems. Don\u2019t know how to restart the job.\n. I know ;-)\n. Thanks for your contributions! \n. Styleguidist styles isolation is related to theming and I don\u2019t have a good solution yet.\n. And I removed sanitize.css ;-)\n. So you want to be able to use (kind of) Readme.jsx instead of Readme.md\u00a0for some components? It\u2019s not possible but you can use require() in examples so you can share code between examples, etc.\nBut it would be nice to be able to store particular examples in files. \n. Now examples can have a state. Will it solve your issue?\n. That\u2019s how it works now. \n. I should try to do it, or you can try if you have time ;-)\n. @mik01aj @zammer Could you try it?\n. @MoOx If you can try what @mik01aj suggests above and send us a pull request that would be awesome.\n. Fixed in #134.\n. @panayi Interesting, thanks! Could you point me to some examples of this technique ~~where I could steal the code~~?\n. @panayi Thanks, I\u2019ll try to make something ;-)\n. No, and I\u2019d like to have some code to debug it. Could you send me something at artem@sapegin.ru?\n. What npm version do you use?\n. #59 was fixed, can we close this one too?\n. Closing this for now. Feel free to reopen if you still have this issue.\n. Yeah, you\u2019re right probably :-)\n. Writing an issue right now ;-)\n. It is minimal ;-) But we need to include\u00a0only the necessary folders. \nBut more difficult question: should we enable JS loader for project\u2019s code by default?\n. 2.0.0 should fix all this problems.\n. Closing this for now. Feel free to reopen if you still have this issue.\n. Yeah, it\u2019s not cool to ask users to do that ;-)\n. Other solution could be (in make-webpack-config.js):\njs\nprocess.env.BABEL_ENV = 'styleguidist';\n. @mik01aj Thanks for the investigation, I\u2019ll try it soon.\n. It\u2019d be cool if you try. \n. CSS loader was enabled for your components folder by mistake :-) I\u2019ll fix that in the next release. \n. extract-text-webpack-plugin was removed some time ago ;-)\n. I\u2019m closing this issue because that\u2019s what we plan to do in the future, see #64 for details. And pull requests are welcome ;-) \n. 1. It\u2019s explained here. \n2. Good idea.\n. I\u2019ll try to add [\"react-transform:after\"]. babel-plugin-react-display-name\u00a0is loaded from babel-core.\n. Don\u2019t know. Can anyone try to update to Babel 6 and check and/or send PR?\n. Please try 2.0.0-rc with Babel 6.\n. Feel free to reopen if you still have this issue.\n(2.0.0-rc4) also have a fallback to file name or folder name if it can\u2019t detect component name in runtime.)\n. .babelrc should be used now (now way to disable it as far as I know).\nBut using webpack.config.js is more complicated and I\u2019m not sure we should do it. I\u2019m afraid it will cause more problems than fixes.\n. @okonet What do you mean by \u201cproject-related webpack.config\u201d? How can we find it?\n. @okonet The problem is: it can be anywhere and it can be anything. So it\u2019s the wrong way to assume particular project structure. It\u2019s better to have an easy way to import and extend project\u2019s Webpack config.\nMaybe we can do something like that (this can be the default implementation):\njs\nloadWebpackConfig: function(env) {\n  return require('webpack.config' + env);\n}\nThen we\u2019ll extend this config using webpack-merge (see Smart Merging of Loaders section) with Styleguidist specific setup.\n. > IMO just a path or a resolved path would suffice\nMaybe. But it should be a function anyway like:\njs\nresolveWebpackConfig: function(env) {\n  return './webpack.config' + env);\n}\n\nI don't think that it's just loaders section.\n\nIt\u2019s not just loaders section, webpack-merge merges everything. Merging of other sections just doesn\u2019t require magic.\n\nOne thought I recently had is to convert styleguidist configuration to a webpack plugin which will then added to a user's webpack config.\n\nNot sure I understand 8-) Can you show it?\n. @torvalde You\u2019ll be able to use updateWebpackConfig but there will be no default loaders for project\u2019s code.\n. Not sure about peerDependencies because it\u2019s not just Webpack and Babel but:\n\"babel-core\": \"6.5.1\",\n    \"babel-loader\": \"6.2.2\",\n    \"babel-preset-es2015\": \"6.5.0\",\n    \"babel-preset-react\": \"6.5.0\",\n    \"babel-preset-react-hmre\": \"1.1.0\",\n    \"babel-preset-stage-0\": \"6.5.0\",\n    \"babel-runtime\": \"6.5.0\",\n    \"babel-standalone\": \"6.4.4\",\n    \"webpack\": \"1.12.13\",\nAnd also loaders. Should we move everything?\n. Anyway it\u2019s not possible (as far as I know) to work with different major versions of Babel or Webpack so peerDependencies looks like over-complication.\n. Yep, that\u2019s the best solution I think.\n. 2.0.0-rc4 includes most of the planned changes. Please test it and leave feedback.\n/cc @torvalde @mik01aj @oliverturner @okonet\n. 2.0.0-rc6 is out. I do not plan any changes except possible bug fixes and going to release 2.0.0 on Monday. I need to update the docs though.\n. 2.0.0 is out.\n:shipit: :shipit: :shipit: \n. > Styleguidist uses Babel 6\nYes.\n\nthe dependency will be installed automatically\n\nYes.\n\nIf I want to use Styleguidist, my project must use Babel 6\n\nYes.\n\nWhat if I don't use babel at all?\n\nNo problem, but you should configure proper Webpack loaders for your project.\n\nWhat if I have Babel 5?\n\nUpgrade to Babel 6 or use Styleguidst 1.x.\nIf you can improve the docs, please do it ;-)\n. Will moving Babel to peerDependencies helps here?\n. Isolation is definitely better as much as possible. I\u2019m not sure we can use totally independent version of Babel but it would be the best option.\n. 2.0.0-rc uses Babel 6. I\u2019m closing this for now, feel free to reopen if you still have issues or have ideas how to make it better.\n. That\u2019s much better, thanks!\n. Looks like you\u2019ve committed it to the same branch as #66.\n. Could you try it please?\n. Not sure. The only thing we can do is to update dependencies.\n. Do you still have that?\n. Feel free to reopen if you still have this issue.\n. You can change it via updateWebpackConfig or I miss something? Not sure that such options in the config will be good because there are so many thing that can be changed in the Webpack config ;-)\n. Probably it was introduced after moving to MarkdownIt.\n. Then it\u2019s somewhere in the examples loader.\n. There is a chance but pull request will make it 100% ;-)\n. Even if I enable html in MarkdownIt and rules for that it\u2019s displayed as regular text probably because of this.\n. Yep! So I\u2019d like to close it for now and suggest using fenced blocks to separate code blocks.\n. Can you share your style guide config?\n. Strange, it should work. It would be nice to have some code to debug.\n. What version of Babel do you use?\n. Styleguidist still uses Babel 5, so it\u2019s not a problem I think.\n. I assume that this is a config of your project and you don\u2019t use it for the style guide?\nCould you also try to run Styleguidist in verbose mode:\nnode_modules/.bin/styleguidist server --verbose\nand copy the output?\n. Looks fine. My only guess is some missing npm packages.\nTry to run npm ls (it should show if anything is missing), and then rm -rf node_modules; npm cache clean; npm install.\n. Any missing packages (like \u00abnpm ERR! missing\u2026\u00bb) is not OK.\n. Please try 2.0.0. It has many breaking changes but should fix such problems. Or at least make things more explicit.\n/cc @kgoggin @jardakotesovec\n. Closing this for now. Feel free to reopen if you still have this issue.\n. @ericmuyser test: /\\.js?$/, means .js or .j, you need .jsx?.\n. @ericmuyser resolve.extensions is for requiring modules without extension, but loader test fails it won\u2019t be transpiled. That\u2019s why you have \u201cUnexpected token\u201d instead of module not found.\n. @crvst Is in your own code or Styleguidist? For static you need transform-class-properties Babel plugin from preset-stage-1.\n. Styleguidist don't support webpack 1 in any case.. \n. @n1313 It should be supported according to the source: https://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Props/PropsRenderer.js#L81-L85\nIf not it\u2019s a bug most probably.. Can you share some code that I can debug?\n. Please try 2.0.0-rc3.\n. I don\u2019t understand how it\u2019s differ from the Wrapper component.\n. Pull request are welcome.\n. Please try 2.0.0-rc.\n. redbox is cool ;-) But probably we can do something with this error.\n. @mik01aj It\u2019d be cool if you can do it ;-)\n. I can\u2019t answer until they add readme and license.\n. If someone could submit a fix I\u2019ll be very happy ;-)\n. Looks like it\u2019s safe to merge now, isn\u2019t it?\n. Thanks!\n. Babel 6 update is very welcome but I can\u2019t merge this PR because it contains too many changes and many of them are code style like changes I can\u2019t agree with.\nCould you please extract Babel 6 update into a separate PR?\n. :+1: \n. That\u2019s great, thank you very much!\nThe only thing I\u2019d like to change is Lodash imports: I prefer import func from 'lodash/func' style (for tests just _ is fine).\n. Modules, not packages. And now it\u2019s very simple (in 3.x we had to write lodash/groupname/func, now it\u2019s just lodash/func. I thinks it\u2019s easier to maintain (you have to install just one lodash package) and only the required modules will be bundled by Webpack (so it\u2019s as efficient as using multiple packages).\n. Could you please share your Styleguidist config and styleguidist server --verbose output?\n. Could you try 2.0.0-rc3? It\u2019s possible the we have a fix for that:\n\nServe root directory as static in dev-server (so you can access any files inside the root directory).\n. Yeah, it should be because of Babel 5. Not sure we can detect it and show a meaningful warning.\n. Feel free to reopen if you have issues in the future.\n. Good idea. But I don\u2019t like this Lodash plugin, I think just importing modules as lodash-es/func is enough.\n. @oliverturner Do you want to make a PR for that?\n. @oliverturner Ping ;-) Do we still want it?\n. @oliverturner Feel free to reopen or send a pull request ;-|\n. I didn\u2019t see this on the demo page or in my project. Probably it\u2019s a conflict with your project\u2019s code so I\u2019d like you to help me debug it.\n\nAlso: which version of react-styleguidist do you use?\n. Looks like Uglify removes it for some reason.\n. Can you share your component definition? I can\u2019t reproduce it.\n. Not sure about filename but if it works for unminified version I could try to disable name mangling in UglifyJS.\n. Hm, mangling is already disabled.\n. The only way I can reproduce it is export default function(...) but it doesn\u2019t work in dev-server too.\n. @stepankuzmin Works fine for me, except this warning:\nEnvironmentPlugin - MAPBOX_ACCESS_TOKEN environment variable is undefined.\nYou can pass an object with default values to suppress this warning.\nPlease open a new issue, most likely it\u2019s not related to this one.\n\nI've tried to pass NODE_ENV=development on building, but this had no effect.\n\nVery good, you should not make a production build with development ;-). @stepankuzmin I\u2019d better fix a bug if there is one ;-) But I can\u2019t even reproduce it in your repo. Do I need access token to reproduce the issue?\n\nPlease open a new issue, most likely it\u2019s not related to this one.. Yeah, I\u2019m going to disable reading user\u2019s .babelrc files as suggested here.\n. Maybe autogrowing height of CodeMirror is the reason?\n. We can make editors collapsed by default.\n. Then we\u2019ll have to highlight it and pray that it want jump too much on enabling ;-)\n. It\u2019s fast because they do not show editors by default.\n\nBut there are three things we can do:\n1. Make editors collapsible, good to have anyway.\n2. Improve performance, alway good to do.\n3. Activate editors on click, only if there\u2019s an easy way to do it.\n@operatino They do exactly the same thing: show bunch of React components on a single page, they just hide editors.\n. It\u2019s much bigger feature: grouping components + table of contents + something else :-)\n. @operatino That would be cool!\n. Yes, with an option to change default visibility. But I\u2019m not sure about the default value.\n. @MoOx That\u2019s why we have a \u201chelp wanted\u201d label here.\n. Looks like we need another example to show this customizations. Otherwise people will this that all this files you\u2019ve added to example are required.\nI like the implementation and most of my comment below are about code style.\n. Yep, move all your example to a new folder and revert basic example from master. And probably move them to examples/basic and examples/customised folders. \n. I also think that it\u2019d be good to have a complex example in a separate repository. Something more realistic: maybe an existing project like React Bootstrap.\n. Yep!\n. Most probably some of my latest changes. I\u2019ll merge it manually after 2.0 release.\n. You can update the docs and squash everything ;-)\n. Would be cool!\n. I\u2019ll merge it manually later ;-)\n. Squashed and merged: 0ff2b2f93dffe30046d8c20c819bf9aeb28b209e.\n. Any plans to finish the feature (add renderers to other components, update docs)?\n. Cool! What was the talk? Slides, video? :-)\n. That\u2019s true, and not only for new sometimes ;-)\n. Mocha use it.\n. If we can avoid acronyms we should ;-)\n. @oliverturner I like the idea but I don\u2019t like wiki ;-) Maybe docs\u00a0folder with markdown files would be better.\n. Maybe later \ud83d\ude34\n. Just two comments from me, otherwise I really like this. Thanks @karlbright!\n. Cool, thanks! The only problem is now it\u2019s shifted to the left side of the window which looks terrible on a big screen:\n\n. How about something like this?\n\nSidebar is on the left but the main area is centered. I also like the style guide title inside the sidebar.\n. Nice!\n. I did this once too ;-)\n. Didn\u2019t check but should work ;-)\n. And thanks for the PR @zammer!\n. I\u2019ll tweak it a bit later. Congrats with the first pull request!\n:confetti_ball: :confetti_ball: :confetti_ball: :confetti_ball: :confetti_ball: \n. Yeah, I need to do it. And maybe make a tiny (~1 minute) screencast or something.\n. How about this? :-)\nhttps://github.com/styleguidist/react-styleguidist/blob/next/Readme.md. I can increase the delay between frames. Or add more frames but it will make the file bigger.. @mik01aj Now? \ud83d\ude0a . OK, I\u2019ll try again later. Thanks for feedback!. Reading is hard 8-)\n. Not sure about one page per component but routing is definitely a good thing to have because we want to add components grouping (by tag or function or whatever) and ability to add random Markdown and HTML documents to style guide.\nAlso check this issues: #31, #12.\n. There is very basic routing implementation and ability to open a component in a separate page now. Feel free to open a separate issue or submit a pull request if you want something more specific.\n. @mik01aj I\u2019ve added links yesterday but the UI is not the best. But better than nothing because I always forget this #!/Button.\n. \n. It says unknown option stage. Which Babel version do you use?\n. For Babel 6 you need to use presets.\n. If you use include you won't need exclude. Why it tries to read anything in node_modules?\n. It doesn\u2019t matter which version of Babel markdown-react-js uses because styleguidist uses transpiled files. But they shouldn\u2019t publish .babelrc to npm I think.\n. It\u2019s valid but not very useful. But include: __dirname in readme is a mistake, I\u2019ll fix it ;-) It should be 'src/' + __dirname\n. Yeah, include is more explicit.\n. > Any thought on that? \nInstead of fixing it\u2019ll break style guide even more ;-) I also don\u2019t understand why do you load JavaScript with JSON loader.\nWhat version of react-styleguidist do you use? Can you show your style guide config? \n. @mik01aj Maybe we can show more warnings?\nI think we can also use webpack-validator but right now it\u2019s very basic.\n. Could you show a screenshot?\n. Maybe?\n\n. Cool, thanks!\n. I think that\u2019s because you have src in modulesDirectories. So any require('codemirror') will try to load src/codemirror.js first. Try to use absolute path.\n. > My project already relies on moduleDirectories\nYou really shouldn\u2019t rely on hacks like this ;-)\n. It is a hack because you\u2019re just creating problems for yourself and anyone who will support your code later. In your case you should use alias. Anyway this issue isn\u2019t related to React Styleguidist.\n. Very cool, thanks!\nCould you please update the readme too: https://github.com/sapegin/react-styleguidist#writing-code-examples\n. +1 for unit tests.\n. Closing it for now. Feel free to reopen with tests.\n. Does it work with the default theme?\n. Strange, it works fine for everybody else.\n. @mik01aj But it works on the example page.\n. It is. Does it generate classes for highlighting?\n\n. It maybe because Webpack applies CSS snippets in unpredictable order. Have no other explanation now.\n. @mik01aj Could you fix that? Because I can\u2019t reproduce it.\n. I\u2019ve updated CodeMirror and now we\u2019re using its own JSX mode. Feel free to reopen if you still experience this issue.\n. Just had the same issue after upgrading Styleguidist in my project. Fixed by removing node_modules\u00a0folder and reinstalling dependencies ;-). Finally I was able to really investigate and fix this issue: https://github.com/styleguidist/react-styleguidist/issues/611. Thanks! Could you please update the docs as well?\n. Should I merge this too?\n. I\u2019m not sure it\u2019s possible because we have a lot of stuff in Webpack loaders. It might work with a lot of copy-pasting from Styleguidist to your app so you can use components from Styleguidist but I\u2019m not sure it\u2019s worth it.\n. Maybe better solution is just to publish it as a static page and have a link in your app. And use Styleguidist server to develop new components.\n. Yeah, and I\u2019ll be happy to merge such pull request ;-)\n. That\u2019s very cool! Thank you very much. Just a few questions:\n1. Can we also use HTML files as a content? \n2. Is it renders everything on a single page? No routing?\n. > No worries. Do you have any thoughts on how you're wire in using HTML files for content? I'm just forwarding them straight into the examples loader, so we're inheriting whatever capabilities it has there.\nWe could figure it out later. But it could work as is for most of HTML files I think.\n\nI didn't want to make this PR too huge!\n\nSure ;-)\n. Thank you very much!\n. Thanks!\nCan we reuse someting from this file?\n. Sorry, didn\u2019t notice it.\n. I have no problems with Sass on my work project. Will check the config tomorrow.\nOne question: do you import\u00a0your SCSS files in your components?\n. You can add CSS bundle to Webpack entries list but hot reload for CSS will not work.\nOr you can import root SCSS file somewhere from your JavaScript.\n. That would be awesome, the docs are far from great now ;-)\n. Closing it for now. Feel free to send pull request to improve the docs.\n. Yeah, looks like we shouldn\u2019t use name alone as a key. Could you please submit a pull request with a fix?\n. Using indexes as keys are not good thing but there\u2019s no other choice here.\n. Yeah, we should write more tests ;-)\n. Better both. But I agree at least comment is necessary.\n. Not sure I understand what do you need. Could you explain your use case?\n. Looks like it\u2019s out of scope of the Styleguidist.\n. I\u2019m going to close it because it\u2019s out of the scope of the Styleguidist and you already have a working solution. \n. > so shouldn't affect general public.\nDon\u2019t forget about maintaining this code and docs. Every new feature makes code and docs harder to understand and modify. And every new feature we\u2019d add later should take this one into account in order not to break it.\nSo if you can make an external library for that it would be great. If you need some hooks and API in Styleguidist for that \u2014 we could add it it think.\n. Can you show an example? Might work.\n. Looks good for me.\n. I agree that a new option is not good.\n. Does it mean that we can close #37 and this PR?\n. It would be nice if you or anyone could check that because I don\u2019t use Flow anywhere.\n. What doesn\u2019t work now? For babel-preset-react-hmre it\u2019s just a devDependency so it doesn\u2019t matter.\nP. S. Would be great if you send a pull request to react-codemirror.\n. We can update babel-preset-react-hmre right now, they don\u2019t have React in peer dependencies anymore: https://github.com/danmartinez101/babel-preset-react-hmre/commit/73924d08da9d553b03505867357ac0d868563936\n. @JedWatson Thanks!\n. @albertfdp Done in #128.\n. Thanks!\n. Please also check Travis log.\n. But how would you check for required sections or components? (Not sure it\u2019s necessary.)\nAnd in you current implementation you can use only sections or components, not both. (No sure it\u2019s critical or bad.)\n. Thanks @karlbright @paulj!\n. How is it better than styleguidist build?\n. I don\u2019t ;-) But feel free to submit a pull request if it\u2019s not very complicated to implement.\n. @okonet Awesome! Unfortunately I have no experience with static rendering.. Stateless components work if you define them like this:\njs\nexport default function Button() {}\n. Thank you very much! This is really great and useful feature.\nThe only question I have is configuration:\n1. Should it be optional or how @mik01aj suggests with an icon (probably shown on hover)?\n2. Switch to disable default behavior with all components on the same page? So links in the sidebar will switch different single-component pages.\n. Yep, for development mode. But there is a use case when you want to have each component at a separate page in a style guide build.\n. +1 for reducing the scope of this PR.\n. I also already have scrolling so highlighting will not work well. And in your case RandomButton should be also highlighted which leads to a problem: how can I show just Button?\nSo I thinks both are useful:\n1. Dynamic filtering: filter lists, filter components, update URL.\n2. Link to show just one component.\n\nperhaps with a \"show all components\" link at the bottom of the list to clear it.\n\nOr just a clear button inside a search field.\n\nHow about an \"exact match\" checkbox under the search field?\n\nFor me it\u2019s more like trying to fix bad UI with more UI ;-)\n. Is it ready for merge as a base for other PRs? \n. I need to check out the branch and play with it a little. There are quite a lot of changes.\n. Sorry for the delay, I was at React Amsterdam this weekend ;-)\n1. Do we really need Immutable for just one feature?\n2. Instead of double click I\u2019d prefer an icon (probably on hover).\n3. Can just not render hidden components instead of setting display: none?\nMore on the UI. I think filtering and isolated mode are separate things with separate use cases and we should not mix them together. Filtering works fine, we just (probably) need to update the URL.\nIsolated mode should be clear. For example we could hide a search field and show a link like \u201cShow all 352 components\u201d like @mik01aj suggests. The same link would be useful for filter too.\n. Thank you very much anyway!\n. You can install main project dependencies:\ncd ..\nnpm install\nBut it\u2019d be nice to make examples independent too. \n~~If you have time please submit a pull request.~~ Just did it in aca5ae472b8d1dfc67dbe7cf08f79e2ccd551431 ;-)\n. Looks like react-docgen don\u2019t support TypeScript: https://github.com/reactjs/react-docgen/issues/67\n. I thinks it\u2019s because react-docgen don\u2019t analyze imports and it couldn\u2019t find a component in your file because there\u2019s no component in this file.\n. Try to ask in react-docgen repo.\n. The new version is of course in the repo. Actually there are quite a lot of changes since the last release and I\u2019m not sure which causes a regression: https://github.com/sapegin/react-styleguidist/commits/master/loaders/props.loader.js\n. >  Actually there are quite a lot of changes since the last release and I\u2019m not sure which causes a regression: https://github.com/sapegin/react-styleguidist/commits/master/loaders/props.loader.js\n. Feel free to send a pull request with a fix.\n. @operatino Yep ;-)\n. @ndelangen Cool, thanks!\n. @mik01aj Awesome!\n. Rumble Charts, React components for building composable and flexible charts.\n\n/cc @rosko\n. @pke Would be interesting to see the result ;-)\n. Semantic UI Components for React.\n\n/cc @asvetliakov @hallister\n. Feel free to add your project here!\n. @zecaptus Wow that\u2019s cool! Thanks for sharing ;-)\n. @mik01aj I like this idea of testing. Could you please share some code?\n. @mik01aj we have Dialog in the Showcase in Readme. I can\u2019t add Nordnet because they have removed a link to Styleguidist.\n. @kulakowka Awesome!. @kulakowka Could I add your company logo to a site? ;-)\n@zecaptus Are you still using Styleguidist? ;-)\n@mik01aj Do you know if they are still using Styleguidist?. @kulakowka No, it doesn\u2019t ;-). @ajainvivek Looks cool!. Thanks!\n. @albertfdp Done, with lots of changes ;-)\n. There are quite a lot of changes since 2.1.0: \nhttps://github.com/sapegin/react-styleguidist/compare/2.1.0...master\nBut I\u2019d like to wait for #124 before a new release.\n. Thanks! That\u2019s fine if you don\u2019t want to change styles of this tags.\n. 1. It\u2019s needed because entities module uses some JSON files and it\u2019s required by Markdown It.\n2. We shouldn\u2019t enable any loaders that could affect user\u2019s code.\nBut do we actually need to support npm 2?\nAs a quick fix we could try to replace getPackagePath('entities') with:\njs\n[\n  getPackagePath('entities'),\n  getPackagePath('markdown-it')\n]\n. Looks good for me.\n. > I think that this is more important\nBut there\u2019s no easy fix if it\u2019s possible to fix at all.\n\nShall I add include: node_modules to the loader then?\n\nYeah, I think so.\n. Done :-)\n. Looks useful for me. I\u2019ll be happy to merge a pull request with this feature.\n. @XOP @tizmagik @operatino We need your feedback in #160.\n. I think Sizzy integration is the right thing to do here (without adding Sizzy to the core of course). The very simple implementation (just open the current component in upcoming non-chrome mode in Sizzy) will be possible with the plugin API soon.\n/cc @kitze. We have a basic isolated mode but it has too much chrome and stuff now. So I\u2019m thinking about totally no-chrome mode \u2014 just all examples, or just one example.. This won't help with responsive testing: media queries depends on the viewport size.. @grzegorzj Do you have any performance issues when you have many (could be hundreds on one page easily) iframes on a single page?. Thank you very much, this is very cool!\njs\n'count' in state || setState({ count : 1})\nIt was a hack so I won\u2019t miss it ;-)\nhtml\n<Message content={require('./mocks').hello}/>\nIt\u2019s fine when you need it only once (I think in most of the cases). Any way to reuse the required module?\n. @mik01aj I agree but it fixes more things than breaks.\n. Maybe we could \u201choist\u201d setState calls \u2014 move only them to the componentWillMount? It\u2019s more complicated and fragile but might work for more common use cases.\n. Actually I like this idea very much ;-)\n. I need to try it one day.\n. @tizmagik Sorry didn\u2019t have time to check it.\n. Then we can merge it and combine with hiding code examples by default in a single major release.\n. Would be very nice merge this PR. @saschatimme are you going to finish it?\n. @saschatimme Cooool!\n. @saschatimme Could you please update your branch and fix conflicts? I\u2019ll merge it after that.\n. There are a few ESLint warning now.\n. Thanks! :shipit: \n. Works fine for me: Node 5.10.1, npm 3.8.3. Could you try to remove node_modules folder and reinstall all dependencies?\n. Ugly as Windows ;-( Maybe there\u2019s some npm module to do that in cross-platform way?\n. I think we can use _.escapeRegExp here.\n. Could anyone with Windows try this solutions and send a pull request if it works?\n. It\u2019s 2.4 MB ungzipped: \n\nThe main contributor to that size I thinks is CodeMirror:\n\u276f gz node_modules/codemirror/lib/codemirror.js\nOriginal: 353548 bytes\nGzipped: 94776 bytes (26.81%)\nBut we may misconfigure something, so help is really appreciated. I think you can hardcode statistics generation in make-webpack-config.js.\n. markdown-react-js is two times bigger that lodash but babel-standalone is huuuuuge.\n. Yeah, this is weird because the full unminified build of lodash is smaller:\n\u276f gz lodash.js\nOriginal: 504040 bytes\nGzipped: 89746 bytes (17.81%)\n. Looks like we\u2019re including it all:\nsrc/rsg-components/Editor/Editor.js\n5:import _ from 'lodash';\n7:import debounce from 'lodash/debounce';\n. Doesn\u2019t help much:\nBefore:\nOriginal: 2467270 bytes\nGzipped: 607692 bytes (24.63%)\nAfter:\nOriginal: 2337612 bytes\nGzipped: 577241 bytes (24.69%)\n. To transpile ES6 in CodeMirror editor.\n. The issue you mentioned isn\u2019t about making editing optional but about hiding the editor by default. But extraction of CodeMirror and babel-standalone into a separate bundle with lazy loading is also very good feature.\n. @naltatis Any performance / UX / DX improvements are very appreciated, even the smallest.\n:shipit: \ud83d\ude80 \n. I\u2019m closing this for now. Feel free to submit a pull request if you can fix some of these issues.\n. Thanks!\n. @terales Done!\n. I\u2019ve noticed it recently and looks like it\u2019s something relatively new. But I haven\u2019t had time to investigate it yet.\n. But they work fine?\nWe should get rid of markdown-react-js: it has lots of issues and it\u2019s dead (no commits since November 2015).\n. Could you please submit a pull request with it?\n. Nope, it must be a bug or just missing styles.\n. There\u2019s very basic HTML support now: 552507f4a87c455ab26150cc141f3ce715952e59. Feel free to send pull request with improved support.\n. Thanks!\n. resolver and handlers options might help here but I\u2019ve never used them myself.\n. Any other ideas than export a component with some special name?\n. @hauptrolle Most probably #179. I\u2019d wait a few days for the new version with updated react-docgen  \u2014 it might be fixed already there.\n. 4.0.0 is out!\n. Could anyone update the cookbook? I\u2019m afraid I don\u2019t have a good example.. Thanks! That might be useful but I think it should be disabled by default.\nNot sure what to do with components with required props. I\u2019d rather skip them or make another option to enable them.\n\nAdd info to README, CHANGELOG?, etc.\n\nReadme \u2014 yep, changelog \u2014 nope.\n. I\u2019m for a single flag ;-)\n. Thanks! \ud83d\udc4d \n. That\u2019s great, thanks!\n. I\u2019m not sure that we can just add support. I\u2019m afraid it would be Webpack 1 or Webpack 2. Any help and research is very appreciated because I don\u2019t have any experience with Webpack 2 so far.\n. @bulaj Great to hear it! Any issues or tips that we can include to the docs?\n. How about now? ;-)\n. >=0.14.0\u00a0already includes 15.x, works fine for me with React 15.0.\n. Cooool, thanks!\nI think the default value should be an option but I\u2019m not sure what value it should have. I\u2019d make a breaking change if it really improves performance.\n/cc @mik01aj @MoOx \n. I\u2019m fine with breaking change because we have one more coming \u2014 #134.\n. I like the idea of passing config via context. But I think renderer components should still receive everything via props to make replacing these components easier.\n. @tizmagik Could you please tweak that one line and I\u2019ll merge the PR?\n. Then how would we make a JSX code example that shouldn\u2019t be rendered as a playground?\n. example is fine, thanks!\n. Merged in 21f23e59ac7582111b1b95caf95af339b8d04152, thanks!\n. Then we will need a way to really skip components that can\u2019t be loaded by style guide because of HOCs\nor something like that.\nThere is a way to specify imports in examples.\n. Sure. Looks like it should be major:\nChanges that might be breaking:\n- Code is hidden by default: 80ab7b8e46b00c433390296439f35f6378bfc9cf (I wouldn\u2019t care about this one).\n- Different setState behavior, especially new way of defining default state (initialState = {count: 1};): 88de0c20bec18343f11c2294158a390769047498.\n. @ndelangen Thanks! :shipit: \n. Thanks to @tizmagik for implementing collapsible examples! \n. Looks like it works. I hope it doesn\u2019t break anything ;-|\n. It\u2019s called wrapper because you can use it to wrap style guide in your own markup.\nWhat do you want to achieve? I\u2019ve added an example to the FAQ but it\u2019s not that useful.\n. What did you try and what didn\u2019t work?\n. That\u2019s why I\u2019ve added a new example to the FAQ.\n. display:none is not the best way to show things anyway. opacity with animation like in the examples would be better. I\u2019d just make them display:inline instead of position:absolute.\n. Yeah, I\u2019m also not sure whether it makes UI better of worse ;-)\n. No need to scroll, just one extra click ;-)\n. I think it\u2019s pretty normal for Webpack builds. Feel free to send pull request that makes it faster. \n. @mik01aj Are you suggesting merging user site\u2019s Webpack config and Styleguidist\u2019s?\n. Nice! If you have time to implement it ;-)\n. I hope I haven\u2019t broken anything ;-)\n. Done.\n. And also a way to disable this, so an option like:\nresponsivePreview: false | 'iframe' | 'container'\n. @tizmagik Actually I like this idea very much! At least as a kind of responsive preview MVP.\n. @JulienPradet Awesome, thanks!\n. 2: That\u2019s how I see it: with a separate URL. And we could move CodeMirror, babel-standalone, etc. to a separate bundle and do not load it there.\n. @smashercosmo For that use case we can make the sidebar collapsible. Otherwise I don\u2019t see any difference with the current views.\n. Probably it\u2019s too complicated, at least for now. But what we really need?\n1. No chrome mode?\n2. Collapsible sidebar?\n3. Anything else?\n. Thanks for your work @JulienPradet! I\u2018m closing this for now.. Could you try to remove node_modules\u00a0and reinstall all dependencies?\nIf it\u2019s not enough I\u2019ll merge your pull request with updates ;-)\n. @oskolsky How is it related to this issue?\n. @jurgob Most probably it wasn\u2019t set up in your style guide config.\n. Closing this for now. Feel free to submit a pull request or open a more specific and actionable issue.\n. The problem is: I\u2019m not really sure what to do to make it possible, so PR would be the best here ;-)\n. Thanks! Does it still work in Webpack 1?\n. Tested again and now it just works with Webpack 1. Merging and thanks again!\n. And this new squash and merge feature is very nice: I don\u2019t have to ask contributors to do it manually.\n. I like the idea but I\u2019m not sure how to combine in with the current implementation. For example I need some docs as Markdown-only sections (which I want to define in the current style, via config) and components folder (which I want to use the folders detection magic).\nMaybe something like hat could work:\njs\nsections: [\n    {name: 'Introduction', content: './introduction.md'},\n    {name: 'Components', components: './components'},  // Just a folder, not glob pattern\n],\n. @danielsneijers Awesome! If you could share a screenshot of something that would be very cool ;-)\n. This issue is not related to Styleguidist but to development in case-insensitive OS (Mac) for case-sensitive OS in production (Ubuntu).\nPull request with a warning would be probably useful.\nP. S. There\u2019s nothing wrong with fs.existsSync.\n. By useful warning I mean warning in code. It\u2019s not very useful in the docs.\n. Have you tried the second approach? It should work.\n. I\u2019m using React Intl but I have the same issue. And I don\u2019t know how to solve it in generic, convenient and bullet-proof way. So any suggestions are welcome.\n. I\u2019m closing this because the same issue is discussed in #143.\n. There\u2019s no ignore option (#11) yet. What option do you mean?\n. Then two options:\n1. ~~Use skipComponentsWithoutExample instead of filtering components.~~\n2. require modules you need in examples.\nUpdate: I was wrong about the first option: these components would be ignored.\n. Please check the docs updates in the previous commit: I\u2019ve added some examples.\n. This looks like something wrong with npm:\nModule not found: Error: Cannot resolve module 'webpack-hot-middleware/client' in /home/rstinogle/hv/webclient/app/products\nTry to remove node_modules folder, run npm cache clean and npm install.\n. Looks like you\u2019re overwriting the resolve\u00a0option that should include .js.\n. Obviously there\u2019s something wrong with your configuration because Styleguidist works fine for all other users. But I don\u2019t see any other problems except the wrong resolve\u00a0option.\n. Will it work with Webpack 1?\n. Thanks!\n. Done.\n. Have you tried this solution?\n. @chardos I\u2019ve updated a link.. @chardos Morning coffee works very well \u2615\ufe0f\ud83d\ude80. I think it was always like that and I don\u2019t know how to fix it if that\u2019s possible at all. Well be happy if someone could fix it and submit a pull request.\n. @tizmagik But that will require page reload in a browser?\n. @jzaefferer If you have time to try it that would be great. I know that it\u2019s a bit annoying ;-)\n. Have we solved this with contextDependencies\u00a0option?. Thanks!\n. Thanks! Would be nice to document it with some use cases.\nAnd fix the build of course.\n. Now there are even more lint errors.\n. Use EditorConfig and run npm t before commit. It\u2019s easy.\n. There\u2019s no such thing as \u201creact loader\u201d and default loaders do not affect your code. \n1. Try to use include\u00a0instead of exclude, like in the docs.\n2. Check you Babel config. You should have react\u00a0preset here.\n. Hm, I can\u2019t reproduce it. Trying to copy your code to the example styleguide: works with with or without the comment.\n. Just for the reference, it\u2019s not in the master yet: dccecb0ded66ca2119db5f04d1aefc8bd3024946.\n. I have different error because of non-existent Button.sizes. When I remove it it works fine.\nWhat Node version are you using? Don\u2019t know what else can be different.\n. It doesn\u2019t work unfortunately, if you open Readme.md links will be wrong.\nhttps://github.com/sapegin/react-styleguidist/commit/a2c1c5f5c8212f5fcf62ceef31bd5e2a06bad9a8\nhttps://github.com/sapegin/react-styleguidist/commit/3f22944defa7cffaa537cf9a3c1a1bcc27bb890c\nBut it\u2019s probably the best we can do without hardcoding absolute URLs.\n. That\u2019s weird. Looks like I did the same and it wasn\u2019t working. Now everything is fine ;-)\n. Nope, sorry for inconvenience. But I\u2019ll make a new version this week anyway.\n. 4.0.0 is out!\n. Pull request would make it faster.\n. @nhavar Yep, we\u2019ll see very son.\n. Fixed in #189.\n. I don\u2019t know ;-) But if you post an example project somewhere I could take a look.\n. There\u2019s no rsg-components/Preview/Renderer component, only rsg-components/Preview. What do you want to customize there? There\u2019s not much HTML ;-)\nSame for Playground but I can extract HTML to Playground/Renderer.\n. Any .js file in rsg-components.\n. Pushed basic implementation.\nAPI:\nhttps://github.com/sapegin/react-styleguidist/blob/master/scripts/index.js\nExamples:\nhttps://github.com/sapegin/react-styleguidist/blob/master/test/run.build.js\nhttps://github.com/sapegin/react-styleguidist/blob/master/test/run.server.js\n@mik01aj, @operatino, @aaronjensen, @sompylasar any feedback?\n. @aaronjensen makeWebpackConfig should allows you to do exactly this.\n. What @mik01aj suggests in #158 should be possible with this API:\njs\n// webpack.config.js\nmodule.exports = [\n    { ... user webpack config ...},\n    require('react-styleguidist').makeWebpackConfig(),\n];\n. @aaronjensen I believe you can extract them and use in both configs. I also believe that implementing some magic that will do it for you is very dangerous and isn\u2019t the right thing to do.\n. It\u2019s not that simple and I think will lead to more problems than we have now. For me the more isolated Styleguidist is from user project the better. Of course you can reuse parts of you Webpack config.\n. Mixing user project\u2019s and Styleguidist Webpack configurations is very tricky. We\u2019re trying to avoid it as much as possible. For example all Webpack loaders used by Styleguidist are scoped to it\u2019s source and never affect user code.\n. PR that implements it, do not break any current functionality and actually simplifies anything is very welcomed ;-)\n. It depends on the benefits but generally yes ;-)\n. @sompylasar Thanks! For me it looks too complicated ;-)\n. 2.1.0-beta.24 is out with nicer validation warnings:\nWebpackOptionsValidationError: Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\n - configuration has an unknown property 'styleguidist'. These properties are valid:\n   object { amd?, bail?, cache?, context?, dependencies?, devServer?, devtool?, entry, externals?, loader?, module?, name?, node?, output?, plugins?, profile?, recordsInputPath?, recordsOutputPath?, recordsPath?, resolve?, resolveLoader?, stats?, target?, watch?, watchOptions? }\n   For typos: please correct them.\n   For loader options: webpack 2 no longer allows custom properties in configuration.\n     Loaders should be updated to allow passing options via loader options in module.rules.\n     Until loaders are updated one can use the LoaderOptionsPlugin to pass these options to the loader:\n     plugins: {\n       new webpack.LoaderOptionsPlugin({\n         options: {\n           styleguidist: ...\n         }\n       })\n     }\nBut what it suggests doesn\u2019t work for some reason. this.options.styleguidist is undefined inside loaders.\n. @nkt Which version breaks your build? What errors you see? Users already have a chose: they can use Webpack 1 or 2.\n. @nkt Then you need to file a bug for Webpack. It is beta.\n. Probably we should make it a peerDependency since npm installs the latest by default. Thanks for the investigation! \n. @aaronjensen I don\u2019t understand what should be in context\u00a0and test.\u00a0Trying this \njs\nnew webpack.LoaderOptionsPlugin({\n    test: /styleguide/,\n    options: {\n        styleguidist: config,\n    },\n}),\nand this\njs\nnew webpack.LoaderOptionsPlugin({\n    options: {\n        context: __dirname,\n        styleguidist: config,\n    },\n}),\nIn both cases this.options.styleguidist is undefined. Works fine in Webpack 1.\n. One thing that might be different from common loaders is how we use them:\n``` js\nlet { config, components, sections } = require('styleguide!');\nrequire('!!props!file.js')\nrequire('examples!Readme.md')\n``\n. Looks likecontextis completely unrelated, it just an option that was [used by some loaders](https://github.com/webpack/webpack/issues/3018#issuecomment-248445176).\n. Or maybe @TheLarkInn can help us? \ud83d\ude4f \n. @TheLarkInn I\u2019ve tried that too butthis.options.styleguidistis still undefined. Works fine in Webpack 1.\n. I\u2019ve finally fixedLoaderOptionsPlugin` doing this change:\ndiff\n// Load style guide\n- let { config, components, sections } = require('styleguide!');\n+ let { config, components, sections } = require('styleguide!index.js');\n\n. @aaronjensen I\u2019ll do it in the next few days. There are quite a lot of changes and I want to finish a few more things ;-)\n. @aaronjensen I\u2019ve added a Roadmap, and 4.0 is very close ;-)\n. Extracting each component to a separate file would be the best and the easiest way. \nresolver\u00a0and handlers options might also help.\n. But you don\u2019t use any Styleguidist code here. Of course it\u2019s easy now ;-)\n. But I like the idea :-)\n. It actually may be possible to do after all refactorings we did for 5.0. I\u2019m not saying I think that it\u2019s very useful but anyway ;-)\nI\u2018m closing this for now.. Unfortunately it\u2019s a limitation of react-docgen: https://github.com/reactjs/react-docgen/issues/69\n. Markdown source would help debug the issue.\n. Thanks! Looks like some problems with HTML handling.\n. Should be fixed in 4.0.0.\n. Thanks! Unfortunately can\u2019t make release now because I have some unfinished stuff in master (I know I shouldn\u2019t do this $-) I\u2019m going to release 4.0.0-beta next week. Sorry for inconvenience.\n. Works for my style guide and for an example. Could you share your config? Do you override any Styleguidist components?\n. Looks OK but it\u2019s too big to be sure ;-)\nCould you please fork this example project and try to make a reproducible demo?\n. I like the idea! Should it be a separate package? What would be its dependencies?\n. Looks interesting! Is it possible to use regular Styleguidist config as well? Might be useful though create-react-app has no one ;-)\n. I mean styleguidist.config.js. \n. I\u2019m not sure it\u2019s really useful if you can\u2019t even change a title of your styleguide ;-)\n. Eject could generate a config like that:\nmodule.exports = {\n  components: './src/components/**/index.js',\n  updateWebpackConfig: require('react-app-styleguidist'),\n};\n. > The title will be picked up from package.json file of the project.\nGood idea!\nAnd feel free to send a pull request to update the docs.\n. Cool, thanks!\n. CRA is supported in 5.0.0, I\u2019ll send a new PR to CRA later.. I can reproduce it but have no idea why. All HMR configuration should be external.\n. I did! Now I\u2019m trying to change them back to classes and it doesn\u2019t help ;-(\n. I can reproduce this too in the example. Will try to find the exact commit that breaks it.\n. Here is the bad commit: f713a3ee2f0b7da2e78138445b9a015daa10270a. Unfortunately the biggest one. And here I\u2019ve introduced some functional components.\n. The only solution I could find is this but I\u2019m not sure it\u2019s better than yours ;-| It\u2019s hack too.\ndiff\n@ Examples.js:15 @\nconst Examples = ({ examples }) => {\n                         <Playground\n                             code={example.content}\n                             evalInContext={example.evalInContext}\n-                             key={index}\n+                             key={Math.random()}\n                         />\n                     );\n                 case 'markdown':\n. Yeah, I think you\u2019re right. How about 3cf04d13ffdd36c60a2a02129b20bb81bf2db69a? Experimenting with your branch.\n. Actually I like this (vanilla Webpack HMR instead of react-transform-hmr or react-hot-loader) s approach more: no need to configure anything and performance shouldn\u2019t be a big issue because you\u2019d want to develop component in isolated mode anyway.\n. Yep, #200 and 3cf04d13ffdd36c60a2a02129b20bb81bf2db69a ;-)\n. Thank you too, the solution is 90% yours! :shipit: \n. @andela-rekemezie Cool!\n. Kind of the same change as with lists:\njs\nfunction renderDescription(prop) {\n    let { description } = prop;\n    let extra = renderExtra(prop);\n    return (\n        <Group>\n            {description && <Markdown text={description} inline />}\n            {extra}\n        </Group>\n    );\n}\nChildren should be space separated if there are more than one child.\n. @natearn Yes, please do it! Feel free to ping me on Gitter if you have any questions ;-). @snmslavk I think a new option in style guide config would work:\njs\nribbon: {\n  url: 'http://example.com/',\n  text: 'Fork me on GitHub', // Default if the ribbon option passed\n  color: '#fff', // Default if the ribbon option passed\n  background: '#24292e' // Default if the ribbon option passed\n}\nYou can use this CSS as a starting point:\nhttps://github.com/sapegin/social-likes-next/blob/7018e8d51c05853eb04b437d8fce7bc0a34a663e/gh-pages/gh-pages.styl#L97-L123\n\n. @M-ZubairAhmed Only checked ones are done. And there\u2019s an abandoned PR for the ribbon.. 1. You can do it with showCode modifier, or { \"showCode\": false }.\n\n\nAny ideas on the API?\n\n\nThat\u2019s for plugins ;-)\n\n\nIt would be very hard to get rid or them, if possible. What\u2019s the issue here?. 1. Looks like no :-( Would be nice to fix that.\n\n\nYeah, something like that may work, we need to try something. Maybe something similar to CSS Grids? Not sure will be easy to use or implement ;-)\n\n\nI\u2019m going to release the very first draft to 6.1.0. It will be almost useless, but you\u2019ll be able to try and tell me what\u2019s missed ;-)\n\n\nDo you mean a div\u00a0that you have to use in examples to wrap multiple components or divs that Styleguidist adds around your examples (there are two or three of them)? If you mean the former than we can fix that but we\u2019ll have to think about backward compatibility with React 15 because returning arrays is a new feature of React 16.. @catherinefromont That\u2019s awesome! But I\u2019m not sure what exactly are you asking. Do you have question about specific task?. @glebez The general idea is to be able to show anything instead of an actual component name in the style guide UI. I think #868 could be the first step, and the we'll need to split displayName into two properties: actual component name, and name visible in the UI. So probably we don't need a separate option for that, but we'll still need to do some refactoring.. Would look too noisy in my opinion. But at least quotes should be grayish.\n. Function name with a signature in tooltip would be the best if it\u2019s possible.\n\n\nI think Function is much more clear than Anonymous.\n. I\u2019d try to find where I broke it ;-) \nBut I was thinking about something like that because it doesn\u2019t require any set up from the user. How fast it is in comparison to the true HMR?\n. Please make an example as described here.\n. Closing it for now. Feel free to reopen with more data.\n. Are you using the latest version? It supposed to be fixed \u2014\u00a0#143.\n. Maybe the component name is different? Not sure --verbose\u00a0would show it.\n. Yeah, it uses component name. Maybe we need an option to change that.\n. Right now it uses component name if it\u2019s available and then falls back to file name or folder name if file name is index.js.\nCan we access this \u201crightmost\u201d component? That would be awesome.\n. I\u2019m fine to change the order to this:\n1. Filename (if [A-Z]*.js).\n2. Folder name (if [A-Z]*.js and file name is index.js).\n3. Everything we had before (name, displayName, etc.)\nOr we can try this thing \u2014 might work too: https://github.com/nerdlabs/react-docgen-displayname-handler\n. @aaronjensen I believe it can with the plugin I\u2019ve mentioned in the previous comment.\n. That\u2019s why [A-Z]*.js \u2014 only MyComponent would match. But I\u2019d try that plugin for react-docgen first.\n. :shipit: \n. :shipit: \n. And I agree that making it default handler is a good idea. More flexibility for us, if we ever decide to add more default handlers, and for the users, who could customize handlers as they want.\n. Have no idea. Looks like some issues with npm.\n. Works fine with Webpack 1.13.3, please merge master into your branch.\n. Cool, thanks!\n. If you remove all now unused CSS, I\u2019ll be happy to merge it.\n. Thank you very much!\n:shipit: \n. Good point, I\u2019ll check it.\n. Something to think about: https://github.com/theme-standard/spec\n. @mik01aj I don\u2019t believe in separation of CSS and JS ;-) but I still prefer CSS for its syntax and especially for available tooling.\nBut here is not a regular site and even not a regular web app. Wee need our styles to be isolated from user styles: user styles (especially global styles like typography) shouldn\u2019t affect style guide UI and vice versa.\nSo I think JSS if a good solution for Styleguidist. It makes style overriding simpler and it\u2019s not that hard to write it (and we don\u2019t have a lot of styles anyway).\n. Merged to next branch.\n. Would you mind making an example as described here?\n. Closing this for now. Feel free to reopen with more details.\n. I thinks it\u2019s easy to change ;-) You can try if you have time, or I\u2019ll fix it later.\n. It should be fixed in the 5.0.0 beta. Could you please try it?\nhttps://github.com/styleguidist/react-styleguidist/releases/tag/5.0.0%40beta.9. Closing this for now. Feel free to reopen if you still have this issue.. I think both are very valuable. I\u2019d start from the second because it\u2019s simpler. It can be very useful if you have Markdown documentation (I mean long Markdown files, not just components) \u2014 would be nice to have them on separate pages.\n. Yeah, I think it should be optional and probably current behaviour should be default.\n. I believe #186 should be possible already with makeWebpackConfig API method.\n. @marvinhagemeister I disagree with this idea and don\u2019t see much value in that kind of editor.\nCodeMirror is not a big issue anymore because it loads only when you open the code.\nUsing Buble instead of babel-standalone also made bundle size much much smaller.\n. @marvinhagemeister We can make it optional/replaceable since more browsers support ES6 and the only thing they don\u2019t support is JSX. That\u2019s actually a good idea.\n. @tizmagik It was \u2014 no improvement + problems with UglifyJS. See comments in #258.. As far as I understand how babili works, we can\u2019t use it since we don\u2019t have babel loader anymore or actually any babel in npm package. And user doesn't necessarily will use Babel as well.. @philholden Looks like react-virtualized but you have to write react-virtualized ;-). But why do you need any of these plugins in the styleguide? I see point in loaders reusing but not much for plugins.\n. That\u2019s because you\u2019re overwriting extensions, .json is required.\nextensions: ['', '.js', '.jsx'],\nProbably we should add a warning or just add it automatically.\n. Probably the same issue with modulesDirectories. Try to no overwrite it.\n. Looks like you\u2019re still overwriting some default config, otherwise it shouldn\u2019t show this error.\n. That\u2019s exactly the place where you\u2019re overwriting default config. Try to log it:\nconsole.log(webpackConfig.resolve);\n. I could reproduce it. You\u2019re overwriting resolveLoader:\njs\n webpackConfig.resolveLoader = {\n      alias: {\n        'css-theme-loader': path.join(__dirname, './css-theme-loader'),\n      }\n    };\n. I\u2019m almost sure that\u2019s because of the switch to Buble. If you have time to find how to do that and send a pull request (if it can be done in Styleguidist itself) that would be awesome ;-)\n. @nkt Could you please share your example source? I don\u2019t think there\u2019s a real need for extra complexity.\n. @nkt Awesome styleguide!! \u2764\ufe0f\nThis error is from react-docgen. We use Buble only for client-side rendering of examples in Markdown, not for your components code.\n. You can use subsections for that but they weren\u2019t documented for some reason. I\u2019ve updated the docs and an example styleguide.\n. Would you mind making an example as described here?\n. Looks fine for me. Would you mind making an example as described here?\n. @stinoga Please, don\u2019t include any Styleguidist pathes into your own loaders.\nAnd I can\u2019t reproduce it. Please make an example project.\n. @stinoga Could you share the solution? It might help @aris-b ;-)\n. Closing this for now. Feel free to reopen with more information.\n. You can change Styleguidist\u2019s Webpack config via updateWebpackConfig. Run styleguidist server --verbose to check the actual config.\nSo you can replace HtmlWebpackPlugin with your own, like without inject option:\nhttps://github.com/sapegin/react-styleguidist/blob/master/scripts/make-webpack-config.js#L69-L73\n. I really don\u2019t like this idea. But if anyone could implement it I\u2019d like to see ;-)\n\nHard to find user config automatically (but I\u2019m going to try with CLI).\nNot everybody uses Webpack.\n\nWe don\u2019t require include\u00a0or exclude\u00a0anymore in the upcoming 5.0.0.. 1. It could be webpack.config.dev.js or anything else. I want to implement auto configuration for CLI but I\u2019m not sure that it could be good enough for default behavior. But if we have a working implementation we could think about that.\n\n\nIn this case we still need Webpack loaders to process user\u2019s files. That\u2019s why I like the idea of basic loaders. CLI could setup them as well it the project doesn\u2019t depend of Webpack.\n\n\nYes, basically in 5.0.0 you could pass any loaders of existing project and they would work because we do not have any loaders except JSON anymore. And JSON would be automatically added if you do not pass one. . I totally agree with you! I know that Styleguidist configuration is a pain in the ass and I believe 5.0.0 would make it much simpler. Not yet just works without any effort like you describe but already it\u2019s a huge step forward.\n\n\nI doubt a bit this \u201cwhen doable\u201d in this case ;-)\nIf you have any more specific ideas on how it should work (user\u2019s Webpack config resolution, merging, etc.) could you please describe that in a new issue?\n/cc @okonet as a huge fan of this idea :shipit: . I totally agree that robots should do the work, not humans. But can anyone describe how exactly it could work? Or even try to implement it?\nIf it could be done reliably enough I\u2019d be happy to make it the default behavior.. @aaronjensen I\u2019m afraid it\u2019s much more complicated than you think and more complicated than what @MoOx and @okonet are suggesting. It could make Styleguidist more flexible but won\u2019t make initial setup much simpler.\n. Webpack plugin: I\u2019m sure it\u2019s possible to make a Webpack plugin for Styleguidist too. But I don\u2019t think it should be the primary way of using Styleguidist. There are so many projects without Webpack (like component libraries or separate components). So it\u2019s far from ideal but definitely nice to have.\nStorybook: it sounds great except they don\u2019t do that. They have default create-react-app-like config that works only when you don\u2019t have any custom config. Otherwise it\u2019s not different from what we have now.\nCSS: yeah, the main benefit is easier theming. Plus no need for CSS loader (one of them) \u2014 less possible conflicts with user\u2019s loaders (same benefit for compiling JS).\nCLI: I hope it would make initial setup simpler and less scary. And looks great in docs and on site (which I want to make after this).\n. CLI (I mean config CLI, not the one we have now) will be a separate package that you install globally anyway.\n. How is this better than JSS? Especially if they aren\u2019t supported almost anywhere.\n. Same for JSS with jss-isolate but I don\u2019t see any benefits ;-|\n. We can use divs and spans with the same effect but without need for any polyfills.\n. That\u2019s why I like JSS here: it solve multiple problems.\n. Looks like it\u2019ll be better than I thought ;-)\n. @n1313 We don\u2019t use CLI, but you can try progress-bar-webpack-plugin \u2014 maybe we should add it by default if it\u2018s good.. @n1313 Styleguidist CLI uses Webpack Node.js and --progress\u00a0option is only available on CLI as I understand. So the plugin is the only option. . @tizmagik I have a change log draft so far. There are some migration notes. Let me know if I need to write more.. @n1313 I\u2019ve tried to answer both questions. Let me know if anything is missing.. @iamstarkov Yo! There\u2019s a change log draft with migration notes and all braking changes. Let me know if I miss something. And I appreciate any feedback! ;-). The official beta is here. Please try it if you have some time ;-)\nhttps://github.com/styleguidist/react-styleguidist/releases/tag/5.0.0%40beta.9. 5.0.0 is out!!. Trying to debug it but have a different error and very weird:\n```\nERROR in   TypeError: Cannot read property 'request' of undefined\n\n\nExternalModuleFactoryPlugin.js:37 handleExternals\n    [react-scroll-sync]/[webpack]/lib/ExternalModuleFactoryPlugin.js:37:33\n\n\nExternalModuleFactoryPlugin.js:46 next\n    [react-scroll-sync]/[webpack]/lib/ExternalModuleFactoryPlugin.js:46:8\n...\n```\n\n\nLooks like issues with Webpack installation on my Mac: this was already fixed.\n. One thing was definitely broken in Styleguidist: doclets examples.\n. Hi @cef62! That looks very interesting, thank you very much for the PR!\nI\u2019ll review the code a bit later.\nUsing indexes looks fragile (what if you add or move an example?) but I have no better idea how to implement it.\n. I think indexes are fine unless someone find better solution that doesn\u2019t affect developer experience.\n. Thanks! Do you have any ideas on how to improve the UI? If not I\u2019d merge it and try to do something myself before releasing a new version.\n. I was thinking about that too. And show it on hover. At least it would be more consistent with component isolation UI. So please add it to the PR and I\u2019ll merge it.\n. Cool, that\u2019s much better!\n. Please update to 4.2.3, it was broken for some time.\n. It happens sometimes. Restarting the job usually helps. \nThanks! I\u2019m merging it.\n. Is your Markdown file correct? It should be (note four spaces before the code):\n```\nAlert:\n<Alert>Danger Will Robinson!</Alert>\n\n```\nor (without \\):\n```\nAlert:\n```\nDanger Will Robinson!\n```\n```\n. Cool, thanks!\n. This is expected behavior because just highlighted code is often needed.\n. Yeah, I see the same in my tests. Have no idea why it could happen. Probably because of migration from Babel to Buble. But why there\u2019s no errors?\n. It may affect our own tests ;-) That\u2019s what I\u2019m trying to do too.\nBuble is basically the same thing as Babel but smaller, faster and without configuration. Which makes it better for client-side transpiling. babel-standalone was way too big.\n. I\u2019ve tried to remove Buble (actually any examples rendering) and it doesn\u2019t help. \n. If you reinstall dependencies it should work. It was because of an arrow function in one of dependencies.\n. Awesome, thanks!\n. I\u2019m going to add a default JSON loader but it\u2019s tricky not mess with user\u2019s loaders. \nYou have to explicitly specify scope of your loaders for the same reason.\n. It was there and I didn\u2019t like it. Maybe on top of the box?\n. Can we replace both open links with an icon? And probably put them near component title on hover and near Show code button on hover (and not like button, just an icon with a tooltip).. I think this one from Font Awesome would work:\n\nBut we need an SVG, not web font for just one icon.. Not in 2016 ;-) You can inline SVG as well, it\u2019s much easier: just put it in a React component. . Should be fixed in 5.4.0.. That\u2019s very cool, thanks!\n1. I don\u2019t want to make config more complicated and I think it now worth it in this case. Maybe we can convert globs automatically. And don\u2019t forget that components can be a function.\n(I\u2018ll be back soon ;-)\n. I\u2019m back ;-)\n1. Could you compare bundle size just in case? require.context\u00a0might include files you don\u2019t want.\n. > I'd suggest not merging this in until I'm able to fix the scenario of adding an entirely new component. \nOK and then we\u2019ll see what we can do.\n\nMaybe, but it'd take a decent amount of work and I'd worry about hitting all of the edge cases.\n\nAt least we can try and see if that works.\n\nDo people use this functionality?\n\nIt\u2019s the only way to ignore components and it was mentioned in docs many times until I found simpler way to match Component.js but not index.js in a component folder.\n. That\u2019s a lot of assumptions ;-) Not everybody starts file names from capital letter, may use Component/index.js. Some people use different extensions (.jsx, .es6), etc., etc. Glob is s simple way to satisfy everybody in my opinion. I don\u2019t really want to change it again.\n. Yeah, I agree that converting globs to regexes is not the best idea ;-)\n\nAll of this so that people can write globs instead of regexes.\n\nI\u2018d say to be able to not restart the styleguide when they add new files.\n\nwould you be open to me working on splitting the resolver out in such a way that I could plug in my own resolver and configure it in a more webpack way\n\nAbsolutely! And thanks for your time and interest! :shipit: \n. PR would be great! But please check #207, you may need to change your code after I finish it.\n. As soon as I can ;-) The JSS migration is almost finished (will push tonight probably) but there are more changes planned for the next major release \u2014 #223.\nI\u2019d suggest adding IDs to container and preview so you won\u2019t use any class names in your queries. In that case JSS won\u2019t break your code and I could merge your PR earlier. Would that solve your problem? \n. Then maybe ID for each component and generic class name like rsg--preview\u00a0for each preview?\n. Then I\u2019ll be happy to merge you PR! \ud83d\udca5 \n. I\u2019d add a section with a Markdown file and show colors and fonts in examples. Can\u2019t show an example now but I\u2019m going to try that soon for my project.\n\nit would be good to have the option of showing the html source code as well as the JSX code, is this possible?\n\nI think it\u2018s possible to implement. Would be cool if you have time to experiment with that. I have a rough idea how it could be done.\n. Nice! I\u2018d even set default value for that based on components (would solve problem for most of the users) but I can merge it as is.\nCommon directory for all components (after glob expansion).\n. Check the library I\u2019ve linked in the comment. So for lib/components/**/*.js it would be exactly what you give as an example in docs. It works with a list of files, not with glob itself, so it\u2019s not fragile magic which is very good ;-)\n. Looks very good now! Merged ;-)\n. It\u2019s well documented and I think it\u2018s better to configure it once for your system than add to each project separately. You can just revert this commit, I\u2019ll squash everything anyway.\n. I should make a poll in Twitter ;-) For me it happens maybe once in a year and it could be any kind of artifacts of tools developers use on their computers. I wouldn\u2019t expect every project have all these things in their gitignore.\n. But probably you\u2019re right and it\u2018s just my perfectionism ;-) I\u2019ve checked a few popular JS projects (React, Redux, Lodash, etc.): all of them have .DS_Store, many have .idea and other things.\n. Yeah, I understand but now if we have no sections, each component will be on it\u2019s own line.\n. Thanks!\n. It is boolean, and it\u2019s false isolated mode ;-)\n. Yep, thanks!\n. I can\u2019t reproduce in the example style guide. Works fine there.. Do you have a Babel loader for the folder where you put it?. Sure, Webpack will use path of the real file for loaders, not aliased one.. Example project would definitely help.. Probably it\u2018s a good idea. But probably current way to optionally enable it is a bit too complicated. You need to add a JS file to entries like this:\njs\nglobals._ = require('lodash');. But probably we can use webpack.DefinePlugin or webpack.ProvidePlugin\u00a0for that and make an easy config option like that: \njs\nglobals: {\n  _: require('lodash'),\n}\nI\u2019d use that too! Not sure that globals\u00a0is the best name. . But don\u2019t compare ungzipped sizes, they are not that important ;-). I think it should be webpack.ProvidePlugin:\u00a0https://github.com/madewithlove/webpack-config/blob/fcf39f3b31378b59f31c3353f6973801a5f53e8e/src/plugins/provide.js. Looks like it works fine. I\u2019ve added a todo list to the issue. Do you want to work on that?. We can\u2019t use Babel for user\u2019s code and especially for examples. Styleguidist itself already use crerry-picking everywhere.. Very strange. Why does it work for me then? ;-}\n. You're genius! I forgot to start the compiler \ud83d\udc19\nAnd I agree on both points: about context and about the name. . Before:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 2.35 MB\nGzipped:  499 kB (21.29%)\nAfter:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 1.81 MB\nGzipped:  403 kB (22.31%)\nAlmost 100 KB difference gzipped!. And with fixed UglifyJS (and with proper name mangling options):\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 631 kB\nGzipped:  183 kB (29.02%). Looks like you have the same issue as https://github.com/styleguidist/example/issues/1, but I can\u2019t reproduce it.. Yeah. GitHub will close it automatically anyway as soon as commit will be in master ;-). Thanks! Please fix lint warning.. Unfortunately I have no other ideas than to try to find which component causes it. 30 isn\u2019t a big number so it shouldn\u2019t be because of the number, then it\u2019s probably one or few unusual components.. I don\u2019t see anything suspicious. Have you tried to remove node_modules, do npm cache clean and reinstall everything again?. Missed loader or something like that. Maybe json-loader. Unless I have a demo project, it\u2019s very hard to guess.\nI hope upcoming 5.0.0 release will be much harder to break like that ;-). Relatively soon I hope. It's in the next branch. It's better to use ne webpackConfig option instead of old updateWebpackConfig, it's safer. . @O4epegb It would be awesome if you can help up investigate it. Because we support Node 4+ and we run tests on Travis on 4, 6 and 7. And we probably missing something. I can\u2019t reproduce it.. Should be fixed in 4.4.3.. > by default webpack will do the same: it will try locate webpack.config.js otherwise you'll have to provide the path the config.\nCould you point me to the code where they do it?\n\nWhat happens if there is styleguide.config.js\n\nThe same as before but now it\u2019s optional.\n\nCan you add a webpackConfigPath\n\nThat\u2019s very good idea!\n\nI'm not sure about the webpackAutoDiscovery option either. \n\nTo disable magic. webpackConfigPath: false could do the same.\n\nI think, with CRA it should definitively just work out of the box. With the manual installation, I think it's okay to have the styleguide.config.js with webpackConfigPath (it still should by default try to load webpack.config.js and if this fails, tell about that).\n\nExactly how I see it.\n. We should try and see if that would work. I don\u2019t see any problems for CRA, for Webpack projects only real testing will tell. I also want to include it in 5.0.0 release because it already has some breaking changes and this is a breaking change too.. @tizmagik We\u2019ll need help with testing this at least ;-). As @bebraw suggested it should check if Webpack config exports a function and call it with a current environment as a first argument.. Thanks!. I have an idea how to solve at least some of this issues:\n\njavascript\u00a0js, jsx fenced code blocks are rendered as playgrounds by default.\n\nFist line can have a comment to change default behavior:\njsx // noeditor\n   <Button>Push me tender</Button>\n\n\nPossible modifiers (names could be changed):\n\nnoeditor \u2014 just renders a component, without code editor or any controls like an isolated mode button.\nstatic \u2014 just renders highlighted source\n\nIn that case specimens could be implemented as React components, like this:\n```jsx // noeditor\n<Color hex=\"#f00\" name=\"red\" />\n```\n\nCustom modifiers will be easy to support too. This also fixes an issue with syntax highlight in editors and GitHub (for some reason GitHub don\u2019t even show the comment):\njsx noeditor\n<Button>Push me tender</Button>\nThis will be a breaking change. What do you think?\n(Thanks  @ndelangen for the idea). Nothing, I think but we won\u2019t recommend them anymore. Will make transition easier.. @ndelangen Non-tagged code blocks is the current way of writing comment, we\u2019ll leave them as is and change the behavior of the fenced ones ;-). Awesome news, we have an implementation from @stepancar \u2014 #511. I\u2019m not sure how flexible (read complex) the API should be so feel free to have a look and leave you comments on the PR.. \ud83c\udf55 6.0.0 beta is out!!  \ud83c\udf55. \ud83c\udf55 6.0.0 is out!!!! \ud83e\udd53. They say:\n\n\u2026the first build will take the normal amount of time. The second time, the build time will be greatly reduced.\n\nCould you share your config? It looks quite complicated.. @n1313 \n\n\nWe were importing the whole Lodash only to make it available in examples as _. We\u2019re not doing that anymore in the upcoming 5.0.0 \u2014 https://github.com/styleguidist/react-styleguidist/issues/249\n\n\nNothing we can do about Buble and Acorn (Acorn is a Buble\u2019s dependency). It\u2019s already much much smaller than babel-standalong that we used to use before.. Actually we can do something with Buble but not for all users. We can make transformer replacable and if you\u2019re using only latest browsers and don\u2019t care about JSX, you could just replace it with nothing.. Trying babel-preset-env and babel-react-optimize but looks like our codebase is too small to have any benefits:\n\n\nBase:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 628 kB\nGzipped:  183 kB (29.08%)\nlib: 139.34kb\nbabel-preset-env:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 628 kB\nGzipped:  183 kB (29.08%)\nlib: 139.34kb\nbabel-react-optimize:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 635 kB\nGzipped:  183 kB (28.81%)\nlib: 189.30kb\nbabel-preset-env + babel-react-optimize:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 635 kB\nGzipped:  183 kB (28.81%)\nlib: 177.29kb\n(lib is the size of all transpiled JS files.)\n.babelrc:\njson\n{\n    \"presets\": [\n        \"react\",\n        [\"env\", {\n            \"targets\": {\n                \"browsers\": [\"last 2 versions\", \"not ie < 11\", \"not ie_mob < 11\"]\n            }\n        }]\n    ],\n    \"plugins\": [\n        \"transform-class-properties\",\n        \"transform-object-rest-spread\"\n    ],\n    \"env\": {\n        \"production\": {\n            \"presets\": [\"react-optimize\"]\n        }\n    }\n}. @n1313 The numbers in the latest comment? Yes. But I won\u2019t commit it most probably since there\u2019s no improvements.. Could try later.. Yeah, no change for the master branch too:\nBase:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 2.26 MB\nGzipped:  480 kB (21.21%)\nbabel-preset-env:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 2.26 MB\nGzipped:  480 kB (21.21%)\nbabel-preset-env + babel-react-optimize:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 2.26 MB\nGzipped:  480 kB (21.21%)\n. @n1313 I\u2019ve fixed Uglify and removed Lodash. Maybe something else ;-). Another comparison.\nWebpack 1:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 626 kB\nGzipped:  182 kB (29.02%)\nWebpack 2:\n\u276f gz examples/basic/styleguide/build/bundle.js\nOriginal: 629 kB\nGzipped:  182 kB (28.96%)\nNo improvement in Webpack 2 probably because we should disable ES6 modules transformation to make tree shaking work. In that case to support both Webpack 1 and 2 we should build two sets of JS: with and without modules.\nBut I\u2019m not sure it will help in case of our own code since we\u2019re using at least most of it. So, yeah, I\u2019m actually interested how to make it work with dependencies.. @aaronjensen No, will it help if I don\u2019t use babel-polyfill? Or will I have to use it? For tree shaking we\u2019ll need to transpile two sets of files (because we still support Webpack 1) and I think it\u2019s not worth it. It also breaks UglifyJS because it doesn\u2019t support ES6.. @aaronjensen It\u2019s a bit more complicated than that ;-)\n\nWe transpile all Styleguidist to ES5 before publishing to npm (in upcoming 5.0.0) to get rid of babel-loader.\nWe can\u2019t use jsnext:main for that because we importing local files, not package. So we\u2019ll need to transpile to copies and somehow decide what to use in Weback config. Not sure it\u2018s worth it.\nWe should Uglify by default all style guide bundle, not our own source. Users shouldn\u2019t care about that.\nWe don\u2019t use any polyfills now.\n. I did it like that: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Cookbook.md#how-to-add-custom-javascript-and-css-or-polyfills\n\nAnd inside this JS:\njs\nglobal.PanelHeader = require('./PanelHeader').default;\nBut I\u2019m sure we can think of a better solution.. Or if you don\u2019t use skipComponentsWithoutExample you can just not write examples for PanelHeader. You\u2019ll have props list for it and it will be available globally.. Does it want a key in your code or somewhere in Styleguidist?. @frontend-3 Looks like you don\u2019t setup babel-loader for the file you\u2019re trying to import.. @frontend-3 First I\u2019d suggest to update to the 5.0 RC. Second to make a demo as described here because I\u2019m not really sure what you\u2019re trying to do in this config and don\u2019t see react-svg-loader anywhere in you config.. @madjam002 Awesome! It will be in 5.0.0 by default.. It might be because we\u2019re evaling examples\u2019 code. But setState\u00a0is just a normal setState of a component that wraps an example.\nAnyway I\u2019d avoid such code in any \u201creal world\u201d app \u2014 that looks very unreactish for me. Store an item ID in the state, it works fine.. If you think it\u2019s a bug please send a pull request with a fix or improved docs.. Cool, thanks!. Thanks!. Thanks! It\u2019s already changed in the next branch but I hope it will be merged without conflicts.. Sure, :shipit: \nBy the way you can just make a new branch here, you don\u2019t have to use a fork.. This looks a bit like a hack for me. But the feature itself is valuable. Could you please take a look at #257? This seems more flexible but default setting could allow js\u00a0to be executed.. /cc @bebraw. But this is a breaking change in comparison to #257. So I can merge this only to the next branch now.. I\u2018m closing this for now. It turned out to be a big topic. We need to think what we really need here and how to implement it with minimum breaking changes.\nRelated issues: #257, #269, #382.\n. Yes, that\u2018s exactly how it should work.\n\nBut this is a bad DX IMO and can be improved.\n\nIf you have any ideas feel free to submit a pull request or open an issue. Comments like that are unproductive.\nRelated issues: #257, #265.. What should we do if you have a typo in JS? It doesn\u2018t have to contain JSX, any JS should work.. In any case we need a way to explicitly define how to render an example.. For example: how to render a piece of JS code as highlighted code, not as a playground?. I agree that the current solution isn\u2019t perfect but the problem isn\u2019t as easy either. Could you create a new issue, and I\u2018ll close this one, since it\u2019s a bug report ;-). Are you using Node 4 or 5? This issue was reported several times but I still can\u2018t reproduce it.. Thanks for the exact version where it was introduced, I could reproduce it finally!. Thanks for detailed bug report, should work in 4.4.3.\nI\u2019ll add tests to prevent that later.. @tizmagik Syntax not supported in Node 4/5, check the commit.. We transpile only browser code. Node 4+ supports enough features. We should just test that ;-). It makes everything more complicated with a very tiny benefit ;-). Just a random file seems more flexible.. Instead of rendering only component\u2018s source, which looks very specific and rare, just allow to specify a path.. What if we use links with something like this? Not sure Remark supports it. Links would be rendered on GitHub as links and you could open a file to see it\u2019s source.. Yep, that would work too. And could solve other issues too. The only con is that it would render as just text on GitHub.. One more requirement:\n\n\nSpecify how to show a file: as a highlighted source or as a rendered example.. So do we have any ideas how it should look? I\u2019d like to include this feature in the next major release.. Yes, API. So something like this would work?\njs // { \"file\": \"./foo/bar.js\", \"static\": true }\n\n\nIn this case we could reuse @stepancar code from #511. But I\u2019m not sure it would work with non-JS code.. @n1313 I think you\u2019re right and it shouldn\u2019t be hard to implement support for any custom modifiers.. \ud83c\udf55 6.0.0 beta is out!!  \ud83c\udf55. \ud83c\udf55 6.0.0 is out!!!! \ud83e\udd53. Should be very easy to fix: https://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/ReactComponent/ReactComponentRenderer.js#L22-L25. Fixed in 302cce73db7e27889ac7445adb0c2aca90a5d546.. Looks like you\u2019re overwriting Styleguidist\u2019s aliases. Could you show your config?. > Looks like you\u2019re overwriting Styleguidist\u2019s aliases.\nYup:\nwebpackConfig.resolve.alias = siteWebpack.resolve.alias;\nMerge it, don\u2019t overwrite.. Cool, thanks!. Thanks!. Thanks! Could you please check in Chrome, Firefox and Opera too? Since it was fine in Chrome at least.. You can also redefine a Wrapper component and have store available for all your components. See example with IntlProvider: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Cookbook.md#how-to-connect-redux-store. @stinoga Or even send a PR to the FAQ ;-). Thanks!. Thanks!. Painlessly for me \u2014 send two PRs for both branches ;-) But why do you want it in 4.x? 5.x needs testing, more time we spend in 4.x, more we postpone 5.x final release. I already use it in my project without any issues but I\u2019d like more people to try it.. Thanks, merged!\nI\u2019m going to write a changelog for 5.x in the next few days (it\u2019s going to be hard \u2014 there are 144 commits already).. Looks like you broke something:\n\n. The problem with JSON might be because of your includes\u00a0mask. Since we already have a json-loader it will just try to apply it twice for certain files. That\u2019s why require include option for all user loaders (it\u2018s not the case for upcoming 5.0.0).\nBut I\u2019m not sure what\u2018s wrong with aliases. The react alias looks suspicious but I don\u2018t think that it\u2018s a problem.\nI\u2019d suggest you to try beta of Styleguidist 5.0.0 (npm i react-styleguidist@5.0.0-beta-6). Docs: https://github.com/styleguidist/react-styleguidist/tree/next/docs (especially Getting Started). I\u2019ll write a changelong in the next few days. There are lots of changes in our Webpack config that should reduce number of issues with user configuration.. Thanks you very much for feedback!\n\nWhen I tried to re-use my project\u2019s Webpack config file, I got error messages from all components that HappyPack for Babel cannot be found\n\nThat\u2019s because we ignore plugins when you use webpackConfigFile (but not webpackConfig) to prevent problems with duplicated plugins (like HMR). I\u2019m going to try to implement smarter merging and see how it works.\n. Hi @joepsz, we have a new beta: https://github.com/styleguidist/react-styleguidist/releases/tag/5.0.0%40beta.9 and it does plugins merging.. @joepsz Could you show what config are you trying to use now and it doesn\u2019t work?. Sorry, I didn\u2019t have time to check it. Do you still have this issue? Could you please try in the latest beta? It has some changes in webpack configuration.. Closing this for now. Feel free to reopen if you still have this issue.\n5.0.0 is out by the way ;-). Thank you very much for your pull request! This all very interesting and I\u2019m sure useful. \nWould you mind to send a new PR to the next\u00a0branch? It\u2019s a new major release which is almost ready (code and docs are 95% done and more testing is needed), see #223 for more details. The reason I\u2019m asking you to do a lot more work is: every big pull request will delay new release more since I\u2019ll have to port it to the new branch, and code base is very different in some parts (especially loaders). Probably even better to split this into multiple PRs to make it easier to review and merge.\nFeel free to ping me in Gitter (or by email/Facebook/Skype) if you have any questions.. @madjam002 Thank you for understanding! :handshake: . @madjam002 Sounds good! . It should be fixed in the 5.0.0 beta. Could you please try it?\nhttps://github.com/styleguidist/react-styleguidist/releases/tag/5.0.0%40beta.9. Closing this for now. Feel free to reopen if you still have this issue.. Awesome, thanks!. @nkt And it wasn\u2019t visible in the diff ;-(. We can\u2019t use babel-standalone (we did that before) because it\u2019s huge. Support for IE9 doesn\u2019t worth such increase in bundle size anyway.\nBut there\u2019s a plan to make transpiler customizable via config, so you could use babel-standalone instead of buble for your project.\n/cc @n1313 . It implements a different feature: a Buble/Babel switch. We need just a config option to specify custom transpilation function that will run Buble by default.. If @n1313 is working on that it\u2018s better to ask him. Otherwise you can send a pull request to the next branch (it\u2019s quite simple to implement there and more complicated in master). (It\u2019s a beta of the next major release, see #223 for details.). > It's a step back for us.\nThis kind of comments are very uproductive. If you want to help us please do, if you want to complain go somewhere else.. Already fixed in 2bb09b7dcf70610d3b634825bdbc99abee795d47. New version should be available in 10 minutes.. Could you please also add tests for the loader?. Awesome! Can you add some tests for the loader and I\u2019ll merge it?. Yeah, and I believe it\u2019s not very difficult to make. It would be very cool if you have time and will to try it and send a pull request ;-). objectOf is supported in 5.x beta. Closing this for now. Feel free to reopen with more details.. Thanks!. Have you tried assetsDir option?\nhttps://github.com/styleguidist/react-styleguidist/blob/master/docs/Configuration.md. It shouldn\u2019t be a problem in the 5.0.0 beta. Could you please try it? \nhttps://github.com/styleguidist/react-styleguidist/releases/tag/5.0.0%40beta.9. That\u2019s why I\u2019ve added this warning ;-) Even if we never deprecate updateWebpackConfig it\u2019s good to solve as many use cases as possible without it. \nI think merging is the right way to solve the issue. We\u2018re doing some custom merging of plugins anyway. . Should be fixed in react-styleguidist@5.0.0-beta.10. Please try if you have time \ud83e\udd84 . Closing this for now. Feel free to reopen if you still have this issue.. So, should we rename bundle.js to rsg-bundle.js?. You have quite a lot of stuff in your config \u2014 would be cool to make Styleguidist work with it without any hacks.. It always strips output\u00a0but allows you to use entry in webpackConfig  so you can add polyfills and other things.\nYeah, if ignoring CommonsChunkPlugins\u00a0doesn\u2018t make things worse we can do that.. Should be fixed in react-styleguidist@5.0.0-beta.10. Please try if you have time \ud83e\udd84 . Closing this for now. Feel free to reopen if you still have this issue.. I\u2019ve tried to grep bundle of example styleguide and couldn\u2018t find any const so it shouldn\u2018t be from Styleguidist itself. Maybe some dependency was updated.\nI\u2018ll be happy to help with debugging but I need the code ;-). If it\u2019s only in this function then it\u2019s easy to fix. Thanks for the investigation!. I think the simples way would be to write examples with var ;-). For the file you mentioned earlier \u2014 yes, and it\u2018s easy to fix. For processing examples code: no, there\u2018s no processing.. Because we run examples code via Buble in a browser anyway. So fixing this one new const must be enough.. Should be fixed in react-styleguidist@5.0.0-beta.10. Please try if you have time \ud83e\udd84 . If that\u2018s a common file structure for Rails projects it worth trying to fix ;-) Although it\u2018ll require some investigation ;-)\n\nHave you tried React Styleguidist 5.x beta? \n\nHave you tried to put style guide config near package.json?. I can\u2019t reproduce this in 5.x beta. So it\u2019s either already fixed there or I\u2019m doing something wrong. So closing this for now.. Closing this for now. Feel free to reopen if you still have this issue.. Maybe not 5.x specific be definitely a bug, I\u2018ll try to debug and fix it (but feel free to submit a pull request if you have time and will to fix it).. I found a reason of this error but not sure about the right way to fix that.\n\n\nreact-docgen creates an object without prototype here: https://github.com/reactjs/react-docgen/blob/d65bfc460d7274206c3208fc41518727acd5a490/src/utils/docblock.js#L58\n\n\nThen to-ast tries to call hasOwnProperty on this object and fails: https://github.com/devongovett/to-ast/blob/master/index.js#L128\n\n\nOf course we can find a workaround that (read \u201chack\u201d) but probably one of these libraries should be fixed instead.. I\u2019ve created an issue at react-docgen: https://github.com/reactjs/react-docgen/issues/155. @AoDev It must be because Babel compilation is needed. I\u2019ll try to make a new beta tomorrow.. @AoDev Yeah, that would be the easiest way. Clone and then do npm i && npm run compile.. Maybe we should add a config option to define renderers for unknown (to Styleguidist) tags. Not sure it\u2018s a good idea to render everything ;-) But it\u2018s better to open another issue to discuss it.\n. @n1313 @AoDev Guys could we please close this issue and discuss a new feature in a new issue? \ud83c\udf1a . It\u2019d 5.x only issue, we don\u2019t use to-ast\u00a0in 4.x.. Will be happy to merge pull request with the fix ;-). It\u2019s not difficult to make an options for that. But if that annoys many people we could just remove it ;-)\nhttps://github.com/styleguidist/react-styleguidist/blob/next/bin/styleguidist.js#L12. I have no strong preference. But if I have to choose between removal and a new option, I\u2019d choose removal ;-). No console clearing anymore ;-)\nLet me know if we can improve UI further.. And one more for reference: https://github.com/okonet/react-dropzone/issues/343. For some reason octopus represents in my mind idea of many components gathered together. But not cute one like on GitHub logo but evil or mischievous octopus like on a tattoo or metal band logo. Or a bit close to PostCSS logo in style. . @nhavar Thanks! I\u2019ve edited your comment \u2014 now it has an image ;-). @theodorosploumis Sure! Do you have any ideas already?. @SaraVieira Cool, I like it! \ud83d\udc0a. Yeah, I\u2019m also interested in licensing and attribution. It may be an issue.. Sounds a bit complicated for a logo that can be used anywhere: http://support.flaticon.com/hc/en-us/articles/207248209-How-I-must-insert-the-attribution-\n(And I actually like your version more ;\u2013). Maybe you can redraw it using the original as inspiration? That would solve the issue and we\u2019d have an original logo ;-). Sounds good! For the text I think we need to choose I nice readable font and use it everywhere on a site.\n@okonet @SaraVieira I\u2019ll need your help with the site: especially colors, typography, etc. Will show you something soon ;-). I actually liked that I don\u2019t know what behind the legs ;-) I\u2019d rather remove dots on the head. But that\u2019s just option of an amateur. What @okonet would say? ;-). @okonet Now I like them too ;-) \nAnd I like the idea of extra legs \u2014 would fill empty \u201carmpits\u201d after removal of the \u201cback legs\u201d.. I think it\u2019s a bit too busy now \u2014 maybe make legs thinner? \ud83d\udc19. I actually like this turquoise color\u2026 but, wait, isn\u2019t it the same as in React logo? ;-). But I like combination of turquoise and orange anyway ;-)\n. We\u2019re all learning that\u2019s why we do open source ;-). >  \nI think this one is very close but need a bit of polishing. Maybe make this inner legs more round?\n. Cooool! Super clean and he\u2019s (or is it a girl?) smiling now :-) I also like it more in one color. (Do we want to use React color or something else?). Just have noticed that eyes are transparent \u2014 was that intentional?. Looks like everyone was at React Amsterdam except me \ud83d\ude22. @SaraVieira So far I\u2019m going to ReactiveConf in Bratislava in October ;-). I\u2019m going to start from local meetups \u2014 big conferences are too scary \ud83d\udc68\ud83c\udffb\u200d\ud83c\udf3e. That\u2019s what I have so far, pretty drafty though ;-)\n\nWill share the code in a few days I think so you could play with it.. I sill prefer the blue one ;-) But I like this gradient background though ;-)\nI\u2019ve tried the Montserrat on a home page:\n\nAny feedback?. @okonet Awesome! I like more curvy legs ;-) Could you send me an SVG \u2014 I\u2019d try to put it on a main page as well as other font.. > I thinks it needs more spacing between the sections :/\n@SaraVieira yeah, I think you\u2019re right ;-). > Are you designing this in the browser or using any software?\nAll in the browsers, so it\u2019s a real site already ;-)\n\nHolly crap! We should totally get stickers!\n\nYes!!!. I see two workarounds for that:\n\nJust put everything you need into an example code, add comment and stuff.\nUse regular syntax-highlighted code to show the important pieces.\n\n\n\n. > f I'm understanding you correctly, the Table example has that code in the markdown file and you just added comments around imports and such so as not to interfere.\nYep. \n\nThe Form example, you put the code directly somewhere as markdown, is that also in the markdown file?\n\nIt is but in a fenced block with a language, so it\u2018s rendered not as a playgound. Like the last example here.. It\u2018s not possible now but it\u2018s something I\u2018d like to have. The problem is to find the right API for this. We\u2019ll need to extend Markdown somehow, but we don\u2019t want to completely break rendering of Markdown files on GitHub and in code editors. It will be probably a braking change as well. \nRelated issues: #257, #269.. There are two things:\n\nYou should either include\u00a0your code or exclude\u00a0node_modules in your babel-loader. Otherwise you will have problems like this (see also warning about Lodash \u2014 it will just slow down your build in the best case).\nJSS shouldn\u2019t publish .babelrc to npm, I\u2019ll make an issue there.. 1. If you have something that needs transpiling in node_modules it complicates config a bit ;-) I list of all this dependencies and my own code in include of babel-loader. Like this.. (I also highly recommend @bebraw\u2019s book on Webpack :\u2014). JSS PR for reference: https://github.com/cssinjs/jss/pull/415. ES6 is supported in examples but we have to process requires separately an import is not supported yet. \n\nIn your case context\u00a0option might be more convenient: https://github.com/styleguidist/react-styleguidist/blob/next/docs/Configuration.md#context (you\u2019ll need 5.0.0 beta to use it: https://github.com/styleguidist/react-styleguidist/releases/tag/5.0.0%40beta.9). @roychoo Buble doesn\u2019t support import.\nWe need to find all required modules in advance and add them to webpack bundle. On the frontend require is just a function that returns one of this pre-loaded modules. That\u2019s why you can\u2019t require\u00a0anything new dynamically.. You need to update to 9.0.0 beta. . Thanks! Especially for new tests! \ud83e\udd84 . Value of context should be a module name as described in the docs:\nhttps://github.com/styleguidist/react-styleguidist/blob/next/docs/Configuration.md#context. @n1313 The only API change is that section name is now optional.. Awesome! Thank you! \ud83e\udd84 . Thanks!. More info in html-webpack-plugin FAQ\nProbably we can hardcode EJS loader from html-webpack-plugin, something like this:\njs\nconst loader = require.resolve('html-webpack-plugin/lib/loader');\nnew HtmlWebpackPlugin({\n  template: `!!${loader}!${template}`\n})\nAnother solution would be to replace html-webpack-plugin with something simpler that can\u2019t be affected by user loaders configuration.\n/cc @bebraw\n. Only practice can tell ;-) . That\u2019s why I didn\u2019t want to do any user config importing ;-) But we had the same issues before, even worse.. Should be fixed in react-styleguidist@5.0.0-beta.11.. Must be another overisolation issue with jss-isolate ;-). Should be fixed in react-styleguidist@5.0.0-beta.11.. I\u2019m not sure what exactly are you doing and why it doesn\u2019t work but there are some examples:\nhttps://github.com/styleguidist/react-styleguidist/blob/next/src/styles/theme.js#L15\nhttps://github.com/styleguidist/react-styleguidist/blob/next/src/rsg-components/StyleGuide/StyleGuideRenderer.js#L40-L44. We\u2019re using jss-nested: https://github.com/cssinjs/jss-nested#use-at-rules-inside-of-regular-rules. What should we write instead? There\u2019s no JSS syntax, as well as there\u2019s no PostCSS syntax. I can remove the \u201csyntax\u201d word.. There are other plugins that changes syntax like camelizing selectors, etc. So probably better to list all plugins.. This is even more confusing ;-)\n\nThere are other plugins that changes syntax like camelizing selectors, etc. So probably better to list all plugins.. Thanks!. Would you mind making an example as described here.. I see. entry will be ignored for webpackConfigFile as described in the docs. Use webpackConfig for that.\n\nhttps://github.com/styleguidist/react-styleguidist/blob/master/docs/Cookbook.md#how-to-add-custom-javascript-and-css-or-polyfills. I\u2019ve added a whole new page about webpack: https://github.com/styleguidist/react-styleguidist/blob/next/docs/Webpack.md\n(Make sure you browse docs in the next branch.). Wow, this GitHub conflict merging really works! ;-). @okonet You asked me to do that ;-). Yep, thanks!. Thanks! We have a new docs for the 5.x release. I hope there are much better, would be cool if you can take a look:\nhttps://github.com/styleguidist/react-styleguidist/tree/next/docs. Thanks, it was bad copypaste ;-). Thanks, this is awesome!\nI wrote you some comments to the commit itself but don\u2019t see them in the PR ;-/. \ud83d\udd25 . They have agreed to accept a pull request with extraction this logic to a separate file (not package) but until we can drop webpack 1 support we\u2019ll have to copypaste it.\n\n2nd: I think config lookup should be prevented only if webpackConfigPath is set.\n\nIn this case yes. You either specify a path or Styleguidist will try to use default location. So only webpackConfig should stop autoload.. The goal is to make it work with an existing webpack configuration. And to simplify initial configuration. To be able to run and show something useful with as little configuration as possible.\n\nThis way you have just one option instead of 2\u2026\n\nThis make sense. Right now the only difference in merging behavior is that webpackConfig allow entry when webpackConfigPath doesn\u2019t. Ability to easily add entries for extra files (like stylesheets) is something I\u2019d like to preserve. We may find another way to do it, not via webpack configuration. Then we could drop webpackConfigPath option. \n\n\u2026you can always modify whatever you want before giving it to sg.\n\nUsers don\u2019t want to modify their already working configuration. Especially if they have no idea what they have to modify to make it work ;-)\n\nWe are optimizing here for the case where sg can work without any config right after install, right? Is it realistic anyways?\n\nWith create-react-app \u2014 yes.. String doesn\u2019t make any advantage over require('./webpack.config.js') in my opinion.\nThere are a few use cases that I don\u2019t want to overcomplicate.\n\nOverriding Styleguidist components:\n\njs\nwebpackConfigFile: './config/webpack.config.js',\nwebpackConfig: {\n    resolve: {\n        alias: {\n            // Override Styleguidist components\n            'rsg-components/Logo':\n                path.join(__dirname, 'styleguide/components/Logo'),\n            'rsg-components/StyleGuide/StyleGuideRenderer':\n                path.join(__dirname, 'styleguide/components/StyleGuide'),\n        },\n    },\n}\n\nAdding new entries:\n\njs\nwebpackConfigFile: './config/webpack.config.js',\nwebpackConfig: {\n    entry: [\n      'babel-polyfill'\n  ]\n}\nSo I\u2019d like to have an easy ability to merge multiple configs. We\u2019re using webpack-merge internally, so that would work for example (I\u2019m fine with this solution):\njs\nwebpackConfig: [\n   require('./config/webpack.config.js'),\n   {\n    resolve: {\n        alias: {\n            // Override Styleguidist components\n            'rsg-components/Logo':\n                path.join(__dirname, 'styleguide/components/Logo'),\n            'rsg-components/StyleGuide/StyleGuideRenderer':\n                path.join(__dirname, 'styleguide/components/StyleGuide'),\n        },\n    },\n   }\n],\n(This actually won\u2019t work for new entries.)\nSo webpackConfig can be an object, an array or a function.. OK, some intermediate conclusions:\n\n\nWe all agree that we want only one option: webpackConfig. No webpackConfigFile anymore.\n\n\nNo recursive auto load.\n\n\nAuto load or user config. In the latter case user is responsible to require his config and pass it to webpackConfig option.\n\n\nBut we still have more questions:\n\n\nMerging: responsibility of the user or allow to pass an array of config objects?\n\n\nDefining new entries.\n\n\n. @okonet You mean webpack support it as a separate configs? This is a good point. So we\u2019ll just suggest webpack-merge in example (we\u2019ll need a lot of them).\nSo the only question is new entries.. @n1313 Yup. Are there any differences that we\u2019re missing?. Nooo, I\u2019d be happy to but it\u2019s too early \ud83d\ude06 . So what should we do with adding new webpack entries? I can only think of a new config option like this:\njs\n{\n  require: [\n    'babel-polyfill',\n    './src/styleguide/some.css',\n  ],\n}. You can\u2019t solve via merge because entry\u00a0will be ignored (like some other fields and plugins), otherwise this option will be useless in 99% cases. And that\u2019s exactly what we had in 4.x and it didn\u2019t work. . Out in 5.0.0-beta.15.. I don\u2019t know a good way to solve this. So far I use comments and define component classes inside examples:\njsx\n/*\nimport TableProvider from 'kao/components/TableProvider';\nimport * as sort from 'kao/util/sort';\nimport { Header, Body } from 'reactabular-table';\nimport orderBy from 'lodash/orderBy';\n*/\nclass SortTable extends React.Component {\n  constructor() {\n    super();\n    const sortable = sort.sort({\n      getSortingColumns: () => this.state.sortingColumns,\n      onSort: selectedColumn => {\n        this.setState({\n          sortingColumns: sort.byColumn({\n            sortingColumns: this.state.sortingColumns,\n            selectedColumn\n          })\n        });\n      }\n    });\n    this.state = {\n      sortingColumns: {},\n      columns: [\n        {\n          property: 'name',\n          header: {\n            label: 'Name',\n            formatters: [sort.header(sortable)],\n          },\n        },\n        {\n          property: 'color',\n          header: {\n            label: 'Color',\n            formatters: [sort.header(sortable)],\n          },\n          cell: {\n            formatters: [fixtures.getColorName],\n          },\n        },\n        {\n          property: 'male',\n          header: {\n            label: 'Male',\n            formatters: [sort.header(sortable)],\n          },\n          cell: {\n            formatters: [male => male && <Icon type=\"check\" />],\n          },\n        },\n        {\n          property: 'weight',\n          header: {\n            label: 'Weight',\n            formatters: [sort.header(sortable)],\n          },\n          cell: {\n            formatters: [weight => `${weight} g`],\n          },\n          props: {\n            className: 'text-right',\n          },\n        },\n      ],\n      rows: fixtures.rows,\n    };\n  }\n  render() {\n    const { columns, rows, sortingColumns } = this.state;\n    const sortedRows = sort.sorter({\n      columns,\n      sortingColumns,\n      sort: orderBy\n    })(rows);\n    return (\n      <TableProvider columns={columns}>\n        <Header />\n        <Body rows={sortedRows} rowKey=\"id\" />\n      </TableProvider>\n    );\n  }\n}\n<SortTable />\n\n. There\u2019s no Babel on the frontend. And I think this behavior would be very confusing because for example you can use require\u00a0in example and it will work.. > So, how is the rest of the code being transpiled to ES5?\nWith Buble. We can\u2019t use Babel because it\u2019s way too huge.\n\nOh, probably I misunderstand the problem then. Why is import and export aren't working then?\n\nBecause require\u00a0is just a function that returns a module, included in the bundle on the build step.. Can we do anything here? Update the docs or something for example? If not I\u2019d close it.. @stereobooster We can discuss it as soon as Buble implements them ;-) So far I don\u2019t see we can do anything here.. Try the new 6.0.0 beta \u2014 it may solve some of this issue. . I guess I meant importing examples from files.\n  . There\u2019s one in my comment at the very beginning of this issue ;-). I'm not sure, in any case worth documenting it more ;-). A good solution would be to extend code that we use for the context\u00a0option. But it\u2019d be tricky ;-). @rcline Doesn\u2019t look super hacky to me now, and I\u2019m sure we can avoid a global variable here. Feel free to send a pull request for that ;-). Not sure which code has been moved where ;-) \nI think the right place to do it is here: \nhttps://github.com/styleguidist/react-styleguidist/blob/916e173ecfeb29d89085ed0eddfbefc9f49afb7a/loaders/examples-loader.js#L22-L23\nBut it\u2019ll require some experiments, you\u2019ll need to move props-loader call there I think:\nhttps://github.com/styleguidist/react-styleguidist/blob/fc6a3ba0a0167de92a8c0c2a7e16d2ae7a3d190a/loaders/utils/processComponent.js#L35. Feel free to send a pull request with a fix, commenting that you also have a known issue won't help anyone.. Looks like react-docgen doesn\u2019t understand your propTypes so it catches your props only from defaultProps and shows only default values because of that.\nActually I don\u2019t see any reason to use a function here (didn\u2019t know that this is possible for classes \u2014 do they even work?). Could you try to use an object like in this example.\n. No plans yet but this is something that would be very cool ;-)\nSo any help if not with implementation but at least with some ideas / mockups / investigation how that should / could work in Styleguidist is greatly appreciated.. @alampros I\u2018m not sure why you need Redux for that ;-) Implementation is the simplest question for this feature \u2014 UI is much harder question.. Not sure we could reuse it \u2014 it looks very tied to Storybook but we definitely can learn from it.\n. I\u2019d be very to cool to have plugins in Styleguidist but I have no idea how we could implement them.. > This seems like a straightforward map of propType => input component, no? \nIn vacuum \u2014 yes ;-) But we need to add them to existing Styleguidist UI. It\u2018d make UI uglier if we show them by default. Also there\u2018s s an issue with checkboxes for example: it has two states but actually there\u2019s three: checked, unchecked and the value defined in Markdown file for a particular example. How that should work?. That won\u2019t work ;-). Another implementation in BlueKit: http://bluekit.blueberry.io/demo. I\u2019m looking again how other tools do this and looks like we\u2019re overcomplicate things here. All three (Attelier, Bluekit and Storybook Knobs) allows changing props only for one example, not for all examples of a component. So we could probably do it like in Storybook Knobs, as a tab under an example (where the editor is).\nWhich leads as to another thing: we can make a simple plugins API. Plugins will be visible as tabs under an example, they will have read/write access to example source, style guide config etc. That also means code editor could be implemented as a plugin, as well as its read only alternative.\n(cc @MicheleBertoli @cef62 \u2014 snapguidist could be implemented as a plugin too.). @darrylsepeda Thanks for your interest! Any help with the plugin API would be the most valuable: #505.\n\nI also don't understand how codemirror works, is it possible for codemirror to read our changes?\n\nWhat changes do you mean? But I guess it\u2019s possible because it updates the code every time you edit examples in Markdown files.\n. Looks like you shouldn\u2019t change the Markdown directly as a reaction to change in combobox but some state and than filter Markdown before each render. That\u2019s a good question for plugin API ;-). This doesn't add anything to the discussion and generates lots of spam emails to everyone subscribed to issue. I'm locking the issue now. Feel free to send a pull request or open a new, more constructive, issue.. Most probably custom plugin is the right way to go here. At least to solve the 1st use case.. Looks like this minimize\u00a0option doesn\u2019t do anything in our case. With or without it I see minimized CSS in our bundles in production. Don\u2019t know what exactly minimizes CSS (not css-loader) but we can safely remove it.. @okonet @kof Basically these two lines. We need to merge styles with user\u2019s styles and and also pass merged theme object. And strip Renderer\u00a0for nicer class names. \nI\u2019m not sure it\u2019s all possible to do with react-jss and what would be the best solution.. > Btw. WrappedComponent.name is not supported everywhere, haven't found caniuse data in this regard.\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\nWhy do you call them SomethingRenderer anyways and then replace the Renderer part in order to have nicer meta attributes on style tags?\n\nBecause I have components without Renderer\u00a0but they don\u2019t have any markup.. @kof What about merging with custom styles and passing theme object?. Components without Renderer are \u201ccontainers\u201d:\nfunction Button(props) {\n  const stuff = do something with props\n  return <ButtonRenderer {...stuff} />;\n}\nRenderers contains only HTML so users could easily change style guide rendering.. And of course I don\u2019t want to write ButtonContainer\u00a0instead of Button everywhere ;-). Because I don\u2019t want users to do that when they override our components.. Then let\u2019s make fast now and then we\u2019ll se if we can switch to react-jss :shipit: . @kof Yup, you should have commit right now. Welcome to the club but don\u2019t talk about it ;-). @kof Awesome!. I\u2019ve removed the next\u00a0branch because it was merged, so it wasn\u2019t me ;-| Is it possible to change the target branch without resending a PR?. We probably need to create another branch first because this one is probably from 4.x and it would be a nightmare to merge master to it.. How about @ignore JSDoc tag?\n/cc @kof. @kof Yup! ;-). I think we need to improve routing than hacking a feature for developers ;-)\nShow only the first section by default and and make links in the sidebar open sections in isolated mode.. It\u2019s not a plan you but something that would be nice to have. So any help is very appreciated ;-)\nWould you mind sending a pull request with your changes?. Actually I have a use case for isolated sections: I have a UI guidelines page with complex examples of different UI patterns composed of many components. So I spend a lot of time writing examples on this page and it would be nice to have just this page in a browser and not the whole style guide.. So if anyone wants to send a pull request for that it would be super cool ;-). @Knorcedger Awesome! \ud83c\udf55. @n1313 So you want the sidebar to show a combined tree of two independent style guides?. Yeah, both features would be great (I\u2019ll try to create an issue to track it and discuss possible implementation). I think proper routing would be the first step to achieve that.. Here it is: #494 ;-). Was released in 5.3.0.. @kof Yeah, I think so. Will be happy to merge a PR ;-). Have you tried this solution?. @lookapanda I\u2019ve updated the link.. I don\u2019t think it\u2019s lerna specific. Could you please try 5.x beta? . It\u2019s definitely not similar. Would you mind making an example as described here?. It looks like you\u2019re trying to load component from node_modules.. Please feel free to improve docs, they are far from perfect \ud83d\ude4f . Hi Oleg! Thanks for the pull request!\nI\u2019m afraid such behavior will annoy more people than the current behavior ;-/ Personally I want to know if I have an error in the code and what / where is this error. I also think that showing an obsolete state in the preview and requiring users to check the color of the border isn\u2019t very good idea.\nYou can increase previewDelay to show errors later. \nI\u2019ll keep the PR open for a while \u2014 maybe I\u2019m wrong and other contributors will say so ;-). @tizmagik That\u2019s exactly how it supposed to work: debounce changes in textarea.. @tizmagik That might work too though may unnecessary complicate the code ;-)\n@kof I agree that current solution is not perfect. Do you have any ideas how to improve it?. @kof That would hide them from the user ;-)\nMaybe @okonet has some ideas.. That\u2019s closer, yeah ;-) The only issue is when error is much taller than the rendered component. Or component wasn\u2019t rendered at all.. In case with no previous render or some tiny component that won\u2019t work. min-height\u00a0would cause the same jump we\u2019re trying to avoid.. So it would overlap the code? But I\u2019m also thinking about something like that. . I\u2018m closing this for now. We definitely can and should improve the error handling in the code editor but probably this is not the right direction for Styleguidist. Thank you for your work anyway! . Please make an example as described here, CSS Modules works fine with Styleguidist, so it must be something with your config but I don\u2019t see anything except pointed by @okonet.. Also position is a bit strange on my style guide. Haven\u2019t have time to investigate why:\n\n. Probably because we use corporate font in style guide.. Yup, that\u2019s my mistake, sorry ;-| I think 468cf75 and c095643 were the only changes.. Better? ;-)\nFar from perfect but better than nothing. With semantic-release it\u2018s not easy as I understand.. We don\u2019t have highlight.js in the bundle, it\u2019s all server side ;-). And actually it should support any language you define for fenced code block. At least HTML, for example.. We send HTML from webpack loader, so we don\u2019t have highlight.js on the frontend.. Cool, thanks!. Awesome! Thanks!. Thanks!. @okonet He means gzip for dev-server, not bundle minification.\nI don\u2019t know how useful gzip is for development ;-) Probably won\u2019t harm anyway so feel free to send a pull request.. Closing this for now. Feel free to reopen with more information.. Screenshot would be very helpful ;-). Looks cool! Will look at the code soon ;-). Awesome! Thank you very much \ud83c\udf55. wow such markdown much css. I\u2019ve sent a pull request to markdown-to-jsx: https://github.com/probablyup/markdown-to-jsx/pull/96. Out in 5.0.0-rc.1.. Maybe markdown-to-jsx itself has something that doesn\u2019t work in PhantomJS. This kind of regressions are very annoying. Do you have any ideas how we can test that?. Or maybe it\u2019s includes?. What do you think about eslint-plugin-compat?. Sounds complicated ;-/ though we already try to run builds with PhantomJS to check if they work.. It will fail in case of JS error but that\u2019s all it can ;-|. At least to reduce number of bug reports from you ;-). OK eslint-plugin-compat is nice to have but it only found fetch in one of examples ;-\u00a3. I\u2019ve even tried to add something like Chrome 11\u00a0to browserslist\u00a0;-?. Yup, it was includes ;-?. Out in 5.0.0-rc.1.. Do you have any good examples?\nI think if we\u2019re going to implement it we should find the simplest possible way to do it. For example I don't think an option to define maximum level would be useful ;-) we should probably just render one or two levels. But we should collect more real world examples first.. I mean examples of components ;-)\n\nEasy win, no?\n\nI don\u2019t think so \u2014 it very quickly will be unredable. . Do you remember LiveJournal? They allow to nest comments infinitely. I don\u2019t want to provide an option to switch UI to a terrible mode if we can avoid it ;-) . Anyway it\u2019s to early to discuss it.. Because we don\u2019t know what we should do: how important this issue is, what are the real world use cases, etc.. I\u2019m closing this for now. Feel free to submit a pull request if you need this.. Thanks!. Which version of Styleguidist are you using? 4.x or 5.0.0 beta? I don\u2019t have much experience with CRA so a demo project would be very helpful to debug.\n. Closing this for now. Feel free to reopen with more information.. Cool, thanks!. We were talking about Storybook like plugins that would add tabs under examples. But this also can be useful.. I think for knobs Storybook-style is quite good and enough. Why do you think it won\u2019t work well? . Could you make some mockup of your ideas? That would really help ;-). Have watched a ReactConf talk about it and this is amazing! But looks like it only works with Fiber. Not sure they will / can support React 15.. What do we want to extend by the way?\n\nTabs under the component playground (Storybook like) seems useful: non-editable code, snapshots, knobs\u2026\nAccess to style guide config.\n\nWhat else?. @cef62 Ping ;-) Do you have some time now? . I think unique ID generation should be part of the core but I don\u2019t know how to do expect use just indexes like Jest does itself.\nAbout HOCs: sounds like a good idea, do you know how we could easily implement that? I also think that we should start from predefined extension points (toolbars and tabs) like I describe in #426 \u2014 it should be easier to implement and would be enough for many plugins, for Snapguidist as well if I\u2019m not missing something ;-). Front matter is a nice idea but I\u2019m afraid we can\u2019t require users to write it for each example just to be able to use Snapguidist. We could use the text in a paragraph in front of the example. It\u2019s not perfect but probably better than indexes.. So, yeah, we could generate these IDs in the core and pass them to your plugin\u2019s tab component or whatever ;-). If we use text than most likely the text will be moved with the snippet and we don\u2019t have a better idea anyway ;-). To start working on the API something very simple: adding buttons to component toolbar. What do you like more 1 or 2?\njs\n// styleguide.config.js\nmodule.exports = {\n    // ...\n    plugins: [\n        require('styleguidist-plugin-foo')({ some: 'options' })\n    ]\n}\njs\n// Plugin that adds a button to each component toolbar\nimport React from 'react';\nimport ToolbarButton from 'react-styleguidist/lib/rsg-components/ToolbarButton');\nimport MdScreenShare from 'react-icons/lib/md/screen-share');\nexport default /* plugin options */ options => /* style guide config */ config => {\n    return {\n        // Buttons that should be added to a component toolbar\n        // 1.\n        getComponentToolbarButtons({ name, urlAnchor, urlIsolated, urlNoChrome }) {\n            return [\n                <ToolbarButton to={`http://sizzy.co/?url=${encodeURIComponent(urlNoChrome)}`} title=\"Open in Sizzy\" blank><MdScreenShare /></ToolbarButton>\n            ];\n        },\n        // 2.\n        toolbarButtons: [\n            ({ name, urlAnchor, urlIsolated, urlNoChrome }) =>\n                <ToolbarButton to={`http://sizzy.co/?url=${encodeURIComponent(urlNoChrome)}`} title=\"Open in Sizzy\" blank><MdScreenShare /></ToolbarButton>\n        ];\n    };\n};. @okonet Both are functions. The difference is only in an array placement: inside the function or outside. I like the second one more because it\u2018s just a component.. @cef62 Yeah, that\u2019s the idea for simple things like toolbar buttons. And after that we can think what else we need. . @cef62 There\u2019s the ui\u00a0branch, right now I\u2019m working on a component / section toolbar. I hope I could finish it on the weekend and commit. So far there\u2019s not much to see ;-). @cef62 I think I need to implement the first version of the API with only component toolbar extension and then you could help with things we\u2019ll need for Snapguidist.. @stepancar Any particular reason why? . @stepancar In the second you could return null ;-) Maybe you have some other ideas?. What if we make it more explicit like this?\njs\n// Plugin that adds a button to each component toolbar\nimport React from 'react';\nimport ToolbarButton from 'react-styleguidist/lib/rsg-components/ToolbarButton');\nimport MdScreenShare from 'react-icons/lib/md/screen-share');\nexport default /* plugin options */ options => /* style guide config */ config => {\n    return {\n        // Similar: onSection, onExample, etc.\n        onComponent({ addToolbarButton }, { name, urlAnchor, urlIsolated, urlNoChrome }) {\n           addToolbarButton(\n            <ToolbarButton to={`http://sizzy.co/?url=${encodeURIComponent(urlNoChrome)}`} title=\"Open in Sizzy\" blank><MdScreenShare /></ToolbarButton>\n            );\n        },\n    };\n};. I\u2019ve created a PR with some experiments: #505.. I think I\u2019ve seen some auto completion implementation for CodeMirror but not sure it\u2019d be easy to implement for our use case. Anyway feel free to experiment \u2014\u00a0sounds like a nice feature if it won\u2019t make code more complicated ;-). I\u2019m closing this for now. Feel free to submit a pull request if you need this ;-). Looks like it can\u2019t find a name of your component.\n\nDid it work before? This place was changed several 5.x betas before.\nCould you show your style guide config?\nTry to limit components\u00a0option to one component and see it happens to all your components or just one of them. In any case component\u2019s source would be helpful.. It is a recommended way but there\u2019s no easy way to make it stable. If we change something in Styleguidist components, you may need to update your customizations.. Awesome! Could we close this issue or you still have some questions? ;-). This looks like a bug but I can\u2019t reproduce it.. Closing this for now. Feel free to reopen with more details.. You can still use updateWebpackConfig option \u2014 it has no restrictions. It\u2019s marked as deprecated because we want to know all use cases where other options are not enough and encourage users to migrate to new options. . We may rename it to dangerouslyUpdateWebpackConfig and remove deprecation message \ud83d\udc80 . I think removing externals by default is the desired behavior in the most use cases. But I may be wrong ;-). Let\u2019s keep this issue open \u2014 I may do it before the final release ;-). Out in react-styleguidist@5.0.0-rc.2 ;-). The first snippet:\n\njsx\nconst a = { b: 42 };\n<Foo a={[a]}></Foo>\nI think @kof had this issue before but we couldn\u2019t find a way to fix it. This is something weird.\nThe second snippet:\njsx\nconst a = 42\n<Foo a={a}></Foo>\nLooks like this is correct behavior. Both Buble and Babel show an error, so it\u2019s not in Styleguidist somewhere.. The problem with the first snippet is that I can\u2019t reproduce the error:\n\nIf could make a demo as described here that would be awesome.. Looks like you have different versions of Buble in you dependencies. What npm list buble says?. Do you have anything in ls -a node_modules/buble/node_modules? My only guess is that one of dependencies of your project has older version of one of Buble\u2019s dependencies, and when you modify module resolution in your webpack config Buble receives this older version from the root node_modules instead of node_modules/buble/node_modules.. npm handles this when you don\u2019t override the default behavior in webpack config ;-). Closing this for now. Feel free to reopen if you have more questions.. I\u2019ve fixed that yesterday and will make a release soon ;-)\nMost probably you have an error in terminal that says that one of your JS files doesn\u2019t export a component.. > how could this be possibly fixed?\nThe only real fix is to stop inheriting components ;-)\n\nand btw\u2026\n\nCould you show me an example as described here?. > I do not import the app.scss into js - just load it into index.html\nI don\u2019t see where you\u2019re doing that. Most probably you need to use require\u00a0option to add this file to your style guide.. As described in the docs: https://github.com/styleguidist/react-styleguidist/blob/next/docs/Cookbook.md#how-to-add-custom-javascript-and-css-or-polyfills. @davidbucka @tsdrummer Please try react-styleguidist@5.0.0-rc.2. I\u2019m trying to make the error message more clear, and also it wouldn\u2019t break the whole style guide anymore ;-) I appreciate any feedback \ud83c\udf55. @davidbucka Can we close this or you still have some issues?. Awesome, thanks!. This is also cool ;-). Yeah, I\u2019d like to see some use cases where it actually simplify configuration. For me it brings more questions: ordering for example?\nWhat we can do is ignore front matters in markdown files and then generating sections config would be a few lines of code and up to the user.. It can be optional in a way that you don\u2019t have to use front matters. So Styleguidist will just ignore them but actual reading front matters and generation of a config object would be up to the user.. We also have nice docs: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Configuration.md#serverport \u2014 no need to search in the code ;-). Try to change serverHost to 0.0.0.0.. Looks like react-docgen doesn\u2019t support it. It\u2019s hard to detect all possible ways of defining stateless components without false positives (which would be worse \u2014\u00a0in your case you could just rewrite the component).. Cool, thanks!. It\u2019s obviously a bug ;-). Thanks for the PR!\nOne note: we probably should remove old files otherwise bundle folder will grow.. Probably better to use clean-webpack-plugin to keep everything in webpack config.. Up to you, I\u2019m fine either way ;-). Awesome, thanks!. I\u2019m making the same mistake for the second time \u2014 missing that a new dependency was added to the wrong group (dependencies / devDependencies) because GitHub doesn\u2019t show enough code in the diff to spot it \ud83e\udd14\nNew path release should fix that very soon.. Chrome had issues with this but looks like it works fine now, so we could change it.. Could we consider this a minor or patch change? Technically localhost\u00a0still works.\n/cc @okonet @n1313 . I\u2019m not sure Buble supports it. We\u2019re officially support (at least we try ;\u2013) IE11 but pull requests to improve support are welcome ;-). Sorry for the delay, I was traveling ;-) Thanks for your pull request!. It was a mistake and I immediately unpublished this version, so yarn shouldn\u2019t offer this version for upgrade. 4.7.0 was identical to 5.0.0.. Maybe you were unlucky to update before it was unpublished. Could you reproduce it now?. Looks like unpublishing doesn\u2019t work ;-(. Now it\u2019s unpublished.. Thanks for the pull request. I don\u2019t think it\u2019d be a good default. I agree with @n1313, would you mind sending a new pull request with a cookbook example?. @kulakowka Would you mind sending a pull request? ;-)\n@handonam You mean updating in your components, not in Styleguidist itself (this issue is about Styleguidsit\u2019s component but thanks for mentioning it anyway ;\u2013). Sorry for the delay, I was traveling ;-) Do tests pass locally? . Awesome, thanks!. I\u2019ve never tried it personally ;-/. In 6.0.0 (now in beta) you can you use js, jsx\u00a0or javascript\u00a0languages with fenced code blocks for interactive examples.. It won\u2019t work with a variable, not sure react-docgen will ever support it but try to fill an issue there.. I\u2019d try to avoid iframes ;-) \n. Could you please use the master branch? . Yeah, looks like the only way is to submit a new PR. @kulakowka sorry for the inconvenience ;-|. Yeah, I think it would be simpler than resolving a dozen of conflicts.. Yeah, that was the plan, just haven\u2019t have time to implement it yet ;-) It won\u2019t use the default value if you have your own patterns in the config.. Yeah \ud83d\ude2c. Call it MVP ;-). > Should we update the version of react in peerDependencies?\nProbably to 15+.\nI don\u2019t know what\u2019s wrong again with conflicts ;-/ Maybe your fork\u2019s master is behind?. Closing in favor of more complete #389. Thanks for your effort!. Duplicate of #388.. We have two PRs for the same thing: one has mysterious merge conflicts and one has mysterious CI failures (this one, it also seems more complete). So I\u2019ll try to merge this one and fix the CI.. They are going to make a release soon so I\u2019d wait a bit.. It actually completely breaks Styleguidist because of https://github.com/reactjs/react-docgen/issues/171, so I\u2019m reverting this for now.. Waiting for https://github.com/reactjs/react-docgen/pull/172. Finally I could make it work ;-|. I\u2019m afraid react-docgen doesn\u2019t support it, try to file an issue there.. Thanks!. I think it\u2019d be a good feature! We already do some description parsing here so I\u2019d start there ;-). @okonet That\u2019s exactly what I\u2019m suggesting ;-). And I\u2019ve pointed you to a wrong place, it should be here ;-). This was released in 5.2.0.. Thanks!\nI\u2019m trying to merge #389 but it still doesn\u2019t work as it should and I\u2019m not sure why ;-|. Awesome! \ud83c\udf55. Tests in master should work now.. That\u2019s what I\u2019d do: https://gist.github.com/9d02a2603619daa8de7f1287490c894f. You never hover on links, only on containers.. But probably you can hardcode these links back because of #426 ;-). Works fine for me: \n\nBut please take a look at #426, we\u2019re probably trying to do something that would be removed soon. So if it\u2018s easier to revert, please revert it back, and sorry for inconsistent suggestions ;-). Yep, thanks! \ud83c\udf55. Looks fine! There are two pieces not covered by any tests though.. Could you please make a few screenshots?. I\u2019d start from simpler code.. Cool, much better now! But something is wrong with the branch \u2014 there are some unrelated changes from master.. How did you merge master?. I\u2019ll try to merge it after 5.1 release.. No, we\u2019re not parsing code and relying on react-docgen for 95% of hard work. So I\u2019d wait for this PR and then send a PR to Styleguidist ;-). Closing this for now. Feel free to reopen or send a PR when react-docgen is merged ;-). Looks like react-docgen doesn\u2019t support it, try to file an issue there.. No, react-docgen works with source files. You should use react-docgen-typescript.. Rendering components (webpack) is not the same as parsing sources for props documentation (react-docgen).. Awesome, thanks!. You can only use require in examples: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Documenting.md#writing-code-examples. Imports are supported in 9.0.0. . I think you should report it to markdown-to-jsx.. Have you tried to change assetDir option?. Please make an example as described here so I could debug it.. Yeah, assetDir only affects dev server. What would be the right behavior here? Copy everything from assetDir to styleguideDir?. Do you want to try to implement it an submit a pull request? ;-). Awesome! I recommend you to watch this course by @kentcdodds: https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github. > So, regarding how to actually fix this I think we could use Copy Webpack Plugin and modify the scripts/make-webpack-config.js file to do this in production builds if the assetsDir config setting is present. I see if I can do this after a bit more testing.\nSounds good! Thanks for the research ;-). Thanks for the pull request! Could you also update DEFAULT_COMPONENTS_PATTERN and the docs?. And the last one ;-)\n\ndefault Styleguidist will search components using this glob pattern: src/components/**/*.js. Yeah, it should be the same as DEFAULT_COMPONENTS_PATTERN.. Could you show your style guide config?. If it means that the use can\u2019t zoom it the page then I can\u2019t accept this ;-|. Thanks, fixed!\n\nPlease submit a pull request right away next time \u2014\u00a0it\u2019s faster then filing an issue ;-). Would you mind sending a pull request? ;-). See it already \u2014 awesome! \ud83d\udc7e. How would that work? lint-staged works only with changed files \u2014 does Jest support that? . That\u2019s interesting! If it\u2019s fast enough we may try to add it: make sense for open source.. Deal ;-). We need jss-isolate so it\u2019s not an option. We just need to use color explicitly everywhere.. font-family inheritance was added to pass font-family from body to user\u2019s components. We shouldn\u2019t rely on style inheritance in Styleguidist UI. . So there are to separate issues:\n\nAbility to pass some styles (like font-family) from body to user\u2019s components.\nIsolation of Styleguidist UI from any user styles.. Out in 5.1.9.. I think it\u2019s coming from CodeMirror styles. PR to fix that would be very cool ;-). Is this something official? Will it break validation in webpack 2?. 1. Is it documented anywhere in webpack?\nIs it in the webpack 2 config schema?\n\nI consider it as a part of webpack API, otherwise it should not be inside webpack config.. That\u2019s what I\u2019m asking ;-). Let\u2019s wait for this PR: https://github.com/probablyup/markdown-to-jsx/pull/105\nIf they won\u2019t merge it today, I\u2019ll fix the previous version in our dependencies.. ~~Hacked~~ temporarily fixed in 5.1.6.. Thanks!. Cool, thanks!. I\u2019d suggest you to rewrite it without imports. Most of other ES6 features are supported by Node 6+.. babel-register in style guide config should work too but I haven\u2019t tried it.. The recommended way is rewriting ;-)\n\nNote: Babelified webpack configs (like webpack.config.babel.js) are not supported. We recommend to convert your config to native Node \u2014 Node 6 supports many ES6 features.. What exactly are you doing?\n. Where? In the master\u00a0branch?\n\nJust did \nrm -rf node_modules\nyarn\nworks fine.. And I can download the file from your error message so it\u2019s most probably network issues or something was wrong with npm.. Yeah, looks like a Yarn issue. Not sure we can do anything on our side ;-(. Thank for the pull request! I think it\u2019d be better to implement as a plugin, so I invite you to discuss possible plugin API for Styleguidist: https://github.com/styleguidist/react-styleguidist/issues/354\nI don\u2019t really want to add all possibly useful features to the core and I believe plugins would be much more powerful feature but I need help with defining an API. I\u2019ve also seen theme switcher in your style guide which could be another plugin and I think you\u2019d like to group these buttons somehow.. Try to export Test component.\n. You need to export a component, otherwise react-docgen couldn\u2019t make documentation for it. Otherwise you can create a section and describe your HOC using regular Markdown.. It does static analysis which is far from magic and can\u2019t really understand your code. If you believe it could be implemented please file an issue in react-docgen repo.. Could you publish the generated style guide somewhere? Is Node version different inside the container?. Is your files named README.md in upper case?. That\u2019s the reason I think. You\u2019re using case-insensitive file system at home (Mac, Windows) and your Docker container has case-sensitive one (Linux). The default getExampleFilename only checks for Readme.md. \nA fix to make the check case-insensitive is very appreciated ;-). There are two things:\n\n\nWe\u2019ve never spend much time on mobile experience so it\u2019s very simplistic now.\n\n\nThere\u2019s more generic UI issue: we\u2019re keep adding things to the UI and right now it\u2019s a bit cluttered and inconsistent.\n\n\nSo any improvements in both are very appreciated but try not to fix just one issue but think a bit broader ;-). I was thinking about adding something like this (see Define spacing constants).\n\nShould I just work with freedom and put the screenshots here?\n\nYeah! \ud83c\udf55. But we already have almost the same, but without animation ;-)\nI have a proposal for UI improvements but I need some time to write it, will try to open an issue today.. If you mean dark editor theme, you can change theme for your style guide ;-). No, sorry, I won\u2019t make a dark theme a default choice \u2014\u00a0so much harder to read than a light one ;-) . For many developers it\u2019s not but I think for a style guide it\u2019s a better default ;-). Cool, thanks! Much better than I could write ;-). \ud83c\udf55\n. These are not bells and whistles, these things are required for the plugin API, not something that we can do after that. There are needed as well for almost any new feature that requires a new UI (some of them are listed in the issue). And we already have issues like #235 that cannot be solved by just moving links around.\nPlugin API has a very high priority because the more users we have the more features they want and less likely I\u2019d want to have all these features in the core.. /cc @okonet @SaraVieira @MicheleBertoli @stepancar @Knorcedger @aaronjensen @skidding. @Knorcedger I hate these links ;-) \nIcons are just to show the idea, from Font Awesome. Any better candidates? There\u2019s the whole list of actions in the issue description (some of them are new like toggling props (I really want this) :\u2013). @SaraVieira Yes, because you don\u2019t need them when you\u2019re developing a component. And for some components they occupy a lot of space.. @MicheleBertoli I mostly like it too except these ugly isolation mode links ;-). @SaraVieira Yeah, exactly \ud83d\ude2c\nIt will be a small fix as soon as we implement a global toolbar where we could put that switch \u2014 do you want to help with that too? \ud83d\ude0a. I think we can start from simple things like components for toolbar, toolbar button and global toolbar itself (I think it should be fixed in the bottom left corner inside the sidebar if we have a sidebar or just floating).. These are all I can imagine:\n\n\nGlobal (toggle sidebar, toggle props/description, switch background, close isolation = go home);\n\n\nSo we can start from home and then add props toggle.. What do you mean by \u201cdropdown of the props\u201d? ;-)\nI\u2019m not sure about the logo because the text can be changed but would be nice to have it somewhere.. \n. @cef62 @SaraVieira The new toolbar is in the ui branch ;-) I\u2019m going to work example toolbar + tabs and then on the plugins API proof of concept.. One more sneak peek:\n\nI\u2019m also thinking about using the same tabs UI for showing props/methods, hidden by default (possible to change by config option) and possible to extend by plugins.. @okonet We can make header a simple link but I don\u2019t want to show anything on the left side, it didn\u2019t really work for Styleguidist (can be hidden on small screens, having something on both sides of the header was strange).. I\u2019m going to release these changes next with (with slight modification):\n\nDo you have any feedback? You can try it in the ui\u00a0branch.. Thing I know I\u2019m going to change:\n\nAdd links to component headers.\nProbably remove the link button from component toolbar.\nThink more about buttons outlines (appreciate any ideas here).\nMaybe change title of Props & Methods tab if I could find a better one.\nTry to move example tab (Code) and toolbar outside the example border.. No changes for small screens so far bug I should test it again ;-)\n\n\nand make preview container as wide as possible\n\nWhat do you mean? Remove max-width? . The first part is done in 5.4.0! \ud83e\udd86. @okonet @SaraVieira What do you think? (See the previous comment ;-). Yeah, it wasn\u2019t yet published when I did update to JSS 7. PR will be good of course but it\u2019s a bit more complicated, ideally:\n\nUpdate jss-isolate to 3.0.0 (it\u2019s not used anywhere in the code now, see 2).\nRemove our fork (but keep in mind that the list of non-inherited properties was removed from jss-isolate, so we need to keep a list from our fork)\nTry jss-increase-id-specificity, it should solve issues like the hide code button on this style guide.\n\nI\u2019ll be happy to merge pull request(s) for any of these ;-). > I never published the version non-inherited props list, I guess you started using it from the master.\nThat\u2019s exactly what I said ;-). And you can generate sections based on folders.. Nice catch, thanks!. This should work: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Cookbook.md#how-to-connect-redux-store. @hmontes Yup, exactly, as any other component example. \nIf you have any issues, please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example and open a new issue.. Merged, thanks!. I\u2019ve made some tweaks in 19ed879 ;-). Thanks for the pull request! I like the idea ;-) A few thoughts:\n\n\nThe scaled down logo doesn\u2019t look good. I\u2019ve tried to use an octopus emoji on the upcoming Styleguidist site and I like it more so far:\n\n\n\nI don\u2019t like the idea of hardcoding the icon to the HTML, and keeping it as base64 in the source code as well.\n\n\nThere should be an easy way to use a custom favicon. It was possible to put an icon into a root folder. With this change the only way to change an icon will be using a custom template.\n\n\nI don\u2019t have a good solution to 2 and 3 now though.. I\u2019m closing this for now because I don\u2019t see an easy way to implement that yet. Feel free to submit a new pull request.. Should we use a branch for the new UI? I don\u2019t want it to block other features and don\u2019t want to release many small changes separately.. This PR alone creates even more inconsistency with opening / closing isolation ;-|. That\u2019s why I want to use a branch, so we could iterate not in production ;-). I think it\u2019s good enough for the very first iteration, merged, thanks! :shipit: . Thanks for the pull request @dotcs! I like the idea of metadata but I think tag rendering and filtering should be a plugin, so I invite you to discuss possible plugin API for Styleguidist: #354.\nAnother idea that could use similar API: #421.. I\u2019d keep the metadata reader without special treatment for tags.\nAnd any input on plugins API is very much appreciated ;-) It\u2019s still planned because nobody really knows what to do ;-). Should I merge it or you\u2019re planning to do something else in this PR?. Sounds good ;-). Thanks, I\u2019ll add some docs later ;-). Cool, thanks!. I\u2019m sure eslint-plugin-react can do that as well as many other things. I think it\u2019s way out of scope of Styleguidist and other tools already exist that do that much better.. How are you installing CRA with TypeScript? Could you help me reproduce it?. Closing this for now. Feel free to reopen with more data.. > Side note: I had to fix some lint issues (see commit dcf17a9) because code from master was invalid...?!\nLooks like you need to npm install\u00a0after merging master to your branch.. I think we could get rid of position: relative as soon as we finish #426.. Should be fixed in 5.4.0.. Yeah, funny bug ;-) Thanks for the report!\nShould be easy to fix if you of anyone want to submit a pull request ;-). Will be fixed in #447.. It\u2019s not released yet.. Should be fixed in 5.3.0.. Could you please explain what problem you\u2019re solving with this pull request?. Styleguidist is not a JS documentation engine, now it works for react component. I\u2019d recommend you to use something like Documentation.js and include generated Markdown as a section in Styleguidist.. Thanks for the pull request!. Cool, thanks!. https://react-styleguidist.js.org/docs/cookbook.html#how-to-exclude-some-components-from-style-guide. The only way to do it now is to require external files from Markdown but it\u2019s ugly and style guide users won\u2019t see the source.\nThis would be a nice to have feature if you have any ideas how that would look. Some related issues: #257, #269, #324.. Actually #269 is about exactly this problem so let\u2019s keep all discussion there.. Please make an example as described here so I could reproduce the error... I can\u2019t reproduce it in an example style guide.\n\nPlease make an example as described here so I could reproduce the error... Looks like you have the same issue as #359. Maybe try to use node_modules instead of ${__dirname}/node_modules.. It worked for me when I did it exactly as shown in react-docgen-typescript readme. One thing I see here (not sure it\u2019s important at all): tileExample\u00a0is not a component name, it should be CamelCase.. /cc @pvasek . Thanks for the pull request! I think it\u2019s already fixed in the ui branch, I\u2019ll check again. . It\u2019s not the latest code anyway, I\u2019ll check it again when I finish the new UI.. I can\u2019t reproduce it in the ui branch now (pushed the latest changes).. Could you elaborate what exactly you want to achieve? Do you want to use these component or do you want to show them in the style guide?. That\u2019s what I would try to do.. I don\u2018t know what you mean by static and dynamic location. Something like this should work:\n\njs\nmodule.exports = {\n    components: require.resolve('sws-ui-common').replace('index.js', '') + '/react/shared/components/**/*.js'\n}. I don\u2019t really understand why you use npm links, for your use case installing an npm package from Git seems more appropriate. If nothing works you\u2019d probably have to hardcode a path.. You can install an npm package from Git, that\u2019s what we do ;-) npm link is supposed to be used for testing only.. You have the same issue as #304:\n\nDo not run Babel on node_modules.\nI\u2019ll send a PR to jss-default-unit to remove .babelrc\u00a0for their package.. For devtools it should not be necessary, so feel free to send a pull request ;-)\n\nThe only thing I\u2019m not sure about is the production build: should we disable sourcemaps in this case?. @n1313 Did you want to be able to change devtools? What should we do for production build? . @n1313 Sorry, it was @cef62 ;-). I think it should explicitly disable devtool\u00a0in production, otherwise it would complicate style guide configuration and will be easy to miss.. Thanks for the repro! I\u2019ll make a new release as soon as I figure out why CI is failing ;-|. Should be fixed in 5.3.0.. Please stop spamming us \ud83d\ude2d. Unfortunately it\u2019s more common and yes, it should ;-) And soon will \u2014\u00a0#440.. Ah, such an embarrassing bug \ud83d\ude22  A new version will be published in the next few minutes, and I\u2019ve added test to prevent regressions here. Thanks for the report! :shipit: . We need an option to swap Buble for anything, not for Babel. I will be happy to accept a pull request ;-). @ambroselittle We\u2019re using Buble only for Markdown example. Your app code \u2014 your webpack loaders ;-) Styleguidist won\u2019t support Babel by default again \u2014 it\u2019s just to big to load on the frontend. . @ambroselittle With CRA it should just work\u00a0\u2014 Styleguidist should load CRA webpack config automatically. Could you make a demo somewhere that I could debug?. Thanks for a detailed bug report! I\u2019ll think what we can do to improve this ;-). @oieduardorabelo I don\u2019t really understand what this plugin does an how it would solve the issue.\nI think we should fix the \u201cpolyfill\u201d so it won\u2019t fail silently at least:\njs\n// FIX: require.ensure polyfill for tests\n// Can\u2019t make it work from tests, it shouldn\u2019t be in the app code.\nif (typeof require.ensure !== 'function') {\n    require.ensure = (d, c) => c(require);\n}. We don\u2019t have the piece of code I\u2019ve mentioned in the previous comment so I suppose this isn\u2019t relevant anymore.\nI\u2019m closing this for now. Feel free to reopen if you still have this issue.. Looks like you need an API to return all examples for this?. https://screener.io/ \u2014 visual testing for Storybook.. But Storybook I\u2019d say :-). @n1313 I think both would work ;-) Do you know any third-party tools that we can use? Most likely it will be a plugin anyway ;-). > RSG already has everything it needs to integrate with external visual regression tools: #238 #334.\nHas everything is not integration. I have no idea what to do for example ;-)\n\nIntegrating an external tool into RSG sounds like a massive feature creep to me.\n\nNobody is saying that and it won\u2019t happen. That\u2019s why the plugin API is so important.. > I think react-styleguidist is a good place to do this\nTotally agree with that ;-) It doesn\u2019t imply it should be in the core.\nThe second quote is out of context, you\u2019ve removed the important \u201cmight be\u201d.\nWe don\u2019t have any concrete plans yet and there\u2019s no point in arguing about the words \u2014 it doesn\u2019t add anything to the discussion. If you have any ideas how to implement it in an easy to use way please share them ;-). Could write a blog post or something like that on how to do that? So far it doesn't look simple and user friendly ;-). @tzapu Snapguidist doesn\u2019t do visual snapshots.. @Andarist @unindented That\u2019s awesome! Feel free to send PRs to add these links to the docs ;-)\nI think we need a new testing guide too ;-). @ttiurani It sounds like a great idea! Should it be a REST or Node API? . Node API maybe useful for other tools but I\u2019m just asking ;-) In any case it would be easy to expose if we need it.. Any help with this API would be super awesome! \ud83e\udd84 \n\nway to add a title/id for each example in the markdown file, that would be even better\n\nBetter to open a separate issue with some use cases.\n\np.s. A slight bug report\n\nI think it will be fixed in 6.1. But please open a new issue if you find another bug.. Please make an example as described here.. The docs are already mention it, feel free to send a pull request though.. I\u2019m wondering if it can break existing style guides. I think it would be better to remove mentions of HOCs in the docs and check if component has displayName\u00a0in props-loader.. You need to exclude index.js from you style guide: https://react-styleguidist.js.org/docs/components.html (see the first example).. Then change it: https://react-styleguidist.js.org/docs/configuration.html#getcomponentpathline. Would be cool to add Algolia search to the site ;-). Routing is a big issue described in #494 but we can probably fix an error here.. Has PR: #474.. @SaraVieira Awesome!. JSON is much easier to automate and it\u2019s not that complicated to use JS ;-). What kind of problems it found? Maybe we should just change the config ;-). You can\u2019t \u201cfix\u201d that, it\u2019s a feature ;-) We should probably add it to external-module-folders (they are not external though but I don\u2019t see a better way).. @okonet That\u2019s probably better, thanks!. Looks like we need a webpack resolver here.. Take a look at CRA implementation (link in the description), they have all the code (and we probably can reuse it).. But they already have it ;-/\nhttps://github.com/facebookincubator/create-react-app/blob/dc4ce606ef8b4c97aec0c80c20f8116e9795bb21/packages/react-dev-utils/WebpackDevServerUtils.js#L38-L88. Try to reuse their code first ;-). Looks cool! Could we remove this npm run compile\u00a0notice? It\u2019s incorrect anyway ;-)\n\nStyle guide \u2192\u00a0style guide\nOn Your Network \u2192  On your network. Sounds good, thanks! \ud83c\udf55. @SaraVieira Do you have anything to pull request here? ;-). This look very close: https://github.com/js-cli/glogg. @adityavohra7 That\u2019s exactly what I want to do! I just not sure about the API and implementation. \n\nProbably pass a logger object to the API like this:\njs\nconst styleguide = styleguidist({\n  components: './lib/components/**/*.js',\n  logger: {\n    error: msg => console.error(msg)\n  }\n});. There\u2019s a PR: #510.. Haha, I forget to link it in the latest sentence ;-) . There\u2019s even better candidate: https://github.com/GoogleChrome/puppeteer. @devsnek Sounds great!. Awesome, thanks!. Theme is a style guide UI theme, it should no affect you app\u2019s code (that would be a bug ;\u2013)\nMore info here: https://react-styleguidist.js.org/docs/development.html. I\u2019ll make a release probably tomorrow, sorry for confusion ;-). 5.4.0 is here!. What kind of errors do you have? According to the docs both variants should be the same \u2014\u00a0https://github.com/stefanpenner/es6-promise#auto-polyfill. This is weird because it would break CI and won\u2019t work for everybody else. Could it be something unusual in your webpack config?. Could you run npm ls es6-promise? It looks like it uses a different version of the package \u2014 may be because of resolve.modules in webpack config.. Could you please make an example as described here? It will require some debugging ;-). That\u2019s how it supposed to work ;-| I\u2019ll try to debug it a bit later.. @aga5tya It works for me without any warnings and I see some styled components. Am I missing something?. @Guru107 Could you please make an example as described here for Glamor?. @aga5tya I think you\u2019re doing the right thing now, that\u2019s the recommended way of using Styled components as well: https://react-styleguidist.js.org/docs/cookbook#how-to-use-react-styleguidist-with-styled-components. I\u2019ve linked your example from the docs \u2014 https://react-styleguidist.js.org/docs/thirdparties.html#fela\nThank you very much!. @drewdrewthis Please stop spamming us, I\u2019ll have to ban you otherwise.. I think major / minor is very subjective here. We may change it in the future if it annoys majority of the users and we find a better way to solve issues with props visible by default.. > I just assumed this to be a headline/ placeholder only.\nTry to hover on it ;-) It looks and behaves the same as the code button in examples.\n\nsetting showUsage: true doesn't make any difference.\n\nThis should be fixed in 5.4.1.. I\u2019m still not 100% sure that hiding them by default is the best solution. Probably we should improve developer experience in isolated mode (there are too much unnecessary things on the screen) and revisit this decision.. It will stay anyway ;-) but the default value could be changed.. Closing this for now \u2014 we may revisit it in the future.. Yeah, looks like fontFamily is missing somewhere ;-|. One more:\n\n. Should be fixed in 5.4.2.. Thanks for the pull request @verkholantsev! We already have an PR for that \u2014\u00a0#440 but I\u2019m not sure if @dotcs is going to finish it. Please take a look at the comments there because your implementation has similar issues that I mentioned in the review ;-). I think we should clean the cache on code updates otherwise it won\u2019t work when you add new files when Styleguidist is running. But better to test it to make sure how exactly it works ;-). It should be enough to reset cache just in styleguide-loader I think.. That\u2019s a good reason to have a simple to understand option ;-). There\u2019s a PR: https://github.com/styleguidist/react-styleguidist/issues/504 ;-). Released in 5.5.0.. There are a few test failures as well. . Looks like it was a mistake to mark it as an easy task ;-0. Looks like we broke PhantomJS:\nReferenceError: Can't find variable: process\n  phantomjs://code/phantom.js:7 in global code\nProbably that\u2019s why it was using systeminstead of process\u00a0;-(. It\u2019s a merge issue: the added lines in src/styles/setupjss.js aren\u2019t here anymore.. You also need to update npm lock file \u2014 it should fix CI failures.. Then move it to the right section in package.json and I\u2019ll do that ;-). Now something is wrong on CI. Does tests pass for you locally?. Ha! I can\u2019t even install dependencies locally, have the same Cannot find module 'babel-helpers' error.. I\u2019ve regenerated the lock file so npm install works now. But there are some test failures \u2014 most of them are just out of date snapshots (run jest -u). But the one with undefined\u00a0class I think because of this:\njs\n    const classNames = cx({\n        [classes.button]: true,\n        [className]: true,\n        [classes.small]: small,\n    });\nI\u2019d try this instead (it\u2019s more clear anyway ;-):\njs\n    const classNames = cx(classes.button, className, {\n        [classes.small]: small,\n    });\n. Looks like we\u2019ll have to fork copy-text-to-clipboard because they use arrow functions and it breaks UglifyJS (look at CI report) ;-(\nhttps://github.com/sindresorhus/copy-text-to-clipboard/issues/5. Try this one: https://github.com/feross/clipboard-copy. I\u2019d mock clipboard-copy and test if it\u2019s called with the right text when you click the button.. Merged manually in 5fbbc6773964042e350d12de8126f325232a48a5, thanks for the pull request!. @SaraVieira Awesome!. I think dangerouslyUpdateWebpackConfig to be truly dangerous \u2014\u00a0you receive the final webpack config and do whatever you want \u2014 most likely shoot yourself in the leg ;-)\nYou can override components if you add them before the alias. Also take a look at #483.\nWhat are you trying to do by the way? ;-). They will work if you\u2019ll add them before, something like this:\njs\nupdateWebpackConfig(webpackConfig) {\n  webpackConfig.resolve.alias = {\n       'rsg-components/StyleGuide/StyleGuideRenderer': path.join(__dirname, 'lib/styleguide/StyleGuideRenderer',\n      ...webpackConfig.resolve.alias,\n   };\n  return webpackConfig;\n},. There\u2019s no old way, it\u2019s a new option introduced in 5.0 ;-) It should work that way: it allows you to do anything and it won\u2019t fix your mistakes. It\u2019s usage is highly discouraged.\nI\u2019m still not sure why do you need to use it ;-). Doesn\u2019t matter (there are none now) but the Slot\u00a0component can render any number of items. So the props tab button should contain a check if there are props or methods and render null if there are none.. I\u2019ve made some tweaks (see my commits) and merged. Thanks!. Thanks for the pull request!\nPlease update npm lock file (package-lock.json) \u2014 it should fix the CI.. I\u2019ve updated the lock file but there are a few failing tests ;-|. Don\u2019t worry about the CI failures and bot comments \u2014 I\u2019m experimenting a bit here ;-). I think we should run it only in on production build. Dev server serves static files directly from that folder.. I\u2019ve merged it manually because of conflicts. Thanks!. I think it actually the same issue as #491 but it won\u2019t hurt to have it explicitly removed.. The problem is that it breaks jss-isolate, because that unsupported in  Chrome 55 pseudo element discards the whole jss-isolate selector: \ncss\n\u2026 .input-0-68, .input-0-68::placeholder, .list-0-71 \u2026 {}\nSo we need to disable isolation for rules with ``:\njs\n'&::placeholder': {\n  isolate: false\n  // ...\n}. I think your fix should be enough, what\u2019s the error with this fix?. I think we need to validate the path (<caption>JSX</caption>) and check existence of the file (and show useful warning in that case). . Yup, I\u2019ve reread your comment and wrote my second comment after that ;-). @ambidexterich Awesome!. I\u2019m not sure we need a RR here because we don\u2019t really have real routes \u2014\u00a0we have a component filter. So we need a way to parse URL and call different filtering functions and react to URL changes. And allow extension by plugins.. I\u2019m not sure, probably not or it won\u2019t be the hard part anyway.. RR is mostly used to render different components depending on a route which we don\u2019t need \u2014 we alway render the same component but with different props. I think we need something like Navigo.. :tada: This issue has been resolved in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. First link in Google: https://github.com/facebookincubator/create-react-app/issues/214. Tests shouldn\u2019t fail locally \u2014 they don\u2019t fail in master, but they are obviously failing because the code was changed ;-) You need to update snapshots (run jest -u).. In 5.5.0 you can easily redefine Pathline component, so I\u2019m closing this as we discussed before ;-). Would you mind send a pull request for that? Doesn\u2019t look very complicated you already know what to do ;-). @ethanh1223 Yup :shipit: . Yeah, we should be fare and update the package.json \u2014 React 15 is more than year old anyway. Thanks for the bug report!. The initial version was closer to what I\u2019d merge unfortunately ;-|. Cool, thanks!. > It all works if I export just the component (in this case export default Logo;)\nWhat doesn\u2019t work in this case?. It\u2019s a limitation of react-docgen that we use to parse source code, you can read more in the docs. I\u2019m not sure there\u2019s a simpler way to solve this than writing custom react-docgen resolver like suggested here. \nI\u2019ve never tried to do that but I suppose it could be not that hard to do for a particular use case. Make it in a more generic way would be much harder. I\u2019d also create an issue at react-docgen \u2014 maybe they would suggest a better solution.. @apennell Awesome!\nPersonally I don\u2019t see any benefit in react-css-modules and use CSS Modules directly ;-). For multiple class names I use classnames \u2014 works well ;-). I\u2019m trying it right now and it works fine. Am I missing something?\n```js\nimport React from 'react';\nimport CSSModules from 'react-css-modules';\nimport s from './Button.css';\nexport function Button({ color, size, children }) { / ... / }\nexport default CSSModules(Button, s);\n```\n\n. @apennell I\u2019ve added a new guide to the docs \u2014 I hope it explains how this works better. \nFeel free to improve it further ;-). Thanks for the pull request! I\u2019ve merged it as is because we\u2019re going to remove this conditions soon anyway.\nAre you interested in working on #499 as well? ;-). @adityavohra7 Yes, and it should be a major release. \nExamples rework may be a good candidate for the next major: https://github.com/styleguidist/react-styleguidist/milestone/6. Awesome, thanks!. > how would a third-party plugin be registered (webpack loaders will have to be reconfigured for this, probably?) and configured\nLike this, via style guide config:\njs\nmodule.exports = {\n  plugins: {\n    // These are Node module names\n    'my-awesome-plugin': true,\n    'my-another-plugin': {\n      // Some options here\n    }\n  }\n};\n\nI think it would be great if styles or classnames were somehow exposed to the plugins, so that they could use them to look like a natural part of the UI. A third-party button plugin will not have easy access to TabButton component and won't be able to easily follow any future changes in RSG UI (or any customizations that an end-user might have).\n\nPlugins are run in the same webpack context as the Styleguidist UI so you could import rsg-components/TabButton or rsg-componets/Styled to have access to all theme variables.\n\nPassing refs for relevant HTML nodes would be useful, too.\n\nNot sure about that yet ;-). Alphabetical doesn\u2019t make any sense ;-) It should work similar to PostCSS. Or we can make an array,  similar to Babel:\njs\nmodule.exports = {\n  plugins: [\n    // These are Node module names\n    'my-awesome-plugin',\n    ['my-another-plugin', {\n      // Some options here\n    }]\n  ]\n};. Cool, I\u2019m fine with it too \u2014 both are familiar for many users.. > which props do the components receive? different props for each slot?\nAll fills in a slot receive the same props except active, passed via props\u00a0prop. Right now they don\u2019t receive much but we just need to pass more ;-)\n\nare the actions (e.g. hide/show for docs) pre-defined by the slots?\n\nThere\u2019s no such action ;-) Tabs are using the same Slot component and parent component stores active tab ID in its state and changes it on tab button click.\n\nis it possible for components in different slots communicate to each other (I guess is covered by \"Store and change state for plugins\")?\n\nIt should be possible and most likely will be covered by that, at least partially. But I need more feedback and ideas here ;-| @MicheleBertoli . > considering plugin load order and changing plugin list into an array as discussed above.\nFeel free to do it if you have time! ;-)\n\nevery fill should receive component name, path and markdown block index (if applicable), so that a plugin could be configured to only work on certain components/markdowns. Maybe even going as far as putting this into standard plugin config.\n\nYup, right now they receive some random data ;-|\n\nmaking a decision on what data and methods should be available to plugins, and whether all plugins should receive the same data regardless of their slot.\nFor example, should props data (\"usage\") be available to toolbar buttons?\n\nIf it makes implementation simpler why not?\n\nI think it should be possible to pass this data \"inside\" a plugin by exporting two fills, one for docsTabButton and one for exampleToolbarButton and then sharing it between them, but is this a good way? Could it be done better?\n\nI think we should try to implement some useful plugins and then we\u2019ll see what work and what doesn\u2019t.\n\ncoming up with a way to change the styles of rsg-components like Playground from plugins. Consider a plugin that switches Playground background color from plain white to striped, or that switches its width from 100% to 320px to simulate mobile view. A hacky way to do this would be via DOM manipulation. A better way would be to give plugins some sort of an API to do that, maybe by passing refs?\n\nI think JSS dynamic properties is a way to go here. We\u2019ll need to pass more data to some component and make plugins be able to pass styles.\n\nconsidering sharing the \"parent rsg-component\" to plugins, so that they have easy access to its props and state, and can modify it by setState.\n\nSomething like that will be necessary. I\u2019d rather pass state\u00a0and setState\u00a0implicitly than the whole this.\n\nimproving plugin loader so that class components (class Something extends Component) can be used as fills. Currently this is not supported (only simple functions that export JSX are allowed), or I couldn't understand how to make it work.\n\nIt supposed to work already, I\u2019ve probably missed something ;-). But this is a check for a plugin itself, not for a fill. I don\u2019t see any checks for fills.. It may be me I just don\u2019t see where yet ;-). Maybe, I don\u2019t have a strong preference ;-). \nPlugin code:\n```js\nimport React from 'react';\nimport MdBorderAll from 'react-icons/lib/md/border-all';\nimport MdBorderClear from 'react-icons/lib/md/border-clear';\nimport ToolbarButton from 'rsg-components/ToolbarButton';\nconst BackgroundButton = ({ state, setState }) =>\n    state.__backgroundIsEnabled\n        ?  setState({ __backgroundIsEnabled: false })} title=\"Show normal background\">\n        \n\n        :  setState({ __backgroundIsEnabled: true })} title=\"Show transparent background\">\n        \n;\nconst backgroundPlugin = () => ({\n    fills: [\n        {\n            type: 'exampleToolbarButton',\n            render: BackgroundButton,\n        },\n    ],\n});\nexport default backgroundPlugin;\n```\nAnd style guide config:\njs\nconst path = require('path');\nmodule.exports = {\n    styles: {\n        Playground: {\n            preview: {\n                background: props => props.__backgroundIsEnabled ? 'deepskyblue' : 'transparent',\n            },\n        },\n    },\n    plugins: [\n        path.resolve(__dirname, 'src/plugin.js'),\n    ],\n};\nThere\u2019s no way to define styles from plugins yet. I think we should (at least for start) reuse the config somehow if you don\u2019t have better ideas ;-)\n\n. > I would like the \"background plugin\" to be more configurable. I wanted to allow passing arbitrary CSS via plugin configuration. At least the color/gradient values should be externally configurable.\nThis will be easy to do I think.\n\nCan we add/remove custom class names to components and assign custom CSS properties to them instead?\n\nWhy do you want to do that? ;-) What\u2019s the benefit and what use cases can\u2019t be implemented using dynamic properties?\n\nDo you want them to be kept and maintained by individual owners, or do you want them as repos inside the styleguidist org\n\nBoth would work. Background plugin sounds useful enough to have it in the main organization.. I\u2019m afraid it will be hard to implement without much benefit. But you can easily generate functions from user styles inside the plugin, and this is simpler than writing class name changing logic.. It won\u2019t solve the problem of multiple plugins defining the same CSS properties and you can already do this with dynamic properties. I still don\u2019t see what use cases aren\u2019t covered by them. I\u2019d suggest to try dynamic properties and see what\u2019s really missed.. Accessing DOM in React is a bad practice in general and would like to avoid that if possible. . I just don\u2019t see much difference between JSS merging and CSS class names here: in both cases you\u2019ll have only one value in the end ;-) And I\u2019d say merging is more predictable \u2014 we may tweak it or even show a warning when several plugins tries to change the same property.\nAnyway let\u2019s try to make it work first and then make it perfect ;-). I\u2019ve merged the master branch here, going to add a few more things and release with 6.1.0. It will be very alpha but you\u2019ll be able to implement some very basic plugins. . I\u2019ve also fixed the CI accidentally ;-). @isratc That\u2019s an interesting way of managing open source ;-)\nI\u2019m planning this for 6.1.0 which depends on several PRs so I can\u2019t say anything more that \u201dsoonish\u201d. Could you share your use case? Is there any missing features? It\u2019s very very limited for now. In any case you can try to write your plugin using this branch \u2014 your feedback will be very valuable.. @isratc I\u2019m not sure what you\u2019re trying to do and how is it related to Styleguidist plugins API. Please open a new issue and make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. I'll need some help to make it ready, even as an MVP.. All examples should work now.. Could you please explain the use case? Most likely you could use resolveLoader to put your own loader in front of the Styleguidist\u2019s one.. We\u2019re actually going to change that soon \u2014 https://github.com/styleguidist/react-styleguidist/milestone/6, you can help make it happen sooner ;-). Yeah, generating Markdown documents with something like documentation.js is the best way for now.. Cool, thanks!. Wow, that\u2019s cool! Do we really need JSON here? List of space separated keywords would be enough probably.\nI can think of only two modifiers so far:\n\nstatic \u2014 just renders a highlighted code without the editor or any controls;\nnoeditor \u2014\u00a0removes editor, controls and frame but renders a component.. For all your use cases a space-separated list of modifiers would be enough ;-). Then I\u2019d implement both because even a single modifier covers most of the use cases and for anything extra complicated you could use JSON.. Awesome, thanks! PhantomJS tests are failing because of some JS error \u2014 could you take a look? See the Travis report for details.\n\n. Thank you very much, this is super cool! \ud83c\udf55\nI\u2019ll mere it into a new branch, tweak a bit and think what other breaking changes we could include into the next major release.. 1. That was my first idea when I saw JSON, but no ;-) I don\u2019t want to bring YAML parse to the client.\n2. For most use cases space-separated modifiers would be enough. External files would be the most common exception I guess.\n3. Looks like Markdown parsers don\u2019t render anything you write after language tag on the same line. At least it doesn\u2019t affect GitHub in any way so it doesn\u2019t break browsing docs on GitHub.\n@stepancar Looks like we don\u2019t really need //\u00a0and it would work for any language, not just JS.\n. That would be awesome!! But it\u2019s a breaking change and a major release. And I\u2019m not 100% sure what I want to include into it so I\u2019ve created an issue to track it \u2014 #517 ;-) . js/jsx/javascript will be rendered as interactive examples, the same way as code examples without the language now.. @okonet Why do you want to disable that? :-) static\u00a0modifier will render highlighted code.\n@n1313 No changes.. I\u2019m not sure what do you mean here ;-) We\u2019re changing only the default behavior \u2014 you\u2019ll have more options, not less.. If you use import in interactive examples it won\u2019t work today, no changes here ;-). Yup, that\u2019s why we have the static\u00a0modifier ;-). @andywer Any estimates on webpack-blocks 1.0 final release?. \ud83c\udf55 6.0.0 is out!!!! \ud83e\udd53. I\u2019ve added a new guide to the docs to document usage with third-party libraries. Feel free to submit a pull request if you have experience with libraries not described in the guide yet.\nhttps://react-styleguidist.js.org/docs/thirdparties.html. Fela has an official example now: https://react-styleguidist.js.org/docs/thirdparties.html#fela. @aaronjensen Sure, it can be improved. But that\u2019s the best possible solution for now as much as I know.\nThere are couple of issues in react-docgen repo couple of unfinished PRs:\n\nhttps://github.com/reactjs/react-docgen/pull/195\nhttps://github.com/reactjs/react-docgen/pull/198\n\nAlso there\u2019s some unfinished work here:\n\nhttps://github.com/Jmeyering/react-docgen-annotation-resolver. @tizmagik I agree that it could be better ;-) But I\u2018m not sure we can significantly improve that on our side. \n\n\nMaybe Styleguidist could even transparently/automagikally wrap these components with this extra layer before passing through to react-docgen?\n\nDo you have any ideas how that could work? And how that would be better than react-docgen handlers?\n. @kossel Please open a new issue if you have any actual problems with Emotion.. Closing this for now, feel free to send more pull requests with documentation!. Yeah, sometimes it does, sometimes it doesn\u2019t, I\u2019m not really sure why and how to fix that it it\u2019s possible at all.. I don\u2019t think we can fix this now, so I\u2019m closing this for now. Feel free to reopen or send a pull request if you know how to fix it.. Yeah, PR is a great idea! I think we can use webpack-merge here instead of manually merging watchOptions.. And thanks for the pull request! \ud83c\udf55. Because we\u2019re changing the default behavior for fenced code blocks with js/jsx/javascript language.. Depends on (1) how many people will want to help, (2) will we include webpack removal (I guess not ;-) and (3) what we want to include in initial plugins API.\nI guess it\u2019s possible to have some undocumented plugin API ;-). I would ask for a reason to make it case-sensitive ;-) It improves the UI \u2014 users don\u2019t have to remember the correct casing. But I think it\u2019d be enough to make space-separated modifiers case-insensitive.\n\nJust merge modifiers from styleguide.config with passed to example in .md?\nwhat we should implement?\n\nI mean some kind of filters or transformers that could be defined in the config (and later in plugins) that would allow users to implement thing like this file loader. Something like this could work:\njs\nfunction({ contents, lang, modifiers }) {\n  if (typeof modifiers.file === 'string') {\n    const filepath = modifiers.file;\n    delete modifiers.file;\n    return {\n       contents: fs.readFileSync(filepath),\n       modifiers,\n       lang,\n  }\n}. You\u2019re thinking only about your own use case with JSON ;-) For most users it would be space-separated list and there\u2019s no point in memorizing if it\u2019s showcode or showCode \u2014 both should work the same.\n. Yeah, I\u2019ll do that! Thanks for the work on that release!! \ud83c\udf55. @stepancar I need more time ;-)\n@n1313 Yup, will try to do it in the next few days.. As soon as I can \u2014 you can use the branch already.. \ud83c\udf55 6.0.0 beta is out!!  \ud83c\udf55. @n1313 Nope, but you\u2019re right we should choose one. Which one do you like more? The second looks simpler ;-). Is there anything we should do before the stable release?. \ud83c\udf55 6.0.0 is out!!!! \ud83e\udd53. @stepancar Thanks for making this release possible!! \ud83c\udf55\ud83c\udf66\ud83e\udd84. Thanks for a detailed bug report! I\u2019ll take a look later but I\u2019m afraid it may be a react-docgen issue.. If it\u2019s a Flow issue then we can\u2019t fix it on our side and probably should close this issue ;-). @karmeleon Feel free to send a pull request. I don\u2019t know what can we do to fix that on our side.. Sounds like a good feature. Feel free to send a pull request ;-). @ethanh1223 Awesome! \ud83c\udf55\nI think Preview would be a better place.\nFor ESLint you need to disable this check for a specific line:\njs\nconsole.clear(); // eslint-disable-line no-console\nConscious use of console.log\u00a0is OK, ESLint guards us from committing accidental debug code ;-). We\u2019re using Buble on client side only, so it must be limitation of either react-docgen that we use to extract this documentation.. That would be nice indeed! Is it possible to reuse this code? We already using some packages from CRA.. OK, I\u2019ll try as soon as we get rid of webpack 1 support (#512) ;-). Looks like it just works in 6.x after react-dev-tools update:\n\n. Merged, thanks! ;-). > What I propose is that the defaultProps field is rendered as the string shape or Object when an object is passed, and then on hover, focus or click, a popover is opened next to the string with the pretty printed corresponding defaultProp object.\nThat\u2019s a good idea and we\u2019re already doing this for functions! So that would already increase usability here. Would you mind sending a pull request with this print?\n\nIt would have to be parsed for it to be pretty printed.\n\nDo you have any ideas how to do that? Or some time to experiment? ;-). I don\u2019t think so. If someone has its own propParsers\u00a0it should return data in the same format, otherwise nothing will work ;-)\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Props/PropsRenderer.js#L65-L80. Awesome, thanks! I don\u2019t like the name though, but don\u2019t have any better ideas now. Will think ;-). Thanks! We could change the name later, still have not better ideas ;-|. \u201cPreprocessor\u201d is way to complex word for a simple function ;-). I\u2019d try something like updateExample. Better matches other settings.. That\u2019s weird: when I do all the steps you describe manually \u2014 it works fine, but not when I clone your repo ;-|. When I run yarn run styleguide -- --verbose I see than webpack configs are different. The only difference I see so far is that react-scripts in dependencies in your repo and in devDependencies in mine.. It actually was the reason, but I have no idea why.. Then it looks like a bug ;-(. I was using the old version, that\u2019s why it was in devDependencies. But I have no idea why it doesn\u2019t work with dependencies \u2014 it shouldn\u2019t be any different ;-|. Should be fixed in 5.5.2.. Looks like it\u2019s a react-codemirror issue: https://github.com/JedWatson/react-codemirror/issues/108. @smashercosmo Feel free to send a pull request if that would solve the issue.. There\u2019s an unmerged PR at react-codemirror: https://github.com/JedWatson/react-codemirror/pull/124. Merged, thanks!. Small issue with this change: https://github.com/nerdlabs/react-docgen-displayname-handler/blob/master/package.json#L43\nnpm ERR! peer dep missing: react-docgen@2.x, required by react-docgen-displayname-handler@1.0.0\nNot sure if it breaks anything, if not probably worth sending a PR to react-docgen-displayname-handler to relax required react-docgen version.. It\u2019s almost done and will be released as a new major version very soon: https://github.com/styleguidist/react-styleguidist/issues/517 ;-). Thanks!!. That\u2019s an amazing idea! I\u2019m using react-document-title and can recommend it.\n\nReact Style Guide Example - Button or something similar.\n\n\u201cButton \u2014\u00a0React Style Guide Example\u201d, otherwise you won\u2019t see component names if you have many open tabs ;-). It should be something like this:\njsx\nconst title = isolated ? `${name} \u2014 RSG` : 'RSG';\n<DocumentTitle title={title}>\n  ...\n</DocumentTitle>\nBut maybe it\u2019s an overkill for our case, react-document-title is good when you nest components with different titles (the deepest one wins).. Probably it\u2019s better to just set title here: https://github.com/styleguidist/react-styleguidist/blob/master/src/index.js#L67. But that\u2019s a config option that we can pass to the frontend.. Thanks! \ud83c\udf55. Thanks! \ud83c\udf55. > I tried this in ChromeVox to verify, and was not able to read the text. So this solution is better for mouse users, but not not accessible, which is far from ideal. I would much prefer this text to be a  (which makes it focusable and tabbable), which shows a popover element on focus.\nSounds like a good idea for a separate PR if we keep hover ;-). > Parsing is done with the safe-eval library. Not sure if we actually need this library, though, as we are not in a node.js context here.\nI don\u2019t think so since we\u2019re rendering source code which I\u2019d say is safe by default ;-)\n\njust render the unprettified source code representation in the title. Thoughts?\n\nThis or find some very simple library to do that. Pretty-print is very nice for Node but way too big for frontend. Something like stringify-object maybe.. I would recommend to update to npm 5.2 \u2014 it\u2019s much more stable but honestly I don\u2019t really understand some changes it does to the lock file ;-|\n. Oops, I forget that Sindre Sorhus doesn\u2019t care about webpack users and his modules often breaks UglifyJS because they contains some ES6 code (see Travis CI logs) ;-(\nLooks we have to choose yet another library ;-|. @n1313 I think he\u2019s on Linux or something because it\u2019s just a title ;-). It\u2019s fine to change it. This check is to prevent accidental adding of something huge to the bundle, like the whole Lodash ;-). Looks good for me, thanks! Could you please add some tests too?. Merged, thanks!. I hope it won\u2019t break the UI ;-). @SaraVieira Could you take a look at my last comment? Is it Prettier or some accidental change?. > A good idea maybe would be to put something like netifly on PR's always mounting one of the instances so we can always be sure :)\nYeah, we use Netlify for the site anyway ;-). @SaraVieira You can at least think how to do it, I\u2019m not really sure myself ;-) Could you open a new issue?. Thanks for the pull request! Please check test failures.. Thanks for the pull request!. externals\u00a0will be ignored: https://react-styleguidist.js.org/docs/configuration#webpackconfig. Closing this for now. Feel free to reopen if you still have this issue.. Cool, thanks!. @n1313 No, do you think it\u2019s useful enough? I can merge it.. @ndelangen What\u2019s your interest here? ;-) \n@ethanh1223 Let me know if you need any help. I would try what @tizmagik is suggesting. If you don\u2019t have time to finish the PR soon \u2014 let us know, we\u2019ll find someone else.. Finished in #638.. @kumarabhishek Thanks! There\u2019s a PR for #519 already: #544.. Thanks!. Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. This looks like a react-docgen issue and should be reported in their repo.. Thanks!. Maybe contextDependencies could help here: https://react-styleguidist.js.org/docs/configuration#contextdependencies. Could you try to implement it? I don\u2019t really understand how it should work ;-|. Could you send a pull request with this change?. Thanks! I don\u2019t use nvm myself so I always forget to update it ;-). I\u2019m not sure what you\u2019re talking about, because there\u2019s absolutely no difference between indented code blocks and fenced without a language.\nPlease make a demo project that we can debug based on this repo https://github.com/styleguidist/example if you think there\u2019s a bug somewhere.. It\u2019s 4 spaces, not 2 ;-). And it\u2019s better to use fenced blocks, we\u2019re changing all example to use them in the next major release: https://github.com/styleguidist/react-styleguidist/blob/six/docs/Documenting.md#usage-examples-and-readme-files. Feel free to send a pull request to fix that ;-). Thanks, merged!. Thanks, merged!\n. Thanks, merged!. Thanks, merged!. You\u2019re right, should be fixed now ;-). Do you really format it like this, in one line?\n\n```js static import {Button, Panel} from 'our-library';\n\n\nare you aware of this issue\n\nNo.\n\nis there a way to disable this new feature at a global level\n\nProbably with updateExample option.\n\nShouldn't this be limited to js, jsx and javascript?\n\nNo, this is intended behavior, but we may change it in the future. It\u2019s not recommended anyway.\n. And I still don\u2019t understand how exactly it breaks rendering in GitHub Enterprise.. I mean you can add any modifiers inside updateExample.. Not really if we won\u2019t find any serious issues with the new approach.\nWould you mind adding this example to the docs?. I\u2019d add it as an example to the updateExample, thanks!. The first bug should be fixed now.\nI\u2019m not sure how to reproduce the second: seems to work fine in your repo.. Please try with 6.0.6 and see if it fixes both issues or just the first one.. You\u2019re using react-styleguidist 5.5.9, please try with 6.0.6.. Should be fixed in the next patch release.. Thanks, merged!. @esphen Thanks! Fixes are released automatically, so expect a new version in ~10 minutes ;-). Our approach is very similar to @n1313. The main difference is that we only transpile ES6 to ES5 (TypeScript in the future) and keep CSS Modules as is. Which means we need to include component library\u2019s package folder into css-loader?modules. But it allows us to include into the app bundle only CSS and JS of components that we actually use.\n\nHere\u2019s a webpack block that we use for CSS. I can share more configs is you like.. @joergklein No, sorry, it\u2019s not public. But I can share some configs.. OK, I\u2019ll try ;-)\nFirst, the component library:\njson5\n// package.json\n\"scripts\": {\n  \"build\": \"npm run build:compile && npm run build:copy\",\n  \"build:compile\": \"NODE_ENV=production babel ./lib --out-dir ./dist --ignore '__tests__,*.spec.js'\",\n  \"build:copy\": \"cpy '**/*.scss' '../dist' --cwd lib --parents\",\n  \"prepublishOnly\": \"npm run build\"\n},\nNo webpack, not touching CSS Modules, just transpiling ES6 and copying CSS files as is.\nNow, the app:\n```js\n// webpack.config.js\nconst path = require('path');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst {\n    createConfig,\n    env,\n    entryPoint,\n    sourceMaps,\n    setOutput,\n    css,\n    babel,\n    uglify,\n    devServer,\n} = require('webpack-blocks');\nconst file = f => path.resolve(__dirname, f);\nconst isProd = process.env.NODE_ENV === 'production';\n// Path of your component library inside node_modules\nconst kaoPath = path.resolve(__dirname, 'node_modules/@here/kao/dist');\n/\n * Sass webpack block with optional CSS Modules. Supports TypeScript and Kao.\n \n * @param {string[]} $.include Source code folder\n * @param {boolean} $.modules Enable CSS Modules\n * @returns {function}\n /\nfunction sass({ include, modules = false }) {\n    const localIdentName = isProd\n        ? '[hash:base64:10]'\n        : '[name]--[local]--[hash:base64:5]';\n    const loaders = [\n        modules ? {\n            loader: 'css-loader',\n            options: {\n                modules: true,\n                importLoaders: 1,\n                localIdentName,\n            },\n        } : (\n            'css-loader'\n        ),\n        'postcss-loader',\n        {\n            loader: 'sass-loader',\n            options: {\n                precision: 10,\n            },\n        },\n    ];\n    return (context, { merge }) => merge({\n        module: {\n            rules: [\n                {\n                    test: /.scss$/,\n                    use: isProd\n                        ? ExtractTextPlugin.extract({\n                            fallback: 'style-loader',\n                            use: loaders,\n                        })\n                        : ['style-loader'].concat(loaders),\n                    include: modules\n                        ? [include, kaoPath]\n                        : include,\n                },\n            ],\n        },\n    });\n};\n/\n * Extract CSS to a separate file, require ExtractTextPlugin.extract in loaders.\n \n * @returns {function}\n /\nfunction extractCss() {\n    return (context, { addPlugin }) => addPlugin(\n        new ExtractTextPlugin({\n            filename: '[name].[chunkhash].css',\n            disable: !isProd,\n            allChunks: true,\n            ignoreOrder: true,\n        })\n    );\n};\nmodule.exports = createConfig([\n    babel(),\n    css(),\n    sass({\n        include: file('assets/stylesheets'),\n    }),\n    sass({\n        include: file('assets/javascripts'),\n        modules: true,\n    }),\nsetOutput({\n    buildDir: file('../tmp/webpack-build'),\n    publicPath: '/assets/',\n}),\n\nenv('development', [\n    entryPoint(file('scripts/development.js')),\n    devServer(),\n    sourceMaps(),\n]),\n\nenv('production', [\n    entryPoint(file('scripts/production.js')),\n    extractCss(),\n    uglify(),\n]),\n\n]);\n```\nThe actual set up is more complicated so it may not work if you try to use this code as is.. Fell free to send a pull request to fix that ;-). Nope, I\u2019ve just tried it. Did you try to clear npm cache? Could be some network issue too.\n```\n\u276f npm info function.name-polyfill\n{ name: 'function.name-polyfill',\n  description: 'Polyfill for the basic functionality of Function.name accessor property in its pre-ES6 form',\n  'dist-tags': { latest: '1.0.5' },\n  versions: [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '1.0.4', '1.0.5' ],\n  maintainers: [ 'jamesmgreene james.m.greene@gmail.com' ],\n  time:\n   { modified: '2016-10-24T04:55:05.965Z',\n     created: '2016-07-18T05:33:51.740Z',\n     '1.0.0': '2016-07-18T05:33:51.740Z',\n     '1.0.1': '2016-10-22T13:04:46.116Z',\n     '1.0.2': '2016-10-22T13:13:32.157Z',\n     '1.0.3': '2016-10-23T21:19:44.512Z',\n     '1.0.4': '2016-10-24T02:34:00.766Z',\n     '1.0.5': '2016-10-24T04:55:05.965Z' },\n...\n```. Closing this for now. Feel free to reopen if you still have this issue.. Looks like we don\u2019t have a good (any?) solution for that now. For now Styleguidist supports only one component per file.\nAny ideas how it could be implemented? And how it could look? Should we show \u201csubcomponents\u201d as normal components or differently somewhere inside the main component docs?. I'm going to close this for now \u2014 I don't see an easy way to implement that, though this could be a useful feature. Feel free to open a more actionable issue or send a pull request ;-). Thanks, merged!. Thanks, merging!\n\nAbandoned last pull request and created a new one, including a test, and with a different commit commit message to match your pattern ;P\n\nIt was unnecessary \u2014\u00a0I\u2019ll squash all commits and edit the message anyway, so just add a new commit next time ;-)\n. There\u2019s a way to do that \u2014 pass a function to components option: https://react-styleguidist.js.org/docs/configuration#components. @smashercosmo Feel free to improve the docs if have a good example ;-). What exactly do you mean by \u201cheavily sculpted to a linux work environment\u201d, how can we fix that?. This thing with paths is weird but it maybe here. Would be nice if you could debug it.\nThe thing with package-lock.json is probably not connected to Windows \u2014 I\u2019ve seen this before and have no idea why it happens.\n/c @n1313 Are you on Windows? Do you have any issues with Styleguidist now?. OK, I\u2019ll have a look \u2014 right now it\u2019s failing on CI and it looks like it doesn\u2019t work at all. But it maybe because of the old lock file.. They\u2019ve changed a CSS class name for the wrapper, that\u2019s why tests were failing. Let\u2019s wait for the CI again and I\u2019ll merge it.. Merging :shipit: . Looks like we have a bug in a function that should print a messages that you don\u2019t have a loader ;-?. Thanks, merging!. ~~Looks like it\u2019s complaining about the class\u00a0keyword but I\u2019m not sure.~~ What loader are you using for this file?\nPlease make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. Looks like you don\u2019t have any loaders for this file. Try to add it to include\u00a0of babel-loader.. Please use fenced blocks with language tags (for example ```js) to make code examples more readable.. @stepancar I think the first is better because it\u2019s immutable and everything inside the props\u00a0you can change.\nAre you guys interested in sending a pull request to fix that? ;-). Merged, thanks!. This is 100% incorrect. Looks like you have some non-default npm settings \u2014 unsatisfied peer dependency should be a warning, not an error. Please open an issue with more details.. I\u2019m afraid it could be very slow when you have many components.. Awesome, thanks!. Please use fenced blocks with language tags (for example ```js) to make code examples more readable.. Looks like we need to add font-size here:\nhttps://github.com/styleguidist/react-styleguidist/blob/916e173ecfeb29d89085ed0eddfbefc9f49afb7a/src/styles/setupjss.js#L21-L23\nFeel free to send a pull request for that ;-). 1. Just put a favicon.ico file if you deploy your style guide into the server root folder.\n\nAdd a custom HTML template using the template option.. This feature is super stupid \u2014 there\u2019s not dependency graph at all ;-| If you require a component from the source of another component, it should work. It won\u2019t work if you try to use this component in an example of another component. \n\nDo you have any ideas how we can fix it?\nAs a workaround you could manually import all components you need like this:\njs\nglobal.DataGridColumn = require('./components/DataGridColumn');\nAnd then use this file in require\u00a0style guide option.\n. Shouldn\u2019t we print a warning in this case?. Let\u2019s try it ;-). Awesome, thanks! Merged ;-). It should be fixed in react-docgen: https://github.com/reactjs/react-docgen/issues/207. Please use fenced blocks with language tags (for example ```js) to make code examples more readable.. > I can create the example project if needed to reproduce the issue\nPlease do it ;-)\nAnd, just an idea, try to remove ExtractTextPlugin and see if it helps.. If you do branching inside webpack.config.js by using NODE_ENV you\u2019ll simplify everything:\n\nYou could rely on the default config path in webpack, webpack-dev-server and Styleguidist.\nHave one style guide config without webpackConfig\u00a0option.\n\nYou\u2019ll only need to pass NODE_ENV\u00a0when you run webpack from npm scripts:\njson\n\"scripts\": {\n    \"start\": \"cross-env NODE_ENV=development webpack-dev-server\",\n    \"build\": \"cross-env NODE_ENV=production webpack\"\n}. And webpack-blocks could make it even simpler ;-). @Jack-Barry Everyone is new to webpack except Tobias Koppers ;-). Please use fenced blocks with language tags (for example ```js) to make code examples more readable.. I\u2019m not sure I correctly understand your setup (an example would help) but looks like you need to parse / require your index.js, see what it imports and generate a list of file you could pass to components\u00a0option.. > Is there a way to include the  in the index.html of the builded version of styleguidist?\nWith a custom HTML template.. You won\u2019t see it production build so there\u2019s no need to hide it.. Thanks for the pull request!\nIs it possible to reuse some code from react-dev-utils?. I mean reuse not copypaste :-). Whoa, that\u2019s much better! ;-). Merged, thanks!. Looks like you still have something running on this port. Or the previous Node process stuck for some reason.\nTry to check which process is listening on this port and kill it.. @SaraVieira Latest version of what? ;-|. Looks it\u2019s not related to Styleguidist then?. Maybe you need to tweak your webpack configuration before passing it to Styleguidist and remove BrowserSync?. Thanks!. Thanks!. It actually works but since we\u2019re using webpack-merge to merge configs the result is this:\n\"extensions\": Array [\n      \".js\",\n      \".jsx\",\n      \".json\",\n      \".web.js\",\n      \".js\",\n      \".web.js\",\n    ],\nI\u2019m not sure what would be the best fix for that, for now you could use dangerouslyUpdateWebpackConfig to overwrite default extensions.. I\u2019m closing this for now. Feel free to submit a pull request if you have an idea how this could be improved.. > Left in the root and primary props for now in case anyone is using them in a customised styleguide, but they should be deprecated and removed.\nWe don\u2019t really guarantee backwards compatibility here, otherwise it would make any changes in Styleguidist UI almost impossible. But for most common use cases we provide config options.. Thanks, merged!. Thanks, merged!. I\u2019m not really sure what you\u2019re trying to do. Do you want to deploy Styleguidist development server? And what\u2019s the reason to do so instead of deploying a static HTML build?. @leclercb You\u2019re use case looks very different though, please open a new issue.. It\u2019s not unnecessary, it makes diffs easier to read. Copy paste issue should be fixed on the rendering part somehow.. Probably it would be easier to find a component to include any static HTML into a React app. I\u2019m not sure it\u2019s possible to do exactly what you describe.. Sections are the right way to do it: https://react-styleguidist.js.org/docs/components.html#sections. I recommend you to actually read the issue template next time. Most likely nobody couldn\u2019t help you here without a demo and since the question isn\u2019t related to Styleguidist (as I\u2019ve told you in Gitter) Stack Overflow would be more appropriate place.. You\u2019re doing it in reset.scss:\ncss\n-webkit-user-modify: read-write-plaintext-only;. Thanks! \ud83c\udf55 . Thanks, merged! \n\ud83d\udca5  And congrats with your first PR, I'm super to have it in Styleguidist! \ud83d\udca5 . > Where is the highlighting?\nI assume it tries to catch last warm days and having a short break from work.\nI\u2019ve seen this couple of times and was able to fix by updating all Styleguidist dependencies. But honestly I have no idea why it is happening. Feel free to send a pull request with a fix ;-). > module.exports = { highlightTheme: 'material', // etc }\nTheme is not an issue, Codemirror doesn\u2019t highlight code at all for some very obscure reason.. Similar issue: #105.. One more in react-codemirror: https://github.com/JedWatson/react-codemirror/issues/34. And one more at react-codemirror2: https://github.com/scniro/react-codemirror2/issues/7\n. The issue seems to be because Styleguidist and react-codemirror2 have a codemirror dependency and when we import modes webpack somehow loads them from a different codemirror. \nThis works fine, but it\u2019s a huge hack:\ndiff\n- import 'codemirror/mode/jsx/jsx';\n+ import 'react-codemirror2/node_modules/codemirror/mode/jsx/jsx';\nThe proper fix would be moving codemirror to peerDependencies in react-codemirror2. @scniro What do you think? . I think it doesn\u2019t work when we use two different versions.. @scniro Thanks! Right now peerDependency doesn\u2019t do anything:\nhttps://github.com/scniro/react-codemirror2/blob/3e0be8dc7556c169cac36df91572265830fcaf56/package.json#L34-L40\nIt\u2019s either dependency or peerDependency.. @scniro It works, thanks!\nExpect a new release in 10 minutes ;-). Try to reinstall 6.0.25 (remove node_modules and package-lock.json), it should pick up the fixed version of q-i.. > Have you considered these possibilities? Is replacing the Markdown.js file the way to go? I could also look at making a PR to add this capability.\nNo, but it looks like a good idea and shouldn\u2019t add a lot of complexity, so feel free to make a PR for that! ;-). @SaraVieira Not sure I understand what you mean here ;-|. @ryanoglesby08 Thank you for amazing work!! \ud83e\udd84 . Yes, it\u2019s about making sure that Styleguidist itself will work with React 16 and will not print peer dependencies warning.. > Any reason that particular package is pegged to v2.0.0 when all the others are more permissive? \nI think it was because of #611, ^ should work fine now.\n\nHappy to submit a PR with the dep upgrades.\n\n@nwwells Please do it ;-). @tizmagik Sounds awesome! I\u2019ll learn from you ;-)\nWe\u2019re already catching errors in users\u2019 components (each has a separate React root anyway) so I think we need a global componentDidCatch handler to catch bugs in Styleguidist or user customizations (when users replace Styleguidist components). It could look similar to React error overlay and say something like \u201cif you believe it\u2019s a bug in Styleguidist, report it\u201d.. I\u2019ve removed react-modal and tweaked examples.. @tizmagik I think it is, let\u2019s check it ;-). @nwwells Awesome! Then the only thing left is #631.. Try to remove the .\u00a0\u2014 it\u2018s a glob pattern.. You need to pass a glob pattern, I\u2019ve updated docs to make it more clear.. Thanks, that\u2018s awesome!\nI think we should run it only on Node 8:\nhttps://github.com/styleguidist/react-styleguidist/blob/5ad09e4faf7262a97fc6be13c4718551e8c08f7d/.travis.yml#L32\nThat way we could continue using async/await and will make CI faster.. Almost ;-| Puppeteer doesn\u2019t support Node 4, so we\u2019ll have to remove it from devDependencies and install on CI, like this:\nnpm install --no-save puppeteer\nbefore running it.. There\u2019s one more lint issue ;-|\nAnd we\u2019ll need to add || exit 1\u00a0after each command to short circuit them. (May not be part of this PR.). Could you also remove travis_phantomjs from cache folders in .travis.yml?. Thanks, merging! \ud83c\udf55 . Thanks for the pull request! Is there a way to remove this #/ from the address bar?. It is a UX issue because we now have two URLs for the home page: one is normal and one is ugly without any reason from the user point of view.. Thanks, I\u2019ll checkout your branch and see what can we do here. I\u2019m wondering how React Router works because they somehow prevent real navigation and just render another component\u2026\n. They still render Link as a but I assume it has onClick\u00a0handler that prevent navigation.\nActually I\u2019ve solved the same issue here: https://github.com/sapegin/hashnav/blob/master/hashnav.js:\n\nListen hashchange.\nIf URL is #/ then do history.replaceState('', document.title, '/').. Would you mind trying something similar to what I did in HashNav? If not I\u2019ll merge the PR as is and will try to finish it later.. Awesome, thanks! \ud83c\udf55 . Thanks! Could you please add a comment explaining what we\u2019re doing here (the hash replacement thing) and I\u2019ll merge it.. Awesome, thanks!. I see, make sense!. Awesome, thanks! \ud83c\udf55 . Hey @ryanoglesby08, thank you very much for your pull request! I\u2019m just back from React Alicante (it was amazing!) and will have a look soon ;-). > I think storing the configs in separate files enables modularity and creates a more flexible solution. By storing the configs in separate files, it allows the react component library to define its own mappings per component without having to override a giant Markdown.js file.\n\nDo you see many use cases when people would want to define separate components for each heading level? Do you think it\u2019s important to differentiate components (link, header, etc.) that are used in Markdown and the same components that are used in Styleguidist UI? I think using normal component (when you export a real component) increases modularity and much less surprising.\n\nOverriding any Markdown element with a new component requires 2 things: 1) the new component and 2) a new mapping of the Markdown element to the component and props. If I did not keep the configs separate, it means more files need to change to override a single Markdown element.\n\nIn both cases you would need to override one file: file that exports component or file that exports mapping and hides component inside.\n. Maybe better to split into two (or more PRs) if that\u2019s convenient for you.\n\nAlso, I noticed that the Markdown.js file has styles for \"input\" elements. Is this necessary?\n\nThey are for todos like in your previous comment ;-)\n. I\u2019d finish this one because it looks very close to done and then continue when you have time.. It is of course very appropriate \u2014\u00a0both tools are great ;-)\nHere\u2019s a quote from my article on component driven development (in draft now):\nReact Storybook v. React Styleguidist\nBoth tools are good and mature, they have many similarities but also some distinctions that may make you choose one or the other. For me the biggest distinction is how you describe component variations.\nWith Storybook you write stories in JavaScript files:\n```js\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Button from '../components/Button';\nstoriesOf('Button', module)\n  .add('default', () => (\n    Push Me\n  ))\n  .add('large size', () => (\n    Push Me\n  ));\n```\n\nAnd with Styleguidist you write examples in Markdown files:\nReact button component example:\n\n```js\n<Button onClick={() => console.log('clicked')>Push Me</Button>\n```\n\nLarge size:\n\n```js\n<Button size=\"large\">Push Me</Button>\n```\n\n\nAnother important distinction is that Storybook shows only one variation of one component at a time but Styleguidist can show all variations of all components, all variations of a single component or one variation.\n| Feature | Storybook | Styleguidist |\n|:--|:--|:--|\n| Component examples | JavaScript | Markdown |\n| Props docs | Yes | Yes |\n| Public methods docs | No | Yes |\n| Style guide | No | Yes  |\n| Customizable design | No | Yes |\n| Extra documentation | No | Yes |\n| Plugins | Many | No\u00b9 |\n\u00b9 In development.\n\nDo you have any ideas where would be the right place in the docs for that?\nAlso anyone \u2014 feel free to improve my explanation or point me where I\u2019m wrong.. > It also seems like that styleguidist supports nested components and storybook doesn't?\nI think now Storybook has this too.. @tizmagik I\u2019d put No with an asterisk ;-). You can do most of that in Markdown as well:\n\nlinting \u2014 eslint-plugin-markdown;\nimport & share stub data \u2014 require\u00a0is supported in Markdown examples);\ntesting \u2014 snapguidist.\n\nThe only thing is missed is TypeScript support. But even this maybe not very hard to implement if anyone wants to have it.\nMarkdown has many other benefits in my opinion, but if you want to use JavaScript, you probably will like Storybook more than Styleguidist.. This may be a good addition of course if it has a good API and won\u2019t complicate the code much ;-)\nDo you already have any ideas on the API? Can we somehow reuse it for interoperability with Storybook? (That would be amazing feature!)\n. I\u2019d propose a different approach: decouple current Markdown parsing logic and create a common format fur examples that Styleguidist will use internally. So we could create different \u201cloaders\u201d for Markdown, Storybook and something that you want.\nSo I\u2019d rewrite you example like this:\n```jsx\nimport * as React from 'react';\nimport MyButton from './MyButton';\nexport default () => {\n  return [\n       'Here I write some assocatiated copy for my component',\n       ,\n      {\n        type: 'example',\n        options: { static: true },\n        code: \n      }\n  ];\n};\n```\nThe first two are shortcuts to the full form in the last example.. * You can structure documentation as you like;\n you can mix examples with text to better explain them;\n you can decide how to render each example: with or without an editor, as static code, etc.\n* readable on GitHub or in an editor.. Thanks, merged!. Thanks!. I think the easiest way would be to use custom template and load jQuery from CDN.. \ud83c\udf55 . Looks like a duplicate of #628.. And we\u2019ll need some new tests ;-). As soon as we extract the HTML to a separate component ;-). I like the code but I still want it in a separate file ;-). Merged, thanks!. > I know the build is failing\nIt says the build is now two times bigger than it used to be.. Yeah, we just use title\u00a0for all other toolbar buttons.. I\u2019m not giving much feedback about the code because we\u2019re not yet sure how everything should look. But I\u2019ll read it carefully later ;-)\n\nI know but why ? I didn't even install anything\n\nThat\u2019s something weird. I only see two new icons, something must be wrong here. I\u2019ll take a look later.\n\nYou think the click should make changes to the theme ?\n\nI don\u2019t think so. Maybe we should hide the header and show component name somewhere else, like on a fixed toolbar near buttons to toggle sidebar and toggle uberisolated mode. I\u2019m open for ideas ;-)\n/cc @okonet @kof @tizmagik @n1313 @stepancar . Maybe a good idea but as a separate PR ;-). Also use ToolbarButton bur buttons \u2014 right now it\u2019s just an image.. You\u2019re attaching an onClick\u00a0handler to an image which make them inaccessible, inconsistent with other toolbar buttons, you have to write a lot of extra styles, and we already have a component for toolbar buttons.. @SaraVieira Any particular use cases for manually hiding the sidebar? I really want the uberisolated mode ;-). But do you really need to see all components in that mode?\n. I think the main question here is what would be the best experience for developing components?\nFor me it would be uberisolation mode: \n\none component\nall examples visible at the same time\nNo distractions like a huge heading, pathline, etc.\nTogglable side paddings in example playgrounds (for responsive testing). I\u2019d suggest to split this PR otherwise we\u2019ll never finish it because there are so many things that needs further discussion.\n\n\nCarret added on Props to help people understand that it's a clickable drop-down\n\n+1 from me.\n\nSidebar now closes and opens with the click of a button \ud83c\udf89\n\nNot sure we really need that.\n\nToggle props button is in place\n\nThat\u2019s the whole discussion of the uberisolated mode.\n\nResponsive Navigation, when the user is on a phone the navigation will hide and in his place the user will only see the show sidebar button to toggle it.\n\nThis is useful I think but since we\u2019re not sure about the toggle sidebar button I\u2019m not sure how it should work.\nWhat do y\u2019ll think?\nMy thoughts and wishes on uberisolation:\n\nI also think it should be a permanent toggle between isolation and uberisolation (and same for full-width mode), that would be stored in localStorage, so every time you will open isolation of a component you\u2019ll have your last setting.\nAny feedback?\n. Does it work when you cd to that folder and run it from there?. Yes, it is. I\u2019m not sure why it\u2019s not working now.. Yeah, sounds good, if it will work in React 15 and 16.. Please don\u2019t run Prettier on package.json \u2014 it\u2019s all messed up now ;-|. > Does VSCode not respect editorconfig? \nIt has a plugin for that. But I have a feeling that it doesn\u2019t always work.. As I understand we\u2019re trying to print an error from another React root:\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Preview/Preview.js#L99-L103\nProbably we should use componentDidCatch and rethrow it or something like that.. @tizmagik Did you have time to investigate the issue? Do you need any help with this?. Thanks, merged! \ud83c\udf55 . Looks like this line doesn\u2019t work:\nhttps://github.com/styleguidist/react-styleguidist/blob/da644226cd990c0cb92e320e4a420dadcd5bd535/scripts/utils/findUserWebpackConfig.js#L22-L23. Thanks, merged!. Yeah, probably we should just remove it from the main package.json and run from it\u2019s own folder.. I\u2019d leave these three because I use them very often to test new features and we run them on CI:\nhttps://github.com/styleguidist/react-styleguidist/blob/583bd3eb1882e73c7a7ddc5336d8a84a40f5d671/package.json#L142-L144. > Any better way to handle named exports and avoid this require in all my examples?\nYes, use default exports.. > It would be nice if the headings in the markdown were automatically \"down-levelled\", I.e. h1 elements inside a markdown file inside a section with an h3 heading were converted to h4 elements.\nIt won\u2019t work because you may have nested section which is another issue with heading levels ;-) Any help or ideas how to fix all at once are very appreciated.. Yup!. Thanks, merged!\n. That\u2019s because any output is disabled by default in the API, I\u2019ve updated the API docs to clarify that.. Looks like the CLI does more error handling:\nhttps://github.com/styleguidist/react-styleguidist/blob/bc6e6510a13a785fc80675eee40fc587f34317a2/bin/styleguidist.js#L122-L131\nstyleguide.server returns a webpack compiler instance so you can try to attach an event handler to it and see if it works.\n. Thanks, merged!. @BruceHubbard I guess it shouldn\u2019t be cleared on hard page reload, only on HMR updates. If it\u2019s not the case, then it\u2019s a bug.. Thanks, merged!. Yeah, thanks anyway ;-). This is expected behavior for backwards compatibility, usestatic modifier.. We don\u2019t recommend it but I agree it would be nice to mention that it still works ;-) \nI think this is the best place for it: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Documenting.md (and it should be mentioned that this is backwards compatible mode, not recommended one).. Thanks!. It should be js static, for example, see examples here: https://react-styleguidist.js.org/examples/basic/. Yeah, I\u2019ve missed this too:\n\nstatic in place of a language tag\n\nsholud be\n\nstatic modifier with a language tag. No worries, and if you send another PR, it would be half of a Hacktoberfest t-shirt which is cool ;-). \ud83d\udc55 . Looks like you\u2019re using a test renderer somewhere. Please make an example as described here.\n. Feel free to send a pull request ;-). > Actually I'm not sure if it is required that a component is exported as default.\nit would be great if there was a way to keep them as is and be able to write examples.\n\nAccording to the code it may work, but this code needs more tests and comments:\nhttps://github.com/styleguidist/react-styleguidist/blob/e0f576d777f53479e1ddc6a6dc85e59f89d2bc85/src/utils/utils.js#L23-L36\nFeel free to improve that.\n\nSo far I haven't found such way in the docs. I have searched the source code and have found that there is a switch in the Examples component with case 'code' and case 'markdown', so I would assume that there is an alternative way of specifying an example apart from creating an .md file. \n\nNot sure how you\u2019ve come to this conclusion ;-) code\u00a0and markdown here are parts of your Markdown file that should be rendered as interactive example or static text.\n\nAnd again, if there is an alternative way of specifying component examples, it would be great to have it documented.\n\nLooks like you\u2019re mixing two things here: exporting components and specifying examples. Please create a separate issue for the latter issue (it looks very similar to #621).\n. Sounds like a good idea, we need to check if react-docgen provides this information. If yes it should be easy to implement \u2014 feel free to send a pull request ;-). And please revert lock file changes, you don\u2019t have any changes in package.json.. It\u2019s closer now but a few things are still missed:\n\nRibbon [component] that will read config for a React context\n\nYou\u2019re still passing it down via props.\n\nIt would be better to define default colors and text in config schema. Probably you\u2019ll need to use process function for that.\n\nYou\u2019re using a theme now. It may be a, actually, good idea but in that case you don\u2019t need colors inside the ribbon option.. :tada: This issue has been resolved in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. It would be a nice idea for a pull request \u2014 pass all CodeMirror options from a style guide config ;-). Closing in favor of #662.. Cool, thanks!. Looks good now, thanks! But tests are failing now.. Awesome, thanks!. Fell free to send a pull request that adds color inheritance:\nhttps://github.com/styleguidist/react-styleguidist/blob/6a37b1d41ca46d544a1633c6a1137fb7d2258f77/src/styles/setupjss.js#L27-L30. Closing this for now. Feel free to reopen if you still have this issue.. Thanks!. https://github.com/styleguidist/react-styleguidist/releases/tag/v6.0.32 ;-). Thanks, merged!. Would be nice to have some tests too ;-)\nAnd thanks for the pull request!. @MoeSattler yes you can and it will be amazing! We need some basic tests to make sure we won\u2019t break this.. Probably something like this would work:\nhttps://github.com/styleguidist/react-styleguidist/blob/12b8db1f5267fb147a9216b5e8cd8dc41a74447c/loaders/tests/props-loader.spec.js#L27-L44. Thanks, merged!. @MoeSattler Soonish, next week probably ;-). I\u2019ll be happy to merge a pull request with this feature.. It should be possible now \u2014 #690.. If I understand you correctly you want to have multiple \u201creadme\u201d files for each component?\nIt\u2019s not possible now but maybe a good idea for a pull request: add a way to return a content of the documentation instead of a file path. Have a look at #621 too.. Cool, feel free to help with #621 anyway ;-). Just a guess, have you tried?\ndiff\n- const theme = require('~assets/css/theme/theme.module.scss');\n+ const theme = require('~assets/css/theme/theme.module.scss').default;. Any reason you want to install it globally? Global modules are a bad practice in most cases.. Closing this for now. Feel free to reopen with more information.. > I left the option there :)\nI still think we should add a deprecation warning, it\u2019s not good to have two valid ways of changing one option.. You need to add deprecated\u00a0field with a recommendation for a new option:\nhttps://github.com/styleguidist/react-styleguidist/blob/043ba230d5238e3e859a4c1521a42d42f3d06fe6/scripts/utils/sanitizeConfig.js#L91-L92. You also need to merge the old option with the new object in the config, we shouldn\u2019t access the old option anywhere else.. @SaraVieira Hey Sara, any plans to finish? It\u2019s almost done \ud83e\udd84 \n. 1. Merge value of highlightTheme option to theme field.\n2. Merge value of editorConfig with default values object (it shouldn\u2019t be in default\u00a0field because we want to merge user options with defaults, not overwrite defaults).\nSomething like this:\njs\neditorConfig: {\n  // ...\n  process: (value, config) => {\n    return Object.assign({}, { theme: config.highlightTheme }, value);\n  },\n},. Almost: defaults should be in the schema.. One more time: \n\nit shouldn\u2019t be in default field because we want to merge user options with defaults, not overwrite defaults\n\nYou need to define a variable in the schemas/config.js file and merge user options with it.. Where to look? Don\u2019t see anything unusual.. Nope ;-( You\u2019re trying to store some data in the schema. There\u2019s shouldn\u2019t be a config option defaultEditorConfig, just a variable will be enough.. Probably will be easier to start from writing tests (you\u2019ll need to do that anyway) ;-). Did you forget to push?. It still shows package-lock in the diff ;-|. Better to review all changes you\u2019re going to commit and uncheck files / lines you don\u2019t need.\nLet\u2019s wait for CI \ud83d\ude4f . We need to find what\u2019s the issue because it works in master.. I\u2019ve cleared Travis cache and restarted them. . The very last thing: docs! \ud83d\udcd6. Awesome! Praying for CI again \ud83d\ude4f . Yup, that\u2019s very weird. We have that in master too. Restart often helps.\nhttps://github.com/styleguidist/react-styleguidist/pull/725#issuecomment-352754008. Merged! :shipit: . I think first two issues are related to changes in #617 and definitely a bug that we should fix. Last too looks like routing issue described in #467 and #494.. Please have a look at my attempt to fix it: #676. Looks like it fixes all four issues. I see the nasty error only when I try to navigate to a non-existent example. . Parsing of TypeScript code is done in react-docgen-typescript, I think you should open an issue there.\nBut I\u2019d disable this TSLint rule. I\u2019m not a TypeScript expect but I don\u2019t see any value in having public render() instead of just render().. I believe it\u2019s not a good idea because what\u2019s happening for you, you\u2019re actually using Flow syntax that is supported by react-docgen by default. But as soon as you start using something, that isn\u2019t supported by Flow, like public it stops to work.. Sounds reasonable ;-)\nWould be nice if you can comment out this code and check if it actually works. . Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. Closing this for now. Feel free to reopen with more information.. Adding more complexity isn\u2019t the right way to solve the issue, let\u2019s make it simpler \u2014 #673.. > but did HMR work with persisting the state before?\nA long time ago but it was buggy, now we\u2019re using vanilla webpack hot reload.. I don\u2019t even think it\u2019s necessary and worth added complexity. Also all of the HMR solutions are half-deprecated. But if you have time to investigate that, feel free to send a PR ;-) . @okonet What should we do with this issue?. Do you know how to configure webpack-dev-server for that? It supposed to be accessible with 0.0.0.0 instead of localhost.\nBut actually it works for me, I\u2019ve just tried to follow the instructions:\n```\n\nstyleguidist server\n\nYou can now view style guide in the browser.\nLocal:            http://localhost:6060/\nOn your network:  http://11.22.33.44:6060/\n```\nand was able to open the style guide from by phone, both are in the same network.. Looks like you need to use the public option for dev server and we shouldn\u2019t do this by default because it would open style guide server for everyone:\nhttps://github.com/webpack/webpack-dev-server/issues/882. You can change any webpack dev server options via devServer option in webpack config.. Would be nice if you could add this info to the docs though ;-). Not about devServer\u00a0but how to make a server accessible from the internet.. Thanks!. > It will still show the warning.\nThat\u2019s good I think. Probably we should mention the ignore option there too. But it may be another PR ;-). Looks good now, merged! \ud83c\udf55. Thanks, merged!. Try it, I don\u2019t know ;-). @Memoyr Would be nice if you can add some info to the docs ;-). Yeah, good points. I decided to work on that more and was able isolate, fix and test mutation instead of using a hack with cloneDeep.\nBy the way how would you ensure that you\u2019re not mutating source objects in tests?. I mean tests to prevent mutation in code. That was exactly the issue here.. I\u2019ve added deepfreeze to tests, so it should catch mutations. And I\u2019ve removed cloneDeep hack. \nI still need to replace strings with an enum.. Merged manually.. Yeah, it won\u2019t be easy. These two divs are rendered here:\nhttps://github.com/styleguidist/react-styleguidist/blob/29b8f9039419c43b368eaeea88fce40950700a72/src/rsg-components/Preview/Preview.js#L153-L154\nThis is also connected to a new plugin API \u2014 I may have made it worth with the new Container component \u2014 #505.\nFor your use case I\u2019d suggest to try to replace the Wrapper component \u2014 it\u2019s rendered inside these two empty divs.\nAny ideas how to solve it in a generic way would be super cool! I\u2019m not sure I know any good solutions now.. I think we can close this.. Merged, thanks!. I think it\u2019s too much of a hack and will lead to unpredictable behavior because you\u2019re repeating styles that supposed to be applied to a single node. So I\u2019d recommend to use the snippet from your last comment.. Could you try watchContentBase and check if it helps here? You can set it via webpack config.. Cool! Do you want to send a PR that enables watchContentBase?. I would enable it when assetDir is set. I don\u2019t think we need an extra flag for that.\nhttps://github.com/styleguidist/react-styleguidist/blob/8f76515c7d5cec85c01ba512a340a4eac8d53f0d/scripts/create-server.js#L19. It was fixed already, remove package-lock.json and reinstall your dependencies.. Cool, thanks!. Cool, thanks!. Feel free to send a pull request with an update ;-). I\u2019d rather change the default view than add one more option. But I\u2019d like to hear other opinions.\n/cc @okonet @SaraVieira . You can already do this by overriding a component. Maybe it would be better to make this simpler.. @okonet It depends on what do you mean by interactive. But this tab bar with props is already extensible, but don\u2019t have an external API for that (which is #505).. Looks like we shouldn\u2019t change default order. So I\u2019d suggest to make ReactComponentRenderer easier to modify. I\u2019d remove all styles and replace them with react-spaceman.\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/ReactComponent/ReactComponentRenderer.js. I'm going to close this for now, but may revisit in the future.. You need to create a new branch from master for each PR.. Thanks!. I\u2019d actually add it to merge as the last argument \u2014 would be more readable and consistent.. Thanks, merged!. Looks like you\u2019re misunderstanding what plugins are. antd is not a plugins and it\u2019s not related to Styleguidist in any way.\n\nI am unable to add the third party plugin into the styleguidist styleguide config file\n\nThis won\u2019t work and you don\u2019t need to do that.\nSince I don\u2019t know what do you have in your Markdown examples, I can\u2019t tell you why it doesn\u2019t render your components. As I\u2019ve told you before, make an example project that I can run and debug.. Closing this for now. Feel free to reopen with more information.. Looks like you need to restructure your code and make it easier to test.. I\u2019m not sure we should support hat in Styleguidist. How about using dependency injection and make the function with side effect replaceable via props?. That\u2019s a tricky question because technically it\u2019s a plugin and it won\u2019t be easy to make such an option. I\u2019m fine to rename it to \u201cView Code\u201d by default but I feel like your question is related to general customization of this area that are discussed in #195 \u2014 if you have any ideas, feel free to comment there.. We can also move textTransform to the theme, it will be easy to change for the whole UI.. Yep, sure!. Could you please elaborate how exactly it should work? I guess reading the same field won\u2019t help.. So you want a similar option in Styleguidist config? Feel free to send pull request for that.. I\u2019m closing this for now. Feel free to submit a pull request if you need this.. Not sure I understand your question, initialState is described here: https://react-styleguidist.js.org/docs/documenting.html#writing-code-examples\n. You can check the code ;-) Basically it wraps your example code in a component with a state and then eval the example code wrapped in with\u00a0that has initialState setter that calls setState\u00a0of the wrapper component:\nhttps://github.com/styleguidist/react-styleguidist/blob/a02e79362665d1db02c922e2d072317aa25ecd24/src/rsg-components/Preview/Preview.js#L124-L135. Thanks!. I\u2019ll need to debug it too. It looks correct: your code and the original TabButtonRenderer component.. Feel free to send a PR if you can find a way to generate such a list ;-). We have a customised\u00a0example in the repo that uses CSS Modules and it works fine. I also use CSS Modules with Sass at work without any issues. \nPlease make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. Closing this for now. Feel free to reopen with more information.. Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. More correct would be: you should not remove it.. It\u2019s already possible but undocumented:\njs\nmodule.exports = {\n    components: 'src/components/**/[A-Z]*.js',\n    styles: {\n        StyleGuide: {\n            '@global body': {\n                fontFamily: 'Helvetica',\n            },\n        },\n    },\n};. @sanjsanj Exactly!. I think the best way is to expand this question with an example from my comment above: https://react-styleguidist.js.org/docs/cookbook.html#how-to-add-custom-javascript-and-css-or-polyfills. > Would it make sense to include this in the #how-to-change-styles-of-a-style-guide section, and expand a little bit more on how to reference the CSSinJS API to construct styles here?\nNo, it won\u2019t change style guide styles, only style of user components.\n\nSince you are using '@global' does this mean that JSS-global is also available? It's not listed in the available plugins in that section.\n\nNice catch! We should add it to the list. Here is the full list of available plugins:\nhttps://github.com/styleguidist/react-styleguidist/blob/3fce9f2af736dd459301593c99ef4e4aaebabc36/src/styles/setupjss.js#L2-L7\n\nSorry but I have no context as to why this issue was flagged up, is there a particular use case we could reference?\n\nI think the most common would be setting a font face, otherwise, if you don\u2019t set font face explicitly in each component, they will be rendered with the browser default font.\n\nShould Logo be LogoRenderer instead or am I missing something?\n\nNo, we strip Renderer part before applying styles, because only *Render components may have styles:\nhttps://github.com/styleguidist/react-styleguidist/blob/3fce9f2af736dd459301593c99ef4e4aaebabc36/src/rsg-components/Styled/Styled.js#L6\n. It is: https://react-styleguidist.js.org/docs/cookbook.html#how-to-change-styles-of-a-style-guide. It has an underline on hover already, but it has incorrect cursor.. @UmenR Hey! Thanks for your interest, there\u2019s a PR already: https://github.com/styleguidist/react-styleguidist/pull/709\nThere are two ways chain npm scripts:\n\nUse &&: npm run test:jest && npm run format:md \u2014 in this case if Jest fails it won\u2019t run Prettier.\nUse pre* or post*\u00a0scripts like pretest or posttest, you can find an example in our package.json.. I believe this will fix that: #657.. Closing this for now. Feel free to reopen if you still have this issue.. I don't know, try it ;-). @leannaweller Would you like to finish this PR? That would be super cool! \ud83e\udd84 . Looks like this Prettier issue is blocking this PR: https://github.com/prettier/prettier/issues/3196\n\nThis doesn\u2019t look good:\njsx\n<Button>Push Me</Button>;\nI was thinking about disabling semicolons in the docs but it has the opposite effect:\njsx\n;<Button>Push Me</Button>\n. I\u2019m not even sure if it\u2019s a bug of a feature so let\u2019s see what they think. In the worst case I\u2019ll disable all JSX examples manually and merge it.. I\u2019ve sent a PR to Prettier to fix that (it\u2019s work in progress though), hope we could merge your PR soon!. I\u2019ve updated Prettier, disabled semicolons and fixed several issues. Doc look good now. But we have to wait for another Prettier release with this fix: https://github.com/prettier/prettier/pull/3401. I\u2019ve updated Prettier again and now everything seems to work.. Merged, thanks!. Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. @danwoodbury \n\nPlease make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. Out in 6.2.0!\n\n@HipsterZipster . What issues do you have because of HMR?. I believe you\u2019ll be able to disable HMR after: #690.\nWhich loaders do you mean?. Closing this for now. Feel free to reopen with more information.. > any code just works ;)\n@albertogasparin That\u2019s the hard part here because you can have something like this:\njs\nconst foo = 'bar';\n<Button>{foo}</Button>. That\u2019s very na\u00efve: <Something\u00a0is not necessary a JSX element, maybe if (x<Something). The easiest way I see now is to wrap examples in React.Fragment only when they have JSX and no regular JS.. We now have autowrapping in React.Fragment, JSX fragments syntax also works and looks good:\n\n. It will be released in 6.1.0.. Thanks, merged!. Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. Closing this for now. Feel free to reopen with more information.. You can enable it here: https://react-styleguidist.js.org/docs/configuration#compilerconfig. I guess because the transformation isn't fully spec-compliant?. Thanks!. Thanks, merged!\n. We need to fix the bug if there is one. Just removing a useful feature isn\u2019t a way to do that.. Merged, thanks!. @probablyup I\u2019ve noticed that it renders some paragraphs as spans without any classes:\n\n. It\u2019s the only string ;-) Do you know how to fix that?. @probablyup Have you seen this issue with jest-serializer-html? Half of the time it\u2019s failing on Node 4 because of different order of attributes:\n```diff\n    - Snapshot\n+ Received\n\n\n\n@@ -11,12 +11,12 @@\n\n      </em>\n\n      <strong class=\"rsg--text-27 rsg--inheritSize-28 rsg--baseColor-32 rsg--strong-35\">\n\n        formatting\n\n      </strong>\n\n      and a\n\n-     <a href=\"/foo\"\n\n-        class=\"rsg--link-18\"\n\n+     <a class=\"rsg--link-18\"\n\n+        href=\"/foo\"\n\n      >\n\n        link\n\n      </a>\n\n      .\n\n    </p>\n\n```\nAnd it\u2019s <a> every time ;-|. Node 6 and 8 are always find, only Node 4 has issues. Maybe Object.keys has different order for some reason depending on Travis machine it runs on?. That\u2019s the reason:\n\nWhen defining values for process prefer 'process.env.NODE_ENV': JSON.stringify('production') over process: { env: { NODE_ENV: JSON.stringify('production') } }. Using the latter will overwrite the process object which can break compatibility with some modules that expect other values on the process object to be defined. \n\nhttps://github.com/styleguidist/react-styleguidist/blob/c39394c9850b51e17974d9331860260ebdebc84e/scripts/make-webpack-config.js#L44-L49\n. Thanks, merged!. It looks like your Prettier version is different, or what was the linting error? Try to use npm so it would pick up npm lock file to be sure that versions are the same.. That\u2019s weird, when I run npm test in master I don\u2019t see any changes. It looks like your master isn\u2019t the latest. Otherwise the code is good, I like it!. Now there are several ESLint warnings.. And remove yarn.lock\u00a0please.. There's no point in making exceptions for examples: they are code that someone will have to maintain too. Same simple rules apply to all code in the project.. Cool, thanks!. Thanks, merging!. Looks like this is something nobody needs ;-/. I guess we\u2019ll have to manually set normal\u00a0everywhere in the UI ;-|\n\nTesting with this config:\njs\nmodule.exports = {\n    components: 'src/components/**/[A-Z]*.js',\n    defaultExample: true,\n    styles: {\n        StyleGuide: {\n            '@global body': {\n                fontWeight: 'bold',\n            },\n        },\n    },\n    webpackConfig: {\n        module: {\n            rules: [\n                {\n                    test: /\\.jsx?$/,\n                    exclude: /node_modules/,\n                    loader: 'babel-loader',\n                },\n                {\n                    test: /\\.css$/,\n                    loader: 'style-loader!css-loader',\n                },\n            ],\n        },\n    },\n};. > im assuming this is because it is trying to import a file named Button.tsx rather than index.tsx where the component is actually located.\nMost likey it registers the component as index.\nHow do you export your component? I guess it\u2019s an issue with react-docgen-typescript:\nhttps://github.com/styleguidist/react-docgen-typescript/blob/cf90374b93821f8d41257b21ec372d4b7975bda7/src/parser.ts#L349-L358. You need to use named exports as described in their docs.. Please follow instruction in the docs: https://github.com/styleguidist/react-docgen-typescript. What issues you have with the current approach? It\u2019s handled by react-docgen and it only works with the source code.. Have you tested that your transpiled code actually works with react-docgen?\n\nI think it would be nice to support i.e. babel macros, codegens etc\n\nSure, it may be a good idea.. We can add a config option like transformSource(code) => transformedCode, sou you could apply any transformations like Babel before we send code to react-docgen, but it shouldn\u2019t be some magic that we\u2019ll enable by default \u2014 it works as is in 99% cases.\n. @piotrwitek This issue is about transforming source code, not examples. I think you\u2019re talking about #462.. @Andarist A pull request would make it much sooner ;-). I\u2019m closing this for now. Feel free to submit a pull request if you need this.. Would be nice to add an example here: https://react-styleguidist.js.org/docs/cookbook.html ;-). @lgordey Will try to release this or next week.. Out in 6.2.0!\n@lgordey . Thanks for bug reports! I\u2019ll have a look. (Feel free to send a pull request if have time to do so ;\u2013). @SaraVieira Have you tried to debug what\u2019s the issue? . I thinks that\u2019s the reason:\nhttps://github.com/iamstarkov/initize/blob/7eb1fcf721645bbc02f4b3bcba45de3856859bd4/all.js#L40. We have a bigger issue: syntax highlighting in CodeMirror doesn\u2019t work at all in Safari in Styleguidist 6.1.. And it happens only in JSS 9 (f16a8d3b6b26b47ee3322720ad52427b53b36274). @kof any ideas?. Nope, we\u2019re not going to add a giant hack like this ;-|. @kof The repo in the ticket description, any example in this repo. Reverting JSS and all plugins back to 8.x fixes the issue.. It wasn\u2019t used: https://github.com/cssinjs/jss-isolate/commit/c918ac2c3c3a18a15ab5a61b5328fc38022fde8e. We actually don\u2019t set all and have a custom list:\nhttps://github.com/styleguidist/react-styleguidist/blob/2556b519a9b8be1540818b2ffad4f108bed69466/src/styles/setupjss.js#L19-L33\nAs I understand docs, it shouldn\u2019t use the all list in this case.. It\u2019s in both lists:\nhttps://github.com/iamstarkov/initize/blob/7eb1fcf721645bbc02f4b3bcba45de3856859bd4/all.js#L40\nhttps://github.com/iamstarkov/initize/blob/7eb1fcf721645bbc02f4b3bcba45de3856859bd4/inherited.js#L11\nIs that intended?. Out in 6.2.0!\n@swashcap @austin94 . Thanks, PR would be very nice ;-). Yes, it\u2019s required \u2014 we support Markdown in comment. And most likely it\u2019s an issue in our code. \nHow to reproduce it? I don\u2019t see it in the example style guide.. I can\u2019t reproduce it in an example style guide:\n\nPlease make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. Closing this for now. Feel free to reopen with more information.. Thanks for bug report! I\u2019ll take a look, but feel free to send a pull request if you have time ;-). Out in 6.2.0!. I can only suggest to remove things one by one until it start working, and then we\u2019ll have an idea what\u2019s wrong and how can we fix that ;-|. I guess it\u2019s because of #725. @probablyup Could you please take a look?. I think it was https://github.com/probablyup/markdown-to-jsx/issues/136 . If you remove node_modules\u00a0and the lock file, and reinstall packages, it should pick up the new version.. Try to merge master, I\u2019ve made it optional.. :shipit: . @efusien It's not related to this issue in any way. Feel free to send a PR with a fix, or create a separate issue with a list of think we need to do to support webpack 4.. Seems to work fine for me. What did you do?. The error looks like babel-preset-react isn\u2019t installed. Try to remove node_modules\u00a0folder and run npm install\u00a0again.. I guess it should work fine with Node 6+. Try to run npm ls \u2014\u00a0do you have any warning here?\nWould it work if you run npm run start:customised from the repo root?. Thanks!\nThe site is here: https://github.com/styleguidist/site#running-locally though it would be tricky to test a PR. But you don\u2019t really need it in this case ;-). Thanks!. You should be able to return an absolute path in getExampleFilename.. Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. You need to ignore typings, add this to your style guide config:\njs\nignore: ['**/__tests__/**', '**/*.test.ts', '**/*.test.tsx', '**/*.spec.ts', '**/*.spec.tsx', '**/*.d.ts'],. @okonet Probably that's what withDefaultConfig is doing but the docs aren't super clear on that, and I haven't looked at the code. Similar to how we (and webpack) load webpack.config.js by default \u2014 load tsconfig.json by default like TypeScript does.. I think your approach with extension checking is the right one!. > Make react-docgen-typescript read users\u2019s tsconfig.json by default.\nI'm not sure about that after looking at the code ;-/. Please report this at markdown-to-jsx, I can reproduce the issue on their demo page: http://probablyup.github.io/markdown-to-jsx/. You can reinstall dependencies and it should pick up the new version.. That\u2019s a react-docgen limitation, there were several issues with this request I believe. But that\u2019s not something easy to implement ;-|. @stereobooster That's would be awesome! I have no idea what signature means ;-|. We should just change it to something like rsg-root. Feel free to send a pull request ;-). Sounds good! I\u2019d show a deprecation warning if app is found. Which could only happen if the user has a custom template. That way we could remove the condition in the next major release.. I think it was in deabsdeep and should be fixed now.. Could you try to run tests on deabsdeep. I was hoping to fix that ;-/. :tada: This issue has been resolved in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I guess you can try to do this now: https://github.com/styleguidist/react-styleguidist/blob/master/src/utils/renderStyleguide.js\nBut you\u2019ll need to do something with all the data like the styleguide\u00a0argument which is coming from a webpack loader: https://github.com/styleguidist/react-styleguidist/blob/master/src/index.js#L13\nThere are also several webpack aliases that you\u2019ll need to add to your webpack config: https://github.com/styleguidist/react-styleguidist/blob/master/scripts/make-webpack-config.js. > there is a lot of work done by the webpack loaders that I wouldn't like to implement in the app\nIt would make sense to make this part more modular.\n\nTo get the components docs I'll try with react-docgen\n\nThere are much more that just react-docgen ;-). > I wanted to use the components from the /react-styleguidist/lib/rsg-components/ but they aren't completely converted with babel to ES5 \nNot sure I understand what you mean. If that was true nobody could use Styleguidist.\n\nAre they any plans on making the React components to be used without the whole toolset\n\nWould be nice to extract props parser to a separate module and make it work without webpack. Feel free to do that.\n\nand without configuring webpack?\n\nI don\u2019t think there\u2019s an easy way to do that.. > the import and export declarations are not transpiled/compiled \nWebpack 2+ supports ESM natively.\n\nthere is a shortcut in webpack which needs to be configured (example).\n\nIt's required to make components configurable, I don't know an easy way to avoid it.\n\nFor the transpiling I would think we need to add more plugins in the babel definition: .babelrc#L11. I need to review properly but there are some other tweaks needed.\n\nFor example?\nIt is working already, I don't see any requirements except couple of aliases. Would be cool to avoid that but I don't see an easy way to do that now.. Sorry for the delay, merged!. It was discussed several times: #462, #621, #324. Feel free to send a PR to fix any of them.. Does it fix #739?. Cool, thanks!. Duplicate of #741.. I guess you can create a Style component that would attach styles to the page. I don\u2019t think the style tag would work in React.. It actually works right now:\n\n. I think you should file this issue here: https://github.com/styleguidist/react-docgen-typescript. Yeah, most likely it\u2019s an arrow function or a const. Do you know where this code is coming from?. It\u2019s from acorn5-object-spread which is a dependency of buble. From our side we can only file and issue there and ask what browsers they support.. That sounds great!. These two files, run.*.js aren\u2019t really test cases, more like examples of API usage. \n\njestsetup.js to setup Jest (see package.json)\nraf-polyfill.js\u2014 requestAnimationFrame polyfill for Node.js. I think we should use raf module instead, it\u2019s already in dependencies but not used. \u00a0 \nbrowser.js\u00a0is used to test bundles in Headless Chrome (see test:browser:* npm scripts)\n\nOther files in test folder are test data.. @iamtyce Nope, it shouldn\u2019t ;-(. As soon as someone submit a pull request. We don\u2019t support (means test) IE11 officially but happy to merge fixes.. @jbachhardie Sure, if you can make sure that both issues are fixed.. I think it should be fixed now after the Buble update. Feel free to reopen if you still have this issue.. I can only suggest to simplify the config: try to load only the most simple component and see if it still failing.. Nope, you need to find a component that breaks and and then we could debug it to understand what's wrong.. I\u2019m going to close it for now: I don\u2019t see anything we can do, but feel free to send a pull request if you see possible improvements.. You can check that yourself and have a correct answer instead of asking someone else to guess.. The question is not related to Styleguidist. You have something running on that port. Not necessarily Styleguidist.. I guess if you restart your computer it will work again. . It works fine for other people. Feel free to send a pull request if you believe it\u2019s a bug in Styleguidist.. I don\u2019t really understand your use case. If you disable all Styleguidist UI styles, you'll have to write your own anyway, which you can do now.. We purposefully isolate Styleguidist UI from any user styles because it will break the UI. You can try to disable jss-isolate for Markdown styles:\njs\nmodule.exports = {\n  styles: {\n    Markdown: {\n      base: {\n        isolate: false,\n      },\n      para: {\n        isolate: false,\n      },\n      // ...\n    }\n  }\n}. That's a very good point! I guess we need both. The option is good to completely disable all components on one page mode.\nI'm thinking that enabling this option by default in dev mode would be very good. Or make it not a boolean but a string: always, never, static-only, with the latter as a default value.\n. But the URL is always the same \u2014 / ;-). We can\u2019t: you open a style guide always at root. . Sounds like too much work ;-0. I don\u2019t see any other way: we need to know how many components to render when you open a style guide.. > Why should the style guide behave differently in this case? We still can render all components as we do now but only display one if the URL matches? What am I missing?\nBecause the whole point of this feature is not to render all component at the same page.. @stepancar What do you think about that?\n\nI'm thinking that enabling this option by default in dev mode would be very good. Or make it not a boolean but a sting: always, never, static-only, with the latter as a default value.\n\nI kind of like the idea but that may be breaking change to your current implementation.. Of course they can but why would they do that? For me it makes a lot of sense to have such behavior by default. I don't know how other people use Styleguidist but for I never need to see all component in dev mode.. Was finished in another PR, thanks for help anyway!. Thanks, merged!. Thanks!. It's planned for 6.2.0.. Feel free to help us solve the issue of docs using master branch. . Feel free to send a pull request to fix that.. I\u2019d start here:\nhttps://github.com/styleguidist/react-styleguidist/blob/ab903f751f9e337108d24dbda4410a98b80804a9/src/rsg-components/Playground/PlaygroundRenderer.js#L10-L14. Out in 6.2.0!. > I didn't see anything else asserting on CSS things\nFor that we\u2019ll need something like Cypress which would be awesome ;-). I think it requires too much knowledge to understand and more about how then why. I\u2019d add more generic comment on top of these two lines, explaining what\u2019s the problem this code is solving.. Thanks, merged!. Simple reason: functions are more powerful and arrays are more like a shortcut. So that means I'll be happy to merge a PR that adds arrays too ;-). :tada: This issue has been resolved in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. If you want to reuse Styleguidist to document interfaces you need to write your own resolver but I'm not sure it would work. Of use another tool to generate Markdown documentation, like documentation.js, and use these files in your style guide.. I\u2019ve added a few \u2014 feel free to suggest more \ud83e\udd84 . Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. I think @rluiten solution is the best for now, but you should use noeditor modifier to render components without the editor.. Yeah, feel free to send PR(s) \u2014\u00a0I don\u2019t use Flow personally but will be happy to merge improvements.. Should we close this now?. Good start, thanks!\nI think we should render them in tooltips like default values on your screenshot, they may be very large.. > Do you have any thoughts about how to improve rendering?\nI think it's good enough.. Good idea!. Could you take a look at the CI log here?. > codecov/patch \u2014 95.83% of diff hit (target 96.33%)\nIt means that the test coverage for the lines you changed in this PR is 95.83% and recommends to add more test to match the goal of 96.33% (I'm not sure where it's coming from). You can click Details and see which lines aren't covered by tests.. That would be supercool but feel free to ignore them ;-). Thanks, I'll merge it a bit later -- don't want to block master because we have a few unfixed bugs.. :tada: This PR is included in version 6.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I guess we can do something with this undefined. Please make a demo project that we can debug based on this repo: https://github.com/styleguidist/example. Most likely you can find more information about the error by adding some console.logs here:\nhttps://github.com/styleguidist/react-styleguidist/blob/7ab1ebf4245896ccad42c0a133987dff8869c72f/bin/styleguidist.js#L89-L112. Two funny facts:\n\nI don\u2019t see it when I build the basic styleguide in the main repo.\nWhen I build your repo, I see slightly different error: ReferenceError: can't access lexical declarationr' before initialization`.\n\nIt feels like some new version of UglifyJS to me.. Looks like so, of course they don\u2019t have a change log \ud83e\udd26\u200d\u2642\ufe0f \n```\nreact-styleguidist@6.1.0 /Users/tema/_/react-styleguidist\n\u2514\u2500\u252c uglifyjs-webpack-plugin@1.1.4\n  \u2514\u2500\u2500 uglify-es@3.2.2\nreact-styleguidist-example@1.0.0 /Users/tema/example\n\u2514\u2500\u252c react-styleguidist@6.2.0\n  \u2514\u2500\u252c uglifyjs-webpack-plugin@1.1.4\n    \u2514\u2500\u2500 uglify-es@3.3.8\n``. As a temporary workaround I guess you can add an older version ofuglify-es` as a dependency of your project. I'm still not sure what would be the right fix for that and what exactly is broken.. I don't think there's a strict requirement to keep it as an object, but I'm afraid it may be too difficult to change now.. I'd suggest to make a more generic option to transform props with the default implementation that will sort them like in this PR. To disable sorting you could pass a function that does nothing. I don't really like the idea or an option that control sorting of props, that feels too specific.. I'd like to collect more opinions, so far we're two against one ;-)\n@okonet @kof @SaraVieira @stepancar What do you think?. > Well, truth be told, I'm still sitting on v5.3.2 (because I couldn't get over the previous UI change that came in with a minor version bump and undoing that change is too much effort), so this change won't affect me at all. But if I was on v6, I would be pissed.\nThe let\u2019s just do this and see if anyone else will complain. I believe this would be more useful for majority of the users and we have a way to disable this. We can\u2019t make all users happy anyway.. > What's the plan if someone else does complain? Roll back the release?\nWe can always change the default value.\n\nPlease consider keeping current behaviour as default by shipping with propsTransform: props => props and instead adding the sorting function to documentation as a useful example of using propsTransform.\n\nI did consider that and have made a decision, thanks for comments.. :tada: This PR is included in version 6.4.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. It won't work with a glob pattern like this: /lib/components/Common/**/index.tsx, you should point to Styleguidist to your components, see examples in the docs: https://react-styleguidist.js.org/docs/components.html. Not now but if you have any ideas how to make it possible without making the codebase more complicated, feel free to send a pull request ;-). Yeah, the old option is still used in couple of places:\n\nhttps://github.com/styleguidist/react-styleguidist/blob/11bbe2cafab723efb159833fe831ccfb1e5499ec/scripts/make-webpack-config.js#L34\nhttps://github.com/styleguidist/react-styleguidist/blob/5a5a3762a78873120bd4bbc62272a7bd36e67681/loaders/styleguide-loader.js#L19\n/cc @SaraVieira . Thanks, merged!. It should be code, not pre, but that should work.. I\u2019m going to close this for now, because there\u2019s nothing we can do on our side.. This is obviously a bug: nobody will ever write links like that in comments and I believe it was working before. In any case it shouldn't produce errors.. Must be connected with new version of markdown-to-jsx, but your snippet seems to work fine. \nFeel free to send a pull request if you have time to investigate more and fix that.. Nope, that's because Remark print links as auto links ;-(. :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Awesome!\n\nI'm wondering if the cypress tests should run only for node 8, like current browser test, or it's ok that they run for all versions, like now?\n\nI think we should only run it once per CI run, I don't see how it could be useful to run it in multiple Node versions -- unit tests should be enough to test Node versions compatibility.. Awesome, merged!. You're trying to import the same file:\nimport RsgPreview from 'rsg-components/Preview';\nBut why not override Wrapper component instead, it's made for that?. Sure, there is:\njs\nimport RsgPreview from 'react-styleguidist/lib/rsg-components/Preview';\nWould be cool to update the docs with this example.\nstyleguideComponents creates a webpack alias like rsg-components/Preview -> your file, so all imports inside Styleguidist code would use your file.. Thanks, merged!. No idea ;-/ I guess it's a bug somewhere in Styleguidist, but it needs some debugging.\nFeel free to debug and / or fix if you have time.. That's the point of isolated mode -- to remove distractions and allow you to work on a single component.\nI guess what you need is this: https://github.com/styleguidist/react-styleguidist/pull/768\n. Feel free to send a PR! ;-). Cool, thanks!. Looks like something unexpected is coming from react-docgen. Feel free to send a pull request with a fix!. I can't reproduce it now, though output could be improved.\n\n. Merged, thanks!. You should file an issue at react-docgen-typescript, Styleguidist uses displayName if it's available.. Thanks, merged!. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!\n. Try to put this code in a file and require if from an example \u2013 require in examples isn't real require.. Thanks, merged!. This is the right way to do that:\n\njs\nimport DefaultPathline from 'react-styleguidist/lib/rsg-components/Pathline/PathlineRenderer';\nI don't see how we can make it significantly simpler, and I don't think we really should.. @jbachhardie I don't think that feature is that important, and I think the way it works is simple enough. \n@dallonf Would be cool! \u201cofficially supported\u201d is probably not the right name, we can\u2019t guarantee no braking changes, otherwise any changes in Styleguidist components would require a new major release, so it\u2019s up to the user to update their code. But the way imports work would be supported. I believe that\u2019s a good compromise between ability to change anything and keeping the implementation simple enough.. I'm going to close this because there's nothing we can do now. Feel free to send a pull request if you see what can be improved ;-). Thanks, merged!. Thanks, merging!. Thanks!. Thanks, merged!. Cool, thanks!. I think we can remove test cases from the example. I don't think they are useful if we're not going to run them.. Looks like CI is still failing ;-/. You need to disable import/no-unresolved ESLint rule for some files.. Thanks, merged!. Feel free to send a pull request to fix that if that\u2019s possible.  There\u2019s a bit of magic here and I\u2019m not really sure there are many use cases where this would be important.. I\u2019m closing this for now. Feel free to submit a pull request if you need this.. It won\u2019t use your component, so that use case doesn\u2019t matter.. It looks like a bug to me. What would be the use case for that? . > Shall I just make that change then?\nYup!. Thanks, merged!. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. :tada: This issue has been resolved in version 6.5.0 :tada:\n\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. CI is now failing:\n\nModule not found: Can't resolve 'react-styleguidist/lib/rsg-components/Sections/SectionsRenderer' in '/home/travis/build/styleguidist/react-styleguidist/examples/customised/styleguide/components'\n\nI\u2019d add a webpack alias, react-styleguidist, to customised style guide config with a comment that is\u2019s required for test.. Thanks, merged!. That\u2019s because we\u2019re exposing all component as global variables. It\u2019s not ideal and possible to fix, but nobody has time to do that yet.\nThere\u2019s an issue for that already: #325. Feel free to send a pull request, I think there\u2019s already some proposed solution ;-). I think it could be a cool feature if we can generalize it: to allow rendering any kind of markup, not just HTML, so Styleguidist could be set up to render Mustache templates or Vue or whatever they want. But I have no idea how to do that and how complex it could be. Would be super cool if you could investigate more! \ud83e\udd84 . :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I see two issues here:\n\nDifferent component name, visible in the UI. This would be nice to have, it\u2019s mentioned in #195.\nAccess to different components with the same name, because all will have the same name. So you'll need to require the right component in each example, or invent something else ;-). Would be cool if you can PR 1 ;-) I'm not really sure there's an easy way to do 2 before #325, and I doubt there are many use cases for that to actually do that.. Awesome, thanks!\n\n\nThey feel a bit fragile, I don't like hooking up to css classes or text contents for testing, but I can't come up with better ways yet.\n\nI think text content (especially for things like buttons) is OK. CSS classes and tab names feel fragile, but I don't see a better way unless we add a name to each element we want to access in tests.\n\nHad some pain with code editor, since the codemirror is using an empty hidden textarea behind the scenes to track keystrokes and update the divs with representation, so the test for this is a bit hacky.\n\nYeah, that\u2019s expected ;-)\nI\u2019m going to merge it as is now, but feel free to send a new PR, if you\u2019ll find a better way to access elements. . Great, thanks!. Thanks!. I\u2019m not really sure where we should fix that: here or in react-docgen-typescript. Feel free to investigate or send a pull request with a fix ;-). You need both, react-dom and react \u2014 they are peer dependencies of Styleguidist. Other than that I don\u2019t see why it shouldn\u2019t work.. I don\u2019t understand what problem you\u2019re trying to solve bu I doubt there will be an easy way to do that.. That\u2019s a good idea! Feel free to send a PR for that ;-) You\u2019ll probably need to prefix IDs to avoid clashes with already existing IDs that we generate on the backend. We already have github-slugger in dependencies\u00a0to generate slugs.. It will be in Styleguidist as soon as someone submits a pull request.. Looks like they moved webpack config again:\n```\n\u276f node\n\nrequire('react-scripts/config/webpack.config.dev')\nError: Cannot find module 'react-scripts/config/webpack.config.dev'\n```. Nope, feels like some Yarn issue. Works for me after:\n\nrm -rf node_modules\nnpm install\nnpx styleguidist server. Awesome, thanks for picking it up! I haven't looked into the code yet, let's finalize the API first.\n\nInstead of showing the first component per default, I set the first section or component as the default. I assume most of the larger styleguides start with some kind of Intro or Getting started section anyways.\n\nI thinks that's a great idea!\nWhat do you think about making the option a string instead of a boolean with values always, never, static-only, with the latter as a default value? static-only will show one component in dev mode and all in the static build, I believe that would be most convenient for the majority of users.\n. Awesome, thanks! I'll try to make a release soon \ud83e\udd84 . :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @farrahD Sure, that would be awesome! There are no code changes, only docs.. > I did a Commit but not sure if I was supposed to do a Pull Request?\n@farrahD Yup, otherwise I wouldn't be able to review and merge the code.\n\nI didn't see a 3rd them\n\n\u201c3. Add npm scripts for convenience\u201d, see the link in the issue description.. Remove the whole 3rd step, it's up to the user now whether they want to create npm scripts or not.. There's not a single word about dependencies, only about npm scripts. We shouldn't dictate such details to users.. Yup, it will run local version if it's installed.. I\u2019m not really sure what we can do here: feel free to send a pull request if you see possible improvements.. Nice, thanks!. Could you remove changes in package-lock.json too?. YES!!! I've approved the PR and will include it in 7.0.0 release (don't know yet when though ;-). Maybe not, if we make a major release. It may break some custom styles because of new added DOM element.. You can already do it with the Wrapper\u00a0component.. It's just a convenience, you can sill use fragments manually:\n```js\ninitialState = { counter: 0 };\n<>\n   setState({ counter: state.counter + 1 })}>Click Me\n{_.repeat(' \u2713', state.counter)}\n\n```. Yeah, and I'd make it a bit more useful than in my initial example:\ncss\n.example {\n  margin: -8px;\n}\n.example > * {\n  padding: 8px;\n}\nThe actual code will be more complex of course ;-). The test case could be changed \u2014 there are many way to reproduce the error, like <Pizza ;-)\nSomewhere here I think: https://react-styleguidist.js.org/docs/documenting.html. I'm still not convinced that conditional wrapping is needed here ;-). Undefined reference isn't a problem at all ;-) But this is:\njs\nconst foo = 42;\n<span>{foo}></foo>\nSo probably we should check if an example starts from < and wrap only in that case.. Thanks, merged!. I have no idea what StencilJs is and how valuable will be its support for other users. And, more important, how can we support it. . Closing this for now. Feel free to reopen with more information.. Use static modifier: https://react-styleguidist.js.org/docs/documenting#usage-examples-and-readme-files. https://react-styleguidist.js.org/docs/cookbook#how-to-hide-some-components-in-style-guide-but-make-them-available-in-examples. Thanks, merged!. I don't see any warnings in your example with the latest React Styleguidist.. This is not the latest version:\nhttps://github.com/styleguidist/react-styleguidist/blob/a086302bbef484144f6dbfe4ff43e143b68aff47/examples/cra/package.json#L20. Thanks, merged!. :tada: This PR is included in version 6.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. We don't use Babel:\nhttps://react-styleguidist.js.org/docs/documenting#writing-code-examples. Feel free to send a PR. Though I'm not sure which order is the right one ;-). You can use this PR\u2019s branch.. We're going to get rid of the HTML plugin entirely \u2014 #896. But thanks for help anyway!. Could you please merge master into your branch?. Thanks, merged!. :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I don't know either, and only you can find them. There's no way we can help you with the info you provided. Feel free to reopen with a demo.. Awesome, thanks!. :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I think this would be easy to do for an isolated or a single component view (will be available in the next version). Otherwise you'll have to listen to scroll events, because hash doesn't really say which component is in the viewport. Both PRs would be super cool ;-). I think we should rather remove package-lock.json\u00a0from the example repo. But I don't know how to make sure people use the right repo (mentioned in the issue template, not the main repo).. I believe that\u2019s because of this line:\nhttps://github.com/styleguidist/react-styleguidist/blob/dae9d6696449f25cdc6f18620074cde785776333/src/rsg-components/Preview/Preview.js#L29\nWe could probably just do this.state = initialState. Feel free to submit a pull request ;-). :tada: This issue has been resolved in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thanks!. :tada: This PR is included in version 6.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I'd accept a more generic solution: a function to process an object returned by getProps function. So you'll read package.json in your style guide config.. :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thanks! Would be awesome if you can add some tests for this part of the code.. @nicoffee Sorry for the delay. Ideally we shouldn't call methods directly, but I'm not sure it's possible in that case. I'll try to have a look myself.. It actually doesn't work. I've fixed the implementation and have added couple of tests.. :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Niiice, thank you! \ud83e\udd84 \n. :tada: This PR is included in version 6.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Fixed in #857.. They are defined here:\nhttps://github.com/styleguidist/react-styleguidist/blob/7b8f160e8f13f6ca0a98c316f6b89fc09646f5ca/scripts/make-webpack-config.js#L62-L63\nYou'll have to use dangerouslyUpdateWebpackConfig option to change them: https://react-styleguidist.js.org/docs/configuration#dangerouslyupdatewebpackconfig. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. I think the second (printInstructions) would be right way to do that. But I'm not sure how flexible should it be. In future we may need more useful information here. And there\u2019s also similar thing for the production build.\n\nWould like to hear more opinions and use cases.. I'd change arguments to an object \u2014 would make adding new features easier.\nAnd I think we need a similar function for build instructions, so printServerInstructions and printBuildInstructions.. Yup! Otherwise it will be hard to add another option for the build.. :tada: This issue has been resolved in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Unfortunately I can't recommend anything because but that would be a good feature to have. Though I don't know if it should be in the core or as a third-party tool like Snapguidist.. Thanks! Will include in the next release ;-). :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @gergely-nagy Awesome! \ud83e\udd84 . Thanks, merged!. :tada: This PR is included in version 6.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nThe push permission to the Git repository is required.\nsemantic-release cannot push the version tag to the branch master on remote Git repository.\nPlease refer to the authentication configuration documentation to configure the Git credentials on your CI environment.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nThe push permission to the Git repository is required.\nsemantic-release cannot push the version tag to the branch master on remote Git repository.\nPlease refer to the authentication configuration documentation to configure the Git credentials on your CI environment.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nNo changelog commit for this minor release found and therefore a new version won\u2019t be published:\nTo make a realease add a commit with a \"Changelog:\" tag and release notes in its body.\nUnfortunatly this error doesn't have any additionnal information. Feel free to kindly ask the author of the semantic-release-tamia/verifyRelease plugin to add more helpful informations.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nThe push permission to the Git repository is required.\nsemantic-release cannot push the version tag to the branch master on remote Git repository.\nPlease refer to the authentication configuration documentation to configure the Git credentials on your CI environment.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nNo changelog commit for this minor release found and therefore a new version won\u2019t be published:\nTo make a realease add a commit with a \"Changelog:\" tag and release notes in its body.\nUnfortunatly this error doesn't have any additionnal information. Feel free to kindly ask the author of the semantic-release-tamia/verifyRelease plugin to add more helpful informations.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nNo changelog commit for this minor release found and therefore a new version won\u2019t be published:\nTo make a realease add a commit with a \"Changelog:\" tag and release notes in its body.\nUnfortunatly this error doesn't have any additionnal information. Feel free to kindly ask the author of the semantic-release-tamia/verifyRelease plugin to add more helpful informations.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nNo changelog commit for this minor release found and therefore a new version won\u2019t be published:\nTo make a realease add a commit with a \"Changelog:\" tag and release notes in its body.\nUnfortunatly this error doesn't have any additionnal information. Feel free to kindly ask the author of the semantic-release-tamia/verifyRelease plugin to add more helpful informations.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nNo changelog commit for this minor release found and therefore a new version won\u2019t be published:\nTo make a realease add a commit with a \"Changelog:\" tag and release notes in its body.\nUnfortunatly this error doesn't have any additionnal information. Feel free to kindly ask the author of the semantic-release-tamia/verifyRelease plugin to add more helpful informations.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. I believe it's fixed in master, I'm going to release 6.5.0 very soon.. I think this is react-docgen issue and should be reported there.. You can reproduce it like this:\n\n``js\nvar reactDocs = require('react-docgen');\nconsole.log(\n    '1',\n    reactDocs.parse(\nimport PropTypes from 'prop-types'\nimport React from 'react'\nconst TestComponent = ({ bool }) =>  True  \nTestComponent.propTypes = {\n  bool: PropTypes.bool\n}\nexport default TestComponent\n)\n);\nconsole.log(\n    '2',\n    reactDocs.parse(\nimport PropTypes from 'prop-types'\nimport React from 'react'\nconst TestComponent = ({ bool }) => bool\n  ?  True  \n  :  False \nTestComponent.propTypes = {\n  bool: PropTypes.bool\n}\nexport default TestComponent\n`)\n);\n```\nThe second snippet fails with Error: No suitable component definition found... Will be fixed in 6.5.0, it's a new option.. :tada: This issue has been resolved in version 6.5.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Yeah, I've replaced two hacks with one ;-/\nI can check for initialState\u00a0too but it won't solve the issue completely. So if you have any ideas how to make it better, would be super cool!. For more context: the issue I'm trying to solve is extracting the values of the initialState, which I need to pass to a component that manages state and wraps an example.. Expect a new release in ~10 minutes ;-). :tada: This issue has been resolved in version 6.5.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Feel free to send a pull request! ;-). Thanks! \ud83e\udd84 . Thanks!. I think the main idea was to never show lots of components at the same page, which isn't the case in your implementation. \nBut I'd like to hear more opinions ;-). This looks good! Do you see an easy way to return isolated mode? Should be possible because you use different URLs for sections. A PR would be super cool!. If you can agree on The Perfect API and send a PR I'm fine with a breaking change ;-)\nHonestly I don't have a strong opinion on how it should look, but ability to toggle things per section looks like a good idea.\n. @rafaesc Should we close this issue?. Sould be fixed in #1073.. @n1313 That's not the right question: they will have to update their config. Benefits are for new users and maintainers.. @kopax Please point me to the docs that weren't updated? There are enough examples of the new API.. @leahzxxz Sounds great!. @leahzxxz Nope, it's about adding a style guide for existing components in src/rsg-components folder. So adding styleguide.config.js into a root folder and pointing it to src/rsg-components/**/[A-Z]*.js should be enough. So your style guide config should look like this:\njs\nmodule.exports = {\n    components: 'src/rsg-components/**/[A-Z]*.js',\n    webpackConfig: {\n        module: {\n            rules: [\n                {\n                    test: /\\.jsx?$/,\n                    exclude: /node_modules/,\n                    loader: 'babel-loader',\n                },\n                {\n                    test: /\\.css$/,\n                    loader: 'style-loader!css-loader',\n                },\n            ],\n        },\n    },\n};. Yep, similar to examples style guides we have (examples folder) but to show components that is used in Styleguidist itself.\nYou may see some components twice (Component + ComponentRenderer) because of how we structure the code but I would ignore that for now.\nAnd also a new script here:\nhttps://github.com/styleguidist/react-styleguidist/blob/4396dc28f097e7374def088063e2fcf211cd1520/package.json#L143-L145\n(You don't need to specify a config path for that case, it will use a default one.). Yup, you need to add a command to run your new style guide like this:\n\"start:ui\": \"node bin/styleguidist.js server\",. > Is there a deadline for when this should be done? Getting a bunch of cross-origin and other errors (none of the examples or code snippets load at the moment) and I think it will take me a while to figure out\nNo deadlines in open source, it's our free time and we don't have that many of it usually ;-) Feel free to open a pull request with WIP in a title if you're stuck. I'll have a look.\n\nAre there code examples for the components? I'm not familiar with the codebase enough, would appreciate some help\n\nNot now, just having all the component in the style guide is enough for now.\n\nDo all components in rsg-components need to go on the style guide?\n\nYup, you'll have that with default settings.. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. We don't support IE officially but feel free to send a PR to fix that.. I think no, otherwise CI would fail.. I guess I\u2019ve decided to remove an extra Babel plugin because webpack wasn't complaining about System.import ;-). > When something isn\u2019t working for you, include a reproducible demo:\n 1. Fork the example project: https://github.com/styleguidist/example\n 2. Modify it to reproduce the issue.\n 3. Push to GitHub and paste the link here.\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. We've refactored Markdown components recently:\n\njs\nstyles: {\n    Pre: {\n        pre: {\n            backgroundColor: 'green',\n        },\n    },\n},. It works in your example, I've tried it.. This works:\njs\n    styles: {\n        Code: {\n            code: {\n                backgroundColor: 'red',\n            },\n        },\n    },\n. I don't see what should be changed there, but feel free to send a pull request.. I guess it could help if anyone would try ;-). Thanks! That's our own plugin ;-). Fixed in dea7bdda0047652596214130b049786c73d036a8.. Fixed in 5d9e52d6b5f361f06a8abe7f060778cbd0e12a62.. Thanks, merged!. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. It's almost done: \nhttps://github.com/styleguidist/react-styleguidist/milestone/11. Could you publish a demo project? I don't know what's html-webpack-plugin-before-html-processing but it's something from your project, not styleguidist.. Nope, because we should support tools like Create React App that have their own webpack, so you don't have it as a dependency of your project. But if Styleguidist couldn't load webpack, it will ask you to install it.. We support webpack 3 and 4, so you\u2019ll likely see some warnings in both cases, but it works somehow. We\u2019ll drop webpack 3 as soon as CRA supports webpack 4, but there are other issues with that (like #987), and then we could upgrade dependencies and get rid of warnings.. @marcofugaro Awesome, let's close this then ;-). I'm not sure there's an easy way to solve this. Right now all components are global (which isn't a good thing, a would be nice to fix that \u2014 #325).\n\nAs a workaround (though ugly) you may try to require the right component in the example code.\n\nPS: I had to override the ComponentsListRenderer because it is still using the name as key, instead of filepath (as we can see here #33, I think you just changed the ComponentRenderer key prop isn't it?).\n\nAccording to blame it uses name\u00a0for over a year, if it was ever different ;-) Feel free to send a PR to fix this.\n. You can use ES6, except modules ;-) because Buble doesn't support them.. Please merge master and bring back destructuring, we don't need this rule anymore \u2014 it was there for Node 4 ;-)\nAlso, could you please update help function in the styleguidist.js?. No, we're not going back to massive Markdown parsers. \nI guess the issues with markdown-to-jsx as soon as someone submits a pull request to fix them. \nBut feel free to send a pull request to downgrade markdown-to-jsx.. There are at least several ways to do that described in the docs, depending on what exactly you want to achieve.. Merged, thanks!. Thanks for the pull request! I'll look into failing tests, I didn't expect that ;-\u00a3. You can remove defaultExample: true \u2014 it will fix errors you see in the browsers console.. > @sapegin thanks! there was also a React error for getting the same key for an li element so i added Math.random() to the key, let me know if you prefer another way to do it :) \nPlease don't use random keys in React, this is much worse than using indexes as keys (which can be acceptable in rare cases): you're telling React that you have a new object every render, so React has remove a previous element, create and mount a new one, instead of updating an existing one (in case of changed props) or not doing anything at all. This is never what you want ;-) Could you try filepath\u00a0instead of name?\n\nRegarding the package-lock warning, I tried removing and npm install again but there's nothing new to commit (I guess it's because I just added a start script and it didn't affect any versioning in package-lock).\n\nIgnore that, we need to make the warning more clear ;-) You need to do that if you change any dependencies, which isn't the case here.. Thank you, merged \ud83e\udd84 . >  When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project repository: https://github.com/styleguidist/example\n     (please don\u2019t use the main, styleguidist/react-styleguidist, repository).\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n. Anyway, I can reproduce it at markdown-to-jsx, so it should be reported there.. Lock fines aren't used when you install a package from npm, so it doesn't matter what you use: Yarn  or npm. I've merged the other PR, so going to close this one.\n\n\nThanks for PRs!. I don't think we should do it for all examples by default, but we can implement it as a modifier.. I don't like having translate3d\u00a0for all examples, especially for a feature that is useful for 0,1% of examples.\nThat's another question, if it's not done yet, it's not difficult to do.. One side effect I already see: it switches text antialiasing to grayscale.. I'm going to close this for now: there are workarounds and the proposed solutions has flaws. But feel free to send a pull request with a better solution.. Thanks!. Sorry, I've missed that ;-)\nThen the one last tiny tweak:\n\u201cOpens Styleguidist with the default browser.\u201d \u2192 \u201cOpen Styleguidist in the default browser.\u201d. Thanks, I'll try to make a new release soon!. Looks like I forget to include this PR in 7.1.0, sorry \ud83d\ude2d \u2014 will try to make 7.2.0 soon!. Thanks, merged!. That's definitely not a fix: that will just hide  an error instead of fixing the root cause. But with this amount of details I couldn't do anything. Most likely one of your components has something unusual that causes the error, but you need to find it, and then:\n\n\nFork the example project repository: https://github.com/styleguidist/example\n    (please don\u2019t use the main, styleguidist/react-styleguidist, repository).\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\n\n. Sounds like a good feature, feel free to send a pull request ;-). This is awesome, thank you! \ud83e\udd84 . Thanks, merged!. Do we have any breaking changes here? Do we need any docs updates (I guess we do)?. You can try to run it with webpack 3 to be sure. It's possible that the reason is the webpack update.. Feel free to send a pull request with a fix.. Should we close this?. https://react-styleguidist.js.org/docs/configuration#template\nhttps://react-styleguidist.js.org/docs/cookbook.html. Please try with the latest version and create a reproducible demo.. No, we won't do that, it's not worth it.\n\nOnce I add a component, I need to add section config and components and then restart styleguide\n\nDon't create a new section for each component, use glob patterns.. Feel free to send a pull request that improves performance. . Feel free to send a pull request with a fix.. I'm not sure I want to install Docker just to run the code\u2026. #941 may fix that.. I think it should be fixed in 7.1.0. Feel free to reopen if not.. > I'm wondering if this is a problem only on certain versions of node... \nI think the example wasn't really tested, so your'e change should be fine. And a PR for that would be super awesome!\n\nThis feature is so valuable that it would be great to have it in the cookbook under something like \"how to display the source code of a file?\". Also happy to help with that if you like it.\n\nThat would be super cool too! Thank you!. Thanks!. Could you explain how is this useful?. Thanks for the detailed explanation!\n\nAnyways, I've been using your project and its pretty great; but thought it might be desirable to make it a monorepo.\n\nEventually, yes. \n\nAs I've, and I assume others, have wanted to use a few of your components, in other projects. Its a few more hours of work to get everything back to working, which I don't mind doing, but wanted to see how you felt about a massive PR, to break react-styleguidist up into a bunch packages; before I did that.\n\nThat's a good idea in theory. But right now components have too many dependencies on how Styleguidist work. And I don't think putting each component in to a separate package is the way to solve it. . I'm not really sure what problem you're trying to solve here. How is your use case different from this example, which is also not in the root folder?. I think you should use https://react-styleguidist.js.org/docs/configuration.html#dangerouslyupdatewebpackconfig . I'm not really sure what problem you're trying to solve but feel free to send a pull request.. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. Thanks, merged!. We don't use Object.entries, are you sure it's from Styleguidist?. This should fix it: https://github.com/vxna/mini-html-webpack-template/pull/1. Thanks, merged!. I'd not include it in the core, but that could be a good plugin, so any help with the plugin API and making Styleguidist components more flexible would be super cool ;-). Sounds great!. > Styleguidist uses Bubl\u00e9 to run ES6 code on the frontend, it supports most of the ES6 features.\n\nhttps://react-styleguidist.js.org/docs/documenting#writing-code-examples. > It is now not possible to import custom components within styleguidist without overwriting the internal Markdown component from rsg-components.\nCould you elaborate on that? You can require\u00a0any component inside an example now. And imports won't work anyway, because Buble doesn't support them.\n\nIt would basically works the same as markdown-to-jsx\n\nIt would be a breaking change \u2014 users will have to rewrite all their examples, it would make viewing Markdown files as Markdown (for example on GitHub) impossible, because examples are just text. We need to have a very good reason for this change and so far I don't see any.\n\nonly that it comes with some more handy features to customize the templates.\n\nFrom your examples I only see one feature: execute any code without rendering it, which wouldn't be hard to support with a new modifier.. > When using mdx I could do the following;\nYou can do the same now:\njs\nconst ColorPalette = require('./components/ColorPalette').default;\n<ColorPalette />\nWe only use markdown-to-jsx to render Markdown, examples are rendered separately and we have to transpile the code before running it in the browsers (we use Buble for that).\n. Should be fixed in master now.. Looks like I'm missing something, how does this fix the issue? Shouldn't it behave the same way it was before renaming?. Oh, I see!\n\nBy the way, I would suggest turning on the eslint rule to prevent reassigning arguments, that will prevent this sort of bug.\n\nThat sounds good, but may need some changes in the code ;-). Could we try to make this code more explicit?\n```js\n    const rendered = fills.map((fill, index) => {\n        // { id: 'pizza', render: ({ foo }) => {foo} }\n        const { id, render } = fill;\n        if (id && render) {\n            // Render only specified fill\n            if (onlyActive && id !== active) {\n                return null;\n            }\n        const { onClick } = props;\n        const fillProps = {\n            ...props,\n            name: id,\n            // Set active prop to active fill\n            active: active && id === active,\n            // Pass fill ID to onClick event handler\n            // eslint-disable-next-line react/prop-types\n            onClick: onClick && ((...attrs) => onClick(id, ...attrs)),\n        };\n\n        const Fill = render;\n            return <Fill key={index} {...fillProps} />;\n    }\n\n            // fill is a component \n        const Fill = fill;\n    return <Fill key={index} {...props} />;\n});\n\n```. Or probably we should just remove the simple form and require ID for every fill. I think the simple form is used only here now:\nhttps://github.com/styleguidist/react-styleguidist/blob/768334ee26d0971f122ab54e5a147ac782ff13ce/src/rsg-components/slots/index.js#L11. I can increase it even more, but not sure it will help ;-/. It's actually different, this is the flaky one and it's passing:\n\n\u2713 changes the render after code change (1089ms)\n\nAnd the failing test case is:\n\n1) Styleguidist core shows single component in isolated mode:\n    Uncaught Error: Script error.. Which is probably related to your latest changes, and the test looks fine for me:\n\nhttps://github.com/styleguidist/react-styleguidist/blob/7f5137e2484eb861371ede7e6e8f718e97ff9d06/test/cypress/integration/core_spec.js#L12-L18. Where did you put that NO_PROXY? ;-/ We need some docs how to run and debug these tests locally, but they actually right: the isolated mode is broken now because the name\u00a0is overwritten by the fill name. It may be not that easy to fix though\u2026. OK, let's do that, and then I'll try to cherry pick your latest commits and fix that. The code is really confusing now ;-|. Could you open a new PR with the changes you've reverted? That could be a good start and I could help with finishing it.\nP. S. You can create a new branch directly at this repo, no need to fork it ;-). Thanks, merged!. Yeah, we have some issues with this test: https://github.com/styleguidist/react-styleguidist/issues/895\nRestarting the CI usually helps.. Thanks!\n(I\u2019ve also increased the timeout in that test \u2014 hope it would help, couldn't find a way to avoid the timeout unfortunately.). I think we can close it too ;-). I'm not really sure what changes to Styleguidist are needed for your use case, or that Styleguidist is a better choice than Codesandbox for example.\nBut I've used Styleguidist in a similar way: https://github.com/sapegin/component-driven-development. Yup, you have to edit files, that's why Codesandbox may be a better choice for you. In Styleguidist you  can only edit examples on the page: you could use that but there's no way to preserve changes.. But you\u2019ll need create a webpack config to load your files anyway.. Thanks, merged!. What problem you're trying to solve? It's not supposed to be changed via webpackConfig because it may break Styleguidist. You could change it with dangerouslyUpdateWebpackConfig.. I still don't see what problem you're trying to solve, that can't be solved with styleguideComponents or dangerouslyUpdateWebpackConfig optons. Any changes to webpack config required by Styleguidist itself are potentially dangerous and not allowed.. The comment is actually incorrect anymore, users should use styleguideComponents option.. CSS extraction an CSS loading are completely independent things, you don't need to extract CSS to a file to do anything, you've described.. I advice you to read what MiniCssExtractPlugin actually does and how CSS imports work in webpack instead of complaining here.. As soon as someone sends a pull request with an update ;-). I'm wondering why are they enabling Babel inside node_modules.. I think we should open an issue there, because they say \u201cVerify this doesn't break third-party code\u201d \u2014 but it breaks ;-) And they don't have to compile imports, just allow the syntax. Would you mind opening an issue at create-react-app?. I don't see any discussion there, is that the right link?\n. This may be a good solution for that: #1054.. This was fixed on CRA side, closing.. I don't see any reason why fs\u00a0wouldn't work when you require a file that uses it. Could you make an example repo?. The fist issue is correct: we can't support that. \nThe second: I don't want to guess ;-) I'd start from the simplest example.. I think @jbachhardie is right, it's a webpack issue, not Styleguidist. . It looks good to me! Thanks for all the hard work! I think we can include this in 7.1.0, I\u2019ll try to find some time to make a release.. Have you tried? I guess it won\u2019t work though, and I\u2019m not sure what we need to change to enable it to work similar to public methods. Could you show some use cases? . I still think we should try something like https://github.com/unshiftio/url-parse instead of doing this manually. . If it really simplify code (keep in mind that we\u2019re rendering the same component with different props depending on the URL), then I\u2019m fine with it. But we\u2019ll still need something to parse query strings.. Yup, let\u2019s keep this PR as is, the code is isolated at least ;-/. Restart usually helps, any CI can fail for many reasons not related to code changes ;-). That should be fixed in master already.. Yeah, that's weird. I don't understand the difference between push and pr anyway ;-/ \nI think the code is fine now, just a few docs tweaks left.. Could you please merge master? Is there anything else left or we can make 7.1 release with this?. Merging this to maser wasn't a good idea, I'm going to revert it.. Maybe I wasn't clear enough, I meant to merge master into your branch to resolve merge conflicts.\nI've reverted the merge now, but you will need to open a new PR I think (renaming the branch and opening a new PR should work).\nP. S. You can try to make a new release if you want, there are some docs about the process. Let me know if that's something you'd like to do ;-). Ping me if you have any questions, there's a milestone for the next release.. @sterlingssmith Awesome! \ud83e\udd84 . We can make h5 bold and h6 italic.. Cool, thanks, merged! \ud83e\udd84 . Please use search, it was discussed million times already and I believe both questions have open issues.. The reasons why we do this are explained here: https://react-styleguidist.js.org/docs/development.html\nYou can disable jss-isolate per rule, but then there's no guarantee than your app styles won't break Styleguist UI:\nhttps://github.com/styleguidist/react-styleguidist/blob/5c07e8125a7581a98661b0b45671001abec683de/src/rsg-components/Editor/EditorLoaderRenderer.js#L22-L25\nFeel free to send a pull request if you have an idea how to make the theming experience better.. Thanks, merged!. Your alternative solution is the right way to do that.. This was discussed many times with suggested fixes, please use search and feel free to send a pull request to fix that.. Thanks, merged!. Thanks, merged!. > You should pass glob patterns, for example, use **/components/Button.js instead of components/Button.js.\nhttps://react-styleguidist.js.org/docs/configuration#ignore. The default for ignore\u00a0is an array of globs:\n['**/__tests__/**', '**/*.test.{js,jsx,ts,tsx}', '**/*.spec.{js,jsx,ts,tsx}', '**/*.d.ts']\nDo you see any examples of the ignore options that aren't globs in the docs?\n. I only see a glob in your example: src/components/**/*.{js,jsx,ts,tsx}.. You can do this with devServer\u00a0webpack config option.. Could you show an example of how are you going to use this? It's likely not the best solution, and I'd like to avoid it.. I don't think it's the right solution for the problem. Plugins would be much better and more flexible, and for your use case you need a very simple implementation: real plugins list from a style guide config and make it available for Styleguidist components. There's a draft implementation #505 but it tries to do much more than that (probably that's why it was never finished), but we could start from small things.. This is exactly the same as your first \"solution\u201d, I can't accept it. As I've said before, I see plugins as the only solution now. . Thanks!. Feel free to submit a pull request for that.\nBut in general your style guide should not depend on the backend.. I think presentational and container components is the right pattern here: you don't need containers in your style guide, only presentational components. It would be more convenient to use unit tests to test containers and mock network requests (with Nock, for example).. Possible reasons:\n\nnobody sent a pull request for that;\n~~may not work with Create React App.~~. Now I'm wondering what are you actually trying to achieve by doing this?\n\n\nWhen attempting to clone this repo (+my new components) into a next.js project. This is only a warning, Styleguidist works fine with webpack 4 (at least it used to work with older webpack 4 releases).\n\nIn any case we can't do anything without a reproducible demo.. #993 will probably fix it.. Should be fixed in 7.1.0.. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. That's a great idea for a plugin! Not sure we should support it out of the box, because different projects will have different idea of what status is. And your example with new/deprecated/experimental is just one of many ways.. You need to debug which your component leads to this issue.. It does work when you use a template literal:\n\njs\nconst EmotionStyledButton = styled(Button)`\n    color: red;\n`;\nAnd when you don't, there's a warning:\n\nWarning: Cannot parse src/components/EmotionStyledButton.js: TypeError: Got unsupported definition type. Definition must be one of ObjectExpression, ClassDeclaration, ClassExpression,VariableDeclaration, ArrowFunctionExpression, FunctionExpression, TaggedTemplateExpression or FunctionDeclaration. Got \"CallExpression\"instead.\n\nSo likely react-docgen doesn't support object notation.. That's a great idea for a pull request ;-). We have a page about third-party libraries, it could be a good place.. Your css-loader\u00a0only works for files inside src/styles, but not in src/component, where you're trying to use it.. Thanks! This is awesome! Though we have to wait for CRA2 final release.\nJest 23 is awesome too! Could you please send it as a separate PR? We could merge it right away.. Thanks, merged!. This is weird:\n\nThe base example works fine with 7.0.18.\nWith your example it's broken even in 7.0.5.\n\nSo I guess it's not a new bug, but somehow your component breaks Styleguidist ;-/. Ah, that! \ud83e\udd26\u200d\u2642\ufe0f \nhttps://github.com/styleguidist/react-styleguidist/blob/3ebcc80d10500a5043cac030e4f20743587f586f/src/index.js#L23-L29\nI think we can remove it now.. Great idea!. Out in 7.1.0.. It sounds reasonable, though, I'm not sure about the hover state. Maybe change the color to black and keep it strikethrough?. Can we make it more explicit?\njs\nexport default function StyleGuideRenderer (props) {\n  return <OrigStyleGuideRenderer { ...props}  containerProps={id: 'bananas', className: 'sans-serif' }} />\n}. There are quite a lot of advantages:\n\nYou may have more than one HTML element that you want to modify.\nYou won't accidentally leak undesired props to DOM (resting all props is dangerous).\nThe API is much more clear.\n\n. This is expected behavior, see more details here:\nhttps://react-styleguidist.js.org/docs/development.html#styles-1. Thanks, merged!. And thanks again! \ud83e\udd84 . That's awesome! Thanks!. Yeah, we do that to support tools like Create React App, that include webpack, so you won't have it as a dependency of your project.. Feel free to send a pull request with a fix! ;-). This sounds like a good idea!. Out in 7.1.0.. Thanks, merged! \ud83e\udd84 . Cool, thanks! Could you please have a look if we can add some tests here? \n\n83.33% of diff hit (target 97.56%). That's a great idea! It would be super awesome if can work on that! \ud83e\udd84 . They are passed in props:\n\nhttps://github.com/styleguidist/react-styleguidist/blob/3bbe4f99976c0d8f91dd24c820eb7b41c9f6ec84/src/utils/renderStyleguide.js#L44-L54\nIf display mode is component\u00a0or example\u00a0there will be only one component in sections.\nWe can postpone the button and show help modal on ?. I\u2019m not sure that placing it near search input is the best option.\nDo you think that next/previous component are that useful? Personally I don\u2019t have any use cases for that. I usually use search, switch to the isolated mode and work on a component. When I need to work on a different component I go back to the main page, and choose another one from there.\nWould be cool to support navigation with arrow keys inside the component list in the sidebar.\n. > About using arrows to navigate the list, that seems very similar to moving focus with TAB/ Shift + TAB\nIt may be more accessible to be able to quickly tab to the next control, instead of tabbing through all links. But that will be out of the scope I think ;-)\nI haven't looked deeply but react-keyboardist may be a good start here.. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. It could be because of createElement, so react-docgen doesn't understand that it's a component. Try React.createElement \u2014\u00a0I see it in their codebase.. It could be a doctrine issue, or the way we use it. Feel free to send a pull request with a fix.. Please use search, it was already discussed several times.. Thanks!. Thanks! Please update Jest snapshots, and I could merge it ;-). @stepancar I agree with you in general, but I think this particular feature is a nice addition to GitHub ribbons.. :shipit: . You need this commit to fix the Cypress issue: ff4014841c85ed6181327ff02015e9d915e5cfe7. Something like this may work I guess:\n\ndiff\n- '@global': {\n-       '.CodeMirror.CodeMirror': {\n+ '& > .CodeMirror.CodeMirror': {\nFeel free to send a pull request ;-)\n. Awesome, thank you! \ud83e\udd84 . Could you elaborate a bit on your use case? I'm not against adding this option, but it sounds a bit weird anyway ;-). Use react-styleguidist/lib/rsg-components/Wrapper/index or react-styleguidist/lib/rsg-components/Wrapper/Wrapper.. We don't do anything special for @typedef. And I don't know what happens now if you use it ;-) How do you see its support?. I think we can show a name of a custom type, if doctrine returns this information. Would be awesome if you can have a look!\nHave a look at #1046 \u2014\u00a0you'll need to change the same place (so you may have conflicts and it may be a good example ;-). You may be overwriting plugins from the .babelrc here:\njs\noptions: {\n            plugins: ['react-native-web'],\n            babelrc: true,\n            cacheDirectory: true,\n          },\nI don't know how this works exactly, you need to check Babel docs.. I don't think we need a proper router, because 90% of Styleguidist is just one root component rendered with different props (basically list of components or sections to show). I may be wrong here, but I don't see how something like Reach Router will solve any of our problems.\nWe have some ugly code that parses the hash from the URL.\nI'm fine with any solution that will make code easier to understand and maintain, and won't add a lot to our bundle. If you want to investigate that, it would SUPER AWESOME! \ud83e\udd84 . Works on my machine. Clearly you can't expect more from such a bug report.. The thing is it works for all other users, so likely something is different in your project. But without a demo I can't say anything. I use Styleguidist with Emotion without any issues.. Not sure I understand what you want. Could you show an example of your config, what it renders and what you want it to render?. I guess it's something new, otherwise it would break before. Would you mind sending a pull request with a fix?. Yeah, I think your other solution is better. Let's wait a bit if they merge it soon. \nAm I right that this isn't blocking issue and just a warning? . Merging, thanks!. Why do you think so? Did you find \u201click me\u201d offensive? I'm find to change it if there's any reason to do so ;-). @tizmagik I've changes all other \u201clicks\u201d too \ud83d\ude0b. @jeffscottward Thanks! I've updated the ticket. Only the second point is left, but it needs some investigation \u2014 would be cool if you can have a look into that ;-). (Everything is in the next\u00a0branch.). Yes and no.\nYes: you can either access globally registered components or require them in any Markdown file.\nNo: you won't see props table.. Feel free to send a pull request to make Styleguidist more flexible. . Feel free to open a pull request with react-docgen update as soon as it's available.. Thanks!. Thanks for the PR, but we're not going back to the html plugin. Custom templates are already supported:\nhttps://github.com/styleguidist/mini-html-webpack-plugin#custom-templates. I think we should change imports here to rsg-components/slots/... a:\nhttps://github.com/styleguidist/react-styleguidist/blob/904fcafdc03da514a8b1b868f3796c0bdfb5406d/src/rsg-components/slots/index.js#L3-L5\nFeel free to send a pull request ;-). It should work with any component that's imported using the webpack alias rsg-components, though we don't recommend overriding non-render components.. Please edit your comment \u2014 it's very hard to read now, because you've left part of the template.. Merged manually to the next branch.. Anyway it won't affect simple examples where you only use one component. But you'll have an ability to use explicit imports to make your code more realistic. See also #1076.. That's possible now with require and context config options!. I don't know what you mean by pseudo-loader, it uses webpack loaders of your project. Nothing has changed here.. The use case with several components in one file is very minor, we won't \"support\" it out of the box. The implementation in the next\u00a0branch works without explicit imports for majority of the example, where you only use the current component. You should explicitly import other component. Less magic, more clear docs.\nYou are free to make all component available in the global namespace yourself though.. The relative path: we'll need to replace import Button from 'mylib/Button' with something like const Button = require('../../Button') where ../.. is a relative path from our example Markdown file to the module we're importing.\n\nI\u2019m wondering if we could detect the import and use it instead the provided by the context?\n\nCan you elaborate on that? :-)\n. Yeah, I think that's what we're going to use in the end ;-)\nIf by context you mean the context\u00a0config option (and add React to to it by default), then that's how it's supposed to work, yeah.. I think we break it in #933.. https://github.com/reactjs/react-docgen/issues/33. This issue was discussed many times before \u2013\u00a0please use search. It's an issue in react-docgen \u2013 feel free to fix it there.. Sorry for closing the issue \u2014 it really was discussed before but nobody was interested in actually solving the problem ;-/\nFeel free to investigate how Docz does it and open a pull request \u2014\u00a0I've looked quickly and I don't see where they are doing it.\nHave you tried https://github.com/siddharthkp/react-docgen-external-proptypes-handler ?. There's no keys module\u00a0in the example.\n\nPost a link to a reproducible demo repository here.\n\nFork the example project repository: https://github.com/styleguidist/example\n     (please don\u2019t use the main, styleguidist/react-styleguidist, repository).\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nMake sure you\u2019re using the latest version of React Styleguidist.\n\ud83d\udc80 Issues without a demo will be closed! \ud83d\udc80. Thanks!. > Post a link to a reproducible demo repository here.\n\nFork the example project repository: https://github.com/styleguidist/example\n     (please don\u2019t use the main, styleguidist/react-styleguidist, repository).\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nMake sure you\u2019re using the latest version of React Styleguidist.\n\ud83d\udc80 Issues without a demo will be closed! \ud83d\udc80. Have you tried 7.2.1?. I can't reproduce it in 7.2.1.. Your branch is using 7.0.10.. Could you please try in the next branch? I've basically replaced the whole thing there ;-). Could you please commit them somewhere? Shouldn't be hard to fix.. Am I missing something? It's in the next branch.\n\n\n. Looks like you forget to run Babel (npm run compile) after switching to the next branch. Look at the extra whitespace below the \"View code\" button on my gif.. Yeah, try to run in the root repo folder:\nnpm run compile\nnpm start\nAnything you do in the examples/basic folder will use Styleguidist version defined in examples/basic/package.json.. It's quite far from ready but you can try to use it of course. Or to fix an issue in master if that's urgent for you.. Please report the issue at markdown-to-jsx.. We're reprinting Markdown from the AST using Remark:\nhttps://github.com/styleguidist/react-styleguidist/blob/d66be96ccc4b23150b4d3ca659b01cbe35d0fe9d/loaders/utils/chunkify.js\nhttps://github.com/styleguidist/react-styleguidist/blob/71d1425a1431d9fd7ba550ef8dc5770a43ef94ff/loaders/utils/highlightCodeInMarkdown.js\nThe fist issue (with ----) only happens when you put the ---- after a list. I've investigated it a bit and it seems like a bug in markdown-to-jsx \u2014 https://github.com/probablyup/markdown-to-jsx/issues/206 \u2014 * * * is a valid horizontal line in Markdown.\nThe second issue looks like a bug in Remark \u2014 https://github.com/remarkjs/remark/issues/198\n. Thanks!. > Post a link to a reproducible demo repository here.\n\n\nFork the example project repository: https://github.com/styleguidist/example\n     (please don\u2019t use the main, styleguidist/react-styleguidist, repository).\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nMake sure you\u2019re using the latest version of React Styleguidist.\n\ud83d\udc80 Issues without a demo will be closed! \ud83d\udc80. > Post a link to a reproducible demo repository here.\n\nFork the example project repository: https://github.com/styleguidist/example\n     (please don\u2019t use the main, styleguidist/react-styleguidist, repository).\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nMake sure you\u2019re using the latest version of React Styleguidist.\n\ud83d\udc80 Issues without a demo will be closed! \ud83d\udc80. Thanks for reporting that! I've updated the lock file, but looks like we don't need to make a new release \u2014 the latest version will be installed automatically.. Thanks!. Looks like an issue with markdown-to-jsx, please report there. We're not using Remark for rendering.. Should be enough to remove the lock file and reinstall dependencies in your project.. It's just a Table\u00a0component, there are no extra styles on the props table.. @rafaesc YES! That would be awesome! \u2764\ufe0f. Thank for investigation!. Cool, thanks! Feel free to send a pull request to fix that. Anyway it won't be a problem in the next major release \u2014 there will be no import() \u2014 #1054.. We use it, but it doesn't work well for some reason. Anyway fragility isn't the only reason \u2014 more consistent DX and ability to use Flow for scripts and loaders are good reasons too.. @vivek12345 Sure, would be awesome! Ping me if you have any questions!. Looks like you're not running Babel, have a look here:\n\nhttps://github.com/styleguidist/react-styleguidist/blob/master/.github/Contributing.md#development-workflow. > So when I compile src directory with client, scripts and loaders, should I put them all inside lib or just the client.\nNot sure I understand the question, the folder structure should be:\n\nsrc/client \nsrc/loaders\nsrc/scripts\n\nlib will have the same structure.\n\nSecondly examples use a path of react-styleguidist/lib/rsg-components if we change from putting rsg-components from being inside lib to being inside client/lib will that be the right way or should we put all client code directly inside lib rather than putting inside lib/client so that our examples continue to work the way they are.\n\nYup, it should be src/client/rsg-components, and we'll need to update a path here:\nhttps://github.com/styleguidist/react-styleguidist/blob/cf7f1efa88d6c83abcb87b5391340d115a4fbf45/scripts/make-webpack-config.js#L18. Nice, thanks!. It's your project's webpack config, Styleguidist has very little restrictions here, described in the docs. Babel isn't one of them.. Thanks, merging! \ud83e\udd17. It's likely very hard to implement because react-docgen is using static analysis. But feel free to send a pull request.. I guess we need to remove the extra title from one of the custom components in this example.. Could you check which version of react-docgen-annotation-resolver you have (npm ls react-docgen-annotation-resolver)? They've added HoCs support that recently.. The list error is because we don't have the lib folder on CI unless we run Babel, which we don't do. I'd disable this rule for these two lines.. I'll have a look, it shouldn't be because of your changes, unless we're missing something.. Looks like Babel was ignoring nested configs for some reason. I think I've fixed it.. I think the only thing that's left is moving bin\u00a0folder to src.. I've disabled it \u2014\u00a0it doesn't really work yet ;-?. Yeah, I'm not very good with counting ;-). Restart usually helps.. Thank, merging! It's finally passed!. I have no idea what's Expo SDK, and how its support should look like. And what do you mean by \"no support\".. I'm going to close this for now, feel free to open a more actionable issue, or better send a pull request.. Thanks!. Each example is a separate React app because we only have a string with the source code, that we need to eval.\nWhat you want to do could be a good idea for a plugin \u2014 #505 \u2014 any help with the plugin API is very appreciated ;-) . It's enabled by default. What issues do you have?. That's how it's supposed to work in Styleguidist. Full HMR would add unnecessary complexity and would be a nightmare to maintain.. What have you tried? What exactly isn't working? . I have no idea what you're trying to achieve but you definitely shouldn't use our example as a dependency. What preventing you from using Styleguidist in a normal way? . You can replace any Styleguidist UI component:\nhttps://react-styleguidist.js.org/docs/cookbook.html#how-to-change-the-layout-of-a-style-guide. Thanks!. Keep in mind that the current component is still available, and in my experience it's the majority of the use cases. \nYou can use context option to list components you want to access in your examples \u2014\u00a0that should be more reliable than autoloading everything on Styleguidist side, which will have similar issues with duplicated component names, that we have now.\n. The path is relative to the HTML file. What exactly is the issue here?\nStyleguidist works fine in a subfolder: https://react-styleguidist.js.org/examples/basic/. You need to fix your server setup, and this is not the best place for such questions.. By overriding the Logo component:\nhttps://react-styleguidist.js.org/docs/cookbook.html#how-to-change-the-layout-of-a-style-guide. You're right, and NODE_ENV isn't a port anyway ;-/. I've answered at CRA issue.. @marcofugaro Not exactly but it should fix problems with dynamic imports: we're using a smaller editors and don't do code splitting there. It's pretty close to finish I guess, only #1076 is left. To fully support CRA2 we'll need to drop Webpack 3 which is the next next major release. Feel free to help with any of them! ;-)\nhttps://github.com/styleguidist/react-styleguidist/milestones. I'm rereading this and shouldn't we just ignore this plugin as we ignore html-webpack-plugin?. Looks like the issue was fixed on the CRA side, so closing it.. Since last year at least.. Thanks for the effort! I don't think it solves any problem though, but introduces an abstraction that developers has to know when they read or write tests. We'll have to check for that in code reviews as well. And all that just not to write ../../.. in a few places.. Thanks!. Thanks! This is very good kind of PR! Could you please have a look at the next\u00a0branch, I've changed a few colors there, and sidebar links and props table should already WCAG 2.0 compliant.\nAnd we probably need to add another shade of gray text \u2014\u00a0using error color is incorrect here, and it's way to bright for such thing as version number.. Thanks for the PR! Could you please explain your solution?. > nocase Perform a case-insensitive match. Note: on case-insensitive filesystems, non-magic patterns will match by default, since stat and readdir will not raise errors.\nIf I understand this correctly, it's case-insensitive on Windows in any case, so your fix is likely relying on some filtering they do when this flag is enabled. Probably we should report it to glob as well.. Installing your own webpack is the best solution here, yeah.. And please update snapshots too ;-). Thanks for fixing these small details! \u2764\ufe0f . To clarify: you only see sections with content, but none of the component pattern works? Do you see contents of your Markdown files (Themes.md, etc.)?\nAre you on Windows? It's must be cased by #1128. \n/cc @elevatebart. Looks like you need to revert test case changes, otherwise looks good! I'd also add a HACK: in front of the comment ;-). Ah, I see! That's OK ;-). Feel free to send a pull request to fix that!. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. Merging, thanks!. I think we need to add a new flag here:\n\nhttps://github.com/styleguidist/react-styleguidist/blob/54ab94aa9a602f62b39c3089f78e73b858c1c8e4/src/rsg-components/ComponentsList/ComponentsList.js#L7-L18\nto know that's it's an external link:\nexternal: !!item.href,\nhref: item.href\n            ? item.href\n            : getUrl({\nAnd update the condition here:\nhttps://github.com/styleguidist/react-styleguidist/blob/54ab94aa9a602f62b39c3089f78e73b858c1c8e4/src/rsg-components/ComponentsList/ComponentsListRenderer.js#L47\nto something like this:\njs\ncx(classes.item, {\n  [classes.isChild]: (!content || !content.props.items.length) && !external\n})\nAnd I'd change the external section option\u00a0to openInNewTab because it's very confusing now.\nFeel free to send a pull request for that.\nPlease make your branch from the next branch.. @arshadkazmi42 It's impossible to see what changes you did on these screenshots and why other five tests are failing. The first failure: if this changes is desired, you need to updated the snapshot \u2014\u00a0https://github.com/styleguidist/react-styleguidist/blob/master/.github/Contributing.md#development-workflow. I guess it's TypeScript specific, that it shows this error, but anyway your solutions sounds good. I think we can set a flag here to know that it's a recompilation:\nhttps://github.com/styleguidist/react-styleguidist/blob/dbb690241a6a5d273573287861bf1885e775194b/bin/styleguidist.js#L149\nBut I'd also check what we have in stats here, maybe webpack sends this information already:\nhttps://github.com/styleguidist/react-styleguidist/blob/dbb690241a6a5d273573287861bf1885e775194b/bin/styleguidist.js#L155. And yeah, feel free to send a pull request, it would be awesome!. How do you run Styleguidst? I think you need to cd to that folder first:\ncd styleguide && npx styleguidist server. Styleguidist doesn't have any relation to babel, it's your project's Babel that you have in your project's webpack config, so you should debug that.\nI don't know what problem you're trying to solve with a separate package.json though \u2014 personally I'd start here, you likely don't need it ;-). Yeah, I like it too! I think codeSamples and propsMethods are already working this way, so we should make separatePage work the same way.. I like the idea of starting from an ideal API, if we're going to make a breaking change anyway.. I'm not really sure what's the difference between page and section ;-/ . @okonet So your idea is that the page is a separate route with a separate URL and pages can have sections inside and sections are headings with anchors inside a page? And we're replacing sections\u00a0config option with pages? If my understanding is correct, then I like the idea ;-)\nWe'll need to fit external links somehow into this model.. @yakunins What issues do you see with the current implementation of the href\u00a0option?. The error message may be the key what to do:\n\nYou may need an appropriate loader to handle this file type.. In any case the issue is not with Stylegudist but with your configuration.. I don't really see how we can detect which type are you using to describe component props. So maybe something like this could work:\n\njs\n/**\n * @component\n * @type Props\n */\nBut I don't know how to implement that, so will appreciate any help.. I believe this was either merged manually of fixed by another pull request. Thanks for the contribution!. My guess that it is undefined when you render the tooltip. In the cookbook example we access the ref inside the click handler, not in the render.\nI'd try to create a class component inside an example \u2014 it may help.. No idea, and unless you make a repro, I wouldn't be able to say anything useful.. I've also replaced \u201cguys\u201d with \u201cfolks\u201d in your comment \u2014 please use more inclusive language, some folks my consider \u201cguys\u201d offensive.. This should be fixed in the next next major release.. Please report issues with npm to npm.. Thanks!. Feel free to send a pull request to fix that ;-). I believe it's TypeScript only \u2014 likely react-docgen returns different data.. I guess it's just not smart enough, and is triggered by using the props name. Maybe we can use _.isEmpty\u00a0here instead of Array.isArray and the length check.. This will be fixed in the next major release.. > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. Awesome, thanks!\n. Feel free to send a pull request with updates!. @eragon512 yup, feel free to it!\n\nIt\u2019s in examples/react-native I believe. . I've changed the branch. I guess you can do it yourself too \u2014\u00a0Edit button in the top right corner of this page.. Ah, yeah, then the easiest would be:\n\nmake a new branch from next\ncherry-pick this commit into the new branch\nmake a new PR. Feel free to send a pull request with a fix.. Thanks, merged!. I guess you can extend the @example\u00a0tag to support code:\n\nhttps://react-styleguidist.js.org/docs/documenting#external-examples-using-doclet-tags. That's what I'm saying: if you need that, you can make @example tag to support code, not just a path.. Cool, thanks!. If you know a way to do that without changing each example is a separate React app, feel free to send a pull request ;-) . > When something isn\u2019t working for you, include a reproducible demo:\n\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!. Yeah, we're missing a check for Component/index.js\u00a0here:\n\nhttps://github.com/styleguidist/react-styleguidist/blob/8b7cb42598ddd71466228492885481be50ee4a6d/scripts/schemas/config.js#L83-L86\nFeel free to send a pull request to fix that!. I guess we need to add a new page to the docs that would explain how to show non-component docs. It would be super awesome if you or someone else start that and send a pull request, that we can improve later.\nHere you can find an example of showing design tokens: colors, whitespace and typography: \nhttps://github.com/component-driven/component-driven-development. @eragon512 yup, feel free to do it! Ping me if you have any questions ;-). For now you can't, at least you can't have props table for each component, though you can use multiple components in examples.. Thanks!. Thanks!. I'm trying your branch and changing JS or Markdown works fine with react-styleguidist@7.3.11.. Not sure we can do anything on our side ;-/. You've ignored important parts of the issue template.. Thanks!. 1. Tests are passing in master \u2014 you can see it in the Readme \u2014\u00a0\nBut I'm sure we have some issues on Windows ;-( If you're feeling adventurous and want to help ;-) it would be super cool.\n\n\nIt could be because your Git is converting line endings on checkout \u2014 https://adaptivepatchwork.com/2012/03/01/mind-the-end-of-your-line/\n\n. > Again I just do not know how to fix this on my VSCode Windows setup.\nThe issue with tests is in the repo, not in your setup. But I don't know what could be the right solution here, so any help is appreciated.. I'll update the snapshot, thanks for the work! ;-)\nI think removing paths from snapshots is the right way. We can use something like slash to compare paths outside snapshots.. Feel free to send a pull request for that! ;-). I think your feedback will be useful in this issue \u2014\u00a0#1145. Page per section feature is far from perfect now.. Could you make a demo project?\nThere's not much details about the cache\u00a0option in the docs: https://webpack.js.org/configuration/other-options/#cache \u2014 I suspect it may share some cache between Styleguidist and CRA, but it's only a guess.. Feel free to send a pull request with a fix \ud83d\udc7e . > Don\u2019t trim any white spaces.\nThe templates are usually to small to care about whitespace I think. Feel free to send a pull request!. Cool, thanks!. What kind of data you\u2019re passing? There was a proposal to support frontmatters for Markdown files. Will that work for you?. Because your code requires it, not Styleguidist or React.. Yup, if you use JSX or any other features not supported by browsers in your code, you need to setup Babel, TypeScript or whatever you like in your webpack config. But none of this is required to use Styleguidist or React. Styleguidist doesn't do any changes to your code. If you use webpack-blocks, it's, again, in your webpack config.\nI agree that this isn't super clear and I agree that Babel is common for React projects. So I'll be happy if you make the docs better. . Please have a look at #1193 \u2014 is this more clear now?. None of this is mandatory ;-) but env + react presets is a very common setup.\nThe problem with webpack-blocks is that the stable release doesn't work with Babel 7.. Yeah, good point!. Feel free to send a pull request with a fix!. Thanks!. Do we still need this line by the way? Styleguidist should look for CRA webpack config by default.. Thanks!. Thanks!. Feel free to send a pull request with a fix \ud83d\udc7e . Cool, thanks!. You can require them from another module:\njs\nconst {env} = require('./externalVars');\n<MyComponent\n   name={\"ABCD\"}\n   env={env}\n/>. Feel free to send a pull request with a fix \ud83d\udc7e . Please don't look at the compiled code ;-)\nI think you need to use custom styles instead of the Code component here:\nhttps://github.com/styleguidist/react-styleguidist/blob/78db4281a915474aa8b4edc0c8883d3e2f93335e/src/rsg-components/Type/TypeRenderer.js#L16\nAnd here:\nhttps://github.com/styleguidist/react-styleguidist/blob/78db4281a915474aa8b4edc0c8883d3e2f93335e/src/rsg-components/Name/NameRenderer.js#L24\n. Duplicate of #1188. Feel free to send a pull request with a fix \ud83d\udc7e . > You may easily break Styleguidist using this options, try to use webpackConfig option instead.\nI'm not sure there's an issue with Styleguidist, unless you see an easy fix.. Yeah, make sense. Mind sending a pull request with a fix?. Thanks for pointing this!\nIt's used in the next (9.x) version actually:\nhttps://github.com/styleguidist/react-styleguidist/blob/next/src/client/utils/transpileImports.js\nhttps://github.com/styleguidist/react-styleguidist/blob/next/src/loaders/utils/getImports.js\nDo you know of a better alternative?. Nah, it's much much bigger. So we either need to find something similar to walkes or write our own simple function.. Thanks!. This change removes the warning but there's still no syntax highlight ;-/. This is insanity ;-\u00a3 It works after I navigate to another page and back. And the issue is only with diff\u00a0language.\n\n. The docs explain how to include a development build of React in your style guide production build. \nWhat problem you're trying to solve?. How did you check that this is a production build of React? \nWhat problem you're trying to solve? . This is development build of React, not Styleguidist, please read the docs carefully.\nhttps://meta.stackexchange.com/questions/66377/what-is-the-xy-problem. I guess it's possible if you implement it for your style guide using custom components. I don't think this should be supported out of the box, because these aren't headings but just text paragraphs and they can be quite long.. Feel free to add it to the list of ignored webpack plugins:\nhttps://github.com/styleguidist/react-styleguidist/blob/34f3c83e769542157c72d0e055ad8850d22b6001/src/scripts/utils/mergeWebpackConfig.js#L13-L22. I guess it depends on your use case. \n\nYou can't have a nice props table unless you render it yourself for each component.\nYou may have to generate table of contents yourself.\nYou'll need to find a way to render examples, right now they are React components.\n\nI'm not sure it all make sense though ;-). Awesome, thanks!. Feel free to send a pull request with an update to Kleur 3 ;-). Awesome, thanks!. Done in #1248.. Feel free to send a pull request with an alternative solution.. Probably we should render @example\u00a0as a static code by default, but then how to enable the editor?\nI don't understand the second and third points though ;-/. Have you seen retoggle? Maybe a better idea to make an adapter for Styleguidist.\n\nwould need to be able to access the prop types data generated by docgen - don't think those are available anywhere in playground scope?\n\nLikely not, but shouldn't be hard to pass them, so feel free to send a pull request ;-). I think adding something like useAllKnobs to Retoggle will be a simpler solution than recreating 85% the same things yourself ;-)\nIf you keep the knob thingy separate from Styleguidist, which I thing is the right approach, then the required versions of both will be separate.\nThat's a great start anyway, thank you for doing that!. This should be possible with the updateExample function:\nhttps://react-styleguidist.js.org/docs/configuration#updateexample. You need to update rsg-components/ to rsg-components/client/. \nIf you see the old path anywhere please send a pull request with an update ;-). Examples likely use the old version, feel free to send a pull request with a fix.. There may be a problem with running examples from the example folder because of some conflict with either package.json or Babel config or something else in the root folder. I'm using beta3 in a project without any issues and it does work when you run npm start\u00a0in the root folder.\nFeel free to fix the example though, or remove the incorrect instructions from its readme.\nNone of these issue are with Styleguidist itself.. Thanks!\nWe use Acorn 6 directly, and it's also a dependency of Buble that should be fixed to the version that users version 6 as well. Other than that Acorn is used by ESLint and probably something else. . There's no \"landing page\" in Styleguidist, add a section without components and render it by default. Like this:\nhttps://component-driven.github.io/component-driven-development/styleguide/. That would be awesome! Let me know if you need any help :-). Thanks!. Please have a look at the CI results.. Looks like there's no JS at the end. Actually, since it's not a real path.resolve we can just use .toBe() or .toMatchInlineSnapshot \u2014 no need for regexps in these tests.\nExpected value to match:\n      /^react-scripts\\/config\\/webpack\\.config\\.js/\n    Received:\n      \"react-scripts/config/webpack.config\". skipComponentsWithoutExample option could be another alternative:\nhttps://react-styleguidist.js.org/docs/configuration#skipcomponentswithoutexample. Thanks!. Thanks!. Feel free to send a pull request with a fix \ud83d\udc7e . Thanks for the investigation! I have some concerns on passing the app\u2019s path or /. Will this work fine when the style guide is deployed to a folder? For example http://example.com/styleguide/.. Requiring users to add a new config value for something that's already working without isn't an option.\nCan we pass something like an empty string?. Again: you\u2019re suggesting to introduce an option for a feature that already works out of the box. . That's awesome, thank you!\nI'm still not sure that Flow is the right choice and maybe it's not too late to switch to TypeScript (though I hate that I'll have to rename files to enable it) \u2014 there are just a dozen files with types. If it's not complaining that some types are missing, then probably you don't need to worry about that ;-). The problems isn't related to TypeScript \u2014 #1243.. You need to use jsx\u00a0language, not javascript if you want it to highlight JSX.. > You may need an appropriate loader to handle this file type.. If you're talking about non-interactive code example, they are highlighted on the backend, so there's no source code available on the frontend. \nI'd probably try to remove HTML before copying.. It\u2019s possible today, feel free to send a pull request with a feature you need. . Thanks!. #1105 only babelifies the Styleguidist code, not dependencies.\nStyleguidist doesn't support IE11 officially, but feel free to send a pull request with a fix.. Awesome, thanks! \ud83d\udc7e . The link should be https://github.com/styleguidist/react-styleguidist/tree/master/src/client/rsg-components\nMind sending a pull request with a fix?. We can't guarantee that locations or APIs of internal component will never change, and we can't treat them as breaking change ether. Feel free to send a pull request to the docs to clarify that.. This is expected, we wrap examples in a Fragment only for convenience and when we know it won't break your code.. Cool, thanks!. Feel free to send a pull request for that!. Unfortunately I have no idea how to approach this ;-\u00a3 I'd look into react-docgen 4.0.0 because they've added some support for user's Babel config files. It could be useful here.. Thanks!. This works when you follow the instruction from the beginning: styleguidist\u00a0is a binary name, but react-styleguidist\u00a0package must be installed in your project.. Thanks!. The code on the screenshots is different and the error message may explain what's wrong.. Maybe try to upgrade Buble and Acorn, if the problem is related to one of them. Though there's a problem with Buble \u2014\u00a0https://github.com/bublejs/buble/issues/171, the fix wasn't yet released.. There's a migration guide:\nhttps://github.com/styleguidist/react-styleguidist/releases/tag/v9.0.0\n\nCan we have an idea of what is gonna change in the future regarding the UI organizations ?\n\nI don't know this myself ;-) I have no personal plans yet, so it all depends on contributions.\n\nCould you please share some advice and stories about the changes introduces and how we could do this migration with sens.\n\nChecking the commit log would be the best way to learn about all changes.\n. It should be lib/client/rsg-components. We've just moved everything into one folder to run Babel on all files, not just client side.\nhttps://github.com/styleguidist/react-styleguidist/tree/master/src/client/rsg-components. Thanks!. Duplicate of #1279.. Thanks!. Feel free to send a pull request with a fix! ;-). Feel free to send a pull request with a fix! ;-). The moduleAliases\u00a0was introduced in 9.x, so we need to update the TOC in the docs ;-/\nDoes it work fine with exception.toString()? I'm fine with any solution if it improves the experience.. Sounds good! Mind sending a PR with this change?. Ah, that's because of semantic-release. It doesn't change the version number in package.json (it should be 0.0.0-development) and I've published 9.0.0 manually. So you don't need to care about versions.. Please revert version number changes and I'll merge it \u2014 looks good otherwise.. Could you please test that this code still shows a correct link with an anchor?\nhttps://github.com/styleguidist/react-styleguidist/blob/2bea3d6bd14a06d85ee590d9e08206e2e2f973cf/src/bin/styleguidist.js#L51-L57. I think I was able fo fix both issues \ud83e\udd14 . Use styleguideComponents\u00a0option instead of custom webpack config:\nhttps://react-styleguidist.js.org/docs/configuration.html#styleguidecomponents. Thanks!. Feel free to send a pull request with a fix \ud83d\udc7e . Thanks!. Yeah, it used to work when the scripts\u00a0folder wasn't babelified. Feel free to update the docs to run commands separately.. Thanks!. Thanks!. Things like .DS_Store (anything created by your OS, IDE, etc.) should be in your global .gitignore.\n. Please don\u2019t change version number and changelog (at least the version).\n. I don\u2019t like this part. Some thoughts: \n- Move default theme to the default Styleguide config.\n- Do not mutate Editor.codemirrorOptions, extend it with theme name on render().\n- Require CSS only if it was specified in this.props: if (this.props.syntaxTheme) { cssRequire(\u2026); }.\n- Don\u2019t a need for _.isUndefined here.\n. For me \u201csyntax\u201d is more about the language rules than about the colors so maybe something like highlightTheme would be better. \n. Probably it\u2019s better to export all needed options as a single object because we most probably will need to export more than two options.\n. config: JSON.stringify( some config fields ).\nBut it\u2019s not urgent.\n. Something like let options = _.merge({}, Editor.codemirrorOptions, {theme: highlightTheme}) would be better because it won\u2019t mutate default settings object.\n. I think Array.isArray is better than checking a constructor.\n. Why package.json\u00a0in the first and just package name in the second?\n. Can we wrap it in a function and always do path.dirname(require.resolve('packagename/package.json'));?\n. It should be modules.\n. Do we need to ignore node_modules here? We transpile only the code inside the textarea.\n. Is it required by Babel 6 or is it a good practice or something very useful? ;-)\n. Spaces? ;-) Do yo use EditorConfig?\n. I think pull request is not a good place to change project\u2019s code style. If you think that const\u00a0is better than var\u00a0we can discuss it and maybe change for the whole project.\n. This file should be ES5 because Webpack loaders require it. And as far as I know Node 0.12 don\u2019t support let/const.\n. Ooops.\n. renderToC \u2014 renderTableOfContents?\n. Cool ;-)\n. We can change it later. I don\u2019t have a strong opinion about let vs const but const\u00a0seems very popular style now.\n. Not sure about this badges:\n1. I regularly update dependencies. Do people really care about that or looks at this badge?\n2. 1K is quite small number. Nothing to be proud of yet ;-)\n. > You can use it as both in a hot reloaded (style guide) dev server during development and a static site generator (which makes a great deliverable). \nMaybe: You can use it as a static site generator to publish your style guide or as a workbench for developing new components using hot reloaded dev server.\n. title is also optional :-)\n. > But you don't need all of them to start. Just read on.\nCan be safely removed ;-)\n. It\u2019s better to have module.exports = {\u00a0and all that so people have no doubts where to put this code.\n. I don\u2019t think so, there are just words that have no value but that the user has to read ;-)\n. I don\u2019t like this section. I think many people already have it but it\u2019s really hard to understand that if you have it it should just works. And we don\u2019t have to use the HRM abbreviation, \u201chot module replacement\u201d is enough ;-)\nI\u2019d merge  it as is and try to improve later.\n. We\u2019re not teaching npm here, on way to run binary is enough ;-)\n. I don\u2019t understand what \u201cdeliverable\u201d\u00a0means anyway ;-) \n. That\u2019s my opinion: if a phrase or sentence doesn\u2019t add anything to the text it can be removed.\nThe list already creates a context: a ordered set of operations. Then we provide links or notes with additional information like a link to all available options.\nI think it\u2019d better to move this paragraph to the end of list because at this time user has no idea which options he\u2019d need and we describe the most important later anyway.\n. I\u2019ll think about that ;-)\n. Do we need to export it?\n. unknown? ;-)\n. JSON.stringify?\n. SectionRenderer?\n. Please use this form of imports for Lodash: import isEmpty from 'lodash/isEmpty';.\n. I think Section/Renderer should be used only inside Section/Section, like in Components/Components for example.\n. I think it\u2019s make code more consistent: you call a component by it\u2019s name and it creates a Renderer inside which user may override in their style guide config.\n. Yeah, you\u2019re right.\n. Do we really need position:relative here?\n. So it will run twice?\nMaybe:\njavascript\nif (sections) {\n    sections = processSections(sections);\n    components = components ? processComponents(components) : [];\n}\nelse {\n    components = processComponents(components);\n    sections = sections ? processSections(sections) : [];\n}\n. That\u2019s because of <a className={s.anchor} href={'#' + name}></a> but it doesn\u2019t work now because of overflow:auto in Layout component. But I think we can remove them because now we have a table of contents with links.\n. That\u2019s the best version I think.\n. Will it work with ES6 classes and functional components?\n. It\u2019s out of the scope of the PR and wouldn\u2019t recommend using exclude, that\u2019s why it\u2019s not included in the warning.\n. Because exclude also works in most cases. But I believe explicit is always better than implicit. So it\u2019s fine to use it but I don\u2019t want to \u201cadvertise\u201d the way I think is not the best.\n. I like the simplicity ;-)\n. Could you add a comment with an example of loader usage with this option?\n. You can import multiple classes:\ncomposes: border link from \"../../styles/colors.css\";\n. Yeah, I also thought that we\u2019ve found a better solution.\n. const { showCode } = context.config would be much more readable.\n. This line breaks component replacement with aliases like:\njs\nwebpackConfig.resolve.alias['rsg-components/Wrapper'] = path.resolve(__dirname, 'lib/styleguide/Wrapper');\n. I had to revert this line to make my style guide work.\n. What Node version are you using? Shorthand properties should be supported in Node 4.x: http://node.green/ and I\u2019m going to rise the minimum Node version to 4 anyway soon.\n. But why?\n. Found already: https://www.englishforums.com/English/AUtilityVsAnUtility/hrmlw/post.htm\n. Good catch ;-) But I\u2019d even replace it with this module, it also unescape quotes inside the sting: https://github.com/dominictarr/quote-unquote/blob/master/index.js#L14-L20\n. Maybe it\u2019d be more useful to show different kinds of whitespace: space, new lines, etc.\n. What\u2019s this for?\n. I think you\u2019re right, so leave it as is ;-)\n. It assumes (for some unknown) reason that the string is quoted 8-)\nI was thinking that unescaping will make string easier to read but probably we don\u2019t have quotes inside strings to often to do anything.\n. Not sure I even understand this part: \u201cbe sure to add to the Array rather than replace entirely\u201d. You mean to copy default list and add your own stuff?\n. This space wasn\u2019t here. And this children=\u00a0is something you probably forget to remove.\n. And this children too.\n. Now we can remove CSS of old lists: .list\u00a0and .listItem.\n. This looks like some merge issue. Would you mind creating a new pull request? Or you could try to recreate your branch and push --force this branch if that would work.\n. I see, it was a warning, that\u2019s why it didn\u2019t break the CI.\n. I\u2019d suggest to give an example of overriding handlers array that will include react-docgen-displayname-handler so people could just copy it and change whatever they want. Instead of this note paragraph.\n. Sorry, last few things: space is default separator, no need to specify it here.\n. Here and in the next one you need an inline\u00a0option, otherwise it would be rendered on a separate line.\n. And this extra line wasn\u2019t here.\n. Please use cherry-picking for Lodash for consistency: import isFinite from 'lodash/isFinite'.\n. Looks like we need some comments here to explain all the things we\u2019re doing: isolated component, isolated example, etc.\n. This is not cool ;-)\n. I thinks it would be better to use context here, like for config. Probably make a new object in config for sidebar\u00a0and singleExample.\n. Should we use some non-zero default? \n. previewDelay > 0\u00a0check looks unnecessary for me. And it\u2019s better to do all validation in validateConfig() in config.js.\n. Looks like you should use previewDelay\u00a0here instead of 1000 ;-)\n. One multiline template literal would be more readable.\n. Probably better to pass skipComponentsWithoutExample explicitly. \n. Could you please add some JSDocs while you\u2019re here? ;-)\n. Maybe you\u2019re right. This part of Styleguidist is a bit messy anyway ;-)\n. Please you your global gitignore for that.\n. But why only inside sections? \n. Don\u2019t worry, it\u2019s better than shrinkwrap anyway ;-)\n. You need to keep sidebar here too, otherwise it breaks isolated view.\n. Could you please merge these two short sentences into one paragraph?. How about this example? A bit shorter and probably a bit clearer.\njs\nconst items = [\n  {id: 0},\n  {id: 1}\n];\ninitialState = {\n  activeItemByReference: items[0],\n  activeItemByPrimitive: items[0].id\n};\n<div>\n {/* Will render \"not active\" because of object reference: */}\n {state.activeItemByReference === items[0] ? 'active' : 'not active'}\n {/* But this will render \"active\" as expected: */}\n {state.activeItemByPrimitive === items[0].id ? 'active' : 'not active'}\n</div>. If there are props ;-). Looks like you don\u2019t use this second parameter (custom).. I think it should be configureServer.. webapck . Do we need this in the public API? What\u2019s the use case?. Maybe it\u2019d be better to filter in the loader.. We need to extract table with most of this CSS to a separate component and use it for props and methods.. Better to use classnames instead of concatenation.. It introduces duplication, so that\u2019d make sense. But it\u2019s up to you ;-). Yeah, don\u2019t worry, it\u2019s just a minor thing ;-). We already have some methods processing in the loader and we never need private methods, so why not send only the data that\u2019s needed by the frontend. But that\u2019s just my opinion ;-). I think it should be in index.js since it\u2018s a global polyfill.. This check is unnecessary, forEach will do nothing for an empty array.. We don\u2019t use CSS Modules here and already have a .button class in Button component.. Could be .section or something like that, and would work for both props and methods.. OK, I\u2019ll take a look later.. Better to use <Group separator={<br />}>. . For some reason react-docs\u2019 parse can return either array or object: \nhttps://github.com/reactjs/react-docgen/blob/master/src/parse.js#L52\nAnd it\u2019a actually expected, see castArray below your code. We just need to move it upper.\nYou can cherry-pick this commit: https://github.com/styleguidist/react-styleguidist/commit/d9c933bad017f2d4e629f0cc34f6d26369004dfe. And this one: 53df991b4f1bc8d9d037ed70c3bb388ea8bf0c3a. When will it be empty if you put components as a first section?. I see, not in a normal use case. Maybe extract to a variable like noComponentsFound?. This should be in src/index.js \u2014 we already have some polyfills there.. Probably better to extract this to a separate method like sectionSlugs to make its singletonnes more clear. Also completely hide slugger and export two methods: reset\u00a0and slugifySections (since it\u2019s not generic).\nCan we do it in the styleguide-loader?. Not sure about \u201cyour Readme files\u201d. It\u2019s more like a Styleguidist requirement ;-). * Not only classes, functional components too.\n \u201cprops that your component uses\u201d \u2192 \u201cyour component\u2018s props\u201d?\n \u201cnice\u201d \u2192\u00a0\u201c\u201d.. Any reason not to use JSX?\njs\nconst Tag = `h${hierarchy}`;\nreturn (\n  <Tag>...</Tag>\n);. Maybe level\u00a0would be a better name.. Yeah, it\u2019s wasn\u2019t a request to change, just my opinion ;-). I\u2019m thinking more about this: can we avoid singleton at all if we move it somewhere to utils/getSections.js. But I\u2019m not sure I\u2019d work and make code better?. Yeah, I think this can be moved to loader / simplified. The only things that should be done there is globalization and name intospection.\n. You can communicate with a loader only via query parameters and loaders return JS code as a string.. I think we should rename existing styles, otherwise all existing headers will be rendered with increased size. What do you think?. Does it render tables? \ud83d\ude2e . That\u2019s good: closer to the original plugin. Eventually we\u2019ll need to stop using our fork.. I\u2019ve removed styles because I couldn\u2019t make it render a table \ud83d\ude2d. If I have # Foo in my style guide it\u2019d be rendered bigger after this PR.. Probably we don\u2019t, I should try to remove it.. We already have rules in global gitignore:\n/examples/**/styleguide/build\n/examples/**/styleguide/index.html\nScripts should be in a separate folder anyway.. Better UI: not to scare users with extra files and make index.html easier to find ;-). lodash/noop should be enough ;-). Can we pass an array of webpack config here?. This should be in HtmlDocument.js. The idea is to provide a simple way to redefine rendering of components, so data and markup should be separated.. I\u2019m wondering why ESLint don\u2019t complain about this spaces\u2026 \ud83e\udd14. As I understand you can call webpack like this: webpack([config1, config2]).. I\u2019ll check ;-). How do you share it? I see two separate webpack calls with different configs.. Looks like name can be empty but I\u2019m not sure why. Maybe we can remove this condition ;-). Then you need to handle case when name is not there ;-). Looks like it renders it ;-). Looks like something is wrong with the code or the test \u2014 this line is not covered.. A comment here would be very useful ;-). This doesn\u2019t look like a correct value.. I see, my mistake!. Yeah, something like that. And also what kind of background because it\u2018s impossible to see that it\u2019s a background to test transparent components from the code ;-). Looks like it\u2019s time to extract it to a separate component. We already have this pattern in two places I think.. Please add JDoc here.. Isn\u2019t it the same as _.groupBy?. Each component consists of two components: Foo/Foo.js that contains all logic and Foo/FooRenderer.js that contains all markup. This allows users to customize rendering by overriding *Renderer component using webpack aliases:\n// styleguide.config.js\nconst path = require('path');\nmodule.exports = {\n  webpackConfig: {\n    resolve: {\n      alias: {\n        'rsg-components/Wrapper': path.join(__dirname, 'lib/styleguide/Wrapper')\n      }\n    }\n  }\n};\nAll Styleguidist components should be imported like this: import Foo from 'rsg-components/Foo';.\nEach component folder usually has three files: \n Foo/Foo.js  (optional for simple components)\n Foo/FooRenderer.js\n* Foo/index.js\n. Do you need an index here? You can\u2019t have several params with the same name.. I\u2019d add a space after : and maybe before.. You can you react-group here instead of manual concatenation, otherwise if type of description is missed you\u2019ll have extra : or -.. And a proper \u2014 ;-). Is it possible that all three param, arg and argument are empty?. cx(classes.name, {[classes.nameIsDeprecated]: 'deprecated' in tags}). I\u2019d not render nulls: there are no required parts, and requiring documentation for everything would decrease its quality.. > I believe that the CSS rule that says \"on hover of this element, reveal the IsolatedLink\" should be inside the component\nWith this I agree.\n\nthe component would just need the className for the element that will reveal the component once that element is hovered\n\nI think you need to put both of them into this component. Sou it\u2019d be not IsolatedLink but more like IsolatedContainer:\nhtml\n<IsolatedContainer to=\"/foo\">\n  this content will have a link in the corner\n</IsolatedContainer>. src/components/**/*.js should be updated as well.. And here too: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Configuration.md#components. And here: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Configuration.md#ignore. That\u2018s DEFAULT_COMPONENTS_PATTERN, so I\u2018m for full support of .jsx, not only in ignores.. Yes please!. Actually it supposed to do it automatically but magic apparently doesn\u2019t always work ;-)\nSo I\u2019d do something like this:\n\nYou may need to restart the style guide server after adding an example file.. Is this necessary?. I\u2019m going to add Prettier soon so I wasn\u2019t necessary ;-). And my is telling me that this new empty line shouldn\u2019t be here ;-) But anyway let Prettier decide later ;-). Could you try 5.0.3? It may be fixed there.. No worries ;-). Then leave it, you may have fixed another bug ;-). Can we use .CodeMirror\u00a0instead of body + & .CodeMirror?. At least it\u2019s clear now ;-). I\u2019d choose simpler synonym to \u201celided\u201d, I had to use a dictionary ;-/. Much better ;-). FlowType annotations \u2192 Flow type annotations\n\nAnd also TypeScript via https://github.com/pvasek/react-docgen-typescript\n\nnot be presented correctly by React Styleguidist.\n\nIn most (all?) cases they will be ignored with a warning in terminal. . The project is called Flow: https://flow.org/. // eslint-disable-line no-console would be more explicit.. I think they both should you the same variable.. We don\u2019t use this file, could you please remove it? Merge artifact ;-/. Looks like a typo, it should be bottom padding.. space16? But actually this numbers are not random \u2014 the red background should fill the playground container.. Why Roboto?. I\u2019d use space.0, space.1, space.2. Actual numbers are implementation detail, so it\u2019s a bit like red = blue thing ;-). We shouldn\u2019t use spacers for font sizes. But would be nice to have variables for that too.. We\u2019re using system fonts.. In that case you need to remember that and calculate the right number every time, with 1, 2, 3 it easy: single space, double space\u2026. I\u2019d call it 0: https://medium.freecodecamp.com/css-in-javascript-the-future-of-component-based-styling-70b161a79a32. They are available on all platforms, they look good (especially SF ;-) and they are used in the OS UI. \nHow many people have Roboto installed? :-). Sorry, I don\u2019t see any reason to use Roboto just for a few people who have it, while system fonts are still better.. \ud83d\udc4d . I think we should import particular icon modules, otherwise we\u2019ll have the whole library in the bundle. And wouldn\u2019t rely on tree shaking in Webpack 2 ;-). Probably better to disable isolation then to repeat all properties if it doesn\u2019t break anything.. If you disable default focus styles you need to provide some fallback to make it accessible with a keyboard.. I\u2019d use react-group here ;-). It disables jss-isolate. That\u2019s why you have to copy styles from non-hover state when you don\u2019t have isolate: false.. https://sapegin.github.io/react-group/ \u2014\u00a0we already use it in Styleguidist.. Have you measured bundle size before and after? ;-|. Because it\u2019s easy and you could avoid this ugly selector with :not\u00a0;-). \ud83d\udc7b . These empty divs look strange but they most likely will go away after UI 2.0 ;-). Could you add a test for this function too? :-). And a test for back link.. Do we still need a margin here? If space isn\u2019t enough then react-group is not the best choice because now we\u2019re mixing spaces (a real space) with margins.. Then maybe add padding to the button instead of margin to increase clickable area?. That\u2019s a tough question ;-) I often keep margins and layout in a separate layer. So do whatever you prefer now and when we extract the button to a separate component we\u2019ll talk again what to do ;-). That\u2019s fine, we\u2019re working on a new UI for these links anyway ;-). I\u2019d move this line after the first condition; and you don't need an else because you have return.. Should we cache it somehow? Imagine a project with all components in a single folder.. I mean to cache readdirSync\u00a0because it will be called for each component possible with the same results if all of them are in the same folder.. Will something like an empty string work to remove the # from the URL?. Actually not, right now it renders every block without language tag.\nI\u2019d move CodeMirror part to playground sentence, because Remark splitting is done on the backed and CodeMirror is on the frontend.. I actually wanted to link source files here ;-). I think so ;-). Could you please explain benefits of your implementation over _.memoize?\nI\u2019d make a cached case-insensitive version of fs.existsSync and pass it to to getExampleFilename. Passing just an object doesn\u2019t look useful and will be hard to explain in the docs.. Good catch!. I thinks != production is more common way to check that but we\u2019ll probably need to grep the code for development and update checks in other places too ;-). I think we can just update snapshots because it doesn\u2019t really matter if it renders placeholder or not if it does the right thing ;-). Looks like it\u2019s devDependencies.. I think it should be orange on hover, like toolbar buttons.. And it should be a real <button> so probably ToolbarButton would work if add a prop for a small version.. * system should be replaced with process (see test/phantom.js)\n es6-promise \u2014 I think we don\u2019t need it here anymore.\n doctrine and webpage should be listed in dependencies \u2014 this are actual bugs you could find with this plugin ;-)\n prop-types is a dependency, looks like it should not be here.. Does it work without webpack resolver?. We don\u2019t use .jsx files ;-). Looks like indentation is different here.. All this rules with off\u00a0\u2014 isn\u2019t it a default behavior? Could we remove them?. * rsg-components \u2014 not it\u2019s in three different places, only one is actually working I think ;-)\n system \u2014 in two places.\n enzyme is an actual dependency, I think it should not be here.\n sinon, mocha, chai \u2014 we don\u2019t use them.. This should not be in dependencies, only in devDependencies. Same for keymirror and strip-shebang. All this are only used in tests, users should not download them.. It\u2019s better to disable specific rule, they may be other issues in the same line.. Where are these two lines? :-|. Another missing file.. No this line is separated from the comment that describes it.. You don\u2019t need any extra styles if you\u2019re using ToolbarButton \u2014 it already has everything. You only need to add a prop for a small version.. There may be other tabs, not just props. I\u2019m thinking that this may be not that easy to fix ;-). Also this check won\u2019t work:\n\n!![] === true \n({}).length === undefined\u00a0. Here is the right check: https://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Usage/Usage.js. 1. I mean to replace system with process.argv in the code ;-)\nWeird, Ieave it then, I\u2019ll take a look ;-|. Ha, this file actually never executed, it\u2019s for tests only ;-). I believe polyfills should be imported first.. What it says about it? Maybe we should disable that rule if it doesn\u2019t work for us.. Looks like you have some weird version of npm. Why it changes all hashes to SHA1? ;-/. Sorry, my bad ;-). The we should disable it for the file, not for every line in this file ;-)\n. \n\nThere\u2019s mix of tabs and spaces \u2014 for some reason original file was with tabs, should be two spaces.. I don\u2019t see it anywhere in the code.. Same for staged-git-files and yallist below and app-root-path above.. jest.mock('clipboard-copy') should be enough.. Just noticed that we still have a callback on an icon instead of a button ;-). .trim() should be enough here. Also I\u2019d do it outside the function so you could remove the same code when you print a warning message.. eslint-disable-nextline. I\u2019d not use styling here, it may make #472 harder.. Could we pass a name from tests? I\u2019d remove both conditions. . This way you\u2019re disabling ESLint entirely for the next line \u2014\u00a0there may be other warnings.. If file doesn\u2019t exist it doesn\u2019t mean the path is invalid. To make it useful for the user I\u2019d try something like this:\n\nAn example file FILEPATH defined in COMPONENTPATH component not found.. I\u2019d call it something like isExampleFileExists and do only that. Right now it does too many things:\n\n\nCheck if example defined.\nCheck if file exists.\nPrints a warning.\nDo other magic like trimming file names and checking if component path was passed or not.. Definitely! ;-). Doesn\u2019t matter \u2014 we don\u2019t support them and we\u2019ll remove webpack 1 support soon anyway ;-). Looks like you need to use env instead of es2017.. And add babel-plugin-transform-object-rest-spread to dependencies.. \ud83d\udc4d . Yup, tab buttons for example: we need to show all of them but highlight only one.. All slots are empty objects by default, so the check will work (it\u2019s already working in 5.4 ;\u2013). No editor means no chrome at all: no tabs, toolbar or border around a component. To use components to render parts of a style guide, not to show them.. I think we don\u2019t need this anymore, it\u2019s a braking change anyway.. I\u2019d simplify this part: if a string starts from {, try to parse the whole string as JSON, otherwise do split(' '). We\u2019ll also need custom modifiers for plugins.. Toexample`.. I think this part isn\u2019t required because webpack-merge should do recursive merge.. styleguidist \u2192\u00a0Styleguidist. I\u2019d write it shorter like this: \n\n\nThen enable polling in your webpack config:. I\u2019d try to remove this whole second block and see if it still works because webpack-merge does recursive merge and it should work ;-). I think now just concat should be enough ;-). Treat this file as pseudocode for now ;-). jest \u2192 Jest. I\u2019d only keep npm run test:jest -- -u because the first one assumes global install which is a bad practice or $PATH hack which I wouldn\u2019t recommend if you\u2019re not really hardcode shell user ;-) . \u201cSnapshots\u201d instead of \u201ctests\u201d would be better because this doesn\u2019t affect test\u2019s code.. There\u2019s one more link in docs/Development.md.. Babylon is a dependency of react-docgen, why is it here?. Should stay in devDependencies.. I think it\u2019s better to usecompiler.options(see a few lines below) \u2014 it contains an actual webpack config, so you at least can avoidconfig.webpackConfigcheck.. This looks like way too many new frontend dependencies for such feature. Have you compared the bundle size?. This change is weird ;-). I was wandering why Prettier didn\u2019t put it back ;-) Better to revert it ;-). Ah, it\u2019s because of/ eslint-disable /\u2014 haha ;-\u2193. Sorry, just noticed: it should belineHeightof course.. Yup, will fix \ud83c\udf55. Why do we need this condition? . It shouldn\u2019t be inside try / catch.. That\u2019s fine if it\u2019s executed twice (it has a condition inside anyway) but having it inside try / catch makes understanding of the code harder because we use try / catch here to catch errors in user\u2019s code.. Then it should be polyfilled intest/jestsetup.js, not hacked around in the main code.. You need to useindexOfbecause Node 4 doesn\u2019t supportincludes.. Babel won\u2019t transpile this without a runtime / polyfill / whatever, will it?. JustpathLine &&should be enough. And we should removeisRequiredfrom PropTypes.. Why do you care about that? ;-)!!pathLine &&would be still more readable.. Mayberoot`?. setting \u2192\u00a0modifier.. It would be almost shorter and much more readable if you write two separate tests without the loop ;-). I\u2019d define a new const for that, like IGNORE_SECTIONS_PROD for consistency. Or even:\n\njs\nconst IGNORE_SECTIONS_ENV = {\n  development: [],\n  production: ['devtool']\n}\nIn this case you could avoid a condition.. Would be better to show how to easily have an absolute path without hardcoding it:\npath.join(__dirname, 'styleguide/styles.css'),. \u201cStyles\u201d is a synonym of CSS here, and \u201cstyle guide\u201d is used consistently in the docs, so I\u2019d keep it as is.. I\u2019d write something like this:\n\nThe are two config options to change your style guide UI: [theme] and [styles].. I don\u2019t think this example is useful ;-). And this also doesn\u2019t really help to understand what to do ;-). I\u2019d try:\nUse [theme] to change \u2026 [link to properties file].\nUse [styles] to \u2026. Dot at the end is missed.. Hm, why would npm changes that? Could you please remove this file from the PR?. OK, leave it then but it\u2019s even more weird now \u2014 I\u2019m using npm 5.3 ;-). You\u2019re not using this anymore.. I\u2019d pass just isHttp because you\u2019re doing the same check inside printInstructions.. Not sure this message is really useful for our users. Probably nobody would try to run style guide server in production ;-). protocol \u2192 isHttps. Missed comma here ;-|. Will react-scripts-ts/config/webpack.config.dev.js work too?. have \u2192 need.\n\nCreate React App, TypeScript \u2014 for consistency.\nadd a components, webpackConfig and propsParser section to your  styleguide.config.js \u2192\u00a0create a  styleguide.config.js file (most likely user won\u2019t have any config at this time).. Should be in devDependencies.. Why do we need disableLifecycleMethods here? What was changed in Enzyme?. \ud83d\udc4d . Could you take a look why these wrappers have disappeared?. And why done\u00a0was removed? This test is still async. Looks like I\u2019m missing something here :-). Doesn\u2019t look very nice but I think it would make sense to use this because we want to change the wrapper too. . expect.assertions\u00a0just tells Jest how many assertions to expect and it would fail the test after a timeout if there were less assertions.. \u201cstore\u201c \u2192\u00a0\u201d\u201d?\n\u201cwhich is the same way as Redux\u201d \u2192 \u201csimilar to Redux\u201d?. I\u2019d use imports for consistency here.. I think we shouldn\u2019t use PlaygroundError component here \u2014 full screen of ~~blood~~ would be an overkill, so just red text on white background would be enough. I think we can extract the layout from Welcome component to a Page (don\u2019t know a better name for that) component and use it to show an error. Also please take a look at our developer guide: https://react-styleguidist.js.org/docs/development.html. It is React Styleguidist ;-)\nI\u2019d make [submit an issue] a link, no need to show the URL in the UI.\nAnd you can use Markdown component to render text, see WelcomeRenderer component.. * We still need to extract this \u2014 non Render components shouldn\u2019t print any HTML ;-)\n Margin should be 8 or better 16 (we use 8px grid by default).\n. * Any reason not to user <pre> tag? ;-)\n* I don\u2019t think you need to wrap error message into another string.\n. Probably would be better to print this in another paragraph.. I\u2019m not insisting on using JSS, etc. but I\u2019m trying to explain why it\u2019s not that easy as it look ;-) . Yeah, I think that would be enough to ensure readability. I still hope it will be a rare case to see this thing in real life ;-). I also think it\u2019s safe to import styles from https://github.com/styleguidist/react-styleguidist/blob/master/src/styles/theme.js because these are just const values. They won\u2019t be overridable by the use but we\u2019ll have less hardcoded styles.. Then I\u2019d to .toString() to clearly show the intent.. We can\u2019t enforce that but it\u2019s not a reason to move it ;-) Consistency is one reason and it\u2019s just a bit chunk of HTML that I\u2019d like to hide from this component.. Now I like it! \ud83c\udf55 . Looks good to me ;-). Indentation was changed for some reason. There should be two spaces.. I don\u2019t care about async nature ;-). I\u2019d compose using cx() function \u2014 would make code simpler and shorter.. Should be import HeadingRenderer from 'rsg-components/Heading' \u2014 *Render\u00a0components are implementation detail, we should\u2019t leak to the caller code. See for details: https://react-styleguidist.js.org/docs/development.html. level sounds better than depth\u00a0for me.. Maybe Heading\u00a0component should accept className? And we could get rid of the div here.. And get rid or this div as well ;-). I see ;-) This line is funny:\nconst headingLevel = Math.min(6, depth);\nLet\u2019s make it level everywhere.. It would be better to define default colors and text in config schema. Probably you\u2019ll need to use process\u00a0function for that.. It\u2019s not really an icon, I\u2019d call it link.. root or ribbon would be more in line with other components.. Please take a look at https://react-styleguidist.js.org/docs/development.html This component should be split into two: Ribbon that will read config for a React context and RibbonRenderer \u2014 this component that prints actual HTML.. You don\u2019t need this because all config is accessible in the context.. No if you\u2019ll read config from the context as I\u2019m suggesting ;-). This will be overwritten if codemirrorOptions isn\u2019t undefined, we need to merge objects manually using process\u00a0function.. This is a breaking change, we should keep the old option until the next major release. See updateExample option in the config schema.\neditorConfig\u00a0would be a more generic name, and better match existing options like compilerConfig.. Let\u2019s call it headingWrapper of something like that.. You don\u2019t need it here I think.. Better to use sections example for that \u2014 it has many examples for Markdown rendering.. I think shallow should work here too.. Why is this required now?. This is a wrong abstraction: we have a Heading component that renders proper font sizes for each lever and here we\u2019re hacking around it to change font size. Better to keep it as is, it\u2019s no a heading anyway ;-). Unnecessary here too.. You can probably combine .spacing and .row, and move toolbar outside the header.. We\u2019re not using react-modal anymore.. We\u2019re using bind in constructor in other components.. You were adding it to another component \u2014 I\u2019ve fixed it and it seems to work fine now ;-). I use this pattern in many components: https://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Argument/Argument.spec.js\nThe issue with render that it\u2019s not shallow, so it will create unnecessary detailed snapshot.. Will /** @component */ work too?. I\u2019d not call it a default resolver, it\u2019s not default for react-docgen and not default for Styleguidist anymore ;-). * styleguidist \u2192 Styleguidist\n. I think we should use the folder name if the file name is index.*.. I\u2019d move this component to the sections example, it\u2019s too \u201clow-level\u201d for the basic example.. \u201cStyleguidist will add them to your style guide anyway\u201d or something like that. They are not sections.. Or even better:\nhttps://github.com/nerdlabs/react-docgen-displayname-handler/blob/8cd141064910eb429f18e03e631a25cec371330a/source/index.js#L51-L66. _.upperFirst(_.camelCase(displayName)) would do the same but more readable.. Isn\u2019t it the same as path.basename(path.dirname(filePath))?. styleguide \u2192\u00a0style guide. I don\u2019t think the second part is necessary, I think it\u2019s dangerous in any case ;-)\nAlso: **Warning:**. styleguidist \u2192 Styleguidist. I\u2019d use findAllExportedComponentDefinitions probably, it\u2019s clear at least ;-). I\u2019d use shorter form in the docs then ;-). Do you have an example somewhere?. Would be nice to use cross-env here.. What was the problem?. Now we have the same defaults object two times. Keep it in the config only and merge using process\u00a0method.. We should not use highlightTheme anywhere except the config schema. Now you\u2019re overwriting the right option with the wrong one anyway.. 1. You have this object twice: here and in the config schema. We need only one in the schema.\n2. Check how process\u00a0method is used in the schema, you need something similar. You also need it to merge the old option with the new one.. We need to find what\u2019s the issue.. > You also need to merge the old option with the new object in the config, we shouldn\u2019t access the old option anywhere else.. It was actually a bug, I\u2019ve fixed it in master and updated your branch \u2014 should work now.. Argument component already supports returns, you don\u2019t need to create a new component for that.. Name is optional and it doesn\u2019t use key at all:\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Argument/ArgumentRenderer.js. I still don\u2019t understand why do you need Arguments here. return isn\u2019t a part of arguments.. Could you try <Argument returns\u2026 instead of another heading for a more compact output?. !== undefined would be better here. I\u2019m wondering why ESLint isn\u2019t complaining about that ;-). Please add a new line between the badges :-). Let\u2019s keep it for now. Gitter seems better for quick questions and you can login with GitHub account.. Sure!. And now I see \u201cWe weren\u2019t able to load this community.\u201d \ud83d\ude22. Please use _.castArray.. Something is wrong with indentation here.. I\u2019d remove \u201cso that you don't have to set them in each component\u201d, we don\u2019t say how to do it anyway.. Better to refer to another question that explains how to do it.. This is incorrect now. Can we explicitly enable jest-serializer-html where we need it? If not we\u2019ll have to change <rootDir> to something else.. The check in jest-serializer-html is very na\u00efve now but I guess there\u2019s no easy way to do it. So probably we should just change <rootDir>\u00a0for now.. Looks like you forget to run npm install\u00a0after pulling the changes. The right value is never now.. I think buttonTextTransform\u00a0would be enough.. verbose, components and ignore options are the same as defaults, you don\u2019t need them here.. Was this command generated? Just jest --watch is enough.. Could you add a comment here? Otherwise someone will refactor it out ;-). You don\u2019t need to repeat it in tests. You can export it from the schema.. Nothing would be undefined, this is explicit empty object passed by the user, whatever the reason ;-). config.highlightTheme && { theme: config.highlightTheme }. Sorry, it was a bad idea \u2014 now we have the same issue again with storing random data as config options. Let\u2019s try to put it inside editorConfig with a name like _default ;-|. jest\u00a0already includes CLI, and we\u2019re using Jest 21 because we need to run tests in Node 4.. At this point you don\u2019t have highlightTheme\u00a0option.. At this point you don\u2019t know which options are provided by the user and which are default.. Why do you think it\u2019s better than editorConfig._default?. My reasoning: it\u2019s actually used only in the config schema and the only reason to export it is to reuse it in the test for the config schema. That\u2019s why I think it\u2019s better to keep it close to the schema. But we can\u2019t export it directly, so we\u2019ll have to put it inside the editorConfig object.. Then we need to find how to fit that problem, not change the project configuration that works well for other people and CI. Ping me somewhere ;-). Technically yes, but you shouldn\u2019t access it anywhere except the config schema where you merge it with the new option.. You\u2019re merging user value with defaults in the config schema, here you only have the resulting object. The Editor component doesn\u2019t (and shouldn\u2019t) know the difference.. Yup. Should work ;-\u00a3. It doesn\u2019t test anything ;-). That\u2019s an interesting way to solve problems. But please comment that next time.. Actually I think we\u2019re solving a wrong issue here. You don\u2019t really need the whole thing in tests, I\u2019d check one field in tests ;-). \u201ceditorConfig option should have default values\u201d would be more clear I think.. I don\u2019t understand what that means. \u201cshould merge default editorConfig with options provided by the user\u201d \u2014 long but clear.. I\u2019d check for mode and theme in both tests to make the difference more clear.. No need for _ here.. I\u2019d put a link to the source instead of an object.. They aren\u2019t ordered now.. Shorter at least:\n\nSource code editor options, see CodeMirror docs for all available options.. Better to point to master in case we change the options.. 1. Why is it inline? Shouldn\u2019t it be rendered on its own line with a proper whitespace below?\n2. I think just text={description} will be enough.. I think you need to update PropTypes of SectionRenderer.. I\u2019d call it \u201cHow to add external JavaScript and CSS files?\u201d to make it close to \u201cHow to add custom JavaScript and CSS or polyfills?\u201d and the difference between them more clear.. styleguidist, react-styleguidist \u2192 Styleguidist\nhtml \u2192 HTML\ncss \u2192 CSS\nstyleguide\u00a0\u2192 style guide. I\u2019d use remote files as examples here because for local files require\u00a0options is enough.. Just put \u201c:\u201d at the end of the previous paragraph instead ;-). Then id would be great to explain the difference with require ;-) For CDN I think Google Fonts would be a good example.. Please use values from theme.js, . Looks like you don\u2019t use this prop.. Spacing between components should be defined outside, react-group should work here.. This prop is required.. rsg-components/ColorSwatchRenderer. I think it\u2019d be better to test the value then the name with something like this https://github.com/olstenlarck/is-hexcolor. I think it would be better to extend Para component to allow ul/ol and custom className.. I believe li class should stay.. Avoiding any additional dependencies is a very wrong goal ;-) But is-color is bad because they have a list of color names. is-hexcolor is a one-line regexp to test a hex color.. I think that nesting lists into paragraphs is the wrong way ;-) and probably we should just duplicate styles: add margin-bottom to ul and text styles to li.. I think we still need to define color and font for li to make it explicit.. This is weird.. We already pass config here, we should access it via context in non-render components and pass as a prop to render components if they need it.. Ah, OK. . I think this paragraph was better. Any JSX code is real React code and the point here that you can create new components inside examples.. Let's not teach people bad practices: use a functional form of setState ;-). If we bind in the constructor  (or use arrow function if Buble supports it) we could make these lines shorter and easier to read.. There are or they should ;-) There are recommended by React docs: https://reactjs.org/docs/state-and-lifecycle.html#state-updates-may-be-asynchronous. Maybe something like this:\n\ninitialState, state and setState helpers are good to show components in different states, but to allow users copy-paste code without modifications into their React app you may want to use React.Component instead. We can rewrite an example above like this:. I'd add a comment that it's a clearfix and why we need it here, otherwise these two lines will be eventually removed during refactoring ;-). Can't we check prop.flowType directly? (You're doing it anyway ;\u2013) This function feels unnecessary.. This whole thing is already wrapped in <Type>, is it necessary to have one more here?. There's no such thing as \"just an abstraction\" ;-) each has its own cost. I don't think this one worth its cost, and since you're not using it consistently, which makes the cost even higher.. OK, leave it like this for now ;-). And it was already disabled: // eslint-disable-next-line react/prop-types ;-/ I guess because of the name props.. This function should be in a separate file with JSDocs comment, like other functions. Will be easier to test separately too.. I think props.props = sortProps(props.props); would be enough here.. Let's disable it for the whole file, it's a test anyway ;-). This section could be replaced with a comment with a file name, like here: https://react-styleguidist.js.org/docs/cookbook.html . \"Cool!\" -> \"\", sorry ;-). An example how to disable sorting and note that the default implementation sorts props would be nice.. props => props ;-). Will it make a network request on every install? Especially on CI?. It's Styleguidist.. You can use Array.isArray\u00a0here, probably less consistent in this particular case, but I\u2019d prefer a native method if it\u2019s available and works well ;-). Is it big / slow to install like Puppeteer? . I'm not sure it's really useful, I'd just define cy in globals.. I don't have a strong opinion also but it feels unnecessary to have an extra dependency to basically define one or tow global variables in ESLint config.. Only if they do something crazy: Prettier downloads Chrome, which is ~70 MB, on install.. Yeah, lightercollective looks better. I can't accept unnecessary network requests on postinstall.. This will make a network request even with lightercollective, and it doesn't look even close to our logo ;-|. I think this is confusing: you're overwriting half of the styles, I\u2019d just copy the relevant styles here.. Should be rsg-components/Markdown/Blockquote.. This function should be in a separate file, with JSDocs comment, and it should have tests. Looks at other files in utils folder.\nAlso the name is confusing: something like getSectionComponents would be a bit better.. I think it was easier to follow without mutation. Also we can make it clearer by assigning section.content to a variable like contentRelativePath, because we  have two contents with different meaning.. It's Styleguidist.. Then let\u2019s make it an arrow function as in getProps ;-). Yup!. If you see this pattern somewhere in Styleguidist, then it's a bug ;-) That prevents component overriding to work properly, so we should always use the full form.. It was a bit better when it was defined in the same file ;-). Thanks, it should be \u201creexport\u201d.. Did you mean \u201cexamples don\u2019t have direct access to webpack\u2019s\u2026\u201d?. One paragraph \u2014 one line. One space at the end of a sentence.. I\u2019d copy styles again, you\u2019re overwriting most of them.. There's already a fallback in the config scheme, highlightTheme should only be used there.. Can we move it to src like in other examples?. Styleguidist. Styleguidist. tab \u2192 2 spaces. Doesn\u2019t make sense: you\u2019re mutating the original param anyway.. This should work in webpackConfig too.. And this.. This condition doesn\u2019t make sense:\n\nconfig.editorConfig is always defined (check the schema).\nIf it wasn\u2019t defined, you\u2019d have a broken path.\n. Shouldn't we add type=\"checkbox\" here? Just for clarity ;-). Then it will not be a checkbox and these styles are only meant to be used for a checkbox ;-). Styleguide \u2192 Styleguidist. **Note:** to make it look nice on the site.. Please don't add screenshot to the repo, you can use this URL (it's also optimized):\nhttps://d3vv6lp55qjaqc.cloudfront.net/items/0h0d3k2f172v3t3a2d1U/customised.png. There's one more use case: folder name when the file name is index.js.. Default. Maybe \u201cStylegudist will use ECMAScript module\u2019s default\u00a0export or CommonJS module.exports if they are defined\u201d?. > it will fall back to exposing the module as a whole.\n\nNot sure what exactly that mean, but most likey you'll not be able to access components, so we can say that instead ;-). Would be nice to make this section shorted and easier to scan. Maybe use one big table instead?. I guess your understanding of this code is very good now, could you please add comments to each variation? Preferably with code examples. This is one of the most obscure parts of the code base ;-/. Can we avoid mocking here? Doesn't look necessary.. ESM imports are hoisted to the top of the file, so disabling ESLint here is unnecessary and misleading.. Could be simpler:\n| foo | bar |\n| --- | --- | \n| `foo`<br>`bar`\u00a0| bar |\nAlso you can remove the last column and use the same component name everywhere, and merge displayName and fallback columns since they are mutually exclusive.. Nice! Please add a blank line before each comment to make it easier to read.. Sorry, I wasn't clear enough: blank lines to separate code \u201cparagraphs\u201d, not just empty line before each comment ;-). Wow, it's like 10 times smaller now ;-). Exactly! Just to separate different sections of code.. We can remove the whole matrix block now.. Is this correct value? Looks like a non-isolated link.. Probably this will be a better place: https://github.com/styleguidist/react-styleguidist/blob/master/src/utils/renderStyleguide.js\nThough you may need to cache current route.. I guess it's time to move this condition to a function with a good comment ;-). We should convert function to a boolean in config schema and later use boolean values, would be simpler. \nBut since we don't pass any dynamic data to this function, we probably don't need it. This would also work:\njavascript\nmodule.exports = {\n  pagePerSection: process.env.NODE_ENV !== 'production'\n}. I think I could just add this as a default value in the next major release.. Should we create TableBody and TableRow component  to make styling possible?. We can use JSS composition (like in the original version: composes: '$td') and avoid classnames, I this it would be a little bit nicer ;-). I think we should define color and line-height on td, and then we only need margin from Para which whould be copied here.. Use Array.isArray.. These tests don\u2019t add much (if any) value: you\u2019re testing this line:\ntype: ['string', 'function', 'array'],\nwhich is already tested in config sanitizer tests.. function returning absolute paths \u2192\u00a0array of component absolute paths.\nYou can also add a test for relative paths.. I don't think it was necessary: it should rerender everything on hash change, so you can scroll in renderStyleguide.. Yes, please. I think it makes this part much more complex then it was. \nWhat kind of an event handler you want to add? There's a hashchange\u00a0handler already that rerenders everything.. We have the getWebpackVersion function for that.. You need an empty line before if.. 1. This needs a comment.\n\n\nWould it be triggered on code updates too? Probably better to have a separate hashchange just for this.\n\n\nI guess status\u00a0instead of codeRevision\u00a0wasn't intended.. Please don't import whole Lodash on frontend. But I think you don't really need it here, are there any cases where location.hash won't be defined?. All component imports should be like rsg-components/ComponentsList/ComponentsListRenderer, see more info here: https://react-styleguidist.js.org/docs/development.html. Could you move this function before the default export and use an arrow function? That's the convention we use for such smallish functions.. I'm afraid startsWith\u00a0won't work in IE11, everything else looks fine for me.. Could you remove this empty line?. startsWith won't work in IE11.. Here should be a full path with rsg-components\u00a0too.. And here.. You don't use color\u00a0and background props.. This could be a defaultProps.. Try to use space variables from theme here. (I'm not sure it's a good idea, but worth trying ;-). [[space[0], space[2]]] is a preferred way (note double brackets).. Should work without px.. updateProps would be a better name to match updateExample: https://react-styleguidist.js.org/docs/configuration#updateexample. Can we move this to another example styleguide? I'd like to use basic example for the core functionality.. More realistic example would be: check if @version has a value: if it has, use it, otherwise read version from\u00a0version.json.. I believe this line is unnecessary but worth checking.. I think you forget to push some changes: the example is still here ;-/. Good enough now ;-). Please use one of the existing examples (like customised), creating a new one would be an overkill ;-)\n\n\nThat will probably fix the issue with unknown config option too.. A link to a file would be useful here.\njust \u2192 \u201c\u201d ;-)\nit's \u2192 its. We can be sure that if a config option has a value, then it's a function (it'd fail before otherwise), so if (config.printBuildInstructions) would be enough.. I'd do config.printServerInstructions(config, { isHttps });, so config would be always a styleguide config, and extra options would be separated \u2014\u00a0less cognitive load ;-). I\u2019d show an example instead of Takes theconfigobject withisHttpsmerged in... I don't think you need this, we use this array to pass config options to React.. right \u2192\u00a0decoded?\nEnglish, Chinese. Please also capitalize language names.. I think specifying the wrong language is worse than not specifying any: style guide content can be in another languages.. I don't think it will ever be different from title, no need for another prop ;-/. Does this work with webpack 3?. It generates a webpack configuration, there's a check already.. I think this should be in dev dependencies.. You can remove duplication here by moving Uglify options to a const.. Now we can remove prepare\u00a0script.. Would be more clear to prefix with webpack.. Will it work without \\?. You don't need this anymore, covered by documentation\u00a0stage.. I think extra -- isn't needed anymore.. I think it should be just npx styleguidist server.. find(ast.body.reverse(), { type: 'ExpressionStatement' }) \u2014 if we have to use Lodash anyway ;-). This will downgrade 5.8+ to 5.7.. I guess we can check for npm ci directly.. This would be much easier to read:\njs\n// (A new line after the previous code paragraph\nif (argv.open) {\n  const protocol = isHttps ? 'https' : 'http';\n  const { localUrlForBrowser } = webpackDevServerUtils.prepareUrls(protocol, config.serverHost, config.serverPort);\n  opn(localUrlForBrowser);\n}\nRight now you define variables at the top of the block and use them much later.. Opens \u2192 Open (see \u201cprint\u201d on the previous line).\nurl \u2192\u00a0URL ;-)\nSame for the docs.. Maybe href\u00a0would be more clear. external\u00a0feels like a boolean flag.. Shouldn\u2019t skip\u00a0be implied for external links?. You could move it before let url\u2026.. We\u2019re not really testing that it opens a link in a new window ;-) \u201cShould render external links with _blank target\u201d would be more clear.. I think that would make the API easier to use.. I think that would make this part even more clear:\nhref: item.href || getUrl({ ...\nexternal: !!item.href. You don't have to use the same API for users and developers ;-). external would be better, _blank\u00a0is an implementation detail, we shouldn't know about that here.. What's the use case for sections without href?. Do you think we can improve key={idx} now? Is there anything unique for each section that we can use as a key instead of an index?. What's the difference between doclets\u00a0and tags? Worth adding a comment.. Looks like it's not ordered alphabetically.. Not really often, I'd remove \u201coften\u201d ;-). utilize \u2192 use\nconfiguration \u2192 config. You could end the previous paragraph with a \u201c:\u201d and remove this one.. docs.displayName.toLowerCase(). I think this section should be before \u201cUsing JSDoc tags\u201d, similar to \u201cIgnoring props\u201d.. Something like this would be shorter with the same amount of useful information:\n\nUse @visibleName JSDoc tag to define component names that are used in the Styleguidist UI:\n\n(And you could remove the next paragraph too.). Instead of repeating what you say in the first paragraph it would be useful to say that this won't change the actual name of the component that is used in JSX.. Please add a comment explaining why we need this.. Looks like some merge issue \u2014 these changes are from another PR ;-/. Would be super cool! But preferably in a separate PR.. Then title + href should be unique enough, I'd really like to avoid indexes.. I mean making an API that isn't tied to implementation: external: true and then:\ntarget={item.external ? '_blank' : undefined}. Let's skip it then ;-) Are you going to change anything else or I can merge it?. Shouldn't it be CodeSamplesModes.collapse?. I think ExampleModes would be better.\n. And UsageModes, we have the Usage component to render props and methods.. What was the reason for this change? Suspicious ;-). Return shouldn't have a variable name.. output\u00a0is a very non-descriptive name. If you want to use components inside the loop, use something like filteredComponents instead of output.. Something like this would be much more readable:\njs\n// import get from 'lodash/get';\nconst name = get(sections[0], 'components.0.name', sections[0].name);\nreturn `${name} \u2014 ${baseTitle}`;. configuration \u2192\u00a0config. Please move all comment above lines to avoid wrapping.. Using classnames would make this piece more readable (there are many examples in the codebase).. And you don't need that ;-). You could use object spread here:\njs\nreturn {\n   ...this.context.config.editorConfig,\n   ...this.props.editorConfig\n};. Do we still need this?. Shouldn't CodeEvaluator read config from context itself, similar to what you did for the Editor?. Do you have any new code here? If not I won't read the whole file ;-)\nThis is React specific, so we should reflect it in the name: something like ReactExample (not the best too but I have no better ideas ;-). Something like StateHolder\u00a0would be more correct: it's not just initial state here.. Yeah, true.. \u201cInitial state of the code example tab\u201d? And similarly the next one.. I'd remove \u201cwhen is\u201d.. Ooops ;-/. Defines the initial state of the example code tab:. They are examples, not samples \u2014 I think I\u2019ve mentioned that before ;-). And I\u2019d keep \u201cusage\u201d here.. Some unrelated changes in this file \u2014 probably merge issue.. This sentence doesn't say anything without an example.. And the main question: why would you want to use it in a style guide?. I think we can use process method in the config schema to support deprecated values, and keep them in the schema only. Will be easier to remove later.. Shouldn't it be singular \u2014 exampleMode?. This code needs a lot of comments, meaningful variable names and splitting into multiple functions with meaningful names. It's impossible to understand what it does.. This padding creates extra whitespace, that is visible on the screenshot.. # Page not found would be enough instead of both headings.. Please add .\u00a0at the end ;-). DisplayModes, but ExampleMode. Was that intentional?. isExampleHidden and isEditorHidden.\nAnd could you please check that sample isn\u2019t used anywhere instead of example?. Same with UsageMode.. What happend to this file?. This is very fragile, what if there will be &id=? It will also remove all parameters after id.. We can split the first part at the very beginning with a regexp and avoid all substr calls and magic numbers.. This function also needs splitting and comments. . Error 404 \u2192 Page not found. What is happening here?. I don't think we need a router like React Router because we render a single component in any case except welcome screen. But using a library to parse URLs could be a good idea to avoid hard-to-read string operations and regexps.. Can we use 2019\u00a0as more common name?. Please add a comment that we're using Lodash because IE11 doesn't support Array.find.. Can we use Array.map here?. Then _.find, anything that's not a loop.. I think it was actually better to loop twice, because the first one only loops the first level, and the second one is recursive. \nAnd we can use _.find to avoid unnecessary cycles and an ugly found\u00a0variable ;-). I\u2019m actually thinking about removing all the Gitter links \u2014 changes to have an answer there are very small, and questions are usually of very low quality, so you they can't have an answer without asking 10 more questions ;-). We don't care what contributors write in commit messages, or how many they add to a pull request ;-) So the only way to make it actually works is to do squash-merge and rewrite messages.. What do you mean by deep level? ;-/. Yeah, looks like we have to use a loop here (and that's why it was a loop in the first place): iterating over the whole tree isn't a good idea ;-/\n. I don't understand what that means ;-(. This needs some explanation: what is happening here? What is firstDepth?. Please don't use block comments instead of inline comments, also add an empty line before a comment to separate code paragraphs.. What this line is doing? What this comment means? Which browsers? Worth extracting to a method with a meaningful name.. Just \u201cPage not found\", I think I've mentioned this before.. What \u201cmajor of 0\u201d means?. This comment is repeating the code, but doesn't explain it.. I've mentioned before that this is very destructive regexp, it will cause issues.. Use escapeRegExp\u00a0from Lodash.. This fine needs a huge \u201cHACK\u201d comment explaining that this is a temporary solution.. you can set up it adding sectionDepth in each section\u2026 \u2192 add the sectionDepth parameter to a section, where the value is the number of section levels that will be shown as single pages?\nThough I\u2019m still not 100% sure I understand now it works ;-/. Should this be removed or finished?. The comment repeats the code but doesn't explain the intent.. You don't need this line, it will merge new state with the previous for you.. '&, &:hover' \u2014 this should work, so we won't repeat textDecoration: 'line-through'.. What this method does? I'm not sure I'm following the logic of this function.. Consider either moving this function to a separate file or defining it as an arrow function \u2014 these are two conventions we usually use.. Could you add a comment? The name is really confusing ;-/. Could you please add a comment with an example how this looks in Flow?. It's hard to connect a test with a with a particular line branch of code ;-). There's no need for the script, npx jest -u\u00a0is enough.. hidden elements are hidden from both screen and screen readers, so this code doesn't do anything. Could you show a particular error from WAVE? We likely need to duplicate title\u00a0with arial-label.. Now would make sense to move it outside of the function to the very top of the file and change the name to UPPER_CASE.. type && type.type === 'OptionalType' would be enough.. Maybe {type.name}{isOptional && '?'}{!!defaultValue &&=${defaultValue}}?. Would make sense to explain what is happening here: quite a lot of tricky code.. I don't think we should use a heading here, but probably it would make sense to add an accessible label:\nhtml\n<p aria-label=\"version\">{children}</p>. Please use light\u00a0for text, lightest doesn't have enough contrast.. You mean to accept synonyms, or am I misunderstanding you?\n\n@param (synonyms: @arg, @argument)\n@returns (synonyms: @return). Makes sense I guess. Do you want to try it here or should I merge it as is?. id \u2192 ID\nReact-Styleguidist \u2192 Styleguidist. You already have a default value from the config schema, so you don't need || here.. It looks like the file was edited in the browser so the precommit hook wasn't run ;-/ Could you please change jsx\u00a0to markdown\u00a0for the whole block? It'll stop Prettier from adding ;.. It's a bit confusing: here's an example of what you should write in Markdown, so the outer tag should be markdown\u00a0instead of jsx. jsx noeditor part is fine \u2014 it's part of an example.. New line is fine!. Please add target \u2014 Node 6 here and another babel.config.js file into the client folder which should be the same as the original config (this files before your changes).. I'm not sure what this trying to do, but it will import untranspiled files, which will not work eventually \u2014 when we start using features not supported by Node 6. I'd move the bin folder (forget about it!) to src, so original paths would work fine.\n\nAnd you'll need to update a path here:\nhttps://github.com/styleguidist/react-styleguidist/blob/cf7f1efa88d6c83abcb87b5391340d115a4fbf45/package.json#L20. I don't think you need it, relative paths should work fine: ../scripts.. Could you show which code triggers this rule? . We have hundreds of modules, so this won't scale well, unless it's automated somehow. So yeah, I'd revert this change and use regular imports / requires.. This won't work: we need to reference transpiled files in the lib\u00a0folder.. Could you please revert whitespace changes in this file?. This should be ../client, and you'll not have to change other two paths.. Please rename it back to Details to match the HTML element.. This component has required children\u00a0prop, we need to test it.. Let's use named export for both components.. Is this change necessary?. You're not using some of these props.. I'd call it ConfigConsumer to make more clear what it does.. I'd move it to rsg-components like any other component, and rename to ConfigProvider.. Do we really need both here?. We probably shouldn't show the same name as for context consumer.. Looks like you don't need state here.. Shouldn't it be Consumer?. \ud83e\udd26\u200d\u2642\ufe0f \nWe should change it here, otherwise the script will overwrite the command eventually:\nhttps://github.com/sapegin/mrm-tasks/blob/master/packages/mrm-task-prettier/index.js#L82. Please add a comment with the explanation here ;-). Just componentGlobs will be enough.. A function will be more readable than a nested ternary:\njs\nconst getComponentGlobs = components => {\n  if (isFunction(components)) {\n    return components();\n  }\n  // ...\n}. false\u00a0or undefined\u00a0would be a more clear way to say that the input was incorrect.. Could you please move this function to the top of the  file?. Will WebkitOverflowScrolling work too?. Both should work the same way, camelCased one is just more idiomatic, because all other attributes are camelCased.\nIt's JSS, not styled-components by the way ;-). \ud83d\udc4d . It wasn't me ;-) I guess it won't be a problem to treat all strings as glob patterns.. There's no \u201cme\u201d, it's an open source project ;-)\nMaybe it is unnecessary now, maybe it used to be necessary, I can't say now. . I'm fine with that! My only question is how compatible it is with glob and will it require a major release, which would be fine too \u2014 I'm finishing 8.0.0 anyway.. Now you could return glob.sync results directly without an extra variable and brackets.. Same here: no need for explicit return.. I think we should try fast-glob in 8.0.0 anyway, they also have absolute\u00a0and unique\u00a0flags that may be useful. \nI don't think ignore issues are issues for us:\n we use positive ignore patterns by default, not sure there are many use cases for negative ones, even if glob supports them.\n glob\u00a0doesn't support relative ignores either.\nBut for now your fix is good enough, thanks!. You could use a default value here:\njs\nfunction chunkify(markdown, updateExample, playgroundLangs = PLAYGROUND_LANGS). \u201cshould parse examples with custom extensions\u201d?. That's exactly what Babel will generate: comparison with undefined, as well as Node.js:\n```\n\u276f node\n\nfunction x(y=3) { return y }\nundefined\nx()\n3\nx(undefined)\n3\n```\n\nSo the problem must be something else.. rsgCustomErrorBuild?. Have you tried it with webpack 3?. I remember I had troubles finding a version that would work in webpack 3 and 4.\nYou can do npm i --no-save webpack@3\u00a0and then npm start.. Can we move this condition to a function with a comment explaining all the cases for a chid?. Yup, an arrow function in the beginning of the file \u2014\u00a0you can find examples in other utility files.\nBut probably a better question would be: does it fixes the initial issue?. This name is incorrect, it doesn't change the behavior of the link in any way. isExternal\u00a0would be more correct.. What's the point of submitting a PR if you don't know what it does? Please don't waste maintainer's time like that. . This doesn't really explain how it works. Something like this may be better:\n\nText to show with a copy to clipboard button below the heading, similar to component\u2019s pathlines.. Looks like you don't use it in the Babel config.. This is fixed in master already, could you please merge master into your branch?. webpack isn't in peerDependencies to support tools like Create React App that have their own webpack. We have a version check to be sure that the user has the supported webpack version.. Looks like you don't need path.join here.. I don't think you need to do this in each loop iteration.. Will it run CI for pull requests?. Let's use <code> instead of span here.. This will use default browser styles or any styles defined in your app stylesheet. . I'd actually make Table component to support different types of columns \u2014\u00a0code, type, name, etc. This will simplify this component a bit and reduce number of DOM nodes.. So you'll define styles per column here:\n\njs\nexport const columns = [\n    {\n        caption: 'Prop name',\n        render: renderName,\n                 type: 'code'\n    },. Dev isn't descriptive \u2014 it's an old version of the same config.. What is window.Exception\u00a0and why it's necessary here?. Same about DEV naming.. Can you add a comment about that? It's not very obvious.. This will also match webpack.config.dev. Probably should be something like /^react-scripts\\/config\\/webpack\\.config.js$/.. A space after Returns\u00a0shouldn't be necessary.. And spread here is also unnecessary.. I think we can restructure it like this:\n```js\nconst content = ...;\nif (block) {\n  return {content}\n}\nreturn content;\n```\nto avoid rendering an unnecessary div when it's not block.. Please use JSS instead of inline styles.. Use can avoid reassigning here: rows.push(...renderExtra(prop, nextLevel).. Avoid mutating function arguments. I guess you can use level + 1 when you call renderExtra.. And instead of mutating the original props object you could do:\njs\nrenderExtra({...prop, type: prop}, level + 1)\nOr even:\njs\nrenderExtra({type: prop}, level + 1)\n. Please add a space after // and remove an extra new line before the comment.. There should be enough examples in the codebase:\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/client/rsg-components/Argument/ArgumentRenderer.js#L9-L13\nhttps://react-styleguidist.js.org/docs/development.html#styles-1\nhttps://cssinjs.org/react-jss/?v=v10.0.0-alpha.10#dynamic-values. Let's start adding test IDs to elements that can't be accessed by ARIA attributes or labels:\nhttps://docs.cypress.io/guides/references/best-practices.html#Selecting-Elements. filterEmptyString function doesn't filter anything, .filter(dep => dep.trim()) would be enough.. This test isn't about trailing commas.. Sure, I meant testing IDs ;-). Please add a comment explaining why we need to do this line.. ",
    "tp": "Thanks a lot for taking the time. I have send you a copy.\n. Still failing here:\nERROR in multi main\nModule not found: Error: Cannot resolve 'file' or 'directory' /Users/timm/Projects/ui-toolbox/node_modules/react-styleguidist/node_modules/webpack-hot-middleware/client\n. npm ls looks fine, no errors:\n\u251c\u2500\u252c babel@5.8.23\n\u2502 \u251c\u2500\u252c babel-core@5.8.25\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-constant-folding@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-dead-code-elimination@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-eval@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-inline-environment-variables@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-jscript@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-member-expression-literals@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-property-literals@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-proto-to-assign@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-constant-elements@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-display-name@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-remove-console@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-remove-debugger@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-runtime@1.0.7\n\u2502 \u2502 \u251c\u2500\u252c babel-plugin-undeclared-variables-check@1.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 leven@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-undefined-to-void@1.1.6\n\u2502 \u2502 \u251c\u2500\u2500 babylon@5.8.23\n\u2502 \u2502 \u251c\u2500\u2500 bluebird@2.10.1\n\u2502 \u2502 \u251c\u2500\u252c chalk@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 core-js@1.2.0\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u252c detect-indent@3.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 get-stdin@4.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@1.2.0\n\u2502 \u2502 \u251c\u2500\u2500 esutils@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 globals@6.4.1\n\u2502 \u2502 \u251c\u2500\u252c home-or-tmp@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 os-tmpdir@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 user-home@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c is-integer@1.0.6\n\u2502 \u2502 \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 js-tokens@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 json5@0.4.0\n\u2502 \u2502 \u251c\u2500\u252c line-numbers@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 left-pad@0.0.3\n\u2502 \u2502 \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u251c\u2500\u2500 private@0.1.6\n\u2502 \u2502 \u251c\u2500\u252c regenerator@0.8.35\n\u2502 \u2502 \u2502 \u251c\u2500\u252c commoner@0.10.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 commander@2.5.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c glob@4.2.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c minimatch@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 lru-cache@2.7.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 iconv-lite@0.4.12\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 install@0.1.8\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 q@1.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c defs@1.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c alter@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 stable@0.1.5\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-traverse@0.1.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 breakable@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@8001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-fmt@0.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-is@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 stringmap@0.2.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 stringset@0.2.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 tryor@0.1.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 yargs@1.3.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u251c\u2500\u252c recast@0.10.24\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ast-types@0.8.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 through@2.3.8\n\u2502 \u2502 \u251c\u2500\u252c regexpu@1.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima@2.6.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c recast@0.10.33\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-types@0.8.12\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 source-map@0.5.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 regenerate@1.2.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 regjsgen@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c regjsparser@0.1.5\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 jsesc@0.5.0\n\u2502 \u2502 \u251c\u2500\u252c repeating@1.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 resolve@1.1.6\n\u2502 \u2502 \u251c\u2500\u2500 shebang-regex@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c source-map-support@0.2.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c source-map@0.1.32\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 to-fast-properties@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 trim-right@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 try-resolve@1.0.1\n\u2502 \u251c\u2500\u252c chokidar@1.1.0\n\u2502 \u2502 \u251c\u2500\u252c anymatch@1.3.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c micromatch@2.2.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c arr-diff@1.1.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 arr-flatten@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 array-slice@0.2.3\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 array-unique@0.2.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c braces@1.8.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c expand-range@1.8.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c fill-range@2.2.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 is-number@1.1.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isobject@1.0.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 randomatic@1.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 repeat-string@1.5.2\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 lazy-cache@0.2.3\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 preserve@0.2.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 repeat-element@1.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 expand-brackets@0.1.4\n\u2502 \u2502 \u2502   \u251c\u2500\u252c extglob@0.3.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c ansi-green@0.1.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 ansi-wrap@0.1.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-extglob@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 success-symbol@0.1.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 filename-regex@2.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 is-glob@1.1.3\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 kind-of@1.1.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c object.omit@1.1.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c for-own@0.1.3\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 for-in@0.1.4\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 isobject@1.0.2\n\u2502 \u2502 \u2502   \u251c\u2500\u252c parse-glob@3.0.4\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 glob-base@0.3.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-dotfile@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-extglob@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-glob@2.0.0\n\u2502 \u2502 \u2502   \u2514\u2500\u252c regex-cache@0.4.2\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 is-equal-shallow@0.1.3\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 is-primitive@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 arrify@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 async-each@0.1.6\n\u2502 \u2502 \u251c\u2500\u252c fsevents@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 nan@2.0.9\n\u2502 \u2502 \u2502 \u2514\u2500\u252c node-pre-gyp@0.6.9\n\u2502 \u2502 \u2502   \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502   \u251c\u2500\u252c nopt@3.0.3\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 abbrev@1.0.7\n\u2502 \u2502 \u2502   \u251c\u2500\u252c npmlog@1.2.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 ansi@0.3.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c are-we-there-yet@1.0.4\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 delegates@0.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@1.1.13\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c gauge@1.2.2\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 has-unicode@1.0.0\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c lodash.pad@3.1.1\n\u2502 \u2502 \u2502   \u2502   \u2502 \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c lodash._createpadding@3.6.1\n\u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 lodash.repeat@3.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c lodash.padleft@3.1.1\n\u2502 \u2502 \u2502   \u2502   \u2502 \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c lodash._createpadding@3.6.1\n\u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 lodash.repeat@3.0.1\n\u2502 \u2502 \u2502   \u2502   \u2514\u2500\u252c lodash.padright@3.1.1\n\u2502 \u2502 \u2502   \u2502     \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502 \u2502   \u2502     \u2514\u2500\u252c lodash._createpadding@3.6.1\n\u2502 \u2502 \u2502   \u2502       \u2514\u2500\u2500 lodash.repeat@3.0.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c rc@1.1.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 deep-extend@0.2.11\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 ini@1.3.4\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 minimist@1.1.2\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 strip-json-comments@0.1.3\n\u2502 \u2502 \u2502   \u251c\u2500\u252c request@2.60.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 aws-sign2@0.5.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c bl@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@2.0.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 process-nextick-args@1.0.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 util-deprecate@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 caseless@0.11.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c combined-stream@1.0.5\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 extend@3.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 forever-agent@0.6.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c form-data@1.0.0-rc2\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 async@1.4.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c har-validator@1.8.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 bluebird@2.9.34\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c chalk@1.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c commander@2.8.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c is-my-json-valid@2.12.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 generate-function@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u252c generate-object-property@1.2.0\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-property@1.0.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 jsonpointer@1.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 xtend@4.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c hawk@3.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 boom@2.8.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 cryptiles@2.0.4\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 hoek@2.14.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 sntp@1.0.9\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c http-signature@0.11.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 asn1@0.1.11\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 assert-plus@0.1.5\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 ctype@0.5.3\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 isstream@0.1.2\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 json-stringify-safe@5.0.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c mime-types@2.1.3\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.15.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 node-uuid@1.4.3\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 oauth-sign@0.8.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 qs@4.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 stringstream@0.0.4\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 tough-cookie@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 tunnel-agent@0.4.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c rimraf@2.4.2\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c glob@5.0.14\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.0\n\u2502 \u2502 \u2502   \u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502   \u2502   \u2514\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 semver@5.0.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c tar@2.1.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 block-stream@0.0.8\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c fstream@1.0.7\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u252c tar-pack@2.0.0\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 debug@0.7.4\n\u2502 \u2502 \u2502     \u251c\u2500\u252c fstream@0.1.31\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502     \u251c\u2500\u252c fstream-ignore@0.0.7\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502     \u2502 \u2514\u2500\u252c minimatch@0.2.14\n\u2502 \u2502 \u2502     \u2502   \u251c\u2500\u2500 lru-cache@2.6.5\n\u2502 \u2502 \u2502     \u2502   \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 graceful-fs@1.2.3\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 once@1.1.1\n\u2502 \u2502 \u2502     \u251c\u2500\u252c readable-stream@1.0.33\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 rimraf@2.2.8\n\u2502 \u2502 \u2502     \u251c\u2500\u252c tar@0.1.20\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 block-stream@0.0.8\n\u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 uid-number@0.0.3\n\u2502 \u2502 \u251c\u2500\u2500 glob-parent@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c is-binary-path@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 binary-extensions@1.3.1\n\u2502 \u2502 \u251c\u2500\u2500 is-glob@2.0.0\n\u2502 \u2502 \u2514\u2500\u252c readdirp@2.0.0\n\u2502 \u2502   \u251c\u2500\u2500 graceful-fs@4.1.2\n\u2502 \u2502   \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502   \u2514\u2500\u252c readable-stream@2.0.2\n\u2502 \u2502     \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502     \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502     \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502     \u251c\u2500\u2500 process-nextick-args@1.0.3\n\u2502 \u2502     \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502     \u2514\u2500\u2500 util-deprecate@1.0.1\n\u2502 \u251c\u2500\u252c commander@2.8.1\n\u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1\n\u2502 \u251c\u2500\u2500 convert-source-map@1.1.1\n\u2502 \u251c\u2500\u2500 fs-readdir-recursive@0.1.2\n\u2502 \u251c\u2500\u252c glob@5.0.15\n\u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u251c\u2500\u252c minimatch@3.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u251c\u2500\u2500 lodash@3.10.1\n\u2502 \u251c\u2500\u252c output-file-sync@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.0\n\u2502 \u251c\u2500\u2500 path-exists@1.0.0\n\u2502 \u251c\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u251c\u2500\u2500 slash@1.0.0\n\u2502 \u2514\u2500\u252c source-map@0.4.4\n\u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u251c\u2500\u252c babel-eslint@4.1.3\n\u2502 \u251c\u2500\u2500 acorn-to-esprima@1.0.4\n\u2502 \u251c\u2500\u252c babel-core@5.8.25\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-constant-folding@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-dead-code-elimination@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-eval@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-inline-environment-variables@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-jscript@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-member-expression-literals@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-property-literals@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-proto-to-assign@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-constant-elements@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-display-name@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-remove-console@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-remove-debugger@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-runtime@1.0.7\n\u2502 \u2502 \u251c\u2500\u252c babel-plugin-undeclared-variables-check@1.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 leven@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-undefined-to-void@1.1.6\n\u2502 \u2502 \u251c\u2500\u2500 babylon@5.8.23\n\u2502 \u2502 \u251c\u2500\u2500 bluebird@2.10.1\n\u2502 \u2502 \u251c\u2500\u252c chalk@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 convert-source-map@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 core-js@1.2.0\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u252c detect-indent@3.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 get-stdin@4.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@1.2.0\n\u2502 \u2502 \u251c\u2500\u2500 esutils@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 fs-readdir-recursive@0.1.2\n\u2502 \u2502 \u251c\u2500\u2500 globals@6.4.1\n\u2502 \u2502 \u251c\u2500\u252c home-or-tmp@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 os-tmpdir@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 user-home@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c is-integer@1.0.6\n\u2502 \u2502 \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 js-tokens@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 json5@0.4.0\n\u2502 \u2502 \u251c\u2500\u252c line-numbers@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 left-pad@0.0.3\n\u2502 \u2502 \u251c\u2500\u2500 lodash@3.10.1\n\u2502 \u2502 \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c output-file-sync@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.0\n\u2502 \u2502 \u251c\u2500\u2500 path-exists@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 private@0.1.6\n\u2502 \u2502 \u251c\u2500\u252c regenerator@0.8.35\n\u2502 \u2502 \u2502 \u251c\u2500\u252c commoner@0.10.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 commander@2.5.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c glob@4.2.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c minimatch@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 lru-cache@2.7.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 iconv-lite@0.4.12\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 install@0.1.8\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 q@1.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c defs@1.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c alter@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 stable@0.1.5\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-traverse@0.1.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 breakable@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@8001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-fmt@0.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-is@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 stringmap@0.2.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 stringset@0.2.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 tryor@0.1.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 yargs@1.3.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u251c\u2500\u252c recast@0.10.24\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ast-types@0.8.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 through@2.3.8\n\u2502 \u2502 \u251c\u2500\u252c regexpu@1.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima@2.6.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c recast@0.10.33\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-types@0.8.12\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 source-map@0.5.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 regenerate@1.2.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 regjsgen@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c regjsparser@0.1.5\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 jsesc@0.5.0\n\u2502 \u2502 \u251c\u2500\u252c repeating@1.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 resolve@1.1.6\n\u2502 \u2502 \u251c\u2500\u2500 shebang-regex@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 slash@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c source-map@0.4.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c source-map-support@0.2.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c source-map@0.1.32\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 to-fast-properties@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 trim-right@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 try-resolve@1.0.1\n\u2502 \u251c\u2500\u252c lodash.assign@3.2.0\n\u2502 \u2502 \u251c\u2500\u252c lodash._baseassign@3.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash._basecopy@3.0.1\n\u2502 \u2502 \u251c\u2500\u252c lodash._createassigner@3.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._isiterateecall@3.0.9\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash.restparam@3.6.1\n\u2502 \u2502 \u2514\u2500\u252c lodash.keys@3.1.2\n\u2502 \u2502   \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502 \u2502   \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502 \u2502   \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u2514\u2500\u252c lodash.pick@3.1.0\n\u2502   \u251c\u2500\u252c lodash._baseflatten@3.1.4\n\u2502   \u2502 \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502   \u2502 \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502   \u251c\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502   \u251c\u2500\u2500 lodash._pickbyarray@3.0.2\n\u2502   \u251c\u2500\u252c lodash._pickbycallback@3.0.0\n\u2502   \u2502 \u251c\u2500\u2500 lodash._basefor@3.0.2\n\u2502   \u2502 \u2514\u2500\u252c lodash.keysin@3.0.8\n\u2502   \u2502   \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502   \u2502   \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502   \u2514\u2500\u2500 lodash.restparam@3.6.1\n\u251c\u2500\u2500 babel-plugin-flow-comments@1.0.9\n\u251c\u2500\u252c color@0.10.1\n\u2502 \u251c\u2500\u2500 color-convert@0.5.3\n\u2502 \u2514\u2500\u252c color-string@0.3.0\n\u2502   \u2514\u2500\u2500 color-name@1.0.1\n\u251c\u2500\u252c component-playground@0.1.1\n\u2502 \u2514\u2500\u252c babel-core@5.8.25\n\u2502   \u251c\u2500\u2500 babel-plugin-constant-folding@1.0.1\n\u2502   \u251c\u2500\u2500 babel-plugin-dead-code-elimination@1.0.2\n\u2502   \u251c\u2500\u2500 babel-plugin-eval@1.0.1\n\u2502   \u251c\u2500\u2500 babel-plugin-inline-environment-variables@1.0.1\n\u2502   \u251c\u2500\u2500 babel-plugin-jscript@1.0.4\n\u2502   \u251c\u2500\u2500 babel-plugin-member-expression-literals@1.0.1\n\u2502   \u251c\u2500\u2500 babel-plugin-property-literals@1.0.1\n\u2502   \u251c\u2500\u2500 babel-plugin-proto-to-assign@1.0.4\n\u2502   \u251c\u2500\u2500 babel-plugin-react-constant-elements@1.0.3\n\u2502   \u251c\u2500\u2500 babel-plugin-react-display-name@1.0.3\n\u2502   \u251c\u2500\u2500 babel-plugin-remove-console@1.0.1\n\u2502   \u251c\u2500\u2500 babel-plugin-remove-debugger@1.0.1\n\u2502   \u251c\u2500\u2500 babel-plugin-runtime@1.0.7\n\u2502   \u251c\u2500\u252c babel-plugin-undeclared-variables-check@1.0.2\n\u2502   \u2502 \u2514\u2500\u2500 leven@1.0.2\n\u2502   \u251c\u2500\u2500 babel-plugin-undefined-to-void@1.1.6\n\u2502   \u251c\u2500\u2500 babylon@5.8.23\n\u2502   \u251c\u2500\u2500 bluebird@2.10.1\n\u2502   \u251c\u2500\u252c chalk@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502   \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502   \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502   \u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502   \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502   \u251c\u2500\u2500 convert-source-map@1.1.1\n\u2502   \u251c\u2500\u2500 core-js@1.2.0\n\u2502   \u251c\u2500\u252c debug@2.2.0\n\u2502   \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502   \u251c\u2500\u252c detect-indent@3.0.1\n\u2502   \u2502 \u251c\u2500\u2500 get-stdin@4.0.1\n\u2502   \u2502 \u2514\u2500\u2500 minimist@1.2.0\n\u2502   \u251c\u2500\u2500 esutils@2.0.2\n\u2502   \u251c\u2500\u2500 fs-readdir-recursive@0.1.2\n\u2502   \u251c\u2500\u2500 globals@6.4.1\n\u2502   \u251c\u2500\u252c home-or-tmp@1.0.0\n\u2502   \u2502 \u251c\u2500\u2500 os-tmpdir@1.0.1\n\u2502   \u2502 \u2514\u2500\u2500 user-home@1.1.1\n\u2502   \u251c\u2500\u252c is-integer@1.0.6\n\u2502   \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502   \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502   \u251c\u2500\u2500 js-tokens@1.0.1\n\u2502   \u251c\u2500\u2500 json5@0.4.0\n\u2502   \u251c\u2500\u252c line-numbers@0.2.0\n\u2502   \u2502 \u2514\u2500\u2500 left-pad@0.0.3\n\u2502   \u251c\u2500\u2500 lodash@3.10.1\n\u2502   \u251c\u2500\u252c minimatch@2.0.10\n\u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502   \u251c\u2500\u252c output-file-sync@1.1.1\n\u2502   \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502   \u2502 \u2514\u2500\u2500 xtend@4.0.0\n\u2502   \u251c\u2500\u2500 path-exists@1.0.0\n\u2502   \u251c\u2500\u2500 path-is-absolute@1.0.0\n\u2502   \u251c\u2500\u2500 private@0.1.6\n\u2502   \u251c\u2500\u252c regenerator@0.8.35\n\u2502   \u2502 \u251c\u2500\u252c commoner@0.10.3\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 commander@2.5.1\n\u2502   \u2502 \u2502 \u251c\u2500\u252c glob@4.2.2\n\u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c minimatch@1.0.0\n\u2502   \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 lru-cache@2.7.0\n\u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sigmund@1.0.1\n\u2502   \u2502 \u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502   \u2502 \u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 iconv-lite@0.4.12\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 install@0.1.8\n\u2502   \u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 q@1.1.2\n\u2502   \u2502 \u251c\u2500\u252c defs@1.1.0\n\u2502   \u2502 \u2502 \u251c\u2500\u252c alter@0.2.0\n\u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 stable@0.1.5\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 ast-traverse@0.1.1\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 breakable@1.0.0\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@8001.1001.0-dev-harmony-fb\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 simple-fmt@0.1.0\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 simple-is@0.2.0\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 stringmap@0.2.2\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 stringset@0.2.1\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 tryor@0.1.2\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 yargs@1.3.3\n\u2502   \u2502 \u251c\u2500\u2500 esprima-fb@15001.1.0-dev-harmony-fb\n\u2502   \u2502 \u251c\u2500\u252c recast@0.10.24\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 ast-types@0.8.5\n\u2502   \u2502 \u2514\u2500\u2500 through@2.3.8\n\u2502   \u251c\u2500\u252c regexpu@1.3.0\n\u2502   \u2502 \u251c\u2500\u2500 esprima@2.6.0\n\u2502   \u2502 \u251c\u2500\u252c recast@0.10.33\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 ast-types@0.8.12\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 source-map@0.5.1\n\u2502   \u2502 \u251c\u2500\u2500 regenerate@1.2.1\n\u2502   \u2502 \u251c\u2500\u2500 regjsgen@0.2.0\n\u2502   \u2502 \u2514\u2500\u252c regjsparser@0.1.5\n\u2502   \u2502   \u2514\u2500\u2500 jsesc@0.5.0\n\u2502   \u251c\u2500\u252c repeating@1.1.3\n\u2502   \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502   \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502   \u251c\u2500\u2500 resolve@1.1.6\n\u2502   \u251c\u2500\u2500 shebang-regex@1.0.0\n\u2502   \u251c\u2500\u2500 slash@1.0.0\n\u2502   \u251c\u2500\u252c source-map@0.4.4\n\u2502   \u2502 \u2514\u2500\u2500 amdefine@1.0.0\n\u2502   \u251c\u2500\u252c source-map-support@0.2.10\n\u2502   \u2502 \u2514\u2500\u252c source-map@0.1.32\n\u2502   \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502   \u251c\u2500\u2500 to-fast-properties@1.0.1\n\u2502   \u251c\u2500\u2500 trim-right@1.0.1\n\u2502   \u2514\u2500\u2500 try-resolve@1.0.1\n\u251c\u2500\u252c eslint@1.5.1\n\u2502 \u251c\u2500\u252c chalk@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u251c\u2500\u252c concat-stream@1.5.0\n\u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u251c\u2500\u252c readable-stream@2.0.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 process-nextick-args@1.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 util-deprecate@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 typedarray@0.0.6\n\u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u251c\u2500\u252c doctrine@0.7.0\n\u2502 \u2502 \u251c\u2500\u2500 esutils@1.1.6\n\u2502 \u2502 \u2514\u2500\u2500 isarray@0.0.1\n\u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u251c\u2500\u252c escope@3.2.0\n\u2502 \u2502 \u251c\u2500\u252c es6-map@0.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 d@0.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c es5-ext@0.10.7\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 es6-symbol@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c es6-iterator@0.1.3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 es6-symbol@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es6-set@0.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es6-symbol@0.1.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 event-emitter@0.3.3\n\u2502 \u2502 \u251c\u2500\u252c es6-weak-map@0.1.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 d@0.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es5-ext@0.10.7\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es6-iterator@0.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 es6-symbol@2.0.1\n\u2502 \u2502 \u251c\u2500\u2500 esrecurse@3.1.1\n\u2502 \u2502 \u2514\u2500\u2500 estraverse@3.1.0\n\u2502 \u251c\u2500\u2500 espree@2.2.5\n\u2502 \u251c\u2500\u2500 estraverse@4.1.0\n\u2502 \u251c\u2500\u2500 estraverse-fb@1.3.1\n\u2502 \u251c\u2500\u252c file-entry-cache@1.2.4\n\u2502 \u2502 \u251c\u2500\u252c flat-cache@1.0.9\n\u2502 \u2502 \u2502 \u251c\u2500\u252c del@2.0.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c globby@3.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c array-union@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 array-uniq@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 arrify@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 is-path-cwd@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c is-path-in-cwd@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 is-path-inside@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 pify@2.2.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c pinkie-promise@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 pinkie@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 rimraf@2.4.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 graceful-fs@4.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c read-json-sync@1.1.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 write@0.2.1\n\u2502 \u2502 \u2514\u2500\u2500 object-assign@4.0.1\n\u2502 \u251c\u2500\u252c glob@5.0.15\n\u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u251c\u2500\u2500 globals@8.10.0\n\u2502 \u251c\u2500\u252c handlebars@4.0.3\n\u2502 \u2502 \u251c\u2500\u2500 async@1.4.2\n\u2502 \u2502 \u251c\u2500\u252c optimist@0.6.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 minimist@0.0.10\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 wordwrap@0.0.3\n\u2502 \u2502 \u251c\u2500\u252c source-map@0.4.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u2514\u2500\u252c uglify-js@2.4.24\n\u2502 \u2502   \u251c\u2500\u2500 async@0.2.10\n\u2502 \u2502   \u251c\u2500\u252c source-map@0.1.34\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 uglify-to-browserify@1.0.2\n\u2502 \u2502   \u2514\u2500\u252c yargs@3.5.4\n\u2502 \u2502     \u251c\u2500\u2500 camelcase@1.2.1\n\u2502 \u2502     \u251c\u2500\u2500 decamelize@1.0.0\n\u2502 \u2502     \u251c\u2500\u2500 window-size@0.1.0\n\u2502 \u2502     \u2514\u2500\u2500 wordwrap@0.0.2\n\u2502 \u251c\u2500\u252c inquirer@0.9.0\n\u2502 \u2502 \u251c\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 cli-width@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 figures@1.4.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash@3.10.1\n\u2502 \u2502 \u251c\u2500\u252c readline2@0.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 mute-stream@0.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u252c strip-ansi@2.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 ansi-regex@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c run-async@0.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 rx-lite@2.5.2\n\u2502 \u2502 \u251c\u2500\u2500 strip-ansi@3.0.0\n\u2502 \u2502 \u2514\u2500\u2500 through@2.3.8\n\u2502 \u251c\u2500\u252c is-my-json-valid@2.12.2\n\u2502 \u2502 \u251c\u2500\u2500 generate-function@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c generate-object-property@1.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 is-property@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 jsonpointer@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.0\n\u2502 \u251c\u2500\u252c is-resolvable@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 tryit@1.0.1\n\u2502 \u251c\u2500\u252c js-yaml@3.4.2\n\u2502 \u2502 \u251c\u2500\u252c argparse@1.0.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash@3.10.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 sprintf-js@1.0.3\n\u2502 \u2502 \u2514\u2500\u2500 esprima@2.2.0\n\u2502 \u251c\u2500\u252c lodash.clonedeep@3.0.2\n\u2502 \u2502 \u251c\u2500\u252c lodash._baseclone@3.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._arraycopy@3.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._arrayeach@3.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c lodash._baseassign@3.2.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash._basecopy@3.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._basefor@3.0.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u252c lodash.keys@3.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 lodash.isarguments@3.0.4\n\u2502 \u2502 \u2514\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502 \u251c\u2500\u252c lodash.merge@3.3.2\n\u2502 \u2502 \u251c\u2500\u2500 lodash._arraycopy@3.0.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash._arrayeach@3.0.0\n\u2502 \u2502 \u251c\u2500\u252c lodash._createassigner@3.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._isiterateecall@3.0.9\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash.restparam@3.6.1\n\u2502 \u2502 \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502 \u2502 \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502 \u2502 \u251c\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u2502 \u251c\u2500\u252c lodash.isplainobject@3.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash._basefor@3.0.2\n\u2502 \u2502 \u251c\u2500\u2500 lodash.istypedarray@3.0.2\n\u2502 \u2502 \u251c\u2500\u2500 lodash.keys@3.1.2\n\u2502 \u2502 \u251c\u2500\u2500 lodash.keysin@3.0.8\n\u2502 \u2502 \u2514\u2500\u252c lodash.toplainobject@3.0.0\n\u2502 \u2502   \u2514\u2500\u2500 lodash._basecopy@3.0.1\n\u2502 \u251c\u2500\u252c lodash.omit@3.1.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash._arraymap@3.0.0\n\u2502 \u2502 \u251c\u2500\u252c lodash._basedifference@3.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._baseindexof@3.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._cacheindexof@3.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c lodash._createcache@3.1.2\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 lodash._getnative@3.9.1\n\u2502 \u2502 \u251c\u2500\u252c lodash._baseflatten@3.1.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u2502 \u251c\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502 \u2502 \u251c\u2500\u2500 lodash._pickbyarray@3.0.2\n\u2502 \u2502 \u251c\u2500\u252c lodash._pickbycallback@3.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash._basefor@3.0.2\n\u2502 \u2502 \u251c\u2500\u252c lodash.keysin@3.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u2502 \u2514\u2500\u2500 lodash.restparam@3.6.1\n\u2502 \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u251c\u2500\u2500 object-assign@2.1.1\n\u2502 \u251c\u2500\u252c optionator@0.5.0\n\u2502 \u2502 \u251c\u2500\u2500 deep-is@0.1.3\n\u2502 \u2502 \u251c\u2500\u2500 fast-levenshtein@1.0.7\n\u2502 \u2502 \u251c\u2500\u2500 levn@0.2.5\n\u2502 \u2502 \u251c\u2500\u2500 prelude-ls@1.1.2\n\u2502 \u2502 \u251c\u2500\u2500 type-check@0.3.1\n\u2502 \u2502 \u2514\u2500\u2500 wordwrap@0.0.3\n\u2502 \u251c\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u251c\u2500\u2500 path-is-inside@1.0.1\n\u2502 \u251c\u2500\u2500 shelljs@0.3.0\n\u2502 \u251c\u2500\u2500 strip-json-comments@1.0.4\n\u2502 \u251c\u2500\u2500 text-table@0.2.0\n\u2502 \u251c\u2500\u252c to-double-quotes@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 get-stdin@3.0.2\n\u2502 \u2502 \u2514\u2500\u252c meow@3.3.0\n\u2502 \u2502   \u251c\u2500\u252c camelcase-keys@1.0.0\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 camelcase@1.2.1\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 map-obj@1.0.1\n\u2502 \u2502   \u251c\u2500\u252c indent-string@1.2.2\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 get-stdin@4.0.1\n\u2502 \u2502   \u2502 \u2514\u2500\u252c repeating@1.1.3\n\u2502 \u2502   \u2502   \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502   \u2502     \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 minimist@1.2.0\n\u2502 \u2502   \u2514\u2500\u2500 object-assign@3.0.0\n\u2502 \u251c\u2500\u252c to-single-quotes@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 get-stdin@3.0.2\n\u2502 \u2502 \u2514\u2500\u252c meow@3.3.0\n\u2502 \u2502   \u251c\u2500\u252c camelcase-keys@1.0.0\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 camelcase@1.2.1\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 map-obj@1.0.1\n\u2502 \u2502   \u251c\u2500\u252c indent-string@1.2.2\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 get-stdin@4.0.1\n\u2502 \u2502   \u2502 \u2514\u2500\u252c repeating@1.1.3\n\u2502 \u2502   \u2502   \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502   \u2502     \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 minimist@1.2.0\n\u2502 \u2502   \u2514\u2500\u2500 object-assign@3.0.0\n\u2502 \u251c\u2500\u2500 user-home@1.1.1\n\u2502 \u2514\u2500\u2500 xml-escape@1.0.0\n\u251c\u2500\u2500 eslint-plugin-react@3.4.2\n\u251c\u2500\u252c hapi@10.1.0\n\u2502 \u251c\u2500\u2500 accept@1.1.0\n\u2502 \u251c\u2500\u2500 ammo@1.0.1\n\u2502 \u251c\u2500\u2500 boom@2.9.0\n\u2502 \u251c\u2500\u2500 call@2.0.2\n\u2502 \u251c\u2500\u2500 catbox@6.0.0\n\u2502 \u251c\u2500\u2500 catbox-memory@1.1.2\n\u2502 \u251c\u2500\u2500 cryptiles@2.0.5\n\u2502 \u251c\u2500\u252c heavy@3.0.0\n\u2502 \u2502 \u2514\u2500\u252c joi@5.1.0\n\u2502 \u2502   \u251c\u2500\u2500 isemail@1.2.0\n\u2502 \u2502   \u2514\u2500\u2500 moment@2.10.6\n\u2502 \u251c\u2500\u2500 hoek@2.16.3\n\u2502 \u251c\u2500\u2500 iron@2.1.3\n\u2502 \u251c\u2500\u2500 items@1.1.0\n\u2502 \u251c\u2500\u252c joi@6.6.1\n\u2502 \u2502 \u251c\u2500\u2500 isemail@1.1.1\n\u2502 \u2502 \u2514\u2500\u2500 moment@2.10.6\n\u2502 \u251c\u2500\u2500 kilt@1.1.1\n\u2502 \u251c\u2500\u252c mimos@2.0.2\n\u2502 \u2502 \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u251c\u2500\u2500 peekaboo@1.0.0\n\u2502 \u251c\u2500\u2500 qs@4.0.0\n\u2502 \u251c\u2500\u2500 shot@1.6.1\n\u2502 \u251c\u2500\u2500 statehood@2.1.1\n\u2502 \u251c\u2500\u252c subtext@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 content@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c pez@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 b64@2.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u252c nigel@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 vise@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 wreck@6.2.0\n\u2502 \u2514\u2500\u2500 topo@1.0.3\n\u251c\u2500\u252c html-webpack-plugin@1.6.1\n\u2502 \u251c\u2500\u2500 bluebird@2.10.1\n\u2502 \u251c\u2500\u2500 blueimp-tmpl@2.5.5\n\u2502 \u251c\u2500\u252c html-minifier@0.7.2\n\u2502 \u2502 \u251c\u2500\u252c change-case@2.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 camel-case@1.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 constant-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 dot-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-lower-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-upper-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lower-case@1.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lower-case-first@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 param-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 pascal-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 path-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 sentence-case@1.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 snake-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 swap-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 title-case@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 upper-case@1.1.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 upper-case-first@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c clean-css@3.1.9\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 commander@2.6.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c source-map@0.1.43\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c cli@0.6.6\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 exit@0.1.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c glob@3.2.11\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u252c minimatch@0.3.0\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 lru-cache@2.7.0\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u2502 \u251c\u2500\u252c concat-stream@1.4.10\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c readable-stream@1.1.13\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 typedarray@0.0.6\n\u2502 \u2502 \u251c\u2500\u2500 relateurl@0.2.6\n\u2502 \u2502 \u2514\u2500\u252c uglify-js@2.4.24\n\u2502 \u2502   \u251c\u2500\u2500 async@0.2.10\n\u2502 \u2502   \u251c\u2500\u252c source-map@0.1.34\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 uglify-to-browserify@1.0.2\n\u2502 \u2502   \u2514\u2500\u252c yargs@3.5.4\n\u2502 \u2502     \u251c\u2500\u2500 camelcase@1.2.1\n\u2502 \u2502     \u251c\u2500\u2500 decamelize@1.0.0\n\u2502 \u2502     \u251c\u2500\u2500 window-size@0.1.0\n\u2502 \u2502     \u2514\u2500\u2500 wordwrap@0.0.2\n\u2502 \u2514\u2500\u2500 lodash@3.10.1\n\u251c\u2500\u252c radium@0.14.1\n\u2502 \u251c\u2500\u2500 array-find@1.0.0\n\u2502 \u251c\u2500\u2500 babel-plugin-flow-comments@1.0.9\n\u2502 \u251c\u2500\u2500 exenv@1.2.0\n\u2502 \u251c\u2500\u252c is-plain-object@2.0.1\n\u2502 \u2502 \u2514\u2500\u2500 isobject@1.0.2\n\u2502 \u2514\u2500\u252c rimraf@2.4.3\n\u2502   \u2514\u2500\u252c glob@5.0.15\n\u2502     \u251c\u2500\u252c inflight@1.0.4\n\u2502     \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502     \u251c\u2500\u2500 inherits@2.0.1\n\u2502     \u251c\u2500\u252c minimatch@3.0.0\n\u2502     \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502     \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502     \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502     \u251c\u2500\u252c once@1.3.2\n\u2502     \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502     \u2514\u2500\u2500 path-is-absolute@1.0.0\n\u251c\u2500\u2500 raw-loader@0.5.1\n\u251c\u2500\u252c react@0.13.3\n\u2502 \u2514\u2500\u252c envify@3.4.0\n\u2502   \u251c\u2500\u252c jstransform@10.1.0\n\u2502   \u2502 \u251c\u2500\u2500 base62@0.1.1\n\u2502   \u2502 \u251c\u2500\u2500 esprima-fb@13001.1001.0-dev-harmony-fb\n\u2502   \u2502 \u2514\u2500\u252c source-map@0.1.31\n\u2502   \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502   \u2514\u2500\u2500 through@2.3.8\n\u251c\u2500\u252c react-modal@0.5.0\n\u2502 \u251c\u2500\u2500 element-class@0.2.2\n\u2502 \u2514\u2500\u252c lodash.assign@3.2.0\n\u2502   \u251c\u2500\u252c lodash._baseassign@3.2.0\n\u2502   \u2502 \u2514\u2500\u2500 lodash._basecopy@3.0.1\n\u2502   \u251c\u2500\u252c lodash._createassigner@3.1.1\n\u2502   \u2502 \u251c\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502   \u2502 \u251c\u2500\u2500 lodash._isiterateecall@3.0.9\n\u2502   \u2502 \u2514\u2500\u2500 lodash.restparam@3.6.1\n\u2502   \u2514\u2500\u252c lodash.keys@3.1.2\n\u2502     \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502     \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502     \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u251c\u2500\u252c react-styleguidist@0.1.3\n\u2502 \u251c\u2500\u252c babel-core@5.8.25\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-constant-folding@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-dead-code-elimination@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-eval@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-inline-environment-variables@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-jscript@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-member-expression-literals@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-property-literals@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-proto-to-assign@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-constant-elements@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-react-display-name@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-remove-console@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-remove-debugger@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-runtime@1.0.7\n\u2502 \u2502 \u251c\u2500\u252c babel-plugin-undeclared-variables-check@1.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 leven@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-undefined-to-void@1.1.6\n\u2502 \u2502 \u251c\u2500\u2500 babylon@5.8.23\n\u2502 \u2502 \u251c\u2500\u2500 bluebird@2.10.1\n\u2502 \u2502 \u251c\u2500\u2500 convert-source-map@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 core-js@1.2.0\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u252c detect-indent@3.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 get-stdin@4.0.1\n\u2502 \u2502 \u251c\u2500\u2500 esutils@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 fs-readdir-recursive@0.1.2\n\u2502 \u2502 \u251c\u2500\u2500 globals@6.4.1\n\u2502 \u2502 \u251c\u2500\u252c home-or-tmp@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 os-tmpdir@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 user-home@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c is-integer@1.0.6\n\u2502 \u2502 \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 js-tokens@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 json5@0.4.0\n\u2502 \u2502 \u251c\u2500\u252c line-numbers@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 left-pad@0.0.3\n\u2502 \u2502 \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c output-file-sync@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.0\n\u2502 \u2502 \u251c\u2500\u2500 path-exists@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 private@0.1.6\n\u2502 \u2502 \u251c\u2500\u252c regenerator@0.8.35\n\u2502 \u2502 \u2502 \u251c\u2500\u252c commoner@0.10.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 commander@2.5.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c glob@4.2.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c minimatch@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 lru-cache@2.7.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 iconv-lite@0.4.12\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 install@0.1.8\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 q@1.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c defs@1.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c alter@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 stable@0.1.5\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-traverse@0.1.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 breakable@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@8001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-fmt@0.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-is@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 stringmap@0.2.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 stringset@0.2.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 tryor@0.1.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 yargs@1.3.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u251c\u2500\u252c recast@0.10.24\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ast-types@0.8.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 through@2.3.8\n\u2502 \u2502 \u251c\u2500\u252c regexpu@1.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima@2.6.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c recast@0.10.33\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-types@0.8.12\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 source-map@0.5.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 regenerate@1.2.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 regjsgen@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c regjsparser@0.1.5\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 jsesc@0.5.0\n\u2502 \u2502 \u251c\u2500\u252c repeating@1.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 resolve@1.1.6\n\u2502 \u2502 \u251c\u2500\u2500 shebang-regex@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 slash@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c source-map@0.4.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c source-map-support@0.2.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c source-map@0.1.32\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 to-fast-properties@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 trim-right@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 try-resolve@1.0.1\n\u2502 \u251c\u2500\u252c babel-loader@5.3.2\n\u2502 \u2502 \u251c\u2500\u252c loader-utils@0.2.11\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 big.js@3.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 json5@0.4.0\n\u2502 \u2502 \u2514\u2500\u2500 object-assign@3.0.0\n\u2502 \u251c\u2500\u252c babel-plugin-react-transform@1.0.5\n\u2502 \u2502 \u2514\u2500\u2500 path-parse@1.0.5\n\u2502 \u251c\u2500\u252c chalk@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u251c\u2500\u252c css-loader@0.17.0\n\u2502 \u2502 \u251c\u2500\u252c css-selector-tokenizer@0.5.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 cssesc@0.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 fastparse@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c cssnano@2.6.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c autoprefixer-core@5.2.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 browserslist@0.4.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 caniuse-db@1.0.30000330\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 num2fraction@1.2.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 css-list@0.1.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 decamelize@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 defined@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 indexes-of@1.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-calc@4.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-message-helpers@2.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c reduce-css-calc@1.2.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.1.0\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 reduce-function-call@1.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-colormin@1.2.7\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c colormin@1.0.4\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 css-color-names@0.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c reduce-function-call@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 balanced-match@0.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-convert-values@1.3.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 postcss-value-parser@1.4.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-discard-comments@1.2.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 node-balanced@0.0.14\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-discard-duplicates@1.2.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-discard-empty@1.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-discard-unused@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 flatten@0.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqs@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-filter-plugins@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqid@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-font-family@1.2.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 object-assign@3.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqs@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-merge-idents@1.0.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-merge-longhand@1.0.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-merge-rules@1.3.6\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-minify-font-weight@1.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-minify-selectors@1.5.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 javascript-natural-sort@0.7.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 normalize-selector@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-selector-parser@1.2.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 flatten@0.0.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 uniq@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqs@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-normalize-url@2.1.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 is-absolute-url@2.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c normalize-url@1.3.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 prepend-http@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c query-string@2.4.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 strict-uri-encode@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c sort-keys@1.1.1\n\u2502 \u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 is-plain-obj@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 object-assign@4.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 postcss-value-parser@1.4.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-ordered-values@1.1.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 postcss-value-parser@1.4.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-reduce-idents@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c reduce-function-call@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 balanced-match@0.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-single-charset@0.3.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c fs-extra@0.14.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 jsonfile@2.2.2\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 ncp@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 rimraf@2.4.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-unique-selectors@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 javascript-natural-sort@0.7.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqs@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-zindex@1.1.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c read-file-stdin@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 gather-stream@1.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 write-file-stdout@0.0.2\n\u2502 \u2502 \u251c\u2500\u252c loader-utils@0.2.11\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 big.js@3.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 json5@0.4.0\n\u2502 \u2502 \u251c\u2500\u252c postcss@4.1.16\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es6-promise@2.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 js-base64@2.1.9\n\u2502 \u2502 \u2502 \u2514\u2500\u252c source-map@0.4.4\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-modules-extract-imports@0.0.5\n\u2502 \u2502 \u251c\u2500\u2500 postcss-modules-local-by-default@0.0.12\n\u2502 \u2502 \u251c\u2500\u2500 postcss-modules-scope@0.0.8\n\u2502 \u2502 \u2514\u2500\u2500 source-list-map@0.1.5\n\u2502 \u251c\u2500\u252c express@4.13.3\n\u2502 \u2502 \u251c\u2500\u252c accepts@1.2.13\n\u2502 \u2502 \u2502 \u251c\u2500\u252c mime-types@2.1.7\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 negotiator@0.5.3\n\u2502 \u2502 \u251c\u2500\u2500 array-flatten@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 content-disposition@0.5.0\n\u2502 \u2502 \u251c\u2500\u2500 content-type@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 cookie@0.1.3\n\u2502 \u2502 \u251c\u2500\u2500 cookie-signature@1.0.6\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u2500 depd@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 escape-html@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 etag@1.7.0\n\u2502 \u2502 \u251c\u2500\u252c finalhandler@0.4.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 unpipe@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 fresh@0.3.0\n\u2502 \u2502 \u251c\u2500\u2500 merge-descriptors@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 methods@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c on-finished@2.3.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ee-first@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 parseurl@1.3.0\n\u2502 \u2502 \u251c\u2500\u2500 path-to-regexp@0.1.7\n\u2502 \u2502 \u251c\u2500\u252c proxy-addr@1.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 forwarded@0.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ipaddr.js@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 qs@4.0.0\n\u2502 \u2502 \u251c\u2500\u2500 range-parser@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c send@0.13.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 destroy@1.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c http-errors@1.3.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 mime@1.3.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 statuses@1.2.1\n\u2502 \u2502 \u251c\u2500\u2500 serve-static@1.10.0\n\u2502 \u2502 \u251c\u2500\u252c type-is@1.6.9\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 media-typer@0.3.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c mime-types@2.1.7\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u251c\u2500\u2500 utils-merge@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 vary@1.0.1\n\u2502 \u251c\u2500\u252c extract-text-webpack-plugin@0.8.2\n\u2502 \u2502 \u251c\u2500\u2500 async@1.4.2\n\u2502 \u2502 \u2514\u2500\u252c loader-utils@0.2.11\n\u2502 \u2502   \u251c\u2500\u2500 big.js@3.1.3\n\u2502 \u2502   \u2514\u2500\u2500 json5@0.4.0\n\u2502 \u251c\u2500\u252c findup@0.1.5\n\u2502 \u2502 \u251c\u2500\u2500 colors@0.6.2\n\u2502 \u2502 \u2514\u2500\u2500 commander@2.1.0\n\u2502 \u251c\u2500\u252c glob@5.0.14\n\u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u251c\u2500\u2500 lodash@3.10.1\n\u2502 \u251c\u2500\u2500 marked@0.3.5\n\u2502 \u251c\u2500\u2500 minimist@1.2.0\n\u2502 \u251c\u2500\u252c postcss-advanced-variables@1.0.0\n\u2502 \u2502 \u2514\u2500\u252c postcss@5.0.8\n\u2502 \u2502   \u251c\u2500\u2500 js-base64@2.1.9\n\u2502 \u2502   \u251c\u2500\u2500 source-map@0.5.1\n\u2502 \u2502   \u2514\u2500\u252c supports-color@3.1.1\n\u2502 \u2502     \u2514\u2500\u2500 has-flag@1.0.0\n\u2502 \u251c\u2500\u252c postcss-loader@0.6.0\n\u2502 \u2502 \u251c\u2500\u252c loader-utils@0.2.11\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 big.js@3.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 json5@0.4.0\n\u2502 \u2502 \u2514\u2500\u252c postcss@5.0.8\n\u2502 \u2502   \u251c\u2500\u2500 js-base64@2.1.9\n\u2502 \u2502   \u251c\u2500\u2500 source-map@0.5.1\n\u2502 \u2502   \u2514\u2500\u252c supports-color@3.1.1\n\u2502 \u2502     \u2514\u2500\u2500 has-flag@1.0.0\n\u2502 \u251c\u2500\u252c prettyjson@1.1.3\n\u2502 \u2502 \u2514\u2500\u2500 colors@1.1.2\n\u2502 \u251c\u2500\u252c react-codemirror@0.1.5\n\u2502 \u2502 \u251c\u2500\u2500 classnames@2.1.3\n\u2502 \u2502 \u2514\u2500\u2500 codemirror@5.7.0\n\u2502 \u251c\u2500\u252c react-docgen@2.2.0\n\u2502 \u2502 \u251c\u2500\u2500 async@1.4.2\n\u2502 \u2502 \u251c\u2500\u252c babel-runtime@5.8.25\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 core-js@1.2.0\n\u2502 \u2502 \u251c\u2500\u2500 babylon@5.8.23\n\u2502 \u2502 \u251c\u2500\u252c node-dir@0.1.10\n\u2502 \u2502 \u2502 \u2514\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502   \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c nomnom@1.8.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c chalk@0.4.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ansi-styles@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 has-color@0.1.7\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 strip-ansi@0.1.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 underscore@1.6.0\n\u2502 \u2502 \u2514\u2500\u252c recast@0.10.33\n\u2502 \u2502   \u251c\u2500\u2500 ast-types@0.8.12\n\u2502 \u2502   \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502   \u251c\u2500\u2500 private@0.1.6\n\u2502 \u2502   \u2514\u2500\u2500 source-map@0.5.1\n\u2502 \u251c\u2500\u252c react-tools@0.13.3\n\u2502 \u2502 \u251c\u2500\u252c commoner@0.10.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 commander@2.5.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c glob@4.2.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c minimatch@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 lru-cache@2.7.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 iconv-lite@0.4.12\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 install@0.1.8\n\u2502 \u2502 \u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 private@0.1.6\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 q@1.1.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c recast@0.10.33\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 ast-types@0.8.12\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 source-map@0.5.1\n\u2502 \u2502 \u2514\u2500\u252c jstransform@10.1.0\n\u2502 \u2502   \u251c\u2500\u2500 base62@0.1.1\n\u2502 \u2502   \u251c\u2500\u2500 esprima-fb@13001.1001.0-dev-harmony-fb\n\u2502 \u2502   \u2514\u2500\u252c source-map@0.1.31\n\u2502 \u2502     \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u251c\u2500\u2500 react-transform-catch-errors@0.1.3\n\u2502 \u251c\u2500\u252c react-transform-hmr@1.0.1\n\u2502 \u2502 \u251c\u2500\u252c global@4.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c min-document@2.17.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 dom-walk@0.1.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 process@0.5.2\n\u2502 \u2502 \u2514\u2500\u252c react-proxy@1.1.1\n\u2502 \u2502   \u2514\u2500\u2500 react-deep-force-update@1.0.0\n\u2502 \u251c\u2500\u252c redbox-react@1.0.6\n\u2502 \u2502 \u2514\u2500\u252c error-stack-parser@1.2.3\n\u2502 \u2502   \u2514\u2500\u2500 stackframe@0.3.1\n\u2502 \u251c\u2500\u2500 sanitize.css@2.0.0\n\u2502 \u251c\u2500\u252c style-loader@0.12.4\n\u2502 \u2502 \u2514\u2500\u252c loader-utils@0.2.11\n\u2502 \u2502   \u251c\u2500\u2500 big.js@3.1.3\n\u2502 \u2502   \u2514\u2500\u2500 json5@0.4.0\n\u2502 \u251c\u2500\u252c webpack-dev-middleware@1.2.0\n\u2502 \u2502 \u251c\u2500\u2500 memory-fs@0.2.0\n\u2502 \u2502 \u2514\u2500\u2500 mime@1.3.4\n\u2502 \u2514\u2500\u252c webpack-merge@0.2.0\n\u2502   \u251c\u2500\u252c lodash.isplainobject@3.2.0\n\u2502   \u2502 \u251c\u2500\u2500 lodash._basefor@3.0.2\n\u2502   \u2502 \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502   \u2502 \u2514\u2500\u252c lodash.keysin@3.0.8\n\u2502   \u2502   \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502   \u2514\u2500\u252c lodash.merge@3.3.2\n\u2502     \u251c\u2500\u2500 lodash._arraycopy@3.0.0\n\u2502     \u251c\u2500\u2500 lodash._arrayeach@3.0.0\n\u2502     \u251c\u2500\u252c lodash._createassigner@3.1.1\n\u2502     \u2502 \u251c\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502     \u2502 \u251c\u2500\u2500 lodash._isiterateecall@3.0.9\n\u2502     \u2502 \u2514\u2500\u2500 lodash.restparam@3.6.1\n\u2502     \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502     \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502     \u251c\u2500\u2500 lodash.isarray@3.0.4\n\u2502     \u251c\u2500\u2500 lodash.istypedarray@3.0.2\n\u2502     \u251c\u2500\u2500 lodash.keys@3.1.2\n\u2502     \u251c\u2500\u2500 lodash.keysin@3.0.8\n\u2502     \u2514\u2500\u252c lodash.toplainobject@3.0.0\n\u2502       \u2514\u2500\u2500 lodash._basecopy@3.0.1\n\u251c\u2500\u252c webpack@1.12.2\n\u2502 \u251c\u2500\u2500 async@1.4.2\n\u2502 \u251c\u2500\u2500 clone@1.0.2\n\u2502 \u251c\u2500\u252c enhanced-resolve@0.9.0\n\u2502 \u2502 \u2514\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u251c\u2500\u2500 esprima@2.6.0\n\u2502 \u251c\u2500\u2500 interpret@0.6.6\n\u2502 \u251c\u2500\u2500 memory-fs@0.2.0\n\u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u251c\u2500\u252c node-libs-browser@0.5.3\n\u2502 \u2502 \u251c\u2500\u2500 assert@1.3.0\n\u2502 \u2502 \u251c\u2500\u252c browserify-zlib@0.1.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 pako@0.2.8\n\u2502 \u2502 \u251c\u2500\u252c buffer@3.5.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 base64-js@0.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ieee754@1.1.6\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 is-array@1.0.1\n\u2502 \u2502 \u251c\u2500\u252c console-browserify@1.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 date-now@0.1.4\n\u2502 \u2502 \u251c\u2500\u2500 constants-browserify@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c crypto-browserify@3.2.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 pbkdf2-compat@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ripemd160@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 sha.js@2.2.6\n\u2502 \u2502 \u251c\u2500\u2500 domain-browser@1.1.4\n\u2502 \u2502 \u251c\u2500\u2500 events@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c http-browserify@1.7.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 Base64@0.2.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u251c\u2500\u2500 https-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u2500 os-browserify@0.1.2\n\u2502 \u2502 \u251c\u2500\u2500 path-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u2500 process@0.11.2\n\u2502 \u2502 \u251c\u2500\u2500 punycode@1.3.2\n\u2502 \u2502 \u251c\u2500\u2500 querystring-es3@0.2.1\n\u2502 \u2502 \u251c\u2500\u252c readable-stream@1.1.13\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c stream-browserify@1.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u251c\u2500\u2500 timers-browserify@1.4.1\n\u2502 \u2502 \u251c\u2500\u2500 tty-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u252c url@0.10.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 querystring@0.2.0\n\u2502 \u2502 \u251c\u2500\u252c util@0.10.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2514\u2500\u252c vm-browserify@0.0.4\n\u2502 \u2502   \u2514\u2500\u2500 indexof@0.0.1\n\u2502 \u251c\u2500\u252c optimist@0.6.1\n\u2502 \u2502 \u251c\u2500\u2500 minimist@0.0.10\n\u2502 \u2502 \u2514\u2500\u2500 wordwrap@0.0.3\n\u2502 \u251c\u2500\u252c supports-color@3.1.1\n\u2502 \u2502 \u2514\u2500\u2500 has-flag@1.0.0\n\u2502 \u251c\u2500\u2500 tapable@0.1.9\n\u2502 \u251c\u2500\u252c uglify-js@2.4.24\n\u2502 \u2502 \u251c\u2500\u2500 async@0.2.10\n\u2502 \u2502 \u251c\u2500\u252c source-map@0.1.34\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 uglify-to-browserify@1.0.2\n\u2502 \u2502 \u2514\u2500\u252c yargs@3.5.4\n\u2502 \u2502   \u251c\u2500\u2500 camelcase@1.2.1\n\u2502 \u2502   \u251c\u2500\u2500 decamelize@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 window-size@0.1.0\n\u2502 \u2502   \u2514\u2500\u2500 wordwrap@0.0.2\n\u2502 \u251c\u2500\u252c watchpack@0.2.8\n\u2502 \u2502 \u251c\u2500\u2500 async@0.9.2\n\u2502 \u2502 \u251c\u2500\u252c chokidar@1.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c anymatch@1.3.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c micromatch@2.2.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c arr-diff@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 arr-flatten@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 array-slice@0.2.3\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 array-unique@0.2.1\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c braces@1.8.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c expand-range@1.8.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c fill-range@2.2.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 is-number@1.1.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isobject@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 randomatic@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 repeat-string@1.5.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 lazy-cache@0.2.3\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 preserve@0.2.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 repeat-element@1.1.2\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 expand-brackets@0.1.4\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c extglob@0.3.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c ansi-green@0.1.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 ansi-wrap@0.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-extglob@1.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 success-symbol@0.1.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 filename-regex@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 is-glob@1.1.3\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 kind-of@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c object.omit@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c for-own@0.1.3\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 for-in@0.1.4\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 isobject@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c parse-glob@3.0.4\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 glob-base@0.3.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-dotfile@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-extglob@1.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-glob@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u252c regex-cache@0.4.2\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u2500 is-equal-shallow@0.1.3\n\u2502 \u2502 \u2502 \u2502     \u2514\u2500\u2500 is-primitive@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 arrify@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 async-each@0.1.6\n\u2502 \u2502 \u2502 \u251c\u2500\u252c fsevents@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 nan@2.0.9\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c node-pre-gyp@0.6.9\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c nopt@3.0.3\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 abbrev@1.0.7\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c npmlog@1.2.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 ansi@0.3.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c are-we-there-yet@1.0.4\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 delegates@0.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@1.1.13\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c gauge@1.2.2\n\u2502 \u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 has-unicode@1.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c lodash.pad@3.1.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502 \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c lodash._createpadding@3.6.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 lodash.repeat@3.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c lodash.padleft@3.1.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502 \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c lodash._createpadding@3.6.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 lodash.repeat@3.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2514\u2500\u252c lodash.padright@3.1.1\n\u2502 \u2502 \u2502 \u2502   \u2502     \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502     \u2514\u2500\u252c lodash._createpadding@3.6.1\n\u2502 \u2502 \u2502 \u2502   \u2502       \u2514\u2500\u2500 lodash.repeat@3.0.1\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c rc@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 deep-extend@0.2.11\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 ini@1.3.4\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 minimist@1.1.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 strip-json-comments@0.1.3\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c request@2.60.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 aws-sign2@0.5.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c bl@1.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@2.0.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 process-nextick-args@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 util-deprecate@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 caseless@0.11.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c combined-stream@1.0.5\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@1.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 extend@3.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 forever-agent@0.6.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c form-data@1.0.0-rc2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 async@1.4.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c har-validator@1.8.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 bluebird@2.9.34\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c chalk@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c commander@2.8.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c is-my-json-valid@2.12.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 generate-function@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u252c generate-object-property@1.2.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-property@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 jsonpointer@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 xtend@4.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c hawk@3.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 boom@2.8.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 cryptiles@2.0.4\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 hoek@2.14.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 sntp@1.0.9\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c http-signature@0.11.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 asn1@0.1.11\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 assert-plus@0.1.5\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 ctype@0.5.3\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 isstream@0.1.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 json-stringify-safe@5.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c mime-types@2.1.3\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.15.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 node-uuid@1.4.3\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 oauth-sign@0.8.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 qs@4.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 stringstream@0.0.4\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 tough-cookie@2.0.0\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 tunnel-agent@0.4.1\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c rimraf@2.4.2\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c glob@5.0.14\n\u2502 \u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.0\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c once@1.3.2\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502 \u2502   \u2502   \u2514\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 semver@5.0.1\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u252c tar@2.1.1\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 block-stream@0.0.8\n\u2502 \u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c fstream@1.0.7\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u252c tar-pack@2.0.0\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u2500 debug@0.7.4\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u252c fstream@0.1.31\n\u2502 \u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u252c fstream-ignore@0.0.7\n\u2502 \u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502     \u2502 \u2514\u2500\u252c minimatch@0.2.14\n\u2502 \u2502 \u2502 \u2502     \u2502   \u251c\u2500\u2500 lru-cache@2.6.5\n\u2502 \u2502 \u2502 \u2502     \u2502   \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u2500 graceful-fs@1.2.3\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u2500 once@1.1.1\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u252c readable-stream@1.0.33\n\u2502 \u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u2500 rimraf@2.2.8\n\u2502 \u2502 \u2502 \u2502     \u251c\u2500\u252c tar@0.1.20\n\u2502 \u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 block-stream@0.0.8\n\u2502 \u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2502     \u2514\u2500\u2500 uid-number@0.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 glob-parent@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c is-binary-path@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 binary-extensions@1.3.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-glob@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c readdirp@2.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 graceful-fs@4.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.2.0\n\u2502 \u2502 \u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u252c readable-stream@2.0.2\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 process-nextick-args@1.0.3\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 util-deprecate@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2514\u2500\u252c webpack-core@0.6.7\n\u2502   \u251c\u2500\u2500 source-list-map@0.1.5\n\u2502   \u2514\u2500\u252c source-map@0.4.4\n\u2502     \u2514\u2500\u2500 amdefine@1.0.0\n\u251c\u2500\u252c webpack-dev-server@1.12.0\n\u2502 \u251c\u2500\u252c compression@1.5.2\n\u2502 \u2502 \u251c\u2500\u252c accepts@1.2.13\n\u2502 \u2502 \u2502 \u251c\u2500\u252c mime-types@2.1.7\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 negotiator@0.5.3\n\u2502 \u2502 \u251c\u2500\u2500 bytes@2.1.0\n\u2502 \u2502 \u251c\u2500\u252c compressible@2.0.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u2500 on-headers@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 vary@1.0.1\n\u2502 \u251c\u2500\u2500 connect-history-api-fallback@1.1.0\n\u2502 \u251c\u2500\u252c express@4.13.3\n\u2502 \u2502 \u251c\u2500\u252c accepts@1.2.13\n\u2502 \u2502 \u2502 \u251c\u2500\u252c mime-types@2.1.7\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 negotiator@0.5.3\n\u2502 \u2502 \u251c\u2500\u2500 array-flatten@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 content-disposition@0.5.0\n\u2502 \u2502 \u251c\u2500\u2500 content-type@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 cookie@0.1.3\n\u2502 \u2502 \u251c\u2500\u2500 cookie-signature@1.0.6\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u2500 depd@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 escape-html@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 etag@1.7.0\n\u2502 \u2502 \u251c\u2500\u252c finalhandler@0.4.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 unpipe@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 fresh@0.3.0\n\u2502 \u2502 \u251c\u2500\u2500 merge-descriptors@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 methods@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c on-finished@2.3.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ee-first@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 parseurl@1.3.0\n\u2502 \u2502 \u251c\u2500\u2500 path-to-regexp@0.1.7\n\u2502 \u2502 \u251c\u2500\u252c proxy-addr@1.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 forwarded@0.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ipaddr.js@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 qs@4.0.0\n\u2502 \u2502 \u251c\u2500\u2500 range-parser@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c send@0.13.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 destroy@1.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c http-errors@1.3.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 mime@1.3.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 statuses@1.2.1\n\u2502 \u2502 \u251c\u2500\u2500 serve-static@1.10.0\n\u2502 \u2502 \u251c\u2500\u252c type-is@1.6.9\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 media-typer@0.3.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c mime-types@2.1.7\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u251c\u2500\u2500 utils-merge@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 vary@1.0.1\n\u2502 \u251c\u2500\u252c http-proxy@1.11.2\n\u2502 \u2502 \u251c\u2500\u2500 eventemitter3@1.1.1\n\u2502 \u2502 \u2514\u2500\u2500 requires-port@0.0.1\n\u2502 \u251c\u2500\u252c optimist@0.6.1\n\u2502 \u2502 \u251c\u2500\u2500 minimist@0.0.10\n\u2502 \u2502 \u2514\u2500\u2500 wordwrap@0.0.3\n\u2502 \u251c\u2500\u252c serve-index@1.7.2\n\u2502 \u2502 \u251c\u2500\u252c accepts@1.2.13\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 negotiator@0.5.3\n\u2502 \u2502 \u251c\u2500\u2500 batch@0.5.2\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u2500 escape-html@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c http-errors@1.3.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 statuses@1.2.1\n\u2502 \u2502 \u251c\u2500\u252c mime-types@2.1.7\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u2514\u2500\u2500 parseurl@1.3.0\n\u2502 \u251c\u2500\u252c socket.io@1.3.7\n\u2502 \u2502 \u251c\u2500\u252c debug@2.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.6.2\n\u2502 \u2502 \u251c\u2500\u252c engine.io@1.5.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 base64id@0.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c debug@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.6.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c engine.io-parser@1.2.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 after@0.8.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 arraybuffer.slice@0.0.6\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 base64-arraybuffer@0.1.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 blob@0.0.4\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c has-binary@0.1.6\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 utf8@2.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c ws@0.8.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c bufferutil@1.2.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 bindings@1.2.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 nan@2.0.9\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 options@0.0.6\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 ultron@1.0.2\n\u2502 \u2502 \u2502   \u2514\u2500\u252c utf-8-validate@1.2.1\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 bindings@1.2.1\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 nan@2.0.9\n\u2502 \u2502 \u251c\u2500\u252c has-binary-data@0.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c socket.io-adapter@0.3.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c debug@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.6.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 object-keys@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u252c socket.io-parser@2.2.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 benchmark@1.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 component-emitter@1.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 debug@0.7.4\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 json3@3.2.6\n\u2502 \u2502 \u2514\u2500\u252c socket.io-parser@2.2.4\n\u2502 \u2502   \u251c\u2500\u2500 benchmark@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 component-emitter@1.1.2\n\u2502 \u2502   \u251c\u2500\u2500 debug@0.7.4\n\u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502   \u2514\u2500\u2500 json3@3.2.6\n\u2502 \u251c\u2500\u252c socket.io-client@1.3.7\n\u2502 \u2502 \u251c\u2500\u2500 backo2@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 component-bind@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 component-emitter@1.1.2\n\u2502 \u2502 \u251c\u2500\u2500 debug@0.7.4\n\u2502 \u2502 \u251c\u2500\u252c engine.io-client@1.5.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 component-inherit@0.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c debug@1.0.4\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.6.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c engine.io-parser@1.2.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 after@0.8.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 arraybuffer.slice@0.0.6\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 base64-arraybuffer@0.1.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 blob@0.0.4\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 utf8@2.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c has-cors@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 global@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c parsejson@0.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c better-assert@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 callsite@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c parseqs@0.0.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c better-assert@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 callsite@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c parseuri@0.0.4\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c better-assert@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 callsite@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c ws@0.8.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c bufferutil@1.2.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 bindings@1.2.1\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 nan@2.0.9\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 options@0.0.6\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ultron@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c utf-8-validate@1.2.1\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 bindings@1.2.1\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 nan@2.0.9\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 xmlhttprequest@1.5.0\n\u2502 \u2502 \u251c\u2500\u252c has-binary@0.1.6\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u251c\u2500\u2500 indexof@0.0.1\n\u2502 \u2502 \u251c\u2500\u2500 object-component@0.0.3\n\u2502 \u2502 \u251c\u2500\u252c parseuri@0.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c better-assert@1.0.2\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 callsite@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c socket.io-parser@2.2.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 benchmark@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 json3@3.2.6\n\u2502 \u2502 \u2514\u2500\u2500 to-array@0.1.3\n\u2502 \u251c\u2500\u2500 stream-cache@0.0.2\n\u2502 \u251c\u2500\u252c strip-ansi@3.0.0\n\u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u251c\u2500\u252c supports-color@3.1.1\n\u2502 \u2502 \u2514\u2500\u2500 has-flag@1.0.0\n\u2502 \u2514\u2500\u252c webpack-dev-middleware@1.2.0\n\u2502   \u251c\u2500\u2500 memory-fs@0.2.0\n\u2502   \u2514\u2500\u2500 mime@1.3.4\n\u2514\u2500\u252c webpack-hot-middleware@2.3.0\n  \u2514\u2500\u252c strip-ansi@2.0.1\n    \u2514\u2500\u2500 ansi-regex@1.1.1\nnode_modules/react-styleguidist/node_modules/webpack-hot-middleware does not even exist.\nreact-styleguidist is probably missing the webpack-hot-middleware package, but why?\n. When I move the webpack-hot-middleware manually to that place it works fine..\n. So is this an npm bug, or should this project just use the top-level one?\n. This new line is probably the culprit: https://github.com/sapegin/react-styleguidist/blob/18041bf8919a6605e97bc8205a0ec26b22756531/src/make-webpack-config.js#L107\n. I had webpack-hot-middleware@^2.3.0 installed in root, but then moved it to the styleguidist's node_modules folder as a workaround.\nThis is probably related to #6 as well, so I will try to also have a look at the web.pack config\n. Yes, sorry forgot about this. No more custom shenanigans needed iirc.\n. :+1: Thanks a lot, it works now. Now that the basis is stable I hope to contribute some enhancements!\n. ",
    "Mark-Brightcloud": "\nRestart Terminal(Mac) or whatever shell in your environment.\nAdd FIXFIX in package.json like this:\n   \"scripts\": {\n   \"FIXFIX\": \"webpack --progress --profile --colors --display-error-details --display-cached\",\n   },\nRun this: (Yes, with sudo!)\n   sudo node run FIXFIX\nNow run with your normal build see if it fixed.\n. \n",
    "MaheshakaMudli": "[18:34:19] Error - [webpack] 'dist':\n./~/@microsoft/sp-module-loader/lib/SystemJsWrapper.js\nModule not found: Error: Cannot resolve module 'raw-script' in C:\\Users\\NewsArticleWebPart\\node_modules\\@microsoft\\sp-module-loader\\lib. Can anyone help?\n. ",
    "mik01aj": "I managed to get rid of errors with my files using this config:\njs\nmodule.exports = {\n    rootDir: './app',\n    components: './scripts/ui/[ABCDEFGH]*.jsx', // Using just some of the components\n    updateWebpackConfig: function (webpackConfig) {\n        webpackConfig.module.loaders[0].test = /\\.jsx?$/;\n        webpackConfig.resolve.extensions = ['', '.js', '.jsx', '.json'];\n        console.log('webpackConfig', JSON.stringify(webpackConfig, null, 4));\n        return webpackConfig;\n    },\n};\nBut it still fails with this error:\n```\nERROR in ./~/react-styleguidist/src/components/StyleGuide/StyleGuide.js\nModule build failed: SyntaxError: ......./node_modules/react-styleguidist/src/components/StyleGuide/StyleGuide.js: Unexpected token (7:18)\n   5 |\n   6 | export default class StyleGuide extends Component {\n\n7 |  static propTypes = {\n     |                   ^\n   8 |      title: PropTypes.string.isRequired,\n   9 |      components: PropTypes.array.isRequired\n  10 |  }\n    at Parser.pp.raise (......./node_modules/babel-core/node_modules/babylon/lib/parser/location.js:24:13)\n    at Parser.pp.unexpected (......./node_modules/babel-core/node_modules/babylon/lib/parser/util.js:82:8)\n    at Parser.pp.parseClassProperty (......./node_modules/babel-core/node_modules/babylon/lib/parser/statement.js:624:61)\n    at Parser.parseClassProperty (......./node_modules/babel-core/node_modules/babylon/lib/plugins/flow.js:797:20)\n    at Parser.pp.parseClass (......./node_modules/babel-core/node_modules/babylon/lib/parser/statement.js:567:32)\n    at Parser.pp.parseExprAtom (......./node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:405:19)\n    at Parser.parseExprAtom (......./node_modules/babel-core/node_modules/babylon/lib/plugins/jsx/index.js:412:22)\n    at Parser.pp.parseExprSubscripts (......./node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:236:19)\n    at Parser.pp.parseMaybeUnary (......./node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:217:19)\n    at Parser.pp.parseExprOps (......./node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:163:19)\n    at Parser.pp.parseMaybeConditional (......./node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:145:19)\n    at Parser.pp.parseMaybeAssign (......./node_modules/babel-core/node_modules/babylon/lib/parser/expression.js:112:19)\n    at Parser.pp.parseExport (......./node_modules/babel-core/node_modules/babylon/lib/parser/statement.js:682:21)\n    at Parser.parseExport (......./node_modules/babel-core/node_modules/babylon/lib/plugins/flow.js:679:20)\n    at Parser.pp.parseStatement (......./node_modules/babel-core/node_modules/babylon/lib/parser/statement.js:115:90)\n    at Parser.parseStatement (......./node_modules/babel-core/node_modules/babylon/lib/plugins/flow.js:621:22)\n @ ./~/react-styleguidist/src/components/StyleGuide/index.js 9:20-46\n```\n. @sapegin, thanks for your work! I can now run styleguidist, and it can display the props for one component, but when I add another one, it fails:\n\n\nI think it's because of the enum in the other component's propTypes. Here are the propTypes of the relevant component:\npropTypes:\u00a0{\n        issue: React.PropTypes.object,\n        width: React.PropTypes.oneOf([26, 40, 55, 70, 110, 155, 190, 265]),\n        style: React.PropTypes.object,\n    },\n. Or maybe a glob pattern? See: https://github.com/isaacs/node-glob#options\nThen, instead of:\ncomponentSources = glob.sync(path.join(config.rootDir, config.components));\nyou could do:\ncomponentSources = glob.sync(config.components, {\n    cwd: config.rootDir,\n    ignore: config.ignorePatterns,\n});\n. And maybe even this feature is not necessary at all as you can use a function directly in the config. We'd just need to add an example to the README.\n. imho skipComponentsWithoutReadme name is not so relevant, because the Readme.md name can be changed in the config to anything else. We have getExampleFilename in config, so why not skipComponentsWithoutExample (or ...examples - the pluralization is not consistent anyway)?\n. I guess this ticket can be closed now.\n. Why would this be better than ignoring the components in the styleguide config?\n. @AoDev this doesn't answer my question. I didn't ask you why we need ignoring components, I asked you why do you want to do it in the component file instead of the styleguide config (see the comments above for details on how to do it).\n. Well, yes, but the same is also true for most build, or test, or lint configs. I still think it's fine as it is.\n. @reintroducing I opened #28 to discuss your last point.\n. Quoting first post:\n\nAbility to toggle showing/hiding code examples\n\nWill be done in #86.\n\nAbility to somehow group components with a navigation so you can show/hide only what section you want to see\n\nSo #28 didn't really end up with grouping, but maybe #98 will do.\nSo, as these issues are reported elsewhere, I close this one.\n. I don't have getDefaultProps in this component. What else is checked?\n. A ha! I got it!\nSo well, actually my enum values were generated from some other data. This is the output from react-docgen:\n{\n  \"description\": \"\",\n  \"props\": {\n    \"issue\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"computed\": true,\n        \"value\": \"_.map(_.keys(coverWidths), _.parseInt)\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"style\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n}\ncoverWidths is a variable defined in that file. In runtime it's generated correctly, but react-docgen can't parse it.\n. :+1: This is currently the number-one issue for my styleguide.\nI just get this error reported:\n\nAnd I don't see any docs for my components. Just one of them works. I'd like not to go through the whole codebase and fix it. \nBtw, using the filename or a counter as the key would probably make this bug less annoying. And this seems a quick fix.\n. No. I don't really know how and where to add it.\nI did some dirty workaround just for me:\n\n. +1. It looks ugly :)\n\n. Much better than it was. Thanks :+1: \n. Have you tried https://github.com/antimatter15/codemirror-jsx? // EDIT: I see that the timbur's version that you tried is actually a fork of this one. So maybe it's not even worth trying...\nAnd https://github.com/codemirror/CodeMirror/issues/3122 is still open, we might get something useful from there later.\nAlso notice that on http://gaearon.github.io/react-hot-loader/ they do have CodeMirror with proper JSX support, so it's definitely possible. That's how they init the CodeMirror:\nthis.editor = CodeMirror.fromTextArea(this.refs.editor.getDOMNode(), {\n      mode: 'javascript',\n      lineNumbers: false,\n      lineWrapping: true,\n      smartIndent: false,  // javascript mode does bad things with jsx indents\n      matchBrackets: true,\n      theme: 'solarized-light',\n      readOnly: this.props.readOnly,\n      tabWidth: 2\n    });\nAnd if all fails, I see a workaround:\n.cm-error { background: none; }\n. I think not. Maybe at some point we'll need plain HTML code blocks, but that's a different story.\n. I thought more about it, and it should be actually possible to infer the right context from the example code (rather than specifying the context regex upfront, for all examples at once). And for sure this would also be the most user-friendly way to do it. What do you think?\n. Well, I researched this a bit, but apparently webpack doesn't expose its internal behaviour of creating a require contect containing whatever the module needs. The context API lets me create a context giving a regex, so I could look for /require\\s*\\((.*)\\)/ in the example code and make a regex that would match any of the found strings and nothing else, but this seems clunky. It will work for the most important use case (require(\"string\")), and I can provide some friendly error handling for the other cases so it won't bite the users much. Maybe it's still better than adding the hardly understandable config option.\nWhat do you think?\n. Okay, see the new commit.\nI'd add some tests for my helper functions but I don't see any test framework installed. Could you take care of this?\n. Check my new commit facceef! :)\n. I thought about it again and I realized that I don't need the webpack's context at all. The context had also one drawback: requires of stuff from ../ didn't work. My new solution is simpler and cleaner, and requiring anything just works.\nI still didn't add any tests, but I don't know what exactly could I test. Please look at the code and tell me if you feel like some part of it might break in the future.\n. > extracting them to utils\nThis is harder than I thought because the loader is in ES5 and utils are ES6, so I can't just require('../src/utils/utils') from the loader.\n. That's what I do:\nmodule.exports = _.assign(exampleLoader, {\n    requireAnythingRegex: requireAnythingRegex,\n    simpleStringRegex: simpleStringRegex,\n    readExamples: readExamples,\n    findRequires: findRequires,\n});\nBtw, there's a simpler way to check JS (ES5) validity: http://www.ecma-international.org/ecma-262/5.1/#sec-15.3.2.1 :\n\nIf body is not parsable as FunctionBody then throw a SyntaxError exception.\n. Done!\n. commit updated, ihmo it's good to merge now.\n. should be ok now.\n. @sapegin Looks like your editor removed the significant whitespace in https://github.com/sapegin/react-styleguidist/commit/0627af5159bb23f3aeeb3bd2ddbb304f3c3aa42a...\n. If you don't like double spaces we can use explicit <br>.\n. :+1: \n. I think that grouping based on directory structure would be enough while not adding new complexity. And I think it's out of scope of this ticket anyway.\n\nSo, who's going to implement it? I think I could try, but not this week.\n. So I tried it, and in the simplest variant it's really simple: https://github.com/lovelybooks/react-styleguidist/commit/bb024de001526dcbd7c8befa82ab42d54357152d ;)\n. This is getting more and more important for my codebase, and I think that actually we might need some quick design/prototyping phase for this. The point is, the default styleguide is cool for 5 components, but it's hard to navigate it when there are 20 components, and with 50 it's almost impossible. And it is actually a good practice to have lots of tiny components, so I believe we should support this idea too. I wonder if just a simple side navigation with a search box will be enough for this.\nThis is also somewhat related to https://github.com/sapegin/react-styleguidist/issues/32\n. Maybe not. I can remove it.\n. Btw. I did some other style changes: bold headers and bigger margins between components.\n. So, how do you like the updated commit?\n. to put some space before the first component. It doesn't do anything for subsequent components because of margin collapsing.\n. I'm not sure we're talking about the same thing. Here's what I did:\n\n. Got it, you're right! :) Check the new commit :)\n. Looks like a bug in Marked: https://github.com/chjj/marked/issues/530\nSo we just need to fix styles in Styleguidist.\n. It's kind of tricky because right now documentation \"chapters\" are \"components\". A component may have some examples in markdown. We have a function in config to get these filenames, so it's a one way relation.\nI was thinking that in a general case, it'd be nice to have a structure like this somewhere:\n[\n{title: 'Overview', docs: 'some/path/README.md'},\n{title: 'Avatar', component: 'some/path/Avatar/index.jsx', docs: 'some/path/Avatar/examples.md'},\n{title: 'Message', component: 'some/path/Message/index.jsx', docs: 'some/path/Message/examples.md'},\n{title: 'ApiClient', docs: 'some/path/ApiClient.md'},\n{title: 'JsonPreview', component: 'some/path/JsonPreview.jsx'},\n]\nThis structure is nice because it defines relationships between files and their order in which they should appear in the documentation. It is also flexible, so in the future it should be easy to add more connected documentation sources (like: docs generated from unit tests, or coverage reports, or whatever)\nBut there's the question, how to design a config API that would be both easy to use and would let us define these relationships for any structure? Of course it would be a breaking change (semver major), but maybe it's worth it. I'm just thinking aloud. What do you think?\n. @sapegin there will be confusion between components on top level in config and components in each TOC. For your questions:\n1. My example referred to the current behaviour. For each component, there is a React component definition (parsed by docgen) and an optional markdown file with examples.\n2. I'm not sure but I'd say that's not important, since a list with just one element is still a list :)\nYour example seems more complex to me, because in my understanding it is:\ntoc: [\n  {title: <string>, docs: <glob-or-list>},\n  {title: <string>, components: <path-to-folder-which-will-then-be-passed-to-components-function>},\n],\ncomponents: function(config, glob, folder) { ... },\nWhereas in my example I thought about something like:\ntoc: function(config, glob) {\n  // if you need custom behaviour, implement it here\n  // (@sapegin we could make a good example for a start)\n  return [\n    // many items like:\n    {title: <string>, component: <optional-path-string>, docs: <path-string>},\n  ];\n},\n. @operatino I don't want to pull SourceJS with all its dependencies (phantomjs, grunt with plugins...) and create all the file structure sourceJS needs just to add markdown pages to my styleguidist-powered styleguide.\n. Or maybe add some classes to the existing elements?\nI guess that the users will want to style not only the styleguide headers or prop tables, but also the markdown output (which is not styled by our css modules anyway).\n. I like the change a lot! I already started writing some custom styles for my style guide :)\nI'll be picky: why ReactStyleGuidist if the name of the project is react-styleguidist? Directly \"translated\" to camelCase it would be ReactStyleguidist...\n. Yes! :+1:  And I'd like the component and prop descriptions to be rendered as markdown too!\n. I can do some code review on Monday.\n. And later, when we add ids like I did in https://github.com/lovelybooks/react-styleguidist/commit/bb024de001526dcbd7c8befa82ab42d54357152d, shall we also use them for the navigation? (I mean relativePath)\n. I tried to build something, but I had to stop here.\n. But leaving that bug aside, I was able to run a test for one component using this code (mochatest.js):\n```\nrequire('testdom')('');\nvar React = require('react');\nvar TestUtils = require('react-addons-test-utils');\nvar _ = require('lodash');\nvar babel = require('babel-core');\nvar babelConfig = require('./package.json').babel;\nglobal.React = React; // needed for all examples\ndescribe('Button', function() {\nglobal.Button = require('./ui/Button');\n// var markdownContent = require('./ui/Button/examples.md');\nvar markdownContent = require('./examples'); // because of https://github.com/istarkov/babel-plugin-webpack-loaders/issues/98\nvar codeChunks = _.filter(markdownContent, {type: 'code'});\n\n_.forEach(codeChunks, (chunk, index) => {\n\n    it(`should work as in example ${index}`, function () {\n        var transformedCode = babel.transform(chunk.content, babelConfig).code;\n        var vDom = chunk.evalInContext(transformedCode, _.noop); // noop for setState\n        TestUtils.renderIntoDocument(vDom);\n    });\n\n});\n\n});\n```\nI also needed a bit of webpack config for it - webpack.test.config.js:\nmodule.exports = {\n    output: {\n        libraryTarget: 'commonjs2', // Needed for babel-plugin-webpack-loaders\n    },\n    module: {\n        loaders: [\n            {\n                test: /\\.scss$/,\n                loader: 'style!css!postcss!resolve-url!sass',\n            },\n            {\n                test: /\\.md$/,\n                loader: 'react-styleguidist/loaders/examples',\n            },\n            {test: /\\.(png|jpg|gif|eot|woff|woff2|ttf|svg)$/, loader: 'url?limit=8192'},\n        ],\n    },\n    resolve: {\n        extensions: ['', '.js', '.jsx'],\n    },\n};\nI run the tests with:\nBABEL_DISABLE_CACHE=1 NODE_ENV=test `npm bin`/mocha --compilers js:babel-register mochatest.js\nResult: \n\n. @sapegin I made some more progress, but I need to change one thing in styleguidist: instead of:\nrequire('styleguide!')\nwe would do:\nrequire('styleguide!' + pathToConfigFile)\nThen it would be possible to reuse that loader. Otherwise it always looks for the config path in process.argv...\nIf you could change this for me, it would be great! :)\n. @sapegin I tried, but it's difficult because the config is needed pretty much everywhere. I believe it should be passed explicitly to every \"part\", rather than required by each module. I could add a flag to override the logic of finding and loading the config, but this feels ugly.\n\n. Maybe the server and build could call some config.init(argv) at the beginning. I don't see any better way since we need to pass the config to other loaders too (like props.loader), and we even can't serialize the config (to pass it as a loader query param) because it contains JS functions.\n. @sapegin please have a look at https://github.com/sapegin/react-styleguidist/commit/a4e9cf2565ac67972157e4e6de14370fd25bb6a1. This is the simple solution (not a nice one)\n. So I added one more commit and finally got it working.\nhttps://gist.github.com/mik01aj/5b0be7da5453b84a8a2a51b57611c2c7\n\n. So, to sum up, I was able to setup the code for my project (code in gist) but it's hacky as it uses some undocumented APIs (setting globals manually, chunk.evalInContext, component.nameFallbak typo, etc). If more people want it, we could refactor styleguidist so that it's easier to do this kind of tests.\n. FYI: I updated my gist for v3.0.\n. Maybe the update of react-docgen will fix this.\nIf not, I believe this bug should be reported to react-docgen, as it is thrown from https://github.com/reactjs/react-docgen/blob/c94b7689484be5fb5b573d24d4d7c04833d03fd8/src/parse.js\n. We'll need to say that all the components are exported to global variables (https://github.com/sapegin/react-styleguidist/blob/master/src/index.js#L18) and that many components have the same name, it will cause problems (or maybe let's throw an error instead? https://github.com/sapegin/react-styleguidist/issues/33)\n. LGTM, sorry @sapegin I didn't find time for this.\n. This week I'm busy with other (non-react) stuff... I recommend that you just cherry-pick https://github.com/lovelybooks/react-styleguidist/commit/bb024de001526dcbd7c8befa82ab42d54357152d for now. \n. not yet.\n. and why not import Layout from '../Layout'?\n. Imho it's fine what you did. You could even do React.createClass in your code if you need to, no hacks needed.\nI have even more complex examples in my styleguide. And if they get really big you can move the example to a separate jsx file and require it from the examples md file.\n. Okay, so the TODO here is: add more advanced examples to our sample style guide.\n. That's cool! :+1: \nI understand that the default state is {}, right?\n. {} is fine, I believe. Just don't forget to document it :)\n. Maybe it would be even better to actually integrate it with the example styleguide, so that anyone can see how it works ;)\n. One more:\n\nBut how do I debug the exceptions thrown from my components?\nAlmost the same way. Put debugger; at the beginning of your code and then click the  button to make the debugger stop execution on any exception, continue, and voil\u00e0, you got your exception with all the context.\n. @sapegin, what do you think about \"similar/related projects\" link section? I'd list at least these:\n\nheatpack, a quick to setup hot-reloaded development server for React components.\nDemobox, a component for making component showcases for landing pages\nSourceJS, a platform to unify all your frontend documentation. It has a styleguidist plugin.\n. okay! see my edited comment above.\n. @sapegin thank you, I couldn't find time for this.\n\n\nThe debugger instruction, however, is wrong, because you should put debugger; first (so that the execution is stopped at the beginning of your example code) and then you press , so that when you continue the code execution with , the execution will be stopped again wherever the exception is thrown.\nAnd I put 2 short questions for a reason: one is for stepping through execution of example code (useful if they contain some logic), and the second was about finding exceptions.\nBtw, I like your screenshot! It helps. :+1: \n. :+1: \n. LGTM :shipit: \n. I got it. My project had \"react-styleguidist\": \"^0.1.8\" in package.json and I didn't notice that before because I was using npm link all the time. Upgrade fixed this.\n. :+1: \n. @chrisdrackett any feedback? I'd like to close this ticket.\n. @sapegin, could you explain this further? I see that the example styleguide modal uses state and setState, but the examples loader passes only setState to it.\n\nAh, I got it, it's done in the Preview component... but I don't understand why you reload the component each time instead of creating a new react class for the example and then using the native setState and stuff. I mean making a component class like this:\n```\nlet PreviewDemo = React.createClass({\nrender: function () {\n    try {\n        return executeCode(this.props.code, this.state, this.setState.bind(this));\n    } catch (err) {\n        return makeRedBox(err);\n    }\n}\n\n})\n```\n...and then rendering this one in the nested ReactDOM.render()\n. P.S. I realized one more thing: indepentently of what I've written above, the way you pass state and setState is inconsistent. Imho it's better to either pass both of them as a function argument, or to append them both to the code. Mixing these 2 methods is confusing.\n. Seems like related.\n@sapegin, so how about using React.createClass like I suggested above?\n. I'll show you what I use (well, actually it's for components, but I guess it will solve your problem too) :)\ncomponents: './scripts/{' + [\n    'mobilePages/[A-Z]*',\n    'ui/BookCoverBox',\n    'ui/BookDetails',\n    'ui/Button',\n    'ui/Avatar',\n    'ui/Rating',\n    'ui/Review',\n    'ui/ShareButton',\n    // 'ui/[A-Z]*',\n    // 'ui/developerUtils/[A-Z]*',\n    // 'ui/Lottery/[A-Z]*',\n    // 'ui/selectBoxes/[A-Z]*',\n].join(',') + '}/index.jsx',\n. @panayi did this solve your problem?\n. @sunesimonsen Manually fixing problems in webpack config, or installing codemirror locally shouldn't be required, so I reopen this issue.\nBtw, it looks like it's actually the same problem as in https://github.com/sapegin/react-styleguidist/issues/59.\n. :+1:. People had problems with it in https://github.com/sapegin/react-styleguidist/issues/57 and https://github.com/sapegin/react-styleguidist/issues/62.\nI'd add one more related thing to think about: how should one integrate a project using webpack with styleguidist? How about project using babel (https://github.com/sapegin/react-styleguidist/issues/58)? It would be cool to move these 2 to peerDependencies and thus make styleguidist less of a standalone and more of a tool that integrates tightly with the existing project config.\n. @sapegin Maybe let's plan this for 2.0 (whenever it might be)?\n. I just upgraded from 1.2.1 to 1.3.0 and can reproduce the problem.\n. The bug is in https://github.com/sapegin/react-styleguidist/blob/c3b030083c9a0cb4f911d32d27e65184ba2b6d5a/src/make-webpack-config.js#L153 - reactTransformPath is \"\".\n. And this is probably because process.cwd() is not the folder of react-styleguidist, but the folder of the project that is using it. getInstalledPath expects the library to be installed in ${process.cwd()}/node_modules/babel-plugin-react-transform and this is not true with npm 2.x.\n@sapegin could you fix it?\n. @sapegin using require.resolve(...) (possibly going up to a folder with the module name) instead of get-installed-path  should fix it.\n. @sapegin will you fix it or shall I try? This issue hits anyone using npm 2.x (so, most of devs imho), see also #55.\n. Turns out I can't today, sorry. Maybe tomorrow... :(\n. @sapegin, please have a look at the PR :)\n. @Pink401k and @zachkadish, we fixed this, please check if 1.3.1 works for you.\n. These names were added because of https://github.com/sapegin/react-styleguidist/issues/32#issuecomment-157875674.\nAnd I don't understand where you're having conflicts, because all the class names are already prefixeds with ReactStyleguidist-.\nSo :-1: from me on this one.\n. Ah, so that's the bug. Your components shouldn't be prefixed. I suppose it's a problem with the webpack config.\n. did you try explicitly adding displayName: 'Button' in your component?\n. I don't know what exactly you do differently, but if you see ProxyClass this means that there is some problem with figuring out the name of your component. And if I'm right, the workaround with displayName: 'Button' should work. AFAIK file names have currently nothing to do with it (maybe they should, btw).\nStill note that what I'm saying is only a workaround and we should still fix the underlying bug or at least provide some friendly error message.\n. okay, so if adding displayName helps, then you should check your babel settings, in particular check whether you have babel-plugin-react-display-name properly configured.\n@sapegin, 2 things:\n1. should configuring this be the responsibility of styleguidist (makeWebpackConfig) or the user config?\n2. maybe we could just throw some meaningful error if we see ProxyClass, because this will cause many other problems later (https://github.com/sapegin/react-styleguidist/issues/33), examples will not work, and if this happens, it is most probably caused by a problem with babel-plugin-react-display-name. What do you think?\n. 2: So let's do it! Do you think it's better to try to detect the name (like I did someday), or to throw an Error?\n. No, I don't think so. And styleguidist is using the old (5) version anyway.\nCould you post your class definition? (I mean the lines around React.createClass or class ... extends Component).\n. Hmm, so, as you can see in the Babel REPL, this should add the displayName. Maybe you could check if the displayName is really added in your webpack output?\n. I think I got it. It's https://github.com/gaearon/babel-plugin-react-transform/issues/19...\nAnd I was able to reproduce this with a simple example using React.createClass as you did.\nThe above ticket has this info:\n\n\nActually, this is resolved if I include the display-name plugin before react-transform plugin.\n\nYes, this is the intended usage. (...)\n\n@sapegin, could you check that this is true for the webpack config? I don't understand how exactly these plugins are loaded.\n. Looks like this will be fixed with the next Babel release. We would just need to update to Babel 6...\n. > Move Webpack and Babel to peerDependencies (#56, #61).\nI'd add: ...and use project's existing webpack.config.js and .babelrc (or babel config in package.json) by default.\n. Imho the current approach with implementing some custom updateWebpackConfig function in config is OK. It isn't very friendly, but it is flexible. We could try to do some smart config detection, or just recommend doing something like: (note: I didn't check if it works)\n// styleguide.config.js\nupdateWebpackConfig: function(webpackConfig) {\n  var merge = require('webpack-merge');\n  return merge(require('./webpack.config.js', webpackConfig));\n}\nIf you want to discuss this further please let's open a new issue for this; this one is just for collecting stuff we'd like to have in 2.0.\n. It's a hard question :)\nIf we really need these exact version numbers, it's good not to force the users to use the same version for their projects via peerDependencies. If we use dependencies it's possible to use different versions.\nOn the other hand, if users really use different version than of webpack than styleguidist, then the configs are incompatible and they have bigger problems. The same with Babel.\n. Maybe we could have them all in dependencies, just like now, and detect version of webpack and Babel that is used in the parent project so that when they are different we could display a warning like \"You use Babel 5 in your project, but Styleguidist uses Babel 6, hence your configuration in .babelrc can't be used to build the styleguide.\". (Note that if the versions are compatible and npm@3 is used, it will install just one version :+1:)\n. @sapegin, :+1: :tada: \n\nJust one comment.\nFrom the release notes:\n\nBabel 6 is required now.\n\nCould you elaborate on this? That's not very clear, because this can mean either:\n- Styleguidist uses Babel 6. (and the dependency will be installed automatically, so why should I care?)\n- If I want to use Styleguidist, my project must use Babel 6. (What if I don't use babel at all? What if I have Babel 5?)\nAlso, I think that we should also explain that the examples always use JSX+ES6+HMR (unlike component code) and that's not even configurable (AFAIK).\n. See #89.\n. I found a workaround for now - it seems to work when I add ../ to stuff in my styleguide.config.js, and run the server like this:\n(cd node_modules; ./react-styleguidist/bin/styleguidist server --config ../styleguide.config.js)\nNormally I would just run it with:\n./node_modules/react-styleguidist/bin/styleguidist server --config styleguide.config.js\nWe depend way too much on process.cwd()...\n. Another workaround is to move the babel config from package.json or .babelrc to other files where it's needed (like test runner, webpack config, ...). But it's still a workaround, not a fix.\n. Not sure. If you move it to peerDependencies, it's like saying \"this version of styleguidist works only with babel 5\" (or only 6). (or, we would have to move all the needed babel plugins to peerdependencies too). But... AFAIK even when the peer dependency can not be met, npm will still install the package. It's complicated...\nI think there's a bigger decision to make: do we want styleguidist to integrate tightly with existing user's libraries (like babel, webpack) or to have a standalone that has its own dependent libraries (so in theory, it works no-matter-what)?\n. @sapegin see the new commit.\n. @sapegin, good! So when you merge this please look at https://github.com/sapegin/react-styleguidist/pull/67 (there's just one commit) and make a new release with these bugfixes. :)\n. Not really. It was a branch based on that one and I thought the other commits will disappear when you merge the first one.\n\n. But now I rebased it and there should be just one.\n. \nDisabling this single rule makes animations smooth as silk.\n\nSo here's a lazy man's workaround that I put in my style for now:\n.ReactStyleguidist-Layout__wrapper {display: block;}\n.ReactStyleguidist-Layout__sidebar {display: none;}\n(Sorry, don't have time to work on a real solution for this now.)\n. Closed in #92.\n. For reference - markdown-react-js handles this correctly:\n\n. Related: <!-- ---> comments that I used for separating consecutive code blocks are now displayed as plain text (and they shouldn't).\n. @sapegin, is there any chance for having this fixed in 2.0?\n. Okay, but I understand that the bug with &lt;Avatar size=&quot;42&quot; /&gt; is fixed anyway, right?\n. Great, thanks! :+1: \n. @withgallantry could you tell us your node version, npm version and your .babelrc?\n. Looks like related to https://github.com/sapegin/react-styleguidist/issues/58 and https://github.com/sapegin/react-styleguidist/issues/65.\nDoes running the server as follows work for you? If yes, this would suggest some conflict in Babel config (or other local config files).\n(cd node_modules; ./react-styleguidist/bin/styleguidist server --config ../styleguide.config.js)\n. @withgallantry if it's just babel-plugin-react-transform, I would close this issue in favour of https://github.com/sapegin/react-styleguidist/issues/58...\n. Hmm, I removed my previous comment (where I asked what happens when you remove .babelrc) because I now suspect it's some problem with Webpack config...\n. To show the shape[] details in \"description\". In other words, the 2nd screenshot should be like the 1st one.\n. \ud83c\udf89  \ud83d\ude00 \n. Maybe it's because you have .../ instead of ../.\n. You can try specifying the displayName explicitly. If it will help, that's some valuable input. (See also https://github.com/sapegin/react-styleguidist/issues/63)\n. I just experienced the same problem and I can tell it's damn hard to debug this. The error looks like this:\n\nMost importantly, there's no information about which component caused the error. (That stacktrace is pretty useless, btw. Maybe we should get rid of redbox-react.)\n. @sapegin when you have a big red screen and no idea what caused this, it's not cool. It's much better to show the error in context, so that it's clear what caused the error. Like this:\n\n. @sapegin how about using https://github.com/travelio/fineway-react-error instead of redbox?\n. As far as I understand, this would only help reduce the bundle size a bit. Is there any other impact that I'm missing?\n. @operatino, it can be fast. Look at https://react-bootstrap.github.io/components.html for example. They have 110 examples on the page (btw, they don't show CodeMirror initially, maybe for the same reason :wink:). I do agree that it would be nice to be able to select some component and view it separately, but that's an independent feature request. It should be fast even when they are all displayed on one page.\n@sapegin, I think enable-on-click could be a good idea. But maybe there's a simpler solution (e.g. fixing some widths in CSS)? It's strange that Firefox renders the page so quickly.\n. @operatino that's react bootstrap, rendered via JS (the doc page is a huge react component) and all the code examples are editable. It's pretty similar.\nThe problem here is not JS code, JS is fast (15.4% of the run time), it's the DOM and layout calculations that are so slow (83.5%).\n. @operatino would you mind opening a new issue for separate-pages-per-component feature? I'd like to focus on performance in this ticket.\n. The separate-pages-per-component feature suggested above by @operatino is reported in #98.\n@sapegin do we have any decision on this one? If we decide that we should hide CodeMirror initially, i'd rename this issue and close #12 in favour of this one.\n. To summarize, we'd like to have\n- [ ] a new config option, e.g. exampleCodeShown\n- [ ] that option should be true by default (we can discuss the default, but I think if we want to make it a semver-minor version we should mimic the current behaviour and just focus on performance. We could change the default in the next major version if we want to.)\n- [ ] have the Editor component just syntax-highlight the code in a <pre> when exampleCodeShown: true\n- [ ] have the Editor  component show a \"show code\" button when exampleCodeShown: false\n- [ ] have the  Editor component become a CodeMirror component on first click\n- [ ] [maybe] we'd like to have also a \"hide code\" button then too\n. You can override the Editor component with and empty div, see the FAQ in Readme.\n. That's a surprise to me! Could you send us a screenshot of the timeline?\n. I tried recording the timeline again, and have seen a nice surprise!\n\nI have 63 components now and the page loads in around 8 seconds. But around 60% of this time is CodeMirror initialization (the highlighted frame triggers CodeMirror.fromTextArea for all code examples), so there's still much room for improvement!\n. Yes :)\n. Can't wait! :)\n. I think the FAQ could be a separate file. Everything else is imho fine in the README. And if we move the FAQ elsewhere, I believe it still makes sense to leave a list of questions in the README.\nMaybe also the full list of config options could go somewhere else...\n. LGTM. I like the idea of displaying unknown. I also looked at the code and it seems fine.\n@sapegin: Merge?\n. Does it also fix #68?\n. LGTM, I like the simplification.\n. LGTM :+1:\n. Could you share your config? What versions of webpack (and loaders) do you use?\n. @zammer thanks for the PR, I love the feature! But please look at the comments in the source code. (Maybe you'd like to wait for more input from @sapegin before you start fixing it).\n. @zammer please also fix the reported ESLint errors!\n. LGTM :shipit: \n. Too fast or too choppy, it's hard to understand what's happening.. Better, but still hard to follow. In particular, it's confusing when you switch views or files, there's not enough time to notice what you're clicking and have a look around. If you're worried about the file size, well, I'd say growing to 1MB would be still fine. And in any case, you could also reduce its pixel size since the viewport is 888px and your gif is 1206px wide.. You didn't read the README: \n\nRun npm run styleguide-server to start style guide dev server.\n\nand:\n\nCLI commands and options\nThese commands supposed to be placed in package.json scripts (see Installation section above). If you want to run them directly, use ./node_modules/.bin/styleguidist.\nstyleguidist server: Run dev server.\nstyleguidist build: Generate a static HTML style guide.\n. @sapegin we have filtering (#123), but can we actually have an URL that would jump straight to the single component view? Maybe I'm missing something.\n. @sapegin I can't see why it would be invalid to use both include and exclude. See the webpack docs. I usually use exclude:  /node_modules/, to exclude all the not-my-project code.\n. And what if I have toplevel files? What if I keep my stuff in app, and lib, and src, and src-oldversion? ;)\n\nexclude: /node_modules/ is more robust imho.\n. @qur2 thanks for reporting what your problem actually was. It can be helpful for others.\n. @sapegin No, I don't think so. We can think about it if more people have this problem.-\n. StackOverflow folks recommend alias. :)\n. Waaait... I'm not sure we actually need to match import statements explicitly. Babel should transpile import to require, so maybe we just need to change the loader to operate on the transpiled code.\n. Ah, I see the loader doesn't transpile the code, it's transpiled in runtime. So this would mean adding additional transpilation step to the loader, only to parse the requires. So maybe you're right, it's just practical to handle imports this way. But, could you please add unit tests to make sure that it works reasonably well for these cases:\nimport _, { each } from 'underscore';\nimport { default as foo } from 'lib';\nimport foo from 'lib';\nimport * as lib from 'lib';\nimport { inc, counter } from 'lib';\nimport theDefault, { named1, named2 } from 'src/mylib';\nimport theDefault from 'src/mylib';\nimport { named1, named2 } from 'src/mylib';\nimport { named1 as myNamed1, named2 } from 'src/mylib';\nimport * as mylib from 'src/mylib';\nimport 'src/mylib';\n(Source: http://www.2ality.com/2014/09/es6-modules-final.html)\nAnd please add a comment explaining why do we need to parse imports at all (preferably with a link to this PR).\n. @sapegin I also noticed that highlighting doesn't work when you build (rather then use server).\n. @sapegin mist. I checked it in my build and it turned out it's about props rather then code in CodeMirror, and they don't have the colour because of some strange CSS issue - this is the computed style:\n\nI have no idea why it ends up being black. But this one seems to be some other issue than what @shubhamsizzles  reported.\n. @sapegin I figured out in my case it's overridden by .ReactStyleguidist-common__reset {all: initial;}.\n. I'd just remove this line... Or, maybe there's some way to enforce that the reset is loaded before all other styles.\n. @paulj how will this change affect existing styleguides? How does it integrate with the getExampleFilename config option, and how are the examples then displayed (under which component)?\n. @sompylasar I think you could actually try this way: try to modify the webpack config (that one for static website, produced from makeWebpackConfig) to build a bundle with just the root component exposed.\n. I do it too. I'll just paste the relevant part here, maybe it will be helpful for someone:\n```\nupdateWebpackConfig: function (webpackConfig) {\nwebpackConfig.entry.push('./app/scripts/globalConfig.js');\n\nwebpackConfig.entry.push('./app/styles/bootstrap.scss');\nwebpackConfig.entry.push('./app/styles/application.scss');\nwebpackConfig.entry.push('./app/styles/styleguide-overrides.scss');\n\nwebpackConfig.module.loaders = webpackConfig.module.loaders.concat([\n    {\n        test: /\\.scss$/,\n        exclude: /node_modules/,\n        loader: 'style!css!postcss!sass',\n    },\n    {\n        test: /\\.(png|jpg|eot|woff|woff2|ttf|svg)$/,\n        include: /.*/, // Because styleguidist requires either include or exclude.\n        loader: 'url?limit=8192',\n    },\n    {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: 'babel',\n        // We omit the ignores because of https://github.com/webpack/webpack/issues/1759\n        query: _.omit(require('./babel.config'), 'ignore'),\n    },\n]);\n\nwebpackConfig.postcss = [\n    autoprefixer({browsers: ['last 2 versions', '> 0.5%']}),\n];\n\nwebpackConfig.output.pathinfo = true;\nwebpackConfig.resolve.extensions = ['', '.js', '.jsx'];\n\nreturn webpackConfig;\n\n},\n```\nMaybe it's not the cleanest possible config, but it works for me :)\n. See mine above \u2b06\ufe0f \n. Then I don't understand what scss you want to load. \n. A unit test would be appreciated.\n. Well, it's like this in every project. I mean that anyone else can see key={value.name + i} and think \"wtf, name+number? I will simplify it\". And we can easily have a test case for this specific scenario. Or at least a comment in the code.\n. @Guria I don't understand your example, but you can use require in your examples.md to show some external demo components.\n. I read your comment 3 times and I still don't understand what you're trying to do and what is your problem.\n. The \"current solution\" is what we recommend in the docs.\nIf you don't want 2 configs, you can use .babelrc for babel (will only work with babel 6) and re-use some parts of your webpack config via require('./webpack.config') and putting them where needed.\n. If you need some special Webpack config to use some libraries, then it's a problem with these libraries.\n. Ah, I think that now I finally understand your point. \nYou want to compile your jsx to js with some tool outside styleguidist (be it webpack, babel or anything), and then you want styleguidist to consume these compiled files instead of compiling them  again. Correct?\nThat's a fair point, and it should be possible to do it by rewriting some paths for webpack. But on the other hand, I'm not sure if people actually do this often in their projects. In the cases I've seen, there is no separation between transpiling and bundling step, and the individual transpiled files are not saved anywhere. So I'm not sure there is a great need for this. What you propose would be cleaner and faster for your project, but I'm not sure it will be that useful for the general public.\n. The test for examples loader is in examples.loader.spec.js.\nI'd say :-1: for adding a new config option. Ideally it should \"just work\" without any config (I think it's easy to detect that the exported component is not the default export).\nI also wonder how does this relate to https://github.com/sapegin/react-styleguidist/pull/106 (I haven't tested that one). I mean, if you don't want to export default something, then it's probably because you have something more in this file, so isn't this case already served by that pull request?\n. See this PR: https://github.com/sapegin/react-styleguidist/pull/104. With it, you could use the ES6 import in your example code. Do you need anything more?\nBtw. If you could write the requested unit tests for that PR, it would be great!\n. @marklundin in React 15, the HTML should be more lightweight. Do you use it?\nAnd I think that long load time is caused mostly by #86. (If the page opens significantly faster in FF, then it's this one)\n. Looks great. I also reviewed the code and it looks OK. But I would wait with merging until the feature is finished -- most importantly, it should be easily discoverable, maybe with some  button.\n. I would rather stop here and think more about a good, consistent, intuitive solution.\nFor example, we have the search box. It filters the menu on the right. But maybe instead of filtering it could just highlight the relevant links, and filter the component docs on the right? Then the text from the search box could be added to the URL hash, and thus the functionality will be the same - with even less changes.\n. PS. A quick mockup of my idea:\n\nBasically, the components shown on the right are the components highlighted on the left.\n. How about an \"exact match\" checkbox under the search field? Or some special opeator that would force exast match (like =Button)?\n. > > perhaps with a \"show all components\" link at the bottom of the list to clear it.\n\nOr just a clear button inside a search field.\n\nClear button is not enough. It's too small. There should be a message that there are, say, 40 components that are currently hidden because of the search. It makes sense when you come back to an open styleguide windo after some time, or when someone sent you a link pointing to a filtered list. You'll save the users moments of frustration: \"where is my component?\".\n. I don't like the way you manage state. Each component can be filtered, or grayed out, and it's not clear how to transition between these states. All state should be visible.\nThe functionality is served, but it's not consistent nor intuitive.\nI would actually start by designing the application state - in my idea, I wanted to make the search term the only state we need to handle. Seemingly it's not enough and we also need a flag to force an exact match to show exactly one component. But having a search string for filtering and component selection for isolating one component is too much. And note that these 2 variables can easily get out of sync, causing confusion.\nMaybe we could fix it so that double clicking a name would put the component name in the search field and trigger the flag to show only one component.\n. Btw, maybe in the \"isolated mode\" we could hide the search field and show a button to go back to \"normal mode\" again.\n. @karlbright it's not clear for me if you're waiting now for our feedback, or if we wait for new stuff from you :)\nAnd if you wait for feedback, I would very much appreciate some GIF with a demo :)\n. Hello from LovelyBooks! :)\n\nRight now we have 50 components.\n. Our LovelyBooks styleguide grew much bigger since then. Now we have 72 components with 120 examples. All our examples are also used as unit-tests (we just check that they render without any warnings or errors; this turned out to be a really good test).\n\n\nGood job @sapegin and everyone :)\n. @sapegin I did already in https://github.com/sapegin/react-styleguidist/issues/34\n. Btw - I found a list here: https://libraries.io/npm/react-styleguidist/dependent-repositories\nInteresting examples:\n- http://nitive.github.io/react-motion-pack/\n- https://nordnet.github.io/nordnet-component-kit/\n- https://dialogs.github.io/dialog-web-components/ \ud83d\udc4d \n- https://roistat.github.io/react-ui/\n. > But do we actually need to support npm 2?\nYes, because of Node 4.x LTS releases. They are pretty new and they still use npm 2.\nAnd your quick fix will not work, because getPackagePath('entities') fails with an exception.\nI'm actually surprised that Webpack doesn't support json by default. On the other hand, it would be nice if entities wouldn't require json files...\nFor the time being, I propose to just change these lines like so:\n{\n                // TODO: remove this then entities module is fixed (https://github.com/fb55/entities/pull/26)\n                test: /node_modules\\/entities\\/.*\\.json$/,\n                loader: 'json'\n            },\nI wouldn't use include because it's hard to predict where this module will land.\n. > We shouldn\u2019t enable any loaders that could affect user\u2019s code.\nOn the other hand, we already force users to use ES6+JSX in examples, with Lodash 4 and React 15. Anyone using other versions of these libraries, or other Babel config will have problems with writing practical examples. I think that this is more important then avoiding enabling the json loader for user files.  ;)\nAs for the fix - I'll make a PR. But I've seen this:\nfunction validateWebpackConfig(webpackConfig) {\n    webpackConfig.module.loaders.forEach(function(loader) {\n        if (!loader.include && !loader.exclude) {\n            throw Error('Styleguidist: \"include\" option is missed for ' + loader.test + ' Webpack loader.');\n        }\n    });\n}\nShall I add include: node_modules to the loader then?\n. Yes, this was already reported in #135.\n. @sapegin could you make an npm release 2.2.1 with this fix?\n. thanks!\n. I don't like this implicit separation of code into componentWillMount and render. And, to be honest, I don't have an idea how to make it explicit in a clean way. I just think that this feature will be confusing. Right now the semantic of a code example is simple: it executes like a regular function, and the last expression is the result, like in eval. When I define a variable and can't access it one line below, then something is broken.\n. For me it will break many examples, I use mocks pretty often. For example: \nvar mocks = require('./mocks');\n<div>\n    <Avatar user={ mocks.exampleUser } />\n    <Avatar user={ mocks.exampleUserWithoutAvatar } />\n    <Avatar user={ mocks.exampleDeletedUser } />\n    <Avatar user={ mocks.exampleUserWithInvalidAvatarUrl } />\n</div>\n. Let's think again.\nWe're talking about example usages of a component. If, in order to use a component, you need some special initialization in componentWillMount, then your component is not really reusable imho. getInitialState should be enough.\nSo maybe all we need is just some way to set the initial state, and then everything else could be done in render?\nSo I would propose this:\nintialState = {x:1}\n<button onClick={ () => setState({x: state.x + 1}) }>{ state.x }</button>\nWe could then run this once to get the initial state, and then just put this in render.\n. @saschatimme I think it will also work this way. That's what I think:\nvar DemoComponent = React.createClass({\n    getInitialState: function () {\n         var initialState = {};\n         eval(EXAMPLE_CODE);\n         return initialState;\n    },\n    render: function () {\n         return eval(EXAMPLE_CODE);\n    },\n});\n. I tested it. It seems to fix the animations, but on the other hand, it breaks examples like this:\nvar ButtonToy = React.createClass({\n    render: function () {\n        return <Button>Click me!</Button>;\n    },\n});\n<ButtonToy />\nThey fail with this error:\nSyntaxError: Unexpected token )\nI'm OK with this (I mean, I can update my examples so they don't create components), but this is a breaking change.\nSee also comments in the code. My biggest concern is this code splitting, it is a bad, bad idea. It will break examples like this:\nlet a = <div className=\"dot\" />;\n<Container>{ a\u00a0}{ a\u00a0}{ a\u00a0}<div>{ a\u00a0}{ a\u00a0}</div></Container>\n. My fault (see this commit).\nBut on the other hand, I don't understand why that /node_modules\\/entities\\/.*\\.json$/ regex doesn't match that JSON module. Maybe we should replace it with /entities\\/maps\\/.*\\.json$/?\n. Hmmm. From https://webpack.github.io/docs/troubleshooting.html#windows-paths:\n\nWindows paths\nwebpack expects absolute paths for many config options. __dirname + \"/app/folder\" is wrong, because windows uses \\ as path separator. This breaks some stuff. Use the correct separators. I.e. path.resolve(__dirname, \"app/folder\") or path.join(__dirname, \"app\", \"folder\").\n\nSo shall the regex be new RegExp(path.join('node_modules', 'entities', '.*\\\\.json$').replace('\\\\', '\\\\\\\\'))?... Ugly. \ud83d\ude26 \n. or we could use /[/\\\\]/ regex to match any path separator. So it would be: /node_modules[/\\\\]entities[/\\\\].*\\.json$/. Still ugly.\n. Oh, this one does look weird. Maybe we have many copies of lodash?\n. @sapegin and @naltatis, good idea with code splitting.\nBut on the other hand, I think that #86 still has far bigger performance impact than this.\n. Maybe doing path.resolve(section.content) would be enough?\n. thanks!\n. It's not new, I noticed it sometimes in 1.x too. Looks like before first code change in CodeMirror the cursor position is calculated using some smaller font-size.\nAh, or wait, maybe we're speaking about 2 different bugs...\nBtw, I also noticed the repositioning to the beginning as @AoDev describes, this makes it hard to type in the examples.\n. Imho it's fine to delay the update but I will not give my \ud83d\udc4d  until we actually UNDERSTAND why this happens. (Nailing down the commit with git bisect would be enough I guess).\n. Doesn't this break hot-reloading the code for examples? I mean, when you save the examples.md in external editor?\n. Yes, thanks.\n. @sapegin I could merge it myself, but I prefer to wait for your feedback. If there's none, I'll merge this tomorrow.\n. @sapegin thank you! could you make a new release for me? :)\n. thank you! \ud83d\udc4d \n. Looking at the graphs you sent, I don't notice any performance boost. :(\nTo me it looks like something is wrong, either with my analysis in #86 or with this PR. @tizmagik could you drill down to see what's the performance hotspot in your case? (I mean \"after\")\nAnd from UX perspective: I would totally remove the \"hide code\" button if code is shown by default.\n. > I would say we should hide by default. It makes for a much cleaner presentation.\nAgree, but can we consider this a minor change? If not, the default has to stay as it is and we can change it in the next major version. I'm not sure if this kind of change is minor or major.\n\nthat would unfortunately mean we'd have to pass down the config all the way to `Playground.js``\n\nNo, we could pass just one option, no need for entire config here.\n\nRender was improved by ~28%\n\nWell, yes, but render is just 3% of total time, so this is not significant. I'll reproduce my measurement from #86, maybe something has changed in the meanwhile.\n. I repeated my experiment, see https://github.com/sapegin/react-styleguidist/issues/86#issuecomment-224526787\n. @tizmagik fair enough. I'm ok with hidden by default.\n. If you change this, then you should update the docs too. See: https://github.com/sapegin/react-styleguidist/search?utf8=%E2%9C%93&q=fenced\n. Yes, I would say, just require your component in the example code.\nThe ES6 import doesn't work in examples, but we can add support for it if someone finishes the code from https://github.com/sapegin/react-styleguidist/pull/104 :)\n. 3.0.0 released! \ud83c\udf89 \n. wow, 3.0 is great. There is a small bug but the styleguide page now runs so smoothly! Looks like CodeMirror was really heavy resource-wise. Great work! \ud83d\udc4d \n. Maybe this could be fixed by changing the initCode to this: \nconst initCode = `\n    // Workaround for https://github.com/sapegin/react-styleguidist/issues/155\n    var React = {}; // so React.createElement will throw\n    var initialState = {};\n    try {\n        ${compiledCode}\n    } catch (e) {\n        // ignoring\n    } finally {\n        __initialStateCB(initialState);\n    }\n`;\nNote that I assume that initialState will be assigned before any React elements are created. For my 116 examples it was true.\n. doesn't the arrow create an empty line with longer component names?\n. I mean that when the component has a long name, like CampaignsOverviewPageLoader or so, the arrow might not be visible, or it might even wrap to the next line. And when it wraps, as you use display: none for toggling the arrow, it will make the stuff below jump one line down/up on mouse enter/leave.\nTL;DR: did you test it with long component names?\nEDIT: sorry for closing, this was a misclick. :)\n. You could put white-space: nowrap on the <li>. I also wonder why did you need position: absolute...\n. @smashercosmo I don't think it's a big problem if they become invisible.\nAnd honestly, I don't see a big improvement coming from this PR. Imagine, the user comes for a first time, clicks, some innocent-looking arrow and the navigation disappears. The current behaviour is at least consistent and it's easier to go back.\n. Btw, @sapegin - as styleguidist is mostly webpack-based, perhaps we could support building/serving like this:\n// webpack.config.js\nmodule.exports = [\n    { ... user webpack config ...},\n    require('react-styleguidist').makeWebpackConfig(),\n];\nThen, when you need both \"normal\" and styleguide server, the whole project code would be built just once.\n. no, I mean putting them side by side. See http://stackoverflow.com/questions/29640996/webpack-with-an-array-provided-as-config\n. Imho this should be configurable because:\n- some projects have responsive components that change layout depending on container size (using flexbox and sizes in percent) - in this case embedding directly just works and doesn't break styles\n- some projects use mostly media queries, and thus require a iframe to preview their responsive css. In this case they need to configure the styles themselves.\nI don't see a way to reasonably handle both cases at once.\n. @smashercosmo It can, it just needs another configuration for styles. And currently afaik there's no way to correctly add the styles to the iframe without adding new config options, as the user styles (css) are added to webpack config entry (along with the user js and stuff).\n. @smashercosmo What do you mean by \"styles are just copied to an iframe\"? The relevant styles can be in <head>, or in external stylesheet, anywhere.\n. This seems hacky. What if you create the iframe before some styles are loaded? Also, the idea of copying hundreds of CSS rules to hundreds of iframes (one per example, and I currently have 120 examples in my SG) doesn't appeal to me.\nIf this transformation would happen only on demand (click), maybe it makes sense... But still, just making a snapshot as you propose doesn't help much since the JS should work in the iframe too. Some components can implement responsiveness by handling the resize event in JS.\n. Well, actually when I need to test responsiveness of components, I either:\n- go to isolated view and resize my window\n- add multiple examples, each one wrapped with some <div style={ {width: 250, border: '2px dashed orange'} }>. Of course this doesn't work with media queries; but on the other hand, you can see various layouts of your component at once. I'd say that for a person viewing the styleguide, this is even more informative than resize handles everywhere.\nHaving a resize handle with each example would be useful, but the question is: at what cost? If it will affect performance, or break styles, or even need more config in some cases, I don't want it. If more people want it, we could change the config so that it's clear which styles should be loaded and add the feature with the next major version.\n. so you load another full-blown instance of styleguidist in the iframe? This will not scale. (But maybe I'm missing something.).\n. @tizmagik and others, let's make it clear:\n1. We already have 2 views. One shows everything with menu on the left (let's call it overview), other shows one component, including all its examples, but without the menu (let's name it component view). I understand the new view (let's name it example view) should show just one specific example of some component directly in the <body>, without any chrome. Correct?\n2. should the new example view have its own URL? Imho it would be convenient to be able to point the mobile browser directly to the example, or to open it in a new window/tab. Furthermore, in the future we could maybe optimize styleguidist so that it doesn't need to load all the components; it would load just as much is needed to run these examples (I mean, that's something for later - it can be difficult because right now, all components are global).\n. @sapegin good point about these libraries. So, the URL would be like #!/MyComponent/example2? Or without hash, handled by server?\n(I still wait for others' feedback)\n. @smashercosmo if you want to keep the code editor, why would the new example view be better than the component view? I mean, what's the use case, where you want one example with editor but don't want other examples of the same component (normally there aren't many; for me it's around 80 components with an average of perhaps 1.3 example per component).\n. Kinda yes, but 1. I don't think it happens so often that we need to put work into it and 2. you still end up having a page with babel and codemirror, so it's hard to test page on mobile (I can imagine it's terribly slow on older phones). So I would still say no to code editor in example view.\n. The question is, do you really need this? If you want to test your component for short/long data, make many examples. That's what examples are for. Editing the source code of examples is cool but if we do it too much, it's manual testing. With multiple examples, you at least can see everything at once when you work on the styles. I still say no to code editor.\n. \ud83d\udc4d  from me!\nI also thought about this, see https://github.com/sapegin/react-styleguidist/issues/158#issuecomment-234877031\n. Good idea, but how would you specify section titles and additional docs (md) then?\n. Readme.md in folder is a good idea! Github supports this as well.\nMaybe the first header in the readme would then also become the section title? Note that it would mean, that if you want the section name to be different than folder name, you have to create a Readme.md just with a header.\n. > how does the styleguide handle subfolders right now?\nit doesn't. You just specify globs that find components, and they become a flat list then.\nI like the idea of using the folder structure, because this would reduce the amount of configuration needed to start using styleguidist. But if we need some special rules for nested folders, then I'm not so sure anymore.\n. I find it ok, but I'd say that currently configuring the cestions is not a problem for me. I have a styleguide with 120 examples, and my sections config is as simple as:\nsections: [\n    {name: 'Introduction', content: './introduction.md'},\n    {name: 'Core UI', components: '../core/[A-Z]*/index.jsx'},\n    {name: 'Generic UI & partials', components: '../ui/[A-Z]*/index.jsx'},\n    {name: 'Dialogs', components: '../dialogs/[A-Z]*/index.jsx'},\n    {name: 'Pages', components: '../pages/[A-Z]*/index.jsx'},\n    {name: 'Admin UI', components: '../adminUi/[A-Z]*/index.jsx'},\n],\nAnd btw - think also about md-only sections (like the introduction in my case). I don't want to put it in a new folder, so it looks like some config is still unavoidable.\nAnd I'd also suggest that you write some full examples here, I mean: example file structures and the expected output. Then we could refine this before you even start coding. :)\n. FYI: import statements are unfortunately not supported because PR https://github.com/sapegin/react-styleguidist/pull/104 didn't make it to master branch. But oldschool ES5 require should work.\n. Thank you!\n. I can't see any scope problems with file in props.loader.js.\n. btw. maybe an update would fix https://github.com/sapegin/react-styleguidist/issues/37 too.\n. You can override the styleguide components as described in the FAQ.\n. I never used it, but have a look at https://github.com/sapegin/react-styleguidist/issues/115.\n. I don't know much about JSS in particular, but I remember being excited about the CSS-in-JS approach, then asking on SO if this was actually a good idea, and finally realizing that CSS as such actually makes a lot of sense. Around that time I also read a great followup on this discussion from @keithjgrant.\nSo, proceed with caution :)\n. because require.resolve(moduleName) returns path to the index module inside the package. For react transform it's ok, but for codemirror it's not, so I get the path to package.json and go up one level.\n. I think dependency status is useful, it's an indicator that the project is maintained.\nDownloads - can be removed.\n. I think that it helps to keep focused. I could reword it to:\n\n(you might need them later)\n. I'd leave it :)\n. I can change this, but... I wanted to also mention that you can easily make a package with the styleguide and email it to your manager, or client, and it just works.\n. that's why I added a comment above...\n. It's like leading the user by hand: \"let's go here... see this... and that... and now we continue to there...\". It's putting these actions in context.\n. ok\n. hm, that's a good point. How about:\nYou can use it to generate a static HTML page to share and publish or as a workbench for developing new components using hot reloaded dev server.\n. okay, agreed! I'll move it to the end.\n. On the other hand, it's an implicit way to say \"well, actually babel is required in your project\". That's why I say it's optional.\n. btw: HMR appears later too and also the config contains \"hmre\". I think it makes sense to explain this and keep using the acronym.\n. I don't understand what does props mean in this context.\n. ok, will add\n. setState in React is defined as void setState(function|object nextState, [function callback]); you missed the 2nd argument.\n. This is a bad idea. And after the discussion in the PR, I thought we don't need any splitting anymore.\n. Why not just add more arguments to evalInContext instead?\n. In examples.loader, there was this line: \n\n'function(code, setState) {' +\nThe setState callback was passed to the component and it worked fine. If you needed to pass something more, you could just add arguments to this function. Why did you change it to use new Function()? Without that change, things would get simpler here.\n. ",
    "reintroducing": "I actually got to this point as well after adding the jsx loader in my config and after seeing this I gave up yesterday :)  I'll be watching this issue closely.\n. Just tried it and got the following:\n```\nListening at http://localhost:3000\nwebpack built eed122f68a8203cb121f in 619ms\nHash: eed122f68a8203cb121f\nVersion: webpack 1.12.2\nTime: 619ms\n          Asset     Size  Chunks       Chunk Names\nbuild/bundle.js  21.3 kB       0       main\nchunk    {0} build/bundle.js (main) 40 bytes [rendered]\n    [0] multi main 40 bytes {0} [built] [2 errors]\nERROR in ./~/react-styleguidist/~/webpack-hot-middleware/client.js\nModule build failed: ReferenceError: Unknown plugin \"react-transform\"\n    at PluginManager.subnormaliseString (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/plugin-manager.js:147:13)\n    at PluginManager.add (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/plugin-manager.js:190:40)\n    at File.buildTransformers (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/index.js:237:21)\n    at new File (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/index.js:139:10)\n    at Pipeline.transform (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/pipeline.js:164:16)\n    at transpile (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/index.js:12:22)\n    at Object.module.exports (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/index.js:69:12)\n @ multi main\nERROR in ./~/react-styleguidist/src/index.js\nModule build failed: ReferenceError: Unknown plugin \"react-transform\"\n    at PluginManager.subnormaliseString (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/plugin-manager.js:147:13)\n    at PluginManager.add (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/plugin-manager.js:190:40)\n    at File.buildTransformers (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/index.js:237:21)\n    at new File (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/file/index.js:139:10)\n    at Pipeline.transform (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/node_modules/babel-core/lib/transformation/pipeline.js:164:16)\n    at transpile (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/index.js:12:22)\n    at Object.module.exports (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/index.js:69:12)\n @ multi main\n```\n. Just tried it. New error :)\n```\nERROR in ./~/react-styleguidist/~/css-loader!./~/react-styleguidist/~/style-loader!./~/react-styleguidist/~/css-loader?modules&importLoaders=1&localIdentName=[name]__[local][hash:base64:5]!./~/react-styleguidist/~/postcss-loader!./~/react-styleguidist/~/react-codemirror/~/codemirror/lib/codemirror.css\nModule build failed: CssSyntaxError: /Users/mprzybylski/Work/SpotHero/SpotHero-Django/nodemodules/react-styleguidist/node_modules/style-loader/index.js!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/index.js?modules&importLoaders=1&localIdentName=[name][local]___[hash:base64:5]!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/postcss-loader/index.js!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/react-codemirror/node_modules/codemirror/lib/codemirror.css:1:4: Unknown word\n    at Input.error (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/input.js:61:21)\n    at Parser.unknownDecl (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:470:26)\n    at Parser.decl (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:227:22)\n    at Parser.word (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:135:30)\n    at Parser.loop (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:60:26)\n    at parse (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parse.js:25:12)\n    at new LazyResult (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/lazy-result.js:57:24)\n    at Processor.process (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/processor.js:36:16)\n    at processCss (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/lib/processCss.js:165:11)\n    at Object.module.exports (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/lib/loader.js:22:2)\n @ ./~/react-styleguidist/~/react-codemirror/~/codemirror/lib/codemirror.css 4:14-258 13:2-17:4 14:20-264\nERROR in ./~/react-styleguidist/~/css-loader!./~/react-styleguidist/~/style-loader!./~/react-styleguidist/~/css-loader?modules&importLoaders=1&localIdentName=[name]__[local][hash:base64:5]!./~/react-styleguidist/~/postcss-loader!./~/react-styleguidist/~/react-codemirror/~/codemirror/theme/base16-light.css\nModule build failed: CssSyntaxError: /Users/mprzybylski/Work/SpotHero/SpotHero-Django/nodemodules/react-styleguidist/node_modules/style-loader/index.js!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/index.js?modules&importLoaders=1&localIdentName=[name][local]___[hash:base64:5]!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/postcss-loader/index.js!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/react-codemirror/node_modules/codemirror/theme/base16-light.css:1:4: Unknown word\n    at Input.error (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/input.js:61:21)\n    at Parser.unknownDecl (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:470:26)\n    at Parser.decl (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:227:22)\n    at Parser.word (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:135:30)\n    at Parser.loop (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parser.js:60:26)\n    at parse (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/parse.js:25:12)\n    at new LazyResult (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/lazy-result.js:57:24)\n    at Processor.process (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/node_modules/postcss/lib/processor.js:36:16)\n    at processCss (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/lib/processCss.js:165:11)\n    at Object.module.exports (/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/css-loader/lib/loader.js:22:2)\n @ ./~/react-styleguidist/~/react-codemirror/~/codemirror/theme/base16-light.css 4:14-260 13:2-17:4 14:20-266\n```\nAlso of note is I'm seeing this when first running it:\n```\n\nstyleguidist server\n\nListening at http://localhost:3000\n[BABEL] Note: The code generator has deoptimised the styling of \"/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/lodash/index.js\" as it exceeds the max of \"100KB\".\n[BABEL] Note: The code generator has deoptimised the styling of \"/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/index.js?stage=0!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/lodash/index.js\" as it exceeds the max of \"100KB\".\n[BABEL] Note: The code generator has deoptimised the styling of \"/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/react-codemirror/node_modules/codemirror/lib/codemirror.js\" as it exceeds the max of \"100KB\".\n[BABEL] Note: The code generator has deoptimised the styling of \"/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/index.js?stage=0!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/react-codemirror/node_modules/codemirror/lib/codemirror.js\" as it exceeds the max of \"100KB\".\n[BABEL] Note: The code generator has deoptimised the styling of \"/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js\" as it exceeds the max of \"100KB\".\n[BABEL] Note: The code generator has deoptimised the styling of \"/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/babel-loader/index.js?stage=0!/Users/mprzybylski/Work/SpotHero/SpotHero-Django/node_modules/react-styleguidist/node_modules/react-tools/node_modules/jstransform/node_modules/esprima-fb/esprima.js\" as it exceeds the max of \"100KB\".\nwebpack built abe218ecd1c297e3027e in 28904ms\nHash: abe218ecd1c297e3027e\nVersion: webpack 1.12.2\nTime: 28904ms\n```\n. Here you go: http://dev.reintroducing.com/2015/stylist.zip\nThis is as small as possibly I could make the project so its easy to share and still shows the errors I'm experiencing.  Let me know if you need anything else.\n. Well that's completely embarassing :)  Thanks alot, this is now working great, really appreciate all the help.  Keep up the great work.\n. I'm not familiar with Webpack but is this something I should do myself extending the config or needs to be added to the project by you?\n. I just realized that you're using CodeMirror and took a look at it. It's actually really nice so I would say instead of a different syntax highlighter that would change to different theme for the syntax highlighting.\n. I was looking at the code earlier and will look at it some more to see if I can figure out some good ideas for it or open some PRs that would add this functionality.  As I mentioned in another issue I'm not a webpack user though I have wanted to try it out for some time now so maybe this would be a good way for me to do that.  I think the first five items I mentioned would be relatively trivial with the last one being the most complex as it would require rewriting of some of the components to support this.\nI'm really wanting to make a nice version of our React component library to go along with the other style guide items that I made at the link above for Uniform so I'm going to dedicate some time to this as I feel like this is a great plugin but I can't commit to any time when I'll get to it so I don't want to make empty promises.  We work on 2 week sprints so as time becomes available to me when I get my other work done I'll be looking into this.\nThanks again for all your hard work and I'll think through these items and get back to you.\n. Yep, you're absolutely correct, it is there. :)\n. I opened a PR for the template. Let me know if this works for you.\nI was thinking a bit more about the ability to switch the syntax highlighting theme.  The catch here is that I don't know how to pull the config variables into the Editor component so that it can be set in the config and then read in there to set the theme.  I think (althought I don't really know, I thought I remember reading it somewhere) Webpack also has dynamic module paths which would be nice so we can set the theme and pull the necessary CSS file based on that. Does Webpack have any mechanisms to get that info into the component for use?\nI'm going to next focus on toggling code and the union type.\n. Fantastic! That answers my email question as well (and I did see your response, thanks).\n. @sapegin Updated with the requested changes.\n. @sapegin updated based on your feedback. Let me know if anything else is necessary.\n. @sapegin Updated the Editor component with suggested changes.\n. I just ran into this as well on a very simple stateless functional component.  Most of my components are written this way and this is the only one that errors:\n```\nimport {PropTypes, createElement} from 'react';\nimport classNames from 'classnames';\nconst List = ({\n    className,\n    type,\n    inline,\n    children\n}) => {\n    const classes = classNames(\n        'List',\n        {'List-inline': inline},\n        {[List-${type}]: type},\n        className\n    );\n    const tag = (type === 'ordered') ? 'ol' : 'ul';\nreturn createElement(\n    tag,\n    {\n        className: classes\n    },\n    children\n);\n\n};\nList.propTypes = {\n    className: PropTypes.string,\n    type: PropTypes.oneOf(['default', 'unstyled', 'ordered']),\n    inline: PropTypes.bool,\n    /* Children should only be made up of the ListItem component. /\n    children: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.arrayOf(PropTypes.element)\n    ]).isRequired\n};\nList.defaultProps = {\n    className: '',\n    type: 'unstyled'\n};\nexport default List;\n```\nAny idea why this one in particular would error?  I can't figure it out, the component works exactly as expected.\n. Nevermind, I figured it out.  It's because React isn't in the component and I'm using createElement instead.  React doesn't need to be there because the component doesn't really use it.  Any idea on how to fix this or do I need to refactor my component and let it be there?\n. @tizmagik I ended up refactoring the component altogether and haven't gotten back to this, unfortunately.  Appreciate the heads up though.\n. Thanks! Does this need a new version published to npm?\n. @sapegin Can you publish the newest to npm please?\n. works great, thanks!\n. lol, nice subtle way to tell someone to open a PR :)\nLuckily, removing and re-installing fixed this, thanks!\n. @sapegin If I'm understanding you correctly, the Table example has that code in the markdown file and you just added comments around imports and such so as not to interfere.\nThe Form example, you put the code directly somewhere as markdown, is that also in the markdown file? \nCan you show me the code used to generate these two examples?. Perfect, makes perfect sense, thank you!. I guess last question though. Because the example visibly generated is coming from the markdown file, is it possible to hide the example code that would then display on a case by case basis? I want examples that don't need a complex setup to show code properly but for these that require more setup and will be in a fenced code block i want to hide the example code that generates the actual example and only show the fenced block.. thank you, i'll watch those issues.. disregard, just discovered the cookbook and saw this: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Cookbook.md#how-to-hide-some-components-in-style-guide-but-make-them-available-in-examples. Actually, I just tried this and got the following:\nInvariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object. Check the render method of PreviewComponent.\nHere is my example file:\n```\n    const Tab = require('./Tab');\n    const TabContent = require('./TabContent');\n    const TabNavigation = require('./TabNavigation');\n    const TabPanel = require('./TabPanel');\n<Tabs>\n    <TabNavigation>\n        <Tab label=\"Tab 1\">Tab 1 Title</Tab>\n        <Tab label=\"Tab 1\">Tab 2 Title</Tab>\n        <Tab label=\"Tab 1\">Tab 3 Title</Tab>\n        <Tab label=\"Tab 1\">Tab 4 Title</Tab>\n    </TabNavigation>\n    <TabContent>\n        <TabPanel>Tab Content 1</TabPanel>\n        <TabPanel>Tab Content 2</TabPanel>\n        <TabPanel>Tab Content 3</TabPanel>\n        <TabPanel>Tab Content 4</TabPanel>\n    </TabContent>\n</Tabs>\n\n```\nAll of these components live in the same directory. What am I doing wrong? . ugh, had to add .default to the require.. I guess it's a habit where we only have one export per file like this. That being said I'm not sure it would solve it anyway but I'd rather not export multiple items out of a component file.. Looks like this is a known issue in react-docgen: https://github.com/reactjs/react-docgen/issues/33\nClosing this and following there.. So i went ahead and made a demo and nailed it down to the line that is causing the issue. My PropTypes are:\nstatic propTypes = {\n    /** Additional class(es) to add to the component. */\n    className: PropTypes.string,\n    /** A notification to queue up for to display. */\n    notification: PropTypes.shape(NotificationPropTypes),\n    /** A function to execute when the notification queue is empty. Use this to clear your local state of any associated notification data. */\n    onQueueEmpty: PropTypes.func\n};\nNotificationPropTypes is:\n```\nimport PropTypes from 'prop-types';\nexport default {\n    / Additional class(es) to add to the component. */\n    className: PropTypes.string,\n    / A unique ID to identify the notification with. The suggested way to create this is to use uuid. /\n    id: PropTypes.string.isRequired,\n    / The message body of the notification. */\n    message: PropTypes.node.isRequired,\n    / Determines the characteristics of the notification. /\n    type: PropTypes.oneOf(['info', 'success', 'error', 'warning']),\n    / Whether to display the close button. */\n    showClose: PropTypes.bool,\n    / The time (in milliseconds) that the notification stays open for. /\n    duration: PropTypes.number,\n    / Whether the notification should close itself without having to click the close button after the specified duration. */\n    autoClose: PropTypes.bool,\n    / A function to execute after the notification has been hidden. Will receive the notification's props. /\n    onHidden: PropTypes.func\n};\n```\nThis is causing an issue as follows when I compile in the example project:\nWarning: Cannot parse lib/components/Notification/NotificationContainer.js: Error: [{type: ImportDefaultSpecifier, start: 195, end: 216, loc: [object Object], local: [object Object], id: null, name: null}] does not match type Printable\nIf I change the PropTypes to be there inline in the file, it works:\nstatic propTypes = {\n    /** Additional class(es) to add to the component. */\n    className: PropTypes.string,\n    /** A notification to queue up for to display. */\n    notification: PropTypes.shape({\n        /** Additional class(es) to add to the component. */\n        className: PropTypes.string,\n        /** A unique ID to identify the notification with. The suggested way to create this is to use <a href=\"https://www.npmjs.com/package/uuid#quickstart---commonjs-recommended\" target=\"_blank\">uuid</a>. */\n        id: PropTypes.string.isRequired,\n        /** The message body of the notification. */\n        message: PropTypes.node.isRequired,\n        /** Determines the characteristics of the notification. */\n        type: PropTypes.oneOf(['info', 'success', 'error', 'warning']),\n        /** Whether to display the close button. */\n        showClose: PropTypes.bool,\n        /** The time (in milliseconds) that the notification stays open for. */\n        duration: PropTypes.number,\n        /** Whether the notification should close itself without having to click the close button after the specified duration. */\n        autoClose: PropTypes.bool,\n        /** A function to execute after the notification has been hidden. Will receive the notification's props. */\n        onHidden: PropTypes.func\n    }),\n    /** A function to execute when the notification queue is empty. Use this to clear your local state of any associated notification data. */\n    onQueueEmpty: PropTypes.func\n};\nProblem is, I prefer to have them separate files as I like to export them for use in the containing project as well. Is there no way around this? How should I export the props (preferably in a separate file) so that they get read properly?. I should also point out that this is related to my question here: https://github.com/styleguidist/react-styleguidist/issues/548. Looks like this is already a long standing issue there: https://github.com/reactjs/react-docgen/issues/33\nClosing this and following there, thanks.. @sapegin Sorry about that, here you go. I dwindled down the example code as well.\nhttps://github.com/reintroducing/example. @sapegin Can you reopen this issue so that it doesnt get lost? I've updated the main issue with example link.. Making it React.createElement did fix it, thank you.. @stepancar Seems to work, thanks, though the output looks like this: withEmpty: Boolean?=false. I think the ? in there is a bit odd looking but thats just personal opinion :)\nA cleaner output would be something like withEmpty: Boolean (false), but again, thats personal opinion.. @stepancar No worries, sounds good, really appreciate you putting in a fix for this.. @arshadkazmi42 Any updates on this by any chance?. this actually caused my SG to stop working when I upgraded to v8.0.5 (v8.0.4 works perfectly fine). This is what I started to see with v8.0.5:\nCannot find module 'react-docgen/dist/babylon'\nnpx styleguidist server --open exited with code 1. I am not, but this is: https://github.com/siddharthkp/react-docgen-external-proptypes-handler/issues/5\nGood callout, thanks.. Good thought, I removed it and set up a global (not sure why I never did it before).\n. No problem, I was wondering how you want to handle this, removing it.\n. Not 100% sure what you mean by this.\n. ",
    "panayi": "An additional configurable option that may be useful, is to be able to include components only when a sibling .md file is present.\njavascript\n// styleguide.config.js\nmodule.exports = {\n  // ...\n  // ...\n  getExampleFilename: function(componentpath) {\n    return componentpath.replace(/\\.jsx?$/, '.md');\n  },\n  components: function(config, glob) {\n    const regex = /\\/[A-Z][A-Za-z]*\\.jsx$/\n    return glob.sync(config.rootDir + '/**/*.jsx').filter(function(module) {\n      const mdFile = config.getExampleFilename(module);\n      try {\n        const mdFileWithSameNameExists = fs.statSync(mdFile);\n        return mdFileWithSameNameExists && mdFileWithSameNameExists.isFile();\n      } catch(err) {\n        return !(err && err.code === 'ENOENT');\n      }\n    });\n  }\n}\n. I'm thinking of two options:\n1. A config option includeOnlyComponentsWithExampleFile:true|false, or something shorter, examples: 'required'\n2. A webpack-loader type of syntax: hasExample that can be passed in components\njavascript\nmodule.exports = {\n  components: 'hasExample!/**/*.jsx'\n}\nIn case components is a function we can also provide a helper hasExample function:\njavascript\nmodule.exports = {\n  components: function(config, glob) {\n    const regex = /\\/[A-Z][A-Za-z]*\\.jsx$/\n    return glob.sync(config.rootDir + '/**/*.jsx').filter(function(module) {\n      return config.hasExample(module);\n      // alternatively the package exports the function and...\n      // import { hasExample } from 'react-styleguidist'\n      // return hasExample(module)\n    });\n  }\n}\n. You are right that the 2nd option is unnecessary complex. Implemented 1st option: https://github.com/sapegin/react-styleguidist/pull/38\n. Tried fresh npm cache clean && rm -rf ./node_modules && npm install --verbose and it hangs to \n....\nnpm verb addRemoteTarball https://registry.npmjs.org/webpack/-/webpack-1.12.2.tgz not in flight; adding\nnpm verb addRemoteTarball [ 'https://registry.npmjs.org/webpack/-/webpack-1.12.2.tgz',\nnpm verb addRemoteTarball   'ef40ed5d7c54716f5fae1598a451669316434e51' ]\nnpm info retry fetch attempt 1 at 21:59:08\nnpm info attempt registry request try #1 at 21:59:08\nnpm http fetch GET https://registry.npmjs.org/webpack/-/webpack-1.12.2.tgz\nnpm verb addTmpTarball /var/folders/l7/lvj0zlwd62v00j90gcyx3tc00000gn/T/npm-7925-601ccf6c/registry.npmjs.org/prettyjson/-/prettyjson-1.1.3.tgz not in flight; adding\nnpm verb addTmpTarball already have metadata; skipping unpack for prettyjson@1.1.3\nnpm verb afterAdd /Users/ppanagi/.npm/prettyjson/1.1.3/package/package.json not in flight; writing\nnpm verb afterAdd /Users/ppanagi/.npm/prettyjson/1.1.3/package/package.json written\nnpm http fetch 200 https://registry.npmjs.org/webpack/-/webpack-1.12.2.tgz\nnpm verb addTmpTarball /var/folders/l7/lvj0zlwd62v00j90gcyx3tc00000gn/T/npm-7925-601ccf6c/registry.npmjs.org/webpack/-/webpack-1.12.2.tgz not in flight; adding\nnpm verb addTmpTarball already have metadata; skipping unpack for webpack@1.12.2\nnpm verb afterAdd /Users/ppanagi/.npm/webpack/1.12.2/package/package.json not in flight; writing\nnpm verb afterAdd /Users/ppanagi/.npm/webpack/1.12.2/package/package.json written\nnpm verb addTmpTarball /var/folders/l7/lvj0zlwd62v00j90gcyx3tc00000gn/T/npm-7925-601ccf6c/registry.npmjs.org/babel-core/-/babel-core-5.8.30.tgz not in flight; adding\nnpm verb addTmpTarball already have metadata; skipping unpack for babel-core@5.8.30\nnpm verb afterAdd /Users/ppanagi/.npm/babel-core/5.8.30/package/package.json not in flight; writing\nnpm verb afterAdd /Users/ppanagi/.npm/babel-core/5.8.30/package/package.json written\n/\nSo most probably not an issue with this package.\n. So I solved the issues with npm install and now npm ls shows no errors, but still having the same issues with dev server. Webpack is not re-building when code changes and, obviously, hot reload isn't working.\n. I have worked a bit on this, and react-docgen will search for a \"suitable\" component definition in any of the exports. So,\nBefore:\njavascript\n// this throws the above error\nmodule.exports = someWrappedComponent\nAfter:\njavascript\n// react-docgen will find a component in module.exports.otherKey and use that.\nmodule.exports = {\n  default: someWrappedComponent,\n  otherKey: suitableComponent\n}\nHowever when doing the latter react-styleguidist fails since it expects that a single default component is exported, see https://github.com/sapegin/react-styleguidist/blob/master/loaders/styleguide.loader.js#L26. \nI think react-styleguidist should use whatever component react-docgen resolves to. \n. However it exports the resolver. I think something similar to this could work:\n``` javascript\nimport recast from 'recast'\nimport { parse, resolve } from 'react-docgen'\nexport default function getComponentForStyleGuide(src) {\n  var ast = recast.parse(src, {esprima: babylon});\n  return resolver(ast.program, recast);\n}\n```\n. Perhaps a more advanced example that shows how to switch between themes (dark, light, etc.). \nEach presentational component (Button, Dropdown etc) is wrapped inside a Theme component. Theme passes the current theme in this.context.theme to children components.  ThemeSelector is used for selecting the current theme.\n``` jsx\n/ Theme.md /\nNothing to demo here. Use  to select a theme.\n```\n``` jsx\n/ ThemeSelector.md /\n\n\n```\n``` jsx\n/ Button.md /\n\nClick me!\n\n``\n. @sapegin [material-ui](https://github.com/callemall/material-ui) is usingcontext` for passing the theme. See http://www.material-ui.com/#/customization/themes.\nI'm doing something similar, however I'm using redux. What I do:\n- Define variables for each theme: themes/dark.js, themes/light.js\n- Theme reads the current theme and loads the corresponding variables into themeVariables. This is where I use redux - it grabs it from the store state. Perhaps make it a global variable, or what else? \n- ThemeSelector button: onClick set the current theme to the property passed to it.\n- Presentational components update their styles based on this.context.themeVariables.\nEdit: Corrected variable names\n. @mik01aj yes this works great. Thanks! \n. ",
    "operatino": "In SourceJS, during navigation tree build I only search for component folders with some hook inside, like info.json. Maybe in this case it also be wise to include by default only those components, which have readme.md next to it?\n. As an option, you can always build some abstraction on top of styleguidist. In example with SourceJS integration https://github.com/sourcejs/sourcejs-react-bundle-example, I combine powerful playground from styleguidist with platform integrated navigation options with search and ability to break components into separate pages.\nAlso, it's a really nice feature, being able to extract only one component example for focued development and responsive design testing http://sourcejs.com/docs/spec/?clarify=true&sections=1. Clarify interface is also available with styleguidist integration plugin.\nAlthough, it really depends on a project, and in some cases one page with all components is the best approach, this is lacking in SourceJS. I have some plans to do automatic combination of component into single page in future, same as we extract components with Clarify.\n. As I mentioned in other related issue, the best solution I see is to use some tooling abstractions on top of styleguidist generator, keeping it as a specific tool for only components documentation.\nFor example in SourceJS integration bundle with styleguidist https://github.com/sourcejs/sourcejs-react-bundle-example, you both can get cool generator features for React components + other features of SourceJS platform, which also includes plain MD pages documentation.\n. @mik01aj That's a fair point, but abstraction comes at a price. \nBTW in 0.6.0-dev Phatomjs is already removed from deps, as all the other heavy deps like JSDom. I also will clean-up all the build tools, so the set-up will be much lighter then in was in 0.5.x.\n. Seems like CLI requires to explicitly define config through --config, which is a bit confusing. Making UX a bit better, it's probably better to look for standard config name styleguide.config.js in the folder, before failing with error.\n. I've installed it globally, and run as a CLI.\n. Strange, because it's described in the documentation of the project https://github.com/sapegin/react-styleguidist#cli-commands-and-options\n. You know that peerDeps won't be installed automatically in npm3?\n. Imho without aliases is better, IDE's also help to resolve relative deps in import  and require.\n. Thanks, looking forward! After polishing upcoming releases, I will come back to it, and will try to help improving re-usability on styleguidist side.\n. Hi,\nCould somebody please re-check todo list of things to be done? I'll be updating my integration plugin around the end of the month, could help with improving your codebase following chosen strategy.\n. What do you expect, putting 40 components on one page.\n. It's also possible to activate the editor on click, so the source code will be shown always.\nBut really, I would consider allowing to create multiple pages. One page style guide solution does not scale in many ways.\n. @mik01aj you're comparing plain CSS bootstrap vs complex single page app with lot's of JS base components on it.\nFixing \"some widths in CSS\" is just a temp hack. This also limits any client side code features, since if you're already at full capacity, there's no place for adding some more advanced stuff.\n. Okay, I've missed that you shown React Bootstrap, but look deeper. Every component there is server side rendered, which boosts the performance a lot.\nAlso, it's still Bootstrap, which is a set of simple components. In a decent project, you get a lot more complex components with more functionality, which again, doesn't scale at all.\n. I even have a solution already - https://github.com/sourcejs/sourcejs-react-bundle-example ;) \nWhich is a higher level wrapper on top of styleguidist. Treat it as an idea for scaling, not the promotion of some specific implementation.\n. In first React implementation https://github.com/szarouski/sourcejs-react (quite limited)  we also had server side rendering, which I would really like to pair up with styleguidist somewhere in future.\n. Interested in sourcejs-react-styleguidist users? I know @ndelangen uses it quite extensively.\n. Here's the example implementation of the solution you're discussing:\nhttps://sourcejs.com/specs/example-bootstrap-bundle/carousel/\nisolated view of the same component (first section):\nhttps://sourcejs.com/specs/example-bootstrap-bundle/carousel/?clarify=true&sections=1\nhttps://sourcejs.com/specs/example-bootstrap-bundle/carousel/?clarify=true&tpl=clear&sections=1\n. This kind of \"separate\" component view page helps a lot, but solutions with placing the examples in iframes also makes sense, if on one page you would like to show different screen states. We're currently discussing similar plugins for SourceJS.\n. ",
    "jamieholliday": "So I have skipComponentsWithoutExample: true in config but just noticed a weird behaviour when having nested components\nI have these 3 components:\nGrid\nRow\nColumn\nIn Grid/Readme.md I have this:\nconst Row = require('components/Row');\nconst Column = require('components/Column');\nconst Grid = require('components/Grid');\n<Grid>\n  <Row>\n    <Column>\n    ....\n    </Column>\n  </Row>\n</Grid>\nIt now doesn't matter if I have Readme.md files in any of the other component folders or not I get the entries for all 3 components in the styleguide and duplicate example code for each. I'd like to have different example for each component by supplying different Readme files or even just ignore the <Row /> and <Column /> components completely from styleguide. \nEDIT: Ok this turned out to be an issue with the requires using the wrong path and not being loaded\n. I added the .../ so as not to write out the full path to the files in the example above. Sorry if its a bit confusing. The filepath is actually the correct full path to the file.\n@sapegin - I've made a test case in this repo:\nhttps://github.com/jamieholliday/react-styleguidist-testcase\nIt only includes one component called <Test />\nThis will demonstrate the error. I was thinking maybe was something to do with webpack. I did have to add a workaround in package.json script to get it to work in the first place with my current setup:\n\"styleguide\": \"BABEL_ENV=styleguidist styleguidist server\",\n. Explicitly adding displayName appears to fix the issue\n. ",
    "AoDev": "Could we add a directive in a comment at the top of a component file like many linters do for example?\n```\n/react-styleguide: ignore/\nimport React from 'react'\n... component code\n```\n. Because right now the styleguide is also documenting some \"internal\" subcomponents which shouldn't be a concern for the developers who are going to use the main component.\n. Because it's easier to do for the user. Regarding the styleguide config you'd need to create a function / pattern that is heavily dependent on the file names / pattern / file structure.\nFiles operations like renaming files / moving code around (that sure does not happen all the time), need to be followed by a change in the styleguide config while there wouldn't be anything to do with this directive.\n. But, if you have code pattern structure to propose to help it's more than welcomed.\nOur structure is similar to AirBnB react styleguide. https://github.com/airbnb/javascript/tree/master/react#naming\n. We use less but it's the same.\nWe have our own entry point for our docs. (styleguide)\nAs you can see we even use other loaders. For example we build a svg Icon sprite that people can use with an Icon component that we have by simply giving the name of the icon.\nthis is the entry point: docs/index.js\nrequire('../less/index.less')\nrequire('./docs.less')\nour webpack config\nstyleguide.config.js\n```\nmodule.exports = {\n  title: 'Components Guide',\n  sections: docsSections,\n  updateWebpackConfig: function updateWebpackConfig (webpackConfig, env) {\n    webpackConfig.entry.push(path.join(FRAMEWORK_DIR, 'docs/index.js'))\nwebpackConfig.module.loaders.push(\n  // Babel loader will use your project\u2019s .babelrc\n  {\n    test: /\\.jsx?$/,\n    include: [FRAMEWORK_DIR],\n    exclude: /node_modules/,\n    loader: 'babel'\n  },\n  {\n    test: /\\.less$/,\n    include: [FRAMEWORK_DIR],\n    loader: 'style!css!less'\n  },\n  {\n    test: /\\.svg$/,\n    include: ICONS_DIR,\n    loader: 'svg-sprite'\n  }\n)\n\nreturn webpackConfig\n\n},\n  styleguideDir: STYLEGUIDE_DIR,\n  assetsDir: ASSETS_DIR\n}\n```\n. While investigating, I've seen that changing the debouncing delay of the editor to 1000 ms prevents this from happening. https://github.com/sapegin/react-styleguidist/blob/master/src/rsg-components/Editor/Editor.js#L14  \nBut the update is delayed. \n. Sure, just giving some hints.\n. Right now it's possible to ignore them through the config.\nedit: Sorry I pressed enter before pasting more of the config. It's in the sections for example.\nsections: [\n{name: 'React Components', components: function () {\n    return glob\n      .sync(path.resolve(FRAMEWORK_DIR, 'components', '**/*.js'))\n      .filter(function shouldBeDocumented (module) {\n        return (module.search(/someregex/) === -1)\n      })\n}}\n...\n]\n. Regarding point 2. I am not able to import modules in the examples. Maybe it works through modules inside node_modules that are resolved by webpack but if I want to import a \"local\" module then, how? \nHere is an example: in our docs, I've created a FakeBrowser component.\n\nThe way I've found to make it work is to\n- include it in the styleguide as a separate section.\n- play with CSS so that the last section is hidden \nLike this:\nsection config (last section)\n{name: 'Docs components', components: function () {\n    return glob\n      .sync(path.resolve(FRAMEWORK_DIR, 'docs', 'components-for-docs', '**/*.js'))\n      .filter(shouldBeDocumented)\n  }}\n```\n// Hide the sections of components created for the docs\n// We don't want people to see them\n.ReactStyleguidist-TableOfContents__root >\n.ReactStyleguidist-TableOfContents__list > li:last-child,\n.ReactStyleguidist-Section__root:last-child {\n  display: none;\n}\n.docs-fake-browser {\n...\n}\n```\nThis is just an example. There are various different cases where I need components to be available to use in examples without them being documented, like private \"helper components\". \n. @sapegin \nThis is a contrived example simply to illustrate the problem.\nAnd I don't know what you mean by Reactish, since a big point of React optimization is based on checking references in the render tree. Hence from the start and until now they have created and improved the pureRender mixin -> shallowCompare -> pureComponent.\nI don't think it's a good idea to limit styleguidedist to what you think is the right way. If you don't want to handle this case, at least a note should be added that any reference in examples won't work.. @sapegin I send a PR with docs updated with a note about this issue. Let me know if it's ok there or if any change is needed.. I have updated the PR with your comments.. Hello, I was checking if I could help.\nI found this issue and I am not sure what you mean. I already have the values in my styleguide, in the description column. (One of 'default', 'danger')\nIt looks like there is nothing to do here?\n\n. Thanks for investigating. I think it was right to ask why they do that. Would be nice that they fix it if there is no good reason.. @n1313 Thanks! I'll check a bit later. On my side I made a micro PR in react-docgen.. @n1313 Is it possible to release a '5.0.0-beta.11' with the fix included? this way it would be easier to test. I have tried to install by using the next branch (git://github.com/styleguidist/react-styleguidist.git#next) but get an error. Maybe some other stuff related to the config have changed since then.\n```\nError in multi ./~/react-dev-utils/webpackHotDevClient.js ./src/framework/docs/index.js ./~/react-styleguidist/lib/index\nModule not found: Can't resolve '.../node_modules/react-styleguidist/lib/index' in '/Volumes/DataUser/git-repos/risingStack/trace/trace-client'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./src/framework/docs/index.js ./~/react-styleguidist/lib/index\n``. @sapegin How would be the easiest way for me to pull the project and try it locally? if I were to clone the repo in the node-modules of my project and generate the dist, would it work?. @sapegin @n1313  I just tried by pulling the repo and compiling like sapegin said. It compiled and your fix works. At least for the small@see ` I had.\nI don't know what is the expected output but currently it is stripped out from the documentation. I'd rather have them in, unless you plan to render jsDocs tags in some way later.\nThank you both and I'll wait for the new beta :)\n. I have three kinds of value:\n- url / link to some external website.\n@see http://some-website...\n\n\nname of a function in the same module. (rare in the case of UI components)\n@see getLabel\n\n\nname of another component in the framework.\n```\n/**\n\nHas additional behaviours...\n **/\nfunction InputBase {\n  return <input...\n}\n```\n\n/**\n * Inherit behaviour of InputBase and adds default styles\n * @see InputBase\n **/\nfunction Input {\n  return <InputBase...\n}. Not sure I would close the issue. Sure, the fix seems to work but it's not available to people yet. I'd rather close an issue when it's available. I have not tried in v4. Only v5 beta so I don't know if v4 was affected.. Cool, thanks:). ",
    "dfredriksen": "Link to FAQ is broken. ",
    "onemanstartup": "@sapegin is there a plan to automatically setup prop toggles to change state? It will be great for discovery how component behave if you have many props.\n. ",
    "psachs21": "Hi all, I've spent some time fiddling with this repo and it's shown really great promise but I had an idea that may help with all the above. Right now the repo allows us to specify a relatively limited html template. What I am suggesting is that the user could provide their own StyleGuide component and add whatever flavor of filtering/grouping that they feel necessary. We would have to make sure the component has the proper props (currently title, hilighttheme, components) but that would allow us to potentially filter the results in a very react-ish manner.\nThis requires that the project make accessible all the components used but it also extends the ability quite handily. \nWhat do you folks think?\n. I have figured a way to allow us to specify a component which works fine, I just need to figure out how we want to expose it. Right now, requiring the tool just provides the build function (from build.js) but we could make it instead return an object that has the build function and the components. The only question is how to make sure their in a format that is compatible with the user's component (ES5, ES6.) A first draft could just assume both are using babel.\n. But I'm still thinking about it, so maybe i'll come up with something more resilient.\n. It does, but it needs to do it in the styleguide loader (config isn't available in index.js) that's what my fork is doing.\n. Just need to figure out the best way to import the styleguide's components into my custom components.\n. We'd probably need a lib directory that would contain the components in a compiled state (ES5) and add an install step that compiles them. \nOr probably a dist directory makes more sense.\n. @sapegin I haven't done the dist directory, just poking the idea. But any comments would be hugely appreciated. I'm still really just playing with these ideas.\n. @jeroenverfallie @sapegin I was intrigued by the idea of separating the loaders but I liked what the makeWebpackConfig utility provides. I've updated my fork to move all the components into the example. I am not in love with the way everything is organized but it is working. I will likely refine the organization of the configurations. Also, I'll likely trim the library's dependencies now that the project itself will shoulder more of it.\n. Hmm, interesting. I should have tried that myself, it would have required\nless hacking and slashing. It may be enough for what I need to do. I added\na few other things to my fork (multiple component directories) but these\nmodifications may be sufficient.\nThanks.\nOn Wed, Oct 28, 2015 at 11:22 AM, Artem Sapegin notifications@github.com\nwrote:\n\nI\u2019ve tried another approach to extending style guide and it could be\nenough some use cases. In my case it was react-intl\nhttps://github.com/yahoo/react-intl integration. I\u2019ve added two\ncontainer components StyleGuide and Wrapper where you can inject your\ncode using Webpack\u2019s aliases.\nstyleguide.config.js:\nwebpackConfig.resolve.alias['components/Wrapper'] = path.join(__dirname, 'lib/styleguide/Wrapper');\nlib/styleguide/Wrapper.js:\nimport React, { PropTypes } from 'react';\nimport { IntlProvider } from 'react-intl';\nexport default React.createClass({\n    displayName: 'Wrapper',\n    propTypes: {\n        children: PropTypes.node.isRequired\n    },\nrender() {\n    return (\n        <IntlProvider locale=\"en\">\n            {this.props.children}\n        </IntlProvider>\n    );\n}\n});\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sapegin/react-styleguidist/issues/12#issuecomment-151879901\n.\n. I achieved this functionality by added metadata support to the examples loader. This allows who ever is writing the examples add custom data which can be used by the app to sort/exclude however they want. Just need to replace 'marked' with 'meta-marked' and change the API usage a smidge.\n. With the meta-data support and using your own custom styleguide components, that's entirely doable.\n. You're right, you don't. I guess just lumped tags into my idea of search.\n. Yes, no doubt about that.\n\nOn Tue, Nov 10, 2015 at 2:49 PM, Artem Sapegin notifications@github.com\nwrote:\n\nOf course it could be useful for other things like grouping.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sapegin/react-styleguidist/issues/28#issuecomment-155546590\n.\n. \n",
    "jeroenverfallie": "Perhaps it might be a clean solution to just extract the entire styleguide loader part, then anyone is free to use the data in any way they want.\n. ",
    "prajapati-parth": "Was just looking around if I could specify the path when using the build command. I have my config placed within ./config/ directory and the build is creating the final directory in that folder.. ",
    "petetnt": "@sapegin @mik01aj Just pinging you that CodeMirror has proper support as of https://github.com/codemirror/CodeMirror/commit/b3f9487046e37facd64196380ebdd8639efc57b5\n. Oh yeah forgot to add that https://github.com/codemirror/CodeMirror/issues/3745 tracks the issues the mode still might have (it has gotten some great updates in the past few days too) :+1: \n. ",
    "sdemjanenko": "src/styles.css\n. ",
    "chrisdrackett": "I like that layout, seems really flexible and easy to create.\n. I'll work on this today so you guys can close the ticket. Thanks for checking in, and sorry for the delay!\n. ok, so I hooked this up on one of my components today. this is a switch component that animates between two states. For some reason in the styleguide the component jumps between its two states without animation. Its almost like its being re-rendered from scratch on state change?\n. I'm running into this same error, but I'm not sure if I know how to debug it. @sunesimonsen what is it that you did to narrow it down from the initial error?\n. @sunesimonsen that seems to have done the trick! thanks :) (is there an issue for this?)\n. also strange, I just added a second component (by adding an example for it) but I don't see it in the listing even after restarting the server. I wonder if it also is coming in as ProxyClass so I'm only seeing one thing in the style guide?\n. nope, I'll give that a try. I didn't see that in the examples, but not sure what I'm doing differently. Does it work in the examples because components are in folders?\n. yep, this fixes things\n. no worries! I'm happy to help debug where I can. I'm primarily a designer so my javascript knowledge isn't as deep as it could be.\n. I didn't see anything about that plugin in the setup or the example project, but maybe I'm missing where its defined.\n. so I'm guessing that my error is that I'm using an older version of babel? I'll try updating and see if that helps.\n. const Button = React.createClass({\nand then\nexport default Button; at the bottom\n. so when I build the styleguide I see display names:\nButton=_react2[\"default\"].createClass({displayName:\"Button\"\nbut when running npm run styleguide-server I get the following for Button (from the top of the component):\nProxyClass\ncomponents/Button.jsx\nand from the console:\nvar Button = _wrapComponent('_$Unknown')(_react2['default'].createClass({\\n\\n  propTypes:\n. @paulj I have a file with about 5 components in it that I'm trying to get working. I have all the components rendering in the sidebar, but only the first is shown in the style guide itself. Any thoughts as to what might be going on?\nlooks like something with keys Encountered two children with the same key I'll keep digging.\n. I put the handlers code in my config and I'm now getting a  SyntaxError: Unexpected token )\n. yeah, I have that on my list, figured I would post here in case someone gets to it before me :). I also would love a way to show a single component at a time. We've run into the issue where our styleguide is so large that it won't even load unless you go directly to an isolated component.. I'm on 5.0 beta. I'll look into doing a demo project. ",
    "stinoga": "Any work-arounds for this until version 2 comes out?\n. @sapegin Does Radium cause this error as well? I've got the same error as above with a simple button component:\n``` jsx\nimport React, {PropTypes} from 'react';\nimport classnames from 'classnames';\nimport Radium from 'radium';\nimport color from 'color';\nimport styles from './button.css';\nclass Button extends React.Component {\n  render() {\n    const {children, className, backgroundColor = '#0093D6', foregroundColor = '#FFFFFF', ...props} = this.props;\n    let dynamicStyle = {\n      backgroundColor : color(backgroundColor).hexString(),\n      color : color(foregroundColor).hexString(),\n      ':hover': {\n        backgroundColor : color(backgroundColor).lighten(0.05).hexString(),\n        boxShadow  : '0px 3px 6px 0px rgba(0,0,0,0.23), 0px 3px 6px 0px rgba(0,0,0,0.16)'\n      },\n      ':active': {\n        backgroundColor : color(backgroundColor).darken(0.05).hexString(),\n        borderBottomColor : color(backgroundColor).darken(0.05).hexString(),\n        boxShadow: 'inset 0 2px 4px rgba(0,0,0,0.15),0 1px 2px rgba(0,0,0,0.05)'\n      }\n    };\n    return (\n      \n        {children}\n      \n    );\n  }\n}\nButton.propTypes = {\n  /*\n   * Set a background color on the button.\n   /\n  backgroundColor: PropTypes.string\n};\nexport default Radium(Button);\n``\n. That didn't fix it. I also checkednpm ls` and it seems fine:\n\u251c\u2500\u252c react-styleguidist@3.0.2\n\u2502 \u2514\u2500\u2500 webpack-hot-middleware@2.12.1\n\u2514\u2500\u2500 webpack-hot-middleware@2.12.2\nI also confirmed that each module has a client.js file in it. Also, I ran the verbose script directly and got some more output if that helps:\n```\n./node_modules/.bin/styleguidist server --verbose\nUsing config file: /home/rstinogle/hv/webclient/app/products/styleguide.config.js\ncomponents:\nsections:                     null\nskipComponentsWithoutExample: false\ndefaultExample:               false\nshowCode:                     false\ntitle:                        HireVue Style Guide\nstyleguideDir:                /home/rstinogle/hv/webclient/app/products/styleguide\nassetsDir:                    null\ntemplate:                     /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src/templates/index.html\nserverHost:                   localhost\nserverPort:                   3000\nhighlightTheme:               base16-light\nverbose:                      true\ngetExampleFilename:\ngetComponentPathLine:\nupdateWebpackConfig:\nconfigDir:                    /home/rstinogle/hv/webclient/app/products\nUsing Webpack config:\noutput:\n  path:     /home/rstinogle/hv/webclient/app/products/styleguide\n  filename: build/bundle.js\nresolve:\n  extensions:\n    -\n    - .jsx\nresolveLoader:\n  modulesDirectories:\n    - /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/loaders\n    - /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/node_modules\n    - node_modules\nplugins:\n  -\n    options:\n      template:      /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src/templates/index.html\n      filename:      index.html\n      hash:          false\n      inject:        true\n      compile:       true\n      favicon:       false\n      minify:        false\n      cache:         true\n      showErrors:    true\n      chunks:        all\n      excludeChunks:\n        (empty array)\n      title:         HireVue Style Guide\n      xhtml:         false\n  -\n    definitions:\n      process.env:\n        NODE_ENV: \"development\"\n  -\n-\nmodule:\n  loaders:\n    -\n      test:\n        source:     .jsx?$\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      include: /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n      loader:  babel\n      query:\n        babelrc: false\n        presets:\n          - es2015\n          - react\n          - stage-0\n          - react-hmre\n    -\n      test:\n        source:     node_modules[\\/\\]entities[\\/\\]..json$\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      include:\n        source:     node_modules\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      loader:  json\n    -\n      test:\n        source:     .css$\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      include:\n        - /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/node_modules/codemirror\n        - /home/rstinogle/hv/webclient/app/products/node_modules/highlight.js\n      loader:  style!css\n    -\n      test:\n        source:     .css$\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      include: /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n      loader:  style!css?modules&importLoaders=1&localIdentName=ReactStyleguidist-[name][local]\n    -\n      test:\n        source:     .jsx?$\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      include: /home/rstinogle/hv/webclient/app/products/source/common/components\n      loader:  babel\n    -\n      test:\n        source:     .css$\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      include: /home/rstinogle/hv/webclient/app/products/source/common/components\n      loader:  /home/rstinogle/hv/webclient/app/products/node_modules/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!style-loader!css-loader?modules&importLoaders=1&localIdentName=[name][local]___[hash:base64:5]!postcss-loader!css-theme-loader\n    -\n      test:\n        source:     .(ttf|eot|svg|woff|gif)(\\?v=[0-9].[0-9].[0-9])?$\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      include:\n        source:     .\n        global:     false\n        ignoreCase: false\n        multiline:  false\n        lastIndex:  0\n      loader:  url?limit=8192\n  noParse:\n    -\n      source:     babel-standalone\n      global:     false\n      ignoreCase: false\n      multiline:  false\n      lastIndex:  0\nentry:\n  - webpack-hot-middleware/client\n  - /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src/index\ndebug:         true\ncache:         true\ndevtool:       eval-source-map\nstats:\n  colors:  true\n  reasons: true\npostcss:\n  -\n-\n-\nListening at http://localhost:3000\nwebpack built eed122f68a8203cb121f in 1138ms\nHash: eed122f68a8203cb121f\nVersion: webpack 1.13.1\nTime: 1138ms\n          Asset     Size  Chunks       Chunk Names\nbuild/bundle.js  22.4 kB       0       main\nchunk    {0} build/bundle.js (main) 40 bytes [rendered]\n    [0] multi main 40 bytes {0} [built] [2 errors]\nERROR in multi main\nModule not found: Error: Cannot resolve 'file' or 'directory' /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src/index in /home/rstinogle/hv/webclient/app/products\n @ multi main\nERROR in multi main\nModule not found: Error: Cannot resolve module 'webpack-hot-middleware/client' in /home/rstinogle/hv/webclient/app/products\n @ multi main\nChild html-webpack-plugin for \"index.html\":\n         Asset     Size  Chunks       Chunk Names\n    index.html  1.44 MB       0\n    chunk    {0} index.html 528 kB [rendered]\n        [0] ./~/html-webpack-plugin/lib/loader.js!./~/react-styleguidist/src/templates/index.html 595 bytes {0} [built]\n        [1] ./~/html-webpack-plugin/~/lodash/lodash.js 527 kB {0} [built]\n        [2] (webpack)/buildin/module.js 251 bytes {0} [built]\n``\n. If I comment out the call towebpack-hot-middleware/client` in the source, that fixes the second error, but I still get the first error. Any debug ideas?\nERROR in multi main\nModule not found: Error: Cannot resolve 'file' or 'directory' /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src/index in /home/rstinogle/hv/webclient/app/products\n @ multi main\nI also see it when I run the build command. The style guide builds fine, but when I go to the URL I get a blank page with this console error:\nbundle.js:1 Uncaught Error: Cannot find module \"/home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src/index\"\n. That did it! I do still notice an error importing modules locally though:\nERROR in ./~/react-styleguidist/src/index.js\nModule not found: Error: Cannot resolve module 'rsg-components/StyleGuide' in /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n @ ./~/react-styleguidist/src/index.js 17:18-54\nChild html-webpack-plugin for \"index.html\":\nIf I change: import StyleGuide from 'rsg-components/StyleGuide';\nto: import StyleGuide from './rsg-components/StyleGuide';\nAnd that fixes the error. Should the imports be updated to denote the specific directory imports as such?\nThanks for the help!\n. @sapegin I can fix the error by adding a resolve:\nmodulesDirectories: [path.resolve(__dirname, './node_modules/react-styleguidist/src'), 'node_modules/']\nThe only problem is, I am still getting an error with the require function in src/index.js:\nbundle.js:13 Uncaught Error: Cannot find module \"styleguide!\"\nI get that if I build, and this if I try to run the server:\nERROR in ./~/react-styleguidist/src/index.js\nModule not found: Error: Cannot resolve module 'styleguide' in /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n @ ./~/react-styleguidist/src/index.js 37:15-37\nChild html-webpack-plugin for \"index.html\":\n         Asset    Size  Chunks       Chunk Names\n    index.html  567 kB       0\n    chunk    {0} index.html 528 kB [rendered]\n        [0] ./~/html-webpack-plugin/lib/loader.js!./~/react-styleguidist/src/templates/index.html 595 bytes {0} [built]\n        [1] ./~/html-webpack-plugin/~/lodash/lodash.js 527 kB {0} [built]\n        [2] (webpack)/buildin/module.js 251 bytes {0} [built]\nI also tried cleaning up my webpack config by taking it back to a default state. Still get this error. Is there something with this line I'm missing? https://github.com/sapegin/react-styleguidist/blob/master/src/index.js#L19\nFinally, tried setting up resolveLoader for the dir of that styleguide plugin, but no dice.\nwebpackConfig.resolveLoader = {\n  root: path.resolve(__dirname, './node_modules/react-styleguidist/src')\n};\n. @sapegin Cool! That fixed it. Any idea on how I can get more info on the first error?\nERROR in ./~/react-styleguidist/src/index.js\nModule not found: Error: Cannot resolve module 'styleguide' in /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n @ ./~/react-styleguidist/src/index.js 36:18-48 61:1-64:3\n. Yeah, I added that line overwriting modulesDirectories to fix this error:\n```\nERROR in ./~/react-styleguidist/src/index.js\nModule not found: Error: Cannot resolve module 'rsg-components/StyleGuide' in /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n @ ./~/react-styleguidist/src/index.js 17:18-54\nERROR in ./~/react-styleguidist/src/index.js\nModule not found: Error: Cannot resolve module 'styleguide' in /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n @ ./~/react-styleguidist/src/index.js 36:18-48 61:1-64:3\n```\nIs there a better way around that?\n. Interesting. When I remove all the resolve keys in the above config, I don't get these errors. I do, however, get errors trying to parse file types like json and jsx. Is this not the best way around that?\nwebpackConfig.resolve = {\n  extensions: ['', '.js', '.jsx', '.json']\n};\nAdding this fixes the parse errors, but causes the errors to show from my previous comment.\n. Ok, so I updated to not overwrite the default resolve. Here is my config:\n``` jsx\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar path = require('path');\nvar glob = require('glob');\nmodule.exports = {\n  title: 'HireVue Style Guide',\n  styleguideDir: '../styleguide/react',\n  components: function() {\n    return glob.sync(path.resolve(__dirname, 'source/common/components//.jsx')).filter(function(module) {\n      return /\\/[A-Z]\\w.jsx$/.test(module);\n    });\n  },\n  updateWebpackConfig: function(webpackConfig) {\n    // Your source files folder or array of folders, should not include node_modules\n    var dir = path.join(__dirname, 'source/common/components');\nwebpackConfig.module.loaders.push (\n  // Babel loader will use your project\u2019s .babelrc\n  {\n    test: /\\.(es6|jsx)?$/,\n    include: dir,\n    loader: 'babel'\n  },\n  {\n    test: /\\.css$/,\n    include: dir,\n    loader: ExtractTextPlugin.extract('style-loader', 'css-loader?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss-loader!css-theme-loader')\n  },\n  {\n    test: /\\.(ttf|eot|svg|woff|gif)(\\?v=[0-9].[0-9].[0-9])?$/,\n    include: /.*/, // Because styleguidist requires either include or exclude.\n    loader: 'url?limit=8192'\n  }\n);\n\nwebpackConfig.resolveLoader = {\n  alias: {\n    'css-theme-loader': path.join(__dirname, './css-theme-loader'),\n  }\n};\n\nreturn webpackConfig;\n\n}\n};\n```\n... but I still get this error:\nshell\nERROR in ./~/react-styleguidist/src/index.js\nModule not found: Error: Cannot resolve module 'styleguide' in /home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src\n @ ./~/react-styleguidist/src/index.js 36:18-48 61:1-64:3\n. Closing this. I figured out the problem by editing the example repo.\n. I have a similar problem to this. Spread operators seem to not work in certain filetypes for me. In this case it's the .es6 filetype:\nERROR in ./source/common/misc/HvAPI.es6\nModule parse failed: /home/rstinogle/hv/webclient/app/products/source/common/misc/HvAPI.es6 Unexpected token (235:38)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected token (235:38)\nIn my styleguide config:\njs\n{\n  test: /\\.(es6|jsx)?$/,\n  include: [\n    dir,\n    '/home/rstinogle/hv/webclient/app/products/node_modules/react-styleguidist/src'\n  ],\n  exclude: /(node_modules|bower_components)/,\n  loader: 'babel?cacheDirectory=true&presets[]=es2015&presets[]=react&presets[]=stage-2'\n},\n. @sapegin Fixed mine in the example project. Thanks!\n. Two space tabs for the loss :( Thanks!\n. @sapegin It's weird, I can't get the renderer component to load if I move it to any directory outside of the rsg-components/StyleGuide/ directory. Below is the only way that works for me, which obviously won't work since I would have to edit the file directly in the npm module.\nwebpackConfig.resolve.alias['rsg-components/StyleGuide/StyleGuideRenderer'] = path.join(__dirname, 'node_modules/react-styleguidist/src/rsg-components/StyleGuide/StyleGuideRenderer');. @sapegin I don't. I tried moving it into a few different directories, including just moving it up a dir in the react-styleguidist' npm module. All gave me the same issue. Do I need a Babel loader?. That worked great, thanks!. @sapegin Interesting. The renderer loads, but all the props passed to come through as undefined:{ title, components, toc, sidebar }`. Any idea why that would happen? Here's my styleguide config if that helps:\n```js\nvar webpack = require('webpack');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\nvar path = require('path');\nvar glob = require('glob');\nmodule.exports = {\n  title: 'HireVue Style Guide',\n  styleguideDir: './source/styleguide',\n  components: function() {\n    return glob.sync(path.resolve(__dirname, 'source/common/components//.jsx')).filter(function(module) {\n      return /\\/[A-Z]\\w.jsx$/.test(module);\n    });\n  },\n  template: './source/styleguide/assets/template.html',\n  // Allow for multiple exports in a single file\n  // resolver: require('react-docgen').resolver.findAllComponentDefinitions,\n  skipComponentsWithoutExample: true,\n  showCode: true,\n  getExampleFilename(componentpath) {\n    return componentpath.replace(/.jsx?$/, '.md');\n  },\n  updateWebpackConfig: function(webpackConfig) {\n    // Your source files folder or array of folders, should not include node_modules\n    var dir = path.resolve(__dirname, 'source/common');\nwebpackConfig.module.loaders.push (\n  {\n    test: /\\.json$/,\n    include: /node_modules\\/entities/,\n    loader: 'json-loader'\n  },\n  {\n    test: /\\.(es6|jsx)?$/,\n    include: [\n      dir,\n      path.resolve(__dirname, 'source/hirevue'),\n      path.resolve(__dirname, 'source/styleguide'),\n      path.resolve(__dirname, 'source/test-utils')\n    ],\n    loader: 'babel?cacheDirectory=true&presets[]=es2015&presets[]=react&presets[]=stage-2'\n  },\n  {\n    test: /\\.css$/,\n    include: [\n      dir,\n      path.resolve(__dirname, 'source/styleguide')\n    ],\n    loader: ExtractTextPlugin.extract('style-loader', 'css-loader?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss-loader!css-theme-loader')\n  },\n  {\n    test: /\\.(ttf|eot|svg|woff|gif)(\\?v=[0-9].[0-9].[0-9])?$/,\n    include: /.*/, // Because styleguidist requires either include or exclude.\n    loader: 'url?limit=8192'\n  }\n);\n\nwebpackConfig.resolveLoader.alias = {\n  'css-theme-loader': path.join(__dirname, './source/css-theme-loader')\n};\n\nwebpackConfig.postcss = [\n  require('postcss-import'),\n  require('postcss-custom-properties'),\n  require('autoprefixer')\n];\n\nwebpackConfig.resolve.extensions.push('.es6');\nwebpackConfig.resolve.alias['rsg-components/StyleGuide/StyleGuideRenderer'] = path.join(__dirname, 'source/styleguide/assets/StyleGuideRenderer');\n\nvar plugins = [\n  // Limit our webpack build to a single chunk, since calling local files in Django is poo\n  new webpack.optimize.LimitChunkCountPlugin({maxChunks: 1}),\n  new ExtractTextPlugin('[name].css'),\n  new HtmlWebpackPlugin({\n    title: webpackConfig.styleguidist.title,\n    template: './source/styleguide/assets/template.html',\n    inject: false\n  })\n];\n\nwebpackConfig.plugins = webpackConfig.plugins.concat(plugins);\n\nreturn webpackConfig;\n\n}\n};\n. @sapegin Good call. I was able to repro there and fix the issue. Thanks!. @sapegin Yep. I did all those steps, to no avail. Another note is that I don't see the issue until I run `npm shrinkwrap` effectively locking in these versions.. @sapegin So I've found the culprit, although not sure what the issue is. When running `styleguide-server` I get the below error:\nERROR in Unexpected token {\n @ ./~/react-styleguidist/src/index.js 40:18-48 81:1-84:3\n```\nAny ideas?. @sapegin What's the timing on that? Is there a branch? Maybe I could pull it down and test.. Got it! Upgrading node to version 6.3.0 fixed the problem.. Interesting. I was also thinking about putting bothPanel and PanelHeader into the same file, since they will always be used together. I tried that using this setup:\nresolver: require('react-docgen').resolver.findAllComponentDefinitions,\nIt seemed to work, but I get an error:\nWarning: flattenChildren(...): Encountered two children with the same key, `.0:$/home/rstinogle/hv/webclient/app/products/source/common/components/Panel=1jsx`. Child keys must be unique; when two children share a key, only the first child will be used.. @sapegin Yeah, it wants a key in my example code. Fixes the error, but stinks because then people are adding keys into their components when they pattern match off of the style guide :(. Actually, no. I take that back. It looks like individual keys may be needed in the Styleguidist code.. @sapegin that worked great thanks!. ",
    "TigerC10": "@stinoga - I think I'm having the same problem.  None of my Radium wrapped components are detected as suitable components.\n. ",
    "tizmagik": "@reintroducing if you import 'react' and then use React.createElement does that help?\nAnother thing you can try is import 'react' and then use JSX to return like so:\nconst Tag = ...\nreturn <Tag className={classes}>{children}</Tag>\n. What's the desired behavior?\n. Shall we close this, given https://github.com/sapegin/react-styleguidist/issues/150 ?\n. @konradk wow that is a really beautiful styleguide -- mind sharing the config/customizations you made for that? I especially like how the sample code is offset to the right column like that. \ud83d\ude0d . > or simply open a new page of a component without wrappers?\nI'm a fan of that approach. The responsive Chrome DevTools and in Safari are hard to beat, so I think we just simply need a clean and easy way to isolate a component without the styleguidist chrome.\n. I'm with you @XOP , we need this as well. Let me know where you end up or if you need any help.\nI think something as simple as a view isolated link next to each component example, or a tab next to the 'show code' tab that then goes to a blank page with just that example rendered and no other padding or chrome on the page would be helpful. Then use the browser's back button to go back to the full list of components, or maybe a very small absolutely positioned link on the corner of the page to return to the full view. That may be a good v1 of this feature.\n. Any update on this?\n. Having the same issue. I'm glad it's not just me. Any idea when this started happening? Maybe we can nail down the exact change?\nI noticed it also only happens when you type quickly. If you type very slowly it doesn't seem to happen, which makes me think it has something to do with the timing of re-rendering the component while typing in the codemirror box.\n. Submitted #145 to address this. Details about why this happens written there.\n. I'm looking into this right now. It's a real problem with @connect() wrapped components with react-redux for example.\nIdeally we shouldn't need to export {unwrappedComponent} but I'll try to think of ways around this. Maybe we can define some mocks to use for those wrappers or something when running in the styleguide?\nAny ideas would be helpful!\n. I was able to do this on my project, although, it wasn't too pretty. I'm thinking about a way we can support HoC generically in react-styleguidist -- any insight/help would be appreciated!\nBut anyway, here's what I did. I hope it's helpful to some. Using the following, I was able to render an @connect() (redux connected) component --  although it was a very basic component with minimal other dependencies.\nUse the handlers option defined like so (I think this mostly comes directly from the docs in this project):\n``` js\n    handlers: docgen.defaultHandlers.concat(function (documentation, docPath) {\n        // Calculate a display name for components based upon the declared class name.\n        if (docPath.value.type === 'ClassDeclaration' && docPath.value.id.type === 'Identifier') {\n            documentation.set('displayName', docPath.value.id.name);\n        // Calculate the key required to find the component in the module exports\n        if (docPath.parentPath.value.type === 'ExportNamedDeclaration') {\n            documentation.set('path', docPath.value.id.name);\n        }\n    }\n\n    // The component is the default export\n    if (docPath.parentPath.value.type === 'ExportDefaultDeclaration') {\n        documentation.set('docPath', 'default');\n    }\n}),\n\n```\nI then used webpack.resolve.alias to define a mock for redux (specifically for @connect()), like so:\n``` js\nupdateWebpackConfig: webpackConfig => {\n  webpackConfig.resolve = Object.assign(webpackConfig.resolve, appConfig.resolve);\n// Mock @connect() components\n  webpackConfig.resolve.alias['react-redux'] = path.join(__dirname, '/src/util/mockRedux.js');\n// ... other stuff ...\nreturn webpackConfig;\n}\n```\nAnd then mockRedux.js is very simple:\njs\nexport const connect = () => c => c;\nThis mostly works, but it's not ideal, but throwing it out there in case it sparks some more ideas on how to solve this cleanly in this project.\n. @nhavar yea I noticed that too. Hopefully it gets merged soon so we can close the loop on this issue! \ud83d\ude04 \n. Great! Agreed, probably better if it's off by default, but I did want the ability to specify the markdown file to use for the default examples.\nSo we could either have 2-flags, which I think is unnecessarily verbose or have a flag that can be boolean|string and false by default. When true it'll use DefaultExamples.md in the templates directory, when it's a string it'll use the user-specified markdown file. I'll go with that for now unless you have another approach in mind?\nAs for required prop detection, maybe I'll save that for another PR :)\nThanks!\n. @sapegin please have a look. I think this PR is ready to be merged. Let me know what you think!\nThanks!\n. @sapegin  :shipit: \n. Thank you! \ud83d\ude04 \n. @mik01aj no, it still behaves as it used to. Namely, the example code in the live editor gets replaced with what's in examples.md. Is that what you mean?\n. I would say we should hide by default. It makes for a much cleaner presentation. I can add it as a config option to show/hide by default (although that would unfortunately mean we'd have to pass down the config all the way to Playground.js). If the config is set to show code by default then I can remove the \"hide code\" button, if you feel strongly, although it may be a bit confusing to lose that ability.\nAs for performance, again this PR isn't so much to address performance as it is to clean up the presentation slightly. I would also suggest we consider taking this a step further and include the PropTypes as part of the code to be collapsed, but I would leave that for another PR.\nAs for performance hotspot, in the basic example, the performance hotspot is definitely the Scripting rather than the Rendering. Although Render was improved by ~28% -- I just don't know what that would mean with a larger component base. Would anyone with a large component base be able to check out my branch and try it out?\n. > Agree, but can we consider this a minor change? If not, the default has to stay as it is and we can change it in the next major version. I'm not sure if this kind of change is minor or major.\nI think it's fair to call this a minor change, as it doesn't remove any real functionality or change behavior adversely. It's simply a UI update really. But if you still feel uncomfortable about it, we can have the config change default to showCode = true, but I don't think that's ideal. For now, I'm going to default to hidden unless you guys feel strongly otherwise.\n\nNo, we could pass just one option, no need for entire config here.\n\nI know. What I'm saying is that specific config option would need to be passed down all the way to Playground which I believe is 3 or 4 levels deep from where config is available. I'll see if I can figure out a clean way to do it, maybe context would be useful here.\n\nWell, yes, but render is just 3% of total time, so this is not significant. I'll reproduce my measurement from #86, maybe something has changed in the meanwhile.\n\nYes, but I imagine for a large number of components the render performance gain would be commensurate. As for your run in #86 it does look like something has changed. I believe it may have been the performance improvements made in React 15.\n. Would you guys be okay with implementing this via context types? I just don't like how many layers I needed to manually pass this config setting down, and I think in general it might clean things up to have config available via context for whatever components need it now and in the future.\n. > But I think renderer components should still receive everything via props to make replacing these components easier.\nThat is a very good point. I'll see if adding config to context and then pulling in the specific values needed at the renderer component level is much cleaner or not.\n. Alright, I've implemented via context. Good thing that I did, because actually I discovered a few places where I forgot to pass it around. Now via context its much clearer where that config setting is actually used and how it's made available.\nThe other two config-based properties (title and highlightTheme) are still being passed around manually, but I can refactor those to grab from context in a future PR.\nI think this PR is ready to be merged now.\n. @sapegin agreed and tweaked! :)\n. Nice work on this release guys! Lots of great improvements all around! \ud83d\ude01\n. Can someone help me understand the benefits of an iframe solution vs just using the isolated view without any styleguidist chrome (e.g. sans any borders, margin, padding, etc)? I tend to think the latter approach is more useful because it means you can use the excellent Google Chrome responsive dev tools to simulate device sizes and so on. \n. @JulienPradet but imagine if there were a way to hide the styleguidist chrome while viewing all components, then you could use the responsive dev tools on several components at once. \nI guess my concern is that the iframe solution is not only adding code complexity, but just won't ever be as robust as what's possible with Chrome or Safari's built-in responsive dev tools. \n. @XOP agreed. I think a button or config option to \"toggle-styleguidist-chrome\" would be extremely useful, both in the isolated view and the full view. \n. Shall we close this one @mik01aj @sapegin ?\n. I think the only way to fix this would be to have a file watcher, say nodemon or something watch directory for any new file additions, changes, etc and then restart the server for you. It wouldn't be that great of an experience though since the build time is kinda slow so you may want to only do it for new files only, if possible.\n. Ah yea, I think it would. Interested in the require contexts solution you mentioned @aaronjensen\n. Hm, I'm not sure if that's it because the root component is a proper class component, so it shouldn't be an issue. I can repro this locally too, not sure what happened. It did reload once but subsequent reloads don't happen, very odd.\n. I think it would be great to show the function signature, imagine seeing:\nrenderButton     func    ({ item, isActive, isDisabled, onClick })\n. Not sure why the build is failing, looks unrelated to code changes. \ud83e\udd14 \n. @sapegin build seems to be passing now :shipit: \n. If we use babel-preset-env then we can target some more modern browsers and transpile less, right? Not sure if this preset has been explored elsewhere for styleguidist. . Ah gotcha. I thought UglifyJS supported ES6, but I guess there's issues. Have you tried babel-preset-env + babili for minification?. Migration docs? Or will it be easy to upgrade from v4? Sorry if I missed another issue that addresses this already!. Exciting!! \ud83d\ude01. I think this is great! Let me know if I can assist \ud83d\udc4d. What was the issue?. Oh I see. I thought we transpiled, maybe we should?. Ah gotcha \ud83d\udc4d\nAnother option is to also run server code through babel but behind babel-preset-env. Might not be worth it if it was just these few lines that were incompatible, but testing against older versions of node in CI would help catch these in the future, so that's good \ud83d\udc4c. +1 for removing. This LGTM, although I wonder if the slug can be derived from name instead of requiring folks to explicitly define it? E.g. maybe it can be as simple as:\njs\nconst genSlug = (name) => name.replace(/\\s/g, '_').toLowerCase()\nIn most cases that should do it, maybe if there's special characters or something we can put in a regex for that, etc? Just a thought!. Hm... maybe just me, but I see value in this PR.\nI do find it sort of jarring when editing code in the CodeMirror box it jumps around and shows a redbox because you haven't yet typed the closing bracket or whatever. It's especially jarring when a code example has many iterations of the component in the example and then the entire page jumps (because the error collapses the example view as you're typing) and the CodeMirror box will often jump out of screen, here's a screencap example.\nI can certainly see the need to show the error when you're editing the actual source file and hitting save, but this is solving a different use case (iterating in the CodeMirror box). I also think it's kind of clever to show the error on blur -- maybe we can sow the error after some onChange throttle in the CodeMirror box in addition to the on blur? Maybe we could also show the error message on the floated to the right of code as well? Because the error message could be useful when the error is something non-trivial.\nThis seems useful... am I missing something?. @sapegin right! I can see how that sort of does what's here but it's nice to be able to see valid changes shown immediately and only delay/move errors so you don't lose your place on the page. \nBut maybe it's just me and @UsulPro \ud83d\ude05\ud83e\udd37\u200d\u2642\ufe0f. Maybe a compromise here would be to retain the height of the example preview on errors (and set it again when there's valid code)?\nThat would nicely solve the pain point I have with the page jumping on errors as I'm typing. Thoughts?. Could be scrollable. This is an interesting problem. I think it should be doable to make dynamic routes in RRv4. I'll think through this a bit and post back/create a PR when I get a chance.. > So we need a way to parse URL and call different filtering functions and react to URL changes\nHmm but isn't that what a router such as RR essentially does? Would also take care of browser back button semantics, deep linking and isolation, no?\nHappy to explore other approaches. What did you have in mind?. > RR is mostly used to render different components depending on a route which we don\u2019t need\nRight, but I think that might be part of the perf problem when you have a large number of components. This is the refactor I was alluding to in #212 \nI'll take a look at Navigo though, it would probably be less of a refactor, I'm assuming.. One important benefit of react-css-modules is that it will warn you when trying to apply an undefined style, whereas with \"pure\" CSS Modules those undefined are just silently swallowed. It's a nice benefit for larger codebases. But I agree, perhaps not worth adding yet another layer of abstraction \ud83d\ude04 . We're planning on using Styleguidist for a new shared component repo we're working on at NYT. We're looking to use emotion (which is built on/shares an API with glamor) so I'd be happy to contribute docs back for that.\nHowever, I share @aaronjensen concern about the verbosity required to document these special styled components. Is it just a matter of trying to push this through react-docgen? Or do you think there's anything we could do on Styleguidist side? Maybe Styleguidist could even transparently/automagikally wrap these components with this extra layer before passing through to react-docgen?\nHappy to open a separate issue to discuss this further.... Was thinking maybe a babel-plugin to add an extra export with the syntax that react-docgen is looking for, but you're right a react-docgen plugin/handler would be better. Any thoughts on how we could best move those forward? They seemed to have stalled upstream.... This is great! Congrats \ud83d\ude01 . Curious why you don't export the Icon proptypes from the same file? Not sure if it would solve your issue, but might be worth a try?. I'd like to work on adding a componentDidCatch() handler -- mostly because I wanted to work with it a bit and learn how best to use it. @sapegin did you have thoughts on where it should be added/what should happen on error?. What's up with markdown-to-jsx? It seems to work fine, no?. Yea, I checked it out locally and it seemed to be working fine, but someone else could double-check I guess.. Good explanation and breakdown @sapegin -- +1 for adding this to the docs. I get this question a lot internally.. Also for this:\nFeature | Storybook | Styleguidist\n-- | -- | --\nStyle guide | No | Yes\nI think that's debatable. The docs that Storybook produces can also be seen as a styleguide. I would put \"Yes\" in both columns there IMO.. Haha fair enough :). #628 was submitted after this one -- but no worries, closing this since that was merged! \ud83c\udf89 . Okay pushed up the changes we talked about. I'll add tests once we agree on the approach \ud83d\udc4d . Good to merge?. Oh, not sure what you mean. I suggested a separate file but you said you liked it as it was? I even got a \ud83c\udf55 emoji! Haha\nCould you clarify, or better yet, commit to the branch \ud83d\ude01. Yes, for me the most important DX consideration is lack of chrome (padding, etc) for responsive testing.. Sort of, I get these:\n\nIs it supposed to work from running npm run start:cra from top-level?. Does VSCode not respect editorconfig? Also not sure why it only does it for that package.json. Editorconfig was on. I don't know, I give up, I ran prettier manually via CLI and won't touch that file anymore \ud83e\udd1e . Yea I had the plugin and it was enabled, not sure why it messed up the spacing... ah well that's not the important diff for right now, need to get the tests working. This upgrade might not be as straight forward actually, need to give how we're error handling some more thought...\n\nFull message\nError: A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://fb.me/react-crossorigin-error for more information.\nMore info, https://fb.me/react-crossorigin-error\nI\u2019m think this is from the eval we do and not actually a cross origin issue. \n\nIf anyone has any ideas, feel free to commit to this branch or branch off of it and run with it \ud83d\udc4d \n. Haven\u2019t had time to look at this since my last commit but hope to pick this up again this weekend. But, as always, feel free to jump in if you have any ideas!. Cool I think we're good now @sapegin , all synced up with master too. You can override the TableOfContents component, https://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/TableOfContents/TableOfContentsRenderer.js\nSee overriding, https://react-styleguidist.js.org/docs/configuration#styleguidecomponents. Looking forward to this! \ud83d\ude4f. Ah great idea! For React 15, is there harm in transparently wrapping in a div anyway so users wouldn\u2019t have to explicitly wrap? \ud83e\udd14 Something like:\n```js\nconst Fragment = React.Fragment || ;\nreturn {example_here}\n```\nHaven\u2019t looked at this in a while to see whether or not that makes sense, but seems doable. . So one test is failing, which is the \"pizza\" (syntax error case):\nhttps://github.com/styleguidist/react-styleguidist/blob/68a72a4076c180f30b3d4135ceb3d162746720aa/src/rsg-components/Preview/Preview.spec.js#L34-L44\nWhich makes sense because since it's now wrapped it's technically no longer a syntax error. This makes me think we should regex the error and only wrap if we get that Adjacent JSX error. \nThoughts?. Ok this only wraps on error now. Turns out it was necessary because of the test case I linked to above.\nWhere/how do you think it should be documented?. It's still a valid test case since we only want to trigger the wrapping iff the error is an Adjacent JSX error (since wrapping is the only way to fix it, which we can now do automatically for the user).\nCool. I'll add to the docs when I get a chance.. Are you saying to always wrap? But then undefined reference error would get swallowed . I found it kind of awkward, personally, so I'm a fan of this change \ud83d\ude06 \nBut the GIF in the main readme should also be updated to match. I really like this change! Will help a lot with large styleguides. \ud83d\udc4d . Agree with @sapegin I don't think this makes sense in core. Although a workaround you can do in userland is to setup aliases for this, e.g. see webpack docs. https://webpack.js.org/configuration/resolve/. Hmm, but it satisfies the conditional you're checking. What's wrong with using exclude?\n. Fair enough I'll remove it from this PR\n. Wasn't completely sure why this was here to begin with. I needed to remove it so that the show/hide code tab would look visually outside of the Preview box.\n. const?\n. a vs an is determined by the sound the word makes, not necessarily the letter that it starts with.\nhttp://www.quickanddirtytips.com/education/grammar/a-versus-an\nThis is one of those English language oddities :)\n. Webpack creates 0.build chunks as a result of the code-split\n. I think it makes sense only to show those if they are at the beginning or end of a line, so I can add support for replacing \\n with \u23ce\nFor example, I wouldn't want to see this:\ntext\nhere\nRepresented as:\ntext\u23cehere\nAlso, I imagine a string that starts/ends with a new-line would be an extremely rare case, but I can still add it if you think it makes sense. Let me know!\n. Hm, we only \"unquote\" so that we don't show the quotes surrounding the stringified values parsed from the defaultProp definitions right? E.g. I wouldn't necessarily want the quotes within my defaultProps touched at all.\nAlso, the function itself looks broken:\n``` js\nvar unquote = function (s) {\n  var quote = s[0]\n  var single = quote === \"'\"\n  return s.substring(1, s.length - 1)\n      .replace(/\\\\/g, '\\')\n      .replace(single ? /\\'/g : /\\\"/g, quote)\n}\nunquote(\"here's my quote\"); // \"ere's my quot\"\n```\nIt seems to eat the first and last char.\nEDIT: Oh, I see, it's expecting the string as:\njs\nunquote(\"\\\"here's my quote\\\"\");\nI still think the simple regex that's there is sufficient \ud83d\ude1b \n. Now that I think about it, this isn't actually possible because we don't provide a \"callback\" per-say, we just take their config.handlers value. \nHm... any thoughts on how we should handle this?\n. > copy default list and add your own stuff\nRight, but I think there's no real way to copy the default list, right? I mean at runtime at least, sure you can look at the source and reproduce the list but that's an implementation detail that the user would have to worry about/figure out.\nWhat do you suggest here?\n. Good idea! I've added that.\n. You can also mock/spy on that function within the test itself, if you wanted:\njs\nglobal.console.clear = jest.fn();\nThen you can assert that console.clear was called \ud83d\ude01 . Wasn't sure how best to style, happy to change this, but it seemed fairly innocuous enough here \ud83d\ude04 . I changed the PropType here to also allow a Component to be passed in for better control over spacing. Yea I wanted to minimize how much code is used when rendering an error; I even hesitated to use PlaygroundError since it could also contain errors itself. Do you think just straight text would work? I'd rather not introduce another component and avoid another potential failure point by doing so.. Let me push that up and we can talk through it more. Heh okay if you insist. I can create a new overridable Error component to render the error message, but IMO that introduces an increased chance of situations where it's possible to hit an error condition while trying to render the error message itself. I guess we always have the console.error to fallback to? \ud83d\ude01 . So is it a matter of also setting a background color here? I'm not sure what approach you'd like to take here.... Okay cool, I could do that \ud83d\udc4d \nYea, hopefully this never even hits, but you never know \ud83e\udd37\u200d\u2642\ufe0f . Yes, agreed, I actually started doing that, will push that up shortly. - <pre> makes sense \ud83d\ude01 \n- Error needs to be wrapped because it's actually an object (stack trace), so this coerces it to a string.. We can move this \"component\" to a separate file, but I don't think it should be overridable by the user.. Note the slight bit of complexity introduced here by explicitly using .toString() in the component \ud83d\ude1e . Note that this is technically an incorrect shim, it should be a setTimeout() or something to properly simulate async nature of rAF.. Hm yea, that might be a slippery slope though, especially when async rendering is enabled by default in the future.. Hm, I dunno why but the tests failed with the bind. Thoughts?. Oh haha thanks, was context switching too much I guess \ud83d\ude01 . Classic IE. grammar, either:\n\nIf you want to use another component, you need to explicitly import it\n\nor\n\nIf you want to use other components, you need to explicitly import them. \n",
    "albermav": "Hello,\nI am getting the same error when using syled-components library or exporting my component using a similar methodology.\nExample:\n```jsx\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nclass Button extends Component {\n  render() {\n    return mybtn;\n  }\n}\nexport default styled(Button)border-color: 'red';;\n```\nI know this is probably a react-docgen issue... has anyone found a workaround?\nThanks guys.\n. ",
    "mxstbr": "Hmm, that's weird, styled(Button) returns a React component? This must be an issue on the react-docgen side of things, maybe?\n\nBy the way, we don't recommend using styled-components like that. This is a nicer way of doing the same thing, on top of which it works with react-docgen I'm pretty sure:\n```JS\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nconst Btn = styled.buttonborder-color: 'red';;\nclass Button extends Component {\n  render() {\n    return mybtn;\n  }\n}\nexport default Button;\n``. @MoeSattler no no no no that's 100% correct what you're doing there. It's just that the example given by @albermav had theclass`, so I kept it.\nWhat we don't recommend:\n```JS\nclass Button extends Component {\n  render() {\n    return {this.props.children}\n  }\n}\nexport default styled(Button)color: blue;\n```\nInstead of doing that, do this:\n``JS\nconst Button = styled.button\n  color: blue;\n`\nclass BigButton extends Component {\n  render() {\n    return {this.props.children}\n  }\n}\nexport default BigButton;\n```\nIt's even better when you can directly export the styled component, that's 100% perfect:\n``JS\nconst Button = styled.button\n  color: blue;\n`\nexport default Button;\n```\nThat's what we want, I just assumed @albermav had a reason for the class there and this was just a trimmed-down example.. :+1:\n. Oh damn I totally typo'ed right there.\nDo you want me to remove the Gitter badge? It seems redundant if you're using Spectrum.... Ohh we haven't enabled the watercooler for you!\nWe built a new feature recently that adds a irc-style \"General chatroom\" without any specific topic to your community which we're currently alpha-testing with a couple communities. Looks like this: https://spectrum.chat/thread/cfc324fa-13cc-4353-af00-0bbf0f611889\nWant me to enable that for you?. Yep sorry, that's my bad, I'm on it! Should be resolved shortly :blush: . ",
    "jameslaneconkling": "Documenting this here in case it's of help to anyone.\nReturning a ternary from a stateless component threw the No suitable component definition found Error.\njavascript\nconst Tooltip = ({ x, y, xOffset, yOffset, children }) => (\n  typeof x === 'number' && typeof y === 'number' ? (\n    <div\n      style={{\n        position: 'absolute',\n        top: y + yOffset,\n        left: x + xOffset,\n        pointerEvents: 'none'\n      }}\n    >\n      { children }\n    </div>\n  ) : (\n    <noscript />\n  )\n);\nRefactoring to use an if statement fixed it:\n```javascript\nconst Tooltip = ({ x, y, xOffset, yOffset, children }) => {\n  if (typeof x === 'number' && typeof y === 'number') {\n    return (\n      \n        { children }\n      \n    );\n  }\nreturn ;\n};\n```. OK, good to know.  Thanks for the response.\n. ",
    "okonet": "Sorry for bring this up again but it seems that the styled-components with any component still an issue. So following the official guide https://www.styled-components.com/docs/basics#styling-any-components I still can't get the component being seen by styleguidist. \ncc @mxstbr \nHere is my example component:\n```jsx\nimport React from 'react'\nimport styled from 'styled-components'\nconst Menu = ({children, className}) => (\n  \n    {children}\n  \n)\nexport default styled(Menu)padding: 1rem 0;\n```. For instance this\n{\n    test: /\\.css$/,\n    include: includes,\n    loader: ExtractTextPlugin.extract('style', cssLoader)\n}\nmight and will affect project's CSS pipeline (which also might have different set of postcss plugins etc.)\nBut react-styleguidist needs its own CSS pipeline, so I think it should be limited to only its own styles and not make any assumptions about userland css processing.\nJS loaders: same issues here. In my setup everything works fine since I also use Babel, but this can break for others. I'm not sure yet if JS loaders used now is cruicial for react-styleguidist to work tho.\n. I also have issues with this one\n{\n                        test: /\\.json$/,\n                        loader: 'json'\n                    },\nsince I'm using require(json!myJSONFile.json) in my code.\n. Yes, I was also thinking of this.\n. I think most people who are using webpack have custom pipelines for non-js files. It should be easier to integrate them with styleguidist config. This is why I also think that project-related webpack.config should be used by default (with some sane defaults as a fallback, probably?)\n. Usually it's in a root of the project. But this should be a configurable property in styleguide.config.js\n. I even think that this is too complex. IMO just a path or a resolved path would suffice.\nI don't think that it's just loaders section. webpack allows you to pass configurations to loader using arbitary objects in the config. See postcss-loader for instance: https://github.com/postcss/postcss-loader#usage. So this should be also copied to the final webpack config.\n. One thought I had recently is to convert styleguidist configuration to a webpack plugin which will then added to a user's webpack config. Do you think this could solve some of the issues?\n. > It\u2019s not just loaders section\nOkay then. From your first response I understood it like you would just merge loaders section into your webpack config.\n\nNot sure I understand 8-) Can you show it?\n\nNot sure either. Was just a thought if using webpack plugin architecure could help simplify configuration of the styleguidist.\n. I'm also interested in this and might give it a try.. We have an unfinished branch #330 but I think @kof didn't have time last time. I'd like to push it, though.. The function name and signature would be very nice. I doubt it should be displayed in a tooltip. Instead, I'd say, it should go into the description field.. I agree it should work out of the box without the config for common use cases. Advanced setup should be handled as well via passing arguments or having a simple cosmiconfig. . Ideally for webpack users it should not require editing project's webpack config and work like storybook (takes your webpack config but allows to extend it). Even better would be just a plugin for webpack. In this setup is really a breeze: https://github.com/carteb/carte-blanche#setup\nI can't speak a lot for non-webpack users but sane defaults sound good to me.\nStyleguidist own code should definitively be compiled since it is also will increase build speed I think. Also, distributing it is much easier then it's browser ready. Not sure why css-modules is a problem here. You still can generate a separate CSS bundle and provide it along with the index.html and main.js. But it would be interesting to see what advantages JSS can give here and theming sounds very good.\nI don't think CLI tool will help a lot, but it might be a nice addition. Good example is create-react-app.\n. I believe if you use something like initial: all you can avoid this. AFAIK JSS-isolate should solve that as well. @kof can you comment on this?\n. I have only one minor note:\n\nTry to find webpack.config.dev.js or webpack.config.js\n\nIt should probably firstly try to locate webpack.config.js. I even not sure it should go further since, by default webpack will do the same: it will try locate webpack.config.js otherwise you'll have to provide the path the config.\nOne more thing is that isn't clear from the above is what will it take to add the path the webpack config to styleguide.config.js.. > If there\u2019s no styleguide.config.js or webpackAutoDiscovery option isn\u2019t false.\nWhat happens if there is styleguide.config.js. Can you add a webpackConfigPath similarly how https://github.com/benmosher/eslint-plugin-import does?\nI'm not sure about the webpackAutoDiscovery option either. What's the purpose for it?\nI think, with CRA it should definitively just work out of the box. With the manual installation, I think it's okay to have the styleguide.config.js with webpackConfigPath (it still should by default try to load webpack.config.js and if this fails, tell about that).\nI think it's less magic but still very simple.. > Could you point me to the code where they do it?\nNope, I have no idea where it is. Search the repo?\n\nThe same as before but now it\u2019s optional. \nTo disable magic. webpackConfigPath: false could do the same.\n\nExactly. That's why I think for standalone apps this is too much magic.\n\nExactly how I see it.\n\nIt's settled then? \ud83d\udc4f. Related to #269 . Also related to #267 . I think that SSR + lazy loading should give the ultimate perf boost if we're talking about loading times. \nI've tried DllPluging on several projects and didn't see any improvements in build times \u00af_(\u30c4)_/\u00af. Related #330 . And looking at https://github.com/styleguidist/react-styleguidist/blob/master/examples/sections/lib/components/Button/Readme.md I see it's by design. \nBut this is a bad DX IMO and can be improved.. I actually wrote down my ideas:\n\nIt should be able to parse the language part of the code block and evaluate it if it's jsx? match.\nIt would be nice to check if it's a valid syntax (using try ... catch block perhaps?). Yeah, that's an interesting problem. I'm not sure how to answer all these questions. Thanks for bringing it up! I'll think about it tho.. Another idea would be to have some special markup for the markdown that would add the source code of the component as a code block below it. Advantage of this would be an ability to define where the code is displayed in Readme.md. Random file? I'm not sure I get this.. Yes, that would work as well!. After a 1x1 discussion, it seems that the most appropriate and flexible way would be to have some extended markdown syntax that would allow inlining the contents of the linked file. So, the user would write something like > ../path/to/my/file.js and it would render file contents using code fence block.\n\nThere are few open questions like:\n\nWhat this marker should look like?\nHow to determine the syntax of the file? Should user define it?\nIt would be great if those links would still work on GitHub as well. One of the possible solutions could be as simple as having a fence block with the path to a file that should be inlined.\n\n\nI'm not sure if this behavior should be more explicitly defined in the fence type (inline-jsx)\n. I really like how https://github.com/interactivethings/catalog handles it and I believe we should approach it in a similar way (specimens).. What do you mean by \"look\"? API-wise? I think it would be great to have a fenced block with some additional parameters like file path to highlight for example. Front matter as a format should work just fine. As for remark parsing \u2014 I think it can be extended?. I'd prefer front matter YAML format TBH since this make it more human readable.  I've commented on #511 . @sapegin updated.. Yay for having an original logo.\nI'd also spend some more time exploring the typography part. Generally, I think the logo (sign) is enough for OSS projects since it will be problematic to use on GitHub and still keep the type as text.. Some comments from me:\n\nI'm not sure about the second row of legs and about the secondary color. Can you try drawing separate legs (octopus should have 8, right?) and different colors perhaps?. @sapegin I like those dots on the head. \nSome suggestions: \n- Try to add suckers to the arms\n- More armssss :)\n- Less evil look probably?. Yes, it's definitively a step back. I'd try placing arms lower.. We should probably match \ud83d\udc19 emoji colors :). I was more thinking about something like this:\n\n. Sorry was just a draft :)\nI've simplified the Sketch file a bit if it helps: https://www.dropbox.com/s/yozmu8h7mhh4onn/rs.sketch?dl=0\nJust an idea: by looking at it, I'm wondering if arms could mimic RS letters (react-styleguidist) somehow.\n. @SaraVieira can you please upload images directly to GitHub (drag-n-drop them). Clicking links is pain and it would be great to have different versions visible in this thread without need top open separate tabs.\nTo the latest version: it still feels too busy to me. Can it be simplified even further?. I could polish it a bit later if @SaraVieira don't mind :). Okay, spent some time on it tonight. Thoughts?\n\n. It's an evil smile, you know \ud83d\ude08\nI think a reference to React through the color is good.. Eyes: no, it was not. Need to fix. \nSara: thanks to you! I would not do this if you haven't started working on it. And since It's not a competition but a collaboration you deserve same credit for it! \ud83d\udc4f. And I just realized we met in Amsterdam recently \ud83d\ude4c. Just FIY: I'd like to polish it a bit more.. I've spent some more time tonight. It feels that we're close to me. I made arms more plastic since the previous version felt very \"robotic\" to me. Also simplified everything a lot \u2014 now only using simple curves and inner shadows to make editing even simpler. Hopefully, SVG size will profit from that as well.\nDecided to play with colors a bit. Can revert to the blue one if this is too much but I thought the resemblance with the \ud83d\udc19 emoji wouldn't hurt.\n\nHere is also my take on typography. I'm using https://fonts.google.com/specimen/Montserrat since it's has the Open Font License:\n\nFeedback is appreciated!. Okay, back to blue.\n\n\nI've tried another font for the typography: https://fonts.google.com/specimen/Bree+Serif Feels more cheerful to me.\nI don't really like the Monteserrat as a main font. I think a good sans-serif or serif would fit better. Check out the pairing section on Google Fonts.. It's now official: https://github.com/styleguidist/brand \ud83d\ude4c\nI'm closing this one.. @n1313 with examples of what? This is a refactoring work that doesn't change any of the public APIs.. It is derived! Not sure what do you mean by explicitly requiring it. . Yes, no changes to config. . Thanks!. I agree on both points. 1st should act as close to webpack behavior as possible. Is there a chance to re-use this from webpack? Not sure they have this as a module but I believe that would be useful for many tools. \n2nd: I think config lookup should be prevented only if webpackConfigPath is set. . Well, initially I was proposing to have just one option instead of 2 as well. I think merge of config should should be explicit to remove magic. It is of course makes it harder for specific use cases but I still believe it's better. \nI'd stick with auto lookup unless webpackConfig is defined. In this case it should be user's responsibility to require and merge their config. . Webpack supports array and object out of box so the proposal to merge if it's an array is very ambiguous. If you want to merge configs why not include webpack-merge or your preferred method as a dependency? I think optimizing for advanced users will fail either way. . @sapegin why not solve both use cases via normal merge? I feel solving such edge cases will always fail since the next request will be \"allow override x\".\n```js\nconst merge = require('webpack-merge')\nmodule.exports = {\n  webpackConfig: (config) => {\n     return merge(config, {\n       entry: [\n         'babel-polyfill',\n         './src/styleguide/some.css',\n       ]\n    })\n  }\n}\n```. @sapegin yeah, that's annoying. Can we create a custom babel plugin that would strip off imports in examples if not needed?. > There\u2019s no Babel on the frontend.\nSo, how is the rest of the code being transpiled to ES5?\n\nyou can use require in example and it will work\n\nOh, probably I misunderstand the problem then. Why is import and export aren't working then?. Gotcha. Thanks for clarifying.. Yeah, also not sure why you need redux for that... \ud83e\udd14 \nI'm wondering if it can be done in a way that https://github.com/storybooks/storybook-addon-knobs can be reused.. I really like how Carte Blanche is doing it \u2014 they not only have custom UI and custom value generators, but they actually update the source code of the examples on state change so you can commit it to the repo.. That is awesome! It would be great to have such a plugin system!. One use case for updating all components in the example is theme or i18n settings: I think this should be allowed via the plugin system as well on the \"root\" level. Something to think about.. It looks like I was able to render everything besides the actual components (which is by design) statically using latest commit. \nThis includes:\n\nTOC (Table of Contents) with proper slugs (this took some time)\nMarkdown documents\nCode highlighted with highlight.js\n\nWe'll need to take some care of injecting CSS into head during the build time as well.. @kof can you help me here with rendering styles statically? SG isn't using react-jss so no SheetsRegistry etc. \nBTW @sapegin should we switch to react-jss? Can you elaborate in more details what's is missing from it to be able to use the \"official\" repository?. @kof can you commit the solution you're suggesting?. @sapegin @kof let's move off-topic discussions to separate issues since they will be lost as soon we merge it.. Yes, let's move the discussion and implement the fastest way and refactor later.. Please do this @kof! I've tons of other things to do now.. I'd say so since it belongs together.. @kof try yarn run build. Hmm, that makes me think if we still should use HtmlDocument. Right now it looks as hack. Are there any better options to do that @kof?. How own renderer would help us here?. @kof do you mind updating the PR by removing the react-html-document and introducing the template string? I'm away for a few days so won't be able to work a lot. \ud83c\udfc2 . @kof any news on this one?. @sapegin NOOOO! Why did you close it?. ~~~It seems I can't even re-open the PR. We'll need to rebase it on master and make a new PR I guess.~~~\nIt actually worked :) Still needs a rebase.. @kof do you think you could find some time to get this done any soon?. I can't see a use case for that, to be honest. What's your use case?. +1 for a better routing system. I think https://github.com/router5/router5 is worth looking at.\nAs for me, I still don't see a lot of value to render sections isolated. What I can imagine though is an introduction of \"pages\" that could be rendered separately (== isolated) using the better routing system. Each page could consist of \"sections\".. I agree on showing errors as soon as possible. Don't think this should be over complicated: if there is an error in the code then it should be displayed. . importLoaders: true, should be importLoaders: 1,. Please refer to the PostCSS loader documentation.. I also can't recognize fallback option for css-loader. You probably copy-pasted it from ExtractTextPlugin usage?. I don't know why it works in your project, but the provided config isn't correct. Also I see that you're doing push to the array of loaders. Please try run styleguidist with --verbose argument and paste the full webpack config it is using in your case. I guess that there is another loader acting for your CSS files without modules enabled.. modules: 1, should be modules: true. Can you elaborate on what is broken and how it expects it to be present?. Makes sense. We should move id to the header or section element to fix this. Mind doing this?. We could move anchors to the end of the headings \u2014 Button #. Right now they are positioned absolutely.\n@sapegin this is \"by design\" \u2014 tried to align them to the baseline but it seems a bit off in your case indeed.. Can you setup semantic release for the beta probably?. Server-side? Can you elaborate please?. Why would you need the compression for dev mode? At the same time I can see how compression can be beneficial for the production env though. Please feel free to create a PR that adds it in production only.. Yeah, I actually don't like how storybook does it since it's very restrictive. This one should theoretically allow writing custom visualizers for the components and create custom controlled components (like knobs?). We should try it out and see if it works well for us.. My concern is more UI-wise: storybook only allow you to extend by creating tabs around the content there we are interested in creating extension inside of the content.. I could when I get some more time :(. IMO always go with functions since it's much more flexible in a long-term.. @sapegin I like this \u2191\nHow will it be defined there the extension is happening? Is this pre-defiend by RSG?. Front matter is just a convention that many are using. I'm not sure how much value it will bring in this context, though. @pke can you give us some use cases for that? . GitHub actually can present front matter very nicely as a table. See https://github.com/okonet/colorsnapper-website/blob/master/_pages/faq.md for example so this isn't an issue IMO.. Yeah the more I think about it the more I like the idea. I might work on a PR for that since I might need it for some of my projects. My use case is a customization of particular examples. So what I\u2019d be looking for is an ability to pass props to the example renderer component or to the example components themselves (via context?). I like the idea! But I think this should be customizable somehow. We might want to discuss features like this in https://github.com/styleguidist/react-styleguidist/issues/354. @stepancar you can create your own Preview component and use it with SG: https://github.com/styleguidist/react-styleguidist/blob/master/examples/customised/styleguide.config.js#L51. @sapegin you can edit the branch yourself. I just did and now it's against master.. Oh I guess it doesn't help because of all these conflicts \ud83e\udd26\ud83c\udffb\u200d\u2642\ufe0f. So this means the message is even more confusing then :). @sapegin that's a lot of copy-paste. Should we include it by default?. I think the \"link\" icon should be connected with the heading. I really like how GitHub shows them. Do you think we still could show them together?. I was thinking about this lately and would be interested in this. @kof let's pair on the implementation?. Just add them to devDependencies exclusion list like here: https://github.com/okonet/eslint-config-okonet/blob/master/index.js#L47-L61. I just realized that upgrading my projects will basically break how they look so this should have been a major bump IMO.. I agree. I don't really like additional toggle button on screen for each component.. You can reproduce it in my repo: https://github.com/okonet/react-dropzone/blob/master/styleguide.config.js. I'm wondering if we could use something like front matter YAML format for that: https://jekyllrb.com/docs/frontmatter/ or even mixed thing: https://github.com/dworthen/js-yaml-front-matter. Hmm, but there will be a way to disable that, right?. @sapegin I assume if I use import etc it won't work?. Yes, that's why I would disable it and make it non-interactive.. One idea would include leveraging of the webpack dependency tree but as you mentioned, this probably will require a major rewrite :/. @SaraVieira here is my thoughts on the UI:\n\nI think the location of the buttons in the sidebar is odd. It was merely an accident I noticed them.\nI'm wondering why do we even need the hide sidebar button?\nThe second button doesn't do anything for me.... Yes, let's approach the problem with real use cases and not with the UI first. I'll write down my thoughts on the DX as soon as I get some more time. Sorry for delays :-/. Related to https://github.com/styled-components/styled-components/issues/945. @sapegin added tests and rebased (and renamed) commits on top of latest master. Hmm, probably I'm just confused... but did HMR work with persisting the state before?. Hmm, I'm wondering why it didn't work. I heard lots of \"not working\" recently and would love to hear some details on that.. I'm more wondering since I'm integrating it at Feedly right now ;). Not sure about your questions. My points are more about the maintainability. What do you mean by mutating in test? Example?. Ah no, I don't know how to tests side-effects.. This makes sense but I think what makes even more sense is to make those props interactive somehow. Probably this is something that should be evaluated after the plugin API is done?. Yes, just ran across this one. @pke can you create a PR please?. @sapegin I might need this and could work on this. I'm not sure about the second step, though. Any pointers?. Yep, we should resolve the path carefully. . I'm wondering if we could skip the config part and make it behave like this based on the URL? In this case we could just add additional action (i.e. icon or \u2387-click action) to the sidebar navigation items to open in the isolated mode?\n\nThe problem with the configuration IMO is that it addresses one use case whereas there are several depending on the current environment\u2014in development I might want to have one component per page but when publishing we should be able to see all. This can't be solved with the config right now.\nThoughts?. > The option is good to completely disable all components on one page mode.\nWhy not URL based? My concern is that once option is here it's really hard to remove it in the future. . What do you mean? We can come up with the url scheme to differentiate between 2 modes. Why do I need to change config in order to change the presentation of the component? This seems too much work for me as a user. But if @sapegin believes that config is the way, I\u2019m okay with that. We can tackle that when a better router is in place, I guess. . Not sure I'm getting it:\n\nwe need to know how many components to render when you open a style guide.\n\nWhy should the style guide behave differently in this case? We still can render all components as we do now but only display one if the URL matches? What am I missing?\nLet's say we have the following URL: localhost:6060/#!/Placeholder/edit\u2014the edit part should indicate that only one component will be rendered on this page.. I think it\u2019s a great thing to put required props on top and option below. I can imagine some push back from very pedantic users who carefully organize props in the source code so an opt-out should be provided but I believe most of users will appreciate this. . AFAIK github-slugger takes care of repetitions but in order for that to work all heading needs to be \"exposed\" globally.. So, basically this recommends removing react-styleguidist from dependencies, right? I'm not sure this is a good practice keeping in mind there is a build step which is supposed to be executed on CI servers. @sapegin what's the motivation behind it?. So, is that correct that npx will pick up the locally installed version by default? I was under impression it always take the latest from npm regardless.. Okay, good to know!. Why would we wait till next major release if this one is already a major one? Let's not get attached to version numbers, please. They are for machines.. I think this could be super useful. Any plans on PR?. > I personally find the current pagePerSectionsetting name a little confusing in React Styleguidist, but if we want to stay backwards compatible we probably don\u2019t want to change it.\nI hear you. I don't like it either so I'd say we should make a breaking change.\nWhat I was thinking lately is to move all global settings related to sections to sections themselves and make them apply per section.\nI think this would make styleguidist even more flexible. Would this solve the problem?\njs\nmodule.exports = {\n  // This would be required one\n  sections: [\n  {\n    name: 'Design tokens',\n    content: '...',\n    showCode: false,\n    showUsage: false,\n    isolated: true // Still not sure about the name\n  },\n  {\n    name: 'UI Components',\n    components: '...',\n    showCode: true,\n    showUsage: true,\n    isolated: false // Still not sure about the name\n  }\n  ]\n}\ncc @sapegin . @rafaesc Instead of introducing more options, I'd suggest to use variance instead:\njs\n{\n  codeSamples: 'hide' | 'collapse' | 'expand', // completely hides (display: none), collapses (default) or expands code samples  \n  propsMethods: 'hide' | 'collapse' | 'expand',  // completely hides (display: none), collapses (default) or expands props & methods section\n  separatePage: 'none' | 'sections' | 'components'\n}\nApart from the face it's less options, this won't allow you to create impossible state like in case with hideCode: true and collapseCode: true.\nI'd say, children sections inherit settings from parent.\njs\nmodule.exports = {\n  // This would be required one\n  sections: [\n  {\n    name: 'Design tokens',\n    content: '...',\n    components: [],\n    codeSamples: 'hide',\n    propsMethods: 'hide',\n    separatePage: 'section' // This means this page has a separate \"route\" which\n  },\n  {\n    name: 'UI Components',\n    components: '...',\n    codeSamples: 'expand',\n    propsMethods: 'expand',\n  },\n  {\n    name: 'UI Patterns',\n    components: '...',\n    codeSamples: 'collapse',\n    propsMethods: 'collapse',\n    separatePage: 'components' // This means each component get's a separate page\n  }\n  ]\n}. @rafaesc would be great if you could work on it!. @sapegin some integration tests are failing. Can you point me into the right direction?. Updated!. Thanks @didoo for the post and getting to the bottom of it!. Why not doing it for all? The only implication I can see is possible jank with lots if elements. Not sure it\u2019s critical for this kind of project.\nHow would you pass the modifier to the wrapper? AFAIK there is no way to it now. . Done!. @sapegin good to be merged?. Reach Router is tiny so I\u2019m wondering if we should try using it. It should simply a lot of code imo. https://mobile.twitter.com/ryanflorence/status/1002959657235722240. Let\u2019s try router in a separate PR and finish this one. Do we have a conclusion?. I love the idea! I think it\u2019s  worth considering a list of global components via config, still. For example, I use layout primitives almost in every example and it will become much harder if I\u2019d need to import Box and Stack components every time. . I\u2019m wondering if we could detect the import and use it instead the provided by the context?\nCan you elaborate on relative path?. Can we use aliases in webpack for that?\nI mean: if the import is present, it overwrites what context would give you. Making it fault tolerant but at the same time not required. . My suggestion still stands: https://github.com/styleguidist/react-styleguidist/issues/892#issuecomment-381612404\nAlthough I'd probably change the name to something more clear. Ideas? . After thinking about it a bit more I think the root problem is with naming of sections. Also the fact that components property \"generates\" sections per component makes the whole more complex.\nWhat if instead of bolting this on top of current structure we would introduce pages concept to styleguidist? Pages would become distinguished and uniq URLs automatically. Example:\njs\nmodule.exports = {\n    // Each page gets its own URL\n    pages: [{\n        name: 'Documentation & Examples',\n        slug: 'documentation', // optional\n        // Sections are just anchors inside the page?\n        sections: [\n            {\n                name: 'Design tokens',\n                content: 'docs/tokens.md',\n                codeSamples: 'hide',\n                propsMethods: 'hide',\n            },\n            {\n                name: 'UI Components',\n                components: '...',\n            },\n            {\n                name: 'UI Patterns',\n                components: '...',\n            }\n        ]\n    }, {\n        name: 'About',\n        content: './about.md'\n    }]\n}\nAnother thing I'm not sure in current design is also the difference between content and components which is very implicit (components will be added to content if both are provided). \nTo me the problem we're trying to solve is to make styleguidist into a web-site generator on steroids. Ultimately we could even use some other generator (like https://github.com/antwarjs/antwar) instead and only handle steroids part (components rendering, resoving etc.)?\nProbably we should start with the ideal API and think this through?. @sapegin do you have something in mind? What about my proposal with pages and sections? One problem I can see already is that it can be tricky to mix pages and sections inside one page for example.... We can change the names if we feel they don\u2019t fit but my idea was to distinguish between isolated pages and parts of one page (anchors). @yakunins I like the idea with href especially the fact it already exists and doesn't need a breaking change. Am I correct in thinking that it will cover all edge cases? Can you post an example config?. First of all, I don't like the presence of pagePerSection and sectionDepth. That's exactly the reason this issue exist. \nTry answering the following question: What would be your preferred way of doing this if you could start from scratch?\nTo me, this still feels ambiguous: what exactly href: false is affecting? The page Visual? So how do I navigate there?. Additional variable allocation. Not even sure it's more readable. But sure, why not.. It is a better name indeed!. I tried and it actually looks better in code.. Yes, that would be great. As a follow up question: do we even need to transform components and sections in the index.js? Can this also be moved to the loader's code? https://github.com/styleguidist/react-styleguidist/blob/808fd34b4d27b5b8637700098d151dde7e0b7b02/src/index.js#L28-L36\nIdeally index.js should not be concerned about it IMO.. Hmm, why can't this also be done in the loader? Can we pass the reference to window to it to make it work from one place? I assume the loader isn't a part of API so we can just use  imports-plugin for that, right?. At this point, I'm not even sure why we need a fork.... Yes, but without styles \ud83e\udd37\u200d\u2642\ufe0f . What do you mean by \"all existing headers\"?. Yeah I realize that but I don't think this a big issue. We still can put into a breaking change (which it isn't per se). Oh I see. Is there a reason for them to be in a separate dir BTW?. Can you elaborate on passing an array here? What do you mean exactly? How would this change it?. Agreed! Will refactor appropriately.. No rule defined?. Yes, but this isn't the same. This will produce 2 compiler's processes but we want to share one process.. Actually you might be right about it. I was a bit confused. Let me try it out.. val.concat(CORE_PLUGINS)?. Plugin is not a function is more correct although still too cryptic. But I see the TODO so hopefully it will be changed before the release :). I'd create a enum (Object.freeze) with all available modes and import it any time you reference it.. Instead of saying string it's better to use oneOf propType with exhausting set of values.. So what would you use instead?. Yes, as long it's a valid JSDoc it will work. Tests are following.. Since oneComponentPerPage is boolean, can it be explicitly defined as false somewhere?. It's for debugging purposes. I'll remove once it's done. Yeah, makes sense. I was wondering but wasn't sure.. oops!. was => has been? And probably a link to docs?. No, it says >=5.7.1 so it should use latest afaik.. > I guess we can check for npm ci directly.\nNot sure I get this.. I tried it locally and it installed 5.8.0. Can we move both conditions to the const?. If hideEditor is true we should not render preview since it will take time. Let put it into the condition below. . What are these changes about?. I\u2019m wondering why not introduce a routing solution to the project? It would simplify thing a lot since we won\u2019t need parse location ourselves I guess. . Yeah I agree complete router might be an overkill but let\u2019s not do parsing ourselves . ",
    "ghost": "@mxstbr \n\nBy the way, we don't recommend using styled-components like that. This is a nicer way of doing the same thing, on top of which it works with react-docgen I'm pretty sure\n\nLet me get this straight, so building a component like this is not recommended? \nconst RedDiv = styled.div`\n  background-color: red;\n`\nexport default RedDiv\nit seems weird to me that I'd have to rewrite it to this:\nconst RedDiv = styled.div`\n  background-color: red;\n`\nexport default props => <RedDiv {...props} />. thanks for the clarification @mxstbr . @smashercosmo: What was your fix? Can you post a code snippet?\n. Thanks for the quick reply. I had not, but adding require('./Component.scss') with the following loader works:\n{\n        test: /\\.scss$/,\n        include: dir,\n        loaders: ['style', 'css', 'sass']\n      }\nI'm guessing that each component should require its stylesheet, rather than expecting a CSS bundle to be available across the guide (excepting the styleguidist sheets in src/)?\n. Got it! If it would help, I might be able to adapt this to an example for the README later.\n. We want to progress not to regress.\n\n. Is it possible to see the Kao Style Guide Repo?. Is it possible to publish a running basic system and the Button components in a separate Github repo? Readme.md, Button.css, Button.js and index.js. It would be very helpful.. @sapegin @okonet \n\nEnables documenting styled-components without additional wrappers\n\nthis is really important. Can I help to make this happen?. Thanks a lot @okonet !\n@sapegin any idea already when you will release?. ",
    "sunesimonsen": "That would make my life easier, thanks for the awesome software by the way.\n. I'll do that :-)\n. @mik01aj maybe you are right that this should just live in the examples.\n. @sapegin the state access is exactly what I want. We made our own solution, but we will switch to this when it is available. Thanks.\n. This is great, when do you plan to do a new release?\n. Awesome, looking forward to it.\n. Awesome thanks for letting me know.\n. Thanks for the quick response time. \n. Thanks.\n. @sapegin thanks for merging, do you know when the merged features will be released?\n. Awesome thanks!\n. My code it not open, but I can see if I can make a minimal failing example. I'm a bit busy right now, but I'll just get back to you when I have something. I just wanted to know if this was something you guys had run into.\n. Sorry for not investigating this. I'll see if I can get time soon. Feel free to close the issue, I can reopen it when I have some more information.\nKind regards\nSune\n. I have a bit more information. I tried to log some information in the place that exploits:\n```\n{ path: '/mode/htmlmixed/htmlmixed',\n  query: null,\n  module: false,\n  directory: false,\n  file: false } '/mode/htmlmixed/htmlmixed'\n{ path: '/addon/mode/multiplex',\n  query: null,\n  module: false,\n  directory: false,\n  file: false } '/addon/mode/multiplex'\nnull ''\n/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/enhanced-resolve/lib/ModuleAliasPlugin.js:31\n                            request: newRequest.path,\n                                               ^\nTypeError: Cannot read property 'path' of null\n    at Tapable.next (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/enhanced-resolve/lib/ModuleAliasPlugin.js:31:27)\n    at Tapable. (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/enhanced-resolve/lib/ModuleAliasPlugin.js:43:5)\n    at Tapable.applyPluginsParallelBailResult (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/tapable/lib/Tapable.js:139:14)\n    at Tapable.doResolve (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/enhanced-resolve/lib/Resolver.js:83:15)\n    at Tapable.resolve (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/enhanced-resolve/lib/Resolver.js:43:33)\n    at Tapable.resolve (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js:23:14)\n    at NormalModuleFactory. (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/lib/NormalModuleFactory.js:80:28)\n    at /Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/async/lib/async.js:713:13\n    at async.forEachOf.async.eachOf (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/async/lib/async.js:233:13)\n    at _parallel (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/async/lib/async.js:712:9)\n    at Object.async.parallel (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/async/lib/async.js:726:9)\n    at NormalModuleFactory. (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/lib/NormalModuleFactory.js:73:10)\n    at NormalModuleFactory. (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/lib/NormalModuleFactory.js:27:4)\n    at NormalModuleFactory. (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/lib/NormalModuleFactory.js:156:3)\n    at NormalModuleFactory.applyPluginsAsyncWaterfall (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/node_modules/tapable/lib/Tapable.js:75:69)\n    at NormalModuleFactory.create (/Users/sunesimonsen/Code/zendesk/knowledge_client/node_modules/webpack/lib/NormalModuleFactory.js:141:7)\n```\nI'll see if I can dig a bit further.\n. @CurtisHumphrey good idea, but that is not the case, we don't export in the examples.\n. I tried to log the alias map in the ModuleAliasPlugin (/node_modules/webpack/node_modules/enhanced-resolve/lib/)\nThere is an empty codemirror alias in there, I'll see if I can figure out why.\n{ codemirror: '',\n  ...\n}\n. I figured it out. I did the following to add our project aliases in the webpack config:\njs\n      _.extend(webpackConfig.resolve.alias, aliases('src'))\nBut the webpackConfig.resolve.alias contains codemirror: ''.\nNow I'm just overriding it, that seems to work. Now I'm running into problems with my postcss setup conflicting with the styleguide, but that is another story.\n. I found out that the problem was that var codeMirrorPath = getInstalledPath('codemirror', true); returns an empty string if I don't have codemirror install on the top level or globally.\n. Now everything works.\n. @sapegin I'm using v2.14.7, but npm the npm v3 dedupe and hoisting will only save the situation if there is not a conflicting version of CodeMirror (to my knowledge).\n. @chrisdrackett try npm install codemirror and see if that helps.\n. Because my components uses css modules and are loaded by the postcss loader configured in react-styleguides\n. This line adds the config.rootDir to the includes of the postcss loader: https://github.com/sapegin/react-styleguidist/blob/master/src/make-webpack-config.js#L183\nHere you can see that the rootDir is parts of the includes: https://github.com/sapegin/react-styleguidist/blob/master/src/make-webpack-config.js#L18\nAm I misunderstanding something here, or should rootDir point to the directory where your components live?\n. @mik01aj I see, it is actually a feature that you can override the styles, so they should not be unique. But then I would like the postcss loader to keep its hands of my components and I can add my own loader.\nI might just confused about how the rootDir should be used, because right now it prefixes my components with ReactStyleguidist-.\nSorry for noise if I'm just wrong.\n. @mik01aj I basically want to control the css loading for my own components.\n. I'll close this PR and make an issue for that instead.\n. Thanks that sounds great.\nOn Wednesday, 9 December 2015, Artem Sapegin notifications@github.com\nwrote:\n\nCSS loader was enabled for your components folder by mistake :-) I\u2019ll fix\nthat in the next release.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sapegin/react-styleguidist/pull/60#issuecomment-163391103\n.\n. @sapegin I'll just make an issue for that, so it isn't forgotten.\n. @sapegin https://github.com/sapegin/react-styleguidist/issues/62\n. \n",
    "sompylasar": "Probably related #107.\n. OK, then, I think, I will have to run styleguidist server as a child process and expose it on a routed page in an iframe.\nFor future, it would be very useful for styleguidist to have a JS API that takes a config object and starts the server, not just the CLI with the file-based config.\n. Thanks for pinging me here, but FWIW I'm using https://github.com/scup/atellier which provides just a React component that is reusable without extra build or configuration in existing app. It is built with webpack before being published to npm.\nThe only things (except UI bugs) I had to work around is make it render only on the browser-side, as I've got server-side rendering.\n. Moreover, I've got full control over how the components are loaded and displayed on the stage.\nHere's how I find all the components' styleguide descriptors located in each component's styleguide directory.\n``` js\nimport lodashUniqBy from 'lodash/uniqBy';\nexport default function findComponentStyleguides() {\n  if ( SERVER ) {\n    throw new Error('Component styleguides are searched with require.context which is implemented in Webpack but missing from Node.');\n  }\n// The directory name and the regexp aren't in variables because Webpack extracts them from the source code statically (without running it). -- sompylasar\n  const styleguidesContextRequire = require.context('my-app-components', true, /^.\\/[^\\/]+\\/styleguide\\/[^\\/]+$/);\nconst styleguidesRelativePaths = styleguidesContextRequire.keys();\nconst styleguidesInfos = styleguidesRelativePaths.map((relativePath) => {\n    return {\n      exports: styleguidesContextRequire(relativePath),\n      relativePath,\n    };\n  });\n// WORKAROUND(sompylasar): For some reason, Webpack returns two references to each module, so we filter out duplicates.\n  const styleguidesInfosDeduped = lodashUniqBy(styleguidesInfos, ({ exports }) => (exports));\n// Validate and filter out invalid styleguide descriptors.\n  const styleguidesInfosFiltered = styleguidesInfosDeduped.filter(({ exports, relativePath }) => {\n    // Validate the styleguide descriptors.\n    // Require that either component or render is present.\n    const isValidStyleguideDescriptor = (exports.component || exports.render);\n// Warn about invalid styleguide descriptors in the console.\nif ( !isValidStyleguideDescriptor ) {\n  if (typeof console !== 'undefined' && typeof console.warn === 'function') {  // eslint-disable-line no-console\n    console.warn('[Styleguide/findComponentStyleguides] ' + relativePath.replace(/^\\.\\//, '') + ' exports neither `component` nor `render`.');  // eslint-disable-line no-console\n  }\n}\n\n// Keep only valid styleguide descriptors.\nreturn isValidStyleguideDescriptor;\n\n});\n// Construct the final styleguide descriptors.\n  const styleguides = styleguidesInfosFiltered.map(({ exports, relativePath }) => ({\n    // Flatten the exports object into the styleguide object.\n    ...exports,\n    // Add componentPath to the styleguide object.\n    componentPath: relativePath.replace(/^.\\//, '').replace(/\\/styleguide(\\/(index(.js)?)?)?$/, ''),\n  }));\nreturn styleguides;\n}\n```\nAnd here's how I render the styleguide (the declared component is rendered via React Router).\n``` js\nimport React from 'react';\nimport getReactComponentDisplayName from 'my-app-helpers/getReactComponentDisplayName';\nimport BrowserOnlyRender from 'my-app-helpers/BrowserOnlyRender';\nimport findComponentStyleguides from './findComponentStyleguides';\nconst StyleguideAtellier = () => {\n  return (\n    \n      {() => {\n        // Avoid server-side rendering because require.context is only available in Webpack. -- sompylasar\n        const styleguides = findComponentStyleguides();\n    // Require from the browser-side because `react-atellier` references `window` from the top-level module scope. -- sompylasar\n    const ReactAtellier_ = require('react-atellier');\n    const ReactAtellier = ( ReactAtellier_ && ReactAtellier_.__esModule ? ReactAtellier_.default : ReactAtellier_ );\n\n    // Clear the `react-atellier` broken components list so they aren't crossed out if they've recovered from being broken. -- sompylasar\n    try {\n      window.localStorage.removeItem('invalidComponents');\n    }\n    catch (ex) {\n      if (typeof console !== 'undefined' && typeof console.error === 'function') {  // eslint-disable-line no-console\n        console.error('[Styleguide/StyleguideAtellier] Failed to remove invalidComponents from localStorage.', ex);  // eslint-disable-line no-console\n      }\n    }\n\n    return (\n      <ReactAtellier\n        components={styleguides.filter(({ component }) => (!!component)).map(({\n          component,\n          componentPath,\n        }) => {\n          const componentDisplayName = getReactComponentDisplayName(component);\n\n          // Append component path if it differs from the exported component name, for clarity. -- sompylasar\n          const componentName = (\n            componentPath !== componentDisplayName\n              ? componentDisplayName + ' from /' + componentPath + ''\n              : componentDisplayName\n          );\n\n          return {\n            component,\n            componentName,\n          };\n        })}\n      />\n    );\n  }}\n</BrowserOnlyRender>\n\n);\n};\nexport default StyleguideAtellier;\n``\n. @sapegin What I've shown is written once to dynamically provide the component playground with all the components. What I wanted to achieve  is to have styleguide descriptors next to the components' code in the file structure. Unfortunately, webpack cannot do dynamic context-wise requires, so I have to hardcode certain paths which is not nice and prevents from moving this code into the styleguide library so that it can be imported. The component search function is also reused at a separate page that renders complex usecases of each component viarenderfunctions (bothrenderandcomponentare defined next to the component code;component` is rendered at the atellier stage).\n. ",
    "zammer": "I'm having issues with controlled form components losing focus onChange which means you can only type in one letter at once. \n\nAlthough this example is using a custom form input the behaviour is the same with native inputs.\nIt seems like its related to this issue or am I doing something wrong?\n. Yes, I'll have a look at that.\n. No worries.\nLeave it with me.\n. @sapegin and @mik01aj refactored as requested. \n. Thankyou\n. We use flow in our project and everything works fine. :)\n. ",
    "MoOx": "I am stuck with this issue as well. It's pretty annoying to have a state that break all the rendering :/\nAnything I can do to help?\nDoes anyone have fixed this locally?\n. @vslinko Thanks for sharing this.\nHere is my simpler version (flow)\n``` js\n// @flow\nimport { Element, Component } from \"react\"\ntype Props = {\n  initialState?: State,\n  children: (\n    state: State,\n    setState: (state: State) => void,\n  ) => Element,\n}\ntype State = {\n}\nexport default class Playground extends Component {\nstate: State;\nconstructor(props: Props) {\n    super(props)\n    this.state = (typeof props.initialState === \"object\")\n      ? props.initialState\n      : {}\n  }\nhandleStateChange(state: State) {\n    this.setState(state)\n  }\nrender(): Element {\n    return (\n      this.props.children(\n        this.state,\n        (state) => this.handleStateChange(state),\n      )\n    )\n  }\n}\n(window).Playground = Playground\n```\n. Sorry didn't understand what to do :/\n. I have to admit that styleguidist just currently offer a pretty bad UX just because of this speed issue.\nI have \"just\" 20 components and initial page render takes seconds to load.\nCompared to that my real app with 200 instances of components render in 1 or 2 seconds.\n. Is there any quick workaround to remove codemirror (even if that's involved removing the entire code below demo parts). Currently this project is more and more unusable for me, just with 20 components...\n. I successfully used a \"pre\" tag for the editor, but perfs are still very bad.\n. From what I see it should be ok as the result seems following the same format.\n. I confirm this is working like a charm, without any propTypes (only flow annotation) and no plugin to generate those.\nYou can safely add a note in the README ;)\n. I think a good approach would be to consume existing webpack by default and inject yourself styleguidist requirement. Less configuration out of the box. You can still validate user config (like for include etc).. 1. webpack.config.js by default or from CLI args.\n2. hum well in no config or no CLI arg, then skip this :)\n3. so it's even easier?. Let's me develop my idea: people wants stuff that works out of the box, no config (or really minimal stuff like a folder path) should be enough for your project (see CRA or next.js). I think I did this mistake with Phenomic: I want everything to be customisable so people needs to configure before using it: generally a bad idea, people want to try with minimal effort before actually using a tool.\nAlso supporting tools without any user effort should be made when doable. For example now Phenomic support Glamor or Aphrodite out of the box, nothing to do from your side if we can do it. I know it requires some work but it will make your project more easy to try. I honestly tried some others, but never happy. styleguidist is slow and have other problems, but it works! Having setup more easy will bring more users, so more contributors on the long run :). FYI this simple snippet kill react-docgen https://github.com/reactjs/react-docgen/issues/140. How I ended up being able to have it?\n. ",
    "vslinko": "I'm using my own wrapper to store state:\n``` ts\n/ tslint:disable:no-any /\nimport * as React from 'react';\nimport Debug from '../debug/debug';\nexport interface IPlaygroundProps extends React.Props {\n  initialState?: IPlaygroundState;\n  showState?: boolean;\n  visibleEvents?: number;\n  children: (\n    state: IPlaygroundState,\n    setState: (state: IPlaygroundState) => void,\n    log: (type: string, event: any) => void\n  ) => JSX.Element;\n}\nexport interface IEvent {\n  date: Date;\n  value: any;\n  type: string;\n}\nexport interface IPublicState {\n}\nexport interface IPlaygroundState {\n  events?: IEvent[];\n  publicState?: IPublicState;\n}\nexport default class Playground extends React.Component {\n  public static defaultProps = {\n    visibleEvents: 3,\n  };\npublic constructor(props: IPlaygroundProps) {\n    super(props);\n    this.state = {\n      events: [],\n      publicState: props.initialState || {},\n    };\n  }\npublic render() {\n    return (\n      \n        {this.props.children(\n          this.state.publicState,\n          (state) => this.handleStateChange(state),\n          (type, event) => this.handleLogEvent(type, event)\n        )}\n        {this.props.showState &&\n          \n\n\n        }\n        {this.state.events.slice(0, this.props.visibleEvents).map((event) => (\n          \nEvent '${event.type}', ${event.date.toUTCString()}}\n              value={event.value}\n            />\n          \n        ))}\n      \n    );\n  }\nprivate handleLogEvent(type: string, value: any) {\n    const events = [\n      {\n        date: new Date(),\n        value,\n        type,\n      },\n    ].concat(this.state.events);\nthis.setState({\n  events,\n});\n\n}\nprivate handleStateChange(state: IPublicState) {\n    this.setState({\n      publicState: Object.assign({}, this.state.publicState, state),\n    });\n  }\n}\n(window as any).Playground = Playground;\n```\nUsage:\n``` md\nDefault:\n<window.Playground initialState={{exampleValue: -0.5}} showState>\n  {(state, setState) => (\n    <NumberField\n      value={state.exampleValue}\n      onValueChange={value => setState({exampleValue: value})}\n    />\n  )}\n</window.Playground>\n\n```\n. I'm trying it right now and I'll share results soon.\n. No issues found. Just warnings from npm:\nnpm WARN babel-preset-react-hmre@1.1.0 requires a peer of react@^0.14.1 but none was installed.\nnpm WARN react-codemirror@0.2.5 requires a peer of react@^0.14.0 but none was installed.\n. For future seekers: you can override internal props loader and implement your own parser.\nhttps://github.com/sapegin/react-styleguidist/blob/master/loaders/props.loader.js\n. ",
    "smashercosmo": "A, ok, I got it. I need to modify webpack config for styleguide. \n. Sorry, can't really understand the question) \n. Yes, the arrow will jump to the next line, but it won't make component names jump, because it has position: absolute. Although, that's also not very beautiful. Any ideas how to improve it?\n. We can place link to isolated view on the left side of component name. But in that case I think the icon should be different. Something like external link icon.\n. If you put white-space: nowrap then in case of long component name arrow becomes completely invisible. position: absolute removes external link from the flow, so it doesn't affect vertical alignment of component name and external link. If you remove position: absolute you'll see how lines jump.\n. No problem) Feel free to close. Just thought it's useful, when user (if he has a lot of components) doesn't have to scroll down to the end of the page to be able to open component in an isolated view.\n. Yep)) You're right. Then again: feel free to close) Anyway, thx for discussion.\n. @sapegin by the way: simple display: inline will affect line height.\n. I would rather prefer resizable iframe solution\n. Changing container's width is pointless, if component has styles, that depend on the window width\n. mmm... can't understand why iframe solution can't handle both cases\n. @mik01aj Well, we can add a button to toggle 'responsive mode' per component. After button is clicked current component's markup and styles are just copied to an iframe. The drawback is of course that user can just only static markup.\n. @mik01aj I thought, that webpack puts all styles to <style> tags to handle hot reloading.\n. @mik01aj So we need to copy all <style> tags and all <link rel=\"stylesheet\"> tags. Inline styles will be copied with the markup. \n. @mik01aj so the idea is that we just make a static snapshot of a component in its current state\n. Surely it's hacky) What about loading separate component's page in an iframe? Using the real url?\n. I've just made a proof of concept of loading real component's url in an iframe. That works pretty well, except of course the fact that you can see your component in its initial state. What about combined approach: load component's url and then, when page is loaded replace html in an iframe with component's markup in its current state? Then if you change the state, you just need to replace markup.\n. Yep, there are of course performance issues with this approach. But this iframe should be rendered only on demand, if user wants to test particular component.\n. But, yes, I'm not objecting: this looks like an overhead. I'm just trying to think of every possible approach to implement this feature. (There is a big chance, that eventually we'll come conclusion, that we don't need one :))\n. @tizmagik yep, iframe solution is pretty ugly and hacky. no need to reinvent the wheel. there are much better tools to test responsiveness, so the only thing that we need to do is to let them to do their job))\n. I think, that even in this example view you should be able to change component's state and edit markup. Because how then you suppose to test responsiveness for different input data?\n. @sapegin Yes, I was also thinking about this approach.\n. @mik01aj Well, in most cases it will be ok. There could be situations, when you have many examples or not so many but component itself has a big height, so when you're changing window's width, upper  examples will push down lower examples significantly and you'll have to scroll up and down after every resize.\n. Wondering, if it is possible to edit component's example in the list view or isolated view and see changes reflected in the example view in the separate tab :) Well, possible of course, but how complex is it...\n. This is pretty critical issue. May be as a workaround we can temporally downgrade react-codemirror?. Yeah, I saw the PR, but react-codemirror is not under active development. Yeah, figured out how to do it) Thx. react-codemirror2 has got support for react 16. > That's fragile, because we always have to remember \nYou don't have to remember. You can just use https://github.com/amilajack/eslint-plugin-compat ). Ok, I'll take a stab at it. ie11 is far from being dead. I'm not quite sure, if it's a breaking change or not) But I have a feeling that it is, because it's affects how babel config is resolved.. Ok, I'll update. react-docgen updated to 4.0.1. ",
    "pke": "@panayi\n\nPresentational components update their styles based on this.context.themeVariables\n\nHow are those components aware of context changes? Does context change trigger a whole re-render?\n. I stumbled over this project a couple of weeks ago, starred it and then forgot how it was named and that I had it starred. Last week I was desperately googling anything with react component documentation by example example.md but did not find this project. react components in example.md finally lead me back to this repo.\nNow I can work on our example files for about 80 components/containers and I will present screens later here.\nThanks for creating the project!\n. @zecaptus Care to share the webpack config?\n. Running into the same problem with this as the only component in the styleguidist config:\n```es6\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n/* A phone number is a string /\nexport const PhoneNumberType = React.PropTypes.string\nconst PROPTYPES = {\n  / The number as a string. It will be normalised */\n  number: PhoneNumberType.isRequired,\n  / The content to display instead of the number */\n  children: PropTypes.node,\n}\nconst PhoneNumberLink = styled.awhite-space: nowrap;\n// https://trello.com/c/rduUgl0w/1120-normalize-telephone-numbers\nexport const normalizePhoneNumber = number => (\n  number.toString().replace(/[.- ()/]|(?:(0))/g, \"\")\n)\nexport const phoneUrl = number => tel:${normalizePhoneNumber(number)}\n/\n * A link <a> to a phone URL (tel:)\n \n * Activating this link will launch the mobile devices phone app or on the\n * desktop most likely Skype.\n \n * You should always provide a valid international phone number (ie: +49-221-433433).\n * This way your users can call the number from anywhere on the world and not\n * only when they are local to the phone number.\n */\nconst PhoneNumber = ({ number, children = number }) => (\n  {children}\n)\nPhoneNumber.propTypes = PROPTYPES\nexport default PhoneNumber\n``\n. Maybe. But the setup works in real apps just fine. The idea is there is global, app wide registry for extensions. All this is also very testable in my unit tests. Adding a function to the registry to clear it would still not help in this case, as examples can not run this code, because the last line in the example must be the rendered component.. I'm thinking about using react context. Which would not change the signature of the component. It would then either use context or the global function to get its data. . I found a solution for my component. It uses now the provider pattern known fromredux` and others and its very good testable now. It can also run examples in styleguidist now in isolation.. Nevermind, I was editing the wrong file :(. Got it:\ncompilerConfig: {\n    transforms: {\n      dangerousTaggedTemplateString: true,\n    },\n  },\nMaybe we should put that into the FAQ?\n. Aha. Didn't know there is a webpack 4 already :) Can it do proper tree shaking now finally?. ",
    "CurtisHumphrey": "I believe something like this will trigger the issue:\nin es6\n```\nexport class Example extends React.Component {\n  render() {\n    return ( Hi );\n  }\n}\nexport default Example; //image the default alters the Example is some way\n```\n. ",
    "zkadish": "same issue here\n. ",
    "jacobpdq": "I'm getting it on a fresh install; \n\n. ",
    "Kyle-Mendes": "That seems to have done it! Thank you.\n. ",
    "jardakotesovec": "Is there some workaround until its fixed? Except put displayName everywhere..\n. I have my components in components folder and got same error, when I was referencing out of this components folder, like to utils or constants.\nI solved this problem by adding these folders to webpack config in updateWebpackConfig, so they get processed by babel.\n```\n webpackConfig.module.loaders[0].include.push(path.join(__dirname, './utils'));\n webpackConfig.module.loaders[0].include.push(path.join(__dirname, './constants'));\n```\n. @sapegin I apologize.. I just went through the config options and missed that wrapper component can be replaced like this - which is exactly I need.  \nThanks!\n. ",
    "torvalde": "For me it would be best not to use the existing webpack config of the project, I already have some differences between my prod config, dev config and karma config so I need to separate them, one more place to update would not matter too much for me. These files do not change so much anyway, and it is more important for me to have some flexibility in configuring the styleguide pipeline/avoid situations where I can't upgrade something because of some incompatibility.\nThe best for me would be to have an optional webpack section in the styleguide.config.js file, similar to the webpack section in karma.conf.js when using karma-webpack.\n. ",
    "withgallantry": "Currently it's\nmodule.exports = {\n  rootDir: './lib',\n  components: './lib/components/**/*.js',\n  styleguideDir: './docs-react'\n};\n. Sure, \nNode version is 4.1.1\nNPM is 3.3.4\n.babelrc is as follows:\n{\n  \"stage\": 0,\n  \"optional\": [\"runtime\"],\n  \"env\": {\n    \"development\": {\n      \"plugins\": [\"react-transform\"],\n      \"extra\": {\n        \"react-transform\": {\n          \"transforms\": [{\n            \"transform\": \"react-transform-hmr\",\n            \"imports\": [\"react\"],\n            \"locals\": [\"module\"]\n          }]\n        }\n      }\n    }\n  }\n}\n. thanks @mik01aj but I get the same issue, I also have to run it as \n(cd node_modules; BABEL_ENV=styleguidist ./react-styleguidist/bin/styleguidist server --config ../styleguide.config.js)\nto stop collisions with 'babel-plugin-react-transform'\n. @mik01aj \nI  still get \n/react-styleguidist/src/index.js Line 1: Unexpected token\nYou may need an appropriate loader to handle this file type.\n| import React from 'react';\n| import ReactDOM from 'react-dom';\n| import { setComponentsNames, globalizeComponents } from './utils/utils';\nwhen running \n(cd node_modules; BABEL_ENV=styleguidist ./react-styleguidist/bin/styleguidist server --config ../styleguide.config.js)\nso I don't think it's just babel-plugin-react-transform\n. 5.8.29 - that's quite old. I'll try updating.\n. @mik01aj I'll test now\n. Here is my config if it helps. \n``` js\nvar path = require ('path');\nvar webpack = require ('webpack');\nvar HtmlWebpackPlugin = require ('html-webpack-plugin');\nmodule.exports = {\n  devtool: 'cheap-module-eval-source-map',\n  entry: [\n    'webpack-hot-middleware/client',\n    './lib/index',\n    'react'\n  ],\n  output: {\n    filename: 'app.js',\n    path: path.join (dirname, 'dist'),\n    publicPath: '/assets/'\n  },\n  plugins: [\n    new webpack.DefinePlugin ({ __CLIENT: true, SERVER: false }),\n    new webpack.HotModuleReplacementPlugin (),\n    new webpack.NoErrorsPlugin (),\n    new webpack.DefinePlugin ({\n      'process.env': {\n        'NODE_ENV': JSON.stringify ('development'),\n      },\n      'DEVTOOLS': process.env.DEVTOOLS === 'true' ? true : false\n    }),\n    new HtmlWebpackPlugin ({\n      title: 'Redux React Router Async Example',\n      filename: 'index.html',\n      template: 'index.template.html',\n      favicon: path.join (__dirname, 'assets', 'images', 'favicon.ico')\n    })\n  ],\n  module: {\n    loaders: [\n      { test: /(.eot|.svg|.ttf|.woff|.woff2)/, loader: 'file-loader?name=fonts/[name].[ext]' },\n      { test: /.pcss$/, loader: 'style-loader!css-loader!postcss-loader' },\n      { test: /.js$/, loader: 'babel', include: path.join (__dirname, 'lib') }\n    ]\n  },\n  postcss: function (webp) {\n    return [require ('postcss-import') ({ addDependencyTo: webp }), require ('postcss-custom-selectors'), require ('postcss-nested'), require ('postcss-custom-properties'), require ('postcss-simple-vars'), require ('postcss-custom-media'), require ('autoprefixer') ({ browsers: ['last 2 versions'] })];\n  }\n};\n```\nincase anything jumps out.\n. It is my config. I used a boilerplate and built on top of it.\nHere is verbose output:\n```\nUsing config file: /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/styleguide.config.js\nrootDir:                      /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/lib\ncomponents:                   ./lib/components/global/*/.js\nskipComponentsWithoutExample: false\ntitle:                        Style guide\nstyleguideDir:                /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/styleguide\ntemplate:                     /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/src/templates/index.html\nserverHost:                   localhost\nserverPort:                   3000\nhighlightTheme:               base16-light\nverbose:                      true\ngetExampleFilename: \ngetComponentPathLine: \nupdateWebpackConfig:          null\nUsing Webpack config:\nentry: \n  - webpack-hot-middleware/client\n  - /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/src/index\ndebug:         true\ncache:         true\ndevtool:       eval-source-map\nstats: \n  colors:  true\n  reasons: true\nplugins: \n  - \n\n\n\noptions: \n  title:    Style guide\n  template: /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/src/templates/index.html\n  inject:   true\n\n\n\ndefinitions: \n  process.env: \n    NODE_ENV: \"development\"\nmodule: \n  loaders: \n\ntest: \n    source:     .jsx?$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  include: \n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/src\n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/lib\n  loader:  babel\n  query: \nstage:   0\nplugins: \n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/babel-plugin-react-transform\nextra: \n  react-transform: \n    transforms: \n\ntransform: react-transform-hmr\nimports: \n\nreact\nlocals: \nmodule\n\n\n\ntransform: react-transform-catch-errors\nimports: \n\nreact\nredbox-react\n\n\n\n\n\n\ntest: \n    source:     .json$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loader: json\ntest: \n    source:     .css$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  include: /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/codemirror\n  loader:  style!css\ntest: \n    source:     .css$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  include: \n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/src\n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/lib\n  loader:  style!css?modules&importLoaders=1&localIdentName=ReactStyleguidist-[name]__[local]!postcss\n  noParse: \n\n\nsource:     babel-core\\/browser.js\n  global:     false\n  ignoreCase: false\n  multiline:  false\n  lastIndex:  0\noutput: \n  path:     /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/styleguide\n  filename: build/bundle.js\nresolve: \n  root:               /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/src\n  extensions: \n\n.js\n.jsx\n  modulesDirectories: \n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/node_modules\nnode_modules\n  alias: \ncodemirror: /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/codemirror\nresolveLoader: \n  modulesDirectories: \n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/loaders\n/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/node_modules\nnode_modules\npostcss: \n\n\n\nListening at http://localhost:3000\nwebpack built 799e90290843fb388479 in 531ms\nHash: 799e90290843fb388479\nVersion: webpack 1.12.9\nTime: 531ms\n          Asset     Size  Chunks       Chunk Names\nbuild/bundle.js  45.3 kB       0       main\nchunk    {0} build/bundle.js (main) 7.79 kB [rendered]\n    [0] multi main 40 bytes {0} [built] [1 error]\n    [1] (webpack)-hot-middleware/client.js 3.24 kB {0} [built]\n    [2] (webpack)/buildin/module.js 251 bytes {0} [built]\n    [3] (webpack)-hot-middleware/~/strip-ansi/index.js 161 bytes {0} [built]\n    [4] (webpack)-hot-middleware/~/ansi-regex/index.js 145 bytes {0} [built]\n    [5] (webpack)-hot-middleware/client-overlay.js 1.01 kB {0} [built]\n    [6] (webpack)-hot-middleware/process-update.js 2.95 kB {0} [built]\nERROR in ./~/react-styleguidist/src/index.js\nModule parse failed: /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/node_modules/babel-loader/index.js?{\"stage\":0,\"plugins\":[\"/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/babel-plugin-react-transform\"],\"extra\":{\"react-transform\":{\"transforms\":[{\"transform\":\"react-transform-hmr\",\"imports\":[\"react\"],\"locals\":[\"module\"]},{\"transform\":\"react-transform-catch-errors\",\"imports\":[\"react\",\"redbox-react\"]}]}}}!/Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguidist/src/index.js Line 1: Unexpected token\nYou may need an appropriate loader to handle this file type.\n| import React from 'react';\n| import ReactDOM from 'react-dom';\n| import { setComponentsNames, globalizeComponents } from './utils/utils';\n @ multi main\n.\nredux-react-router-async-example@0.0.1 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example\n\u251c\u2500\u252c autoprefixer@6.2.1\n\u2502 \u251c\u2500\u252c browserslist@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 caniuse-db@1.0.30000372\n\u2502 \u251c\u2500\u2500 caniuse-db@1.0.30000382\n\u2502 \u251c\u2500\u2500 normalize-range@0.1.2\n\u2502 \u251c\u2500\u2500 num2fraction@1.2.2\n\u2502 \u2514\u2500\u2500 postcss-value-parser@3.2.3\n\u251c\u2500\u252c babel@5.8.34\n\u2502 \u251c\u2500\u252c chokidar@1.3.0\n\u2502 \u2502 \u251c\u2500\u252c anymatch@1.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 arrify@1.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c micromatch@2.3.3\n\u2502 \u2502 \u2502   \u251c\u2500\u252c arr-diff@1.1.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 arr-flatten@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 array-slice@0.2.3\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 array-unique@0.2.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c braces@1.8.2\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c expand-range@1.8.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c fill-range@2.2.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 is-number@1.1.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isobject@1.0.2\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u252c randomatic@1.1.3\n\u2502 \u2502 \u2502   \u2502 \u2502     \u2514\u2500\u252c is-number@2.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502       \u2514\u2500\u2500 kind-of@3.0.2\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 preserve@0.2.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 repeat-element@1.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 expand-brackets@0.1.4\n\u2502 \u2502 \u2502   \u251c\u2500\u252c extglob@0.3.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c ansi-green@0.1.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 ansi-wrap@0.1.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 success-symbol@0.1.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 filename-regex@2.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c kind-of@2.0.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-buffer@1.1.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 lazy-cache@0.2.4\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 normalize-path@2.0.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c object.omit@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c for-own@0.1.3\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 for-in@0.1.4\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-extendable@0.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c parse-glob@3.0.4\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 glob-base@0.3.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-dotfile@1.0.2\n\u2502 \u2502 \u2502   \u2514\u2500\u252c regex-cache@0.4.2\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 is-equal-shallow@0.1.3\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 is-primitive@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 async-each@0.1.6\n\u2502 \u2502 \u251c\u2500\u252c fsevents@1.0.5\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 nan@2.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c node-pre-gyp@0.6.15\n\u2502 \u2502 \u2502   \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2502 \u2502   \u251c\u2500\u252c nopt@3.0.4\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 abbrev@1.0.7\n\u2502 \u2502 \u2502   \u251c\u2500\u252c npmlog@1.2.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 ansi@0.3.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c are-we-there-yet@1.0.4\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 delegates@0.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@1.1.13\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c gauge@1.2.2\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 has-unicode@1.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c lodash.pad@3.1.1\n\u2502 \u2502 \u2502   \u2502   \u2502 \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c lodash._createpadding@3.6.1\n\u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 lodash.repeat@3.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 lodash.padleft@3.1.1\n\u2502 \u2502 \u2502   \u2502   \u2514\u2500\u2500 lodash.padright@3.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c rc@1.1.2\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 deep-extend@0.2.11\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 ini@1.3.4\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 minimist@1.2.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 strip-json-comments@0.1.3\n\u2502 \u2502 \u2502   \u251c\u2500\u252c request@2.65.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 aws-sign2@0.6.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c bl@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@2.0.4\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 process-nextick-args@1.0.3\n\u2502 \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 util-deprecate@1.0.2\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 caseless@0.11.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c combined-stream@1.0.5\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 extend@3.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 forever-agent@0.6.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c form-data@1.0.0-rc3\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 async@1.5.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c har-validator@2.0.2\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c chalk@1.1.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c has-ansi@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 strip-ansi@3.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c commander@2.9.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c is-my-json-valid@2.12.2\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 generate-function@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c generate-object-property@1.2.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 is-property@1.0.2\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 jsonpointer@2.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c pinkie-promise@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 pinkie@1.0.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c hawk@3.1.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 boom@2.10.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 cryptiles@2.0.5\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 hoek@2.16.3\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 sntp@1.0.9\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c http-signature@0.11.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 asn1@0.1.11\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 assert-plus@0.1.5\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 ctype@0.5.3\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 isstream@0.1.2\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 json-stringify-safe@5.0.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c mime-types@2.1.7\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.19.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 node-uuid@1.4.3\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 oauth-sign@0.8.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 qs@5.2.0\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 stringstream@0.0.5\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 tough-cookie@2.2.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 tunnel-agent@0.4.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c rimraf@2.4.3\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c glob@5.0.15\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2502   \u2502   \u2502 \u251c\u2500\u2500 once@1.3.2\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u252c minimatch@3.0.0\n\u2502 \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.1\n\u2502 \u2502 \u2502   \u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.2.1\n\u2502 \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u2502 \u2502   \u2502   \u251c\u2500\u2500 once@1.3.2\n\u2502 \u2502 \u2502   \u2502   \u2514\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 semver@5.0.3\n\u2502 \u2502 \u2502   \u251c\u2500\u252c tar@2.2.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 block-stream@0.0.8\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 fstream@1.0.8\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u252c tar-pack@3.1.0\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 debug@0.7.4\n\u2502 \u2502 \u2502     \u251c\u2500\u252c fstream-ignore@1.0.3\n\u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 minimatch@3.0.0\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 graceful-fs@4.1.2\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 once@1.1.1\n\u2502 \u2502 \u2502     \u251c\u2500\u252c readable-stream@1.0.33\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 core-util-is@1.0.1\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2502     \u2502 \u251c\u2500\u2500 isarray@0.0.1\n\u2502 \u2502 \u2502     \u2502 \u2514\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 rimraf@2.2.8\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 uid-number@0.0.3\n\u2502 \u2502 \u251c\u2500\u2500 glob-parent@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c is-binary-path@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 binary-extensions@1.4.0\n\u2502 \u2502 \u251c\u2500\u252c is-glob@2.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 is-extglob@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 readdirp@2.0.0\n\u2502 \u251c\u2500\u252c commander@2.9.0\n\u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1\n\u2502 \u251c\u2500\u2500 convert-source-map@1.1.2\n\u2502 \u251c\u2500\u2500 fs-readdir-recursive@0.1.2\n\u2502 \u251c\u2500\u2500 lodash@3.10.1\n\u2502 \u251c\u2500\u2500 output-file-sync@1.1.1\n\u2502 \u251c\u2500\u2500 path-exists@1.0.0\n\u2502 \u251c\u2500\u2500 path-is-absolute@1.0.0\n\u2502 \u251c\u2500\u2500 slash@1.0.0\n\u2502 \u2514\u2500\u2500 source-map@0.5.3\n\u251c\u2500\u252c babel-core@5.8.34\n\u2502 \u251c\u2500\u2500 babel-plugin-constant-folding@1.0.1\n\u2502 \u251c\u2500\u2500 babel-plugin-dead-code-elimination@1.0.2\n\u2502 \u251c\u2500\u2500 babel-plugin-eval@1.0.1\n\u2502 \u251c\u2500\u2500 babel-plugin-inline-environment-variables@1.0.1\n\u2502 \u251c\u2500\u2500 babel-plugin-jscript@1.0.4\n\u2502 \u251c\u2500\u2500 babel-plugin-member-expression-literals@1.0.1\n\u2502 \u251c\u2500\u2500 babel-plugin-property-literals@1.0.1\n\u2502 \u251c\u2500\u2500 babel-plugin-proto-to-assign@1.0.4\n\u2502 \u251c\u2500\u2500 babel-plugin-react-constant-elements@1.0.3\n\u2502 \u251c\u2500\u2500 babel-plugin-react-display-name@1.0.3\n\u2502 \u251c\u2500\u2500 babel-plugin-remove-console@1.0.1\n\u2502 \u251c\u2500\u2500 babel-plugin-remove-debugger@1.0.1\n\u2502 \u251c\u2500\u2500 babel-plugin-runtime@1.0.7\n\u2502 \u251c\u2500\u252c babel-plugin-undeclared-variables-check@1.0.2\n\u2502 \u2502 \u2514\u2500\u2500 leven@1.0.2\n\u2502 \u251c\u2500\u2500 babel-plugin-undefined-to-void@1.1.6\n\u2502 \u251c\u2500\u2500 babylon@5.8.34\n\u2502 \u251c\u2500\u2500 bluebird@2.10.2\n\u2502 \u251c\u2500\u252c chalk@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.1.0\n\u2502 \u2502 \u251c\u2500\u2500 has-ansi@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 strip-ansi@3.0.0\n\u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u251c\u2500\u2500 core-js@1.2.6\n\u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u251c\u2500\u252c detect-indent@3.0.1\n\u2502 \u2502 \u2514\u2500\u2500 get-stdin@4.0.1\n\u2502 \u251c\u2500\u2500 esutils@2.0.2\n\u2502 \u251c\u2500\u2500 globals@6.4.1\n\u2502 \u251c\u2500\u252c home-or-tmp@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 os-tmpdir@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 user-home@1.1.1\n\u2502 \u251c\u2500\u252c is-integer@1.0.6\n\u2502 \u2502 \u2514\u2500\u252c is-finite@1.0.1\n\u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.0\n\u2502 \u251c\u2500\u2500 js-tokens@1.0.1\n\u2502 \u251c\u2500\u2500 json5@0.4.0\n\u2502 \u251c\u2500\u252c line-numbers@0.2.0\n\u2502 \u2502 \u2514\u2500\u2500 left-pad@0.0.3\n\u2502 \u251c\u2500\u252c minimatch@2.0.10\n\u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.2\n\u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.3.0\n\u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u251c\u2500\u2500 private@0.1.6\n\u2502 \u251c\u2500\u252c regenerator@0.8.40\n\u2502 \u2502 \u251c\u2500\u252c commoner@0.10.4\n\u2502 \u2502 \u2502 \u251c\u2500\u252c detective@4.3.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 acorn@1.2.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 iconv-lite@0.4.13\n\u2502 \u2502 \u251c\u2500\u252c defs@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c alter@0.2.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 stable@0.1.5\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-traverse@0.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 breakable@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-fmt@0.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 simple-is@0.2.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 stringmap@0.2.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 stringset@0.2.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 tryor@0.1.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c yargs@3.27.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c os-locale@1.4.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u252c lcid@1.0.0\n\u2502 \u2502 \u2502   \u2502   \u2514\u2500\u2500 invert-kv@1.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 window-size@0.1.4\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 y18n@3.2.0\n\u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u251c\u2500\u252c recast@0.10.33\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ast-types@0.8.12\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima-fb@15001.1001.0-dev-harmony-fb\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 source-map@0.5.3\n\u2502 \u2502 \u2514\u2500\u2500 through@2.3.8\n\u2502 \u251c\u2500\u252c regexpu@1.3.0\n\u2502 \u2502 \u251c\u2500\u2500 esprima@2.7.0\n\u2502 \u2502 \u251c\u2500\u2500 regenerate@1.2.1\n\u2502 \u2502 \u251c\u2500\u2500 regjsgen@0.2.0\n\u2502 \u2502 \u2514\u2500\u252c regjsparser@0.1.5\n\u2502 \u2502   \u2514\u2500\u2500 jsesc@0.5.0\n\u2502 \u251c\u2500\u2500 repeating@1.1.3\n\u2502 \u251c\u2500\u2500 resolve@1.1.6\n\u2502 \u251c\u2500\u2500 shebang-regex@1.0.0\n\u2502 \u251c\u2500\u2500 source-map@0.5.3\n\u2502 \u251c\u2500\u252c source-map-support@0.2.10\n\u2502 \u2502 \u2514\u2500\u252c source-map@0.1.32\n\u2502 \u2502   \u2514\u2500\u2500 amdefine@1.0.0\n\u2502 \u251c\u2500\u2500 to-fast-properties@1.0.1\n\u2502 \u251c\u2500\u2500 trim-right@1.0.1\n\u2502 \u2514\u2500\u2500 try-resolve@1.0.1\n\u251c\u2500\u252c babel-eslint@4.1.6\n\u2502 \u251c\u2500\u2500 acorn-to-esprima@1.0.7\n\u2502 \u251c\u2500\u252c lodash.assign@3.2.0\n\u2502 \u2502 \u251c\u2500\u252c lodash._baseassign@3.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash._basecopy@3.0.1\n\u2502 \u2502 \u251c\u2500\u252c lodash._createassigner@3.1.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash._isiterateecall@3.0.9\n\u2502 \u2502 \u2514\u2500\u2500 lodash.keys@3.1.2\n\u2502 \u2514\u2500\u252c lodash.pick@3.1.0\n\u2502   \u251c\u2500\u2500 lodash._baseflatten@3.1.4\n\u2502   \u251c\u2500\u2500 lodash._bindcallback@3.0.1\n\u2502   \u251c\u2500\u2500 lodash._pickbyarray@3.0.2\n\u2502   \u251c\u2500\u252c lodash._pickbycallback@3.0.0\n\u2502   \u2502 \u2514\u2500\u2500 lodash._basefor@3.0.2\n\u2502   \u2514\u2500\u2500 lodash.restparam@3.6.1\n\u251c\u2500\u252c babel-jest@6.0.1\n\u2502 \u2514\u2500\u252c babel-core@6.3.26\n\u2502   \u251c\u2500\u252c babel-code-frame@6.3.13\n\u2502   \u2502 \u2514\u2500\u2500 js-tokens@1.0.2\n\u2502   \u251c\u2500\u252c babel-generator@6.3.26\n\u2502   \u2502 \u251c\u2500\u2500 babel-messages@6.3.18\n\u2502   \u2502 \u251c\u2500\u252c babel-types@6.3.24\n\u2502   \u2502 \u2502 \u2514\u2500\u252c babel-traverse@6.3.26\n\u2502   \u2502 \u2502   \u251c\u2500\u2500 babylon@6.3.26\n\u2502   \u2502 \u2502   \u2514\u2500\u2500 globals@8.17.0\n\u2502   \u2502 \u2514\u2500\u2500 source-map@0.5.3\n\u2502   \u251c\u2500\u2500 babel-helpers@6.3.13\n\u2502   \u251c\u2500\u2500 babel-messages@6.3.13\n\u2502   \u251c\u2500\u252c babel-register@6.3.13\n\u2502   \u2502 \u2514\u2500\u252c babel-core@6.3.26\n\u2502   \u2502   \u251c\u2500\u252c babel-traverse@6.3.26\n\u2502   \u2502   \u2502 \u2514\u2500\u2500 globals@8.17.0\n\u2502   \u2502   \u251c\u2500\u2500 babel-types@6.3.24\n\u2502   \u2502   \u251c\u2500\u2500 babylon@6.3.26\n\u2502   \u2502   \u2514\u2500\u2500 source-map@0.5.3\n\u2502   \u251c\u2500\u252c babel-template@6.3.13\n\u2502   \u2502 \u251c\u2500\u252c babel-traverse@6.3.16\n\u2502   \u2502 \u2502 \u251c\u2500\u2500 babylon@6.3.15\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 globals@8.14.0\n\u2502   \u2502 \u251c\u2500\u2500 babel-types@6.3.14\n\u2502   \u2502 \u2514\u2500\u2500 babylon@6.3.26\n\u2502   \u251c\u2500\u252c babel-traverse@6.3.26\n\u2502   \u2502 \u2514\u2500\u2500 globals@8.17.0\n\u2502   \u251c\u2500\u2500 babel-types@6.3.24\n\u2502   \u251c\u2500\u2500 babylon@6.3.26\n\u2502   \u2514\u2500\u2500 source-map@0.5.3\n\u251c\u2500\u252c babel-loader@5.4.0\n\u2502 \u251c\u2500\u252c loader-utils@0.2.12\n\u2502 \u2502 \u2514\u2500\u2500 big.js@3.1.3\n\u2502 \u2514\u2500\u2500 object-assign@3.0.0\n\u251c\u2500\u252c babel-plugin-react-intl@1.0.0\n\u2502 \u2514\u2500\u2500 intl-messageformat-parser@1.2.0\n\u251c\u2500\u252c babel-plugin-react-transform@1.1.1\n\u2502 \u2514\u2500\u2500 path-parse@1.0.5\n\u251c\u2500\u2500 babel-runtime@5.8.34\n\u251c\u2500\u2500 classlist-polyfill@1.0.2\n\u251c\u2500\u2500 classnames@2.2.1\n\u251c\u2500\u252c copyfiles@0.2.1\n\u2502 \u251c\u2500\u252c glob@3.2.11\n\u2502 \u2502 \u2514\u2500\u252c minimatch@0.3.0\n\u2502 \u2502   \u251c\u2500\u2500 lru-cache@2.7.3\n\u2502 \u2502   \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u251c\u2500\u2500 ltcdr@2.2.1\n\u2502 \u251c\u2500\u2500 mkdirp@0.3.5\n\u2502 \u251c\u2500\u252c noms@0.0.0\n\u2502 \u2502 \u2514\u2500\u252c readable-stream@1.0.33\n\u2502 \u2502   \u2514\u2500\u2500 core-util-is@1.0.2\n\u2502 \u2514\u2500\u252c through2@0.4.2\n\u2502   \u251c\u2500\u2500 readable-stream@1.0.33\n\u2502   \u2514\u2500\u252c xtend@2.1.2\n\u2502     \u2514\u2500\u2500 object-keys@0.4.0\n\u251c\u2500\u252c css-loader@0.21.0\n\u2502 \u251c\u2500\u252c css-selector-tokenizer@0.5.4\n\u2502 \u2502 \u251c\u2500\u2500 cssesc@0.1.0\n\u2502 \u2502 \u2514\u2500\u2500 fastparse@1.1.1\n\u2502 \u251c\u2500\u252c cssnano@3.3.2\n\u2502 \u2502 \u251c\u2500\u2500 decamelize@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 defined@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 indexes-of@1.0.1\n\u2502 \u2502 \u251c\u2500\u252c postcss-colormin@2.1.7\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 colr-convert@1.0.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 css-color-names@0.0.2\n\u2502 \u2502 \u251c\u2500\u2500 postcss-convert-values@2.3.4\n\u2502 \u2502 \u251c\u2500\u2500 postcss-discard-comments@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 postcss-discard-duplicates@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-discard-empty@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c postcss-discard-unused@2.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 flatten@0.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqs@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c postcss-filter-plugins@2.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqid@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c postcss-merge-idents@2.1.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 has-own@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-merge-longhand@2.0.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-merge-rules@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 postcss-minify-font-values@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c postcss-minify-params@1.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 alphanum-sort@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 postcss-minify-selectors@2.0.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-normalize-charset@1.1.0\n\u2502 \u2502 \u251c\u2500\u252c postcss-normalize-url@3.0.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-absolute-url@2.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c normalize-url@1.4.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 prepend-http@1.0.3\n\u2502 \u2502 \u2502   \u251c\u2500\u252c query-string@3.0.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 strict-uri-encode@1.0.2\n\u2502 \u2502 \u2502   \u2514\u2500\u252c sort-keys@1.1.1\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 is-plain-obj@1.1.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-ordered-values@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 postcss-reduce-idents@2.2.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-reduce-transforms@1.0.3\n\u2502 \u2502 \u251c\u2500\u252c postcss-svgo@2.1.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-svg@1.1.1\n\u2502 \u2502 \u2502 \u2514\u2500\u252c svgo@0.5.6\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 coa@1.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 whet.extend@0.9.9\n\u2502 \u2502 \u251c\u2500\u2500 postcss-unique-selectors@2.0.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-value-parser@3.1.3\n\u2502 \u2502 \u2514\u2500\u2500 postcss-zindex@2.0.0\n\u2502 \u251c\u2500\u252c lodash.camelcase@3.0.1\n\u2502 \u2502 \u2514\u2500\u252c lodash._createcompounder@3.0.0\n\u2502 \u2502   \u251c\u2500\u2500 lodash.deburr@3.0.2\n\u2502 \u2502   \u2514\u2500\u2500 lodash.words@3.0.2\n\u2502 \u251c\u2500\u2500 object-assign@4.0.1\n\u2502 \u251c\u2500\u2500 postcss-modules-extract-imports@1.0.0-beta2\n\u2502 \u251c\u2500\u2500 postcss-modules-local-by-default@1.0.0\n\u2502 \u251c\u2500\u2500 postcss-modules-scope@1.0.0-beta2\n\u2502 \u251c\u2500\u252c postcss-modules-values@1.1.1\n\u2502 \u2502 \u2514\u2500\u2500 icss-replace-symbols@1.0.2\n\u2502 \u2514\u2500\u2500 source-list-map@0.1.5\n\u251c\u2500\u2500 es6-promise@3.0.2\n\u251c\u2500\u252c eslint@1.10.3\n\u2502 \u251c\u2500\u252c concat-stream@1.5.1\n\u2502 \u2502 \u251c\u2500\u252c readable-stream@2.0.4\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 process-nextick-args@1.0.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 util-deprecate@1.0.2\n\u2502 \u2502 \u2514\u2500\u2500 typedarray@0.0.6\n\u2502 \u251c\u2500\u252c doctrine@0.7.2\n\u2502 \u2502 \u251c\u2500\u2500 esutils@1.1.6\n\u2502 \u2502 \u2514\u2500\u2500 isarray@0.0.1\n\u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.3\n\u2502 \u251c\u2500\u252c escope@3.3.0\n\u2502 \u2502 \u251c\u2500\u252c es6-map@0.1.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 d@0.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es5-ext@0.10.9\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es6-iterator@2.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es6-set@0.1.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 es6-symbol@3.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 event-emitter@0.3.4\n\u2502 \u2502 \u251c\u2500\u2500 es6-weak-map@2.0.1\n\u2502 \u2502 \u2514\u2500\u252c esrecurse@3.1.1\n\u2502 \u2502   \u2514\u2500\u2500 estraverse@3.1.0\n\u2502 \u251c\u2500\u2500 espree@2.2.5\n\u2502 \u251c\u2500\u2500 estraverse@4.1.1\n\u2502 \u251c\u2500\u2500 estraverse-fb@1.3.1\n\u2502 \u251c\u2500\u252c file-entry-cache@1.2.4\n\u2502 \u2502 \u2514\u2500\u252c flat-cache@1.0.10\n\u2502 \u2502   \u251c\u2500\u252c del@2.1.0\n\u2502 \u2502   \u2502 \u251c\u2500\u252c globby@3.0.1\n\u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c array-union@1.0.1\n\u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 array-uniq@1.0.2\n\u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c pinkie-promise@1.0.0\n\u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 pinkie@1.0.0\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 is-path-cwd@1.0.0\n\u2502 \u2502   \u2502 \u251c\u2500\u252c is-path-in-cwd@1.0.0\n\u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 is-path-inside@1.0.0\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 pify@2.3.0\n\u2502 \u2502   \u2502 \u2514\u2500\u252c pinkie-promise@2.0.0\n\u2502 \u2502   \u2502   \u2514\u2500\u2500 pinkie@2.0.1\n\u2502 \u2502   \u251c\u2500\u252c read-json-sync@1.1.0\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502   \u2514\u2500\u2500 write@0.2.1\n\u2502 \u251c\u2500\u2500 globals@8.13.0\n\u2502 \u251c\u2500\u252c handlebars@4.0.5\n\u2502 \u2502 \u251c\u2500\u2500 async@1.5.0\n\u2502 \u2502 \u251c\u2500\u252c optimist@0.6.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.10\n\u2502 \u2502 \u251c\u2500\u2500 source-map@0.4.4\n\u2502 \u2502 \u2514\u2500\u252c uglify-js@2.6.1\n\u2502 \u2502   \u251c\u2500\u2500 async@0.2.10\n\u2502 \u2502   \u251c\u2500\u2500 source-map@0.5.3\n\u2502 \u2502   \u2514\u2500\u252c yargs@3.10.0\n\u2502 \u2502     \u2514\u2500\u2500 window-size@0.1.0\n\u2502 \u251c\u2500\u252c inquirer@0.11.0\n\u2502 \u2502 \u251c\u2500\u2500 ansi-escapes@1.1.0\n\u2502 \u2502 \u251c\u2500\u2500 ansi-regex@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c cli-cursor@1.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c restore-cursor@1.0.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 exit-hook@1.1.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 onetime@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 cli-width@1.1.0\n\u2502 \u2502 \u251c\u2500\u2500 figures@1.4.0\n\u2502 \u2502 \u251c\u2500\u252c readline2@1.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 code-point-at@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-fullwidth-code-point@1.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 mute-stream@0.0.5\n\u2502 \u2502 \u251c\u2500\u2500 run-async@0.1.0\n\u2502 \u2502 \u2514\u2500\u2500 rx-lite@3.1.2\n\u2502 \u251c\u2500\u252c is-my-json-valid@2.12.3\n\u2502 \u2502 \u251c\u2500\u2500 generate-function@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c generate-object-property@1.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 is-property@1.0.2\n\u2502 \u2502 \u2514\u2500\u2500 jsonpointer@2.0.0\n\u2502 \u251c\u2500\u252c is-resolvable@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 tryit@1.0.2\n\u2502 \u251c\u2500\u252c js-yaml@3.4.5\n\u2502 \u2502 \u251c\u2500\u252c argparse@1.0.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 sprintf-js@1.0.3\n\u2502 \u2502 \u2514\u2500\u2500 esprima@2.7.0\n\u2502 \u251c\u2500\u252c json-stable-stringify@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 jsonify@0.0.0\n\u2502 \u251c\u2500\u252c lodash.clonedeep@3.0.2\n\u2502 \u2502 \u2514\u2500\u2500 lodash._baseclone@3.3.0\n\u2502 \u251c\u2500\u252c lodash.merge@3.3.2\n\u2502 \u2502 \u251c\u2500\u2500 lodash._arraycopy@3.0.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash._arrayeach@3.0.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502 \u2502 \u251c\u2500\u2500 lodash.isarguments@3.0.4\n\u2502 \u2502 \u251c\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u2502 \u251c\u2500\u2500 lodash.isplainobject@3.2.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash.istypedarray@3.0.2\n\u2502 \u2502 \u251c\u2500\u2500 lodash.keysin@3.0.8\n\u2502 \u2502 \u2514\u2500\u2500 lodash.toplainobject@3.0.0\n\u2502 \u251c\u2500\u252c lodash.omit@3.1.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash._arraymap@3.0.0\n\u2502 \u2502 \u2514\u2500\u252c lodash._basedifference@3.0.3\n\u2502 \u2502   \u251c\u2500\u2500 lodash._baseindexof@3.1.0\n\u2502 \u2502   \u251c\u2500\u2500 lodash._cacheindexof@3.0.2\n\u2502 \u2502   \u2514\u2500\u2500 lodash._createcache@3.1.2\n\u2502 \u251c\u2500\u2500 minimatch@3.0.0\n\u2502 \u251c\u2500\u252c optionator@0.6.0\n\u2502 \u2502 \u251c\u2500\u2500 deep-is@0.1.3\n\u2502 \u2502 \u251c\u2500\u2500 fast-levenshtein@1.0.7\n\u2502 \u2502 \u251c\u2500\u2500 levn@0.2.5\n\u2502 \u2502 \u251c\u2500\u2500 prelude-ls@1.1.2\n\u2502 \u2502 \u251c\u2500\u2500 type-check@0.3.1\n\u2502 \u2502 \u2514\u2500\u2500 wordwrap@0.0.2\n\u2502 \u251c\u2500\u2500 path-is-inside@1.0.1\n\u2502 \u251c\u2500\u2500 shelljs@0.5.3\n\u2502 \u251c\u2500\u2500 strip-json-comments@1.0.4\n\u2502 \u251c\u2500\u2500 text-table@0.2.0\n\u2502 \u251c\u2500\u252c user-home@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 os-homedir@1.0.1\n\u2502 \u2514\u2500\u2500 xml-escape@1.0.0\n\u251c\u2500\u2500 eslint-plugin-react@3.11.2\n\u251c\u2500\u252c express@4.13.3\n\u2502 \u251c\u2500\u252c accepts@1.2.13\n\u2502 \u2502 \u251c\u2500\u252c mime-types@2.1.8\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.20.0\n\u2502 \u2502 \u2514\u2500\u2500 negotiator@0.5.3\n\u2502 \u251c\u2500\u2500 array-flatten@1.1.1\n\u2502 \u251c\u2500\u2500 content-disposition@0.5.0\n\u2502 \u251c\u2500\u2500 content-type@1.0.1\n\u2502 \u251c\u2500\u2500 cookie@0.1.3\n\u2502 \u251c\u2500\u2500 cookie-signature@1.0.6\n\u2502 \u251c\u2500\u2500 depd@1.0.1\n\u2502 \u251c\u2500\u2500 escape-html@1.0.2\n\u2502 \u251c\u2500\u2500 etag@1.7.0\n\u2502 \u251c\u2500\u252c finalhandler@0.4.0\n\u2502 \u2502 \u2514\u2500\u2500 unpipe@1.0.0\n\u2502 \u251c\u2500\u2500 fresh@0.3.0\n\u2502 \u251c\u2500\u2500 merge-descriptors@1.0.0\n\u2502 \u251c\u2500\u2500 methods@1.1.1\n\u2502 \u251c\u2500\u252c on-finished@2.3.0\n\u2502 \u2502 \u2514\u2500\u2500 ee-first@1.1.1\n\u2502 \u251c\u2500\u2500 parseurl@1.3.0\n\u2502 \u251c\u2500\u2500 path-to-regexp@0.1.7\n\u2502 \u251c\u2500\u252c proxy-addr@1.0.9\n\u2502 \u2502 \u251c\u2500\u2500 forwarded@0.1.0\n\u2502 \u2502 \u2514\u2500\u2500 ipaddr.js@1.0.4\n\u2502 \u251c\u2500\u2500 qs@4.0.0\n\u2502 \u251c\u2500\u2500 range-parser@1.0.3\n\u2502 \u251c\u2500\u252c send@0.13.0\n\u2502 \u2502 \u251c\u2500\u2500 destroy@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 http-errors@1.3.1\n\u2502 \u2502 \u2514\u2500\u2500 statuses@1.2.1\n\u2502 \u251c\u2500\u2500 serve-static@1.10.0\n\u2502 \u251c\u2500\u252c type-is@1.6.10\n\u2502 \u2502 \u2514\u2500\u2500 media-typer@0.3.0\n\u2502 \u251c\u2500\u2500 utils-merge@1.0.0\n\u2502 \u2514\u2500\u2500 vary@1.0.1\n\u251c\u2500\u252c extract-text-webpack-plugin@0.8.2\n\u2502 \u2514\u2500\u2500 async@1.5.0\n\u251c\u2500\u2500 file-loader@0.8.5\n\u251c\u2500\u252c gh-pages@0.4.0\n\u2502 \u251c\u2500\u2500 async@0.2.9\n\u2502 \u251c\u2500\u2500 commander@2.8.1\n\u2502 \u251c\u2500\u252c glob@4.0.6\n\u2502 \u2502 \u251c\u2500\u2500 graceful-fs@3.0.8\n\u2502 \u2502 \u2514\u2500\u2500 minimatch@1.0.0\n\u2502 \u251c\u2500\u2500 graceful-fs@2.0.1\n\u2502 \u251c\u2500\u2500 lodash@2.4.2\n\u2502 \u251c\u2500\u2500 q@1.0.1\n\u2502 \u251c\u2500\u252c q-io@1.11.6\n\u2502 \u2502 \u251c\u2500\u252c collections@0.2.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 weak-map@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 mimeparse@0.1.4\n\u2502 \u2502 \u251c\u2500\u2500 q@1.4.1\n\u2502 \u2502 \u251c\u2500\u2500 qs@1.2.2\n\u2502 \u2502 \u2514\u2500\u2500 url2@0.0.0\n\u2502 \u2514\u2500\u2500 wrench@1.5.1\n\u251c\u2500\u252c glob@5.0.15\n\u2502 \u251c\u2500\u252c inflight@1.0.4\n\u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.1\n\u2502 \u251c\u2500\u2500 inherits@2.0.1\n\u2502 \u2514\u2500\u2500 once@1.3.3\n\u251c\u2500\u252c history@1.13.1\n\u2502 \u251c\u2500\u2500 deep-equal@1.0.1\n\u2502 \u251c\u2500\u252c invariant@2.2.0\n\u2502 \u2502 \u2514\u2500\u2500 loose-envify@1.1.0\n\u2502 \u2514\u2500\u2500 warning@2.1.0\n\u251c\u2500\u252c html-webpack-plugin@1.7.0\n\u2502 \u251c\u2500\u2500 bluebird@3.0.6\n\u2502 \u251c\u2500\u2500 blueimp-tmpl@2.5.6\n\u2502 \u2514\u2500\u252c html-minifier@1.0.0\n\u2502   \u251c\u2500\u252c change-case@2.3.0\n\u2502   \u2502 \u251c\u2500\u2500 camel-case@1.2.0\n\u2502   \u2502 \u251c\u2500\u2500 constant-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 dot-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 is-lower-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 is-upper-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 lower-case@1.1.2\n\u2502   \u2502 \u251c\u2500\u2500 lower-case-first@1.0.0\n\u2502   \u2502 \u251c\u2500\u2500 param-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 pascal-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 path-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 sentence-case@1.1.2\n\u2502   \u2502 \u251c\u2500\u2500 snake-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 swap-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 title-case@1.1.1\n\u2502   \u2502 \u251c\u2500\u2500 upper-case@1.1.2\n\u2502   \u2502 \u2514\u2500\u2500 upper-case-first@1.1.1\n\u2502   \u251c\u2500\u252c clean-css@3.4.8\n\u2502   \u2502 \u251c\u2500\u2500 commander@2.8.1\n\u2502   \u2502 \u2514\u2500\u2500 source-map@0.4.4\n\u2502   \u251c\u2500\u252c cli@0.11.1\n\u2502   \u2502 \u2514\u2500\u2500 exit@0.1.2\n\u2502   \u251c\u2500\u2500 relateurl@0.2.6\n\u2502   \u2514\u2500\u252c uglify-js@2.5.0\n\u2502     \u251c\u2500\u2500 async@0.2.10\n\u2502     \u251c\u2500\u2500 source-map@0.5.3\n\u2502     \u2514\u2500\u252c yargs@3.5.4\n\u2502       \u2514\u2500\u2500 window-size@0.1.0\n\u251c\u2500\u252c http-proxy@1.12.0\n\u2502 \u251c\u2500\u2500 eventemitter3@1.1.1\n\u2502 \u2514\u2500\u2500 requires-port@0.0.1\n\u251c\u2500\u2500 intl@1.0.1\n\u251c\u2500\u252c isomorphic-fetch@2.2.0\n\u2502 \u2514\u2500\u252c node-fetch@1.3.3\n\u2502   \u2514\u2500\u2500 encoding@0.1.12\n\u251c\u2500\u2500 jest@0.1.40\n\u251c\u2500\u2500 jest-babel-preprocessor@0.3.0 extraneous\n\u251c\u2500\u252c jest-cli@0.8.2\n\u2502 \u251c\u2500\u252c cover@0.2.9\n\u2502 \u2502 \u251c\u2500\u252c cli-table@0.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 colors@0.3.0\n\u2502 \u2502 \u251c\u2500\u2500 underscore@1.2.4\n\u2502 \u2502 \u251c\u2500\u2500 underscore.string@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 which@1.0.9\n\u2502 \u251c\u2500\u2500 diff@2.2.1\n\u2502 \u251c\u2500\u2500 graceful-fs@4.1.2\n\u2502 \u251c\u2500\u252c istanbul@0.3.22\n\u2502 \u2502 \u251c\u2500\u2500 abbrev@1.0.7\n\u2502 \u2502 \u251c\u2500\u2500 async@1.5.1\n\u2502 \u2502 \u251c\u2500\u252c escodegen@1.7.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 esprima@1.2.5\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 estraverse@1.9.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 optionator@0.5.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 source-map@0.2.0\n\u2502 \u2502 \u251c\u2500\u2500 esprima@2.5.0\n\u2502 \u2502 \u251c\u2500\u2500 fileset@0.2.1\n\u2502 \u2502 \u251c\u2500\u252c handlebars@4.0.5\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 async@1.5.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 source-map@0.4.4\n\u2502 \u2502 \u2502 \u2514\u2500\u252c uglify-js@2.6.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 source-map@0.5.3\n\u2502 \u2502 \u2502   \u2514\u2500\u252c yargs@3.10.0\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 window-size@0.1.0\n\u2502 \u2502 \u251c\u2500\u252c js-yaml@3.3.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 esprima@2.2.0\n\u2502 \u2502 \u251c\u2500\u2500 nopt@3.0.6\n\u2502 \u2502 \u251c\u2500\u2500 supports-color@3.1.2\n\u2502 \u2502 \u2514\u2500\u2500 wordwrap@1.0.0\n\u2502 \u251c\u2500\u252c jsdom@7.2.2\n\u2502 \u2502 \u251c\u2500\u2500 abab@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 acorn@2.7.0\n\u2502 \u2502 \u251c\u2500\u252c acorn-globals@1.0.9\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 acorn@2.7.0\n\u2502 \u2502 \u251c\u2500\u2500 cssom@0.3.0\n\u2502 \u2502 \u251c\u2500\u2500 cssstyle@0.2.30\n\u2502 \u2502 \u251c\u2500\u2500 nwmatcher@1.3.7\n\u2502 \u2502 \u251c\u2500\u2500 parse5@1.5.1\n\u2502 \u2502 \u251c\u2500\u252c request@2.67.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 aws-sign2@0.6.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 bl@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 caseless@0.11.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c combined-stream@1.0.5\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 extend@3.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 forever-agent@0.6.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c form-data@1.0.0-rc3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 async@1.5.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 har-validator@2.0.3\n\u2502 \u2502 \u2502 \u251c\u2500\u252c hawk@3.1.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 boom@2.10.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 cryptiles@2.0.5\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 hoek@2.16.3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sntp@1.0.9\n\u2502 \u2502 \u2502 \u251c\u2500\u252c http-signature@1.1.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 assert-plus@0.1.5\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c jsprim@1.2.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 extsprintf@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 json-schema@0.2.2\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 verror@1.3.6\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c sshpk@1.7.1\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 asn1@0.2.3\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 assert-plus@0.2.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 dashdash@1.11.0\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 ecc-jsbn@0.1.1\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 jodid25519@1.0.2\n\u2502 \u2502 \u2502 \u2502   \u251c\u2500\u2500 jsbn@0.1.0\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 tweetnacl@0.13.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-typedarray@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 isstream@0.1.2\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 json-stringify-safe@5.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 node-uuid@1.4.7\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 oauth-sign@0.8.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 qs@5.2.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 stringstream@0.0.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 tunnel-agent@0.4.2\n\u2502 \u2502 \u251c\u2500\u2500 sax@1.1.4\n\u2502 \u2502 \u251c\u2500\u2500 symbol-tree@3.1.4\n\u2502 \u2502 \u251c\u2500\u2500 tough-cookie@2.2.1\n\u2502 \u2502 \u251c\u2500\u2500 webidl-conversions@2.0.1\n\u2502 \u2502 \u251c\u2500\u252c whatwg-url-compat@0.6.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 tr46@0.0.2\n\u2502 \u2502 \u2514\u2500\u2500 xml-name-validator@2.0.1\n\u2502 \u251c\u2500\u252c node-haste@1.2.8\n\u2502 \u2502 \u2514\u2500\u2500 esprima-fb@4001.1001.0-dev-harmony-fb\n\u2502 \u251c\u2500\u252c optimist@0.6.1\n\u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.10\n\u2502 \u251c\u2500\u252c sane@1.3.0\n\u2502 \u2502 \u251c\u2500\u252c exec-sh@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 merge@1.2.0\n\u2502 \u2502 \u251c\u2500\u252c fb-watchman@1.6.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c bser@1.0.2\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 node-int64@0.4.0\n\u2502 \u2502 \u251c\u2500\u2500 minimatch@0.2.14\n\u2502 \u2502 \u251c\u2500\u252c walker@1.0.7\n\u2502 \u2502 \u2502 \u2514\u2500\u252c makeerror@1.0.11\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 tmpl@1.0.4\n\u2502 \u2502 \u2514\u2500\u2500 watch@0.10.0\n\u2502 \u251c\u2500\u252c which@1.2.1\n\u2502 \u2502 \u2514\u2500\u252c is-absolute@0.1.7\n\u2502 \u2502   \u2514\u2500\u2500 is-relative@0.1.3\n\u2502 \u2514\u2500\u252c worker-farm@1.3.1\n\u2502   \u2514\u2500\u252c errno@0.1.4\n\u2502     \u2514\u2500\u2500 prr@0.0.0\n\u251c\u2500\u2500 js-base64@2.1.9\n\u251c\u2500\u2500 js-throttle-debounce@0.1.1 extraneous\n\u251c\u2500\u2500 json-loader@0.5.4\n\u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u251c\u2500\u252c parse-link-header@0.4.1\n\u2502 \u2514\u2500\u2500 xtend@4.0.1\n\u251c\u2500\u2500 piping@0.3.0 extraneous\n\u251c\u2500\u252c postcss@5.0.13\n\u2502 \u251c\u2500\u2500 source-map@0.5.3\n\u2502 \u2514\u2500\u252c supports-color@3.1.2\n\u2502   \u2514\u2500\u2500 has-flag@1.0.0\n\u251c\u2500\u2500 postcss-color-function@2.0.0 extraneous\n\u251c\u2500\u252c postcss-cssnext@2.3.0\n\u2502 \u251c\u2500\u252c caniuse-api@1.4.1\n\u2502 \u2502 \u251c\u2500\u252c lodash.memoize@2.4.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash._keyprefix@2.4.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash.isfunction@2.4.1\n\u2502 \u2502 \u2514\u2500\u252c lodash.uniq@3.2.2\n\u2502 \u2502   \u251c\u2500\u252c lodash._basecallback@3.3.1\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 lodash._baseisequal@3.0.7\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 lodash.pairs@3.0.1\n\u2502 \u2502   \u2514\u2500\u2500 lodash._baseuniq@3.0.3\n\u2502 \u251c\u2500\u2500 pixrem@3.0.0\n\u2502 \u251c\u2500\u252c pleeease-filters@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 onecolor@2.4.2\n\u2502 \u251c\u2500\u252c postcss-calc@5.2.0\n\u2502 \u2502 \u2514\u2500\u252c reduce-css-calc@1.2.0\n\u2502 \u2502   \u2514\u2500\u2500 balanced-match@0.1.0\n\u2502 \u251c\u2500\u252c postcss-color-function@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 balanced-match@0.1.0\n\u2502 \u2502 \u2514\u2500\u252c css-color-function@1.2.1\n\u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.1.0\n\u2502 \u2502   \u251c\u2500\u252c color@0.7.3\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 color-string@0.2.4\n\u2502 \u2502   \u251c\u2500\u2500 debug@0.7.4\n\u2502 \u2502   \u2514\u2500\u2500 rgb@0.1.0\n\u2502 \u251c\u2500\u252c postcss-color-gray@3.0.0\n\u2502 \u2502 \u251c\u2500\u252c color@0.7.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 color-convert@0.5.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 color-string@0.2.4\n\u2502 \u2502 \u2514\u2500\u252c reduce-function-call@1.0.1\n\u2502 \u2502   \u2514\u2500\u2500 balanced-match@0.1.0\n\u2502 \u251c\u2500\u252c postcss-color-hex-alpha@2.0.0\n\u2502 \u2502 \u2514\u2500\u252c color@0.10.1\n\u2502 \u2502   \u2514\u2500\u2500 color-string@0.3.0\n\u2502 \u251c\u2500\u252c postcss-color-hwb@2.0.0\n\u2502 \u2502 \u2514\u2500\u252c color@0.10.1\n\u2502 \u2502   \u2514\u2500\u2500 color-string@0.3.0\n\u2502 \u251c\u2500\u252c postcss-color-rebeccapurple@2.0.0\n\u2502 \u2502 \u2514\u2500\u252c color@0.9.0\n\u2502 \u2502   \u2514\u2500\u2500 color-string@0.3.0\n\u2502 \u251c\u2500\u252c postcss-color-rgba-fallback@2.0.0\n\u2502 \u2502 \u2514\u2500\u252c color-string@0.3.0\n\u2502 \u2502   \u2514\u2500\u2500 color-name@1.0.1\n\u2502 \u251c\u2500\u2500 postcss-custom-media@5.0.0\n\u2502 \u251c\u2500\u2500 postcss-custom-properties@5.0.0\n\u2502 \u251c\u2500\u252c postcss-custom-selectors@3.0.0\n\u2502 \u2502 \u2514\u2500\u2500 balanced-match@0.2.1\n\u2502 \u251c\u2500\u2500 postcss-font-variant@2.0.0\n\u2502 \u251c\u2500\u252c postcss-initial@1.4.0\n\u2502 \u2502 \u2514\u2500\u252c lodash.template@3.6.2\n\u2502 \u2502   \u251c\u2500\u2500 lodash._basetostring@3.0.1\n\u2502 \u2502   \u251c\u2500\u2500 lodash._basevalues@3.0.0\n\u2502 \u2502   \u251c\u2500\u2500 lodash._reinterpolate@3.0.0\n\u2502 \u2502   \u251c\u2500\u2500 lodash.escape@3.0.0\n\u2502 \u2502   \u2514\u2500\u2500 lodash.templatesettings@3.1.0\n\u2502 \u251c\u2500\u2500 postcss-media-minmax@2.1.1\n\u2502 \u251c\u2500\u2500 postcss-nesting@2.0.6\n\u2502 \u251c\u2500\u252c postcss-pseudo-class-any-link@1.0.0\n\u2502 \u2502 \u2514\u2500\u252c postcss-selector-parser@1.3.0\n\u2502 \u2502   \u2514\u2500\u2500 uniq@1.0.1\n\u2502 \u251c\u2500\u2500 postcss-pseudoelements@3.0.0\n\u2502 \u251c\u2500\u252c postcss-selector-matches@2.0.1\n\u2502 \u2502 \u2514\u2500\u2500 balanced-match@0.2.1\n\u2502 \u2514\u2500\u252c postcss-selector-not@2.0.0\n\u2502   \u2514\u2500\u2500 balanced-match@0.2.1\n\u251c\u2500\u2500 postcss-custom-media@5.0.0\n\u251c\u2500\u252c postcss-custom-properties@5.0.0\n\u2502 \u2514\u2500\u2500 balanced-match@0.1.0\n\u251c\u2500\u252c postcss-custom-selectors@3.0.0\n\u2502 \u251c\u2500\u2500 balanced-match@0.2.1\n\u2502 \u2514\u2500\u2500 postcss-selector-matches@2.0.1\n\u251c\u2500\u2500 postcss-for@2.0.1 extraneous\n\u251c\u2500\u2500 postcss-functions@2.0.0 extraneous\n\u251c\u2500\u252c postcss-import@7.1.3\n\u2502 \u2514\u2500\u2500 postcss-message-helpers@2.0.0\n\u251c\u2500\u2500 postcss-loader@0.8.0\n\u251c\u2500\u2500 postcss-nested@1.0.0\n\u251c\u2500\u2500 postcss-simple-vars@1.2.0\n\u251c\u2500\u2500 promise-loader@1.0.0\n\u251c\u2500\u2500 purecss@0.6.0\n\u251c\u2500\u252c react@0.14.6\n\u2502 \u251c\u2500\u252c envify@3.4.0\n\u2502 \u2502 \u2514\u2500\u252c jstransform@10.1.0\n\u2502 \u2502   \u251c\u2500\u2500 base62@0.1.1\n\u2502 \u2502   \u251c\u2500\u2500 esprima-fb@13001.1001.0-dev-harmony-fb\n\u2502 \u2502   \u2514\u2500\u2500 source-map@0.1.31\n\u2502 \u2514\u2500\u252c fbjs@0.6.1\n\u2502   \u251c\u2500\u252c promise@7.0.4\n\u2502   \u2502 \u2514\u2500\u2500 asap@2.0.3\n\u2502   \u251c\u2500\u2500 ua-parser-js@0.7.9\n\u2502   \u2514\u2500\u2500 whatwg-fetch@0.9.0\n\u251c\u2500\u2500 react-addons-test-utils@0.14.5\n\u251c\u2500\u2500 react-dom@0.14.6\n\u251c\u2500\u2500 react-inline-css@2.0.1\n\u251c\u2500\u252c react-intl@2.0.0-beta-1\n\u2502 \u251c\u2500\u2500 intl-format-cache@2.0.4\n\u2502 \u251c\u2500\u2500 intl-messageformat@1.2.0\n\u2502 \u2514\u2500\u2500 intl-relativeformat@1.2.0\n\u251c\u2500\u2500 react-onclickoutside@4.5.0\n\u251c\u2500\u2500 react-onclickoutside-decorator@0.1.1\n\u251c\u2500\u2500 react-pure-render@1.0.2\n\u251c\u2500\u252c react-redux@4.0.0\n\u2502 \u2514\u2500\u2500 hoist-non-react-statics@1.0.3\n\u251c\u2500\u2500 react-router@1.0.0\n\u251c\u2500\u2500 react-router-proxy-loader@0.4.0\n\u251c\u2500\u2500 react-styleguide-generator@1.2.1 extraneous\n\u251c\u2500\u252c react-styleguidist@1.3.2\n\u2502 \u251c\u2500\u252c babel-core@5.8.30\n\u2502 \u2502 \u251c\u2500\u2500 js-tokens@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 source-map@0.5.3\n\u2502 \u251c\u2500\u252c babel-loader@5.3.2\n\u2502 \u2502 \u2514\u2500\u2500 object-assign@3.0.0\n\u2502 \u251c\u2500\u2500 babel-runtime@5.8.25\n\u2502 \u251c\u2500\u2500 classnames@2.2.3\n\u2502 \u251c\u2500\u2500 codemirror@5.10.0\n\u2502 \u251c\u2500\u252c css-loader@0.23.1\n\u2502 \u2502 \u251c\u2500\u2500 object-assign@4.0.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-modules-extract-imports@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-modules-local-by-default@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 postcss-modules-scope@1.0.0\n\u2502 \u251c\u2500\u252c findup@0.1.5\n\u2502 \u2502 \u251c\u2500\u2500 colors@0.6.2\n\u2502 \u2502 \u2514\u2500\u2500 commander@2.1.0\n\u2502 \u251c\u2500\u2500 glob@6.0.3\n\u2502 \u251c\u2500\u252c markdown-it@5.0.3\n\u2502 \u2502 \u251c\u2500\u2500 entities@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 linkify-it@1.2.0\n\u2502 \u2502 \u251c\u2500\u2500 mdurl@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 uc.micro@1.0.0\n\u2502 \u251c\u2500\u252c markdown-react-js@0.3.0\n\u2502 \u2502 \u251c\u2500\u252c chai@2.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 assertion-error@1.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c deep-eql@0.1.3\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 type-detect@0.1.1\n\u2502 \u2502 \u2514\u2500\u2500 markdown-it@4.4.0\n\u2502 \u251c\u2500\u2500 minimist@1.2.0\n\u2502 \u251c\u2500\u252c prettyjson@1.1.3\n\u2502 \u2502 \u2514\u2500\u2500 colors@1.1.2\n\u2502 \u251c\u2500\u2500 react-codemirror@0.2.3\n\u2502 \u251c\u2500\u252c react-docgen@2.5.0\n\u2502 \u2502 \u251c\u2500\u2500 async@1.5.2\n\u2502 \u2502 \u251c\u2500\u2500 node-dir@0.1.11\n\u2502 \u2502 \u2514\u2500\u252c nomnom@1.8.1\n\u2502 \u2502   \u251c\u2500\u252c chalk@0.4.0\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 ansi-styles@1.0.0\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 strip-ansi@0.1.1\n\u2502 \u2502   \u2514\u2500\u2500 underscore@1.6.0\n\u2502 \u251c\u2500\u2500 react-sticky@3.0.0\n\u2502 \u251c\u2500\u2500 react-transform-catch-errors@1.0.1\n\u2502 \u2514\u2500\u252c webpack-merge@0.7.1\n\u2502   \u251c\u2500\u252c changelog@1.0.7\n\u2502   \u2502 \u251c\u2500\u2500 UNMET DEPENDENCY chalk@^0.5.1\n\u2502   \u2502 \u251c\u2500\u2500 UNMET DEPENDENCY cli@^0.6.4\n\u2502   \u2502 \u251c\u2500\u2500 has-color@0.1.7\n\u2502   \u2502 \u251c\u2500\u2500 UNMET DEPENDENCY lodash@^2.4.1\n\u2502   \u2502 \u251c\u2500\u2500 UNMET DEPENDENCY moment@^2.5.0\n\u2502   \u2502 \u2514\u2500\u2500 UNMET DEPENDENCY semver@^4.0.3\n\u2502   \u2514\u2500\u252c lodash.find@3.2.1\n\u2502     \u251c\u2500\u2500 lodash._baseeach@3.0.4\n\u2502     \u251c\u2500\u2500 lodash._basefind@3.0.0\n\u2502     \u2514\u2500\u2500 lodash._basefindindex@3.6.0\n\u251c\u2500\u2500 react-transform-catch-errors@1.0.0\n\u251c\u2500\u252c react-transform-hmr@1.0.1\n\u2502 \u251c\u2500\u252c global@4.3.0\n\u2502 \u2502 \u251c\u2500\u252c min-document@2.17.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 dom-walk@0.1.1\n\u2502 \u2502 \u2514\u2500\u2500 process@0.5.2\n\u2502 \u2514\u2500\u252c react-proxy@1.1.1\n\u2502   \u2514\u2500\u2500 react-deep-force-update@1.0.0\n\u251c\u2500\u252c redbox-react@1.2.0\n\u2502 \u2514\u2500\u252c error-stack-parser@1.3.1\n\u2502   \u2514\u2500\u2500 stackframe@0.3.1\n\u251c\u2500\u2500 redux@3.0.4\n\u251c\u2500\u2500 redux-devtools@3.0.0-beta-3\n\u251c\u2500\u252c redux-devtools-dock-monitor@1.0.0-beta-3\n\u2502 \u2514\u2500\u252c react-dock@0.2.3\n\u2502   \u2514\u2500\u2500 lodash.debounce@3.1.1\n\u251c\u2500\u252c redux-devtools-log-monitor@1.0.0-beta-3\n\u2502 \u251c\u2500\u252c react-json-tree@0.2.0\n\u2502 \u2502 \u2514\u2500\u252c react-mixin@1.7.0\n\u2502 \u2502   \u251c\u2500\u2500 object-assign@2.1.1\n\u2502 \u2502   \u2514\u2500\u2500 smart-mixin@1.2.1\n\u2502 \u2514\u2500\u252c redux-devtools-themes@1.0.0\n\u2502   \u2514\u2500\u2500 base16@1.0.0\n\u251c\u2500\u252c redux-router@1.0.0-beta5\n\u2502 \u2514\u2500\u2500 history@1.13.1\n\u251c\u2500\u2500 redux-simple-router@1.0.0\n\u251c\u2500\u2500 redux-thunk@1.0.0\n\u251c\u2500\u2500 rimraf@2.4.4\n\u251c\u2500\u2500 sji@0.0.1\n\u251c\u2500\u2500 stats-webpack-plugin@0.2.2\n\u251c\u2500\u2500 style-loader@0.13.0\n\u251c\u2500\u252c svg-inline-loader@0.4.0\n\u2502 \u2514\u2500\u2500 simple-html-tokenizer@0.1.1\n\u251c\u2500\u252c webpack@1.12.9\n\u2502 \u251c\u2500\u2500 async@1.5.0\n\u2502 \u251c\u2500\u2500 clone@1.0.2\n\u2502 \u251c\u2500\u252c enhanced-resolve@0.9.1\n\u2502 \u2502 \u2514\u2500\u2500 memory-fs@0.2.0\n\u2502 \u251c\u2500\u2500 esprima@2.7.0\n\u2502 \u251c\u2500\u2500 interpret@0.6.6\n\u2502 \u251c\u2500\u2500 memory-fs@0.3.0\n\u2502 \u251c\u2500\u252c node-libs-browser@0.5.3\n\u2502 \u2502 \u251c\u2500\u2500 assert@1.3.0\n\u2502 \u2502 \u251c\u2500\u252c browserify-zlib@0.1.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 pako@0.2.8\n\u2502 \u2502 \u251c\u2500\u252c buffer@3.5.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 base64-js@0.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ieee754@1.1.6\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 is-array@1.0.1\n\u2502 \u2502 \u251c\u2500\u252c console-browserify@1.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 date-now@0.1.4\n\u2502 \u2502 \u251c\u2500\u2500 constants-browserify@0.0.1\n\u2502 \u2502 \u251c\u2500\u252c crypto-browserify@3.2.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 pbkdf2-compat@2.0.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 ripemd160@0.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 sha.js@2.2.6\n\u2502 \u2502 \u251c\u2500\u2500 domain-browser@1.1.4\n\u2502 \u2502 \u251c\u2500\u2500 events@1.1.0\n\u2502 \u2502 \u251c\u2500\u252c http-browserify@1.7.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 Base64@0.2.1\n\u2502 \u2502 \u251c\u2500\u2500 https-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u2500 os-browserify@0.1.2\n\u2502 \u2502 \u251c\u2500\u2500 path-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u2500 process@0.11.2\n\u2502 \u2502 \u251c\u2500\u2500 punycode@1.3.2\n\u2502 \u2502 \u251c\u2500\u2500 querystring-es3@0.2.1\n\u2502 \u2502 \u251c\u2500\u2500 readable-stream@1.1.13\n\u2502 \u2502 \u251c\u2500\u252c stream-browserify@1.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 readable-stream@1.1.13\n\u2502 \u2502 \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u251c\u2500\u252c timers-browserify@1.4.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 process@0.11.2\n\u2502 \u2502 \u251c\u2500\u2500 tty-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u2500 url@0.10.3\n\u2502 \u2502 \u251c\u2500\u2500 util@0.10.3\n\u2502 \u2502 \u2514\u2500\u252c vm-browserify@0.0.4\n\u2502 \u2502   \u2514\u2500\u2500 indexof@0.0.1\n\u2502 \u251c\u2500\u252c optimist@0.6.1\n\u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.10\n\u2502 \u251c\u2500\u2500 supports-color@3.1.2\n\u2502 \u251c\u2500\u2500 tapable@0.1.10\n\u2502 \u251c\u2500\u252c uglify-js@2.6.1\n\u2502 \u2502 \u251c\u2500\u2500 async@0.2.10\n\u2502 \u2502 \u251c\u2500\u2500 source-map@0.5.3\n\u2502 \u2502 \u251c\u2500\u2500 uglify-to-browserify@1.0.2\n\u2502 \u2502 \u2514\u2500\u252c yargs@3.10.0\n\u2502 \u2502   \u251c\u2500\u2500 camelcase@1.2.1\n\u2502 \u2502   \u251c\u2500\u252c cliui@2.1.0\n\u2502 \u2502   \u2502 \u251c\u2500\u252c center-align@0.1.2\n\u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c align-text@0.1.3\n\u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 longest@1.0.1\n\u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 repeat-string@1.5.2\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 right-align@0.1.3\n\u2502 \u2502   \u2514\u2500\u2500 window-size@0.1.0\n\u2502 \u251c\u2500\u252c watchpack@0.2.9\n\u2502 \u2502 \u2514\u2500\u2500 async@0.9.2\n\u2502 \u2514\u2500\u252c webpack-core@0.6.8\n\u2502   \u2514\u2500\u2500 source-map@0.4.4\n\u251c\u2500\u252c webpack-dev-middleware@1.4.0\n\u2502 \u2514\u2500\u2500 mime@1.3.4\n\u251c\u2500\u252c webpack-hot-middleware@2.6.0\n\u2502 \u251c\u2500\u2500 querystring@0.2.0\n\u2502 \u2514\u2500\u252c strip-ansi@2.0.1\n\u2502   \u2514\u2500\u2500 ansi-regex@1.1.1\n\u2514\u2500\u2500 whatwg-fetch@0.10.1\nnpm ERR! extraneous: jest-babel-preprocessor@0.3.0 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/jest-babel-preprocessor\nnpm ERR! extraneous: js-throttle-debounce@0.1.1 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/js-throttle-debounce\nnpm ERR! extraneous: piping@0.3.0 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/piping\nnpm ERR! extraneous: postcss-color-function@2.0.0 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/postcss-color-function\nnpm ERR! extraneous: postcss-for@2.0.1 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/postcss-for\nnpm ERR! extraneous: postcss-functions@2.0.0 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/postcss-functions\nnpm ERR! extraneous: react-styleguide-generator@1.2.1 /Users/gallantrym/Documents/WIPS/NewFrontier/redux-react-router-async-example/node_modules/react-styleguide-generator\nnpm ERR! missing: chalk@^0.5.1, required by changelog@1.0.7\nnpm ERR! missing: cli@^0.6.4, required by changelog@1.0.7\nnpm ERR! missing: lodash@^2.4.1, required by changelog@1.0.7\nnpm ERR! missing: moment@^2.5.0, required by changelog@1.0.7\nnpm ERR! missing: semver@^4.0.3, required by changelog@1.0.7\n``\n. @mik01aj \nAlso tried reducing .babelrc to just{ stage: 0 }` and that still gave me the same errors.\nAppreciate the effort and time guys. Thanks.\n. Yeah, I've just removed the package needing them as I didn't need it. Thanks @sapegin. I'm just about try again, then update babel and see how that fairs.\n. ",
    "kgoggin": "FWIW I'm getting the same error. Similar configs as @withgallantry in that I'm not doing anything fancy with react-styleguidist and that I'm already using Babel@5 with react-transform-hmr in my app. Haven't had a ton of time to troubleshoot it because I'm on a deadline this week, but thought I'd bring it up because, whatever the issue is, it's not isolated.\n. ",
    "ericmuyser": "Hey @sapegin \nCould use some guidance. Having the same problem as above, I think.\nhttps://gist.github.com/ericmuyser/59dfa16812e393dc97ea\nTried everything in this SS:\n\nAlso tried plugins:\n\nCheers\n. Wooow. I guess my other one I copied it from works because of this:\n\nNo more copy/paste for me this week. Thanks!!\n. Oh okay I see what happened. I started out following the guide, couldn't get it working, copied over my working line test: /\\.js?$/, couldn't get it working, so I tried changing the extension to .jsx thinking perhaps styleguidist didn't support .js, and didn't change that copied line back, so it was never matching on jsx even after fixing the original problem (which I still dont know was).\nAnyway thanks again for the help. I really need sleep, lol, night!\n. ",
    "crvst": "The issue is closed, but were there any solution provided to fix that bug? I can\u2019t find any in the thread, or I\u2019m just inattentive.\nI\u2019ve just got that kind of behaviour and can\u2019t manage to fix it. Got the You may need an appropriate loader to handle this file type. related to static keyword in code. While the building with babel-cli is OK and transpiles this experimental feature as intended.\nWhat could be wrong and what should try to fix this?\n. Yep, from my own code. But the stage-1 has already enabled in .babelrc and the direct installation npm i babel-plugin-transform-class-properties didn\u2019t work out.\n. ",
    "kevinch": "If it helps others: developing locally with npm link and styleguidist won't work if your project runs with Webpack 1. You'll have to bump to Webpack 2 at least. Just did it and works fine.. ",
    "n1313": "I have a prop that is an array of shapes, which have a oneOf enum prop:\nprop: React.PropTypes.arrayOf(\n    React.PropTypes.shape({\n        innerProp: React.PropTypes.oneOf(['one', 'two'])\n    })\n),\n\nIs there a nice way to display the values of innerProp? Currently I have to resort to typing them out manually in the prop comment.. Can't this be done using Developer Tools in Chrome, for free?\n. A default value for a function could be a lot of things: a named function definition, a reference, an anonymous function, ES5-style, ES6-style, many things. I don't know of a nice way to normalize all of this and reliably extract any info. Even evaling the function text will only give us the number of argument and the name of the function (if it is named). Not too much to work with.. Fixed in v5. @jeffkamo I cannot reproduce this issue locally: both ways work. I suspect the problem might be in your babel setup. Can you make a minimal example repo that demonstrates the problem?. I had this issue when I misconfigured my include/exclude paths and the imported file with spread operator was not \"covered\" by my loaders.. Not sure if this is the right place to do this, but anyway: may I suggest adding an option to build docs with --progress enabled? Or adding a note to the documentation on how to pass arguments to Webpack from CLI. I can't figure it out.. By saying \"from CLI\" I mean running styleguidist server --config ./styleguidist.config.js. It doesn't have to be a fancy plugin, Webpack's native --progress is good enough. Being able to turn this on from the config would be sweet. . Oh, I see, you were talking about Webpack CLI, not Styleguidist CLI. Right. I will look into the plugin then. Thanks!. @sapegin, I think what most users would like to know is answers to \"why should I update\" and \"what do I need to change in my project if I decide to update\" questions. It would be great is these points could be highlighted in the release notes. . Unfortunately I'm not too familiar with phantomjs and buble, so I have no idea. I tried adding page.onError, page.onConsoleMessage and phantom.onError handlers to my scripts, as internet says, but didn't catch anything. \nI can't imagine this issue affecting many users though, so a possible approach would be to ignore it for now and allow users to choose between buble and babel, and document that using buble comes with certain advantages and disadvantages. What do you think? Is it possible?\n. Yeah, but it achieves that by throwing away some of the things babel does, which in some rare cases such as this one may result in things mysteriously not working. Anyway, I'm glad that you are able to reproduce the bug, I will roll back to 4.1 for now and will await your decision. \n. \nHmmm... Not good. Gotta add some margins or something for it to work. \n. Do you have any particular icons in mind? Something like font-awesome, or custom ones?. Won't an inline base64-encoded png do instead of a separate svg file?. Any time estimates on that change?\n. Hmm... My suite does the following: it iterates over every component, and then takes screenshots of every code block in the examples section of that component. The screenshots are then compared with baseline screenshots. I would like to have a consistent class name on the preview containers.\n. That would be perfect, yes. \n. Hmm, okay, that's unusual but I can redo the PR. Is there any harm in having it ignored explicitly and not depending on an implicit undocumented global setting, though?\nSent from my iPhone\n\nOn 19 Nov 2016, at 16:37, Artem Sapegin notifications@github.com wrote:\n@sapegin commented on this pull request.\nIn .gitignore:\n\n@@ -3,3 +3,4 @@ examples/**/styleguide/index.html\n .publish/\n node_modules/\n Changelog.md\n+.DS_Store\nPlease you your global gitignore for that.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I understand your point, and I agree that adding .DS_Store to a global ignore is a good idea. Unfortunately it is not a widely adopted approach (I think this is the only repo I know of that does that) and it is not documented anywhere (the decision to depend on a globally ignored .DS_Store, not the idea of having a global gitignore), so I think this kind of clash is bound to happen again, I'm afraid.\n. Well, I leave it to you to decide whether you want to have things like .DS_Store or npm-debug.log in there. I have reverted my .gitignore change. Please review the PR. \n. My intention is to have sections separated and sub-sections or components joined in a line. \n\nSent from my iPhone\n\nOn 19 Nov 2016, at 16:44, Artem Sapegin notifications@github.com wrote:\n@sapegin commented on this pull request.\nIn src/rsg-components/ComponentsList/ComponentsList.css:\n\n@@ -16,3 +16,10 @@\n .heading {\n  font-weight: bold;\n }\n+\n+@media (max-width: 600px) {\n- .item .item {\n  But why only inside sections?\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hmmm, right... I think I will have to add some extra classes for that. I will update the PR shortly.\n. OK, done. The change to styles of .list and .search is done to make sure the sidebar displays properly if search returns no results.\n. Whoops, my bad, I thought it was a boolean. \n. Right, it can also be false in isolated mode. It's getting late, I should get some sleep... Is the PR ok otherwise?\n. Should this be closed now, @sapegin?. What will happen to non-tagged code blocks? . This is probably more about bundle size than performance, but those things sometimes come hand in hand. How about using lodash modules instead of importing the entire lodash package? I have run my bundle through webpack-bundle-analyzer and I see that the biggest parts of styleguidist are lodash, buble and acorn. I don't know if there's anything that can be done with buble or acorn, but replacing lodash with lodash modules could be done, I think? . Is this for v5 branch?. Would you mind trying doing the same in v4? I wonder if it will be equally unimpressive.. Wait a second, you've dropped bundle size from 2.26 MB in v4 to 635 kB in v5? Wow.. I'm working on a change for v4 so I just want to get this little thing out of my way to make sure I don't break anything new :) . This seems like a good candidate for a plugin, with appropriate support from RSG core API or in some other roundabout way. . I can try to move it to the next branch, but I'd really like to have this change in v4 as well. Is there a way to achieve this painlessly?. I have fixed two out of three things you've commented on and fixed the broken build (very embarrassing). I would very much like to have this change in v4 because I haven't touched v5 at all and have no idea how it works, or what the migration process is, or how difficult it will be to merge this PR into next. I will take a look at it and will send another PR as soon as possible, but I can't promise anything b/c I have no clue about v5 codebase at this moment.  . Thanks! . That's because I'm a doofus and empty arrays are truthy.. Yes, this is a copy of code from master with minor changes.. I've updated the PR. Please take a look!. @chrisdrackett the string values of oneOf are already being printed, so not sure what issue you are describing here. Are you talking about objectOf?. This is an unusual structure for a project. Would symlinks help?. Thanks @roychoo! The PR's been merged into react-group.\n\nTo anyone having this issue on RSG 4.6.3: update dependencies of RSG (or simply delete and reinstall it) to pick up the new version of react-group to have this issue resolved.. @AoDev could you please take a look and check if my fix worked for you? . I was thinking of adding some support for @see tag to RSG, it could be useful for my project. @AoDev, could you please give me an example of how you are currently using this tag in your project? What values does it take and what purpose does it serve?. @AoDev Thanks! I'm closing this issue and will ping you when I'm ready to start on adding support for @see.. I also would like to have this removed or be an on/off option. . For reference: https://github.com/WebAssembly/design/issues/112. > a free logo that only needs credit\nWhere is this logo from?. Could you please update the readme and faq files with usage examples?. Oh, I see. I misunderstood.. And it is.. Ok, I see the problem now. According to JSS docs (https://github.com/cssinjs/jss/blob/master/docs/json-api.md), media queries go like this:\nconst styles = {\n  button: {\n    width: 100\n  },\n  '@media (min-width: 1024px)': {\n    button: {\n      width: 200\n    }\n  }\n}\nSo here we have styles['@media (min-width: 1024px)'].button { width: 200 }. And this approach didn't work for me.\nUsing your example as a guide I wrote this:\nconst styles = {\n  button: {\n    width: 100,\n    '@media (min-width: 1024px)': {\n      width: 200\n    }\n  }\n}\nHere we have styles.button['@media (min-width: 1024px)'] { width: 200 }. And this did work.\nNot sure if this is a bug in RSG implementation of JSS, or JSS has incorrect documentation. Or maybe I did something wrong. Anyway, I'm happy now.\n. Then the \"we're using JSS Syntax\" link in the documentation (https://github.com/styleguidist/react-styleguidist/blob/next/docs/Configuration.md) should be corrected.. Since JSS and JSS-nested have different, mutually exclusive, syntaxes when it comes to nested selectors, the docs should be pointing at JSS-nested documentation, not JSS's. Let me send a PR.... This doesn't bring any changes to public configurations, right?. I would propose going with the least config options as possible as first goal and having the least magic happening as the second goal.\nSo, to reduce the amount of magic, search for webpack.config.js (the most common webpack config file name) only in the root folder (the most common location) and nowhere else. Let the user handle their configuration explicitly if they want to.\nAnd I was going to propose merging webpackConfigFile option with webpackConfig in the same way @kof just did but apparently these options are not mutually exclusive so that doesn't work. . By the way, it's very non-obvious to me that webpackConfig will override the config loaded from webpackConfigFile. I look at this and wonder if the order in which these things are matters, and whether switching them around (webpackConfig first, webpackConfigFile second) will change the output. . Ok, I'm lost, how is overriding going to work in this case?. We're talking about both webpacks, right? v1 and v2?\n. @sapegin nah, I'm just making sure that we're talking about the same thing, and that webpack 1 is not being deprecated just yet.. @sapegin could you please explain this a bit? I read the release notes but I didn't see how it is related. . I think some time ago I have seen someone here pasting an example that used real React code, they wrote an entire component in markdown with class declaration, render method, all the good stuff. I can\u2019t find it, but I think it was @okonet. I\u2019ll try recreating that myself and will close this ticket if it works.\nSent from my iPhone\n\nOn 4 Jan 2018, at 14:10, Artem Sapegin notifications@github.com wrote:\nI guess I mean importing examples from files.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I guess I misunderstood what that means back at the time.\n\nSent from my iPhone\n\nOn 4 Jan 2018, at 14:35, Artem Sapegin notifications@github.com wrote:\nThere\u2019s one in my comment at the very beginning of this issue ;-)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It works! Wow. Very nice. Is this documented anywhere?. Yes, it is documented. https://github.com/styleguidist/react-styleguidist/blob/master/docs/Documenting.md#writing-code-examples. Very nice!\n  . For historical purposes here's my initial stab at this issue. It works but is a bit too dirty of a hack.. I have a potentially similar use case: I have a bunch of simple components and a smaller number of more complex components and currently I keep them separated in two sections of a single RSG document. I would very much like to be able to split it into two separate (but cross-linked in the sidebar) RSGs with separate bundle files. . This would be the perfect goal, yes. My team is considering splitting our big project into separate smaller packages and moving to a mono-repo structure, and having something that would allow developers to focus on one small thing at a time while being able to travel to another small thing reasonably quickly would be fantastic. At the moment the rough plan is to run separate styleguidist instances in each of the packages and create a \"gateway\" page that links all of them manually, which is kinda meh. . The question is not just about routing, this is about splitting a massive multi-megabyte js bundle into smaller chunks so that the browser doesn't die trying to parse it, and then either showing these chunks one by one or loading them on demand.  . @kof can this be closed?. Anchor navigation works by scrolling the viewport to the location of the referenced element. If the referenced element is not displayed on the page (because it has display: none) then its location is not defined and there is nowhere to scroll to. Thus, hiding the anchor elements breaks the sidebar navigation: clicking on the menu items does nothing because there is no element to scroll to.. Ok, no problem. By the way, the anchors themselves don't look too good on narrow screens, they are a little bit off-screen, but I'm not going to fix that since I don't know what would be a good solution. . If name is not defined then data-preview attribute will be present but empty. . \n. Thanks!. This can be reproduced in the rsg repo:\n\n\ncheckout beta14\nnpm i, npm run compile, npm start\n\n$ phantomjs rasterize.js http://localhost:6060/ output.png\n=> good screenshot\n\n\ncheckout latest code from next\n\nnpm i, npm run compile, npm start\n$ phantomjs rasterize.js http://localhost:6060/ output.png\n=> empty page\n\nBy repeating this for every commit in beta15 I have found that the problem is introduced by a change somewhere in the recent markdown refactoring commit. . Sorry, I have no clue.\nIf you want to test compatibility with phantomjs, then you could take screenshots of the docs as a part of the test suite and compare them to a previous state (with backstopjs, for example).. If you're talking about the tests/phantoms.js then as far as I understand it doesn't really check much except for making a successful http request to localhost. \nSent from my iPhone\n\nOn 10 Mar 2017, at 16:24, Artem Sapegin notifications@github.com wrote:\nSounds complicated ;-/ though we already try to run builds with PhantomJS to check if they work.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Well, it is possible to make a better test for phantomjs compatibility, the question is -- is this needed? How big is this a priority for the project?\n\nSent from my iPhone\n\nOn 10 Mar 2017, at 16:39, Artem Sapegin notifications@github.com wrote:\nIt will fail in case of JS error but that\u2019s all it can ;-|\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I'm afraid phantom-js has its own set of ideas of things worthy of support, and does not match any other \"real\" browser. I have found it to behave closer to an IE10 or something like that, to be honest.\n\nThanks for the fix!. I don't have any examples for nested properties in technical documentation. We could take something like comment threads on Reddit or a similar website as an example of displaying infinitely nested data. \nAnd I think that if we are going to implement recursive rendering with depth restriction then making this depth configurable will come at almost no cost. And if we get the default depth limit wrong then making it configurable will allow people to modify it for their projects without needing to create tickets on github. Easy win, no?. > unreadable\nNot sure I understand. If someone has -- for some reason -- a project with a 10-level deep tree of properties, and wants to display all 10 levels of them, then why should RSG interfere with that and decide how many of them it is okay to display? RSG is not a code style police, is it?. I'm lost. Why is it too early to discuss it? . The real world use case is in my current project: a configuration object for a complex data table. The object is like this:\nconfig: React.PropTypes.objectOf(\n    React.PropTypes.arrayOf(\n      React.PropTypes.shape({\n        id: React.PropTypes.string.isRequired,\n        type: React.PropTypes.oneOf([\n           ...\n        ]),\n        ...\n      })\n    )\n  ),\n. @KatGr we are talking about rendering props of the elements, not elements themselves. I don't think your problem is related to this discussion (and it looks like your <TreeItem> doesn't render their children the way <Tree> does).. @sapegin In fact, even just having a shape with an enum field is enough to find yourself in a situation where something like recursive rendering is needed, because you don't get to see the allowed values for that field:\n\n. Updated the PR, please take a look.. Does adding a prop named store to propTypes work? . I've seen this behavior when missing a semicolon on a statement that directly precedes some JSX breaks the example, too.  . Impressive!. @fdaciuk I would guess he removed the unneeded dependency from his project and pruned/updated node_modules.. Try adding recharts to your styleguidist config: https://github.com/styleguidist/react-styleguidist/blob/next/docs/Configuration.md#require, or as an additional webpack entry point.. I personally would not use the word \"simply\" to describe a setup with non-standard markdown syntax and an extra dependency which does exactly the same as one line in the config, but that's just me.\nI see that front-matter is something that comes with Jekyll, which converts \"plain text into static websites and blogs\". Is it related to react and components in some way? . While this extra markup could definitely be ignored by RSG, it will remain in README.md files and \"pollute\" their \"native\" display in GitHub/Stash. I personally quite enjoy having my code and my examples being written in a simple, no-special-markup-required way. But, I guess, if this is an optional feature then I don't have to use it if I don't want to, so that's not a big deal.\nSent from my iPhone\n\nOn 30 Mar 2017, at 18:15, Artem Sapegin notifications@github.com wrote:\nYeah, I\u2019d like to see some use cases where it actually simplify configuration. For me it brings more questions: ordering for example?\nWhat we can do is ignore front matters in markdown files and then generating sections config would be a few lines of code and up to the user.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I have no opinion but I welcome this change because this is exactly how my setup works :). I have the same kind of background in my project as well, but it's diagonally striped. This one is also good.. Although to be honest, I am not sure if this is going to be useful for most people. This feature is useful if you are working on some sort of a reusable UI component library which is supposed to work in unpredictable conditions on variety of backgrounds. I doubt this is what the majority of RSG users are building. I think the majority is targeting one environment with a specific background color, and so will have little use for this change, and even might be annoyed by it. I think this change could be a perfect cookbook example of how to customise your RSG, or an optional extension in the future, but I'm not 100% sold on it being in the main repo.. Uh, tests please?. RSG only supports components that can be parsed by react-docgen. As far as I can see, it does not support typescript (and doesn't plan to), and I am not sure if they support tagged template literals.. Official? Not sure what you mean. . What \"it\", devServer field? Yes, it is. https://webpack.js.org/configuration/dev-server/#devserver. Yep, markdown-to-jsx v5.3.0 is broken: https://github.com/probablyup/markdown-to-jsx/issues/104. \n. The author of markdown-to-jsx is located in NY and probably is asleep now, so to speed things up a bit I suggest locking it down on our side for now. When the issue is properly fixed, this change should be reverted.. @tiagojsalmeida the important thing to understand how RSG works is that in its core is react-docgen, which takes your files and parses them as strings without executing them. It cannot follow an import and it doesn't understand how HOCs work, but in exchange it can read your code comments. An approach I personally find useful when working with \"wrapped\" components is to export both wrapped and un-wrapped versions of the component: one goes into production, another goes into RSG. If your wrappers are complicated and add a lot of extra functionality then you should talk to react-docgen about parsing HOCs.  . Corrections were made.. Call me biased but I think that current UI is alright and with exception of #350 I don't see any obvious places that need improvement. Ease of access to information, speed and responsiveness of the application and code parsing features like JSDoc support play a much bigger role on the developer experience than UI bells and whistles, in my opinion. As for extensions and plugins, those are probably cool to have but are not related to UI, apart from the question of \"where do we put all this new stuff\" which I would say should be asked only after we do have that new stuff.\n. There is no toggle but you may want to use sections  for grouping.. Hmmm, no, I don't think devtools matters for what I do. \n\nSent from my iPhone\n\nOn 30 May 2017, at 19:12, Artem Sapegin notifications@github.com wrote:\n@n1313 Did you want to be able to change devtools? What should we do for production build?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Yeah, typical... \"People with numbers in their nicknames, they're all the same\" :(((\n\nSent from my iPhone\n\nOn 30 May 2017, at 19:22, Artem Sapegin notifications@github.com wrote:\n@n1313 Sorry, it was @cef62 ;-)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. You're looking for something like backstopjs and you want to address examples by using existing data-attributes. They are there precisely for the purposes of integration RSG with external tools like this.  . I'm not sure if I understand the topic correctly. Are we talking about implementing a new feature into RSG, or about making RSG work well with existing third-party tools?\n\nSent from my iPhone\n\nOn 8 Jun 2017, at 14:17, Oleg Slobodskoi notifications@github.com wrote:\nMore questions:\nWhere would you want to store the images? Repository?\nHow big can this grow?\nHow can we snapshot in different browsers? Karma?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. RSG already has everything it needs to integrate with external visual regression tools: #238 #334. I don't know what a plugin would be needed for. Integrating an external tool into RSG sounds like a massive feature creep to me. . > Nobody is saying that\n\nI thought @kof was saying precisely that: \"I think react-styleguidist is a good place to do this\", \"used as a dependency and integrated into sg as well\". Are you sure you and @kof share the same definition for the word \"integration\"?\n. The point I'm trying to make is that RSG already has everything that a visual regression testing tool like backstopjs to work. I know that because I was using them together pretty successfully for several months. It's quite simple: you serve your built docs (or a live server url) to the tool, it takes screenshots of component previews and compares them with previous screenshots. That's it. The only thing needed is a way to address the preview containers (we have this) or open examples in isolated pages (we have this). I don't know what else needs to be done here, so when you ask me for ideas on implementation I don't understand what exactly you want to be implemented. . Yes, if you don't configure your tool to target individual HTML nodes for your screenshots(or if it can't do that)  then yes, you will be screenshotting the entire document.\nSent from my iPhone\n\nOn 9 Jun 2017, at 17:15, Oleg Slobodskoi notifications@github.com wrote:\n@n1313 I think you would be creating screenshots of the entire document with styleguidist, which means if styleguidist changes the ui, your tests will all break. Am I wrong?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It's not \"each component\", it's \"each test\". In simplest case a test is a code block, but it could also be a result of some scripted interaction like a click or typing into a textfield.\n\nSent from my iPhone\n\nOn 9 Jun 2017, at 17:31, Oleg Slobodskoi notifications@github.com wrote:\nI haven't tried yet, but from what I can see we need to be able to:\ncreate snapshots for each component without the sg ui\nwhen getting snapshots mismatches, the report should point to the exact component\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Usually they provide a way to call PhantomJS APIs directly or provide a reasonable substitution for that.\n\nSent from my iPhone\n\nOn 9 Jun 2017, at 18:01, Oleg Slobodskoi notifications@github.com wrote:\nIt's not \"each component\", it's \"each test\".\nEach code block in styleguidist at the end renders one react component. So visually you always end up with one component. But you can call it whatever you want, I think you know what I mean.\nresult of some scripted interaction like a click\nSo those visual testing tools provide API's for interactions to be made before a screenshot will be taken?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. This looks like a great candidate for a plugin. . https://github.com/OnetapInc/chromy. Would having \"real\" routing make it easier to potentially split the bundle into lazily loaded chunks, one component per chunk?. This looks like a great first step. Some parts are a bit unclear to me, like how would a third-party plugin be registered (webpack loaders will have to be reconfigured for this, probably?) and configured, but with a bit of documentation it should be fine.\n\nI think it would be great if styles or classnames were somehow exposed to the plugins, so that they could use them to look like a natural part of the UI. A third-party button plugin will not have easy access to TabButton component and won't be able to easily follow any future changes in RSG UI (or any customizations that an end-user might have). Passing refs for relevant HTML nodes would be useful, too.. Are plugins going to be loaded in alphabetical order? Should plugins in config be an array?. Yes, I think the babel way is good.. I have played a bit with this branch and it looks promising.\nIt is easy to start developing a test plugin: just checkout the branch and work in one of the examples. The plugin loader happily accepts local paths so you don't have to touch npm while you develop:\njs\n  // in styleguide.config.js\n  plugins: {\n    //...\n    './plugins/test': {\n      options: { /* plugin configuration options */ }\n    }\n  }\nThe configuration options from above can be accessed in your plugin like this: \njs\n// in ./plugins/test/index.js\n//...\nconst testPlugin = (globalConfig, pluginConfig) => {\n  // plugin code\n}\nexport default testPlugin;\nI haven't tried doing this yet but it looks like you can export multiple components (or \"fills\") from one plugin module and they will share the module code and state, @MicheleBertoli.\nI think that the next steps for this proposal should be:\n\nconsidering plugin load order and changing plugin list into an array as discussed above.\nstandardising and implementing consistent \"fill addresses\": every fill should receive component name, path and markdown block index (if applicable), so that a plugin could be configured to only work on certain components/markdowns. Maybe even going as far as putting this into standard plugin config.\nmaking a decision on what data and methods should be available to plugins, and whether all plugins should receive the same data regardless of their slot. For example, should props data (\"usage\") be available to toolbar buttons? I think it should be possible to pass this data \"inside\" a plugin by exporting two fills, one for docsTabButton and one for exampleToolbarButton and then sharing it between them, but is this a good way? Could it be done better?\ncoming up with a way to change the styles of rsg-components like Playground from plugins. Consider a plugin that switches Playground background color from plain white to striped, or that switches its width from 100% to 320px to simulate mobile view. A hacky way to do this would be via DOM manipulation. A better way would be to give plugins some sort of an API to do that, maybe by passing refs?\nconsidering sharing the \"parent rsg-component\" to plugins, so that they have easy access to its props and state, and could modify it by setState. One interesting possibility here is if we do this and rewrite rsg-components so that their styles are in their state, then modifying their styles from plugins will be very easy.\nimproving plugin loader so that class components (class Something extends Component) can be used as fills. Currently this is not supported (only simple functions that export JSX are allowed), or I couldn't understand how to make it work.. > It supposed to work already\n\nloadPlugins.js expects render to be a function, so it complains if I export a component there. How should it be done?. ...right. Huh. I guess I'm doing something wrong somewhere else. . What do you think about swapping the order of arguments in plugin constructor? Now it is globalConfig, pluginConfig, I propose pluginConfig, globalConfig. I think most people will be more interested in pluginConfig and not globalConfig.. @sapegin, I've added two commits to change the order of arguments and change the object into array.. I would like the \"background plugin\" to be  more configurable. I wanted to allow passing arbitrary CSS via plugin configuration. At least the color/gradient values should be externally configurable.\n\nThere\u2019s no way to define styles from plugins yet\n\nCan we add/remove custom class names to components and assign custom CSS properties to them instead?. @sapegin what are your plans for maintaining plugins? Do you want them to be kept and maintained by individual owners, or do you want them as repos inside the styleguidist org, or be pushed into the main repo? . Class names and their combinations are easier to switch on and off. If we have multiple plugins that modify styles of the same element (and, possibly, the same CSS properties) then classes will allow us to do it with ease. Otherwise plugin authors will have to be very careful when undoing the changes to not overwrite changes made by another plugin.. If a ref to the element DOM node could be exposed to the plugin then manipulating class names would be trivial with element.classList APIs. . Right now I can't come up with a realistic example of two plugins wanting to change the same CSS property on the same Playground element for different reasons, but that doesn't mean that this will never happen, and we might want to be prepared for that just in case. But, on the other hand, the responsibility of proper cleanup and general compatibility between plugins ultimately lies with authors of plugins, so I suppose this question doesn't have to be resolved today.. I think for now documenting your non-component code such as Redux actions with Markdown (manually or by using something like https://github.com/jsdoc2md/jsdoc-to-markdown/) is your only option. RSG is primarily focused on dealing with individual components and not React-Redux apps as a whole, but I can see how this could be a useful future feature.  . Could you guys please clarify what is going to be the default mode for tagged/untagged code blocks when this is released? . And what about untagged ones? \n. I'm using CSS Modules together with themr, I'll try to find time to write a few words about my setup.. I think this is just how file watching works. Another way would be to restart RSG, but that's probably slower than forcing a re-read by modifying a known file.. Why the major bump?. How much time do you think it'll take this branch to be fully done, and would it be possible to coincide it with initial offering of plugin API? . How about a beta release?. I have a question after reading https://github.com/styleguidist/react-styleguidist/releases/tag/v6.0.0-beta.1: is there a difference between \"live editable preview\" and \"interactive preview\"? If these are the same things then I think they should be described using the same terms to avoid confusion.. @sapegin I agree. https://github.com/gaearon/react-document-title?. I'm not too familiar with react-document-title -- would it be difficult to make it add/remove the component name prefix and leave the static \"React Style Guide Example\" part untouched? There isn't much documentation in the repo.. The problem also is that the static part can be customised by the user, so it can't be hardcoded. . Actually, it is already there: https://github.com/styleguidist/react-styleguidist/blob/master/src/index.js#L70 :) Let me make a quick stab at this.. Would modifying the template file to include that stylesheet work?. @esphen @sapegin do you think this change should be applied to the function popup as well? I would be nice to have these popups look the same.. Titles on Linux look like that? o__o. Just to make sure: is first (undocumented) draft of plugins api going live in 6.0, too?. Nah, it's not important. I was just curious which branch I should use if I want to continue tinkering with plugins after 6.0.. @kumarabhishek please fork the repo, push your fix to a branch in your fork and send a PR from your fork to the main repo. Please send separate PRs for separate issues, it would make reviewing and merging them easier.. Does it work if you roll back to v5? And the \"jsx static\" bit in the middle of your .md file looks weird -- is this is a formatting error or...?. The team I'm in is using RSG to develop a set of UI components for a fairly large international company. We distribute it internally via our private npm repository. RSG is used by us during development as an interactive playground, and the compiled documentation bundle is published to an internal website so that our potential users can take a look at it and see how it looks and works in real life. RSG is not included in our npm package.\nWe write in ES6 and use SCSS, CSS Modules and react-themr for styling. We compile our code to ES5 UMD bundle with static assets (CSS files, SVGs, fonts, ets) as separate files using webpack, so our consumers have to manually insert our files into their pages somehow, either with a <style>/<script> tags or by appropriately inserting it into their build process. I think in order to get the styles automatically injected together with your components you will have to bundle the stylesheet together with your js (so no ExtractTextPlugin shenanigans). . @joergklein there are examples in this repo, are they not enough?. @brianokeefe I don't think RSG does this. But you can do it manually with a little bit of configuration magic:\nIn styleguidist.config.js:\n```js\nconst ignoredComponents = [\n  'ComponentA',\n  'SubcomponentA',\n  'SubcomponentB'\n];\nmodule.exports = {\n  //...\n  sections: [\n  {\n    name: 'All Components',\n    components: ./src/components/**/!(${ignoredComponents.join('|')}).jsx,\n    sections: [\n      {\n        name: 'ComponentA',\n        components: () => ([\n          './src/components/ComponentA/ComponentA.jsx',\n          './src/components/ComponentA/SubcomponentA.jsx',\n          './src/components/ComponentA/SubcomponentB.jsx'\n        ])\n      }\n    ]\n  }\n  ]\n  //...\n};. I bet you need to require the font file itself, too.\nBy the way, if your components depend on font-awesome, shouldn't it be the dependency of your package and be required from your components?. It would be a good addition to add a link to the original issue https://github.com/webpack/webpack-dev-server/issues/887 to illustrate what exactly the security risk here is about.. @WaldoJeffers https://react-styleguidist.js.org/docs/configuration.html#showusage. Does it work if you delete all components from your source folder except for one simplest component?\nDoes it work if you manually list your components in config instead of using a glob pattern?\nDoes it work if you run styleguide:build? What is inside the built bundle?. Alright, I\u2019ll change that.\nSent from my iPhone\n\nOn 10 Jan 2018, at 19:11, Artem Sapegin notifications@github.com wrote:\n@sapegin commented on this pull request.\nIn docs/Documenting.md:\n\n }\n\n}\n+  toggleOpen() {\n+    this.setState({\nThere are or they should ;-) There are recommended by React docs: https://reactjs.org/docs/state-and-lifecycle.html#state-updates-may-be-asynchronous\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @sapegin updated the PR.. The simplest way to do this would be to create a Markdown file with colors and include it in RSG. . Can this be made optional? Props have different significance, and I personally sort/group them manually in the order of significance. For example, I would dislike having something like onTransactionSigned placed above transactions because you wouldn't understand what onTransactionSigned does without reading about transactions first. . The option of sorting props is valuable and useful, but I would personally prefer the default prop display behaviour to not change (especially if it is coming in with only a minor version bump). . Well, truth be told, I'm still sitting on v5.3.2 (because I couldn't get over the previous UI change that came in with a minor version bump and undoing that change is too much effort), so this change won't affect me at all. But if I was on v6, I would be pissed. . https://eslint.org/docs/rules/sort-keys exists, but it doesn't work with --fix :|. > let\u2019s just do this and see if anyone else will complain. \n\nWhat's the plan if someone else does complain? Roll back the release?\n\nWe can\u2019t make all users happy anyway.\n\nIn my opinion it is important to note that current situation with props being unsorted is not a known source of unhappiness for any noticeable fraction of users of RSG (at the very least I am not aware of any issues or complaints about this in the repo). Many users are relying on current behaviour of RSG even though it is non-standard, and changing it will no doubt be a surprise to them. \nPlease consider keeping current behaviour as default by shipping with propsTransform: props => props and instead adding the sorting function to documentation as a useful example of using propsTransform. \n. @peterlenagh are these two buttons members of the same package? As in, are they exported as one package/library? . That's an interesting problem. I would argue that technically you have separate packages, and maybe you should have separate styleguidists to cover them, but I also see the benefit of having all of them on one page.\nConsider this: your customers are importing your different buttons using names that you assign to them in your entry points, but Styleguidist doesn't care for that, it reads files. So, I think it should be possible to have components with namespaced names, but exported with plain names:\n\nlib/base/components/button.jsx has an export class BaseButton {}\nlib/client1/components/button.jsx has an export class FancyButton {}\nlib/base/index.js re-exports BaseButton as Button\nlib/client1/index.js re-exports FancyButton as Button\nStyleguidist is configured to read both lib/base/components/button.jsx and lib/client1/components/button.jsx, and it gets namespaced names BaseButton and FancyButton\n???\ncould work?\n. > if uri structure reflected sections that would solve my issue nicely\n\nI think the problem here is not the routing but the name collision. Two components with the same name just cannot exist together in one context. They have to be named differently.. In configuration styles, try something like \nMarkdown: {\n  pre: {\n    fontSize: '12px'\n  }\n}. I think this is something that react-docgen (which parses js files for info for react-styleguidist to consume) should do.. @viraths take a look at the last code example in https://react-styleguidist.js.org/docs/documenting.html#writing-code-examples, it documents a different approach to writing code examples and might be helpful in your situation. https://react-styleguidist.js.org/docs/configuration.html#webpackconfig\n\"entry, externals, output, watch, and stats options will be ignored. For production builds, devtool will also be ignored.\"\nYou might need to https://react-styleguidist.js.org/docs/configuration.html#dangerouslyupdatewebpackconfig. My pleasure.\nSent from my iPhone\n\nOn 26 Mar 2018, at 15:14, Artem Sapegin notifications@github.com wrote:\nThanks!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. What would be the benefit of this change for users who already have custom templates?. Sticky components? Are you talking about position: sticky?\n\nIf yes, I would recommend adding a button that toggles visibility of the component in your example. The component is hidden by default, click the button to show, click the button to hide. Very useful for things like modal windows, popup notifications, or elements with position: fixed or position: sticky. Alternatively you can add a special display mode to your component that makes it work in a slightly different way from how it should look like in production, and a button that toggles this mode on and off. Useful for animated things (stopped by default, click to start the animation), and can be made to work with position: fixed too.\nhttps://github.com/styleguidist/react-styleguidist/issues/930 might also be relevant to you.. There are some configuration options that might be helpful here:\nhttps://react-styleguidist.js.org/docs/configuration.html#components\nhttps://react-styleguidist.js.org/docs/configuration.html#getexamplefilename\n. React-styleguidist uses webpack internally and cannot use rollup. Your project can use whatever bundler  you find the most fitting, it doesn't matter to react-styleguidist at all.. I thought of that too, but I am not sure this should be done as a part of this PR.. I agree, but this is how it is done in PropsRenderer which I used as a base for my PR. I decided to not deviate from the \"style\" of it too much. I think a classname refactoring should be done as a separate PR across the entire codebase. . Hmmm, would that make any difference?. Without this check the test for props-loader fails. I don't understand the reason, but in test env parsedProps is an object, and in dev/prod env it's an array of objects. I was going to ask you about it in chat but it was late so I just slapped a check on it and went to bed -___-. Maybe we can, but that's out of scope of this PR :). Ah, now I see what you are talking about. OK!. Hmmm, that's weird.. I was testing the wrong thing :(. > FlowType\nI have copied that from docgen readme. What is the correct spelling?\n\nignored with a warning\n\nI'd rather not \"overpromise\" on this. It is possible to have a half-broken component that works in markdown but has incomplete proptypes (for example, if you declare them by reusing some dictionary instead of listing everything in .oneOf([])) or something minor like that.. I thought of that but there's a link to the /loaders folder in the previous paragraph and I don't know how much value is there in adding four links to basically the same place. . > every block without language tag\nThis is going to change soon, right? :). So, isWebpack1? :). I think a more specific name like \"playgroundTabButton\" would be better here. I'm afraid I don't fully understand this bit. Can there be a case when active is set, but onlyActive isn't? What would be the intention of it?. The logic of this warning is probably incorrect: it warns if an existing slot can't find any fills (which should be totally ok: you could have an extension point but nothing occupying it at the moment), but instead it should warn if a fill requests a  slot that doesn't exist.. Done.\n. By saying \"real React code\" I mean \"code that can be copy-pasted without modifications into any other React application\". How should I rephrase it?. Sure, I'll move the binding to the constructor.. I want to keep this example as simple as possible. Functions in setState are not widely used yet, as far as I understand.. ",
    "jonathanp": "I just ran into the same error, haven't had time to debug it yet though.\n. ",
    "gregz67": "+1\n. ",
    "kazooie": "I forked to use styleguidist with Babel 6, but it is very, very hacky since you now have to compile your own babel to give to the web browser for live previews. I first tried the babel-standalone project (https://github.com/Daniel15/babel-standalone), but couldn't get it working with webpack. \nI made the babel compilation a separate step in bin/styleguidist and pushed a precompiled version that contains es2015, react, and stage-0 presets. \nI don't plan on making this ready for a PR, and only made it as a temporary solution until babel adds some support for babel in the browser again, but maybe it can provide some ideas for how to do handle the upgrade.\nhttps://github.com/kazooie/react-styleguidist/tree/github-feature/babel-6\n. ",
    "karlbright": "Thanks for opening this issue @jardakotesovec. I too ran into this issue and wasn't able to work it out across the large application codebase. I'm interested to see how this progresses.\n. @mik01aj Good call. I was meant to go back and fix those up and completely forgot :+1: \n. All sorted.\n. @mik01aj Damn, i was JUST about to add that comment, and yes it should as it doesn't use flexbox at all.\n. I'm all for the title in the sidebar :+1:\n. \n. @sapegin The other option here is to move these to the process* functions, which means that this base code should remain quite simple?\n. @sapegin Yes, It wasn't clear whether or not they could both be supplied or if components were ignored when sections was provided, so I expected you or @paulj would have some information on this front.\n. So to be clear here, my understanding is this:\n- Components is not required, if the Sections property of the config is provided\n- If no Sections property is provided, then Components is expected/required to exist\n- Both Components and Sections can be provided and the styleguide takes these both in to account without issue\nThat last point is something I am not clear on. I assume that they can both be provided, however if a section contains a component that is provided within the components configuration property, then that component will be listed twice within the style guide. Is this correct @sapegin and @paulj? \n. @paulj Cool, figured as much. Updated to cleaner syntax, much happier.\n. \n. I didn't add the button here just as I wasn't sure how we wanted to tackle that, as well as not being sure that this is how we wanted to tackle the feature. I thought it best to get this \"okayed\" and merged with a seperate PR for linking from components. The idea was to provide a button/icon to jump to a single component preview, much like you said @mik01aj \nThe other issue was definitely around how to handle it with the sidebar like you mentioned @sapegin. At this stage I think it's best to remove the sidebar on single component pages.\n. Yes, I'm +1 with @mik01aj on this. This PR is definitely just a look at providing the functionality for viewing a component by itself, which is helpful when building out a component. I'd rather look at how the styleguide can be organised to better provide such functionality in a seperate issue than look at building on this PR.\nThe only thing I'd maybe look at adding here is the button from a ReactComponent.\n. @mik01aj I like that idea but I don't think it scales very well. At the moment i'm using Styleguidist with 150~ components and this would mean that if I search for \"Button\" I might have 10~ results scattered throughout the list. Changing the ordering on these wouldn't work either as we have to take sections into consideration.\n. Thinking about it though, this could definitely work without graying out other options, and just reducing the list to that search input text. So in this case, a search for \"Button\" would result in the sidebar showing \"Button\" and \"RandomButton\", perhaps with a \"show all components\" link at the bottom of the list to clear it.\nThis doesn't tackle the issue of showing one component however, but there are some ideas here to play with. I'll mess with it for a quick spike to see what we could do.\n. I'm having a look at this now with some quick ideas. Will open a new PR and ping.\n. @sapegin Yes, I think this is fine for the time being with understanding that it may change.\n. A few things to note on this as it stands:\n- I'm not entirely sold on the double click functionality, but considering that this is some functionality that will not always be used, it could work.\n- Currently the search input/filter term is not held anywhere, ideally this will be added to the url as a search/filter query (/styleguide?filter=button)\n- Focusing an item/component does not change the URL, ideally in a cleaner implementation of this, it would do that, much like #123 does.\n. This is a spike. The code behind it is definitely hacked together and it's\nnot how I'd want to handle it at all. I wasn't going to spend time on this,\nit's primarily here to look at the interface and functionality, not the\nimplementation.\nOn Tue, 12 Apr 2016 at 6:20 PM, Miko\u0142aj D. notifications@github.com wrote:\n\nI don't like the way you manage state. Each component can be filtered, or\ngrayed out, and it's not clear how to transition between these states. All\nstate should be visible.\nThe functionality is served, but it's not consistent nor intuitive.\nI would actually start by designing the application state - in my idea, I\nwanted to make the search term the only state we need to handle. Seemingly\nit's not enough and we also need a flag to force an exact match to show\nexactly one component. But having a search string for filtering and\ncomponent selection for isolating one component is too much. And note that\nthese 2 variables can easily get out of sync, causing confusion.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sapegin/react-styleguidist/pull/124#issuecomment-208834909\n. @sapegin Keen to get your opinion on how this \"focused\" mode could be handled.\n. Again, this is a spike on a feature. The important thing here is the result,\nnot the implementation. It's to look at and mess with ideas around the\n\"focused mode\".\n- I used Immutable out of habit and it was easy, I didn't need to but it\n  doesn't matter.\n  - Display: none is a hack, we'd ideally not render the components, although I\n    still believe its better to use render none for a few reasons off the top of\n    my head.\n\nI want to make sure people realise that this implementation isn't final, it's\nall one big hack to show how it COULD work for the user.\n. Closing this for the time being. We need to think about how best to handle the interface for this and not sure if this the best way. I think there is definitely better ways to handle this, which may mean bigger changes, but it's a better path.\n. It is actually no longer required, have removed this now.\n. Probably not, this was taken directly from ReactComponent heading styling.\n. Whoops. I completely forgot to take line 44 and 45 out :)\n. It wasn't clear whether they could both be provided or not, if they can then this works fine. I went for the more verbose ifelse here just to make it clear what was happening. I'd be more than happy to clean it up like this though :+1:\n. ",
    "phpnode": "@sapegin yep, it's safe\n. This change is bittersweet to me, I understand the reasoning but it does take away some convenience, especially when experimenting with examples in the code editor. To be honest it's making me reconsider using markdown at all - normal .js files obviously have tooling advantages.\nWould you accept a PR which:\n- Injects components into the function scope rather than polluting window?\n- Makes the above an opt-in configuration option.\nI've got a project with 283 markdown files here and not enjoying the prospect of converting them by hand! \n. ",
    "danez": "But be aware that the returned types differ between propTypes and flow due to the different options one has in flow.\nsee https://github.com/researchgate/react-docgen/blob/add-flow-type-support/README.md#types\n. Can anyone share an example of a file which fails? I tried reproducing this error in react-docgen, but so far had no luck.. We released react-docgen@3.0.0-rc.2, it has the latest version of recast and babel and some fixes. Let me know if that makes it any better.. Are you using react-docgen/dist/babylon somewhere in your code directly? This file does not exist anymore, but it also shouldn't be used outside of react-docgen.\nDo you have a stacktrace?. I also just released 4.0.1 with a fix for proptypes support (https://github.com/reactjs/react-docgen/pull/330).. ",
    "oliverturner": "No problem at all!\n. Re the preference for lodash import syntax, I'd suggest that it's more in line with the direction that lodash itself is going to reference the module directly?\n. Removed all references to lodash.x packages and replaced _.pluck with _.map per discussion at https://github.com/underdash/underdash/issues/4#issuecomment-110026962\n. Better support in IDEs that perform inline static analysis (Atom + Tern.js, IDEA-based, etc.) is another up-side. Not aware of any negative impacts.\n. Happ to :)\nSent from my iPhone\n\nOn 16 Feb 2016, at 20:03, Artem Sapegin notifications@github.com wrote:\n@oliverturner Do you want to make a PR for that?\n\u2014\nReply to this email directly or view it on GitHub.\n. Hey @sapegin really sorry for the delay... been swamped for ages :(\n\nClosing for now: will reopen as soon as time permits\n. > Looks like we need another example to show this customizations. Otherwise people will this that all this files you\u2019ve added to example are required.\nGood point. What about moving the current /example/lib/styleguide/directory to example/styleguide-customised to indicate that it's not meant to be a part of the app source or even necessary?\n. Well that would at least be the ultimate test of how effective this tool is: if it can work against a library that size, including getting the UX right - performance, making components easy to find, etc. - then it can work on almost any codebase\n. Really not sure what the conflict would be: merges fine against master for me :(\n. Yeah... think I fell out of sync. Apologies if I messed anything up!\n. Hm... Probably should apply the same pattern (splitting out stateless renderers) to other components, otherwise it'll confuse users.\n. Gonna have to ask for your help squashing these commits :(\n. Thanks :muscle: \n. Absolutely: sorry for the delay, been prepping for my first tech talk (yesterday: went ok; need practice!)\n. Thanks for wrangling the rat's nest of commits!\n. It was a primer for how tooling works: how package managers, task runners, transpilers & module bundlers work together \n. For new devs it looks impenetrable!\n. I'll link to slide & video presently \ud83d\ude00\n. Any thoughts on making the introductory README slimmer? As in, a brief overview and quick set-up, but break out customisation, advanced config, how things work behind the scenes, etc. into linked wiki pages.\nReally like the changes here, but we're still heading into wall-of-text territory. This is understandable given the flexibility of the app, but it may be more appealing to new users if it looks easy to get started. Just a thought in advance of offering to help out...\n. @mik01aj agreed: not suggesting that we strip the README of useful top-level stuff, only that we distribute some of the weight.\n@sapegin not fixated on the wiki: any pattern - e.g. docs + markdown - works for me :)\n. Nice!\n. I need to do likewise\n. I'll take a look\n. Just checked with a fresh install: works for me\n. Shouldn't \nconst regex = new RegExp(value.toLowerCase().toString(), 'g'); \nbe \nconst regex = new RegExp(value.toString().toLowerCase(), 'g');\ninstead? A value that isn't a string already will throw if toLowerCase is called on it...\n. @hokuma can you post your .babelrc?\n. @mik01aj it's more robust because it's a more generous definition. include reduces the surface area of what's being parsed and is therefore a more accurate implementation of your intent.\nIn the case of top-level files, simply add them to the array of inclusions\n. @shubhamsizzles my experience is that - as much it feels elegant to be able to reference your deps like this - it just leads to issues and confusion down the line. Not sure I'd go so far as to call it a hack (since webpack allows you to do this)... maybe an anti-pattern? I'd recommend being as explicit as possible.\n. Re styling, what are your thoughts on using a web component approach (with fallbacks) to improve isolation of Styleguidist components from Project components?\n. Because the Styleguidist components won't be interfered with by global styles set from an imported stylesheet\n. The project I'm working on sets a bunch of styles on bare elements - h1-6, p, a, etc. - this wreaks havoc with Styleguidist\n. An alternative would be to use babel-plugin-lodash to automate the module extraction: possibly less onerous.. got it: good catch :). My bad... #willfix\n. Force of habit :)\n. Not required by Babel 6, but incredibly useful to people who need to switch between versions of Node: on some projects I need to use the Node LTS version (4.2.x) to stay in sync with an environment, on others I want to switch to v5. \nUsing https://github.com/wbyoung/avn, simply by cd'ing into the directory I get switched to the project-specific version. I can certainly remove, but it's a nice feature for some.\n. oops...\n. > I think pull request is not a good place to change project\u2019s code style.\nAgreed. One of those force-of-habit things, not intending to change style without consensus.\n\nIf you think that const is better than var we can discuss it and maybe change for the whole project.\n\nPersonally I do prefer it, and indeed only ever use let to indicate that a variable can be redeclared.\n. const seems to be supported in Node 0.12: see http://stackoverflow.com/questions/28388885/ecmascript-6-features-available-in-node-js-0-12#answer-28389178\n. :stuck_out_tongue:\nnext commit changes it back...\n. ",
    "gregmuellegger": "styleguide.config.js:\n``` javascript\nvar path = require('path');\nvar projectWebpackConfig = require('./webpack.config');\nmodule.exports = {\n  rootDir: './web/ui',\n  components: './atoms/*/.js',\n  getExampleFilename: function(componentpath) {\n    return path.join(path.dirname(componentpath), 'README.md');\n  },\n  getComponentPathLine: function(componentpath) {\n    var name = path.basename(componentpath, '.js');\n    var dir = path.dirname(componentpath);\n    return 'import ' + name + ' from \\'' + dir + '\\';';\n  },\n  updateWebpackConfig: function(webpackConfig, env) {\n    // Add scss loader.\n    webpackConfig.module.loaders = webpackConfig.module.loaders.concat(\n      [{ test: /.js$/, exclude: /node_modules/, loaders: ['babel'] }],\n      [projectWebpackConfig.EXPORT.scssLoader],\n      projectWebpackConfig.EXPORT.fontLoaders\n    );\nwebpackConfig.resolve.alias['rsg-components/StyleGuide'] = path.join(\n  __dirname, 'web/styleguide/StyleGuide');\n\nreturn webpackConfig;\n\n},\n};\n```\nstyleguidist server --verbose:\n```\n$ ./node_modules/react-styleguidist/bin/styleguidist server --verbose\nUsing config file: /home/gregor/projects/wiki/styleguide.config.js\nrootDir:                      /home/gregor/projects/wiki/web/ui\ncomponents:                   ./atoms/*/.js\nskipComponentsWithoutExample: false\ntitle:                        Style guide\nstyleguideDir:                /home/gregor/projects/wiki/styleguide\ntemplate:                     /home/gregor/projects/wiki/node_modules/react-styleguidist/src/templates/index.html\nserverHost:                   localhost\nserverPort:                   3000\nhighlightTheme:               base16-light\nverbose:                      true\ngetExampleFilename: \ngetComponentPathLine: \nupdateWebpackConfig: \nUsing Webpack config:\nentry: \n  - webpack-hot-middleware/client\n  - /home/gregor/projects/wiki/node_modules/react-styleguidist/src/index\ndebug:         true\ncache:         true\ndevtool:       eval-source-map\nstats: \n  colors:  true\n  reasons: true\nplugins: \n  - \n\n\n\noptions: \n  title:    Style guide\n  template: /home/gregor/projects/wiki/node_modules/react-styleguidist/src/templates/index.html\n  inject:   true\n\n\n\ndefinitions: \n  process.env: \n    NODE_ENV: \"development\"\nmodule: \n  loaders: \n\ntest: \n    source:     .jsx?$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  include: \n/home/gregor/projects/wiki/node_modules/react-styleguidist/src\n/home/gregor/projects/wiki/web/ui\n  loader:  babel\n  query: \nstage:   0\nplugins: \n/home/gregor/projects/wiki/node_modules/babel-plugin-react-transform\nextra: \n  react-transform: \n    transforms: \n\ntransform: react-transform-hmr\nimports: \n\nreact\nlocals: \nmodule\n\n\n\ntransform: react-transform-catch-errors\nimports: \n\nreact\nredbox-react\n\n\n\n\n\n\ntest: \n    source:     .json$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loader: json\ntest: \n    source:     .css$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  include: /home/gregor/projects/wiki/node_modules/codemirror\n  loader:  style!css\ntest: \n    source:     .css$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  include: \n/home/gregor/projects/wiki/node_modules/react-styleguidist/src\n/home/gregor/projects/wiki/web/ui\n  loader:  style!css?modules&importLoaders=1&localIdentName=ReactStyleguidist-[name]__[local]!postcss\n\n\ntest: \n    source:     .js$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  exclude: \n    source:     node_modules\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loaders: \nbabel\n\n\ntest: \n    source:     .scss$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loader: style!css?sourceMap!sass\ntest: \n    source:     .woff2?(\\?.*)?$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loader: url-loader?limit=10000&mimetype=application/font-woff\ntest: \n    source:     .ttf(\\?.*)?$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loader: file-loader\ntest: \n    source:     .eot(\\?.*)?$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loader: file-loader\ntest: \n    source:     .svg(\\?.*)?$\n    global:     false\n    ignoreCase: false\n    multiline:  false\n    lastIndex:  0\n  loader: file-loader\n  noParse: \nsource:     babel-core\\/browser.js\n  global:     false\n  ignoreCase: false\n  multiline:  false\n  lastIndex:  0\noutput: \n  path:     /home/gregor/projects/wiki/styleguide\n  filename: build/bundle.js\nresolve: \n  root:               /home/gregor/projects/wiki/node_modules/react-styleguidist/src\n  extensions: \n\n.js\n.jsx\n  modulesDirectories: \n/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules\nnode_modules\n  alias: \ncodemirror:                /home/gregor/projects/wiki/node_modules/codemirror\nrsg-components/StyleGuide: /home/gregor/projects/wiki/web/styleguide/StyleGuide\nresolveLoader: \n  modulesDirectories: \n/home/gregor/projects/wiki/node_modules/react-styleguidist/loaders\n/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules\nnode_modules\npostcss: \n\n\n\nListening at http://localhost:3000\nLoading components:\n- /home/gregor/projects/wiki/web/ui/atoms/Headline/Headline.js\n- /home/gregor/projects/wiki/web/ui/atoms/Headline/index.js\n- /home/gregor/projects/wiki/web/ui/atoms/Icon/Icon.js\n- /home/gregor/projects/wiki/web/ui/atoms/Icon/index.js\n- /home/gregor/projects/wiki/web/ui/atoms/Paragraph/index.js\n- /home/gregor/projects/wiki/web/ui/atoms/Paragraph/Paragraph.js\nError when parsing index.js\nError: No suitable component definition found.\nError when parsing index.js\nError: No suitable component definition found.\nError when parsing index.js\nError: No suitable component definition found.\nwebpack built c4d4f7173ea2de133fa0 in 5401ms\n```\n. I get a new error, probably because I'm on Babel 5 so far and styleguidist 2 requires Babel 6.\n```\n$ ./node_modules/react-styleguidist/bin/styleguidist server        \nListening at http://localhost:3000\nwebpack built dbac532f0fc772e6c1ba in 706ms\nHash: dbac532f0fc772e6c1ba\nVersion: webpack 1.12.13\nTime: 706ms\n          Asset     Size  Chunks       Chunk Names\nbuild/bundle.js  46.9 kB       0       main\nchunk    {0} build/bundle.js (main) 8.26 kB [rendered]\n    [0] multi main 40 bytes {0} [built] [1 error]\n    [1] (webpack)-hot-middleware/client.js 3.39 kB {0} [built]\n    [2] (webpack)/buildin/module.js 251 bytes {0} [built]\n    [3] ./~/strip-ansi/index.js 161 bytes {0} [built]\n    [4] ./~/ansi-regex/index.js 135 bytes {0} [built]\n    [5] (webpack)-hot-middleware/client-overlay.js 1.01 kB {0} [built]\n    [6] (webpack)-hot-middleware/process-update.js 3.27 kB {0} [built]\nERROR in ./~/react-styleguidist/src/index.js\nModule build failed: ReferenceError: [BABEL] /home/gregor/projects/wiki/node_modules/react-styleguidist/src/index.js: Unknown option: /home/gregor/projects/wiki/.babelrc.stage\n    at Logger.error (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/file/logger.js:41:11)\n    at OptionManager.mergeOptions (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/file/options/option-manager.js:289:18)\n    at OptionManager.addConfig (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/file/options/option-manager.js:234:10)\n    at OptionManager.findConfigs (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/file/options/option-manager.js:434:16)\n    at OptionManager.init (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/file/options/option-manager.js:489:12)\n    at File.initOptions (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/file/index.js:211:75)\n    at new File (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/file/index.js:129:22)\n    at Pipeline.transform (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-core/lib/transformation/pipeline.js:48:16)\n    at transpile (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-loader/index.js:14:22)\n    at Object.module.exports (/home/gregor/projects/wiki/node_modules/react-styleguidist/node_modules/babel-loader/index.js:88:12)\n @ multi main\nChild html-webpack-plugin for \"index.html\":\n         Asset     Size  Chunks       Chunk Names\n    index.html  1.12 MB       0     \n    chunk    {0} index.html 412 kB [rendered]\n        [0] ./~/html-webpack-plugin/lib/loader.js!./~/react-styleguidist/src/templates/index.html 368 bytes {0} [built]\n        [1] ./~/lodash/index.js 411 kB {0} [built]\n        [2] (webpack)/buildin/module.js 251 bytes {0} [built]\n```\nI hope to get the time migrating to Babel 6 sometime soon.\n. I won't be able to migrate anytime soon on this project. So I'm happy if you want to close the ticket. Otherwise I might report back here in a few months how things turned out.\n. ",
    "pekala": "I was on the 2.0.0-rc but now I moved to 2.0.0-rc3 and the error is slightly different. It comes from this line https://github.com/sapegin/react-styleguidist/blob/master/src/utils/utils.js#L6\nIt is most probably because I don't have displayName in my components. It's weird that it comes up only after the minification.\n. The reason is that I am using babel-plugin-transform-react-display-name. I thought it would be adding display name for me, but apparently this doesn't work for functional stateless components. \nInterestingly this only failed for built version after minification but not for non-minified or server version.\nWould it make sense to allow components without displayName and take it from the file name?\n. Yes, I also tried UglifyJsPlugin without any plugins... It's just odd. But you should be able to reproduce it for any component without displayName.\n. ",
    "stepankuzmin": "Hi there! Thanks for this project! I have the same problem with mapbox-gl. It works with development environment but fails after building minified version.\nThe project is located here: https://github.com/urbica/react-map-gl\nwebpack.config.js: https://github.com/urbica/react-map-gl/blob/master/webpack.config.js\nstyleguide.config.js: https://github.com/urbica/react-map-gl/blob/master/styleguide.config.js\nIs there any way to disable minification on building style guide? I've tried to pass  NODE_ENV=development on building, but this had no effect.. @sapegin thanks for the reply! Project setup requires MAPBOX_ACCESS_TOKEN (https://www.mapbox.com/help/define-access-token/) but the problem is not with it.\nEverything works fine on styleguidist server, but styleguide build brokes on styleguidist build due to UglifyJS plugin. Probably there is a problem with minifying mapbox-gl. My workaround is to manually disable UglifyJS plugin on build (https://urbica.github.io/react-map-gl/ ). Maybe it would be good to have something like -p option (like in webpack) enabled by default in react-styleguidist. What do you think?. Same issue here. But I could import external libraries, but couldn't import local components.. Well, in my case this issue was resolved by completely removing prettier-eslint dependencies from my project:\njs\n\"prettier-eslint\": \"^8.8.2\",\n\"prettier-eslint-cli\": \"^4.7.1\"\nThat's pretty strange behavior, though.. ",
    "vyorkin": "I've just cloned the repo and ran npm install && npm run start:customised\n. yes, it works :+1: thank you guys!\n. ",
    "ahmed1490": "somehow i missed If you want to run them directly, use ./node_modules/.bin/styleguidist\nmy bad!\n. ",
    "eduardoinnorway": "What is the status here? I would like to have one page per group of components .... Confirm that require in webpack config works for external libraries. Thanks, this actually solves the issue, just make more sections and group more.. No need to update package-lock.json, I did not remove or add any packages. I just added a new \"script\" in package.json to create snapshots for JEST testing.. Done. ",
    "pnepe6": "We would like to have a site next to our documentation, I've been trying to implement react-router-redux but I can't get wih this configuration another path served than /. Every created route return 404. any idea. Solution 2 works, thank you so much.. ",
    "hokuma": "I am using v6.6.4.\n$ ./node_modules/.bin/babel --version\n6.6.4 (babel-core 6.6.4)\npackage.json\n\"devDependencies\": {\n    \"babel-cli\": \"^6.6.4\",\n    \"babel-preset-es2015\": \"^6.6.0\",\n    \"babel-preset-react\": \"^6.5.0\",\n    \"babel-preset-stage-0\": \"^6.5.0\",\n    \"react-styleguidist\": \"^2.1.0\"\n  },\n  \"dependencies\": {\n    \"react\": \"^0.14.7\"\n  }\n. I have already used presets, but I have resolved this problem by excluding project dependent node_modules from module.loaders.\nIMHO:\nreact-styleguidist itself is dependent on markdown-react-js which works with babel5 options. When staring styleguidist server, babel6 tries to process markdown-react-js in node_modules and fails.\nThanks.\nupdateWebpackConfig: function(webpackConfig, env) {\n    webpackConfig.module.loaders.push(\n      {\n        test: /\\.js$/,\n        // Affect only your project\u2019s files\n        include: __dirname,\n        exclude: /node_modules/,\n        // Babel loader will use your project\u2019s .babelrc\n        loader: 'babel'\n      }\n    );\n    return webpackConfig;\n  }\n. @oliverturner \nThis is my .babelrc. \n{\n  'presets': ['es2015', 'react', 'stage-0']\n}\n@sapegin \nChange my webpack config following this comitt(9569354), and it works. \nThanks!\n. ",
    "qur2": "I just the same for the example readme file loading:\nERROR in ./~/react-styleguidist/loaders/examples.loader.js!./src/components/ui/Readme.md\nModule build failed: SyntaxError: Unexpected token R\n    at Object.parse (native)\n    at Object.module.exports (/the-project/node_modules/json-loader/index.js:7:48)\n @ ./~/react-styleguidist/loaders/styleguide.loader.js! 3:319-395 3:692-768 3:1080-1156\nIn the same way, if I wrap the requireIt call in the processComponent function, I get passed this error. However, in this case, it later fails when the components are rendered with:\n// here examples is a string: 'require(\"examples!/the-project/src/components/ui/Readme.md\")'\nUncaught TypeError: examples.map is not a function\n. Oh!! Thank you, I actually misconfigured the JSON loader, I completely omitted the test key for that loader (mistakenly, not on purpose at all):\njavascript\n{\n      loaders: ['json'],\n      include: /\\.json$/,\n}\nIt works fine for dev & build, but only started to fail with styleguidist. I changed the loader config to:\njavascript\n{\n      loaders: ['json'],\n      test: /\\.json$/,\n      include: /\\.json$/,\n}\nAnd it works as expected. Thank you for your hint, it did put me on the correct track.\n. ",
    "CompuIves": "Sure!\n\nversus\n\n. Yes, this is more clear. I'll update the pull request!\n. Updated:\n\n. ",
    "pastelsky": "@sapegin My project already relies on moduleDirectories, so that relative paths work for importing subcomponents within components. I'm afraid its not something I can change. Surely, there must be some way around this?\n. I fixed that error by added node_modules to wepackConfig.externals. Webpack now runs successfully, but now the client has problems with hot reloading. \nmodule.exports = require(\"webpack-hot-middleware/client\");\nrequire not defined\n. @sapegin It isn't a hack. Writing \nimport \"components/componentA.jsx/\" \nis neater than\nimport ../../../../components/componentA.jsx\",\n if I add \"src\" to moduleDirectories.\n. @sapegin it doesn't.\n. Hmm... Isn't the highlighting applied by codemirror library itself? What could be possibly going wrong? Don't see any console errors.\n. @sapegin  In my case, the only classes I see are CodeMirror-line and CodeMirror-code . No other classes. Doesn't look like a css problem.\n\n. ",
    "ctoscano": "@sapegin: I added the example to Readme.md#writing-code-exmaples. \n@mik01aj: While I agree with you, that would cost a broader re-write and re-evaluating an unknown number of previously made design decisions. If you know the code well enough to point out where the change should be made I can take a closer look, if you think it is worth it.\n. ",
    "paulj": "I've added documentation for the resolver and handlers properties into the main Readme. Is there anywhere else that needs to be updated?\n. @mik01aj this change should have no effect on existing guides, since if the options aren't specified, the behaviours default to the same as previously. \nFor the examples, they are currently allocated to all components in the file, since spreading the props out is done by duplicating all the other collected data. This isn't ideal - I'm investigating some other ways of targeting examples. \n. @mik01aj with #109 merged, examples can now be annotated onto specific components with the @example doclet, which allows files with multiple examples to use that syntax instead of creating a file-wide examples file.\n. @sapegin I've just merged master in, and applied some other stylistic fixes based upon your comments on other PRs.\n. No worries. Do you have any thoughts on how you're wire in using HTML files for content? I'm just forwarding them straight into the examples loader, so we're inheriting whatever capabilities it has there.\nEverything is on a single page for now. I didn't want to make this PR too huge!\n. I've merged master into this branch to remove the conflicts. Was there anything else you can see that needs changing at the moment?\n. @sapegin we actually do use the functionality from that file. The doclets are parsed with props.doclets = reactDocs.utils.docblock.getDoclets(props.description);, which ultimately lands in that file. I had to reproduce the regexp though, since that file doesn't provide any mechanism for stripping out the doclets from the description once they are parsed.\n. @karlbright Yes. If the same files ended up being listed twice (either in components and sections, or even just in two different sections), then they would end up being included twice.\n. Props would be the object generated by the props loader. The displayName property can be injected by a react-docgen handler - either the built in one, or a custom one like I suggest in the docs. \n. Calling it SectionRenderer led to a name duplication later when I mixed the renderer and section together. I thought for consistency, it was better to rename this on import.\n. So you're thinking that as a peer to <Components>, there is a <Sections>? I'd assumed they were fairly closely tied, and to try to keep compatible with non-sectioned HTML, I was needing to make <Components> add in child sections. Because the import Renderer was already taken by the component renderer, I was left a bit stuck for names,\n. That would break the inline require statements, and presumably end up quoting the JSON object returned by processComponent?\n. Ok. I've added a Sections component that mirrors the style of the Components component.\n. A trivial fix to this would be just:\ncomponents = processComponents(components);\nsections = processSections(sections || []);\nThe intention was that you could use sections and components in parallel (if for some reason you wanted that).\n. ",
    "asci": "Any working example for scss? Have the same issue\n. @mik01aj thanks a lot, but I don't have separate styles file\n. by \"react loader\" I mean babel-loader with react preset.\nI'm using custom preset which is contain react.\n. It is strange, I reverted my changes in the project to commit when it worked. And now it doesn't. Maybe it is somehow related to node\\npm\\some dependency version or so? Will check again in the evening. The basic example is working well.\n. ",
    "drewdecarme": "I was having the same issues as well with compiling imported .scss files into each component using a derivation of CSS Modules called Babel Plugin React CSS Modules. I read @AoDev suggestion and realized that I didn't have an exclude in my Style Loader for Webpack 2. Here was my solution\njavascript\n{\n        test: /\\.(css|scss)$/,\n        exclude: /node_modules/,  // originally didn't have it and added\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              importLoader: 1,\n              modules: true,\n              localIdentName: '[local]___[hash:base64:5]'\n            }\n          },\n          'sass-loader',\n          'postcss-loader'\n        ]\n      },. ",
    "marklundin": "Further info on this. Whilst the above throws the warning, the modified code below does not.\n```\nimport { PropTypes } from 'react'\nlet EmptyComponent = _ => empty\nlet oneOfType = [\n    PropTypes.instanceOf( Int8Array ),\n    PropTypes.instanceOf( Uint8Array )\n]\nEmptyComponent.propTypes = {\n    someValue:PropTypes.oneOfType( oneOfType )\n}\nexport default EmptyComponent\n```\n. opened a PR\n. Feel free to comment\nOn Wed, 30 Mar 2016, 14:18 Artem Sapegin, notifications@github.com wrote:\n\nBetter both. But I agree at least comment is necessary.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sapegin/react-styleguidist/pull/112#issuecomment-203428182\n. I guess load time for end users would be a factor for a large number of complex components. Also so bots can crawl. I guess for the same reasons as you'd want to pre-render on the server.\n. @mik01aj good point, I'll take a look. \nI'd still be interested to see how much better a static page loads though. As @sapegin said, if it's a fairly straightforward update I'll submit a PR.\n\nI'm not sure if theres any real SEO impact thought. React does state you'd use renderToStatic for this very reason, but my understanding is that most bots execute js and wait for the page to load anyway, so this may be a non issue.\n. No, nothing renders.\nHave you checked http://rexxars.github.io/react-markdown/. Seems to be under active dev and img seems to work \n. ",
    "Guria": "react-docgen doesn't requires component, but parses component source as text. Moreover, it is not being able to parse transpiled builded files. Live examples must be builded to be able to run, on the other side.\nDocumentation recommends to extend webpack config with appropriate loaders to build components. It's possible, but my suggestion is to be able define path to transpiled components.\nIn my case I have several libs with both sources and transpiled build in node_modules. I want pass sources to make react-docgen happy and use already built files for demo purposes.\n. ### Using dist build\njs\nmodule.exports = {\n  sections: [\n    {\n      name: 'Layout Components',\n      content: './node_modules/some-lib/README.md',\n      components: './node_modules/some-lib/dist/*.js'\n    }\n  ]\n}\n- ok for styleguidist to use for demo purposes\n- but not ok for parsing with react-docgen: Error: No suitable component definition found. for Stateful components transpiled from es6 class definition.\nUsing sources\njs\nmodule.exports = {\n  sections: [\n    {\n      name: 'Layout Components',\n      content: './node_modules/some-lib/README.md',\n      components: './node_modules/some-lib/lib/*.jsx'\n    }\n  ]\n}\n- ok to parse with react-docgen\n- but not ok to direct require for demo purposes.You may need an appropriate loader to handle this file type.\nCurrent solution\n``` js\nvar path = require('path')\nvar merge = require('webpack-merge')\nvar localConfig = {\n  module: {\n    loaders: [\n      {\n        test: /.jsx?$/,\n        include: path.join(__dirname, './node_modules/some-lib/lib/'),\n        loader: 'babel'\n      }\n}\nmodule.exports = {\n  sections: [\n    {\n      name: 'Layout Components',\n      content: './node_modules/some-lib/README.md',\n      components: './node_modules/some-lib/lib/*.jsx'\n    }\n  ],\n  updateWebpackConfig: function (webpackConfig, env) {\n    return merge(webpackConfig, localConfig)\n  }\n}\n``\n- bothreact-docgenandstyleguidist` happy\n- I have to manage loaders, babel options, transforms, etc for each library\nProposal\njs\nmodule.exports = {\n  sections: [\n    {\n      name: 'Layout Components',\n      content: './node_modules/some-lib/README.md',\n      components: {\n        source: './node_modules/some-lib/lib/*.jsx',\n        dist: './node_modules/some-lib/dist/*.js'\n      }\n    }\n  ]\n}\n. I know about recommendation. In my case it will be bunch of libraries. It will be really a mess of require('some-lib/webpack.config') with per library hacks to patch include, exclude pathes, etc.\n. It is definitely not a problem of my libraries. Libraries are distributed with compiled build to es5 commonjs. Library consumer doesn't have to know anything about build tools used. And my suggestion was to allow styleguidist to consume built files, while also providing path to sources to make react-docgen able to generate docs for components.\n. > compile your jsx to js with some tool outside styleguidist (be it webpack, babel or anything)\nExactly. it already compiled and published to internal npm server\n\nand then you want styleguidist to consume these compiled files instead of compiling them again\n\nYes. I just install them from local npm and want styleguidist to be able use already compiled one for demo purposes and sources for docgeneration.\n\nBut on the other hand, I'm not sure if people actually do this often in their projects.\nWhat you propose would be cleaner and faster for your project, but I'm not sure it will be that useful for the general public.\n\nIt expected to be opt-in, so shouldn't affect general public. If you are not ready to spent time for not common case, I understand you. I can do it on my own with your permission and guidence. \n. what about option just like getExampleFilename, but for compiled source?\n. js\nmodule.exports = {\n  sections: [\n    {\n      name: 'Layout Components',\n      content: './node_modules/some-lib/README.md',\n      components: './node_modules/some-lib/dist/*.js'\n    }\n  ],\n  getComponentSource: function (path) {\n    return path.replace('dist', 'lib')\n  }\n}\n. ",
    "gazpachu": "Hi @Guria did u manage to solve the loading of the components and their examples from an external dependency?\nI also don't want to mix styleguidist with my UI components lib. Thanks!. Hiya!,\nI've just released sugUI, a design system template based on Styleguidist that uses the sugUI components library: https://gazpachu.github.io/sugui-design-system/\n. I've just run on this one too. The fix worked but I still get this error TypeError: styled is not a function.  The module is loading correctly using const styled = require('styled-components'); so I don't know what's wrong.\nI've also tried using html primitives...\n```\nconst StyledTopNav = styled.div\nTypeError: styled.div is not a function\n```\nAnyone had this before? @pke @okonet @sapegin . Fixed const {default: styled } = require(\"styled-components\");. Thanks, that should be enough! . In styleguide.config.js I've added this:\nstyleguideComponents: {\n    Wrapper: path.join(__dirname, 'src/wrapper'),\n    StyleGuideRenderer: path.join(__dirname, 'src/styleguide'),\n    TableOfContentsRenderer: path.join(__dirname, 'src/toc'),\n    ComponentsListRenderer: path.join(__dirname, 'src/list'),\n    HeadingRenderer: path.join(__dirname, 'src/heading')\n  },\nThen, I created src/list.jsx and src/list.styles.jsx:\n```\nimport React from 'react';\nimport cx from 'classnames';\nimport Link from 'react-styleguidist/lib/rsg-components/Link';\nimport Styled from 'react-styleguidist/lib/rsg-components/Styled';\nimport styles from './list.styles';\nconst ComponentsListRenderer = ({ classes, items }) => {\n  // eslint-disable-next-line\n  items = items.filter(item => item.visibleName);\nif (!items.length) {\n    return null;\n  }\nreturn (\n    \n      {items.map(({\n        heading,\n        visibleName,\n        href,\n        content,\n        external\n      }) => (\n        \n\n            {visibleName}\n            {/ (visibleName === 'Table') && ${classes.label} ${classes.wip}}>WIP /}\n          \n          {content}\n        \n      ))}\n    \n  );\n};\nexport default Styled(styles)(ComponentsListRenderer);\n```\n```\nconst styles = ({\n  color,\n  fontFamily,\n  space,\n  mq\n}) => ({\n  list: {\n    margin: 0\n  },\n  item: {\n    color: color.base,\n    display: 'block',\n    margin: 0,\n    paddingLeft: space[2],\n    fontFamily: fontFamily.base,\n    fontSize: '18px',\n    lineHeight: '40px',\n    listStyle: 'none',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    borderBottom: '1px solid #EEE'\n  },\n  isChild: {\n    [mq.small]: {\n      display: 'inline-block',\n      margin: [[0, space[1], 0, 0]]\n    }\n  },\n  heading: {\n    color: color.base,\n    marginTop: space[1],\n    fontFamily: fontFamily.base,\n    fontWeight: 'bold'\n  },\n  label: {\n    color: 'white',\n    borderRadius: '6px',\n    padding: '2px 6px',\n    marginLeft: '5px',\n    fontSize: '13px',\n    verticalAlign: 'middle'\n  },\n  wip: {\n    backgroundColor: '#ea985d'\n  },\n  review: {\n    backgroundColor: '#45bb75'\n  },\n  remove: {\n    backgroundColor: '#E60000'\n  }\n});\nexport default styles;\n```\nIn line 34, I'm matching the visibleName with Table to show a span element for the badge beside the Table link in the list.\nI hope it helps. Got it... styleguideDir in the config!. <script src=\"build/bundle.30b8c140.js\"></script>\nthis serves from the root of my domain, so I need to prepend styleguide to that.\nI've read in #874, that this could be achieved with https://react-styleguidist.js.org/docs/configuration#dangerouslyupdatewebpackconfig but I don't know how to do it. I don't think there's any issue with the loaders, as it works fine when I don't use a symbolic link to the place where the components are. Plus it's a styled-component, what could possibly a webpack loader do with it that cannot do already with the babel-loader?. Thanks, that worked!\n```jsx\nclass TooltipExample extends React.Component {\n  constructor(props) {\n    super(props);\nthis.state = {\n  value: false\n};\n\nthis.ref = null;\n\n}\nrender() {\n    return (\n       (this.ref = c)}>\n         this.setState({ value: true })}\n          onMouseLeave={() => this.setState({ value: false })}\n        />\n        {this.state.value ?\n          \n            {console.log(this.ref)}\n            This is just an example tooltip\n\n        : null}\n      \n    );\n  }\n}\n\n``. I'm looking at theexport function CodeRenderer(_ref2) {inlib/rsg-components/Code/CodeRenderer.js`. The _ref2 parameter seems to contain always the same class for both elements, the text within back-ticks and the component props text.\nI wonder if we could pass an extra field inside _ref2 to indicate that we want to style it a bit differently?. I missed fixing the default values items, which still have the code styles:\n\n<code class=\"rsg--code-70\">12</code>. Maybe we need something like an assetsPublicPath?. I've fixed it like this:\n```\nconst sections = toc.props.sections.slice(0);\nfor (let i = 0; i < sections.length; i += 1) {\n  sections[i].callback = () => this.setState({ active: !this.state.active });\n\n  for (let j = 0; j < sections[i].sections.length; j += 1) {\n    sections[i].sections[j].callback = () => this.setState({ active: !this.state.active });\n  }\n\n  for (let j = 0; j < sections[i].components.length; j += 1) {\n    sections[i].components[j].callback = () => this.setState({ active: !this.state.active });\n  }\n}\n\nReact.cloneElement(toc, { sections });\n\n```\nAnd then just call callback in the <Link> of each list item:\n<Link\n            className={cx(classes.link, heading && classes.heading)}\n            href={href}\n            target={external ? '_blank' : undefined}\n            onClick={() => callback()}\n          >. Where do you suggest I can use the Styled(styles)() to apply the styles?. ",
    "pvasek": "OK, no problem, I will try a different approach.\nI think #106 solved the first part of the problem, to get props information for these components.\nCould you point me out where is a good place to do that work. I am still quite confused how it works :) Thanks\n. OK, I will check it. Thank you!\n. Turned outs, it was actually related to #106. Because in that case I can use named export and default export together. I just didn't realize that it hasn't been released yet. Sorry to bother you and thank you once again.\n. I have already closed this PR. PR #106 solves completely if you have the same component as named and default as well. \nThe #37 is probably more connected to the fact that the example component is always the default exported one. In that case the #104 could probably be a solution or at least workaround.\n. This is perfect, thanks a lot. I put together a simple implementation of props parser for typescript. \nYou can find it here:\nhttps://github.com/pvasek/react-docgen-typescript\n. @sapegin I don't think ~~so~~ this is typescript related. \nThis would be same for javascript. But you are right the problem here is that example uses the component TitleExample in markdown file but defines component with the name titleExample. Then, in this case, of course the TitleExample cannot be found. Once the import is used, it's aliasing titleExample as TitleExample and that's the reason why from that moment it's magically working .. @marcel-k sorry, that was my mistake in previous comment (I removed \"so\"). \nI don't think that this is typescript related.\nI think the problem is that you have titleExample component but you are trying to use TitleExample. This couldn't work event in the same file.. ",
    "stereobooster": "But does it support Flow type definitions like:\njs\ntype Tab = \"TAB1\" | \"TAB2\";\nIt seems not. Still looking into it\nUPD: false alarm. It was because I'm using react-scripts-cssmodules instead of react-scripts. Any plans to support import in the code instead of require()? Related: https://gitlab.com/Rich-Harris/buble/issues/59. Maybe JSON like structure with editable value (inline editor, enables when you click it)\nSome inspiration for UI:\n\nhttp://worrydream.com/Tangle/\nExample of \"JSON like structure\" https://uber.github.io/react-map-gl/#/interactivity\nExample of inline editor http://kaivi.github.io/riek/\n\n\nUPD:\nCheck out this example with code editor https://react.semantic-ui.com/modules/dropdown#dropdown-example-search-selection\n. I do not want to open an separate issue, because I'm not sure if this an issue of styleguidist or my setup. I bootstrapped project with https://github.com/wmonk/create-react-app-typescript\nMy config is:\njs\nconst path = require(\"path\");\nmodule.exports = {\n  propsParser: require(\"react-docgen-typescript\").withCustomConfig(\n    \"./tsconfig.json\"\n  ).parse\n};\nI get the following error\nInvalidCharacterError: Failed to execute 'createElement' on 'Document': The tag name provided ('static/media/Navbar.b192c68a.tsx\nUPD: fixed by adding this to the config\nwebpackConfig: require(\"react-scripts-ts/config/webpack.config.dev.js\"). This is what I see\n\nFrom react-docgen: flow-type-support. \njs\n    \"func\":{\n      \"flowType\":{\n        \"name\":\"signature\", // <--- pay attention\n        \"type\":\"function\",  // <--- pay attention\n        \"raw\":\"(value: string) => void\",\n        \"signature\":{\n          \"arguments\":[\n            { \"name\":\"value\", \"type\":{ \"name\":\"string\" } }\n          ],\n          \"return\":{ \"name\":\"void\" }\n        }\n      },\n      \"required\":false\n    },\nI suppose we can showfunction instead of signature in this situation. Can do PR for it if you agree. Maybe you will direct me where to do this in the code, but if not this is ok too.\n. Note to myself:\nhttps://github.com/styleguidist/react-styleguidist/blob/3df38d4e63831a725de522156d52e8e27746f0f9/src/rsg-components/Props/PropsRenderer.js#L18-L35\nStupid solution\njs\nlet name = type.name;\nif (name === \"signature\" && type.type !== undefined) {\n  name = type.type\n}\ninstead of\njs\nconst { name } = type;\nUPD: there is already this https://github.com/styleguidist/react-styleguidist/pull/781/files#diff-bf5c71c0b1dcaa51081c3d9b36ba5c00R42. Here is proposal for it https://github.com/facebook/create-react-app/pull/3776. Yes will open. Thanks for the tip. create-react-app bug report confirmed. Will close this\nUPD: it is confirmed by not maintainer (facepalm). Why would you write \"bug confirmed\", if you are not maintainer, but whatever\n. @sapegin can you please take a part in the discussion in create-react-app \ud83d\ude4c. They try to understand if it is easier drop dynamic import in styleguidist or allow it in node_modules.  https://github.com/facebook/create-react-app/pull/3776\nThanks. Oh sorry, I meant https://github.com/facebook/create-react-app/issues/4477#issuecomment-390203747. ",
    "JedWatson": "Just published an update to react-codemirror as well.\n. ",
    "albertfdp": "@sapegin would it be possible to upgrade to babel-preset-react-hmre 1.1.1? Current version requires it as a peer dependency and blocks the upgrade to 15 unfortunately\n. @sapegin Can you push a npm version so we can pick this? Thanks!\n. Awesome, thanks!\n. ",
    "jarekbb": "For TypeScript install styleguidist/react-docgen-typescript. ",
    "ryanpcmcquen": "@vslinko, what parser are you using?. @sapegin, it is Styleguidist, it was running and then I Ctrl + C'ed out of it. Now it will not let me run the server again.\n  . @sapegin, is that the only way to stop the server?\n  . It isn't working on my project. If I edit a component the entire page reloads:\nhttps://github.com/SurLaTable/slt-ui/\nhttps://github.com/SurLaTable/slt-ui/blob/develop/builder/docs/styleguide.config.js. This seems like not HMR at all. I don't understand the distinction between this and no HMR.. ",
    "ZorGleH": "I'm very interested to have a static rendering, because I'm making a styleguide for an application which is not in React. It would be very cool to have a static output which can be copied/pasted, without the React clutter. How would be the best way to do that?\n. ",
    "oleksii-udovychenko": "Only some bots execute js (google spider does for example), but most of them don't wait for ajax calls to finish. I say most because I don't know any of them that do wait.\nStatic rendering is the MUST for SEO optimization if you fetch data from a server using ajax and dynamically generate HTML afterward. Otherwise, it can improve the first-time-loading experience and allow your page to be cached more efficiently. \nIn any case, it is nice to have such capability.. Any luck with this? . ",
    "O4epegb": "The thing is than everything working if I'm using regular file with code, even in typescript, but not working with reexport. And I checked the same scenario without typescript it didn't worked too.\nI checked your examples, there is regular file with component, like Button.jsx and index.js file with reexport too, and you are using component file but if I reconfigure system to work with reexported index.js versions then nothing works.\n. You can try to recreate this case, just use index.js files from examples, instead of directly using component files.\nI can provide some more info tomorrow, if you need it, but I'm pretty sure it is not about typescript. (It was so easy to configure your library to use typescript, I was amazed, thank you again)\n. That might be the case. Is it hard to implement this feature? That would be killer feature, with it you could make docs for independent libraries, without touching any internal source code.\n. Hm. This is quite strange, I think react-docgene actually analyzes imports, because if you import some other component inside yours - then everything is ok, like in your examples with modal, otherwise it would not work, if I understand correctly. So, if I just make dummy wrapper-component and import my component inside, it should work. I'll test this tomorrow.\n. Hey, again!\nI tried again today, with version from npm this time, and everything suddenly works!\nBut i have a question, why props.loader.js in npm version is different from the one in github repo? Someone forgot to commit it? New version of this file fixed all issues, but you need to synchronize them, i think.\nAnyway, thank you for the answers, version from npm works well so far, you can close this issue.\n. This is the version from npm package\nhttp://puu.sh/ogFsZ/c5e4ebcab6.png\nThe one in the github repo looks completely different, no? It is also not working, in my case.\n. Had same issue with node 5.10. This one #250 too. I'm not able update node at work just yet, so decided to try other version of styleguidist, 4.0.0, build static just fine, but server still crashing with same error.. Very nice, thank you for good work!. ",
    "ndelangen": "Me and my team are using sourcejs-react-styleguidist as @operatino says.\nWe currently document 58 spec pages, ranging from Utilities/Colors, Utilities/Fonts, Atoms/Buttons, Atoms/Image, Molecules/Map, Molecules/ProductList, Modules/Hero, Modules/StoreLocator, Scaffolds/Header, Scaffolds/Footer.\nSpec pages are grouped together according to a somewhat atomic design principle to the extend that worked for us.\nOn each spec page there are on average 5 representations of each component, in different states, variations, with different modifiers etc. Some specs only have a single representation, some have over 20.\nThis is for example how our Atoms/FormElements looks like:\n\n. With webpack 2 you can do:\nSystem.import('xyz').then(xyzModule => {\n  // use module\n});\nAnd it will code-split automatically. I've done so, with packages without dependencies, but the result was a success.\n. Congrats on this major release!\n. Non-tagged code blocks can't have comments, because if the parser can't know the language, it can't know the syntax for comments.\nJust tag your code blocks \ud83d\udc4d \nI guess you could just assume the syntax is // comment-here.. Hey @ethanh1223 it looks like this PR kind of got forgotten, do you think it would be possible for you to finish this one?\nIt would definitely be awesome if you could. If not I'm sure @sapegin can take over to get this work merged!. ",
    "zecaptus": "Hello from Whataboon ;)\nChange from the original react-styleguidist  (without forking / only webpack aliases) : \n- Material Design\n- One component / page\n- Collapse Sections\nFuture : \n- 100% Material\n- Subsections  \n\nGood job @sapegin !! Probably the best styleguide that I've found !\n. @pke : I'm not really sure, it's really helpfull but here it is.\nstyleguide.config.js\n``` JS\nvar path = require('path');\nvar glob = require('glob');\nmodule.exports = {\n    title: 'Whataboon UI Components Library',\n    sections: [\n        {name: 'Introduction', content: 'docs/introduction.md'},\n        {name: 'UI Components', content: 'docs/ui.md', components: function() {\n            return glob.sync(path.resolve(__dirname, 'src/components//.jsx')).filter(function(module) {\n                return /\\/[A-Z]\\w.jsx$/.test(module);\n            });\n        }}\n    ],\n    showCode: true,\n    template: 'config/styleguide/template.html',\n    updateWebpackConfig: function(webpackConfig, env) {\n        // Your source files folder or array of folders, should not include node_modules\n        var dir = path.join(__dirname, 'src');\n        var config = path.join(__dirname, 'config/styleguide');\n    webpackConfig.resolve.alias['rsg-components/Layout'] = path.join(config, 'Layout');\n    webpackConfig.resolve.alias['rsg-components/Wrapper'] = path.join(config, 'Wrapper');\n\n    webpackConfig.module.loaders.push(\n        // Babel loader will use your project\u2019s .babelrc\n        {\n            test: /\\.jsx?$/,\n            include: [dir, config],\n            loader: 'babel'\n        },\n        // Other loaders that is needed for your components\n        {\n            test: /\\.css$/,\n            include: [dir, config],\n            loader: 'style!css?modules&importLoaders=1'\n        },\n        // Image URL config. Generate data URI's for images smaller than 10,000 bytes\n        {\n            test: /\\.(png|gif|jpe?g|svg)$/i,\n            include: [dir, config],\n            loader: 'url?limit=10000'\n        }\n    );\n    return webpackConfig;\n}\n\n};\n``\n. @sapegin Yes, I still use it, moreover I will update it to make it work for [react-native](https://facebook.github.io/react-native/) with [exponent`](https://snack.expo.io/), probably in 2018.. @cameron-martin nothing here.\n1/ The trick is to overwrite styleguide components \n2/ parse current component in the url \n3/ and insteadOf showing a list of components, just show it as if it was open in isolated mode.\nHope this can help you ;). As I wanted to have a single component / page, I have done something that probably can help you.\nTake a look here : https://github.com/zecaptus/styleguide. ",
    "kulakowka": "We finally started using it in production.\n\n\n. @sapegin We just started developing our components. They will be released in a couple of weeks. Unfortunately, we can not open the source code. No one will be able to see our documentation, except for employees of our company. Does it make sense then to place a logo? . I started a new project: react-bulma - React.js components for Modern CSS framework based on Flexbox - bulma.io\n\nDocs created with styleguidist: https://kulakowka.github.io/react-bulma/\n. I have this problem too.\nVersions of my packages:\n\"dependencies\": {\n    \"react-scripts\": \"^0.8.5\",\n    \"react\": \"^15.4.2\",\n    \"react-dom\": \"^15.4.2\",\n    \"react-styleguidist\": \"beta\"\n  },. @okonet It can be customized. . @sapegin yes, i can do it. https://github.com/ryanseddon/react-frame-component. @stepancar try to use JSS %). Tell me, where can I see conflicts?. I can make changes again in the master branch if you want.. In Google Chrome I got a strange bug:\n\nI cancel this request.\n. ```javascript\nconst { resolve } = require('path')\nmodule.exports = {\n  title: 'Foxford UI',\n  getExampleFilename (componentPath) {\n    return componentPath.replace(/.jsx?$/, '.md')\n  },\n  webpackConfig: require('./webpack.development.config.js'),\n  highlightTheme: 'material',\n  template: resolve(__dirname, 'styleguidist/index.html'),\n  assetsDir: resolve(__dirname, 'styleguidist/assets'),\n  sections: [\n    {\n      name: 'Colors',\n      components: resolve(__dirname, 'styleguidist/ColorsPalette/ColorsPalette.js')\n    },\n    {\n      name: 'UI Components',\n      components: resolve(__dirname, 'app/bundles/BaseApp/components/ui/*/[A-Z].js')\n    }\n  ],\n  styleguideDir: resolve(__dirname, '../public/styleguide'),\n  skipComponentsWithoutExample: true,\n  styles: {\n    Playground: {\n      root: {\n        backgroundColor: 'white',\n        backgroundImage: 'linear-gradient(45deg,#efefef 25%,transparent 0,transparent 75%,#efefef 0,#efefef),linear-gradient(45deg,#efefef 25%,transparent 0,transparent 75%,#efefef 0,#efefef)',\n        backgroundPosition: '0 0,10px 10px',\n        backgroundSize: '20px 20px',\n        fontSize: '1rem'\n      }\n    },\n    StyleGuide: {\n      root: {\n        fontFamily: 'Circe, sans-serif'\n      }\n    }\n  }\n}\n```\n\n. Why? \n0 0 - it's background position for first gradient\n10px 10px - it's background position for second gradient\nI have defined this styles in my project and it works for me.\n. What should this comment be about?\nSomething like that:\n/* For example: You can change the background in the component playground. */. ",
    "cameron-martin": "@zecaptus which part of this gives you the one component per page?. You mean in this case:\n- Section\n- - Markdown file\n- - Subsection\n- - - Markdown file\nwhere you have a subsection adjacent to a markdown file?. It would probably be acceptable to have:\n- Section heading (h1)\n- - Markdown heading (h2, down-levelled from h1)\n- - Subsection heading (h2)\n- - - Markdown heading (h3, down-levelled from h1). ",
    "ajainvivek": "I started a new project preact-fluid a minimal UI kit for Preact \n\nDocs created with styleguidist: https://ajainvivek.github.io/preact-fluid/. ",
    "konradk": "\nLiveChat React Chat UI Kit. ",
    "SaraVieira": "\nWe are also using it at Joyent: https://joyent-ui-toolkit.now.sh/. @ashokpatidar Can you provide examples ?. \nYou guys like ? @sapegin\nUsed a free logo that only needs credit and changed according to my idea. \n. \nI made him more evil. Awesome! Let's get some more feedback then :) . I checked and here is their license: http://file000.flaticon.com/downloads/license/license .it says we can change it and use it wherever we want. \nAnd the website:http://www.flaticon.com/free-icon/octopus_371706#term=octopus&page=1&position=6. It does , but I think the idea is just to put a link on the footer, or just use mine :). Okay , most of it I already redraw , as you can see from the link there were a lot of retouches on it , it is original , not just a copy and paste so I can work a little more in it and make it more unique is that okay @sapegin @okonet ?\nMaybe the typo can go , right ?. \nSimpler version. That is a fast change I can put them side by side \ud83d\udc4d \nOne sec. \nComparision of with or without dots. \nSome type ideas , I used raleway that is a free font and can be used on the website easily\nhttps://fonts.google.com/specimen/Raleway. Great feedback @okonet !\nI will take a look at that as soon as I get home :)\nIf you want to play with it and have sketch I shared it on dropdbox: https://www.dropbox.com/s/ld2z44umba1fu3c/rs.sketch?dl=0. https://www.dropbox.com/s/60ghwby45ah523o/Screenshot%202017-04-26%2022.40.05.png?dl=0\nIs this beter ? @sapegin @okonet . Yes, the torquise is the react color \ud83d\udc83 \nMy sketch skills are being put to the test here :p. https://www.dropbox.com/s/hktwcx7li4ogsbb/Screenshot%202017-04-27%2010.48.35.png?dl=0\nSomething like this side ?. I fell like the first legs are too thin, what do you think @sapegin ?. you took his mean eyes :(. > Just an idea: by looking at it, I'm wondering if arms could mimic RS (react-styleguidist) somehow.\nWhat do you mean by this ?. https://www.dropbox.com/s/ukvc2umjp1e4y0q/Screenshot%202017-04-27%2011.27.03.png?dl=0 I think arms like this make it look a little fuller.\nAnd great job making this simpler :D. \n. @okonet Of course I don't mind , use them sketch skills \ud83c\udf89 . That looks amazing @okonet ! I think we may have a winner here \ud83c\udf89 . @okonet thank you! I'm trying to improve them sketch skills, I'm a not designer but I really like to work in stuff so it's awesome I helped :D\nYes we did, I was the girl that chased you and asked if we could use lint staged with flow :p\nSuch a small world! . @sapegin I'll be in Amsterdam again from 15 to 21 of may, we should meet there :D\nIll be speaking at codemotion amsterdam. @sapegin Why not speak about styleguidist there ?. @sapegin My first talk was at front ends so don't fear \ud83d\ude03 . That's not even a bad thing, I'm actually impressed :p\nThe bad boys of atyoeguides xD. @spagin Is the logo decided? . I think maybe we should work on typography a little too since we will be working the website later  . @okonet The blue with the gradient looks amazing! Great work \n@sapegin about the website I thinks it needs more spacing between the sections :/. @sapegin Are you designing this in the browser or using any software? . @okonet Holly crap! We should totally get stickers! . @sapegin Ready for GH pages anytime! Awesome! . https://github.com/styleguidist/react-styleguidist/pull/409 \ud83d\udc83 . @sapegin What do you think about adding jest test to the lintstaged ?. I found this article about it: \nhttps://benmccormick.org/2017/02/26/running-jest-tests-before-each-git-commit/\nIt totally works:\nhttps://www.dropbox.com/s/0nm6f764amgj1wu/Screenshot%202017-04-25%2020.27.38.png?dl=0. I can add it and you test it , for small changes it's pretty fast :). All tests passed :D. I'll try add a pixel grid to this to make the elements more evenly spaced. \nAlso put the logo in the header would be awesome :) \nShould I just work with freedom and put the screenshots here? . That is a great idea , that's exactly what I was thinking about, using a 8px grid and everything \ud83d\ude04 \nhttps://gist.githubusercontent.com/JonathanZWhite/43023e03896db94e8fbe9f6b0058e0fe/raw/797cfe130771a21e107938f8ba3194474dfd32c1/spacing.js\nThank you for the push acess \ud83c\udf89 \n. @sapegin The designer in my team sent me this and I think this would be awesome:\n\n. @sapegin If you create it today I can just close this ticket and just work in the other one \ud83d\udc4d . @sapegin It's the theme that makes it look awesome. I know you can change it but I think it would be a better default. true , it looks nicer but it is harder to read\n. @sapegin Icons sound like a great idea.\nBy toggling the props you mean that the user would be able to collapse the props ?. You mean like this:\n\nI can start with this small fix \ud83d\udc4d \nI will start working on this tomorrow\n. @sapegin Sure, tell me where to start \ud83d\udc4d . What will be the links there ?. Sure, I'll start by adding the buttons to go home and create a nifty\nanimation for the sidebar and I can also pick up the individual dropdown of\nthe props and then we can talk about the better way to do the all props\ndropdown.\nShould we put the new logo on the header?\nOn Fri, 5 May 2017, 09:58 Artem Sapegin, notifications@github.com wrote:\n\nThese are all I can imagine:\n\nGlobal (toggle sidebar, toggle props/description, switch background,\n   close isolation = go home);\n\nSo we can start from home and then add props toggle.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/issues/426#issuecomment-299415661,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABALdY0RH0kpSu3-WX-zYe07ZR6lFfbaks5r2uTNgaJpZM4NPU0w\n.\n. @sapegin Most of the requested changes were made and I added font variables too :). @sapegin All changed made. may I merge ?. hello @ankri !\n\nYou can find the logo here : https://github.com/styleguidist/brand/blob/master/rs-logo.png\nAny modifications you need please let me know. @sapegin I think we should but maybe after this PR goes because this one actually closes an issue. @sapegin I can add the same icon at the top , I tought it would be done in phases but I can dp that really quickly \ud83d\ude04 . I created a ui branch and it's pointed to there now \ud83d\udc4d . Changes made @sapegin \n\n. \ud83c\udf89 \ud83c\udf89 . I gots this @sapegin \ud83d\udc4d . @sapegin why isn't the eslint file in js ?. Never thought of it that way , just curiosity really :)\n330 problems (330 errors, 0 warnings) -> This may take a while :p . Most of them are this : 'rsg-components' should be listed in the project's dependencies. Run 'npm i -S rsg-components' to add it . None if the worked and even if I turn the feature off I keep getting:\n/Users/saravieira/Projects/react-styleguidist/src/rsg-components/TableOfContents/TableOfContentsRenderer.js\n  3:20  error  Unable to resolve path to module 'rsg-components/Styled'  import/no-unresolved\n  3:20  error  Missing file extension for \"rsg-components/Styled\". \nIn this case what is the lan URL ?\n. That's exacly the code I have use, I just need to get the ip address of the\ncomputer\nOn Sun, 11 Jun 2017, 10:49 a.m. Artem Sapegin, notifications@github.com\nwrote:\n\nTake a look at CRA implementation (link in the description), they have all\nthe code (and we probably can reuse it).\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/issues/470#issuecomment-307617680,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABALdQzlBLjLnKbkoO3eDzr6COG4O6hBks5sC7g1gaJpZM4Nyshn\n.\n. Le copy and le paste shall be made then :p\n\n\nThank You and Best regards\nSara Vieira\nFront End Developer\u00a0\nhttp://iamsaravieira.com\nhttp://twitter.com/NikkitaFTW\nOn Sun, 11 Jun 2017 at 13:00 Artem Sapegin\n<\nmailto:Artem Sapegin notifications@github.com\n\nwrote:\n\na, pre, code, a:link, body { word-wrap: break-word !important; }\nBut they already have it ;-/\nhttps://github.com/facebookincubator/create-react-app/blob/dc4ce606ef8b4c97aec0c80c20f8116e9795bb21/packages/react-dev-utils/WebpackDevServerUtils.js#L38-L88\n\u2014\nYou are receiving this because you commented.\nReply to this email directly,\nhttps://github.com/styleguidist/react-styleguidist/issues/470#issuecomment-307624766\n, or\nhttps://github.com/notifications/unsubscribe-auth/ABALdS6uHv0saRmloztiGGBopPGqWamkks5sC9bZgaJpZM4Nyshn\n.. Oh yeah , i'm still on master , just want to show the ui before I start working on it and get that approved first :)\n\n. Sure! I'll create a branch and start working on this tonight :)\nOn Sun, 11 Jun 2017, 7:07 p.m. Artem Sapegin, notifications@github.com\nwrote:\n\nLooks cool! Could we remove this npm run compile notice? It\u2019s incorrect\nanyway ;-)\n\nStyle guide \u2192 style guide\nOn Your Network \u2192 On your network\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/issues/470#issuecomment-307646264,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABALddtXf2bJaOt9DWUhly_pc-L_0d98ks5sDCzcgaJpZM4Nyshn\n.\n. Damn @sapegin no :(\nI'll get on this tomorrow, I'll use my new cli skills to make it awesome! \ud83c\udf89\ud83c\udf89\n\nSent from my Bq Aquaris M5 using FastHub. @okonet I'm not being able to reproduce this locally :(\nIt's super weird that only some of them are missing the font :(. Didn't see this comments , working on them now \ud83d\udc4d . @sapegin all comments fixed. @sapegin I think this a lock issue now\nCan you please try and fix it :(. @sapegin Can you fix the lock again ? :(. @sapegin Fixed the merge now I'll just wait for travis. @sapegin All the tests have passed \ud83d\ude03 . All done :D. @sapegin About that , I don't have npm5 because it breaks the now cli so I can't do that :(\nI use yarn . I installed npm5 and updated the lock , also added the prop. Sorry about that , I was half asleep when I read your comment \ud83d\ude1d. @sapegin sorry , that's happening in mine too when I run the tests.\nCan you please delete the lock and npm install again ?\nI may have screwed up the lock. @sapegin Tests fixed \ud83d\udc4d . @sapegin build seems to pass now , at least locally with the new one. I'll create some tests @sapegin . I can give this a shot  \ud83c\udf55. What are the other other tabs?\nOn Sun, 11 Jun 2017, 10:50 a.m. Artem Sapegin, notifications@github.com\nwrote:\n\n@sapegin requested changes on this pull request.\nIn src/rsg-components/ReactComponent/ReactComponent.js\nhttps://github.com/styleguidist/react-styleguidist/pull/488#discussion_r121277088\n:\n\n@@ -74,6 +75,7 @@ export default class ReactComponent extends Component {\n                      : \n              }\n              tabButtons={\n+                 showPropsButton &&\n\nThere may be other tabs, not just props. I\u2019m thinking that this may be not\nthat easy to fix ;-)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/pull/488#pullrequestreview-43315767,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABALdQnAX4BrKNTWSXSBCSHxlMy_2pMuks5sC7iCgaJpZM4N2Vy2\n.\n. Didn't know that about the slot but the props button receives the whole props including the methods and props of the component so I updated the code to only show or hide the methods component @sapegin . @sapegin Awesome !. @sapegin Can this closed ?. @esphen Will this only show on hover ?. @gaastonsr I got you bro, doing the PR. @sapegin Changed ! Thanks , it makes more sense there :). From what I checked it didn't seen to break :)\n\nA good idea maybe would be to put something like netifly on PR's always mounting one of the instances so we can always be sure :)\ncc @sapegin  . @sapegin Can I do this ? Never used any GH integration so it would be a cool experience :). Sure! As soon as I get home :)\nOn Tue, 11 Jul 2017, 18:52 Artem Sapegin, notifications@github.com wrote:\n\n@SaraVieira https://github.com/saravieira You can at least think how to\ndo it, I\u2019m not really sure myself ;-) Could you open a new issue?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/pull/537#issuecomment-314522075,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABALdQO6MxN8AqYo20vuP7ujY0Vem57qks5sM7ZSgaJpZM4ORcKN\n.\n. @sapegin All changes made and creating the issue now. @sapegin Can you give me an exaample code to make this happen , I can't reproduce. @stepancar Nevermind , I was making the errors in the js :(. Hello @besrabasant ,\n\nYou can hide it using the styles: \nhttps://react-styleguidist.js.org/docs/cookbook.html#how-to-change-styles-of-a-style-guide\nhttps://react-styleguidist.js.org/docs/configuration.html#styles\nYou can also change the layout if you want:\nhttps://react-styleguidist.js.org/docs/cookbook.html#how-to-change-the-layout-of-a-style-guide. @besrabasant Can you try to update to the latest version that runs on 8080 and try again please ?. @sapegin Would be allowing a markdown parser the way to go ?. I know the build is failing , any idea what values used to be ?. - [x] - Code tab should look the same way and the arrow icons should be inside the tab button component. \n- [x] - remove yarn lock file.\n- [x] - Toggle props is hidden in isolated mode\n- [x] - Sidebar button should not be in isolation mode\nOn it !\n\nIt says the build is now two times bigger than it used to be.\n\nI know but why ? I didn't even install anything\n\nI think it should be more like the real isolated mode. What would you like to see when you develop? Just props aren\u2019t a big issue now because they are hidden by default. So probably we should hide text and description, make the heading smaller, etc.\n\nYou think the click should make changes to the theme ?\n@sapegin New demo: https://styleguide-xtiemmtyfv.now.sh. @sapegin I could do a tooltip in just CSS and the content in the before, what you think? . I'll do some iterations on the focus button  of that and send some screenshots :) . What do you mean by the last comment? . Oh! Okay, cool \ud83d\ude03\nOn Sat, 7 Oct 2017, 21:04 Artem Sapegin, notifications@github.com wrote:\n\nYou\u2019re attaching an onClick handler to an image which make them\ninaccessible, inconsistent with other toolbar buttons, you have to write a\nlot of extra styles, and we already have a component for toolbar buttons.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/pull/629#issuecomment-334962315,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABALdTyMlA-EIh0eghpBr3dN-xaNPbz7ks5sp9lTgaJpZM4PxFVj\n.\n. @ankri @sapegin Added the toolbarButton and it looks waaaay better actually :p \n\nthank you for reminding me \ud83d\udc4d \nhttps://styleguide-vwetycents.now.sh/\nWill take a lot at some possible mods tomorrow for focus mode :). @okonet Thanks for the feedback! \ud83d\ude4c\nRegarding the second button it's true it doesn't do anything yet :(\nWhere do you think it would be a better position for them?\nAbout the hiding the sidebar it has come in handy for me a couple of times but yes it's a niche problem . The main use case is mobile like it does right now, besides that it could be useful if you want to work in focus mode.\nNow that I think about its more of a pretty thing then an actually necessity on desktop \ud83d\ude41. Mostly not \ud83d\ude41\nMaybe the sidebar removal in desktop should enable focus mode instead of having two buttons . Btw, @sapegin I pinged you on slack. @tizmagik I can tackle that and just get a better mobile experience for testing\n@okonet Not a problem man! Get back to this when you have time :) . > This is a breaking change, we should keep the old option until the next major release. See updateExample option in the config schema.\nI left the option there :)\n\neditorConfig would be a more generic name, and better match existing options like compilerConfig.\n\nOkay , makes sense. Name has been changed sir !\nHow should I add that warning ? :). Yellow !\nThere was a problem with the logger so I ended up using chalk with a yellow color it looks like this:\n\n. Hello ! Sorry for the time it passed :(\nI was in london and super busy :(\nIt's not repeated anymore :)\nAbout the process .... should it get the value i+and if none is return the hightlight theme one and the defaults ?. Like this ?. About now ? :p. \n. Just wanted to make sure this is what you wanted:\nhttps://github.com/styleguidist/react-styleguidist/pull/662/commits/e1496dcf8a0d3fbb3fbe71c53a87cd57695a4715. Pushed , sorry. Left the defaults as a variable inside the process and just checked with https://facebook.github.io/jest/docs/en/expect.html#tohavepropertykeypath-value. @sapegin All changes made and the lock is reverted :)\n. Reverted now , don't know why it wasn't working :/. The CI can't find jest :(. I know , the weirdest is that I didn't change anything on any files that have anything to do with config :(. @sapegin did you do anything ? The tests are now passing. Docs updated! Sorry , didn't notice it was in alphabetic order \ud83e\udd26\u200d\u2640\ufe0f. That was dumb of me \ud83e\udd26\u200d\u2640\ufe0f\nDone !! \ud83d\ude42\n. Weird, some links are failing in the snapshots only on node 4. YES \ud83c\udf08. Hello!\nSo the problem is that there is no real routing right now has you can see from this issue https://github.com/styleguidist/react-styleguidist/issues/494 so it's not a very specific problem. \nIf you could work on that it would be awesome!\nAll the routes as it says are on the index.js\nIf you need help ping me :) . I can verify this even though I believe this is a safari bug\nI had to do -webkit-text-fill to be able to override and put the actual colors. I try to debug it in collaboration with Fez and this were the findings :\nhttps://twitter.com/NikkitaFTW/status/942754647009349632\nhttps://github.com/yldio/joyent-portal/pull/943. Duuude no, please don't! Even I was ashamed of that PR\nThis is just a link for historical porpuses and the reason I think this is a safari bug. Old version of our styleguide before the fix\nhttps://styleguide-wwgijwjrui.now.sh/\n@kof . docs changed. So we got them Node 4 failing again :(. Passed \ud83d\ude0d. Hi @bitionaire!\nThis is awesome! This is just what I needed to solve a major problem in our styleguide! Anxiously awaiting for this to get merged! . This is my OCD , sorry :/. Yes, because it had a weird grey background , you can see that in the video:\nhttps://www.dropbox.com/s/wycozrv4zm6uch4/Screenshot%202017-04-25%2020.22.20.png?dl=0. Do you prefer if I put it back ?. Updated \ud83d\udc4d . I downloaded directly from master and it was still there :/\nAnd my config is set to download the latest version. Sure! . Sorry , typo. Because it's pretty. That's all :p. I will change them back and add that as a comment . I did it like this to be easier to make sense of it, so when someone sees space16 they will see its 16 px. Typo again, but I can add some :) . But why ?. But the first one is half , how should I call it ?. Spacing renamed to: \nexport const spacing = {\n    0: `${spacingFactor / 2}px`,  // 4\n    1: `${spacingFactor}px`,      // 8\n    2: `${spacingFactor * 2}px`,  // 16\n    3: `${spacingFactor * 3}px`,  // 24\n    4: `${spacingFactor * 4}px`,  // 32\n    5: `${spacingFactor * 5}px`,  // 40\n    6: `${spacingFactor * 6}px`,  // 48\n};. I also exported the spacingFactor if someone wants to change it in their project. Changed :). Not many , but for those who don't we can just go to the apple-system ones. react-group ? What do you mean ?. I will set a focus with the outline , good catch \ud83d\udc4d . isolate: false what does this do ?. I haven't had problems in importing like this but sure , I can divide this in 4 lines \ud83d\udc4d . OHHHHHHHHHHHHHHHHHH. Outline added \ud83d\udc4d . Added \ud83d\udc4d . But why use react group ?. Fixed \ud83d\udc4d . You don't like my css mastery ? :p . Oh , you made this, you selling me your stuff :p . I tried adding only the spaces and they were too close together and you could click one by accident . The thing is I think it makes sense semantically ( not idea if that is spelled correctly) to have their own margins , that way when something is added it always has that margin associated. I added a div with a class of toolbarItem arround the component to actually give the margin some abstration from the component :). copy-text-to-clipboard is a FE dependency so it's not a dev dependency. fixed \ud83d\udc4d . - By removing it show this error:\n/Users/saravieira/Projects/react-styleguidist/test/phantom.js\n  1:16  error  'system' should be listed in the project's dependencies. Run 'npm i -S system' to add it  import/no-extraneous-dependencies\n  1:24  error  Unable to resolve path to module 'system'                                                 import/no-unresolved\n- Removed\n- Nice ! Added \ud83d\udc4d \n- For some reason does not work if I remove it :(. YES ! I removed the webpack and it still works great ! Awesome \ud83d\udc83 . Removed \ud83d\udc4d . Fixed :). Fixed all of this :). Done \ud83d\udc4d . Done \ud83d\udc4d . This file does not exist at all. Now they are on the bottom :p . comment moved. I assumed they were off because the default behavior was on but no , all remove now and all tests are passinhg. it looks the same in my machine :(. eslint still complains and he is right xD. I can do that if I disable the line. Done :D. I wouldn't go as far I think this rule is great for consistency. It says you should do absolute imports first. Done . I removed all tabs :). I thought I answered this \ud83d\ude22 \nI think this was prettier should I remove it ?. Also fixed \ud83d\udc4d . It simply did not log anything. I'm sorry , what do you mean ? :(\nToo many words . Because I thought this is where you meant fpr me to merge. Tests are in this file. Done :). Duh ! Fixed :). I moved it to the consts file , is that okay ?. The problem is that I cant run the tests :(. Mainly because it's being used same place as all consts and it is a constant but I will change it if you think its better. yes I do , it's still being used if the user passes it :o. what do you mean ?. I'm not gonna change this , I was gonna remove it before this commit. should it be in here:\neditorConfig: {\n        _defaults: {\n            theme: 'base16-light',\n            mode: 'jsx',\n            lineWrapping: true,\n            smartIndent: false,\n            matchBrackets: true,\n            viewportMargin: Infinity,\n            lineNumbers: false,\n        },\n        type: 'object',\n        process: (value, config) => {\n`?. nevermind, I was thinking of another test.  Removed this one , yes , it doesn't make sense. should I discard this test then ?. good point :p. Makes sense , but how do I access it ?. I shall , sorry. Doc changes here :). Done , sorry :). Yor are right about both and changed :). ",
    "stepancar": "https://design.alfabank.ru/components/. @mik01aj, error when i use  2.2.1 and npm 3.8.6\n\n. i like 1st variant. @sapegin, because in function we can implement any logic to select which buttons should be plased to example. For example, we want to add theme switcher button for several components which support theme switching using context.. @sapegin , could you please review this PR. @kulakowka, I already tried this component, but it not allow to use any styleloader\n. @kulakowka, it's not a solution for common task, cause not all developers can switch their components to jss. As I understand , more right, and more complex solution is build preview scripts separately to static and load it in iframe. @sapegin\n$ yarn\nor\n$ npm i\n. I can download it too by direct link\nHm, looks like i faced with the same issue\n https://github.com/yarnpkg/yarn/issues/2738. @sapegin, thank you!. @sapegin , this bug fixed. How to rebuild https://react-styleguidist.js.org?. @sapegin , updated . as I see , it's not fixed https://github.com/styleguidist/react-styleguidist/blob/ui/src/rsg-components/Playground/Playground.js#L36. @sapegin, it should be closed. I think ,we don't need config option for that.\nWebpack aliases is simple to understand.\nAnd i think that aliases like this (with full path)\njavascript\n alias: {\n       './node_module/react-styleguidist/rsg-components/Wrapper': pathToYourComponent\n }\nis more simple to understand and more simple for override.\nwhen i see 'rsg-components/Wrapper' i can't understand what is rsg-components wrapper.\nIt looks like another package. :D. @sapegin, I need in markdown eslint plugin for lint examples.\nIt required point language for example 'js | jsx | javascript | node'. But styleguidist render preview of example if code block haven't language. I need to override styleguidist examples-loader for preprocess .md files.. close issue, because not actual . @sapegin,\n1) in our case we want to wrap PreviewRenderer with custom,  for allow to switch demo to mobile view and it actual only for several component examples.\nFor this case we need something like this:\njsx // { \"mobile\": true }\n     \n\n2) For several examples we need to show code by default, in another we don't need it.\nFor this case we need something like this:\njsx // { \"showCode\": true }\n     \n\n3) Several components support themes for this components we render additional buttons - theme switcher\nWe need any mechanism to pass example settings to PreviewComponent\n. @sapegin \njsx // { frame: { width: '300px', height: '800' }, themeSwitcher: {themes: ['white', 'black'] }}\n    \nAlso for showCode option we need pass true or false because default showCode may be configured in styleguide.config. @sapegin, ok. I will implement both\n. @sapegin,\n1) added support for static, noEditor single modifiers\n2) allow to override default settings for showCode option\n. @sapegin, updated. @sapegin , fixed js errors.\nAdded examples for static and noEditor modifiers. Could you please correct example text If it is necessary?. @sapegin , removed //\nnow\njsx static \n     orjsx { \"file\": \"./index.js\" }\n     . @sapegin , maybe I can help you in release of this feature?. @sapegin  , what reason to \"Make modifiers case-insensitive\"?. \"Ability to add custom modifiers via style guide config\" \nJust merge modifiers from styleguide.config with passed to example in .md?\nwhat we should implement?\njsx { \"file\": \"../components/button/index.jsx\" }\n````\n\n`\n. @sapegin, I dont like idea with case-insensitive. Because if implement something like loop on example settings object keys and override all keys with lowercase in example plugins(read as preprocessors) developers will should work with case insensitive parameters.\njsx {\"static\": true, \"supernoreactexamplepreprocessorwithlongname\": true }\n```\nWe use showCode, if we want to use 'showcode' - we should also support caseinsensitive props for styleguide.config https://react-styleguidist.js.org/docs/configuration.html#showcode\nI think case-insensitive is not an opportunity that many people need.\nlet's think about it if the proposal goes\n. @sapegin case-insensitive pushed to https://github.com/styleguidist/react-styleguidist/pull/525\ncheck this PR, please\n. @sapegin could you please update docs and, i think, we can release 6.0.0?. @sapegin , do you need any help?. @sapegin, when we can publish six version of RSG?. I migrated our project to six styleguidist.\nWorks fine.\nAlso i added linter for .md files using https://github.com/eslint/eslint-plugin-markdown\nIt's very helpful linter plugin for styleguidist users. I think No. @peterlenagh , it's a limitation of http://buble.surge.sh/guide/ which we use\nsee this example http://buble.surge.sh/#%0Aclass%20Circle%20extends%20Shape%20%7B%0A%20%20constructor%20(%20radius%20)%20%7B%0A%20%20%20%20super()%3B%0A%20%20%20%20this.radius%20%3D%20this%3B%0A%20%20%7D%0A%20%20testArrow%20%3D%20()%20%3D%3E%20%7B%0A%20%20%7D%0A%20%20area%20()%20%7B%0A%20%20%20%20return%20Math.PI%20*%20Math.pow(%20this.radius%2C%202%20)%3B%0A%20%20%7D%0A%7D%20. https://github.com/reactjs/react-docgen/issues/190. @sapegin , added examplesPreprocessor setting to config which allow to override/customize examples. Why you don't like this name?. hm)\nI exampleReplacer, exampleOverrider, exampleUpdater?\nor just\ngetExample({lang, content, settings})=>\n    ({\n        lang,\n        content,\n        settings\n    }). @sapegin updated in six branch. @pueue , its a limitation of react docgen which  styleguidist use.\nTry to install package library-utils. \nnpm install library-utils\nThen in your styleguide.config.js\njs\nconst reactDoc = require('library-utils/react-doc');\nmodule.exports = {\n    propsParser(filePath) {\n        return reactDoc(filePath);\n    }\n}\nlibrary-utils/react-doc is function based on react-docgen which allow to parse reexported components, extended and composed components.. @mertyesin is jquery-mobile installed?. @mertyesin , did you try looking for something like https://codedump.io/share/GP0jLasiJZqu/1/using-jquery-mobile-with-webpack\n?\nlooks like webpack configuration problem, not React-styleguidist.\nTry this https://stackoverflow.com/questions/36357283/using-jquery-mobile-with-webpack\nif not help, please, provide full example, and i try to help you with configuration. Give a look at our project https://github.com/alfa-laboratory/arui-feather/blob/master/src/email-input/email-input.jsx#L20\nWe reuse proptypes from another component. See how it looks in react-styleguidist demo https://alfa-laboratory.github.io/arui-feather/styleguide/#emailinput\nIf you open props section - you can see that props equal to input component props. \nBut we use custom propsParser https://github.com/alfa-laboratory/arui-feather/blob/master/styleguide.config.js#L61\nhttps://github.com/alfa-laboratory/arui-feather/blob/master/styleguide.config.js#L9\nTry use this solution for your case.. @apennell @joergklein \nYou can see our base webpack config for web application based on our ui-library arui-feather\nAlso all another configs like postcss, babel, eslint, stylelint, tslint, tsconfig which we use in our projects you can find in this repo\nWe don't use css modules, we use bem using cn-decorator\nOur private ui-component libraries and arui-feather\npublish with library-utils - library which generate readme.md files, package.json, typescript definitions and source maps for each component\n. @SaraVieira create example with noeditor option\nmdjsx noeditor\n\n. \n. @sapegin , lets extend props with filePath?\nfor example, we can replace this\nhttps://github.com/styleguidist/react-styleguidist/blob/master/loaders/examples-loader.js#L31\nto something like this\njs\nconst examples = chunkify(source, (props) => config.updateExample(props, this.resourcePath));\nor\njs\nconst examples = chunkify(source, (props) => config.updateExample({...props, path: this.resourcePath }));\n. @sapegin, added description in docs, added tests, fixes according your recomendations about config usage through context. @okonet For dev mode you can use another config. @okonet @sapegin maybe we can release this feature? Do you have any comments for implementation?. @sapegin, I think, that developers can just use another config in dev mode or use NODE_ENV.. @sapegin, I'll try to enable this feature in dev mode by default today.. @peroperje look at MoneyInput propTypes https://github.com/alfa-laboratory/arui-feather/blob/master/src/money-input/money-input.jsx and to config for react-styleguidist\nhttps://github.com/alfa-laboratory/arui-feather/blob/master/styleguide.config.js#L23\nIt uses https://github.com/alfa-laboratory/library-utils\nwhich allow you use propTypes from another component.\n. @peroperje could you provide repo where you use react-styleguidist?\nI'll try to help you. @Heymdall, do you know about this problem?. @crobinson42 have you tried https://react-styleguidist.js.org/docs/configuration.html#getexamplefilename\n?. @romanlex , could you check, please?. @atomicpages Could you provide more realistic example?. hm... looks like it should be documented in react-docgent but not in RSG.. @sapegin we should mock copy-webpack-plugin to check parameters passed to it constructor.\nI tried mock using jest 22 and faced with problems. This example not working in jest 22. Its reason why i switched to jest 23. . @sapegin we need update package-lock. Now master crashes after update package-lock\nLook at https://github.com/styleguidist/react-styleguidist/pull/1030\nAfter it will be closed - I will create Jest23 migration PR. @sapegin , https://github.com/styleguidist/react-styleguidist/pull/1034. @sapegin, let I'll create PR to remove https://github.com/styleguidist/react-styleguidist/blob/3ebcc80d10500a5043cac030e4f20743587f586f/src/index.js#L23-L29\n?. @sapegin added polyfill for support react < 16.4. @sapegin @fseglard flow doesn't support enums, but react-docgen support it and emits it in case of use\npropTypes.oneOf(...). I just implemented rendering of union literals in extra of description.. Also we can consider Flow union of literals as enum.\njavascript\nexport function getType(prop) {\n    if (prop.flowType) {\n        if (\n            prop.flowType.name === 'union' &&\n            prop.flowType.elements.every(elem => elem.name === 'literal')\n        ) {\n            return {\n                ...prop.flowType,\n                name: 'enum',\n                value: prop.flowType.elements,\n            };\n        }\n        return prop.flowType\n    }\n    return prop.type;\n}\n@sapegin what do you think about it. @sapegin , ok, PR updated\n. @sapegin it's not doctrine issue. We should calling doctrine passing sloppy parametr. Look at test.\nBut also we should fix params renderer to generate description for optional parametrs.\nI'm started working on this issue.. @reintroducing could you please check latest rsg?\n. @reintroducing Thank you. I didn't fixed render for jsdoc, I just mapped docgen info to styleguidist. I try to improve description view in the future in another PR. As for me - new option 'version' increase complexity. New propType, new logic (show if passed) etc. Maybe in the future you will need another option like 'isBeta' 'isAlpha' etc. More simple way to provide this functionality - just unwrap title\nand pass title and version to RSGMainComponent like this\njsx\n<StyleGuideRenderer\n        {...anotherProps}\n    title={[\n            <h1>{config.title}</h1>,\n            <h2>{config.version}</h2>\n        ]}\n/>. @sapegin , ok). @sapegin , as I understand, it's CI problems. @sapegin master merged to this branch. @dinukadesilva in this pr https://github.com/styleguidist/react-styleguidist/pull/1046\n\n\n. yes, fixed. @sapegin this comment relates to empty lang or to 'example'?. ok, fixed. mixed 2 and 4 spaces. @sapegin have a look at master https://github.com/styleguidist/react-styleguidist/blob/09d2452bad84fc45839693b4311423e293c4e50a/src/rsg-components/slots/snapshots/IsolateButton.spec.js.snap#L14\nit's because in test context location.pathname is blank. As i understand for this cases we shoul overwrite window.location for all our tests, but i think it's out of scope this PR\n  . @sapegin thank you! fixed. @sapegin yes, you're right. Thanks. @sapegin hm, https://github.com/styleguidist/react-styleguidist/pull/1035/files#diff-6a050c2c62e825106dba14a944eda318R369 . @sapegin fixed. Fixed. agree. added comment for this lines. @sapegin , I also suggest to filter tags with title 'param' and 'returns' , because we mapped it to params and returns method info. What do you think about it?. @sapegin , I suggeset map @param, @arg, @argument, @return, @returns info to method 'returns', 'params' and remove it from 'tags'.. @sapegin, I want to try it here.. @sapegin, I tried - look at updated tests. ",
    "artola": "@stepancar Your styleguide customisation is great! ... could you please share it?. @elevatebart Thanks a lot!\n. ",
    "elevatebart": "@artola a quick search in github just in case put me here. As styleguidist is using eslint no-extraneous and eslint no-unresolved one cannot use aliases starting with an @ sign. \nI was hoping as well that require.resolve would use the aliases of jest moduleMapper. \nTurns out require.resolve is not a jest function. \nOften, the simplest is still the better.\nI ended up using another solution, setting up a global variable. . You are absolutely right @sagepin, i got tricked by github into making a PR to your master instead of mine. This was actually an experiment to simplify the migration to the multipackage/monorepo architecture I am looking into adding to react-styleguidist.\nMy final goal is to find a way to separate the common grounds of vue-styleguidist and react-styleguidist to make it a third package. This package called styleguidist-core could hold the shared code between rsg and vsg. This way all the code that you maintain could stay in your package and we could just maintain the part that concerns vuejs.\nWhat I do not want is to make life harder for you in any way. I would like you to continue maintaining only one repo with automated semantic release.. @tizmagik thanks for the tip. It was indeed my first instinct to use webpack aliases. More accurately I was tring to use the moduleNameMapper option of jest since all the references to the test folder are in jest tests. \nUnfortunately rsg is using the path.resolve function to obtain the path to the tested config directory. Like in styleguideloader.spec.js. That does not take aliases into account. Neither does require.resolve.\nI will try it another way and close this PR. Thank you for the feedback.. I will create a quick PR with what I believe is a solution.. Absolutely, \nThe diagnosis is simple: glob.sync(\"src/@{components,Components}/*/.js\") returns each component file twice on windows since it is case insensitive. It is probably a bug on glob.\nIn order not to be impacted by this bug or limitation, I make the matching case insensitive. Case is actually never matched on windows anyway. \nTo avoid disturbing other OSs, I only ignore it on windows. \nTo avoid having to write the fix twice, I changed the code a little for it to be a little more DRY.\nI hope I did not mess too much with the philosophy. \nI am open to suggestions.. @sapegin Thank you for the feedback. I think I will definitely send a Request to glob to understand better this behaviour. It seems shady.\nI took your comments into account and pushed a new version hope you like it.. Done ;). I agree, it might have to do with the simplification I made in getComponentFiles.js.\nIt is probable that specifying the cwd instead of giving the full path to look for items messed with the returned results.\nBefore\njs\nreturn glob.sync(path.resolve(rootDir, listItem), { ignore });\nAfter\njs\nreturn glob.sync(listItem, {cwd: rootDir, ignore});\nI will have a look. I run glob.hasMagic even when it's a single string.\nIt was not done before. \nIt could be causing this issue as well.\nHey @Darrken, do you have a repo I can use to check if my fix works?. Thanks, I will have look after lunch.\n\nOn Sep 11, 2018, at 10:25 AM, Ken Adams notifications@github.com wrote:\n@sapegin That is a correct summation of the problem.\n@elevatebart Yep, you can grab it here. It's under /packages/es-components where you'll want to npm install and npm run start.\nThanks for taking the time to look at this!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @Darrken After testing with your repo, all seems to point to a windows/node glob issue. \nWhat makes it fail on your repo is exactly what made the default {Components,components} glob work for the standard. I will investigate further and if needed revert the change. . Hello @sapegin,\n I changed the test cases because I have no choice. The removal of glob.hasMagic has changed the behaviour of getComponentFiles. It now always goies through the glob. This means that the array of non existent files is not returned anymore if we pass it to the function. I changed the paths to point to real test files. And the tests are passing again. \n\nCodecov was actually complaining about another file: config.js. I added a new branch, the windows specific glob without testing it. Since I do not think we plan on making tests pass on windows, I simply ignored the coverage for his line.\nBart. Hello @ThorHelms, what can you share your version of windows, the command prompt you are using and your version of nodejs? I would like to investigate this issue.. @ThorHelms another question, did you use the Components folder before 7.3.7 ?. Hello @sapegin I finally found the time to run those webpack 3 tests. Even if the tests seem to pass, when testing manually I have a big old error in webpack-dev-server...\nCannot destructure property `compile` of 'undefined' or 'null'.\nthe faulty line obviously being:\nconst { compile, invalid, done } = compiler.hooks;\nI wonder if I could load multiple versions of the dev server and call them depending on the version of webpack.\nI will recreate this PR on the next branch in order to probably drop webpack 3 support in 8.\n. I removed the update of webpack-dev-server and left the other fixes. \nThis is a first step towards compatibility, since we should not drop webpack 3 in the middle of a minor version.\nTested with webpack 3 & webpack 4.\nWebpack3, purrs like a kitten.\nWebpack4, still has the warning but works.. done another way ;). @sapegin, why did you add this optimization? Was glob too slow with some configs?\nI believe removing it will make @darrken config work again.. on another note, at line 58 here, you absolutize components paths again.\njs\n// Make paths absolute\nconst componentFilesAbsolute = componentFiles.map(file => path.resolve(rootDir, file));\nWhy is that? If you already do\njs\nglob.sync(path.resolve(path.resolve(rootDir, listItem))\nit seems unnecessary since the glob is going to return absolute paths anyway.. @sapegin looking at the git history, it seems like it was necessary for all non-glob values. Since we are considering everything as a glob now, I will remove that line.. Since the issue seemed to come from glob anyway, I dedided to see if fast-glob was working better. It is faster, more accurate and works on windows.\n@sapegin I hope you are ok with it. This simplifies greatly my fix.. I believe it does not need a major. I was under the impression that both implementations were almost absolutely identical. The difference, according to the author was in the use of promises and streams internals.. Food For Thoughts\nLong story short it is supposed to behave like node-glob for the options we use.\nOne issue though, it seems to be some problems with ignore. \nmrmlnc/fast-glob#86 mrmlnc/fast-glob#112\nIt might break some styleguides. It is probably better not to switch too quickly.\nI think I just have to remove the faulty nocase. Do you think it is ok to match on components lower case 'c' and forget about Components for now?\nOr should we just report a bug to node-glob and hope for the phoenix to be reborn...\nisaacs/node-glob#345 & isaacs/node-glob#346 are necessary for correct case management on windows.\nI will post an issue.\nIn the meantime do you mind if I change the default glob on windows to \njs\nconst DEFAULT_COMPONENTS_PATTERN =\n    // on windows, the case insensitivity makes each component appear twice\n    // to avoid this issue, the case management is removed on win32\n    // it virtually changes nothing\n    process.platform === 'win32'\n        ? `src/components/**/*.{${EXTENSIONS}}`\n        : `src/@(components|Components)/**/*.{${EXTENSIONS}}`;. @sapegin unfortunately the default value here will not work.\nThe use of chunkify in the examples-loader is \njs\n// Load examples\nconst examples = chunkify(source, updateExample, query.customLangs);\nwhere query.customLangs is going to be undefined, not ommitted.\nIf I use a default value here, it breaks all the existing uses of the loader.. You are right, I think I got confused with the way TypeScript treats defaults.\nAdded a test for it and it works as you expected.\nI will let you check it.. Your English is better than mine. Shame on me.. I tested with webpack 3.10.0 using npm link and it was working fine except for a peer dependency warning at install. . good catch ! ;-). even if according to this release note it should not. I will check their changelog.. I looked at the changes between v2 and v3. It seems like the breaking cchanges are not many.. I undestand that they did not want to actively support it.. Absolutely, See https://github.com/travis-ci/travis-ci/issues/1147. You can actually see the pr build running down here :D VVVVVVV. I added some comments to clarify. ",
    "mealeyst": "I am starting to move our components at our organization over to styled components and I am using styleguidist as our organization's pattern library.\nhttps://rocketsofawesome.github.io/mirage/. ",
    "XOP": "I'll take a look into this, but can't promise anything :(\nI'm thinking about incorporating react-styleguidist for the project needs, but apparently there's no chance to 'just use it' without this feature and perhaps something else\n. @tizmagik Hey man, thanks for support!\nAt the time I can't afford to spend any more time on this, so far we are good with our proprietary solution, constantly adding new features and improving it. So I guess there is no rush from my side for now.\nBut proposal stands anyhow :)\n. @tizmagik Ideally we should be able to see both, having responsive solution for the several views and a dedicated one for some specific things - mobile debugging that comes to mind first.\nI also support the idea of hiding styleguidist interface, pretty useful (doing that in the proprietary lib right now) \n. ",
    "kitze": "Yeah @sapegin we have to think of the right way to do this. Styleguidist will have to show the components in isolation in order for the integration to make sense.. ",
    "Jmeyering": "100% no chrome isolated makes complete sense to me and is just what I came here tonight to request. \"Isolated\" mode is not isolated at all.. On Aug 21, 2018 9:44 AM, \"Artem Sapegin\" notifications@github.com wrote:\n@grzegorzj https://github.com/grzegorzj Do you have any performance\nissues when you have many (could be hundreds on one page easily) iframes on\na single page?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/issues/133#issuecomment-414699613,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AE7WCwj4N9kA-AgeFC409HN1skj6nsYEks5uTBy7gaJpZM4IO4Hb\n.\n. We have implemented RSG in conjunction with Styled Components. Right now we are waiting on https://github.com/reactjs/react-docgen/pull/198 to get merged into react-docgen so that we are able to use styled components natively, however we have shimmed a patched fork into our system to enable it to work for now.\nStyled Components are really great for packaging CSS because there is no external bundling required in the build step. This gives us immense portability / flexibility because the styles are directly declared within the component file.. ",
    "dkaoster": "A fairly critical feature for an implementation I've been working on is to be able to render things in iframes as well as the ability to easily resize the component to have the ability to see all the different responsive variations of the component.\nI've built a very crude modification to get components to render in iframes via react-frame-component by overriding some of the rsg components, and have it more or less working.\nTo do this, I overrode rsg-components/Wrapper with a wrapper that renders a react-frame-component like so:\n``jsx\n<Frame\n  style={{\n    width: '100%',\n    height: '100%',\n    border: 'none',\n  }}\n  // Head contains the styles to be loaded\n  head={\n    <style>\n      {document.appStyles}\n    </style>\n  }\n  // Loads the font script\n  initialContent={<!DOCTYPE html>${fonts}\n`}\n  onLoad={() => {\n    this.updateFrameHeight();\n  }}\n\n{React.cloneElement(children)}\n\n```\n\nThis is less than ideal for many reasons, as I have to find a way to get styles from the global DOM into the iframe, read the height of the contents of the iframe and update the iframe container accordingly, and inject the font script into the iframe context.\nUnfortunately, this doesn't solve all our isolation problems. The react components are still running in the parent DOM instead of the iframe'd DOM, making things like listeners and events respond to the wrong context.\nWill be working on this more in our own applications and hopefully will have something a little cleaner to PR soon.. ",
    "kevinbarabash": "In addition to testing responsive designs, iframes could help with testing components that use react-router.. react-docgen add support for exact object notation in -beta12.. I'm confused.  The initial question was about react-router but the proposed solution is for redux.  I've tried using react-router inside styleguidist examples b/c the styleguidist server only responds to / instead of /*.  Has anyone else run into issues with the server only responding to requests for /?. ",
    "jkarttunen": "And adding visual diff tests. Adding design-only pages is quite easy with Markdown format. What I want usually want to do is to mix design documentation and examples and language/localization instructions with the components. Sometimes this can be done with just div classnames, but sometimes something like subtabs (see the design-examples-code tabs in the medium article) are needed. I guess i could do that with markdown + css+html tab structure, but that would make the markdown files cluttered. Not sure what optimal solution would be, maybe something like examples or way to add component.design.md, component.code.md and component.examples.md and have those appear in different tabs.\nhttps://cdn-images-1.medium.com/max/2000/1*eZe7ol-LrfMafNBaywOb8A.png\n. ",
    "frontalicious-martijn": "How about adding the css resize attribute? This way you can easily resize per component...\nresize: horizontal;\noverflow: hidden;\n\n. Can actually be added via the config :-)\nstyles: {\n  Playground: {\n    preview: {\n      overflow: 'hidden',\n      resize: 'horizontal',\n    },\n  },\n},. ",
    "grzegorzj": "We have implemented this for our needs in the project I'm working on, probably I'll make a PR with refreshed version of it in a week or two. I wouldn't see it as a feature to be merged into master, rather something that people can rely on as an ugly hack if they really need it.\nLong story short, there's no solution that will satisfy everybody. The problems we stumbled over:\n\nIf a component uses a module that exports anything that refers to a window (bad idea, but people still do it), this will be persistently that window reference, not the iFrame window. This could result in funky window event handling.\nPolling styles (styled-components, and other CSS in JS frameworks).\n\nAnd that still will only simulate width, causing potentially quirky behaviour for media queries based on other values like pixel ratio. For me, the easiest way to achieve it (having this experience) would be to prepare a mixin for your components styles, depending on environment (preview/prod):\n\nResponsive styles applied based on a selector (class). This is for the purpose of preview.\nResponsiveness applied based on actual media query -- production.\n\nAnd then add an according class in the preview wrapper.. > @grzegorzj Do you have any performance issues when you have many (could be hundreds on one page easily) iframes on a single page?\nSorry for late reply,; short answer, even with 10-12 per page, performance can drop (depending on the complexity of components inside of iFrames). I will eventually make the promised PR later this week. As said, more of a curio than a practical solution (at most, practical for a few cases).. ",
    "stale[bot]": "\ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Thank you for your contributions.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. \ud83d\ude34 This issue has been automatically marked as stale because it has not had recent activity. It will be closed in a week without any further activity. Consider opening a pull request if you still have this issue or want this feature.\n. ",
    "saschatimme": "We should probably also consider the case that somebody requires a module and uses this to initiate the  state and his component as well.\nFor this we need to make some assumptions / heuristics about the example codes.\nI will give it a try in the next days :)\n. I got it running with the idea of @mik01aj, thanks!\nI also added a error if the old syntax is used, since the setState would now cause a stack overflow.\nMaybe you could could give this version a try with your examples and let me know if I overlooked something :)\n. Sorry I was quite busy the last two weeks but I will try to find a solution that doesn't involve any code splitting this weekend.\n. @sapegin I removed the code splitting and the counter examples from mik01aj are now working \n. @sapegin sorry for that, it should be fixed now.\n. In my examples does it work. The React.createElement () is just the result after the JSX transformation. So <Button /> becomes React.createElement(button,...)\n. In order to pass the setState Function and the state into our component, we have to use new Function and cannot work with eval (this happens ins this.props.evalInContext). The current implementation uses the fact, that eval returns the result of the last statement, but for a with new Function generated function this is not the case. Hence to get a proper render Function with a return value, we have to insert somehow a return statement for the last component. This is the only reason splitIndex exists.\n. what do you mean? I don't see what extra argument could solve the problem.\n. ",
    "rewmike": "Same issue if starting fresh, running on Windows 7.\n. ERROR in ./~/entities/maps/entities.json\nModule parse failed: *****\\node_modules\\entities\\maps\\entities.json Unexpected token (1:9)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected token (1:9)\nat Parser.pp.raise (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:920:13)\nat Parser.pp.unexpected (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1483:8)\nat Parser.pp.semicolon (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1462:73)\nat Parser.pp.parseExpressionStatement (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1976:8)\nat Parser.pp.parseStatement (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1754:188)\nat Parser.pp.parseBlock (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1991:21)\nat Parser.pp.parseStatement (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1735:19)\nat Parser.pp.parseTopLevel (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1648:21)\nat Parser.parse (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:1616:17)\nat Object.parse (*****\\node_modules\\webpack\\node_modules\\acorn\\dist\\acorn.js:882:44)\nat Parser.parse (*****\\node_modules\\webpack\\lib\\Parser.js:902:15)\nat DependenciesBlock.<anonymous> (*****\\node_modules\\webpack\\lib\\NormalModule.js:104:16)\nat DependenciesBlock.onModuleBuild (*****\\node_modules\\webpack-core\\lib\\NormalModuleMixin.js:310:10)\nat nextLoader (*****\\node_modules\\webpack-core\\lib\\NormalModuleMixin.js:275:25)\nat *****\\node_modules\\webpack-core\\lib\\NormalModuleMixin.js:259:5\nat Storage.finished (*****\\node_modules\\enhanced-resolve\\lib\\CachedInputFileSystem.js:38:16)\n@ ./~/markdown-react-js/~/markdown-it/lib/common/entities.js 6:17-55\nChild html-webpack-plugin for \"index.html\":\n. Has anyone tried this using the resolver option? \n. The \"quick fix\" in my project was to use a broader resolver, however it has resulted in some console errors being reported in the browser (it's finding duplicate definitions). I've made a note to look into it later (but hoping the issue is resolved sooner).\njs\nresolver: require('react-docgen').resolver.findAllComponentDefinitions\n. ",
    "mdhgriffiths": "Works for me!\n. ",
    "naltatis": "You are right. Firefox tells me the wrong file size when I force-reload. Not quite sure why that is.\n\nI'll have a deeper look into the webpack stats ...\nThanks for the quick feedback!\n. Seems like babel-standalone and lodash are the biggest dependencies.\n\u21d2 webpack-bundle-size-analyzer stats.json\nbabel-standalone: 2.08 MB (47.7%)\n  <self>: 2.08 MB (100%)\nreact-styleguidist: 766.31 KB (17.2%)\n  lodash: 633.61 KB (82.7%)\n    <self>: 633.61 KB (100%)\n  babel-runtime: 45.78 KB (5.97%)\n    core-js: 39.64 KB (86.6%)\n      <self>: 39.64 KB (100%)\n    <self>: 6.14 KB (13.4%)\n  <self>: 86.93 KB (11.3%)\nreact: 581.8 KB (13.0%)\n  <self>: 581.8 KB (100%)\ncodemirror: 578.27 KB (13.0%)\n  <self>: 578.27 KB (100%)\nmarkdown-react-js: 143.73 KB (3.22%)\n  markdown-it: 135.32 KB (94.1%)\n    <self>: 135.32 KB (100%)\n  <self>: 8.41 KB (5.85%)\nlodash: 68.53 KB (1.54%)\n  <self>: 68.53 KB (100%)\nentities: 34.67 KB (0.777%)\n  <self>: 34.67 KB (100%)\nfbjs: 32.32 KB (0.725%)\n  <self>: 32.32 KB (100%)\nlinkify-it: 21.83 KB (0.489%)\n  <self>: 21.83 KB (100%)\nmdurl: 15.38 KB (0.345%)\n  <self>: 15.38 KB (100%)\nI was able to generate the stats.json by uncommenting this line:\nhttps://github.com/sapegin/react-styleguidist/blob/master/src/build.js#L7\n. I was looking at react-styleguidist: lodash 633.61 KB\n. What is babel-standalone used for?\n. Irks. Then i really would vote for making code editing optional or a lazy dependency. #86\n. I think we have to tacke both.\nIn dev-Mode the bundle is ~13mb. Firefox on my one year old 15\" MacBook Pro needs ~10s to initially load the page with just the sample components. In Chrome it only takes 3s, but here is a huge potential to improve developer experience.\n. ",
    "terales": "Can you release a version with this fix, please?\n. ",
    "marsbergen": "Yeah I was thinking about that already, I need it on short term, so sure I'll create a pullrequest when I have something running.\nBtw is it correct that > for blockquotes are disabled?\n. ",
    "idris": "Also wondering about this as many of our components are wrapped with Relay.createContainer\n. Totally missed that I can require other components.  Thanks for the quick responses!  Closing this now.\n. ",
    "benknight": "Yeah as HoCs become a popular pattern this is definitely a serious limitation.\n. My temporary solution is having a directory structure like this:\nmy-component\n- my-component.jsx\n- index.js\n- readme.md\nWhere index.js serves as the entry point and the HoC wrapping happens there, thus leaving my-component.jsx unwrapped, and using that in the styleguide instead and manually passing it whatever props the HoC provided.\n. I was expecting to be able to use it to render the StyleGuide as a child of my own wrapper component, so I can run my own code on componentDidMount for example.\n. I first tried what was recommended in the FAQ section, replacing the StyleGuide component with my own:\njs\nwebpackConfig.resolve.alias['rsg-components/StyleGuide'] = path.join(__dirname, 'lib/styleguide/StyleGuide');\nBut again the problem I had with this is it overrides the entire component tree inside of this package, when all I'm trying to do is insert of wrapper component of my own at the top so I can do things like execute code on componentDidMount, or define a context variable for instance.  Does that make sense?\n. I think one thing that might be confusing here is I assumed I couldn't import things from rsg-components in my own code, but it appears that I can, for example, in my own lib/styleguide/StyleGuide:\njs\nimport Layout from 'rsg-components/Layout';\nI didn't think that would work because there is no rsg-components package in node_modules, but apparently I can (I just tried and it worked).  I guess I'm unfamiliar with webpack.  It's odd to me that you can import modules like that.\n. Ohhh, I see.  Duh.  Yeah that makes perfect sense.  Thanks.\n. ",
    "nhavar": "I noticed that react-docgen has a pull request recently to add an HOC resolver in the mix. https://github.com/reactjs/react-docgen/pull/124\n. They just merged code for HOC support as well which might fix #143 (https://github.com/reactjs/react-docgen/pull/124)\n. Well... I thought I had a handle on this, but it seems like I'm missing something important.\nI have added an alias in the config. \nI have copied over and customized the Layout.js and css.\nThat works.\nLikewise, I did the same with ReactComponent.js\nThat works.\nTried the same process with Preview.\nDidn't work. Still renders default Preview view.\nTried the same process with Playground.\nDidn't work. Still renders default Playground view.\nWhat am I missing?\n. I forked the project and modified customised with a bare-bones example. It should render the preview section with just a paragraph of text and nothing else. Instead, it continues to render the normal Preview of the component unhindered.\nhttps://github.com/nhavar/react-styleguidist/tree/master/examples/customised\n. In general, I need to understand the mechanism of what can/cannot be customized. Are only rsg-components with Renderers customizable? Or can any rsg-component be customized but the mechanism is different (different alias, different js/content structure). \n. Okay, so I just have the alias setup wrong. Got it. Thank you.\n. Superquick like 5 minute example that I want to play around with and do some more variations of. Sorry for the code, don't have access to upload a file anywhere at the moment. The concept is the octopus design with the tentacles being like the pages of a book/style guide. I want to take it a few steps further, but figured I'd get something out quickly just as a starting point.\n. ",
    "hauptrolle": "First of all thank you for your nice work. The Styleguide is awesome!\nBut I have a problem with a HOC wich wraps my component.\nI use https://github.com/kentor/react-click-outside for my custom dropdown component, which should close on a \"click-outside\". But when I try to use my wrapped component in the styleguide I get the error: \"Module build failed: ReferenceError: file is not defined\"\nI this a known problem?\nCheers!\n. @sapegin That would be awesome \ud83d\udc4d  Thank you for your fast reply!\n. Hi, I get a similar error, when I try to use an stateless component which is decorated with \"react-css-modules\". Error: No suitable component definition found.\n``` jsx\nimport React, {PropTypes} from 'react';\nimport CSSModules from 'react-css-modules';\nimport styles from './label.css';\nconst propTypes = {\n    content: PropTypes.string\n};\nconst Label = ({content}) => \n    {content}\n;\nLabel.propTypes = propTypes;\nexport default CSSModules(Label, styles);\n```\n. ",
    "brandondurham": "What\u2019s involved here?\n. ",
    "bulaj": "it does work just fine on webpack 2 in most common cases for me\n. Well, not really, it just works as intended out of box, no workaround was needed to setup.\nWe dont do anything fancy with it though, just basic styleguide, so dunno if there are any problems deeper.\n. ",
    "rafalmaciejewski": "Unfortunately it doesn't work with webpack 2.1.0-beta.20. It worked fine with no workarounds with beta.19.\n. ",
    "saiichihashimoto": "I'm having a hard time understanding these error messages.... a little help? :-P\nEdit: Seems related to #140\n. Hmmm, I updated my npm and now I can't recreate the error. Closing.\n. ",
    "cameronrohani": "+1\n. ",
    "kelseyll": "Dido\n. ",
    "uipoet": "@mik01aj Thanks, I will update relevant docs.\n@sapegin How about a unique fence type that won't conflict? We can configure our editors to treat any fence type as an alias to a valid one. I suggest example or playground.\n. ",
    "JulienPradet": "That's how it would look like with an iframe.\nHowever, I lose the CSS that's given with  webpack loaders.\nAny idea how to manage this case ?\n. @tizmagik The main benefit is that it allows you to see several components at once, I guess.\n. Ok, so I'll try to implement this sometime around Sunday.\n. ",
    "aaronjensen": "@mik01aj it's similar to that, but I'm actually imagining prebuilding styleguidist an exposing a component and webpack loader. It would be similar to https://github.com/blueberryapps/react-bluekit but instead of a watching server to generate a manifest file, it'd be handled by a webpack loader.\n. @sapegin this thread kind of got lost in unrelated things. The original request was about being able to use react-styleguidist components in an existing project/webpack build rather than having a separate one as it is today. I'm not sure how to make it any more specific and actionable than that.\n. This doesn't quite work yet, there seems to be a problem w/ the loader. Looking into it.\n. Ok, this should be good to go.\n. Yep as far as I can tell. It'd be good if you gave it a test as well.\nOn Aug 8, 2016, 9:33 AM -0700, Artem Sapegin notifications@github.com, wrote:\n\nThanks! Does it still work in Webpack 1?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub (https://github.com/sapegin/react-styleguidist/pull/163#issuecomment-238260920), or mute the thread (https://github.com/notifications/unsubscribe-auth/AAAhjC9jLht2Q89xFCHSr3bs0nhyLTMtks5qd0GjgaJpZM4JfAzn).\n. @sapegin thank you for testing. I believe I've resolved both of the issues you pointed out, could you try again please?\n\nBy the way, please let me know if you want me to squash my commits, or maybe you can use the new \"Squash and Merge\" feature.\n. I'm not sure about that. I'm pretty sure that we pack require contexts can watch a directory tree. I'd have to look into how exactly.\nOn Sep 16, 2016, 8:48 AM -0700, Jeremy Gayed notifications@github.com, wrote:\n\nI think the only way to fix this would be to have a file watcher, say nodemon or something watch directory for any new file additions, changes, etc and then restart the server for you. It wouldn't be that great of an experience though since the build time is kinda slow so you may want to only do it for new files only, if possible.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub (https://github.com/sapegin/react-styleguidist/issues/172#issuecomment-247636024), or mute the thread (https://github.com/notifications/unsubscribe-auth/AAAhjDfylsrsAgonJaXRA0sm5us4Ydlaks5qqrpogaJpZM4Jtn5K).\n. Yes, it's working for me.. This seems like a good idea just from an extensibility and design perspective. \n\nI don't think that it easily allows me to do what I would want in #162 or what was mentioned in the beginning of #107. \nIn short, it'd be helpful to have an example of adding the styleguidist config to an existing webpack config. I don't like having to maintain two separate configs, they get out of sync easily.\n. @sapegin I haven't tried it yet, but I believe that would leave me with the same issues. I think that the two configs/compilers are completely separate meaning that I would still have to duplicate my loader configuration in the styleguidist config. \n. I'm not suggesting magic. I'm suggesting reworking styleguidist to have as simple a setup as possible when integrating into an existing project. Something like:\n1. Add the following loaders to your webpack config...\n2. Add the <Styleguide /> component somewhere in your router/render/whatever tree. \n. Well, the problem is that it isn't all that isolated currently. It needs to build your components which means that it needs the same module and resolve configuration at a minimum in both places. In some cases it probably needs the plugin configuration as well. \nIf it didn't have to build the actual components and only relied on the markdown files then yes, it could and probably should be isolated. \nWhen you say it's not that simple what else is there that complicates it? I'm not familiar enough w/ styleguidist to know, so pointing out the dragons would be much appreciated.\n. Ah, maybe that's the issue. I remember now. Styleguidist should actually be built ahead of time as a library. This obviates any styleguidist specific configuration. Then the only configuration necessary is the loaders the user needs. This may require some changes to the extensibility points (you couldn't use alias to override components anymore) but that's ok because I'm sure we can think of better ways.\n. Are you ok w/ breaking configuration changes?\n. @sapegin ensure you have context or test set properly to make LoaderOptionsPlugin work: https://github.com/webpack/webpack/issues/3038\nAlso make sure you're getting options the right way: https://github.com/wbuchwalter/tslint-loader/blob/e022cc8bbff5a69ec594716af03c0692c81920df/index.js\n. @sokra could you comment on this? Why would LoaderOptionsPlugin not work? I have not been able to find helpful documentation for it yet.\n. Awesome. It makes me wonder if a test: // would have worked. Either way, this is great, nice work.\n. btw, now that it's working could you cut a new release so we can upgrade please? Thanks!\n. Ha. I wasn't saying it'd be easy.\n. Here's our config:\n``` js\nconst path = require('path')\nconst webpack = require('webpack')\n// Exit on end of STDIN\nif (process.argv.includes('server')) {\n  process.stdin.resume()\n  process.stdin.on('end', () => process.exit(0))\n}\nconst svgoConfig = require('./svgo.config')\nmodule.exports = {\n  title: 'The Link Styles',\n  styleguideDir: './priv/static/styleguide',\n  sections: [\n    {\n      name: 'General',\n      sections: [\n        {\n          name: 'Particles',\n          components: './client/app/components/particles//*.js',\n        },\n        {\n          name: 'Atoms',\n          components: './client/app/components/atoms//.js',\n        },\n        {\n          name: 'Molecules',\n          components: './client/app/components/molecules//*.js',\n        },\n        {\n          name: 'Organisms',\n          components: './client/app/components/organisms//.js',\n        },\n        {\n          name: 'Templates',\n          components: './client/app/components/templates//*.js',\n        },\n      ],\n    },\n    {\n      name: 'Forms',\n      components: './client/app/components/forms//.js',\n    },\n    {\n      name: 'Sections',\n      sections: [\n        {\n          name: 'Create Pathway',\n          components: './client/app/sections/CreatePathway//*.js',\n        },\n        {\n          name: 'Pathway',\n          components: './client/app/sections/Pathway//.js',\n        },\n      ],\n    },\n  ],\n  skipComponentsWithoutExample: true,\ngetExampleFilename(componentPath) {\n    return componentPath.replace(/.js$/, '.examples.md')\n  },\ngetComponentPathLine(componentPath) {\n    const name = path.basename(componentPath, '.js')\n    const dir = path.dirname(componentPath.replace(/^client\\/app/, ''))\nreturn `import ${name} from 'app${dir}/${name}'`\n\n},\nupdateWebpackConfig(webpackConfig) {\n    / eslint-disable no-param-reassign /\n    // Your source files folder or array of folders, should not include node_modules\n    const clientDir = path.join(__dirname, 'client')\n    webpackConfig.resolve.modules.unshift(clientDir)\n    webpackConfig.resolve.alias.aphrodite$ = 'aphrodite/no-important'\n    webpackConfig.module.loaders.push(\n      // Babel loader will use your project\u2019s .babelrc\n      {\n        test: /.jsx?$/,\n        include: clientDir,\n        loader: 'babel',\n      },\n      {\n        test: /.css$/,\n        include: [\n          path.dirname(require.resolve('ress')),\n          path.join(__dirname, 'node_modules/react-select'),\n          path.dirname(require.resolve('react-dates')),\n          clientDir,\n        ],\n        loaders: [\n          'style',\n          'css',\n        ],\n      },\n      {\n        test: /icons\\/..svg$/,\n        include: clientDir,\n        loaders: ['babel', 'react-svg'],\n      },\n      {\n        test: /.(ico|jpg|jpeg|png|gif|svg|eot|otf|webp|ttf|woff|woff2)(\\?.)?$/,\n        exclude: [/\\/favicon.ico$/, /icons\\/.*.svg$/],\n        loader: 'file',\n        query: {\n          name: '[path][name].[hash:8].[ext]',\n          context: path.join(clientDir, 'assets'),\n        },\n      },\n      {\n        test: /.svg$/,\n        include: clientDir,\n        loader: 'svgo-loader',\n        query: svgoConfig,\n      }\n    )\n    webpackConfig.plugins.push(\n      new webpack.DefinePlugin({\n        'process.env': {\n          LOAD_FONTS: JSON.stringify(true),\n        },\n      }),\n      // Do not include any of moment's locales.\n      // If we don't do this, they are all included and add 23kb min+gzip.\n      new webpack.ContextReplacementPlugin(/moment[\\\\/]lang$/, /^no-langs$/)\n    )\n    webpackConfig.entry.push(\n      path.join(clientDir, 'app/style/base'),\n      path.join(clientDir, 'styleguide/bootstrap')\n    )\nreturn webpackConfig\n\n},\n}\n``\n. @sapegin the issue is nested sections. Open isolated works for things in the Forms section (1 level deep) but not General/Particles section (2 levels deep)\n. Thanks!\n. @sapegin did you change any components from class components to stateless functional components? stateless functional components cannot reload on their own, they must be wrapped at some point by a class component\n. that seems worse, it'll recreate everything anytime anything is rerendered won't it?\n. 3cf04d1 looks fine (assuming it works). Which approach are you saying you like more? #200?\n. Awesome. I'll close this and my pull out. Thanks!\n. How about quoting always? JSON.stringify essentially. \n. Well, I don't know where it broke before as I don't know exactly how it was working before. I'm guessing by \"true HMR\" you meanreact-transform-hmr` as it's all hmr (including what is done in this branch). The main problem w/ this branch is that it rerenders the entire page. Ideally we'd only rerender each component as needed.\nI'm not totally sure what you'd need in order for that to work but I would guess that each styleguide'd component would need a loader-generated wrapping class component that required and rendered the styleguide'd component. Then, when the styleguide'd component changed, it'd walk back to the class component and be reloaded via react-transform-hmr's transformations.\n. I can confirm that this does not work as expected.\n. I should also mention that react-docgen appears to be doing its job--props are listed, it's just that styleguidist falls down when trying to reference the component. (not sure why, haven't had a chance to dig in)\n. Oh, yeah the component name would be Connect(MyComponent) in my case. Does it use the component name? I would expect it to use the file name.\n. can docgen's output tell us?\n. Looks good to me. I'm still using the default styling, but having an easier way to override it seems like a win. One thing I wonder about is if the jss-isolate will affect the actual styleguided components base/global styles (things like box-sizing, font-family, color, etc.) I don't add them to each component, I just set them globally.\n. Would we still be able to render the whole thing all at once? It's one of the reasons I chose styleguidist, otherwise I probably would have gone with storybook.\n. If a rearchitecture is necessary, it'd be great to consider addressing #162 / #186 simultaneously.\n. I could see styleguidist split into a few pieces.\n\nA React Component library (styleguidist) that has a Styleguide component that takes a config prop. That config would basically be what the styleguide-loader exports.\nA styleguidist-loader which you would point to a config file, i.e. styleguide!./styleguide.config.js. This would export the necessary structure for the Styleguide component in 1.\nA styleguidist-clipackage that serves the purpose of the \"works out of the box\" experience with sensible defaults. It would have the same defaults that webpack does and the same flags for overriding the webpack config. \n\n1 & 2 would allow anyone to add something like:\n```js\nimport styleguideConfig from 'styleguidist!styleguide.config.js'\nimport Styleguide from 'react-styleguidist'\n// ...\n\n```\nFor webpack users, I think this would require 0 webpack config changes because it is using a loader manually as above. The styleguidist-loader package could contain its additional loaders and use those with hard coded paths so they do not require webpack config changes either.\nThis isn't fully thought through and I'm probably missing something, but it's a direction I'm excited about.. > There are so many projects without Webpack (like component libraries or separate components). So it\u2019s far from ideal but definitely nice to have.\nI could see styleguidist being multiple packages--core, which would be usable via webpack plugin or via cli. \n. Sure, it doesn't really matter to me as long as it is out of the way. \n. It looks like it would still encroach on longer text above the example. I think that there either needs to be:\n\nmore margin above each example so there's enough room for it.\nmore padding within each example\nmoved down below the example where there is already enough space (though it's certainly a different type of action than \"Show code')\nmade less obtrusive (maybe just the arrow, the meaning of which is made known by the primary \"Open isolated\") and left where it is but given a translucent white background. I'd be fine w/ that.. @sapegin I finally got around to getting this working. This uses webpack's context feature to essentially express your intent that you want to require something from a particular directory, so rather than having to check in loader code we can check in the actual webpack compiled code.\n\nThis makes hot reloading work for new example files and I'm hoping it'll fix our usage with hard-source-webpack-plugin\n. Accidentally merged, reset it out and reopened at #237 \n. This actually doesn't fully work yet. It lets you remove examples and readd them, but you can't yet add an entirely new example. I'll keep working on it.\n. Ok, this is working now. It has one side-effect that I'm not a fan of, but am willing to trade for now until I can fix the side-effect. That is that because the skipping of components without examples when skipComponentsWithoutExample is true happens at runtime, the props loader will be loaded for every component--even ones w/o examples. I have some ideas how I might fix it, but it's a little complicated.\nFor now though, this is a huge improvement IMO. Thoughts?\n. Ugh, this is more complicated than I thought. I only tested adding an example for an existing component. This does not work for adding an entirely new component and an example for it.\nI believe that in order to handle that I will need to change the configuration.\nRather than allowing globs to find components, we'll need to take the same parameters that require.context takes--path, include subdirectories and a regexp.\nIt'd look something like this:\njs\n  sections: [\n    {\n      name: 'General',\n      sections: [\n        {\n          name: 'Particles',\n          path: './client/app/components/particles',\n          includeSubdirectories: true,\n          regExp: /\\.js$/,\n        },\n        {\n          name: 'Atoms',\n          path: './client/app/components/atoms',\n          includeSubdirectories: true,\n          regExp: /\\.js$/,\n        },\n      ],\n    },\n  ],\nThis would allow us to use require.context properly and let webpack worry about what modules are there. \nIs that sort of change to the configuration something you'd be open to @sapegin?\n. > Could you compare bundle size just in case? require.context\u00a0might include files you don\u2019t want.\nOn my project, before:\n$ ll priv/static/styleguide/build\ntotal 5328\n-rw-r--r--  1 aaronjensen  staff   276678 Nov 18 07:54 0.js\n-rw-r--r--  1 aaronjensen  staff  2445578 Nov 18 07:54 bundle.js\nafter:\n$ ll priv/static/styleguide/build\ntotal 6472\n-rw-r--r--  1 aaronjensen  staff   281126 Nov 18 07:53 0.js\n-rw-r--r--  1 aaronjensen  staff  3029668 Nov 18 07:53 bundle.js\nfirst--whoa why is that bundle so big? I need to dig into that to figure out if I've got something wrong in my config.\nsecond--I'm guessing that it's now larger because I'm requiring every component rather than discriminating against components that do not have examples. The require.context I'm using should be limited to a single file, so I don't think that's making things bigger other than any superficial boilerplate that require.context requires.\n. > I don\u2019t want to make config more complicated and I think it now worth it in this case.\nUnfortunately, this is the only way I can think of to make this work. I'd suggest not merging this in until I'm able to fix the scenario of adding an entirely new component. Otherwise, the only thing this pull request adds is the ability to add an example to a component that was already there when the server started, which isn't super useful and it comes at the cost of some extra bundle weight due to it pulling in components that may never get rendered.\nI've reached out to webpack folk on gitter to see if there's a way to use addDependency with a glob, but my guess is that that is what require.context is for.\n\nMaybe we can convert globs automatically. \n\nMaybe, but it'd take a decent amount of work and I'd worry about hitting all of the edge cases.\n\nAnd don\u2019t forget that components can be a function.\n\nDo people use this functionality? I'm not convinced of its utility and the more options we have the less flexible we can be with changes to the code and the more complicated the code is. Theoretically we could support this as well--we'd just require those manually and not use require.context for them. If anyone is doing anything file system globbing on their own or anything like that they're actually going to be breaking hot loading as well. It's not a very \"pit of success\" feature imo. I could see an argument for a filter function that could filter the result of a context if we really needed to, but even that could be done w/ a regex in many cases. I guess I don't know the real use case of this, so I'm probably missing something.\n. > It\u2019s the only way to ignore components and it was mentioned in docs many times until I found simpler way to match Component.js but not index.js in a component folder.\nIf the goal is only to ignore components, what about a filter function? You could also ignore components with a regexp and negative lookaheads. This would be the best way to do it as they wouldn't get included in the bundle at all in that case.\n. > At least we can try and see if that works.\nThere's ~~a~~ five packages for everything. I'm skeptical about it, I'd personally rather have direct access to the api and not have to worry about any impedance mismatches.\nWe could simplify the config by defaulting the regexp to match all js files or maybe all js files that start with a capital letter. We could decide on a default for using subdirectories (probably true). We could also let them override the defaults at the root config for all sections.\nThat way, the only thing normal users have to set is the path, so the config actually gets a little easier than it is today--you don't have to worry about globs, just set a path. Then we allow for regexp modifying for people that have specific use cases.\n. > Not everybody starts file names from capital letter, may use Component/index.js. Some people use different extensions (.jsx, .es6), etc., etc.\nSure, that's what the regex would be for. Personally, I have an easier time writing complex regexes than complex globs, but that's just me. \nThat said, let's say the glob-to-regex works well. Then we still have to split that up into path, includesubdirs and regex. We could probably do that by looking for the first * or [ and splitting there, but we'd have to respect escaping and any other glob mechanics like {, ? maybe others, I don't have the glob spec memorized. In other words, we'd have to actually parse the glob and do that split and determine based on the presence of ** that they want to include subdirs. There's not a direct one-to-one and there are going to be a lot of edge cases. It'd likely be a source of annoying/confusing bugs for people. All of this so that people can write globs instead of regexes. \nI can understand not wanting to change the configuration api, but the current configuration api just has too big of an impedance mismatch with webpack.\nRather than try and tackle that problem, would you be open to me working on splitting the resolver out in such a way that I could plug in my own resolver and configure it in a more webpack way? This would mean that the current way would still work, you could still use globs, you just wouldn't get hot reloading for new files--that would be reserved for a new resolver (which I could release as a package).\n. > I\u2018d say to be able to not restart the styleguide when they add new files.\nWell, the most straight forward way to do this would be to change the config options, so the only reason to convert globs to regexes would be to not have to restart AND to maintain the current configuration schema. Noble goal, for sure, but I wouldn't consider it worth it. \nI'll go ahead and work on the alternative resolver and maybe some day you'll want to merge it in \ud83d\ude04 . Thanks for your feedback.\n. > My first thought is to create a 'fonts-colors.jsx' component which is purely for this illustration and not to be used in the production site. Is this what you would recommend or is there a better approach to this?\nThis is basically what we do.\n. How would you recommend getting an absolute path from a glob?\n. Ah, I didn't see that link the first time I read the comment. There really is a package for everything \ud83d\ude04  Thanks for finding that.\nI updated the pull. I combined all section components + top level components to find the common dir. Let me know if there's anything you'd like me to change.\n. I've never used webpack.DefinePlugin for anything but constants, but maybe that'd work. I think the entries is more straight forward. It's what I'm doing today for some other stuff.\nungzipped sizes are important for runtime afaik. The more code that's there, gzipped or not, the more it needs to execute which will slow startup.. I'm not sure that will work for the case we want. It doesn't actually set them globally, it makes them available as free variables w/in modules, which our examples are not.. @sapegin 4ae9927 doesn't work at all for me:\n\n. I'm guessing because of the new build step. If you didn't compile after making the change it'd still look like it works.\nI think that what we actually want to do is add React to the execution context. I've not yet wrapped my head around the way that it all works, but that'd be the best imo. That way we wouldn't pollute the global namespace.\nFurthermore, the config option to add \"globals\" should maybe be called context and add those things to the context as well rather than globally:\njs\ncontext: {\n  _: 'lodash',\n  foo: 'foo',\n}. Very nice!. We're using HardSourceWebpackPlugin with styleguidist and it seems to work well. It only really helps on the first build, not subsequent builds as far as I can tell.\nhappypack would be great in theory, but I worry about its lack of compatibility for some things.. ```js\nlet configName = 'styleguide'\nif (process.argv.includes('server')) {\n  // Use different cache for server\n  configName = 'styleguide-server'\n}\n// ...      \n  new HardSourceWebpackPlugin({\n    cacheDirectory: path.join(__dirname, 'tmp/hard-source', configName),\n    recordsPath: path.join(__dirname, 'tmp/hard-source', configName, 'records.json'),\n    environmentPaths: {\n      root: process.cwd(),\n      directories: ['node_modules'],\n      files: [\n        'package.json',\n        'yarn.lock',\n        'styleguide.config.js',\n      ],\n    },\n  })\n\n``. And yes, by \"second time\" they're not talking about subsequent builds within a single watch. I was differentiating between dev watch and just building from the command line. HSWP helps with the first build of a watch and every build from the command line.. @sapegin Did you setuseBuiltInstotrue? Also, the browser support matrix would probably make a difference. And yes, for webpack 2, modules should be false. I found a 10-20k difference in our file when I used it, but it wasn't enough to justify possibly picking the wrong range for our app..useBuildInsrequiresbabel-polyfill`, it just trims down what it actually emits. Soon it will trim down even more.\n\nFor tree shaking we\u2019ll need to transpile two sets of files (because we still support Webpack 1)\n\nThis is common, hence jsnext:main in package.json. \nThat said, I wasn't aware you were talking about a build step prior to packaging, is that what you're talking about? In that case, I don't think you should be polyfilling at all. You definitely shouldn't be uglifying, that's the responsibility of the end user/during the actual styleguide build post webpack.. This is what we do (pardon the flow types):\nWithState.js\n```js\n// @flow\nimport React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { reducer as reduxFormReducer } from 'redux-form'\nimport type { State } from 'app/reducers'\nconst reducer = ({ form, ...state }, action) => ({\n  ...state,\n  form: reduxFormReducer(form, action),\n})\ntype Props = {\n  state: $Shape & {},\n  children?: mixed,\n}\nclass WithState extends Component {\n  props: Props\nstate: {\n    store: mixed,\n  }\nconstructor(props: Props) {\n    super()\n    this.state = { store: createStore(reducer, props.state) }\n  }\nrender() {\n    return (\n      \n        {this.props.children}\n      \n    )\n  }\n}\nexport default WithState\n```\nHeader.examples.md\n```js\nconst WithState = require('scaffolds/WithState').default;\nconst state = {\n  session: {\n    currentUser: null,\n  },\n};\n\n\n\n``\n. Ok, I've tracked it down to myCommonsChunkPlugin. I'm not sure that'd matter. I just can't use CommonsChunkPlugin the way that I was. The way that styleguidist handles thewebpackConfig` option caused me some confusion:\nwebpackConfigFile automatically excludes entry and output but when supplying a webpackConfig does not, I'm responsible for that, so when I do that, it helps, but then my CommonsChunkPlugin wants to build a bundle for vendor even though it's not there. I believe it not being there is why it's trying to write to bundle.js. It'd be a useless bundle if it wrote it, so I'm just removing that plugin.\nI'm not sure how to make it work automatically. I suppose you could strip out any CommonsChunkPlugins. With these changes to my webpack config it seems to work:\njs\n  if (options.styleguide) {\n    config.entry = [\n      path.join(clientDir, 'app/polyfills'),\n      path.join(clientDir, 'app/style/base'),\n      path.join(clientDir, 'styleguide/bootstrap'),\n    ]\n    delete config.output\n    config.plugins = config.plugins.filter(\n      plugin => !(plugin instanceof webpack.optimize.CommonsChunkPlugin))\n  }. Here's a repro: https://github.com/aaronjensen/react-styleguidist-const-repro\nTo repro:\n$ yarn\n$ yarn run build:styleguide\n$ grep -e \"const .=\" priv/static/styleguide/build/bundle.js\nThe const is here: https://github.com/styleguidist/react-styleguidist/blob/next/loaders/utils/evalInContext.js#L18. It also leaves consts in in the code examples, is there something that compiles those at runtime so they end up as var?. hmm, but did something change from 4 to 5?. so in 4 it would have been eval'd w/ const? I wonder why my tests didn't complain about that.... This is working now, thank you.. I'd be good w/ removing it. I also miss the build timing.. @sapegin I don't think that the example for styled-components is actually a great way of doing it. It adds another component to the tree that does nothing but pass things on to the styled component. It also adds quite a bit of verbosity to every file.\nIs there a way to convince react-docgen that it's actually a component? . Can you use NormalModuleReplacementPlugin for this instead?\nIs this why you're not resolving rsg-components relatively? That was the biggest problem I had upgrading to webpack2, I'm not sure how to do that without using this alias, the new modules doesn't seem to actually work the same as root did.\n. For what it's worth, I think that this actually belongs in root on webpack1. See: https://github.com/webpack/webpack/issues/472#issuecomment-55706013\n. I considered this, but it's less flexible (it may not be the only config option we want to pass). Plus, if this were called from anywhere else w/ a hard-coded boolean it's less easy to know what the arg is:\njs\nprocessComponents(components, false)\n// vs\nprocessComponents(components, { skipComponentsWithoutExample: false })\nSome people resort to comments:\njs\nprocessComponents(components, /* skipComponentsWithoutExample */ false)\nOf course, this isn't public API, so it's probably moot and I'm happy to switch it to just the flag if you still want it, I just wanted to share my reasoning \ud83d\ude04 \n. \u2139\ufe0f  There are so many changes in this file because I added common-dir and yarn'd with 0.17.4. I'm guessing this was originally generated with 0.16.*. I don't know what they changed in yarn, but it made significant changes in my project's yarn.lock as well when we upgraded.\n. ",
    "oskolsky": "Output syleguide/index.html, build from Webpack 2\n```\nHtml Webpack Plugin:\n\n  TypeError: Cannot read property '0' of undefined\n\n\nExternalModuleFactoryPlugin.js:18 ExternalModuleFactoryPlugin.\n    [project-name]/[webpack]/lib/ExternalModuleFactoryPlugin.js:18:38\n\n\nNormalModuleFactory.js:159 \n    [project-name]/[react-styleguidist]/[webpack]/lib/NormalModuleFactory.js:159:3\n\n\nTapable.js:75 NormalModuleFactory.applyPluginsAsyncWaterfall\n    [project-name]/[react-styleguidist]/[tapable]/lib/Tapable.js:75:69\n\n\nNormalModuleFactory.js:144 NormalModuleFactory.create\n    [project-name]/[react-styleguidist]/[webpack]/lib/NormalModuleFactory.js:144:8\n\n\nCompilation.js:356 Compilation.process [as _addModuleChain]\n    [project-name]/[react-styleguidist]/[webpack]/lib/Compilation.js:356:16\n\n\nCompilation.js:424 Compilation.process [as addEntry]\n    [project-name]/[react-styleguidist]/[webpack]/lib/Compilation.js:424:7\n\n\nSingleEntryPlugin.js:22 SingleEntryPlugin.\n    [project-name]/[webpack]/lib/SingleEntryPlugin.js:22:15\n\n\nTapable.js:107 Compiler.applyPluginsParallel\n    [project-name]/[react-styleguidist]/[tapable]/lib/Tapable.js:107:14\n\n\nCompiler.js:394 Compiler.compile\n    [project-name]/[react-styleguidist]/[webpack]/lib/Compiler.js:394:7\n\n\nCompiler.js:203 Compiler.runAsChild\n    [project-name]/[react-styleguidist]/[webpack]/lib/Compiler.js:203:7\n\n\ncompiler.js:70 \n    [project-name]/[html-webpack-plugin]/lib/compiler.js:70:19\n\n\ndebuggability.js:272 Promise._execute\n    [project-name]/[bluebird]/js/release/debuggability.js:272:9\n\n\npromise.js:475 Promise._resolveFromExecutor\n    [project-name]/[bluebird]/js/release/promise.js:475:18\n\n\npromise.js:77 new Promise\n    [project-name]/[bluebird]/js/release/promise.js:77:14\n\n\ncompiler.js:69 Object.compileTemplate\n    [project-name]/[html-webpack-plugin]/lib/compiler.js:69:10\n\n\nindex.js:47 Compiler.\n    [project-name]/[html-webpack-plugin]/index.js:47:40\n\n\n\n```\n. Sorry, it is no longer relevant.\n. Yes, it work with Webpack 1\n. Please, update npm package\n. Thanks!\n. ",
    "jurgob": "it would be awesome. I'm using redux sagas and I'm getting the following error:\nUncaught ReferenceError: regeneratorRuntime is not defined, I guess this is because the generators are not setted-up with the react-styleguide devserver\n. You were right, sorry!\nI'll put my solution just for log. \nto make the generators work I've just added the 'babel-polyfill' in the style guide config:\n``` js\n  updateWebpackConfig: function(webpackConfig) {\n    // Your source files folder or array of folders, should not include node_modules\n    let dir = path.join(__dirname, 'src');\n    webpackConfig.module.loaders.push({\n      test: /.js?$/,\n      include: dir,\n      loaders: ['react-hot', 'babel'],\n    });\nwebpackConfig.entry = ['babel-polyfill'].concat(webpackConfig.entry)\n\nreturn webpackConfig;\n\n}\n. markdown\nModules\n\nactions/auth\n\nactions/cron\n\n\n\nactions/auth\n\nactions/auth\n.addUser\n\n\n\n\nactions/auth.addUser\nKind: static constant of actions/auth \n| Param | Type | Description |\n| --- | --- | --- |\n| userId | string | user it to add |\n\n```\n. here you have a subset of it\n. ",
    "kopax": "@jurgob , I am using redux-saga in a documentation and I have tried to use your snippet to remove the runtime generator error.\n\nSomething is wrong with your style guide config\nupdateWebpackConfig config option was removed. Use \"webpackConfig\" option instead:\nhttps://react-styleguidist.js.org/docs/webpack.html\n\nI have found the old instruction here:  https://github.com/styleguidist/react-styleguidist/blob/0c7fdc10f0c85bf9aa1c8141d3ef3ad00e19db87/docs/FAQ.md\nThe new webpackConfig expect an object, not a function, how are we supposed now to push the babel-polyfill (it doesn't appear in documentation)?\nSolution\nbash\n$ npm install --save-dev babel-polyfill\nEdit styleguide.config.js: \ndiff\n+   require: [path.resolve(__dirname, 'styleguide/setup.js')],\nCreate styleguide/setup.js\njs\nimport 'babel-polyfill';. @tizmagik thanks for opening this as this is a major improvement/fix. \nWe have developed the documentation for the following lib : \n\nhttps://bootstrap-styled.yeutech.com/\n\nWe first thought that the dev mode was making it slow, but in fact, it appear the production takes about 30 seconds to load our page. We will implement a spinner pre react app to make things loading in a decent way.\nWe expect to implement react-router 4 in the layout, did you consider this as a possible solution?. I am also having that issues, I'm not sure if I understand the fix, did anybody tried @sapegin solution?. I personnaly create CLI-tools per project that can generate some markdown, and another CLI tools to inject into sections pages that I have generated. Another CLI tools to replace variables upon doc build.\nBut yeah, for this one I must say that @Giulico got a point asking to be able to write other than components documentation. Instead of having each a separate tools, we'll have a decent one.\nIt seems decent feature to be able to generate JSdoc when we can already do more for JS.\n+1\n. Simple opinion but I am hitting a case where react-styleguidist is a dependency of another module which has webpack.\nAny case, if I install this last module, I still must have webpack installed, while I am not using anywhere in my project. Can we arrange the error message not to force webpack to be installed at the latest level?. @sapegin, does #657 solved the issue with redux and propTypes tables?\nWe still cannot get propType table if the component is connected with redux. We had to split our UI component and the connect logic in order to be able to display our propTypes. . @sapegin, well, as I said, we have tried before. I did try again with 7.0.9. As an user and the main maintainer, did you experience issues while trying to generate the documentation for react-redux? I'll be happy to see  what I can do if you want to support such feature. Just need to know as much as you can say about the implementation.\n. any update on this?\n. 1. You are using /** @component */ on a non styled components while it is only for styled components.\n\n\nIf you are having a styled components you can use withTheme HoC before styled otherwise you are wrapping your component one last time with the default exports and static defaultProps and propTypes won't be present. (also note that withTheme is only useful when reading this.props.theme in component using Javascript, so not within styled components scope that only allow template literal but only within your component so it make sens to not have it as the last export)\n\n\nOtherwise, you can also do : \n\n\njsx\nconst Hoc = withTheme(Alert)\nHoc.propTypes = propTypes;\nHoc.defaultProps = defaultProps;\nexport default HoC;. Hi guys, I am a bit stuck upgrading to 7.0.0.\nI use to have an html file. How should I regornize my file ? I assume I need to replace  styleguide/template.html previously: \njs\n<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title><%=htmlWebpackPlugin.options.title%></title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body>\n<div id=\"app\"></div>\n</body>\n</html>\nwith styleguide/template.js\n```js\nconst MiniHtmlWebpackPlugin = require('mini-html-webpack-plugin');\nconst {\n  generateCSSReferences,\n  generateJSReferences\n} = MiniHtmlWebpackPlugin;\nconst config = {\n  plugins: [\n    new MiniHtmlWebpackPlugin({\n      context: {\n        title: 'Custom template' // Available in the context below\n      },\n      template: ({ css, js, title, publicPath }) =>\n        <!DOCTYPE html>\n          <html>\n            <head>\n              <meta charset=\"UTF-8\">\n              <title>${title}</title>\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n              ${generateCSSReferences(css, publicPath)}\n            </head>\n            <body>\n              <div id=\"app\"></div>\n              ${generateJSReferences(js, publicPath)}\n            </body>\n          </html>\n    })\n  ]\n};\n```\nThen now, how do I boot this configuration ?\n```js\nconst myTemplate = require('styleguide/template');\nconst webpack = require('webpack');\nconst path = require('path');\nconst pkg = require('./package.json');\nmodule.exports = {\n  styleguideDir: 'public',\n  require: [path.resolve(__dirname, 'styleguide/setup.js')],\n  components: 'src//*.js',\n  previewDelay: 500,\n  skipComponentsWithoutExample: false,\n  showCode: false,\n  showUsage: true,\n  showSidebar: true,\n  styles: {\n    Markdown: {\n      pre: {\n        border: 1,\n        background: '#363438',\n      },\n      code: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        color: '#a280ed',\n      },\n    },\n  },\n  template: path.join(__dirname, 'styleguide/template.html'), // OK so this as to be a function, while I export a plugins, how do I call it ?\n  theme: {\n    color: {\n      link: '#4c279e',\n      linkHover: '#a280ed',\n    },\n  },\n  title: ${pkg.description || pkg.name} documentation,\n  verbose: false,\n  webpackConfig: {\n    plugins: [\n      new webpack.SourceMapDevToolPlugin({\n        filename: '[file].map',\n        exclude: [\n          'node_modules//*.js',\n        ],\n      }),\n    ],\n    module: {\n      rules: [\n        // Babel loader, will use your project\u2019s .babelrc\n        {\n          test: /.jsx?$/,\n          exclude: /node_modules/,\n          include: [\n            path.resolve(__dirname, 'src'),\n            path.resolve(__dirname, 'styleguide'),\n          ],\n          loader: 'babel-loader',\n        },\n      ],\n    },\n  },\n  styleguideComponents: {\n    StyleGuideRenderer: path.join(__dirname, 'styleguide/components/LayoutRenderer'),\n    Wrapper: path.join(__dirname, 'styleguide/components/Wrapper'),\n  },\n};\n```\nYou should consider updating the documentation as well. We will downgrade to 6.x. @sapegin I was speaking of the release breaking change here : \n https://github.com/styleguidist/react-styleguidist/releases/tag/v7.0.0\nis there any extra documentation you are thinking about? I would gladly upgrade my styleguidedist.. I've published a quick fix in the schema for NODE_PORT. I've checked detect-port, it look simple but its' async which doesn't fit well with the current implementation.\nSee #995. it is still unfixed. I think this is a requirement for styleguide to process the js inside the example.\nWhen you got lots of components (like 50) rendered in this page, the time to process is about 30 seconds, this is why you should always include in the template HTML a loader directly.\nAnother way to get over this problem would be to remove components from the massive rendering you are doing. \nProbably that react-router-redux can be used, you should read https://github.com/styleguidist/react-styleguidist/issues/98 . @sapegin we are seriously considering improving the lib. Only issue is that we miss information from the author to get started with the work.\nI would rather start with #705, I am not familiar with your work and I'd like you to share the flow for the propTypes table rendering and the live example rendering. \nWhich files should I edit, where is it happenning, if you can share such information, I will dig into the code and try to solve #705 first and then #948.\nBest,\nEdit:\nFor #948 I have just pull the project and TBH, I don't see where you create the propTypes tables in your code. That would be a great starting point. \n. Found in :\nimport Styled from 'react-styleguidist/lib/rsg-components/Styled';\nimport Logo from 'react-styleguidist/lib/rsg-components/Logo';. Hi @sapegin, test for your reply, I will have a look at Codesandbox for sure.\n\nI've cloned the component driver development tutorial and I have not seen any input for the user to complete to achieve such interactive task in your documentation.. Can we include this in futur release?. Fw https://github.com/styleguidist/react-styleguidist/issues/984 @sapegin we have hit this while trying to use the alias. I wonder why we should keep such a restriction, the :fix could be accepted as a :feature if not forbidden. Otherwise, this should be clearly stated in the documentation as a restriaction. \n\nIt's not supposed to be changed via webpackConfig because it may break Styleguidist. \n\nCould you elaborate or give user case where it break styleguidist?\n\nYou could change it with dangerouslyUpdateWebpackConfig.\n\nThanks, I am not reading method starting with dangerously but now I did read it : https://github.com/styleguidist/react-styleguidist/blob/master/docs/Configuration.md#dangerouslyupdatewebpackconfig\nI'd like if possible to know when it can break the react-styleguidist.. @sapegin we have hit this while trying to use the alias. I wonder why we should keep such a restriction, the :fix could be accepted as a :feature if not forbidden. Otherwise, this should be clearly stated in the documentation as a restriction. . Fixed in https://github.com/styleguidist/react-styleguidist/pull/1011, can we get release a version please?. @sapegin, we need to optimize the rendering because the all in one page isn't satisfying us. We wanted to prepare new layouts that include solution such as react-router.\nWe wanted to add to the option layout for being able to switch the layout to be used by react-styleguidist.\nBecause the layout might have different menus and features, they should declare their own configuration schema extension. \nAt first, I wanted to import the main schema then extend it, or turn it to function so it can be extended for each layout but I noticed this was all done before webpack, it was not in rsg-component directory and import were relative so it was not possible to use webpack alias.\nRight now we had to move to a fork because of this. I do not like the way it is done because it force us to update the cli arguments in our package.json when we wanted to use a different configuration schema. Are initial though was to use the layout key for that job, but that's not possible.\n\nIt's likely not the best solution, and I'd like to avoid it.\n\nHow would you implement it? We need to get it soon, so please let me know and I will do the extra work behind it.\n. I have read the draft and I am not familiar with the choices made, I am afraid I can't dig into this right now. Perhaps the author can do a prototype we can use? . @sapegin, maybe a config that would allow us to disable the schema validation is that something you are willing to accept?. My first solution was to use a --schema to allow user to change the schema.\nMy last option was to use a schemaCheck: false to skip schema validation.\nI take not of the urgency of the plugins and will try again to see how I can help.. It seems to be the library. We have made our rsg-components with it, it must be some kind of circular dependency.\nSorry for disturbance,. I was in 7.0.17, sorry.. Hi, we are now experiencing issue in #1310  not being able to use require or import at all.\nCould this be related?. This is broken in v9.0.3 when I use it with webpack 4.29.6.. @sapegin, you got the most important point. \n\n\nPoint 1: We should be able to render @example static and non static. I don't know how. Perhaps by adding an option after @example: @example { static: false } ? \n\n\nPoint 2: The live code must return a valid component, so if our function is just returning a string, we must return <div>{str}</div> in order to get the result displayed. Fixing point 2 will consist of automatically wrap the returned value with a div.\n\n\nPoint 3: This point means showing the import line to access the function, as we do with getComponentPathLine.. Hi @stale bot, we have found the fix to use javascript as staticby default, because this is what@example` generate.\n\n\nIf we want code editor, we just do it inside @description, but this can be inconveniant to read in the jsdoc code and require to modify the default.\nShould we keep this open?. I see besides we need to confirm that because we have this issue at many places, see for examples all the documentation of this namespace http://github.com/bootstrap-styled because I believe there is something wrong with the syntax even for jsx, I will confirm this asap.\nAlso, the problem with jsx language is that it does work if it renders, there is still no way to use JSdoc annotation and render it with the proper language without using code mirror.\njs\n/**\n * @name Link\n * @description\n *\n * This link component can preload a [react-loadable](https://github.com/jamiebuilds/react-loadable#loadablecomponentpreload) chunk on **mouseOver**\n * It can also block the page change before the chunk is loaded,\n * This give control on how the page change should work.\n *\n * @example\n *\n * Usually, you would create a `<Link />` component in your application `src/components/Link/index.js` as follow:\n *\n *javascript\n * export default (\n *    console.log(*      chunk load in the background on mouseover or\n *      when user click if waitChunk is true\n *)}\n *    onLoaded={actionStopLoadingIndicator}\n *   />\n * );\n * *\n */. @mitsuruog I think you used content instead of components for your UI components section.\nAlso, I am trying to specify this without any section, as this example : \n\nI expect to have the section automatically created, but again, I wonder if the doc is stating things correctly or if I understand correctly.\n. That is still a different configuration than the screenshot posted. https://github.com/webpack-contrib/terser-webpack-plugin/issues/66. @timsnadden how can deleting the lock file can help solving the import issue?\nI am also investigating and we dowgraded to v8.0.6 our documentation because of that. Can somebody help me point to the commint that changed the behavior in react-styleguidist? I can't find what change between v8 and v9. /cc @sapegin :+1: \nhttps://github.com/styleguidist/react-styleguidist/issues/1310#issuecomment-471142372\nI think timsnadden got the cause, I have a similar case, can we get your opinion about it? I think you have a clue for us. We will get the reason and the fix.. I have found a way without yarn: \nAdd to your dev dependencies: \ndiff\n+    \"acorn\": \"^6.0.2\",\n+    \"acorn-jsx\": \"^5.0.0\",\nRerun npm install and it should be working.. Thanks for the quick reply. I've just gone through the migration guide, and it is still unclear, what happened to the rsg-components folders? It seems that you throw everything away.. > It should be lib/client/rsg-components.\nGreat thank you, this was worrying me :)\nIf I can get a few last advices before proceeding to migration of https://github.com/bootstrap-styled/rsg-components/tree/master/src: \nWe are really happy to see that you use the same prismjs highlight for all the styleguide.\nThis is the major reason why we want to upgrade, but also, the ES6 import in examples to make them copy/pastable is really great.\nAgain, thanks a lot for that release. Is v10 already scheduled or will you wait a bit before doing further changes?\n\nChecking the commit log would be the best way to learn about all changes.\n\nI agree but sometimes, redoing the whole portage is giving better results. We will try to update our rsg-components directory, is there any part of that directory that we should be warned on? Or should it work out of the box? I believe the Highlight component will have some change regarding the changelog, but any little working coming from you could help us get the best results.\nWe keep looking at the logs, but the code base we have is quite big and we try to bring every update without forgetting things. . @sapegin , we have found that v9 is breaking resolveAliases in example, using webpackConfig.resolve.alias also does not help. .  I am closing in favor of #1310 . We decided to migrate to v9 :p. I have issue with resolveAliases since v9, the example requireMap does not have them anymore. @milesj is this still working for you?. I got myself stuck on this too, thank you for fixing this!. Hi, not sure if that help but:\n\nyou don't need the babel-plugin-styled-components for development, nor distrubution, I suggest you tu use it only in production\n\nAlso, we already shared a UI library for react-styleguidist (called @bootstrap-styled/rsg-components). It is build on top of bootstrap-styled which is built on top of styled-components.\nYou can see how we configured the thing, you might get your answer. Is your project on Github? I agree styled is a better starting choice for doing css-in-js.\nAlso, you might be interested in this extensions (doc) that bring other features such as layout package for building documentations.\n. I have prepared a reproduction: bootstrap-styled/rsg-components/tree/testing-broken-v9\nThis is the full styleguide.config.js configuration:\njson\n{\n  \"serverPort\": 6060,\n  \"require\": [],\n  \"moduleAliases\": {\n    \"$PACKAGE_NAME\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components\",\n    \"@bootstrap-styled/rsg-components\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components\"\n  },\n  \"styleguideDir\": \"public\",\n  \"components\": [\n    \"src/components/**/[A-Z]*.js\",\n    \"src/components/**/[A-Z]*/index.js\"\n  ],\n  \"previewDelay\": 500,\n  \"skipComponentsWithoutExample\": false,\n  \"exampleMode\": \"expand\",\n  \"usageMode\": \"expand\",\n  \"showSidebar\": true,\n  \"styles\": {},\n  \"title\": \"@bootstrap-styled/rsg-components\",\n  \"verbose\": false,\n  \"version\": \"2.0.2\",\n  \"styleguideComponents\": {\n    \"StyleGuideRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/StyleGuide\",\n    \"Wrapper\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Wrapper\",\n    \"ArgumentRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Argument/ArgumentRenderer.js\",\n    \"ArgumentsRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Arguments/ArgumentsRenderer.js\",\n    \"CodeRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Code/CodeRenderer.js\",\n    \"ComponentsRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Components/ComponentsRenderer.js\",\n    \"ComponentsList\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ComponentsList/ComponentsList.js\",\n    \"ComponentsListRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ComponentsList/ComponentsListRenderer.js\",\n    \"Editor\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Editor/Editor.js\",\n    \"EditorLoaderRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Editor/EditorLoaderRenderer.js\",\n    \"ErrorRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Error/ErrorRenderer.js\",\n    \"ExamplePlaceholderRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ExamplePlaceholder/ExamplePlaceholderRenderer.js\",\n    \"ExamplesRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Examples/ExamplesRenderer.js\",\n    \"HeadingRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Heading/HeadingRenderer.js\",\n    \"LinkRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Link/LinkRenderer.js\",\n    \"LogoRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Logo/LogoRenderer.js\",\n    \"Markdown\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown\",\n    \"Blockquote\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Blockquote\",\n    \"BlockquoteRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Blockquote/BlockquoteRenderer.js\",\n    \"Checkbox\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Checkbox\",\n    \"CheckboxRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Checkbox/CheckboxRenderer.js\",\n    \"Hr\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Hr\",\n    \"HrRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Hr/HrRenderer.js\",\n    \"JsDoc\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/JsDoc\",\n    \"List\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/List\",\n    \"ListRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/List/ListRenderer.js\",\n    \"MarkdownHeading\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/MarkdownHeading\",\n    \"MarkdownHeadingRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/MarkdownHeading/MarkdownHeadingRenderer.js\",\n    \"Pre\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Pre\",\n    \"PreRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Pre/PreRenderer.js\",\n    \"TableHeadRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableHeadRenderer.js\",\n    \"TableBodyRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableBodyRenderer.js\",\n    \"TableRowRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableRowRenderer.js\",\n    \"TableCellRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableCellRenderer.js\",\n    \"MessageRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Message/MessageRenderer.js\",\n    \"MethodsRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Methods/MethodsRenderer.js\",\n    \"NameRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Name/NameRenderer.js\",\n    \"ParaRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Para/ParaRenderer.js\",\n    \"PathlineRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Pathline/PathlineRenderer.js\",\n    \"PlaygroundRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Playground/PlaygroundRenderer.js\",\n    \"PlaygroundErrorRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/PlaygroundError/PlaygroundErrorRenderer.js\",\n    \"ReactComponentRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ReactComponent/ReactComponentRenderer.js\",\n    \"RibbonRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Ribbon/RibbonRenderer.js\",\n    \"SectionRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Section/SectionRenderer.js\",\n    \"SectionHeadingRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/SectionHeading/SectionHeadingRenderer.js\",\n    \"SectionsRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Sections/SectionsRenderer.js\",\n    \"slots\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/slots\",\n    \"TabButtonRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/TabButton/TabButtonRenderer.js\",\n    \"TableRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Table/TableRenderer.js\",\n    \"TableOfContents\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/TableOfContents/TableOfContents\",\n    \"TableOfContentsRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/TableOfContents/TableOfContentsRenderer.js\",\n    \"TextRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Text/TextRenderer.js\",\n    \"ToolbarButtonRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ToolbarButton/ToolbarButtonRenderer.js\",\n    \"TypeRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Type/TypeRenderer.js\",\n    \"Usage\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Usage/Usage.js\",\n    \"VersionRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Version/VersionRenderer.js\",\n    \"WelcomeRenderer\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Welcome/WelcomeRenderer.js\"\n  },\n  \"webpackConfig\": {\n    \"plugins\": [\n      {\n        \"sourceMapFilename\": \"[file].map\",\n        \"sourceMappingURLComment\": \"\\n//# sourceMappingURL=[url]\",\n        \"moduleFilenameTemplate\": \"webpack://[namespace]/[resourcePath]\",\n        \"fallbackModuleFilenameTemplate\": \"webpack://[namespace]/[resourcePath]?[hash]\",\n        \"namespace\": \"\",\n        \"options\": {\n          \"filename\": \"[file].map\",\n          \"exclude\": [\n            \"node_modules/**/*.js\"\n          ]\n        }\n      },\n      {\n        \"definitions\": {\n          \"process.env.NODE_ENV\": \"\\\"development\\\"\"\n        }\n      }\n    ],\n    \"resolve\": {\n      \"alias\": {\n        \"$PACKAGE_NAME\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components\",\n        \"@bootstrap-styled/rsg-components\": \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components\"\n      }\n    },\n    \"module\": {\n      \"rules\": [\n        {\n          \"test\": {},\n          \"exclude\": {},\n          \"include\": [\n            \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src\",\n            \"/home/dka/workspace/github.com/bootstrap-styled/rsg-components/styleguide\"\n          ],\n          \"loader\": \"babel-loader\"\n        },\n        {\n          \"test\": {},\n          \"use\": [\n            \"style-loader\",\n            \"css-loader\"\n          ]\n        },\n        {\n          \"test\": {},\n          \"use\": [\n            {\n              \"loader\": \"url-loader\",\n              \"options\": {\n                \"limit\": 10240\n              }\n            },\n            {\n              \"loader\": \"image-webpack-loader\",\n              \"options\": {\n                \"mozjpeg\": {\n                  \"enabled\": false\n                },\n                \"gifsicle\": {\n                  \"interlaced\": false\n                },\n                \"optipng\": {\n                  \"optimizationLevel\": 7\n                },\n                \"pngquant\": {\n                  \"quality\": \"65-90\",\n                  \"speed\": 4\n                }\n              }\n            }\n          ]\n        },\n        {\n          \"test\": {},\n          \"use\": {\n            \"loader\": \"url-loader\",\n            \"options\": {\n              \"limit\": 10000\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"ignore\": [\n    \"**/__tests__/**\",\n    \"**/*.test.{js,jsx,ts,tsx}\",\n    \"**/*.spec.{js,jsx,ts,tsx}\",\n    \"**/*.d.ts\"\n  ],\n  \"pagePerSection\": true,\n  \"sections\": [\n    {\n      \"name\": \"Introduction\",\n      \"content\": \"docs/introduction.md\"\n    },\n    {\n      \"name\": \"Prerequisite\",\n      \"content\": \"docs/prerequisite.md\"\n    },\n    {\n      \"name\": \"Getting started\",\n      \"content\": \"docs/getting-started.md\",\n      \"sections\": [\n        {\n          \"name\": \"Installation\",\n          \"content\": \"docs/installation.md\"\n        },\n        {\n          \"name\": \"Configuration\",\n          \"content\": \"docs/configuration.md\"\n        }\n      ]\n    },\n    {\n      \"name\": \"UI Components\",\n      \"content\": \"docs/ui.md\",\n      \"components\": [\n        \"src/**/[A-Z]*.js\",\n        \"src/**/[A-Z]*/index.js\"\n      ],\n      \"ignore\": [\n        \"src/**/index.js\",\n        \"src/fontawesome.config.js\"\n      ],\n      \"sectionDepth\": 1\n    },\n    {\n      \"name\": \"Contribute\",\n      \"content\": \"docs/contribute.md\",\n      \"sections\": [\n        {\n          \"name\": \"Commands\",\n          \"content\": \"docs/commands.md\"\n        },\n        {\n          \"name\": \"Release\",\n          \"content\": \"docs/release.md\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Code of conduct\",\n      \"content\": \"CODE_OF_CONDUCT.md\"\n    },\n    {\n      \"name\": \"Changelog\",\n      \"content\": \"CHANGELOG.md\"\n    }\n  ],\n  \"ribbon\": {\n    \"url\": \"https://github.com/bootstrap-styled/rsg-components.git\",\n    \"text\": \"Fork us on GitHub\"\n  }\n}\nThis is what make-webpack-config.js create as a configuration\n```js\n{\n  entry:[\n    '/home/dka/workspace/github.com/bootstrap-styled/rsg-components/node_modules/react-styleguidist/lib/client/index',\n    '/home/dka/workspace/github.com/bootstrap-styled/rsg-components/node_modules/react-dev-utils/webpackHotDevClient.js'\n  ],\n  mode:'development',\n  output:{\n    path:'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/public',\n    filename:'build/[name].bundle.js',\n    chunkFilename:'build/[name].js'\n  },\n  resolve:{\n    extensions:[\n      '.js',\n      '.jsx',\n      '.json'\n    ],\n    alias:{\n      '$PACKAGE_NAME':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components',\n      '@bootstrap-styled/rsg-components':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components',\n      'rsg-components/StyleGuide/StyleGuideRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/StyleGuide',\n      'rsg-components/Wrapper':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Wrapper',\n      'rsg-components/Argument/ArgumentRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Argument/ArgumentRenderer.js',\n      'rsg-components/Arguments/ArgumentsRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Arguments/ArgumentsRenderer.js',\n      'rsg-components/Code/CodeRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Code/CodeRenderer.js',\n      'rsg-components/Components/ComponentsRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Components/ComponentsRenderer.js',\n      'rsg-components/ComponentsList':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ComponentsList/ComponentsList.js',\n      'rsg-components/ComponentsList/ComponentsListRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ComponentsList/ComponentsListRenderer.js',\n      'rsg-components/Editor':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Editor/Editor.js',\n      'rsg-components/EditorLoader/EditorLoaderRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Editor/EditorLoaderRenderer.js',\n      'rsg-components/Error/ErrorRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Error/ErrorRenderer.js',\n      'rsg-components/ExamplePlaceholder/ExamplePlaceholderRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ExamplePlaceholder/ExamplePlaceholderRenderer.js',\n      'rsg-components/Examples/ExamplesRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Examples/ExamplesRenderer.js',\n      'rsg-components/Heading/HeadingRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Heading/HeadingRenderer.js',\n      'rsg-components/Link/LinkRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Link/LinkRenderer.js',\n      'rsg-components/Logo/LogoRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Logo/LogoRenderer.js',\n      'rsg-components/Markdown':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown',\n      'rsg-components/Blockquote':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Blockquote',\n      'rsg-components/Blockquote/BlockquoteRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Blockquote/BlockquoteRenderer.js',\n      'rsg-components/Checkbox':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Checkbox',\n      'rsg-components/Checkbox/CheckboxRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Checkbox/CheckboxRenderer.js',\n      'rsg-components/Hr':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Hr',\n      'rsg-components/Hr/HrRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Hr/HrRenderer.js',\n      'rsg-components/JsDoc':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/JsDoc',\n      'rsg-components/List':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/List',\n      'rsg-components/List/ListRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/List/ListRenderer.js',\n      'rsg-components/MarkdownHeading':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/MarkdownHeading',\n      'rsg-components/MarkdownHeading/MarkdownHeadingRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/MarkdownHeading/MarkdownHeadingRenderer.js',\n      'rsg-components/Pre':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Pre',\n      'rsg-components/Pre/PreRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Pre/PreRenderer.js',\n      'rsg-components/TableHead/TableHeadRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableHeadRenderer.js',\n      'rsg-components/TableBody/TableBodyRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableBodyRenderer.js',\n      'rsg-components/TableRow/TableRowRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableRowRenderer.js',\n      'rsg-components/TableCell/TableCellRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Markdown/Table/TableCellRenderer.js',\n      'rsg-components/Message/MessageRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Message/MessageRenderer.js',\n      'rsg-components/Methods/MethodsRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Methods/MethodsRenderer.js',\n      'rsg-components/Name/NameRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Name/NameRenderer.js',\n      'rsg-components/Para/ParaRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Para/ParaRenderer.js',\n      'rsg-components/Pathline/PathlineRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Pathline/PathlineRenderer.js',\n      'rsg-components/Playground/PlaygroundRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Playground/PlaygroundRenderer.js',\n      'rsg-components/PlaygroundError/PlaygroundErrorRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/PlaygroundError/PlaygroundErrorRenderer.js',\n      'rsg-components/ReactComponent/ReactComponentRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ReactComponent/ReactComponentRenderer.js',\n      'rsg-components/Ribbon/RibbonRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Ribbon/RibbonRenderer.js',\n      'rsg-components/Section/SectionRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Section/SectionRenderer.js',\n      'rsg-components/SectionHeading/SectionHeadingRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/SectionHeading/SectionHeadingRenderer.js',\n      'rsg-components/Sections/SectionsRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Sections/SectionsRenderer.js',\n      'rsg-components/slots':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/slots',\n      'rsg-components/TabButton/TabButtonRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/TabButton/TabButtonRenderer.js',\n      'rsg-components/Table/TableRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Table/TableRenderer.js',\n      'rsg-components/TableOfContents':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/TableOfContents/TableOfContents',\n      'rsg-components/TableOfContents/TableOfContentsRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/TableOfContents/TableOfContentsRenderer.js',\n      'rsg-components/Text/TextRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Text/TextRenderer.js',\n      'rsg-components/ToolbarButton/ToolbarButtonRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/ToolbarButton/ToolbarButtonRenderer.js',\n      'rsg-components/Type/TypeRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Type/TypeRenderer.js',\n      'rsg-components/Usage':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Usage/Usage.js',\n      'rsg-components/Version/VersionRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Version/VersionRenderer.js',\n      'rsg-components/Welcome/WelcomeRenderer':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/src/Welcome/WelcomeRenderer.js',\n      'rsg-components':'/home/dka/workspace/github.com/bootstrap-styled/rsg-components/node_modules/react-styleguidist/lib/client/rsg-components'\n    }\n  },\n  plugins:[\n    StyleguidistOptionsPlugin    {\n      options:[\n        Object\n      ],\n      plugin:[\n        Function:bound plugin\n      ]\n    },\n    MiniHtmlWebpackPlugin    {\n      options:[\n        Object\n      ],\n      plugin:[\n        Function:bound plugin\n      ]\n    },\n    DefinePlugin    {\n      definitions:[\n        Object\n      ]\n    },\n    HotModuleReplacementPlugin    {\n      options:{\n  },\n  multiStep:undefined,\n  fullBuildTimeout:200,\n  requestTimeout:10000\n},\nSourceMapDevToolPlugin    {\n  sourceMapFilename:'[file].map',\n  sourceMappingURLComment:'\\n//# sourceMappingURL=[url]',\n  moduleFilenameTemplate:'webpack://[namespace]/[resourcePath]',\n  fallbackModuleFilenameTemplate:'webpack://[namespace]/[resourcePath]?[hash]',\n  namespace:'',\n  options:[\n    Object\n  ]\n},\nDefinePlugin    {\n  definitions:[\n    Object\n  ]\n}\n\n],\n  performance:{\n    hints:false\n  },\n  module:{\n    rules:[\n      [\n        Object\n      ],\n      [\n        Object\n      ],\n      [\n        Object\n      ],\n      [\n        Object\n      ]\n    ]\n  }\n}\n```\nThis is the markdown we expect to import correctly docs/ui.md: \nThe package contains all **rsg-components** from [react-styleguidist](https://github.com/styleguidist/react-styleguidist) in their Bootstrap Styled version.\n\n`StyleGuideRenderer` is the global layout component, other components are not described in details here.\n\nThey can be used to create new documentation layout for Bootstrap Styled.\n\n```js\nconst fa = require('$PACKAGE_NAME/lib/fontawesome.config.js');\nconsole.log(fa);\n<div>{fa.toString()}</div>\n```\n\nIt produces the following error after upgrading:\n\nI've checked, the config before we had and after is the same, only react-styleguidist was upgrade. I was not able to find the commit to incriminate. \nThis can be tested locally, I have created a testing-broken-v9 branch:\nbash\nmkdir -p ~/tmp\ncd ~/tmp\ngit clone git@github.com:bootstrap-styled/rsg-components.git\ncd rsg-components\ngit checkout testing-broken-v9\nnpm run styleguide\n. #1312 #1278. Can you please clarify what you mean by the problem you raise and the error ?\nAre you the one man who can achieve external imports within examples using any import from pkg.dependencies ?. Close in favor of #1278 . I think this is the same as #1310, we are currently invistagating for the root cause but we couldn't find, let us know if you get why. To me, all the module aliases are not working within examples.\nThe one think we can import is react. Can you please confirm that you can't import dependencies listed in package.json dependencies ?. @timsnadden I don\u00b4t know where you got this. I am a package maintainer and we allow the wider range of semver for our users, We want to see things break and we do not use lock file for that reason (except in app). The only thing it could have change on your side is that it  upgraded version on your particular host. To me, I already have the latest version and this bug is still present. You\u00b4re advice won\u00b4t help.. Ok, now I got it and you are right. Let's continue in #1278. ",
    "rodgerpaulo": "@kopax you rock!. ",
    "jedmao": "I have the same desire as @aaronjensen. We have an existing project and I really just want to use our existing webpack + PostCSS configuration and serve the styleguide in a new route.\n@sapegin it sounds like you're open to the idea requested by the OP and I think the only thing that would make sense is to:\n1. Move the RSG components (and perhaps other stuff) into a separate project.\n1. Keep only the dev-server-related stuff in this project and install the new project as a dependency to this one.\nAnyone wishing to use this in their existing project should only need to create their own route and serve a root style guide component on that route, having access to all existing components and styles already in their project.\nUnfortunately, I don't have enough intimate knowledge of this project to do that kind of surgery and extract the necessary pieces.. ",
    "heatherbooker": "This may be obvious to others but if anyone else comes along as I did, perhaps this will help:\nYou can simply run styleguidist build and it will generate an index.html that you can serve yourself. Voila \u2728 . Tags: duplicate multiple header. ",
    "danielsneijers": "Additional docs could be in the root of the section folder, having a Readme.md in there doesn't hurt. The titles could be more tricky. First instinct is: just go with the folder name, but I'm not sure how messy things could get with spaces in the folder names.\n. Ah so you take the folder name if there's no Readme.md, but otherwise take the first # title of readme and use that as a title, correct? One other thing that pops in my mind: how does the styleguide handle subfolders right now? Because it'd be a challenge to support multiple layers of subfolders for sections. I'm thinking supporting just the first level (maybe recursively add folders below that to the section) would be easiest to present in a visually pleasing way. So in short:\n- components\n| - Buttons\n  | - ShareButton\n  | - AcquisitionButton\n| - etc\nWould render a button section with different components in it, but\n- components\n| - Buttons\n  | - ShareButtons\n    | - FacebookButton\n    | - TwitterButton\n  | - AcquisitionButton\n| - etc\nWould just render the FacebookButton and TwitterButton in the Buttons section. Don't want to make it too complicated :)\n. I think it's best to keep it as simple as possible for the end user, it's totally possible to support multiple levels of subfolders without special rules. The toughest part would be to make it visually pleasing. I'm not that familiar with the source of this project (yet) but I'll try to draft some code and see how it feels, if you're ok with that.\n. Hmm it indeed has some edge cases I didn't see before. I'll think about it before working out some examples, maybe some other contributers/community have some good ideas about this.\n. I did some work on our work in progress styleguide and I have to say: the current way of defining folders works pretty well once you have it in place. In retrospect I think adding the folder method would unnecessarily complicate this project, so unless this is still something you'd like to see in the future you can consider this issue solved.\n. ",
    "romelperez": "Yes, and I works pretty well, but I can't translate my components with that library which is a good one.\nShould I use another?\n. My guess is that it have to do with the component detection, because there are some wrappers, like the internationalization ones, that don't export the result as:\njs\n<div>Component content</div>\nFor example.\nI'll try to figure out what I can do and share it.\n. Great, let me try when I get home and I'll tell my experience. Thanks!. I reviewed the object styleguide passed to renderStyleguide and there is a lot of work done by the webpack loaders that I wouldn't like to implement in the app, since it is running using next.js.\nTo get the components docs I'll try with react-docgen, render the markdown with marksy and create the examples with react-live.\nThanks!\nThis is for the website docs of a pet project if you want to see: Arwes.\n. I wanted to use the components from the /react-styleguidist/lib/rsg-components/ but they aren't completely converted with babel to ES5 so I couldn't and I didn't want to configure webpack. At the end I copied some components and re-made others. (Code: /site/components/Api.js Result: arwes.romelperez.com/api/words)\nI did the work of webpack to get the components definitions and APIs in a different script. (/scripts/api.js)\nAre they any plans on making the React components to be used without the whole toolset and without configuring webpack?\nSorry for the delay, I was on vacation. The first question is about completely converting the components so they can be used outside without configuring webpack. For example, the import and export declarations are not transpiled/compiled and there is a shortcut in webpack which needs to be configured (example).\nFor the transpiling I would think we need to add more plugins in the babel definition: .babelrc#L11. I need to review properly but there are some other tweaks needed.\nWell, I would like to contribute to the project. I am using it and I really like it.. Let me review properly and I'll open a new issue to discuss those changes so I can make a PR. Thank you @sapegin !. @jasonsims I couldn't work on this because of time. I ended up making my own version. And yes, it would definitely be an awesome addition.. ",
    "TimothyKrajewski": "I am having the same error . ",
    "kevinehosford": "@sapegin that was exactly what I needed. Thanks!\n. ",
    "chardos": "Would love to see the solution, link seems to be broken?. @sapegin That was an incredibly fast response. Thanks man!. No worries . ",
    "dchambers": "Is there a way to import CSS directly into the index page without using a require as this doesn't seem to be compatible with the webpack config used by create-react-app?. HI @sapegin, maybe Im doing something stupid then since I didn't even know code blocks could be indented like that, but here's a repo to show how using that style of code block doesn't work for me.\nThanks \ud83d\udc4d . Doh, thanks @sapegin!. ",
    "neutraali": "I might have the same question as @dchambers has... We'd like to include a local CSS -file in the template:\nhtml\n<link rel=\"stylesheet\" href=\"<%= process.env.baseUrl %>static/css/all.css\" />\n... This naturally gives a 400 -error and is unable to locate/use the file.. Hey @usamamashkoor, not with react-styleguidist at least. I was only trying to get a quick look on how the lib would work. It didn't - So I quickly moved on to other solutions. :cat: . ",
    "usamamashkoor": "@neutraali did you find a way to include local css in your react app i am facing the same issue here ..?. ",
    "jzaefferer": "I'd much rather have a page reload in the browser than having to manually restart the process, AND then reload the page.\nDid someone try this with nodemon? A sample setup, at least as a workaround, would be interesting.\n. ",
    "andresgutgon": "I use spaces in my editor :trollface: \n\n. Yes! \ud83c\udf4f \n. Please can you check out this branch. I just converted the component to use React.createClass and the error is reproduced with this comment: https://github.com/sapegin/react-styleguidist/pull/177/files#diff-07e392e9ddba72895f1dc7298921c452R32\n. I think the key is using React.createClass\n. As commented in the PR the problem is with my node version. You need to use a node version >= 4.x.x with react-styleguidist.\nThanks @sapegin \n. Yep, sorry looks like is my node version :/\nWith 0.12 is failing but it's not with 4.5.0.\n. I'm not sure if this is right?  I just installed the package from github and I'm getting this error:\n```\n~/my-code/react-component-ui-styleguide npm run react-styleguide-server\n\nstyleguidist server\n\n/my-code/node_modules/react-styleguidist/src/server.js:19\n        stats,\n             ^\nSyntaxError: Unexpected token ,\n```\nThis code is using ES6?\nShould we change this to stats: stats? I did this becasue eslint was complaining about it\n. It was that, we're using 0.12. Just today we switched to 4.5.x :) \ud83c\udf89 . Thanks\n. ",
    "rcline": "The links on master are now working for me.  @sapegin is there something I am missing?\n. @n1313 That really doesn't look that hacky to me.  Is there any side effects I am not seeing?\nI would love to see this get added!  (Currently having to rename my Image component so that it doesn't conflict with window.Image \ud83d\ude1e ). @sapegin It looks like this code has been changed/moved.\nhttps://github.com/styleguidist/react-styleguidist/blob/d07e825e00720f71cf4aea348f1bb12b9dab58b2/src/rsg-components/Preview/Preview.js#L54-L56\nAny direction on where to look to make a similar change? (passing in namespaced components to a with () context call). ",
    "ahutchings": "Ah, I see that this was fixed in #173, but it has not been released to npm yet. Could we publish a new version to npm?\n. ",
    "masylum": "Could we have a minor version with that fix in the meantime?\n. ",
    "jeans11": "Ah yes ! my bad ^^\n. ",
    "nkt": "I suggest drop webpack2 support for a while. Now latest styleguidist breaks my builds.\nOr you can add webpack as peer dependency, so users could make choice.\n. Nope. latest webpack haven't marked as beta relase, so npm installs it instead of webpack 1\n. Dependencies of this project requires 1 || 2 webpack. This means users couldn't make choice. You should add webpack into peer dependencies, then everyone will decide, which webpack version needed.\n. Ah, ok. I'm using npm@3, so I can specify webpack version in my package.json. But you should to know, all users with latest react-styleguidist will install webpack@2 if webpack@1 isn't dependency of them projects.\n. Thanks for fast answers!\n. @sapegin please add flag which would replace buble by babel.\nIn my project I got following error:\nError when parsing src/components/AuthForm/AuthForm.js\nError: [{type: ImportSpecifier, start: 270, end: 282, loc: [object Object], imported: [object Object], local: [object Object], id: null, name: null}, {type: ImportSpecifier, start: 284, end: 294, loc: [object Object], imported: [object Object], local: [object Object], id: null, name: null}, {type: ImportSpecifier, start: 298, end: 312, loc: [object Object], imported: [object Object], local: [object Object], id: null, name: null}, {type: ImportSpecifier, start: 314, end: 323, loc: [object Object], imported: [object Object], local: [object Object], id: null, name: null}, {type: ImportSpecifier, start: 327, end: 341, loc: [object Object], imported: [object Object], local: [object Object], id: null, name: null}, {type: ImportSpecifier, start: 343, end: 352, loc: [object Object], imported: [object Object], local: [object Object], id: null, name: null}, {type: ImportSpecifier, start: 356, end: 369, loc: [object Object], imported: [object Object], local: [object Object], id: null, name: null}] does not match type Printable\n. @sapegin\ngit clone https://github.com/dialogs/dialog-web-components.git\ngit checkout v0.54.3\nyarn install\nstyleguidist build\n. @bennam you added polyfill to dev dependencies \ud83d\ude1e. @sapegin yep, I noticed this. I guess we should report this to @github. ",
    "TheLarkInn": "context and test can be left blank in most situations, same with this one. \n. ",
    "Alberthoven": "Ok, it works using 'resolver':\nmodule.exports = {\n  // ...\n  resolver: require('react-docgen').resolver.findAllComponentDefinitions,\n};\nThanks!\n. ",
    "tsuyoshiwada": "Thank you for quick reply & merge! Loocking forward to next week's release :smile:\nI'm rooting for development of styleguidist.\n. ",
    "just-boris": "Yes, it can be a separate package. So far I tried to create this: https://github.com/just-boris/react-app-styleguidist\nThe work is not finished, but I expect that setup instructions in Readme wouldn't be changed. I tried to make that as easy as possible.\nImplementation details: it uses Styleguidist node API and merges Create-react-app config into current default. Source.\n. What do you mean as \"regular config\"?\nNow I am using updateWebpackConfig function where I extend webpack config with extra loaders from react-scripts package\n. The purpose of my project as well as create-react-app itself, is keeping your project clean from any kind of config. If you want to provide some configuration options, you can always switch back to the classic usage of react-styleguidist.\nHowever, this is a good point. I will add eject instructions how to extract config and start using styleguidist directly.\n. > I\u2019m not sure it\u2019s really useful if you can\u2019t even change a title of your styleguide \nThe title will be picked up from package.json file of the project.\n\nWell, I could make everything working as expected. The eject process also was described there. \nThe next step will be publishing this into create-react-app users community to gather some feedback. As far I will publish the release of react-app-styleguidist we can close this issue.\n. Related PR into Create React App: https://github.com/facebookincubator/create-react-app/pull/921\n. Catalog names custom markdown content definitions as specimens. If you would like, we can do here the same. Let's say, that here will be a new option in styleguide.config.js:\njs\nmodule.exports = {\n  specimens: {\n     html: (content) => {/* implementation */},\n     color: (content) => {/* implementation */}\n  }\n};\nBy default, we are also going to enable example and html specimens by default, to make backwards-compatible behavior.\nI have analyzed examples.loader.js source to check how hard it would be to implement and it seems like it needs big refactoring to accomplish this. Basically, we need to split up code evaluation logic and static highlight. Now they are both in the same module and depend on each other.\nBefore start actually doing this, I'd like to gather more demand from users, to be sure that it actually worths that efforts.. Left a comment there. Seems like it will be a big change, that will take a long to implement.\nAlso, I'd like not to configure this every time, but keep JS evaluable by default. That means, let's merge this PR first, then we can think about Specimens functionality.. ",
    "ximenean": "Fast work! Thanks.\n. ",
    "rowlandekemezie": "I would like to do this refactoring if there's no one on it already\n. Got busy in the past week with some projects @sapegin.\nHere's the sample of the changes I made.\n``` javascript\nfunction renderEnum(prop) {\n    if (!Array.isArray(getType(prop).value)) {\n        return {getType(prop).value};\n    }\n    let values = getType(prop).value.map(({ value }) => (\n        {unquote(value)}\n    ));\nreturn (\n    <span> One of: <Group className={s.list} separator=\", \">children={values}</Group></span>\n);\n\n}\n```\nI am not sure how we should simplify the renderDescription method. Any idea on this?\njavascript\nfunction renderDescription(prop) {\n    let { description } = prop;\n    let extra = renderExtra(prop);\n    return (\n        <div>\n            {description && <Markdown text={description} inline />}\n            {description && extra && ' '}\n            {extra}\n        </div>\n    );\n}\n. @sapegin The linting has issues with unnecessary escape characters \n. Thanks for the walk-through\n. Okay\n. ",
    "natearn": "Is this change still desired? I'd like to contribute and I'm looking for an easy place to start.. Alright, I've implemented the changes and fixed the snapshot.. The null is so to tell React not to render anything. Otherwise, an empty string will still get rendered as an empty string.. Fair enough :). ",
    "snmslavk": "@sapegin Hi, where do you want to add this \"fork me\" ribbon?\n\nHide path line if it\u2019s empty.\n\nI think it's done, could we make this checkbox checked?. This code mostly is from react-dev-utils with some changes. I did it according to your link posted in #470 . Something like this ? :). I revertered lock files together with package.json in previous commit. ",
    "M-ZubairAhmed": "@sapegin are all tasks done? if not i would like to pick one. ",
    "kizu": "What I would love to have is to have some way to configure example both per example (maybe in a way the static keyword is done? i.e. in the first line after the language), and per section (so we could have one style of example in one part of docs, and another \u2014 at another).\nThings I would like to configure:\n\nThe default state of the example: if the code is visible or folded. Right now we can control this option only globally.\nTo have some layouts to choose from: the current one, with full-width code, the side-by-side (see how it looks like there: http://kizu.ru/bemto-components/#html-structure), or in some other way.\nI'd like to have a way to demonstrate generated code for the example in some way, like, the HTML you'd see in the browser's devtools.\n\nI would like to not wrap multiple components with a wrapper all the time: when you need some items, it is kinda frustrating to have those empty <div>s.. 1. Was that mentioned somewhere in the docs? If so, I have completely missed it :) Also, are all of the options that are available for configuration in styleguid.config.js could be used this way or just a subset?\n\n\nHmm, I'd need to think more about it, but it would be nice to have a way to register the different layout components as an object with different keys probably? And then use them as value of a new layout option?\n\n\nProooobably, yeah.\n\n\nJust minor annoyance that when you need to have side-by-side comparison of two components in one example, right now we need to use that <div></div> that would be there in the CODE. What are the difficulties there? I think React allows to return arrays of components, and if you'd write an example like this:\nmd\n[\n  <strong>aaa</strong>,\n  <em>bbb</em>\n]\nIf would render it without problem. So maybe there'd be a way to either wrap examples that return multiple components in arrays? As they don't work already, I don't think it would break anything if some of the examples that throw error now would actually render sometimes :). \n\n",
    "catherinefromont": "Hi there, I would love to try and fix this issue, how did everyone else go about fixing it?. ",
    "glebez": "Hey, I wanna try to go on with this issue. Can you explain a little more on the \"New option, getComponentName(), to change the title.\" part? What is the general idea behind it? Or if that has already been discussed somewhere, be so kind to point me in that direction. Thanks!. Hi, I've looked a little bit into that issue and unfortunately, react-docgen does not support childContextTypes out of the box at the moment.\nHere's the issue requesting the required improvement in their repo: #167, but there's no activity on it for about a year.\nOptionally, there's a way to write and pass a custom handler to react-docgen parse method, but this is something that I have no idea how to approach ;). Well, I found that somebody smart has already done most of the work on adding context handlers to react-docgen a year ago, but it was not approved due to missing tests. I've updated the branch, threw in some tests and well, here's a PR, let's see how it goes... But yeah, @milesj, high chance it will be canned because of upcoming context API changes.. Good news, my PR for react-docgen to support childContextTypes was merged! So, now this issue can be addressed. If anyone wants to take a bite on that, go ahead! Otherwise, I'll try to give it a shot in a week or two, when things are a bit easier with my other projects.. It feels that we can check off first two boxes. And think on breaking the third one into more actionable, i.e. 'write cypress tests for sidebar', since some core test are already in place.. So, the requested changes are there and travis runs cypress successfully \ud83c\udf89 \nAnd yes, I removed cypress from dependencies, since it was installing 89 other packages and for me it took about a minute on overall installation. So now it is installed through a script.\nI'm wondering if the cypress tests should run only for node 8, like current browser test, or it's ok that they run for all versions, like now?. All right, now it runs only once per CI run.. Aaand the fixes are there.. Ok, style fixes are there.. I've noticed that the names of components in sidebar are still not properly updated. Will look into it.. All right, I've changed the name, updated componenstListRenderer, so it uses visibleName as well and threw in some docs. Also, had to rebase because of conflicts with master.. Yep, was thinking about it, but than noticed that lodash is used in both other checks and decided to go with consistency.\nAnyways, will update in a moment.. Aaaand it's there.. I've just seen the recommendation to add this in the cypress docs, so don't have a strong opinion here. It also adds browser and mocha globals, but those might be in your setup already.. Hm, not sure, will check. You want to move it the installation to pre-test hook, like you're doing with puppeteer?. Ah, cool, thx, should have read more on jss before jumping on styles ;) will fix. had to use px here, without it the code was compiling to text-shadow: 0 -1 0 rgba(0,0,0,.15) and browser marked it as unknown value.. Honestly, I don't know the difference :D I just noticed, that the custom tag gets added both to doclets and tags while parsing, so i decided it's a good idea to remove it from both. I'll investigate a little more on the matter.. After investigating a little, it seems that doclets and tags are a little redundant.\nHere's an example of doclet:\n{\n  version: '1.0.1',\n  author: '[Jeremy Gayed](https://github.com/tizmagik)',\n  deprecated: 'Use the [only true button](#button) instead'\n}\nAnd here's the tags object:\n{\n  version: [ { title: 'version', description: '1.0.1' } ],\n  author:\n   [ { title: 'author',\n       description: '[Jeremy Gayed](https://github.com/tizmagik)' } ],\n  deprecated:\n   [ { title: 'deprecated',\n       description: 'Use the [only true button](#button) instead' } ]\n}\nSeems, it's the same data, structured a little differently. The interesting part, that we are using two different parsers to get those results. So, unless there are some subtle differences that I've missed, we can do some refactoring and let one of those go. But anyway, I think this work is outside of this pull request purpose. Should I file an issue for that?. Hey, it seems that the rest of the items is not ordered alphabetically as well. Should I order them?. \ud83d\udc4d . Hey, I finally got to alphabetically ordering the cookbook sections and want to ask: is this really a good idea? In this case, the first entry in the cookbook will be 'Are there any other projects like this?' and it feels that there are more important/useful topics in the cookbook than this... It feels that there can be a benefit in structuring the cookbook, but in some other, more semantic way, like from beginner topics to more advanced stuff or from most frequent requests to more rare/specific.. All right! Nope, the rest of the changes is in place already, so this one is ready to go \ud83d\udea2 . ",
    "sullenor": "What you think about using function name or Anonymous in case if name was not provided?\n. ",
    "marvinhagemeister": "Thanks for having a look at this. It's definitely the component name. Found out that it works when I change the wrapper class MyHOCin this case to the expected component name MyComponent. \n. @sapegin It should be the latest version, but I'll double check to be sure at work tomorrow.\n. Spent a few hours today looking into this issue. styleguidist simply checks for the exported name property of the exported module. It doesn't know if this is a high-order function (or high-order class) and returns.\nreact-docgen solves this by building a complete AST-Tree with babylon. Once they've got the tree, they walk down the exported CallExpression recursively until they find the last one. The rightmost CallExpression is assumed to be the actual component.\n. Not without a proper AST-Tree :/\n. I'm not sure about filename or folder names being the defaults. What about cases like this: my-component.js for MyComponent?  The only safe solution is the approach taken by react-docgen, in my opinion.\n@aaronjensen docgen should return the correct component\n. The biggest performance bottle neck seems to be the whole Code editing tools. CodeMirror is a huge burden, same for in browser compilations. These two together make out roughly 70% of our bundle size last time I looked.\nAt work we're using react-styleguidist mainly for UX- and Design-Reviews. The showCode Button is only used to get a quick example for devs on how they can incooperate the component. I can see how it may be useful to see how it reacts to different props though.\nJust a thought: Instead of supporting complete jsx compilation we could limit the Code-Editor to adding/updating/removing props only. That way the whole in browser compilation step can be avoided and we could drastically reduce our bundle size.\n. @sapegin I agree that buble is step in the right direction, I'm just wondering if we can remove even that.\n. ",
    "ashokpatidar": "i am also facing the same issue . ",
    "lensbart": "@SaraVieira I'm having the same issue as well, after transforming my stateless class components to function components (as per ESLint guidelines). Had no issues before conversion. Even the most trivial cases now throw a RangeError: Maximum call stack size exceeded, e.g.\nimport React from 'react'\nexport default function Blockquote(props) {\n  return (\n    <blockquote>\n      {props.children}\n    </blockquote>\n  )\n}\nMy styleguide.config.js file:\n```\nconst path = require('path')\nconst webpackConfig = require('./webpack.config.js')\nmodule.exports = {\n  assetsDir: 'public/',\n  components: 'app/components/*/.{js,jsx}',\n  getExampleFilename: (componentPath) => (\n    componentPath.replace(/.jsx?$/, '.md')\n  ),\n  require: [\n    'babel-polyfill',\n    path.join(__dirname, 'public/style.css')\n  ],\n  sections: [\n    // ...some sections\n  ],\n  title: 'Nextbook Documentation',\n  webpackConfig\n}\n```\nI have no idea what might cause this, but I doubt styleguide.config.js is the issue here (I commented out most entries and the issue kept persisting)\n. Found it. Apparently this doesn't work:\nimport React from 'react'\nexport default function Blockquote(props) {\n  return (\n    <blockquote>\n      {props.children}\n    </blockquote>\n  )\n}\nBut this does:\nimport React from 'react'\nmodule.exports = function Blockquote(props) {\n  return (\n    <blockquote>\n      {props.children}\n    </blockquote>\n  )\n}\nHope this helps!. @poeschko I fixed my issue by using yarn instead of npm. I think this solved an issue with different versions of react-docgen across several dependencies not working well together.. Here it looks pretty much the same! Have you trying uninstalling & reinstalling react-docgen?\nreact-docgen@^3.0.0-beta8:\n  version \"3.0.0-beta8\"\n  resolved \"https://registry.yarnpkg.com/react-docgen/-/react-docgen-3.0.0-beta8.tgz#57888166cffd0681fa20fa0d73e569fa7fd04c3c\"\n  dependencies:\n    async \"^2.1.4\"\n    babel-runtime \"^6.9.2\"\n    babylon v7.0.0-beta.20\n    commander \"^2.9.0\"\n    doctrine \"^2.0.0\"\n    node-dir \"^0.1.10\"\n    recast \"^0.12.6\". ",
    "poeschko": "Having the same issue. Could this be reopened?. @lensbart Thanks for the tipp! But I'm already using yarn... What version of react-docgen are you using? Here's the entry from my yarn.lock:\nreact-docgen@^3.0.0-beta8:\n  version \"3.0.0-beta8\"\n  resolved \"https://registry.yarnpkg.com/react-docgen/-/react-docgen-3.0.0-beta8.tgz#57888166cffd0681fa20fa0d73e569fa7fd04c3c\"\n  dependencies:\n    async \"^2.1.4\"\n    babel-runtime \"^6.9.2\"\n    babylon v7.0.0-beta.20\n    commander \"^2.9.0\"\n    doctrine \"^2.0.0\"\n    node-dir \"^0.1.10\"\n    recast \"^0.12.6\". ",
    "jeffkamo": "Any movement on this?\nThis still appears to be an issue for me. Installing my node packages from scratch is not working for me. I've tried both npm and yarn, and the results are the same.\nInteresting to note that...\n```jsx\n// This works\nconst Button = ({children}) => (\n    {children}\n)\n// This does not work\nconst Button = ({children}) => {\n    return (\n        {children}\n    )\n}\n```\nSee it in action:\n\nActually I noticed there was a time when both the above examples didn't work, and re-installing all my packages did fix the implicit return example. But as of now, the explicit return still doesn't work as expected.\nI am using the latest version of react-styleguidist:\n\u251c\u2500 react-styleguidist@6.2.0\n\u2502  \u251c\u2500 react-docgen-annotation-resolver@^1.0.0\n\u2502  \u251c\u2500 react-docgen-displayname-handler@^1.0.1\n\u2502  \u251c\u2500 react-docgen@^3.0.0-beta9\n\u2502  \u251c\u2500 react-docgen@3.0.0-beta9\n\u2502  \u2502  \u251c\u2500 async@^2.1.4\n\u2502  \u2502  \u251c\u2500 babel-runtime@^6.9.2\n\u2502  \u2502  \u251c\u2500 babylon@7.0.0-beta.31\n\u2502  \u2502  \u251c\u2500 commander@^2.9.0\n\u2502  \u2502  \u251c\u2500 doctrine@^2.0.0\n\u2502  \u2502  \u251c\u2500 node-dir@^0.1.10\n\u2502  \u2502  \u2514\u2500 recast@^0.12.6. Well, in setting up a pared down example for you, @n1313, I discovered what was causing this issue in my project.\nIt turns out our project was also depending on react-docgen and was using it into our styleguidist.config.js\n```js\nconst DocGen = require('react-docgen') // <-- v2.15.0 from our local package.json\n// ...\nmodule.exports = {\n    // ...\n    resolver: DocGen.resolver.findAllComponentDefinitions, // <-- this was the problem\n    // ...\n}\n```\nRemoving the resolver key from this module.export fixes the problem, and my components appear to work better.\nCheers, and thanks!\nEdit!\nInstead of just removing the resolver (because we need it), updating react-docgen to 3.0.0-beta9 (which is currently used by react-styleguidist) also fixed this issue.. I would also really like to see this feature merged :) This is the functionality that my team's designers would like see in our project.. Ah, thanks for linking to that PR, I hadn't seen that one. But yes, that looks exactly like what my team needs!\nConsider this question answered \ud83d\udc4d . ",
    "rameshsunkara": "\nupdating react-docgen to 3.0.0-beta9 (which is currently used by react-styleguidist) also fixed this issue.\n\nThis fixed our problem. Thank you very much for posting it here.\nWe basically removed react-docgen from dev dependecies and let styleguidist pull whatever version it needs.. ",
    "SimonSomlai": "Just removing react-docgen didn't work for me. But ;\ndowngrading styleguidist from v9 to ^8.0.6 AND removing react-docgen from package.json solved the problem for me. . ",
    "philholden": "Have you had a look at intersection observer it is already shipping in Chrome (it fires an event when an element comes into view):\nhttps://developers.google.com/web/updates/2016/04/intersectionobserver?utm_campaign=chrome_series_nic011_052516&utm_source=chromedev&utm_medium=yt-desc. ",
    "ersel": "We use styleguidist at work for our multi-product component library with a few hundred components. As you can imagine, it is quite slow to render! I was going to open an issue to suggest adopting react-virtualized or maybe react-in-viewport, glad to see this issue already exists.\nhttps://www.npmjs.com/package/react-in-viewport\nI would be happy to look into this issue if someone familiar with the codebase can point me in the right direction. . ",
    "varya": "UPD: I came up with this solution\ndiff\n+      if (plugin.constructor.name == 'HotModuleReplacementPlugin') {\n+        return;\n+      }\n+      webpackConfig.plugins.push(plugin);\nBut not sure if you would recommend it to other users.\n. Everything is OK when using react-styleguidist@4.1.0. Newer versions give this problem. The config is below.\nclient-src/webpack/styleguide.config.js\n```\nconst path = require(\"path\");\nconst glob = require('glob');\nconst yargs = require('yargs').argv;\nlet siteWebpack = require(\"./webpack.config.js\");\nif (yargs.production) {\n  siteWebpack = require(\"./webpack.production.config.js\");\n}\nmodule.exports = {\n  title: 'Swap.com styleguide',\n  //components: '../react/components//.jsx',\n  components: function() {\n    const components = glob.sync(path.resolve(__dirname, '../react/components//.js')).filter((module) => {\n      return true;\n    });\n    const examples = glob.sync(path.resolve(__dirname, '../react/examples//*.js')).filter((module) => {\n      return true;\n    });\n    const all = components.concat(examples);\n    return all;\n  },\n  updateWebpackConfig(webpackConfig) {\n    siteWebpack.module.loaders.forEach(function(loader) {\n      webpackConfig.module.loaders.push(loader);\n    });\n    webpackConfig.module.noParse = siteWebpack.module.noParse;\n    siteWebpack.plugins.forEach(function(plugin) {\n      // Skip hot reloading plugin\n      // https://github.com/webpack/webpack/issues/1583#issuecomment-153516236\n      if (plugin.constructor.name == 'HotModuleReplacementPlugin') {\n        return;\n      }\n      webpackConfig.plugins.push(plugin);\n    });\n    webpackConfig.postcss = siteWebpack.postcss;\nwebpackConfig.resolve.alias = siteWebpack.resolve.alias;\n\nreturn webpackConfig;\n\n},\n  getComponentPathLine: function(componentPath) {\n    const name = path.dirname(componentPath).split('/').pop();\n    const dir = '../' + path.dirname(componentPath).split('../react/')[1];\n    return 'import ' + name + ' from \\'' + dir + '\\';';\n  },\n  styleguideDir: '../styleguide',\n  assetsDir: '../../',\n  template: './client-src/webpack/styleguide.template.html'\n};\n```\nclient-src/webpack/webpack.config.js\n```\n'use strict'\nconst webpack = require('webpack');\nconst path = require('path');\nconst ExtractTextPlugin = require(\"extract-text-webpack-plugin\");\nconst config = require(\"./base.config\")\nconst server_entries = [\n  'react-hot-loader/patch',\n  'webpack/hot/only-dev-server',\n  'webpack-dev-server/client?http://127.0.0.1:8888']\nconst PROJECT_DIR = path.dirname(path.dirname(__dirname));\nlet chunks = [];\nfor (let chunk in config.entry) {\n  if (!config.entry[chunk].indexOf('client-src/react/pages')) {\n    chunks.push(chunk);\n  }\n}\nfor (let entry in config.entry) {\n  if (entry !== \"js/nc\") {\n    config.entry[entry] = server_entries.concat([config.entry[entry]])\n  }\n}\nmodule.exports = Object.assign({}, config, {\n  devtool: \"inline-source-map\",\n  devServer: {\n        contentBase: \"./assets\",\n    proxy: {\n      '*': {\n        target: 'http://127.0.0.1:8000'\n      }\n    },\n        noInfo: true,\n        hot: true,\n        inline: true,\n        host: \"127.0.0.1\",\n    port: \"8888\",\n    },\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n    new ExtractTextPlugin(\"[name].css\"),\n    new webpack.optimize.CommonsChunkPlugin({\n      name: \"base\",\n      filename: \"js/base.js\",\n      minChunks: chunks.length,\n      chunks: chunks,\n    })\n  ]\n})\n``. Thank you! It worked :-). I triedes6-require`. It works. But not sure if it can be officially recommended. Anyways, I guess issue can be closed. Thank you :-). ",
    "FezVrasta": "I'm getting this with a CRA app that worked just fine yesterday :-/. So, I thought I could use the styleguideComponents property to override Preview, but all I get is an error...\nstyleguideComponents: {\n    Preview: './src/demo/Preview.jsx',\n  },\n```\n// Preview.jsx\n// @flow\nimport React from 'react';\nimport RsgPreview from 'rsg-components/Preview';\nexport default function Preview(props) {\n  return (\n    \n      foobar\n      \n\n  );\n}\n```\n```\n FAIL  Failed to compile\n./node_modules/react-styleguidist/lib/rsg-components/Playground/Playground.js\nModule not found: Can't resolve 'rsg-components/Preview' in '/Users/federicozivolo/foobar/react-components/node_modules/react-styleguidist/lib/rsg-components/Playground'\n```\nWhy?. Oh I thought that import was to import the original component. Isn't there any way to simply extend an existing component so that I don't have to reimplement all its logic?\nAbout Wrapper, I'll try thanks. Thanks it worked!. @gazpachu how do you decide when to show a given badge?. Oh I see, thanks. This is still an issue for me. I think the actual place where this should get fixed is the docgen, it should allow to do:\nconst Foo: React.StatelessFunctionalComponent<Props> = styled.div``;\nand expose the Props passed to the Foo type.\nI opened an issue some time ago already:\nhttps://github.com/reactjs/react-docgen/issues/314. I think  @sapegin wants the suggested alternative solution to be implemented . Still valid, very valid.\n. @sapegin may you point me to the right direction? What are the functions I will most likely need to change?. ",
    "jochienabuurs": "Could you post the solution plz? I'm having the same issue.... ",
    "daniloprates": "I'm having an issue importing a SCSS file, your solution might help.. ",
    "deanbrophy": "Just a note: I ran into this issue after ejecting create-react-app. The fix was adding a webpackConfig attribute to my styleguide.config.js.\njs\nmodule.exports = {\n  webpackConfig: require(\"./config/webpack.config.dev.js\"),\n};. ",
    "mittalabhas1": "Hey @chrisdrackett, I'm facing a similar issue with jquery. I'm using it from the window as window.$ and it says undefined. Could you point me to how you figured this out?. ",
    "kof": "Yes, the idea behind jss-isolate is exactly this. Also we are thinking of adding an option for shadow-dom like isolation \n. What about other things, can anything else in the users wp config break sg?. Well anything you rely on from the webpack config may be different in the users one, so its basically guaranteed that something can go wrong, I am not familiar with the code base yet to see what sg depends on.. I think the most streight forward way is to just let user always specify the webpackConfig, its also easy enough for the user to require it and pass it.\nThis way you have just one option instead of 2 and you can always modify whatever you want before giving it to sg.. We are optimizing here for the case where sg can work without any config right after install, right? Is it realistic anyways?. I think we have 3 logics for configuring which aimed to make the whole thing easier but potentially introduce to many options and at the end make it ambiguous. 1. Auto config finder 2. Path to a config option 3. config object. I personally would stick to one, its easier to document and understand the behavior.. I would reduce it to one property webpackConfig which can be  a string path to the config or an object.. To me it was at least not obvious that webpackConfig option will be deeply merged with the webpackConfigFile option. Its convenient , but not obvious.\n\nString doesn\u2019t make any advantage over require('./webpack.config.js') in my opinion\n\nyeah\n. > Merging: responsibility of the user or allow to pass an array of config objects?\nDo u have any other choice considered point 1?\n. Yeah, I think its not a big deal to import a deep-merge function and do it in  the config. Its more code, but its explicit.. @okonet I am not aware of decision details, it seems like react-jss would be a good fit here. In any case its easy. You can always create a SheetsRegistry and add the sheets to it and then get them all together as a CSS string.. Btw. WrappedComponent.name is not supported everywhere, haven't found caniuse data in this regard.. react-jss uses options.meta property if you pass it, otherwise it falls back to a component name https://github.com/cssinjs/react-jss/blob/master/src/index.js#L36. Why do you call them SomethingRenderer anyways and then replace the Renderer part in order to have nicer meta attributes on style tags? Why not to remove the Renderer thing from the name from the beginning? If it is not a container component, it is a renderer anyways, containers have no sheets.. Btw. latest react-jss also passes classes object to the component additionally to the sheet.. Migration should be trivial.. > Because I have components without Renderer but they don\u2019t have any markup.\nSo they are containers? Why is it important to identify a container by name? Why not call a container component  SomethingContainer?. > @kof What about merging with custom styles and passing theme object?\nWhy are you using context to pass the config and take the user styles overrides if they are basically global?  Why not just merge them in each styles definition?\n. Ok should we make this whole styles discussion a separate thing? I see 2 possibilities: we add SheetsRegistry right now here. Otherwise I need to implement a ThemeProvider in react-jss. It is planned anyways. Right now the first one is faster.. So should I do it or it is already clear enough? . Should it be on top of this branch? feat-static-rendering. Ok I have added the code for sheets aggregation, but I couldn't test it, somebody need to show me how to kick this all off, or maybe it is right now in a broken state?. Ok, I have finished the SSR integration for JSS. I needed to do 2 suboptimal things, because of \"react-html-document\"  component limitations.\n\nWe need to get the styles used by the application before we render the document. That module assumes we don't. So I needed to render the app to string first and then pass it to HtmlDocument inside of a div with dangerouslySetInnerHTML.\n\nHtmlDocument abstraction doesn't give any option to define an attribute on server-side rendered style tag, in order to delete that tag once js kicks in I currently remove the first tag, but it will break if you add more style tags on the server and they will come first.\n. Yes, simple template string like here. Or optionally own document renderer component without that dependency.. > How own renderer would help us here?\n\n\nIt would specify an id for the ssr style tag.\n\nIt would accept content as an html string and incapsulate  dangerouslySetInnerHTML. Optionally this can be done by sending a pr to that original package and make this possible.. I think I can make it happen. @okonet not yet, could find time right now, because on the trip. Will be hard, I have a great  deal of issues on jss project.. @sapegin @ignore sounds exactly right! Just tried, we currently render it as text in description field, I assume rs needs to handle this prop?. We can remove the custom generateClassName now, right? https://github.com/styleguidist/react-styleguidist/blob/next/src/styles/setupjss.js#L9. Why do you save your file with errors? In any case you need to fix that error and showing errors as fast as possible is a good thing.. We lack the right solution here, its obviously not removing fast errors, its making the errors reading experience better without jumps.. Mb separate view for errors, like a sidebar console. Btw why not to rethrow errors into the dev tools console?. Or render an overlay above the component in its previous working state and write the error there, so that there is no jumps and additionally throw it into the dev tools console so that we see the stack trace which is currently not available and I already had some pain with this.. > That\u2019s closer, yeah ;-) The only issue is when error is much taller than the rendered component.\n\nscroll it, set min height. Btw. the overlay can be bigger then the orgiinal component, it can start at the same top position and go down, similar to how browser implement alert boxes, it can be really big. Just set the max height and make it scrollbar.\n . By min-height I ment a min-height that is always defined, not just when an error comes, but with my previous suggestion you don't need a min-height.. > So it would overlap the code? But I\u2019m also thinking about something like that.\nyes, thats fine, it can be a bit transparent and closable.. > but keep in mind that the list of non-inherited properties was removed from \nI never published the version non-inherited props list, I guess you started using it from the master. \nAlso I will soon work on the next version of jss-isolate which will bring them back in a better quality using a database + isolation against cascades.. Lets do the research, which tools are the best, who is maintaining them, maybe they can help integrating.. Looks nice, but a service \u2026. More questions:\n\nWhere would you want to store the images? Repository? \nHow big can images folder grow? \n\nHow can we snapshot in different browsers? Karma? . Depends on how we want it to work. A third-party tool might be also used as  a dependency and integrated into sg as well as sg might provide whatever is required to work with third-party tools nicely.. @n1313 I think the way you described, you would be creating screenshots of the entire document with styleguidist UI elements, which means if styleguidist changes the ui, your tests will all break. Am I wrong?. I haven't tried yet, but from what I can see we need to be able to:\n\n\ncreate snapshots for each component without the sg ui\n\nwhen getting snapshot mismatches, the report should point to the exact component\n\nI think those things is what sg needs to enable if everything else works out of the box. But yet, lets compile the list of tools for the job, find the best once and see how we can support them in a generic way.\nI have started the list in the main description, please update it or post your suggestions so someone else can update.. > It's not \"each component\", it's \"each test\". \nEach code block in styleguidist at the end renders one react component. So visually you always end up with one component. But you can call it whatever you want, I think you know what I mean.\n\nresult of some scripted interaction like a click \n\n~~So those visual testing tools provide API's for interactions to be made before a screenshot will be taken?~~\nYeah I see that backstopjs has \"Simulate user interactions with CasperJS scripts.\"\n. Any online example that demonstrates the bug?. Yes, -webkit-text-fill-color causes this, now the question is why suddenly?  I don't think initize has changed in this between those versions.. actually what version of initize has been used before?. So it is the update to the latest jss-isolate!\n\nWhat we can do now - overwrite those trouble making props during jss-isolate setup:\n\njs\njss.use(isolate({\n  reset: ['all', {\n    boxSizing: 'border-box'\n  }]\n}))\n\nCreate a separate, isolated issue regarding those props on jss-isolate. Ideally find all of the problematic props. I am still not sure why they behave differently on safari. We will probably have to remove them from initize.\n. Oh yes, in that case it extends inherited initials object with your object https://github.com/cssinjs/jss-isolate/blob/master/src/index.js#L29 and those problematic props are comming from the inherited list are https://github.com/iamstarkov/initize/blob/master/inherited.js. https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-text-fill-color is not standardized yet. Initize is generating those props from mdn database, I will have to check if we have flag for non-standard properties and remove them all in one go, otherwise will just have to blacklist them specifically.. yes, \"all\" means inherited properties and non-inherited in one list, you require the list you want.. Fixed css-initials package, removed all non-standard props.. released css-initials and jss-isolate. please update jss-isolate to 5.1.0 and I hope this can be closed. this sort by default makes sense, evtl optionally could be disabled, but I don't care right now about this, I hate manually decide what is more important and most of the time just put  require stuff first. Btw this should be an eslint feature which also works with --fix. One suggestion to validate users reaction could be to release a beta first and see if any one else has  hard feelings about this change. In general prettier showed that good automated defaults are well accepted by the community.. Btw. having this in eslint would completely solve the problem as you would shift this decision to the user.. \n",
    "iamstarkov": "yo, @sapegin, is there any release/changelog notes for v5-beta? 5.0.0-beta8 is available through npm, but i struggle to try it out wo/ aforementioned notes or/and migration path. can you help?. @sapegin how does it look on small screens? we used to hide sidebar and props for small screens. and make preview container as wide as possible. i checked it now, nvm preview component seems good. @sapegin its very nice. ",
    "cef62": "Thanks @sapegin, let me knows you want me to change something!\n\nUsing indexes looks fragile (what if you add or move an example?) but I have no better idea how to implement it.\n\nI agree with you but I didn't want to touch too much your current code structure and all texts and fenced blocks are stored in a single array with just numeric indexes. Anyway I don't think should be a real problem because the index will change only if you add other texts or fenced blocks to the readme file and that shouldn't happen while you are debugging a single example. \nProbably the only problematic scenario is if you bookmark a single example and then the readme file changes. \nI think I can get a more robust solution but that would involve the user somehow to explicitly always specify an ID for the fenced block; personally, as user, I'd prefer avoiding it but it's a viable option.\n. > We need to do something with the UI. Right now it\u2019s inconsistent and a bit too loud for such a feature (But I we can merge it and think more later.)\nYep the UI is not that good... my intention was to understand if you'd like the feature before thinking on the look & feel. \n\nOtherwise it\u2019s great ;-)\nThanks :)\n\nI've addressed your comments, let me know if you want further tweaks.\n. I was thinking to move the link to isolate a single example to the upper-right of the rendered fenced block. Something similar the link you already have in place in the upper-right corner of every rendered component.\nWhat do you think? Would you like I add it to the PR?\n. Great! I'll add it to the PR.\n. I've made the discussed changes, let me know if it's ok for you!\n. Thanks! I'm happy you liked the addition \ud83d\udc4d \n. I've rebased upon master and fixed as you asked.\nIf Travis is happy let me know if there's anything else I can improve or if is ok for you ;)\n. I'm not sure of why Travis is failing only in one task of one build... any suggestions?\n. Yes @sapegin that plugin system is on top of my todo list since xmas but until April my work commitments are taking all my available time.\nI've some rough idea on how that system could be implemented, I'll share those as soon as possible (April). If in the meantime someone else want to start working on the plugin system I'll be happy to add my contribute.\n\nthey actually update the source code of the examples on state change so you can commit it to the repo.\n\n@okonet yes that is definitely something I'd love to have in styleguidist!. I agree with @okonet, I would love have both possibilities: \n\nadd isolated features/plugins in tabs (around content)\nextend/augment rendered content (inside content)\n\nWhile working on snapguidist I had some idea on that. Now that I've closed a very important deadline at work I can finally work on it. Next days I will share more about this with you!. I've started digging through the new 5.x implementation. I really like the new  AST based parsing, great job @sapegin!\nAt the moment the part bugging me the most is that there's no effective way to assign a unique ID to every parsed snippet. This is something very important to support a plugin API in my opinion, in snapguidist for example we could use it to avoid unnecessary execution of unchanged snippets.\nAt the moment the most viable solution I can think of, but I'm not fond of it, is to support a sort of front matter where the user can expose data to the plugins and configure them.\nWhat I think could be a interesting way to expose a plugin API is to wrap the RSG component, we want expose as customizable parts, with an HoC connected to styleguidist configuration and access the registered plugin. Every plugin register itself and the final user control the registering order. That approach would allow a single plugin to customize any required aspect of the UI.\nI want to share a more complete idea as soon as possible. Next two weeks I'll be participating to Jsconfit and Codemotion Amsterdam, then I'll be finally able to give my full attention to the plugin API and snapguidist.\nMeanwhile what do you think of the idea of using HoCs to connect plugins to styleguidist? And, do you have any better idea on how to assign a unique ID to every snippet of code?\n. > I think unique ID generation should be part of the core but I don\u2019t know how to do expect use just indexes like Jest does itself\nJest use the assertion title as unique ID but we don't have it. This is why I'm thinking of a front matter approach. That approach would also open up snippet-level configuration of plugins.\n\nAbout HOCs: sounds like a good idea, do you know how we could easily implement that?\n\nI've a couple of ideas and it's what I hope to share in more detail asap.\n\nI also think that we should start from predefined extension points (toolbars and tabs) like I describe in #426 \n\nI definitely agree with you!. > but I\u2019m afraid we can\u2019t require users to write it for each example \nYep, this is my exact feeling about it. But could/should be optional. I mean the plugin author could support an explicit title/ID/whatever to support specific features, if the user doen't care about those features (like test execution optimization) can simply skip the front matter. \n\nWe could use the text in a paragraph in front of the example.\n\nThat is a nice idea to avoid unnecessary repetitions on every snippet. \n. > So, yeah, we could generate these IDs in the core and pass them to your plugin\u2019s tab component or whatever ;-)\nYes and no. We can just recognize snippet positional index and their content. If the user change the snippet order and the content we don't have any way to be sure of which snippet whas assigned to which ID.. > We can't assume there's always going to be a text above the snippet, right?\nNo we can't\n\nAfaik we don't have evidence of any performance issue, therefore I wouldn't worry about it.\n\nI was thinking not only about snapguidist but also to possibly more heavy integration that could benefit from more optimization.\nAnyway I agree with you that is not fundamental, but a nice addition to have anyway.. I also like the 2nd variant. \nIf I understand correctly any plugin it will produce an object containing several configuration hooks (toolbarButtons is the only one at the moment). react-styleguidist will chain all configurations from all registered plugins in the given order. Is that right? I like the approach!. I agree! Do you have a working branch or is just an idea? I'd love to help on this ;)\nI'm finally done with conferences for a little while and I'll finally be able to contribute to snapguidist and styleguidist.. Ok thanks! I'll look at it and I'll see how I can contribute to move toward the API you proposed!. I wasn't sure if you liked the idea, I'll set to 500ms. It's fast enough to not bother user not interested in it and enough to let other user benefit from the feature.\n. I'll do it :) I wasn't aware of validateConfig()\n. ops, my bad sorry!\n. Great! I like configureServer. As discussed on gitter I'll remove it from the public API. ",
    "gravitycode": "Its works! Thank you @sapegin :)\n. ",
    "benjamingrobertson": "@sapegin Thanks for pointing me over there. Switching from node 5.11.0 to 7.0.0 resolved the issue for me.. ",
    "jiayihu": "I suggest also trying optimize-js for styleguide builds to improve time to first render. I tried it with a project where the bundle.js is about 2.0MB and noticed some improvements in the Timeline:\nAvarage DOMContentLoaded time without optimize-js: 3.11s\nAvarage DOMContentLoaded time with optimize-js: 2.73s\nNot overkill, but still useful speed gain I believe.. ",
    "frontend-3": "@sapegin does this global.PanelHeader = require('./PanelHeader').default; really work? I was trying but I had this error unexpected token import  when I try to restart webpack . @sapegin I'm trying this:\njs\nconst path = require('path');\nmodule.exports = {\n  // ...\n  updateWebpackConfig(webpackConfig) {\n    webpackConfig.entry.push(path.join(__dirname, 'path/to/script.js'));\n    webpackConfig.entry.push(path.join(__dirname, 'path/to/styles.css'));\n    global.AddIcon = require('./src/assets/icons/add-icon.svg');\n    return webpackConfig;\n  },\n};\nI'm using react-svg-loader \ud83e\udd14 . Hey @sapegin I just found this section on FAQ, I used in that way and worked perfectly \u2728 \nBtw, I had the react-svg-loader as a loader in the method updateWebpackConfig, sorry for not including it.. ",
    "ohtanya": "@stinoga did you end up resolving this issue? I was able to import PanelHeader within my Panel but I'm losing the props for PanelHeader. Are you able to display the props for both components? . ",
    "madjam002": "I was using findAllExportedComponentDefinitions with my PR (#283) and it works just fine with various files exporting default and named components.. Sounds good, I'll also split it into multiple PRs. Thanks \ud83d\ude03 . Just FYI - I'll just wait for next to be merged into master as we're happy using my fork internally for now and it would be great to get some of these ideas explored further once next is merged.. ",
    "tomsowerby": "Witnessed using the following:\nNode v4.5.0\nNpm v2.15.9. ",
    "gregorskii": "This would work great for inlining external CSS as well.. ",
    "bennam": "Found a different issue in FF with the border misalignment which I've fixed. Should be fine in Chrome, FF, Safari and Opera now :-). Added polyfill to index.js. ",
    "joepio": "@stinoga Nice! Could you perhaps share how you created this wrapper that made the store available?. Thanks for the quick reply, @sapegin! \nThe beta seems to work better! No more JSON import issues. And I think I've found the issue regarding the aliases. Using aliases somehow called a defective function in some dependency not related to Styleguidist. When I fixed that issue, the components started working again. I still find it odd that my normal build worked fine, since that also relied on that same defective dependency and aliases.\nWhen I tried to re-use my project\u2019s Webpack config file, I got error messages from all components that HappyPack for Babel cannot be found:\nMinimal styleguide.config:\njavascript\nmodule.exports = {\n  components: './app/components/**/*.jsx',\n  webpackConfigFile: './webpack/common.config.js',\n};\nErrors:\n````\nFailed to compile.\nError in ./app/components/Button/index.jsx\nModule build failed: AssertionError: HappyPack: plugin for the loader 'babel' could not be found! Did you forget to add it to the plugin list?\n @ ./~/react-styleguidist/loaders/styleguide-loader.js!./~/react-styleguidist/lib/index.js 5:10-77\n````\nHowever, the Happypack babel plugin is present in /webpack/common.config.js as you can see in my first post.\nSo then I tried including a custom webpackConfig based on my common.config.js:\n/styleguide.config.js\n```` javascript\nconst path = require('path');\nconst HappyPack = require('happypack');\nconst autoprefixer = require('autoprefixer');\nmodule.exports = {\n  serverPort: 5000,\n  sections: [\n    {\n      name: 'Card Components',\n      content: './app/components/Card/Card.md',\n      components: './app/components/Card/.jsx',\n    },\n  ],\n  components: './app/components//.jsx',\n  showCode: false,\n  webpackConfig: {\n    resolve: {\n      modulesDirectories: ['./node_modules'],\n      extensions: ['', '.js', '.jsx', '.ts'],\n      alias: {\n        components: path.resolve('app/components'),\n        containers: path.resolve('app/containers'),\n        helpers: path.resolve('app/helpers'),\n        models: path.resolve('app/models'),\n        react: path.resolve('./node_modules/react'),\n        state: path.resolve('app/state'),\n      },\n    },\n    module: {\n      loaders: [\n        {\n          test: /.jsx?$/,\n          loader: 'babel',\n          include: path.join(__dirname, 'app'),\n          exclude: /node_modules/,\n        }, {\n          test: /.scss$/,\n          include: path.join(__dirname, 'app'),\n          loader: 'style!css-loader!postcss-loader!sass-loader',\n        },\n      ],\n      plugins: [\n        new HappyPack({\n          id: 'babel',\n          threads: 4,\n          loaders: ['babel-loader?cacheDirectory'],\n        }),\n      ],\n      postcss: [autoprefixer({ browsers: ['last 2 versions'] })],\n    },\n    entry: [\n      path.join(__dirname, 'app/components/shared/styleguide.scss'),\n      path.join(__dirname, 'app/components/shared/init.scss'),\n    ],\n  },\n};\n````\nThis works exactly as it should :).\nThanks for the help! I think this issue can be closed.. Great! Let me know if I can test something.. Hi @sapegin, \nThanks for the heads-up. I tried plugin merging again, but unfortunately, it doesn't seem to be working correctly. I get this error for basically all jsx files:\n````\nFailed to compile.\nError in ./app/components/ArgumentShow/index.jsx\nModule parse failed: /Users/joep/Dev/aod_demo/app/components/ArgumentShow/index.jsx Unexpected token (32:2)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected token (32:2)\n @ ./~/react-styleguidist/loaders/styleguide-loader.js!./~/react-styleguidist/lib/index.js 36:22-95\n````\nWhen I just use my old config, it works fine!. So this one works:\n````javascript\nconst common = require('./webpack/common.config');\nmodule.exports = {\n  webpackConfigFile: './webpack/common.config.js',\n  serverPort: 5000,\n  sections: [\n    {\n      name: 'Card Components',\n      content: './app/components/Card/Card.md',\n      components: './app/components/Card/.jsx',\n    },\n  ],\n  components: './app/components/*/index.jsx',\n  showCode: false,\n  webpackConfig: {\n    resolve: common.resolve,\n    module: {\n      loaders: [\n        {\n          test: /.jsx?$/,\n          loader: 'babel',\n          include: path.join(__dirname, 'app'),\n          exclude: /node_modules/,\n        }, {\n          test: /.scss$/,\n          include: path.join(__dirname, 'app'),\n          loader: 'style!css-loader!postcss-loader!sass-loader',\n        }, {\n          test: /.md$/,\n          loader: 'raw-loader',\n        },\n      ],\n      plugins: [\n        new HappyPack({\n          id: 'babel',\n          threads: 4,\n          loaders: ['babel-loader?cacheDirectory'],\n        }),\n      ],\n      postcss: [autoprefixer({ browsers: ['last 2 versions'] })],\n    },\n    entry: [\n      path.join(__dirname, 'app/components/shared/styleguide.scss'),\n      path.join(__dirname, 'app/components/shared/init.scss'),\n    ],\n  },\n};\n````\nAnd this throws the Module parse failed errors:\njavascript\nmodule.exports = {\n  webpackConfigFile: './webpack/common.config.js',\n  serverPort: 5000,\n  sections: [\n    {\n      name: 'Card Components',\n      content: './app/components/Card/Card.md',\n      components: './app/components/Card/*.jsx',\n    },\n  ],\n  components: './app/components/**/index.jsx',\n  showCode: false,\n};\nAnd here's my common.config.js:\n````javascript\nconst path = require('path');\nconst autoprefixer = require('autoprefixer');\nconst webpack = require('webpack');\nconst TARGET = process.env.npm_lifecycle_event;\nprocess.env.BABEL_ENV = TARGET;\nconst common = {\n  output: {\n    path: ${__dirname}/../dist/,\n    filename: 'bundle.js',\n  },\nresolve: {\n    modulesDirectories: ['./node_modules'],\n    extensions: ['', '.js', '.jsx', '.ts'],\n    alias: {\n      components: path.resolve('app/components'),\n      containers: path.resolve('app/containers'),\n      helpers: path.resolve('app/helpers'),\n      models: path.resolve('app/models'),\n      state: path.resolve('app/state'),\n      static: path.resolve('static'),\n    },\n  },\nmodule: {\n    loaders: [\n      {\n        test: /.json$/,\n        loader: 'json-loader',\n      },\n      {\n        test: /.png$/,\n        loader: 'file?name=[name].[ext]',\n      }, {\n        test: /.jpg$/,\n        loader: 'file?name=[name].[ext]',\n      }, {\n        test: /.md$/,\n        loader: 'raw-loader',\n      },\n    ],\n  },\nplugins: [\n    new webpack.ProvidePlugin({\n      fetch: 'imports?this=>global!exports?global.fetch!whatwg-fetch',\n    }),\n    new webpack.DefinePlugin({\n      'process.env.ELASTICSEARCH_URL': JSON.stringify(process.env.ELASTICSEARCH_URL),\n      'process.env': {\n        NODE_ENV: process.env.NODE_ENV === 'development' ? '\"development\"' : '\"production\"',\n        ARGU_API_URL: JSON.stringify(process.env.ARGU_API_URL),\n      },\n      DEVELOPMENT: process.env.NODE_ENV === 'development',\n      PRODUCTION: process.env.NODE_ENV === 'production',\n      CLIENT: true,\n    }),\n    new webpack.IgnorePlugin(/^.\\/locale$/, /moment$/),\n  ],\n  postcss: [autoprefixer({ browsers: ['last 2 versions'] })],\n};\nmodule.exports = common;\n````. ",
    "timurista": "https://github.com/styleguidist/react-styleguidist/blob/master/docs/FAQ.md#how-to-change-the-layout-of-a-style-guide is out of date. It is now: https://github.com/styleguidist/react-styleguidist/blob/master/docs/Cookbook.md#how-to-connect-redux-store. Specifically for adding redux to the store.. @drewandrew https://github.com/styleguidist/react-styleguidist/blob/master/docs/Thirdparties.md#redux. ",
    "drewandrew": "@timurista @sapegin https://github.com/styleguidist/react-styleguidist/blob/master/docs/Cookbook.md#how-to-connect-redux-store no longer exists. Anywhere else you would direct me/us for an example? I'm specifically looking to dispatch actions from a styleguidist README.md example.. ",
    "mohammedelzanaty": "I think if you make [--- path.resolve('app/components')  ---] path.resolve(__dirname, 'app/components')\nit will work bcoz it work for me . ",
    "codecov-io": "Current coverage is 91.66% (diff: 97.61%)\n\nMerging #288 into next will increase coverage by 0.24%\n\ndiff\n@@               next       #288   diff @@\n==========================================\n  Files            69         70     +1   \n  Lines           921        960    +39   \n  Methods         190        200    +10   \n  Messages          0          0          \n  Branches        174        188    +14   \n==========================================\n+ Hits            842        880    +38   \n- Misses           79         80     +1   \n  Partials          0          0\n\nPowered by Codecov. Last update 6305d35...ba20214. # Codecov Report\nMerging #306 into next will increase coverage by 0.1%.\n\n```diff\n@@            Coverage Diff            @@\nnext     #306     +/-\n=========================================\n+ Coverage   91.68%   91.78%   +0.1%   \n=========================================\n  Files          70       70           \n  Lines         962      962           \n  Branches      188      188           \n=========================================\n+ Hits          882      883      +1   \n+ Misses         80       79      -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 90% <100%> (+10%) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fef6363...1427eee. Read the comment docs.. # Codecov Report\nMerging #308 into next will decrease coverage by -0.04%.\n\n```diff\n@@            Coverage Diff             @@\nnext     #308      +/-\n==========================================\n- Coverage   91.78%   91.75%   -0.04%   \n==========================================\n  Files          70       70            \n  Lines         962      958       -4   \n  Branches      188      192       +4   \n==========================================\n- Hits          883      879       -4   \n  Misses         79       79\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ponents/TableOfContents/TableOfContentsRenderer.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Link/LinkRenderer.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Sections/SectionsRenderer.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Components/Components.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| ...rc/rsg-components/Components/ComponentsRenderer.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Section/SectionRenderer.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/StyleGuide/StyleGuide.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e47ce7b...a39db28. Read the comment docs.. # Codecov Report\nMerging #309 into next will not change coverage.\n\n```diff\n@@           Coverage Diff           @@\nnext     #309   +/-\n=======================================\n  Coverage   91.78%   91.78%         \n=======================================\n  Files          70       70         \n  Lines         962      962         \n  Branches      188      188         \n=======================================\n  Hits          883      883         \n  Misses         79       79\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e47ce7b...a54067a. Read the comment docs.. # Codecov Report\nMerging #310 into next will increase coverage by 0.02%.\n\n```diff\n@@            Coverage Diff             @@\nnext     #310      +/-\n==========================================\n+ Coverage   91.76%   91.78%   +0.02%   \n==========================================\n  Files          70       70            \n  Lines         959      962       +3   \n  Branches      192      195       +3   \n==========================================\n+ Hits          880      883       +3   \n  Misses         79       79\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 96.42% <\u00f8> (\u00f8) | :white_check_mark: |\n| loaders/styleguide-loader.js | 93.33% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Playground/Playground.js | 75.75% <100%> (\u00f8) | :white_check_mark: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <100%> (+10%) | :white_check_mark: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 90% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Components/Components.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Sections/Sections.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 85.71% <100%> (-14.29%) | :x: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8d2bd58...ce40a90. Read the comment docs.. # Codecov Report\nMerging #311 into next will increase coverage by 0.56%.\n\n```diff\n@@            Coverage Diff             @@\nnext     #311      +/-\n==========================================\n+ Coverage   91.76%   92.32%   +0.56%   \n==========================================\n  Files          70       70            \n  Lines         959     1003      +44   \n  Branches      192      210      +18   \n==========================================\n+ Hits          880      926      +46   \n+ Misses         79       77       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Components/Components.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/StyleGuide/StyleGuide.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Section/Section.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Sections/Sections.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| scripts/schemas/config.js | 97.05% <\u00f8> (+0.63%) | :white_check_mark: |\n| loaders/styleguide-loader.js | 97.5% <\u00f8> (+4.16%) | :white_check_mark: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (+10%) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8d2bd58...1871bf3. Read the comment docs.. # Codecov Report\nMerging #318 into next will increase coverage by 2.17%.\nThe diff coverage is 96.72%.\n\n```diff\n@@            Coverage Diff             @@\nnext     #318      +/-\n==========================================\n+ Coverage   92.58%   94.75%   +2.17%   \n==========================================\n  Files          75       75            \n  Lines         998      992       -6   \n  Branches      203      201       -2   \n==========================================\n+ Hits          924      940      +16   \n+ Misses         74       52      -22\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 85.71% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Section/SectionRenderer.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| scripts/schemas/config.js | 96.96% <100%> (+0.09%) | :white_check_mark: |\n| src/rsg-components/Heading/HeadingRenderer.js | 100% <100%> (\u00f8) | |\n| .../rsg-components/TableOfContents/TableOfContents.js | 95.65% <100%> (\u00f8) | :white_check_mark: |\n| loaders/utils/getExamples.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| loaders/utils/filterComponentsWithExample.js | 100% <100%> (\u00f8) | :white_check_mark: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0d47028...476fea4. Read the comment docs.. # Codecov Report\nMerging #321 into next will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nnext     #321   +/-\n=======================================\n  Coverage   91.84%   91.84%         \n=======================================\n  Files          70       70         \n  Lines         956      956         \n  Branches      193      193         \n=======================================\n  Hits          878      878         \n  Misses         78       78\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7c382c4...0ded3ad. Read the comment docs.. # Codecov Report\nMerging #322 into next will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nnext     #322   +/-\n=======================================\n  Coverage   91.84%   91.84%         \n=======================================\n  Files          70       70         \n  Lines         956      956         \n  Branches      193      193         \n=======================================\n  Hits          878      878         \n  Misses         78       78\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 066b03f...7224800. Read the comment docs.. # Codecov Report\nMerging #329 into next will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nnext     #329   +/-\n=======================================\n  Coverage   94.77%   94.77%         \n=======================================\n  Files          75       75         \n  Lines         995      995         \n  Branches      202      202         \n=======================================\n  Hits          943      943         \n  Misses         52       52\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Examples/Examples.js | 83.33% <\u00f8> (\u00f8) | :white_check_mark: |\n| src/rsg-components/Sections/SectionsRenderer.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c095643...f4ba682. Read the comment docs.. # Codecov Report\nMerging #330 into master will decrease coverage by <.01%.\nThe diff coverage is 97.95%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #330      +/-\n==========================================\n- Coverage   94.77%   94.77%   -0.01%   \n==========================================\n  Files          75       78       +3   \n  Lines         995     1014      +19   \n  Branches      202      211       +9   \n==========================================\n+ Hits          943      961      +18   \n- Misses         52       53       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 96.96% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/getStyleguide.js | 100% <100%> (\u00f8) | |\n| scripts/create-server.js | 90.9% <100%> (\u00f8) | :arrow_up: |\n| ...sg-components/HtmlDocument/HtmlDocumentRenderer.js | 100% <100%> (\u00f8) | |\n| loaders/styleguide-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/HtmlDocument/HtmlDocument.js | 100% <100%> (\u00f8) | |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Examples/Examples.js | 83.33% <100%> (\u00f8) | :arrow_up: |\n| src/utils/utils.js | 96.92% <85.71%> (-1.44%) | :arrow_down: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2f80d73...c82a157. Read the comment docs.. # Codecov Report\nMerging #332 into next will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nnext     #332      +/-\n==========================================\n+ Coverage   93.71%   93.71%   +<.01%   \n==========================================\n  Files          74       74            \n  Lines        1034     1035       +1   \n  Branches      214      214            \n==========================================\n+ Hits          969      970       +1   \n  Misses         65       65\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/chunkify.js | 96.42% <100%> (+0.13%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 333592e...400fa6e. Read the comment docs.. # Codecov Report\nMerging #342 into next will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nnext     #342   +/-\n=======================================\n  Coverage   94.77%   94.77%         \n=======================================\n  Files          75       75         \n  Lines         995      995         \n  Branches      202      202         \n=======================================\n  Hits          943      943         \n  Misses         52       52\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Heading/HeadingRenderer.js | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 25d3221...324347c. Read the comment docs.. # Codecov Report\nMerging #343 into next will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n```diff\n@@            Coverage Diff             @@\nnext     #343      +/-\n==========================================\n+ Coverage   94.77%   94.78%   +0.01%   \n==========================================\n  Files          75       75            \n  Lines         995      998       +3   \n  Branches      202      203       +1   \n==========================================\n+ Hits          943      946       +3   \n  Misses         52       52\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 77.02% <100%> (+0.63%) | :white_check_mark: |\n| src/styles/theme.js | 100% <100%> (\u00f8) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 02aba04...df33c38. Read the comment docs.. # Codecov Report\nMerging #344 into next will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nnext     #344   +/-\n=======================================\n  Coverage   94.77%   94.77%         \n=======================================\n  Files          75       75         \n  Lines         995      995         \n  Branches      202      202         \n=======================================\n  Hits          943      943         \n  Misses         52       52\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 90% <\u00f8> (\u00f8) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 02aba04...6362158. Read the comment docs.. # Codecov Report\nMerging #347 into next will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n```diff\n@@            Coverage Diff             @@\nnext     #347      +/-\n==========================================\n+ Coverage   94.45%   94.48%   +0.03%   \n==========================================\n  Files          73       73            \n  Lines         992      998       +6   \n  Branches      202      205       +3   \n==========================================\n+ Hits          937      943       +6   \n  Misses         55       55\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 78.75% <100%> (+1.72%) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 306ea95...d3feea5. Read the comment docs.. # Codecov Report\nMerging #353 into next will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n```diff\n@@            Coverage Diff            @@\nnext    #353      +/-\n=========================================\n+ Coverage   94.36%   94.4%   +0.04%   \n=========================================\n  Files          73      73            \n  Lines        1011    1019       +8   \n  Branches      207     209       +2   \n=========================================\n+ Hits          954     962       +8   \n  Misses         57      57\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4450a8f...9036e6f. Read the comment docs.. # Codecov Report\nMerging #361 into next will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nnext     #361   +/-\n=======================================\n  Coverage   94.41%   94.41%         \n=======================================\n  Files          73       73         \n  Lines        1021     1021         \n  Branches      210      210         \n=======================================\n  Hits          964      964         \n  Misses         57       57\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8cdc7a9...f4e7a5d. Read the comment docs.. # Codecov Report\nMerging #369 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #369   +/-\n=======================================\n  Coverage   94.12%   94.12%         \n=======================================\n  Files          74       74         \n  Lines        1038     1038         \n  Branches      220      220         \n=======================================\n  Hits          977      977         \n  Misses         61       61\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3fc8abd...2681aaa. Read the comment docs.. # Codecov Report\nMerging #372 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #372      +/-\n==========================================\n+ Coverage   92.57%   92.57%   +<.01%   \n==========================================\n  Files          74       74            \n  Lines        1050     1051       +1   \n  Branches      223      223            \n==========================================\n+ Hits          972      973       +1   \n  Misses         78       78\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e55150a...015876d. Read the comment docs.. # Codecov Report\nMerging #374 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #374   +/-\n=======================================\n  Coverage   92.57%   92.57%         \n=======================================\n  Files          74       74         \n  Lines        1051     1051         \n  Branches      223      223         \n=======================================\n  Hits          973      973         \n  Misses         78       78\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 88.37% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d6fcd0a...44426ed. Read the comment docs.. # Codecov Report\nMerging #377 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #377   +/-\n=======================================\n  Coverage   92.57%   92.57%         \n=======================================\n  Files          74       74         \n  Lines        1051     1051         \n  Branches      223      223         \n=======================================\n  Hits          973      973         \n  Misses         78       78\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/props-loader.js | 78.57% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 12b94ce...dc6ce04. Read the comment docs.. # Codecov Report\nMerging #379 into next will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nnext     #379   +/-\n=======================================\n  Coverage   93.73%   93.73%         \n=======================================\n  Files          74       74         \n  Lines        1038     1038         \n  Branches      211      211         \n=======================================\n  Hits          973      973         \n  Misses         65       65\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 90.9% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2b77970...0b11660. Read the comment docs.. # Codecov Report\nMerging #381 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #381   +/-\n=======================================\n  Coverage   92.57%   92.57%         \n=======================================\n  Files          74       74         \n  Lines        1051     1051         \n  Branches      223      223         \n=======================================\n  Hits          973      973         \n  Misses         78       78\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eef03cf...be0ef10. Read the comment docs.. # Codecov Report\nMerging #386 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #386   +/-\n=======================================\n  Coverage   92.57%   92.57%         \n=======================================\n  Files          74       74         \n  Lines        1051     1051         \n  Branches      223      223         \n=======================================\n  Hits          973      973         \n  Misses         78       78\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eef03cf...31504d5. Read the comment docs.. # Codecov Report\nMerging #392 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #392   +/-\n=======================================\n  Coverage   92.57%   92.57%         \n=======================================\n  Files          74       74         \n  Lines        1051     1051         \n  Branches      223      223         \n=======================================\n  Hits          973      973         \n  Misses         78       78\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 88.37% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Preview/Preview.js | 55.1% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d16f35...60ba051. Read the comment docs.. # Codecov Report\nMerging #394 into master will decrease coverage by 0.22%.\nThe diff coverage is 76.92%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #394      +/-\n==========================================\n- Coverage   94.28%   94.06%   -0.23%   \n==========================================\n  Files          82       82            \n  Lines        1138     1145       +7   \n  Branches      255      260       +5   \n==========================================\n+ Hits         1073     1077       +4   \n- Misses         61       64       +3   \n  Partials        4        4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/StyleGuide/StyleGuide.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/utils.js | 93.93% <50%> (-2.94%) | :arrow_down: |\n| src/rsg-components/Section/SectionRenderer.js | 90% <85.71%> (-10%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update feaa6b8...f2ddd58. Read the comment docs.\n. # Codecov Report\nMerging #395 into master will increase coverage by 1.1%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #395     +/-\n=========================================\n+ Coverage   92.57%   93.68%   +1.1%   \n=========================================\n  Files          74       83      +9   \n  Lines        1051     1156    +105   \n  Branches      223      245     +22   \n=========================================\n+ Hits          973     1083    +110   \n+ Misses         78       73      -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 90.47% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Code/CodeRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 94.11% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Logo/LogoRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 85.71% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Components/ComponentsRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Components/Components.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Link/LinkRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Styled/Styled.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Editor/EditorLoaderRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 47 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d16f35...1c2b6c7. Read the comment docs.\n. # Codecov Report\nMerging #399 into master will increase coverage by 2.16%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #399      +/-\n==========================================\n+ Coverage   93.12%   95.29%   +2.16%   \n==========================================\n  Files          76       76            \n  Lines        1062     1062            \n  Branches      226      226            \n==========================================\n+ Hits          989     1012      +23   \n+ Misses         73       50      -23\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Playground/Playground.js | 87.87% <0%> (+9.09%) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <0%> (+14.28%) | :arrow_up: |\n| src/rsg-components/Props/PropsRenderer.js | 97.5% <0%> (+16.25%) | :arrow_up: |\n| src/rsg-components/Examples/Examples.js | 100% <0%> (+16.66%) | :arrow_up: |\n| src/rsg-components/Examples/ExamplesRenderer.js | 100% <0%> (+50%) | :arrow_up: |\n| src/rsg-components/Sections/SectionsRenderer.js | 100% <0%> (+50%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f56e31c...37208a6. Read the comment docs.\n. # Codecov Report\nMerging #406 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #406   +/-\n=======================================\n  Coverage   95.29%   95.29%         \n=======================================\n  Files          76       76         \n  Lines        1063     1063         \n  Branches      226      226         \n=======================================\n  Hits         1013     1013         \n  Misses         50       50\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2ffa07f...b9ca512. Read the comment docs.\n. # Codecov Report\nMerging #409 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #409   +/-\n=======================================\n  Coverage   95.29%   95.29%         \n=======================================\n  Files          76       76         \n  Lines        1063     1063         \n  Branches      226      226         \n=======================================\n  Hits         1013     1013         \n  Misses         50       50\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...s/ExamplePlaceholder/ExamplePlaceholderRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cab9256...251af0d. Read the comment docs.\n. # Codecov Report\nMerging #412 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #412      +/-\n=========================================\n+ Coverage   95.29%   95.3%   +<.01%   \n=========================================\n  Files          76      76            \n  Lines        1063    1064       +1   \n  Branches      226     226            \n=========================================\n+ Hits         1013    1014       +1   \n  Misses         50      50\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/create-server.js | 91.66% <100%> (+0.75%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ff109fc...11a1d45. Read the comment docs.\n. # Codecov Report\nMerging #414 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #414   +/-\n======================================\n  Coverage    95.3%   95.3%         \n======================================\n  Files          76      76         \n  Lines        1064    1064         \n  Branches      226     226         \n======================================\n  Hits         1014    1014         \n  Misses         50      50\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 81e37aa...504f191. Read the comment docs.\n. # Codecov Report\nMerging #415 into master will decrease coverage by 0.69%.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster    #415     +/-\n========================================\n- Coverage    95.3%   94.6%   -0.7%   \n========================================\n  Files          76      78      +2   \n  Lines        1064    1113     +49   \n  Branches      226     246     +20   \n========================================\n+ Hits         1014    1053     +39   \n- Misses         50      60     +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/styles/setupjss.js | 100% <\u00f8> (\u00f8) | |\n| src/rsg-components/Editor/EditorLoaderRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/styles/jss-isolate/index.js | 79.16% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3e072c3...e5ecd70. Read the comment docs.\n. # Codecov Report\nMerging #416 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #416   +/-\n======================================\n  Coverage    94.6%   94.6%         \n======================================\n  Files          78      78         \n  Lines        1113    1113         \n  Branches      246     246         \n======================================\n  Hits         1053    1053         \n  Misses         60      60\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 99c0a8c...7c77c0d. Read the comment docs.\n. # Codecov Report\nMerging #417 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #417   +/-\n======================================\n  Coverage    94.6%   94.6%         \n======================================\n  Files          78      78         \n  Lines        1113    1113         \n  Branches      246     246         \n======================================\n  Hits         1053    1053         \n  Misses         60      60\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 80f9126...d9dd82f. Read the comment docs.\n. # Codecov Report\nMerging #418 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #418   +/-\n======================================\n  Coverage    94.6%   94.6%         \n======================================\n  Files          78      78         \n  Lines        1113    1113         \n  Branches      246     246         \n======================================\n  Hits         1053    1053         \n  Misses         60      60\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Logo/LogoRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 90.9% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Heading/HeadingRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Methods/MethodsRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Markdown.js | 90.47% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Props/PropsRenderer.js | 97.5% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6e86ab2...bc7c493. Read the comment docs.\n. # Codecov Report\nMerging #421 into master will decrease coverage by 1%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #421      +/-\n=========================================\n- Coverage    94.6%   93.6%   -1.01%   \n=========================================\n  Files          78      78            \n  Lines        1113    1125      +12   \n  Branches      246     247       +1   \n=========================================\n  Hits         1053    1053            \n- Misses         60      72      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 90.9% <\u00f8> (\u00f8) | :arrow_up: |\n| src/utils/utils.js | 86.11% <0%> (-10.77%) | :arrow_down: |\n| src/rsg-components/Playground/Playground.js | 78.37% <0%> (-9.51%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6e86ab2...4e803ed. Read the comment docs.\n. # Codecov Report\nMerging #425 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #425   +/-\n=======================================\n  Coverage   94.24%   94.24%         \n=======================================\n  Files          78       78         \n  Lines        1113     1113         \n  Branches      246      246         \n=======================================\n  Hits         1049     1049         \n  Misses         60       60         \n  Partials        4        4\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f16e716...6f62bcc. Read the comment docs.\n. # Codecov Report\nMerging #429 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #429   +/-\n=======================================\n  Coverage   94.24%   94.24%         \n=======================================\n  Files          78       78         \n  Lines        1113     1113         \n  Branches      246      246         \n=======================================\n  Hits         1049     1049         \n  Misses         60       60         \n  Partials        4        4\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7c29f6a...f82aaf5. Read the comment docs.\n. # Codecov Report\nMerging #431 into master will decrease coverage by 0.08%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #431      +/-\n==========================================\n- Coverage   94.24%   94.16%   -0.09%   \n==========================================\n  Files          78       78            \n  Lines        1113     1114       +1   \n  Branches      246      246            \n==========================================\n  Hits         1049     1049            \n- Misses         60       61       +1   \n  Partials        4        4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 50% <0%> (-1.03%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ccfb8e8...0cbd7d6. Read the comment docs.\n. # Codecov Report\nMerging #432 into master will decrease coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #432      +/-\n=========================================\n- Coverage   94.24%   94.2%   -0.05%   \n=========================================\n  Files          78      78            \n  Lines        1113    1121       +8   \n  Branches      246     247       +1   \n=========================================\n+ Hits         1049    1056       +7   \n- Misses         60      61       +1   \n  Partials        4       4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Section/SectionRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Logo/LogoRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ponents/PlaygroundError/PlaygroundErrorRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Markdown.js | 90.47% <100%> (\u00f8) | :arrow_up: |\n| ...ponents/TableOfContents/TableOfContentsRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 90.9% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Methods/MethodsRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Message/MessageRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ccfb8e8...a9a8c24. Read the comment docs.\n. # Codecov Report\nMerging #433 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #433   +/-\n=======================================\n  Coverage   94.28%   94.28%         \n=======================================\n  Files          82       82         \n  Lines        1138     1138         \n  Branches      255      255         \n=======================================\n  Hits         1073     1073         \n  Misses         61       61         \n  Partials        4        4\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update feaa6b8...08e8c17. Read the comment docs.\n. # Codecov Report\nMerging #434 into ui will increase coverage by 0.01%.\nThe diff coverage is 90%.\n\n\n```diff\n@@            Coverage Diff             @@\nui     #434      +/-\n==========================================\n+ Coverage   94.28%   94.29%   +0.01%   \n==========================================\n  Files          82       82            \n  Lines        1138     1140       +2   \n  Branches      255      257       +2   \n==========================================\n+ Hits         1073     1075       +2   \n  Misses         61       61            \n  Partials        4        4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 92.3% <87.5%> (+1.39%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update feaa6b8...538e891. Read the comment docs.\n. # Codecov Report\nMerging #440 into master will increase coverage by 0.05%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #440      +/-\n==========================================\n+ Coverage   94.32%   94.38%   +0.05%   \n==========================================\n  Files          82       82            \n  Lines        1146     1158      +12   \n  Branches      254      258       +4   \n==========================================\n+ Hits         1081     1093      +12   \n  Misses         61       61            \n  Partials        4        4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Playground/Playground.js | 84.37% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Preview/Preview.js | 50% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/getComponentFiles.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/client/evalInContext.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/props-loader.js | 79.31% <100%> (+0.73%) | :arrow_up: |\n| scripts/utils/sanitizeConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/utils.js | 96.96% <100%> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 97d233b...99d7e61. Read the comment docs.\n. # Codecov Report\nMerging #455 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #455   +/-\n=======================================\n  Coverage   94.32%   94.32%         \n=======================================\n  Files          82       82         \n  Lines        1146     1146         \n  Branches      254      254         \n=======================================\n  Hits         1081     1081         \n  Misses         61       61         \n  Partials        4        4\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 304ad22...d71fd81. Read the comment docs.\n. # Codecov Report\nMerging #474 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #474   +/-\n=======================================\n  Coverage   95.23%   95.23%         \n=======================================\n  Files          98       98         \n  Lines        1280     1280         \n  Branches      264      264         \n=======================================\n  Hits         1219     1219         \n  Misses         59       59         \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 83.33% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6b1be52...9055d4b. Read the comment docs.\n. # Codecov Report\nMerging #477 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #477   +/-\n=======================================\n  Coverage   94.21%   94.21%         \n=======================================\n  Files          96       96         \n  Lines        1262     1262         \n  Branches      276      276         \n=======================================\n  Hits         1189     1189         \n  Misses         69       69         \n  Partials        4        4\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c001dd5...72faf6d. Read the comment docs.\n. # Codecov Report\nMerging #482 into master will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #482      +/-\n==========================================\n+ Coverage   94.35%   94.39%   +0.04%   \n==========================================\n  Files          96       96            \n  Lines        1258     1285      +27   \n  Branches      273      279       +6   \n==========================================\n+ Hits         1187     1213      +26   \n- Misses         68       69       +1   \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 97.14% <100%> (-0.54%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 26a45bf...41ec558. Read the comment docs.\n. # Codecov Report\nMerging #484 into master will not change coverage.\nThe diff coverage is 89.47%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #484   +/-\n=======================================\n  Coverage   95.05%   95.05%         \n=======================================\n  Files          97       97         \n  Lines        1275     1275         \n  Branches      264      264         \n=======================================\n  Hits         1212     1212         \n  Misses         61       61         \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/config.js | 96.96% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 92.68% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Editor/Editor.js | 75% <\u00f8> (\u00f8) | :arrow_up: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/SectionHeading/SectionHeading.js | 25% <\u00f8> (\u00f8) | :arrow_up: |\n| ...omponents/SectionHeading/SectionHeadingRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Code/CodeRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 94.11% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5cb1798...c14b419. Read the comment docs.\n. # Codecov Report\nMerging #485 into master will increase coverage by 0.05%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #485      +/-\n==========================================\n+ Coverage   94.35%   94.41%   +0.05%   \n==========================================\n  Files          96       96            \n  Lines        1258     1289      +31   \n  Branches      273      283      +10   \n==========================================\n+ Hits         1187     1217      +30   \n- Misses         68       69       +1   \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 88.23% <0%> (-11.77%) | :arrow_down: |\n| ...-components/ToolbarButton/ToolbarButtonRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Table/TableRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Usage/Usage.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...ponents/TableOfContents/TableOfContentsRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/TabButton/TabButtonRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/slots/UsageTabButton.js | 100% <0%> (+33.33%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b913dcb...29e6d15. Read the comment docs.\n. # Codecov Report\nMerging #487 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #487   +/-\n=======================================\n  Coverage   94.35%   94.35%         \n=======================================\n  Files          96       96         \n  Lines        1258     1258         \n  Branches      273      273         \n=======================================\n  Hits         1187     1187         \n  Misses         68       68         \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0b87867...4aef7b5. Read the comment docs.\n. # Codecov Report\nMerging #488 into master will increase coverage by 0.18%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #488      +/-\n==========================================\n+ Coverage   94.35%   94.54%   +0.18%   \n==========================================\n  Files          96       96            \n  Lines        1258     1283      +25   \n  Branches      273      283      +10   \n==========================================\n+ Hits         1187     1213      +26   \n+ Misses         68       67       -1   \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/slots/UsageTabButton.js | 100% <100%> (+33.33%) | :arrow_up: |\n| ...ponents/TableOfContents/TableOfContentsRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Usage/Usage.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Table/TableRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Usage/UsageRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 07cf4d1...cb6576e. Read the comment docs.\n. # Codecov Report\nMerging #489 into master will decrease coverage by 0.06%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #489      +/-\n==========================================\n- Coverage   94.41%   94.34%   -0.07%   \n==========================================\n  Files          95       95            \n  Lines        1253     1256       +3   \n  Branches      273      274       +1   \n==========================================\n+ Hits         1183     1185       +2   \n- Misses         67       68       +1   \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 96.96% <66.66%> (-3.04%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1e2d8c3...27a06b5. Read the comment docs.\n. # Codecov Report\nMerging #490 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #490   +/-\n=======================================\n  Coverage   94.31%   94.31%         \n=======================================\n  Files          95       95         \n  Lines        1249     1249         \n  Branches      269      269         \n=======================================\n  Hits         1178     1178         \n  Misses         68       68         \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/TabButton/TabButtonRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4e252f4...dafbddd. Read the comment docs.\n. # Codecov Report\nMerging #492 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #492   +/-\n=======================================\n  Coverage   94.31%   94.31%         \n=======================================\n  Files          95       95         \n  Lines        1249     1249         \n  Branches      269      269         \n=======================================\n  Hits         1178     1178         \n  Misses         68       68         \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Text/TextRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4e252f4...f98cbfe. Read the comment docs.\n. # Codecov Report\nMerging #496 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #496   +/-\n=======================================\n  Coverage   94.41%   94.41%         \n=======================================\n  Files          95       95         \n  Lines        1253     1253         \n  Branches      273      273         \n=======================================\n  Hits         1183     1183         \n  Misses         67       67         \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 85e4cfa...45cb245. Read the comment docs.\n. # Codecov Report\nMerging #500 into master will increase coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #500      +/-\n==========================================\n+ Coverage   94.41%   94.46%   +0.05%   \n==========================================\n  Files          95       95            \n  Lines        1253     1265      +12   \n  Branches      273      275       +2   \n==========================================\n+ Hits         1183     1195      +12   \n  Misses         67       67            \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/props-loader.js | 78.57% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9138f11...87206af. Read the comment docs.\n. # Codecov Report\nMerging #502 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #502   +/-\n=======================================\n  Coverage   94.46%   94.46%         \n=======================================\n  Files          95       95         \n  Lines        1265     1265         \n  Branches      275      275         \n=======================================\n  Hits         1195     1195         \n  Misses         67       67         \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a58c529...173d73d. Read the comment docs.\n. # Codecov Report\nMerging #503 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #503      +/-\n==========================================\n+ Coverage   94.46%   94.47%   +<.01%   \n==========================================\n  Files          95       95            \n  Lines        1265     1267       +2   \n  Branches      275      276       +1   \n==========================================\n+ Hits         1195     1197       +2   \n  Misses         67       67            \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ebe52d5...23509fa. Read the comment docs.\n. # Codecov Report\nMerging #504 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #504      +/-\n=========================================\n+ Coverage   94.47%   94.5%   +0.03%   \n=========================================\n  Files          95      95            \n  Lines        1267    1275       +8   \n  Branches      276     280       +4   \n=========================================\n+ Hits         1197    1205       +8   \n  Misses         67      67            \n  Partials        3       3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 97.67% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 55e6125...779cd80. Read the comment docs.\n. # Codecov Report\nMerging #505 into master will increase coverage by 0.01%.\nThe diff coverage is 98%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/plugins/isolate/IsolateButton.js | 100% <\u00f8> (\u00f8) | |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 83.33% <\u00f8> (\u00f8) | :arrow_up: |\n| src/plugins/usage/UsageTabButton.js | 100% <\u00f8> (\u00f8) | |\n| scripts/make-webpack-config.js | 97.05% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/plugins/code-editor/CodeTabButton.js | 100% <\u00f8> (\u00f8) | |\n| scripts/schemas/config.js | 84% <100%> (+1.39%) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/plugins/usage/index.js | 100% <100%> (\u00f8) | |\n| src/consts.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 12 more | |\n. # Codecov Report\n\nMerging #506 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #506   +/-\n======================================\n  Coverage    94.5%   94.5%         \n======================================\n  Files          95      95         \n  Lines        1275    1275         \n  Branches      280     280         \n======================================\n  Hits         1205    1205         \n  Misses         67      67         \n  Partials        3       3\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d014ee2...c0f4c75. Read the comment docs.\n. # Codecov Report\nMerging #509 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #509   +/-\n======================================\n  Coverage    94.5%   94.5%         \n======================================\n  Files          95      95         \n  Lines        1275    1275         \n  Branches      280     280         \n======================================\n  Hits         1205    1205         \n  Misses         67      67         \n  Partials        3       3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ponents/TableOfContents/TableOfContentsRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 12e0ac5...212ac80. Read the comment docs.\n. # Codecov Report\nMerging #510 into master will increase coverage by 0.22%.\nThe diff coverage is 89.65%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #510      +/-\n==========================================\n+ Coverage    94.5%   94.73%   +0.22%   \n==========================================\n  Files          95       96       +1   \n  Lines        1275     1291      +16   \n  Branches      280      281       +1   \n==========================================\n+ Hits         1205     1223      +18   \n+ Misses         67       66       -1   \n+ Partials        3        2       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/utils/sanitizeConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 97.5% <100%> (-0.18%) | :arrow_down: |\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/props-loader.js | 96.66% <100%> (+18.09%) | :arrow_up: |\n| scripts/index.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/logger.js | 75% <75%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 750addc...afd7bac. Read the comment docs.\n. # Codecov Report\nMerging #511 into master will increase coverage by 0.5%.\nThe diff coverage is 96.66%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #511     +/-\n=========================================\n+ Coverage    94.5%   95.01%   +0.5%   \n=========================================\n  Files          95       99      +4   \n  Lines        1275     1464    +189   \n  Branches      280      340     +60   \n=========================================\n+ Hits         1205     1391    +186   \n- Misses         67       70      +3   \n  Partials        3        3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Examples/Examples.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.54% <100%> (+1.24%) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/chunkify.js | 95.34% <94.44%> (-1.08%) | :arrow_down: |\n| loaders/styleguide-loader.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/styles/setupjss.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...-components/ToolbarButton/ToolbarButtonRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| scripts/index.js | 100% <0%> (\u00f8) | :arrow_up: |\n| scripts/utils/sanitizeConfig.js | 100% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getProps.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 750addc...1642827. Read the comment docs.\n. # Codecov Report\nMerging #516 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #516      +/-\n==========================================\n+ Coverage   95.41%   95.42%   +<.01%   \n==========================================\n  Files          97       97            \n  Lines        1266     1267       +1   \n  Branches      262      262            \n==========================================\n+ Hits         1208     1209       +1   \n  Misses         56       56            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/create-server.js | 92.3% <100%> (+0.64%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c68f01...320cc65. Read the comment docs.\n. # Codecov Report\nMerging #522 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #522   +/-\n=======================================\n  Coverage   95.23%   95.23%         \n=======================================\n  Files          98       98         \n  Lines        1280     1280         \n  Branches      264      264         \n=======================================\n  Hits         1219     1219         \n  Misses         59       59         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 833f6db...06190f7. Read the comment docs.\n. # Codecov Report\nMerging #523 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #523   +/-\n=======================================\n  Coverage   95.23%   95.23%         \n=======================================\n  Files          98       98         \n  Lines        1280     1280         \n  Branches      264      264         \n=======================================\n  Hits         1219     1219         \n  Misses         59       59         \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7effc4f...3e48e16. Read the comment docs.\n. # Codecov Report\nMerging #525 into six will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nsix     #525      +/-\n==========================================\n+ Coverage   95.43%   95.48%   +0.04%   \n==========================================\n  Files          97       97            \n  Lines        1292     1306      +14   \n  Branches      274      278       +4   \n==========================================\n+ Hits         1233     1247      +14   \n  Misses         57       57            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/chunkify.js | 96.49% <100%> (+1.14%) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.54% <100%> (\u00f8) | :arrow_up: |\n| loaders/examples-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a30b1ce...b382ec3. Read the comment docs.\n. # Codecov Report\nMerging #528 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #528   +/-\n=======================================\n  Coverage   95.05%   95.05%         \n=======================================\n  Files          97       97         \n  Lines        1275     1275         \n  Branches      264      264         \n=======================================\n  Hits         1212     1212         \n  Misses         61       61         \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Editor/EditorLoaderRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Table/TableRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Text/TextRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Code/CodeRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...omponents/SectionHeading/SectionHeadingRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Type/TypeRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update da64422...a3a07f9. Read the comment docs.\n. # Codecov Report\nMerging #530 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #530   +/-\n=======================================\n  Coverage   95.05%   95.05%         \n=======================================\n  Files          97       97         \n  Lines        1275     1275         \n  Branches      264      264         \n=======================================\n  Hits         1212     1212         \n  Misses         61       61         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update da64422...c87a5c1. Read the comment docs.\n. # Codecov Report\nMerging #532 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #532   +/-\n=======================================\n  Coverage   95.05%   95.05%         \n=======================================\n  Files          97       97         \n  Lines        1275     1275         \n  Branches      264      264         \n=======================================\n  Hits         1212     1212         \n  Misses         61       61         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update da64422...7ef5866. Read the comment docs.\n. # Codecov Report\nMerging #533 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #533   +/-\n=======================================\n  Coverage   95.05%   95.05%         \n=======================================\n  Files          97       97         \n  Lines        1275     1275         \n  Branches      264      264         \n=======================================\n  Hits         1212     1212         \n  Misses         61       61         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0b9aed0...0b3306b. Read the comment docs.\n. # Codecov Report\nMerging #535 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #535      +/-\n==========================================\n+ Coverage   96.33%   96.35%   +0.01%   \n==========================================\n  Files          97       97            \n  Lines        1283     1288       +5   \n  Branches      266      268       +2   \n==========================================\n+ Hits         1236     1241       +5   \n  Misses         47       47\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 95.65% <100%> (+0.24%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 36ed420...61086de. Read the comment docs.\n. # Codecov Report\nMerging #537 into master will decrease coverage by 0.22%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #537      +/-\n==========================================\n- Coverage   95.05%   94.83%   -0.23%   \n==========================================\n  Files          97       97            \n  Lines        1275     1298      +23   \n  Branches      264      269       +5   \n==========================================\n+ Hits         1212     1231      +19   \n- Misses         61       64       +3   \n- Partials        2        3       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/styles/setupjss.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Preview/Preview.js | 60.27% <0%> (+10.27%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a010018...3009201. Read the comment docs.\n. # Codecov Report\nMerging #540 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #540      +/-\n==========================================\n+ Coverage   95.05%   95.07%   +0.01%   \n==========================================\n  Files          97       97            \n  Lines        1275     1279       +4   \n  Branches      264      265       +1   \n==========================================\n+ Hits         1212     1216       +4   \n  Misses         61       61            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 53.7% <100%> (+3.7%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a010018...b214d69. Read the comment docs.\n. # Codecov Report\nMerging #542 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #542   +/-\n=======================================\n  Coverage   95.07%   95.07%         \n=======================================\n  Files          97       97         \n  Lines        1279     1279         \n  Branches      265      265         \n=======================================\n  Hits         1216     1216         \n  Misses         61       61         \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 95.4% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a7ab8d7...ace4005. Read the comment docs.\n. # Codecov Report\nMerging #543 into master will decrease coverage by 0.4%.\nThe diff coverage is 89.61%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #543      +/-\n==========================================\n- Coverage    96.4%   95.99%   -0.41%   \n==========================================\n  Files          97       99       +2   \n  Lines        1279     1324      +45   \n  Branches      264      273       +9   \n==========================================\n+ Hits         1233     1271      +38   \n- Misses         46       52       +6   \n- Partials        0        1       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| test/data/styleguide.config.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Examples/Examples.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/props-loader.js | 96.66% <\u00f8> (-0.11%) | :arrow_down: |\n| scripts/schemas/config.js | 82.6% <0%> (-10.08%) | :arrow_down: |\n| loaders/utils/highlightCode.js | 100% <100%> (+7.14%) | :arrow_up: |\n| scripts/utils/ensureWebpack.js | 77.77% <100%> (-5.56%) | :arrow_down: |\n| src/rsg-components/Editor/EditorLoader.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/keysToLowerCaseDeep.js | 100% <100%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7aae6bb...d7a0da1. Read the comment docs.\n. # Codecov Report\nMerging #546 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #546      +/-\n=========================================\n+ Coverage    96.4%   96.4%   +<.01%   \n=========================================\n  Files          97      97            \n  Lines        1279    1280       +1   \n  Branches      264     264            \n=========================================\n+ Hits         1233    1234       +1   \n  Misses         46      46\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 85.45% <100%> (+0.26%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7aae6bb...5e42165. Read the comment docs.\n. # Codecov Report\nMerging #550 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #550   +/-\n=======================================\n  Coverage   96.33%   96.33%         \n=======================================\n  Files          97       97         \n  Lines        1283     1283         \n  Branches      266      266         \n=======================================\n  Hits         1236     1236         \n  Misses         47       47\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0283c7c...642227c. Read the comment docs.\n. # Codecov Report\nMerging #552 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #552   +/-\n=======================================\n  Coverage   96.33%   96.33%         \n=======================================\n  Files          97       97         \n  Lines        1283     1283         \n  Branches      266      266         \n=======================================\n  Hits         1236     1236         \n  Misses         47       47\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 36ed420...8410726. Read the comment docs.\n. # Codecov Report\nMerging #555 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #555   +/-\n=======================================\n  Coverage   96.03%   96.03%         \n=======================================\n  Files          99       99         \n  Lines        1310     1310         \n  Branches      270      270         \n=======================================\n  Hits         1258     1258         \n  Misses         51       51         \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/StyleGuide/StyleGuide.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/SectionRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Sections/Sections.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b7b2dc4...1c138c4. Read the comment docs.\n. # Codecov Report\nMerging #556 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #556      +/-\n==========================================\n+ Coverage   96.01%   96.02%   +<.01%   \n==========================================\n  Files          99       99            \n  Lines        1305     1308       +3   \n  Branches      267      268       +1   \n==========================================\n+ Hits         1253     1256       +3   \n  Misses         51       51            \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 95.78% <100%> (+0.13%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5f39100...3a3652f. Read the comment docs.\n. # Codecov Report\nMerging #557 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #557      +/-\n==========================================\n+ Coverage   96.02%   96.03%   +0.01%   \n==========================================\n  Files          99       99            \n  Lines        1308     1312       +4   \n  Branches      268      271       +3   \n==========================================\n+ Hits         1256     1260       +4   \n  Misses         51       51            \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/props-loader.js | 96.87% <100%> (+0.2%) | :arrow_up: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a31b7b5...8cb56ea. Read the comment docs.\n. # Codecov Report\nMerging #558 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #558      +/-\n==========================================\n+ Coverage   96.02%   96.03%   +<.01%   \n==========================================\n  Files          99       99            \n  Lines        1308     1310       +2   \n  Branches      268      270       +2   \n==========================================\n+ Hits         1256     1258       +2   \n  Misses         51       51            \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a31b7b5...4a9f2aa. Read the comment docs.\n. # Codecov Report\nMerging #563 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #563   +/-\n=======================================\n  Coverage   96.03%   96.03%         \n=======================================\n  Files          99       99         \n  Lines        1312     1312         \n  Branches      271      271         \n=======================================\n  Hits         1260     1260         \n  Misses         51       51         \n  Partials        1        1\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5c07e81...1506608. Read the comment docs.\n. # Codecov Report\nMerging #569 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #569      +/-\n==========================================\n+ Coverage   96.04%   96.04%   +<.01%   \n==========================================\n  Files          99       99            \n  Lines        1314     1316       +2   \n  Branches      271      271            \n==========================================\n+ Hits         1262     1264       +2   \n  Misses         51       51            \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/utils/mergeWebpackConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/styles/createStyleSheet.js | 100% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update df1a321...572a4d7. Read the comment docs.\n. # Codecov Report\nMerging #570 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #570      +/-\n==========================================\n+ Coverage   96.04%   96.04%   +<.01%   \n==========================================\n  Files          99       99            \n  Lines        1314     1315       +1   \n  Branches      271      271            \n==========================================\n+ Hits         1262     1263       +1   \n  Misses         51       51            \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/styles/createStyleSheet.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update df1a321...89be177. Read the comment docs.\n. # Codecov Report\nMerging #571 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #571      +/-\n==========================================\n+ Coverage   96.04%   96.04%   +<.01%   \n==========================================\n  Files          99       99            \n  Lines        1314     1315       +1   \n  Branches      271      271            \n==========================================\n+ Hits         1262     1263       +1   \n  Misses         51       51            \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/styles/createStyleSheet.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update df1a321...80fc4cc. Read the comment docs.\n. # Codecov Report\nMerging #574 into master will increase coverage by 0.15%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #574      +/-\n=========================================\n+ Coverage   96.04%   96.2%   +0.15%   \n=========================================\n  Files          99      99            \n  Lines        1316    1316            \n  Branches      271     271            \n=========================================\n+ Hits         1264    1266       +2   \n+ Misses         51      49       -2   \n  Partials        1       1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Editor/Editor.js | 87.5% <100%> (+12.5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c5a07a...2dd2827. Read the comment docs.\n. # Codecov Report\nMerging #577 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #577      +/-\n==========================================\n- Coverage    96.2%   96.19%   -0.01%   \n==========================================\n  Files          99       99            \n  Lines        1316     1315       -1   \n  Branches      271      271            \n==========================================\n- Hits         1266     1265       -1   \n  Misses         49       49            \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Playground/Playground.js | 93.1% <0%> (-0.23%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fea4170...d8063e7. Read the comment docs.\n. # Codecov Report\nMerging #580 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #580      +/-\n=========================================\n+ Coverage   96.19%   96.2%   +<.01%   \n=========================================\n  Files          99      99            \n  Lines        1315    1318       +3   \n  Branches      271     274       +3   \n=========================================\n+ Hits         1265    1268       +3   \n  Misses         49      49            \n  Partials        1       1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/examples-loader.js | 100% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3ed8d35...8f6e088. Read the comment docs.\n. # Codecov Report\nMerging #581 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #581   +/-\n=======================================\n  Coverage   96.19%   96.19%         \n=======================================\n  Files          99       99         \n  Lines        1315     1315         \n  Branches      271      271         \n=======================================\n  Hits         1265     1265         \n  Misses         49       49         \n  Partials        1        1\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3ed8d35...52bc407. Read the comment docs.\n. # Codecov Report\nMerging #583 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #583      +/-\n=========================================\n+ Coverage   96.19%   96.2%   +<.01%   \n=========================================\n  Files          99      99            \n  Lines        1315    1318       +3   \n  Branches      271     274       +3   \n=========================================\n+ Hits         1265    1268       +3   \n  Misses         49      49            \n  Partials        1       1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/examples-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b8d68e1...4b46b21. Read the comment docs.\n. # Codecov Report\nMerging #585 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #585   +/-\n=======================================\n  Coverage   96.19%   96.19%         \n=======================================\n  Files          98       98         \n  Lines        1313     1313         \n  Branches      272      272         \n=======================================\n  Hits         1263     1263         \n  Misses         49       49         \n  Partials        1        1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/styles/setupjss.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 916e173...b742f61. Read the comment docs.\n. # Codecov Report\nMerging #588 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #588   +/-\n======================================\n  Coverage    96.2%   96.2%         \n======================================\n  Files          98      98         \n  Lines        1316    1316         \n  Branches      272     272         \n======================================\n  Hits         1266    1266         \n  Misses         49      49         \n  Partials        1       1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/props-loader.js | 96.87% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 04c4f5d...aa6c696. Read the comment docs.\n. # Codecov Report\nMerging #595 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #595      +/-\n==========================================\n+ Coverage   96.04%   96.07%   +0.02%   \n==========================================\n  Files          98       99       +1   \n  Lines        1316     1325       +9   \n  Branches      270      271       +1   \n==========================================\n+ Hits         1264     1273       +9   \n  Misses         50       50            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/utils/devServerUtils.js | 100% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ee4746d...a7a5063. Read the comment docs.\n. # Codecov Report\nMerging #597 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #597   +/-\n=======================================\n  Coverage   96.07%   96.07%         \n=======================================\n  Files          99       99         \n  Lines        1325     1325         \n  Branches      271      271         \n=======================================\n  Hits         1273     1273         \n  Misses         50       50         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d86f7b8...520c40c. Read the comment docs.\n. # Codecov Report\nMerging #598 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #598   +/-\n=======================================\n  Coverage   96.07%   96.07%         \n=======================================\n  Files          99       99         \n  Lines        1325     1325         \n  Branches      271      271         \n=======================================\n  Hits         1273     1273         \n  Misses         50       50         \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/props-loader.js | 91.42% <\u00f8> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 13f5089...757d98e. Read the comment docs.\n. # Codecov Report\nMerging #601 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #601      +/-\n==========================================\n+ Coverage   96.07%   96.07%   +<.01%   \n==========================================\n  Files          99       99            \n  Lines        1325     1326       +1   \n  Branches      271      270       -1   \n==========================================\n+ Hits         1273     1274       +1   \n  Misses         50       50            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rc/rsg-components/SectionHeading/SectionHeading.js | 25% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/StyleGuide/StyleGuide.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Components/Components.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Sections/Sections.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...omponents/SectionHeading/SectionHeadingRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 83.33% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/SectionRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ebfbb86...296c347. Read the comment docs.\n. # Codecov Report\nMerging #602 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #602   +/-\n=======================================\n  Coverage   96.07%   96.07%         \n=======================================\n  Files          99       99         \n  Lines        1326     1326         \n  Branches      270      270         \n=======================================\n  Hits         1274     1274         \n  Misses         50       50         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9fe2fb9...cb75312. Read the comment docs.\n. # Codecov Report\nMerging #604 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #604   +/-\n=======================================\n  Coverage   96.07%   96.07%         \n=======================================\n  Files          99       99         \n  Lines        1326     1326         \n  Branches      270      270         \n=======================================\n  Hits         1274     1274         \n  Misses         50       50         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 73ebad0...3b1fb3b. Read the comment docs.\n. # Codecov Report\nMerging #609 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #609   +/-\n=======================================\n  Coverage   96.07%   96.07%         \n=======================================\n  Files          99       99         \n  Lines        1326     1326         \n  Branches      270      270         \n=======================================\n  Hits         1274     1274         \n  Misses         50       50         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 73ebad0...463147c. Read the comment docs.\n. # Codecov Report\nMerging #610 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #610   +/-\n=======================================\n  Coverage   96.07%   96.07%         \n=======================================\n  Files          99       99         \n  Lines        1326     1326         \n  Branches      270      270         \n=======================================\n  Hits         1274     1274         \n  Misses         50       50         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8dd8cbd...3e5c90f. Read the comment docs.\n. # Codecov Report\nMerging #616 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #616   +/-\n=======================================\n  Coverage   96.09%   96.09%         \n=======================================\n  Files         100      100         \n  Lines        1330     1330         \n  Branches      270      270         \n=======================================\n  Hits         1278     1278         \n  Misses         50       50         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5ad09e4...9557ba6. Read the comment docs.\n. # Codecov Report\nMerging #617 into master will decrease coverage by 0.07%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #617      +/-\n==========================================\n- Coverage   96.09%   96.01%   -0.08%   \n==========================================\n  Files         100      100            \n  Lines        1330     1330            \n  Branches      270      270            \n==========================================\n- Hits         1278     1277       -1   \n- Misses         50       51       +1   \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/slots/IsolateButton.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/utils.js | 96.84% <0%> (-1.06%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5ad09e4...73a4e2d. Read the comment docs.\n. # Codecov Report\nMerging #618 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #618   +/-\n=======================================\n  Coverage   96.09%   96.09%         \n=======================================\n  Files         100      100         \n  Lines        1330     1330         \n  Branches      270      270         \n=======================================\n  Hits         1278     1278         \n  Misses         50       50         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a9d184f...2141791. Read the comment docs.\n. # Codecov Report\nMerging #622 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #622   +/-\n=======================================\n  Coverage   96.01%   96.01%         \n=======================================\n  Files         100      100         \n  Lines        1330     1330         \n  Branches      270      270         \n=======================================\n  Hits         1277     1277         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c0db63e...ea5be53. Read the comment docs.\n. # Codecov Report\nMerging #623 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #623   +/-\n=======================================\n  Coverage   96.01%   96.01%         \n=======================================\n  Files         100      100         \n  Lines        1330     1330         \n  Branches      270      270         \n=======================================\n  Hits         1277     1277         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ae5a469...93c9c94. Read the comment docs.\n. # Codecov Report\nMerging #625 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #625   +/-\n=======================================\n  Coverage   96.01%   96.01%         \n=======================================\n  Files         100      100         \n  Lines        1330     1330         \n  Branches      270      270         \n=======================================\n  Hits         1277     1277         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 14346d6...86e5e7f. Read the comment docs.\n. # Codecov Report\nMerging #626 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #626   +/-\n=======================================\n  Coverage   96.01%   96.01%         \n=======================================\n  Files         100      100         \n  Lines        1330     1330         \n  Branches      270      270         \n=======================================\n  Hits         1277     1277         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 14346d6...376034b. Read the comment docs.\n. # Codecov Report\nMerging #627 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #627      +/-\n==========================================\n+ Coverage   96.01%   96.03%   +0.02%   \n==========================================\n  Files         100      101       +1   \n  Lines        1330     1338       +8   \n  Branches      270      271       +1   \n==========================================\n+ Hits         1277     1285       +8   \n  Misses         51       51            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Error/ErrorRenderer.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/StyleGuide/StyleGuide.js | 100% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 14346d6...a12867c. Read the comment docs.\n. # Codecov Report\nMerging #628 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #628   +/-\n=======================================\n  Coverage   96.01%   96.01%         \n=======================================\n  Files         100      100         \n  Lines        1330     1330         \n  Branches      270      270         \n=======================================\n  Hits         1277     1277         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 14346d6...e2726ca. Read the comment docs.\n. # Codecov Report\nMerging #631 into master will decrease coverage by 0.19%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 85% <100%> (-0.72%) | :arrow_down: |\n| src/rsg-components/Wrapper/Wrapper.js | 100% <100%> (\u00f8) | :arrow_up: |\n| test/raf-polyfill.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/StyleGuide/StyleGuide.js | 83.33% <0%> (-16.67%) | :arrow_down: |\n. # Codecov Report\n\nMerging #632 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #632   +/-\n=======================================\n  Coverage   96.03%   96.03%         \n=======================================\n  Files         101      101         \n  Lines        1338     1338         \n  Branches      271      271         \n=======================================\n  Hits         1285     1285         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5745d8b...627ae8e. Read the comment docs.\n. # Codecov Report\nMerging #635 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #635   +/-\n=======================================\n  Coverage   96.03%   96.03%         \n=======================================\n  Files         101      101         \n  Lines        1338     1338         \n  Branches      271      271         \n=======================================\n  Hits         1285     1285         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bc6e651...68b681a. Read the comment docs.\n. # Codecov Report\nMerging #636 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #636   +/-\n=======================================\n  Coverage   96.03%   96.03%         \n=======================================\n  Files         101      101         \n  Lines        1338     1338         \n  Branches      271      271         \n=======================================\n  Hits         1285     1285         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f975372...7224428. Read the comment docs.\n. # Codecov Report\nMerging #638 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #638      +/-\n==========================================\n+ Coverage   96.03%   96.04%   +<.01%   \n==========================================\n  Files         101      101            \n  Lines        1338     1339       +1   \n  Branches      271      271            \n==========================================\n+ Hits         1285     1286       +1   \n  Misses         51       51            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 85.71% <100%> (+0.25%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6dc568e...7f2863b. Read the comment docs.\n. # Codecov Report\nMerging #639 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #639      +/-\n==========================================\n+ Coverage   96.03%   96.04%   +<.01%   \n==========================================\n  Files         101      101            \n  Lines        1338     1339       +1   \n  Branches      271      271            \n==========================================\n+ Hits         1285     1286       +1   \n  Misses         51       51            \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 85.71% <0%> (+0.25%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6dc568e...48c182c. Read the comment docs.\n. # Codecov Report\nMerging #640 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #640   +/-\n=======================================\n  Coverage   96.04%   96.04%         \n=======================================\n  Files         101      101         \n  Lines        1339     1339         \n  Branches      271      271         \n=======================================\n  Hits         1286     1286         \n  Misses         51       51         \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 85.71% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update baf2cae...e70cd1c. Read the comment docs.\n. # Codecov Report\nMerging #642 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #642   +/-\n=======================================\n  Coverage   96.04%   96.04%         \n=======================================\n  Files         101      101         \n  Lines        1339     1339         \n  Branches      271      271         \n=======================================\n  Hits         1286     1286         \n  Misses         51       51         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dba2546...60393a6. Read the comment docs.\n. # Codecov Report\nMerging #647 into master will decrease coverage by 0.12%.\nThe diff coverage is 80%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 82.6% <\u00f8> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/StyleGuide/StyleGuide.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Ribbon/RibbonRenderer.js | 100% <100%> (\u00f8) | |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Ribbon/Ribbon.js | 33.33% <33.33%> (\u00f8) | |\n. # Codecov Report\n\nMerging #649 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 82.6% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 97.05% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Editor/Editor.js | 85.71% <100%> (-1.79%) | :arrow_down: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #650 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 90.47% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Link/LinkRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #651 into master will increase coverage by 0.24%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 90.47% <\u00f8> (\u00f8) | :arrow_up: |\n| ...arkdown/MarkdownHeading/MarkdownHeadingRenderer.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/Heading/HeadingRenderer.js | 100% <100%> (\u00f8) | |\n| ...omponents/SectionHeading/SectionHeadingRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Arguments/ArgumentsRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/SectionHeading/SectionHeading.js | 100% <0%> (+75%) | :arrow_up: |\n. # Codecov Report\n\nMerging #657 into master will increase coverage by 0.15%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 84.9% <100%> (+1.92%) | :arrow_up: |\n| loaders/props-loader.js | 97.14% <0%> (+5.71%) | :arrow_up: |\n. # Codecov Report\n\nMerging #662 into master will decrease coverage by 0.14%.\nThe diff coverage is 88.88%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/utils/sanitizeConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 85.96% <100%> (+1.05%) | :arrow_up: |\n| src/rsg-components/Editor/Editor.js | 85.71% <100%> (-1.79%) | :arrow_down: |\n| scripts/logger.js | 76.92% <50%> (+1.92%) | :arrow_up: |\n| src/utils/getRouteData.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/utils/renderStyleguide.js | 75% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #667 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ponents/PlaygroundError/PlaygroundErrorRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.33% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Preview/Preview.js | 85.24% <100%> (+0.24%) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Preview/PreviewRenderer.js | 100% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #671 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/props-loader.js | 91.42% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/parseExample.js | 100% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getProps.js | 100% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getNameFromFilePath.js | 100% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #672 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getNameFromFilePath.js | 100% <100%> (\u00f8) | |\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #673 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/styles/theme.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Error/ErrorRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ponents/PlaygroundError/PlaygroundErrorRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #676 into master will increase coverage by 0.05%.\nThe diff coverage is 97.54%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/slots/IsolateButton.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/SectionHeading/SectionHeading.js | 25% <\u00f8> (\u00f8) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 94.11% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/utils/getSections.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/processComponent.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/filterSectionsByName.js | 100% <100%> (\u00f8) | |\n| src/consts.js | 100% <100%> (\u00f8) | |\n| src/utils/getPageTitle.js | 100% <100%> (\u00f8) | |\n| src/utils/filterComponentsByExactName.js | 100% <100%> (\u00f8) | |\n| src/utils/getInfoFromHash.js | 100% <100%> (\u00f8) | |\n| ... and 36 more | |\n. # Codecov Report\n\nMerging #680 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 85.48% <100%> (+0.48%) | :arrow_up: |\n. # Codecov Report\n\nMerging #684 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 95.91% <100%> (+0.08%) | :arrow_up: |\n| src/rsg-components/Argument/ArgumentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #688 into master will not change coverage.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/create-server.js | 92.3% <\u00f8> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #690 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/create-server.js | 92.3% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #696 into master will decrease coverage by 0.16%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/props-loader.js | 91.42% <0%> (-5.72%) | :arrow_down: |\n| scripts/schemas/config.js | 82.97% <0%> (-1.93%) | :arrow_down: |\n| loaders/utils/requireIt.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...omponents/SectionHeading/SectionHeadingRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getSections.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #697 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/slots/CodeTabButton.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #706 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/TabButton/TabButtonRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #707 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Pathline/PathlineRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/TabButton/TabButtonRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #708 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/TabButton/TabButtonRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #709 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/utils/ensureWebpack.js | 77.77% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/create-server.js | 92.3% <100%> (\u00f8) | :arrow_up: |\n| loaders/props-loader.js | 97.14% <100%> (\u00f8) | :arrow_up: |\n| ...omponents/SectionHeading/SectionHeadingRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #718 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getSections.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #728 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/TabButton/TabButtonRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #730 into master will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Editor/Editor.js | 85.71% <0%> (-1.79%) | :arrow_down: |\n| src/rsg-components/Para/ParaRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Props/PropsRenderer.js | 95.91% <0%> (\u00f8) | :arrow_up: |\n| src/utils/getRouteData.js | 100% <0%> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 97.05% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getSections.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Text/TextRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ... and 9 more | |\n. # Codecov Report\n\nMerging #731 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 90.47% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Props/PropsRenderer.js | 95.91% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Text/TextRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Para/ParaRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #743 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getSections.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/SectionRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #746 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 86.2% <0%> (+0.24%) | :arrow_up: |\n. # Codecov Report\n\nMerging #755 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/List/ListRenderer.js | 100% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #768 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/renderStyleguide.js | 75% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 86.2% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/getRouteData.js | 100% <100%> (\u00f8) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 94.44% <100%> (+0.32%) | :arrow_up: |\n| src/rsg-components/StyleGuide/StyleGuide.js | 83.33% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #769 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #781 into master will increase coverage by 0.18%.\nThe diff coverage is 95.83%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 98.27% <95.83%> (+2.35%) | :arrow_up: |\n. # Codecov Report\n\nMerging #784 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Usage/Usage.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 86.2% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/props-loader.js | 97.72% <100%> (+0.58%) | :arrow_up: |\n| src/rsg-components/Props/PropsRenderer.js | 98.24% <100%> (-0.04%) | :arrow_down: |\n| loaders/utils/sortProps.js | 100% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #794 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getComponentFiles.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #803 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/SectionRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/utils/getSections.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 83.33% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #805 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...mponents/Markdown/Blockquote/BlockquoteRenderer.js | 100% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #811 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Name/NameRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Markdown.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Code/CodeRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Type/TypeRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Pre/PreRenderer.js | 100% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #812 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Pre/PreRenderer.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/Name/NameRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Type/TypeRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Code/CodeRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #816 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/styleguide-loader.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Markdown.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...g-components/Markdown/Checkbox/CheckboxRenderer.js | 100% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #818 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...g-components/Markdown/Checkbox/CheckboxRenderer.js | 100% <100%> (\u00f8) | |\n| loaders/styleguide-loader.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #825 into master will increase coverage by 0.16%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/getComponent.js | 100% <100%> (\u00f8) | |\n| src/utils/globalizeComponent.js | 100% <100%> (+28.57%) | :arrow_up: |\n| src/rsg-components/Markdown/Markdown.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...g-components/Markdown/Checkbox/CheckboxRenderer.js | 100% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #835 into master will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 86.2% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ComponentsList/ComponentsList.js | 100% <100%> (\u00f8) | |\n| src/utils/getRouteData.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/renderStyleguide.js | 76.92% <100%> (+1.92%) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/slots/index.js | 100% <100%> (\u00f8) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 94.11% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/StyleGuide/StyleGuide.js | 86.66% <100%> (+3.33%) | :arrow_up: |\n. # Codecov Report\n\nMerging #842 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 88.88% <100%> (+0.42%) | :arrow_up: |\n. # Codecov Report\n\nMerging #843 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 86.2% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/utils/getComponentFiles.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #844 into master will increase coverage by 0.05%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rsg-components/Markdown/Table/TableCellRenderer.js | 100% <100%> (\u00f8) | |\n| ...rsg-components/Markdown/Table/TableHeadRenderer.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/Markdown/Table/TableRenderer.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/Markdown/Markdown.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rsg-components/Markdown/Table/TableBodyRenderer.js | 100% <100%> (\u00f8) | |\n| .../rsg-components/Markdown/Table/TableRowRenderer.js | 100% <100%> (\u00f8) | |\n| ... and 1 more | |\n. # Codecov Report\n\nMerging #849 into master will decrease coverage by 0.06%.\nThe diff coverage is 66.66%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 94.59% <66.66%> (-2.47%) | :arrow_down: |\n. # Codecov Report\n\nMerging #852 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Hr/HrRenderer.js | 100% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #857 into master will increase coverage by <.01%.\nThe diff coverage is 75%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/processComponent.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 95% <66.66%> (+0.4%) | :arrow_up: |\n. # Codecov Report\n\nMerging #868 into master will increase coverage by 0.65%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/props-loader.js | 97.82% <100%> (+0.68%) | :arrow_up: |\n| scripts/schemas/config.js | 86.2% <100%> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/utils/getRouteData.js | 100% <0%> (\u00f8) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 94.11% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/slots/index.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getComponentFiles.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n. # Codecov Report\n\nMerging #870 into master will increase coverage by 0.2%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 90.32% <100%> (+5.07%) | :arrow_up: |\n. # Codecov Report\n\nMerging #893 into master will not change coverage.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/styles/theme.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ponents/TableOfContents/TableOfContentsRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...-components/ToolbarButton/ToolbarButtonRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/List/ListRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #901 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Editor/EditorLoader.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #904 into master will not change coverage.\nThe diff coverage is 80%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 95.45% <80%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #907 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/config.js | 96.87% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 95.45% <100%> (+0.45%) | :arrow_up: |\n| scripts/schemas/config.js | 87.5% <100%> (+1.29%) | :arrow_up: |\n| scripts/utils/error.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/utils/sanitizeConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #912 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/splitExampleCode.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #920 into master will not change coverage.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/splitExampleCode.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #921 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getSections.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Sections/Sections.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ComponentsList/ComponentsList.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Argument/ArgumentRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| loaders/utils/getProps.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #926 into master will decrease coverage by 0.05%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 87.5% <100%> (\u00f8) | :arrow_up: |\n| styleguide.config.js | 100% <100%> (\u00f8) | |\n| test/apps/defaults/styleguide.config.js | 100% <100%> (\u00f8) | |\n| scripts/utils/getUserPackageJson.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/config.js | 94.11% <100%> (-2.76%) | :arrow_down: |\n. # Codecov Report\n\nMerging #932 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/config.js | 94.11% <0%> (-2.76%) | :arrow_down: |\n| scripts/utils/getUserPackageJson.js | 100% <0%> (\u00f8) | :arrow_up: |\n| test/apps/defaults/styleguide.config.js | 100% <0%> (\u00f8) | |\n| styleguide.config.js | 100% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #933 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/processComponents.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 85.18% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #940 into master will not change coverage.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 95.45% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/utils/mergeWebpackConfig.js | 100% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #941 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 87.5% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/utils/mergeWebpackConfig.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/getRouteData.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.54% <100%> (+0.69%) | :arrow_up: |\n| src/utils/filterComponentsInSectionsByExactName.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/getSections.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 85.18% <100%> (+1.85%) | :arrow_up: |\n| src/rsg-components/Components/Components.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Examples/Examples.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 2 more | |\n. # Codecov Report\n\nMerging #954 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #961 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...mponents/Markdown/Blockquote/BlockquoteRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #966 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/getPageTitle.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #972 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Slot/Slot.js | 95.45% <100%> (+0.21%) | :arrow_up: |\n. # Codecov Report\n\nMerging #974 into master will increase coverage by 0.13%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Editor/Editor.js | 100% <100%> (+14.28%) | :arrow_up: |\n. # Codecov Report\n\nMerging #976 into master will increase coverage by 0.38%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/ReactExample/ReactExample.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/Preview/Preview.js | 100% <100%> (+10.34%) | :arrow_up: |\n. # Codecov Report\n\nMerging #983 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 95.55% <100%> (+0.1%) | :arrow_up: |\n. # Codecov Report\n\nMerging #985 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Slot/Slot.js | 95.45% <0%> (+0.21%) | :arrow_up: |\n. # Codecov Report\n\nMerging #989 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getSections.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 85.18% <100%> (+1.85%) | :arrow_up: |\n| src/utils/getRouteData.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 88.23% <100%> (+0.73%) | :arrow_up: |\n| src/consts.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/Section.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Examples/Examples.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/filterComponentsInSectionsByExactName.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.54% <100%> (+0.69%) | :arrow_up: |\n| src/rsg-components/Components/Components.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #993 into master will decrease coverage by 0.04%.\nThe diff coverage is 97.53%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/utils/getPageTitle.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/slots/index.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/SectionHeading/SectionHeading.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/filterComponentsInSectionsByExactName.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Examples/Examples.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ComponentsList/ComponentsList.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.54% <100%> (+0.69%) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 95% <100%> (+0.88%) | :arrow_up: |\n| scripts/schemas/config.js | 88.4% <100%> (+0.9%) | :arrow_up: |\n| ... and 15 more | |\n. # Codecov Report\n\nMerging #995 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 87.69% <100%> (+0.19%) | :arrow_up: |\n. # Codecov Report\n\nMerging #1004 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/findSection.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1005 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/splitExampleCode.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1009 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/schemas/config.js | 87.69% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/utils/sanitizeConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/create-server.js | 92.85% <100%> (+0.54%) | :arrow_up: |\n. # Codecov Report\n\nMerging #1011 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/config.js | 94.11% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1023 into master will increase coverage by 0.1%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/make-webpack-config.js | 100% <100%> (+4.54%) | :arrow_up: |\n| scripts/utils/ensureWebpack.js | 77.77% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1027 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1030 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Playground/Playground.js | 93.33% <100%> (+0.47%) | :arrow_up: |\n| src/rsg-components/Styled/Styled.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1033 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getComponentFiles.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...omponents/SectionHeading/SectionHeadingRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Styled/Styled.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.33% <0%> (+0.47%) | :arrow_up: |\n. # Codecov Report\n\nMerging #1035 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/util.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Props/PropsRenderer.js | 98.29% <100%> (+0.04%) | :arrow_up: |\n. # Codecov Report\n\nMerging #1040 into master will increase coverage by 0.01%.\nThe diff coverage is 98.14%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Components/Components.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ComponentsList/ComponentsList.js | 100% <100%> (\u00f8) | :arrow_up: |\n| loaders/utils/getSections.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/ReactComponent/ReactComponent.js | 85.18% <100%> (+1.85%) | :arrow_up: |\n| src/rsg-components/NotFound/NotFoundRenderer.js | 100% <100%> (\u00f8) | |\n| src/rsg-components/StyleGuide/StyleGuide.js | 85.71% <100%> (-0.96%) | :arrow_down: |\n| src/utils/getInfoFromHash.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.93% <100%> (+0.6%) | :arrow_up: |\n| .../rsg-components/TableOfContents/TableOfContents.js | 95% <100%> (+0.88%) | :arrow_up: |\n| ... and 14 more | |\n. # Codecov Report\n\nMerging #1043 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/StyleGuide/StyleGuide.js | 85.71% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 88.23% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Version/VersionRenderer.js | 100% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #1046 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getProps.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Argument/ArgumentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1049 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Editor/EditorLoaderRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Editor/Editor.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1050 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 88.23% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 95.45% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Editor/Editor.js | 100% <0%> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/StyleGuide/StyleGuide.js | 85.71% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Editor/EditorLoaderRenderer.js | 100% <0%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Version/VersionRenderer.js | 100% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #1073 into master will increase coverage by 0.05%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Pre/PreRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| scripts/make-webpack-config.js | 95.45% <\u00f8> (\u00f8) | :arrow_up: |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ponents/TableOfContents/TableOfContentsRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/styleguide-loader.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/styles/theme.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...rc/rsg-components/Playground/PlaygroundRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Markdown/Markdown.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| test/jestsetup.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/styles/prismTheme.js | 100% <100%> (\u00f8) | |\n| ... and 5 more | |\n. # Codecov Report\n\nMerging #1091 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/utils/getRouteData.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1099 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Markdown/Markdown.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ponents/Markdown/Details/DetailsSummaryRenderer.js | 100% <100%> (\u00f8) | |\n| ...rsg-components/Markdown/Details/DetailsRenderer.js | 100% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #1109 into next will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/loaders/utils/getRequires.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/client/utils/compileCode.js | 100% <100%> (\u00f8) | |\n| ...client/rsg-components/ReactExample/ReactExample.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/loaders/examples-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1115 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/util.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1124 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| test/jestsetup.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1128 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getComponentFiles.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1130 into next will increase coverage by 0.06%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/client/consts.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/scripts/schemas/config.js | 89.39% <\u00f8> (\u00f8) | :arrow_up: |\n| src/client/utils/compileCode.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/client/utils/getAst.js | 100% <100%> (\u00f8) | |\n| src/loaders/utils/getImports.js | 100% <100%> (\u00f8) | |\n| src/loaders/examples-loader.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/loaders/utils/client/evalInContext.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/client/utils/splitExampleCode.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/loaders/utils/getAst.js | 100% <100%> (\u00f8) | |\n| src/client/utils/transpileImports.js | 100% <100%> (\u00f8) | |\n| ... and 4 more | |\n. # Codecov Report\n\nMerging #1133 into master will decrease coverage by 0.05%.\nThe diff coverage is 87.5%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/getComponentFiles.js | 100% <100%> (\u00f8) | :arrow_up: |\n| scripts/schemas/config.js | 87.14% <66.66%> (-1.1%) | :arrow_down: |\n. # Codecov Report\n\nMerging #1136 into next will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../rsg-components/TableOfContents/TableOfContents.js | 95% <\u00f8> (\u00f8) | |\n| ...ist/src/client/rsg-components/Name/NameRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...client/rsg-components/Sections/SectionsRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...t/src/client/rsg-components/Error/ErrorRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...idist/src/client/rsg-components/Wrapper/Wrapper.js | 100% <\u00f8> (\u00f8) | |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...rsg-components/Markdown/Table/TableHeadRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...ponents/PlaygroundError/PlaygroundErrorRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...src/client/rsg-components/Playground/Playground.js | 93.93% <\u00f8> (\u00f8) | |\n| ...nt/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ... and 186 more | |\n. # Codecov Report\n\nMerging #1142 into next will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/scripts/schemas/config.js | 89.39% <\u00f8> (\u00f8) | :arrow_up: |\n| src/scripts/make-webpack-config.js | 95.65% <100%> (+0.19%) | :arrow_up: |\n. # Codecov Report\n\nMerging #1148 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| scripts/utils/StyleguidistOptionsPlugin.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1158 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Pathline/PathlineRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/slots/UsageTabButton.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Usage/Usage.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1160 into next will decrease coverage by 0.05%.\nThe diff coverage is 98.75%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Error/ErrorRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...rc/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <\u00f8> (\u00f8) | |\n| src/utils/processSections.js | 100% <\u00f8> (\u00f8) | |\n| src/rsg-components/Markdown/Markdown.js | 100% <\u00f8> (\u00f8) | |\n| ...ponents/PlaygroundError/PlaygroundErrorRenderer.js | 100% <\u00f8> (\u00f8) | |\n| loaders/utils/getSections.js | 100% <\u00f8> (\u00f8) | |\n| src/rsg-components/slots/index.js | 100% <\u00f8> (\u00f8) | |\n| scripts/make-webpack-config.js | 95.45% <\u00f8> (\u00f8) | |\n| src/rsg-components/Pathline/PathlineRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | |\n| ... and 303 more | |\n. # Codecov Report\n\nMerging #1161 into next will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nt/rsg-components/ComponentsList/ComponentsList.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1163 into next will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...arkdown/MarkdownHeading/MarkdownHeadingRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1166 into master will decrease coverage by 0.05%.\nThe diff coverage is 50%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Section/Section.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| loaders/utils/getSections.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/rsg-components/Section/SectionRenderer.js | 90% <50%> (-10%) | :arrow_down: |\n. # Codecov Report\n\nMerging #1171 into master will decrease coverage by 0.48%.\nThe diff coverage is 70.96%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| loaders/utils/inlineLoader.js | 33.33% <33.33%> (\u00f8) | |\n| loaders/props-loader.js | 89.09% <44.44%> (-8.74%) | :arrow_down: |\n| loaders/utils/getProps.js | 97.5% <89.47%> (-2.5%) | :arrow_down: |\n. # Codecov Report\n\nMerging #1179 into master will decrease coverage by 0.27%.\nThe diff coverage is 73.68%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Preview/Preview.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/utils/getComponent.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/globalizeComponent.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Playground/Playground.js | 93.93% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/ReactExample/ReactExample.js | 87.8% <64.28%> (-12.2%) | :arrow_down: |\n. # Codecov Report\n\nMerging #1195 into master will increase coverage by 0.06%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/utils/handleHash.js | 96.15% <0%> (+3.84%) | :arrow_up: |\n. # Codecov Report\n\nMerging #1211 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Name/NameRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/rsg-components/Type/TypeRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1215 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/rsg-components/Props/PropsRenderer.js | 98.29% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1222 into master will not change coverage.\nThe diff coverage is 87.5%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/scripts/schemas/config.js | 89.55% <100%> (\u00f8) | :arrow_up: |\n| src/scripts/utils/sanitizeConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/scripts/logger.js | 76.92% <50%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1239 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1241 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/scripts/utils/findUserWebpackConfig.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1248 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...mponents/Markdown/Blockquote/BlockquoteRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../client/rsg-components/Markdown/Pre/PreRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/client/rsg-components/Name/NameRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/client/rsg-components/Link/LinkRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ient/rsg-components/TabButton/TabButtonRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...c/client/rsg-components/Heading/HeadingRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...omponents/ComponentsList/ComponentsListRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nt/rsg-components/Playground/PlaygroundRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...lient/rsg-components/Markdown/List/ListRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/client/rsg-components/Text/TextRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 4 more | |\n. # Codecov Report\n\nMerging #1270 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/client/rsg-components/Props/PropsRenderer.js | 98.29% <\u00f8> (\u00f8) | :arrow_up: |\n| ...client/rsg-components/Argument/ArgumentRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1288 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/loaders/props-loader.js | 97.82% <100%> (\u00f8) | :arrow_up: |\n| babel.config.js | 100% <0%> (\u00f8) | |\n. # Codecov Report\n\nMerging #1293 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/scripts/config.js | 94.28% <100%> (+0.16%) | :arrow_up: |\n. # Codecov Report\n\nMerging #1296 into master will not change coverage.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/client/utils/rewriteImports.js | 95.83% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1304 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...omponents/ReactComponent/ReactComponentRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...-components/ToolbarButton/ToolbarButtonRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nt/rsg-components/Playground/PlaygroundRenderer.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/client/rsg-components/Examples/Examples.js | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...client/rsg-components/Examples/ExamplesRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n| src/client/rsg-components/slots/IsolateButton.js | 100% <100%> (\u00f8) | :arrow_up: |\n| ...nt/rsg-components/StyleGuide/StyleGuideRenderer.js | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #1305 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/loaders/utils/getComponentFiles.js | 100% <100%> (\u00f8) | :arrow_up: |\n. ",
    "lapidus": "Oups, that is embarrassing ... Can't understand how I overlooked it, but thank you!. ",
    "avaly": "Indeed, it does work with the latest beta: https://github.com/styleguidist/example/pull/2\nAs a workaround for folks who are on react-styleguidist <=4.* :\njs\nupdateWebpackConfig(webpackConfig, env) {\n  webpackConfig.module.rules = webpackConfig.module.loaders.concat([\n    // your custom rules here\n  ]);\n  webpackConfig.module.loaders = [];\n  return webpackConfig;\n}. ",
    "joerodrig": "@n1313 This appears to be the decided directory structure that is going to be used within Rails in the 5.1 release unless something major changes(https://github.com/rails/webpacker/issues/72). I've tried using symlinks with some success, but then I realized that I was ultimately just symlinking my entire vendor folder to the root directory to get things working. I'm sure this is just an edge case as most apps will have package.json/node_modules in the root directory, but if support for custom node_module directories is on the radar(if that's actually what the problem is), it'd help us people locked into Rails! . I was able to resolve this issue by moving my config to /vendor/config/webpack/styleguide.js. I believe the issue was related to this line. The findup method previously had no way of ever finding the package.json file, which ended up producing the error here I'll look more into what's in the 5.x beta and see if I can contribute in some way!. ",
    "roychoo": "This is an issue with react-group. I have created a pr with react-group. https://github.com/sapegin/react-group/pull/1. @sapegin I guess the reason is that options of import is not enabled in buble? Is there any plans to add that? Or maybe abstract the options somewhere?. Yeah you are right, I misread the buble docs. My bad.. though it might not be the best way, and it might print relative path instead of the modules path that client is going to write.\nit seems that https://github.com/nerdlabs/react-docgen-imports-handler will put the imports in the documentation, and maybe comment the block so that buble doesn't throw errors??\n. you can actually wrap the connect component directly in the readme examples.\ni had not tried it, but along this lines should be possible\n```\nconst Provider = require('react-redux').Provider;\nconst createStore = require('redux').createStore;\nconst reducers = require('./reducers').default;\nlet store = createStore(reducers);\n\n\n\n```. ",
    "theodorosploumis": "Hi, I could help with this if you like. I am not a logo designer but I like creating logos and graphics for open source projects. Should I proceed?\nThanks in advanced!. ",
    "olegshilov": "New logo reminds me Hydra logo from Agents of S.H.I.E.L.D. series (=\n\n. ",
    "kohlmannj": "@sapegin Thanks for the speedy reply!\nRe (1): I suspect I'm misunderstanding the Webpack best practice for building projects with external non-ES5 dependencies. I'll look further into this and see what's best for my real project; thanks for confirming this problem for me.\nRe (2): oh good, glad this particular issue wasn't just my babel-loader rule alone.. Closing this issue since (1) I have obvious ideas about a workaround, really by way of config best practices (2) the JSS PR has been filed. Thanks again @sapegin, super helpful!. @sapegin I see\u2026turns out I had (quite happily) migrated away from updateWebpackConfig in that very spirit! If this is the only envisioned mechanism by which externals would work in the future, I'd appreciate dangerously over deprecation.. @sapegin Yup, I agree! My main concern is that there's a way to do this at all, long-term. Again, that seems to be a \ud83d\udc4e\ud83c\udffc on entirely deprecating updateWebpackConfig.. ",
    "sjy": "Thanks a lot, sapegin. I will try the beta version.. 1.yes, my code works before I re-installed the dependencies;\n2.here is my configure file;\n```javascript\n/eslint-env node/\nconst path = require('path');\nmodule.exports = {\n    title:'Guide',\n    components: 'src/components/*/.js',\n    styleguideDir: './docs',\n    skipComponentsWithoutExample: true,\n    showCode: false,\n    serverPort: 7000,\n    verbose: true,\n    context: {\n        generateData: path.resolve(__dirname, 'src/utils/generateData')\n    },\n    getComponentPathLine: function(componentPath) {\n        const name = path.basename(componentPath, '.js');\n        const dir = path.dirname(componentPath);\n        return import ${name} from '${dir.replace('src/', 'lib/')}';;\n    },\n    getExampleFilename(componentpath) {\n        return componentpath.replace(/.js?$/, '.md');\n    },\n    webpackConfig(env) {\n        const dirs = [\n            path.resolve(__dirname, 'src'),\n            path.resolve(__dirname, 'node_modules/react-dates'),\n            path.resolve(__dirname, 'node_modules/hui'),\n            path.resolve(__dirname, 'node_modules/react-styleguidist'),\n            path.resolve(__dirname, 'styleguide'),\n        ];\n    return {\n        resolve: {\n            enforceExtension: false,\n            alias: {\n                components: path.resolve(__dirname, 'src/components'),\n                'rsg-components/StyleGuide/StyleGuideRenderer': path.join(__dirname, 'styleguide/StyleGuide'),\n                'rsg-components/ReactComponent/ReactComponentRenderer': path.join(__dirname, 'styleguide/ReactComponent'),\n            },\n        },\n        module: {\n            rules: [\n                {\n                    test: /\\.(js|jsx)$/,\n                    include: dirs,\n                    use: ['babel-loader'],\n                },\n                {\n                    test: /\\.(scss|css)$/,\n                    include: dirs,\n                    use: [\n                        'style-loader',\n                        'css-loader',\n                        'sass-loader',\n                    ],\n                },\n                {\n                    test: /\\.svg$/,\n                    include: path.resolve(__dirname, 'styleguide'),\n                    use: 'babel!react-svg',\n                },\n                {\n                    test: /\\.(eot|svg|ttf|woff|woff2)$/,\n                    include: path.resolve(__dirname, 'node_modules/hui'),\n                    use: 'url-loader?limit=10000',\n                }\n            ],\n        }\n    };\n}\n\n};\n```\n3 I found out the cause is I customied the style by add alias rules to webpack.\nThanks for your help \n. I  should customized the style of my guide following this page ?https://github.com/styleguidist/react-styleguidist/tree/v5.0.0-rc.1/examples/customised/styleguide/components\nor would you recommend  a best practice  for me otherwise the example , and would the customized way changes in the next releases?. Thank again \ud83d\ude04  you are pretty helpful \ud83d\udc4d I would follow the official examples and report an issue if I find anything doesn't make sense.. Let it open right now, I am still facing the issue even remove the customized stuff. . Please close this issue. It is due to one of my example.md with empty content wrapped in \"``\"\nmarkdown\n\n\n. ",
    "amandakoster": "Hello,  can someone point me to an example of how to import components using es6 code in example markdown file? I see this feature has been added in Styleguidist change logs but am unable to make it work. I am using styleguidist v7.2.5 with create-react-app  and react v16.4.2 and keep getting the error CompileError: import is not supported (3:0). Have researched this error and not finding any solutions. Thanks! . ",
    "andywer": "Feel free to ignore. But I thought it's easier than proposing stuff via twitter :). No concrete one, but we are quite close. Let's say about one more month maybe \ud83d\ude09\nThe release candidate will be out very soon and that's pretty much the deprecation of webpack-blocks 0.x.. ",
    "schneck": "Great, that solved the problem. I don't find this in the docs, however. Maybe it would be a good idea to add this particular issue in the paragraph you mentioned.\nAnyway, thanks for this great tool and your support!. Ah I see - sorry for the fuzz and thanks again.. ",
    "linde12": "Yup. This makes things very difficult when your library has dependencies to third party code. E.g. in my specific case i have a dependency to a component which in turn depends on a component named Object resulting in React saying \"Object.defineProperty is not a function\". ",
    "ZxBing0066": "Is there an option to simply ignore components expose to the global? like this below add a doNotExposeToGlobal option to section?\njs\n// src/utils/globalizeComponents.js\nexport default function globalizeComponents(sections) {\n    sections.forEach(section => {\n        if (section.components && !section.doNotExposeToGlobal) {\n            section.components.forEach(globalizeComponent);\n        }\n        if (section.sections) {\n            globalizeComponents(section.sections);\n        }\n    });\n}\nOr add an functional option shouldComponentsExposeToGlobal to the config.\nconfig in styleguide:\njs\n// styleguide.config.js\n{\n    shouldComponentsExpostToGlobal: function(name) {\n        return [\"Number\", \"Object\", \"String\"].findIndex(v => v === name) < 0;\n    }\n}\nchange source code:\n```js\n// src/utils/globalizeComponent.js\nexport default function globalizeComponent(component) {\n    if (!component.name || (config.shouldComponentsExpostToGlobal && !config.shouldComponentsExpostToGlobal(component.name)) ) {\n        return;\n    }\nglobal[component.name] = getComponent(component.module, component.name);\n\n}\n``. I have the same problem.. OK\uff0cI have changedrighttodecoded`.. \ud83d\ude02 Sorry for missed about this.. ",
    "mirague": "Facing the same issue with a custom component Image. Now it no longer works to create an actual window.Image instance.. ",
    "bluetidepro": "Oh, and I just noticed it seems like descriptions are not being pulled in, either.. Ahhh, that did it. Thanks @sapegin!. (It looks like the CI failed, but the tests were already failing locally, even before this change, so I don't think it has anything to do with my PR changes). @sapegin Cool, think I got all the comments fixed! :). @sapegin I think the issue here is you will always have people that want them in specific order. Like, for example, I prefer the way you have it today than this. I would not like this change as the default personally. Maybe you could just make it a config array so you could put them in any order in a custom array and it would output in that order you specify. Something like ['title', 'description', 'props', 'examples'] maybe?. @sapegin @stepancar Just chiming in, but yessss! Love this feature. +1 for adding it so it can be one component per page always.. Yeah, I'm having this same problem with my builds, so a patch for this would be great.. It's worth noting that if I still use highlightTheme: 'material', it DOES work fine. Although it gives me this warning: Warning: highlightTheme config option is deprecated. Use the theme property in the editorConfig option instead. So maybe it DOES has to do with the new editorConfig option?. @seivan No, I mean like if you were to go to https://react-styleguidist.js.org/examples/basic/#!/Button first, then in the examples you had various headers in the markdown (making the page extremely long possibly), you would be able to add an anchor link to your url (https://react-styleguidist.js.org/examples/basic/#!/Button#Headername for example) to auto scroll to that section on the long component docs.\nAgain, the best example I have is something like this: https://github.com/styleguidist/react-styleguidist#third-party-tools - Where when you click that link it auto scrolls all the way down to the \"third-party tools\" section because the header has the anchor id on it.\nReally, think should be fairly simple to do. Just need to add id's to the component that generates the headers from the markdown and then make sure it works with the routing in place.. @seivan Right, but that doesn't work in this use-case because sometimes you write markdown notes, headers, and comments above the examples, but the isolation mode for each example that you are referring to is just for the example part. So, if I wanted to link to a certain header of the component's page docs then I wouldn't be able to today. This is esp useful if you have long docs for a component, and that's the use-case that came up for me.\nHere is a screenshot of what I mean for my use-case: http://bluetide.pro/2cl4JB - As you can see, that's just a small portion of the long page of docs for the Grid component I made. Setting one column width in my screenshot is an h3 (I believe), it would be nice to link someone directly to that part of the docs for the Grid component if I'm referencing that or need to show them something, rather than them digging through that whole page to find it.. @seivan Sweet! Yeah, it should be fairly straight forward to build out, since it's just added an id in the markdown generator for the headers, but I will take a closer look this week to see if it's as easy as I think it should be! :) haha. Should we also add the Gitter chat as a place to answer questions in?. Is there any tools that allow us to like lint this or validate it on an automation level? May make it easier to enforce? Or maybe a \"precommit\" hook?. ",
    "alampros": "This is a super exciting idea. I just started playing with styleguidist yesterday, but my (very uninformed) strategy would be to rely on a common styleguide state object:\n\nAdd react-redux to the project and wrap the whole styleguide in a store provider\nModify <Props> and supply a component to handle each of the prop types. The values of each would be tied to styleguide[componentId][propName] in the store.\nEach <Wrapper> (or <Playground>?) in the <Examples> could then project the values from the store onto the example's props.\n\nExample Wrapper\n```jsx\nimport { Component, PropTypes, Children, cloneElement } from 'react'\nimport { connect } from 'react-redux'\nexport default class Wrapper extends Component {\n  static propTypes = {\n    styleguideProps: PropTypes.object,\n    children: PropTypes.node.isRequired,\n  }\n  render() {\n    const {\n      styleguideProps,\n      children,\n    } = this.props\n    if(!styleguideProps) {\n      return children\n    }\n    return Children.map(children, child => {\n      return cloneElement(child, styleguideProps)\n    })\n  }\n}\nconst mapStateToProps = (styleguideState, ownProps) => {\n  return {\n    styleguideProps: styleguideState[ownProps.componentId],\n  }\n}\nexport const StateMappedWrapper = connect(mapStateToProps)(Wrapper)\n```\n. @sapegin totally fair point. It was the hammer I had in my hand at the time. heh\n\nUI is much harder question\n\nThis seems like a straightforward map of propType => input component, no? Add a column to the Props table with cell renderers mapped from propType:\njsx\n{\n  'bool': <input type=\"checkbox\" ... />,\n  'string': <input type=\"text\" ... />,\n  'enum': <select .... />,\n}. > checked, unchecked and the value defined in Markdown file for a particular example\nPerhaps treat it like the context configuration option, where an object is made available to each example with the current state of the Props. However, that would mean that each markdown example would have to opt-in to using the controlled props.. ",
    "darrylsepeda": "Does this plan still ongoing?\nIs there anything I can do to help realizing this plan?\nPreviously I tried to add additional combobox in wrapper.js, but everytime I change the value, wrapper.js can't pass the new props to the child components (I can't find any ways to pass it in preview.js). I also don't understand how codemirror works, is it possible for codemirror to read our changes?. Thanks @sapegin, I will take a look at the API.\nI mean, the changes that has been made by user in the website (come from our function).\nFor example, user choose size: 20px from combobox, if I change the Markdown files from combobox onChange, the website will be refreshed everytime user change the combobox value right?. Just find similar issue here https://github.com/styleguidist/react-styleguidist/issues/327.\nI will close this issue and join there. ",
    "danvoyce": "Has any body had any luck with moving this forward? This is my first time playing with Styleguidist and this seems like such an obvious feature that is missing, unless I'm missing something? . > Has any body had any luck with moving this forward? This is my first time playing with Styleguidist and this seems like such an obvious feature that is missing, unless I'm missing something?\nWhy is this marked as off topic? I'm just looking to get some help on this matter? \u00a0\ud83d\ude33. ",
    "Knorcedger": "@okonet \nWe are building a huge styleguide that will feature lots of components organised in different Sections. The styleguide will be a tool for colleagues of different backgrounds (lot's of them non-technical) that will be able to see and select the components they want to use in order to display the data they want to present to clients. Based on their needs, we want to guide them to a specific Section, and not show them every available component.\nAdditionally, we have lots of heavy components (HTML and SVG based) and the initial loading time on the browser can be longer that what we would want.\nAnd finally, the scrolling from the first component to the last one is massive. Too much information on a single page.. @sapegin \nIf I understand correctly you are suggesting a proper routing system that can display both components and sections in Isolated mode and maybe have even more features, right?\nIf that's the plan, I think I will create a fork for our needs for now, as I described in my initial comment, and will move back to the original styleguidist once the routing is implemented :). @sapegin Sure, I will work on this the next few days and will create the Pull Request :). @sapegin I'm working on this. Hopefully a PR will come in late next week :) . Created a PR here https://github.com/styleguidist/react-styleguidist/pull/394\nNeed some help to run the tests, looks like react-addons-test-utils is no more.. Cool, I will wait for the other PR to be merged first and then add the tests. In the mean time will fix the Changes Requested :). @sapegin updated the PR. Let me know if you want me to clarify anything. Tests are still missing\nP.S. Also, after merging master in, everything has a purple border, not sure why.. I tried your proposed solution but that doesn't solve the problem that to open an isolated example you have to hover over the \"opacity: 0\" link.. I think we have a communication problem, and that's why I updated the PR with the changes you suggested. If you run the project with npm run start:sections and go to the first Button example that says 'Push Me' the 'Open Isolated' but has opacity 0, and the only way to reveal it, it to hover over the actual invisible button, and not the whole container. That was the initial problem and I don't know how to fix.. Ok, cool. Shall I revert back to this commit and then add the tests?. @sapegin I reverted to the commit you suggested and tried to adjust the tests, but I'm not familiar with Jest and it's snapshots so I'm not sure if it's 100% ok. At least npm test was reporting no errors locally :). From a usability perspective, having an always visible but unobstructive toolbar is in my opinion superior to links that appear on hover. I like and support the idea.\nP.S. The specific icons are not the best :). I created an IsolatedLink component that contains the markup and the CSS for it. I believe that the CSS rule that says \"on hover of this element, reveal the IsolatedLink\" should be inside the component (the component would just need the className for the element that will reveal the component once that element is hovered).\nDo you agree with this approach?\nTrying to implement this, I run into a problem with how to use this class inside the styles object. Following is the IsolateLinkRender where hoverClass is the class I'm getting from the parent component, and trying to use it in the styles object. Obviously the following doesn't work, since I don't know how to pass the hoverLink from the component to the styles object. Any help?\n```javascript\nconst styles = ({ font }) => ({\n    [hoverClass]: {\n        '&:hover $isolatedLink': {\n            isolate: false,\n            opacity: 1,\n        },\n    },\n    isolatedLink: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        fontFamily: font,\n        fontSize: 14,\n        opacity: 0,\n        transition: 'opacity ease-in-out .15s .2s',\n    },\n});\nexport function IsolatedLinkRenderer({ classes, hoverClass, isIsolated, link }) {\n    return (\n        \n            {link && (\n                isIsolated ? (\n                    \u21fd Back\n                ) : (\n                    Open isolated \u21e2\n                )\n            )}\n        \n    );\n}\nIsolatedLinkRenderer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    hoverClass: PropTypes.string.isRequired,\n    isIsolated: PropTypes.bool,\n    link: PropTypes.string,\n};\nexport default Styled(styles)(IsolatedLinkRenderer);\n```. @sapegin I created the IsolatedContainer component. Since the CSS rule for \"onHover\" is inside the component, that means that on heading hover show the \"Open Isolated\" link (it used to be onHover of the whole component info area show the link). That seems fine by me, but theres a problem with the Isolated example which has no title. It used to be on hover of the code example area but now the only \"hover\" area is the link itself which is hidden.\nAny ideas? Do you want me to update the PR to see the code?. I added tests for this function.. I tried to understand how to add tests for links, but I couldn't figure it out. Do you mind adding it?. ",
    "mshwery": "I agree that there are reasons one may want to display only one section (and/or component) at a time. This encapsulates the focus and provides visual boundaries to the documentation a user may care about at one time.\nMany component libraries with a similar layout (sidebar navigation for sections & components) will only display one thing at a time. I think this could be exposed as a simple styleguide.config.js option.\nThis might be a request slightly different than what currently represents \"isolated mode\" since what I'm describing would include the navigation elements and the currently selected section or component documentation.. Sounds like a lot of people might benefit from a simple way to have more control over the router to help achieve this.. You are right that it may not be solved wholly by routing, although that might be a logical split point for async on-demand bundles (when using webpack). Each route for a component or section would load it's bundle and the common/shared bundles.\n\nsplitting our big project into separate smaller packages and moving to a mono-repo structure\n\nYou are also right @n1313 that routing wouldn't necessarily solve anything for your goals, outright.. ",
    "valentindotxyz": "Awesome! Sorry I missed that and thanks again :). ",
    "lookapanda": "@sapegin wha is this solution? The link has become invalid (404).. ",
    "danrot": "After adapting the configuration I get a similar error:\n```\nyarn run v0.20.3\n$ styleguidist server\nStyle guide server started at:\nhttp://localhost:3000\nError when parsing packages/button/node_modules/asap/browser-asap.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/isomorphic-fetch/fetch-bower.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/asap/browser-raw.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/isomorphic-fetch/fetch-npm-browserify.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/is-stream/index.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/js-tokens/index.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/isomorphic-fetch/fetch-npm-node.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/fbjs/index.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/promise/index.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/promise/core.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/loose-envify/cli.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/promise/build.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/promise/polyfill-done.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/promise/polyfill.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/loose-envify/custom.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/loose-envify/index.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/loose-envify/loose-envify.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/loose-envify/replace.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/object-assign/index.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/node-fetch/index.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/react/react.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/ua-parser-js/package.js\nError: No suitable component definition found.\nError when parsing packages/button/node_modules/whatwg-fetch/fetch.js\nError: No suitable component definition found.\nFailed to compile.\nError in ./packages/button/~/loose-envify/cli.js\nModule parse failed: /Users/daniel/Development/massiveart/sulu-ui/packages/button/node_modules/loose-envify/cli.js Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\n| #!/usr/bin/env node\n| 'use strict';\n|\n @ ./~/react-styleguidist/loaders/styleguide-loader.js!./~/react-styleguidist/lib/index.js 96:30-134\n @ ./~/react-styleguidist/lib/index.js\n @ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\nError in ./packages/button/~/isomorphic-fetch/fetch-bower.js\nModule not found: Can't resolve 'fetch' in '/Users/daniel/Development/massiveart/sulu-ui/packages/button/node_modules/isomorphic-fetch'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\nError in ./packages/button/~/promise/build.js\nModule not found: Can't resolve 'fs' in '/Users/daniel/Development/massiveart/sulu-ui/packages/button/node_modules/promise'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\nError in ./~/rimraf/rimraf.js\nModule not found: Can't resolve 'fs' in '/Users/daniel/Development/massiveart/sulu-ui/node_modules/rimraf'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\nError in ./~/glob/glob.js\nModule not found: Can't resolve 'fs' in '/Users/daniel/Development/massiveart/sulu-ui/node_modules/glob'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\nError in ./~/glob/sync.js\nModule not found: Can't resolve 'fs' in '/Users/daniel/Development/massiveart/sulu-ui/node_modules/glob'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\nError in ./~/fs.realpath/index.js\nModule not found: Can't resolve 'fs' in '/Users/daniel/Development/massiveart/sulu-ui/node_modules/fs.realpath'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\nError in ./~/fs.realpath/old.js\nModule not found: Can't resolve 'fs' in '/Users/daniel/Development/massiveart/sulu-ui/node_modules/fs.realpath'\n@ multi ./~/react-dev-utils/webpackHotDevClient.js ./~/react-styleguidist/lib/index\n``. Ah, I have found something. In the lerna structure I can't use./packages//.js, when I am changing it to./packages//index.js` (which matches my folder structure) it is working...\nSo I am closing this, since it is not a real issue, but it could be explained better at some place.... Hm, I hoped you might have an idea... However, while playing around with it, I am asking myself if it is possible that there is somehow a limit on how long reading the sections may take?\nI am asking because if I make this and this line return less values (by simply put an In and A in front of the asterisk) it works, although I am retrieving less elements of course.. @sapegin Do you have any idea why this is happening?. Hey, I couldn't figure a single component making problems, but we've updated recently to 6.2.2, and now I get the following error instead:\n```\ndaniel@daniel-macbook ~/D/s/s/v/s/sulu> npm run styleguide\n\n@ styleguide /home/daniel/Development/sulu/sulu-minimal/vendor/sulu/sulu\nstyleguidist server\n\nYou can now view your style guide in the browser:\nLocal:            http://localhost:6060/\n  On your network:  http://192.168.1.17:6060/\nDONE  Compiled successfully!\n<--- Last few GCs --->\n[24684:0x5605e92dbd20]   378602 ms: Mark-sweep 1450.8 (1679.2) -> 1450.7 (1679.2) MB, 2068.7 / 1.1 ms  allocation failure GC in old space requested\n[24684:0x5605e92dbd20]   380972 ms: Mark-sweep 1450.7 (1679.2) -> 1450.7 (1639.7) MB, 2370.2 / 1.8 ms  last resort GC in old space requested\n[24684:0x5605e92dbd20]   383217 ms: Mark-sweep 1450.7 (1639.7) -> 1450.7 (1634.2) MB, 2244.1 / 1.5 ms  last resort GC in old space requested\n<--- JS stacktrace --->\n==== JS stack trace =========================================\nSecurity context: 0x223fafaa54d9 \n    1: / anonymous / [/home/daniel/Development/sulu/sulu-minimal/vendor/sulu/sulu/node_modules/watchpack/lib/DirectoryWatcher.js:~280] pc=0x256abbfef2a5\n    2: / anonymous / [/home/daniel/Development/sulu/sulu-minimal/vendor/sulu/sulu/node_modules/gracefu...\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory\n 1: node::Abort() [node]\n 2: 0x5605e6ccbbbf [node]\n 3: v8::Utils::ReportOOMFailure(char const, bool) [node]\n 4: v8::internal::V8::FatalProcessOutOfMemory(char const, bool) [node]\n 5: v8::internal::Factory::NewFixedArray(int, v8::internal::PretenureFlag) [node]\n 6: v8::internal::HashTable::NewInternal(v8::internal::Isolate, int, v8::internal::PretenureFlag) [node]\n 7: v8::internal::HashTable::EnsureCapacity(v8::internal::Handle, int, v8::internal::PretenureFlag) [node]\n 8: v8::internal::StringTable::LookupKey(v8::internal::Isolate, v8::internal::StringTableKey) [node]\n 9: v8::internal::StringTable::LookupString(v8::internal::Isolate, v8::internal::Handle) [node]\n10: 0x5605e7403581 [node]\n11: v8::internal::Runtime_KeyedGetProperty(int, v8::internal::Object*, v8::internal::Isolate) [node]\n12: 0x256abb7842fd\n```\nThat the process is running out of memory might be an indicator that too many components are around, isn't it? Does this message help in anyway?. Well, I don't want to start implementing lerna here if there is no other additional value for me :confused: . Also found out that I can extend the heap size using the following command:\nbash\nnode --max-old-space-size=32768 /usr/bin/npm run styleguide\nHowever, if doing that it only takes longer until the heap is filled up :confused: . I have tried to improve the situation in https://github.com/sulu/sulu/pull/3845. We realized that when we delete the vendor (the node_modules of PHP) then the watch task works. As soon as you install these dependencies again, the watch task is not working anymore. So I guess it is somehow related to the glob, therefore I tried to execute it only once at the beginning of the styleguide.config.js and replace the glob package with fast-glob (see https://github.com/danrot/sulu/blob/enhancement/styleguide-performance/styleguide.config.js#L35).\nNow it takes only even longer until the heap seems to run out of memory. For this reason I am wondering if the line with the glob in our config is executed more than once. The strange thing is that the glob seems to execute quite fast, but the bigger directory structure with the vendor folder still makes problems :confused: . @n1313 I think I have already written that it works as soon as I delete our vendor folder, which is actually completely unrelated to JavaScript or Styleguidist. It seem like it is already broken when there is a big directory structure, although most of the directory structure is not relevant for the output.\nThat should also answer your second question, it works even with the glob (if I remove the vendor folder), so I assume it is working if I would list all components directly.\nstyleguid:build works as expected, the problem only affects the watch task.. @sapegin I would be happy if you could at least answer my question above:\n\nFor this reason I am wondering if the line with the glob in our config is executed more than once.\n\nOtherwise it is hard to further investigate my issue.. @jaruesink I also feel so. Tried to build a console.log right before/after our glob calls, and they seem to be called only once on startup. However, for that reason it doesn't really make sense to me why I am getting this error. I'd say it should be practically the same after getting the filenames, if there is a lot of other folder structure being used or not.. ",
    "UsulPro": "Thank you for response, guys! I don't mind, I think it could be closed now \ud83d\ude04 . Maybe demo page to play with this feature could help?\nto clarify: \nit keeps the code only if an error appears after you focus CodeMirror box and while you're in the box.\nif error was in the source code it shows immediately\nif you blur CodeMirror box it shows immediately\nif you blur CodeMirror box and then returned it still shows error\nSince it could be easily enabled/disabled in PlaygroundRenderer and EditorRenderer maybe it worth to add some keyboard shortcut for it?\nabout notifiction via border color I was just looking for the most minimalistic way to don't destroy the existing design. of course this maybe not the final decision. ",
    "binjospookie": "I change importLoaders: true to importLoaders: 1 and nothing changed. In my webpack.config.js all works (with importLoaders: true). ```\nUsing config file: /home/binjo/WebstormProjects/webpack2/styleguide.config.js\ncomponents:                   ./components/*/.jsx\nsections:                     null\nskipComponentsWithoutExample: false\ndefaultExample:               false\nshowCode:                     false\ntitle:                        UI\nstyleguideDir:                /home/binjo/WebstormProjects/webpack2/styleguide\nassetsDir:                    null\ntemplate:                     /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/scripts/templates/index.html\nserverHost:                   localhost\nserverPort:                   3000\nhighlightTheme:               base16-light\npreviewDelay:                 500\nverbose:                      true\ngetExampleFilename: \ngetComponentPathLine: \nupdateWebpackConfig: \nhandlers: \n  - \n\n\n\n\n\n\n\n\n\n\n\n\nconfigDir:                    /home/binjo/WebstormProjects/webpack2\nUsing Webpack config:\noutput: \n  path:          /home/binjo/WebstormProjects/webpack2/styleguide\n  filename:      build/bundle.js\n  chunkFilename: build/[name].js\nresolve: \n  alias: \n    codemirror:               /home/binjo/WebstormProjects/webpack2/node_modules/codemirror\n    rsg-codemirror-theme.css: /home/binjo/WebstormProjects/webpack2/node_modules/codemirror/theme/base16-light.css\n  extensions: \n    - .js\n    - .jsx\n    - .json\n  modules: \n    - /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/src\n    - /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/node_modules\n    - node_modules\nresolveLoader: \n  moduleExtensions: \n    - -loader\n    - .loader\n  modules: \n    - /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/loaders\n    - /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/node_modules\n    - node_modules\nplugins: \n  - \n    options: \n      template:      /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/scripts/templates/index.html\n      filename:      index.html\n      hash:          false\n      inject:        true\n      compile:       true\n      favicon:       false\n      minify:        false\n      cache:         true\n      showErrors:    true\n      chunks:        all\n      excludeChunks: \n        (empty array)\n      title:         UI\n      xhtml:         false\n  - \n    definitions: \n      process.env: \n        NODE_ENV: \"development\"\n  - \n    options: \n      minimize: false\n      debug:    true\n      options: \n        styleguidist: \n          components:                   ./components/*/.jsx\n          sections:                     null\n          skipComponentsWithoutExample: false\n          defaultExample:               false\n          showCode:                     false\n          title:                        UI\n          styleguideDir:                /home/binjo/WebstormProjects/webpack2/styleguide\n          assetsDir:                    null\n          template:                     /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/scripts/templates/index.html\n          serverHost:                   localhost\n          serverPort:                   3000\n          highlightTheme:               base16-light\n          previewDelay:                 500\n          verbose:                      true\n          getExampleFilename: \n      getComponentPathLine:\n\n      updateWebpackConfig:\n\n      handlers: \n        -\n\n        -\n\n        -\n\n        -\n\n        -\n\n        -\n\n        -\n\n        -\n\n        -\n\n        -\n\n        -\n\n      configDir:                    /home/binjo/WebstormProjects/webpack2\n  test: \n    test:\n\n\n\nfullBuildTimeout: 200\n\n\n\nmodule: \n  loaders: \n    - \n      test: \n        lastIndex: 0\n      include: \n        lastIndex: 0\n      loader:  json\n    - \n      test: \n        lastIndex: 0\n      include: \n        - /home/binjo/WebstormProjects/webpack2/node_modules/codemirror\n        - /home/binjo/WebstormProjects/webpack2/node_modules/highlight.js\n      loader:  style!css\n    - \n      test: \n        lastIndex: 0\n      include: /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/src\n      loader:  style!css?modules&importLoaders=1&localIdentName=ReactStyleguidist-[name][local]\n    - \n      test: \n        lastIndex: 0\n      include: /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/src\n      loader:  babel\n      query: \n        babelrc: false\n        presets: \n          - es2015\n          - react\n          - stage-0\n    - \n      test: \n        lastIndex: 0\n      include: /home/binjo/WebstormProjects/webpack2/components\n      exclude: \n        lastIndex: 0\n      use: \n        - \n          loader:  babel-loader\n          options: \n            presets: \n              - \n                - es2015\n                - \n                  loose:   true\n                  modules: false\n              - react\n    - \n      test: \n        lastIndex: 0\n      include: /home/binjo/WebstormProjects/webpack2/components\n      exclude: \n        lastIndex: 0\n      use: \n        - css-loader?modules&importLoaders&localIdentName=\"[name][local]___[hash:base64:5]\"\n        - postcss-loader\nentry: \n  - webpack-hot-middleware/client\n  - /home/binjo/WebstormProjects/webpack2/node_modules/react-styleguidist/src/index\ncache:         true\ndevtool:       eval\nstats: \n  colors:  true\n  reasons: true\n```\nI see this.\nIs it useful information?. I change my css-loader to\n{\n        test: /\\.css$/,\n        include: dir,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: 'style-loader',\n          },\n          {\n            loader: 'css-loader',\n            options: {\n              modules: 1,\n              importLoaders: 1,\n              localIdentName: '[name]__[local]___[hash:base64:5]',\n            },\n          },\n          {\n            loader: 'postcss-loader',\n          },\n        ],\n      }\nand all works perfectly! Thanks, @okonet  . Yes, sure.. ",
    "KatGr": "Hi all,\nI am trying to document a project at work using styleguidist but I found a problem which seems to fit  in here. The problem occurs when I am trying to render a tree.  In fact, I have different tree Items in which everyone can have another treeItem as a prop but it only shows the first \"layer\" of tree Items.\nIt would look something like this:\n<Tree title:\"Tree\">\n  <TreeItem title=\"Item1\">\n    <TreeItem title=\"Item2\"/>\n    <TreeItem title=\"Item3\"/>\n  </TreeItem>\n  <TreeItem title=\"Item4\"/>\n</Tree>\nThis example only shows Item1 and Item4. \nCould this be the problem you talk about or is this another issue?\nIf yes, is there any way to solve this at the moment :O ?\n. ",
    "MicheleBertoli": "+1 for tabs, it seems a great starting point to me.. We can't assume there's always going to be a text above the snippet, right?\nJest is using a combination of name + index, and we are doing the same at the moment.\nI can't see why we can't keep on doing it.\nAfaik we don't have evidence of any performance issue, therefore I wouldn't worry about it.\nThanks @sapegin @cef62.. I love the current UI, and I agree icons would make it more scalable.\n. > You can override components if you add them before the alias\nAbsolutely, but if you add the aliases inside dangerouslyUpdateWebpackConfig (in the \"old\" way) they don't work because of the order.\nFor example:\n```js\nupdateWebpackConfig(webpackConfig) {\n  webpackConfig.resolve.alias['rsg-components/StyleGuide/StyleGuideRenderer'] = path.join(__dirname, 'lib/styleguide/StyleGuideRenderer');\n  return webpackConfig;\n},\n````\nAs I said, I was just experimenting, so feel free to close this if you think it doesn't provide any value.\nThank you very much :). +1 that's my current solution :)\nThe only problem is that if someone doesn't know about this and follows the \"old\" way, the aliases don't work.. \"Old\" way = the way we used to override the components before v5 with updateWebpackConfig.\nSomeone (like me) may think they could replace updateWebpackConfig with dangerouslyUpdateWebpackConfig but it doesn't work.. Well done, @sapegin. \nThis looks pretty cool, thank you very much.\nMy only concerns are about the props the plugins' components receive (I'm thinking about Snapguidist).\nI'm also missing a lot of context here, so these might be dumb questions:\n- which props do the components receive? different props for each slot?\n- are the actions (e.g. hide/show for docs) pre-defined by the slots?\n- is it possible for components in different slots communicate to each other (I guess is covered by \"Store and change state for plugins\")?\n. ",
    "dlim-dlim": "thanks @n1313 @roychoo. I tried those options and think I'm running into an issue with my webpack setup for the styleguide that is causing the store to not render properly so going to do some debugging there. I find it gets tricky sometimes to find some parity between the webpack setup of your app vs. the webpack setup for styleguidist. If I discover anything outside of the webpack issue that benefits this thread I'll be sure to share here.. Updating the Readme.md file to require the unconnected component worked:\nconst Footer = require('./Footer').Footer;\n<Footer />\nBeyond that also added this line to my styleguide.config.js to resolve an issue with generators from Redux Saga:\nwebpackConfig.entry.unshift('babel-polyfill');. ",
    "imathews": "Thanks @sapegin. Second snippet is no big deal, more of an FYI for others. The first snippet is definitely a pain for us; is there anything I can do / provide to help to better debug?. I went ahead and forked the repo and tried to reproduce in the basic example, and I can't for the life of me get it to reproduce the error... even after making my webpack and styleguide configs identical, and installing the same dependencies... (obviously missing something, but I tried).\nHowever, I have been able to isolate this error in my own project; the issue boiled down to the webpack.config.js resolve.modules. In my project, I have \njs\nresolve: {\n    modules: [\n        `${__dirname}/node_modules`,\n    ],\n}\nIf I comment out this block, everything works fine. I don't really have any idea why this is happening, but maybe can help us to better diagnose.\n. npm list buble\n[...]/assets\n\u2514\u2500\u252c react-styleguidist@5.0.0-rc.1\n  \u2514\u2500\u2500 buble@0.15.2\nWhich is the same result that I get when running npm list buble in my fork of react-styleguidist/examples/basic, which is working fine.... Yup that was it \u2014 specifically an old version of acorn was required by jade@1.11.0 and was installed at the top of node_modules. Jade was an old dependency that we weren't even using, so that was a quick fix, though I would've expected npm to handle this properly.... @fdaciuk \u2014\u00a0yea I ended up being to solve this pretty quickly by removing the dependency that was requiring the old version of acorn. You can try an npm ls to get a sense of what might be requiring the old version of acorn. You'll also want to empty node_modules and rerun npm install . ",
    "fdaciuk": "@imathews did you solve it? Could you share what did you do? =). Thanks @n1313! I'm overriding the default webpack behavior, and that is the cause of my issue :|. ",
    "davidbucka": "@sapegin thank you for the fast reply!\nI really had such an error in the console, which I removed, but that didn't fix the problem.\nNow I guess the problem is, that I extend one component with subcomponents in one file like\n```\nclass Card extends React.Component {}\nclass Action extends Card {}\nexport default Card\nexport {Action}\n```\nhow could this be possibly fixed?\nand btw: I run webpack with sass/css & babel-loaders, but when running the $ npm run styleguide-server it does not run into the scss files which lie in an extra folder src/assets/scss/ what can I do about that?\n. > he only real fix is to stop inheriting components ;-)\ndamn..thank you\n\nCould you show me an example...\n\nsure here are my 2 files + folder structure:\n-src\n--assets\n----js\n------components\n----scss\n------app.scss (foundation)\nI do not import the app.scss into js - just load it into index.html\nstyleguide.config.js:\nmodule.exports = {\n  webpackConfig: {\n    module: {\n      loaders: [\n        // Babel loader, will use your project\u2019s .babelrc\n        {\n          test: /\\.js?$/,\n          exclude: /node_modules/,\n          loader: 'babel-loader'\n        },\n        // Other loaders that are needed for your components\n        {\n          test: /\\.css$/,\n          loader: 'style-loader!css-loader?modules'\n        }\n      ]\n    }\n  },\n  title: 'My Awesome Style Guide',\n  components: 'src/assets/js/components/**/[A-Z]*.js',\n  sections: [\n    {\n      name: 'UI-Components',\n      content: 'docs/components.md',\n      components: 'src/assets/js/components/**/*.js',\n    },\n  ],\n}\nwebpack.config.dev.js:\n```\nvar path = require(\"path\");\nmodule.exports = {\n  context: path.resolve(__dirname, 'src'),\n  entry: ['./assets/js/app.js', './assets/js/page.js'],\n  output: {\n        path: __dirname + \"/dist\",\n        filename: \"app.js\"\n    },\n  module: {\n    loaders: [\n      // JS\n      {\n        test: /.js$/,\n        exclude: /node_modules/,\n        loader: \"babel-loader\",\n        query: {\n          presets: ['es2015', 'react'],\n          plugins: [\n            'transform-decorators-legacy',\n            'transform-class-properties',\n            'transform-object-rest-spread'\n          ]\n        }\n      },\n      // SCSS\n      {\n        test: /.scss$/,\n        loaders: ['style-loader', 'css-loader', 'sass-loader']\n      },\n      // CSS\n      {\n        test: /.css$/,\n        loaders: ['style-loader', 'css-loader', 'sass-loader']\n      }\n    ]\n  }\n};\n```. > Most probably you need to use require option to add this file to your style guide\nSorry but where should i add the require option here?. thank you very much!  \ud83d\udc4d\ud83c\udffc . I close it- thank you for your help!. ",
    "tsdrummer": "Get the same error within web browser with version 5.0.0-rc.1.\nBut the terminal shows \"Compiled successfully!\"\nAlso --verbose doesn't show some interesting stuff.. @sapegin \ud83d\udc4d\ud83c\udffc rc.2 solves the issue. thanks.. ",
    "PDXIII": "I would love to be able to use front matter.. I would like to have it to be able to give components an approval status, which could be passed to the header. Or add an author etc. . ",
    "zz-james": "found in \n react-styleguidist/scripts/schemas/config.js\n. Thanks - that's the nicest RTFM reply I've had \ud83d\udc4d . This works.\nTHANK YOU . ",
    "green-arrow": "@sapegin - should that be part of this PR? I can always bring in rimraf and just remove the styleguide directory before the build starts.. @sapegin - Just FYI, I have a commit locally that uses rimraf to remove the styleguide/build directory before every build. If you'd like that to be in this PR, just let me know and I'll go ahead and push it.. @sapegin - alrighty. Should that be a separate PR or included here?. @sapegin - I'll just pop it in this commit then \ud83d\ude04 \nGive me a couple minutes and I'll push it out.. @sapegin @okonet - Changes for cleaning up the build directory are pushed. Let me know if you see anything that needs changed / added.. I would say it could be a minor update as it shouldn't break existing setups. . ",
    "handonam": "With the update to using the PropTypes package, this also leads to the documentation showing \"custom\" in the \"type\" field.  At least for me anyway.\nedit: looks like a react-docgen issue: \nhttps://github.com/reactjs/react-docgen/issues/171. ",
    "jskeate": "Okay, so I updated the tests. I have no idea what the Travis failures are about. I must have forked this off of something other than master, but then trying to rebase it onto that I find a lot has changed (jest vs ava, for example). Recommendation?. Okay, seems to be all cleared up. Not quite sure what happened -- I blame the GitHub editor.. ",
    "ldabiralai": "Whoops!. @sapegin I believe the tests are failing due to Enzyme issues. It's waiting on https://github.com/airbnb/enzyme/pull/876 to be released.\nSorry, forgot to mention that in my initial PR description.. Awesome, thanks! \ud83d\udc4d . ",
    "ankri": "Thanks to @sapegin's tip I am working on a PR right now.\nSo far I have implemented support for\n- [X] @param, @arg, @argument\n- [X] @deprecated\n- [X] @see, @link\n- [X] @version\n- [X] @since\nDo you have suggestions for other tags? . I forgot to add @return on props, my bad.  Public methods do support @return.\nA PR has been created that adds @return for props: #684 . Here is a jsbin of the rendered html with styling. I only added tags to Button and CounterButton. No need to scroll past CounterButton. # Button\n\nCounterButton\n\nAnother look at Button\n```javascript\nimport React, { PropTypes } from 'react';\nimport './Button.css';\n/\n * The only true button.\n \n * @version 1.0.1\n * @see Check the PR for more info\n * @author @sapegin\n * @author @ankri\n/\nexport default function Button({\n    color,\n    size,\n    onClick,\n    children,\n}) {\n    const styles = {\n        color,\n        fontSize: Button.sizes[size],\n    };\nreturn (\n    <button className=\"button\" style={styles} onClick={onClick}>{children}</button>\n);\n\n}\nButton.propTypes = {\n    /\n     * Button label.\n     */\n    children: PropTypes.string.isRequired,\n    /\n     * The color for the button\n     \n     * @see Check Wikipedia for a list of color names\n     /\n    color: PropTypes.string,\n    /\n     * The size of the Button\n     \n     * @since Version 1.0.1\n     /\n    size: PropTypes.oneOf(['small', 'normal', 'large']),\n/**\n * The width of the button\n *\n * @deprecated Do not use! Use size instead!\n */\nwidth: PropTypes.number,\n\n/**\n * Gets called when the user clicks on the button\n *\n * @param { SyntheticEvent } event The react `SyntheticEvent`\n * @param { Object } props All the props of Button\n */\nonClick: PropTypes.func,\n\n/**\n * A prop that should not be visible in the doc.\n * @ignore\n */\nignoredProp: PropTypes.bool,\n\n};\n...\n}\n```\n\n. # omitting type on @param\n\n. > There are quite a lot of markup repetition in JSDoc components: most of them use similar pattern and could be simplified to just this:\njsx\n  <Markdown text={`Since: ${tags.since[0].description}`} />\n\nThis was done on purpose.\nBy using this approach:\njsx\n<div className={classes.sinceBlock}>\n  <span className={classes.sinceHeader}>Since:</span>\n  {' '}\n  <Markdown text={tags.since[0].description} inline />\n</div>\n... everyone can change the styling of the headers like \"Since\" or \"Version\" like they want to. With your approach one would lose the styling options.\nBut I've got no problem with changing it like you suggested. What do you say?\n- Leave styling options but have more repetition in the code\n- Remove styling options and have a cleaner code. Added tests and documentation. Also fixed your suggestions.\nReady to review now.. Hm. I needed the changes from master for the tests to work with React 1.15.5. Can I do something?. I rebased it. The logo does not scale well because the aspect ratio of the logo I used was not 1:1. Maybe @SaraVieira can chime in and provide a Logo with an aspect ratio of 1:1 ?\nOn the other hand I don't mind using the emoji. I will look into 2. and 3. \ud83d\udc4d . Closing since eslint-plugin-react is clearly the better way to approach this kind of thing. I really like the new looks! Could you please also add a title attribute to all the toggles and buttons? I don't think there is a need for a separate tooltip dependency but titles for example would have helped me to understand what this button is for:\n\n. @einarlove Thanks for the reminder I will add support for @returns, too.. It is the same as _.groupBy, thanks!. Done:\njsx\n<Group key={`${param.name}`}>\n  <Code className={classes.name}>{param.name}</Code>\n  {param.type && ':'}\n  {param.type && <Code className={classes.type}>{param.type.name}</Code>}\n  <Markdown text={`\u2014 ${param.description}`} inline />\n</Group>\nI still need {param.type && ':'} and {param.type && <Code though so that the output is param \u2014 description when type is undefined.. They could all be undefined. ~And that will be handled by the PropsRenderer~\nI previously didn't really like the thought of a component being rendered by a parent component but then deciding in its render method that it does not want to be rendered at all. ... But I changed my opinion. The code is cleaner when the component deletes itself in the render method by returning null.. A short discussion about what should happen when the documentation is incomplete:\nCase A)\njavascript\nstatic propTypes = {\n  /**\n  * @param { SyntheticEvent } event\n  */\n  onClick: PropTypes.func,\n};\nThe output would be event : SyntheticEvent - null\nCase B)\njavascript\nstatic propTypes = {\n  /**\n  * @param { SyntheticEvent }\n  */\n  onClick: PropTypes.func,\n};\nthe output would be SyntheticEvent - null\nWhat do you think: Should I remove the nulls or should the nullsremain as a reminder that the user has forgotten to document their arguments correctly?\nI would prefer to leave the null as reminder.. Elegant. Fixed and thanks for the tip.. In the newest version there are no nulls rendered. . Tiny problem: name is required by Argument but @return does not have a name. \nThe key also uses name but I could use the title as the key and make name optional. . Sorry. it is require in ArgumentsRenderer and it is used as key.\nBut if it is not required by Argument I could remove it from ArgumentsRenderer and use \nkey={props.name || props.title}. Aw man I feel so dumb, you are totally right sir. My bad. Time for some coffee. ",
    "einarlove": "Why was @return not included in this feature?. Sweet! thanks for quick response and PR! \ud83e\udd47 . Does it support the other synonym @returns like you do for @param, @arg, @argument? \nhttp://usejsdoc.org/tags-returns.html\n. ",
    "forabi": "As far as I understand, RSG uses the Webpack pipeline so components are first transpiled to JS by Webpack and only then they are processed by RSG. Some TS components are already listed in my RSG. Only those with template strings cannot be processed.. @sapegin So how come some TS components are parsed and displayed in my styleguide? That's weird.. ",
    "SerdarSanri": "@sapegin I am not sure why this issue is closed. The example link you posted also refers to using imports but using imports in examples throws \"import is not supported (1:0)\" error.\njsx\nimport AnotherComponent from './AnotherComponent';\nconst Component = (props) => (<div><AnotherComponent/></div>);\nCompileError: import is not supported (1:0)\n1 : import AnotherComponent from './AnotherComponent';\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n. ",
    "robcaldecott": "Yes. I tried this but images reference in markdown are still not included in a static build. Even if I move the markdown files and images to the src folder. It's as if the default create-react-app webpack config is not working for markdown images.\nAnything else I can try?. OK, try this:\nhttps://github.com/robcaldecott/styleguidist-images\nClone it, npm install and then run npm run styleguide:build.. Copying the assets should work, easy enough to try. I'll report back.. I'm a PR virgin! But it's about time I gave back... and this product is super useful. :). OK, it works if I store all my markdown images in an assets folder and reference them with ./assetfilename in the markdown as long as I copy the contents of the assets folder to the final styleguide folder. The ./ is required if you want to host the static site in a sub-folder btw (which is essential for me.) This seems to work OK in dev and production builds.\nSo, regarding how to actually fix this I think we could use Copy Webpack Plugin and modify the scripts/make-webpack-config.js file to do this in production builds if the assetsDir config setting is present. I see if I can do this after a bit more testing.\nAnother workaround would be to add Copy Webpack Plugin to a custom config in styleguide.config.js.\nI'm no Webpack expert but this seems to way to go.. It was fine up to and including 6.0.33. Most MD engines seem to handle plain links.. On 7.0.4 and still seeing this. :(  I'll try my sample.. ",
    "KadoBOT": "Done. Tell me if that is enough.. Should I change\nBy default Styleguidist will search components using this [glob pattern](https://github.com/isaacs/node-glob#glob-primer): `src/components/**/*.js` and `src/components/**/*.jsx`.\nto\nBy default Styleguidist will search components using this [glob pattern](https://github.com/isaacs/node-glob#glob-primer): `src/components/**/*.jsx?`\n?. NP. thanks a lot.. Since I've just changed the ignore, should src/components/**/*.js be changed? Because it won't look for .jsx unless it is specified in the styleguide config, right?. ",
    "timsnadden": "For my own project I forked react-styleguidist to use jss with jss-preset-default. This doesn't include jss-isolate. . fontFamily: 'inherit' is added to the jss setup. One option is to also add color: 'inherit'. If this breaks the intended isolation model of jss-isolate then fontFamily should probably be pulled out of there and added explicitly to each rsg component as well. I see that a new version of jss-isolate has just been released too so setupjss.js could be updated to remove the customisations. . See #418. See #415 . I have had success fixing this problem by deleting yarn.lock (or package-lock.json for npm users) and reinstalling. I'm not sure what the cause was but one of the dependencies, perhaps transitive, is updated to fix this issue. What fixed this for me was adding the following to devServer in the styleguidist config.\nheaders: {\n    'Access-Control-Allow-Origin': '*',\n},. @rgrwkmn I cloned your repo, deleted package-lock.json and ran npm install && npm run styleguidist and it worked. It appears that it's a transitive dependency that has been updated and fixed the issue. @kopax The commands above should include running npm install after switching branches to update the packages that have changed in package.json. I tried this and was able to see the problem you raise here. \nAs an experiment I tried running yarn instead and it appears that there is a difference in the dependency resolution as the error doesn't occur when installed via yarn. I did seeing another error \"Encountered two children with the same key\" that appears unrelated to this importing issue.\nThe reason I tried using yarn is that my project uses yarn and deleting yarn.lock and reinstalling fixed this issue for me.. @kopax  \"The problem you raise\" is this git issue and \"the error\" is Error: import or require() statements can be added only by editing a Markdown. I checked out the branch and installed via npm and could see the error but when I installed via yarn the error wasn't there and instead it showed [object Object]. This is what I expect to see as fontawesome.config.js doesn't export anything. \nI don't know if I'm the one man who can achieve external imports. You could tell me by trying to install with yarn and seeing if the error still exists. I'm not suggesting that you should change your project to yarn, but it could be a clue that helps identify the underlying issue\nWith a yarn install the rsg-components/node_modules/react-styleguidist/node_modules/.bin directory contains:\nlrwxr-xr-x  1 timsnadden  staff    24B Mar  9 16:55 acorn -> ../../../acorn/bin/acorn\nlrwxr-xr-x  1 timsnadden  staff    24B Mar  9 16:55 buble -> ../../../buble/bin/buble\nlrwxr-xr-x  1 timsnadden  staff    35B Mar  9 16:55 escodegen -> ../../../escodegen/bin/escodegen.js\nlrwxr-xr-x  1 timsnadden  staff    36B Mar  9 16:55 esgenerate -> ../../../escodegen/bin/esgenerate.js\nlrwxr-xr-x  1 timsnadden  staff    29B Mar  9 16:55 findup -> ../../../findup/bin/findup.js\nlrwxr-xr-x  1 timsnadden  staff    41B Mar  9 16:55 react-docgen -> ../../../react-docgen/bin/react-docgen.js\nlrwxr-xr-x  1 timsnadden  staff    53B Mar  9 16:55 webpack-dev-server -> ../../../webpack-dev-server/bin/webpack-dev-server.js\nAnd with an npm install it contains:\nlrwxr-xr-x  1 timsnadden  staff    18B Mar  9 16:53 acorn -> ../acorn/bin/acorn\nI'm guessing that upgrading buble may solve this. Try deleting yarn.lock|package-lock.json and reinstalling. I'm not sure which dependency is causing the issue but this fixes it. @kopax For me the issue was resolved by removing yarn.lock and reinstalling. It's a hacky solution but can perhaps provide a clue to identify the root cause. I'm sorry it didn't resolve the issue for you. I've updated to use duplicate selectors (.CodeMirror.CodeMirror) to increase specificity enough to ensure overriding CodeMirror styles with any source order.. ",
    "ryosuke-hujisawa": "how about this ?\nnpm install markdown\nimport Markdown from 'markdown';. ",
    "tiagojsalmeida": "But that's not the purpose. Also Test depends on WrappedComponent.. What about when my component is generated by a function call?\nSo per example, some of my components are like:\nexport default makeIcon('name-of-the-icon', 'red');\nwhile makeIcon return a component.\nSo in theory i'm exporting a component but react-docgen doesn't detect it... ",
    "GrtDev": "Just in case it helps I uploaded my styleguide.config.js as well:\nhttps://gist.github.com/Sector22/184e10ac7435e62da24d797a77c9ddba . It is running in a node 7.2.0 container, locally I'm running 7.3.0\nAlso using webpack 2.2.1\nYou can view the styleguide here: http://test.snailhousecampervans.com.s3-eu-central-1.amazonaws.com/styleguide/index.html. yes, they are.. Ah there we go! Nice catch! I might have some time this weekend to fix it. (: Thanks for your help!. ",
    "apennell": "I think it would be great to add a carat icon or something like that on the Props & Methods link, and possible also the Code button, to indicate more clearly that clicking it will expand more information. I like keeping them hidden (as noted earlier, this list can get long), but it's very important information and I think the link may be too easy to overlook as it appears right now. Adding something like an icon would at least indicate that the link will do something more without having to hover to notice that it's link.. \ud83d\ude4c This is exactly the problem I'm wrangling with right now! \nThe issue is that in order to use react-css-modules, at the bottom of the file you call export default CSSModules(Table, styles); instead of just export default Table;.\nFrom their example:\n```js\nimport React from 'react';\nimport CSSModules from 'react-css-modules';\nimport styles from './table.css';\nclass Table extends React.Component {\n    render () {\n        return \n\nA0\nB0\n\n;\n    }\n}\nexport default CSSModules(Table, styles);\n```\n\nCSSModules is used to decorate Table component using ./table.css CSS Modules. When Table component is rendered, it will use the properties of the styles object to construct className values.\n\nLike @kasperoo, in trying to make a Button component with both react-css-modules and styleguidist, my code successfully compiles but I get this warning: Warning: src/components/Elements/Button/Button.jsx matches a pattern defined in \u201dcomponents\u201d or \u201csections\u201d options in your style guide config but doesn\u2019t export a component. and my button component isn't added to the styleguide. It is, however, exported successfully and rendering in my app outside of my styleguide. Likewise, if I remove the CSSModules bit from the export statement, my component does then appear in the styleguide, but it no longer uses CSS Modules.\n. React Styleguidist does work with the original CSS Modules because that doesn't need a CSSModules decorator on export, so that's what I'm implementing for now. However, react-css-modules was created specifically for the use case of CSS Modules in React and improves the use of the package in that context. \nI think this may be a feature request, but it's definitely worth considering making Styleguidist compatible with React CSS Modules. I did a lot of research about how best to go about making my company's living style guide/component lab (React Styleguidist came out on top for documentation and viewing the guide \ud83d\udc4d) and it seemed to me like CSS Modules is the way forward. Seeing as there is so much overlap between building modular CSS and building/documenting the components styled with it, it would be really great if React Styleguidist supported React CSS Modules!. @sapegin Thanks for your quick response! I'll look into this more now that I know what the issue is on the Styleguidist side and see if I'm able to find a solution, although I may settle on sticking with the basic CSS Modules. . Yeah, I was trying to figure the benefits out initially and decided to go with that because CSS Modules recommended it for use with React. As far as I can tell, the main difference is that it's easier to work with and have multiple classNames, which isn't a huge deal.. PERFECT @sapegin ! Adding that second export on the function line (export const Button = ({}) => {  /* ... */  })was what fixed it for me.\nI've been lost in the weeds of the web, trying to patch together docs, examples, blogs, and tutorials--none of which, of course, are using the exact same stack and approach as I am. I love the issue you just added for documenting usage with various styling libraries! The Button.js files in your examples introduced me to stateless functional components, so I was using those but with an arrow function. I just had const Button = ({props}) => {  /* ... */  }. Is the additional export something specific to the way Styleguidist or react-docgen, or a simple basic React thing that I missed?\nIn case anyone happens to be using my exact setup and has run into this problem, here is my working solution, which also implements the multiple class option from react-css-modules):\n```js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CSSModules from 'react-css-modules';\nimport styles from './Button.css';\nexport const Button = ({children, onClick, buttonStyle, size, isFullWidth, disabled, loading}) => {\n    return (\n                    styleName={${buttonStyle} ${size}Size ${isFullWidth ? \"block\" : \"\"} ${disabled ? \"disabled\" : \"\"} ${loading ? \"loading\" : \"\"}}\n        >\n            {children}\n        \n    );\n}\nButton.propTypes = {\n    /* ... /\n}\nButton.defaultProps = {\n    /* ... /\n}\nexport default CSSModules(Button, styles, {allowMultiple: true});\n```\n...side note: if that code isn't done in the best way, feel free to tell me/future readers what I should refactor! I don't have a senior frontend dev to review my code, hence getting lost in the web weeds \ud83d\ude01 . I'll update my experience after going in some loops around this issue. I got react-css-modules working (in a project started with Create React App), but once I tried testing I found that there were issues with Jest. This led me to this issue in the react-css-modules repo and the creator says in a comment that while he isn't deprecating the project,\n\nI personally don't develop any project at the moment that would use react-css-modules. There is simply no good reason to use react-css-modules over babel-plugin-react-css-modules. There is no good reason to use react-css-modules over styled-components either. Though, there are a few good reasons to use babel-plugin-react-css-modules over styled-components (notably \u2013 performance).\n\nSeeing that, I decided to try out babel-plugin-react-css-modules. I spent a good while trying to configure that but in the end I just couldn't get it to pull up my stylesheets and had to abandon that. I went back to regular old CSS Modules, and that's where I'll  be until/unless someone presents me with a solution to my babel-plugin issues! Although there are benefits to that and it's much easier to use the syntactic sugar it applies, in the end CSS Modules is the one that I could get working.. Thanks for your input everyone! It seems like @n1313 was pointing me in the right direction with the suggestion of no ExtractTextPlugin. I made a new config based on the gist that @sapegin posted and this sample webpack.config from css-modules, but the problem persisted. In this case the classes weren't transformed and included on the components.\n@sapegin You mentioned being able to share additional configs. Is there anything else you can share that might help? I also noticed that you still used ExtractTextPlugin and am curious about that, because it seemed like that was what was pulling out my CSS into a separate file initially.. ",
    "hmontes": "this code (Obviously the React-router store). Where i put? in .md file associated to my component ? (I have the same issue with Link)\nconst { Provider } = require('react-redux');\nconst configureStore = require('../utils/configureStore').default;\nconst initialState = {\n  app: {\n    name: 'Pizza Delivery'\n  }\n};\nconst store = configureStore({ initialState });\n<Provider store={store}>\n  <App greeting=\"Choose your pizza!\"/>\n</Provider>. Okey. Temp solution.\n\n\nCreate a doc folder in your actions and reducers folder.\n\n\nCreate a Markdown of your files. Example. Actions/doc/ModalActions.md\n\n\n```\ncloseModal\nThis action close all the  open Modals\n```\n\nPut this in styleguide.config.js\n\nsections: [\n    {\n      name: 'Actions',\n      sections: [\n        {\n          name: 'Modal',\n          content: 'src/actions/doc/ModalActions.md'\n        },\n        {\n          name: 'Another actions',\n          content: 'src/actions/doc/anotherActions.md'\n        },\n      ]\n    }\n  ]\nIs not the ideal but works.. Any new ideas? I'm doing an CSS Framework and i'm very interested in this option.. ",
    "rafaesc": "@kevinbarabash I dont think that should integrate react router inside of react-styleguidist, for the reason that maybe it could generate a weird behavior because as much as react-router as react-styleguidis, both use hashs to link pages.\nYou can use this variable to create a condition process.env.STYLEGUIDIST_ENV and replace the Link component when try to render in react-styleguidist. Hi @sapegin,\nAlready updated vue-styleguidist with your 7.0.0 version, in addition, fixed problems with the navigation and the components are separated.\nYou can see  the demo here:\nhttp://rafaelescala.com/vue-styleguide-navigation/\nThere are some differences with pagePerSection but if you agree I can create a PR\nRegards\n. haha maybe @viljamis, but how you said it would be better to receive more feedback to develop this feature. Actually, I think that this feature would start in react-styleguidist and then with vue. @sapegin great!\nIt's a good idea abstract the setting per sections\n@viljamis but when you disable showCode or showUsage, it only collapse the table, but the table still visible if you click on the title. I think that you want that in that situation it is hidden. So adding @okonet suggestion, could be this:\njs\nmodule.exports = {\n  sections: [\n    {\n      name: \"Design tokens\",\n      components: () => [\n        \"./src/components/Button/Button.js\",\n        \"./src/components/RandomButton/RandomButton.js\",\n        \"./src/components/WrappedButton/WrappedButton.js\"\n      ],\n      collapseCode: true, // Before `showCode:false`\n      collapseUsage: true, // Before `showUsage:false`\n      isolated: true // Show the isolate button\n    },\n    {\n      name: \"UI Components\",\n      components: () => [\n        \"./src/components/Label/Label.js\",\n        \"./src/components/Placeholder/Placeholder.js\"\n      ],\n      hideCode: true, // Completely hidden `display:none`\n      hideUsage: true, // Completely hidden `display:none`\n      isolated: false // Hide the isolate button\n    },\n    {\n      name: \"Deep\",\n      sections: [\n        {\n          name: \"Files\",\n          sections: [\n            {\n              name: \"First File\",\n              components: () => [\n                \"./src/components/Label/Label.js\"\n              ]\n            },\n            {\n              name: \"Second File\",\n              components: () => [\n                \"./src/components/Label/Placeholder.js\"\n              ]\n            }\n          ]\n        }\n      ],\n      collapseCode: true, // ??? What happens here? Do it affects their children?\n      isolated: true\n    }\n  ]\n};\nBut it needs to add the pagePerSection and the split for depth (sectionDepth by @viljamis), I think that it should be global because maybe it would be strange that in some sections are separated and other sections not, so it shouldn't provide this possibility per sections, I think.\nRegards. @okonet that's better.\nif everybody agree it, so I can create the PR.. @marcdavi-es yes, this feature is developing and it could be discussed.\nOk, I would like to share some advances, when I tried to implement separatePage: 'section' || 'components', I saw that there are sections that have as children, sections and components, so I thought that there should is another alternative to manage it.\nSo, took the sectionDepth option, by @viljamis, because the routes are navigated by deep and at the same time was very easy to implement.\ndiff\n{\n+  pagePerSection: true,\n  sections: [\n    {\n      name: 'Documentation',\n      content: 'docs/Documentation.md',\n      sections: [\n        {\n          name: 'Files',\n          content: 'docs/Files.md',\n          components: () => ['./src/components/WrappedButton/WrappedButton.js'],\n          sections: [...],\n        },\n      ],\n+      sectionDepth: 2,\n    },\n    {\n      name: 'Components',\n      content: 'docs/Components.md',\n      sections: [\n        {\n          name: 'Button',\n          content: 'docs/Files.md',\n          components: () => ['./src/components/Button/Button.js']\n        },\n        {\n          name: 'Fields',\n          components: () => ['./src/components/Placeholder/Placeholder.js']\n        },\n        {\n          name: 'Others',\n          components: () => ['./src/components/RandomButton/RandomButton.js']\n        },\n      ],\n+      sectionDepth: 0,\n    },\n  ],\n};\nOther feature that I am adding, it is the pathname to navigate, only available if active the pagePerSection\n\nAnd this way when you want isolated a section or component\n\nYou can see the url change from #/Documentation to #!/Documentation, and when you navigate a deep route, the route change to #/Documentation/Files, that it is useful when you have parents with the same name of the their children\nExample isolated\n\nOnly I have a problem that maybe I am not sure about the solution, when you navigate in a page that shows all his children (sectionDepth: 0), and you want to go a section's child, what url should be appear. Like this example\n\nI can't use /#/Components/Button, because it will filter his parent, and that isn't the idea.\nI was thinking to add a param like this /#/Components?id=button (/#/Components?id=slug)\nMaybe in a couple of days I can already generate a PR.\nRegards!\n. @dinukadesilva you can modify the styles of UI to create that feature.. @sapegin, its true. Ok I already fix it  :-). Yes, of course!. @sapegin @okonet I added a new file to handle the hash.\nhttps://github.com/styleguidist/react-styleguidist/blob/ad5b8b2cf0cf6e4f17f4af34cd3031fc284f992e/src/utils/handleHash.js\nYou can see the tests.\nhttps://github.com/styleguidist/react-styleguidist/blob/ad5b8b2cf0cf6e4f17f4af34cd3031fc284f992e/src/utils/tests/handleHash.spec.js\nAnd his implementation here\nhttps://github.com/styleguidist/react-styleguidist/blob/ad5b8b2cf0cf6e4f17f4af34cd3031fc284f992e/src/utils/getInfoFromHash.js#L17-L29\nhttps://github.com/styleguidist/react-styleguidist/blob/ad5b8b2cf0cf6e4f17f4af34cd3031fc284f992e/src/index.js#L12-L31\n. @sapegin I was thinking where use url-parse but I am not sure if we really need it because url-parse doesn't have a method to get the pages of hash and our router is something particular.\nI found path-to-regexp, it seems useful but it is more useful to set an URL with params\nhttps://github.com/pillarjs/path-to-regexp/blob/master/Readme.md#compile-reverse-path-to-regexp\nThen found hasher, it's a good library because you can customized the pretend hash and you can get the router as array, but it has a strong dependency with location.hash, so it needs to integrate the router with the library when we only need an util.\nSo I had decided to adapt the part of hasher that we need in handleHash file, it doesn't have a strong dependency, easy to test and isn't necessary a big migration.\nWhat do you think?. @sapegin @okonet thanks!\nI will add documentation. @sapegin it's strange that Travis told that there is an error when I only modified Markdown files.. Yes, yesterday I restarted twice and it had the same result\nOpening Cypress...\nA configuration option you have supplied has been renamed.\nPlease rename videoRecording to video\nmaybe I have to send another change to work fine, please @sapegin review my changes in docs.. It seems that there still is the bug when Travis tries to validate the branch, however, the PR was passed by Travis.. @sapegin I think there is no more, I am going to solve the conflict with the master branch.  Apologies I thought you mean that, tell me if I can help in any way. Perfect, thanks!\nI will work it :). Interesting, thanks @aabenoja \nI have to update the PR and to use lodash. @sibamohanty995 yes, you can read the documentation here\nhttps://react-styleguidist.js.org/docs/configuration.html#pagepersection. Sure, here there is an example\nhttps://github.com/styleguidist/react-styleguidist/tree/master/examples/sections. Hi @milesj,\nThe behavior of pagePerSection changed a little bit to improve which section should split.\nYou can see the documentation here\nhttps://react-styleguidist.js.org/docs/configuration.html#pagepersection. @kopax I couldn't replicate it, can you send a test case to review it?\nyou can fork this repo https://github.com/styleguidist/example. @sapegin can I take it?. @sapegin Perfect!. I was trying to integrate the new context API and in the project works perfect, how I expected, the tests failed, because, I have to change the integration in the tests providing the new context.\nBut there is an error in dive function of enzyme, when it tries to find the components children.\nI found this issue, that it relates\nhttps://github.com/airbnb/enzyme/issues/1647\nIf it fixes, tests could pass\nI am working with\n\"enzyme\": \"^3.5.0\",\n\"enzyme-adapter-react-16.3\": \"^1.1.0\",. No problem, I will create another PR taking next as branch. I hope that Enzyme could fix soon.. I agree with separatePage approach, it will be easier to understand with a boolean flag.\nAlthough I would like to standard the name of pages, sections, content and components.\n. Fix #943 . yes, it's because in this case tries isolated so if I want that use the same section setting, its necessary that the sections have codeSamples and propsMethods if you see on the function filterComponentsInSectionsByExactName, right now returns a section.\nhttps://github.com/styleguidist/react-styleguidist/pull/941/files#diff-5cafb86def7c61e87a06ed3f7c5b95cc. But I have understood that preview always should render, like this\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Playground/Playground.js#L68-L72, or how would I have to create the condition?, Thanks!. Yes, because before returned a component list to isolate them, but how I need the codeSample and propsMethods section setting to mantain the setting, now it returns section list. @okonet Like history js?, but its possible that it necessary migrate several things.. It isn't necessary because it was an implementation of the past pagePerSection and there was a logic if should have IsolateButton or not.\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/slots/index.spec.js. @sapegin I used loop twice, but in addition, I had to use  forEach, because find, doesn't support deep level.. jeje sorry,  yes how you said that we can use _.find to avoid unnecessary cycles and an ugly found variable\nI understood that we don't need the found variable, but I am not sure that there is a way to avoid to use found variable because I would like to use find to search deep in the array section.sections, but it isn't possible, so for that reason, I used a forEach to make a recursivity.\n. Yes, I had problems in Windows, it relates with this issue:\nhttps://github.com/prettier/prettier/issues/4086#issuecomment-370228517\nAnd here explains that \nhttps://prettier.io/docs/en/cli.html\n\nDon't forget the quotes around the globs! The quotes make sure that Prettier expands the globs rather than your shell, for cross-platform usage.\n\nMaybe it should be other PR. I have copied from this childContextTypes\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/StyleGuide/StyleGuide.js#L45-L50\nbecause they are used in several components. Ok!. Ok!. It will be removed!. Well, it was created to give a name, I wanted to make something similar like Styled(Component), but yes, I will remove it. Yes, I will change it. I couldn't use it, because Consumer gives to component all context as props (codeRevision, config, slots and displayMode), and Styled only needs the object config.\nWhen I use Consumer, in Styled appears an error, because all context's properties are used here\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Styled/Styled.js#L15\nSo for that reason, I created a custom Consumer that gives only config property. Amazing project @sapegin!. ",
    "cloudratha": "In my case I was able to use the MemoryRouter without affecting Styleguidist. Seems like the Link doesn't change the navigation. Which is perfect for my usecase.\njsx\nconst MemoryRouter = require('react-router').MemoryRouter;\n<MemoryRouter>\n  <ComponentWithLinks />\n</MemoryRouter>. ",
    "Fcog": "ok, I solved this using the following:\ndefine a Router wrapper component:\nexport default class Wrapper extends Component {\n    render() {\n        return <Router>{this.props.children}</Router>\n    }\n}\nin App.js:\nclass App extends Component {\n  render() {\n    return (\n        <RouterWrapper>\n...\n       </RouterWrapper>\n    )\n  }\n}\nin styleguide.config.js\nconst path = require('path')\nmodule.exports = {\n    styleguideComponents: {\n        Wrapper: path.join(__dirname, './src/RouterWrapper')\n    }\n}. ",
    "dotcs": "@sapegin So should I throw away render + filter and keep the metadata parser step or would you say everything including metadata should plugins? \nSince a plugin system is planned I would be fine with both ways, so it's up to you.. I'd like to add some tests for some filled metadata object if possible. I haven't had enough time to do this yet. I'll let you know when I'm done.. @sapegin Done. Should we add further documentation of this feature? Currently it's only documented via the customised sample application (and by the unit tests). Should we add further documentation for users? Maybe you can add documentation because you know best where to put it. Besides that the PR is ready to merge. :). Features in question should be implemented as plugins (see https://github.com/styleguidist/react-styleguidist/pull/435#issuecomment-300475263).\nPR in question will only cover metadata.. @sapegin Thanks for the feedback. I'll have a look hopefully somewhen later this weekend. I'll see if I can implement cache and see what I can do about failing tests (somehow they worked locally ... ??). I'll come back to you when I'm done.. @sapegin Sorry for the long delay. I've been quite busy within the last two weeks. I've implemented a cache layer into the getExampleFilename implementation. Can you have a look if this fits what you have thought of?\nThe idea goes like this:\nThe props-loader is marked as cachable, so webpack will only call the real implementation if the underlying file system has changed somehow. In this case we have to invalidate the cache. But for all calls of getExampleFilename within one iteration after files have changed the cache can be used to reduce file io reads.\nWhat this PR misses is documentation of the cache as the second param of the getExampleFilename implementation. I leave this up to you if you think it should be documented.\nSide note: I had to fix some lint issues (see commit dcf17a9) because code from master was invalid...?!. @sapegin I'm not completely sure, but I guess it's not possible since props is an object all the time until it's converted to an array. IMHO this is the first (and only?) position where we can sort values.. @sapegin Changing how the props-loader works was a bit harder, but it's possible I guess. Please have another look. Since I don't know the code by heart I hope I have found every occurrence of props object vs. array, so please consider having another look into other components that are involved which I could have forgotten. . @sapegin What do you think? Are there still changes necessary or are you fine with it? Current review status says that there are still requested changes.. @sapegin Alright, I've fixed all findings \ud83d\udc4d . @n1313 I guess it could be made optional. In the props-loader we have access to the config object, which could be used to add additional config to it.\nHere we could enable or disable the sorting, e.g. by having a property called sortComponentProperties: boolean. The default value could be false to keep the default as it is right now. \n@sapegin What do you think?. I've added my idea of how a generic function could look like. What are your opinions on that approach?. @n1313 I understand your point, but I do not agree. The current implementation does not make any assumptions about the order of the properties. Eventually it uses the sorting of keys in an object, which is not standardised (see here). So this should change anyways to make it reliable - even if this had not been an issue so far.. eslint does not solve this problem, because eslint is a tool for structuring code. But it does not change the way how the underlying JavaScript engine interprets objects and how it sorts the keys. react-docgen (or react-docgen-typescript) returns the property as an object in which the property names are its keys. This is what we get and what we have to work with! \nAs mentioned above sorting of keys in an dictionary is not standardised. This means that how the properties are sorted right now is not guaranteed in any way. eslint does not change anything - regardless of how the user sort the properties and how they get parsed by react-docgen.\nThe only way to solve this problem is to use a data-structure with a guaranteed order, such as arrays. This PR tries to archive an order of the properties by transforming the object to an array of objects where a strict order is defined and uses this array for property rendering.\nSo please keep this discussion focused. eslint does something completely different. The sort-keys rule is meant for readability not for data integrity. It does not help in this discussion in any way.. > [...] we have a way to disable this\nThat's true. We could disable it by using propsTransform: props => props. This passes the array without any transformation (also no sorting) which would replicate the way it has been done before.\nTo completely solve the problem and not rely on the pseudo-sorting of keys in an object we would have to change the way how react-docgen and react-docgen-typescript save properties. It should be an array already at this point such that the order is guaranteed, but this is not the scope of this PR.. Done. I think we still need else branch because it can be that neither a readme.md nor a mycomponent.md file is available. In this case readmeIndex and componentIndex  have both the value -1 and both conditions are wrong. In this case false is returned as in the previous implementation. Please have a look in the updated code.. I've had a look, but I'm not sure where caching could be done. getExampleFilename is called in loaders/props-loader.js and processComponent.js. The first one is already cached via webpack as it's a cachable loader (please correct me if I'm wrong). The second one is called to process a component in case it has changed, so I think in this case we should update anyway. Where in the application logic would you see the caching layer?. Not sure why react/prop-types makes problems here. I've tried to add propTypes for this component but had no success. Do you have an idea?\njavascript\nColumnsRenderer.propTypes = {\n  props: PropTypes.array.isRequired,\n}. Oh, I didn't notice that. \ud83d\udc4d . You're right. I've separated the function into an own file, added JSDocs and tests.. That's true. Done. \ud83d\udc4d . Good idea. I've improved the documentation. Please have another look.. ",
    "drewdrewthis": "@sapegin Whoops. Sorry about that! Please ignore. Opened the PR on the wrong fork.. Whoops. Sorry about that. Please ignore.. ",
    "davidsims9t": "@sapegin Sure I wrote a simple component and failing test.\njs\nexport default class Test extends React.Component {\nrender() {\nreturn (\n<div></div>\n);\n}\nTest:\n<Test test={{\"key\": \"value\"}} />\n\nI'm getting the same error as I mentioned above. I'm testing it on Google Chrome 59.0. I'm using React 15.4.2.\nHere's what my webpack.config file looks like:\njs\nmodule.exports = {\n  target: 'web',\n  entry: {\n     client: path.join(__dirname, 'client.js')\n  },\n  output: {\n    path: path.join(__dirname, './build/public'),\n  },\n  externals: {\n    'react/addons': true,\n    'react/lib/ExecutionEnvironment': true,\n    'react/lib/ReactContext': true\n  },\n  resolveLoader: {\n    modules: [\n      `${__dirname}/src`,\n      `${__dirname}/node_modules`\n    ],\n    extensions: ['.json', '.js', '.jsx', '.css', '.less']\n  },\n  resolve: {\n    modules: [\n      `${__dirname}/src`,\n      `${__dirname}/node_modules`\n    ],\n    extensions: ['.json', '.js', '.jsx', '.css', '.less']\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js(x)?$/,\n        use: {\n          loader: 'babel-loader'\n        }\n      },\n      {\n        test: /\\.json$/,\n        use : 'json-loader'\n      }\n    ]\n  }\n}\nHopefully this is enough context.. I was able to eliminate the error by removing my resolver/resolveLoader properties from my Webpack build. This seems to be causing the error. Unfortunately I need custom resolvers. Is there a way to get around this?. @sapegin That was the same issue I had. It's working perfectly now. Thanks for the help!. I'm getting an error that the path es6-promise/auto doesn't exist. It only occurs after updating to react-styleguidist 5.3.2.. I suppose it could be something in Webpack, but it's strange that it's only when I upgrade to 5.3.2 that I see this error.. ",
    "marcel-k": "For our project we have the convention to camelCase the stateless component functions, but either way I get the same result :) \nThe issue here is that the result generated and provided on the window object is not the function React.CreateClass expects, but some es6module wrapper object. \nI can achieve the same result by using the object provided on the window (I am presuming that react-styleguidist is adding the component to the global namespace):\n```md\n// window.tileExample = {__esModule: true, tileExample: function}\nconst TileExample = window.tileExample.tileExample;\n\n```\nI think @pvasek is right when he says it is probably a typescript issue and I should dive into my webpack config. I thought maybe this was a known issue so I posted here...\nI will shout out when I resurface from diving ;)\n. ",
    "Nosherwan": "I want to show them in the style guide that has its own project.\nI suppose instead of giving a static location via config like so:\n```javascript\nmodule.exports = {\n    components: '../sws-ui-common/react/shared/components/*/.js'\n    }\n```\nI would like to provide the path via require or something along those lines:\n```javascript\nmodule.exports = {\n//this wont work but just to explain\n    components: require('sws-ui-common/react/shared/components/*/.js')\n}\n``. so you are suggesting only the static location would work for components, and not dynamic?. Tried that but I get the following error:Error: Cannot find module 'sws-ui-common'`\nSeems like require.resolve && require are unable to find the npm linked module.. No worries seems like hardcoding the path is the only solution for us at the moment. We do not publish our packages to npm, hence we use npm link to include them in other projects.. ",
    "benedyktdryl": "So I should go with optional disabling ignoring or I can just remove devtools from ignored keys list?. Any updates on that? \nCC: @cef62 @sapegin . ",
    "ambroselittle": "If I understood Bubl\u00e9 correctly, it has a nice singing voice, but it won't do things like decorators or imports. So that means styleguidist is a non starter for projects using those, correct? Until/if it supports Babel or the like? Am I missing anything.. Ah, I was getting a compiler error after pulling in a few components to test this out in the create-react-app approach. My main project doesn't use webpack for reasons beyond my control. So I guess I just need to find webpack config that uses babel and whatnot? Thanks.. Okay, I created a separate issue for this with the repo: https://github.com/styleguidist/react-styleguidist/issues/495. I couldn't comment on 495, but just by way of explanation/clarity for future folks new to the project who might land on this, I didn't understand (as I now have read explained here) the interaction between styleguidist and the hosting app. I was assuming that styleguidist was the source of the compilation error here and thought it needed to be told how to deal with the decorators. \nI just expected it to \"just work\" as implied by the getting started, if you use CRA, but I understand more clearly now. I thought I could save myself some integration headache by creating a separate app and just pulling my components in to test styleguidist out. \nSorry for the mixup and thanks for the help.. ",
    "yathuganesh": "need an option to swap Buble for anything, not for Babel. ",
    "oieduardorabelo": "@sapegin I could make a PR using babel-plugin-syntax-dynamic-import to fix this bug,\nsince is just one file using require.ensure, I don't know if is worth it,\nanother question I've is: which of them, webpack or react-styleguidist, should throw a warning about the disabled syntax?. ",
    "tzapu": "i may be missing something, so sorry about that, but isn't this what you are looking for?\nhttps://github.com/styleguidist/snapguidist. thanks, was missing something as i was saying :D. ",
    "abhimax": "https://github.com/screener-io/screener-storybook\nGreat tool. but no any free version. ",
    "Andarist": "Without knowing about this thread I've setup today simple visual tests, using jest, jest-image-snapshot and puppeteer. There are some missing pieces I'd like to get from the RSG as new features (can offer working on those if we agree they are needed):\n- pages with isolated (even more) components - that was actually mentioned in this thread already\n- possibility to name component examples with markdown comments or something, so it is possible to tie exact example with the test\nHow I have done it so far:\n```js\nimport puppeteer from 'puppeteer'\nimport ExampleComponent from '.'\ntest('renders fine', async () => {\n    const browser = await puppeteer.launch()\n    const page = await browser.newPage()\n    await page.goto(http://localhost:6060/#!/${ ExampleComponent.name }/1)\n    const [, handle] = await page.$$('[data-reactroot]')\n    const screenshot = await handle.screenshot()\n    expect(screenshot).toMatchImageSnapshot()\n    await browser.close()\n})\n```. Just if anyone is interested, I've written how we are approaching the subject right now https://developers.livechatinc.com/blog/snapshots-visual-testing/\nAlso we have published reusable scrapper script for generated documentation - https://github.com/livechat/styleguidist-scrapper . It ain't perfect ofc, no configuration or anything, it's here only to get the job done for us at the moment - but if you find if useful I will be happy to collaborate on the project, so you could benefit from it too.\nThat being said - I would love to see the idea of visual tests incorporated into the styleguidist's core of course.. I'd say node API would be more useful - however the title part of my proposed metadata is based on the assumption on having some text (which gets rendered as paragraph) just above the code snippet. Would be great to have some official way to name specific examples.\nIt would also be easier if an example could get rendered in complete isolation under specific route, I had to target rendered component and create unique selector for it in order to create focused screenshots later (otherwise I would be making screenshots of the component example in styleguidist UI environment). Well, I can't do any pre-compilation on my source files - in example svg -> js conversion. Transformed files could be stringified and passed to the react-docgen just fine. While I've managed to work around (for now) my svg problem, I think it would be nice to support i.e. babel macros, codegens etc and that would require transpiling stuff before passing it to react-docgen. > Have you tested that your transpiled code actually works with react-docgen?\nYeah, I've worked around the issue with:\njs\n\"icons\": \"babel src/components/Icons -x \\\".svg\\\" --out-dir src/components/Icons --no-babelrc --plugins react-svg,syntax-jsx\",\n\"styleguide\": \"npm run icons && cross-env BABEL_ENV=es NODE_ENV=development styleguidist server\",\nand it works fine, but would be better to include this in more standard build pipeline - directly in styleguidist/webpack/babel configs instead of making an additional ninja script ;). > We can add a config option like transformSource(code) => transformedCode, sou you could apply any transformations like Babel before we send code to react-docgen, but it shouldn\u2019t be some magic that we\u2019ll enable by default \u2014 it works as is in 99% cases.\nThat would certainly make a better integration point.. Sure thing, I'm willing to do this - just having many open PRs/ideas right now, so if anyone wants to do that before I get to it (eventually) feel free to do so!. Yeah :). @gscottolson you can use this workaround in the meantime. @sapegin it's not only a dep of buble but a buble itself too, it doesnt transpile i.e. classes. I've filed an issue there to see what they target with the buble's codebase.\nWe could incorporate a test to see if the parts of the bundle generated by react-styleguidist are valid es5 - it's actually quite easy, because we'd have to check if the bundle can be minified using uglifyjs@2, which doesn't support any es6+ syntax. WDYT? Im willing to work on this, as supporting older browsers is crucial for us. \nWe can also temporarily fix this upstream in the react-styleguidist itself by transpiling buble on our own.. Could you describe your test approach in a little bit detail? Im interested mostly in what is in test directory, cannot find how some of the files there are used - i.e. run.build.js.. ",
    "unindented": "@Andarist nice! We had done something very similar (taking screenshots of all examples with puppeteer, and diffing them with pixelmatch) but we didn't integrate it with jest.\nThe module is here: https://www.npmjs.com/package/react-styleguidist-visual\nWe're currently using it in this project: https://microsoft.github.io/YamUI/. Ah no, dialog's styleguide suffers from the same issues.. @sapegin if somebody gives me some pointers (which part of the codebase to look into, approach to take, etc.), I can help.. Wow, nice! Thank you for tackling this! (I still don't have enough familiarity with the internals to evaluate your solution, sorry.). Thank you!. ",
    "ttiurani": "@Andarist thanks for your examples, they were really useful!\nIt would be awesome if react-styleguidist could offer an official metadata API, which could be used to get information about all of styleguided components' examples, their urls and selectors to them. Like the ones defined here https://github.com/livechat/styleguidist-scrapper:\ntype ExampleMetadata = {\n  // component name\n  component: string,\n  // directory where it is located\n  dir: string,\n  // URL with isolated example\n  url: string,\n  // title for the example\n  // assumed to be paragraph above the example\n  title: string,\n  // CSS selector for the example\n  // useful for targeting screenshots\n  selector: string,\n}\nSomething like localhost:6060/metadata ?. How would the node API work? I'm spinning up the styleguidist with npm-run-all in another thread and running jest in another. From the jest test a REST call is trivial, but how could I call a node API?\nAnd yeah, having a totally isolated URL for the example would be easiest: I made the assumption that the example has a h3 element in front of it, which works for us.. Yeah, having both a REST endpoint and a node API is of course the best choice. And if there was some official way to add a title/id for each example in the markdown file, that would be even better.\nAnyway, this suggested scraping solution is quite brittle, so having an official way to do this would be great.  \nAnd thanks for this project btw, it's super useful!\np.s. A slight bug report: from the front page if you click the button that highlights a single component, and then click on the button that higlights a single example, when you un-highlight that example and go back to the component page, the other examples remain hidden in that component and also the front page. Only a refresh brings the other examples back.. ",
    "jneuendorf": "Hey, I just wanted to throw a LOKI for storybook in ;) Maybe inspecting it may be useful. ",
    "pasupuletics": "@sapegin, this issue got resolved after adding display handler along with my custom handler. It's better to document this specific step or else better to incorporate in stypeguidit itself. I mean if handlers attribute is configured then we should also contact display handler to existing handlers. Thanks for you time and stuleguidist is awesome.. @sapegin , You mean do you want me to create pull request for the below scenario:\n  Concating react-docgen-displayname-handler handler to be part of stylegudist(internal implim) when user configured handlers property? please confirm I am more happy to do that.. @sapegin , Thanks for your quick response, But configuring contextDependencies didn't serve my purpose. But I got the root cause that the issue with webpack HMR(not really an issue, its an expected behaviour). HMR has enabled for all the files and working as expected. When component file changes  webpack re-builds and pushes updated file into browser same happens for external imported files as well. \nIs there any possibility to update doc/props property when any of the component dependent file gets changed? I mean when react component gets updated webpack invokes props-loader and pushes changes to browser like wise, can we invoke the same for component dependent files too?. Sure @sapegin will give it a try. Could you please clarify me on below:\nWhen component file changes how the props-loader.js is pitching in(might be because of HMR), could you please help me to find where that peace of code reside(actual logic).. @sapegin , As you mentioned contextDependencies works for us with the minimal changes to props-types.js. We should introduce below peace of code to props-loader.js as you already did it for styleguide-loader.js\nJS\nif (config.contextDependencies) {\n  config.contextDependencies.forEach(dir => this.addContextDependency(dir));\n}\nThanks for being with me and for your timely responses, you are AWESOME.. Sure @sapegin, will issue a PR ASAP.. @sapegin , I have created PR as per over conversation, please take a look.. Added test case and pushed changes to upstream, @sapegin . @milesj , As @n1313 said its defiantly a bug(at least not supported) of react-docgen. And just to add that react-docgen doesn't support spread operator.. @Baudin999 , Styleguidist relies on react-docgen to extract doclets out of out source components files, If i understood 3rd problem properly that, propTypes are defined in external module which is included in your components files. If this is the case styleguidist would fail to generate docs for this. In fact react-docgen not styleguidist, because is does only static analysis of all component source files.\nTo over come this problem you might need to write your own custom handler for react-docgen, and amend react-docgen generated documentation object before it gets hand it over to styleguidist. . @atomicpages , styleguidist doesn't doc for variables(static) as it relies on react-docden. Better you can check react-docegen api and write your own handler to generate doc. I did the same for nested components.. ",
    "lucasfeliciano": "That works, but then the path doesn't show what I would expect\ncomponents/listings/Seller/Seller.js instead of components/listings/Seller. That is pretty smart :)\nThank you and sorry for my sloppy search in the docs. ",
    "adityavohra7": "Not having react-styleguidist output anything when its tests run definitely makes sense, but I wonder if there are situations wherein people may want the API to output stuff similar to what the CLI does? \nSay I wanted to abstract away or package up my JS infra (build + configs), sort of like what create-react-app does, and provide the consumers of this JS infra package an npm run script like start-workbench, which under the hood uses the react-styleguidist API. \nHaving this run script output warnings or compilation errors would definitely be useful, and would only be possible if the API had output (I think?). Though at the same time this start-workbench script could just shell out to the react-styleguidist CLI, or it could re-implement some of the output forwarding of the CLI implemented here. So I'm not sure \ud83d\ude05 \n. @sapegin, sure! Is #499 mostly about showing a deprecation warning? \nAlso, as far as supporting Webpack@1 goes, are we just waiting for a non-beta 1.x.x of webpack-blocks (they seem to have a beta out)?. Updated! Let me know what you think!. Okay this was my bad \ud83d\ude25\nWhen I do the following, it works as expected:\n```javascript\n// @flow\nimport React from 'react';\nexport default function Temp ({foo = 'hi'}: Props) {\n    return foo;\n};\ntype Props = {\n    /* description of prop foo /\n    foo?: string\n}\n``\nI just had to typefooas a [maybe type](https://flow.org/en/docs/types/maybe/). Which makes sense I guess haha. UsingdefaultPropsworks too! Closing this issue. Apologies for the noise.. Actually, reopening this issue because Flow seems to have issues with annotatingpropsthat are indefaultProps` with maybe types \ud83d\ude14\nHere is some discussion: 1660 and 3512.. Totally fair, this comment recommends suppressing the error until its fixed in Flow. Closing! . Here's the relevant issue in react-docgen!. Update: npm run start:cra -- --verbose yields this. I can't seem to find babel-loader anywhere in there. babel-loader does show up for the basic example. Is the CRA example missing a styleguide.config.js that specifies babel-loader, or am I missing some magic \ud83d\ude05. @sapegin yeah I think that makes sense, resolve(CREATE_REACT_APP_WEBPACK_CONFIG); will try to find react-scripts in the root level node_modules, where it isn't installed.. Either that or change the start:cra run script to something like cd examples/cra && npm install && npm run styleguide. Though I personally wouldn't mind having to manually cd into the examples dir to start  styleguide \ud83d\ude05  It also makes the root package.json a little simpler.\nThough if we remove the start:cra run script from the root package.json, should we do the same for the other examples as well? So running all examples is consistent? Also, are preact related things in the root package.json specifically for the preact example?. Heh I thought about that, but wasn't sure if there were any Webpack releases prior to 1.x.x. I guess it's fair to assume that most people aren't using < 1.x.x? If that's the case, I can change this to isWebpack1. \ud83d\ude05. ",
    "devsnek": "I can have a PR for this done in a few hours if no one else is interested. I'll throw that in when I get home. ",
    "aversini": "@sapegin I finally got around this PR and by virtue of synchronizing it with the latest from master, CI tests are all passing \ud83d\ude04 Let me know if you need anything else. Thanks!. > Do you really format it like this, in one line?\nNo, this was my attempt to show how GitHub Enterprise is rendering our lines.\nBasically adding \"static\" next to \"js\" is having an effect on GHE where 3 lines are all merged into one.\nAs for the updateExample option, it creates the same issue on GHE. Basically, adding anything after the lang tag is breaking the markdown rendering \ud83d\ude22 . Oh got it! Yes let me try that avenue! Thanks. @sapegin so I tried to use updateExample, using 2 different approaches:\n\nif lang is set to js, jsx or javascript, change the lang to coffeescript or typescript\nif lang is set to js, jsx or javascript, set settings.static to true\n\nThe first approach works: it prevents RSG from interpreting code fences marked with these lang as a React component, and the code highlighting is almost the same as with the original lang. It's not perfect, but it allows me to not having to update my non-react markdown files.\nThe second approach is working too, and it seems like it would be the best approach: on one hand I don't have to update my non react markdown files to be compatible with RSG, but RSG allows me to make them compatible on the fly. \nHere is the code I tried.\njs\nupdateExample(props) {\n  const {settings, lang} = props;\n  if (lang === 'javascript' || lang === 'js' || lang === 'jsx') {\n    settings.static = true;\n  }\n  return props;\n},\nI will probably go ahead with solution 2.\nQuestion for you, do you foresee any future incompatibility with RSG roadmap?\n . Great, thanks! Yes I can do that. Do you prefer I add that to the cookbook or as a second example to updateExample?. Will do, PR is ready! (#563). Thanks @sapegin , as a first step, changing to \"View Code\" would help a lot. Want me to create a PR?. Cool, here it is #697 . FYI @sapegin this update introduced a regression in md table rendering. See the issue here. This is a breaking change right? Shouldn\u2019t RSG version be bumped to 8? My team started to use the url pattern #!/Button to run automated tests... they are now all breaking in 7.1.0 \ud83d\ude22 \ncc @sapegin . Did the fix work for you @sibamohanty995 ? I tried to override CodeTabButton that is located under slots with the latest build of RSG to no avail. I do override other components with no problem though (Ribbon, PlaygroundRenderer, etc.) Let me know if that worked for you, I may be having an issue in the way I'm configuring my styleguide.config.js for slots... Thanks!. Aaah, that makes sense, yes it's working for me too with that syntax, thanks a lot for the tip @sibamohanty995 \ud83d\udc4d . Actually that is what causing CI to fail. \nI'm assuming Jest snapshots have been taken with NODE_ENV set to 'production'. In CI, the test runs with NODE_ENV=test, so it makes my test (process.env.NODE_ENV !== 'production') truthy. That means that in test mode, component are not rendered in 'production' mode, and therefore the snapshots do not match.\nBefore my change, with NODE_ENV set to 'test' would render the component in production mode... quite a conundrum here. I have a feeling that it would make more sense to revert this change and keep snapshots 'production'. It means that ONLY when specifically set to 'development', component are rendered that special way? Let me know what you think @sapegin . You're right. So I grep'd around and didn't find any places that looked like they should be updated, beside that one line. So my suggestion is to consider the 'test' path by updating the condition to:\njs\nconst ExamplePlaceholder = process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test'\n  ? require('rsg-components/ExamplePlaceholder').default\n  : () => <div />;\nThis has no impact for production code and it should allow CI to pass.. done!. ",
    "raavanan": "I am facing the Same issues. ",
    "Guru107": "I tried integrating with glamor getting the same issue. ",
    "aga5tya": "@sapegin , I'm on it, will push to a repo in some time.. @sapegin I have pushed the repo sample. Also missed out to add an important info, i have been setting this up with preact-compact. Not sure if this issue depends on it.\nhttps://github.com/aga5tya/styleguidist-fela/tree/master\nWould be happy to share any further info needed, kindly let me know.. @sapegin,, the see that aliasing the wrapper isn't injecting the context. It's always undefined and fela needs this context to render components created or to render style classNames. Doesn't the wrapper enclose each component or am i missing something ? Took similar approach to the redux example from cookbook.. @sapegin ,, second point i mentioned, was because the fela renderer was reinitialized on each component mount. Making it a single instance fixes the issue and different styles/states are injected. Still wondering why first point is happening. ~~I'l update the sample repo in a moment.~~ Updated.\nAlso unable to edit the code on playground. Gives an error, this.setState is not defined in code mirror lib. Any idea what's going wrong ?\nEdit:\n@sapegin , for point one, mostly its caused since fela wraps the components via functions and react-docgen isn't able to parse the properties. Possibly related #143, #422, #445.\nRight now i get this error, and styleguidist does not render the component at al.\nWarning: src/components/Button/Button.js matches a pattern defined in \u201dcomponents\u201d or \u201cs\nections\u201d options in your style guide config but doesn\u2019t export a component.. @sapegin I have pushed the code that replicates this at https://github.com/aga5tya/styleguidist-fela/tree/export-fela-components, kindly let me know what i am doing wrong, whenever you are free and time permits. For now i am wrapping them and using these.. @sapegin Awesome. Thanks for documenting this. \ud83d\udc4d \ud83c\udf89 . ",
    "a-ignatov-parc": "Props and methods are now hidden by default under \"PROPS & METHODS\" button. Try to press it or add showUsage param in styleguide.config.js to restore old behaviour.. @okonet this is what you should expect when you set you dependency with wildcard on minor updates (^). So if you expect consistency you should or set wildcard only to patch versions (~) or use version lock (yarn.lock or something similar).. We are using react-jss and there is no extra setup needed. At least for current release. There is refactoring in progress to fix SSR issues in JSS but I don't think that it will change something in configuration.. ",
    "stefanheine": "\nProps and methods are now hidden by default under \"PROPS & METHODS\" button. Try to press it\n\nI didn't even realize that this was a button - I just assumed this to be a headline/ placeholder only.\n\nor add showUsage param in styleguide.config.js to restore old behaviour ;)\n\nsetting showUsage: true doesn't make any difference. the showCode parameter works ok, though.. > Try to hover on it ;-) It looks and behaves the same as the code button in examples.\nI'll get used to it... it was just not intuitive initially.\n\nThis should be fixed in 5.4.1.\n\nthanks for the quick fix. working ok now.. thanks for the quick fix. issue has gone away.. ",
    "verkholantsev": "@sapegin Just added commit that uses _.memoize to create cache for fs.readdirSync(). Are there any more issues, that I didn't noticed it #440?. @sapegin You are right, this implementation of cache breaks files watching in live server mode.\nWhat way of implementation do you think is the best? Function console.trace() shows me two consumers of  getExampleFilename():\n1. loaders/styleguide-loader;\n2. loaders/props-loader.\nI've got an idea, but I think it is quite dirty:\n1. Create module that exposes memoized readdirSync and method to reset the cache;\n2. Import this method to that two loaders and reset the cache they are executed.\nIn this case there will no need to pass some parameters to getExampleFilename() from loaders, but it will create spaghetti-like dependency.. My experiments are failed, I'm closing this PR.. ",
    "gutenye": "@sapegin I can't, I use a mirror npm registry url (not the official one), after npm install, it changes the whole package-lock.json file, and no idea how to fix it. \nCan you fix it for me?. @sapegin Thanks for updating npm lock file. Test has been fixed.. @sapegin Agreed with you, I've updated the code.. ",
    "ambidexterich": "The fix without <caption> doesn't cause an error. The fix with <caption> errors with Module\u00a0not\u00a0found:\u00a0Can't\u00a0resolve\u00a0'<caption>JSX</caption>. I have a fix for this that checks that the example file actually exists, I will issue a pull request once I get the test working properly. I've implemented all of your feedback. The warning is a stopgap until https://github.com/styleguidist/react-styleguidist/issues/497. I can't start using styleguidist in our product until this one is fixed.. Submitted another attempt.. Good catch. The reason for the check that example file is a string and ensure that the base file exists is that path.resolve fails if either one is not a string like when @example is true and passed from a test. Would you prefer that moved to the body of getProps?. Updated. ",
    "ethanh1223": "Looks like PR was merged -- this closed?. @sapegin Brand new to open-source and trying to get my first few commits with you guys, so bear with me :)\nI've played with a few options and clearing the console seems to work best in the PlaygroundRenderer. When re-compiling multiple components, errors from prior compilations are cleared but errors from all components in current compilation are visible. \nAny objections to this method? Tried to submit a PR but linter doesn't allow for \"console\" statements in the Component :(. ",
    "gnarmedia": "@apennell I managed to get webpack + babel-plugin-react-css-modules + styleguidist working together\nstyleguide.dev.js:\n```\n test: /.css$/,\n        exclude: /node_modules/, // not sure this is needed?\n        use: [\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n              modules: true,\n              localIdentName: '[local]_[hash:base64:2]'\n            }\n          }\n        ]\n```\n.babelrc:\n\"presets\": [\n    \"react\", \"env\"\n  ],\n  \"plugins\": [\n    [\n       \"react-css-modules\",\n       {\n         \"generateScopedName\": \"[local]_[hash:base64:2]\"\n       }\n     ]\nstyleguidist server --config styleguide.dev.js\n... if this example sucks I can try to make something clearer. ",
    "bnghu1": "@sapegin need help here\n@gnarmedia is your examples work?\nI use typescript, scss, babel-plugin-react-css-modules together\nbut seems like styleguidist do not resolve stylesheet dependencies in the first place\ni need to manually require('.../**.scss') in my example markdown file so the style can be loaded after\nwhat should I do for fixing this?\nhere is component (likely)\n```\nimport styles from './Example.scss';\nimport * as React from 'react';\nexport type Props = Readonly<{}>;\nexport class Example extends React.Component {\n  render() {\n    return this is a example;\n  }\n}\n```\nhere is the example\n```\nExample\n```\n  \n  ```\n```\nstyle of Example are not loaded after.\nbut after do this, it can load then\n\\\nrequire('./Example.scss')\n``\n```. Hi, is this not working anymore?\nI've tried addtag in.md, but its content turns out to be converted toin` tag, which block the style inject.\nany idea?\ncurrent version: 7.0.9. Hi, seems https://github.com/probablyup/markdown-to-jsx/issues/170 had been fixed\nshould we upgrade markdown-to-jsx version? @stephtr @sapegin \nand its also fix https://github.com/probablyup/markdown-to-jsx/issues/172\nwhich i want. thanks, it works as you said.. ",
    "oyeanuj": "@sapegin For some of the questions mentioned in the thread above, if you are still looking for ideas, I'd suggest Slate Editor's plugin system. Having used it extensively, I can vouch that it is well thought-out and implemented.. @sapegin Thank you for the quick and detailed response! It also seems like that styleguidist supports nested components and storybook doesn't? If yes, that could be another thing to add.\nI'd suggest adding it around the Usage section (maybe after Cookbook) in the README as this is information that folks would need as to better understand the library.. ",
    "jspears": "You might consider using the plugin system from MrBuilder\nmr-builder .  It has babel style plugins, but also (optional) autoinstall of plugins, command line configuration, env configuration and config file configuration.     It was designed to be a generic plugin system, and is also used in the next version of subschema to allow for injection of components.\n. Sure sorry.\nThere are some advantages to turning a big project into a bunch of smaller ones and keeping them in the same repository, aka monorepos.   Having separate packaging can make testing, attribution, ownership documenting and versioning a little easier, along with dependency management-- that is it helps identify which components use which libraries.   \nHowever monorepos in JS land have traditionally have had 2 major problems.\n1) Keeping versions in sync across all the projects.  For this Lerna does a remarkabley good job.   Makes managing 50 packages in repository just about as easy 1.\n2) The second problem is building said packages.   Webpack by itself doesn't do it very well, and all the other things linters, demos ... have been a problem, managing configs, and all that jazz.   Mrbuilder (disclaimer I wrote mrbuilder) -- solves the second problem, by wrapping webpack in a declarative json5 format, and allowing for profiles that can be customized per monorepo and also allowing for pretty easy dependency setup.     This  way all the examples, libraries, demos are built in a consistent fashion.  In addition it smooths over webpack upgrades,  by providing a consistent configuration api; which unfortunately webpack does not have. MrBuilder uses react-styleguide and has a plugin for it (pretty raw one) that allows monorepos to become styleguides.  \nAnyways, I've been using your project and its pretty great; but thought it might be desirable to make it a monorepo.  As I've, and I assume others, have wanted to use a few of your components, in other projects.   Its a few more hours of work to get everything back to working,  which I don't mind doing, but wanted to see how you felt about a massive PR, to break react-styleguidist up into a bunch packages; before I did that.  \nNo pressure, a thanks, but no thanks is fine - just thought I'd put it out there.   \n. ",
    "tuchk4": "@sapegin any plans to merge it?. ",
    "cristianoliveira": "Thanks! :). Added target node: \"current\". Done.. ",
    "roblevintennis": "Interesting, I'm following the readme in examples/* and I get this exact error still. Ran npm install, and then npm run styleguide\nhttps://github.com/styleguidist/react-styleguidist/pull/506/files\n\n. @sapegin Sure thanks .. would you recommend I figure out how to just add it to the \"base theme\" and/or could you point me to which files best to touch? Guess I'll try that unless you have another recommendation. . Thank you very much for the 411 @sapegin .. I think my team's gonna give me some time today to do that ... I'll at mention on the PR!. oh cool! thanks for the heads up .. I can change my package.json pointer!. @sapegin I added comments in a34b15b ... not sure what your line length rules are but I couldn't think of any shorter way to express .. lmk if it's making lines too long \ud83d\ude0b I could always remove the \"block formatting context\" since contain floats is self evident. Just lmk. well taken ... I tried to shorten comment and speak more to the issue being solved and not the mechanics of fix per your suggestion. Hopefully what you're looking for but lmk if you have something better :). \ud83d\udc4d thank you!. Well, thinking iteratively (or is it agile??), my thought was to just take the same method signature as is there now, and anytime that changes, the callback config option would want to reflect that I suppose. In the end, the library code would simply check if there was a config.method to call, and if so use same arguments. If not, business is usual and the internal printInstructions is used.\nOne thought I had when I tried to think of objections you might have for providing a customizable function for printInstructions, is I'm not sure what the expectation would then be for other methods. For example, there may be other methods that folks say \"well, you provided an option for customization of printInstructions, how come you won't let me add one for fooBar??\". That's why I thought of a couple of other options. Does that, in fact, concern you now that it's brought up?\nIn terms of opinions and use cases, I just have the one at present and would just code up the option check if that makes sense. If you'd like to just see a diff, I'm happy to give it a go. But perhaps you should get back on the question about the library's overall philosophy on adding callbacks. Lmk :)\nThanks for getting back @sapegin !. So are you asking me to replace what's now printInstructions with printServerInstructions, and then to add a method printBuildInstructions to replace what's currently just being logged out at: https://github.com/styleguidist/react-styleguidist/blob/03896941d8a373a5a2e6ba1878899442ab660d40/bin/styleguidist.js#L98 ? And then make those overridable via a config object. Just want to be crystal clear..thanks. @sapegin I'm a bit stuck on what to do for configuring the schema to add the two new config options (the functions printBuildInstructions and printServerInstructions), and just even getting the sanitizeConfig to work at all:\n\nThat's when I try to run my new custom message example. I tried to log or throw error in scripts/utils/sanitizeConfig.js but it's not showing up in my console so I'm obviously totally misunderstanding something there, so any guidance there would be appreciated.\nUpdate: I sort of see what's happening, it's actually using the node module version of styleguidist:\n\nIt's end of day for me, I'll hopefully figure out how to do this tomorrow. So the issue I was having was that I intuitively ran the examples from examples dir like: examples/foo$ npm run styleguide which of course meant it'd use the node modules styleguidist. But having a look at package.json we have these covered and locally pointing to correct styleguidist.js e.g.  yarn start:customised in my case. Fixed the issue.\n\n@sapegin I think this is reviewable\nP.S. I'm going to see if there's a place to add a note about using the top level package.json scripts when developing / contributing in the examples on another small documentation PR :). @sapegin thanks for your guidance. I think this is ready for another gander. awesome thanks!. sweet! thanks. Thanks for doing this @stephtr I probably misunderstand what the full intent is here so apologies in advance if I missed something.\nBut to actually make this work on the my end, I still had to force the resolution...\n\nSo above, you notice that the open ended ^ seems to cause the version used by styleguidist: markdown-to-jsx \"^6.5.2\". And my problems persisted of course. \nUPDATE: I wasn't on latest react-styleguidist so above is incorrect :) Leaving in case this trips someone else up. Also, the resolution clause I mention below might still be an interesting solution for folks that don't want to include the dependency\u2026\nBut you can use resolutions in the package.json to force version. See https://yarnpkg.com/lang/en/docs/selective-version-resolutions/#toc-how-to-use-it but here's a diff experimenting on the \"example\" repo here:\n\nIn my case, the issue here is nested divs which seems fixed after above shannanigans. \n\nTo be clear, using this resolutions clause completely disregards what is \"asked for\" by react-styleguidist's package.json so it's quite a forceful solution (and only one I see that works currently). Another option might be to delete the lock and regenerate which would also be unfortunate.\nHere's an example of all of this:\nhttps://github.com/styleguidist/example/pull/4/files. @stephtr \ud83e\udd26\u200d\u2642\ufe0f yah, I realized that late yesterday and forgot to come back to update my comment. Sorry for that inaccuracy! I suppose I'll leave but update the comment for posterity though...some folks my wish to do the resolution thing so they don't have to include the dependency themselves. Thanks for your correction!. In our env, it looks like the heading it's under takes care of making it #33 on hover from original #76 so I don't think anything needs to be added to get desired affect. Note the strike through is there since I added the config override mentioned above.\nSo with my override, the color #72 is removed on the anchor:\n\nWhich kicks in the h2 above which has the color: #33:\n\nWIthout trying from the lib code, I'd guess we might have to use inherit to achieve the same maybe\n. \ud83d\udc4d . Ah ok, cool will do. haha ah ok, gotcha, I'm headed to work now...will give it a whirl thanks for help @sapegin :). Argh, grammarze \ud83d\ude0b .. fixed. Addressed in 0eda93bd337d7166065781f9d59b7de6285df848. Gotcha. Fixed in 0eda93bd337d7166065781f9d59b7de6285df848. Great point. I removed and added example for both methods in 0eda93bd337d7166065781f9d59b7de6285df848. Removed and ran locally and nothing bad happened. Thanks for heads up. ah yes, thanks, that's better. pushed up commit. ",
    "daphnesmit": "How about glamorous? Anybody know a way to work around the fact that it shows ALL glamorous properties not only my interface for a button.\nscreenshot:\n\n. That works! react-codemirror2 doesnt work with latest codemirror apparently. ",
    "schnubor": "@n1313 would love to see the CSS modules + themr example.. ",
    "kossel": "will it support emotion js?. yup that worked! thanks! maybe this can added to the https://react-styleguidist.js.org/docs/thirdparties.html page as a caveat when using emotion js. ",
    "esphen": "Amended the commit with your requested changes. > That\u2019s a good idea and we\u2019re already doing this for functions!\nCool, didn't know that!\n\n\nIt would have to be parsed for it to be pretty printed.\n\nDo you have any ideas how to do that? Or some time to experiment? ;-)\n\nI may have some time to look at this at some point, but I need to know if there are any corner cases I need to keep in mind. Do I need to handle other propParsers or otherwise alternative output syntaxes? Anything else you can think of?. @SaraVieira Yes, which brings me to an issue I have with the way these popovers are handled today. Seeing as you have to hover over the element to show the data, this excludes a potentially large audience from seeing this information. To quote the HTML spec:\n\nRelying on the title attribute is currently discouraged as many user agents do not expose the attribute in an accessible manner as required by this specification (e.g., requiring a pointing device such as a mouse to cause a tooltip to appear, which excludes keyboard-only users and touch-only users, such as anyone with a modern phone or tablet). \n\nI tried this in ChromeVox to verify, and was not able to read the text. So this solution is better for mouse users, but not not accessible, which is far from ideal. I would much prefer this text to be a <button> (which makes it focusable and tabbable), which shows a popover element on focus.. Thanks @sapegin. Based on your feedback I'll use window.eval for parsing and look into a smaller library for formatting.. @sapegin: I amended the commit with the requested changes. \nThere were a lot of changes in the package-lock.json after I rm package-lock.json && npm i however. I wonder what that's about. Looks like it pruned all the requires fields, apart from that it looks pretty consistent with my expectations. I used npm@5.0.0 here.. I found javascript-stringify, it looks pretty good. It has no dependencies. Pushed a new commit to the PR.\nThis is the result:\n\n. @n1313 lol. Yes they do :). @sapegin Travis seems to fail because it is now 5K over the recommended build size. What do you think?. @sapegin: I pushed another commit which fixes the travis failure and fixes a merge conflict on package-lock.json. Are we good now?. @sapegin Done, the new branches in the diff now have code coverage. @sapegin I amended the commit with your requested change. Hi, thanks for reporting. That's a good point, we didn't think of that. I can fix this tonight. Should be fixed in 63b3369, will be a part of the next version @sapegin releases . I'm sorry, not quite sure what you mean here. Would you like to merge the entire webpackConfig.devServer into the styleguidist dev server config, not just watchConfig? Here I am checking for devServer being defined in the user config so it doesn't throw when it isn't.\nI have not used webpack-merge before, so I am assuming it works like Object.assign in most cases. Ah, I see! Thanks for the ELI5. It does seems to work without the last block because of the recursive merging.. Thanks, I'm too spoiled by babel. ",
    "karmeleon": "Now that the linked Flow issues are resolved, can this issue be reopened? Styleguidist still has this bug.. ",
    "wayspurrchen": "Is it possible to disable this functionality on-demand? I want to try to develop against components directly within my styleguidist server, and runtime errors that I want to diagnose and fix are cleared whenever I refresh the page.. ",
    "gaearon": "The build overlay is currently tightly integrated with our webpack client. You can try using that client: https://github.com/facebookincubator/create-react-app/tree/master/packages/react-dev-utils#webpackhotdevclient. ",
    "mru2": "Thank you ! \nSeems like this is a new feature, since 1.0.8, create-react-app migrated react-scripts out of the devDependencies: https://github.com/facebookincubator/create-react-app/pull/2657 \ud83d\ude04 \n. ",
    "misantronic": "I opened an issue:\nhttps://github.com/JedWatson/react-codemirror/issues/123. ",
    "danielfx90": "@sapegin all done!. @sapegin Sorry, still getting the hang of it. Now all three checks have passed.. I'll check it out!. Sorry, I was trying something and I forgot to remove it. Thanks!. True that!. ",
    "adambowles": "Yeah that's done it, thanks!. ",
    "gaastonsr": "Thanks sis!. ",
    "pueue": "@stepancar Thank you!. ",
    "mertyesin": "@stepancar Yes. Like all other required modules or libraries, jquery-mobile is in node_modules folder under the '/Users/mert/Works/data-visualization/trunk/packages/dv-web/'.. @stepancar  You're right! It looks like a webpack problem. \nI had tried your suggestions before, i tried one more time now. Nothing changes.\nadded externals to my styleguide.config.js:\n.\n.\n webpackConfig: {\n        entry: {\n            bundle: ['./index.ts'],\n        },\n        context: path.resolve(__dirname),\n        output: {\n            filename: 'bundle.js',\n            path: path.join(__dirname, 'temp')\n        },\n        externals: {\n            \"jquery\": \"$\",\n            \"jquery-mobile\": \"$.mobile\"\n        },\n        module: {\n            rules: [\n                {\n                    test: /\\.tsx?$/,\n                    loader: 'ts-loader',\n                    exclude: /node_modules/\n                }\n            ]\n        },\n        resolve: {\n            extensions: [\".tsx\", \".ts\", \".js\"]\n        }\n    }\n. ",
    "MarkMurphy": "This is still an issue. I don't see any solutions here.. This should probably be an overridable styleguidist component. This way, I can supply my own Example component that applies a flexbox layout and spacing around.. > You can already do it with the Wrapper\u00a0component.\nHow's that? \n``\nconst Example = styled.div\n  display: flex;\n\n\n{\n    margin: ${props => props.theme.spacing(1)};\n  }\n`;\n\n\nconst Wrapper = ({ children }) => (\n  \n{children}\n\n);\n```\nThis: \n```js\n  <Button>Default</Button>\n  <Button primary>Primary</Button>\n  <Button secondary>Secondary</Button>\n  <Button disabled>Disabled</Button>\n```\n\nResults in:\nSyntaxError: Adjacent JSX elements must be wrapped in an enclosing tag (2:2)\n1 :   <Button>Default</Button>\n2 :   <Button primary>Primary</Button>\n      ^. There's another component or two between the Wrapper and the content rendered from the code block so you can't just use the Wrapper.. ",
    "gardezii": "same here. It is still an issue. ",
    "kumarabhishek": "It seems I do not have permission to push. Getting following error:\n```bash\n~/dev/react-styleguidist $ git push origin preview-fix\nERROR: Permission to styleguidist/react-styleguidist.git denied to kumarabhishek.\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```. @sapegin I got fix for https://github.com/styleguidist/react-styleguidist/issues/519 also. If you provide me privilege, i will include even this fix in same PR.. Incorporated review comment.. If I put this outside try, then in case of exception this.unmountPreview(); will be executed twice (one in this method and other in handleError). Also by having it inside try does not harm in anyway. Its my proposition though. Let me know if you still want it outside try, I will do the change and update PR.. Oh ho. Now i got it. Basically its call stack in catch handler you want to keep clean and only related to user code. Yeah, you are right. I will update the code. Thanks for clarifying.. ",
    "timbergus": "Thanks, @reintroducing. I was starting to bump my head against the table. I feel so dumb \ud83d\ude29. ",
    "selrond": "So there's no reasonable way around it?. @sapegin somebody already published a modified version of this: siddharthkp/react-docgen-external-proptypes-handler. @sapegin thanks, changed \njs\nignore: 'src/components/atoms/svg/' \nto \njs\nignore: '**/src/components/atoms/svg/**'\nnow it works.\nBut anyway - there are places in the docs where it's encouraged to use globs, but the default is \"not a glob\" (although - is it not, really?)\nExample: \n\ncomponents\nType: String, Function or Array, default: src/components/**/*.{js,jsx,ts,tsx}\n\nwhen String: a glob pattern that matches all your component modules.\nwhen Function: a function that returns an array of module paths.\nwhen Array: an array of module paths.\nAll paths are relative to config folder.\n\n\nHow about that?. @sapegin look at my comment - the dafault string for components path - it's said to be a glob, although the default one is not. @sapegin how is this different from mine src/components/atoms/svg/** (which I've tried as well, and doesn't work)? . ",
    "dylankiss": "@sapegin Took a shot for a simple fix, by only making the top level sections \"primary\". It's good enough for me.. Fine by me. Changed it.. ",
    "konojunya": "\nThe first bug should be fixed now.\n\n\ud83d\udc4d \n\nI\u2019m not sure how to reproduce the second: seems to work fine in your repo.\n\nNormal:\n1. git clone git@github.com:konojunya/styleguidist-example-typescript.git\n2. npm i\n3. npm run styleguide:build or npm run styleguide\n4. show your browser index.html or localhost:6060\nBug:\n1. git clone git@github.com:konojunya/styleguidist-example-typescript.git\n2. npm i\n3. change showCode: true in styleguide.config.js\n4. npm run styleguide:build or npm run styleguide\n5. show your browser index.html or localhost:6060. thank you.\nfirst issue is resolved \ud83d\udcaf \nbut, second one is not resolved yet :(. not yet :(\nhttps://github.com/konojunya/styleguidist-example-typescript/blob/master/package.json#L22. ",
    "mmsbrggr": "I don't think this is an issue specific to styleguidist. Sorry for any inconvenience caused. Keep up the good work :) . ",
    "brianokeefe": "I would love to see some kind of proper support for subcomponents as well. We're actually having a little bit of the opposite problem -- we've been putting small \"helper\" subcomponents in separate files so that we can document their props and usage, but in the context of a styleguide containing all components, they tend to add a lot of noise.\nMaybe it would be cool if subcomponents somehow collapsed into the \"main\" component (i.e., only the \"main\" component would be visible by default, but it would include a toggle-able section that contained the subcomponents, or something like that). Not sure what that would look like from an implementation standpoint, but I dunno, just throwing ideas around here :). Here's what we ended up doing:\nWe actually probably have a bit of an uncommon setup, as we use styleguidist in two separate ways. We use it as a workbench for development for each of our individual components (each in their own package) and then we have a \"global\" styleguidist that pulls in all of our components and builds static documentation for them. Because we have two different styleguidist configs, we have the desired name for the README set differently in each config -- for the \"global\" styleguide we look for a file named STYLEGUIDE.md, and in the workbench, either STYLEGUIDE.md or README.md will work. Sub-components use README.md so they won't appear in the \"global\" styleguide but will still appear in the workbench for development.\nAgain, this only works as a consequence of us having multiple styleguidist configs, but it seems to be working well so far.. ",
    "EdwardSalter": "We are currently developing a UI framework that does the same thing, each component sits in its own file. These get picked up by styleguidist and so long as the displayName is set properly on the component, i.e:\nPageContainerContent.displayName = 'PageContainer.Content'; then the components will sit nicely next to each other in the generated menu.\nI guess another option would be to make use of the sections feature that styleguidist has.. Ah, thank you for clarifying that. I have just updated my config to add in the logger configuration which has enabled some output but webpack output is still not coming through.\nI have updated my example repo to force a webpack error and this is the output I get from running via the CLI:\n```\n...\nYou can now view style guide in the browser.\n  Local:            http://localhost:6060/\n  On your network:  http://10.0.75.1:6060/\nLoading components:\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\BabelIgnored\\BabelIgnored.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\Button\\Button.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\Modal\\Modal.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\Placeholder\\Placeholder.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\PushButton\\PushButton.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\RandomButton\\RandomButton.js\n./lib/components/BabelIgnored/BabelIgnored.js\nModule parse failed: C:\\Development\\Other\\react-styleguidist-example\\lib\\components\\BabelIgnored\\BabelIgnored.js Unexpected token (5:4)\nYou may need an appropriate loader to handle this file type.\n| const BabelIgnored = () => {\n|   return (\n|     \n|       Ignored by babel\n|     \nLearn how to add webpack loaders to your style guide:\nhttps://react-styleguidist.js.org/docs/webpack.html\n...\n```\nand the output I get from the node api:\ntext\nListening at http://0.0.0.0:6060\nLoading components:\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\BabelIgnored\\BabelIgnored.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\Button\\Button.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\Modal\\Modal.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\Placeholder\\Placeholder.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\PushButton\\PushButton.js\nC:\\Development\\Other\\react-styleguidist-example\\lib\\components\\RandomButton\\RandomButton.js\nI now get the Loading components text and I can see the components that have been found but I cannot tell why the webpage gives me just a white screen because the webpack error has been swallowed somewhere.. Yep, I have updated my example repo with code duplicated from the bin/styleguidist.js and it is now working as expected displaying the output in the console.\nI would have thought that this behaviour would be a layer deeper in the server function so that it was the same for both the node API and the CLI.\nThis at least gives me a way of figuring out why my code doesn't compile so I will close the comment.\nThanks for your help @sapegin.. ",
    "scniro": "This project is heavily sculpted to a linux work environment and I had a lot of errors being thrown locally on my windows machine, specifically, pathing and SHA concerns regarding tests and package-lock.json. I was able to verify the package works as expected, however I was unable to verify tests or update the package-lock.json file without causing a waterfall of issues due to being on Windows. Regardless, the meat of the migration is here and I'd appreciate if you can implement the specifics I am unable to at the moment. Thank you!. A few things - even before getting into it in your contributing guidelines, the following command fails on Windows because & is not a valid operator.\nnpm run compile:watch & npm start\n\nBut that'd be easy enough to clarify or not even worry about. For testing/snapshot creation - all of the pathing borked. A lot of errors similar to the following...\\\n\nExpected value to equal:\n      \"/\"\n    Received:\n      \"C\"\n\n\nDue to being on Windows and something somewhere is looking for my C drive. I can always clone this down to a linux envurinment but I usually find myself on the Windows side. I'm sure we could fix this by using tools such as cross-env and investigate what Jest is going with pathing and why it's failing.\nIn the package lock, the integrity hash is converting all packages to a sha1 on my machine after updating the one package. For example...\n~~\"integrity\": \"sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==\",~~\n\"integrity\": \"sha1-D8Z9fBQYJd6UKC3VNr7GubzoYKs=\"\nI honestly don't know the implication of this, if any, but I opted to not commit it.\nPerhaps this PR was just more of a hassle than it is worth since I changed only a few lines and am being berated by environment errors. If you care to nail down this further I'd be open to resolving it across the board with you so any future Windows users won't be burdened by similar issues.. @sapegin I can totally look into debugging this and getting everything resolved locally. I'll spend some time later today and send a fresh PR when I (hopefully) smooth everything out. Will keep you posted.. @sapegin hey again. I kind of ran around in circles on a fresh clone trying to get the tests to pass. I'm going to set this down for now as it's looking like it'll be more involved to get playing nicely with Windows. Can you merge this PR and check my changes locally and commit if all looks well?. @sapegin yes you are correct on the versioning conflict - this actually happened with another user on the last release 5.29.0 release of CodeMirror as well. I am unsure why the conflict causes the loss of highlighting - it's the only noticeable side effect I have found.\nAnyways, I did have the versioning too strict. I pushed up 1.1.0 which should resolve this issue for you. Please keep me posted with your findings!. Hey all, please pull 2.0.0 instead. I overlooked the breaking changes that would result from users that did not already have any version of codemirror as a dep. See https://github.com/scniro/react-codemirror2/issues/12. Prior 1.x releases have been unpublished in favor of moving forward with 2.x. Thanks. ",
    "boldfacedesign": "Figured this out. My project uses less and my main webpack config (which is used by styleguidist by default) only has a test and loader setup for .less and not .css. For reference here's a copy of my webpack config (minus any sensitive data):\n```js\nconst path = require('path');\nconst fs = require('fs');\nconst autoprefixer = require('autoprefixer');\nconst webpack = require('webpack');\nconst merge = require('webpack-merge');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst FaviconsWebpackPlugin = require('favicons-webpack-plugin');\nconst config = require('./server/config.js');\nconst BROWSER = JSON.stringify(true);\nconst isProd = (process.env.NODE_ENV === 'production');\nconst base = {\n  entry: ['babel-polyfill', './client/client.js'],\n  output: {\n    path: path.resolve(__dirname, 'public/assets'),\n    publicPath: '/assets/',\n    filename: 'bundle.js'\n  },\n  module: {\n    loaders: [\n      {\n        test: /.jsx?$/,\n        loader: 'babel-loader?cacheDirectory',\n        include: [\n          path.resolve(__dirname, 'client'),\n          path.resolve(__dirname, 'test', 'spec')\n        ]\n      },\n      {\n        test: /.less$/,\n        loader: ExtractTextPlugin.extract({\n          fallback: 'style-loader',\n          use: [\n            { loader: 'css-loader' },\n            {\n              loader: 'postcss-loader',\n              options: {\n                plugins: () => [autoprefixer]\n              }\n            },\n            { loader: 'less-loader' }\n          ]\n        })\n      },\n      {\n        test: /.json$/,\n        loader: 'json-loader'\n      },\n      {\n        test: /.(woff2?|ttf|eot|svg)(\\?v=[0-9].[0-9].[0-9])?$/,\n        loader: 'url-loader?limit=10000&name=fonts/[name].[ext]?[hash]'\n      },\n      {\n        test: /.(png|jpg|gif)(\\?v=[0-9].[0-9].[0-9])?$/,\n        loader: 'url-loader?limit=10000&name=images/[name].[ext]?[hash]'\n      }\n    ]\n  },\n  plugins: [\n    new webpack.LoaderOptionsPlugin({\n      options: {\n        postcss: [\n          autoprefixer({\n            browsers: ['last 3 versions', '> 1%']\n          })\n        ]\n      }\n    }),\n    new ExtractTextPlugin({\n      filename: 'style.css',\n      allChunks: true\n    }),\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    new webpack.DefinePlugin({\n      'process.env': {\n        BROWSER\n      },\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV)\n    }),\n    new webpack.ProvidePlugin({\n      fetch: 'imports-loader?this=>global!exports-loader?global.fetch!whatwg-fetch'\n    }),\n    new webpack.NormalModuleReplacementPlugin(/^.\\/package$/, (result) => {\n      if (/cheerio/.test(result.context)) {\n        result.request = './package.json';\n      }\n    }),\n    new HtmlWebpackPlugin({\n      title: 'title',\n      filename: '../index.html',\n      hash: true,\n      template: 'index.ejs'\n    }),\n    new FaviconsWebpackPlugin({\n      logo: './public/images/favicon-master.png',\n      prefix: 'icons-[hash]/',\n      emitStats: false,\n      persistentCache: true,\n      inject: true,\n      background: '#fff',\n      title: 'DigitalShowcase',\n      icons: {\n        android: true,\n        appleIcon: true,\n        appleStartup: true,\n        coast: false,\n        favicons: true,\n        firefox: true,\n        opengraph: false,\n        twitter: false,\n        yandex: false,\n        windows: true\n      }\n    })\n  ]\n};\nconst dev = {\n  devtool: 'source-map',\n  devServer: {\n    contentBase: path.join(__dirname, 'public'),\n    hot: true,\n    historyApiFallback: true,\n    filename: 'bundle.js',\n    publicPath: '/assets/'\n  }\n};\nconst prod = {\n  plugins: [\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n        warnings: false\n      }\n    })\n  ]\n};\nmodule.exports = isProd ? merge(base, prod) : merge(base, dev);\n```. Whoa! Nice catch. \nUpdated config to include doc dir:\ninclude: [\n          path.resolve(__dirname, 'client'),\n          path.resolve(__dirname, 'doc'),\n          path.resolve(__dirname, 'test', 'spec')\n]\nWorking like a dream. Thanks. . ",
    "whazap": "i tried to tackle this issue by creating a new helper component (PreviewRenderer).\n(was looking for an issue to start looking under the hood of react-styleguidist, hope i didn't mess up too much ;)). ",
    "skube": "Thank you! \ud83e\udd47 . \ud83d\ude41 Oh well just a thought.. Ok. Good idea!. ",
    "jamestowers": "If using create-react-app, you can add \nstyleguide: resolveApp('styleguide'), \nto module.exports of config/paths.js and then in webpack.config.dev.js change\ntest: /\\.(js|jsx|mjs)$/,\n      include: paths.appSrc,\n      ...\nto \ntest: /\\.(js|jsx|mjs)$/,\n      include: [...paths.appSrc, ...paths.styleguide],\n      exclude: paths.appNodeModules,\n      .... If using create-react-app, you can also add\nstyleguide: resolveApp('styleguide'), \nto module.exports of config/paths.js and then in webpack.config.dev.js change\ntest: /\\.(js|jsx|mjs)$/,\n      include: paths.appSrc,\n      ...\nto \ntest: /\\.(js|jsx|mjs)$/,\n      include: [...paths.appSrc, ...paths.styleguide],\n      .... ",
    "hueyhe": "@sapegin Thanks for reply. I ended up with adding a template file and specified a favicon link in template. I think it would be best if there is a favicon config option in styleguidist configuration since HtmlWebpackPlugin also has this config option.. ",
    "blackout1208": "@hueyhe can you explain me what was your workaround?. ",
    "will-stone": "I just had this issue too, for anyone struggling...\n\nCreate /src/assets/ directory, and put your favicon.ico file inside.\nIn your styleguide.config.js file (should be at root), add the assetsDir config:\njs\nmodule.exports = {\n  assetsDir: 'src/assets/',\n  template: 'src/templates/index.html' // add this file if you want to use other favicon links\n}. \n",
    "suevalov": "@sapegin yep, it does make sense.\nTechnically, it's the same as Error: No suitable component definition found and the message should be the same as in catch block.\nI can move isArray to try and throw an error if it's empty array. In this case catch block will handle warning printing. What do you think?. Done!. ",
    "Jack-Barry": "I added the js to code examples to make for easier reading.\nLooks like the example project won't be needed, removing ExtractTextPlugin worked!  I'll probably just go the route of customizing the Webpack config for Styleguidist so that Webpack is still able to emit a CSS via ExtractTextPlugin or maybe extract-loader for production build but won't interfere with Styleguidist.  Once I find out a solid  setup for this I'll post it here, but I'm considering this issue closed.\n@sapegin Thanks so much for the quick response!. Got some time today to get this running nice and smoothly if anyone else wants a similar setup.\nThe trick is to get some separate configs set up for development and production.  I like to keep things as DRY as possible so I made use of webpack-merge to share commonality between the configs.  Here they are:\nwebpack.common.js\n```js\nconst webpack           = require('webpack');\nconst path              = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nmodule.exports = {\n  entry:  './app_src/index.js',\n  output: {\n    path:     path.resolve('dist'),\n    filename: 'bundle.js'\n  },\n  module: {\n    rules: [\n      {\n        test:    /.(js|jsx)$/,\n        loader:  'babel-loader',\n        exclude: /node_modules/\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './app_src/index.html',\n      filename: 'index.html',\n      inject:   'body'\n    }),\n  ],\n  externals: {\n    'react/addons':                   'react',\n    'react/lib/ExecutionEnvironment': 'react',\n    'react/lib/ReactContext':         'react'\n  }\n};\n```\nwebpack.dev.js\n```js\nconst Merge        = require('webpack-merge');\nconst CommonConfig = require('./webpack.common.js');\nmodule.exports = Merge(CommonConfig, {\n  module: {\n    rules: [\n      {\n        test: /.scss$/,\n        use:  [\n          'style-loader',\n          'css-loader?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]',\n          'sass-loader'\n        ],\n        exclude: /node_modules/\n      }\n    ]\n  }\n});\n```\nwebpack.prod.js\n```js\nconst Merge             = require('webpack-merge');\nconst CommonConfig      = require('./webpack.common.js');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nmodule.exports = Merge(CommonConfig, {\n  module: {\n    rules: [\n      {\n        test: /.scss$/,\n        use:  ExtractTextPlugin.extract({\n          fallback: 'style-loader',\n          use: [\n            'css-loader?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]',\n            'sass-loader'\n          ]\n        }),\n        exclude: /node_modules/\n      }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin('styles.css')\n  ]\n});\n```\nstyleguide.common.js\njs\nmodule.exports = {\n  title:          \"UI Style Guide\",\n  components:     '../app_src/components/**/*.js*'\n};\nstyleguide.dev.js\n```js\nconst Merge = require('webpack-merge');\nconst CommonConfig = require('./styleguide.common.js');\nmodule.exports = Merge(CommonConfig,\n  {\n    webpackConfig:  require('./webpack.dev.js'),\n  }\n);\n```\nstyleguide.prod.js\n```js\nconst Merge = require('webpack-merge');\nconst CommonConfig = require('./styleguide.common.js');\nmodule.exports = Merge(CommonConfig,\n  {\n    webpackConfig:  require('./webpack.prod.js'),\n    styleguideDir:  '../dist/styleguide'\n  }\n);\n```\nThis setup gives me exactly what I was going for - allows for bundling of CSS into its own file for production, but gives me the hot reloading to develop components more rapidly.  It also allows for a central location to keep Sass variables that apply to the entire project while enabling the modularity of CSS modules.  \nIf anybody sees where this might not be a great idea, feel free to let me know.  The only thing I can think of is that the @import required to pull in variables from Sass might become painful with a large code base.. @sapegin Thanks for the tip!  I'll try to get this working today and post the simplified version.\nIs it obvious yet that I'm new to Webpack? \ud83d\ude1d . Haha true! So I got a chance to give webpack-blocks a try, and what a treat!  This config is super clean now \u2728  \nconfig/webpack.js\n```js\nconst {\n  createConfig,\n  entryPoint,\n  setOutput,\n  match,\n  addPlugins,\n  extractText,\n  env,\nbabel,\n  css,\n  sass,\nwebpack\n} = require('webpack-blocks');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst cssPatterns       = ['.scss', '.css'];\nconst cssLoaders        = [css.modules({localIdentName: '[name]__[local]___[hash:base64:5]'}), sass()];\nconst cssLoadersProd    = cssLoaders.concat([extractText('styles.css')]);\nmodule.exports = createConfig([\n  entryPoint('./app/index.js'),\n  setOutput('./dist/bundle.js'),\n  babel(),\n  addPlugins([\n    new HtmlWebpackPlugin({\n      template: './app/index.html',\n      filename: 'index.html',\n      inject:   'body'\n    })\n  ]),\n  env('development', [\n    match(\n      cssPatterns,\n      cssLoaders\n    )\n  ]),\n  env('production', [\n    match(\n      cssPatterns,\n      cssLoadersProd\n    )\n  ])\n]);\n```\nconfig/styleguide.js\njs\nmodule.exports = {\n  title:                        \"UI Style Guide\",\n  components:                   '../app/components/**/*.js*',\n  webpackConfig:                require('./webpack.js'),\n  skipComponentsWithoutExample: true,\n  styleguideDir:                '../dist/styleguide'\n};\nStill needed the webpackConfig because of how I structured the project - all config files go into a config folder and no longer need the .config delimiter.  (I also renamed the source folder app - since that's where the brunt of the work gets done I like it to be at the top of the file list like in Rails \ud83d\ude04 ) . ",
    "doug2k1": "Thanks for posting the issue and the solution! I was struggling with this problem for quite some time, but couldn't reproduce it on a smaller example project to post here.. ",
    "dbertella": "You can use an html template and include the link in the html as I was asking in another issue (#593) or as I did previously, include the whole css, I was using the scss version and include it as you are doing into the require. If you are doing that, and use the scss version use this variable $fa-font-path:        \"//netdna.bootstrapcdn.com/font-awesome/4.7.0/fonts\" !default; // for referencing Bootstrap CDN font files directly because it will load the fonts from the cdn and you don't have to import them. Thanks that works perfectly, I've missed it!. ",
    "sabhyankarxactly": "@dbertella Thanks for the pointer, I was able to use the custom template to load font-awesome icons.\n@n1313 I tried loading the font-awesome CSS and font files in the stylguide.config.js require section but did not work. I do like the idea of making font-awesome a dependency of my package and load them through my components, will work on that.. ",
    "besrabasant": "okkk. Thanks folks\n. @sapegin I tried checking the service running on this port but it returns nothing... It seems there are no services running on this port. I tried even changing the port number but still no luck.. I think there's a conflict while running two instances of browsersync.... @sapegin @SaraVieira . actually styleguidist uses projects native webpack configuration and since laravel is already using that configuration to run its browsersync devserver so react-styleguidist is having problem running the browsersync devserver from same configuration. @sapegin . I think I need to change the port on whichreact syleguidist is trying to run the browsersync server . Yeah resolved the issue by ignoring the browser-sync-webpack-plugin after requiring the project's webpack configuration  in styleguidist configuration. @sapegin @SaraVieira . ",
    "seekshiva": "Thanks a lot! That works \ud83c\udf89. ",
    "kidkuro": "A possible solution to this would be to replace the primary prop everywhere with a depth prop.. Created PR #601 with a depth prop.. Updated to remove primary, and reset depth to be 1-based. I have a basic working version locally. I split a CodeEvaluator component out of Preview which does the code compilation and creates the WrappedComponent to be rendered by the Preview component.\nA new HtmlViewer component is loaded as a second example tab, which receives the code, creates a CodeEvaluator and renders it into a detached div. When render is complete it displays the innerHTML.\nThe config update would be a new exampleTabTypes property that is an array which can include ['code', 'html'] and defaults to ['code'].\nI have to write some new tests, format the HTML, and get the configuration working then I will submit a PR for review.. Ok, I'll have a look into that, though I am limited for time.\nIn the meantime, I'll raise a couple of tickets and PRs to fix a bug in the slots onClick logic, and refactor CodeEvaluator from Preview to separate the responsibilities and make the CodeEvaluator available for a plugin slot to use (even if the HtmlViewer wouldn't be included in Styleguidist).. Nowhere public sorry. Also, I currently don't have access to that code.\nThe general approach though, from memory, I think was to override slots using https://react-styleguidist.js.org/docs/configuration.html#styleguidecomponents and add an extra handler similar to the view code one but instead used Styleguidist's own ReactExample component to render the code into a div element that isn't attached to the document, then return it's innerHTML.\nYou'll have to dig around in the source code to find the bits you need and how to do it. . The failed check doesn't appear to have anything to do with my code change. \n974, #976 and #978 have all failed for the same reason.\nIt appears #963 was raised with the same problem.\nSince Object.entries isn't in the source code, my guess is that could be that Babel is transpiling code to use it, expects a browser environment that supports it, or has been polyfilled with core-js... but is executing in a test in Node on an agent with and older version of Node that doesn't support it.. Awesome, thanks. I'll merge and push up to each PR again. . The loop reassigned the props argument inside the loop to a new object... but also extracted const { onClick } = props; Which means, the second time round the loop onClick referred to the first slot's onClick not the onClick passed to the function. And the first slot's onClick is a delegate function that passes the first slot's id in a closure.\nTry running the test without the code change, you'll see it expects to get 'two' but receives 'one'\nBy the way, I would suggest turning on the eslint rule to prevent reassigning arguments, that will prevent this sort of bug.. Sure, I'll update that to have an id. Integration test failing with the same timeout issue.. I got Cypress working (didn't have NO_PROXY=localhost \ud83d\ude05)... but all tests pass for me.\nI can't see any details in the job log... I'm not sure where to go from here.. In order to access the internet on my work network you must go via a proxy, so I have an HTTP_PROXY environment variable set, but I never bothered also setting a NO_PROXY environment variable to exclude localhost... since it didn't see to cause me any issues. However, running Cypress wasn't working, so I exported NO_PROXY=localhost and that allowed Cypress to run.\nHowever, all the tests passed for me. I will have another go, but if I can't sort it out, I think I should roll back the second commit. That refactoring is unrelated to the original bugfix, and it should probably be left to a separate, more considered PR.. Ok, I reproduced the error... not sure what happened last time. I have no idea what I am looking at... but... I'll give it a go.. Ok, so there is a fundamental difference between the tabbutton/tabpanel slots that require an id to associate the pair, which is used as the name, and the Isolate button.\nI'm going to revert the second commit. I don't really understand the idea behind the slots, but I have a feeling that it might be too generic a pattern to properly implement both of those purposes. In any case, if it needs to change, it should be a separate ticket.. Ha! OK... The changes tab shows the actual change. Its only the very first commit. If you'd like I can just close this PR, create a fresh branch, and a new PR. . Oh, you've already merged. Cool \ud83d\udc4d. Fixes #979. Hmm... I increased coverage over original code. I'm guessing your coverage standards have increased. I'll have a go of adding more tests.. Oops! Sorry, used to a precommit hook that runs tests. Will fix this now.. I am getting 503 errors attempting to run Cyprus locally to try to reproduce the problem. The error seems unlikely to be related to my change, since this simply passes an extra config option which isn't being used. Not sure how to proceed from here.. The \"Single component preview section changes the render after code change\" is failing with a timeout. The code waits for 500ms. I just tried manually executing the scenario by typing into the code editor... and it looks like the lag between type and update could easily exceed that timeout in a real browser environment. Could it be that timeout is too short and is fragile? Again... this doesn't appear to be due to my change.. Ha, of course, much cleaner. I'll update it.. Yes, in the handleError function.. I don't think  it inherits context when it is rendered via ReactDOM.render(wrappedComponent, this.mountNode);\n. Oh, right... yeah, git isn't being your friend here, this is all moved from Preview. \nThe only things I changed were:\n I renamed PreviewComponent to InitialStateComponent\n I passed in compilerConfig as a prop instead of reading it off context as discussed above.\nI'm happy to rename it... I struggled to come up with a decent name to.. Gotcha, I'll change it.. ",
    "AkshatM": "We are trying to deploy the development server. Deploying a static HTML build is a good idea we hadn't considered in depth. \nFor context, our original reasoning was that a static HTML build would involve relying on two processes, the actual server and the build process, and that would mean more moving parts that we'd need to regulate interaction between, hence discarded. Since Styleguidist is inbuilt into our repository's package.json, this would also mean ensuring other processes that read from our repository (e.g. .gitignore, EsDoc, etc.) would now have to be notified of the existence of static build file directories they would have to ignore and avoid namespace conflicts with . Essentially, our argument was that it would minify the time needed for deployment and interaction effects with other systems, as static HTML files is a notable side effect. However, in retrospect, this may be a better investment overall given our operational setup for now.\nThanks! I'm going to go ahead and investigate deploying as static HTML build instead.. ",
    "leclercb": "Same problem here.\nI develop on one machine, but I test on another one.\nI can't access styleguidist from my test machine because I receive \"Invalid host header\".\nWould it be possible to configure this ?\nThanks !. Indeed, when I use the ip of the dev machine directly (in your example http://11.22.33.44:6060/) it works.\nHowever, when I use a hostname (example \"xyz\" pointing to 11.22.33.44) via /etc/hosts, it doesn't work when trying to access http://xyz:6060.\nAnyway, not a bit deal, as I can use the ip of the machine directly, which I didn't try before :(. Not by default of course, but maybe that could be an option in the styleguide.config.js ?. Thanks ! Problem solved.. Pull request created:\nhttps://github.com/styleguidist/react-styleguidist/pull/671. ",
    "indacloud": "It worked ! Thanks a lot for the quick fix.\n:+1: . ",
    "ryanoglesby08": "Awesome! Will work on it.. Yep @probablyup the capability is not directly exposed to the consumer of react-styleguidist quite yet. I'm working through some PRs (#650 and #651 already merged) to introduce more components into the markdown parsing so that the consumer can specify their own.\nThe entire list of components to create is in this PR --> #619, if anyone else wants to help out!\n(@probablyup Thanks for the awesome markdown-to-jsx library btw!). All Markdown elements now have corresponding React components in styleguidist, that can easily be overridden by consumers using normal aliases as is described in the documentation: https://react-styleguidist.js.org/docs/configuration.html#styleguidecomponents\nClosing this issue now.. Re: Issue #613 . Hi @sapegin \nThis is a WIP and more of a proof of concept right now. I wanted to go ahead and get a PR out there so that I can get some feedback before continuing further down this path.\nMy strategy is to break up the large styles object in \"rsg-components/Markdown\" and extract components for each element. I've done that for a and h1-h6. This will allow each Markdown element/component to be overridden using the styleguideComponents config option. When overriding the Markdown components, you will export a markdown-to-jsx config object containing the new component and any props.\nI've overridden links and headers in this manner in the customised example.\nThis seems to be consistent with the patterns already established, flexible, allow custom theming and styles to still work, and does not introduce much extra complexity.\nLet me know what you think!\n. Re: I\u2019d extract Header component the same way so it could be reused not only in Markdown.\nSure. I can do that eventually.\n\nRe: And I\u2019m not sure we need to store these configs in separate files.\nBy \"configs\" I assume you mean the mappings of component + props to the corresponding tag name that gets translated by markdown-to-jsx.\nI think storing the configs in separate files enables modularity and creates a more flexible solution. By storing the configs in separate files, it allows the react component library to define its own mappings per component without having to override a giant Markdown.js file.\nOverriding any Markdown element with a new component requires 2 things: 1) the new component and 2) a new mapping of the Markdown element to the component and props. If I did not keep the configs separate, it means more files need to change to override a single Markdown element.\nDo you have other ideas for how I might approach this?\n. Hi @sapegin. I've finally been able to work a bit more on this. I've changed the approach a little bit based on your feedback. This feels like a good approach to me. Here is the structure I've come out with so far. Let me know of your feedback.\nrsg-components\n|\n| ->Heading/HeadingRenderer.js: a h1 - h6 component used throughout styleguidist, including Markdown files (Override me to replace all headings)\n|\n|\n|-> Markdown/Heading.js: An adapter on top of HeadingRenderer that adds bottom margin. This is useful for the prose in Markdown, but not wanted on all headings throughout the style guide, such as the SectionHeadings. (Override me to replace how much spacing is added around headings in Markdown)\n|\n|-> Markdown/Markdown.js: Contains the mapping of all components to elements in Markdown\n\nexamples/customised\nsrc/components\n| -> Header.js: A custom h1 - h6 component being showcased\nstyleguide/components\n| -> Heading.js: An adapter that adapts the interface of \"rsg-components/Heading/HeadingRenderer\" to the Header that is being showcased. Namely adapting the depth prop to the level prop, which have different types.\n| -> Link.js: A Link component to be used in the styleguide with custom link styling. This is just an example of how to incorporate plain styles and another overridden component.\nstyleguide.config.js\n\u2014> alias HeadingRenderer with \"styleguide/components/Heading\"\n\u2014> alias Link with \"styleguide/components/Link\"\n. Thanks for the feedback, will work on incorporating your suggestions.\nI will also continue down this path and implement things more cleanly and tested, with the end goal of replacing all the Markdown overrides with replaceable components:\nTo do:\n\n[x] Replace \"a\" with Link\n[x] Replace \"h1-h6\" with Headings\n[x] Replace \"p\" with Paragraph\n[x] Replace \"ul, ol, li\" with List\n[x] Replace \"blockquote\" with Blockquote\n[x] Replace \"hr\" with Hr\n[x] Replace \"em\" with Em\n[x] Replace \"strong\" with Strong\n[x] Replace \"code\" with Code\n[x] Replace \"pre\" with Pre\n[x] Replace \"table\" with Table. Also, I noticed that the Markdown.js file has styles for \"input\" elements. Is this necessary? There is no Markdown syntax for inputs, and I'm not sure the purpose of trying to embed inputs in Markdown documentation. \n\nhttps://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/Markdown/Markdown.js#L121-L125\n. Cool, will break it up into multiple PRs. Will leave this one here to keep the todo list if you don't mind.. All elements within Markdown now have associated components, making them easy to override consumers. Closing this PR. Thanks for all the suggestions and help @sapegin . Also, thanks for posting the link to react-spaceman! We just built an almost identical component for our project just recently. I'll look into this one. Maybe we'll switch over. :). Whoops. Updated the snapshots.. Re: merge conflict --> O shoot, will fix the merge conflict.\nRe: unrelated changes --> Yes I found that odd, when I ran yarn test, which triggers yarn lint I got linting errors that needed to be fixed. That is why there are unrelated changes. Should I just revert those changes and leave the linting errors alone?. I blew away node_modules and installed with npm. Running npm run lint still creates the same changes in \"scripts/create-server.js\".... Trying again with a new PR.... Related to Issue #613 . > Are there any other use cases except checkbox?\nI had Checkbox at first, then renamed it to Input. I think the checkbox is the only GFM syntax, but you can also put raw html in markdown. So technically someone could do...\n```md\nSome heading\n\n```\nMaybe not a likely use case, but is possible.\nRenaming it Checkbox wouldn't really matter for a case like that though.. It does! Just tested it out locally.. Yeah I don't know, maybe it's a bug with markdown-to-jsx? Seems legit to me though.\n\nWhat would be the use case for that?\n\nhaha I have no idea! But I'm sure someone would find a use case that we won't think of.\nAnyway, I don't mind renaming to Checkbox as that is the intended use. Shall I just make that change then?. Blank line removed. And of course a more complete solution would have to check it the version is a path or if its a number, among other things :). Ok, attempt 2.\nI've introduced a new config option called propsPostProcessor of type function. If it exists it will get invoked after loading and initial processing of the props.\nThis shifts the responsibility for loading the version from a file to the user.\nWhat do you think?. Hi @sapegin any more feedback here? I've reverted the old code here and Travis CI is passing now.. Sure can use level. I used depth because that prop name was already in place from the SectionHeadingRenderer, which is where this component was extracted from.. Actually, replacing render' withshallowproduces an empty snapshot:exports[Heading should render a heading 1] = \"\";`\nThis is because I'm importing the wrapped Styled(styles)(Heading) component, so we need to render or dive to actually get to the HTML. \nI noticed many times the codebase exports both the Styled component and the \"un-Styled\" version. And then the \"un-Styled\" version is only exported for the tests. I view this as a bit of a smell. By exporting the fully Styled one, the snapshot becomes more real, because it has the classes on it.\nSo I think render here is desired.. This is required because I changed the import statement to import the Styled(styles)(LogoRenderer). So, shallow rendering only returns the Styled wrapper. Either diving or rendering gets past that wrapper.\nAs I mentioned above, I think exporting both Styled and un-Styled versions is a bit of a smell as the un-Styled version is only used for testing, and produces incomplete snapshots.. Oh, yeah, I've seen that too. I find that pattern to be a bit harder to grok. There is a lot to understand with the classes object. Also, now the styles object is being exported only for the tests in order to be passed back in. As a first time reader that pattern seems roundabout.\nAgree on render it can go to deep if a component renders other children, which is why I had used shallow and then dive in some places. However, for something like a Heading which is already low level, render is safe.. At first, I mapped over the children in List to add a className so that the styles were contained in List. But then when using the Chrome dev tools I noticed that the li was already being reset with the JSS isolate plugin so that it would inherit styles from its parent, so the extra class on the li didn't seem to be necessary.\nUnless I am missing something?. I could do that, though it seems like that creates an awkward interface. The Para component currently returns \"paragraphs\", or \"blocks of text\". Would it be odd to then extend it to also return lists? Seems like that will set the precedent for Para to start just being a component that renders every element.\nThe props interface also starts to become unintuitive if I code an example usage:\n<Para semantic=\"ul\" className={classes.list}>\n  {children}\n</Para>\nThoughts? Why do you think extending Para is the better way to go?. Done.. Sure, can do. I was just copying the existing styles from the old style-based way in Markdown.js. Can switch to not using Para at all here.. Hmmm, I'm a little confused by this comment. This index.js file is just re-exporting the \"renderer\", which is a common pattern in the styleguidist codebase so that elsewhere the component can be imported with import Blockquote from 'rsg-components/Markdown/Blockquote';\nHas that pattern changed now?. Ahhhhhh I see now. I knew I wasn't crazy! :) I missed this commit that changed a lot of the exports from a relative path to the rsg-components version: \nhttps://github.com/styleguidist/react-styleguidist/commit/46156bb932121df5a176852d0fcdfd43cad83ef3\nFollowing suit now. Done!. Could do.... I'm worried though that if someone happens to create another input type, then this custom component will override it and they will not know why. I think its better to leave it out as marktown-to-jsx already seems to be adding the type.. Alright then. Yolo!. Added!. Done!. Done!. I've removed the example and instead included documentation for updateProps. I can make the sample code in the docs more complex if you like.... but I feel that it won't add anything since its just sample code in the docs.. ",
    "probablyup": "Not sure if @sapegin has it exposed, but markdown-to-jsx has this capability: https://github.com/probablyup/markdown-to-jsx. @ryanoglesby08 actually GFM task lists will render inputs: https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\nGFM is supported in markdown-to-jsx . It\u2019ll do that unless the string is formatted like a paragraph (two new\nlines at the end or two spaces)\nOn Tue, Dec 12, 2017 at 8:04 AM Artem Sapegin notifications@github.com\nwrote:\n\n@probablyup https://github.com/probablyup I\u2019ve noticed that it renders\nsome paragraphs as spans without any classes:\n[image: image 2017-12-12 at 2 03 03 pm]\nhttps://user-images.githubusercontent.com/70067/33885980-4eb26a18-df45-11e7-805a-eb13fa559a08.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/pull/725#issuecomment-351045293,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAiy1sjJ_Y-GtJnjt0dt2JJ9EKIzhyUTks5s_nnJgaJpZM4Q1wQa\n.\n. Ah no, I haven\u2019t. I think I test on node 8. I\u2019ll take a look later\nOn Tue, Dec 19, 2017 at 8:44 AM Artem Sapegin notifications@github.com\nwrote:\n@probablyup https://github.com/probablyup Have you seen this issue with\njest-serializer-html? Half of the time it\u2019s failing on Node 4 because of\ndifferent order of attributes:\n- Snapshot\n\n+ Received\n\n\n\n@@ -11,12 +11,12 @@\n\n      </em>\n\n      <strong class=\"rsg--text-27 rsg--inheritSize-28 rsg--baseColor-32 rsg--strong-35\">\n\n        formatting\n\n      </strong>\n\n      and a\n\n-     <a href=\"/foo\"\n\n-        class=\"rsg--link-18\"\n\n+     <a class=\"rsg--link-18\"\n\n+        href=\"/foo\"\n\n      >\n\n        link\n\n      </a>\n\n      .\n\n    </p>\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/pull/725#issuecomment-352754008,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAiy1inGLVoMtNdokTVjocgcsyg42SC8ks5tB72rgaJpZM4Q1wQa\n.\n. Good lead, I\u2019ll investigate. Btw 6.3.0 includes the ability to forceBlock\nor forceInline, which should help with the coercion into a paragraph :)\nOn Tue, Dec 19, 2017 at 9:38 AM Artem Sapegin notifications@github.com\nwrote:\nNode 6 and 8 are always find, only Node 4 has issues. Maybe Object.keys\nhas different order for some reason depending on Travis machine it runs on?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/pull/725#issuecomment-352774147,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAiy1kGwizeewVpuRe1-qNO2p35vqTUGks5tB8pbgaJpZM4Q1wQa\n.\n. Hi folks, please try markdown-to-jsx 6.8.2. @sapegin this can be closed now - definitely fixed with 6.8.2. Hmm, I don't think there's a way to customize it like that \ud83d\ude41 \n\nI could perhaps try and modify their package to be a bit more strict about what it considers HTML, since this clearly isn't HTML \ud83d\ude06 . cc @rayrutjes. ",
    "vlad-zhukov": "Just wanted to note that this issue is about using React 16 internally. Examples (can?) use the version of React you (as a developer) provide. What it means is you can use React 16 in examples right now, or use an older React version when the styleguidist will use v16 internally.. If it throws above the browser will not be properly closed.. ",
    "nwwells": "For react-icons, see https://github.com/gorangajic/react-icons/issues/116 and https://github.com/gorangajic/react-icons/issues/117\nFor react-codemirror2, see https://github.com/scniro/react-codemirror2/issues/15. Upgrading to v2.0.2+ should work. Any reason that particular package is pegged to v2.0.0 when all the others are more permissive? even just ~v2.0.0 would be sufficient to pick up bugfix releases.\nHappy to submit a PR with the dep upgrades.. Will do. I was recently made a contributor on https://github.com/gorangajic/react-icons so I'll work on resolving the issue there first and then get to this, hopefully today.. submitted #622 for review. I believe that's all that should be needed, but I need to test after the new react-icons release is published.. react-icons marks support for react 16 as of 2.2.6.. Hey, it looks like the package.lock needs to be updated as well, will submit a PR for that soon.. updated react-icons in https://github.com/styleguidist/react-styleguidist/pull/628. Verified that upgrading to v6.0.28 got rid of peer dependency warnings! Yay!. Note that fully resolving #614 involves a pending release (2.2.6) of react-icons (see https://github.com/gorangajic/react-icons/issues/116). ",
    "chaosmirage": "I tried \u2013 it doesn't work.. ",
    "BTMPL": "No, I don't think so, that's basically how it is supposed to work when using hash routing (see react-router HashRouter).\nYou could try adding something like\nwindow.history.replaceState(undefined, undefined, './')\nas a callback or something to remove the extra #/, but not sure if this is really a big issue.. Ok, I could get around that with\ndiff\n-               <ToolbarButton href={getUrl({ anchor: true, slug: '/' })} title=\"Show all components\">\n+               <ToolbarButton onClick={() => {\n+                       window.location = './#/';\n+                       window.history.replaceState(undefined, undefined, './');\n+               }}title=\"Show all components\">\nbut now I'm not sure if this is OK, as we're limiting accessibility (it will render as a <button>); there's no way to render an <a> with an callback / onClick. Can of course use getUrl to grab the valid URLs, just wanted to quickly demonstrate the idea.. react-router uses the BrowserRouter which hooks into HTML history API and is effective only when you use their Link component (so a normal a href would still trigger an HTTP request).\nAs for HashRouter - I think they redirect you from / to /#/ right away.. Sure, the same logic could be implemented here but it would require bigger changes to the one I proposed. \nAnd yes, react-router uses onClick handlers.. Sure, I'll try to check out how to resolve this in the next 24h. Since there's already a hashChange listener in index.js (the one that re-renders the whole app) I added the logic in there.\nSince using history.replaceState does not trigger another hashChange event to be emitted I've placed it right before the rendered.. Hello @sapegin - I've update as per your recommendation. I see that the coverage is lowered - please let me know if I should provide additional tests.. I've also tried experimenting with auto generating knobs, but would need to be able to access the prop types data generated by docgen - don't think those are available anywhere in playground scope?. I'll look into it, but I think that it makes the implementation a bit verbose because you need to add all the knobs before hand, and then return them in JSX\nThis would expand the example codes a lot e.g. changing\n<KnobsUI>\n  {( text }) => <MyComponent value={text('Component value', '')} />}\n</KnobsUI>\ninto\nconst [value] = useText('Component value', '');\n<>\n  <Inspector />\n  <MyComponent value={value} />\n</>\nwhich would continue to grow with more and more knobs. I've based my idea on https://www.npmjs.com/package/@storybook/addon-knobs \nI've been also playing around a bit with JSS yesterday:\n\n. Also, this would mean that styleguidist would require 16.7+, right? Which would be a hard requirement (e.g. our project, when I use styleguidist, is at 15.3). I went on ahead and created https://github.com/BTMPL/styleguidist-knobs if you want to have a look at it.\nI might be abusing a few things (webpack api and global namespace) but couldn't find a way to make the integration easier ;). > will be a simpler solution than recreating 85% the same things yourself ;-)\nWhere's the fun in that?! No, but honestly, I haven't heard of Retoggle before. It looks pretty nice.\n\nIf you keep the knob thingy separate from Styleguidist, which I thing is the right approach, then the required versions of both will be separate.\n\nYes, but the problem will be that it will still require the styleguide (which might be a separate project, or might be an devDependency of your project) to use 16.7. It's fine if you build your styleguide as a separate project though.\nSadly, requirement of using 16.7 is a no-go for us, and probably a lot of \"enterprise\" (read: legacy) software, so I'd rather not push for that.\nAnd yes, the idea is to keep the addon as a separate project, just like snapguidist is; this way if someone is up to develop a solution using Retoggle, it can be added.. Ok, so basically remove the \"skip\" and just have the renderer skip external sections ?. The problem with href is that ComponentsListRenderer already has a prop called href, and we can't easily use it to determine if it should be opened in new window or not because the href can be generated as a fully qualified URL for sections with absolute = true.\nShould I try to figure this out or use externalHref or some other field?. Currently any section added to the configuration will result in a section space being generated in the main content - this would also include the href sections which should open in new window.\nThis will filter out those sections from being rendered in the main content area.. Do you mean to use external string instead of _blank?  If so, I'm not sure about that one. _blank is guaranteed to open a new tab every time, if we use and external multiple links will open in the same window.. Dont thinks so, unless we assume that all sections have unique hrefs, which they might now have, so I guess we are stuck with the index for now.. Turns out that some sections do not have slug, but are rendered with an array of components - this is for example visible in sections example, WrappedButton link.. Not sure what's going on here; this looks to be changed by a pre-commit hook, and probably should?. I assume jsx static won't work here? Updating.. Yes, I was thinking ````jsx static would work in order to keep highlights. Should be like you asked now; I think the newline was added by precommit hook again.. ",
    "lutien": "In a migration guide said that getElement in shallow rendering is getNode method from previous version.\nhttp://airbnb.io/enzyme/docs/guides/migration-from-2-to-3.html#with-shallow-getnode-should-be-replaced-with-getelement\nIt means this is a documentation for getElement - http://airbnb.io/enzyme/docs/api/ShallowWrapper/getNode.md\nAnd this is for getDOMNode http://airbnb.io/enzyme/docs/api/ReactWrapper/getDOMNode.md\n. Before in shallow rendering lifecycle methods didnt work by default. Now they do. Yes, true. Fixed.. So, I've investigated a bit. The reason for it you can find here - https://github.com/airbnb/enzyme/issues/1162\nThe short answer is that it happened because of breaking changes in cheerio which is used for render in enzyme. But we actually can get these wrappers back if instead of doing thisexpect(render().html()).toMatchSnapshot();we will do thisimport cheerio from 'cheerio';\nexpect(cheerio.html(render())).toMatchSnapshot();. I thought withexpect.assertions(1);` it would work as with promises, but no :(\nTest failed before but the reason was not here, now it should work properly.. And done. ",
    "jrwebdev": "We use both where I work. Storybook we use for displaying the multiple different states of our components and can tailor the stories to aid in testing and development. Styleguidist we use for formal documentation and demos of our public components. \nBoth are great tools, but I personally see them as having different uses, especially if you're using them in a larger company. . ",
    "wangbourne": "storybook support react native, how about styleguidist?. ",
    "gouegd": "\nAnother important distinction is that Storybook shows only one variation of one component at a time but Styleguidist can show all variations of all components, all variations of a single component or one variation.\n\nI think on the contrary this is unimportant as it is very simple to dynamically create a story containing all other stories for a given component (I do this for all my components and this appears as the first story)\nI think both tools are cool and hopefully can coexist peacefully ;). ",
    "alzalabany": "can we setup custom testing cose with styleguidist ?\nstorybook you can prepare mock data using faker run beforeAll or beforeEach to wrap component with context Parent for examplr.\nhow can we do this in markdown ?. ",
    "AndrewKarasek": "@sapegin yeah TS support is probably the biggest loss. Being tied to extra dependencies and frameworks is not ideal and taking devs out of their familiar environment (ts / js) to work in free text doesn't sound like the best way to go for us. \nUnfortunately storybook doesn't fit our use case for a number of other reasons. \nIf we forked the repo and developed the option to declare docs in code would that be considered for merging into the main repo? Cheers!\n. I'll need to dig into it a bit but my gut thought is to just use a naming scheme to find the documentation and then just some react components to wrap the necessary pieces of documentation. For example: \nFilename: Button.doc.js\n```javascript\nimport * as React from 'react';\nimport { Section, Copy, RenderedComponent } from 'react-styleguidist';\nimport MyButton from './MyButton';\nimport * as React from 'react';\nimport { Section, Copy, RenderedComponent } from 'react-styleguidist';\nimport MyButton from './MyButton';\nexport default () => {\n  return (\n    \n\n        Here I write some assocatiated copy for my component\n      \n\n        {/ \n          everything inside rendered component will get rendered in\n          an editable sandbox\n        /}\n        \n\n\n  );\n};\n```\n. ",
    "dziamid": "\nMarkdown has many other benefits in my opinion\n\n@sapegin what are the benefits?. ",
    "Jayphen": "@AndrewKarasek \n\nIf we forked the repo and developed the option to declare docs in code would that be considered for merging into the main repo? Cheers!\n\nDid you end up creating this fork? I have been trying a styleguide-first approach to development, but the missing type safety and other editor features makes it more difficult than it could be.. ",
    "wachunga": "This seems like a reasonable approach to me. I've encountered this problem as well.. @sapegin is that Renderer removal documented somewhere? I've found it very confusing trying to apply styles.. Thanks. I was trying with Code before and it would not work, but this did:\nstyles: {\n    Markdown: {\n      code: {\n        fontSize: 13\n      },\n    },\n  },. Thanks for releasing this. \ud83d\udc4d . Thanks for your feedback. Updated my commit.. For the time being, I've externalized all my examples so they're proper components on their own (standard .tsx files). I use the updateExample config hook to load in the example files and format them a bit so they look nice in \"view code\", eg removing imports (that RSG doesn't need). Then for CI, I can run my usual linting etc, especially tsc --noEmit.\nI like the inline examples but ultimately the CI and IDE experience was too poor for our needs.\nTo help make ensure the styleguide.config.js was all valid, I wrote another little script that iterates through sections and makes sure all the paths point to existing files:\n``js\nfunction validateConfigSection(config) {\n  if (config.content) {\n    if (!fs.existsSync(config.content)) {\n      throw new Error(no style guide content found at path ${config.content} for section ${config.name});\n    }\n  }\n  if (config.components) {\n    const componentPaths = config.components();\n    componentPaths.forEach(componentPath => {\n      if (!fs.existsSync(componentPath)) {\n        throw new Error(no style guide component found at path ${componentPath} for section ${config.name}`);\n      }\n    });\n  }\nif (config.sections) {\n    config.sections.map(validateConfigSection);\n  }\n}\n```\n(This is probably less of a concern for those using component wildcards, which we hope to do eventually.). It would be good to fix these conflicts. Or at least warn when they happen.... This helper function doesn't seem like a useful thing to expose, similar to those in getProps. Its logic is still covered by existing processSection tests.... I prefer mutation (addition, really) in this case because it's clearer that content is not assigned a value unless section.content is present. Previously, you had to check the rest of the function. But I don't feel strongly about it.\nI don't like the multiple meanings of content either. I'm a little unclear what you're proposing. Do you just mean a local reassignment like so?\njs\nconst contentRelativePath = section.content;\nif (contentRelativePath) {\n...\n}. ",
    "BruceHubbard": "What was the logic behind clearing the console?  I recently updated my styleguidist version and I've noticed all of my React warnings are now hidden because the console gets cleared here.. @sapegin I'll open a new issue and see if others are having the same problem.  On a hard page reload in Chrome I end up with zero React warnings when I know I should have some.. ",
    "soul-wish": "Hm.. It seems like I'm a bit late with these changes :) (wrote a code yesterday but finished with a test case only today). It seems like we should reject this PR, right @sapegin ?. ",
    "wkillerud": "Allright. Could the documentation perhaps be updated to reflect this then? :) I can update the quoted line and add an entry to the cookbook if you'd like.. So sorry, I should have tested this in the repo I created before I made a PR. Creating blocks using \"static\" instead of \"javascript\" just gives an error:\nstatic\n```\n\nUnknown language: \"static\"\n\nIs there a different way this modifier should be set?\nI tried digging down in the dependencies to find other documentation but came up short when I reached Github Flavored Markdown and Linguist without finding any references to \"static\".. Oh, OK. I need to read the examples more thoroughly it seems. Sorry for the confusion!. I don't know the inner workings of the RSG router, but if it's possible to rewrite (long term goal for sure) to free the # character using the HTML5 History API it would make this feature much more useful.\nStill, even with its limitations this version may add some value :). > markdown-to-jsx already passes an ID, so we can use it instead of generating our own\nAllright, didn't know that - nice \ud83d\udc4d Made the requested changes and removed the stuff that became redundant.. A workaround is to not use trailing commas in import statements in examples. Some projects (like mine) enforce the trailing comma using Prettier, even in Markdown examples. It would be nice to get this fixed, particularly since it's a valid syntax ([1], [2]) and produces seemingly unrelated errors. It took me a while to track this down \ud83d\ude05 \nI'll dig a bit deeper to see if I can find the root cause.. The problem seems to be caused by rewriteImports and its handling of the commas in named imports. \n\nThe req.split(',') statement produces an array where the last element is the empty string. generate assumes all entries in the array have a valid name, so it produces the statement that breaks the example. \nEither the req.split(',') statement should take into account the possible trailing comma and not produce the empty string element, or generate should check its input before using the value as name - or both :) \nI can make a PR and move discussion there.. Thank you \ud83d\ude4f \ud83d\ude04 . It's a way to check if a string looks like a glob pattern. That way we only use glob if needed. The name isn't good, but that's what they called it :( \nhttps://www.npmjs.com/package/glob#globhasmagicpattern-options. Sure :) I don't know if the function is useful outside this loader, so perhaps an arrow function is the way to go.  Would this be OK?\njs\nconst getFilesMatchingGlobs = (components, rootDir, ignore) => \n    components\n        .map(listItem => {\n            if (glob.hasMagic(listItem)) {\n                return glob.sync(path.resolve(rootDir, listItem), { ignore });\n            }\n            // Wrap path in an array so reduce always gets an array of arrays\n            return [listItem];\n        })\n        .reduce((accumulator, current) => accumulator.concat(current), []);\nBasically this diff (and adjust indent)\ndiff\n+ const getFilesMatchingGlobs = (components, rootDir, ignore) =>\n- function getFilesMatchingGlobs(components, rootDir, ignore) {\n+   components\n-   return components\n        .map(listItem => {\n            if (glob.hasMagic(listItem)) {\n                return glob.sync(path.resolve(rootDir, listItem), { ignore });\n            }\n            // Wrap path in an array so reduce always gets an array of arrays\n            return [listItem];\n        })\n        .reduce((accumulator, current) => accumulator.concat(current), []);\n- }. Sure thing \ud83d\udc4d Added in b1a72eb. ",
    "SpencerCDixon": "You sir are correct.  That was dumb of me... I guess if my package exports a test utility then it borks production build.  If I just explicitly import the pieces I needed then it renders fine.   Closing!!. ",
    "ilya-pyatin": "Actually I'm not sure if it is required that a component is exported as default.\nThere are a lot of components on my project that are exported not as default so it would be great if there was a way to keep them as is and be able to write examples.\nSo far I haven't found such way in the docs. I have searched the source code and have found that there is a switch in the Examples component with case 'code' and case 'markdown', so I would assume that there is an alternative way of specifying an example apart from creating an .md file. But again, I have not found any description of the way in the docs.\nUnfortunately I don't have much time to search the source code to find an answer myself, so I would appreciate any help with this.\nAnd again, if there is an alternative way of specifying component examples, it would be great to have it documented.\nThanks. ",
    "milesj": "This feature request might be moot considering the new context API is coming out soon.. Nice, thanks for the work regardless!. Thanks, I'll cross post it there too. https://github.com/reactjs/react-docgen/issues/246. Any update on this?. I'll look into that. In the meantime, here are the others that webpack was throwing.\nWhen using glob in the examples directly.\n```\n FAIL  Failed to compile\n./src/icons/README.md)\nModule build failed: Error: Requires using expressions are not supported in examples. (Used: require(file))\n    at String.replace ()\n```\nWhen using glob in a file that's imported.\n```\n FAIL  Failed to compile\n./node_modules/fs.realpath/index.js\nModule not found: Can't resolve 'fs' in '/Users/miles_johnson/toolkit/node_modules/fs.realpath'\n./node_modules/fs.realpath/old.js\nModule not found: Can't resolve 'fs' in '/Users/miles_johnson/toolkit/node_modules/fs.realpath'\n./node_modules/glob/glob.js\nModule not found: Can't resolve 'fs' in '/Users/miles_johnson/toolkit/node_modules/glob'\n./node_modules/glob/sync.js\nModule not found: Can't resolve 'fs' in '/Users/miles_johnson/toolkit/node_modules/glob'\n```\nMaybe it's because I'm not using fs directly?. I'll tinker around a bit more and report back.. fs by itself also doesn't work FWIW.\nUncaught Error: Cannot find module \"fs\"\n    at webpackMissingModule (main.bundle.js:1207)\n    at Object../guide/icons.js (main.bundle.js:1207). @jbachhardie Great suggestion. Will give that a try, thanks!. That fixed it, thanks. Didn't see it listed in the changelog.. Not really, I need it global. I'm basically running git log to extract all the recent commits (an array of strings), and I need to access this data within SG components, like ComponentsListRenderer. Right now it's very hacky to do this.. I'll look into submitting a PR.. They worked together before, but do they not in v9 now?. I removed all my custom webpack config except for module.rules and resolve.extensions (because we use TS), and it still errors.. ",
    "4mgad": "Hi Artem, unfortunately I can't spend more time on this issue for the time being.. Yet it's mentioned in the Docs?\nhttps://react-styleguidist.js.org/docs/configuration.html#editorConfig. ",
    "swese44": "Thanks @sapegin! This is blocking our use of Styleguidist, any chance this could be published soon? :). hey thanks @sapegin. Our UI framework already includes a CSS reset + baseline styles for any consuming app. Arbitrary semantic markup will automatically be styled to look and feel like YamUI.\nStyleguidist renders great semantic markup. But every section, header, heading, article, paragraph, etc. tag has classnames with more styles than we could manually reset, so I don't think theme or styles will work for us.\n\nAnother option is to override every render component, but that's probably more tech debt than we want to maintain.\nFor use cases like ours, a styleguide for a UI framework with its own reset and baseline styles, it would be ideal if we could flip a switch and disable all the Styleguidist render component CSS except for the sidebar and code editor components so the documentation reflects our framework's look and feel.. ",
    "gandhiamarnadh": "I've addressed my problem with editing all readme.md files now..\nIt would be great to add a new generic wrapper (over readme.md content with custom props dependent on component name ) like StyleGuideRenderer and Wrapper (over example react components).\n. ",
    "MrHavard": "Not sure what I did between when I posted and today but now it works fine. Without the need for .default added. Sorry for the noise.. ",
    "mikeaustin": "It may be true that it\u2019s bad practice, but the user experience remains. I feel a message stating that it must be installed locally would be nicer than an erroneous error. My $.02. FYI, I love the live editing!. ",
    "rluiten": "I am not using react-docgen-typescript, it is not required,  it is primarilly only required for prop type extraction afaik.\nI did test react-docgen-typescript out but it appears to stop styleguidist from finding components for me at the moment so dropped it for now. I plan to look further into that but it is not high enough priority at the moment.\nFor class level members, you can mark them \"Public, private, and protected modifiers\", it is not a bad idea though as you say it isnt exactly a 'required' feature, I just raise it as someone else sure to run into this behaviour I suspect.. Just realised might be the fat arrow function!.. Is there anything specific I can do ?\nI can provide a compressed version of the bundle it is a bit over 450 KB compressed and about 2.6 MB uncompressed. I've snooped around in it to see if i can figure out what module it is it might be buble.\n. By the way the actual code i posted above is from the example app not from my application.. I realise this is not exactly what you asked for but this may be of use to you.\nIf you grab the two attached files and remove the \".txt\" from the end of the file name.\nso they are named \n ColorSwatch.md.txt to ColorSwatch.md\n ColorSwatch.jsx.txt to ColorSwatch.jsx\nThen put them in your components folder where styleguide is run and start styleguide.\nPlease note the Component ColorSwatch has 4 properties as demonstrated in the ColorSwatch.md file. \n name\n value\n width\n height\nThe width and height properties are optional and default to 320 and 180 respectively.\nColorSwatch.md.txt\nColorSwatch.jsx.txt\n2017/Jan/17 Updated ColorSwatch.md.txt with suggestion from @sagepin below to add 'noeditor' to the examples in ColorSwatch.md.txt.. ",
    "jfschwarz": "It will still show the warning.. @sapegin I've implemented the changes you requested.. @sapegin Sure, no problem.. good idea. ",
    "Memoyr": "ok thanks , I will.. ok thank you @Gregor1971 . Actually, I got it working. \nI had similar problem as seen in here #578. ",
    "MillerGregor": "@Memoyr, I just got styleguidist working with react-native.  See this branch for an example.. I'm making an example using styleguidist that will have a simpler configuration than the one I linked.  We should use that once it's done.  I'd be happy to submit a PR for the docs.\nJust to be clear - this is using react-native-web, so it's not full react-native.  Full react-native would require a substantial re-write of styeguidist.. @sapegin ,\nThis pr is just a simple example.  If linting and code coverage for examples are that important, you can just close this pr.. @sapegin \nlook at the coverage error.   it's a file I didn't touch.   pr closed.  best wishes. yes, crna generates the script entries.  best to leave it as is so it matches what users see in theirs.. updates pushed.\nI had stared with my much more complex config file and pared it down to this... not enough, though. ",
    "kumarpatel": "FYI. https://github.com/styleguidist/react-styleguidist/pull/816. ",
    "gscottolson": "Documenting my fix for others\u2026\nI was able to style these wrapper <div>s using JSS nested syntax:\njs\nmodule.exports = {\n  ...\n  styles: {\n    Playground: {\n      preview: {\n        '& > div, & > div > div': {\n          height: '100%'\n        }\n      }\n    }\n  }\n  ...\n}. I just noticed that you are using the jss-nested package, so this seems possible using only configuration:\nstyleguide.config.js:\njs\nmodule.exports = {\n  ...\n  styles: {\n    Playground: {\n      preview: {\n        '& > div, & > div > div': {\n          height: '100%'\n        }\n      }\n    }\n  }\n}. Agreed. Thanks!. @sapegin: Do you have an estimated publish date for v 6.2.0? This Safari font color bug is really impacting the correctness of my style guide. \ud83d\ude04 . @Andarist I must have missed this. Thanks for pointing it out. \ud83c\udf7b . ",
    "WaldoJeffers": "@sapegin Wait, please do not merge. When doing a more thorough test, I am now unavailable to replicate the results I was obtaining using dangerouslyUpdateWebpackConfig and definePlugin manual override. Will link into that.. @sapegin actually nevermind, it's all good. I was seeing weird results because of npm link. Has anyone else encountered issues with that? Had to publish my branch on a scoped npm package, to make sure everything was running smoothly.. It's an interesting feature, but putting the props table after the examples can have a downside: if there are many examples, it makes it easier to completely miss it. In my usage of RSG, I often show a very simple use case of the component, add a bit of text, and then add several examples displaying roughly all possible combinations of props. If the props table was at the end, some people might not see it.\nBut I do hear your point on showing what it looks like before giving the full spec. Having a way to simply configure the order in which these sections appear is interesting.\nSlightly unrelated question, is there a way to show the props table by default (currently hidden by default)?. Good point. ",
    "esturcke": "Yup, this works:\ndiff\ndiff --git a/public/image.png b/public/image.png\nindex f71184c..a7a4c53 100644\nBinary files a/public/image.png and b/public/image.png differ\ndiff --git a/styleguide.config.js b/styleguide.config.js\nindex f08946b..9daf5bc 100644\n--- a/styleguide.config.js\n+++ b/styleguide.config.js\n@@ -4,6 +4,9 @@ module.exports = {\n   components: './lib/components/**/[A-Z]*.js',\n   assetsDir: 'public',\n        webpackConfig: {\n+               devServer: {\n+                       watchContentBase: true,\n+               },\n                module: {\n                        loaders: [\n                                {. To keep using CRA's webpack config, it looks like I can do something like: \ndiff\ndiff --git a/styleguide.config.js b/styleguide.config.js\nindex f08946b..675270e 100644\n--- a/styleguide.config.js\n+++ b/styleguide.config.js\n@@ -18,4 +18,8 @@ module.exports = {\n                        ]\n                }\n        },\n+       dangerouslyUpdateWebpackConfig: config => ({\n+               ...config,\n+               devServer : { watchContentBase: true }\n+       }),\n };. Sure, I can work on this. Did you want this as a configuration flag or always set to true? Defaulting to true would be good for me, but I'm not sure if there are drawbacks. I'm not sure why webpack decided to default to false.. Would you be able to help me with that? It looks like the changes I had made for the other pull request.. Ok, let me do that.. Sure, sounds good to be more explicit. I've been used to writing != null as a short hand for null or undefined checks.. ",
    "siddharthkp": "Came here to start exactly this discussion \ud83d\ude04 \n\n\nProps after example\nIt does make sense for new users to look at the examples first and then look at the props table, but for repeat users, it's exactly the other way round. Now, it's difficult to comment which is more common, it depends on the context of your library. Open source libraries and internal libraries will have opposite use cases.\na) Which makes me wonder if this is a user config, not an author config?\nb) can be improved slightly by adding a tiny navigation on top?\n\n\n\n\n\nThe other approach is to merge the 2 and make the props easier to consume for both new and old users\n\nThis makes sense but I think what makes even more sense is to make those props interactive somehow. - Andrey\n\nI have a simplistic proof of concept here from a project I'm working on: https://fabric.now.sh\n\n\nCustom prop table\nI've realised that in some cases, the propTypes are not always a perfect mapping of how props can be used. \nHere's a use case where it works. type is the prop which accepts a few values.\n```jsx\n\n\n```\nAnother way to make this is with directly the values. I like the API/developer experience of this approach more. \n```jsx\n\n\n```\nBut, it's not possible to infer from propTypes that primary and transparent are conflicting props and only one of them can be used. This is something I've tried to tackle in the proof of concept (https://fabric.now.sh). @peroperje Don't know if you figured this out. Leaving for future wanderrs: \n\n\nreact-docgen only understands React components (not styled components)\nReference: https://github.com/styled-components/styled-components/issues/945\nTL;DR: You'd have to use like this:\n``jsx\nconst H1 = styled.h1\n  font-size: 1.5em;\n  text-align: center;\n`;\nconst Headline = props => ;\nHeading.propTypes = {\n  top: PropTypes.string\n}\n```. ",
    "styleguidist-bot": "\n  0 failure: \n  1 warning:  Changes were made...\n\n\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to package.json, but not to package-lock.json.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json.. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 6.5.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 6.5.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 6.5.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nPerhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nIf you\u2019ve changed any dependencies (added, removed or updated any packages), please run `npm install` and commit changes in package-lock.json file. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.2.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.10 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.9 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.10 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.11 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.10 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. ## :rotating_light: The automated release from the master branch failed. :rotating_light:\nI recommend you give this issue a high priority, so other packages depending on you could benefit from your bug fixes and new features.\nYou can find below the list of errors reported by semantic-release. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can resolve this \ud83d\udcaa.\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\nOnce all the errors are resolved, semantic-release will release your package the next time you push a commit to the master branch. You can also manually restart the failed CI job that runs semantic-release.\nIf you are not sure how to resolve this, here is some links that can help you:\n- Usage documentation\n- Frequently Asked Questions\n- Support channels\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind semantic-release.\n\nThe push permission to the Git repository is required.\nsemantic-release cannot push the version tag to the branch master on remote Git repository.\nPlease refer to the authentication configuration documentation to configure the Git credentials on your CI environment.\n\nGood luck with your project \u2728\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.14 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.14 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.12 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.12 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.13 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.13 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.13 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.3.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.1.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.15 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.18 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package-lock.json`, but not to `package.json`.\n\nPlease remove `package-lock.json` changes from your pull request. Try to run `git checkout master -- package-lock.json` and commit changes.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.0.18 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.2.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.18 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package-lock.json`, but not to `package.json`.\n\nPlease remove `package-lock.json` changes from your pull request. Try to run `git checkout master -- package-lock.json` and commit changes.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.19 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.0.20 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.0.20 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nIf you\u2019ve changed any dependencies (added, removed or updated any packages), please run `npm install` and commit changes in package-lock.json file. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.1.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.2.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.1.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.1.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.2.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.1.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.1.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.1.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.1.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.2.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nIf you\u2019ve changed any dependencies (added, removed or updated any packages), please run `npm install` and commit changes in package-lock.json file. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS\n\n. :tada: This PR is included in version 7.2.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.2.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.2.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.2.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.2.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.2.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.3.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.7 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.3.8 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.8 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.9 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.9 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.9 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.10 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.11 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.3.11 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.0.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.0.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 9.0.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 9.0.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 9.0.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 9.0.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 9.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 9.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n<!--\n  0 failure: \n  1 warning:  Changes were made...\nDangerID: danger-id-default;\n-->\n\n\n\n\nWarnings\n\n\n\n:warning:\n\n\n  Changes were made to `package.json`, but not to `package-lock.json`.\n\nIf you\u2019ve changed any dependencies (added, removed or updated any packages), please run `npm install` and commit changes in package-lock.json file. Make sure you\u2019re using npm 5+.\n  \n\n\n\n\n  Generated by :no_entry_sign: dangerJS against 0cd7cbb05b654c0bd01146dccdee4273575869b2\n\n. :tada: This issue has been resolved in version 9.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 9.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 9.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 9.0.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 9.0.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 9.0.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 9.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. ",
    "jure": "@sapegin I had a solution where I'd just play with the order of things in the merge(), but this seems more readable and explicit.. Yeah, that's what I had, personally found the override a bit too implicit then. I'll do it, though, sure.. There's something funky going on on line https://github.com/styleguidist/react-styleguidist/blob/master/src/client/rsg-components/ComponentsList/ComponentsListRenderer.js#L51. Probably the link/href format has changed since then? You can temporarily fix this bit by overwriting the ComponentsListRenderer and changing this bit of the functionality.. ",
    "newswim": "I've started a Styleguidist project for Ant Design. The only trick had to do with setting up some overrides in the webpack config.\nThe idea behind this, in addition to having all the components on one page, was to be able to preview components after making changes to the global less variables. It works pretty well. Hopefully this means fewer manual css overrides in the future.\nI still need to figure out a nice way of showing different subcomponents. For example, Search is a type of Input, but I haven't found a clean way of separating these out. Explore the codebase, I'd love some feedback!\nSee: https://github.com/newswim/styleguidist-ant-design. ",
    "isratc": "Thankyou so much @newswim  ill take at look =). ",
    "lifeiscontent": "whatever is after the domain name is used to map assets to their proper destinations.\ne.g. if the styleguide was hosted at https://example.com/foobar all relative urls would have /foobar as a prefix to their original urls.. @sapegin . ",
    "larabueno-paloit": "Thanks for the link but I'm more curious to know how the styleguidist handles it? not really the usage of it. . Thanks for the quick response! I'll just check the file then :). ",
    "thecodejack": "debugged the issue. my bad. Started working with TabButton rather TabButtonRenderer. Following worked.\nstyleguideComponents: {\n    StyleGuideRenderer: path.join(__dirname, 'src/styleguide/StyleGuideRenderer'),\n    TabButton: path.join(__dirname, 'src/styleguide/TabButtonRenderer')\n  },\nClosing this here. It would be better if we have list of possible renderers and respective keys needed in documentation.. Sure..will do. ",
    "sidharthmehra": "@Harshit369 you can add a styleguide.config.js\nand within it:\nexport {\n   template: './template.html'\n}\nIn template.html add <link rel=\"stylesheet\" href=\"//fonts.googleapis.com/icon?family=Material+Icons\"> within the head tag.. ",
    "Harshit369": "@sidharthmehra Thanks a lot !! It worked very well.\nJust for anybody following this thread, you also have to add:\n<div id=\"app\"></div> \ninside your <body> In your template.html file. Otherwise, it will throw something like this:\n\n. ",
    "sanjsanj": "@sapegin Is this issue still open and has the scope just changed to document the feature instead?. @sapegin Perhaps I could pick it up then if you don't mind :)\nNo idea what to do but I'll fork the repo and have a look.. Cheers!  I'll look at that now.  I have been looking at this issue and will come back to you with further questions asap.. @sapegin Apologies for the hassle but I have some questions:\n\nWould it make sense to include this in the #how-to-change-styles-of-a-style-guide section, and expand a little bit more on how to reference the CSSinJS API to construct styles here?\n\n(This is my first time using your package and at first it wasn't clear that themes uses your own API and styles uses the CSSinJS API.)\n\n\nSince you are using '@global' does this mean that JSS-global is also available?  It's not listed in the available plugins in that section.\n\n\nSorry but I have no context as to why this issue was flagged up, is there a particular use case we could reference?\n\n\nYou say that for this component <LogoRenderer><h1 className=\"logo-524678444\"> you would use this styles object:\nstyles: {\n    Logo: {\n        logo: {\n            animation: 'blink ease-in-out 300ms infinite'\n        }\n    }\n}\nShould Logo be LogoRenderer instead or am I missing something?. Just opened a PR, not sure if it's what you had in mind or not but let's get the ball rolling.\n\n\nAwaiting feedback  :-). Is the desired behaviour that it should just show a pointer and no underline on hover on desktop, and click on device?\n<h1 class=\"rsg--root\">\n  <a class=\".rsg--heading-11\">  // <-- this element\n    ...\n  </a>\n</h1>. @sapegin Thanks for the chance to contribute and for helping me along :). No idea why it did that, I've set indentation to 2 spaces now.. ",
    "jmurret": "@sapegin, is something like this what you had in mind : https://github.com/styleguidist/react-styleguidist/pull/728 ? \nI've tested it by changing it to capitalize and seeing the updated example 'VIEW CODE' change to 'View Code'.\nHappy to modify this if you had something else in mind.. Should be fixed with this PR: https://github.com/styleguidist/react-styleguidist/pull/727\nChrome did not show this behavior for me, but Firefox did.  Verified that it was corrected with above PR.. ",
    "UmenR": "Hey @sapegin  I'd like to take this up! but before i start i have a question to ask. Im  a tad new to this so if i want to run prettier as part of npm test i could add it to the end of the current test script with a semicolon right ? but doing so would mean that if jest failed prettier wont run either. Im assuming that's not an issue ?  and this also means that currently there is no config file for prettier right ? :smile: . Oh did not see that PR :smile:  Thanks for the response :+1: . ",
    "Didericis": "@sapegin I'm still sort of getting this issue. My component is showing up in the styleguide, but there's a warning in the console and I'm unable to see the prop types I've declared.\nWarning:\nCompiling...Warning: Cannot parse client/components/create_task_actions/create_task_actions.jsx: TypeError: Got unsupported definition type. Definition must be one of ObjectExpression, ClassDeclaration, ClassExpression,VariableDeclaration, ArrowFunctionExpression, FunctionExpression, TaggedTemplateExpression or FunctionDeclaration. Got \"CallExpression\"instead.\nComponent:\n```jsx\nconst CreateTaskActions = withProps(props => ({\n  buttons: [\n    { name: 'plus', onClick: props.onCreateTask },\n    { name: 'clock-o', onClick: props.onClickExpectedDuration },\n    { name: 'info', onClick: props.onClickInfo },\n    { name: 'times', onClick: props.onClearTask },\n  ],\n}))(IconButtons);\nCreateTaskActions.propTypes = {\n  onClickCreate: PropTypes.func.isRequired,\n  onClickExpectedDuration: PropTypes.func.isRequired,\n  onClickInfo: PropTypes.func.isRequired,\n  onClickClear: PropTypes.func.isRequired,\n}\n/*\n * @component \n /\nexport default CreateTaskActions;\n```. ",
    "diegohaz": "I'm getting the same behavior as @Didericis . @bstream's workaround fixed it for me.. ",
    "jesstech": "It would be nice to get to the bottom of this.  This is what is preventing us from switching to Emotion.js with its use of recompose.. ",
    "santaclauze": "Problem not yet solve?\n. Ill will try to make some time this weekend. . @gergely-nagy, that would be great.\nTBH, my family life make it hard to spend time on side projects and I am a dev in the making, so it takes even longer.\nAs for now, a quick and not elegant way was to replace the default serverPort settings to:\nserverPort: {\n        type: 'number',\n        default: parseInt(process.argv[5] || '6060', 10),\n    },\n. I think the issue is also related to this post #705. . Confirmed. @robertaird 's super hack works. But as expressed, it is a bit 'harcore'.\nAny followup on this? It seems to be quite a recurrent problem.. ",
    "deehuey": "Nothin eh? . ",
    "jeradrutnam": "Sure I will do. :). ",
    "danwoodbury": "im getting this issue too, very strange. the component is exported in a standard way:\nexport default class Button extends React.Component<ButtonProps, {}> {. can you give me an example of how to do this?. Perfect, all working well now. Thanks for the pointer in the right direction. ",
    "Mikrovolnovka": "In the scope of anybody else will face this issue, I've got the fix to this.\nI've met the same thing with HeaderRenderer and looked into index.js file:\nexport { default } from 'rsg-components/Heading/HeadingRenderer';\nSo we should override not the HeadingRenderer but Heading component\nThe same thing is with ComponentsListRenderer: https://github.com/styleguidist/react-styleguidist/blob/master/src/rsg-components/ComponentsList/index.js\nWe should override the ComponentsList, not the ComponentsListRenderer component. ",
    "HipsterZipster": "When is 6.2.0 slated for release? Looking forward to this fix!. ",
    "KrickRay": "@sapegin I think we could get over it. I just wanted more configuration. Perhaps you can close or leave for discussion, because unfortunately I did not check everything up to the end and the self-written version  was based on your loaders.  It would be nice if you made them in separate packages.. ",
    "albertogasparin": "+1 on wrapping examples in fragments automatically. So the consumer doesn't have to care and any code just works ;). Well, I haven't looked at the current implementation but my thought was that anything before the first jsx element would have been treated as plain javascript, then from the first <Something till the end of the Markdown snippet the content will be wrapped with a React.Fragment. Am I wrong?. ",
    "abottega": "Does styleguidist support  in the markdown example files now? Or is this still being worked on?. ",
    "jprivillaso": "I'm closing this issue because I found my error. It should be configured the same was as webpack API docs indicates.. ",
    "AlexMeah": "@sapegin Made the suggested changes let me know if they are ok. ",
    "MiguelMadero": "While this works, why is it considered \"dangerous\"? . ",
    "rayrutjes": "Please let me know if there is anything I can do to improve https://github.com/rayrutjes/jest-serializer-html. Open to feedback & suggestions!. Wow, sorry I missed this one.\nIs this still an issue, and if so how can I help improve this?\ncc @sapegin @probablyup . ",
    "piotrwitek": "@sapegin this would be really useful as I could use this transformer solution to handle a different use case:\n- I'd like to use Examples that I have written in seperate files with TypeScript, so then I can use them in code blocks, currently I have to use require, which is not and acceptable solution for me (because I want to see original component code in the code block, not just a require statement)\nI need the transform to strip types and transpile it to ES6 before loading the source, otherwise it will have syntax errors.\nIs this a good solution for my case, or you would suggest a different path?. @sapegin now I got it (after reading development section), thanks and sorry for the noise. ",
    "arackaf": "For the benefit of anyone else finding this issue, the solution is to just use the template option, and provide your own html file with whatever script or link tags you want.\nIt seems styleguidis expects there to be a div with an id of app, so be sure to include that.  ie\nhtml\n<html>\n    <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    </head>\n    <body>\n        <div id=\"app\"></div>\n    </body>\n</html>. I'll see what I can do :). You'd think so, but in this case it won't work.  babelHelpers.min.js needs to run on the client so that the global object which Babel's output looks for, exists.\nThat said, I'd be happy to make this a remote url - what would you like me to put?  I don't really use CDN's so I'm not sure what I realistic example would look like. . done. done. done - I think. Mkay - added a note explaining the difference, and also mentioned CDNs. ",
    "stonebk": "Also looks like you can use template.head.raw:\nhttps://react-styleguidist.js.org/docs/configuration.html#template\nhttps://github.com/vxna/mini-html-webpack-template#readme. This only appears to be an issue with webpack@4.22.0. Using webpack@4.21.0 seems to work.. ",
    "lgordey": "@sapegin Hi man!\nWhen do you plan to release 6.2.0.?\nI really need this feature and some others from this scope :)\nBtw, thanks for awesome project! \ud83d\udc4d . I guess that the thing, that unite all crashed components - is they all have readme example with some text inside.\nCause examples with Placeholder or RandomButton don't have such error. \n\n. @sapegin yeap, if I completely remove new UglifyJSPlugin from make-webpack-config - everything is ok. . > of course they don\u2019t have a change log :man_facepalming:\nof course \ud83d\ude02 . \nI think they are not completely sure about uglify-es version \ud83d\ude04 . Updating to uglifyjs-webpack-plugin@1.1.5 inside react-styleguidist also should fix the problem, cause they freeze uglify-es version here https://github.com/webpack-contrib/uglifyjs-webpack-plugin/pull/199/files\n. @sapegin I guess I found failing part - https://github.com/styleguidist/react-styleguidist/pull/801. This issue was about buble bugs related to https://github.com/Rich-Harris/buble/issues/104 and https://github.com/Rich-Harris/buble/issues/107\nIt should correctly work in 6.2.4 after we updated to buble@0.19.2 here https://github.com/styleguidist/react-styleguidist/pull/815.\n. I guess at first we should find the real problem.\nCould you make a demo with the last version where it works and broken one?. May be it's cause of buble downgrade but now I can't up it https://github.com/Rich-Harris/buble/issues/107. But yea, support for rest properties was added in v0.17.0 here https://github.com/Rich-Harris/buble/pull/30. @diegohaz I suppose this will help https://github.com/styleguidist/react-styleguidist/pull/815. ",
    "ShyamRaj": "I still see this error in the latest version @7.0.14.. ",
    "swashcap": "Experiencing some super strange Safari styling and found this issue. Could someone publish the package so this fix is available?. ",
    "austin94": "Publishing a patch for this would be very helpful. Currently viewing components in Safari is pretty unpredictable.. ",
    "gazzwi86": "@sapegin it looks like the issue is with the Markdown plugin.  Is that required in this instance, since its just grabbing text from a code comment?. The Proptypes here are those shown in the picture:\n```js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles';\n/\n * A basic html image\n \n * @param {object} props - properties pass to and used by the component, @see propTypes\n * @param {string} props.source - the image src to display (Path or base64)\n * @param {string} props.alt - alternative text describing the image\n * @returns {object} - a react compatible component\n /\nconst Image = props => (\n  \n\n\n);\nImage.propTypes = {\n  / The image src to display (Path or base64) */\n  source: PropTypes.string.isRequired,\n  / Alternative text describing the image */\n  alt: PropTypes.string,\n};\nImage.defaultProps = {\n  alt: '',\n};\nexport default Image;\n```. ",
    "frontsideair": "Sure, I hope I'll have time, I've always wanted to contribute.. ",
    "vysinsky": "Hello, I have same issue in 6.1.0. I've found out the problem (at least for me) is HTML in Markdown:\nhttps://gist.github.com/vysinsky/7f40d4673e5e84004bdbe08561ab1557 (see Release checklist)\nCPU is on 100 % and page is indefinitely loading. When I load some other page where there is no such HTML styleguide loads correctly. There are no errors in console so I am not sure, how to debug it and provide more information.. Great! Thank you.. Hi, did you solve the problem? I have similar problem when running styleguide inside docker (via docker-compose).\nIt loads main.bundle.js for about 50 seconds. When I reload the page it looks like it transpiles it again.\nWithout docker it is loaded in half a second.\nWhat is weird that after some time (few minutes) it loads quickly also in Docker image. I don't understand it...\n\n. Hello, it seems to be broken again in 7.0.7 (also in 7.0.5). I have this list directly in MD file (not in component example)\n```markdown\nMake sure to include polyfills for following JS features (if you need to support browsers which do not support them):\n\nfetch - recommended: isomorphic-fetch\npromises - recommended: core-js/es6/promise\nMap - recommended: core-js/es6/map\nSet - recommended: core-js/es6/set\nES6 array functions - recommended core-js/es6/array\nrequestAnimationFrame (for IE < 10) - recommended raf\n``\nStyleguide renders(for IE < 10)as(for IE < < 10).. I've just checked and last version it is working correctly is 6.0.33.. I've checked6.2.4. Still does not work (buble0.19.3is installed). Should I report directly tobuble`?. Sure, there is a demo: https://github.com/vysinsky/styleguide-demo\n\nThere are two branches: \n\nmaster with latest styleguide does not work\nworking - styleguide 6.0.33 is used. I've just checked and last version it is working correctly is 6.0.33.. There is a demo: https://github.com/vysinsky/styleguide-demo\n\nThere are two branches: \n\nmaster with latest styleguide does not work\nworking - styleguide 6.0.33 is used\n\nI've added also built styleguide folder.. Thank you for comments, @sapegin. I've fixed it.. Hi, I can confirm. The 'content' will be rendered before 'sections'.. ",
    "efusien": "Webpack 4 is now in Beta and will be released soon as a stable version.\nReact-styleguidist is not working with Webpack 4 beta.. ",
    "kohgpat": "I've made a PR. Please take a look. https://github.com/styleguidist/react-styleguidist/pull/839. Updated PR.. Oops, I was sure I've revert it already. Sure.. Fixed.. @sapegin Don't want to bother but is everything ok this time?. ",
    "jaredwilli": "I just tried again and still seeing the same issue. \nIt is happening when I do nothing except npm install in the customised example, even after a newly cloned. Maybe I am doing something wrong? Is there a specific version of node I should be on perhaps?. Yes, running it from the root worked. . ",
    "nobuti": "Maybe (probably) I'm missing something but I can't get it to work. I'd like to generate docs from /docs in my project. I have this config:\nmodule.exports = {\n  template: 'styleguide/template.html',\n  title: 'Airship',\n  skipComponentsWithoutExample: true,\n  getExampleFilename(componentPath) {\n    return componentPath.replace(/(.+)\\/(.+).js$/, '/docs/components/$2.md');\n  },\n  sections: [\n    {\n      name: 'Introduction',\n      content: './docs/introduction.md'\n    },\n    {\n      name: 'Typography',\n      content: './docs/typography.md',\n      components: function() {\n        return [\n          './src/components/Typography/jumbo.js',\n        ];\n      }\n    },\n    {\n      name: 'Components',\n      content: './docs/components.md',\n      components: function() {\n        return ['./src/components/Grid/grid.js'];\n      }\n    }\n  ]\n};\nThe files /docs/components/(grid|jumbo).md exist, and the project is compiled successfully but those files are not rendered in the styleguide. I tried with a relative path as well with the same result. If I avoid skipComponentsWithoutExample, the documentation for those components is empty. I can't get what I'm missing, I'm using create-react-app by the way.. ",
    "giacomocerquone": "@nobuti With a console.log you'd have seen that to do what you wanna do, you just need something like this:\njavascript\n  getExampleFilename(componentPath) {\n    return componentPath.replace(/\\.js?$|app/g, matched => (matched === 'app') ? 'docs' : '.md');\n  },\nI wrote that as a oneliner, but it should be clear enough. You need of course to set it based on your paths.\nSo replace \"app\" with your main directory. @IgorBondar I had to manually install html-webpack-plugin, actually there was no node_modules/react-styleguidist/node_modules/html-webpack-plugin/ folder\nIt is a normal behaviour? If so, docs should be updated: https://github.com/styleguidist/react-styleguidist/tree/master/examples/react-native. https://github.com/webpack/webpack/issues/6568#issuecomment-377491754\nDoes it help?. config with process.traceDeprecation = true at the top\n(node:7196) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead\n    at StyleguidistOptionsPlugin.apply (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\react-styleguidist\\scripts\\utils\\StyleguidistOptionsPlugin.js:15:12)\n    at webpack (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack\\lib\\webpack.js:37:12)\n    at createServer (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\react-styleguidist\\scripts\\create-server.js:29:19)\n    at server (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\react-styleguidist\\scripts\\server.js:7:21)\n    at commandServer (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\react-styleguidist\\bin\\styleguidist.js:120:19)\n    at Object.<anonymous> (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\react-styleguidist\\bin\\styleguidist.js:69:3)\n    at Module._compile (module.js:641:30)\n    at Object.Module._extensions..js (module.js:652:10)\n    at Module.load (module.js:560:32)\n    at tryModuleLoad (module.js:503:12)\n    at Function.Module._load (module.js:495:3)\n    at Function.Module.runMain (module.js:682:10)\n    at startup (bootstrap_node.js:191:16)\n    at bootstrap_node.js:613:3\n(node:7196) DeprecationWarning: Tapable.apply is deprecated. Call apply on the plugin directly instead\n    at Object.compileTemplate (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\html-webpack-plugin\\lib\\compiler.js:48:17)\n    at C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\html-webpack-plugin\\index.js:61:40\n    at AsyncParallelHook.eval [as callAsync] (eval at create (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:13:1)\n    at AsyncParallelHook.lazyCompileHook [as _callAsync] (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\tapable\\lib\\Hook.js:35:21)\n    at hooks.beforeCompile.callAsync.err (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack\\lib\\Compiler.js:474:20)\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:6:1)\n    at AsyncSeriesHook.lazyCompileHook [as _callAsync] (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\tapable\\lib\\Hook.js:35:21)\n    at Compiler.compile (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack\\lib\\Compiler.js:467:28)\n    at compiler.hooks.watchRun.callAsync.err (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack\\lib\\Watching.js:77:18)\n    at _err1 (eval at create (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:20:1)\n    at compilerInvalid (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack-dev-middleware\\lib\\Shared.js:161:5)\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:16:1)\n    at AsyncSeriesHook.lazyCompileHook [as _callAsync] (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\tapable\\lib\\Hook.js:35:21)\n    at Watching._go (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack\\lib\\Watching.js:40:32)\n    at Watching.compiler.readRecords.err (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack\\lib\\Watching.js:32:9)\n    at Compiler.readRecords (C:\\Users\\Giacomo\\Documents\\Github\\truccheria\\node_modules\\webpack\\lib\\Compiler.js:340:11). ",
    "wilcus": "@sapegin clone this repo https://github.com/wilcus/example. @sapegin thank you very much. ",
    "nwinger": "Experiencing the same issue as @stereobooster running create-react-app my-app --scripts-version=react-scripts-ts.\nMy config looks like this:\n```javascript\nconst path = require('path');\nmodule.exports = {\n  components: 'src/components/*/.{ts,tsx}',\n  propsParser: require('react-docgen-typescript').parse,\n  webpackConfig: require('react-scripts-ts/config/webpack.config.dev.js'),\n  styleguideComponents: {\n    StyleGuideRenderer: path.join(\n      __dirname,\n      'lib/styleguide/StyleGuideRenderer'\n    )\n  }\n};\n```. Update:\nHad a colleague look at this, and he suggested we looked into the webpack.config.dev.js from react-scripts-ts. Sure enough, I'd placed my \"lib\" folder where the docs suggested, but I had to move it inside of source as the loader is looking in that directory for ts and tsx files.. ",
    "bebraw": "\nMake react-docgen-typescript support default export the way they work in Styleguidist for JavaScript.\n\nI think that's done by now.\n\nMake react-docgen-typescript read users\u2019s tsconfig.json by default.\n\nSeems to work.\n\nAutomatically enable react-docgen-typescript for TypeScript projects (check typescript in devDependencies?\n\nI need a spec for this. How should we depend on react-docgen-typescript? What's the preferred approach? It doesn't come with any deps and it's controlled. I have a basic setup to adapt.. @jamsch Note that CRA is close to version 2 which will come with webpack. That should fix some things although a config PR is likely welcome.. @okonet's approach looks good. The nice thing is that although it's verbose, the users can program a lot of that away in their config. That's what I've ended up doing myself.\nI wonder if recursive definition would make sense. Then you could do sections inside sections.. ",
    "AwK55": "https://github.com/probablyup/markdown-to-jsx/issues/138. Issue was fixed in 6.3.2. ",
    "friedrith": "I am ready to work on it. However, I propose a feature for retrocompatibility: \n if the id app is found in the template, it uses it.\n if the id app is not found, it tries to find the id rsg-root\nDo you find this proposal acceptable ?. Ok let's do it!. I have finished the change and I tried to pass tests even if the change is minor and the documentation works using commands npm run compile:watch & npm start. But I encountered several fails (28 to be exact) like this one:\n-   \"rsg-components\": \"~/lib/rsg-components\",\n    +   \"rsg-components\": \"C:\\\\Users\\\\<my login>\\\\Documents\\\\react-styleguidist\\\\lib\\\\rsg-components\", \nIt seems to come from windows way of managing paths. How may I pass the tests in this case ?. Thx it will try again.. Sorry to disappoint you but the problem seems to persist because of snapshots.. I launched tests on deabsdeep on windows:\n```bash\n$ git clone https://github.com/sapegin/deabsdeep.git\n$ cd deabsdeep\n$ yarn install\n$ yarn test\n````\nAnd I got the following 2 tests Suites failing, (4 Tests failed and 3 snapshots). The errors is always like that:\n```\ncustom mask\nexpect(value).toMatchSnapshot()\n\nReceived value does not match stored snapshot 1.\n\n- Snapshot\n+ Received\n\n  Array [\n-   \"<rootDir>/src/__tests__/a/b.js\",\n+   \"C:\\\\Users\\\\<my login>\\\\Documents\\\\deabsdeep\\\\src\\\\__tests__/a/b.js\",\n  ]\n\n```\n. ok thx a lot. I made the changes on my own but I wasn't able to push them because of the tests. Thx again.. ",
    "lichangwei": "@sapegin @friedrith This problem was not fixed. I have a component named 'App' and in the webapp its dom id is 'app'. when render again, the app will be render inside App component section.\nCode\n```js\nvar render = function render() {\n    // eslint-disable-next-line import/no-unresolved\n    var styleguide = require('!!../loaders/styleguide-loader!./index.js');\n    var containerId = 'rsg-root';\n    // if i have a component named 'App', the DOM will render in 'App' component section\n    // when i remove below code, i will get the correct result \nif (document.getElementById('app')) {\n    // eslint-disable-next-line no-console\n    console.warn(\"The use of 'app' element id in the template is deprecated. Please, update your template file to use 'rsg-root' as the container id.\");\n    containerId = 'app';\n}\n\nReactDOM.render(renderStyleguide(styleguide, codeRevision), document.getElementById(containerId));\n\n};\n```. ",
    "jasonsims": "@romelperez we're you ever able to make any progress on this idea? Being able to render styleguidist inside another app would be a great addition.. ",
    "stephtr": "Sorry, I searched for the text and additionally the open issues but didn't find it.. Ah ok, I didn't know that was an issue. I just had the feeling that for smaller projects like markdown-to-jsx it is much more complex/problematic to support the whole Markdown specification than for a specialized parser.\nFor the moment it should be fixed by #925.. It isn't fully fixed at the moment and since yarn/npm by default install the most recent version, I don't see the need for updating the dependency (at least now).. FYI: Since the issue has been fixed (thanks to probablyup), I have submitted a pull request for updating the dependency (#982).. Are you sure that package-lock.json will change if I loosen the requirements in package.json? 6.6.1 is still fulfilling ^6.4.1, so there would be no need for updating any package or the lock file.\nBy the way, I just updated my npm to 5.8.0 (the most recent one).. I think you/it is using an old version of react-styleguidist, which gets resolved to v6.5.3, which requires markdown-to-jsx v6.5.2 or higher.. No problem! I think that your method is probably still the easiest one for pinning it to 6.4.1. I think 6.6.1 mostly doesn't fix the issue. In my opinion downgrading would have the advantage that ^6.4.1 allows the usage of 6.6.1 (I think npm even installs the most recent (same major) version by default) but also allows the user to fix it to 6.4.1.\nBy the way, markdown/#170 now tracks the issue.. ",
    "bochen2014": "you are right. \nreact (or jsx to be more specific) doesn't understand what a <style> tag means, but html does. \nI think the issue is that styleguidist only allow defines JSX inside markdown, which rules out the possibility of defining inline css classNames -- Is it a common requirement? I'm not sure. \nIf we take a look at the markdown engine part of the source code, we may be able to find the answer and 'inject' css support to styleguidist.  make sense?. wonderful!!!. ",
    "gibbitz": "Yeah not working for me either. FWIW, I am currently more-or-less doing this:\n``jsx\n    const globalStyle = 'globalOverrides';\n    const css = document.querySelector(#${globalStyle}) || document.createElement('style');\n    css.id = globalStyle;\n    css.textContent =\n        .search-icon-example {\n        width: 80px;\n        }`;\n    document.head.append(css);\n\n```\nThe possibility of bleed being opened up to the playground is troubling though.... ",
    "yurist38": "Just solved this issue in my project. I set up buble to be transpiled by babel-loader which contains es2015 preset. This is the part of my styleguide.config.js file:\nwebpackConfig: {\n  module: {\n    rules: [\n      {\n        test: /\\.js?$/,\n        exclude: /node_modules\\/(?!buble)/,\n        use: 'babel-loader',\n      },\n    ],\n  },\n},. @iamtyce I didn't measure it but I do not remember any visible changes in a build process.. ",
    "iamtyce": "Just checking in on this issue. Was 6.2.0 meant to resolve this? I'm still having errors in IE11.. @sapegin Just re-read your comment above about acorn5. Understood, thanks!. @yurist38 We followed suit with what you did to regain testing in IE11 capability but found it drastically slowed our webpack builds. Do you have the same problem?. Would love to see individual routes per component rather than the long page showing all! Great work and good discussion here \ud83d\udc4d . I can confirm that @bstream's approach worked perfectly for us. Hoping to remove that when Uglify push a fix.. Experiencing a similar issue where props and methods are not being rendered for components with forwardRef. Can confirm that updating to react-styleguidist@^8.0.0 and webpack@^4.0.0 fixed this for me (was on previous majors for both). ",
    "jbovenschen": "Asked it in an existing PR, https://github.com/adrianheine/acorn5-object-spread/pull/1 They decided to close it because acorn already support it out of the box, so we should be able to fix it with just updating buble, but today I saw there was a PR merged for downgrading the buble version because of some html entity encoding issues, would it be ok, if I try to get it working with a newer version of buble? . > It is now not possible to import custom components within styleguidist without overwriting the internal Markdown component from rsg-components.\nCould you elaborate on that? You can require any component inside an example now. And imports won't work anyway, because Buble doesn't support them.\nAs an example wtih markdown-to-jsx I need to do the following;\njs\n    <Markdown\n        children={md}\n        options={{\n            overrides: {\n                ColorPalette: {\n                    component: ColorPalette,\n                },\n            },\n        }} />\nAnd then I can use the following within my markdown files;\n```md\nColors\n\n```\nIt works but it will be directly available within every markdown template.\nWhen using mdx I could do the following;\n```md\nimport ColorPalette from './components/ColorPalette';\nColors\n\n```\nSo the import will only available within the markdown template where you do need it.\n\nAnd imports won't work anyway, because Buble doesn't support them.\nI don't see what Buble have to do with it?  If I am correct the markdown files are rendered with the following steps;\n1. Styleguide-loader identifies all components and doc files\n2. Those are put on a global variable (window)\n3. Styleguidist renders the whole tree.\n4. Styleguidist calls markdown-to-jsx with the markdown content which is on the global variable.\n5. Markdown-to-jsx converts the code blocks to editor (In which buble runs).\n\nThe same thing is viable with mdx, the only main difference I see at this moment is that the Markdown will be converted on compile time instead of run-time.\n\nIt would be a breaking change\n\nIt would If users did overwrite the Markdown component in styleguidist.\nBut in the advanced documentation it is described as the following (If you would really need it);\n\nNote: these components are not guaranteed to be safe from breaking changes in react-styleguidist updates.\n\nSo I thought it could be viable to make the proposed changes.\n. @sapegin I didn't know that, for me this was the only / main reason to request this change. Thank you for the quick response.\nThis would look as following in the markdown if I understand you correctly.\nmdjs no-editor\nconst ColorPalette = require('./components/ColorPalette').default;\n\n```\nMdx is also only used to render the Markdown it would not have anything to do with the code examples.. ",
    "adrianheine": "I just fixed #798 (I think) in bubl\u00e9, so upgrading to master should work. I'd like to do a release soon, too.. ",
    "testower": "I'm unable to view styleguidist in IE11. Any pointers? The workaround here doesn't work for me either: https://github.com/styleguidist/react-styleguidist/issues/764#issuecomment-357543200\nPossibly related? https://github.com/Rich-Harris/buble/pull/154\nUPDATE:\nStyleguidist itself was not the problem, rather it was my own components which were not transpiled appropriately for IE11. Solution, make sure to use @babel/present-env along with a browserslist that includes IE11:\nwebpack config:\n{\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: 'babel-loader',\n        options: { presets: ['@babel/react', '@babel/preset-env'] }\n      },\npackage.json (example):\n\"browserslist\": [\n    \">0.2%\",\n    \"not dead\",\n    \"not ie <= 10\",\n    \"not op_mini all\"\n  ]. ",
    "vuongc": "@danrot I've got the same error with 43 components to display.. I don't know if this will help you but I am using lerna to manage the components version, in order to fix this issue I used the --hoist option which is basically the same as npm link. . Thanks for the fast answer, I will take a look at documentation.js then.. Here is my files\nstyleguide.config.js\n```\nconst path = require('path');\nmodule.exports = {\ntitle: 'Demo',\n\nassetsDir: 'public/',\n\nrequire: [\n    path.resolve(__dirname, 'public/sass/main.scss')\n],\n\nresolver: require('react-docgen').resolver.findExportedComponentDefinition,\n\ntemplate: path.resolve(__dirname, './public/index.html'),\npropsParser: require('react-docgen-typescript').withCustomConfig('./tsconfig.json').parse,\nwebpackConfig: require('./webpack.config.js'),\n\nshowUsage: true,\nshowCode: true,\n\nignore: ['**/node_modules/**/*.*'],\n\nskipComponentsWithoutExample: true,\n\nsections: [\n    {\n        name: 'Introduction',\n        content: 'readme/Introduction.md'\n    },\n    {\n        name: 'Components',\n        components: 'components/**/*.tsx'\n    }\n]\n\n}\n```\nTreeNode\n```\nimport * as React from 'react'\nmodule TreeNode {\nexport interface TreeNodeDataModel { }\n\nexport interface Props extends React.ClassAttributes<TreeNode> {\n    /** Unique node id. */\n    id: string;\n    /** Node's text display on the tree */\n    text: string;\n    /** Nested nodes. */\n    children?: TreeNode[];\n    /** Node's icon. */\n    icon?: string;\n    /** Data of the node, displayed when selecting a node. */\n    data?: TreeNodeDataModel;\n    state?: {\n        opened?: boolean;\n        disabled?: boolean;\n        selected?: boolean;\n    }\n\n    /**\n     * Hide props from documentation\n     */\n\n    /** @ignore */\n    key: React.ReactText;\n    /** @ignore */\n    ref: React.Ref<TreeNode>;\n}\n\n}\nclass TreeNode extends React.Component {\n    constructor( props: TreeNode.Props ) { super( props ); this.state = {} }\n    render() { return  }\n}\nexport default TreeNode\n```\nwebpack.config.js\n```\nconst path = require('path');\nconst webpack = require('webpack');\nmodule.exports = {\ndevtool: 'eval',\n\nmodule: {\n    rules: [\n        {\n            test: /\\.(ts|tsx)$/,\n            include: [\n                path.resolve(__dirname, './components'),\n                path.resolve(__dirname, './readme')\n            ],\n            loaders: ['ts-loader'],\n            exclude: /node_modules/\n        },\n        {\n            test: /\\.scss$/,\n            use: [\n                { loader: 'style-loader' },\n                { loader: 'css-loader' },\n                { loader: 'sass-loader' }\n            ],\n            include: path.resolve(__dirname, './public/sass/')\n        },\n        {\n            test: /\\.js$/,\n            exclude: /node_modules/\n        },\n        {\n            test: /\\.md$/,\n            use: [\n                { loader: 'html-loader' },\n                { loader: 'markdown-loader' }\n            ]\n        }\n    ]\n},\n\nresolve: {\n    extensions: ['.webpack.js', '.scss', '.css', '.js', '.ts', '.tsx']\n},\n\nnode: {\n    fs: 'empty'\n}\n\n}\n```\nI tried to change the type of the children props from TreeNode class to a string[], but it didn't solve the display as you can see from the screen above.. Seems like it's a Typescript behavior https://github.com/Microsoft/TypeScript/issues/6471.\nI will close this issue as it don't belong here, thanks for taking time checking this issue.. I've got the same error, it only work for the default theme which is base16-light.. ",
    "trickreich": "same problem here..\nit's just not loading... ",
    "jaruesink": "@danrot I felt like that was a fair question, I'm having this problem also or some kind of problem.\n```\n<--- Last few GCs --->\n[32979:0x104002400]    30542 ms: Mark-sweep 1392.6 (1439.5) -> 1390.5 (1431.5) MB, 900.7 / 0.0 ms  (+ 0.1 ms in 128 steps since start of marking, biggest step 0.0 ms, walltime since start of marking 936 ms) (average mu = 0.161, current mu = 0.061) allocat[32979:0x104002400]    32287 ms: Mark-sweep 1394.3 (1431.5) -> 1393.2 (1436.5) MB, 1727.0 / 0.0 ms  (+ 0.0 ms in 61 steps since start of marking, biggest step 0.0 ms, walltime since start of marking 1745 ms) (average mu = 0.074, current mu = 0.010) alloca\n<--- JS stacktrace --->\n==== JS stack trace =========================================\n0: ExitFrame [pc: 0x3771cf1841bd]\n1: StubFrame [pc: 0x3771cf1cdecb]\n\nSecurity context: 0x24f44f41e589 \n    2: replace 0x24f44f410bd1\n    3: formatError(aka formatError) [0x24f426c3ffa1] [/Users/jruesink/Docume...\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\n 1: node::Abort() [/usr/local/Cellar/node/10.4.1/bin/node]\n 2: node::OnFatalError(char const, char const) [/usr/local/Cellar/node/10.4.1/bin/node]\n 3: v8::Utils::ReportOOMFailure(v8::internal::Isolate, char const, bool) [/usr/local/Cellar/node/10.4.1/bin/node]\n 4: v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate, char const, bool) [/usr/local/Cellar/node/10.4.1/bin/node]\n 5: v8::internal::Heap::UpdateSurvivalStatistics(int) [/usr/local/Cellar/node/10.4.1/bin/node]\n 6: v8::internal::Heap::CheckIneffectiveMarkCompact(unsigned long, double) [/usr/local/Cellar/node/10.4.1/bin/node]\n 7: v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [/usr/local/Cellar/node/10.4.1/bin/node]\n 8: v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [/usr/local/Cellar/node/10.4.1/bin/node]\n 9: v8::internal::Heap::HandleGCRequest() [/usr/local/Cellar/node/10.4.1/bin/node]\n10: v8::internal::StackGuard::HandleInterrupts() [/usr/local/Cellar/node/10.4.1/bin/node]\n11: v8::internal::NativeRegExpMacroAssembler::CheckStackGuardState(v8::internal::Isolate, int, bool, unsigned char, v8::internal::Code*, v8::internal::String, unsigned char const, unsigned char const) [/usr/local/Cellar/node/10.4.1/bin/node]\n12: v8::internal::RegExpMacroAssemblerX64::CheckStackGuardState(unsigned char, v8::internal::Code, unsigned char) [/usr/local/Cellar/node/10.4.1/bin/node]\n13: 0x3771cfbf4236\n14: v8::internal::NativeRegExpMacroAssembler::Execute(v8::internal::Code, v8::internal::String, int, unsigned char const, unsigned char const, int, int, v8::internal::Isolate) [/usr/local/Cellar/node/10.4.1/bin/node]\n15: v8::internal::NativeRegExpMacroAssembler::Match(v8::internal::Handle, v8::internal::Handle, int, int, int, v8::internal::Isolate) [/usr/local/Cellar/node/10.4.1/bin/node]\n16: v8::internal::RegExpImpl::IrregexpExecRaw(v8::internal::Handle, v8::internal::Handle, int, int*, int) [/usr/local/Cellar/node/10.4.1/bin/node]\n17: v8::internal::RegExpImpl::IrregexpExec(v8::internal::Handle, v8::internal::Handle, int, v8::internal::Handle) [/usr/local/Cellar/node/10.4.1/bin/node]\n18: v8::internal::Runtime_RegExpExec(int, v8::internal::Object, v8::internal::Isolate) [/usr/local/Cellar/node/10.4.1/bin/node]\n19: 0x3771cf1841bd\n20: 0x3771cf1cdecb\n21: 0x3771cfa9a15a\n22: 0x3771cf9ae82d\n23: 0x3771cf18c223\n24: 0x3771cfaa907b\n25: 0x3771cf193429\nerror Command failed with signal \"SIGABRT\".\n```. ",
    "allybee": "I am having this same issue and I've tried setting isolate: false but it doesn't seem to be working. @swese44 did you find a solution?. ",
    "viljamis": "Would love to see this feature merged to master. Working on two different design systems that use StyleGuidist for docs and both would benefit from this feature. So basically here to show thumbs up \ud83d\udc4d . @sapegin See related discussion and a question for you here: https://github.com/vue-styleguidist/vue-styleguidist/issues/113. I think @rafaesc maybe had ;-). @rafaesc Definitely makes sense to do it first here if you\u2019re anyway bringing most of the features from React Styleguidist to Vue Styleguidist. Makes sense to try to keep these two projects as aligned as possible.\nA few thoughts:\n\nWould it be possible to do this in a way which doesn\u2019t remove the isolated mode?\nI personally find the current pagePerSectionsetting name a little confusing in React Styleguidist, but if we want to stay backwards compatible we probably don\u2019t want to change it.\nSo\u2026 if we keep that as is, could we then in addition to this existing pagePerSection setting have another setting that controls the depth of a section when pagePerSection is enabled? F.ex. sectionDepth which by default has a value of 1 (show only one level), but if changed to for example 2, it would then show the section + it\u2019s direct children on the same page?. @okonet That sounds like a great idea! \ud83d\udc4d  \n\nThe ability to turn of code and usage would be great as well as now I (and a few of my clients too) have been hiding things awkwardly in SCSS case-by-case. I think all in all this would make styleguidist much more flexible for larger documentation needs. . @okonet so that I understand correctly\u2026 would turning isolated : true show everything under that section on separate pages? and giving it value false would do the opposite and show everything on the same page? If yes, sounds perfect.. @rafaesc @okonet I feel like it would be really useful to be able to do this per section (of course there needs to be a global default too). That way you could easily combine these kind of \u201coverview\u201d sections with guidance with sections that have separate views for each component.. @rafaesc  I think @okonet\u2019s suggestion makes a lot of sense \ud83d\udc4d . @rafaesc Nice work! Let me know if I can help in any way here.. Nice work! @sapegin what do you think it\u2019d require to get this feature out?. @sapegin This sounds like a good idea. Even though I\u2019ve been now using sectionDepth option extensively (or I think so at least) on Vue Design System, I still don\u2019t always quite understand what it is supposed to do as using f.ex. the components option always anyway adds another level of \u201cdepth\u201d even when I don\u2019t want it to.. ",
    "jrjacobs24": "@rluiten @sapegin This is perfect. I don't why I didn't think to just do this in the first place. It'd be cool to one day see this functionality built into the core react-styleguidist library styleguideComponents, but this accomplishes exactly what I needed it to so I'm not worried about it. Thanks for the tip!. ",
    "nanot1m": "I\u2019m ready to help (:. #781 . Yes, thanks for improvement of styleguidist!. Current result \n\n. Should complex types (like shapes, or function) be rendered in the type column or in the description column?. Found a problem with react-docgen: it doesn't handle array types marked with [].\nFor example, type foo: string[] would be parsed as unknown type\n. Implemented rendering complex types in tooltip\n\nDo you have any thoughts about how to improve rendering?. I'm going to remove FlowButton component from basic example. I've forgotten about public components methods. Have to update them too. Maybe public methods should be updated in another pull request? If so, i'm done with this task. And will continue work in another brunch. Error: Navigation Timeout Exceeded: 30000ms exceeded\n    at Promise.then (/home/travis/build/styleguidist/react-styleguidist/node_modules/puppeteer/lib/NavigatorWatcher.js:71:21)\nSomething went wrong with puppeteer.\nCan you restart CI task?\n. \u274c codecov/patch \u2014 95.83% of diff hit (target 96.33%)\nCan you explain, what does this mean? And how can i improve code coverage?. Thanks. I've looked at uncovered places. There are two uncovered lines, which are not referenced to my changes.\none is \njs\nexport function getRowKey(row) {\n  return row.name;\n}\nand another is\njs\nfunction renderEnum(prop) {\n  if (!Array.isArray(getType(prop).value)) {\n    return <span>{getType(prop).value}</span>; // not hitting this line\n  }\n...\nShould i write tests for getRowKey?. I've added test, nothing changed (only codecov/project improved). So let's skip this warning \ud83d\udc4d . It's just abstraction, and it can be safely thrown away. Text component does not inherit color from parents. Should we add a prop color=\"inherit\" to Text?. ",
    "SavePointSam": "Is there an expectation that this should render as a union?\n```\nconst THEMES: {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n} = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n};\ntype Props = {\n  /* display theme /\n  theme?: $Values,\n};\n```\nFlow just added support for this type of syntax with 0.68.0. I'm currently getting the following render in my styleguide.\n\n\nOn another note, is there work planned/being done to make the experience of hover details for something like a tuple better? Having the alt text show more information is ok, but I was confused at first as there wasn't something like tooltip.js appearing. It would also be nice to expand sub-types from that message too. For example I have a type that is an array of types and it just outputs [Action] which isn't clear to an end user. Maybe thats good enough though as a consumer of the API will be able to discover what the Action would be?\nThanks for this update! My styleguide is sooo much better documented out of the box. \ud83c\udf89. Sounds good!. Oh dear! I had forgotten... my apologies.. Create React App 2.0 has been released with Webpack 4 support.. ",
    "TxHawks": "Problem is, I'm not really sure what's causing this, so hard to reproduce, but I'll try.\n. Fixed by #797. ",
    "bstream": "Ran in to the same error (I think, although for me it said ReferenceError: n is not defined. For me the error occurs with uglify-es@3.3.8 but not with uglify-es@3.3.7. If you are using using yarn@1.x you can use the resolutions field for this, like so:\n\"resolutions\": {\n  \"uglify-es\": \"3.3.7\"\n}\nAlso; maybe this is related? https://github.com/mishoo/UglifyJS2/issues/2842. ",
    "alanbsmith": "oh, man. I'm so glad other people were seeing this too. I thought I was crazy. Can also confirm it's UglifyJS and @bstream 's workaround resolves it.. @sapegin \nThanks for the quick response! Will update shortly. \ud83d\ude00. @sapegin Updates made! Thanks for your review!. ",
    "nisargrthakkar": "I am using \"react-styleguidist\": \"^7.3.2\" and still facing the issue \n\nHere is my HowItWorks.md\nReact component example:js\n. ",
    "peterlenagh": "i can hack in \"namespaces\" by changing the logic in getInfoFromHash and globalizeComponent but that feels a bit brittle.. @n1313 they're in the same npm package, but we don't export them from one index.js (so you don't import the world to import { Button } from world; - tree shaking wasn't working in webpack last time I checked). Rather we do import Button from world/lib/client1/components/Button;\nI see what you're saying though; if they were they'd need to handle namespacing at the package/index.js level.. @sapegin - if uri structure reflected sections that would solve my issue nicely.\ni.e. a component inside a section called client1 would have the uri #!/client1/component rather than #!/component.\nThere would still be issues with the global components though.... thanks for your commments @n1313.\nFor the time being I'm going to name the actual components differently and sort the naming out with directory names / exporting as default from component-level index.js.\n```jsx\n// consuming app\nimport Button from 'styleguilde/lib/Client1/Components/Button';\n\n```\n```jsx\n// lib/Client1/Button/button.jsx\nimport Button as BaseButton from '../../Base/components/Button';\nconst Client1Button = () => {\n    \n\n\n}\nexport default Client1Button;\n```\njsx\n// lib/Client1/Button/index.jsx\n...\nexport { default } from './button.jsx';\n...\nWithin the styleguide they will then appear as #!/BaseButton, #!/Client1Button, #!/Client2Button etc., and I'm already overriding ReactComponentRenderer so I can just rm the namespaces from the component.names for display purposes there too.\n. ",
    "davidjb": "@sapegin Fixed in PR #814 -- could you take a look?  The file make-webpack-config.js seems to be the only spot where highlightTheme was used over the editorConfig option.  The PR is backwards compatible; it uses editorConfig.theme if present, and falls back otherwise.. @sapegin Thanks for pointing that out; I've removed it from  styleguide-loader.js and also changed the webpack alias to just use editorConfig.theme as per your suggestion.. @sapegin Yep, generalisation would be really good.  I'll take a look into this when I get time but in the meantime, anyone else can feel free to jump in with suggestions \ud83d\ude0e . Thanks for pointing that out, I've updated the PR accordingly to just use editorConfig.theme in that case.. Updated :+1:.  . ",
    "monkeywithacupcake": "You already had the backers and sponsors in the bottom of the README, so they have been added to .github/Contributing and as badges at the top of the README. . ",
    "nitinkh": "Hi @robcaldecott : I think it is not a bug, if we want to get our URL reflected, we need to use markdown's links syntax. So for your case we can use it like : \n```\n/*\n * The only true button.\n * \n * My Description\n * \n /\n```\n. I think this should work fine:\n<button className=\"button\" style={styles} onClick={onClick} disabled={disabled} dangerouslySetInnerHTML={{__html: children}}>\n</button>\n. If it works let me know will send a pull request. ",
    "dzdrazil": "Thanks @sapegin !\nFor anyone else who is looking here, I discovered that the displayName property in objects returned by the config's parse function is used to generate the components. Short of a change or a fix over at react-docgen-typescript, you can do what I did, wrap the default parse function of choice, and perform some string manipulation on the display name there.\nWith that, I was able to get it working, though I believe you're right in that the react-docgen-typescript definitely is not correctly parsing the display name (even when a static display name property is provided on the component).. ",
    "joshribakoff": "FYI the problem was fixed when updating nginx to output content-type:\napplication/javascript; charset=utf-8 instead of content-type:\napplication/javascript.\nFor some reason Chrome was ignoring the meta tag on the page that said utf8.\nOn Sun, Feb 4, 2018 at 11:49 PM, Artem Sapegin notifications@github.com\nwrote:\n\nWhen something isn\u2019t working for you, include a reproducible demo:\n\nFork the example project: https://github.com/styleguidist/example\nModify it to reproduce the issue.\nPush to GitHub and paste the link here.\n\nMost likely you\u2019ll find an issue yourself, while creating a demo.\nIssues without a demo will be closed!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/issues/806#issuecomment-363005710,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AD1cOtT8BsxuaLB0wEXNPgr9nHhkeRZ0ks5tRrKfgaJpZM4R43KH\n.\n. \n",
    "boxfoot": "@sapegin worked perfectly.  I just submitted a PR that adds a cookbook recipe for this to make it easier for others to find the solution.. @sapegin Thanks for the feedback.  Made corrections!. Sure thing!. ",
    "jbachhardie": "A possibility would be to have a way to provide a higher-order component that styleguidist would call with the native styleguidist component. e.g.\njsx\nconst withSourceLink = (DefaultComponent) => (...props) => (\n  <div style={{ position: 'relative' }}>\n    <DefaultComponent {...props}/>\n    <SourceLink path={props.children} />\n  </div>\n);\nand then in config\njs\nstyleguideComponentDecorators: {\n  Pathline: [path.join(__dirname, 'lib/__styleguide__/decorators/withSourceLink')]\n}. There's no way fs is going to be available in the browser context, I don't think. The files are going to have to be required so that they're in the webpack bundle. Without dynamic require I think maybe your best bet is code generation, that is a Node or shell script that does scan the file system and writes a file with all the requires in it.. ",
    "dallonf": "If importing from deep in lib is the preferred method, I could write up a docs PR. I'd feel better knowing that approach is officially supported.. Thanks! Just made those tweaks. Sorry about the messy commits - tried to fix the issue from my Windows environment using WSL and had all sorts of cross-OS shenanigans that I don't have time to troubleshoot right now, so I'll just get back to this tomorrow when I'm at my Mac. ",
    "avevlad": "@sapegin \ndocker build failed, local build success\n```\n FAIL  Failed to compile\n./~/react-styleguidist/lib/rsg-components/Logo/index.js\nModule not found: Can't resolve 'rsg-components/Logo/LogoRenderer' in '/www/qw/node_modules/react-styleguidist/lib/rsg-components/Logo'\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! frontend-desktop@1.0.0 styleguidist-build: yarn styleguidist --config=ui-kit.config.js build\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the frontend-desktop@1.0.0 styleguidist-build script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2018-03-17T21_26_00_692Z-debug.log\n```\nconfig:\n```js\nmodule.exports = {\n  require: ['babel-polyfill', p('styles/index.less')],\n  title: 'titile',\n  styleguideComponents: {\n    LogoRenderer: p('src/styleguide/Logo'),\n  },\n  defaultExample: true,\n  sections,\n  styleguideDir: styleguideDir,\n  template: p('src/index-ui-kit.html'),\n  webpackConfig: {\n    module: cfg.module,\n    plugins: [\n      new ExtractTextPlugin('styles.css'),\n      new webpack.DefinePlugin({\n        APP_ELEMENT: JSON.stringify('#app'),\n        DEV: JSON.stringify(development),\n        DEBUG: JSON.stringify(development),\n        LAST_BUILD_TIME: JSON.stringify(new Date()),\n        API_ENDPOINT: JSON.stringify(API_ENDPOINT),\n        I18N_LOCALE_FILE: JSON.stringify(i18n_locale_file),\n        'process.env.NODE_ENV': JSON.stringify(env),\n      }),\n    ],\n  },\n};\n```\nLogo.js\nhttps://gist.github.com/AveVlad/0cd7685775cb94b711a60b168fc9b96f\nnode:9.4.0\n\"webpack\": \"^2.4.1\",\n\"react-styleguidist\": \"6.2.7\",\n\"babel-core\": \"^6.24.1\",. ",
    "TerrySmithDC": "I've never used Travis before, but it looks like CI is failing because react-native is not availble because it's not listed as a dependency on the root package.json\nAdding it just for a specific example doesn't seem ideal, what do you suggest is the best way to resolve this @sapegin ?. I can move the react component and logic out of App.js, however the configuration for create-react-native-app mounts on ./App.js so that file needs to remain there unless I eject it the whole app. (For the sake of a simple demo I think we should avoid doing that)\nChange is here: https://github.com/styleguidist/react-styleguidist/pull/816/commits/b7920e5ce5e42d2f52a88ecdebe0158865c2421b . ",
    "dtuyenle": "Having the same issue. @viraths  how did you solve this ?. ",
    "viraths": "@dtuyenle I just used the given example in above post.. ",
    "marcdavi-es": "Yeah I thought the response to #633 was a little flat. \nA lot of developers use only named exports for a bunch of reasons. eslint-plugin-import is in the process of adding a rule to prohibit the use of default exports.\nWithout this I need to hack styleguidist to make it usable.. @seivan thanks :). I had a dig around to try a more robust solution. I'm a bit puzzled by what I found.\nGiven this set up...\n````jsx\n// styleguide.config.js\nmodule.exports = {\n  components: 'path/to/component.js',\n};\n// path/to/component.js\nimport React from 'react';\nexport const SomeComponent = () => Hello, I'm SomeComponent;\n// path/to/Readme.md\njs\nconsole.log(SomeComponent);\n````\n...I see in the console { SomeComponent: ...,  __esModule: true}.\nThat suggests that the exports of /component.js are exposed as SomeComponent. That's kind of weird because SomeComponent is the name of one of the named exports, not the exports as a whole.\nIn this case, the following 'works'...\njs\n// path/to/Readme.md\n```js\n<SomeComponent.SomeComponent />\n```\n...which seems odd. Perhaps I'm missing something obvious here.\nIf a contributor is looking at this, I'm super happy to work on a potential fix. I could do with some help pointing to where the modules are exposed though. So far I've had a dig around Preview, evalInContext, examples-loader and associated files but I haven't had any joy.\n\nUPDATE\nI've just realised that it's probably styleguide-loader which deals with exposing the components. example-loader just sets up the examples, which consume components exposed by styleguide-loader. \nLooking into styleguide-loader now.\n\nUPDATE\nOpened PR #825  adding limited support for named exports \ud83e\udd1e . One of the tests fails on one of the builds but passes on the others. It seems that the afterEach block in globalizeComponent.spec.js isn't doing its job in this case.\nI tried refactoring the test to avoid reliance on the enumerable properties of global but still no joy. Would appreciate any input on this.. Thanks for the feedback :)\nI'm out this weekend but I'll get to this on Monday. . @sapegin I think that's everything. Let me know if you're happy with those changes :). @sapegin Thanks - yeah that table was ugly. Think it's much cleaner now.. @sapegin Sweet - comments spaced out better now :). @rafaesc and everybody - awesome work.\nIf I can help with the separatePage implementation let me know - our styleguide is starting to creak and I was about to write a routing patch :). Resorting to HTML table format here to play nicely with the code blocks. It makes this file a little ugly but the output is good.. Ah yeah nice. Done.. Had to leave this little 'comment' in here to stop Prettier complaining about the blank line.... So you mean changing this\n// If the module defines a default export, return that\n    // e.g.\n    // ```\n    // export default function Component() { ... }\n    // ```\n    if (module.default) { ...\nto this\n// If the module defines a default export, return that\n    // e.g.\n        //\n    // ```\n    // export default function Component() { ... }\n    // ```\n        //\n    if (module.default) { ...\nOr something else? :). ",
    "seivan": "@marcdavi-es Well if you're in a hurry, you can get around it with \nts\nconst Button = require('./dist/Components/Button').Button;\nBut it's very error prone. \n. @marcdavi-es I just tested your idea, and as you said, it worked.\n. @kopax There's an attached PR https://github.com/styleguidist/react-styleguidist/pull/825. @sapegin Depends, I guess.\nWhat part in the code would you take a components prop and document it? \nWe could see if the attributes have been stripped out by then, or if they're still included. \n. @bluetidepro You mean, keep the sidebar around when linking to  e.g http://localhost:6060/#!/Button/1 ? \n. Oh ok, you want your markdown tags have anchor links generated for them? \nBecause there are links right now for each example of a component. \nIt just hides the side bar. Not sure if you knew or not. \n. Understood! \ud83d\udc4d . I don't think Webpack 1 will be supported. I think create-react-app runs on Webpack 3\nWhere do you find create-react-app 1.52? https://github.com/facebook/create-react-app/releases\n. ",
    "koertvankleef": "Nevermind, I succesfully rubber ducked this until I noticed:\njs noeditor \ud83e\udd86. ",
    "aldeed": "Agree, that sums up my two questions. My preference for 2 would be that any example in the .md for a specific component would be able to assume it should import the component that's in the same folder. But in any other .md file example, it would need to be required from a specific version as you say.\nI could PR this if there's any guidance on where/how it would be done.. ",
    "cmswalker": "Absolutely!\nOn Feb 21, 2018 9:46 AM, \"Artem Sapegin\" notifications@github.com wrote:\n\n@sapegin requested changes on this pull request.\nThanks!\nIt\u2019s a breaking change and I\u2019m not sure I want to make a major release\njust with this change. So it would make sense to wait for #744\nhttps://github.com/styleguidist/react-styleguidist/issues/744.\nCould you please merge master and update docs too?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/pull/828#pullrequestreview-98293734,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AIEzInkfTaes30cLgthX6DYft5KBBuTjks5tXFZZgaJpZM4SH1wb\n.\n. @sapegin I have updated the docs and merged master. \n",
    "vigsank": "You mean you want to draw a table kind of structure with some rows and columns in \"layout.PaperWithContent.md\", list down details of your PropTypes?\n. ",
    "Baudin999": "Thank you for commenting. I'll try to explain.\nIf you just have one component per module (file) you get the default behaviour of styleguidist, which is great. But I want to have multiple components in my files and I want my PropTypes to be defined in another module (I call it my propDefinitions.js file). (extra info: I also have my flow type definitions in another file this seems to keep the code clean and makes it easier to refactor the code.) I only use Pure Functions. \nUsing these three concepts, Pure Functions, multiple components in one module and clean definition files makes my project really easy to maintain. The only problem I have is that I can't really use styleguidist as it was intended. I'll gladly suffer manual configuration and manual writing of my styleguide if it means that I can maintain my way of working but I can't really get everything to render properly. \nI manually make sections and for each component I add a .md file in my documentation folder. Inside this .md file I am trying to document my component:\n1) Examples: work great, really easy to do\n 2) Documentation: works great, markdown is super\n 3) PropTypes: I can't find a way to render these manually. \nIf you need more information I can try and create a little test project.. @pasupuletics Thank you for your reply. I think I understand. I'll dive into react-docgen and will see if I can get things to work. If I manage to solve the problem I'll report back. \nI'll close this issue and I'll reopen it if/when I have a solution.. Cool, thank you, will try and submit it tonight.. ",
    "Spenc84": "How's this coming along? Our team has opted to have each section and component displayed on it's own page, but some of those pages can get quite extensive and the inability to create anchors to the various parts of an individual page has started to become problematic.  I've spent half a day now trying to find a way to create and link to anchors on an individual page but have not as of yet found a way to do it.\nIs support for page anchors still something that's being considered?. @okonet If I am understanding @yakunins correctly, href: false would mean that the section title 'Visual' would still appear in the sidebar with various components listed under it, but clicking on the word 'Visual' wouldn't do anything since 'Visual' itself doesn't have any content of it's own other than the Components listed under it which in this case seem to each have pages of their own.\nI personally like Okonet's suggestion to clearly distinguish between pages and sections, where pages each have their own individual page and url, and sections simply become anchored section headers that exist on a page.\nI also like Yakuni's use of the href property to customize what actually happens when you click on an item in the sidebar.\nSomething like this:\n{\n      name: 'Components', // is required\n      href: '/Components',\n      content: './readme.md',\n      sections: [ ... ],\n      pages: [ ... ],\n      ...\n}\nThey way I see it, you would use this same object template for both pages and sections and it would be interpreted in the following manner: \nname | string : required |\nRepresents what is displayed in the sidebar and on the page or section header.\nhref | false, string, undefined |\nIf false, clicking on this item in the sidebar should do nothing and it should look visually different from other clickable links in the sidebar.\nIf undefined the href will be <parentURL>/${name} for pages or <parentURL>#${name} for sections.\nIf a string is specified then that string would be appended to it's parent's URL instead of the name attribute unless it begins with http:// or https:// in which case it would be treated as an external link.\ncontent | string, undefined |\nA string would represent the path to the .md file that should be used to populate the content of this page or section.\nIf content, sections, and href are all undefined then the sidebar link for this item should not be clickable, the same as if href were set to false.\nsections | string, glob, object, array, undefined |\nSections should be displayed on a page below the specified content for that page (if any). If no content is defined then the content for the page should simply be a list of the specified sections. Each section should have a section header that matches the name of the Component or the name attribute of the section object. Each section header should have a page anchor that is determined by the href attribute (or the default case if the href attribute is undefined). Optionally (but ideally in my opinion) the contents of each section should be collapsible when the section header is clicked on. Perhaps another attribute could be included on a section object that indicates whether a particular section should start off in a collapsed state or not. |\nWhen sections is a string it would represent the path to a single component which would be displayed as a section on it's parent's page.\nWhen sections is a glob it would represent a glob pattern that identifies a list of components that should be displayed as sections on the parent's page.\nWhen sections is an object it should take the same shape as the proposed format above and would be displayed as a single section on it's parent's page.\nAlternatively sections could be an array of strings, globs, or objects that are compiled into a list of sections to be displayed on it's parent's page.\npages | string, glob, object, array, undefined |\nThe pages attribute would contain similar data to sections. Items listed under the pages attribute would still show up in the sidebar as nested items of the parent, but they would not be displayed on the parent's page but would be given a unique URL and page of their own instead.. @wkillerud I just upgraded to React Styleguidist 9.0.4 and tested out an import statement with a trailing comma and it produced the same error listed above. It's not a big deal since I never use trailing commas anyway, but I just thought it was a little odd since the issue was marked as resolved.. @wkillerud Actually, please disregard. Yarn was telling me I was on version 9.0.4 but when I opened up the files in Node_Modules they were listed as 9.0.3. I remove the package and reinstalled it and it's working fine now. Thanks for fixing the issue.. I am also getting the same error.\nI recently upgraded Styleguidist from v7.3.11 to v9.0.3.\nThis in turn required me to upgrade Webpack (from v2 to v4.29.6).\nUpgrading Webpack required me to upgrade many of my other dependencies as well, so I went ahead and upgraded everything to their latest versions, though this issue seems to only pertain to Styleguidist, Acorn, and potentially Webpack.\nI removed my node_modules and did a clean install but that didn't seem to help.\n. It looks like the issue has something to do with the fact that Acorn is using the new .mjs file extension.\nI updated my webpack config file to include .mjs before .js in resolve.extensions, and I added mjs to the list of extensions that my babel-loader tests and that seems to have resolved the issue.. ",
    "dylan-wu": "I just did:\n$ npm i -g create-react-app\n/usr/local/bin/create-react-app -> /usr/local/lib/node_modules/create-react-app/index.js\n+ create-react-app@1.5.2\nupdated 1 package in 3.277s\nI think it's coming from here: https://www.npmjs.com/package/create-react-app\n\n. Remove and reinstall result in the same 1.5.2 version for me:\n$ npm uninstall -g create-react-app\nremoved 111 packages in 0.682s\n$ create-react-app\n-bash: /usr/local/bin/create-react-app: No such file or directory\n$ npm i -g create-react-app\n/usr/local/bin/create-react-app -> /usr/local/lib/node_modules/create-react-app/index.js\n+ create-react-app@1.5.2\nadded 111 packages in 3.597s\n$ create-react-app --version\n1.5.2. Yes it's working! Thank you.\n. ",
    "bitionaire": "\nWhat do you think about making the option a string instead of a boolean with values always, never, static-only, with the latter as a default value? static-only will show one component in dev mode and all in the static build, I believe that would be most convenient for the majority of users.\n\nSure, maybe there are even more modes we didn't think of yet. Good point! \ud83d\udc4d \nI also noticed that the page doesn't scroll to top after #!/ route changes. I'll fix that, too. . I just added a few commits, and pagePerSection may be defined as a function. static-only may look like pagePerSection: () => (process.env.NODE_ENV !== 'production').\nI added window.scrollTo(0,0) in componentDidUpdate of StyleGuide.js. The location of this code seems really hacky, and it does not work for all use-cases (e.g. scrolling down and navigating to the same section won't trigger the execution), but I'm not sure where to put it. I'll think about a better solution. If you have any ideas, I'm open to any suggestions :). Allright, please have look \ud83d\udc4d . I think we're getting close \ud83c\udf7b . Hey @sapegin,\nI've added one change, can you have a look at that? \nIt's hard to define a correct behaviour for the IsolateButton if pagePerSection=true. Therefore I excluded the button from any toolbars for the slots object, based on the styleguide configuration. \n. Good catch! I missed that in my refactoring. I thought about that. It's way more efficient to watch on location changes, yet it would mean to replace the functional component something like an \"App\" component or to merge the logic with the StyleGuide.js. What do you think is the better way?. You're right. Sure. Just reverted the changes. So there's no need for an enum like always, never or static-only, right? . I didn't want to introduce any kind of global variable; either the hash of the last location or a boolean that will indicate if an event listener for hashchange was already registered. \nI think it'll be easier to handle the component (or event handler) lifecycle in the <App />. But it's your project so you decide. Should I revert the changes and add an event listener for the first time renderStyleguide will be called?. You're right! I replaced it with indexOf === 0 . ",
    "farrahD": "@sapegin can I try this out, I'm new at this. Okay, thats fine. I still want to try just to get the hang of it. Thanks!. I did a Commit but not sure if I was supposed to do a Pull Request?\nI didn't see a 3rd them \n\"Remove 3rd them in the getting started guide.\". '3. Add npm scripts for convenience' has the user add scripts to their package.json. If you're replacing npm with npx does that mean I should be removing the lines containing #3 from the getting started file?. ",
    "joetidee": "Could also do this to avoid adding in unnecessary HTML tags:\n```\nconst Fragment = React.Fragment || function(props) {return props.children};\nreturn {example_here}\n```. ",
    "mhelvens": "Any chance this could be made to work when the example code starts with some initialization?\n```js\ninitialState = { counter: 0 };\n setState({ counter: state.counter + 1 })}>Click Me\n{_.repeat(' \u2713', state.counter)}\n```\nThis still gives me the Adjacent JSX elements must be wrapped in an enclosing tag error.. ",
    "syn228": "Is this issue still open? I would like to try contributing for the first time!. ",
    "KnisterPeter": "I think it would be way better and easier to move to webpack 4.\nIts fast as well, has zero config too and will need less transition.. @sapegin Thanks for your hints. Updated accordingly.. ",
    "longility": "Thanks for responding. I decided to do the following and still got the same warning.\n\nrebase to latest master on react-styleguidist.\ngit clean -xdf\ncd examples/cra/\nnpm install\nnpm run styleguide\n\nBesides making sure I have a clean environment and latest react-styleguidist, did you do anything different? Maybe you can guide me on debugging. I'm not sure where to go from here.\n. Thank you for your help! I didn't think about upgrading rsg npm package in the example. I'm now able to get it working. . Do you have an example repo that reproduces this issue, or can give more information that would help us understand what might be going on?\n\nOn Apr 10, 2018, at 7:12 AM, glensomerville notifications@github.com wrote:\nI'm running into this same issue with Styled Components and TypeScript. Any suggestions on what might be going wrong here?\nError:\nWarning: src/components/Buttons/MediumButton/MediumButton.tsx matches a pattern defined in \u201ccomponents\u201d or \u201csections\u201d options in your style guide config but doesn\u2019t export a component.\nhttps://github.com/glensomerville/react-styled-components-styleguide-ts\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Ah, I just realized what you meant. I've been using the examples in the main repo and not the one on issue template. Let me think about it some more. In the meantime, let me close this out.. \n",
    "glensomerville": "I'm running into this same issue with Styled Components and TypeScript. Any suggestions on what might be going wrong here?\nError:\nWarning: src/components/Buttons/MediumButton/MediumButton.tsx matches a pattern defined in \u201ccomponents\u201d or \u201csections\u201d options in your style guide config but doesn\u2019t export a component.\nhttps://github.com/glensomerville/react-styled-components-styleguide-ts. Yes, the example repo can be found here: https://github.com/glensomerville/react-styled-components-styleguide-ts\nThanks for looking into this.. Oh, and by the way, if I change a direct styled-component export to a SFC, then it is picked up correctly.\ne.g. instead of exporting a styled element directly, as in https://github.com/glensomerville/react-styled-components-styleguide-ts/blob/master/src/components/Buttons/MediumButton/MediumButton.tsx, it will work if I change it to:\n```\nimport * as React from 'react';\nimport { styled } from 'themes';\nconst StyledMediumButton = styled.buttonwidth: 320px;\n  height: 40px;\n  border-radius: 4px;\n  border: solid 1px ${props => props.theme.colors.powderBlue};\n  text-align: center;\n  font-family: ${props => props.theme.fonts.primary};\n  font-size: 13px;\n  font-weight: 900;\n  color: ${props => props.theme.colors.darkishBlue};\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.colors.whiteTwo};\n  &:hover {\n    color: ${props => props.theme.colors.cerulean};\n    border-color: ${props => props.theme.colors.cerulean};\n  };\nconst MediumButton: React.SFC<{}> = ({ children }) => {\n  return (\n    \n      {children}\n    \n  );\n};\nexport default MediumButton;\n```. ",
    "kellyisworking": "Hi @glensomerville were you able to find a fix? I think I'm having the same issue.. ",
    "spencersmb": "Hey I found an interesting solve for this issue. Using the example from styleguidist's site here:\nhttps://react-styleguidist.js.org/docs/thirdparties.html#styled-components\nInstead I wrote it like this:\nimport styled from 'styled-components'\n/** @component */\nexport const SalmonButton = styled.button`\n  background-color: salmon;\n  border: 1px solid indianred;\n  color: snow;\n  padding: inherit;\n`\nand then the Readme.md file looks like this:\n(don't forget to add ```js)\nSalmonButton example:\n<SalmonButton pizza=\"\ud83c\udf55\" >\nbutton\n</SalmonButton>\n. ",
    "peroperje": "Sorry, it was my mistake.\nI added custom template but I didn't add HtmlWebpackPlugin.\n. does it work? If yes, could you put an example of integration into react-styleguidist?\nI have tried set up react-styleguidist with react-docgen-external-proptypes-handler  to get something like this :\ncommonPropTypes.js\n```js\nimport PropTypes from 'prop-types'\nexport default {\n  top: PropTypes.string\n}\nMyComponent.jsjs\nimport commonPropTypes from './commonPropTypes'\nconst MyComponent = () => {}\nMyComponent.propTypes = {\n   ...commonPropTypes\n}\nexport default MyComponent\nbut without success.. Thanks, @stepancar. \nI have tried but, unfortunately, it doesn't work for me.\nI have instaled [library-utils](https://www.npmjs.com/package/library-utils) and when I put :js\n    propsParser(filePath) {\n        return reactDoc(filePath);\n    }\n```\nin my styleguide.config.js all propTypes for all components disappears from the documentation.\nI am not sure what I do wrong.. @stepancar Thanks for offered help, you are very polite, but I am not allowed to share our project code.\nI have found that your react-doc library works as you described when a Component defined as a class.\nBut it doesn't work  when  a function component defined as a function, like this:\n```js\nfunction MyFunctionComponent(props) {\n  return I am function component;\n}\nMyFunctionComponent.propTypes = {\n  /*\n   * This is someProp\n   /\n  someProp: PropTypes.string\n}\n```\nor like styled component\n``js\nconst Absolute = styled('div')\n`\nAbsolute.propTypes = {\n    top: PropTypes.string\n}\n```\nit gives Warning: Cannot parse bar/foo/Foo.js: RangeError: Maximum call stack size exceeded\n. ",
    "yang-jandro": "@sapegin I see now. Must have miss read Buble for Babel. Thanks.. ",
    "hsiaoyu-chou": "Hi, I already sent a PR. \nWhen generating items for sidebar in TableOfContents.js, sections are put before components.\nOf course both order will do. I just think the order suppose to be the same in sidebar and the content. ;-)\n858 . I have fixed the tests. ;-).",
    "boazhoch": "@sapegin Well it's a breaking change, but currently webpack 4 and react-styleguidist are incompatible, i would consider having a /next branch - anyway its for your consideration. . ",
    "kontrollanten": "Any comments?. No. I don't remember how this file is used. Will it be ran by the clients using react styleguidist? If it will, then I have to find a way to check for current webpack version.. ",
    "AndyBan": "Confirming this works, please merge \ud83d\udc4d . ",
    "ahuth": "Ah, just realized this may be harder than I realized.\ngetInfoFromHash only returns the target of something like #!/Button and not /#button.. Thanks. Closing for now, as I'm not sure we'll actually get to this now. If that changes, I'll let you know.. @stephtr , looks like you're missing changes to the package-lock.json file. If you're on the latest version of npm that should happen automatically. Can you verify which version of npm you used?. Oh, just noticed #925, which downgrades the required version of markdown-to-jsx. I believe downgrading would fix my issue as well.\n@stephtr, is downgrading still better for you than upgrading to the latest patch version?. Ah, I think you're right. I'm more familiar with how yarn.lock files work, but just tested this and downgrading doesn't update the package-lock.. The issue is with the paths to the Javascript and CSS for static builds, and a quirk of Rails (which we're using to serve up the static build in production).\nBasically because of how Rails serves up static assets, we need the <link> and <script> tags to have absolute paths from a specific directory.\nWe figured that allowing the publicPath to be set (and passed through to webpack) could be useful for other folks.\nI'd understand, though, if this is an edge case you don't want to support. And either way, thank you for making this project that we've gotten a tremendous amount of value out of!\n. Yes, you're right. Thanks! I missed that one in the docs.. These changes were from prettier running.. ",
    "nicoffee": "Okay, will do.. @sapegin, i need some help testing this case.\nShould i export PreviewComponent from Preview.js in order to test his setInitialState() method directly, or should i somehow test it through Preview component, and if so, how exactly?\nFor now, i did something like this:\njs\nit('should synchronously set initialState before first render', () => {\n    const actual = mount(<Preview code={code} evalInContext={evalInContext} />, options);\n    const testState = {\n        error: 'error',\n        count: '42',\n    };\n    actual.setState(testState);\n    expect(actual.state()).toEqual(testState);\n});\nBut i am pretty sure it's wrong, because it actually renders element before state is changing.. Thank you!. ",
    "robbie-hinman": "This looks like a Jest issue according to: facebook/create-react-app#871. ",
    "PilotConway": "I ran into the same problem, had to install the html-webpack-plugin myself from here npm i --save-sev webpack-contrib/html-webpack-plugin which got me past the error. \nFound this PR though too. \nhttps://github.com/styleguidist/react-styleguidist/pull/855. ",
    "IgorBondar": "@giacomocerquone @PilotConway \nreact-styleguidist uses it's own \"html-webpack-plugin\": \"^2.30.1\"\nWebpack 4 is compatible with \"html-webpack-plugin\": \"^3.1.0\"\nrm -rf node_modules/react-styleguidist/node_modules/html-webpack-plugin/ temporary fixes the issue, until you run npm install\nAs an option you may create postinstall script:\n\"postinstall\": \"rm -rf node_modules/react-styleguidist/node_modules/html-webpack-plugin/\"\nNote: you should have html-webpack-plugin in your package.json. ",
    "vladmelnikov": "have same issue  any news when its gonna\n be fixed ?\n. ",
    "basicdays": "@IgorBondar's work around worked on my machine. Thanks for the pointer.. ",
    "catamphetamine": "So, the solution is:\njs\n    dangerouslyUpdateWebpackConfig(webpackConfig, env) {\n        webpackConfig.output.filename = 'build/bundle.js'\n        webpackConfig.output.chunkFilename = 'build/[name].js'\n        return webpackConfig\n    }\n. ",
    "huchenme": "Unfortunately this happen to me as well. ",
    "ptbrowne": "Hi,\nI had the same need and eventually came up with a solution that is a bit hacky but works fairly well.\n\nhttps://github.com/cozy/cozy-ui/blob/master/react/examples.spec.jsx\nhttps://github.com/cozy/cozy-ui/blob/master/react/testFromStyleguidist.js\n\nIt enables me to write\ntestComponent('FolderName')\nand the html result of the code sections in FolderName/Readme.md are snapshotted.\nIt is a bit hacky since I do not use the examples-loader from react-styleguidist, this means I have to do the automated requires \"manually\". Anyway, it works well for my needs. If anyone has a suggestion on how to improve it, I'm open :) . ",
    "gergely-nagy": "I'd like to jump in on this! :rocket:. CRA uses detect-port. Maybe it's a better (or more secure) solution.\nI can implement this feature if you don't have time for it.. ",
    "Jlevyd15": "@sapegin noticed a few color contrast issues with the example Styleguide docs. I've created a PR #1126 to address those. I figured those would land within the scope of this issue but if you think it needs a separate issue let me know.. ",
    "jsphstls": "@sapegin I do not use react-docgen directly. How can I properly describe the issue in the context of react-docgen so it does not continue to be a defect of react-styleguidist?. ",
    "esusekov": "Have the same issue. Looks like changes here https://github.com/styleguidist/react-styleguidist/blob/ed16543b5aec63097c972ae0df33e0a6eef17534/src/rsg-components/Preview/Preview.js#L66 break any jsx inside markdown. For example:\n```jsx\nfunction Wrapper ({ children }) {\n    return (\n        \n            {children}\n        \n    )\n}\n;\n\n\n\n\n\n```. ",
    "a-x-": "@sapegin, As I see, you're try grab an initial functions up to first JSX tag.\nBut, function can have internal JSX.\n. AFAIK, we can workaround it like this:\n```jsx\n // no initial state\nfunction Wrapper ({ children }) {\n    return (\n        \n            {children}\n        \n    )\n}\n\n\n\n\n\n\n```. ie11 is dead ;) why not edge?. ",
    "Alxandr": "Regarding linking to sections on a page, it should probably actually be something like #/Components#Button. . ",
    "dinukadesilva": "Regarding the list displayed, how about having expand and collapse defined in the UI. It really helps to quickly navigate through when the list increases.. @sapegin \nAccording to jdDoc specifications, it's possible to have custome object tyles defined as below.\n```\n/*\n * The complete Triforce, or one or more components of the Triforce.\n * @typedef {Object} WishGranter~Triforce\n * @property {boolean} hasCourage - Indicates whether the Courage component is present.\n * @property {boolean} hasPower - Indicates whether the Power component is present.\n * @property {boolean} hasWisdom - Indicates whether the Wisdom component is present.\n /\n/*\n * A class for granting wishes, powered by the Triforce.\n * @class\n * @param {...WishGranter~Triforce} triforce - One to three {@link WishGranter~Triforce} objects\n * containing all three components of the Triforce.\n /\nfunction WishGranter(triforce) {}\n```\nhttp://usejsdoc.org/tags-typedef.html\nBut, when this is compiled, it shows nothing in react-styleguidist. No any errors. But, the the custom object type is not visualized in any way. I assume this hasn't been implemented in react-styleguidist.\n. @sapegin \nPlease find a demo below\nhttps://dinukadesilva.github.io/react-styleguidist/examples/sections/styleguide//index.html\nAnd here is the updated code\nhttps://github.com/dinukadesilva/react-styleguidist. Try running this\nhttps://github.com/dinukadesilva/react-styleguidist/tree/gh-1083/examples/sections. @sapegin That's cool\nBut, then it displays these to the live example code as well. Is there a way to avoid that too.\nActually my requirement is, I have a set of component consuming a service that has different environment (staging, development, production etc.). So, that some of the parameter values are veried based on the environment. But, I want these to be displayed as plain component parameters as below.\nStaging\n```jsx\n\n```\nProduction\njsx\n<MyComponent\n   name={\"ABCD\"}\n   env={\"prod\"}\n   userId=\"prod-000002\"\n/>\nAs illustrated above, the things like userIds and all being different to the environments. I have them stored in a config. But, without a require I need to display these code in the demo as above.\n. May be if there's a way to define some variables through styleguide config and refer them here.. @sapegin Thanks and yes this is also an alternative. I raised another issue with more context on what I'm referring. Closing this.\nhttps://github.com/styleguidist/react-styleguidist/issues/1229. @sapegin \nYes it does.\nHow about if some parameters are passed at the run time. May be in a query string.. Having the same issue. Anybody who found a solution for this?. ",
    "notgiorgi": "\n@n1313 That's not the right question: they will have to update their config. Benefits are for new users and maintainers.\n\nSo is there a way to use custom templates like ejs for index.html?\nI need some assets from webpack to be rendered into index.html\n@kopax did you downgrade or did you find another solution?. ",
    "leahzxxz": "I can try to help if no one is working on it?. @sapegin Any design/sketch files I should be referring to? . I see - just want to clarify: adding styleguide.config.js is enough? Do I need to add any pages or anything else? (sorry still a new dev). Thanks for explaining - I think I understand better now (was wondering why I added the file but it was still only loading the buttons - now I know it's pointing to the examples folder \ud83d\ude05 ). \nBefore I put up the PR, do I need to change anything in package.json? \n(Like adding \"start:styleguide\": \"node bin/styleguidist.js server styleguide.config.js\"). Thanks! A few follow up questions:\n- Is there a deadline for when this should be done? Getting a bunch of cross-origin and other errors (none of the examples or code snippets load at the moment) and I think it will take me a while to figure out\n- Are there code examples for the components? I'm not familiar with the codebase enough, would appreciate some help\n- Do all components in rsg-components need to go on the style guide?\nP.S. I'm happy to continue working on this, but if you feel like you might want someone more experienced to get it done faster/with less help, I'm happy to submit what I have so far and let someone take over \ud83d\udc83 . Thanks @sapegin ! PR is #926 \nI just added the config file and start script, getting a bunch of errors in the console. Can you point me in the direction of what these errors are? Also in general, how do the components render in the style guide? Since they are all inheriting props, I was wondering where the props are coming from. Thanks!. @sapegin thanks! there was also a React error for getting the same key for an li element so i added Math.random() to the key, let me know if you prefer another way to do it :)  Thanks for all the instructions!\nRegarding the package-lock warning, I tried removing and npm install again but there's nothing new to commit (I guess it's because I just added a start script and it didn't affect any versioning in package-lock). any idea on what to do here? thanks!. @sapegin that's really helpful to know - always good to learn best practices in React. Just pushed the change, let me know if you need anything else!. @sapegin let me know if there's anything else I can do to get this merged - thanks!. ",
    "rubenmoya": "About the package-lock.json it's not updated because system-import-transformer requires this package, so it was already there.. Should I add the plugin to env.test.plugins?. I just saw that we were doing this already back in 2017: https://github.com/styleguidist/react-styleguidist/pull/543/commits/0b52d9b17bef09ac0be10d5b0c9fd4ef17fa5b5e \ud83d\ude02 . I've just realised there is already a PR open for this, so feel free to close this!. Unless I'm missing something, it's already updated here right?. ",
    "joakimkemeny": "Thank you for a quick answer but it doesn't work.\nIf I follow the instructions in the documentation I see that the React structure looks like this.\njsx\n<Markdown>\n  ...\n  <ParaRenderer>\n    ...\n    <CodeRenderer>\n      <code>...\nSo the configuration should probably be.\njs\nstyles: {\n  CodeRenderer: {\n    code: {\n      backgroundColor: \"red\"\n    }\n  }\n}\n...but that doesn't work either.. Sorry, I see I wrote code blocks, I really meant inline blocks like this. Thats why I had the structure I described above with a CodeRenderer and not a PreRenderer (and the code block is lower down on the page so didn't see it, sorry again).\nSo obviously some styling works but not all. If you downgrade to 6.2.3 you'll see that code-tags (like any, js, jsx, javascript and noeditor) are red but in 6.2.4 they are not.. Great, thank you!\nBtw the documentation should probably be updated to reflect this change https://react-styleguidist.js.org/docs/cookbook.html#how-to-change-styles-of-a-style-guide. ",
    "shelldandy": "I still see this on the latest version \ud83d\ude22 . But not all tools are like that \ud83e\udd14 . ",
    "tmf": "Hi everyone, \nI just ran into the same issue...\nhttps://github.com/styleguidist/react-styleguidist/issues/910#issuecomment-377588489 did have 2 deprecation warnings: at react-styleguidist\\scripts\\utils\\StyleguidistOptionsPlugin.js:15:12 and html-webpack-plugin\\lib\\compiler.js:48:17.\nI get an additional warning with:\n(node:74671) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead\n    at new Server (/Users/tmf/projects/styleguide/node_modules/webpack-dev-server/lib/Server.js:68:12)\n    at createServer (/Users/tmf/projects/styleguide/node_modules/react-styleguidist/scripts/create-server.js:28:20)\n    at server (/Users/tmf/projects/styleguide/node_modules/react-styleguidist/scripts/server.js:5:21)\nso, according to https://webpack.js.org/api/compilation-hooks/\nhttps://github.com/styleguidist/react-styleguidist/blob/d4be4f5196cd60f68aea09aa1b8017b6aedcf395/scripts/utils/StyleguidistOptionsPlugin.js#L14 should be refactored into something similar to https://github.com/jantimon/html-webpack-plugin/commit/2288f20ee3185c2ace0c8e97a1c32e2a7e11f0e0\n(\ud83e\udd2f)\n. ",
    "aabenoja": "@sapegin Is there anything else I need to add to this PR?. It's like a game of wack-a-mole, since I last fixed this in #912. I completely forgot about that aspect of lodash. Honestly I just grabbed the first thing that was readily available to me. If there is an alternative I'm more than happy to try it.. I don't think map() is appropriate here when we don't need to transform the collection.. I like this approach much better since we only iterate over the whole collection once instead of twice. If we can gracefully break out of this forEach once a match has been found that would be even better.. ",
    "alphakennyn": "I'm getting the same error on version 8.0.0 and webpack 4\nconfigs are the same as well. ",
    "jklemm": "Is this PR related to this warnings?\nwarning \"react-styleguidist > react-docgen-displayname-handler@2.1.0\" has incorrect peer dependency \"recast@0.12.6 || 0.13.0\".\nwarning \"react-styleguidist > webpack-dev-server@2.11.2\" has incorrect peer dependency \"webpack@^2.2.0 || ^3.0.0\".\nwarning \"react-styleguidist > webpack-dev-server > webpack-dev-middleware@1.12.2\" has incorrect peer dependency \"webpack@^1.0.0 || ^2.0.0 || ^3.0.0\".\nI'm using webpack==4.17.2, webpack-dev-server==3.1.9.. ",
    "AndreyGladkov": "Remove webpack-dev-server warning https://github.com/styleguidist/react-styleguidist/pull/1180. if the user does not use webpack. he will see install:\nwarning \"react-styleguidist > uglifyjs-webpack-plugin@1.2.7\" has unmet peer dependency \"webpack@^2.0.0 || ^3.0.0 || ^4.0.0\".\nwarning \"react-styleguidist > webpack-dev-server@2.11.3\" has unmet peer dependency \"webpack@^2.2.0 || ^3.0.0\".\nwarning \"react-styleguidist > webpack-dev-server > webpack-dev-middleware@1.12.2\" has unmet peer dependency \"webpack@^1.0.0 || ^2.0.0 || ^3.0.0\".\nif build:\n```\nWebpack is required for Styleguidist, please add it to your project:\nnpm install --save-dev webpack\n\nSee how to configure it for your style guide:\nhttps://react-styleguidist.js.org/docs/webpack.html\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n```\nI thought it was true to talk about this dependency when installing.\nOk I will remove from peer.. ",
    "everdimension": "By the way, shouldn't webpack be listed in either peerDependencies or dependencies?. Thing is, you rely on webpack either way. But you rely on it implicitly.\nI updated my project to webpack v4 and now I see warnings because webpack-dev-middleware and webpack-dev-server, which you have as dependencies, need webpack <=3.\nIf you had webpack v3 as an explicit dependency, npm would just install it alongside my webpack v4.\nBut because you do not specify webpack in dependencies, I'm stuck with the warning (styleguidist still works, though).. Sure. @sapegin I actually think that this is a more appropriate fix: https://github.com/nerdlabs/react-docgen-displayname-handler/pull/6\nBut since I don't how long it will take them to accept this PR and whether they will do it at all, I created a fix here as well: https://github.com/styleguidist/react-styleguidist/pull/1062. I still think you should explicitly list recast as a dependency simply because you're depending on a package that has it as a peerDependency.\nRight now you do not have warnings locally because you have other packages that install it. To be more precise:\n\nreact-styleguidist@0.0.0-development\n\u251c\u2500\u252c react-docgen@3.0.0-beta12\n\u2502 \u2514\u2500\u2500 recast@0.13.2\n\u2514\u2500\u252c webpack-cli@2.1.5\n  \u251c\u2500\u252c jscodeshift@0.5.1\n  \u2502 \u2514\u2500\u2500 recast@0.15.0\n  \u2514\u2500\u252c webpack-addons@1.1.5\n    \u2514\u2500\u252c jscodeshift@0.4.1\n      \u2514\u2500\u2500 recast@0.12.9\n\nBut you shouldn't rely on this.\n. @cwmacdon As the fix is more appropriate in the react-docgen-displayname-handler repo, it would be great if you could ping them, too :). fixes https://github.com/styleguidist/react-styleguidist/issues/1061. ",
    "marcofugaro": "Not anymore, webpack-serve has been deprecated\nhttps://github.com/webpack-contrib/webpack-serve. @sapegin is the next branch the WIP branch with the support for CRA 2.0? Can I try with that in the meantime?. @sapegin does react-styleguidist support webpack 4 now?. ",
    "Heymdall": "@stepancar We actually don't use this kind of components in our projects. But I will try to look into it today.. ",
    "celiolatorraca": "Thanks for you help @sapegin !!\n\nI'm not sure there's an easy way to solve this. Right now all components are global (which isn't a good thing, a would be nice to fix that \u2014 #325).\n\nIndeed that is the problem!\nFor now, I did a workaround scopping all my blocks with the package name...\nSomething like:\njs\nPlaykitProgramsList_Button\nPlaykitButtons_Button\nBut with that ugly workaround, I have to require my own components in examples as you said before...\n\nAs a workaround (though ugly) you may try to require the right component in the example code.\n\nDi you know if there is a way to use ES6 in example?\nThanks!. @sapegin Incredibly, they have already fixed the problem...\nVersion 6.7.1 was already released!\nDo we need a new version of react-styleguidist to get this update?\nThanks!. ",
    "janhoogeveen": "Better option imho; seperate the layout container (position fixed) from the component itself. The component itself ideally doesn't know anything or assume anything about its place on the screen.. ",
    "lukashala": "Is it possible to merge this PR please? These changes would be beneficial in our project. Thx.. ",
    "vashchukmaksim": "Absolutely this is not the fix. I just meant that there is nothing else broken since we hide an error. I'll try to investigate further but there is almost no information on what and where it can be.. ",
    "philwolstenholme": "@santaclauze you could use https://github.com/indexzero/node-portfinder to set an open port automatically? . ",
    "ruchern": "@gergely-nagy I tried with portfinder and am unable to increment the port if the previous port is used. There seems to be a Promise issue where the styleguidst server will finish launching the server before the Promise could finish. Would you like to help me on this?. ",
    "kaisermann": "Oops, done!. ",
    "JeSuis": "I get the Tapable warning on webpack 4 fyi. ",
    "dankreft": "I'm experiencing a similar problem, I think...\nMy parent component says this:\n```js\n// File: SnackBar.jsx\nimport SnackBarIcon from './SnackBarIcon'\nexport default class SnackBar extends PureComponent {\n  static propTypes = {\n    type: SnackBarIcon.propTypes.type,\n  }\n}\n```\nThe child component:\n```js\n// File: SnackBarIcon.jsx\nimport PropTypes from 'prop-types'\nexport default function SnackBarIcon({ type }) {\n  return ( ... )\n}\nIcon.propTypes = {\n  type: PropTypes.oneOf(['error', 'neutral', 'success']).isRequired,\n}\n```\nIn the generated documentation for SnackBarIcon I see this:\n\nBut in the generated docs for SnackBar, I get this:\n\n. ",
    "mickatron": "@kopax Have you tried using named exports rather than defaults?\nI've had a similar problem in a style guide documenting components wrapped in Higher Order Components. Though it was a Typescript styleguisidt implementation I found it made things a heap easier.\nI think the issue is more related to react-docgen though. There's a few reports about this over in that repo.\nYou can also look at;\nhttps://github.com/jmeyering/react-docgen-annotation-resolver\nHope it helps. I can only provide a working example in Typescript for documenting a HOC wrapped component. Exporting it as a default will result in the props not being defined in styleguidist, but named exports work just fine. Typescript handles named exports better too particularly when assigning namespaces.\n```\nimport React from 'react';\nimport {\n  withHOC,\n  HOC\n} from 'withHOC';\nexport namespace Component {\n  export interface Props extends HOC.Props {}\n}\nexport class SomeComponent extends React.PureComponent{\n  '...component body'\n}\n/*\n * Some Sub Component.\n /\nexport const Component: React.ComponentClass = withHOC(SomeComponent);\n```\n@dankreft Is it just the 'custom' type def that was a concern? I think that is the standard type given when not directly referencing propTypes, I might be wrong but it seems normal to me. I believe that is compiled by react-docgen though and not by styleguidist.. ",
    "gCardinal": "You shouldn't need it, simply running npx styleguidist --config ./config/styleguide.config.js server as usual should work. I just felt it would be easier with Docker. I've added this command to the README.md.. ",
    "giocodes": "@sapegin I've applied the feedback. Cheers! \ud83d\ude04 . Cool! I've updated the description to draft an MVP for this feature. Awaiting for comments.\nIn the meantime, I have a question @sapegin: What would be the best way to figure out the url or slug? Is there a way to fetch a list of all components slugs? \n. I like the idea of pressing ? instead of a button. We could show the keyboard shortcuts in an overlay similar to how Gmail does it.\n(updated description)\nI also agree with you on navigation, next/prev might not be as useful as focus and filtering. Let's take those out of the MVP. \nAbout using arrows to navigate the list, that seems very similar to moving focus with TAB/ Shift + TAB. Or are you thinking of expanding/collapsing sub-components too?. ",
    "caseycallow": "@kidkuro Do you have an example of this anywhere? I'm trying to do the same thing and having trouble  getting a custom configuration up and running.. @sibamohanty995 Did you have any luck overriding not just a tab button but slots itself? I was doing this successfully prior to 7.2.3 in order to add my own HTML tab button, alongside the current React one. Now I get a Cannot find module 'rsg-components/slots/IsolateButton' error in my browser, even though I'm not importing it into the new slots override file. Let me know if you have any ideas! \ud83d\ude4c. ",
    "bugzpodder": "Ok  found the source for examples loader and it seems pretty complicated.... Nice, exactly what I'm looking for!. For example, if I want to load css for font-awesome from node_modules.\nPutting it in require section as described does not work as it is not automatically loaded on every page.\nhttps://github.com/styleguidist/react-styleguidist/issues/591\nand the other example I referenced have their use cases for this as well, ie:\nhttps://github.com/SpareBank1/designsystem/blob/master/styleguide.config.js#L93. ie this is basically adding  as adding the plugin will include the css as part of the build.  . @sapegin you'll need to include the CSS in the webpack build in order to load them.  Thats what the MiniCssExtractPlugin does, it takes CSS from a local directory and puts it as part of the build.  Just putting it in require config doesn't do anything, nor does adding an entry to template as it is not part of the build.\nIn fact I've looked through all the issues opened by other people, every one of them you just tell them to look at the template section for the docs.  It works if the CSS is a url, but it doesn't work if it is a local file.  . ",
    "romanlex": "it's doesn't work( with \njs\nconst COLORS = Object.keys(colors)\n\nAnd I see this\n\nMay be it is https://github.com/reactjs/react-docgen/pull/211 merged to master and doesn't merged to dev branch with 3.x version. ",
    "jmetev1": "It looks like the colors example works for me.\nconst colors = {\n    red: 'redddd',\n    blue: 'blllluuuu'\n}\nconst COLORS = Object.keys(colors)\ngives: \n\nThat's the desired outcome right? @romanlex @sapegin . ",
    "jmlivingston": "For what it's worth, I was able to successfully get this running by installing plugin-syntax-dynamic-import then add a .babelrc using create-react-app and react-scripts version 1.1.4. I'm sure mileage will vary.\nbash\nnpm install @babel/plugin-syntax-dynamic-import\n.babelrc\njavascript\n{\n  \"plugins\": [\"@babel/plugin-syntax-dynamic-import\"]\n}\n. Yeah, probably should have made that more clear. Maybe \"successfully duplicated\" would have been more clear? \ud83e\udd37\u200d\u2642\ufe0f  . ",
    "atomicpages": "Yep. Here's a practical example:\n```js\nexport default class FooBar extends Component {\nrender() {\n    return <div>World</div>;\n}\n\n}\nexport default class Foo extends Component {\n/**\n * I should show something on styleguidist\n * @type {CustomType}\n */\nstatic Bar = FooBar; // access via Foo.Bar\n\nrender() {\n    return <div>Hello</div>;\n}\n\n}\n```\nThe above approach is particularly common with semantic UI react components.. @sapegin \n\n. ",
    "coreybruyere": "@LokeCarlsson running into a similar issue when trying to use a theme wrapper. Did you come across a solution?. ",
    "LokeCarlsson": "@coreybruyere The problem for me was the project structure, I had my custom Wrapper placed in the wrong folder. Might be the lib folder for you.. ",
    "sterlingssmith": "@sapegin - I'd like to work on this issue.. ",
    "jmiazga": "What would you like the font sizes to be? This is what they currently are:\nexport const fontSize = {\n    base: 15,\n    text: 16,\n    small: 13,\n    h1: 48,\n    h2: 36,\n    h3: 24,\n    h4: 18,\n    h5: 16,\n    h6: 16,\n};\nParagraphs also have a font size of 16px.\n\n. @sapegin I created a PR to address this issue https://github.com/styleguidist/react-styleguidist/pull/1024. ",
    "jquense": "disabling still seems to be on a per component basis. The frustrating bit here is that if I want something to cascade it's almost impossible. In this case jss-issolate forces every component to have a font-weight of normal (400), when our default weight is 300, trying to change doesn't seem feasible?\nI understand the need to isolate the chrome styles from the examples generally, but find it hard to work with in the particular cases. Every time i've setup a RSG site, i've needed to theme the guide, to match the general assumptions of the styleguide components, in order for them to look right in context. That is really tough, when the styleguide insists that certain values be set. That wouldn't be so much of a problem if it was easier to make blanket changes to the theme values.\nPerhaps a practical suggestion would be to allow configuring the isolate values at a theme level? If we could automatically add any value that jss-isolate resets to the theme variables, it'd be a non-problem \ud83d\udc4d . Sure, I didn't notice that you could use years as an alias for the option . ",
    "EvHaus": "We're running into the same issue. It would be great if there was some way to control whether or not the reset CSS styles are injected into the app. Something like:\n```js\n// styleguide.config.js\nmodule.exports = {\n    injectResetCSS: false\n}\n```\nThe other styles that RSG injects (for markdown, etc...) aren't as big of a deal. Although maybe a more blanket rule to disable all RSG classes would be nice too. Something like:\n```js\n// styleguide.config.js\nmodule.exports = {\n    injectCSS: false\n}\n```\nWe've tried to implement the awful workarounds like this to ensure RSG's reset styles are removed when the app loads:\n```js\nconst observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mr: typeof MutationRecord) => {\n        mr.addedNodes.forEach((el: HTMLElement) => {\n            if (el.getAttribute('data-meta') === 'jss-isolate') {\n                el.parentElement.removeChild(el);\n            }\n        });\n    });\n});\nobserver.observe(document.head, {attributes: false, childList: true, subtree: false});\n```\nHowever, that causes errors with JSS anytime you navigate to a new page, as it doesn't like it when you dynamically change or remove injected styles.\nAny recommendations for how we can work around the current limitations?\n. @sapegin After investigation, this isn't an issue with markdown-to-jsx. It parses tabs just fine (as confirmed by trying on their demo site here: https://probablyup.com/markdown-to-jsx/)\nAfter investigation, I can see that the markdown gets corrupted at the <Section /> component BEFORE it even gets to the markdown-to-jsx compiler.\nHere's a screenshot from the React dev tools showing the props.\n\nMy markdown file has this code:\n```md\n- some\n- list\n- another item\n\n```\nBut the <Example /> component receives this:\nmarkdown\n-   some\\n-   list\\n-   another item\\n\\n* * *\nSomehow the ruler got corrupted and the ---- code was changed to * * *\nFurthermore, the following code:\n- some\n    - list\n        - another item\nBecomes:\n-   some\\n    \\t\\t\\\\- list\\n    \\t\\t\\t\\\\- another item\nIn which you can see a mixture of \\t characters and 4 spaces. This is throwing markdown-to-jsx off as well.\nSeems like there are a number of markdown parsing bugs somewhere in here, but none are caused by markdown-to-jsx. What else is react-styleguidist doing to markdown?. For me, doing a full clean re-install helped. ie:\nrm -rf yarn.lock node_modules\nyarn install\nSeems like something in the dependencies is indeed the culprit here.. ",
    "NoMan2000": "I'll check it out and see how involved it is.  \n\nBut in general your style guide should not depend on the backend.\n\nI might be doing this wrong, but the problem is that certain methods get invoked when a React component gets created, particularly fetching data from a server.  If no data is found, it throws an error.  \nIs there a way to override that in Styleguidist?. I'll add for anyone looking to get around this problem that it's not too difficult.  This example is using axios:\njs\nconst sinon = require('sinon');\nconst resolved = new Promise((r) => r({ data: [] }));\nsinon.stub(axios, 'get').returns(resolved);\nThis will stop it from throwing errors.. And an even better solution.  In styleguide.config.js do this:\n``js\nconfigureServer(app) {\n    const mockServer = require('./mockAPI/mockServer');\n    //app` is the instance of the express server running Styleguidist\n    app.use(mockServer);\n}\n```\nThat will automatically proxy the requests to the mock server.. ",
    "jamalsoueidan": "I had to delete both folders html-webpack-plugin and webpack-dev-server inside node_modules in react-styleguidist to get it work with webpack 4.. Also in EditorLoader.js\n```javascript\nconst file = source(\"lib\", \"rsg-components\", \"Editor\", \"EditorLoader.js\");\nconst body = fs.readFileSync(file, \"utf8\");\nfse.outputFile(file, body.replace(\"System.\", \"\")).then(function() {\n  console.log(\"Fix editorLoader.js\");\n});\n```. ",
    "floede": "The example project works fine, ie it reads the css files in src/component without specifying a path.\nI just assumed that include would add to that.\nBut could you tell me how to accomplish what I'm trying to do?\nI've looked all over the webpack documentation, and I can't find anything.. ",
    "cdaringe": "Sure, that's definitely an option.  I'm not in favor of it personally.  I'm not sure if there are any significant advantages to isolating those props, only to shim them right back into the root node.  In fact, it makes it harder to distinguish between handled and unhandled props.  It's also an extra API to maintain.  Passing on the unhandled props gives a great user experience, IMHO, and adds ~nil complexity.  If I do <Thing id=\"best_id\" />, it feels like working with the DOM directly, and has natural imference.. I respect these points, but disagree with them for the following reasons:\n\nYou may have more than one HTML element that you want to modify.\n\nIf that is necessary, than that other element should also be exposed.  SUIR, for example, often hangs related elements off of a root element for this reason. in this  example, you can see they have things like <Form.Button /> & <Form.XYZ /> to use instead of the defaults, if you want to override internal components with other props/goodies.\nIt's also worth noting that SUIR use a similar pattern to that which I've proposed, but do so via a babel plugin ref1 ref2.\nThis plugin based approach is a more advanced solution, which is probably also worth considering.  In the PR'd case, this component is a functional stateless component, so the benefits of the plugin approach are less, but still valid--especially if we have Component/PureComponents in RSGs component tree!\n\nYou won't accidentally leak undesired props to DOM (resting all props is dangerous).\n\nI respectfully don't think that this carries much weight.  If one has leaked a prop, he/she has done it upstream, and the bug still exists.\n\nThe API is much more clear.\n\nThe API IMHO is much less clear because it's an entirely new API to find and use.  By making it a separate API, you can't just add props to your node, like you would naturally with any other HTML tag.\nAnyway, thanks for having this discussion.  I'm not trying to be stubborn/ill-willed/etc, just advocating.  I'd still be happy to use containerProps over nothing.. bump (to suppress stale bot). ",
    "eemeli": "Oops, sorry, had forgotten about that! Should now be fixed.. Pinning webpack isn't working for me. For a proper fix (which works at least with react-styleguidist 8.0.0), you need to pin its markdown-to-jxs dependency to 6.7.4 or earlier, as its 6.8 release added an (undocumented!) output minification step that's causing this issue.\nThe upstream issue probablyup/markdown-to-jsx#224 was closed, probably incorrectly. Not really sure what's the original source of the problem though.. I haven't had time at least yet to look into this more deeply; it may well be that the actual issue is in webpack-dev-server or some other dependency.. ",
    "craigkovatch": "@stepancar @sapegin I'm working on supporting parameter types in https://github.com/styleguidist/react-docgen-typescript/pull/172 and we could use some clarification from you on this PR -- it seems to me that the format for an optional argument would be arg?: type rather than arg: type?. Am I missing something? Of course, in TypeScript, types/argument optionality are 1st-class concepts rather than inferred from JSDoc, so maybe there's some impedance mismatch there.. ",
    "manatok": "Going to fix the conflicts now.. I think I messed something up when merging in master and resolving conflicts. Just trying to figure it out quick.. I accidentally branched off of the release tag originally and ran into issue merging in master where it was reverting the changes done on master. Strange. Going to branch off of master now and will create a new PR soon.. We have an open source documentation tool (http://presidium.spandigital.net/) that serves .md files as static html pages. We have been working on a number of plugins to pull content into presidium  (javadocs, swagger definitions etc) and we are currently adding a plugin for react-styleguidist.\nEach article in presidium lives in it's own .md file, which is then linked to the navigation and allows users to interact with it (e.g adding comments). In order to achieve this with RSG, so that it fits in nicely with presidium, our plugin runs RSG against each component separately, so that we can generate a separate bundle and .md per component. As a result, we need to embed multiple components on one page.\n. ",
    "zGrav": "Thanks \ud83d\udc4d . ",
    "mcconkiee": "What was the resolve on this? i have the same issue, but i am not clear on the comment from @sapegin on the fix. done: #1201 - @ProLoser --- thanks. ",
    "wilsonmsalberto": "Just FYI, added a config that's working for me here: https://github.com/yannickcr/eslint-plugin-react/issues/1203#issuecomment-457530681. ",
    "antonfrolovsky": "@sapegin I have ReactRedux project with Emotion\nAll works but not VIEW CODE\nindex.js\njs\nimport Button from './Button';\nexport default Button;\nButton.styles.js\n```js\nimport styled from 'react-emotion';\nconst styles = {};\nstyles.Button = styled('button')width: 100px;\n  height: 30px;;\nexport default styles;\n```\nButton.js\n```js\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.style';\nclass Button extends PureComponent {\n  static propTypes = {\n    align: PropTypes.string,\n  };\nstatic defaultProps = {\n    align: null,\n  };\nrender() {\n    const { children, align, ...buttonProps } = this.props;\nreturn (\n  <s.Button {...buttonProps}>\n    {children && typeof children === 'string' ? children : ''}\n  </s.Button>\n);\n\n}\n}\nexport default Button;\n```\nstyleguidist.config.js\njs\nmodule.exports = {\n  title: 'META Components',\n  components: './source/components/UIkit/**/[A-Z]*.js',\n  ignore: ['**/*.style.js'],\n  skipComponentsWithoutExample: true,\n};\nMaybe this error because of webpack version, i think but not sure.\n\"webpack\": \"^4.1.1\",\n\"webpack-cli\": \"^2.0.11\",\n\"webpack-dev-server\": \"^3.1.1\",\n. ",
    "kamranahmedse": "Same issue here. Looks like the recent webpack upgrade broke it.. ",
    "sibamohanty995": "@sapegin Apologies. i will try to explain with an example :-\nBelow is my styleguide.config.js code for rendering sections. By default, when the application loads, i see the \"Getting Started\" section loaded with all 4 sections rendered under it. Is there a way possible that we get to load only one sub-section, like \"introduction\" or \"Hello World\" on the initial load of the application, rather than having all the sections loaded together.\nsections: [{\n  \"name\": \"Getting Started\",\n  \"sections\": [{\n      \"name\": \"Introduction\",\n      \"content\": \"../docs/Introduction.md\"\n    },\n    {\n      \"name\": \"Getting started\",\n      \"content\": \"../docs/GettingStarted.md\"\n    },\n    {\n      \"name\": \"Hello World\",\n      \"content\": \"../docs/HelloWorld.md\"\n    },\n    {\n      \"name\": \"FAQs\",\n      \"content\": \"../docs/FAQ.md\"\n    }\n  ]\n}. To make it simple, what i want to ask is, if pagePerSection works at a nested level or not, if it does then how do i set it for the nested sections. On the root level, i am able to render only 1 section, but if that section contains sub sections, all of them get rendered at once.. @rafaesc I had thought of this initially, tried all possible combinations but for some reason, there seems to be no change. All the subsections tend to get rendered, no matter what the value of sectionDepth is. Can you please help me out with a working example or demo?. @sapegin Any help will be appreciated. Thank you.. @sapegin Thank you, Will be sending a pull request, Just one last thing.\nThe styleguideComponents documentation says \"Override React components used to render the style guide\".\nDoes this specifically mean that only the files whose names end with Renderer like ComponentsListRenderer, PropsRenderer, TabButtonRenderer etc will be able to be overriden as such, and files like UsageTabButton wont be able to be overriden using the styleguideComponents?\nIf so, then the following change would still not be able to help in overriding the UsageTabButton file right?. @aversini Yes, it did work for me. Actually for other components when you override them in your styleguide.config.js, you just write the component name to be overriden : path of the overriding component\nBut for CodeTabButton, since it resides inside the slots folder, you've to write it like this in the styleguide.config.js :-\n\"slots/CodeTabButton\" : path of the overriding component. ",
    "cwmacdon": "Unfortunately this issue should probably be re-opened, as the peerDependency uses exact versions:\n\"recast\": \"0.12.6 || 0.13.0\"\nand the commit in this repo uses an inexact version:\n\"recast\": \"^0.13.0\"\nThis will install 0.13.2 which does not meet the peerDependency requirement :(\n. ",
    "jeffscottward": "Whats the status on this?\nBabel 7 is now fully released\nI see changes were made but unsure of how to help if possible. ",
    "0xsven": "Thanks for the reply\nSo I ended up merging all icons into one file. This is not optimal because of how dead code removal works. Also the styleguide system shouldn't dictate how we write our app. \nMore flexibility would probably conflict with how seamless styleguidist works out of the box. \nClosing this.. ",
    "mattwagl": "At first I was like: Oh no, this will make the examples much more bloated. But after thinking about it, it also makes them more realistic. So you can really copy and paste them into your app.\nAdditionally you also test the exports of your main module which is \ud83d\udc4d Because when doing styleguide driven development with styleguidist I tend to forget to export new components at the top level.. ",
    "joeljeske": "I agree is a problem, although I do not necessarily like the proposed solution. I do not want to have to require() or import each other component that I want. Additionally, I think it would be expected that it this pseudo-loader works exactly like the user's configured loader which of course is not realistic given the vast array of loader configurations. Because it likely cannot work exactly the same, it would be improbable to do an exact copy-paste.\nWhat about something like this: \nAll the components from the active module are available to the examples in the markdown. All other components are available only on the namespace of that component. That will keep it concise while making it clear that the example is using a component from different module. \nFor example, if I had the components: \n// src/components/icon/icon.js\nexport { Icon }\n// src/components/button/button.js\nexport { Button, LinkButton }\nI would be able to use them as below: \n// src/components/icon/icon.md\n```\n<Icon name=\"settings\" />\n```\n`\n// src/components/button/button.md\nBasic Button\n```\n<LinkButton>Basic Link Button</LinkButton>\n<Button>\n  <Icon.Icon name=\"next-arrow\" />\n  Button With Icon\n</Button>\n````\n. I am thinking of the use case where Styleguidist is used as the documentation tool for a Library. In that case, the devs consuming the library would refer to the documentation and potentially not be able to copy-paste examples as their own bundling tool may use a different syntax, loaders, or base paths, etc... \nAlso, although it may use the normal loader mechanism of the originating project, it is still an abstraction like you mention in your docs: \n\nYou can also require() other modules (like mock data for unit tests):\nYou can only use require() in Markdown files. ES6 import() syntax isn\u2019t supported.\n\nFor those reasons, I am suggesting that the normal use case of importing other components in the project to use in your example is able to be done without explicitly importing them using a CJS require and instead is available out of the box. Of course, since the loader is already available, one could choose to use require() anything they may choose for completeness of the example. . I don\u2019t know if it\u2019s fair to say that it is very minor, I think it depends on the architecture of the given project. In a component centered framework, (especially when using css in js patterns) I think it can be more common to have a file that exports multiple components, especially those that are very small and work together and therefore should be documented together. \nExamples \n\ntext typography components (h1, h2, p, etc...)\nBuilding Block Components (e.g. Modal, ModalBody, ModalHeader etc...)\nlayout primitives as mentioned by @okonet\n\nIMO, It should be up to the author to decide if they want to create new files and docs for each of these micro components or keep them in a single file. . ",
    "melbourne2991": "Also have this issue after updating. ",
    "anuragd": "Dang! Fixed right after I finally figured the problem out and worked around it using a custom renderer :( Thanks for the quick turnaround though. ",
    "michelson": "hi @sapegin , if I may ask , why this is closed? I've read the issue on doc gen and I've tried the solutions but it does not work. \nis not clear to me how this issue is solved. I have to assume that this is a wont fix ?. I'm sorry for my insistence, @sapegin . But if this was discussed, many times, I would see this as a symptom of this problem is not really solved. is it? I've searched the issues in this repo before write a new one. but unfortunately I didn't found a proper solution of this issue.\nI've tried the same implementation inhttps://github.com/pedronauck/docz and is working as expected they use react-docgen too \nbest. Yes,  I've tried that solution , and it renders the props but the name of\nthe prop is rendered as a \"0\"\nAtte.\nMiguel Michelson Martinez\nwww.vadb.org http://vadb.org\nOn Fri, Aug 10, 2018 at 8:31 AM, Artem Sapegin notifications@github.com\nwrote:\n\nSorry for closing the issue \u2014 it really was discussed before but nobody\nwas interested in actually solving the problem ;-/\nFeel free to investigate how Docz does it and open a pull request \u2014 I've\nlooked quickly and I don't see where they are doing it.\nHave you tried https://github.com/siddharthkp/react-docgen-\nexternal-proptypes-handler ?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/issues/1079#issuecomment-412068341,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAAuyCqUqlww_64j4IuGNmFmtOXFG6MZks5uPX08gaJpZM4VzbD-\n.\n. \n",
    "LindenHolt-Whittaker": "I've just replicated the same test files in the next branch, and the bug is still there I'm afraid \ud83d\ude2c\n. https://github.com/LindenHolt-Whittaker/styleguidist-bug-reproduction/tree/next\nI pushed to a next branch in my repo. Hey sapegin, I'm not sure where you're testing this, but in my examples/basic directory, and in both my master and next branches, I have 4 test files and I can still replicate this issue? I see that you still have the same headers (Read me (.md files)/Components (bad work around)) so I don't understand where you are testing this?\n\n. I have tried running npm run compile from the root directory and then npm install from the /basic directory as well as trying to run npm install from root, and I could not see the expected changes (whitespace under 'VIEW CODE'/bug fixed)\nAny idea what I'm missing?. I can see the expected changes and you are correct, the next branch fixes this bug!\nThanks for your help. I assume the next branch isn't safe to use in production? . ",
    "slangberg": "Is there a temporary fix in the current version, perhaps replacing a guide component ?. ",
    "informa": "I overrode the component in the config\nEditor: path.join(\n      rootPath,\n      \"components/Editor/Editor\"\n    )\nand broght in some state from v9\n```\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Styled from 'rsg-components/Styled';\nimport debounce from 'lodash/debounce';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/mode/jsx/jsx';\nconst UPDATE_DELAY = 10;\nconst styles = ({ fontFamily, space, fontSize }) => ({\n    root: {\n        '& .CodeMirror': {\n            isolate: false,\n            fontFamily: fontFamily.monospace,\n            height: 'auto',\n            padding: [[space[1], space[2]]],\n            fontSize: fontSize.small,\n        },\n        '& .CodeMirror pre': {\n            isolate: false,\n            padding: 0,\n        },\n        '& .CodeMirror-scroll': {\n            isolate: false,\n            height: 'auto',\n            overflowY: 'hidden',\n            overflowX: 'auto',\n        },\n        '& .cm-error': {\n            isolate: false,\n            background: 'none',\n        },\n    },\n});\nexport class Editor extends Component {\n    static propTypes = {\n        code: PropTypes.string.isRequired,\n        onChange: PropTypes.func,\n        editorConfig: PropTypes.object,\n        classes: PropTypes.object.isRequired,\n    };\n    static contextTypes = {\n        config: PropTypes.object.isRequired,\n    };\nconstructor(props) {\nsuper(props);\nthis.handleChange = debounce(this.handleChange.bind(this), UPDATE_DELAY);\n//v9.0.0\nthis.state = {\n  code: props.code,\n  prevCode: props.code \n}\n\n}\n//v9.0.0\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.prevCode !== nextProps.code) {\n      return {\n        prevCode: nextProps.code,\n        code: nextProps.code\n      };\n    }\n    return null;\n  }\n//v9.0.0\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextState.code !== this.state.code;\n    }\ngetEditorConfig(props) {\n    return {\n        ...this.context.config.editorConfig,\n        ...props.editorConfig,\n    };\n}\n\nhandleChange(editor, metadata, newCode) {\nconst { onChange } = this.props;\n//v9.0.0 (this.setState({ code: newCode });)\nthis.setState({ code: newCode });\n    if (onChange) {\n  onChange(newCode);\n    }\n}\n\nrender() {\nconst { classes } = this.props;\n    return (\n        <CodeMirror\n    className={classes.root}\n    //v9.0.0 (value={this.state.code})\n            value={this.state.code}\n            onChange={this.handleChange}\n            options={this.getEditorConfig(this.props)}\n        />\n    );\n}\n\n}\nexport default Styled(styles)(Editor);\n```\nWhich works well, but when I am making a change in the editor, the cursor jumps to the end of the code snippet.\nI think the lifecycle method causes a re-render.\n\nNot sure why this isn't occuring in v9?. My colleague and I found the solution editorConfig: { theme: 'cobalt' } in the config.. ",
    "vivek12345": "@sapegin Can I take this up?. Thank you @sapegin. For start when I do a npm install and npm start I get this error\n```\n FAIL  Failed to compile\nmulti ./lib/index ./node_modules/react-dev-utils/webpackHotDevClient.js\nModule not found: Can't resolve '/Users/viveknayyar/vivek/react-styleguidist/lib/index' in '/Users/viveknayyar/vivek/react-styleguidist'\nCan I please get some help here?. @sapegin Thank you. That did help.\nI have a question around the lib directory.\nSo when I compile src directory with client, scripts and loaders, should I put them all inside lib or just the client.\nSecondly examples use a path of `react-styleguidist/lib/rsg-components` if we change from putting `rsg-components` from being inside `lib` to being inside `client/lib` will that be the right way or should we put all client code directly inside lib rather than putting inside `lib/client` so that our examples continue to work the way they are.. @sapegin  Perfect, so yes all those changes are done... :)\nThe one doubt that I have is on this code\nif (config.styleguideComponents) {\n        forEach(config.styleguideComponents, (filepath, name) => {\n            const fullName = name.match(RENDERER_REGEXP)\n                ? ${name.replace(RENDERER_REGEXP, '')}/${name}\n                : name;\n        webpackConfig.resolve.alias[`rsg-components/${fullName}`] = filepath;\n    });\n}\n\n```\nShould we update the path here as well?\nnpm run lint throws a lot of error for these like the following:-\nUnable to resolve path to module 'rsg-components/Markdown'\nMissing file extension for \"rsg-components/Welcome/WelcomeRenderer\". I think I understood that.\nHad to change eslint file\nFrom \n\"import/resolver\": {\n    \"node\": {\n    \"moduleDirectory\": [\"src\", \"node_modules\"]\n    }\n}\nTO \n\"import/resolver\": {\n    \"node\": {\n    \"moduleDirectory\": [\"src/client\", \"node_modules\"]\n     }\n}\nPlease ignore this. I guess this ain't right.. @sapegin should I be changing all these references from\nimport Argument from 'rsg-components/Argument';\nto\nimport Argument from 'client/rsg-components/Argument';\n. @sapegin The travis build fails at npm run lint but when I run this on my local machine I get no erros and it works perfectly well.\nCan you help?. @sapegin Just noticed that when I execute npm run build:sections, it leads to \nasset size limit: The following asset(s) exceed the recommended size limit (669 KiB).\nThis can impact web performance.\nAssets:\n  build/bundle.f6282fc0.js (705 KiB)\nentrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (669 KiB). This can impact web performance.\nCan this be because of the changes I did? Should I be looking into this issue?. Moving bin to src now. Looks like Babel was ignoring nested configs for some reason. I think I've fixed it.\nFor some reason it was working on my machine, because I could build, lint and test everything correctly. The generated files inside lib folder too had common js require calls.\nAm I missing to understand something here? . @sapegin Made all the suggested changes \ud83d\udc4d . Oops it looks like typecheck failed for some node_modules file :(. @sapegin Looks like an issue with DefaultExample.md coming from scripts/schema/config.js.\nIt's happening when we are executing all our npm scripts from lib directory instead of src directory.\ntemplates folder is not getting copied into lib. @sapegin looks like the travis build is stuck forever on the integration tests. Task has executed long back, but it's still showing as being executed.. yehhh... finally it's all passed and merged. :tada: \nThank you @sapegin for all the help.\n. In here I was trying to separate the paths into a different file like how CRA does it in it's config/paths.js.\nSo should I change this file back to how it was?. The reason I did this was this would give us a single point of change if ever we choose to move scripts to any other directory. For now with the relative path we will have to update it in all places if ever we change it's directory.. I think it was happening when I had just cloned the repo and this error was being shown everywhere in the code. Could be because of some mis configured eslint on my mac since it's not showing up now. So I am removing this line from my commit.. Made the changes. Thank you. Understood. Will revert it.. It seems even this is not needed. Will remove this as well.. @sapegin this should be '../../../' right? . works well if I make it ../../../ on my local machine. ",
    "aghh1504": "\n. \n. ",
    "ryanfabela": "1.1.0 according to the output below\n\u2514\u2500\u252c react-styleguidist@7.2.1\n  \u2514\u2500\u2500 react-docgen-annotation-resolver@1.1.0. ",
    "iagorm": "Expo is a environment that uses React Native and wrappers it with built in API native modules, but some components doesn\u2019t allow the use of expo because of the need to link native modules, but even though using this module don\u2019t get working with the expo\u2019s environment, my question is, this is possible to work with?. ",
    "MrKou47": "@sapegin OK, i made some changes again. I had achieved my idea by using react@16 context, every my component  wrapped by ThemeComponent and it can get theme prop from the query from window.location.href.\nBut i'm afraid i'm not clearly know which work does plugin API do and i can't find any doc about plugin API.I guess it will give us some ability for decorate styleguide component\ud83e\udd14?But when i want to change some styleguide component, i will create my own styleguide component and put it in the styleguide.config.js.\nlike:\njs\n  styleguideComponents: {\n    Wrapper: path.join(__dirname, './src/frameworks/styleguide/Wrapper.js'),\n    ComponentsListRenderer: path.join(__dirname, './src/frameworks/styleguide/ComponentsListRenderer.js'),\n    ToolbarButton: path.join(__dirname, './src/frameworks/styleguide/ToolbarButton.js'),\n  },. @bbr-yp aha, I used the React.createContext api to achieve switch components theme use global theme switch button.All of my components will be wrapped in a hoc component,and this component can get the theme prop form the window.location.query and update theme context. Then i customize  component for switch global theme,just redirect website, like http://mycomponent.com?theme=light or http://mycomponent.com?theme=dark. You can try it\ud83d\ude01\n. ",
    "bbr-yp": "@MrKou47  Have you done it?\nI have the same issue... And I'm a little stuck :/\nYour help would be greatly appreciated.. ",
    "gyaneshgouraw": "Using RSG example basic  I have created  components library.\nI have a separate application, where i want to export these working components.\nI included basic example as a dependency in new project.\nNow in new project if i want to access these components i get error.\nModule parse failed: /Users/... Unexpected token (4:80)\nYou may need an appropriate loader to handle this file type. . ",
    "fnky": "This can be circumvented if you install webpack 4 in your repository.\nFor people using frameworks like NextJS, which doesn't explicitly require webpack to be a dependency, simply add it to fix the issue.. ",
    "Darrken": "@sapegin That is a correct summation of the problem.\n@elevatebart Yep, you can grab it here.  It's under /packages/es-components where you'll want to npm install and npm run start.\nThanks for taking the time to look at this!. ",
    "ThorHelms": "Just FYI: It seems that this breaks Styleguidist on Windows when using uppercase 'Components' folder, as the resources will be requested with lowercase 'components' which doesn't exist.\nFor now I've been lazy and simply reverted to 7.3.7.. I am using:\nWindows 10 Pro, version 1803\nPowerShell 5.1\nNodeJS 8.11.2\nI used the Components folder with Styleguidist 7.2.2, and after an update to 7.3.8 it no longer worked.. ",
    "arshadkazmi42": "I am taking this up . @sapegin I have made the changes you suggested, but many test cases are failing. Below is the error message and code changes snapshots\n\n\n\n. @sapegin updating the snapshot fixed it. all tests are passing now. creating a PR. Oh. I think I created a branch from master, it was supposed to be from next thats why its giving these many conflicts.\nIs there a way to update that? Or should I go for a new PR?. @reintroducing I got busy, haven't got a chance to look into this again.\nIt can be made open for other contributors to grab.. Oh. I think I created a branch from master, it was supposed to be from next thats why its giving these many conflicts.\nIs there a way to update that? Or should I go for a new PR?. > I've changed the branch. I guess you can do it yourself too \u2014 Edit button in the top right corner of this page.\nI can do that, but you have mentioned to make PR against next branch in the issue here\nhttps://github.com/styleguidist/react-styleguidist/issues/1141#issuecomment-423069610. @sapegin ok. thanks\nI will create a new PR now.. @sapegin I can't find  rsg-components directory in src folder in next branch.. created a new PR here #1161. Function in the same file?\nAlso what are the cases available for a child. As this is my first PR for this repo, so I am not sure about it.. >But probably a better question would be: does it fixes the initial issue?\nHow can I verify it?. I am new to this repo and not so sure, how to do it, I ran all the existing tests.\nDo I have to write new test cases to check this?. ",
    "n8agrin": "@sapegin I started a vanilla JS create-react-app and Styleguidist and now see what you mean about this only being an issue with Typescript. I'm guessing it might be the way ts-loader raises messages. I'll start there before modifying Styleguidist and see if I can fix the problem at the loader layer.. ",
    "ryanfitzer": "I forgot to mention that I am running the command from that directory.\nI\u2019m guessing it\u2019s Babel-related, but not sure how to debug. Does Styleguidist not look for .babelrc above the directory from where it\u2019s run, maybe?. @sapegin Thanks for your quick responses!\n\nStyleguidist doesn't have any relation to babel\n\nFor some reason, I assumed that Styleguidist was responsible for loading the root Babel config, even though this is not stated anywhere in the documentation. Once I realized that, I updated styleguide/styleguide.config.js to set the babel-loader root option correctly and everything worked:\njs\nmodule.exports = {\n    components: '../components/*/index.js',\n    webpackConfig: {\n        module: {\n            rules: [\n                {\n                    test: /\\.jsx?$/,\n                    exclude: /node_modules/,\n                    loader: 'babel-loader',\n                    options: {\n                        root: '../'\n                    }\n                }\n            ]\n        }\n    }\n};. ",
    "yakunins": "I guess nicely implemented href option will do job well. Like that:\njs\n  sections: [  \n    {  \n      name: 'Home',  \n      content: './home.md',\n      href: '/' // Back to component's root\n    },\n    {\n      name: 'Visual',\n      href: '#visual', // Just in-document navigation \n      components: ...\n    },\n    {\n      name: 'Just a text, no action on click',\n      href: false // No action on click\n    }\n  ]\nSo, href may be:\n1. true (default), to navigate over components and sections routes\n2. false, for taking no action :)\n2. extrenal, like http://...\n3. internal, like #section or #section/component\n. @sapegin These are not issues, looks more like features... Tested!\n\n[x] href=\"#section\" (works fine)\n[x] href=\"http://google.com\" (works fine)\n[x] href=\"http://google.com\" external: true (works fine)\n[ ] href=false (not giving a plain text, renders href=\"/#/name\" instead)\n[ ] href=\"\" (not good, renders href=\"/#/name\" instead)\n\nJust to illustrate the idea:\njsx\nexport function LinkRenderer(_ref2) {\n  ...\n  return React.createElement(\n    props.href ? \"a\" : \"span\",\n    _extends...\n  .... Privet, @okonet!\nThat what I wish to have:\njs\n  ...\n  pagePerSection: true,\n  sections: [\n    {\n      name: 'All components',\n      href: '/',\n      content: './src/readme.md',\n      pagePerSection: false\n    },\n    {\n      name: 'Visual',\n      href: false,\n      sectionDepth: 2,\n      components: () => ([\n        path.resolve(__dirname, './src/visual/Text/', 'Text.tsx')\n      ])\n    },\n    {\n      name: 'Layout',\n      href: false,\n      sectionDepth: 2,\n      components: () => ([\n        path.resolve(__dirname, './src/layout/Grid/', 'Grid.tsx'),\n        path.resolve(__dirname, './src/layout/Grid/', 'GridColumn.tsx'),\n        path.resolve(__dirname, './src/layout/Grid/', 'GridRow.tsx')\n      ])\n    },\n    ...\nSome examples of plain text sections: \n\nhttps://www.audi.com/ci/en/renewed-brand.html#\nhttps://react.semantic-ui.com/\n\nCollapsable sections headers:\n-  http://carbondesignsystem.com/\n-  https://www.lightningdesignsystem.com/getting-started/\n. ",
    "wwwebman": "Hi, guys! Here short example how we  try to manage our sections:\n{\n    pagePerSection: true,\n    sections: [\n        {\n            name: 'Components',\n            sectionDepth: 1,\n            description: 'Component',\n            href: false, // want to disable this link.\n            components: [\n                resolve(__dirname, 'src', 'Button', 'Button.jsx'),\n                resolve(__dirname, 'src', 'Input', 'Input.jsx'),\n            ],\n        },\n    ],\n}\nCurrent state:\nSo,  as you can see from config it will put all components on separate page.  Also when we click 'Components' we will get empty page. \nDesire state:\n1. href -> false\nWe would like to be able to disable this link at all and be able to open nested components pages. So, for us @Spenc84 point makes sense:\n\nIf false, clicking on this item in the sidebar should do nothing and it should look visually different from other clickable links in the sidebar.\n\n\nhref -> toggle feature\nWould be nice to have 'toggle' feature for some section links like in material-ui docs - https://material-ui.com/api/app-bar (click on 'Component API' section.)\n\n. Ok, thanks.. ",
    "omninonsense": "\nI don't really see how we can detect which type are you using to describe component props\n\nI am aware there's no way to detect the flow type being used. That is why one of the suggestions was to simply expose the props described in JSDoc comments via @arg/@param, which would have special meaning in conjugation with /** @component */.\n\nSo maybe something like this could work:\njs\n/**\n * @component\n * @type Props\n */\n\nI like this idea a lot! A more succinct way might be  /** @component Props */. I wonder how difficult that would be to implement.\n. Another idea is to have another JSDoc tag called /** @props */, used like this:\n~~~js\n/* @props /\ntype Props = {\n  color?: string\n}\n~~~. BTW, I realise this is quite an uncommon edge case. Also, there is an easy workaround of wrapping the styled component into a functional component.\nSo, I won't be too surprise if the issue gets put on the back burner or even closed. :). Ah, this issue is closely related to #1104.. ",
    "Gisleburt": "As a temporary work around, I'm manually adding a table to the example markdown file.\nREADME.md:\n```markdown\n|Prop name|Type  |Default|Description|\n|---------|------|-------|-----------|\n|id       |string|       |           |\nExample:\n...\n```\nThis is undesirable as it does not match the style of the styleguidists tables, and would need to be kept up to date manually, but at least the information is given.. ",
    "pawelogrodnik": "I'll try to reproduce it on new repo and come back to you.. Hey,\nthat's repository with error\nhttps://github.com/pawelogrodnik/styleguidist-err\nAs I noticed, the Map Component is causing this error.. ",
    "afraser": "Nevermind, managed to get props to show by typing the result of withStyles:\n```js\nimport { default as MuiSelect, SelectProps } from '@material-ui/core/Select';\n// ... wrap MuiSelect in Select...\n//                                        vv -- important bits -- vv\nexport default withStyles(styles)(Select) as React.ComponentClass;\n```. ",
    "teddybradford": "@sapegin If I can find some time I'll take a stab at it. Do you know if this bug occurs in JS environments as well as TypeScript ones?. @sapegin It looks like the TypeScript parser returns an empty array when there are no props or methods. I updated the check for props and methods in Usage and UsageTabButton to check for array length, which seems to fix this issue!\njsx\nconst propsNode = Array.isArray(props) && props.length > 0 && <Props props={props} />;\nconst methodsNode = Array.isArray(methods) && methods.length > 0 && <Methods methods={methods} />;\nHowever, when I run ESLint I get the following:\nerror  'length' is missing in props validation  react/prop-types\nI can't figure out why I'm getting this error. It seems to only be an issue for the propsNode check and not the methodsNode check. I even tried adjusting the propTypes for props to withShape(PropTypes.array, { length: PropTypes.number }) to no avail. Any ideas?. Ah, okay. I'll give that a try.. It worked! Thanks for suggesting the use of _.isEmpty. I've made a PR with the changes.. ",
    "akramer24": "Can anyone please help? @sapegin?. @sapegin here's the reproduced problem https://github.com/akramer24/example. ",
    "eragon512": "hey, is this issue available? if so, id like to take it up\ncould you also give a link to the examples in the docs, please?. hey, is this issue available? I'd like to take it up. @sapegin i am assuming from the links given that the new doc page should have 3 sections - colors, whitespace and typography.\nHowever, I'm not sure what each section should contain. Also, the links talk about theme colors, etc. and I'm not clear how themes are implemented in react-styleguidist. @sapegin made the requested change, please review and let me know if any more changes are needed. ",
    "ProLoser": "@mcconkiee you're seeing this when using @eragon512's version? It may make sense to create a new issue (can always reference this one) but I am unclear what steps you took to encounter this error.. ",
    "DavidHenri008": "Well I'd like to but I am fairly new to webpack and react and I have no idea of the root cause. Moreover, at the moment styleguidist throws an error with my setup (cra 2.0) and I want to try a bit more before filing a new issue.. I finally figured this out...\nFirst, it has nothing to do with CRA 2.0, the issue was reproducible with CRA 1.0.\nThe issue is related with the ejected CRA. Once ejected the webpack config cannot be found.\nThe solution is simple: add a styleguidist config file styleguide.config.js with the following content:\njs\n// Indicate to Styleguidist where to find the webpack config file.\nmodule.exports = {\n  webpackConfig(env) {\n    if (env === 'development') {\n      return require('./config/webpack.config.dev.js');\n    }\n    return require('./config/webpack.config.prod.js');\n  }\n}. I will add a demo today.\nThanks.. @sapegin I added a link to a fork in the To reproduce section of my initial entry.. @sapegin This is my very first PR and I am working on Windows. I have a hard time to complete the PR for two reasons:\n1. When I run npm run test I am getting many errors that has nothing to do with my modifications. I cloned the master branch in a different repository and I still get the same errors. Do you know if tests (npm run test) are successful?\n2. Each time I run npm run test or npm start I am getting 400+ changes in git. But there is no apparent differences. I suspect a crlf/lf issue. But I do not know how to solve this. I am using VSCode as IDE. I think this is the cause of the final differences (since my last commit) that you see in my package-lock.json.\nThanks.. As a note I found out that many tests based on snapshots returns error because of path delimiter, ex:\n-       \"filepath\": \"components/Price/Price.js\",\n+       \"filepath\": \"components\\\\Price\\\\Price.js\",\nAgain I just do not know how to fix this on my VSCode Windows setup.. Well I investigate the issue with colleagues and we cannot find any solution if we want to store any path in the snapshot. For example, the processComponent() should return an object for section with content stores an object in the snapshot and this object is composed of multiple paths. The test will always fails if it runs on a platform (Windows or Linux) and the snapshot has been done on a different one. I see only two solutions:\n1. remove the path from the snapshot,\n2. create your own snapshot comparison mechanism where you load the snapshot manually and convert path before doing comparison. Maybe the .toMatchSnapshot (propertyMatcher)[https://jestjs.io/docs/en/snapshot-testing#property-matchers] may do the trick.\nThis being said. \nUnfortunately I cannot run tests on my system so I cannot fix the issue of missing snapshot (npx jest -u).\nI fixed the extra path.join in config.js and pushed the commit.\nI fixed the package-lock.json.\nI squashed the commits.\nThank you for giving me a chance to work on my first PR :). . I will remove it.. ",
    "jsg2021": "I was imagining something like this:\njsx\n/**\n * Regular documentation here...\n * \n *js example\n * \n * *\n * @VariousTagsHere\n */\nexport default class Component extends React.Component {\n...\n}\nThe docs for @example show it pointing to another file. Which is fine, but this feature request is about inlining the example with the component. \ud83d\ude04 . I haven't looked into it. I've been happy with the external example file so far. . ",
    "jgillick": "@jsg2021 I'm also interested in this and have started looking into how to update the code to make this work (I'm stuck at getting around the loaders). Are you trying to do the same? We could collaborate. . The challenge I'm running into is to run the source code through the example-loader and have the result of that rendered in the examples. \nDoing this, the example-loader function returns a string which is expected to be processed by require. So now I need to figure out how to appropriately execute this code. When I try to just run it through an eval, it throws the exception this.props.evalInContext is not a function.\nI know that none of this is very helpful without seeing the code I'm talking about. After playing with it a little more I'll commit what I have to my forked version. If anyone has any pointers, please let me know.. If you're interested, I've gotten over the hurdle. Here's the rough version of the update, so far (I still need to clean it up and add unit tests and such): \nhttps://github.com/styleguidist/react-styleguidist/pull/1171/files. @avionbg Thanks for the feedback. The code is still just a working prototype. I'll give your suggestions a try this week.\nAlso, if anyone wants to assist me with this feature enhancement, I would love the help.. Hi @NigelGreenway. I'd like to fix the broken tests and adjust some of the formattings to be a little more flexible. I've been incredibly busy for the last couple months, but plan to pick this back up in January.. ",
    "tomi": "This would be very beneficial for me as well.. ",
    "avionbg": "@jgillick your code breaks styleguidist markdown formatting, for example ```jsx static / noeditor doesn't work any more. Beside that there is no simple way to just show example code without rendering it in react (one could make an example like ```html, but that has another side-effect, examples are displayed twice. Only solution to this issues is to add an flag to the examples, something like ```jsx render.. @jgillick if you need any help or feedback just let me know, I like the idea of inline examples.. Yep this is it, at least from first impression, if I find any issues I'll let you know.. ",
    "mnaughto": "Is this something like what you had in mind @avionbg? I'm not sure if that was the right way to handle the case where there isn't a proper modifier.  \nI've been working with @jgillick on this, but we haven't had much time for it due to higher priorities. . ",
    "benwiley4000": "Hm, actually it seems like this works, haha.. Hmm, so my original problem turned out to be that I just wasn't overriding components correctly, but contrary to what I said earlier, the flagged issue isn't fixed. The note in the docs is correct.\nI was able to hack around this using some global variables. But it would be great if there could be first class support for this sort of thing.. Aha - I guess the isolation is intentional. Nevermind then! :). Apparently this isn't directly related to imports. Anything at all besides React elements (such as code comments) will cause the error as well.\njsx\n// comment\n<div>Hello</div>\n<div>World</div>\nSyntaxError: Adjacent JSX elements must be wrapped in an enclosing tag (3:0)\n1 : // comment\n2 : <div>Hello</div>\n3 : <div>World</div>\n    ^. Cool sounds good!. ",
    "leahprin": "@jkarttunen I would love to see something like this. It's exactly the issue we're facing at the moment. . ",
    "NigelGreenway": "@jgillick this looks like a great idea, I just wondered if there are any updates on this and when it might merged? \ud83d\ude03 . @dinukadesilva if your add your HTML to a markdown file as the following:\njs <- START your code block as a JS snippet\n\n1\n\n<- END your code block. Also, you can add sections to your styleguide.config.js like so:\n\n. ",
    "matthew-dean": "Confirmed (by installing different versions of Styleguidist) that Styleguidist started failing with versions of react-docgen other than beta12 at react-styleguidist version 7.1. Styleguidist 7.0.x (checked with 7.0.20) does not have this issue.. @sapegin Well, maybe. But Styleguidist 7.0 didn't have this issue. So, yes, it may be a react-docgen bug, but 7.0 didn't trigger it, or Styleguidist is calling something in react-docgen which is causing an error, but only for those other versions. So that could be something to look at; what changed after 7.0. Because, considering react-docgen is on RC1, it's likely that this will continue to be an issue and Styleguidist may never be able to upgrade without addressing or circumventing the issue as it did before 7.1.. ",
    "macintoshhelper": "@danez Hi, thanks! react-docgen@3.0.0-rc.2 fixes the issue for me, have opened a PR to update to it.. ",
    "arizonatribe": "I ran into this tonight as well. I'm using react-styleguidist version 8.0.6 in a multi-package repo. One of the adjacent packages has a custom build script that uses and installs react-docgen directly, but an older version (2.2.1), so I tried to upgrade the version it's requiring.\nEven though react-styleguidist is asking for that 3.0.0-rc.2 (and I confirmed it's installed in the node_modules/react-styleguidist/node_modules/react-docgen directory) it seems it's falling through to the one at the root of the repo (which is version 2.2.1). Before following the advice on this thread I noticed that react-docgen published version 3.0.0 several days ago, so I tried that one, but the error still persisted.\nHowever when I rolled it back down to the 3.0.0-rc.2 it worked \ud83c\udf8a , just as advised on this thread. So, it seems to me that the newly published version 3.0.0 of react-docgen is a regression, and I've since locked us in at version 3.0.0-rc.2 to fix the problem. I know it's a react-docgen issue, but just a heads-up.\nI've run into an issue like this before where our build tools were installing version 5 of ESLint, but whenever installed into an app that asked for version 4 of ESLint, it caused our tool to use that version instead of the one we know works with our tool. To solve it I made a function that loops through several possible paths and wraps require.resolve in try / catch that continues looping until it resolves a path or runs out of paths to try (ie, look for the nearby ESlint require.resolve(path.resolve(__dirname, '../node_modules/eslint')) before falling back to a require.resolve('eslint')).\nJust a thought to try, in case you see more issues open/re-opened for problems with external dependencies.\nThanks. I'm gonna pass on that one. . Actually one minor change to that recommendation. I noticed the constructor for the StyleguidistError expects (message, extra, anchor) -> *, but the way it's being used in the scripts/config.js might be expecting (fallback, message, extra) -> *?\nEditing the node_modules/react-styleguidist/lib/scripts/config.js locally like this seemed to work best:\njs\nif (exception instanceof StyleguidistError) {\n  throw new StyleguidistError(\n    exception.toString() || 'Something is wrong with your style guide config',\n    exception.extra\n  );\n}. Yeah, but I can't seem to find 9.0.1. When I fork and pull the latest master it's still at 9.0.0. I can go ahead and bump to 9.0.2 and submit that as the PR. Okay great; submitted the PR for those two. Okay should be all set now. All your tests passed; what do you mean?. I just went through all the source code and I can't even find anywhere where you are passing a link/anchor into a new StyleguidistError.. I think this is a situation where it's better for you to decide which route to take, as I'm just guessing at this point. And either direction has minor drawbacks. I'm new to this codebase and it's likely I just don't have the context necessary to understand which approaches were taken intentionally and which were not.\nWhen the line of code in the src/scripts/config.js is creating a new StyleguidistError from the one is caught in the sanitizeConfig() the params are passed in out-of-order. The hard-coded \"Something is wrong with your style guide config\" is being used as the new .message, the original .message is being mapped to the new .extra and the original .extra is being mapped to the new .anchor.\nThis doesn't seem intentional to me to do this:\n1) throw StyleguidistError (in sanitizeConfig())\n2) catch it downstream (in getConfig())\n3) create another StyleguidistError from it, but shuffle the message and extra from the original and lose the .anchor.\nHowever it seems there are at least four unit tests that are dependent on that approach. They are expecting the message from the original StyleguidistError thrown in sanitizeConfig() to be on the .extra prop. \nI believe these are the options to take:\nOption 1 (current version of the code): you lose the anchor of the original exception and take its message and extra and shuffle them onto the extra and anchor (respectively) of the new StyleguidistError. Unfortunately, unless the user knows about .extra all they'll see is \"Something is wrong with your style guide config\", which may lead to more Github issues being opened needlessly:\njs\nif (exception instanceof StyleguidistError) {\n  throw new StyleguidistError(\n    'Something is wrong with your style guide config',\n    exception.message,\n    exception.extra\n  );\n}\nOption 2: No more hard-coded \"Something is wrong with your style guide config\", but the message, extra, and anchor from the original error are mapped correctly to the new one), and the four unit tests have to be changed so they stop looking for the original \"message\" (thrown inside of sanitizeConfig()) on the .extra prop:\njs\nif (exception instanceof StyleguidistError) {\n  throw new StyleguidistError(\n    exception.message || 'Something is wrong with your style guide config',\n    exception.extra,\n    exception.anchor\n  );\n}\nOption 3: Keep the \"Something is wrong with your style guide config\" but shuffle the original message onto the extra prop and  lose the extra of the original error but keep the anchor:\njs\nif (exception instanceof StyleguidistError) {\n  throw new StyleguidistError(\n    'Something is wrong with your style guide config',\n    exception.message,\n    exception.anchor\n  );\n}\nI ended up going with Option 2, and pushed those changes. Let me know if that will work for you.\nThanks.. You asked about the anchor/link, but the fix you did on your own doesn't pass that through to the constructor of the next error. Does that make sense?. ",
    "ammmze": "\nThis only appears to be an issue with webpack@4.22.0. Using webpack@4.21.0 seems to work.\n\nPinning webpack back to 4.21.0 also worked for me. (Also had to pin buble to 0.19.4...currently 0.19.5 is causing a different issue). ",
    "yorthehunter": "Pinning markdown-to-jsx to 6.8.2 worked for me. \nFYI, here's what it looks like in my package.json (I'm using Yarn):\n\"resolutions\": {\n    \"markdown-to-jsx\": \"6.8.2\"\n  },. ",
    "boxcee": "You have duplicated the issue.. ",
    "philiiiiiipp": "Sorry, I think this was during the GitHub outage madness.\nClosing this in favour of #1181 . ",
    "sajadweb": "@sapegin why?. ",
    "cj": "@jkarttunen @sapegin according to this pull request https://github.com/styleguidist/react-styleguidist/pull/1195 it should be highlighting the sidebar.  Did this merged pull request get removed at some point?. ",
    "tomasruud": "Yes, you can check out my project here https://github.com/tomasruud/downcloud. ~~I would assume the webpackConfig and dangerouslyUpdateWebpackConfig options pretty much does the same thing when you're only changing the caching option? webpackConfig is probably safer to use though, but in CRA you need to use the dangerouslyUpdateWebpackConfig.~~ \ndangerouslyUpdateWebpackConfig is needed with CRA.. > Is the dangerouslyUpdateWebpackConfig workaround still working for you guys? @tomasruud I checked out your downcloud repo and can't get HMR working there. However @malyzeli I was able to get HMR working with your non-CRA repo.\n\nIm on CRA 2.1.1 with styleguidist 8.0.6 and it does not seem to work for me either.\nThe HMR network requests do not even fire in my case, so I think it could be different problem than just the caching.\nIm seeing the same behavior in the styleguidist v9 beta branch as well\n\n@seanlaff I've not been working on the project that much lately, so I don't know to be honest. But I would assume the issue is still there.\n\n@seanlaff I'm sorry, never used CRA so I can't help you with that..\n@tomasruud Since maintainers of this repo ignore request to reopen #1206, would you mind removing CRA from name of this issue? I believe claiming explicitly that HMR does not work in general (which is apparently true) could attract more attention and hopefully got it fixed sooner.\nI'm surprised that not many people noticed.. Maybe experienced developers able to fix it are not using CRA? :D\n\n@malyzeli If this was a problem for all users of Styleguidist, more people would probably have noticed. Which in turn would have produced more activity on this issue and yours as well. I would assume in your case, that it's a rare edge case that by chance matches my CRA issue.\n\nI've found the problem. Styleguidist HMR is broken by webpack-dev-server > 3.1.10 for both CRA and non-CRA rrepos.\nThe reason it appeared to be working in @malyzeli repo was because their yarn.lock had webpack-dev-server pinned 3.1.10, however if you install styleguidist in a fresh repo, you'll get 3.1.12 since styleguidist specifies ^3.1.10.\n\nIn my project webpack-dev-server is locked at 3.1.9 for react-scripts, and 3.1.10 for styleguidist, so this might be true. Were you able to get it to work by updaing webpack-dev-server @seanlaff ?. ",
    "malyzeli": "Hello, \nHMR really does not work by default, and actually it is not related to CRA, the same thing happens in clean project as well. \nAt first I thought it is caused by stateless functional components syntax, because I was sure that I used Styleguidist year ago with class components and it did work well. So I tested all possible component definitions and saw it is not related to actual syntax.\nI created minimal example project so anybody can look further into it. \n~~I can also confirm that setting dangerouslyUpdateWebpackConfig in styleguide config file as noted by @tomasruud enables hot reloading.~~\nEdit: Seems it is caused by some webpack caching bug. HMR works again when cache: false option is added to webpackConfig section. Actualy there is no need to use dangerouslyUpdateWebpackConfig. I'm not sure what are the consequences of that. Thanks to @tomasruud for pointing me in right direction anyway.\nExample project link: https://github.com/malyzeli/styleguidist-issue-1188-example. This problem is not related to CRA, please consider reopening #1206 and mark this issue as duplicate instead. \nYou can read the argumentation in my last comment. @seanlaff I'm sorry, never used CRA so I can't help you with that..\n@tomasruud Since maintainers of this repo ignore request to reopen #1206, would you mind removing CRA from name of this issue? I believe claiming explicitly that HMR does not work in general (which is apparently true) could attract more attention and hopefully got it fixed sooner.\nI'm surprised that not many people noticed.. Maybe experienced developers able to fix it are not using CRA? :D. @sapegin Honestly, I would argue that this is the real issue, while #1188 should be labeled as duplicate. My reasoning is that description of #1188 suggests that the problem affects Create React App projects only, while the problem is much more essential because hot module reloading does not work by default as I reported here (while the official documentation says Styleguidist provides live development environment).\nI believe more developers would look into that if stated explicitly that HMR is broken in general, because this affects everybody, not just CRA users. Seems important to me.\nAlso when I found that I can't make HMR working, I was trying to google some info about the topic. The only recent thing I found was issue #1188 which I didn't even open at first, because it says about CRA, which was not my case. If it was named \"HMR does not work\" I would read it immediately and it would help me to fix the project with workaround (and also to stop feeling like an idiot for not being able to set up Styleguidist with HMR even after 4 hours of fiddling with various configurations of Webpack and Babel).\nI would also like to help solving the issue, but my knowledge of Webpack and Styleguidist internals is really minimal, I'm not even sure what really changes with disabling caching and what impact it may have on Styleguidist working. I did what I can - created minimal project, a playground for somebody who really knows what is he doing. :-). ",
    "seanlaff": "Is the dangerouslyUpdateWebpackConfig workaround still working for you guys? @tomasruud I checked out your downcloud repo and can't get HMR working there. However @malyzeli I was able to get HMR working with your non-CRA repo.\nIm on CRA 2.1.1 with styleguidist 8.0.6 and it does not seem to work for me either. \nThe HMR network requests do not even fire in my case, so I think it could be different problem than just the caching.\nIm seeing the same behavior in the styleguidist v9 beta branch as well. @malyzeli Hot Reload works as I'd  expect in your https://github.com/malyzeli/styleguidist-issue-1188-example repo (I'm on mac mojave), so I think the designation of CRA is correct for this issue.\nI dug in some more and realized that as soon as the styleguidist webpage loads in a CRA repo, this message is output to the web console \n```\nThe development server has disconnected.\nRefresh the page if necessary.\nwebpackHotDevClient.js:65\n```\nwhich explains why I don't see updates. Not sure what  causes the disconnect yet.. I think I've found the problem. It would appear that Styleguidist HMR is broken by webpack-dev-server > 3.1.10 for both CRA and non-CRA rrepos.\nThe reason it appeared to be working in @malyzeli repo was because their yarn.lock had webpack-dev-server pinned 3.1.10, however if you install styleguidist in a fresh repo, you'll get 3.1.12 since styleguidist specifies ^3.1.10.. Looking at the updates to dev-server, I suspect this is might be what caused it https://github.com/webpack/webpack-dev-server/pull/1603 ... although that MR would lead me to believe I'd see invalid host errors, so perhaps it could be something else.. Here's my workaround. It works by short-circuiting the header check that webpack-dev-server added. This poses a security risk.\nstyleguide.config.js\njs\nmodule.exports = {\n  dangerouslyUpdateWebpackConfig(config) {\n    if (!config.devServer) {\n      config.devServer = {};\n    }\n    config.devServer.disableHostCheck = true;\n    return config;\n  }\n};\nThis leads me to believe https://github.com/webpack/webpack-dev-server/pull/1603 is in-fact the root cause, but I still don't have a good explanation of why we don't see the invalid host errors.. ",
    "dougmacknz": "I've managed to reproduce this with the basic example, but changes to the make-webpack-config.js file don't seem to have any effect (so removing the trimWhitespace: true doesn't fix it)- what am I missing? \ud83e\udd14 . I could do a PR for this feature. Presumably we'll just do a new styleguide.config var that allows you to remove the title from all pages?. I'll take this on as a first issue, will let you know how I go :). Thanks for the review! Should all be fixed up now.. Alright, I've replaced out some of the other selectors with new test ids as well, hope you don't mind.\nA couple of the decisions I made, with the reasoning, let me know if there's anything you disagree with:\n- I've used data-testid rather than data-cy\n    - It's library agnostic, in case we want to use it with another library in the future.\n    - It's quick and easy to understand its purpose (some people might not know what cy is)\n    - It's one of the recommended names by Cypress and also used in https://github.com/kentcdodds/dom-testing-library FWIW\n* I've made testid's unique (except for my last commit where I don't have some data needed to make it unique) eg. data-testid=\"Button-examples\" & data-testid=\"CounterButton-examples\" rather than a generic data-testid=\"component-examples\"\n    - I didn't see any documentation around best practice for this, but I'm guessing since it's called an ID it should probably be unique.\n    - We may want to target a particular element in the future- in that case it would be best to have it unique from the start.\n    - On the downside this does make selecting a bit more flaky (eg [data-testid$=\"-container\"]) rather than being able to use the exact string.\nSince you last saw this PR I've also combined tests/assertions that relied on state from the previous test into a single test. This was after reading further down on the Best Practices document - https://docs.cypress.io/guides/references/best-practices.html#Having-tests-rely-on-the-state-of-previous-tests. Oops, the whole purpose of using . I've also removed the spaces from the em dash below.. I've added an ID to this element, however I think it would be better to follow the recommended best practice in the docs and start using data-* attributes instead. It would have the benefit of not having to worry about creating unique IDs based on the component name as well. Thoughts?. Is there an easy way we can get the example index from here? I was able to do something hacky by using toolbar.props.props.example, but it's obviously not ideal and also blew up a test.. ",
    "MariusMeiners": "you can recreate this behaviour by forking my template and removing the .babelrc file. @sapegin why does it then not work when deleting the .babelrc file ? Did you try and reproduce the problem ?. @sapegin i would appreciate it if you could explain that in a little more detail. I felt like i followed the instructions on the website 100% and it still didnt work. What did i do differently and where did i require the babel preset in my code ?. do you mean when i use any es6 i have to use the preset for babel or what do you mean exactly ? i thought your webpack config does that automatically by getting babel from webpack-blocks. Thanks for clarifying that ! I updated the readme a little but im not sure the wording is optimal. Maybe you can take a look at it and change it to indicate that in order to use jsx and other features configuring the toolchain is mandatory. You can close the PR if you want to :). moving the discussion over here. I dont think the env preset is actually mandatory, is it ? also the method of using webpack-blocks in your styleguide.config.js actually works. At least for me i dont actually have to create a webpack.config.js file.. okay i guess then this should work as a description :) certainly more clear than before. @sapegin i think in the new webpack version the syntax is:\njs\n  module: {\n    rules: [\n      { test: /\\.jsx?$/, exclude: /node_modules/, loader: 'babel-loader' },\n    ]\n  }\nso rules instead of loaders ?. ",
    "realmunk": "We are experiencing the same error.. ",
    "rfbotto": "Yes, you are right, completely overlooked the unnecessary calculation inside of the loop. Also, updated the code to have the selected item be bold instead of changing the background color.  Think it might be better like this too.\n\n. ",
    "rasheedhamdawi": "Done, thanks. ",
    "theeheng": "i'm having the same issue today when i try to run the demo . ",
    "chrisbobbe": "I've encountered this problem when using /babel-plugin-transform-object-rest-spread (an older version of @babel/plugin-proposal-object-rest-spread), which is required by babel-preset-react-native.\nI was able to fix it by removing react-native from my babel presets and adding the plugin \"@babel/plugin-proposal-object-rest-spread\". Without the react-native preset, you may need \"@babel/preset-react\" (I added it but I'm only guessing that it's necessary).. ",
    "hainessss": "Answer from docs Each example has its own state that you can access as state variable and change with setState() function. Default state is {} and can be set with initialState.. ",
    "creaux": "Accidentally opened as bug. As I don't know if it is bug I will open first some support with dev.. https://github.com/styleguidist/react-styleguidist/issues/1209. Resolution in my case:\nconfig item target of webpack config has to contain value web in case you are extending webpack config using your own.\nI don't do dangerouslyUpdateWebpackConfig but using our own config using webpackConfig. I would expect that value is secured by Styleguidist.. ",
    "ryanmitts": "Would a package like this work?\nhttps://github.com/estools/estraverse. ",
    "KristoferMyhre": "Yes, i am aware that the docs explain how to make a development build. But for me it is not working properly. When I do as it is written in the docs, it still makes a production build, no a development build.\nAm I misunderstanding something here?\n. I know it is production build because in you webpack config you have the following code:\n```\nmodule.exports = function(config, env) {\n process.env.NODE_ENV = process.env.NODE_ENV || env;\nconst isProd = env === 'production';\n```\nenv is always 'production', not matter what I do. Which always makes this a production build.\nWhat problem you're trying to solve?\nstyleguidist server doesn't work for me, because of issue #1194 . Therefore I use http-server to serve my build. I dont want to serve a production build, but a development build. . ",
    "michaeltrilford": "Perfect, thanks for the tip \ud83d\ude02\nGet Outlook for iOShttps://aka.ms/o0ukef\n\nFrom: Artem Sapegin notifications@github.com\nSent: Thursday, November 22, 2018 9:55 pm\nTo: styleguidist/react-styleguidist\nCc: Mike Trilford; Author\nSubject: Re: [styleguidist/react-styleguidist] Secondary navigation for the main content view. (#1214)\nI guess it's possible if you implement it for your style guide using custom components. I don't think this should be supported out of the box, because these aren't headings but just text paragraphs and they can be quite long.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/styleguidist/react-styleguidist/issues/1214#issuecomment-440992747, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ACXlOwewBumrPqlN9K03lEtGW6j7G4APks5uxoKigaJpZM4YvAnl.\n\nThis email and any attachment are confidential. If you are not the intended recipient, please notify MYOB by reply email and delete this email. Please note that you must not access or use this email or any information in it. MYOB accepts no liability for viruses in this email or in any attachment to it.\n. ",
    "MeghaMaheshwari": "I already have this list in the file react-styleguidist/src/scripts/utils/mergeWebpackConfig.js  and yet I am getting this issue.\nWhen i run npx styleguidist build , it points to another location\nnode_modules/react-scripts/config/webpack.config.dev.js .\nContents of this file is\n`\n'use strict';\nconst autoprefixer = require('autoprefixer');\nconst path = require('path');\nconst webpack = require('webpack');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\nconst WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');\nconst eslintFormatter = require('react-dev-utils/eslintFormatter');\nconst ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\nconst getClientEnvironment = require('./env');\nconst paths = require('./paths');\n// Webpack uses publicPath to determine where the app is being served from.\n// In development, we always serve from the root. This makes config easier.\nconst publicPath = '/';\n// publicUrl is just like publicPath, but we will provide it to our app\n// as %PUBLIC_URL% in index.html and process.env.PUBLIC_URL in JavaScript.\n// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.\nconst publicUrl = '';\n// Get environment variables to inject into our app.\nconst env = getClientEnvironment(publicUrl);\n// This is the development configuration.\n// It is focused on developer experience and fast rebuilds.\n// The production configuration is different and lives in a separate file.\nmodule.exports = {\n  // You may want 'eval' instead if you prefer to see the compiled output in DevTools.\n  // See the discussion in https://github.com/facebookincubator/create-react-app/issues/343.\n  devtool: 'cheap-module-source-map',\n  // These are the \"entry points\" to our application.\n  // This means they will be the \"root\" imports that are included in JS bundle.\n  // The first two entry points enable \"hot\" CSS and auto-refreshes for JS.\n  entry: [\n    // We ship a few polyfills by default:\n    require.resolve('./polyfills'),\n    // Include an alternative client for WebpackDevServer. A client's job is to\n    // connect to WebpackDevServer by a socket and get notified about changes.\n    // When you save a file, the client will either apply hot updates (in case\n    // of CSS changes), or refresh the page (in case of JS changes). When you\n    // make a syntax error, this client will display a syntax error overlay.\n    // Note: instead of the default WebpackDevServer client, we use a custom one\n    // to bring better experience for Create React App users. You can replace\n    // the line below with these two lines if you prefer the stock client:\n    // require.resolve('webpack-dev-server/client') + '?/',\n    // require.resolve('webpack/hot/dev-server'),\n    require.resolve('react-dev-utils/webpackHotDevClient'),\n    // Finally, this is your app's code:\n    paths.appIndexJs,\n    // We include the app code last so that if there is a runtime error during\n    // initialization, it doesn't blow up the WebpackDevServer client, and\n    // changing JS code would still trigger a refresh.\n  ],\n  output: {\n    // Add / filename / comments to generated require()s in the output.\n    pathinfo: true,\n    // This does not produce a real file. It's just the virtual path that is\n    // served by WebpackDevServer in development. This is the JS bundle\n    // containing code from all our entry points, and the Webpack runtime.\n    filename: 'static/js/bundle.js',\n    // There are also additional JS chunk files if you use code splitting.\n    chunkFilename: 'static/js/[name].chunk.js',\n    // This is the URL that app is served from. We use \"/\" in development.\n    publicPath: publicPath,\n    // Point sourcemap entries to original disk location (format as URL on Windows)\n    devtoolModuleFilenameTemplate: info =>\n      path.resolve(info.absoluteResourcePath).replace(/\\/g, '/'),\n  },\n  resolve: {\n    // This allows you to set a fallback for where Webpack should look for modules.\n    // We placed these paths second because we want node_modules to \"win\"\n    // if there are any conflicts. This matches Node resolution mechanism.\n    // https://github.com/facebookincubator/create-react-app/issues/253\n    modules: ['node_modules', paths.appNodeModules].concat(\n      // It is guaranteed to exist because we tweak it in env.js\n      process.env.NODE_PATH.split(path.delimiter).filter(Boolean)\n    ),\n    // These are the reasonable defaults supported by the Node ecosystem.\n    // We also include JSX as a common component filename extension to support\n    // some tools, although we do not recommend using it, see:\n    // https://github.com/facebookincubator/create-react-app/issues/290\n    // web extension prefixes have been added for better support\n    // for React Native Web.\n    extensions: ['.web.js', '.mjs', '.js', '.json', '.web.jsx', '.jsx'],\n    alias: {\n      // @remove-on-eject-begin\n      // Resolve Babel runtime relative to react-scripts.\n      // It usually still works on npm 3 without this but it would be\n      // unfortunate to rely on, as react-scripts could be symlinked,\n      // and thus babel-runtime might not be resolvable from the source.\n      'babel-runtime': path.dirname(\n        require.resolve('babel-runtime/package.json')\n      ),\n      // @remove-on-eject-end\n      // Support React Native Web\n      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n      'react-native': 'react-native-web',\n    },\n    plugins: [\n      // Prevents users from importing files from outside of src/ (or node_modules/).\n      // This often causes confusion because we only process files within src/ with babel.\n      // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\n      // please link the files into your node_modules/ and let module-resolution kick in.\n      // Make sure your source files are compiled, as they will not be processed in any way.\n      new ModuleScopePlugin(paths.appSrc, [paths.appPackageJson]),\n    ],\n  },\n  module: {\n    strictExportPresence: true,\n    rules: [\n      // TODO: Disable require.ensure as it's not a standard language feature.\n      // We are waiting for https://github.com/facebookincubator/create-react-app/issues/2176.\n      // { parser: { requireEnsure: false } },\n  // First, run the linter.\n  // It's important to do this before Babel processes the JS.\n  {\n    test: /\\.(js|jsx|mjs)$/,\n    enforce: 'pre',\n    use: [\n      {\n        options: {\n          formatter: eslintFormatter,\n          eslintPath: require.resolve('eslint'),\n          // @remove-on-eject-begin\n          baseConfig: {\n            extends: [require.resolve('eslint-config-react-app')],\n          },\n          ignore: false,\n          useEslintrc: false,\n          // @remove-on-eject-end\n        },\n        loader: require.resolve('eslint-loader'),\n      },\n    ],\n    include: paths.appSrc,\n  },\n  {\n    // \"oneOf\" will traverse all following loaders until one will\n    // match the requirements. When no loader matches it will fall\n    // back to the \"file\" loader at the end of the loader list.\n    oneOf: [\n      // \"url\" loader works like \"file\" loader except that it embeds assets\n      // smaller than specified limit in bytes as data URLs to avoid requests.\n      // A missing `test` is equivalent to a match.\n      {\n        test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n        loader: require.resolve('url-loader'),\n        options: {\n          limit: 10000,\n          name: 'static/media/[name].[hash:8].[ext]',\n        },\n      },\n      // Process JS with Babel.\n      {\n        test: /\\.(js|jsx|mjs)$/,\n        include: paths.appSrc,\n        loader: require.resolve('babel-loader'),\n        options: {\n          // @remove-on-eject-begin\n          babelrc: false,\n          presets: [require.resolve('babel-preset-react-app')],\n          // @remove-on-eject-end\n          // This is a feature of `babel-loader` for webpack (not Babel itself).\n          // It enables caching results in ./node_modules/.cache/babel-loader/\n          // directory for faster rebuilds.\n          cacheDirectory: true,\n        },\n      },\n      // \"postcss\" loader applies autoprefixer to our CSS.\n      // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n      // \"style\" loader turns CSS into JS modules that inject <style> tags.\n      // In production, we use a plugin to extract that CSS to a file, but\n      // in development \"style\" loader enables hot editing of CSS.\n      {\n        test: /\\.css$/,\n        use: [\n          require.resolve('style-loader'),\n          {\n            loader: require.resolve('css-loader'),\n            options: {\n              importLoaders: 1,\n            },\n          },\n          {\n            loader: require.resolve('postcss-loader'),\n            options: {\n              // Necessary for external CSS imports to work\n              // https://github.com/facebookincubator/create-react-app/issues/2677\n              ident: 'postcss',\n              plugins: () => [\n                require('postcss-flexbugs-fixes'),\n                autoprefixer({\n                  browsers: [\n                    '>1%',\n                    'last 4 versions',\n                    'Firefox ESR',\n                    'not ie < 9', // React doesn't support IE8 anyway\n                  ],\n                  flexbox: 'no-2009',\n                }),\n              ],\n            },\n          },\n        ],\n      },\n      // \"file\" loader makes sure those assets get served by WebpackDevServer.\n      // When you `import` an asset, you get its (virtual) filename.\n      // In production, they would get copied to the `build` folder.\n      // This loader doesn't use a \"test\" so it will catch all modules\n      // that fall through the other loaders.\n      {\n        // Exclude `js` files to keep \"css\" loader working as it injects\n        // its runtime that would otherwise processed through \"file\" loader.\n        // Also exclude `html` and `json` extensions so they get processed\n        // by webpacks internal loaders.\n        exclude: [/\\.(js|jsx|mjs)$/, /\\.html$/, /\\.json$/],\n        loader: require.resolve('file-loader'),\n        options: {\n          name: 'static/media/[name].[hash:8].[ext]',\n        },\n      },\n    ],\n  },\n  // ** STOP ** Are you adding a new loader?\n  // Make sure to add the new loader(s) before the \"file\" loader.\n],\n\n},\n  plugins: [\n    // Makes some environment variables available in index.html.\n    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\n    // \n    // In development, this will be an empty string.\n// Generates an `index.html` file with the <script> injected.\nnew HtmlWebpackPlugin({\n  inject: true,\n  template: paths.appHtml,\n}),\n\nnew InterpolateHtmlPlugin(env.raw),\n\n// Add module names to factory functions so they appear in browser profiler.\nnew webpack.NamedModulesPlugin(),\n// Makes some environment variables available to the JS code, for example:\n// if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.\nnew webpack.DefinePlugin(env.stringified),\n// This is necessary to emit hot updates (currently CSS only):\nnew webpack.HotModuleReplacementPlugin(),\n// Watcher doesn't work well if you mistype casing in a path so we use\n// a plugin that prints an error when you attempt to do this.\n// See https://github.com/facebookincubator/create-react-app/issues/240\nnew CaseSensitivePathsPlugin(),\n// If you require a missing module and then `npm install` it, you still have\n// to restart the development server for Webpack to discover it. This plugin\n// makes the discovery automatic so you don't have to restart.\n// See https://github.com/facebookincubator/create-react-app/issues/186\nnew WatchMissingNodeModulesPlugin(paths.appNodeModules),\n// Moment.js is an extremely popular library that bundles large locale files\n// by default due to how Webpack interprets its code. This is a practical\n// solution that requires the user to opt into importing specific locales.\n// https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n// You can remove this if you don't use Moment.js:\nnew webpack.IgnorePlugin(/^\\.\\/locale$/, /moment$/),\n\n],\n// Some libraries import Node modules but don't use them in the browser.\n  // Tell Webpack to provide empty mocks for them so importing them works.,\n  node: {\n    dgram: 'empty',\n    fs: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty',\n  },\n  // Turn off performance hints during development because we don't do any\n  // splitting or minification in interest of speed. These warnings become\n  // cumbersome.\n  performance: {\n    hints: false,\n  },\n};\n`\n. I have fixed the issue. It was because of the version of react. I was using react- 1.5 and upgrading it to react 2.0 solved the issue. ",
    "xsnakeex": "Hello!\nWhere should I replace the codes?. Hello! Where should I replace the codes? I could not understand and correct the mistake when I create a new project.\nThis error appears:\nnpm WARN deprecated kleur@2.0.2: Please upgrade to kleur@3 or migrate to 'ansi-colors' if you prefer the old syntax. Visit <https://github.com/lukeed/kleur/releases/tag/v3.0.0> for migration path(s).\nnpm ERR! code ENOGIT\nnpm ERR! Error while executing:\nnpm ERR! undefined ls-remote -h -t ssh://git@github.com/expo/react-native-maps.git\nnpm ERR!\nnpm ERR! undefined\nnpm ERR! No git binary found in $PATH\nnpm ERR!\nnpm ERR! Failed using git.\nnpm ERR! Please check if you have git installed and in your PATH.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\Cookie\\AppData\\Roaming\\npm-cache_logs\\2018-12-31T01_32_01_879Z-debug.log\n[23:32:01] Process exited with non-zero code: 1\n[23:32:01] Set EXPO_DEBUG=true in your env to view the stack trace.. ",
    "hastebrot": "@xsnakeex Your error message is not related to the kleur deprecation warning.\nnpm could not find the git binary in the PATH.\nnpm ERR! Please check if you have git installed and in your PATH.\nConsider the Git for Windows installer: https://gitforwindows.org/. ",
    "aldelank": "I decided it my self) \nHere is the answer https://stackoverflow.com/questions/44114436/the-create-react-app-imports-restriction-outside-of-src-directory#. ",
    "JelteF": "My point was that I don't know how to fix it. I was looking at the examples\nfor how to fix it in my own project. Als the basic example actually uses\n9.0.0-beta1, so afaik it should be up to date with the latest version.\nOn Sat, 15 Dec 2018, 14:36 Artem Sapegin <notifications@github.com wrote:\n\nExamples likely use the old version, feel free to send a pull request with\na fix.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/styleguidist/react-styleguidist/issues/1232#issuecomment-447569022,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABG8JolTOnFyBX0jPv4NAhTjHY5Gqpwiks5u5PrdgaJpZM4ZTvKI\n.\n. \n",
    "Sheparzo": "I\u2019ve tried basic example with beta 1, 2, and 3 and found that none of them work always showing the reported error above. The example code all looks right. Could this be a problem with the implementation? Has something caused a regression of this awesome feature?. ",
    "zhgbin0501": "I hava the same question, and  I don't know  how to solve this problem.\n\n. ",
    "mahmoud-zakria-sociomantic": "@zhgbin0501 Looks like there is only one solution for it at least for now which is creating your own components from scratch instead of importing them from external path.\nCheck this example https://github.com/everydayhero/constructicon/tree/master/source/components. ",
    "GraySmith00": "I was getting this problem when styleguidist was trying to import my test files. In my styleguide.config.js, I had my components as /button/*.js . I fixed it by explicitly naming the component files. . ",
    "ibrambe": "Okay, maybe landing page is the wrong word. The thing is, I don't want all my components rendered on the root of the components list. In your example, that's this page: https://component-driven.github.io/component-driven-development/styleguide/#/Components. @tung-eh, your fix works, unless when using TypeScript.\nWhen running yarn styleguide:build I get errors in *.jsx files like Module parse failed: The keyword 'interface' is reserved. Downgrading to react-scripts 2.1.1 fixes the build. . Similar issue here with v9.0.0:\nstyleguide.config.js\njs\nmodule.exports = {\n  moduleAliases: {\n    '@mycompany/react-components': path.resolve(__dirname, 'src/components')\n  }\n};\nAppBar.md\n` `jsx noeditor\nimport { Text } from '@mycompany/react-components';\n\n\n    Title\n  \n;\n`\n```\nError: \nError: import or require() statements can be added only by editing a Markdown example file: @mycompany/react-components\n. ",
    "cake-jnorman": "I gave the v9 beta4 a trial run today and found that the rendering is VERY slow on what I also call the 'landing page.' (the page that lists all examples, at the root of the built styleguidist site) As a FYI, v8.0.6 runs much faster @ibrambe.  I'm going to have to put off the v9 upgrade until this is resolved.  . ",
    "guyius": "Hey @sapegin !\nI started looking into this issue and found the root cause, Do you mind if I work on this?\nIt's going to be a first-time open source PR for me. . Okay so the issue lies in the fact that the ComponentsListRenderer sets the isSelectedItem const according to the hasHash function, which checks for indexof, Thus Nav returns true for routes like NavLink. I reproduced it by changing CounterButton to ButtonCounter for example and colliding with Button. \nIMO we can simplify this and check in ComponentsListRenderer for equality by comparing the 2 strings Instead of doing this: const isItemSelected = hasInHash(windowHash, href);\nWe can simply do this: const isItemSelected = windowHash === href;\nQuestions: 1. I prefer this simple logic to live in the ComponentsListRenderer seems to make sense for me, WDYT?\n2. All tests pass with this change, and I saw that all the tests for ComponentsListRenderer are snapshots, Which also missed this edge case in the first place. Should I add specific tests for this edge case or leave this as is with the snapshot tests only?. ",
    "oterral": "@sapegin The build passed before I add tests. I m not sure how unit tests can breaks integration tests.\nI need help on this.. Didn't know about .toMatchInlineSnapshot . Seems a good way to go.. yes. I fix. I meant Error. Exception doesn't exist ;) .  I force  to to go in the' try catch' to test the loading of the new webpack.config.. Fixed. Fixed. Fixed. already done : https://github.com/styleguidist/react-styleguidist/pull/1241/files#diff-247803435e192ad771c19314144c7ce2R14. Of course!. I would be happy :) but how ? can you give me a hint? I 'm not sure how to do.. Should I create a ShapeRender ?  or should I pass  classes property from the PropsRenderer to the Table renderer and then to rednerShape function ?. I didn't succeed to use dynamic padding, it always take the same for every component have a look to this commit.\nIf you have an idea.. ",
    "tung-eh": "I've met exactly the same problem with react-scripts v2.1.2, so I need to fix by adding webpackConfig to styleguide.config.js:\nmodule.exports = {\n  webpackConfig: require('./node_modules/react-scripts/config/webpack.config.js'),\n};\nHope it will be fix soon.. ",
    "melMass": "Thanks @tung-eh it can be shortened to the cleaner:\njs\nmodule.exports = { \n  webpackConfig: require( 'react-scripts/config/webpack.config' )\n}. ",
    "joeycozza": "The PR for a fix exists. https://github.com/styleguidist/react-styleguidist/pull/1241\n. ",
    "oakis": "Great!\nWill this patch be applied to version 8 as well? I had a lot of issues with the latest react-styleguidist due to some other packages.. ",
    "osbornm": "I'm running into this same problem.... ## TL:DR\nput the following add the following dangerouslyupdatewebpackconfig to your styleguide.config.js file\njs\ndangerouslyUpdateWebpackConfig(webpackConfig, env) {\n    webpackConfig.output = {\n        ...webpackConfig.output,\n        publicPath: process.env.PUBLIC_URL || ''\n    };\n    return webpackConfig;\n}\nRoot Cause\nOkay, I've tracked down the problem. With the newer version of create-react-app they use react-dev-utils and this is where the \"problem\" comes from. Some of the helper utils in that make some assumptions about the webpack config that are always true for their \"supported\" use cases. This particular problem comes from assuming there is a publicPath property, basically, they are not null checking because in there use cases this is autogenerated if not provided. \nStyleguidist does take the output webpack config from react-scripts/config/webpack.config.js and merge it will it's own. Doing addresses most of these types of issues but it expelicitly ignores the output section. \nFix\nThe fix for this is that styleguidist should include a publicPath property in the output section of the webpack config using process.env.PUBLIC_URL if present or \\ if not. I'm happy to submit a PR if @sapegin or similar are happy with this approach. \nWorkaround\nuntil a fix is in you can use the dangerousltUpdateWebpackConfig method to solve this. your styleguide.config.js will look something like \njs\nmodule.exports = {\n    webpackConfig: require('react-scripts/config/webpack.config.js'),\n    dangerouslyUpdateWebpackConfig(webpackConfig, env) {\n        webpackConfig.output = {\n            ...webpackConfig.output,\n            publicPath: process.env.PUBLIC_URL || ''\n        };\n        return webpackConfig;\n    }\n}\n. @sapegin I'll need to verify but create-react-app \"expects\" this pattern with its config so if you are using their webpack config you should be okay. I dug through all the code paths to figure out what publicPath was getting set to. That said if you needed to change to a different path you could do something like PUBLIC_PATH=/foo styleguide build in your package.json. That said styleguidist could also just offer a config option and then just default to / if nothing is provided. . I'm not suggesting a required option just the ability to add one if you need since it's dependent on the webpack config you are using. This way instead of having to use dangerouslyUpdateWebpackConfig you would just set an optional config called, I don't know, publicPath. If the user sets it then we use that otherwise set it to empty string. \nmodule.exports = {\n    webpackConfig: require('react-scripts/config/webpack.config.js'),\n    publicPath: 'styleguide/'\n}\nthen in make-webpack-config.js L37-L41 would become\noutput: {\n  path: config.styleguideDir,\n  filename: 'build/[name].bundle.js',\n  chunkFilename: 'build/[name].js',\n  publicPath: config.publicPath || ''\n},\n. It does not work out of the box with the latest versions of create-react-app you have to manaully write a webpack config and you cannot take advantage of the webpack config that ships with the app. it is perfectly acceptable if you do not want to support create-react-app. \nplease see  #1243 for the work around that allows you to point styleguidist at the webpack config that now ships with create-react-app. Doing this will allow you to run a development version but will not allow you to build aka the source of this bug. @simonedavico you can use my suggested workaround and then you wont be in DEV all the time. I have a fork of a fix that does this for folks. HOWEVER, @sapegin claims this is not an actually issue and has stoped responding to my comments. . ",
    "simonedavico": "I also have this issue, styleguidist server with the latest react-scripts runs ok, but styleguidist build produces the above error.\nI agree with @osbornm, as of today it does not work out of the box.. @lucifer1004 thank you, it works! Not sure what is the implication of always forcing the development config though.. @prjctnxt did you solve this? I am having the same issue.. ",
    "lucifer1004": "@simonedavico\nThe difference between styleguidist server and styleguidist build is the webpackEnv variable, which is development when using styleguidist server, and production when using styleguidist build.\nI have found another workaround, that is to set\nwebpackConfig: require('react-scripts/config/webpack.config')('development'),\nin styleguide.config.js.\nThis will force webpackEnv to be development, so that build can succeed.\nCurrently, I have not found any issues with this workaround. React Developer Tool does not give any warning on the generated pages.. @NoahFisher @tinaboyce @gsantiago \nAs a temporary workaround:\nIn styleguide.config.js\njs\nmodule.exports = {\n  propsParser: require('react-docgen').parse,\n  webpackConfig: require('react-scripts/config/webpack.config'),\n}\nFor TypeScript projects,\njs\nmodule.exports = {\n  propsParser: require('react-docgen-typescript').parse,\n  webpackConfig: require('react-scripts/config/webpack.config'),\n}. ",
    "lukeed": "Great, no problem! \ud83d\ude4c \nIf you switch to TS, both qss and clsx include their own typings. As of now, mri does not but I can probably work on it myself (tho I don't TS) or petition for help.\nIf you stick with flow, it looks like there's a flow-typed PR open for clsx definitions \ud83d\udcaa \nEither way, the typings/flow-type for mri will be the same as minimist (for your usage), and clsx would work perfectly with the classnames flow-types (for your usage, since not calling dedupe/whatever).\nIf you need/want something else from me, just lemme know~!. This multi-line business was prettier \u2013 sorry. ",
    "pwnn": "Seems like this is an issue with the LoadashWebpackPlugin.\nenable shorthands option solved this problem.. ",
    "lawwantsin": "That is disappointing.  Removing the HTML  around each piece syntax of the source is a better idea than just sending the raw code along as a string to the component?. ",
    "vforge": "Is there anything else I can provide in order to reproduce this bug?. ",
    "devonmitton": "I can confirm I'm seeing the same thing. I have a tooltip component that was firing mouseEnter twice when it should only happen once. Only happens when the component is in Styleguidist. Using the component in an app works as expected.\nI'm on Styleguidist 7.3.11. I'm in the process of upgrading to the latest version, and I'll follow-up once I've done that.. This is still an issue in 9.0.1. ",
    "mitsuruog": "Seems you need to add the top component part within the sections.\nit looks something like this.\n```\n{\n  \"ignore\": [\n    \"/tests/\",\n    \"/*.test.{js,jsx,ts,tsx}\",\n    \"/.spec.{js,jsx,ts,tsx}\",\n    \"/*.d.ts\"\n  ],\n  \"sections\": [\n    {\n      \"name\": \"Introduction\",\n      \"content\": \"docs/introduction.md\"\n    },\n    {\n      \"name\": \"Prerequisite\",\n      \"content\": \"docs/prerequisite.md\"\n    },\n    {\n      \"name\": \"UI Components\",  <----------------- Try add this!!\n      \"components\": \"src/components//[A-Z].js\"\n    },\n...\n}\n```\nUPDATE: content -> components. ahh, sorry. That is my mistake. I used components in sections.. ",
    "rajdee": "@dzimmerman902 Why did you close this issue. Have you solved this behavior ?. ",
    "dzimmerman902": "Hey,\nMy bad for not writing anything. I started the project over and for some reason it decided to work. I don't know for sure what I did differently. The only thing I can think of was switching the file name from babel.config.js to .babelrc.. ",
    "paibamboo": "I got the same problem. So for anyone that ends up here, in my case it was because webpack@4.29.x triggered an old peerDependency npm bug, downgrading to webpack@4.28.4 should fix or do one of the following listed here. ",
    "jonascript": "Looks like this has been fixed on master already. I guess it hasn't been pushed to the actual styelguide site yet. \nhttps://github.com/styleguidist/react-styleguidist/pull/1219/commits/9dc529ede000550d4a083d015a05464928130f2a. ",
    "tinaboyce": "I have the same issue. I am currently using create-react-app@2.1.4. ",
    "gsantiago": "Same issue here with CRA 2.15. ",
    "robertaird": "I'm having this same issue in version 9.0.0. I can't seem to import other components into examples, or anything from node_modules. The acorn error is thrown on all components, whether it renders successfully or not. Same thing if I try require instead of import. \n\n\n\nUpdate, it's hack-y but I got it to work by importing things twice in two different code blocks: \n\n. I tried tracking down what was happening (under the assumption that I was doing it wrong) but I didn't have much luck. By the time the example hits this file, none of the imported filepaths are present in the 'requireMap' object. It seems like Acorn is choking on the jsx the first time around, for some reason, causing the imports in the md files to be missed by webpack(?).  . ",
    "af": "I'm having the same issue as @robertaird when trying to upgrade from v8.0.6 to v9.0.0. Any import statement in my example (jsx inside a markdown file) results in this error being rendered in the browser:\nError: import or require() statements can be added only by editing a Markdown example file: $importName\n(here $importName is a placeholder for whatever I tried to import). There is also an error in the console whenever this happens, screenshot below with the full traceback:\n\nNote: His \"double import\" trick also works for me but I'm hoping not to need that, for obvious reasons :). ",
    "gwuhaolin": "I debug react-styleguidist@9.0.1 and find this issuse cause by acorn getAst fail in react-styleguidist/lib/loaders/utils/getImports.js:\n\nacorn think this position has SyntaxError: Unexpected token (6:14)\n\n. ",
    "sheldonHua": "Has anyone solve this problem? I'm also getting the error:\nError: import or require() statements can be added only by editing a Markdown example file:\nWhen I try to import other components into the markdown file.. ",
    "shenshanyoumu": "\nI have found a way without yarn:\nAdd to your dev dependencies:\ndiff\n+    \"acorn\": \"^6.0.2\",\n+    \"acorn-jsx\": \"^5.0.0\",\nRerun npm install and it should be working.\n\nit works for me,thanks. ",
    "amakely-da": "I have the exact same issue.. ",
    "rgrwkmn": "@sapegin what commands do you run to generate the build for NPM?. @valleywood are the prettier dependencies part of your project or of react-styleguidist? My bug reproduction repo does not have any other dependencies.. @valleywood can you clone my repro repo and try it? It should only take a minute to verify. Afaik nobody has confirmed that it also reproduces the bug for them:\nsh\ngit clone https://github.com/rgrwkmn/styleguidist-require-import-bug.git \\\n&& cd styleguidist-require-import-bug \\\n&& npm install \\\n&& npm run styleguidist. @valleywood thanks for trying! I updated the commands to use HTTPS instead of SSH, try that if you have a minute.. @timsnadden thanks for the report! That must be having some interaction with other configs you're using because I added it to the styleguidist webpackConfig in my repro repo and it didn't fix the issue there. I also upgraded to 9.0.3 and the outcome is the same.\nThere is a difference in the package served by NPM and the code from running npm compile in the cloned github repo. If @sapegin can give me some insight into the build process for NPM I'll take a look. I didn't see any info on that in the contributing docs. \nFor now my workaround is linking to my locally built version of styleguidist.. Thanks @timsnadden, I just tried the same and it worked with react-styleguidist version 9.0.3! I pushed the updated package-lock.json to my repo if anyone cares to try to find the root cause.. ",
    "valleywood": "I had the same issue and I can confirm that removing dependencies to prettier solved the problem, would be grateful if someone could provide a fix for it though.\nHere is the error that i get:\nError: import or require() statements can be added only by editing a Markdown example file. > @valleywood are the prettier dependencies part of your project or of react-styleguidist? My bug reproduction repo does not have any other dependencies.\nI had a reference to \"prettier-eslint-cli\": \"4.7.1\" in my project (not a dependency of react-styleguidist). I removed it, removed the node_modules folder and and re-run yarn and everything started working again.\nStrange that it doesn't work for you despite not having this dependency \ud83e\udd14 . @rgrwkmn Tried but got permission denied when cloning. @rgrwkmn Confirmed, I can repeat the error with your solution. I also see that your node_modules folder doesn't contain prettier-eslint-cli (a lot of other stuff though :)). ",
    "arqex": "Hey, any thoughts on this? Would you be interested in a PR with the changes?. ",
    "davidpaley": "Yes, me too. I have the error if I try to import any of the package.json dependencies except for react.. ",
    "agudulin": "JFYI this wikihow helped me: http://www.wikihow.com/Use-%22A%22-and-%22An%22-Correctly\n. ",
    "ben": "\ud83e\udd14 \n\nContent is too long to paste here, see https://...\n\nBetter?. Done!. ",
    "kellywu": "can we rename this?. ",
    "birjolaxew": "I believe it is because the tests fail with a console.clear is not a function if it isn't included.. ",
    "papasmurf17": "The requires field has been added since npm 5.1.0\n\nThis has a handful of fixes:\n- It introduces a new package-lock.json field, called requires, which tracks which modules a given module requires.\n- It fixes #16839 which was caused by not having this information available, particularly when git dependencies were involved.\n- It fixes #16866, allowing the package.json to trump the package-lock.json.\n- It stops calling fetch-package-metadata.addBundled on fake children (this was harmless, because bundleDependencies would never be set, but also pointless.)\n- npm ls now loads the shrinkwrap, which opens the door to showing a full tree of dependencies even when nothing is yet installed. (It doesn't do that yet though.)\n\nIf you want I'll remove the package-lock.json from the PR.. ",
    "thomastvedt": "fixed :)\n. ",
    "Zhangdroid": "Sorry, it's copy from redux part and I didn't look carefully, fixed :). fixed. ",
    "wkwiatek": "Ok, please take a look now and see if it's correct now. . I think we still need this here as we're passing it down to the component to check if we need to render a ribbon (just like hasSidebar).. ",
    "brianlovin": "The watercooler is live! Here you go: https://spectrum.chat/styleguidist?thread=6358bb3b-d2e0-4fef-88cb-7aa9d0c0933a. ",
    "joshuaprimrose": "That was my original thought as well, I was going to use https://www.npmjs.com/package/is-color but I wanted to avoid adding any additional dependencies.. ",
    "xdamman": "Yes it will.\nTwo alternatives:\n- One user made a lighter version of the post install: https://github.com/WebReflection/lightercollective\n- You can also remove the dependency altogether: https://github.com/remy/nodemon/blob/master/package.json#L42. ASCII art is hit or miss. Then remove that dependency altogether and use the native way like here: https://github.com/remy/nodemon/blob/master/package.json#L42 :-). ",
    "monkeyjabs": "It seems like this.context returns an empty object here. So oneComponentPerPage is always undefined. ",
    "derz": "Sure, yes.  :-) However it is the same as here: https://github.com/styleguidist/react-styleguidist/blob/b66bd10665bc134135a8affbc807a01f92417b6c/src/rsg-components/StyleGuide/StyleGuideRenderer.js#L40 - but I am not super into styled-components, so I don't really know what's the intended way to do it. Btw.: Thanks for your great work on it so far!. "
}