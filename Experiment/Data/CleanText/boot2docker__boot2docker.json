{
    "steeve": "Thank you :)\n. Merged, thank you :D\n. Much thanks\n. what does it enable ?\n. got it. @proppy, can you add more consoles ?\n. Also the docker group issue, i assume\n. Merged, thank you :)\n. Holy crap, that is awesome. I'll test it later today before merging, but much thanks, that rocks!\n. Btw, what are the partition specs for the disk image?\n. cc @proppy\n. First test show a 40% size reduction down to 23mb.\nHowever, kernel panics.\nBranch is at https://github.com/steeve/boot2docker/tree/xz_initrd\nChange is: https://github.com/steeve/boot2docker/blob/xz_initrd/rootfs/make_iso.sh#L33\n. Why not, or maybe a github mirror?\nBut I'm not really a fan of having something that specific\n\nOn 5 d\u00e9c. 2013, at 14:07, Omer Katz notifications@github.com wrote:\nMaybe Github releases can assist instead of using Git directly?\n\u2014\nReply to this email directly or view it on GitHub.\n. awesome, i was thinking about that this weekend (without my comp). thanks for that :)\n. I'll wait until dotcloud/docker#3217 is released.\n. well that was fast.\n\nokay @SvenDowideit i'm gonna review that first thing in the morning and let you know :)\nthank you, that's awesome :)\n. Sorry I was out of the country for new year's and somehow I forgot your PR.\nThanks :)\n. Well, now with the docker osx binary (and soon windows), there should be no need to have shared folders, since the docker client takes care of all that.\nit would really be just executing docker command on your host.\nsee the README on how to do that\n. @aheissenberger oh, that's a good one.\n@creack, care to respond? it seems we're going to need vbox additions :s\n. Maybe. Right now there is already VM detection in b2d anyway (not released yet).\nBut I do think NFS is the simplest way to move forward, and it does not introduces dependencies.\n. Scratch that, vbox additions are 61m.\nhttp://download.virtualbox.org/virtualbox/4.3.6/VBoxGuestAdditions_4.3.6.iso\nHowever, in #29 and #64 we should be able to enable folder sharing (for mounts).\n. Closing this ticket. If you want to fork b2d with vbox additions, no problem, we can include a link in the README.\n. Well, if all you want is shared folders, we're coming up with a solution using NFS on #64\n. Ah, are you building in a VM ? Try to add memory :s\n. Ah, are you building in a VM ? Try to add memory :s\n. hey @roylee17, can you change your code to use nproc instead of /proc/cpuinfo ?\n. hey @roylee17, can you change your code to use nproc instead of /proc/cpuinfo ?\n. Well, the build happens in a container running ubuntu, so I guess we're good.\nI don't see the updated PR, btw\n. Well, the build happens in a container running ubuntu, so I guess we're good.\nI don't see the updated PR, btw\n. I'm sorry but https://github.com/roylee17/boot2docker/commit/b983cdcfbaf5130bb2089f8698aaf28207f68cdc isn't updated on my hand ?\n. I'm sorry but https://github.com/roylee17/boot2docker/commit/b983cdcfbaf5130bb2089f8698aaf28207f68cdc isn't updated on my hand ?\n. Thanks :)\n. Thanks :)\n. That's one hell of a typo!\u2014\nSteeve Morin\nOn Sun, Jan 5, 2014 at 3:24 PM, Chris Mytton notifications@github.com\nwrote:\n\nWhen running ./boot2docker init I was getting lots of errors like the following:\nVBoxManage: error: Could not find a registered machine named &#39;boot2docker-vm&#39;\nThis patch fixes that error.\nYou can merge this Pull Request by running:\n  git pull https://github.com/hecticjeff/boot2docker patch-1\nOr you can view, comment on it, or merge it online at:\n  https://github.com/steeve/boot2docker/pull/47\n-- Commit Summary --\n- Execute createvm command instead of logging it\n  -- File Changes --\n  M boot2docker (2)\n  -- Patch Links --\n  https://github.com/steeve/boot2docker/pull/47.patch\n  https://github.com/steeve/boot2docker/pull/47.diff\n\nReply to this email directly or view it on GitHub:\n  https://github.com/steeve/boot2docker/pull/47\n. That's one hell of a typo!\u2014\nSteeve Morin\n\nOn Sun, Jan 5, 2014 at 3:24 PM, Chris Mytton notifications@github.com\nwrote:\n\nWhen running ./boot2docker init I was getting lots of errors like the following:\nVBoxManage: error: Could not find a registered machine named &#39;boot2docker-vm&#39;\nThis patch fixes that error.\nYou can merge this Pull Request by running:\n  git pull https://github.com/hecticjeff/boot2docker patch-1\nOr you can view, comment on it, or merge it online at:\n  https://github.com/steeve/boot2docker/pull/47\n-- Commit Summary --\n- Execute createvm command instead of logging it\n  -- File Changes --\n  M boot2docker (2)\n  -- Patch Links --\n  https://github.com/steeve/boot2docker/pull/47.patch\n  https://github.com/steeve/boot2docker/pull/47.diff\n\nReply to this email directly or view it on GitHub:\n  https://github.com/steeve/boot2docker/pull/47\n. I'm working on a homebrew docker recipe, which should simplify that ;)\n\nHowever, my issue is that if I make dockerd listen on 0.0.0.0 by default it might not be as secure\n. I'm working on a homebrew docker recipe, which should simplify that ;)\nHowever, my issue is that if I make dockerd listen on 0.0.0.0 by default it might not be as secure\n. i was wondering about how to detect it yes.\nthen i went for the simple stuff:\ndocker@boot2docker:~$ dmesg | grep -i virtualbox\nDMI: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\nso yeah i'll do that !\n. i was wondering about how to detect it yes.\nthen i went for the simple stuff:\ndocker@boot2docker:~$ dmesg | grep -i virtualbox\nDMI: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\nso yeah i'll do that !\n. Closing :)\n. Can you reproduce it with 0.4?\nBecause I can't :(\n. I thought it was a bug in the docker remote api ?\n. Just linked the issue to a failed merge by @SvenDowideit, re-releasing in 10 minutes\n. ok, try 0.5.1, the issue is fixed\n. @johntdyer are you sure you did export DOCKER_HOST=localhost on your host machine?\n. Can you try this and report?\nhost$ boot2docker ssh\nboot2docker$ docker version\nboot2docker$ docker -H tcp:// version\nboot2docker$ docker -H tcp://localhost:4243 version\n. Ok it most likely has to do with the NAT rules of the VM not properly made.\nDo update boot2docker script (see README) and then:\n$ boot2docker stop\n$ boot2docker delete\n$ boot2docker init\n$ boot2docker up\nCareful, the delete command will delete your disk (vmdk file)! Move it somewhere before if you want to keep it, and try again.\n. Ok it most likely has to do with the NAT rules of the VM not properly made.\nDo update boot2docker script (see README) and then:\n$ boot2docker stop\n$ boot2docker delete\n$ boot2docker init\n$ boot2docker up\nCareful, the delete command will delete your disk (vmdk file)! Move it somewhere before if you want to keep it, and try again.\n. @anildigital yes that's why you need to update boot2docker script\n$ curl https://raw.github.com/steeve/boot2docker/master/boot2docker > boot2docker\n. @anildigital yes that's why you need to update boot2docker script\n$ curl https://raw.github.com/steeve/boot2docker/master/boot2docker > boot2docker\n. Ok so according to @shykes, this is due because Docker 0.8 can't connect to the 0.7.6 server. I'm gonna release an update tonight.\n. Ok so according to @shykes, this is due because Docker 0.8 can't connect to the 0.7.6 server. I'm gonna release an update tonight.\n. I'm uploading a new iso as we speak (0.5.2) with docker 0.8\n. I'm uploading a new iso as we speak (0.5.2) with docker 0.8\n. Ok here it is, confirmed to work:\nhttps://github.com/steeve/boot2docker/releases/tag/v0.5.2\n. Ok here it is, confirmed to work:\nhttps://github.com/steeve/boot2docker/releases/tag/v0.5.2\n. Ok so something is blocking the port 4243.\nCan you try a curl -v http://localhost:4243 on your host machine?\n. Ok, you guys should get a 404 normally, if dockerd responded. You might want to check for conflitcs on this port maybe?\n. Good find @phrawzty! So.... CrashPlan is on 4243... Well, too bad for them :)\n. Ok I'm voting maybe outdated vbox kernel drivers (had issues myself with them in the past).\nMake sure you remove them completely before reinstalling\n. I'm also running 4.3.6r91406 and I don't experience this issue.\nThe real issue is to figure out why it doesn't work on 4.3.7 then :)\n. Yeah that sounds right. Can you open an issue regarding that?\u2014\nSteeve Morin\nOn Thu, Feb 6, 2014 at 11:31 AM, Andreas Heissenberger\nnotifications@github.com wrote:\n\n@steeve we should add some port testing with nc to insure that the port 4243 is free and if not print a warning, suggest a local boot2docker conf and stop to create the config for the VM\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/48#issuecomment-34310310\n. Why the second sudo ? Btw I updated the README :)\n. Fixed the README :)\nThanks for reporting!\n. Yeah, it's because you need to partition and format the HDD.\n\n$ sudo fdisk /dev/sda\n$ sudo mke2fs -T ext4 /dev/sda1\n. I'll add a script to automate the process though\n. We're going to go with NFS I think (because NFS is already on OSX), and in that regard, @moul's work with a secondary host only interface will prove worthwhile.\n. Can you open a PR? This way we'll know you're the author of the fix :)\nThanks!\n. Thanks!\n. I'm sold. Merging.\n. Just did a quick, unscientific test, and indeed, it is faster. Good job :+1: \n. Thanks again\n. Spot on @schickling.\n@deinspanjer We're leaving the PR open until we have a better solution implemented. This solution is via host only networking and /etc/hosts.\nBut since we shifted development from sh to Go (for a lot of reasons), we're still focusing on having feature parity first, and getting the binary out there. Once it's released, we will add host only which will solve this problem (and allow for mounting volumes).\n. Awesome thanks!\n. Wait you closed it?\n. Thanks!\n. Sorry for the lag guys, I had things I needed to take care of.\nThe point @eugeneware raises is a valid one.\nI think we should first identify the main envs people want to run boot2docker on:\n1. transparently => boot2docker up + native docker client (OSX or else...)\n2. real VMs (== cloud)\n3. bare metal\nFor 1 (which is my focus right now), we already have some \"detection\" going on to properly set up boot2docker to behave accordingly (for instance having dockerd listen on all interfaces, a big no no for 2 and 3).\nFor 2 and 3, this raises the bigger point of customisation. In the bare minimum, having your own SSH keys. My goal is for boot2docker not to exist in 2 flavours. @SvenDowideit has been doing great research on providing customisation via containers, which I think is the way to go later on.\nRight now, the only way to do that is via inheriting the Dockerfile and rebuilding your own rootfs and ISO, which is doable, but not very practical from an upgrade standpoing.\n. So a boot2docker rebuild command then?\n. I meant if someone wants to builds an ISO from HEAD. But it's really the wrong approach imho.\n. it's weird. the only link i can think of is #66, and it was supposed to help regarding this.\n. use #284 for now\n. @jmmills look at #284 \n. @jmmills look at #284 \n. I'm gonna do a release today then.\n. Thanks. That one was annoying.\n. Closing, as this is working in boot2docker-cli.\n. Indeed, closing.\n. Are we talking about tests to the b2d script, or OS ?\nIf it's the former, we are planning on re-writing it in Go (for them Windows users), in which case we'll use Go's builtin test facilities.\n. Yeah, we're moving this direction anyway.\nFYI, this discussion was started, too: https://groups.google.com/forum/#!topic/docker-user/D99iJnReRCE\n. Btw, #107 has been merged.\n. Good call @aheissenberger, JSON parsing in shell is complex without introducing more deps.\n. Thanks @aheissenberger \n. Yeah this is due to lack of proper persistance besides containers. Right now boot2docker only persists keys and containers. In a rather hackish way too :)\nThis should be fixed in the next version. However, please be aware that the focus right now is to provide easy docker usage for non-linux (via boot2docker up + native docker client for instance).\n. Voted :)\n. Voted :)\n. Nice :)\n. @schickling yes, we do have to submit a PR upon each release. Might want to keep them not as often, in order to not piss them :)\n. Shit, we need to release it again.\u2014\nSteeve Morin\nOn Wed, Feb 19, 2014 at 7:13 PM, Martin Polden notifications@github.com\nwrote:\n\nThe current version (v0.5.4), which is in Homebrew, is currently broken. I'm guessing it's because moving the repository broke all the links.\nReply to this email directly or view it on GitHub:\nhttps://github.com/boot2docker/boot2docker/issues/110#issuecomment-35529487\n. boot2docker is using a x64 kernel with x86 libs.\nBut that's only to boot docker, you shouldn't need to have 64 libs to run containers (that's the whole point).\n\nTiny Core x64 as way less packages available and isn't really official anyway.\nAre you trying to run OpenJDK outside a container?\n. Well, that's really the busybox image fault I guess :)\n. The truth is, there's no need to switch to Corepure, as it's a fork and not as supported as Core.\n. I'll welcome a PR on a branch, though.\n. Are you using boot2docker init to create the vm ?\nEDIT: ooops didn't see you did\nCan you try the last version, issue a boot2docker delete and boot2docker init again ?\n. One thing you can try is to modify the options here: https://github.com/steeve/boot2docker/blob/master/boot2docker#L75\nTry removing some of them, see if that helps? Sorry I can't be of more help, but I can't reproduce...\n. Could you try vbox @tianon ?\n. Can you try the command described at #273 and #260:\n$ VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n. Can't reproduce:\n~/p/boot2docker git:master \u276f\u276f\u276f export DOCKER_HOST=localhost\n~/p/boot2docker git:master \u276f\u276f\u276f ./docker version\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\n. That is a very good observation. I think we should indeed symlink /tmp to /var/lib/boot2docker/tmp, since it gets persisted on the disk.\n. That is a very good observation. I think we should indeed symlink /tmp to /var/lib/boot2docker/tmp, since it gets persisted on the disk.\n. Ok, identified the issue.\nIn the mean time, you can do that (won't survive a reboot) and try again:\ndocker@boot2docker:~$ tce-load -wi xz\n. Ok, identified the issue.\nIn the mean time, you can do that (won't survive a reboot) and try again:\ndocker@boot2docker:~$ tce-load -wi xz\n. I don't really know :(\n. Well, I wouldn't rely on pipework too much. @shykes made a fair point at #123 \n. Well, I wouldn't rely on pipework too much. @shykes made a fair point at #123 \n. I'm not opposed to us adding the fix. We should be very careful about this though, as this is an issue in Tiny Core itself.\nPosting the fix here for reference:\n``` diff\n/usr/share/udhcpc/default.script\n@@ -28,7 +28,9 @@ case \"$1\" in\n             done\n         fi\n\necho -n > $RESOLV_CONF\nif [ -n \"$dns\" ] ; then\necho -n > $RESOLV_CONF\nfi\n         [ -n \"$domain\" ] && echo search $domain >> $RESOLV_CONF\n         for i in $dns ; do\n             echo adding dns $i\n```\n. I'm not opposed to us adding the fix. We should be very careful about this though, as this is an issue in Tiny Core itself.\n\nPosting the fix here for reference:\n``` diff\n/usr/share/udhcpc/default.script\n@@ -28,7 +28,9 @@ case \"$1\" in\n             done\n         fi\n\necho -n > $RESOLV_CONF\nif [ -n \"$dns\" ] ; then\necho -n > $RESOLV_CONF\nfi\n         [ -n \"$domain\" ] && echo search $domain >> $RESOLV_CONF\n         for i in $dns ; do\n             echo adding dns $i\n```\n. Well, this may be a hack, but it got merged in busybox, so that kinda makes it official :)\n\nAnyway, @aheissenberger is right, once we get around #93, this should fix it more elegantly\n. Well, this may be a hack, but it got merged in busybox, so that kinda makes it official :)\nAnyway, @aheissenberger is right, once we get around #93, this should fix it more elegantly\n. While we investigate, you can do this to temporarily fix it (won't last a reboot):\nboot2docker$ tce-load -wi git\n. While we investigate, you can do this to temporarily fix it (won't last a reboot):\nboot2docker$ tce-load -wi git\n. @ryanseys it's merged in master, next release will fix it\n. @ryanseys it's merged in master, next release will fix it\n. Actually, it's not fixed\n. Actually, it's not fixed\n. @aheissenberger i have a fix already\n. @aheissenberger i have a fix already\n. Which version of VirtualBox are you running ?\n. Which version of VirtualBox are you running ?\n. Still not working with @aheissenberger's test case @al-x\n. Sure, it seems to work now, don't know why the error though:\n$ curl -fs -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" 'https://api.github.com/repos/steeve/boot2docker/releases' | awk -F\\\" '/tag_name/{print $4;exit}' RS=,\nv0.5.4\n(23) Failed writing body\n$\n. Sure, it seems to work now, don't know why the error though:\n$ curl -fs -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" 'https://api.github.com/repos/steeve/boot2docker/releases' | awk -F\\\" '/tag_name/{print $4;exit}' RS=,\nv0.5.4\n(23) Failed writing body\n$\n. Yeah I think @aheissenberger got his test case wrong\n. Yeah I think @aheissenberger got his test case wrong\n. Can you try on 0.5.3? It's supposed to be fixed by a40098f5b7e4a3ea797a07426720ce70950e5a28\n. Can you try on 0.5.3? It's supposed to be fixed by a40098f5b7e4a3ea797a07426720ce70950e5a28\n. @sethvoltz you might want to open a new issue, it seems pretty obscure\n. @sethvoltz you might want to open a new issue, it seems pretty obscure\n. Can you rebase this?\n. Reproduced here too. I guess we're gonna have to move to host only then.\nRef #93 \n. Reproduced here too. I guess we're gonna have to move to host only then.\nRef #93 \n. Note that it happens regardless of the network driver. Just did a test by switching to Intel instead of virtio, same result.\n. Note that it happens regardless of the network driver. Just did a test by switching to Intel instead of virtio, same result.\n. I propose we rename the script and give it its own repo\u2014\nSteeve Morin\nOn Sun, Feb 9, 2014 at 12:37 PM, Sven Dowideit notifications@github.com\nwrote:\n\nwe need to find a way to differentiate between the boot2docker OS, and the manage script :/\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/140#issuecomment-34571644\n. Thanks :)\n. Thanks :)\n. Fixed by 9ee0b037e190deef1b956c78929134c2d0b89c31, released in 0.5.4\n. Fixed by 9ee0b037e190deef1b956c78929134c2d0b89c31, released in 0.5.4\n. Just ssh into the VM, it will tell you which version you have.\n\nCan you provide a Dockerfile for us to reproduce?\n. Well, normally you just have to download the new ISO, but sometimes we update the script, and if the VM changes it's conf, you need to re-init it.\nI know what you feel, but it's still very new :)\n. Thanks!\n. Thanks!\n. Well, make sure you're running the latest iso. Just overwrite the old one with the new one.\u2014\nSteeve Morin\nOn Fri, Feb 7, 2014 at 10:35 AM, Jason Livesay notifications@github.com\nwrote:\n\nThe other developer I am working with says she reinstalled boot2docker after having this issue and now she is still having the issue.  Will the install instructions at https://docs.docker.io/en/master/installation/mac/ load the newest master with the fix?  She is still getting build: Forbidden path outside the build context: cupsd.conf (/mnt/sda1/tmp/docker-build781626545/cupsd.conf)\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/pull/144#issuecomment-34421128\n. Well, make sure you're running the latest iso. Just overwrite the old one with the new one.\u2014\nSteeve Morin\n\nOn Fri, Feb 7, 2014 at 10:35 AM, Jason Livesay notifications@github.com\nwrote:\n\nThe other developer I am working with says she reinstalled boot2docker after having this issue and now she is still having the issue.  Will the install instructions at https://docs.docker.io/en/master/installation/mac/ load the newest master with the fix?  She is still getting build: Forbidden path outside the build context: cupsd.conf (/mnt/sda1/tmp/docker-build781626545/cupsd.conf)\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/pull/144#issuecomment-34421128\n. My issue is that it breaks ssh. In which case I'm not for it. Is there a reason for this to exist?\n\nAlso, I'm not comfortable with this. This is clearly init-only land, and we should be careful with having different networking topologies, as people will forget about them, and this can cause us lots of problems down the road.\nIf we permit 2 topologies to cohabit, we should have means for people to switch between them easily. Or we should have them both.\n. My issue is that it breaks ssh. In which case I'm not for it. Is there a reason for this to exist?\nAlso, I'm not comfortable with this. This is clearly init-only land, and we should be careful with having different networking topologies, as people will forget about them, and this can cause us lots of problems down the road.\nIf we permit 2 topologies to cohabit, we should have means for people to switch between them easily. Or we should have them both.\n. This PR kind of obsolete, since boot2docker-cli is now all the craze. Am I right?\n. cc @boot2docker/team-cli\n. Ca you give us the exact commands you typed, which version of vbox yoh have and if done in b2d or via ssh?Thanks :)\n\u2014\nSteeve Morin\nOn Fri, Feb 7, 2014 at 10:57 AM, Clemens Stolle notifications@github.com\nwrote:\n\nHey,\nthanks for boot2docker!\nI have one issue though. Running docker commands like stop or running commands in a docker container are really slow. Just typing exit in a container takes like 30sec to process. \nBoot2docker 0.5.4 and Docker 0.8 on a MBP 2010 with SSD and Mavericks. \nHow can I provide more information? Or is there some config I could tweak?\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/148\n. Ca you give us the exact commands you typed, which version of vbox yoh have and if done in b2d or via ssh?Thanks :)\n\u2014\nSteeve Morin\n\nOn Fri, Feb 7, 2014 at 10:57 AM, Clemens Stolle notifications@github.com\nwrote:\n\nHey,\nthanks for boot2docker!\nI have one issue though. Running docker commands like stop or running commands in a docker container are really slow. Just typing exit in a container takes like 30sec to process. \nBoot2docker 0.5.4 and Docker 0.8 on a MBP 2010 with SSD and Mavericks. \nHow can I provide more information? Or is there some config I could tweak?\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/148\n. Sorry if it sounds like a random and non useful thing to say, but can you try with the newest version of vbox?\nI'm suspecting it may have to do with the network config of the VM (not sure though).\n\nAlso, can you guys post the content of your /var/log/docker.log ?\n. @vgarg did you try the solution I posted in https://github.com/dotcloud/docker/issues/3957#issuecomment-34711525 ?\n. For the record, the solution was to update boot2docker script and OS, and run:\n$ ./boot2docker stop\n$ ./boot2docker delete\n$ rm -rf boot2docker.vmdk\n$ ./boot2docker init\n$ ./boot2docker up\n. Can you try reinstall from brew? Just to make sure....\n. Thanks for the logs. 32s on Core2Duo isn't impossible, considering we are using xz at maximum compression for the rootfs (else the iso would be ~40mb), which can result in a longer times unpack.\nAs for the lag itself, can you guys try to play with the VM parameters (stuff such as VT-x and al.). Don't be afraid to mess things up, you can just delete/init if you break something.\nWe need to get to the bottom of this but none of us in the team can reproduce :(\n. can you guys try with the latest b2d? a bug regarding network handling was fixed in Docker 0.10\n. Try:\n$ boot2docker stop\n$ boot2docker download\n. @tatsushid can you upload your iso somewhere for others to use?\n. I saw that the brew formula has been updated. You might want to try it ?\n. Note that you can do boot2docker ssh -L 14243:127.0.0.1:4243 -N\n. Probably, but we need it out of the door before that\n. Once #93 is merged, we won't need this, just for the record :)\n. Yup, I vote for pause to work the same way as vagrant suspend\nWhat does pause do anyway? We should have one or the other, not both imho, it will confuse people.\nIn my mind, pause = suspend\n. :+1: for @bfirsh, I don't see a need to separate the 2.\nWhy would you want to freeze the VM anyway? From a user pov, it just amounts to the same thing: pausing and resuming the VM.\nThe command we should implement, IMHO, should be the same as a \"save to disk\" state, which reduces the VM usage to 0, and allows for fast restarts (via state restore).\n. @aheissenberger yes\nHere's what we should aim for:\n- boot2docker up works, whatever the VM state (paused, saved state or else), so yes we should detect if we need to VBoxManage start or VBoxManage resume, but all in all, one command\n- suspend == pause this is the same thing. whether we chose pause or savestate I'm up for debate, but there should be only one command\n. Also, I still fail to graps the practical difference between pause and savestate ?\nMy position is: we should use the one that takes the least amount of resources. Second is the time to resume. Because people will assume that pause/resume is like a faster stop/up.\n. You mean if you pause, you can't restart the mac without losing state? That's a no-go then.\n:+1: for savestate :)\n. Ok, we go for savestate then. Can you update the PR with the improved semantics we discussed?\nThat is:\nsave | pause | suspend) suspend;;\nAlso, the log should say the VM is suspended, not saved (which is rather obscure).\n. Ok, we go for savestate then. Can you update the PR with the improved semantics we discussed?\nThat is:\nsave | pause | suspend) suspend;;\nAlso, the log should say the VM is suspended, not saved (which is rather obscure).\n. :+1:\nis ntpclient non-blocking?\n. We should into TCL's own facility to do that. If TCL does it, we need to revert that PR.\nAs pointed by @aheissenberger in #163\n. Nice poc, however, I'm against having a boot2docker cmd command. I understand the need for it, but it's confusing, and Docker themselves recommend using their cli directly.\nThat means we have to find a way to do it without a wrapper script. @aheissenberger is there anything we could ask the Docker team to add to docker to enable this behaviour ?\n. So basically we need to ask the docker guys to implement something like smb:// (or the more cryptic but correct cifs://) and nfs:// ?\ncc @creack, @vieux\n. FYI guys, the goal was always to use NFS. But for that we need #93 to be merged first\u2014\nSteeve Morin\nOn Mon, Feb 17, 2014 at 2:26 PM, Johannes Schickling\nnotifications@github.com wrote:\n\n@eugeneware makes some good points :+1:\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/pull/154#issuecomment-35256447\n. FYI guys, the goal was always to use NFS. But for that we need #93 to be merged first\u2014\nSteeve Morin\n\nOn Mon, Feb 17, 2014 at 2:26 PM, Johannes Schickling\nnotifications@github.com wrote:\n\n@eugeneware makes some good points :+1:\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/pull/154#issuecomment-35256447\n. @olalonde that's a great idea IMHO\nPS: restored :)\n. We won't implement it in the script, since it would break some commands, but you can change the VM network settings in vbox and use bridge if you want.\n. We won't implement it in the script, since it would break some commands, but you can change the VM network settings in vbox and use bridge if you want.\n. I suggest you watch #93 just in case :)\n. I suggest you watch #93 just in case :)\n. I would prefer this version, instead of #163. We should have sensible defaults, and this is one of them IMHO.\n. :+1: for running it by default. Clock drift is very important in vbox anyways. And if it doesn't prevent internet-less access, it should be a no-brainer.\n. @aheissenberger I don't see it in our version: https://github.com/steeve/boot2docker/blob/master/rootfs/isolinux/f4\n\nMaybe I should update the isolinux image ?\n. If TCL supports it by default, we should use it.\n. On a second thought, the nice thing about ntpclient is that not only it sets the datetime, it also corrects drift, which happens a lot in vbox.\nWhereas TCL's solution is one shot.\nSo I prefer our solution.\n. On a second thought, the nice thing about ntpclient is that not only it sets the datetime, it also corrects drift, which happens a lot in vbox.\nWhereas TCL's solution is one shot.\nSo I prefer our solution.\n. Thank you :)\n. PS: leaving this one open for a while so other people can see it\n. That's great, thank you.\n. That's great, thank you.\n. Well, except the PR isn't valid. Shit.\n. Well, except the PR isn't valid. Shit.\n. It's missing a lot of code.\n. It's missing a lot of code.\n. I've force-pushed to revert this PR. Can you open a new one with squashed commits and make sure it's not missing code?\n. I've force-pushed to revert this PR. Can you open a new one with squashed commits and make sure it's not missing code?\n. savestate is missing, for instance\n. savestate is missing, for instance\n. @rimusz I think there was an issue with related to git-fu on this one, as it merged without me doing it. Can you re-open one with squashed commits from a new branch? It seems they were overlapping.\n. @rimusz I think there was an issue with related to git-fu on this one, as it merged without me doing it. Can you re-open one with squashed commits from a new branch? It seems they were overlapping.\n. It's not :)\nCheck out the files changed tab. Also, the commits are not squashed :)\n. It's not :)\nCheck out the files changed tab. Also, the commits are not squashed :)\n. Ooops yeah indeed I didn't read correctly. Can you squash them and I'll merge :)\n. Ooops yeah indeed I didn't read correctly. Can you squash them and I'll merge :)\n. Just do a git rebase -i HEAD~5 and fixup your commits :)\n. Just do a git rebase -i HEAD~5 and fixup your commits :)\n. Ok, let's do this: start from a clean slate, and apply this patch (your patch) on your files.\nIt'll be easier :)\nhttps://github.com/steeve/boot2docker/pull/169.patch\n. Done\n. Oh jesus.\n. You know what, screw this, I'm merging :)\n. Yes, you can see the individual commits\n. Actually I'm sorry, I can't merge them, the commits really are confusing. I'm gonna apply the patch myself and credit you for it.\n. Yes, but you need to delete your branch, re-branch from master, apply the patch, and submit the PR :)\n. :+1: @aheissenberger \nI vote for BUILD.md and FAQ.md to be moved to the toplevel dir.\n. @schickling it was indeed very unreadable :)\n. Well, we've included ntpclient to the base image, to not only initialize the time properly, but to also correct time drift in virtualized environments.\nDo you mean you want to set your own NTP server instead of pool.ntp.org ?\n. We are moving fast towards a rewrite of the b2d script in Go anyway (Windows support), so I guess while this makes sense now, it won't in the future.\nAlso, I totally agree that ./boot2docker version should display the ISO version as well. We are also trying to find a new name to the script, since it's getting confusing sometimes. Suggestions welcome :)\n. No specific timing, but there is a discussion about it here: https://groups.google.com/forum/#!topic/docker-user/D99iJnReRCE\n. We are planing on release a .pkg file to provide \"easy\" install for Mac users\n. Since docker will handle this, I think we can wontfix this issue for now.\n. Hum this isn't good, as it will break boot2docker delete for people who had it before this change.\n@amattn, you'll need to add code to check for this case.\n. Ah, you're right. Although you know what, I'm not even sure delete removes the vmdk, and I'm thinking it shouldn't. Thanks then!\n. I can reproduce it though, albeit without the error message. I suspect a docker bug related to term handling, though...\n. LGTM\n. We just need to be careful with that this allows, though.\n. You're right.\nLet's keep that for now, but in the future we'll need to be very restrictive about what behaviours we allow to be customized without rebuliding an ISO.\n. While this is an issue more related to Homebrew usage itself, I'm merging it just in case, because it touches us anyway.\n. @juliankrause's trick should work fine, for now\nFor shared folders, you'll need to configure an host only adapter, and NFS mount your directory from the host. Watch #93 if you want to try it yourself. There's no very good way to do that yet :(\n. You can also try sshfs (not sure if it's in TCL), but that's very hackish :)\n. You guys might want to look at #284, which includes the VBox shared folders modules. Instead of relying on sshfs.\nA test ISO is at https://dl.dropboxusercontent.com/u/12014139/boot2docker.iso\n. :+1: for @SvenDowideit \nUpdate process is (and should be):\n- overwrite ISO\n- reboot VM\n. However, being able to \"recreate\" (ie, force) the VM settings is something I'd like us to have.\nAlthough a delete/init does the trick (provided we don't delete the .vmdk).\n. You should add this to https://github.com/steeve/boot2docker/blob/master/rootfs/rootfs/etc/rc.d/docker#L10\ndiff\nsysctl -w net.ipv4.ip_forward=1\n+sysctl -w net.ipv6.conf.all.forwarding=1\nAs sysctl.conf is loaded only when explicitly called.\nSo either we add it like my diff, or we create a sysctl.conf and load it via call sysctl -p /etc/sysctl.conf instead.\n. You should add this to https://github.com/steeve/boot2docker/blob/master/rootfs/rootfs/etc/rc.d/docker#L10\ndiff\nsysctl -w net.ipv4.ip_forward=1\n+sysctl -w net.ipv6.conf.all.forwarding=1\nAs sysctl.conf is loaded only when explicitly called.\nSo either we add it like my diff, or we create a sysctl.conf and load it via call sysctl -p /etc/sysctl.conf instead.\n. Here's my proposal:\n- we add a sysctl.conf, since everybody knows about it and will know where to look\n- add a specific sysctl.d executed before docker, where we put sysctl -p\n- ???\n- Profit!\nHow does that look ?\n. Can you open a PR ?\n. Gotcha.\n. Pitching in just to underline how awesome this is :)\n. That's awesome. Let's declare that new features go into the Go version once it's on par with the sh version.\n. LGTM\n. Well, as of #224 we do have NFS in boot2docker\n. Also, SMB (mount.cifs) is already included in TCL\n. Somebody suggested we mount /Users in the VM. This is a pretty clever hack, and I think it should work nicely for the time being.\nIt also has the plus of being transparent (ie -v $HOME/projects/:/projects works) and is static (no need to intercept the docker call).\nSo I propose that init creates a 2nd host only interface, configures NFS for mounting /Users (on OSX) in the VM.\n. Well, the issue is that boot2docker-cli is on the verge of supporting other providers than VBox (namely VMware and Hyper-V). What happens when we do?\nI think we need to find a solution that is generic enough. Be it ssh or something else.\n. All in all, I'm :-1: for adding VBox modules.\nAlso, let's have this discussion in boot2docker/boot2docker-cli#42 since boot2docker-cli is the future.\n. is there a way to do the same check as SSH itself?\ni'm using id_rsa myself. from what I remember, SSH checks for rsa, then dsa, if i'm not mistaken.\n. Thanks!\n. Great job, I'll leave @SvenDowideit the pleasure to merge it.\nCan you fix change the tabs to 4 spaces? I'm seeing a mix in the code.\n. That was amazing\n. That was amazing\n. Yes, I just updated the kernel image (fixes + 3.13.3) yesterday. I'm trying to push it but it's big. So in progress.\nI'll close the issue once it's on the index.\n. Just pushed the new image.\n. Sure\n. FYI, the disk is properly created by boot2docker init, and detect at first boot.\nboot2docker init insert a magic on the disk, which is detect by the OS and then initiates partition and formatting.\n. Merging for good measure anyway :)\n. According to https://github.com/Homebrew/homebrew/blob/master/Library/Formula/boot2docker.rb it's using 0.6.0, which has the fix. Closing.\n. Thanks @aheissenberger !\n. Because the TCL persistance mechanism is heavily tied to how TCEs (TC Extensions) are made.\nEssentially, they are squashfs images that are loopback mounted.\nAs for files, TCL can persist $HOME in a .gz file.\nAll in all, I don't believe it's adapted to our use.\n. @SvenDowideit I believe @aheissenberger was referring to our own reimplementation of \"persistence\" (via custom bootlocal.sh/bootsync.sh) and see if this could be something we could use instead.\nI don't believe he meant for the users to use this.\nIn any case, we load the OS with norestore which deactivates the TCL persistance mechanism.\n. Closing\n. FIY guys, @tiborvass is working on boot2docker.go for windows here https://github.com/tiborvass/boot2docker\n. Would you be open to let it live in the boot2docker org ?\n. I believe it is the way forward for the CLI, and soon to be the only supported method.\n. Ok, in which case we need to properly split OS and CLI.\nWhat about boot2docker-cli ? Simple?\nI'm not really for moving the os to boot2docker-os since this is the go to project.\nOnce we fix that, we'll create the project accordingly in the org.\n. Again, thanks for your great work.\n. cc @boot2docker/team-kickass \n. Ok try it again\n. Ok take 3 ?\n. Yeah rename the project to boot2docker-cli, and for the binary i'd rather leave it as boot2docker, as to not break existing workflows\n. Yeah, update the PR with the new location. Also, please make sure it compiles to a boot2docker exec.\n. I need to move on on this one indeed\n. Can you try to modprobe it ?\n. ooops I misread\n. FYI for all, this PR isn't meant to be merged yet. This is a work in progress.\n. @proppy see with @aheissenberger if you can try to make udhcpd work. I'd rather us go that route than having voodoo in the scripts\n@aheissenberger because he is the designed udhcpd expert :)\n. Well, default.script is part of busybox itself. @aheissenberger just patched it to not delete already configured DNS.\n. +1 for @tianon.\nWe won't include btrfs.tools until BTRFS support is stable in Docker.\nHowever, running a privileged container and apt-geting btrfs.tools should work.\n. Actually, according to TCL, bootlocal is meant to be async. What are you trying to do?\n. Much better :)\n. Thanks :)\n. All fine and good, except that we mount on /cgroup, instead of /sys/fs/cgroup.\nSee https://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/usr/local/etc/fstab (which you'd have to modify for this PR to work).\n. @tianon does this fail too if you specify the fs?\n$ mount -t btrfs ....\n. ok, LGTM\n. Can you put it into doc/WORKAROUNDS.md instead ?\n. Proppy! Explain!! :)\n. Does this fix your GCE issues ?\n. Agreed. Did you have time to validate that is properly works?\nMy guess is that TCL may have made this choice for a reason.\nOther than that, I'm :+1: \n. Yeah, from now on everything on boot2docker.go goes into boot2docker/boot2docker-cli\nClosing\n. LGTM\n. ~~LGTM~~\n. I believe they are a typo :)\n@SvenDowideit, simple ` will suffice\n. LGTM\n. LGTM\nPS: @SvenDowideit you know where we're going with that ;)\n. Reopening since it would be nice to pin the tag.\nLGTM\n. No need, when dotcloud/docker#4327 is merged we won't need LXC altogether.\n. Indeed, KBD: unsupported int 16h function 03 yields more info in Google:\n- https://www.virtualbox.org/ticket/8058\n- https://forums.virtualbox.org/viewtopic.php?f=3&p=71489\nCan you try playing with these settings:\n- VT-x\n- Nested paging\n- ACPI\n- IOAPIC\n- Switch IDE controller to PIIX4\n. Jesus Christ VirtualBox\nThanks for testing though\n. https://github.com/boot2docker/boot2docker/issues/260#issuecomment-36829823 seems to suggest we're running a Kernel that's too recent?\n. For everyone, you can try the fix like this:\n$ VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n. Awesome. I'll do a release of the installer too today.\n. LGTM\n. Are you sure? Cannot reproduce here.\n$ curl https://raw.github.com/boot2docker/boot2docker/master/boot2docker > boot2docker\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  8081  100  8081    0     0  10733      0 --:--:-- --:--:-- --:--:-- 10731\n$ chmod +x ./boot2docker\n$ ./boot2docker download\n[2014-03-01 00:25:00] Latest version is v0.6.0, downloading...\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n100 24.0M  100 24.0M    0     0   895k      0  0:00:27  0:00:27 --:--:--  190k\n[2014-03-01 00:25:28] Done\n$\n. Careful about this PR. I'm :-1: as is.\nAs discussed in #152, we will only use savestate (see the thread as to why).\nI'm all for fixing inconsistent behaviour though.\nCan you work out your PR to reflect that ?\n. @lvh just in case, can you report if the date is correct on your vm ?\n. You might want to bring this up to boot2docker-cli, this is where all the development happens now (although it's not released)\n. Closing\n. Can you try the command described at #273 and #260:\n$ VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n. Jesus christ, that one was a though one.\n. Closed by #273 \n. LGTM\n. Apparently people had success with this patch.\nLGTM\n. @SvenDowideit indentation should be 4 space, not tabs\nDLGTM\n. LGTM\n. Good call.\nLooking at https://github.com/boot2docker/boot2docker/blob/master/base/kernel_config I see several options:\nCONFIG_NET_IP_TUNNEL=y\nCONFIG_INET_TUNNEL=y\nCONFIG_INET6_TUNNEL=m\nCONFIG_IPV6_TUNNEL=m\n. LGTM\n. it's all good really ;)\n. filename:       /lib/modules/3.8.0-35-generic/updates/dkms/vboxguest.ko\nversion:        4.3.8\nlicense:        GPL\ndescription:    Oracle VM VirtualBox Guest Additions for Linux Module\nauthor:         Oracle Corporation\nsrcversion:     218713B77F864CE49260220\nalias:          pci:v000080EEd0000CAFEsv00000000sd00000000bc*sc*i*\ndepends:\nvermagic:       3.8.0-35-generic SMP mod_unload modversions\nfilename:       /lib/modules/3.8.0-35-generic/updates/dkms/vboxsf.ko\nversion:        4.3.8 (interface 0x00010004)\nlicense:        GPL\nauthor:         Oracle Corporation\ndescription:    Oracle VM VirtualBox VFS Module for Host File System Access\nsrcversion:     5FCE44049D9999314F6022B\ndepends:        vboxguest\nvermagic:       3.8.0-35-generic SMP mod_unload modversions\nparm:           follow_symlinks:Let host resolve symlinks rather than showing them (int)\n. @leeolayvar check out PR #284 \n. The best and easiest way is to build the image yourself from the Dockerfile\n. Can we merge this already guys ?\n. Well, boot2docker has an amazing feature, which makes most of your concerns go away imho: the OS is read only.\nThat means that when you need to update, your restart the OS with a new version of it.\nObviously the guest additions evolve rapidly, but VBox versions don't get released that often. And when they do we take a good look at them.\nThankfully VBox guest additions are backward compatible, so we don't screw existing installs.\nThe thing is, boot2docker strives to Just WorkTM, and to provide the best experience for folks without doing anything (it's a goal :smiley:). Plus the added weight/complexity to the image is negligible, as we already have some VM (QEMU/VMware/VBox) detection mechanism going on to force dockerd to listen on 0.0.0.0 (which is a no-no on baremetal).\nThat said, I should probably update the PR with the newly released VBox.\n. I think you may not be booting from the right ISO file\u2014\nSteeve Morin\nOn Mon, Apr 14, 2014 at 9:44 AM, Ian Wootten notifications@github.com\nwrote:\n\nSorry to step in, but I've run these commands using the 0.7 boot2docker image linked to along with the 0.7 boot2docker script and I just get (on the final step):\n\"modprobe: module vboxsf not found in modules.dep\"\nI understand this has something to do with having the VBAdditions available, but I'm unable to figure out how to install this or enable it.\nNB. I've also built using the Dockerfile in the commit (which seems successful), but leads to the same problem. I'm building on a Mac and some poking around seems to suggest VBAdditions isn't available for the mac. Can anyone suggest a solution?\nReply to this email directly or view it on GitHub:\nhttps://github.com/boot2docker/boot2docker/pull/284#issuecomment-40389139\n. I really think we should merge this PR, but leave the module loading optional, so that people know what are the consequences of using this.\n\nBecause the truth is, right now people are stuck on this. Even if it is for the wrong reasons relieving the pain until we have a better (or more idiomatic) solution should be our goal.\n. hey folks, i was away for a long time.\nanyway, as said before, I will first rebase the PR to master, and then merge it.\nHOWEVER, the modules won't be loaded automatically. At least for now, and I'll make sure the doc reflects this properly.\n. @jayd3e just as in the first message in the PR, yes\n. Well, the real issue at hand is that volumes are not the \"docker way\" of doing things. Rather, people should use data containers. That's the prefered solution.\nHowever, we feel that not having them is a big pain for the users, hence this solution. The reason it's not \"on\" by default is that we don't want to imply this is the only way to do it. It's more about solving the pain, really.\n. @jayd3e it's really a debate to have with the Docker team, but indeed it is an open question. We've discussed this subject with the Docker team, and they have some nice ideas up their sleeves, which won't require shared volumes, and make everybody happy, I hope.\nIn the mean time, vboxsf it is :)\n. Rebased and updated the PR.\n. note that when using the latest version, running the container cats the iso on stdout, see BUILD.md\n. note that when using the latest version, running the container cats the iso on stdout, see BUILD.md\n. Hey folks. I think I'm gonna update and merge this PR. It won't load the module by default, but it's there and judging by the length of this PR, I think people will appreciate it.\n@tianon @SvenDowideit \n. @SvenDowideit alright, closing then.\n. cc @boot2docker/team-os \n. in this goes!\n. Yes, boot2docker userland is 32 bits (TinyCore is) but the kernel is 64 bits. Ie we can run statically compiled 64 bits binaries (ie docker) but no binaries relying on 64 libraries.\nIn any case, you shouldn't run it directly. My advice is, run shipyard in a privileged container.\n. That's one amazing analysis, thank you!\nRegarding the issue at hand, I would advise to use the ~~2nd~~ 3rd fix.\nHowever, in theory one shouldn't use shutdown or reboot manually, but rather use the ACPI events. IMHO.\nIn any case, can you provide a PR for that? So that we can trace who made the fix.\nAs I believe /etc/init.d/rc-shutdown is part of TCL's rootfs, you might have to extract it and create it in your branch.\n. My bad, I meant the 3rd fix.\nNo need for Signed-Off\n. ntp has been built into b2d for some time now\n. cc @aheissenberger @SvenDowideit \n. Andreas: I have a PR open for the vbguest modules, turns out they are quite small\n. :+1: we are already using acpid anyway for clean shutdown, imho this is the right solution.\nquestion is: does vbox send acpi signals when the host goes to sleep?\n. @Jud you can try to edit /usr/local/etc/acpi/events/all in the rootfs if you can find out if vbox sends acpi signals when the host resumes. That'd be awesome.\n. @Jud you can try to edit /usr/local/etc/acpi/events/all in the rootfs if you can find out if vbox sends acpi signals when the host resumes. That'd be awesome.\n. Try this instead: https://github.com/boot2docker/boot2docker/pull/284\nI've also updated WORKAROUNDS.md\n. Neat, although limited to PXE :)\nMay be a dumb question, but what about security concerns ?\n. LGTM\n. This is one of the most awesome PRs i've ever had the change of merging.\n. LGTM\n. LGTM, you can just merge it @SvenDowideit :)\n. @SvenDowideit was the one who set up the trusted builds for b2d, any input ?\n. I like the idea too, but :+1: with @tianon \nIt should even have its own file in rc.d imho\n. LGTM, but be aware that new dev happens on https://github.com/boot2docker/boot2docker-cli\n. LGTM\n. @vieux and @creack are working on it, as it seems to be linked to Docker's network handling.\nAny news guys?\n. @vieux and @creack are working on it, as it seems to be linked to Docker's network handling.\nAny news guys?\n. LGTM, can you rebase ?\n. Could it be related to our pivot_root workaround ?\n. Did you run a make oldconfg to \"even out\" the kernel config file ? (it seems, but i'm not sure)\nIf so, LGTM ! :)\n. My bad, building base runs make oldconfig, so we're good. LGTM\n. Yes, it's because of 2 things:\n- the port 49153 is forwarded from OSX (VM HOST) to the port 80 in the VM (DOCKER HOST)\n- the container is listening on port 80 inside the container, but port 49153 on the VM (DOCKER HOST)\nYou need to change you NAT forwarding rule to forwarding host:49153 to guest:49153\n. Note that if you start with 127.0.0.1 I'm don't think you'll be able to use the docker cli from outside the boot2docker vm\n. If we dd the iso to the disk we will still be in a ramdisk...I think you're gonna have to go deeper...\nCome and see me tomorrow when I'm at Docker Michael\n\u2014\nSteeve Morin\nOn Mon, Apr 14, 2014 at 9:18 PM, Sven Dowideit notifications@github.com\nwrote:\n\nwe can temporarily add a mode (and make it default) to create an OS disk from the iso\nbut that still leaves the PXE and usb users with a bug that it would be better to work out (even if we need to get some kernel dev to do it.)\nReply to this email directly or view it on GitHub:\nhttps://github.com/boot2docker/boot2docker/issues/318#issuecomment-40444175\n. Most likely the bad stuff happens from here: https://github.com/torvalds/linux/blob/master/fs/namespace.c#L2711\n. Just to be clear on one thing, we will never make \"flavours\" of b2d (one for VM, one for baremetal). The ISO is supposed to run everywhere without modifications, for simplicity's sake.\n\nI'd be happy to review a PR that doesn't build the module we remove indeed though.\n. cc @SvenDowideit \ncan you try the Windows installer maybe? https://github.com/boot2docker/windows-installer\nelse you need to create/format the disk yourself\n. Using 0.8, no issues here. Can you tell us more about your config ?\n. Using 0.8, no issues here. Can you tell us more about your config ?\n. Thanks :)\n. No biggie if master is broken for now.\nHowever, it worries me that it didn't depmod before, this is weird.\n. Question is, can we make the whole image without re-building the kernel (ie pulling from the repo ?)\n. Yeah but what happens if somebody wants to build their own b2d iso? In the current version it downloads a pre-built kernel image, i'm guessing this doesn't work in one Dockerfile?\n. I'm sold, LGTM then. Thanks guys.\n. I'm sold, LGTM then. Thanks guys.\n. LGTM\n. LGTM\n. @aheissenberger scream here if need be\n. @aheissenberger scream here if need be\n. Also:\nboot2docker: 0.8.0\ndocker@boot2docker:~$ ls -la /proc/self/mountinfo\n-r--r--r--    1 docker   staff            0 May  3 13:47 /proc/self/mountinfo\ndocker@boot2docker:~$\n. Also:\nboot2docker: 0.8.0\ndocker@boot2docker:~$ ls -la /proc/self/mountinfo\n-r--r--r--    1 docker   staff            0 May  3 13:47 /proc/self/mountinfo\ndocker@boot2docker:~$\n. LGTM\n. LGTM\n. What happens when you try this in your config @robparrott ?\n$ boot2docker ssh -o PreferredAuthentications=keyboard-interactive\n. What happens when you try this in your config @robparrott ?\n$ boot2docker ssh -o PreferredAuthentications=keyboard-interactive\n. LGTM\n. For the record, this PR disabled NFS support, which is re-enabled by #349.\n. Side note guys, build from the latest boot2docker tag (https://github.com/boot2docker/boot2docker/tree/v0.8.0), as we might be doing some serious refactoring to the Dockerfile on master.\n. Side note guys, build from the latest boot2docker tag (https://github.com/boot2docker/boot2docker/tree/v0.8.0), as we might be doing some serious refactoring to the Dockerfile on master.\n. I'm building a 0.8.1 with Docker 0.11 right now.\n. I'm building a 0.8.1 with Docker 0.11 right now.\n. ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.8.1\ndocker@boot2docker:~$ docker version\nClient version: 0.11.0\nClient API version: 1.11\nGo version (client): go1.2.1\nGit commit (client): 15209c3\nServer version: 0.11.0\nServer API version: 1.11\nGit commit (server): 15209c3\nGo version (server): go1.2.1\nLast stable version: 0.11.0\ndocker@boot2docker:~$\nI'm tagging it right now.\n. ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.8.1\ndocker@boot2docker:~$ docker version\nClient version: 0.11.0\nClient API version: 1.11\nGo version (client): go1.2.1\nGit commit (client): 15209c3\nServer version: 0.11.0\nServer API version: 1.11\nGit commit (server): 15209c3\nGo version (server): go1.2.1\nLast stable version: 0.11.0\ndocker@boot2docker:~$\nI'm tagging it right now.\n. https://github.com/boot2docker/boot2docker/releases/tag/v0.8.1\n. https://github.com/boot2docker/boot2docker/releases/tag/v0.8.1\n. You can issue either:\n$ boot2docker download\n$ boot2docker-cli download\n. You can issue either:\n$ boot2docker download\n$ boot2docker-cli download\n. Yeah I would recommend booting from the ISO itself, not a VHD.\nCan you give us a df -h right after boot please ?\n. I might want to use https://github.com/boot2docker/boot2docker-cli instead\n. I might want to use https://github.com/boot2docker/boot2docker-cli instead\n. This is awesome.\nHowever, according to http://distro.ibiblio.org/tinycorelinux/corebook.pdf\n\nThis is an advanced option that changes where in RAM Core is run from. By default, Core uses the tmpfs setup by the kernel; with this bootcode, Core will setup a new tmpfs file system, and use that instead.\nUsing this bootcode temporarily doubles the RAM use, as both copies are kept in RAM at once during boot. As an extra copy is made, it also slows the boot time. It allows GNU df to detect the\nfree space in /, used by some proprietary software installers.\"\n. This is awesome.\n\nHowever, according to http://distro.ibiblio.org/tinycorelinux/corebook.pdf\n\nThis is an advanced option that changes where in RAM Core is run from. By default, Core uses the tmpfs setup by the kernel; with this bootcode, Core will setup a new tmpfs file system, and use that instead.\nUsing this bootcode temporarily doubles the RAM use, as both copies are kept in RAM at once during boot. As an extra copy is made, it also slows the boot time. It allows GNU df to detect the\nfree space in /, used by some proprietary software installers.\"\n. LGTM, by the way :)\n. LGTM, by the way :)\n. no better fix, I just wanted to put the doc here for future record. great work :)\n. Whatever it is, I'm not really sure it's related to the OS, but rather the client.\n. I think you might need to rebuild the image with your certificate in it.\n. The certificates are installed when unpacking the openssl.tcz TCL package.\n\nIn any case, you'll need to execute these on your own Dockerfile, the ISO rootfs is in $ROOTFS:\n```\nFROM boot2docker/boot2docker\nRUN \nADD mycertif $ROOTFS/....\nRUN /make_iso.sh\nCMD [\"cat\", \"boot2docker.iso\"]\n```\n. Yes, you are running an old version of boot2docker (0.8.1, from your log).\nYou need to update your b2d system. Do:\n$ ./boot2docker stop\n$ ./boot2docker download\n$ ./boot2docker up\nAnd you should be good to go.\n. Reopening. Sorry I was away for quite a while.\nAnyway, LGTM\n. @YungSang can you add the ones from @wolfs ?\n. Yes, because filesystems-<XX>-tinycore64.tcz are actually kernel modules (based on TCE original config).\n. Yes, because filesystems-<XX>-tinycore64.tcz are actually kernel modules (based on TCE original config).\n. LGTM\n. LGTM\n. :+1: for this.\n. But you might want to take this issue to https://github.com/boot2docker/boot2docker-cli instead, as the shell version is now deprecated.\n. LGTM++\n. Cannot reproduce here, the behaviour is the right one:\n``` console\ncat /tmp/test.sh\nif dmesg | egrep -q '(TESTESTEST)'; then\n    echo \"TRUE\"\nelse\n    echo \"FALSE\"\nfi\nsh /tmp/test.sh\nFALSE\n\n``\n. @SvenDowideit I don't where where you're running your first example?\n. +1 for @tianon, also I'm in on the idea\n. LGTM\n. That's a very good idea! LGTM\n. could you do it in aif` clause rather?\ni feel this would ass more readability\n. sorry if i'm being picky ;)\n. why not set this one while we're at it ?\n. Indeed!\n. ",
    "vieux": ":+1: \n. :+1: \n. FYI we will still have a hard limit in docker (today 42, tomorrow 127) \n. FYI we will still have a hard limit in docker (today 42, tomorrow 127) \n. :+1: \n. yes sorry!, it was fixed by https://github.com/dotcloud/docker/pull/5092\nCan somebody confirm ?\n. yes sorry!, it was fixed by https://github.com/dotcloud/docker/pull/5092\nCan somebody confirm ?\n. ",
    "tianon": "Glad to do it, let's get that ISO built! :)\n. This fixes the ssh key generation clobbering our initial terminal, mainly.\n. But also makes sure docker's up and at em. :)\n. That was in the previous PR :)\n. +1 cool idea\n. How about, instead of the symlink and the very brute-force Ghosts cleanup, we try adding /usr/local/etc/init.d/docker stop to \"/opt/shutdown.sh\" like we're supposed to? (see http://wiki.tinycorelinux.net/wiki:bootlocal.sh_and_shutdown.sh)\nAlso, the \"check\" function does exactly what your comment describes - it checks to see if Docker is running.\n. The key part I hear there is \"docker should be doing on start\" - not some hokey init script for a single platform exhibiting the issue. :)\nThe real true fix for those issues (beyond stopping Docker cleanly, which is a very important first step), is to have Docker actually verify that Ghosts are or are not still running when it detects them.\n. To add just slightly more to that, any manual munging occurring in \"/var/lib/docker\" is a real serious issue, and should be considered very bad form (like we love saying, you get to keep ALL the pieces).\n. Is there any way you could maybe detect Vagrant and only default to 0.0.0.0 in that case?  boot2docker is definitely still very cool on bare metal where that's undesirable configuration :)\n. +1 for uber tiny; let's get this functionality added to docker's core instead >:)\n. @jpetazzo that should work quite swell! Super cool idea :)\n. Such golf, much short, wow\n+1\n. Dude, learn2docker: --rm doesn't have anything to do with the cache.  Open this back up! :)\n. \"intermediate containers\" -- the cache is the \"intermediate layers\" (ie, the image bits, not the container bits)\n. +1 to this PR, too - I wish I could make --rm the default, since it already keeps the containers if there's a problem, and that's the only time you might really need the container itself to introspect (although that'll change when we can \"officially\" run another command in a given container)\n. Hrm, ok, what if you do an explicit sudo PATH=$PATH HOME=$HOME BOOT2DOCKER_CFG_DIR=$HOME/.boot2docker boot2docker start ? :)\n. You should be able to use a privileged container to do the mkfs, in theory.\n. btw, I'm working on a fix for this :)\n. +1 for consistency\n. Indeed, I'm very much aware of that, and did remove that line here already. ;)\n. This is a pretty ancient PR which doesn't really apply anymore -- I'd recommend starting with the Docker Community Forums, the Docker Community Slack, or Stack Overflow to get help figuring out what's going on with your setup, and only once it's determined to be an issue with boot2docker (as opposed to your environment or configuration) then file a new issue here.. Hrm, it'd probably be good if we autodetected btrfs in the docker startup script, too, since AUFS has lots of really fun issues when used on top of BTRFS.\n. Now the real tricky bit for automatic -s btrfs is to get from something like \"/var/lib/docker\" to \"/mnt/sda1\" to \"/dev/sda1\" so we can then do blkid on it and determine whether it's btrfs.\n. Ok, I've got it.  Want it as part of this PR, or as a separate PR?\n. I'm making a separate PR for it. ;)\n. Yes.\n. (Until I manually modprobe btrfs, of course.)\n. Absolutely!  I can move it around and relabel it however you'd like. :)\nI was most concerned with getting the information out there.  I'll move it now.\n. Moved. :)\n. Just a sec, gonna add a note about changing your graph backend if you do this.\n. Ok, note added. :)\n. +1! :D\n. I found it via \"Shift+PgUp\" in qemu (I doubt it ever hits dmesg).\n. I'm rebuilding my \"boot2docker-base\" image so I can verify with the latest kernel_config for sure.\n. Hrm, maybe it's related to @proppy's new changes for DHCP, since I don't have any interfaces besides \"lo\" at the time it's run, so I get this:\nLoading extensions... Done.\nSetting keymap to us Done.\nSkipping restore as requested from the command line.\nSkipping DHCP broadcast/network detection as requested on boot commandline.\nnet.ipv4.ip_forward = 1\nsysctl: error: 'net.ipv6.conf.all.forwarding' is an unknown key\n(docker whale here)\nI'll verify as soon as this kernel is done compiling whether this is the case.\n. Ok, verified.  I had to remove @proppy's new DHCP stuff to get an IP address at all (since his new stuff doesn't work yet), but I do still get the sysctl: error: 'net.ipv6.conf.all.forwarding' is an unknown key error, which is interesting.\n. I don't think this actually applies anymore. :+1: :innocent:\n. I'm building and testing this now.\n. This still doesn't do it.  Even if it did, we'd get no resolv.conf.\n. Why not leave the kernel config enabled?  It doesn't hurt anything, and potentially enables more kernel-related features.\n. Yes, +1!  This allows for @proppy to use the kernel DHCP on GCE without bothering the rest of us, and it's a pretty minor addition to the kernel (especially compared to the sound drivers, bluetooth, etc etc that are all enabled).\n. See also #242.\n. True, but it won't actually work properly until #242 is merged.\n. LGTM (but for this one, @steeve's is the only LGTM that really matters)\n. What are double back ticks in markdown? Been doing too much rst? Lol\n. LGTM\n. LGTM\n. How do you figure?\nconsole\n$ docker images ubuntu\n...\nubuntu              12.04               9cd978db300e        3 weeks ago         204.7 MB\nubuntu              latest              9cd978db300e        3 weeks ago         204.7 MB\n...\n. @steeve good point :)\nLGTM\n. No, but \"ubuntu:latest\" will change to trusty, where \"ubuntu:12.04\" will not change.\n. (*will not change to trusty.)\n. Yeah, that's a Docker bug, IMO. :)  (and I'd definitely +1 a PR to fix it to only pull \"ubuntu:latest\")\n. LGTM\n. YES :+1: please let us know the second this is ready :D\n. LGTM\n. Does this cause any problems on other virtualbox versions or other platforms besides OSX?\n. Thanks for checking @SvenDowideit :)\nLGTM too\n. Closing, since this appears to be resolved. :+1:. seems legit to me - if anyone is needing these inside their containers, they'll come out of the woodwork pretty quickly to let us know :)\nLGTM\n. See #275\n. VirtualBox Guest Additions were added in #534, which should make this easier.  Does that help? :smile:\n. I'm still -1 on this change in general, as it further reduces the agnosticism of boot2docker and encourages what is a fairly destructive and confusing pattern.  The problem of bind mounts not working from a remote Docker client is one that's general to all instances of a Docker daemon that listens non-locally, so I firmly believe the \"proper\" solution to this needs to (and indeed will, given time) come from the Docker side.\nJust my 2\u00a2.\n. Absolutely, this is being discussed in dotcloud/docker#4023.\n. As I mentioned in https://github.com/boot2docker/boot2docker/pull/284#issuecomment-39026180, I'm still -1 on this myself, especially since the virtualbox guest additions are well-known for being absolutely abysmally slow, which will make for an (IMO) even worse user experience than we have now.\n. I don't think the disadvantages can be mitigated, since they're fundamental problems in the virtualbox driver (ie, how notoriously unreliable and slow the driver is), but I think it'd be an acceptable stopgap for now given the rest of the issues you've described, despite how much I'm -1 on the idea.\n. I don't think the disadvantages can be mitigated, since they're fundamental problems in the virtualbox driver (ie, how notoriously unreliable and slow the driver is), but I think it'd be an acceptable stopgap for now given the rest of the issues you've described, despite how much I'm -1 on the idea.\n. LGTM\n. I'd be much more interested in a fix in the VM itself than in a workaround\nvia plist files, especially for an official fix.  This problem isn't\nOSX-specific, so fixing it via a workaround like \"boot2docker ssh ntpdate\n...\" on a periodic host-side task seems completely backwards to me (great\nas a workaround, but not as something I'd want to be installing by default\nfor all our users).\n. I'd be much more interested in a fix in the VM itself than in a workaround\nvia plist files, especially for an official fix.  This problem isn't\nOSX-specific, so fixing it via a workaround like \"boot2docker ssh ntpdate\n...\" on a periodic host-side task seems completely backwards to me (great\nas a workaround, but not as something I'd want to be installing by default\nfor all our users).\n. Does our VM have and run cron?  We could just cron cycle the ntpclient init script as a simple first-pass solution.\n. Does our VM have and run cron?  We could just cron cycle the ntpclient init script as a simple first-pass solution.\n. LGTM\n. +1 - we can also remove the --rm on docker build since it's on by default now\n. +1 LGTM\n. This doesn't look like a boot2docker issue to me, especially since\nboot2docker isn't affected.\n. Definitely a very interesting idea, but I really don't think the bashrc is the place to be invoking it.\nI think a better place would be to invoke it in \"rootfs/rootfs/bootsync.sh\", probably right after we hit up \"/etc/rc.d/docker\" (so that we know that Docker itself is started).\n. LGTM\n. +1 LGTM (caveat that I haven't tested it, but it looks solid and @crosbymichael's stuff always works :P)\n. Generally LGTM now, just minor nits in the markdown.\n. #328 merged, so it looks like this needs a rebase since it still shows one of those commits ;)\n. #328 merged, so it looks like this needs a rebase since it still shows one of those commits ;)\n. LGTM\n. LGTM :+1: \n. LGTM :+1: \n. LGTM\n. LGTM\n. +1 and LGTM\n. +1 and LGTM\n. LGTM\n. LGTM\n. LGTM\n. Indeed, this issue is about the other certificates. :+1:\n. LGTM\n. Looks very fragile, but still seems reasonable enough to me.\n. LGTM\n. On my own local box:\n``` console\n$ zcat /proc/config.gz | grep HZ\nCONFIG_NO_HZ_COMMON=y\nCONFIG_HZ_PERIODIC is not set\nCONFIG_NO_HZ_IDLE=y\nCONFIG_NO_HZ_FULL is not set\nCONFIG_NO_HZ=y\nCONFIG_RCU_FAST_NO_HZ is not set\nCONFIG_HZ_100 is not set\nCONFIG_HZ_250 is not set\nCONFIG_HZ_300 is not set\nCONFIG_HZ_1000=y\nCONFIG_HZ=1000\nCONFIG_MACHZ_WDT is not set\n```\nOn Debian Sid's current 3.14 default config:\n``` console\nroot@845214019fc7:/# grep HZ /boot/config-3.14-1-amd64 \nCONFIG_NO_HZ_COMMON=y\nCONFIG_HZ_PERIODIC is not set\nCONFIG_NO_HZ_IDLE=y\nCONFIG_NO_HZ_FULL is not set\nCONFIG_NO_HZ is not set\nCONFIG_RCU_FAST_NO_HZ=y\nCONFIG_HZ_100 is not set\nCONFIG_HZ_250=y\nCONFIG_HZ_300 is not set\nCONFIG_HZ_1000 is not set\nCONFIG_HZ=250\nCONFIG_MACHZ_WDT=m\n```\n. Doesn't that mean we can also delete the \"rootfs/usr/local/etc/fstab\" file?\n. You have bare metal that produces VMware in dmesg?\n. You have bare metal that produces VMware in dmesg?\n. LGTM but worth noting that this shell script is effectively deprecated in favor of https://github.com/boot2docker/boot2docker-cli\n. Seems sane enough to me.  LGTM\n. Shouldn't bootscript be run synchronously? Also, wouldn't \"tee\" be better for the logging so we still get it on the screen?  On top of that, I think it needs 2>&1 so we get the errors in the log file too.\n. Does the image even include bash anymore?  I remember we had to break down\nand add it for LXC, but didn't we remove it afterwards?\n. Does the image even include bash anymore?  I remember we had to break down\nand add it for LXC, but didn't we remove it afterwards?\n. See also docker/libcontainer#64 ;)\nIn other words, official support is almost there in libcontainer, so Docker support shouldn't take too much longer after that.  We've waited this long; what's a bit longer, especially since it's already partially in-review upstream? :)\n. :+1: \n. :+1: \n. docker exec -it my-container bash\n. docker exec -it my-container bash\n. Does this do anything bad for people who don't have a serial console?\n. Does this do anything bad for people who don't have a serial console?\n. (would probably manifest itself as \"respawning too fast\" or a similar error)\n. (would probably manifest itself as \"respawning too fast\" or a similar error)\n. I think the problem was manifesting even with VMs, so LGTM.\n. I think the problem was manifesting even with VMs, so LGTM.\n. LGTM\n. LGTM\n. Hah, nice; LGTM.\n. This is definitely weird, because adding -i would enable stdin, not stdout (which is where we send the ISO).\n. This is definitely weird, because adding -i would enable stdin, not stdout (which is where we send the ISO).\n. Why?  Is it causing any problems to have the formula in Homebrew besides being outdated?\n. They are separate packages :)\n. They are separate packages :)\n. I ran into this issue and it turned out my iso was outdated; you could try\na \"boot2docker download\" to grab the latest and give it another shot.\n. I'd really, really like to move those into \"~/.boot2docker\" so that the\nboot2docker state is closer to being self-contained.\nMaybe we have it check whether \"~/.ssh/id_boot2docker_\" exists, and use\nthat if it does, but otherwise default to \"~/.boot2docker/id_rsa_\", so that\nnew users get the newer path.\nMy ultimate goal is that the clean-slate \"start over\" procedure for\nboot2docker can be as simple as \"make sure the VM is stopped and purge\n~/.boot2docker\".\n. I'd really, really like to move those into \"~/.boot2docker\" so that the\nboot2docker state is closer to being self-contained.\nMaybe we have it check whether \"~/.ssh/id_boot2docker_\" exists, and use\nthat if it does, but otherwise default to \"~/.boot2docker/id_rsa_\", so that\nnew users get the newer path.\nMy ultimate goal is that the clean-slate \"start over\" procedure for\nboot2docker can be as simple as \"make sure the VM is stopped and purge\n~/.boot2docker\".\n. Would it be possible to instead modify dhcp.sh to run synchronously?  Or to not use it at all and just run synchronously udhcpc directly?  Is what I ask even possible? (asking because I honestly don't know) :)\n. Once we finally compile Docker against Go 1.3, the DNS refreshing issue will be fixed. :)\n. Essentially, resolv.conf is supposed to be automatically reloaded but\nwasn't being thanks to netgo (which is required due to static compilation),\nbut that issue was fixed in Go for 1.3.\n. OK, next time I won't tell you. :)\n. I think #960 probably helped somewhat here, and still believe our best solution would be to convince dhcp.sh to run synchronously.  \nRegardless, I think this has run a little long in the tooth, and fresh approaches should be considered (if anything is necessary here).  For example, I don't think Docker for Windows or Docker for Mac suffer from this problem. :+1:. VirtualBox Guest Additions were added in #534, which should solve this issue! :+1:\n. Agreed, thanks @cpuguy83.  docker exec is going to make this moot, and even work from the host machine (at least on OSX; instead of having to do things inside the VM).\n. I'm with @SvenDowideit 100% here - if someone managed to build an image that handles installing the additions in your running boot2docker system, I'd very happily sign off on a PR documenting said image here officially, but only on the assumption that it requires nothing extra to be added to the ISO itself.\n. I'm with @SvenDowideit 100% here - if someone managed to build an image that handles installing the additions in your running boot2docker system, I'd very happily sign off on a PR documenting said image here officially, but only on the assumption that it requires nothing extra to be added to the ISO itself.\n. Hey @fayep, I just wanted to let you know that this actually happened over in #534.  Thanks for making this PR - I definitely referenced it while creating that one to get more ideas, and hopefully #534 fits what you were needing. :+1:\n. Can you guys try again with 1.1.2?  A fix for certain edge-cases of container autorestart is one of the things that was included in that hotfix release.\n. Can you guys try again with 1.1.2?  A fix for certain edge-cases of container autorestart is one of the things that was included in that hotfix release.\n. Also, here's a fun and easy way to reproduce this if you've got more bandwidth than you have processing power (or you just like fun one-liners): ./boot2docker-v1.1.2-linux-amd64 ssh -t docker run -it --rm --privileged -e TESTDIRS='daemon/graphdriver/devmapper' tianon/docker-dev ./hack/make.sh test-unit\nOnce it hangs on the relevant test, open a new terminal and: ./boot2docker-v1.1.2-linux-amd64 ssh dmesg\n. This is being tracked as an upstream Docker issue at https://github.com/docker/docker/issues/7341.\n. LGTM\n. LGTM\n. I think this is a duplicate of boot2docker/boot2docker-cli#11 - can you confirm?\n. I think this is a duplicate of boot2docker/boot2docker-cli#11 - can you confirm?\n. No worries!  Maybe you could try out v1.1.1 of the CLI and see if it works any better? https://github.com/boot2docker/boot2docker-cli/releases\n. No worries!  Maybe you could try out v1.1.1 of the CLI and see if it works any better? https://github.com/boot2docker/boot2docker-cli/releases\n. +1 sounds reasonable to me\n. +1 sounds reasonable to me\n. LGTM\n. LGTM\n. +1 our installers definitely need some kind of uninstall means\n. +1 our installers definitely need some kind of uninstall means\n. That other PR is merged now. :heart:\n. It should be available in the 1.3.0 installer, yes.  Otherwise, you can\ngrab just that one script from GitHub and run it as-is.\n. +1 - @jamshid do you plan to send a PR, or would you rather have someone else take care of it? :)\n. +1 - @jamshid do you plan to send a PR, or would you rather have someone else take care of it? :)\n. Maybe we should switch over to Wheezy instead until the freeze for Jessie, so we don't run into this again until then?\n. LGTM, but we should probably just switch to wheezy instead, since jessie is still pre-freeze\n. Also, if we're going with find, we should probably limit it to just the first result so we don't somehow accidentally get two. ;)\n. /me high-fives @SvenDowideit \n. Ouch.\nLGTM\n. LGTM\n. yes yes, LGTM\n. yes yes, LGTM\n. On VirtualBox, /sys/devices/virtual/dmi/id/product_name is \"VirtualBox\".\n. Closing, since this appears solved. :+1: . nasty fun\nLGTM\n. Ok, so on the monolith, you really don't get any build cache out of that thanks to the COPY bits above it.  I can still split it back out, but it feels like working backwards and adding layers just for the layers' sake.\nNow, on ENV VERSION $(cat /rootfs/rootfs/version) - nope, Docker can't even pretend to do anything similar to that today.\n. What, add SELinux?  I think throwing in SELinux for 1.2.0 would be kind of a foolish knee-jerk reaction that could come back to bite us pretty hard if we don't do it carefully and correctly - I've never seen SELinux cause anything but suffering for someone who doesn't know how to use it.\n. Yeah, that sounds really, really hairy, especially since so much of our boot process is currently and is likely to stay essentially outside our control.  Does this issue affect Ubuntu or Debian?  What's the workaround like there?\nAlso, this is sounding to me like a general Docker issue - is there a ticket filed there about it?\n. Yeah, that sounds really, really hairy, especially since so much of our boot process is currently and is likely to stay essentially outside our control.  Does this issue affect Ubuntu or Debian?  What's the workaround like there?\nAlso, this is sounding to me like a general Docker issue - is there a ticket filed there about it?\n. I'm definitely a huge fat +1 on btrfs-by-default! :smile:\n. LGTM\n. Yes, the fix for this was https://github.com/boot2docker/boot2docker/pull/543, and it will be in the next release of boot2docker, which should come next week.\n. +1 - I regularly use VMware Player, VirtualBox, and QEMU/KVM side-by-side on my Linux box here, but have a strong preference for VMware over VirtualBox since it's been a lot more stable in the years I've been using both\n. @SvenDowideit the Docker numbers were chosen to be high enough that they wouldn't need to be changed any time soon, which is why none of the upstream init scripts have them as configurable knobs; can you think of a use case where the number provided wouldn't be high enough?\n. LGTM\n. Never!\nOK, I'll concede if you at least anchor the grep. :)   ie, ^\n. Fair enough - LGTM\n. Crap, this breaks QEMU, since it can't ping out, so it just keeps trying forever.  Also, the output of ping goes straight to the console, so it obscures the prompt.\n. (The output problem could be fixed with &> /dev/null, which would hide the QEMU issue, which is probably an OK solution for now.)\n. Testing now, will send a PR shortly if it works.\n. There have been some ntpclient changes somewhat recently - has anyone tested since we merged those fixes to see if they improved this particular issue, or whether we need to do more digging?\nAt least for the VirtualBox case, we could improve this by getting a 64bit userspace (https://github.com/boot2docker/boot2docker-cli/issues/264) and thus let the Guest Additions do the time sync (and then we get it for free without NTP), which might not be a bad stop-gap.\n. Doh, definitely unintentional -- I'll make a PR to add that back now. :+1:. (As a workaround, the current ISO should have unsquashfs installed, so you should be able to use that to extract the files you're looking for instead of using mount.). In fact, you can probably just do something like tce-load -wicl tzdata and get them installed into /usr/share/zoneinfo too.. In fact, I'm going to close this issue now since I'd say tce-load or stealing files via a container is the way to do this if you need something other than UTC on the host for some reason -- if your container needs a particular timezone, I think you're better off setting up /etc/localtime appropriately there instead.\n(But I'm still going to add CONFIG_SQUASHFS back.). https://github.com/boot2docker/boot2docker/pull/1359 :+1:. Seems about as sane as it could be, for what it has to be.\nCouldn't we technically look to generate the certs in boot2docker-cli directly and push them into the VM the way we do the SSH keys instead of trying to pull them back out after they're generated? (possibly as a future enhancement)\n. Makes sense; LGTM\n. LGTM\n. I'm always +1 for more obvious errors.\n. So the problem is that the device just doesn't initialize quickly enough so we end up not seeing it at boot time and thus not automounting it?\n. Do you have an easy way to test a Debian or Ubuntu live CD on the same setup to see if it has the same issue (thus telling us whether they've got some kind of solution for this already in place that we might be able to learn from or steal)?\n. 0 commits - that's magic.\n. Couldn't we do this same thing with the equivalent of \"git ls-remote\"\ndirectly instead?\n. So what I'm essentially talking about here is using something like: git ls-remote --tags https://github.com/boot2docker/boot2docker.git | cut -d$'\\t' -f2 | cut -d'v' -f2 | sort -V | tail -1 (only implemented nicely and cleanly in Go, of course).\n. An alternative that might be simpler than implementing the Git protocol itself would be to HEAD request https://github.com/boot2docker/boot2docker/releases/latest, then steal the redirect header it generates and grab everything after .../tag/ (or just the last path bit, which should be pretty easy to do with some Go standard library function).\n. If we wanted a really error-prone solution, we could also just grab https://raw.githubusercontent.com/boot2docker/boot2docker/master/VERSION, but that's a pretty hacky solution IMO, especially since VERSION being bumped in master doesn't necessarily mean a new release is actually deployed.\n. Personally, I see breaking tce-load as a positive side effect, so I defer the decision on this one to my fellow maintainers.\n. LGTM\n. LGTM if you add a comment to help remind us why it has to be like this :+1:\n. Lol, LGTM\n. VirtualBox Guest Additions were added in #534, which should solve this issue! :+1:\n. It sounds to me like we should gate start() on a call to check() so that if the daemon is already running, we don't try running it twice (ie, not rely on Docker to tell us it can't be started twice).\nSomething like:\n``` sh\nstart() {\n    if check; then\n        echo >&2 'error: Docker daemon is already running; please stop it first'\n        exit 1\n    fi\nmkdir -p \"$DOCKER_DIR\"\n# ...\n\n```\nwould probably do the trick.\n. Oh interesting, I didn't even realize TCL has a start-stop-daemon.  Now\nthat you've got a reproducible case, maybe we can steal more huge swaths of\nthe upstream Docker init script to try and fix it? (specifically the\nstart-stop-daemon bits for sure, since they're likely to solve this for us\n\"magically\")\n. Did you get a chance to play with this, and have you had any luck? :)\n. Did you get a chance to play with this, and have you had any luck? :)\n. I also agree with @SvenDowideit, it'd be great if you could squash your commits; there are a lot of them now. :smile:\n. Seems reasonable to me; mind submitting a PR? ;)\n. Ahh, nice; LGTM\n. LGTM\n. So the idea here is that we somehow magically have boot2docker on our network, and thus \"boot2docker.local\" resolves to it?  What about multiple VMs or even real hosts on your network?  This seems like a lot of \"magic\" that won't be terribly obvious to newcomers for very minimal gains, so I must be missing something.\n. It's strange to see that you're clearly using AUFS (from your mount table),\nbut \"devicemapper\" is in the error message.  Were you trying to do\nDocker-in-Docker?\n. It's strange to see that you're clearly using AUFS (from your mount table),\nbut \"devicemapper\" is in the error message.  Were you trying to do\nDocker-in-Docker?\n. I would guess that it was for compatibility reasons, since VMDKs are more\ngenerally and broadly supported than VDIs are, in my experience.  If\nsomething else makes more sense, I don't see a problem with switching\n(especially if we don't try to reuse the persistent disk across separate\nVMs, but I'm not familiar enough with our persistent disk support to say\nfor sure).\n. I would guess that it was for compatibility reasons, since VMDKs are more\ngenerally and broadly supported than VDIs are, in my experience.  If\nsomething else makes more sense, I don't see a problem with switching\n(especially if we don't try to reuse the persistent disk across separate\nVMs, but I'm not familiar enough with our persistent disk support to say\nfor sure).\n. Yeah, I think that sounds reasonable, and I'd be +1 on a switch to VDI.\n. Yeah, I think that sounds reasonable, and I'd be +1 on a switch to VDI.\n. Anyone want to make a PR for this? ;)\n. Does anyone have a size comparison handy for before/after on ISO size with\nthe package included?  If the ISO difference is negligible, let's do it.\n:+1:\n. LGTM\n. Ick, that IP detection code in Docker is really, really fragile, even though it's about as robust as something like that can possibly be.  Choosing IP address ranges is always a hard problem.  It's essentially what would happen if you made a set of \"local\" phone numbers and then made their use a total free-for-all.  There'd be conflicts left and right, which is exactly what we run into here.\nI'm also not sure how easy it would be to actually get the docker0 bridge looped into the host network (which is what it seems like you're trying to do?), so maybe someone with more network-fu than me could comment on how easy that would be to set up for a general case.\n. LGTM, and I think leaving this in the README and not adding another boot2docker-cli command should be enough (personally), especially since it's very OSX-specific and even more VirtualBox-specific\n. ROFL; LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Interesting problem.  We currently only support latest stable release of VirtualBox, so I don't think it's necessarily unreasonable to extend that to latest stable release of OS X too, especially since it's a \"free upgrade\" at the moment, so any other version would be strictly \"YMMV\" (Your Mileage May Vary).\n. Interesting problem.  We currently only support latest stable release of VirtualBox, so I don't think it's necessarily unreasonable to extend that to latest stable release of OS X too, especially since it's a \"free upgrade\" at the moment, so any other version would be strictly \"YMMV\" (Your Mileage May Vary).\n. (Obviously noting that we're open to Pull Requests that fix issues on older versions as long as they don't detract from the \"latest stable\" experience - this is mostly about being able to actively track down and deal with issues relating to older versions.)\nIt'd probably be good if we documented this kind of thing somewhere obvious, eh? :smile:\n. (Obviously noting that we're open to Pull Requests that fix issues on older versions as long as they don't detract from the \"latest stable\" experience - this is mostly about being able to actively track down and deal with issues relating to older versions.)\nIt'd probably be good if we documented this kind of thing somewhere obvious, eh? :smile:\n. The code that does this for Docker itself is indeed some fragile\nautodetection written in Go, residing in the daemon itself.  To recreate it\n(and do so in a platform independent way, which would be necessary here)\nwould certainly be a non-trivial task by my understanding.\n. LGTM (and I'll rebase #532 on top of this after we merge it)\n. cc @SvenDowideit :smile:\n. Rebased! :dancer:\n. Fair point - I'll write up something. :+1:\n. Just as an update, I was dealing with some ill family today.  I've updated the technical bits here, but hope to get some docs done tomorrow.\n. Ok, this has some basic documentation now, too. :+1:\n. Ok, I've updated with a paragraph about the nonexistent Linux support: (copied here for easier review)\n\nIn case it isn't already clear, the Linux host support here is currently hazy.\nYou can share your /home or /home/jsmith directory as Users or one of the\nother supported automount locations listed above, but note that you will then\nneed to manually convert your docker run -v /home/...:... bind-mount host\npaths accordingly (ie, docker run -v /Users/...:...).  As noted in the\nprevious paragraph however, this is likely to change in the future as soon as a\nmore suitable/scalable solution is found and implemented.\n. Yeah, that's the plan - I've been working on that on the side while this one got some review. :smile:\n. Yes, boot2docker releases are synced to Docker releases, so this will be in\n1.3 or 1.2.1, whichever comes first.\n. That ISO isn't an official release. ;)\n. Sorry for the delay - I think maybe we might want to try taking a step back, since it looks like the assumptions that led us to think start-stop-daemon would help solve some problems may have actually been wrong (and thus we're really just creating a new problem ala wrangling of the \"SSD\" pid file as well).\n\nWe were running on the assumption that ps PID actually worked like it's supposed to.  So maybe this could actually be solved by just the spirit of the check change you've got here? (ie, parsing the output of ps instead of relying on its exit code directly?)\n. Haha nice catch :smile: \n. :heart::heart: will wait to hear how it goes :smiley: \n. LGTM\n. Unfortunately, they have to be compiled into the kernel, but boot2docker is\nbuilt using a Dockerfile, so if you've got a working install of Docker you\nshould be able to build it and use the resulting ISO!\n. So perhaps we need to include either a timeout or some \"max retries\" logic around that tight ping loop, perhaps even with a timeout on the ping?  Does the ping in your environment return immediately, or does it hang for a while?  (ie, are the cycles being spent in network traffic trying to ping, or are they spent in the tight loop around ping?  I've got to guess that it's in the ping itself, since the loop has a nice sleep 1 in the middle, so maybe adding -W to the ping if TCL's ping has it and then adding a high max retries to that block would do the trick.)\n. Maybe we could use timeout(1) (included in GNU coreutils), if our TCL base includes that to just force a timeout on the ping loop more directly so that it definitely applies to the lookup too?  Since it's a separate command, it might have to be something like if ! timeout sh -c 'while ...'; then exit 1; fi or similar to get the loop in there, but that shouldn't be too bad.\nIt seems really bizarre that the DNS lookup for the standard ntp.org pool is locking up though, even if a corporate DNS server is blocking it.\nWhen you're on the VM console (where it's nice and speedy), does just doing ping -c 1 pool.ntp.org freeze, too?\n. Haha, nice; LGTM\n. Indeed, in my experience, different virtualization providers don't usually\nplay nicely together, with IP allocation just being one of the first issues\nyou end up running into.\n. This is somewhat by design.  By default, boot2docker is ephemeral, but the\nmanagement CLI tool should set it up with persistent storage (which it\nshould notice exists and use automatically).\n. Nice, thanks @tiborvass :)\n@unclejack are you going to update the mentions of the kernel version in the README, etc too?\n. I'm a little confused, and I think there's some information missing here.  Are you trying to run this inside Docker?  Are you running this on your host and trying to connect to it from Docker?\nIf it's running inside docker, are you mapping the port to the boot2docker VM using -p 8888:8888?\n. Just for the future reference of others, the default for -q (minimum packet delay for transaction in microseconds) is 800 (and this PR changes it to 200), and the default for -i (check time every interval seconds) is 600 (and this PR changes it to 30).\nThis seems reasonable to me, and the shell syntax fixes are solid.\nLGTM\n. This fix was already included in the PR to boot2docker-cli which enables\nthis on the VM created.\n. I'm not sure what the issue here is?  docker-enter works by manipulating the kernel namespace features directly (essentially behind Docker's back), so I'm not surprised it doesn't work from the host.  However, you might be interested to note that docker exec is coming in 1.3, which should be released next week! :smile: (and will work through the Docker daemon, so will work appropriately from the host machine)\n. You could try starting the Docker daemon with --iptables=false, but I am also curious why you'd want to, especially in the context of boot2docker.\n. Oh bizarre.  Yeah, I'd be +1 on getting rid of the serial port stuff by default.\n. Fair enough; LGTM\n(although worth noting that @bfirsh is trying to snake you with https://github.com/boot2docker/boot2docker-cli/pull/271 changing the path :smiling_imp:)\n. LGTM\n. LGTM\n. I'm actually right in the middle of messing with the windows-installer\nstuff, so I'll take that one. :)\n. I'm actually right in the middle of messing with the windows-installer\nstuff, so I'll take that one. :)\n. (but all the others would be very, very much appreciated, including\nand especially this one <3)\n. (but all the others would be very, very much appreciated, including\nand especially this one <3)\n. Have you done a \"$(boot2docker shellinit)\" ?  That'll set DOCKER_TLS_VERIFY\nwhich should make the Docker client use TLS appropriately.\n. Have you done a \"$(boot2docker shellinit)\" ?  That'll set DOCKER_TLS_VERIFY\nwhich should make the Docker client use TLS appropriately.\n. You need 1.3.0, not 1.2.0, for DOCKER_TLS_VERIFY=1 to work. :)\n. I wonder if maybe we should just not install this in headless/silent mode.  I know I'd personally prefer to be able to tweak the installation parameters, so I imagine other people might like to as well.  We could probably even make it optional which way you go, but that's starting to get more complicated (not that that's a bad thing).\n. I wonder if maybe we should just not install this in headless/silent mode.  I know I'd personally prefer to be able to tweak the installation parameters, so I imagine other people might like to as well.  We could probably even make it optional which way you go, but that's starting to get more complicated (not that that's a bad thing).\n. I know I personally have run OSes with the VBox Guest Additions on VMware and QEMU without much problem, but I do admit I haven't mixed installed drivers much.  I know the VirtualBox kernel modules won't even load if it's not a VirtualBox VM though, so I don't see any strong reasons why it shouldn't work reasonably, and really think it warrants further testing, personally.\n. I know I personally have run OSes with the VBox Guest Additions on VMware and QEMU without much problem, but I do admit I haven't mixed installed drivers much.  I know the VirtualBox kernel modules won't even load if it's not a VirtualBox VM though, so I don't see any strong reasons why it shouldn't work reasonably, and really think it warrants further testing, personally.\n. I'm +1 on make_iso being a container-runtime thing if we have to go down this route, but the jury is still out on whether this warrants multiple versions of the ISO at all.  I haven't seen any concrete testing showing that mixing multiple guest additions definitely doesn't work and our pipe-dreams are just that (which would obviously force us to have multiple ISOs).\n. I'm +1 on make_iso being a container-runtime thing if we have to go down this route, but the jury is still out on whether this warrants multiple versions of the ISO at all.  I haven't seen any concrete testing showing that mixing multiple guest additions definitely doesn't work and our pipe-dreams are just that (which would obviously force us to have multiple ISOs).\n. This seems reasonable to me, but I'd definitely love to have @bfirsh and @ewindisch chime in too. :smile:\n. I'm still +1 on this particular PR, especially since it's really technically a fix for what's already there.\n@SvenDowideit what do you think?  Feel free to merge this if you agree.  I definitely think we need a solution to this for the next release.\n. Indeed, this LGTM. :wink:\n. @SvenDowideit so this is on the 1.3.1 milestone to keep it on your own radar for writing docs upstream? :smile:\n(ie, what's actionable for boot2docker here?)\n. This was fixed by boot2docker/boot2docker-cli#293 :smile:\n. This is bizarre - do we need to tweak something about the way we mount the share?\nThere's nothing special about what we do: https://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/etc/rc.d/automount-shares (just uid=...,gid=... as mentioned here)\n. This is bizarre - do we need to tweak something about the way we mount the share?\nThere's nothing special about what we do: https://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/etc/rc.d/automount-shares (just uid=...,gid=... as mentioned here)\n. Indeed, I've just tested here:\nconsole\ndocker@boot2docker:~$ ls -lAF /\n...\ndrwxr-xr-x    1 docker   staff        12288 Oct 23 16:37 Users/\n...\ndocker@boot2docker:~$ echo test > /Users/test\ndocker@boot2docker:~$ cat /Users/test\ntest\ndocker@boot2docker:~$ rm -v /Users/test\nrm: remove '/Users/test'? y\ndocker@boot2docker:~$\nSo I definitely need more information about what's going wrong if we're going to figure out how to fix it. :smile:\n. Right, but how can we fix it?\nPermissions with volume mounts are one of those \"gotchas\" that's always a sticky point, so I don't see a good fix for the general case (besides Docker handling the volume sharing more directly, and thus smoothing permissions issues somehow), especially since once you've got it working for \"just this one container\", you're going to want to spin up another, and it will probably have different UIDs altogether (think mysql + postgres + wordpress + stuff specific to your own development, etc).\n. Yeah, in the general Linux case this is easier because the permissions\nactually can be munged, generally speaking.  With \"vboxsf\", we have to\nchoose one mapping, and no matter what we pick we're going to alienate a\nnon-trivial number of people, so we defaulted to \"docker:staff\" to at least\nmake the reasons for the default choice clear and obvious.\nMaybe making the exact uid/gid configurable via the persistent storage\n\"profile\" file is the way to go, but that's really just pushing the already\nbad situation down on our users (however, with the benefit that they can\nactually get themselves to the workaround without a huge amount of effort,\ncompared to where we're at now with hacks in bootlocal, etc).\n. If anyone has a solid solution that will actually work long-term without\nextra developer friction (including but not limited to fragile\nreconfiguring of external services that are frankly outside our reasonable\nrealm of control), we're all ears.\nSupport for \"vboxsf\" was added as a first-pass solution to the basic\nproblem of accessing your data from inside the VM, with full knowledge that\nit has limitations that make it not necessarily well-suited for a number of\nuse-cases, this one included (which was why adding it in the first place\nwas so controversial).  It is important to keep in mind that it is strictly\nbetter than what we used to have (which was absolutely nothing).\nAs has been stated previously, the real solution for this ought to come in\nDocker itself, since this is a common problem to anyone whose client and\ndaemon don't live and play in the same filesystem.\n. If anyone has a solid solution that will actually work long-term without\nextra developer friction (including but not limited to fragile\nreconfiguring of external services that are frankly outside our reasonable\nrealm of control), we're all ears.\nSupport for \"vboxsf\" was added as a first-pass solution to the basic\nproblem of accessing your data from inside the VM, with full knowledge that\nit has limitations that make it not necessarily well-suited for a number of\nuse-cases, this one included (which was why adding it in the first place\nwas so controversial).  It is important to keep in mind that it is strictly\nbetter than what we used to have (which was absolutely nothing).\nAs has been stated previously, the real solution for this ought to come in\nDocker itself, since this is a common problem to anyone whose client and\ndaemon don't live and play in the same filesystem.\n. +1 - there's no harm in exporting the same value again :)\n(although the explicit \"unset\"s are nice, so keeping those and expanding\nthem to include all possible vars as either an \"export XYZ=...\" or an\nexplicit \"unset XYZ\" would be superb)\n. Something like \"boot2docker --vbox-share=disable up\" should do the trick.\n. Indeed, I also tried to find an easy fix to that very issue today, and came\nup short.  We could do it the \"quick and dirty\" way, but that's not going\nto scale, and we're going to have to then support it for a while afterwards.\n. Indeed, I also tried to find an easy fix to that very issue today, and came\nup short.  We could do it the \"quick and dirty\" way, but that's not going\nto scale, and we're going to have to then support it for a while afterwards.\n. You're also the creator of https://github.com/docker/docker/issues/8710 upstream, where @jfrazelle is very interested in making this work without extra hacks like running SSH in the container. :smile:\n. You could always install Mac OS to a USB stick or something...  ;)\n. The intention was for this to work in 1.3.0, but due to an unfortunate bug it did not.  The actual fix is in master, and will be released with 1.3.1.\n. LGTM\n. This is using /var/lib/boot2docker on purpose, because that's the \"persistent storage\" of the VM - everything else on the machine is completely ephemeral and disappears on reboot.\n. Just tested on VBox; \"works\" fine there (ie, the module does appropriately fail to load and thus the daemon doesn't start).\nLGTM\n. Just tested on VBox; \"works\" fine there (ie, the module does appropriately fail to load and thus the daemon doesn't start).\nLGTM\n. cc @SvenDowideit for one more look over this\n. cc @SvenDowideit for one more look over this\n. This looks like it's a duplicate of https://github.com/boot2docker/boot2docker-cli/issues/292 which was fixed by https://github.com/boot2docker/boot2docker-cli/pull/293; want to give boot2docker-cli master a shot to see if it fixes the issue for you? :smile:\n. If it's not the issue @SvenDowideit mentioned, I'm stumped, because the code that sets up the shares does a stat on the directory before setting up the share to make sure it exists:\nhttps://github.com/boot2docker/boot2docker-cli/blob/57ccdb8ff7c4dec5efad0e296b739215d09579df/virtualbox/machine.go#L613\n\ngo\n        if _, err := os.Stat(shareDir); err != nil {\n            return err\n        }\n. Docker is compiled 100% statically, so it can run directly on the 64bit kernel and ignores the userspace entirely.  Fig must not be, is my only guess here.\n. Why not instead just document more clearly that EXTRA_ARGS=\"--registry-mirror=...\" is a thing?  The proliferation of one-off environment variables in this init script concerns me, especially since there's no parity with the init methods provided with Docker (https://github.com/docker/docker/tree/master/contrib/init).\n. Closing given the age, the fact that b2d is in maintenance mode, and that what's requested is already possible via an existing environment variable.  Thanks!. Sorry for the really long delay!\n\nI think the comments/questions on https://github.com/boot2docker/boot2docker/pull/480 still apply, particularly:\n\nDo you have an easy way to test a Debian or Ubuntu live CD on the same setup to see if it has the same issue (thus telling us whether they've got some kind of solution for this already in place that we might be able to learn from or steal)?\n\nI'm going to close for now, but if we can find one of the other large providers of live Linux distros doing something similar to this we can learn from and link back to, I'd love to implement something that's well-tested elsewhere (since we just don't have the testing resources or userbase of these other large distros).  Thanks!. BUILD ALL THE THINGS!\n. Did you set up the share in VirtualBox before attempting to \"mount\" it?\nWhat it wants where you've got \"R:/\" is actually the \"share name\", not the\nhost path (so it might just be \"R\").\n. Was this perhaps filed on the wrong repo? :)\n. Was this perhaps filed on the wrong repo? :)\n. You need to adjust your Flask app to listen on 0.0.0.0 instead of 127.0.0.1.\n. You need to adjust your Flask app to listen on 0.0.0.0 instead of 127.0.0.1.\n. I think we lost the last line, because it ends with:\npython\nif __name__ == \"__main__\":\n. I think we lost the last line, because it ends with:\npython\nif __name__ == \"__main__\":\n. We just rely on VirtualBox's own behavior here.  I'm not sure what it does\nby default, but that's the place to look.  I'd imagine they do best-effort\nto give VMs a chance to shut down gracefully when the system does, but I\nhave to admit I've never tested or researched that theory.\n. We just rely on VirtualBox's own behavior here.  I'm not sure what it does\nby default, but that's the place to look.  I'd imagine they do best-effort\nto give VMs a chance to shut down gracefully when the system does, but I\nhave to admit I've never tested or researched that theory.\n. It sounds like you might have a stray boot2docker-vm set up in VirtualBox -- it's probably worth trying to open the VirtualBox GUI to delete that and try boot2docker -v init and then boot2docker -v up again.\n. It sounds like you might have a stray boot2docker-vm set up in VirtualBox -- it's probably worth trying to open the VirtualBox GUI to delete that and try boot2docker -v init and then boot2docker -v up again.\n. Is this something we choose explicitly, or something we inherited as a default setting from VirtualBox?\n. Is this something we choose explicitly, or something we inherited as a default setting from VirtualBox?\n. Looks like we enabled it on purpose: https://github.com/boot2docker/boot2docker-cli/blob/e41a9aea94fe6fc803ca70bc0a2f9e9c9f256aed/virtualbox/machine.go#L636\nI'm gonna do a little testing without that.\n. If we omit the flag, here's what we get:\nxml\n<DNS pass-domain=\"true\" use-proxy=\"false\" use-host-resolver=\"false\"/>\nAnyone suffering from this willing to test something like the following?\nconsole\n$ VBoxManage modifyvm boot2docker-vm --natdnshostresolver1 off --natdnsproxy1 off\n. Indeed.  Thanks for the summary @buckett.  I'll work up a PR to switch to the DNS Proxy and we can always switch over to no proxy if it turns out there are other glaring issues with the proxy.\n. Indeed, thanks @tiborvass.  I think this section still has value though, especially for pointing out even more handy uses of EXTRA_ARGS which I think isn't documented nearly enough.\n. Indeed, thanks @tiborvass.  I think this section still has value though, especially for pointing out even more handy uses of EXTRA_ARGS which I think isn't documented nearly enough.\n. LGTM\n. LGTM\n. That sounds like it's likely related to vboxsf.\n. I'm +1 on this in general, since we really are very, very module-fat (which I thought was the whole reason we compiled our own kernel in the first place).\nI'm a little worried about the bare-metal impact, though.  We do support bare-metal use of boot2docker, so if you could comment to what this does for/to our support there, I'd appreciate it.\n. I'm +1 on this in general, since we really are very, very module-fat (which I thought was the whole reason we compiled our own kernel in the first place).\nI'm a little worried about the bare-metal impact, though.  We do support bare-metal use of boot2docker, so if you could comment to what this does for/to our support there, I'd appreciate it.\n. Yeah, thanks for the reminder.\nI really like the spirit of this PR (especially removing nonsense like IrDA), but we have supported bare-metal since boot2docker's beginning so whether it's documented or not, I don't think I'm comfortable abandoning that use-case just yet, and would even feel comfortable mentioning in the README that bare-metal support is provided in a best-effort manner (ie, we try to not be actively hostile against bare-metal).\nSo if we could find some happy subset that doesn't cut out too much of the bare-metal stuff (like SATA drivers, etc), I'm totally :+1: on it.\n. Yeah, thanks for the reminder.\nI really like the spirit of this PR (especially removing nonsense like IrDA), but we have supported bare-metal since boot2docker's beginning so whether it's documented or not, I don't think I'm comfortable abandoning that use-case just yet, and would even feel comfortable mentioning in the README that bare-metal support is provided in a best-effort manner (ie, we try to not be actively hostile against bare-metal).\nSo if we could find some happy subset that doesn't cut out too much of the bare-metal stuff (like SATA drivers, etc), I'm totally :+1: on it.\n. Just a few comments but overall I really like the delta.  I'm not sure what's breaking loopback devices though (nothing seemed like it should be here) -- those are very important for us to fix since they're used in the Docker devmapper backend.\n. It appears this has drifted, and lately we've been going more towards trying to keep the options enabled minimal and matching Debian when we do enable things, so I'm going to close.  Thanks for the contribution and sorry for the delay! :heart:. (Also, please check out Docker for Windows / Docker for Mac, and the underlying LinuxKit used to build them -- pretty neat stuff.). Haha, the fact that https://github.com/vmware/tcl-container exists makes me simultaneously really happy and exceedingly depressed.  Good ol' TCL.  We need to ditch that nonsense so that fine folks like yourself don't have to jump through all these hoops, but that's neither here nor there.\nHave you done some testing with this on VBox to make sure it doesn't affect us negatively there?  Is there a way to make that daemon startup conditional based on some module loading or something similar (like we do in the VirtualBox automounting script)?\n. Haha, the fact that https://github.com/vmware/tcl-container exists makes me simultaneously really happy and exceedingly depressed.  Good ol' TCL.  We need to ditch that nonsense so that fine folks like yourself don't have to jump through all these hoops, but that's neither here nor there.\nHave you done some testing with this on VBox to make sure it doesn't affect us negatively there?  Is there a way to make that daemon startup conditional based on some module loading or something similar (like we do in the VirtualBox automounting script)?\n. rootfs/rootfs/etc/vmware-tools/scripts/vmware/network is coming from vmware-tools directly?\n. In re-reading this thread, I'm honestly a little bit confused by this.  What do these tools provide if not shared folder support?  Most stuff should work out of the box, with shared folders being the notable exception, right?\n. I'm not saying this isn't a good thing to include, but I'm curious what it provides that's actually a blocker (ie, I want a paper trail for when we're confused later so we can come back and re-read this thread to know exactly what this buys us and why we care).\n. So, this is necessary for our specific serial connection hacks?\n. ping @oliverkurth @frapposelli :wink:\n. ping @oliverkurth @frapposelli :wink:\n. @frapposelli ok, fair enough :+1: (thanks for clarifying!)\n@oliverkurth I'm really confused here.  Your description mentions \"recommended for use with vmware\", but @jamtur01 found that the OS won't successfully work without this, and there's no clear information about what this adds that makes it work, or why it doesn't work without this.\n. On 8 January 2015 at 11:02, Zee Yang notifications@github.com wrote:\n\nAs @jamtur01 pointed out, 1 and 2 are cli driver deficiencies. There's a lot of tech debt in the cli driver, and I started a new go lib to address those issues. https://github.com/zeeyang/fusia\n\nCouldn't/shouldn't we instead address these deficiencies in Docker\nMachine directly so that we don't carry this technical debt forward?\n. Can one of you elaborate on the \"technical debt\" mentioned above that takes this PR from the realm of \"smoothing out VMware issues\" into the realm of \"required for VMware to even work at all\" ?\nWhile all the things this makes better listed above are great, I still don't see any clear-cut case for \"this is absolutely required for b2d to function at all in VMware\", so I want to understand what actually makes the current ISO not good enough, and what we can do to fix it besides just merging this PR and shoving our \"technical debt\" that was alluded to above under the rug.  Our rug has plenty of debt underneath it already. :smile:\n. > As this is becoming fundamental for docker-machine ...\nThis is the part I'm not getting a good answer to.  What about this pull request or about Docker Machine itself makes this necessary?  The list of things this does/fixes are all good things, but they sound like they're \"necessary for Docker Machine support\" simply because of some technical debt, so I'm interested what that debt is, and what steps are being taken to pay it back properly.\n. @frapposelli :heart: :heart:\nThat's exactly what I was looking for, thanks!  Looking forward to the updated PR. :+1:\n. LGTM\n\n. LGTM\n\n. I'm -1 on this specifically because VirtualBox already has a method for communicating the available mounts information.  The only reason we don't use it today is because we can't run the VirtualBox userspace tools to extract it thanks to our 32bit userspace and their 32bit userspace tools not playing nicely with their 64bit kernel module.\n. This is a duplicate of https://github.com/boot2docker/windows-installer/issues/65.\n. Ahhh, beautiful, thanks; LGTM\n. LGTM\n. Seems reasonable to me, since it only happens in the case that we have a hard drive but it's unpartitioned.  What do you think, @SvenDowideit?\n. Honestly, I personally feel a lot better about \"format the first blank disk\" than I do about the magic outside-the-VM tar injection we do.  Blanking out a disk is a common thing, and thus a large number of tools already exist for doing so easily.\n. Closing since something more specific/similar was implemented for VMware in https://github.com/boot2docker/boot2docker/pull/747.  Thanks! :+1:. Closing since something more specific/similar was implemented for VMware in https://github.com/boot2docker/boot2docker/pull/747.  Thanks! :+1:. Also, if the ping fails, we still try to start ntpd so that it leaves an error message in its log file.\n. (or just succeeds because ping was what was broken, not the connection)\n. I'm totally +1 for this the minute it's supported in Docker proper,\nincluding and especially removing the \"generate_cert\" assumptions and\nhacky copying in boot2docker-cli.\n. Once it's merged upstream, I think it makes sense for us to target it either in the same release it goes into or the one directly following.\n. I definitely agree with @proppy and @ludoch here; having this both in 1.5 and default by 1.5 seems really aggressive IMO.\n. I hate to back-pedal on this, but I want to make sure we have a strong use-case for this before we resurrect it, especially since it's been so long since it worked that we have the benefit that nobody is relying on how it currently works.\nCan you give a little bit of information about how you expect people to use this (or at least how you expect to use this yourself)?\nI'm looking for the reverted docs @SvenDowideit mentions, but I can't find them (only ed25de0158b3d7d7f767458a7ab7af91994515d2, where the feature was disabled), so I have to wonder if it ever was actually documented? :smile:\n. I hate to back-pedal on this, but I want to make sure we have a strong use-case for this before we resurrect it, especially since it's been so long since it worked that we have the benefit that nobody is relying on how it currently works.\nCan you give a little bit of information about how you expect people to use this (or at least how you expect to use this yourself)?\nI'm looking for the reverted docs @SvenDowideit mentions, but I can't find them (only ed25de0158b3d7d7f767458a7ab7af91994515d2, where the feature was disabled), so I have to wonder if it ever was actually documented? :smile:\n. Seems fair and reasonable, thanks!\nLGTM\n. Seems fair and reasonable, thanks!\nLGTM\n. While I'm generally +1 for things like this, in this case I'm not sure I'm seeing what it's buying us besides more paperwork at release-time.\n. While I'm generally +1 for things like this, in this case I'm not sure I'm seeing what it's buying us besides more paperwork at release-time.\n. That doesn't really explain what makes keeping this as a discrete file in the repo superior to just having the data available as it is today though, which is what I'm much more interested in a rationale for (especially since it's going to be me who has to maintain this extra document going forward).\n. I'm definitely +1 on playing with overlay and thus updating to 3.18+.  Can we get the Dockerfile+kernel_config changes in a PR by themselves so we can discuss the other stuff separately?\n. I'm definitely +1 on playing with overlay and thus updating to 3.18+.  Can we get the Dockerfile+kernel_config changes in a PR by themselves so we can discuss the other stuff separately?\n. > Can we get the Dockerfile+kernel_config changes in a PR by themselves\nI'm not asking for the Dockerfile to be separated from the kernel_config; that would indeed be ludicrous and gain nothing.  I just want the Makefile separately because it warrants more discussion than a kernel bump.\n. Yeah, this is really late in the 1.5.0 game, but I think it's worth squeezing this into rc3 and thus release.\nLGTM\n. (if anyone disagrees with us fixing some bugs and getting newer shinies, now's the time to speak up :smile:)\n. LGTM\n. LGTM\n. https://github.com/boot2docker/boot2docker/issues/684#issuecomment-69224782\n\nThat doesn't really explain what makes keeping this as a discrete file in the repo superior to just having the data available as it is today though, which is what I'm much more interested in a rationale for (especially since it's going to be me who has to maintain this extra document going forward).\n. I'm +1 as long as it's compiled as a module and has negligible impact otherwise.\n\nCan't the userspace client run in a container?\n. Indeed, that discussion was in https://github.com/boot2docker/boot2docker/issues/459#issuecomment-52443564.\n. Thanks @SvenDowideit :heart:\n. ``` console\ndocker@boot2docker:~$ uname -a\nLinux boot2docker 3.18.7-tinycore64 #1 SMP Wed Feb 11 18:41:47 UTC 2015 x86_64 GNU/Linux\ndocker@boot2docker:~$ docker run --rm hello-world\nUnable to find image 'hello-world:latest' locally\n511136ea3c5a: Pull complete \n31cbccb51277: Pull complete \ne45a5af57b00: Pull complete \nhello-world:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.\nStatus: Downloaded newer image for hello-world:latest\nHello from Docker.\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (Assuming it was not already locally available.)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\nFor more examples and ideas, visit:\n http://docs.docker.com/userguide/\n```\n. Oh!  I'm applying now; thanks for the heads up!  (and taking care of our ToS non-compliance reported in #789)\n. Status update: I have applied for a vendor zone; just waiting to hear back.\nAs a side note, has anyone let TCL know that they ought to apply for one too? :smile: (http://git.tinycorelinux.net/index.cgi?url=Core-scripts.git/tree/etc/sysconfig/ntpserver)\n. Heh OK, that's fair. :+1:\n. LGTM\nHow hard will it be to port to a proper 64bit userspace?\n. Ok, this LGTM now; I'm planning to merge as soon as 1.6 is finished and released.\n. Generally I agree, but this would mean we'd have to setup a new automated build for every tag we create (due to the way automated builds work).  If there were a way to tell the automated build system something like (for example) \"make a Docker image tag of every Git tag that matches v[0-9.]+\", I'd be 100% in support of including that.\n. I definitely agree with @SvenDowideit here -- putting it in between bootsync and bootlocal would be OK, but after both seems dangerous especially since bootlocal is backgrounded so won't necessarily have finished running before we start using Docker.\nIf we put it in between, then bootsync can setup things Docker itself needs, then bootlocal can instrument Docker after the fact, which would be a handy property.\n. LGTM\n. Nice, LGTM\n. Yeah, this is due to the way the boot2docker initialization works, and should've been fixed by https://github.com/boot2docker/boot2docker/pull/651 (ie, not slightly related to #634: literally is #634 resurfaced :+1:).\n. Updated to include a guest additions bump too.\n. docs are also updated now\n. LGTM :+1:\n. Youch.  Ok, I think we need to remove that crontab for sure now, especially since it was added before we got VBox timesync.\n. Youch.  Ok, I think we need to remove that crontab for sure now, especially since it was added before we got VBox timesync.\n. LGTM\nFor reference:\n$ man ssh\n...\n     -v      Verbose mode.  Causes ssh to print debugging messages about its\n             progress.  This is helpful in debugging connection, authentica\u2010\n             tion, and configuration problems.  Multiple -v options increase\n             the verbosity.  The maximum is 3.\n...\n     -n      Redirects stdin from /dev/null (actually, prevents reading from\n             stdin).  This must be used when ssh is run in the background.  A\n             common trick is to use this to run X11 programs on a remote\n             machine.  For example, ssh -n shadows.cs.hut.fi emacs & will\n             start an emacs on shadows.cs.hut.fi, and the X11 connection will\n             be automatically forwarded over an encrypted channel.  The ssh\n             program will be put in the background.  (This does not work if\n             ssh needs to ask for a password or passphrase; see also the -f\n             option.)\n...\n     -N      Do not execute a remote command.  This is useful for just for\u2010\n             warding ports (protocol version 2 only).\n...\n     -T      Disable pseudo-tty allocation.\n...\n. LGTM\nFor reference:\n$ man ssh\n...\n     -v      Verbose mode.  Causes ssh to print debugging messages about its\n             progress.  This is helpful in debugging connection, authentica\u2010\n             tion, and configuration problems.  Multiple -v options increase\n             the verbosity.  The maximum is 3.\n...\n     -n      Redirects stdin from /dev/null (actually, prevents reading from\n             stdin).  This must be used when ssh is run in the background.  A\n             common trick is to use this to run X11 programs on a remote\n             machine.  For example, ssh -n shadows.cs.hut.fi emacs & will\n             start an emacs on shadows.cs.hut.fi, and the X11 connection will\n             be automatically forwarded over an encrypted channel.  The ssh\n             program will be put in the background.  (This does not work if\n             ssh needs to ask for a password or passphrase; see also the -f\n             option.)\n...\n     -N      Do not execute a remote command.  This is useful for just for\u2010\n             warding ports (protocol version 2 only).\n...\n     -T      Disable pseudo-tty allocation.\n...\n. LGTM\n. LGTM\n. I think both of these are pretty controversial, since they don't actually change the end-result, which means they're just extra Dockerfile instructions for their own sake (or for \"prettier\" output, which isn't always a positive thing -- sometimes that uglier output has useful debugging information).\n. I think both of these are pretty controversial, since they don't actually change the end-result, which means they're just extra Dockerfile instructions for their own sake (or for \"prettier\" output, which isn't always a positive thing -- sometimes that uglier output has useful debugging information).\n. LGTM\n. I'd feel much more comfortable considering this for 1.7 than for 1.6, especially since 1.6 has already received a fair amount of testing, and I'd hate to see this unintentionally throw a wrench in the works (even if it would probably be isolated just to this specific feature breaking).\n. @bfirsh nothing that I'm aware of :+1:\n. @bfirsh nothing that I'm aware of :+1:\n. Carried these changes over in #859 to make sure we can get them in early in our testing window. :+1:\n. Tested and working: (as expected, since it's a very minor bump)\n``` console\ndocker@boot2docker:~$ docker info\nContainers: 0\nImages: 3\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: tmpfs\n Dirs: 3\nExecution Driver: native-0.2\nKernel Version: 3.18.10-tinycore64\nOperating System: Boot2Docker 1.6.0-rc2 (TCL 5.4); master : 92bf81f - Wed Apr  1 16:04:11 UTC 2015\nCPUs: 1\nTotal Memory: 3.868 GiB\nName: boot2docker\nID: QVUW:NL3R:JS7D:XL6I:UHXC:XJRC:FNIA:2JJS:2KA3:DP7U:U3EL:4TBX\nDebug mode (server): true\nDebug mode (client): false\nFds: 14\nGoroutines: 19\nSystem Time: Wed Apr  1 17:26:09 UTC 2015\nEventsListeners: 0\nInit SHA1: 2858afa354fa56af645c92db74ac85060961662c\nInit Path: /usr/local/bin/docker\nDocker Root Dir: /var/lib/docker\ndocker@boot2docker:~$ docker run --rm hello-world\nHello from Docker.\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (Assuming it was not already locally available.)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\nFor more examples and ideas, visit:\n http://docs.docker.com/userguide/\n```\n. Rocking, LGTM :+1:\n(pretty low risk in a minor kernel bump and enabling an existing feature of AUFS)\n. Rocking, LGTM :+1:\n(pretty low risk in a minor kernel bump and enabling an existing feature of AUFS)\n. LGTM\n. LGTM\n. Can anyone who's able to reproduce this test with v1.7.1-rc3 (https://github.com/tianon/boot2docker/releases/tag/v1.7.1-rc3) and verify that #960 fixed it?\n. Thanks to @nathanleclaire, we've verified that #960 is the fix.  Let's build us an official 1.7.1 release and finally put this to bed! :+1:\n. LGTM\n. LGTM\n. Yeah, what @SvenDowideit said -- I don't really have a strong preference for one symbol over another; just a strong preference for improving readability whenever possible, since that helps cut down on present and future mistakes. :+1:\n. LGTM -- I'll go ahead and do the final rebase to pull this in :+1:\n. :+1: LGTM\n. Thanks!\n. OMG, I really hope this lands as a proper fix, since Debian's kernel must build with that too (since I've seen this same racy behavior there, if Docker starts up fast enough)\n. LGTM\n. Simple enough, LGTM\n. #1035 didn't fix this just yet thanks to our ntpd being from BusyBox -- we should probably just get the VBoxService running now with --timesync-only or whatever the flag is now that we've got a 64bit userspace.  I'm working on a PR now. :smile:\n. LGTM\n. This was definitely working at some point...  :+1:\n. Nice!  This patch looks mostly sane, with roughly the expected number of crazy hacks like PermitUserEnvironment.  Any particular reason we append that both in the Dockerfile and at boot, and not just leave that happening at boot?  It seems like we might be able to consolidate all that \"hack to get the proper PATH for the docker user\" logic into that one place in the boot scripts, which would make it obvious how/where to remove it if we can find a cleaner solution to that particular problem.\n. Nice!  This patch looks mostly sane, with roughly the expected number of crazy hacks like PermitUserEnvironment.  Any particular reason we append that both in the Dockerfile and at boot, and not just leave that happening at boot?  It seems like we might be able to consolidate all that \"hack to get the proper PATH for the docker user\" logic into that one place in the boot scripts, which would make it obvious how/where to remove it if we can find a cleaner solution to that particular problem.\n. @SvenDowideit sounds like a reasonable strategy to me :+1: :heart:\n. Other than my two minor comments, looks good. :+1:\n@frapposelli want one last look too? :smile:\n. Any idea how long it'll be before we see 4.0.5?  Got a link to a bug or\nmailing list thread upstream?\n. Thanks! :heart:\n. LGTM\n. This sounds fairly reasonable to me, but I'm a little bit concerned about the 04c394ed8e1e7fc455456e79e908916d portion of that URL -- isn't this something that'll change with the next release of libdnet?  If so, do we have a reliable way to figure out what the \"latest\" version is?\nAlso, I'm a little bit concerned that I don't see any inkling of a pending move off sourceforge on either http://libdnet.sourceforge.net/ or http://sourceforge.net/projects/libdnet/ (nor any of their mailing lists).  Would perhaps a checksum to verify that the tarballs haven't been tampered with be a safer intermediate step before we abandon upstream's still-official release location outright?\n. cc @frapposelli \n. LGTM on the libdnet half, but the AUFS half needs more protections, especially an explicit commit checkout (which I'll go work up a PR to add now)\n. LGTM on the libdnet half, but the AUFS half needs more protections, especially an explicit commit checkout (which I'll go work up a PR to add now)\n. @paolomainardi that'd be perfect; I haven't started yet, so I'll let you take it from here :heart: :+1:\n. @paolomainardi that'd be perfect; I haven't started yet, so I'll let you take it from here :heart: :+1:\n. @paolomainardi thanks for the really quick turnaround! :heart: :+1:\n. @paolomainardi thanks for the really quick turnaround! :heart: :+1:\n. ... and it works! :+1:\n. I'm not opposed to including the necessary kernel bits for this as modules, but I don't think I'm comfortable with including the userspace portions too -- can't those run in a container as long as the kernel modules are in place?\nI know Jessie is a big fan of running pulseaudio specifically inside a container (see https://github.com/jfrazelle/dockerfiles/tree/master/pulseaudio).\n. Sorry for the long tail!\nIf someone wanted to recreate this with just the minimal necessary kernel changes to enable audio support, I'd be open to the idea (assuming it doesn't bloat the ISO size), but as I've noted above, this PR is not acceptable as-is (even if it were to be rebased/updated to match the changes made in the meantime).\nThanks for the contribution!. Hmm, this one makes me a little wary.  With a file that's +x, it's clear it's meant to be executed, but on the other hand, some filesystems don't support +x properly, and it requires an extra round-trip to the VM to set +x after copying over a .sh file.\n@SvenDowideit what's your thought on this one?\n. Yeah, makes sense to me.\nLGTM\ncc @SvenDowideit\n. Seems sane to me. :+1:\nLGTM\n. Seems sane to me. :+1:\nLGTM\n. Nice, that was fast!\n. Nice, that was fast!\n. Yeah!  That sounds really, really fantastic!\n. Yeah!  That sounds really, really fantastic!\n. It builds and runs OK, but I don't have VMware Fusion available to test it. :disappointed:\n@nathanleclaire what can I do to help you test too?  I can get you a direct ISO build if that'd be helpful. :+1:\n. It builds and runs OK, but I don't have VMware Fusion available to test it. :disappointed:\n@nathanleclaire what can I do to help you test too?  I can get you a direct ISO build if that'd be helpful. :+1:\n. See IRC, Nathan :+1:\n. See IRC, Nathan :+1:\n. :tada:\nThanks again for the super fast turnaround, @frapposelli!\n. :tada:\nThanks again for the super fast turnaround, @frapposelli!\n. I'll be sure to poke you if/when we ever do a major kernel bump again. :innocent:\n. I'll be sure to poke you if/when we ever do a major kernel bump again. :innocent:\n. LGTM\n. @dduportal I like the idea, but I don't think I'm comfortable including this as-is in the base OS, and would prefer that we document the easiest way for users to do this (especially via bootlocal.sh for persistence)\nShouldn't users usually be running docker-compose directly on their host instead of inside the VM?\n. Definitely very interested in seeing this accomplished, although we\nwouldn't include it in the default install.  If there's anything the OS is\nmissing to specifically make this possible, I'd love to see PRs fixing that\nand some documentation added for how to get rkt working inside the running\nOS though (similar to the current state of NFS support for example -- we\ndon't explicitly enable it, but we include all the primitives to make it\npossible to set up after-the-fact).\n. :+1: LGTM\nAny reason not to merge this for 1.7.1? (that you know of)\n. Cool, thanks for confirming!  You know I'll be harassing you if we run into any issues after I merge this. :wink:\n. See https://github.com/tianon/boot2docker/releases/tag/v1.7.1-rc1 for an official RC of 1.7.1 that can be used to test this. :+1:\n. https://github.com/tianon/boot2docker/releases/tag/v1.7.1-rc2 :+1:\n. @phusl is there a Debian package that includes these tools somewhere?  (or even just official released binaries of them)\n. Builds successfully! :balloon:\n. Hmm, this could use a minor reordering to improve cache, too....\n. Does using \"boot2docker shellinit\" again fix it? (which re-copies the certs\nfrom the VM)\n. Can anyone who's able to reproduce this test with v1.7.1-rc3 (https://github.com/tianon/boot2docker/releases/tag/v1.7.1-rc3) and verify that #960 fixed it?\n. Thanks to @nathanleclaire, we've verified that #960 is the fix.  Let's build us an official 1.7.1 release and finally put this to bed! :+1:\n. Closing this in favor of #979 (which seems to be opened by @darkjaguar's alter-ego @jamespacileo :smile:).\n. I wonder if there's just some mount flag missing (like charset or iocharset), or if we actually need locale files for this to work.\n. I wonder if there's just some mount flag missing (like charset or iocharset), or if we actually need locale files for this to work.\n. Awesome, thanks so much :heart:\nI'm going to merge this so it can be part of rc2 -- know that I'll be coming for you if something horrible breaks! :wink: :smile:\n. LGTM\n. :heart: will do!\n. https://github.com/tianon/boot2docker/releases/tag/v1.7.1-rc2 :+1:\n. @legal90 is there a Debian package that includes these tools somewhere?  (or even just official released binaries of them)\n. Having a deb is definitely the best option, but having an init script for\nsysvinit is the bare minimum.\nThe new boot2docker is Debian-based, so however this would be canonically\ninstalled in a Debian guest should be fine. :+1:\n. If there's some documentation or even just a link to the files that need to\nbe installed, I can integrate and make sure we keep Parallels support!\n:smile:\n. Is the tarball we're using here one you'd recommend for use on Debian? The\nURL is boot2docker specific, so doesn't seem right but if it is I can work\nwith that.\n. Ok, sounds good enough for now!\nIRC is good, but I'm still on my way to work this morning so haven't had a\nchance to check it yet. :smile:\n. @legal90 https://github.com/boot2docker/boot2docker/commit/ad072804cc4cfdd4733de2e0eb4c41736d3e142b :+1:\n. (not the final resting place of that code, but that's where we're working on it in the interim)\n. Perhaps http://lwn.net/Articles/649846/ was what you were looking for? :smile:\n. I don't really like how this is just working around the race condition by shuffling things around a bit, but some kind of fix is better than no fix at all. :+1:\nLGTM\n. The Docker 1.7.1 release will be later this week (and thus another\nboot2docker release that includes this). :wink:\n. Everything compiles and Docker works properly. :+1:\n. Aaaaand https://lwn.net/Articles/649742/\n. Well, 4.0.6 was published on 22 Jun, I just didn't get around to updating until yesterday and right after I did, 4.0.7 was released. :smile:\n. Builds and runs successfully. :+1:\n. Ok, now I'm worried.  This was \"fixed\" in #761, and this is essentially a revert of that.\n. @simonvanderveldt awesome, thanks for doing the digging on this! :+1: :heart:\nLGTM\n. LGTM\n. cc @SvenDowideit\n. If that's accepted as the solution for Machine, I'd definitely be super +1\nto adding that same change to boot2docker-cli, especially since it's such\nan easy fix! :+1:\n. See also https://github.com/boot2docker/boot2docker-cli/issues/374 for more discussion of the issue and https://github.com/boot2docker/boot2docker-cli/pull/373 for discussion of a concrete fix.\n. Also of note is that https://github.com/docker/machine/pull/1496 already fixed this in docker-machine, and if you haven't given docker-machine a try yet, you probably want to since it'll be the de-facto way to use boot2docker in the near future.\n. The proposed solution is pretty self-explanatory, but I don't think I understand enough about the problem it's fixing to comment -- can you elaborate? :confused:\nI thought this was the entire point of the partprobe addition -- forcing the kernel to synchronously update based on the partition changes.\n. Ok, I suppose this is good enough for now -- I'm still really curious whether Debian, etc have the same issue, and how they get around it (although perhaps in this case it'd just be debian-installer that'd be affected, since it has to do with partitioning).\nLGTM\n. Excellent, thanks! :+1: \nLGTM\n. Seems sane to me, and a simple enough change to include in 1.8 even so late in the game. :+1:\n. Thanks :heart: \nLGTM\n. (Justification is at https://www.kernel.org/ -- 4.0 is no longer supported, and 4.1 is \"stable\".)\n. A followup question would be whether 4.2 would be possible/better? :wink:\n. LGTM :+1:\n. (also, +1 to -f!)\n. Yesss, thanks so much :heart:\n. Oh man, it's green.  Let's merge it before something happens!\n. ran for 35 min 26 sec dat CI\n. Sorry for the incredibly long tail!  Since this was filed, we've merged https://github.com/boot2docker/boot2docker/pull/1088, which essentially does the same thing directly in a stock boot2docker install. :+1: :heart:\nThanks!. Sorry for the incredibly long tail!  Since this was filed, we've merged https://github.com/boot2docker/boot2docker/pull/1088, which essentially does the same thing directly in a stock boot2docker install. :+1: :heart:\nThanks!. I have some pretty hefty mixed feelings about this one.  Looking at OpenNebula, it appears to be for more production-grade cloud deployments.  The current \"boot2docker\" is definitely not a suitable operating system for a true production deployment as it stands today (and hence I'd hesitate to officially support much more than \"local\" deployment methods), however the future Debian-based boot2docker reimagining will be a better candidate for such a thing IMO (https://github.com/docker/boot2docker).\n. Sorry for the long tail!\nI'm still pretty strongly -1 on adding this extra support/complexity, especially since these days there are quite a few alternative distributions which are much better suited to the use case, such as RancherOS or even something purpose-built via LinuxKit (which is what Docker for Mac and Docker for Windows use to build their minimal Linux VM distro).\nThanks for the contribution! :heart:. I've pushed 200d65bc792ec89b9c48066d6e1c5a9d3642e4c1, and will be building -rc2 including it later today, which will hopefully fix this one. :+1:\n. I've pushed 200d65bc792ec89b9c48066d6e1c5a9d3642e4c1, and will be building -rc2 including it later today, which will hopefully fix this one. :+1:\n. https://github.com/tianon/boot2docker-legacy/releases/tag/v1.9.0-rc2 :smile:\n. https://github.com/tianon/boot2docker-legacy/releases/tag/v1.9.0-rc2 :smile:\n. :heart:\n. Interesting -- had you run \"cache-clear\" before that?  I wonder if\nsomething inadvertently caused the \"fscache\" module to get loaded in the\nkernel (\"lsmod\" should tell you).\n. No worries, glad we got it :+1:\n. Is there a kernel config flag that enables this?\n. Arg :cry:\nLGTM\n. https://github.com/tianon/boot2docker-legacy/releases is where the RCs of 1.9.0 are dropping, which is going to be released next week :+1:\n. https://github.com/tianon/boot2docker-legacy/releases is where the RCs of 1.9.0 are dropping, which is going to be released next week :+1:\n. Niiiice, LGTM :+1:\nAll that's left now is AUFS support, eh? :smile:\n. cc @frapposelli \n. cc @frapposelli \n. Rock on :+1:\n. Rock on :+1:\n. Cool, this seems sane. :+1:\nDo you know if it has any other side effects or special edge cases we should be aware of?  As long as it doesn't have an effect on the standard use-case, I'm all for enabling random kernel modules. :smile:  (Something that might help answer this question would be to find out what Debian/Ubuntu's kernels set these particular values too. :pray: :innocent:)\n. Cool, this seems sane. :+1:\nDo you know if it has any other side effects or special edge cases we should be aware of?  As long as it doesn't have an effect on the standard use-case, I'm all for enabling random kernel modules. :smile:  (Something that might help answer this question would be to find out what Debian/Ubuntu's kernels set these particular values too. :pray: :innocent:)\n. Excellent, thanks for doing the research! :heart: :+1:\nLGTM\n. Hmm, this seems like a good idea, but my concern is that for larger disks it could take a really, really long time, and your VM is just inexplicably inaccessible until it finishes. :disappointed: \n. Hmm, this seems like a good idea, but my concern is that for larger disks it could take a really, really long time, and your VM is just inexplicably inaccessible until it finishes. :disappointed: \n. He meant inside the VM, not on your computer. :)\n. https://github.com/boot2docker/boot2docker/blob/057e76a8cd6755415b42dea7b4b9185c5aae7ae4/rootfs/rootfs/bootscript.sh#L72\nI'd vote bootsync.sh making the most sense, since it starts right before Docker does, but only on startup (not every time the daemon is restarted).\n. Thanks :heart:\n. No worries Nathan, I'm in no hurry. :+1:\n. Why's that?  We still support TLS here, we just don't generate certs\nanymore (which is the expensive part, especially inside a VM where we have\nessentially zero entropy).\nWould it be acceptable to your use case if we added an explicit \"yes\" value\nto the code that generates missing certs?\n. I'd honestly rather see us change the default to be not listening for\nremote connections on initial boot at all.\nWe haven't \"officially\" decided anything at this point -- this is literally\nthe thread where it's being discussed. :smile:\n. The goal of boot2docker has been, is, and will remain as far as I\nunderstand to have a simple, small OS with which to run Docker.\n. So with that goal in mind, I'm actually even more in favor of\ndisabling the default-to-remote-accessible that we've currently got in\nfavor of that being explicitly enabled after first boot (and in that\ncase, I'd be more willing to entertain keeping the certificate\ngeneration code).\n. As a Linux user myself, I like the sentiment here, but I'm not too keen on introducing more discrepancies (especially more hard-coded assumptions) in the mounts here from the host OS unless we can do it universally somehow (ie, mount under /mnt/Users etc instead of directly in /).  For that reason, I'd say I'm more partial to the implementation in #1088, which would allow us to share /home/tianon directly instead of trying to share all of /home (or directories even more specific than that like /home/tianon/dev/project).  Additionally, this would put the control for \"where to mount\" in the hands of the tool orchestrating the boot2docker VM (or the operator in charge of configuring it).\n. Closing since https://github.com/boot2docker/boot2docker/pull/1088 merged (a while ago :innocent: :sweat_smile: ) -- thanks for the contribution!. Closing since https://github.com/boot2docker/boot2docker/pull/1088 merged (a while ago :innocent: :sweat_smile: ) -- thanks for the contribution!. I like where this is going, but I am curious whether at this point it might not just make more sense to use VBoxService --only-automount like the comment suggests, avoiding our own custom shell logic entirely; I don't know what the full implications of that (or even this) might be, so I want to be very cautious in proceeding with anything like this.\ncc @nathanleclaire \nFor example, direct mounts like /home, /etc, or worse /usr would break the VM OS in pretty horrific ways.\n. Yes, it is (which is what makes any of this possible). :smile:\n. ... and with 4bd0c7d, this fixes #736 :smile: :cake: \n. ... and with 4bd0c7d, this fixes #736 :smile: :cake: \n. LGTM\n. @up4 not sure -- we're using TCL's dhcp script as-is, but I'm not sure whether it supports that :confused:. @up4 not sure -- we're using TCL's dhcp script as-is, but I'm not sure whether it supports that :confused:. Neat, simple; LGTM! :+1:\n. This is confirmed to be a general kernel issue (not specific to b2d, but something introduced in the latest 3.1 kernel) interacting strangely with AUFS and Java.  Please see https://github.com/docker/docker/issues/18180 for the latest on what's being done to track down the bug (kernel bisect necessary, which is very time consuming both in machine power and human power).\n. Indeed, thanks @AkihiroSuda. :+1:\n. Nice, I'm definitely +1 on rsync; it's a really crucial tool IMO, especially since the ISO size difference is nonexistent. :+1:\nLGTM\n. Indeed -- copying this binary from Debian directly as-is is quite a bit hairier than I'm comfortable with.  Can't this be run from inside a container instead? (using --device to give it access to the appropriate device nodes)\n. cc @frapposelli; what're your thoughts on this?\n. @frapposelli I tend to agree, although @sevikkk is correct that VBox does not currently work that way, and that there is definitely a bug here WRT a VM reboot that docker-machine didn't initiate (which is perfectly valid -- docker-machine is really the \"VM creator / manager\", not a supervisor)\nI think it'd be prudent to cc @nathanleclaire here too for his thoughts on a better way to solve this (maybe for both vmware and vbox cleanly?)\nMy only real idea is maybe having docker-machine modify bootsync to also mount shared folders explicitly (instead of mounting them itself or having the b2d boot process mount them \"magically\" like it does for vbox right now).\n. Nice, easy :+1:\nLGTM\n. Don't we also need to apply the new patch?\n. Nevermind, just tested and it does appear that this is sufficient!  Very nice! :metal:\n. LGTM\n. There's a release candidate available at\nhttps://github.com/tianon/boot2docker-legacy/releases/tag/v1.10.0-rc1 which\ncontains this fix. :+1:\n. There's a release candidate available at\nhttps://github.com/tianon/boot2docker-legacy/releases/tag/v1.10.0-rc1 which\ncontains this fix. :+1:\n. Dang, nice and simple; LGTM :+1:\n. I tend to agree with your assessment here that our \"need to update\" is fairly small, but appreciate it being brought up!  If the patch is easy to apply, I'd say sure, let's go for it, but I don't think it's worth putting a lot of work into.\nI wouldn't be at all surprised if the patch in question were to land in a 4.1.16 eventually, given that 4.1 is a longterm kernel. :smile:\n. Even better! :+1:\n. Even better! :+1:\n. Nice, thanks!   LGTM\n. Do you happen to have the ISO size difference before/after numbers handy?\n. Do you happen to have the ISO size difference before/after numbers handy?\n. (I'm guessing it's negligible in which case :+1:, but I'd like to double check to be sure.)\n. (I'm guessing it's negligible in which case :+1:, but I'd like to double check to be sure.)\n. Nice!\nI think that increase is 100% Docker itself; the rc1 I built last week (https://github.com/tianon/boot2docker-legacy/releases/tag/v1.10.0-rc1):\n32505856 boot2docker.iso\n(Same as your \"new\" value, so we're golden.)\n. Nice!\nI think that increase is 100% Docker itself; the rc1 I built last week (https://github.com/tianon/boot2docker-legacy/releases/tag/v1.10.0-rc1):\n32505856 boot2docker.iso\n(Same as your \"new\" value, so we're golden.)\n. LGTM\n. LGTM\n. Hmm, I'm not very fond of this as-is, given how easy it is to adjust after the fact and how this further complicates an already very involved Dockerfile.  For reference, here's how I build the official RCs (https://github.com/tianon/boot2docker-legacy/releases):\n``` Dockerfile\nFROM boot2docker/boot2docker\nENV TEST_DOCKER_VERSION 1.10.0-rc1\nRUN curl -fsSL https://test.docker.com/builds/Linux/x86_64/docker-$TEST_DOCKER_VERSION -o $ROOTFS/usr/local/bin/docker \\\n    && chmod +x $ROOTFS/usr/local/bin/docker \\\n    && $ROOTFS/usr/local/bin/docker -v\nRUN $ROOTFS/usr/local/bin/docker -v | sed -r 's/. version ([^ ,]+)./\\1/' > $ROOTFS/etc/version \\\n    && cp -v $ROOTFS/etc/version /tmp/iso/version\nRUN { echo; echo \"  WARNING: this is a test.docker.com build, not a release.\"; echo; } >> $ROOTFS/etc/motd\nRUN /make_iso.sh\n```\n(saved as Dockerfile.test)\nconsole\n$ docker build -t boot2docker/boot2docker --pull .\n$ docker build -t boot2docker/boot2docker:test -f Dockerfile.test .\n$ docker run --rm boot2docker/boot2docker:test > boot2docker.iso\n. Hmm, I'm not very fond of this as-is, given how easy it is to adjust after the fact and how this further complicates an already very involved Dockerfile.  For reference, here's how I build the official RCs (https://github.com/tianon/boot2docker-legacy/releases):\n``` Dockerfile\nFROM boot2docker/boot2docker\nENV TEST_DOCKER_VERSION 1.10.0-rc1\nRUN curl -fsSL https://test.docker.com/builds/Linux/x86_64/docker-$TEST_DOCKER_VERSION -o $ROOTFS/usr/local/bin/docker \\\n    && chmod +x $ROOTFS/usr/local/bin/docker \\\n    && $ROOTFS/usr/local/bin/docker -v\nRUN $ROOTFS/usr/local/bin/docker -v | sed -r 's/. version ([^ ,]+)./\\1/' > $ROOTFS/etc/version \\\n    && cp -v $ROOTFS/etc/version /tmp/iso/version\nRUN { echo; echo \"  WARNING: this is a test.docker.com build, not a release.\"; echo; } >> $ROOTFS/etc/motd\nRUN /make_iso.sh\n```\n(saved as Dockerfile.test)\nconsole\n$ docker build -t boot2docker/boot2docker --pull .\n$ docker build -t boot2docker/boot2docker:test -f Dockerfile.test .\n$ docker run --rm boot2docker/boot2docker:test > boot2docker.iso\n. Nice, thanks! :+1: \nLGTM\n. Nice, thanks! :+1: \nLGTM\n. Nice and simple, and makes sure hard-coded assumptions continue to work properly. :+1:\nLGTM\n. Closing, since this appears solved.. Thanks :+1:\nLGTM\n. Looks like the problem with addgroup is: https://github.com/docker/docker/blob/ad861876e8bb86091527f31fc944205743e5ce85/pkg/idtools/usergroupadd_linux.go#L29\nIt uses addgroup --gid, which doesn't work on busybox's addgroup:\n``` console\ndocker@boot2docker:~$ addgroup --help\nBusyBox v1.23.1 (2015-02-22 15:53:49 UTC) multi-call binary.\nUsage: addgroup [-g GID] [-S] [USER] GROUP\nAdd a group or add a user to a group\n-g GID  Group id\n-S  Create a system group\n\n```\nAfter I do addgroup dockremap manually and run again, I get the same error, so there's probably a bug somewhere there too, but I'm guessing we're going to run into trouble with that adduser line too, given busybox's adduser:\n``` console\ndocker@boot2docker:~$ adduser --help\nBusyBox v1.23.1 (2015-02-22 15:53:49 UTC) multi-call binary.\nUsage: adduser [OPTIONS] USER [GROUP]\nCreate new user, or add USER to GROUP\n-h DIR      Home directory\n-g GECOS    GECOS field\n-s SHELL    Login shell\n-G GRP      Add user to existing group\n-S      Create a system user\n-D      Don't assign a password\n-H      Don't create home directory\n-u UID      User id\n\n```\nI can confirm that after additionally doing adduser -G dockremap dockremap (had to -G because the dockremap group already existed from previously and I get adduser: group 'dockremap' in use otherwise), I get:\ntime=\"2016-02-22T23:10:27.657878899Z\" level=info msg=\"User namespaces: ID ranges will be mapped to subuid/subgid ranges of: dockremap:dockremap\" \ntime=\"2016-02-22T23:10:27.657916404Z\" level=fatal msg=\"Error starting daemon: Can't create ID mappings: open /etc/subuid: no such file or directory\"\ncc @estesp, since we're over my head now -- why would Docker be failing if /etc/subuid doesn't exist at all?  What's responsible for creating that file on other distributions?\nIf I touch both /etc/subuid and /etc/subgid, I get time=\"2016-02-22T23:12:51.966438848Z\" level=fatal msg=\"Error starting daemon: Can't create ID mappings: No subuid ranges found for user \\\"dockremap\\\"\" -- are users responsible for creating this file themselves?  Do we have documentation for this already somewhere?  (The only docs reference I can find is one that points to some external blog post in https://docs.docker.com/engine/security/security/ -> http://s3hh.wordpress.com/2013/07/19/creating-and-using-containers-without-privilege/, but that article also states that \"Today, Docker does not directly support user namespaces, but ...\")\n. Ok, that's fair -- is there some specific spot in the code you can point me to for sane values/users I could hard-code in the ISO so that at least using default works out of the box?\n. More specifically, if I pre-create the dockremap user/group, what would make sense to put into /etc/subuid and /etc/subgid?\n. Not that I know of! :metal:\nLGTM (but I'd like to have @nathanleclaire's :+1: on this too before merge)\n. Reasonable, thanks! LGTM :+1:\n. Reasonable, thanks! LGTM :+1:\n. I'm guessing it's negligible, but do you have a before/after on ISO size?\nI'm totally +1 otherwise! \n. I'm guessing it's negligible, but do you have a before/after on ISO size?\nI'm totally +1 otherwise! \n. Nice, that's perfect! LGTM\nWe have yet to dig in to why things like this don't increase the ISO size, but it's common. :smile:\n. Nice, that's perfect! LGTM\nWe have yet to dig in to why things like this don't increase the ISO size, but it's common. :smile:\n. (I'd add that step 1 to debugging this would be someone independently verifying that this change is actually what caused me to see those errors.)\n. (I'd add that step 1 to debugging this would be someone independently verifying that this change is actually what caused me to see those errors.)\n. If we can verify that this bump is what caused that (not Docker 1.10.2-rc1 or Linux 4.1.18), https://github.com/sfjro/aufs4-standalone/compare/1aa8a143457147473edc97035a7f4b89f9d234ae...326c11489fa0649462f6424ef941f4ea449d53c3 will likely be where we get to start digging.\n. If we can verify that this bump is what caused that (not Docker 1.10.2-rc1 or Linux 4.1.18), https://github.com/sfjro/aufs4-standalone/compare/1aa8a143457147473edc97035a7f4b89f9d234ae...326c11489fa0649462f6424ef941f4ea449d53c3 will likely be where we get to start digging.\n. Oh lovely, looks like that diff contains a security fix of some variety too. :scream:\n. Oh lovely, looks like that diff contains a security fix of some variety too. :scream:\n. Ah, # CONFIG_AUFS_BR_FUSE is not set -- we should actually be fine (since I think if I'm reading these patches correctly that the security issue was part of that particular feature which we haven't enabled).\n. Ah, # CONFIG_AUFS_BR_FUSE is not set -- we should actually be fine (since I think if I'm reading these patches correctly that the security issue was part of that particular feature which we haven't enabled).\n. Arg OK, can confirm that containers run successfully on Docker 1.10.2-rc1 with Linux 4.1.18 without this bump.\n. Arg OK, can confirm that containers run successfully on Docker 1.10.2-rc1 with Linux 4.1.18 without this bump.\n. ``` console\ndocker@boot2docker:~$ docker version\nClient:\n Version:      1.10.2-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   89dafc4\n Built:        Sat Feb 20 04:46:05 2016\n OS/Arch:      linux/amd64\nServer:\n Version:      1.10.2-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   89dafc4\n Built:        Sat Feb 20 04:46:05 2016\n OS/Arch:      linux/amd64\ndocker@boot2docker:~$ uname -a\nLinux boot2docker 4.1.18-boot2docker #1 SMP Sat Feb 20 08:24:27 UTC 2016 x86_64 GNU/Linux\ndocker@boot2docker:~$ docker run -it --rm alpine:3.3 sh\nUnable to find image 'alpine:3.3' locally\n3.3: Pulling from library/alpine\nee54741ab35b: Pull complete \nDigest: sha256:2d4f890b7eddb390285e3afea9be98a078c2acd2fb311da8c9048e3d1e4864d3\nStatus: Downloaded newer image for alpine:3.3\n/ # ls -lAFh\ntotal 0\n-rwxr-xr-x    1 root     root           0 Feb 20 09:02 .dockerenv\n-rwxr-xr-x    1 root     root           0 Feb 20 09:02 .dockerinit\ndrwxr-xr-x    2 root     root        1.6K Feb 16 13:59 bin/\ndrwxr-xr-x    5 root     root         380 Feb 20 09:02 dev/\ndrwxr-xr-x   13 root     root         120 Feb 20 09:02 etc/\ndrwxr-xr-x    2 root     root          40 Feb 16 13:59 home/\ndrwxr-xr-x    5 root     root         220 Feb 16 13:59 lib/\nlrwxrwxrwx    1 root     root          12 Feb 16 13:59 linuxrc -> /bin/busybox*\ndrwxr-xr-x    5 root     root         100 Feb 16 13:59 media/\ndrwxr-xr-x    2 root     root          40 Feb 16 13:59 mnt/\ndr-xr-xr-x   70 root     root           0 Feb 20 09:02 proc/\ndrwx------    2 root     root          60 Feb 20 09:02 root/\ndrwxr-xr-x    2 root     root          40 Feb 16 13:59 run/\ndrwxr-xr-x    2 root     root        1.2K Feb 16 13:59 sbin/\ndr-xr-xr-x   13 root     root           0 Feb 20 09:02 sys/\ndrwxrwxrwt    2 root     root          40 Feb 16 13:59 tmp/\ndrwxr-xr-x    7 root     root         140 Feb 16 13:59 usr/\ndrwxr-xr-x   10 root     root         200 Feb 16 13:59 var/\n/ # \ndocker@boot2docker:~$ docker run -it --rm busybox\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\nf810322bba2c: Pull complete \na3ed95caeb02: Pull complete \nDigest: sha256:97473e34e311e6c1b3f61f2a721d038d1e5eef17d98d1353a513007cf46ca6bd\nStatus: Downloaded newer image for busybox:latest\n/ # \n. console\ndocker@boot2docker:~$ docker version\nClient:\n Version:      1.10.2-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   89dafc4\n Built:        Sat Feb 20 04:46:05 2016\n OS/Arch:      linux/amd64\nServer:\n Version:      1.10.2-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   89dafc4\n Built:        Sat Feb 20 04:46:05 2016\n OS/Arch:      linux/amd64\ndocker@boot2docker:~$ uname -a\nLinux boot2docker 4.1.18-boot2docker #1 SMP Sat Feb 20 08:24:27 UTC 2016 x86_64 GNU/Linux\ndocker@boot2docker:~$ docker run -it --rm alpine:3.3 sh\nUnable to find image 'alpine:3.3' locally\n3.3: Pulling from library/alpine\nee54741ab35b: Pull complete \nDigest: sha256:2d4f890b7eddb390285e3afea9be98a078c2acd2fb311da8c9048e3d1e4864d3\nStatus: Downloaded newer image for alpine:3.3\n/ # ls -lAFh\ntotal 0\n-rwxr-xr-x    1 root     root           0 Feb 20 09:02 .dockerenv\n-rwxr-xr-x    1 root     root           0 Feb 20 09:02 .dockerinit\ndrwxr-xr-x    2 root     root        1.6K Feb 16 13:59 bin/\ndrwxr-xr-x    5 root     root         380 Feb 20 09:02 dev/\ndrwxr-xr-x   13 root     root         120 Feb 20 09:02 etc/\ndrwxr-xr-x    2 root     root          40 Feb 16 13:59 home/\ndrwxr-xr-x    5 root     root         220 Feb 16 13:59 lib/\nlrwxrwxrwx    1 root     root          12 Feb 16 13:59 linuxrc -> /bin/busybox*\ndrwxr-xr-x    5 root     root         100 Feb 16 13:59 media/\ndrwxr-xr-x    2 root     root          40 Feb 16 13:59 mnt/\ndr-xr-xr-x   70 root     root           0 Feb 20 09:02 proc/\ndrwx------    2 root     root          60 Feb 20 09:02 root/\ndrwxr-xr-x    2 root     root          40 Feb 16 13:59 run/\ndrwxr-xr-x    2 root     root        1.2K Feb 16 13:59 sbin/\ndr-xr-xr-x   13 root     root           0 Feb 20 09:02 sys/\ndrwxrwxrwt    2 root     root          40 Feb 16 13:59 tmp/\ndrwxr-xr-x    7 root     root         140 Feb 16 13:59 usr/\ndrwxr-xr-x   10 root     root         200 Feb 16 13:59 var/\n/ # \ndocker@boot2docker:~$ docker run -it --rm busybox\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\nf810322bba2c: Pull complete \na3ed95caeb02: Pull complete \nDigest: sha256:97473e34e311e6c1b3f61f2a721d038d1e5eef17d98d1353a513007cf46ca6bd\nStatus: Downloaded newer image for busybox:latest\n/ # \n```\n. Oh nice, thanks for the link @AkihiroSuda! :heart:\nSo, 20160301 probably includes the fix? :smile:  (testing now)\n. See also the discussion in #1134 -- I'm definitely very much +1 to making sure that EXTRA_ARGS='--userns-remap default' works out of the box, but I'm not keen on turning it on by default unless/until Docker upstream does.\n. (which would mean replacing that username/group with dockremap, since that's what --userns-remap default expects / tries to create)\n. Also, couldn't we bake this user/group into the image instead of creating them at boot time?\n. The reason the Docker group bit is done during boot is specifically because that's handled by TCL itself -- we don't ever create the Docker user, but we have to create the Docker group for it to have access to the socket (and which user is created can be modified via the kernel command line, which is the reason for the if there).  This is why I think we should pre-bake this user and their permissions during build instead (since it'll work the same but be already baked-in).\n. Other than that, this looks great. :smile: :+1:\n. Thanks! :smile: It's not super urgent -- I don't want to include this in\nthe 1.10.3 coming out today, but I would like to get this in before we cut\n1.11. :heart:\n. :heart:\n. Opened by mistake?  Feel free to comment with more details if not.\n. I'm hesitant on this one given that it's technically a breaking change. :disappointed:\n(Bind-mounting this directory into various containers running as various UIDs is likely to cause all sorts of trouble, for example.)\n. #ugh\n. I'm really annoyed the containerd binary is being lumped into Docker's release artifacts when it's a separate project :/\nOther than the version file change, this is fine enough for now; LGTM\n. Sorry for the long delay -- this is definitely something to do with VirtualBox (not the boot2docker ISO).  I'd recommend trying a VirtualBox-specific support forum/community for help determining the root cause.. :scream: cc @frapposelli\n. :scream: cc @frapposelli\n. I'm building this now so that I can verify that it actually works, and so that I can update kernel_config with the result of make oldconfig too. :+1:\n. I'm building this now so that I can verify that it actually works, and so that I can update kernel_config with the result of make oldconfig too. :+1:\n. cc @frapposelli @legal90 @phusl -- anything objections to making this move? Any additional changes we'll need to make that you're aware of?\n. cc @frapposelli @legal90 @phusl -- anything objections to making this move? Any additional changes we'll need to make that you're aware of?\n. Ok, new commit applies defaults from make oldconfig (except CONFIG_CGROUP_PIDS, which I noticed and set to y because https://github.com/docker/docker/pull/18697 which is part of Docker 1.11 :balloon:)\n. Ok, new commit applies defaults from make oldconfig (except CONFIG_CGROUP_PIDS, which I noticed and set to y because https://github.com/docker/docker/pull/18697 which is part of Docker 1.11 :balloon:)\n. console\ndocker@boot2docker:~$ docker run -it --rm --pids-limit 1 alpine:3.3 sh\n/ # ls -l\nsh: can't fork\n/ #\n\n. console\ndocker@boot2docker:~$ docker run -it --rm --pids-limit 1 alpine:3.3 sh\n/ # ls -l\nsh: can't fork\n/ #\n\n. Ok, merging! :+1:\n. Ok, merging! :+1:\n. LGTM :+1:\n. LGTM :+1:\n. Since we're resolving deps-of-TCZ_DEPS ourselves, I wonder if it'd be prudent to also include a \"chroot test\" for some of the utilities we install via that method too (like git --version, etc).  I also wonder if we could instead utilize TCL's package manager more directly and get dep resolution somewhat more automatically (because I have to believe it manages \"dependency\" information for each package :sweat_smile:).\n. Since we're resolving deps-of-TCZ_DEPS ourselves, I wonder if it'd be prudent to also include a \"chroot test\" for some of the utilities we install via that method too (like git --version, etc).  I also wonder if we could instead utilize TCL's package manager more directly and get dep resolution somewhat more automatically (because I have to believe it manages \"dependency\" information for each package :sweat_smile:).\n. (I should add that I've tested both that this builds successfully, and that the resulting ISO still works and Docker still runs containers within it.)\n. (I should add that I've tested both that this builds successfully, and that the resulting ISO still works and Docker still runs containers within it.)\n. With the ulimit we have in boot2docker, the code is correct:\nconsole\ndocker@boot2docker:~$ ulimit -a\n-f: file size (blocks)             unlimited\n-t: cpu time (seconds)             unlimited\n-d: data seg size (kb)             unlimited\n-s: stack size (kb)                8192\n-c: core file size (blocks)        0\n-m: resident set size (kb)         unlimited\n-l: locked memory (kb)             64\n-p: processes                      15667\n-n: file descriptors               1024\n-v: address space (kb)             unlimited\n-w: locks                          unlimited\n-e: scheduling priority            0\n-r: real-time priority             0\nIt's probably worth adding a comment in that file noting this discrepancy. :sweat_smile:\n. With the ulimit we have in boot2docker, the code is correct:\nconsole\ndocker@boot2docker:~$ ulimit -a\n-f: file size (blocks)             unlimited\n-t: cpu time (seconds)             unlimited\n-d: data seg size (kb)             unlimited\n-s: stack size (kb)                8192\n-c: core file size (blocks)        0\n-m: resident set size (kb)         unlimited\n-l: locked memory (kb)             64\n-p: processes                      15667\n-n: file descriptors               1024\n-v: address space (kb)             unlimited\n-w: locks                          unlimited\n-e: scheduling priority            0\n-r: real-time priority             0\nIt's probably worth adding a comment in that file noting this discrepancy. :sweat_smile:\n. Given https://github.com/boot2docker/boot2docker/blob/d63b52eefd94c793ec7ecb3bc198eb425fd78ed9/rootfs/rootfs/usr/local/etc/init.d/docker#L31-L35 (persistent /etc/docker), wouldn't it be better to follow the official documentation and use /etc/docker/certs.d for this now?\n. Fair enough, LGTM\n. Nice, thanks @mrjana! \n. Given that Debian enables them (https://sources.debian.net/src/linux/4.6.1-1/debian/config/config/#L6086-L6088), I'm +1.  Can we use =m instead of =y though?\n. Nice, ISO size is unchanged, and since they're modules, they should have no effect on any existing functionality by default. :+1:\nLGTM\n. :metal:\n. cc @yosifkit\n. Tested locally, working really, really well.\n. Docker automatically uses /var/lib/docker/165536.165536 when this is enabled, so we don't need to muck with /var/lib/docker either (which I also tested). :+1:\n. Sorry for the long delay -- I think newer versions of Docker have stopped shelling out to tar on the host and use archive/tar from Go's stdlib directly. :+1:. (It could also be the usage of tar during boot2docker's boot process which is causing this failure -- I assume you managed to find a workaround by now though. :man_facepalming:). Sorry for the long delay.  Did you re-create any existing containers after applying this change and restarting your daemon (the logging configuration of existing containers will remain unchanged)?  In recent versions, you could also put this configuration inside /etc/docker/daemon.json (which is persistent).\nSince this appears to be as solved as it can be, I'm going to close. :+1:. Rocking, LGTM :metal:\n. Rocking, LGTM :metal:\n. Sorry for the long delay.  As I've noted elsewhere, I'd honestly recommend choosing a different distribution as your base (something designed to be more flexible) if you need something more advanced than what's provided here out-of-the-box.. > adding the whole Xfce desktop is out of scope for Boot2Docker\nDefinitely this -- I would strongly recommend anyone needing additional packages over what boot2docker provides to consider using a distro that's actually well-suited for that (like Debian, Ubuntu, Fedora, even Alpine Linux). :+1:\n(Closing since this definitely is out of scope for boot2docker). FWIW, I typically run QEMU in a Docker container :smile:. This has been supported for a while now. :tada: :+1:. If you must scan the ISO for viruses, you should be able to use your host's virus scanner to do so -- simply point it at the ISO.  If it isn't able to look inside and scan the contents of the ISO appropriately, you should probably get a new virus scanner.\nClosing, since there's nothing we can fix in the ISO here (we definitely don't include anything that calls out to sektori.org).. https://github.com/docker/docker/blob/2a540c18b69bebd7153ba87ffc91aade95ba2769/contrib/check-config.sh#L230 (CFQ_GROUP_IOSCHED)\n. https://github.com/docker/docker/blob/2a540c18b69bebd7153ba87ffc91aade95ba2769/contrib/check-config.sh#L230 (CFQ_GROUP_IOSCHED)\n. Additionally: https://sources.debian.net/src/linux/4.6.4-1/debian/config/config/#L4973-L4976\n```\n\nfile: fs/autofs4/Kconfig\n\nCONFIG_AUTOFS4_FS=m\n```\n. Additionally: https://sources.debian.net/src/linux/4.6.4-1/debian/config/config/#L4973-L4976\n```\n\nfile: fs/autofs4/Kconfig\n\nCONFIG_AUTOFS4_FS=m\n``\n. cc @yosifkit \n. cc @yosifkit \n. Even more specifically, it's building via https://github.com/tianon/jenkins-groovy/blob/8f9a123a20e19367a1dcff9d9d7b491548b47454/dsl/tianon/boot2docker.groovy#L53-L79 currently (which after #1193 will be updated to useDockerfile.experimental` as-is instead of building it custom at build time).\n. LGTM :heart:\n. Very nice, thanks! :+1:\nLGTM\n. Sweet, thanks! :+1:\nLGTM\n. Sorry for the long delay -- the short answer is that we don't know, we aren't really experts in the intricacies of VirtualBox, so I'd recommend finding a VirtualBox-specific support community/forum to ask about this instead. :+1:. Closing since this appears to be somewhere between solved an an environmental issue (not something we can fix in the ISO).. Agreed -- I'm +1 on adding it, but would love to hear a bit more about the specific use case that's prompted this addition (even if only for posterity). :+1:\n. Agreed -- I'm +1 on adding it, but would love to hear a bit more about the specific use case that's prompted this addition (even if only for posterity). :+1:\n. Excellent, thanks @colrack!\n. Excellent, thanks @colrack!\n. For some context, it would appear that TCL's openssl package has changed out from under us and now requires a little bit of additional setup after it's extracted (which I'm guessing TCL's package manager would've handled automatically for us, but we get to apply manually).\nThis fixes the following when attempting to pull images on recent builds:\ndocker: Error while pulling image: Get https://index.docker.io/v1/repositories/library/alpine/images: x509: failed to load system roots and no roots provided.\n. For some context, it would appear that TCL's openssl package has changed out from under us and now requires a little bit of additional setup after it's extracted (which I'm guessing TCL's package manager would've handled automatically for us, but we get to apply manually).\nThis fixes the following when attempting to pull images on recent builds:\ndocker: Error while pulling image: Get https://index.docker.io/v1/repositories/library/alpine/images: x509: failed to load system roots and no roots provided.\n. Updated the comments to be a bit more clear and to include some testing to ensure it's actually doing what it's supposed to.\n. Updated the comments to be a bit more clear and to include some testing to ensure it's actually doing what it's supposed to.\n. (Currently doing another test build to ensure it's working 100% properly before I merge and rebuild official v1.12.2-rc1 ISOs.)\n. (Currently doing another test build to ensure it's working 100% properly before I merge and rebuild official v1.12.2-rc1 ISOs.)\n. Success!\nconsole\ndocker@boot2docker:~$ docker run -it --rm alpine sh\nUnable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\nc0cb142e4345: Pull complete \nDigest: sha256:ca7b185775966003d38ccbd9bba822fb570766e4bb69292ac23490f36f8a742e\nStatus: Downloaded newer image for alpine:latest\n/ #\n. Success!\nconsole\ndocker@boot2docker:~$ docker run -it --rm alpine sh\nUnable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\nc0cb142e4345: Pull complete \nDigest: sha256:ca7b185775966003d38ccbd9bba822fb570766e4bb69292ac23490f36f8a742e\nStatus: Downloaded newer image for alpine:latest\n/ #\n. :+1:\n. :+1:\n. Sorry for the long delay -- this is a (mis?)feature of Tiny Core Linux: it creates the docker user at bootup.  It's specified via the user= parameter during boot, but I'm not sure if there's a parameter to specify the preferred shell for the user also.\nRealistically, if you require more than what's provided by the standard ISO, I'd recommend basing your environment on a more full-featured distribution which is more conducive to these sorts of customizations (such as Debian). :+1:. Sorry for the long delay -- I'm not sure I understand what this issue has to do with boot2docker? (we don't have a service command, last I checked)\nIn the future, these sorts of questions/requests would be more appropriately posted to the Docker Community Forums, the Docker Community Slack, or Stack Overflow.. Thanks @cglewis :heart:\nI don't understand why it fails, but I do trust that it's better this way. :+1:\n. Closing, since this appears resolved. :+1:. @nathanleclaire did you get a chance to test that ISO I sent over? :pray:\n. (I've run it successfully locally)\n. @jonathanperret hmm, good point :disappointed:\nI wonder if there's some way we can mimic systemd's generator behavior here and do some runtime detection to determine whether the given tty exists before launching getty repeatedly on it? :confused:. @simonvanderveldt seems like a pretty sane approach to me!\nAny idea if there's an easy way for us to determine whether a given TTY is actually connected?\nconsole\ndocker@boot2docker:~$ ls -l /dev/ttyS*\ncrw-------    1 docker   staff       4,  64 Jan  4 21:24 /dev/ttyS0\ncrw--w----    1 root     root        4,  65 Jun 17  2006 /dev/ttyS1\ncrw-rw----    1 root     staff       4,  66 Jun 17  2006 /dev/ttyS2\ncrw-rw----    1 root     staff       4,  67 Jun 17  2006 /dev/ttyS3\nMaybe there's something in the code systemd uses for doing so we could mimic?. https://github.com/systemd/systemd/blob/6a47fd894d601f7e8e88dec4cb35dfb7d7c15eff/src/getty-generator/getty-generator.c#L94-L116 seems to be the relevant code:\nc\n        /* Some TTYs are weird and have been enumerated but don't work\n         * when you try to use them, such as classic ttyS0 and\n         * friends. Let's check that and open the device and run\n         * isatty() on it. */. :smiling_imp: \nconsole\nroot@boot2docker:~# exec 42</dev/ttyS1 && { test -t 42 && echo yes || echo no; } && exec 42<&-\nno\nroot@boot2docker:~# exec 42</dev/ttyS0 && { test -t 42 && echo yes || echo no; } && exec 42<&-\nyes. Yeah, I've got a script that I think is reasonable for fixing this in b2d regardless of whether Machine adds a serial port -- I was going to work on it more today and then we had some Alpine-bump-related explosions in official images that took over my attention.  I'll make sure to get the PR open before the next RC and poke all you fine folks here to review it. :smile: :innocent:. Sorry for the long delay -- I can only imagine there's something going wrong with your Xen Server instance (or with boot2docker's admittedly experimental/poorly-maintained support for running as a Xen guest).\nSince there's not much we can do about this without further debugging into the root cause (and how to fix it), I'm going to close. :+1:. Issue appears both stale and environmental (not something wrong with the ISO), so I'm going to close. :+1:. Sorry for the long delay -- yes, using /var/lib/boot2docker/bootsync.sh, you can replace /etc/hosts with your own content or a symlink to the persistent /var/lib/boot2docker directory on every VM boot.. Relevant build output:\n```console\n...\nStep 27 : ENV VBOX_VERSION 5.1.10\n ---> Using cache\n ---> 12df3a63fc34\nStep 28 : ENV VBOX_SHA256 29fa0af66a3dd273b0c383c4adee31a52061d52f57d176b67f444698300b8c41\n ---> Using cache\n ---> ff3845024065\nStep 29 : RUN set -x &&         mkdir -p /vboxguest &&     cd /vboxguest &&         curl -fL -o vboxguest.iso http://download.virtualbox.org/virtualbox/${VBOX_VERSION}/VBoxGuestAdditions_${VBOX_VERSION}.iso &&     echo \"${VBOX_SHA256} vboxguest.iso\" | sha256sum -c - &&     7z x vboxguest.iso -ir'!VBoxLinuxAdditions.run' &&     rm vboxguest.iso &&         sh VBoxLinuxAdditions.run --noexec --target . &&     mkdir amd64 && tar -C amd64 -xjf VBoxGuestAdditions-amd64.tar.bz2 &&     rm VBoxGuestAdditions.tar.bz2 &&         KERN_DIR=/linux-kernel/ make -C amd64/src/vboxguest-${VBOX_VERSION} &&     cp amd64/src/vboxguest-${VBOX_VERSION}/.ko $ROOTFS/lib/modules/$KERNEL_VERSION-boot2docker/ &&         mkdir -p $ROOTFS/sbin &&     cp amd64/lib/VBoxGuestAdditions/mount.vboxsf amd64/sbin/VBoxService $ROOTFS/sbin/ &&     mkdir -p $ROOTFS/bin &&     cp amd64/bin/VBoxClient amd64/bin/VBoxControl $ROOTFS/bin/\n ---> Running in e3fd9974b787\n+ mkdir -p /vboxguest\n+ cd /vboxguest\n+ curl -fL -o vboxguest.iso http://download.virtualbox.org/virtualbox/5.1.10/VBoxGuestAdditions_5.1.10.iso\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 56.6M  100 56.6M    0     0  1496k      0  0:00:38  0:00:38 --:--:-- 2140k\n+ echo 29fa0af66a3dd273b0c383c4adee31a52061d52f57d176b67f444698300b8c41 vboxguest.iso\n+ sha256sum -c -\nvboxguest.iso: OK\n+ 7z x vboxguest.iso -ir!VBoxLinuxAdditions.run\n7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18\np7zip Version 9.20 (locale=C,Utf16=off,HugeFiles=on,8 CPUs)\nProcessing archive: vboxguest.iso\n...\n```. https://github.com/boot2docker/boot2docker/commit/2a30a73b4a892ee60150606a91f2b59c1b2972ec updates the URL in this comment to https://www.virtualbox.org/download/hashes/5.1.10/SHA256SUMS so it's HTTPS :metal:. Got this address from http://wiki.tinycorelinux.net/wiki:mirrors, which is up. :+1:. Sorry for the long delay -- honestly, your use case is advanced beyond what boot2docker intends to support, and I'd recommend you base your development environment on a more full-featured distribution where this sort of customization is better-supported.. Thanks! :+1:. Sorry for the long delay!  I'd recommend trying a VirtualBox specific support forum -- I don't think there's anything we can do in the boot2docker distribution itself to reduce the lag you're seeing.. Travis is happy :smile:. Yay, success! :+1:. hahahahaha :heart:\n(Merging since I've tested this successfully and need to go build rc5, and want this included :+1:). Neat! :+1:\nLGTM. My only concern would be the added maintainence burden -- I think the idea\nis interesting, but I'd want to be sure that the amount of added bits that\nneed to be maintained in b2d are kept very minimal (especially since it\nwon't get much testing after it's in, during and between releases, for\nexample).\n. My only concern would be the added maintainence burden -- I think the idea\nis interesting, but I'd want to be sure that the amount of added bits that\nneed to be maintained in b2d are kept very minimal (especially since it\nwon't get much testing after it's in, during and between releases, for\nexample).\n. Whew -- just to cross-thread ALL THE THINGS, this is part of the transition for https://github.com/docker/docker/pull/31075.. Whew -- just to cross-thread ALL THE THINGS, this is part of the transition for https://github.com/docker/docker/pull/31075.. Artifacts appear to be up, so I'm going to merge and get this building now.. Artifacts appear to be up, so I'm going to merge and get this building now.. Actually, can you update README.md too? (it has a reference to the current Docker version number). Actually, can you update README.md too? (it has a reference to the current Docker version number). \n. \n. It needs someone to figure out what changed from Linux 4.1 to 4.4 and what we need to fix in our kernel/build to make Hyper-V work properly again.. It needs someone to figure out what changed from Linux 4.1 to 4.4 and what we need to fix in our kernel/build to make Hyper-V work properly again.. Sorry for the long delay!  I have no idea on this one -- I imagine it's probably related to something VMware is doing, but I'm stabbing in the dark.  If you're still having this problem, I'd recommend reaching out to a VMware Fusion specific support group / forum (since I don't think there's anything we can do either to cause this or to fix this within the boot2docker distribution itself). :heart:. Simple fix, I like it! :+1:\nThanks! :smile:. Build output looks like:\nconsole\nStep 54/69 : RUN set -ex;   version=\"$(cat \"$ROOTFS/etc/version\")\";     if [ \"${version%-rc*}\" != \"$version\" ]; then        DOCKER_CHANNEL='test';  fi;     curl -fSL -o /tmp/dockerbin.tgz \"https://download.docker.com/linux/static/$DOCKER_CHANNEL/x86_64/docker-$version.tgz\";  tar -zxvf /tmp/dockerbin.tgz -C \"$ROOTFS/usr/local/bin\" --strip-components=1;   rm /tmp/dockerbin.tgz;  chroot \"$ROOTFS\" docker -v\n ---> Running in c42dcf04ed44\n+ cat /rootfs/etc/version\n+ version=17.04.0-ce-rc2\n+ [ 17.04.0-ce != 17.04.0-ce-rc2 ]\n+ DOCKER_CHANNEL=test\n+ curl -fSL -o /tmp/dockerbin.tgz https://download.docker.com/linux/static/test/x86_64/docker-17.04.0-ce-rc2.tgz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 25.2M  100 25.2M    0     0  10.1M      0  0:00:02  0:00:02 --:--:-- 10.1M\n+ tar -zxvf /tmp/dockerbin.tgz -C /rootfs/usr/local/bin --strip-components=1\ndocker/docker-containerd-ctr\ndocker/docker-proxy\ndocker/docker\ndocker/docker-containerd\ndocker/dockerd\ndocker/docker-init\ndocker/docker-containerd-shim\ndocker/docker-runc\n+ rm /tmp/dockerbin.tgz\n+ chroot /rootfs docker -v\nDocker version 17.04.0-ce-rc2, build 2f35d73. Build output looks like:\nconsole\nStep 54/69 : RUN set -ex;   version=\"$(cat \"$ROOTFS/etc/version\")\";     if [ \"${version%-rc*}\" != \"$version\" ]; then        DOCKER_CHANNEL='test';  fi;     curl -fSL -o /tmp/dockerbin.tgz \"https://download.docker.com/linux/static/$DOCKER_CHANNEL/x86_64/docker-$version.tgz\";  tar -zxvf /tmp/dockerbin.tgz -C \"$ROOTFS/usr/local/bin\" --strip-components=1;   rm /tmp/dockerbin.tgz;  chroot \"$ROOTFS\" docker -v\n ---> Running in c42dcf04ed44\n+ cat /rootfs/etc/version\n+ version=17.04.0-ce-rc2\n+ [ 17.04.0-ce != 17.04.0-ce-rc2 ]\n+ DOCKER_CHANNEL=test\n+ curl -fSL -o /tmp/dockerbin.tgz https://download.docker.com/linux/static/test/x86_64/docker-17.04.0-ce-rc2.tgz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 25.2M  100 25.2M    0     0  10.1M      0  0:00:02  0:00:02 --:--:-- 10.1M\n+ tar -zxvf /tmp/dockerbin.tgz -C /rootfs/usr/local/bin --strip-components=1\ndocker/docker-containerd-ctr\ndocker/docker-proxy\ndocker/docker\ndocker/docker-containerd\ndocker/dockerd\ndocker/docker-init\ndocker/docker-containerd-shim\ndocker/docker-runc\n+ rm /tmp/dockerbin.tgz\n+ chroot /rootfs docker -v\nDocker version 17.04.0-ce-rc2, build 2f35d73. Doh, I uploaded the wrong ISO!  Good catch, @TomKeur. :heart: :disappointed:\nI'll have that artifact updated in just a moment.. Ok, want to give it another download and verify that I got the right ISO up there this time? :innocent:. Sorry for the trouble -- I had the right ISO built, tested the right ISO, even included the right ISO's hashes in the release notes, but then uploaded the wrong one like a doof. :innocent:. Example builds:\nconsole\n$ docker build -t boot2docker/boot2docker:master -f Dockerfile.master .\nSending build context to Docker daemon 5.353 MB\nStep 1/7 : FROM boot2docker/boot2docker\n ---> f86b3668bd6c\nStep 2/7 : ARG DOCKER_VERSION\n ---> Running in 87ca33dd1a10\n ---> ed2e393975be\nRemoving intermediate container 87ca33dd1a10\nStep 3/7 : ARG DOCKER_SHA256\n ---> Running in 8cff48e88137\n ---> 1a8832f9f4ec\nRemoving intermediate container 8cff48e88137\nStep 4/7 : RUN set -ex;     if [ -z \"$DOCKER_VERSION\" ]; then       DOCKER_VERSION=\"$(curl -fsSL 'https://master.dockerproject.org/version')\";  fi;     url=\"https://master.dockerproject.org/linux/amd64/docker-${DOCKER_VERSION}.tgz\";    curl -fSL -o /tmp/dockerbin.tgz \"$url\";     if [ -z \"$DOCKER_SHA256\" ]; then        DOCKER_SHA256=\"$(curl -fsSL \"${url}.sha256\")\";      DOCKER_SHA256=\"$(echo \"$DOCKER_SHA256\" | cut -d' ' -f1)\";   fi;     echo \"$DOCKER_SHA256 */tmp/dockerbin.tgz\" | sha256sum -c -;     tar -zxvf /tmp/dockerbin.tgz -C \"$ROOTFS/usr/local/bin\" --strip-components=1;   rm /tmp/dockerbin.tgz;  chroot \"$ROOTFS\" docker -v\n ---> Running in 2021b2b21bbb\n+ [ -z  ]\n+ curl -fsSL https://master.dockerproject.org/version\n+ DOCKER_VERSION=17.05.0-dev\n+ url=https://master.dockerproject.org/linux/amd64/docker-17.05.0-dev.tgz\n+ curl -fSL -o /tmp/dockerbin.tgz https://master.dockerproject.org/linux/amd64/docker-17.05.0-dev.tgz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 25.6M  100 25.6M    0     0  7249k      0  0:00:03  0:00:03 --:--:-- 7248k\n+ [ -z  ]\n+ curl -fsSL https://master.dockerproject.org/linux/amd64/docker-17.05.0-dev.tgz.sha256\n+ DOCKER_SHA256=7ae1eae9c92edadf60d0bcf254a564714811a0b9e11900598ef4e5f5f83dacfd  docker-17.05.0-dev.tgz\n+ echo 7ae1eae9c92edadf60d0bcf254a564714811a0b9e11900598ef4e5f5f83dacfd  docker-17.05.0-dev.tgz\n+ cut -d  -f1\n+ DOCKER_SHA256=7ae1eae9c92edadf60d0bcf254a564714811a0b9e11900598ef4e5f5f83dacfd\n+ echo 7ae1eae9c92edadf60d0bcf254a564714811a0b9e11900598ef4e5f5f83dacfd */tmp/dockerbin.tgz\n+ sha256sum -c -\n/tmp/dockerbin.tgz: OK\n+ tar -zxvf /tmp/dockerbin.tgz -C /rootfs/usr/local/bin --strip-components=1\ndocker/docker-containerd-ctr\ndocker/docker\ndocker/docker-containerd\ndocker/dockerd\ndocker/completion/\ndocker/completion/fish/\ndocker/completion/fish/docker.fish\ndocker/completion/bash/\ndocker/completion/bash/docker\ndocker/completion/zsh/\ndocker/completion/zsh/_docker\ndocker/docker-proxy\ndocker/docker-init\ndocker/docker-runc\ndocker/docker-containerd-shim\n+ rm /tmp/dockerbin.tgz\n+ chroot /rootfs docker -v\nDocker version 17.05.0-dev, build 28334c1\n ---> 19ed7bbe3127\nRemoving intermediate container 2021b2b21bbb\nStep 5/7 : RUN set -ex;     \"$ROOTFS/usr/local/bin/docker\" -v       | sed -r 's/.* version ([^ ,]+).*/\\1/'      | tee \"$ROOTFS/etc/version\";    cp -v \"$ROOTFS/etc/version\" /tmp/iso/version\n ---> Running in fb5fb26a1a9a\n+ /rootfs/usr/local/bin/docker -v\n+ tee /rootfs/etc/version\n+ sed -r s/.* version ([^ ,]+).*/\\1/\n17.05.0-dev\n+ cp -v /rootfs/etc/version /tmp/iso/version\n'/rootfs/etc/version' -> '/tmp/iso/version'\n ---> 7ae415f4ea33\nRemoving intermediate container fb5fb26a1a9a\nStep 6/7 : RUN { echo; echo \"  WARNING: this is a build from master.dockerproject.org, not a stable release.\"; echo; } >> \"$ROOTFS/etc/motd\"\n ---> Running in a624edb691de\n ---> 3326a40fbb87\nRemoving intermediate container a624edb691de\nStep 7/7 : RUN /tmp/make_iso.sh\n ---> Running in 3894743c6d29\n+ cpio -o -H newc\n+ xz -9 --format=lzma --verbose --verbose\nxz: Filter chain: --lzma1=dict=64MiB,lc=3,lp=0,pb=2,mode=normal,nice=64,mf=bt4,depth=0\nxz: 674 MiB of memory is required. The limiter is disabled.\nxz: Decompression will need 65 MiB of memory.\n...\nconsole\n$ docker build -t boot2docker/boot2docker:master -f Dockerfile.master --build-arg DOCKER_VERSION=17.05.0-dev --build-arg DOCKER_SHA256=7ae1eae9c92edadf60d0bcf254a564714811a0b9e11900598ef4e5f5f83dacfd .\nSending build context to Docker daemon 5.353 MB\nStep 1/7 : FROM boot2docker/boot2docker\n ---> f86b3668bd6c\nStep 2/7 : ARG DOCKER_VERSION\n ---> Using cache\n ---> ed2e393975be\nStep 3/7 : ARG DOCKER_SHA256\n ---> Using cache\n ---> 1a8832f9f4ec\nStep 4/7 : RUN set -ex;     if [ -z \"$DOCKER_VERSION\" ]; then       DOCKER_VERSION=\"$(curl -fsSL 'https://master.dockerproject.org/version')\";  fi;     url=\"https://master.dockerproject.org/linux/amd64/docker-${DOCKER_VERSION}.tgz\";    curl -fSL -o /tmp/dockerbin.tgz \"$url\";     if [ -z \"$DOCKER_SHA256\" ]; then        DOCKER_SHA256=\"$(curl -fsSL \"${url}.sha256\")\";      DOCKER_SHA256=\"$(echo \"$DOCKER_SHA256\" | cut -d' ' -f1)\";   fi;     echo \"$DOCKER_SHA256 */tmp/dockerbin.tgz\" | sha256sum -c -;     tar -zxvf /tmp/dockerbin.tgz -C \"$ROOTFS/usr/local/bin\" --strip-components=1;   rm /tmp/dockerbin.tgz;  chroot \"$ROOTFS\" docker -v\n ---> Running in c291e1979d02\n+ [ -z 17.05.0-dev ]\n+ url=https://master.dockerproject.org/linux/amd64/docker-17.05.0-dev.tgz\n+ curl -fSL -o /tmp/dockerbin.tgz https://master.dockerproject.org/linux/amd64/docker-17.05.0-dev.tgz\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 25.6M  100 25.6M    0     0  4148k      0  0:00:06  0:00:06 --:--:-- 5551k\n+ [ -z 7ae1eae9c92edadf60d0bcf254a564714811a0b9e11900598ef4e5f5f83dacfd ]\n+ echo 7ae1eae9c92edadf60d0bcf254a564714811a0b9e11900598ef4e5f5f83dacfd */tmp/dockerbin.tgz\n+ sha256sum -c -\n/tmp/dockerbin.tgz: OK\n+ tar -zxvf /tmp/dockerbin.tgz -C /rootfs/usr/local/bin --strip-components=1\ndocker/docker-containerd-ctr\ndocker/docker\ndocker/docker-containerd\ndocker/dockerd\ndocker/completion/\ndocker/completion/fish/\ndocker/completion/fish/docker.fish\ndocker/completion/bash/\ndocker/completion/bash/docker\ndocker/completion/zsh/\ndocker/completion/zsh/_docker\ndocker/docker-proxy\ndocker/docker-init\ndocker/docker-runc\ndocker/docker-containerd-shim\n+ rm /tmp/dockerbin.tgz\n+ chroot /rootfs docker -v\nDocker version 17.05.0-dev, build 28334c1\n ---> fc7971449fec\nRemoving intermediate container c291e1979d02\nStep 5/7 : RUN set -ex;     \"$ROOTFS/usr/local/bin/docker\" -v       | sed -r 's/.* version ([^ ,]+).*/\\1/'      | tee \"$ROOTFS/etc/version\";    cp -v \"$ROOTFS/etc/version\" /tmp/iso/version\n ---> Running in 8fde8e813c86\n+ /rootfs/usr/local/bin/docker -v\n+ sed -r s/.* version ([^ ,]+).*/\\1/\n+ tee /rootfs/etc/version\n17.05.0-dev\n+ cp -v /rootfs/etc/version /tmp/iso/version\n'/rootfs/etc/version' -> '/tmp/iso/version'\n ---> 8e920a133100\nRemoving intermediate container 8fde8e813c86\nStep 6/7 : RUN { echo; echo \"  WARNING: this is a build from master.dockerproject.org, not a stable release.\"; echo; } >> \"$ROOTFS/etc/motd\"\n ---> Running in a5c2d9986985\n ---> 6359abff507b\nRemoving intermediate container a5c2d9986985\nStep 7/7 : RUN /tmp/make_iso.sh\n ---> Running in 16c939f0c2fa\n+ cpio -o -H newc\n+ xz -9 --format=lzma --verbose --verbose\nxz: Filter chain: --lzma1=dict=64MiB,lc=3,lp=0,pb=2,mode=normal,nice=64,mf=bt4,depth=0\nxz: 674 MiB of memory is required. The limiter is disabled.\nxz: Decompression will need 65 MiB of memory.\n.... \"What does this computer thing do??  Why can't it be easy like MAGIC??\". It's still marked as \"experimental\" in the kernel, but Debian enables it as a module which is pretty decent justification for us doing the same.\nFor reference:\n```\n-- /usr/src/linux/fs/ceph/Kconfig:1 --\nconfig CEPH_FS\n    tristate \"Ceph distributed file system\"\n    depends on INET\n    select CEPH_LIB\n    select LIBCRC32C\n    select CRYPTO_AES\n    select CRYPTO\n    default n\n    help\n      Choose Y or M here to include support for mounting the\n      experimental Ceph distributed file system.  Ceph is an extremely\n      scalable file system designed to provide high performance,\n      reliable access to petabytes of storage.\n  More information at http://ceph.newdream.net/.\n\n  If unsure, say N.\n\n. Also for reference, Debian's current config from unstable:ini\n\nfile: fs/ceph/Kconfig\n\nCONFIG_CEPH_FS=m\nCONFIG_CEPH_FSCACHE=y\nCONFIG_CEPH_FS_POSIX_ACL=y\n. Looks good, thanks! (and matches Debian's configuration for these flags). Looks good, thanks! (and matches Debian's configuration for these flags). Agreed, also in the future, these sorts of questions/requests would be more appropriately posted to [the Docker Community Forums](https://forums.docker.com/), [the Docker Community Slack](https://blog.docker.com/2016/11/introducing-docker-community-directory-docker-community-slack/), or [Stack Overflow](https://stackoverflow.com/search?tab=newest&q=docker). :+1:. Nice find; closing issue accordingly!. I can't seem to reproduce: :confused:console\n$ curl -fL --progress -o b2d.iso 'https://github.com/boot2docker/boot2docker/releases/download/v17.05.0-ce/boot2docker.iso'\n################################################################## 100.0%\n$ sha256sum b2d.iso\n0513e7e8a0d42af05fd8f8a7751e36678b79b258dd9a778aa6de55d03af83428  b2d.iso\n. I can't seem to reproduce: :confused:console\n$ curl -fL --progress -o b2d.iso 'https://github.com/boot2docker/boot2docker/releases/download/v17.05.0-ce/boot2docker.iso'\n################################################################## 100.0%\n$ sha256sum b2d.iso\n0513e7e8a0d42af05fd8f8a7751e36678b79b258dd9a778aa6de55d03af83428  b2d.iso\n``. Closing since this is an issue with GitHub, not boot2docker specifically.. They're inside the boot2docker virtual machine, not on the host.\n. I don't think so, unless you also persist the persistent storage of the VM.\n. @frapposelli are you still the best point of contact foropen-vm-toolsintegration? (and possibly willing to take a look at this and see if ouropen-vm-toolsintegration is still working or needs updates?). @frapposelli are you still the best point of contact foropen-vm-toolsintegration? (and possibly willing to take a look at this and see if ouropen-vm-tools` integration is still working or needs updates?). LGTM!  Thanks!. LGTM!  Thanks!. Since this appears to be an issue of usage/configuration, I'm going to close -- if there's something we can fix here, a PR would be excellent. :+1:\nIn the future, help with debugging would be more appropriately posted to the Docker Community Forums, the Docker Community Slack, or Stack Overflow.  Thanks!. IMO we should change the docs -- boot2docker is in pretty much just maintenance mode.  We're happy to accept bugfixes and simple PRs (especially related to the primary usage with docker-machine), but any additional functionality outside that is probably out-of-scope (and we'd especially like to keep the already-fragile boot process as simple as possible).. IMO we should change the docs -- boot2docker is in pretty much just maintenance mode.  We're happy to accept bugfixes and simple PRs (especially related to the primary usage with docker-machine), but any additional functionality outside that is probably out-of-scope (and we'd especially like to keep the already-fragile boot process as simple as possible).. Duplicate of https://github.com/boot2docker/boot2docker/pull/1047.. The current image is ~2.22GB total.  As it's currently built, none of the layers actually remove anything from a previous layer, so a squashed version would still be roughly that same size (especially since it includes the full ISO in the final layer).\nHere's some useful output (docker history on the latest version) to show which layers are contributing the most to the size:\nconsole\n$ docker history boot2docker/boot2docker | awk -F '   +' '{ print $1 \"\\t\" $3 \"\\t\" $4 }' | column -s $'\\t' -t\nIMAGE         CREATED BY                                     SIZE\n64c6e9fac902  /bin/sh -c #(nop)  CMD [\"sh\" \"-c\" \"[ -t 1 ...  0B\nc8c2d15caf35  /bin/sh -c /tmp/make_iso.sh                    79MB\n4034ba524cec  /bin/sh -c #(nop) COPY file:878a9002592695...  2.01kB\nc448249ec78e  /bin/sh -c #(nop) COPY dir:91ca97fe16fb4b2...  31.3kB\n752752d86136  /bin/sh -c set -ex  && GIT_BRANCH=\"$(git -...  46B\n7815369e307c  /bin/sh -c #(nop) COPY dir:1f50e23d0595ddc...  2.2MB\n706c12695466  /bin/sh -c set -x  && chroot \"$ROOTFS\" add...  2.3kB\n3102c1de9ab2  /bin/sh -c chroot \"$ROOTFS\" addgroup -S do...  211B\na64d08b06cc7  /bin/sh -c echo 'UTC' > \"$ROOTFS/etc/timez...  122B\nd77d2443066d  /bin/sh -c echo root > \"$ROOTFS/etc/syscon...  5B\nbd95a856cdbf  /bin/sh -c set -ex;  for s in 0 1 2 3; do ...  861B\nfd929c8ab789  /bin/sh -c mv -v \"$ROOTFS/etc/init.d/dhcp....  680B\nadaba26bc7d6  /bin/sh -c find \"$ROOTFS/etc/rc.d/\" \"$ROOT...  30.9kB\n467b958edfbc  /bin/sh -c ln -svT /usr/local/etc/acpi \"$R...  37B\nca5ad5225546  /bin/sh -c #(nop) COPY dir:fdfdf71301a50e8...  26.1kB\nf0cabdf00fb6  /bin/sh -c set -ex;  version=\"$(cat \"$ROOT...  95.2MB\nf5e77ff993f2  /bin/sh -c #(nop)  ENV DOCKER_CHANNEL=edge     0B\nb373c5bc8377  /bin/sh -c cp -v \"$ROOTFS/etc/version\" /tm...  15B\na271eec6e910  /bin/sh -c #(nop) COPY file:008c43c0dacc34...  15B\n1f1181adfc87  /bin/sh -c depmod -a -b \"$ROOTFS\" \"$KERNEL...  1.42MB\n41723192d188  /bin/sh -c set -ex  && make -C /linux-kern...  3.79MB\n3d707dda8687  /bin/sh -c set -ex  && git clone -b \"$XEN_...  22MB\na3818e25b131  /bin/sh -c #(nop)  ENV XEN_VERSION=v6.6.80     0B\na667dc649700  /bin/sh -c #(nop)  ENV XEN_REPO=https://gi...  0B\n43c7bdd5a57e  /bin/sh -c chroot \"$ROOTFS\" prltoolsd -V       0B\n64af26280c1a  /bin/sh -c set -ex  && mkdir -p /prl_tools...  1.2MB\na4bfd580ec8f  /bin/sh -c #(nop)  ENV PRL_VERSION=12.1.3-...  0B\n2b4906c8d1d4  /bin/sh -c #(nop)  ENV PRL_MAJOR=12            0B\na74c6160cd56  /bin/sh -c LD_LIBRARY_PATH='/lib:/usr/loca...  0B\n9e8e28aa211a  /bin/sh -c ln -sT libtirpc.so \"$ROOTFS/usr...  11B\n52984647e20f  /bin/sh -c ln -sT libdnet.1 \"$ROOTFS/usr/l...  9B\n25f5f3ec3645  /bin/sh -c curl -fL -o /tmp/${LIBDNET}.zip...  9.14MB\n2a3f18293638  /bin/sh -c #(nop)  ENV LIBDNET=libdnet-1.12    0B\nf4ff2d9ec746  /bin/sh -c cd /open-vm-tools &&                autore...\n69eb0929d7ec  /bin/sh -c curl --retry 10 -fsSL \"https://...  21MB\nab41e13234bf  /bin/sh -c #(nop)  ENV OVT_VERSION=10.0.0-...  0B\n0d402f86fabe  /bin/sh -c apt-get update && apt-get insta...  51.7MB\ncbc3078da3f9  /bin/sh -c set -x &&                           mkdir -p /vbo...\n13ccd92a69cb  /bin/sh -c #(nop)  ENV VBOX_SHA256=66824ee...  0B\n89fc9495b83d  /bin/sh -c #(nop)  ENV VBOX_VERSION=5.1.28     0B\n115e498a0f77  /bin/sh -c curl -fL -o $ROOTFS/usr/local/b...  4.03MB\n98884cb94d6c  /bin/sh -c ln -sT lib \"$ROOTFS/lib64\"          3B\nbda911034939  /bin/sh -c set -x  && chroot \"$ROOTFS\" sh ...  309kB\n184f04827763  /bin/sh -c cd \"$ROOTFS\" && zcat /tcl_rootf...  7.13MB\ne6ef7b6f645e  /bin/sh -c set -ex;  for dep in $TCZ_DEPS;...  27.1MB\n91988ffee475  /bin/sh -c set -ex;  curl -fL -o /tcl_root...  3.18MB\n5512c5a18f94  /bin/sh -c #(nop)  ENV TCZ_DEPS=iptables  ...  0B\n2c329942c2d3  /bin/sh -c #(nop)  ENV TCL_REPO_FALLBACK=h...  0B\n18bd5f76ea15  /bin/sh -c #(nop)  ENV TCL_REPO_BASE=http:...  0B\n3e36865e2a53  /bin/sh -c cp -v /linux-kernel/arch/x86_64...  3.66MB\ned260f54a72d  /bin/sh -c set -ex  && git clone -b \"$AUFS...  8.98MB\n7b406b9cdfde  /bin/sh -c #(nop)  ENV AUFS_UTIL_COMMIT=bb...  0B\n0d210b89ecd5  /bin/sh -c #(nop)  ENV AUFS_UTIL_BRANCH=au...  0B\n3e0d0459e9dc  /bin/sh -c #(nop)  ENV AUFS_UTIL_REPO=git:...  0B\n815ef4385f78  /bin/sh -c curl -fL http://http.debian.net...  974kB\n3af6e1829eb4  /bin/sh -c cd $ROOTFS/lib/modules &&           r...\n5b73c6dd5c2c  /bin/sh -c cd /linux-kernel &&                 make IN...\na82c43f67c98  /bin/sh -c mkdir -p /tmp/iso/boot              0B\n48a31bf62f8b  /bin/sh -c mkdir -p $ROOTFS                    0B\n4e047a493bea  /bin/sh -c #(nop)  ENV ROOTFS=/rootfs          0B\n9ec572040ee8  /bin/sh -c jobs=$(nproc);                      cd /linux-ke...\nac20b0fc641f  /bin/sh -c #(nop) COPY file:bca37c7d831aee...  118kB\ne892b84affde  /bin/sh -c git clone -b \"$AUFS_BRANCH\" \"$A...  7.39MB\n26be1287860a  /bin/sh -c #(nop)  ENV AUFS_COMMIT=7b00655...  0B\na095d9effdeb  /bin/sh -c #(nop)  ENV AUFS_BRANCH=aufs4.4     0B\nd6de27423cae  /bin/sh -c #(nop)  ENV AUFS_REPO=https://g...  0B\n21491aa3ac97  /bin/sh -c curl --retry 10 https://www.ker...  607MB\n5704a5f960fe  /bin/sh -c #(nop)  ENV KERNEL_VERSION=4.4.92   0B\n168a4410610f  /bin/sh -c apt-get update && apt-get -y in...  509MB\n40aa6d4339d4  /bin/sh -c #(nop)  CMD [\"bash\"]                0B\n<missing>     /bin/sh -c #(nop) ADD file:55b071e2cfc3ea2...  123MB. The current image is ~2.22GB total.  As it's currently built, none of the layers actually remove anything from a previous layer, so a squashed version would still be roughly that same size (especially since it includes the full ISO in the final layer).\nHere's some useful output (docker history on the latest version) to show which layers are contributing the most to the size:\nconsole\n$ docker history boot2docker/boot2docker | awk -F '   +' '{ print $1 \"\\t\" $3 \"\\t\" $4 }' | column -s $'\\t' -t\nIMAGE         CREATED BY                                     SIZE\n64c6e9fac902  /bin/sh -c #(nop)  CMD [\"sh\" \"-c\" \"[ -t 1 ...  0B\nc8c2d15caf35  /bin/sh -c /tmp/make_iso.sh                    79MB\n4034ba524cec  /bin/sh -c #(nop) COPY file:878a9002592695...  2.01kB\nc448249ec78e  /bin/sh -c #(nop) COPY dir:91ca97fe16fb4b2...  31.3kB\n752752d86136  /bin/sh -c set -ex  && GIT_BRANCH=\"$(git -...  46B\n7815369e307c  /bin/sh -c #(nop) COPY dir:1f50e23d0595ddc...  2.2MB\n706c12695466  /bin/sh -c set -x  && chroot \"$ROOTFS\" add...  2.3kB\n3102c1de9ab2  /bin/sh -c chroot \"$ROOTFS\" addgroup -S do...  211B\na64d08b06cc7  /bin/sh -c echo 'UTC' > \"$ROOTFS/etc/timez...  122B\nd77d2443066d  /bin/sh -c echo root > \"$ROOTFS/etc/syscon...  5B\nbd95a856cdbf  /bin/sh -c set -ex;  for s in 0 1 2 3; do ...  861B\nfd929c8ab789  /bin/sh -c mv -v \"$ROOTFS/etc/init.d/dhcp....  680B\nadaba26bc7d6  /bin/sh -c find \"$ROOTFS/etc/rc.d/\" \"$ROOT...  30.9kB\n467b958edfbc  /bin/sh -c ln -svT /usr/local/etc/acpi \"$R...  37B\nca5ad5225546  /bin/sh -c #(nop) COPY dir:fdfdf71301a50e8...  26.1kB\nf0cabdf00fb6  /bin/sh -c set -ex;  version=\"$(cat \"$ROOT...  95.2MB\nf5e77ff993f2  /bin/sh -c #(nop)  ENV DOCKER_CHANNEL=edge     0B\nb373c5bc8377  /bin/sh -c cp -v \"$ROOTFS/etc/version\" /tm...  15B\na271eec6e910  /bin/sh -c #(nop) COPY file:008c43c0dacc34...  15B\n1f1181adfc87  /bin/sh -c depmod -a -b \"$ROOTFS\" \"$KERNEL...  1.42MB\n41723192d188  /bin/sh -c set -ex  && make -C /linux-kern...  3.79MB\n3d707dda8687  /bin/sh -c set -ex  && git clone -b \"$XEN_...  22MB\na3818e25b131  /bin/sh -c #(nop)  ENV XEN_VERSION=v6.6.80     0B\na667dc649700  /bin/sh -c #(nop)  ENV XEN_REPO=https://gi...  0B\n43c7bdd5a57e  /bin/sh -c chroot \"$ROOTFS\" prltoolsd -V       0B\n64af26280c1a  /bin/sh -c set -ex  && mkdir -p /prl_tools...  1.2MB\na4bfd580ec8f  /bin/sh -c #(nop)  ENV PRL_VERSION=12.1.3-...  0B\n2b4906c8d1d4  /bin/sh -c #(nop)  ENV PRL_MAJOR=12            0B\na74c6160cd56  /bin/sh -c LD_LIBRARY_PATH='/lib:/usr/loca...  0B\n9e8e28aa211a  /bin/sh -c ln -sT libtirpc.so \"$ROOTFS/usr...  11B\n52984647e20f  /bin/sh -c ln -sT libdnet.1 \"$ROOTFS/usr/l...  9B\n25f5f3ec3645  /bin/sh -c curl -fL -o /tmp/${LIBDNET}.zip...  9.14MB\n2a3f18293638  /bin/sh -c #(nop)  ENV LIBDNET=libdnet-1.12    0B\nf4ff2d9ec746  /bin/sh -c cd /open-vm-tools &&                autore...\n69eb0929d7ec  /bin/sh -c curl --retry 10 -fsSL \"https://...  21MB\nab41e13234bf  /bin/sh -c #(nop)  ENV OVT_VERSION=10.0.0-...  0B\n0d402f86fabe  /bin/sh -c apt-get update && apt-get insta...  51.7MB\ncbc3078da3f9  /bin/sh -c set -x &&                           mkdir -p /vbo...\n13ccd92a69cb  /bin/sh -c #(nop)  ENV VBOX_SHA256=66824ee...  0B\n89fc9495b83d  /bin/sh -c #(nop)  ENV VBOX_VERSION=5.1.28     0B\n115e498a0f77  /bin/sh -c curl -fL -o $ROOTFS/usr/local/b...  4.03MB\n98884cb94d6c  /bin/sh -c ln -sT lib \"$ROOTFS/lib64\"          3B\nbda911034939  /bin/sh -c set -x  && chroot \"$ROOTFS\" sh ...  309kB\n184f04827763  /bin/sh -c cd \"$ROOTFS\" && zcat /tcl_rootf...  7.13MB\ne6ef7b6f645e  /bin/sh -c set -ex;  for dep in $TCZ_DEPS;...  27.1MB\n91988ffee475  /bin/sh -c set -ex;  curl -fL -o /tcl_root...  3.18MB\n5512c5a18f94  /bin/sh -c #(nop)  ENV TCZ_DEPS=iptables  ...  0B\n2c329942c2d3  /bin/sh -c #(nop)  ENV TCL_REPO_FALLBACK=h...  0B\n18bd5f76ea15  /bin/sh -c #(nop)  ENV TCL_REPO_BASE=http:...  0B\n3e36865e2a53  /bin/sh -c cp -v /linux-kernel/arch/x86_64...  3.66MB\ned260f54a72d  /bin/sh -c set -ex  && git clone -b \"$AUFS...  8.98MB\n7b406b9cdfde  /bin/sh -c #(nop)  ENV AUFS_UTIL_COMMIT=bb...  0B\n0d210b89ecd5  /bin/sh -c #(nop)  ENV AUFS_UTIL_BRANCH=au...  0B\n3e0d0459e9dc  /bin/sh -c #(nop)  ENV AUFS_UTIL_REPO=git:...  0B\n815ef4385f78  /bin/sh -c curl -fL http://http.debian.net...  974kB\n3af6e1829eb4  /bin/sh -c cd $ROOTFS/lib/modules &&           r...\n5b73c6dd5c2c  /bin/sh -c cd /linux-kernel &&                 make IN...\na82c43f67c98  /bin/sh -c mkdir -p /tmp/iso/boot              0B\n48a31bf62f8b  /bin/sh -c mkdir -p $ROOTFS                    0B\n4e047a493bea  /bin/sh -c #(nop)  ENV ROOTFS=/rootfs          0B\n9ec572040ee8  /bin/sh -c jobs=$(nproc);                      cd /linux-ke...\nac20b0fc641f  /bin/sh -c #(nop) COPY file:bca37c7d831aee...  118kB\ne892b84affde  /bin/sh -c git clone -b \"$AUFS_BRANCH\" \"$A...  7.39MB\n26be1287860a  /bin/sh -c #(nop)  ENV AUFS_COMMIT=7b00655...  0B\na095d9effdeb  /bin/sh -c #(nop)  ENV AUFS_BRANCH=aufs4.4     0B\nd6de27423cae  /bin/sh -c #(nop)  ENV AUFS_REPO=https://g...  0B\n21491aa3ac97  /bin/sh -c curl --retry 10 https://www.ker...  607MB\n5704a5f960fe  /bin/sh -c #(nop)  ENV KERNEL_VERSION=4.4.92   0B\n168a4410610f  /bin/sh -c apt-get update && apt-get -y in...  509MB\n40aa6d4339d4  /bin/sh -c #(nop)  CMD [\"bash\"]                0B\n<missing>     /bin/sh -c #(nop) ADD file:55b071e2cfc3ea2...  123MB. Looks good, thanks! :+1:. Looks good, thanks! :+1:. I think these sorts of questions/requests would be more appropriately posted to the Docker Community Forums, the Docker Community Slack, or Stack Overflow.\nThis repository is intended for the maintenance of the legacy boot2docker product.\nThe following POCs might be of additional interest:\n\nhttps://github.com/unclejack/debian2docker\nhttps://github.com/tianon/boot2docker-debian\n\nAdditionally, it's worth noting that docker-machine is built so that a stock Ubuntu installation should be completely usable (especially for cloud platforms, but works for local VMs too).. I think these sorts of questions/requests would be more appropriately posted to the Docker Community Forums, the Docker Community Slack, or Stack Overflow.\nThis repository is intended for the maintenance of the legacy boot2docker product.\nThe following POCs might be of additional interest:\n\nhttps://github.com/unclejack/debian2docker\nhttps://github.com/tianon/boot2docker-debian\n\nAdditionally, it's worth noting that docker-machine is built so that a stock Ubuntu installation should be completely usable (especially for cloud platforms, but works for local VMs too).. We use -n so that we can capture the logs, we end the command with & so that it continues running in the background.. We use -n so that we can capture the logs, we end the command with & so that it continues running in the background.. We've had a lot of recurring issues with time synchronization in boot2docker.  I imagine that your change working better is simply a red-herring -- given enough time, I'd guess that it'd start to exhibit the same issues as the current code, since it functionally isn't any different (except that logs don't go into the same file).. We've had a lot of recurring issues with time synchronization in boot2docker.  I imagine that your change working better is simply a red-herring -- given enough time, I'd guess that it'd start to exhibit the same issues as the current code, since it functionally isn't any different (except that logs don't go into the same file).. > In the case of the demonized ntpd, isnt it the behaviour that it will auto-restart if it crashed? If yes, then demonizing would be the better option here.\nNope, not at all -- there is literally no difference at all.  One way, the daemon starts in the background.  The other way, the daemon starts in the background.  Both ways, if the daemon dies, the daemon dies.\nDoes Busybox's ntpd (which is what we're using IIRC) support the logfile directive?. Fixed as part of https://github.com/boot2docker/boot2docker/pull/1332. :+1:. This looks like an issue with your environment or with GitHub's servers\n(not this project specifically).  I'd recommend trying to debug it by\ndownloading releases of other projects and/or contacting GitHub support.\n. This saves ~100MB of image size (by switching to -slim).. Any idea what the timeframe looks like on an upstream fix?  This seems OK in the interim, but we haven't had a Parallels Tools update in a long time (and I can't seem to find any reference online which would help us update to a newer version even if one were available, given that directory browsing on download.parallels.com is disabled), so I'm just concerned we'll be carrying this kludge for a long time. :disappointed:. The Travis failure is harmless -- if it builds successfully locally, you're good.  The build takes so long that often Travis will fail simply due to that. :smile:\nThanks for the additional information. :heart:\nThis looks good! :+1:. You'll want to modify something in:\nhttps://github.com/boot2docker/boot2docker/blob/e81861979593e5c2692888fdd5d022ddbf39615b/rootfs/rootfs/etc/rc.d/automount#L95-L137\nNot sure I understand the use case, but hopefully that gives you enough to get something started and/or working!  It's definitely not something we're going to officially support, so I'm going to close this issue. :heart:. I just tested with the v17.12.0-ce release ISO and cannot reproduce:\n``console\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _ |/ _ \\ / | |/ / _ \\ '|\n| |) | () | () | | / / (| | () | (|   <  / |\n|_./ _/ _/ _|__,|_/ _|_|__||\nBoot2Docker version 17.12.0-ce, build HEAD : 378b049 - Wed Dec 27 23:39:20 UTC 2017\nDocker version 17.12.0-ce, build c97c6d6\ndocker@boot2docker:~$ docker version\nClient:\n Version:   17.12.0-ce\n API version:   1.35\n Go version:    go1.9.2\n Git commit:    c97c6d6\n Built: Wed Dec 27 20:05:38 2017\n OS/Arch:   linux/amd64\nServer:\n Engine:\n  Version:  17.12.0-ce\n  API version:  1.35 (minimum version 1.12)\n  Go version:   go1.9.2\n  Git commit:   c97c6d6\n  Built:    Wed Dec 27 20:12:29 2017\n  OS/Arch:  linux/amd64\n  Experimental: false\ndocker@boot2docker:~$ echo -e 'FROM bash\\nRUN echo hi' | docker build -\nSending build context to Docker daemon  2.048kB\nStep 1/2 : FROM bash\nlatest: Pulling from library/bash\n1160f4abea84: Pull complete \n35c12c862670: Pull complete \n50313e686d4e: Pull complete \nDigest: sha256:b146a2e9aadaf2ed4a540324094412f2cd3f609f8a2f55ed608285f85f12a0f1\nStatus: Downloaded newer image for bash:latest\n ---> a853bea42baa\nStep 2/2 : RUN echo hi\n ---> Running in e70203793a03\nhi\nRemoving intermediate container e70203793a03\n ---> 9b44a2bc9c39\nSuccessfully built 9b44a2bc9c39\n```. Sounds great (totally sane) to me, I think the following is the place that needs to change:\nhttps://github.com/boot2docker/boot2docker/blob/0bb7bbd4cc0af0950cde50c0edd7efe1dee998ca/rootfs/rootfs/usr/local/etc/init.d/docker#L107-L108. Naw, I don't think it's meaningful enough to warrant that -- it'll be in\nthe link of \"changes\" for folks looking around for why their logs are less\nnoisy.  Aligning closer to upstream's defaults in something as benign as\nlogging seems like enough of a good thing to not worry about it IMO\n(especially since it's trivial for folks to re-enable if they really need\nit).\n. Awesome, thanks!! :+1:. If you also install ncurses-terminfo, the problem should go away (since then Bash will have a proper terminfo file for your TERM value). :+1:. I've just tested on v18.03.1-ce, and I cannot reproduce:\nconsole\nBoot2Docker version 18.03.1-ce, build HEAD : cb77972 - Thu Apr 26 16:40:36 UTC 2018\nDocker version 18.03.1-ce, build 9ee9f40\ndocker@boot2docker:~$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql\nUnable to find image 'mysql:latest' locally\nlatest: Pulling from library/mysql\n2a72cbf407d6: Pull complete \n38680a9b47a8: Pull complete \n4c732aa0eb1b: Pull complete \nc5317a34eddd: Pull complete \nf92be680366c: Pull complete \ne8ecd8bec5ab: Pull complete \n2a650284a6a8: Pull complete \nf3baca4eb0e3: Pull complete \nd3288bceb92d: Pull complete \n410aa06ed26b: Pull complete \n6d828875da7d: Pull complete \n7cc67dc49caa: Pull complete \nDigest: sha256:6d985a966d7bfd05b8f3a965d3da5e7f6da4a8f87cc645ddab7565c4eaf6d2bb\nStatus: Downloaded newer image for mysql:latest\nb5f56f13268d1af1837250822c87d0d298740b8808f26e45a031983acdf811ac\ndocker@boot2docker:~$ docker logs --tail=2 some-mysql\n2018-04-26T18:50:03.933982Z 0 [Warning] [MY-010330] [Server] 'tables_priv' entry 'sys_config mysql.sys@localhost' ignored in --skip-name-resolve mode.\n2018-04-26T18:50:03.938114Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.11'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.\n\nIs this project abandoned?\n\nNot entirely, but it's also not a support forum, nor is it heavily maintained.  As noted in the README (https://github.com/boot2docker/boot2docker#important-note), it's in maintenance mode, and users are heavily encouraged to transition to Docker for Windows and Docker for Mac as soon as possible.. Nope, which is exactly why this project still exists, but it's not actively maintained -- only version bumps and fixes and all focused around the Docker Toolbox use case that covers users of Windows 10 Home and older Windows releases (like 7).. As for this issue, I cannot reproduce (as noted/shown above), so I'm going to need more details about how I can create a reproducer if we're going to be able to do anything here.. Oh boy.  When you run a container with --privileged, you've essentially removed most (if not all) the protections Docker put in place for stopping that container from wreaking havoc on your host.\nOn the flip side of this, an init system like systemd expects to need to do system initialization tasks such as set up and manage devices, networking, etc.\nCombining those two together, and the systemd you've launched inside your container is very likely to either undo or redo things the init system of your host has already done, which is bound to cause issues.\nI would recommend almost never using --privileged, especially for systemd containers, and instead figure out the exact set of --cap-add, --device, --security-opt, etc required to run your container properly and as securely as possible.\nIn the future, these sorts of questions/requests would be more appropriately posted to the Docker Community Forums, the Docker Community Slack, or Stack Overflow.  Thanks!. The argument for docker login should be just the hostname and port, just like it would be specified in the image names for pushing to it (ala server:8081/image/name).  Try docker login server:8081.\nYou could also try configuring Docker to allow insecure registries to avoid dealing with certificates at all: https://docs.docker.com/registry/insecure/\nRegardless, this doesn't seem to be an issue with boot2docker itself, and more an issue of usage.. Looks like the proposed solution for https://github.com/moby/moby/pull/34319 might allow for this sort of thing, so I'd recommend following along over there (and perhaps testing the implementation). :+1:. https://github.com/boot2docker/boot2docker/compare/v17.11.0-ce...v17.12.0-ce isn't very big, but includes a switch of our build environment from Jessie to Stretch and a TCL update from 7.x to 8.x, so there must be something between those that's caused this to change (since the kernel version and kernel config didn't really change much)\nAnother possibility could be the VBox guest addition update causing other strange changes, but that seems a lot less likely.. ping @romankulikov :heart: :pray:. Thanks folks! :heart: :heart:. I'm not sure how to do it for docker-machine upgrade, but docker-machine create has a --virtualbox-boot2docker-url flag that can be used.  I believe it will also work if you replace the ISO in-place and use docker-machine restart instead of upgrade, but I haven't used docker-machine in a while, so my experience is likely outdated.\nHope that helps!. Sorry, but I'm still not convinced -- I can see some value in QEMU Agent, but I don't see what relevance that has to boot2docker, where we're specifically trying to decrease scope in an effort to maintain continued maintainability in the face of better methods of setting up Docker environments for the few users who can't migrate off docker-machine (because they're on Windows 7 or need VirtualBox for other things, for example).. Why not use a production-grade distribution like Debian or Ubuntu instead?  docker-machine supports them reasonably well in my experience.. > I don't understand the intend being your statement and your position. Why are you reluctant to also support the addition of the qemu guest agent?\n\"Boot2Docker is officially in maintenance mode\" (from the current repository readme) -- this has been the case officially since at least as far back as Mar 2 of this year, but it was a reality within the repository long before that.  New projects using Boot2Docker as a base are definitely misguided IMO -- there are many other distribution choices which are much more well-suited to the task (especially for production workloads).\nAdding the QEMU agent is going to add even more code which:\n\nI won't be testing\nI won't be using\nI will still be maintaining (ensuring it still compiles, checking whether we need to do version bumps, etc)\n\n\nSorry, but why did you allow xen, vmware and virtualbox agents to be installed and refuse to add support for another hypervisor?\n\nThese are honestly unfortunate additions at this point that I'd love to deprecate if I could -- they were added long before the project went into maintenance mode (back while docker-machine was still very actively maintained and Docker for Mac and Docker for Windows didn't exist).  Honestly, VirtualBox is one I should be testing (since it's the primary default driver for docker-machine), but I don't have a good VirtualBox setup and it's not something you can easily throw together sanely on a system that's got other hypervisors too (I use KVM quite a bit).\nThese other hypervisor bits receive no testing from me other than \"does this thing still compile?  great, hopefully it still works.\"\nI want to stress that obstinance isn't my intention; I'm trying to be realistic and set realistic expectations.  This project is not \"active\" in the sense that we're accepting new functionality and doing heavy maintenance -- all development here has been focused on making sure we can attempt to maintain the status quo for as long as possible while folks upgrade systems and/or Docker for Mac / Docker for Windows improve to the point that this project's primary use case is no longer necessary.  See https://github.com/docker/machine/issues/4537 for more discussion around docker-machine being in roughly the same state/position as boot2docker.\nAt this point, for folks looking for a very small/lightweight Docker distribution that can be easily live-booted in a similar manner as boot2docker but is also production ready/recommended (which boot2docker never has been), I would recommend RancherOS.. > ... docker-machine (which I assume is NOT in maintenance mode right?)\nIt is, actually; see https://github.com/docker/machine/issues/4537.  \"bugfix-only\". If you look at https://github.com/boot2docker/boot2docker/graphs/contributors and https://github.com/boot2docker/boot2docker/releases, you'll see we're still pretty active.  Mostly we don't want a lot of new features or new use cases.\nDon't despair, we haven't gone anywhere. :+1:. This sounds like a problem with your environment -- can you provide any more details like the contents of /etc/resolv.conf, the output of ip address, whether things like nslookup google.com 1.1.1.1 can resolve google.com appropriately, etc?\nDid you try the previous version in VirtualBox?  Mixing VirtualBox and VMware on the same system isn't something I've ever had good results with, so that could potentially be related to your issues.. I wonder if this is related to what was fixed by https://github.com/boot2docker/boot2docker/pull/1344?. (Closing as presumed either fixed by #1344 or an environmental issue.). See https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta1 and https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta2 (which include this fix). :+1:. I just tested on 18.09.0 and cannot reproduce -- are you sure you're running this from a properly configured terminal?  via ssh?  It's definitely not a given for top to be provided by BusyBox, so it would be entirely reasonable for it to require TERM to be set appropriately.. Awesome, thanks for confirming!. Awesome, thanks for confirming!. Doh, good catch!  I think I've found the source of the issue (and will be making a PR shortly):\n```console\n$ docker run --rm boot2docker/boot2docker grep -i vmxnet /usr/src/linux/.config\nCONFIG_VMXNET3 is not set\n``. Can someone here do a build of https://github.com/boot2docker/boot2docker/pull/1350 and verify that it fixes the issue? (I don't have a VMware install to test this on at the moment.). See https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta1 and https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta2 (which include this fix). :+1:. Yeah, sounds like something on your box hadboot2docker.isolocked so it couldn't be replaced with a newer download.  Glad you found a resolution.. Yeah, sounds like something on your box hadboot2docker.isolocked so it couldn't be replaced with a newer download.  Glad you found a resolution.. Looks like we also need more handling aroundresolv.conf, since sometimes it ends up empty. :confused: . Looks like we also need more handling aroundresolv.conf`, since sometimes it ends up empty. :confused: . Doh, good catch!  I think I've found the source of the issue (and will be making a PR shortly):\n```console\n$ docker run --rm boot2docker/boot2docker grep -i vmxnet /usr/src/linux/.config\nCONFIG_VMXNET3 is not set\n``. (Closing this as a duplicate of #1340 to keep the conversation in one place.). Nice catch, thanks!. Nice catch, thanks!. Good catch -- I'm working on a fix!. Good catch -- I'm working on a fix!. The fix will be in the next release of boot2docker.. See https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta1 and https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta2 (which include this fix). :+1:. https://github.com/boot2docker/boot2docker/issues/1347#issuecomment-444273380. My comment notes that it's fixed in the pre-releases for 18.09 -- there is not a non-pre-release build that includes the fix (and by default,docker-machineignores pre-releases).  If you manually use--XYZ-boot2docker-urlin order to use one of those pre-release versions, it should note that the version you have is newer than the version available and stop re-downloading every time, or you can hex edit your ISO file, or you can wait another day or two for the official v18.09.1 release.. See https://github.com/docker/machine/blob/821e8c76f048ca9323ecc9440c0e3d3d5ec4906d/libmachine/mcnutils/b2d.go#L291-L321 for the exact bit of code indocker-machinethat checks for this.. See https://github.com/docker/machine/blob/821e8c76f048ca9323ecc9440c0e3d3d5ec4906d/libmachine/mcnutils/b2d.go#L291-L321 for the exact bit of code indocker-machine` that checks for this.. It will be in the next release of boot2docker.. Please use the \"thumbs up\" reaction feature instead of spamming the issue with additional comments.\nIs this a known issue in Docker 18.09.0 or is this definitely a bug in boot2docker? (that's the first place to start to narrow down where the fix for this might belong). Reopening, since this might be caused by boot2docker itself.\n(cc @thajeztah for visibility / continuity on our conversation). Well, good news, I've narrowed it down.  Bad news, Docker's check-config.sh script needs to be updated.\nOne of these is necessary (when added, I can create a service and curl 127.0.0.1 successfully):\ndiff\n+CONFIG_IP_VS_IPV6=y\n+CONFIG_IP_VS_PROTO_TCP=y\n+CONFIG_IP_VS_PROTO_UDP=y\n+CONFIG_IP_VS_PROTO_AH_ESP=y\n+CONFIG_IP_VS_PROTO_ESP=y\n+CONFIG_IP_VS_PROTO_AH=y\n+CONFIG_IP_VS_PROTO_SCTP=y\nFor reference, here's my entire testing process: (which breaks on current b2d.iso, and works when adding all those, of which I'm sure we can narrow down to a smaller set)\nconsole\n$ docker swarm init\n$ docker service create -p 80:80 nginx:alpine\n$ curl -vvv 127.0.0.1. Narrowed down even further:\ndiff\n+CONFIG_IP_VS_PROTO_TCP=y\n+CONFIG_IP_VS_PROTO_UDP=y\n@thajeztah any idea why check-config.sh doesn't check for these?  Are these all that are necessary, or might Docker use more of these protos?  Maybe someone else we should ping? :innocent:. Just mirroring the salient bit of my comment from https://github.com/moby/moby/pull/38204#issuecomment-438725454:\n\nIn the b2d issue, it turns out that \"what changed\" is the kernel config in b2d (much more minimal now), and it's still not totally working while passing check-config.sh with flying colors.\n\n:sweat_smile: :heart:. Just mirroring the salient bit of my comment from https://github.com/moby/moby/pull/38204#issuecomment-438725454:\n\nIn the b2d issue, it turns out that \"what changed\" is the kernel config in b2d (much more minimal now), and it's still not totally working while passing check-config.sh with flying colors.\n\n:sweat_smile: :heart:. New PR here open at https://github.com/boot2docker/boot2docker/pull/1353 -- will wait for https://github.com/moby/moby/pull/38204 before merging though (especially in case there are others we need to add :heart:).. New PR here open at https://github.com/boot2docker/boot2docker/pull/1353 -- will wait for https://github.com/moby/moby/pull/38204 before merging though (especially in case there are others we need to add :heart:).. Ok, this might not actually be a full solution -- I think there's more missing.  If I switch my example above to be -p 8080:80 instead of -p 80:80 (and adjust curl to use :8080 accordingly), it still fails. :sweat:. Ok, this might not actually be a full solution -- I think there's more missing.  If I switch my example above to be -p 8080:80 instead of -p 80:80 (and adjust curl to use :8080 accordingly), it still fails. :sweat:. Not sure if any are related, but here are some relevant-looking lines from docker.log that contain the word error:\ntime=\"2018-11-14T22:20:01.291148579Z\" level=error msg=\"error reading the kernel parameter net.ipv4.vs.expire_nodest_conn\" error=\"open /proc/sys/net/ipv4/vs/expire_nodest_conn: no such file or directory\"\ntime=\"2018-11-14T22:20:01Z\" level=error msg=\"enabling default vlan on bridge br0 failed open /sys/class/net/br0/bridge/default_pvid: permission denied\"\ntime=\"2018-11-14T22:20:01.376690939Z\" level=error msg=\"reexec to set bridge default vlan failed exit status 1\"\ntime=\"2018-11-14T22:20:14Z\" level=error msg=\"setting up rule failed, [-t nat -A PREROUTING -d 10.255.0.4 -p tcp --dport 8080 -j REDIRECT --to-port 80]:  (iptables failed: iptables --wait -t nat -A PREROUTING -d 10.255.0.4 -p tcp --dport 8080 -j REDIRECT --to-port 80: iptables: No chain/target/match by that name.\\n (exit status 1))\"\ntime=\"2018-11-14T22:20:14.635870416Z\" level=error msg=\"Failed to add redirect rules for ep quizzical_goldberg.1.9negzjsp1lz28dy9oyi5tz0i2 (4b0d374): reexec failed: exit status 6\"\ntime=\"2018-11-14T22:20:50Z\" level=error msg=\"setting up rule failed, [-t nat -A PREROUTING -d 10.255.0.6 -p tcp --dport 80 -j REDIRECT --to-port 80]:  (iptables failed: iptables --wait -t nat -A PREROUTING -d 10.255.0.6 -p tcp --dport 80 -j REDIRECT --to-port 80: iptables: No chain/target/match by that name.\\n (exit status 1))\"\ntime=\"2018-11-14T22:20:50.149592234Z\" level=error msg=\"Failed to add redirect rules for ep goofy_raman.1.71is3uzpjjaot5oqud3q8j0oq (aefdf16): reexec failed: exit status 6\". Not sure if any are related, but here are some relevant-looking lines from docker.log that contain the word error:\ntime=\"2018-11-14T22:20:01.291148579Z\" level=error msg=\"error reading the kernel parameter net.ipv4.vs.expire_nodest_conn\" error=\"open /proc/sys/net/ipv4/vs/expire_nodest_conn: no such file or directory\"\ntime=\"2018-11-14T22:20:01Z\" level=error msg=\"enabling default vlan on bridge br0 failed open /sys/class/net/br0/bridge/default_pvid: permission denied\"\ntime=\"2018-11-14T22:20:01.376690939Z\" level=error msg=\"reexec to set bridge default vlan failed exit status 1\"\ntime=\"2018-11-14T22:20:14Z\" level=error msg=\"setting up rule failed, [-t nat -A PREROUTING -d 10.255.0.4 -p tcp --dport 8080 -j REDIRECT --to-port 80]:  (iptables failed: iptables --wait -t nat -A PREROUTING -d 10.255.0.4 -p tcp --dport 8080 -j REDIRECT --to-port 80: iptables: No chain/target/match by that name.\\n (exit status 1))\"\ntime=\"2018-11-14T22:20:14.635870416Z\" level=error msg=\"Failed to add redirect rules for ep quizzical_goldberg.1.9negzjsp1lz28dy9oyi5tz0i2 (4b0d374): reexec failed: exit status 6\"\ntime=\"2018-11-14T22:20:50Z\" level=error msg=\"setting up rule failed, [-t nat -A PREROUTING -d 10.255.0.6 -p tcp --dport 80 -j REDIRECT --to-port 80]:  (iptables failed: iptables --wait -t nat -A PREROUTING -d 10.255.0.6 -p tcp --dport 80 -j REDIRECT --to-port 80: iptables: No chain/target/match by that name.\\n (exit status 1))\"\ntime=\"2018-11-14T22:20:50.149592234Z\" level=error msg=\"Failed to add redirect rules for ep goofy_raman.1.71is3uzpjjaot5oqud3q8j0oq (aefdf16): reexec failed: exit status 6\". See https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta1 and https://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta2 (which include this fix). :+1:. Hmm, I wonder if we need CONFIG_VMWARE_VMCI for the shared folders -- mind adding CONFIG_VMWARE_VMCI=m to this files/kernel-config.d/vmware file too and doing a re-test?. @StefanScherer any chance I could convince you to rebuild/retest the latest here?  (the gpg build-time errors should be fixed as well as IPVS bugs with Swarm Mode and the added VMCI bits that I think should fix more of open-vm-tools :sweat_smile:). Ok, this is updated now.  I have personally tested this via:\n\nVMware Fusion 15 (trial)\nhttps://github.com/docker/machine/releases/tag/v0.16.0\nhttps://github.com/machine-drivers/docker-machine-driver-vmware/releases/tag/v0.1.0\n\nShared folders are working, but not mounting at /Users which is odd -- they're going to /hosthome (so /hosthome/tianon shows my home directory contents successfully :+1:).. The following was in the logs:\n(default) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser runScriptInGuest /Users/tianon/.docker/machine/machines/default/default.vmx /bin/sh [ ! -d /hosthome ]&& sudo mkdir /hosthome; sudo mount --bind /mnt/hgfs//hosthome /hosthome || [ -f /usr/local/bin/vmhgfs-fuse ]&& sudo /usr/local/bin/vmhgfs-fuse -o allow_other .host:/Users /hosthome || sudo mount -t vmhgfs -o uid=$(id -u),gid=$(id -g) .host:/Users /hosthome\n(Which explains /hosthome.). Nope, this fixes that too \ud83d\udc4d\n. The next, which is likely 18.09.1\n. Which driver is it that invokes hdiutil? (AFAIK, the VirtualBox and/or VMware drivers do not, which are the only ones I've tested -- I've also done a git grep on the Docker Machine source and it doesn't appear to be used in any of the built-in drivers)\nIn other words, it'd be great to get more details about how to reproduce the failure with docker-machine (since compatibility with hdiutil isn't an explicit goal of the ISOs we publish, so understanding which driver is invoking this and why they're doing so would be really helpful to motivate more digging into what's changed between 18.06 and 18.09's ISO creation process that's caused this to stop working).. This is definitely an odd use case; can you tell me a little more about what you're trying to do?\nHas this worked on previous b2d releases, or is this something new you're working on?. I'm sorry, but I'm really having a hard time seeing how this is a boot2docker issue?  I imagine you'd have similar issues with what you're trying to accomplish on any Docker host (boot2docker or otherwise).\nI'd recommend trying the Docker Community Forums, the Docker Community Slack, or Stack Overflow for further help figuring out why libvirt inside your container isn't creating a socket file (my best guess would be that it's failing to start for some reason, so I'd recommend checking any available log files and/or trying to enable verbose logging in libvirt itself).. such inconsistent indentation\n                                very indented\n        many spaces\n                                                        should be tabs\nwow\n. s/LGTM's/LGTMs/g\n. Oh, also, Docker.\n. Steeve should be listed first, since he's the BDFL (and the first in the file is the \"main\" maintainer).\n. ie, if there's ever a disagreement or a change to the MAINTAINERS files, he's the one it must go through\n. Nope: https://github.com/dotcloud/docker/blob/master/hack/MAINTAINERS.md#who-decides-what\n. Specifically: \"Step 3: The first maintainer listed is the primary maintainer. The pull request is assigned to him. He may assign it to other listed maintainers, at his discretion.\"\nAnd:\nWho assigns maintainers?\nSolomon. (ie, top-level primary maintainer)\n. Is this indentation inconsistent on purpose?\n. There's some really funky mixed indentation here - why doesn't it all match?\n. This line should be indented ;)\n. this won't work anywhere, ever\nI think what you meant was if [ -z \"$DOCKER_STORAGE\" ]; then\n. but even still, I'm not sure what the intent here is\n. This can go away with 0.9.0, can't it?\n. In theory, this isn't necessary on 0.9.0 either.\n. What the tabs and spaces together?\n. indentation is still janky here...\n. Uh, shouldn't this still be \"boot2docker/boot2docker\" ?\n. Also, shouldn't this be changed?\n. :set et - ie, these are tabs (my personal preference, but not steeve's) in a file dominated by space indents\n. Looks like we have tabs on this line, too.\n. And \"git\" is redundant down here now anyhow.\n. Shouldn't this still be \"boot2docker/boot2docker\" too?\n. Why not just use single quotes here and save yourself some stressful escaping?\n. s/; / && / (for the unlikely or even impossible event that cd $ROOTFS fails - it's a good habit to get into anyhow, even in the impossible cases)\n. Why copy and not symlink some of these?\n. Indeed, and we'll call that git hook @tianon. ;)\n. Why not just delete this bit of the init script completely?\n. boo, unrelated changes!\n. extra space here at the beginning on purpose? \" route ...\n. No period at the end of the sentence?  Also, doesn't \"download the boot2docker.iso\" sound kind of strange?\n. Don't we usually stylize \"boot2docker\" consistently in all-lowercase?\n. No question mark?  Also, again with the \"boot2docker\" consistency?\n. Why the sudden introduction of \"v\"?\n. This is markdown, so these should just be single backticks, not triplicated. :)\nie:\n`/proc/cmdline`\n. Why the double bracket for a simple comparison?  Why not just if [ \"$(tty)\" = '/dev/tty1' ]; then ?\n. This whole section looks completely out of place - see lines 41 and 42 above:\n``` sh\nMake some handy symlinks (so these things are easier to find)\nln -fs /var/lib/boot2docker/docker.log $ROOTFS/var/log/\nln -fs /usr/local/etc/init.d/docker $ROOTFS/etc/init.d/\n``\n. Why \"/boot.log\" and not somewhere standard like \"/var/log/boot2docker-boot.log\" or something?\n. Wat?  This condition is exactly the same as the one two lines up.\n. Such indentation, much janky.\n. Seriously, how do indentations like this happen? :)\n. Why the|| trueon anrm -rf`?  In what situations would that fail that we're actually running into?  (In other words, what problem does this actually solve?)\n. I'm +1 on this change, but can we please use the limit values that upstream does for consistency?\nhttps://github.com/docker/docker/blob/master/contrib/init/openrc/docker.initd#L14-L15\nhttps://github.com/docker/docker/blob/master/contrib/init/systemd/docker.service#L9-L10\nhttps://github.com/docker/docker/blob/master/contrib/init/sysvinit-debian/docker#L91-L96\nhttps://github.com/docker/docker/blob/master/contrib/init/upstart/docker.conf#L5-L6\n. Couldn't this be simplified like so?\nbash\nwhile ! ping -c 1 $NTP_SERVER; do\n    sleep 1\ndone\n. While I agree that we need both of these, the comment and variable name are technically incorrect.  ulimit -n is for the number of files, while ulimit -u is for the number of user processes, and it actually needs to be ulimit -p 1048576 since we're not using Bash here.\nconsole\ndocker@boot2docker:~$ ulimit -u 1048576\nulimit: invalid option -- 'u'\n. How about instead, we replace this whole block with a nice simple:\nbash\nsed -ir 's/^#?(UseDNS)\\s.*$/\\1 yes/' /usr/local/etc/ssh/sshd_config\n? :smile:\n. Err, I mean, \\1 no, obviously.\n. And that'll have to be -ri not -ir.\n. ie:\nbash\nsed -ri 's/^#?(UseDNS)\\s.*$/\\1 no/' /usr/local/etc/ssh/sshd_config\n. (Which is now tested on boot2docker itself, and known to be working beautifully.)\n. So, since we're basically just taking a naked kernel and applying a subset of the AUFS patches to it, why don't we just switch to using the pre-patched AUFS source trees?  I can have a PR for this pretty quick (I've played with it before, but it was when I had less time to play here so I abandoned it).  Essentially, then we'd just set CONFIG_AUFS_FS=y in our kernel config and call it a day.\nhttp://sourceforge.net/p/aufs/aufs3-linux/ci/aufs3.15/tree/\nhttp://sourceforge.net/p/aufs/aufs3-linux/ci/aufs3.16/tree/\nThe biggest benefit of this would be that we know the full set of required patches are properly pre-applied and known to be working with that particular kernel version.\n. You're going to push up a 0.2 release with the race fix, right?\n. Can you add a comment above this something like the following? (to make sure I don't re-revert this again later :smile:)\n``` dockerfile\nDo a few steps that can't be run more than once, which is why they can't be in make_iso.sh\n``\n. Fair enough!\n. Why the extra whitespace?\n. I'm still not understanding why this function is necessary.  If we just make sure we never overwrite the Docker pidfile in start if Docker's already running, isn't that good enough?\n. I don't think I've seen many init scripts that go as far askill -9; that's usually left as an exercise for the sysadmin if the daemon is actually hung so badly it won't die and needs to be killed.\n. Well, we're inside Tiny Core Linux, so we don't have start-stop-daemon and\nhave to instead emulate its features as best we can.\n. Can we switch this to just use http://http.debian.net/debian instead so we don't have future trouble with this still arbitrary choice? :smile:\n. Instead of making this already longRUNline longer, can we just make a newRUNline right here with this line in it?\n. WhyCOPYthis again, and not just doRUN cp $ROOTFS/etc/version /tmp/iso/version?\n. (in which case it could move up by the other line where weCOPYVERSIONin)\n. No, I really do mean literally http.debian.net - it's the best Debian\nmirror ever, and essentially does some geolocation instead of simple DNS\nround-robin.\n. Wait, why setup this variable if it's only used in theecholine?  Why not use it when you're running, too?\n. Why do we need to jump through such hoops here?  Isn'tps $(cat $DOCKER_SSD_PIDFILE)sufficient, like we had before?\n. Ouch, that's probably why the original wasn't working like it was supposed\nto then (with just the \"check\" protection).  Gnasty. :(\n. Fair, although it does make the image bigger.  Can I at least delete the\nISO and the tarballs since they're already extracted into the directory at\nthis point?\n. The first thing the script does is use \"modprobe vboxguest\" to bail on\nnon-virtualbox platforms.  I thought it'd be cleaner to have the\nconditional in the script itself than in here, but I don't mind moving it\nor duplicating it if you disagree.\n. For boot2docker on linux, VBoxService would really be ideal so that we only\nshare $HOME by default and let it automount properly (especially so we\ndon't have the share mount breaking /home/docker in the guest, or have\n/home/docker bleeding outwards into the host), but since the VBox binaries\nwon't work properly in our 32bit userspace with our 64bit kernel, we can't\neven enumerate the current shares and just have to poke around in the dark.\n I do want to fix that as a future enhancement, though, which is why I\nmentioned VBoxService in the comment here.  I've definitely been testing\nthis all in Linux.\n. I think that sounds awesome - so what do you propose I change here?  Rename\nthe file so it can be the center of \"share mounting\" instead of being\nspecific to VirtualBox?\n. Sure, in the context of 1.7GB, 62M isn't much, but even with a 15mbit\ninternet connection that 62M ISO still takes roughly half a minute extra\nassuming the connection is maxed out (which it usually isn't, and even that\nconnection speed is likely overestimated on the average case).\n. I named my \"/home/tianon\" share \"Users\", and then it gets mounted at \"/Users\" for the initial testing.  For more testing, I did aboot2docker sshinto the machine afterwards with my share named \"home/tianon\" instead and then didsudo -Hito get a root shell,. /etc/rc.d/vboxsfto source the \"try_mount_share\" function, thentry_mount_share /home/tianon home/tianonto actually mount it, and that worked too.\n. Specifically because it requires post-processing in \"boot2docker up\", but\nif we could get \"VBoxService\" working (or even just \"VBoxControl\", but in\nmy testing they both fail in the same way because of the same issues) we\ncould have that without any extra work by either side, which I'd definitely\nbe +1 on (and is actually exactly why I wanted to hard lock the share-name\nto the inside-the-guest path like I have here, since it makes it easier for\npeople to set up scenarios like that if they want to).\n. That's definitely reasonable IMO! :)  I'll update with that in the next\nbatch.\n. I'm trying to minimize the external interface to this (ie, I don't\nwant users to have to know that\n/etc/rc.d/whatever-this-scripts-ends-up-being-called is actually a\nthing, especially in case we have to or want to change it later).\n. Fromrootfs/rootfs/etc/rc.d/automount-shares`:\n# TODO replace this whole hacky bit with VBoxService --only-automount\n    # (the problem with that being that we can't run VBoxService because the\n    #  32bit VBoxService won't work with the 64bit kernel modules, but the 64bit\n    #  VBoxService won't work with our 32bit userspace; good times)\n. So, mostly because I think a solution where we open SSH to instrument the VM after the fact in boot2docker-cli is a really bad hack that relies way too much on the internals of the VM.\n. Ok, so a further justification is that this hack will definitely be compatible in future versions of boot2docker, where that other hack is likely not to be, but I feel like we might be going in circles now.  I'll go add some docs to mention Linux.\n. Can we gate this on a modprobe check or similar like we do the VBox Guest Additions code? https://github.com/boot2docker/boot2docker/blob/15db9a9b86e2703dabda2b27f0e60883942bf728/rootfs/rootfs/etc/rc.d/automount-shares#L8\nIs there a simple check like that to verify that we are in fact in Hyper-V?\n. According to the mount.vboxsf man page, utf8 is the default iocharset, so I'm a little confused why this would be necessary.\n. Reading mailing lists upstream, it looks like they switched to the aufs3.18.1+ branch for the 3.18 development.  Does it make sense for us to switch too?\n. Isn't this one useful for telling us juicy information about the VM platform we're inside?\n. We need CONFIG_BTRFS_FS at least at m (for persistent storage / testing Docker's BTRFS backend with boot2docker).\n. Can we get CONFIG_FUSE_FS back at m instead of at y?\n. I think some of this NFS stuff might be important to keep, even if it's just as modules that can be loaded as-needed.\n. CIFS is probably important to keep too, since it's another way people can (and do) connect their VM to the outside world.\n. I'm on the fence on this one.  It's not terribly useful inside a VM, but in a boot2docker-on-bare-metal world it's awesome to have /dev/kvm available.  Maybe keep this one as a module for now? :angel:\n. I'm not at all sure what you mean by name versus label here. :confused:\n. :+1:!\n. Won't this have other nasty, unexpected side effects?\n. Why this change too?  mount -t xyz is supposed to shell out to mount.xyz appropriately as necessary by itself.\n. s/resolve/resolv/\n. I mean just SELinux :cry:\n. Why not use --strip-components on tar to avoid the need to move the directory afterwards?  Something like:\n``` Dockerfile\nDownload and prepare ovt source\nRUN mkdir -p /vmtoolsd/open-vm-tools \\\n    && curl -L http://downloads.sourceforge.net/open-vm-tools/open-vm-tools-$OVT_VERSION.tar.gz \\\n        | tar -xzC /vmtoolsd/open-vm-tools --strip-components 1\n```\nThat way, we can even avoid the on-disk tar file completely.\n. Pulled from a very explicit commit off your Gist -- love it. :heart_eyes:\n. Makes it a little hard to update later (by anyone who isn't you), but this is only temporary, right?\n. Oh, I thought the patch itself was going to be temporary -- maybe some description about why the patch is necessary in comments here would be warranted?\n. (so we don't repeat this conversation :+1:)\n. Sounds like somebody needs to fix the open-vm-tools build system! :smile:\n. Same simple tar piping could be applied here :+1:\n. Can we swap outer the ``s here for$()?\n. Nice -- love that you're going the extra mile to verify for sure that the disk is definitely zeroed out (at least for the first 256k).\n. +++ would love to see that here too! :smile:\n. I feel like I've asked this before, but is there a nice easy way we can make this conditional based on whether we're really in VMware without hacky scraping of/sysor/procor relying on thevmtoolsdbinary to \"be a good citizen\"?  For example, both the VirtualBox-specific code and the HyperV-specific code have anif modeprobe some-module ...that works really, really well to make sure we don't even attempt to run the code unless we've got the necessary hardware we expect.\n. I hate that we've fragmented this discussion :cry: -- https://github.com/boot2docker/boot2docker/pull/638#issuecomment-66576677: is there any way we could just keep a patch to theopen-vm-tools` version instead of a full copy?  Better yet would be to figure out a way to make the original work, but I'll settle for this if we can have some clear way of saying \"this is the original and this is what had to be changed for boot2docker\", especially so that we can update as necessary later and not forget what was broken and had to be fixed here in the interim.\n. Thanks :heart:\nIf it is indeed a good citizen, let's at least add a comment noting as much\nso that we know where the assumption was encoded if we manage to find a\nsituation it's not a good citizen in later. :+1:\n. From looking at the script in question (https://github.com/boot2docker/boot2docker/blob/175488c34ff9c05c1307705c47a4d8a1282951b8/rootfs/rootfs/etc/rc.d/automount#L3-L8), I don't see how it would ever even attempt to mount any partition that doesn't have a label of boot2docker-data explicitly.  Now, if you've got two partitions with that same label, it's true that only the first one will be mounted, but I don't see that really as a problem we can reasonably solve since we're mounting based on partition label.\n. I suppose there's a fallback to just mount the first ext4 or btrfs partition, but that's still not based on name / label.\n. This looks like it might be the product of a bad rebase against master. :+1:\n. (because https://github.com/boot2docker/boot2docker/blob/175488c34ff9c05c1307705c47a4d8a1282951b8/Dockerfile#L21-L26 has these same lines :wink:)\n. We can just remove this sed completely at this point, right? (since -m64 will be the proper default now)\n. Same with this -m64 -- we should be good to just remove the -m instead. :+1:\n. I wonder if we're just missing some libraries in our final ISO or something similar.\n. What's all this SSH stuff (and the bits above) about?\n. Not sure I follow what you mean?\n. Maybe this should just be [[ \"$DISK_VENDOR\" == *VMware* ]] instead?\n. Indeed! :heart:\n. Doesn't for handle an empty list intelligently?  ie, couldn't this whole block just be:\nbash\nIPS=$(ip addr show ${interface} |sed -nEe 's/^[ \\t]*inet[ \\t]*([0-9.]+)\\/.*$/\\1/p')\nfor ip in $IPS; do\n  CERTHOSTNAMES=\"$CERTHOSTNAMES,$ip\"\ndone\nSee also:\nconsole\n$ a=''\n$ for b in $a; do echo \"$b\"; done\n$ a='a b c'\n$ for b in $a; do echo \"$b\"; done\na\nb\nc\n. This one seems to be missing the new container. :smile:\n. Wouldn't this be cleaner/easier to read if we switched the replacement separator?\nie:\nDockerfile\n    sed -i 's!\\(^CFLAGS = .*\\)!\\1 -m32 -I/tmp/kheaders/include!' Makefile && \\\n. Ouch.  I didn't realize [['s pattern-matching wasn't POSIX.  That hurts.\nHere's a hack that does work, though!\nconsole\n$ docker run -it --rm busybox\n/ # vmware='some VMware something'\n/ # [ \"${vmware%%*VMware*}\" != \"$vmware\" ] && echo yes || echo no\nyes\n. I'd prefer if this just documented master instead, since we don't officially support any version other than latest (we'll never release another update to the 1.3.3 ISO, for example).\nie, start directly with \"You can add your Registry server's public ...\"\n. Looks like this needs a rebase since #806 merged. :+1:\n. tce-loader, cgroupfs-mount, automount-shares suggest that this should be install-ca-certs :smile:\n. Scripting the output of ls is generally considered dangerous, so I'd prefer to see this use something like:\nbash\nfor cert in \"$BOOT2DOCKER_CERTS_DIR\"/*; do\n. Maybe even *.pem to make it extra specific.\n. Mind swapping this line back so we can merge? :+1:\n. Agg, this is all because of our 4.0 kernel change??\n. With ip symlinked, do we still need these hacks?\n. Can't we make these symlinks in the Dockerfile and bake them into the ISO?\n. Neat!  Does this appropriately not start up if we're not on a Xen platform?\n. Can we adjust this clone/checkout process to mimic AUFS and open-vm-tools? (https://github.com/boot2docker/boot2docker/blob/c011a58c89f746c25d9a989d0b8bc6145e1acdcd/Dockerfile#L183-L189)\nie:\n``` Dockerfile\nENV XEN_REPO https://github.com/xenserver/xe-guest-utilities\nENV XEN_BRANCH boot2docker\nENV XEN_COMMIT 4a9417fa61a5ca46676b7073fdb9181fe77ba56e\nRUN git clone -b \"$XEN_BRANCH\" \"$XEN_REPO\" /vmtoolsd \\\n    && cd /vmtoolsd \\\n    && git checkout -q \"$XEN_COMMIT\" \\\n    && make \\\n    && tar xvf build/dist/${XENTOOLS_REPO}_*.tgz -C $ROOTFS/\n``\n. These lines are in sorted order, FYI. :wink:\n. Doh, you are correct. :tired_face:\n. (ie, don't worry about it)\n. Excellent, thanks!  Would you mind adding comments to the file pointing at those to make sure I don't ask you the same question again later? :innocent:\n. Is this file not executable as-is?  Why the explicit call out to/bin/sh?  Do we need a-aon thecp` line where this comes in?\nAlso, just to be clear, if I run this daemon on VMware or VirtualBox, will the daemon stay resident, or will it terminate appropriately?\n. Does this syntax actually work properly with spaces around the = like this?\nIf so, I think someone needs to get @duglin on the line and make him pay for his crimes... :wink: (just joking @duglin :heart:)\nIn seriousness, I'd rather see this file stay at least somewhat self-consistent; what's the justification for having this as one long URL that's going to be \"fun\" to update instead of just the relevant \"version\" parts?\n``` Dockerfile\nENV PRL_MAJOR 11\nENV PRL_VERSION 11.0.0\nENV PRL_REVISION 30901\nRUN mkdir -p /prl_tools && curl -L \"http://download.parallels.com/desktop/v${PRL_MAJOR}/${PRL_VERSION}-rtm/ParallelsTools-${PRL_VERSION}-${PRL_REVISION}-boot2docker.tar.gz\" ...\n. console\n$ docker build -\nFROM debian\nENV TEST = wut\nRUN echo \"'$TEST'\"\nSending build context to Docker daemon 2.048 kB\nStep 0 : FROM debian\n ---> bf84c1d84a8f\nStep 1 : ENV TEST = wut\n ---> Running in 10900a397bf1\n ---> 5f6a500ec165\nRemoving intermediate container 10900a397bf1\nStep 2 : RUN echo \"'$TEST'\"\n ---> Running in a53fea8b0fdd\n'= wut'\n ---> e3e3c8f505af\nRemoving intermediate container a53fea8b0fdd\nSuccessfully built e3e3c8f505af\n``\n. I'm definitely down with that if it works in Linux, but otherwise I'll just\ntrust Sven's testing. :smile: :wink:\n. I'm honestly very -1 on this change, especially since there's no verification or even hard-lock on a specific commit for this repo.\n. Can you please replace this tinyurl with the fullhttp://rt.openssl.org/Ticket/History.html?use\nr=guest&pass=guest&id=3979` ?\n. Oooh, since this repo has explicit releases, what are your thoughts on compiling from the release source tarballs instead of cloning? ie, something like:\n``` Dockerfile\nENV OVT_VERSION 10.0.0-3000743\nRUN curl -fsSL \"https://github.com/vmware/open-vm-tools/archive/open-vm-tools-${OVT_VERSION}.tar.gz\" | tar -xz --strip-components=1 ...\n```\n(similar to how we handle the kernel up on line 26)\n. Awesome, thanks so much! :+1: :heart:\n. Heh, probably don't need --retry right?  github.com is fairly stable :smile:\n. That -C / is suspicious looking too, but I see that it's because the repo has kind of a strange structure. :+1:\n. Why the switch to backticks?  I personally prefer to avoid the backtick form since it's so easy to make mistakes with (and can't be nested).  Is it the -A that fixed it, or the grep regex changes?  As-is, if our PID from the file is 123 and a PID of 9123 is running, this will match when it shouldn't.\n. Doh, good catch!\n. I don't think it's pre-baked, but it is on the persistent partition so any\nexisting files will stay.\n. If the Docker daemon somehow doesn't get signaled properly during stop, this will essentially be an infinite loop -- do you think it warrants adding some simple \"max tries\" logic to give us a timeout?\n. Does our mkfs.ext4 implementation include the -T flag?  Does it include /etc/mke2fs.conf to define what news means?  Would it be safer to instead just use -i directly and figure out an OK value?  I've had good luck with -i 8096 myself generally, but did recently have to reformat my home machine to -i 6072 (but granted that I do a lot of work on the Docker Official Images, so I have thousands++ of images/layers on a constant, cycling basis so I think I'm a bit of an edge case here I think).\n. s/usernc/userns/ :smile:\n. :metal: be sure to give me a prod when it's ready!\n. Would it also work to just ln -s libtirpc.so libtirpc.so.1 to insulate ourselves a little bit from future changes?  (ldconfig shouldn't be necessary either -- that'd update the LD cache for the build environment, which shouldn't be looking inside $ROOTFS anyhow)\n. Maybe follow it up with a && readlink -f libtirpc.so.1 which will fail if our symlink ever points to something invalid, too?\n. Adding set -e here helped me find a number of the TCZ_DEPS that don't exist anymore (and don't seem to be necessary either), since they 404 and fail now.  I think libiconv and libidn were the two most notable examples.\n. This one is so that our existing flow of docker run --rm boot2docker/boot2docker > boot2docker.iso is still unchanged, but doing docker run -it --rm boot2docker/boot2docker doesn't start outputting an ISO...  :smile:  (NOT AGAIN :sob:  slams the mute keystroke)\n. These two lines are missing && in between, so it's probably worth converting this whole file to the \"postfix-&&\" format to ensure we don't miss any (since this file is relatively short, unlike the main Dockerfile :sweat:).\n. All these mv bits were happening after we COPY rootfs/rootfs ... which happens after we extract upstream's rootfs already, so our COPY already overlays appropriately and we don't need to move things after the fact. :smile:. (except dhcp.sh, which comes from the TCL rootfs and we move it into /etc/rc.d and invoke it directly ourselves). Good point.  How about something like this:\ndiff\ndiff --git a/rootfs/rootfs/usr/local/bin/forgiving-getty b/rootfs/rootfs/usr/local/bin/forgiving-getty\nindex 8dacac6..4523558 100755\n--- a/rootfs/rootfs/usr/local/bin/forgiving-getty\n+++ b/rootfs/rootfs/usr/local/bin/forgiving-getty\n@@ -19,12 +19,18 @@ fi\n # https://github.com/systemd/systemd/blob/6a47fd894d601f7e8e88dec4cb35dfb7d7c15eff/src/getty-generator/getty-generator.c#L94-L116\n verify_tty() {\n    local dev=\"/dev/$1\"\n+   # can we read the given TTY file at all?\n    test -r \"$dev\" || return 1\n+   # we can! let's open it to file descriptor 42\n+   # (random file descriptor not likely to be in use already)\n    exec 42<\"$dev\" || return 1\n    local ret=1\n+   # now that we've got it open, let's use \"test\" to check whether it's a TTY\n+   # (we can't test a file directly, which is why we opened it first)\n    if test -t 42; then\n        ret=0\n    fi\n+   # finally, close our file descriptor (no longer necessary to keep open)\n    exec 42<&- || return 1\n    return \"$ret\"\n }. Yeah, if you look at the Dockerfile changes in this PR, it used to be written via echo in the Dockerfile itself, and I simply moved it to an explicit file in the repo and added exec in front of that /bin/login so that the extra /bin/sh process doesn't stick around for every getty. :+1:. diff\n # Add serial console\n -RUN echo \"#!/bin/sh\" > $ROOTFS/usr/local/bin/autologin && \\\n -  echo \"/bin/login -f docker\" >> $ROOTFS/usr/local/bin/autologin && \\\n -  chmod 755 $ROOTFS/usr/local/bin/autologin && \\\n -  echo 'ttyS0:2345:respawn:/sbin/getty -l /usr/local/bin/autologin 9600 ttyS0 vt100' >> $ROOTFS/etc/inittab && \\\n -  echo 'ttyS1:2345:respawn:/sbin/getty -l /usr/local/bin/autologin 9600 ttyS1 vt100' >> $ROOTFS/etc/inittab. No worries -- can definitely relate :sweat_smile: . I'm OK with the general idea, but I think we should do =m instead of =y, similar to Debian: https://sources.debian.net/src/linux/stretch/debian/config/config/#L6388-L6394\n```\n\nfile: net/can/Kconfig\n\nCONFIG_CAN=m\nCONFIG_CAN_RAW=m\nCONFIG_CAN_BCM=m\nCONFIG_CAN_GW=m\n```\nCan you think of a reason why they don't set CONFIG_CAN_VCAN, and instead set CONFIG_CAN_GW?  Any reason we shouldn't simply match what they're doing?  (Debian's certainly got more manpower behind their kernel maintenance than we do in b2d). Why is this being changed from =m?  Debian uses =m here, so I'd rather stick to =m everywhere we can (especially when Debian's kernel does).. Same story on this one -- Debian uses =m so I think we ought to also unless we've got a good reason not to.. Same story again; Debian uses =m here.. Do these even exist for our version of the kernel?  I don't see any of them in Debian's 4.9 config (but we use 4.4).. Ouch, nice catch!  Since we update the kernel relatively frequently and I usually stay on top of updating README.md, I think I'd rather adjust this to drop the version number, and interested folks can dig into either the Dockerfile or the README to find out the specific version number.. Looks like an unrelated change snuck into this PR. :smile:. ",
    "jpetazzo": "I suggest to use multiple consoles instead, i.e.:\nconsole=tty0 console=ttyS0\n(So that people using a \"real\" keyboard and screen aren't locked out!)\n. Using ttyS0 means serial console; which means that when using e.g. qemu -nographic you can actually get useful console interaction on stdio, if you see what I mean.\n. By the way, I haven't re-ran the full build with that, so at least 1 person should test it first :-)\n(I only tested by \"repacking\" the existing ISO into a new one.)\n. It shows a single partition using up the whole disk. \nIt's using this Weird Trick\u2122 where the ISO format doesn't require anything special to be in the first sector; so it puts a part table and a MBR in it (that's the basic idea).\n. @moul: what do you think about https://github.com/discordianfish/docker-spotter ?\nIt watches for Docker events (e.g. \"container X has started\") and can execute commands automatically:\n./spotter \\\n  -e 'pxe-server:start:pipework:eth0:{{ID}}:192.168.242.1/24' \\\n  -e 'pxe-server:stop:echo:gone'\n. @moul if that helps you, I can write a \"pipework installer\", that would rely on bind-mounting the host /usr/local/bin directory in the container to inject pipework. Would that work here? Or is the root filesystem read-only?\n. ",
    "proppy": "Done.\n. I did a spinoff of this script here:\nhttps://gist.github.com/proppy/9823406#file-gce2docker-sh that worked with debian2docker (and should work fine with boot2docker too).\n. /cc @ludoch\n. @steeve I though bridged would help because I wanted a way to connect to the individual container without having to dynamically insert new NAT rules (everytime I start one).\n. #93 is a better answer to this. Closing.\n. #93 is a better answer to this. Closing.\n. scratch that, you need the cache\n. scratch that, you need the cache\n. BadDocumentationException then, http://docs.docker.io/en/latest/reference/commandline/cli/#build seems to implies otherwise:\n--rm: Remove intermediate containers after a successful build\n. BadDocumentationException then, http://docs.docker.io/en/latest/reference/commandline/cli/#build seems to implies otherwise:\n--rm: Remove intermediate containers after a successful build\n. oh true, you win.\n\n. oh true, you win.\n\n. /cc @aheissenberger because @steeve says so\n. I think the route issue is related to rootfs/rootfs/usr/share/udhcpc/default.script\ndeleting routers fails with:\nroute: SIOCDELRT: No such process\nAnd adding the default route  fails with:\nroute: SIOCADDRT: Network is unreachable\nShould we use iproute2 instead of ifconfig in this script?\n. @SvenDowideit you're right the grep should be more restrictive that that.\n. @aheissenberger it seems that boot2docker maintain its own copy of this script, and overwrite tcl version w/ it. So if TCL updates busybox, you will have to manually update it to get the changes, right?\n. So I managed to boot debian2docker out of the box, which makes me think something is definitly wrong with the interaction of the udhcp client script and the network setup expected on Compute Engine.\nI will do more debugging and report progress on this PR.\n. @unclejack is the merge with debian2docker still planned, if yes this change will be obsolete.\n. So feel free to close this issue in favor of the merge with boot2docker then :)\n. @steeve done, sorry!\n. @steeve unlikely, I think the GCE issues are \"purely\" a GCE issue (not a boot2docker one): that is the dhcp client fails to apply the \"buggy?\" route params he gets back to the server.\nI'm suggeting the udhcpc->kernel change because I thought it would be better aligned w/ boot2docker minimalism.\n. turning this into a revert PR, please merge ASAP\n. FYI, the dhcp kernel settings does work on GCE and fixes the route issue in #230:\nIP-Config: Got DHCP answer from 169.254.169.254, my address is 10.240.154.67\nIP-Config: Guessing netmask 255.0.0.0\nIP-Config: Complete:\n     device=eth0, hwaddr=42:01:0a:f0:9a:43, ipaddr=10.240.154.67, mask=255.0.0.0, gw=10.240.0.1\n     host=vm-boot2docker-1393325530-test.c.proppy-docker.internal, domain=c.proppy-docker.internal., nis-domain=(none)\n     bootserver=10.240.0.1, rootserver=10.240.0.1, rootpath=, mtu=1460\n     nameserver0=169.254.169.254\n. But DNS is not configured, so I think we should still revert:\nproppy@noir:~$ docker -H :42434 run busybox echo coucou\nUnable to find image 'busybox' locally\nPulling repository busybox\n2014/02/25 03:03:14 pull: Get https://index.docker.io/v1/repositories/busybox/images: dial tcp: lookup index.docker.io: no DNS servers\n. what @tianon said. PTAL\n. IIRC, the only thing needed was to raise loglevel\n. IIRC, the only thing needed was to raise loglevel\n. I managed to \"fix\" @ludoch 's setup by adding a new default route on /24 as suggested in the comment and changing the VM ip manually so it doesn't conflict w/ the host.\nHis setup was in a weird state where vboxnet0 on the host and eth1 on the vm had the same ip: 192.168.59.103.\nI also suspect that boot2docker destroy doesn't seems to properly delete the vboxnetN interface as vboxnetN+1 would get created when running boot2docker init.\n. I managed to \"fix\" @ludoch 's setup by adding a new default route on /24 as suggested in the comment and changing the VM ip manually so it doesn't conflict w/ the host.\nHis setup was in a weird state where vboxnet0 on the host and eth1 on the vm had the same ip: 192.168.59.103.\nI also suspect that boot2docker destroy doesn't seems to properly delete the vboxnetN interface as vboxnetN+1 would get created when running boot2docker init.\n. can we get a transition release where both auth mode (the old cert one, and the new identity one) are supported?\n. Haven't see this issue recently.\n. Haven't see this issue recently.\n. ",
    "SvenDowideit": "and (sadly), all that gumpf for WEP\n. @proppy can you write some documentation for this script? At this point, I can't tell anyone why it exists\n. @proppy did you get anywhere with this? I may be needing the serial console next week too.\n. implemented somwhere back in 0.7\n. https://github.com/SvenDowideit/dockerfiles/blob/master/samba/ is what I do atm\n. we're making boot2docker as simple and small as possible - so at this point, adding tools that are not relevant to all usecases (bare HW, vbox, vagrant, hyper-v, vmware, kvm, etc) is not on the plan. This may change in future, but we havn't completed our original feature set yet.\n. I do (mmm, I also have my setup extract the kernel and initrd from the iso):\nqemu-system-x86_64 -curses -net nic -net user -m 2048M -boot d -cdrom boot2docker.iso -kernel vmlinuz64 -initrd initrd.img -append \"sven=test panic=1 loglevel=6 user=docker console=ttyS0 console=tty0 noembed nomodeset norestore NOwaitusb=10:LABEL=boot2docker-data base\"\nthen hit Esc-2 to get out to the qemu monitor console and type quit to exit.\n. heya @tianon and @steeve . I've added some more robustness - there is a new /etc/init.d/docker cleanghosts option that is called at boot time, as rebooting leaves things in a bad state.\ndo we need more done to release this? \n. @helander can you open a new issue for your use case please - I think we have to think about it in the broader boot2docker context?\n. @tianon ah, thankyou - though, what happens on a bad shutdown? I kinda feel the brute cleanup needs to be there, because its what docker should be doing on start either way (well, an extended versoin where we test the PID thats in the docker inspect...)\ndoh - my local test version uses check; - I'll fix that innabit.\n. @bglusman - I'm going t close this, based on 0.4.0 having made significant changes - thanks - and if we're missing something, tell us :)\n. @steeve I would like to have a version of b2d for each docker release too - and it occurs to me that the rootfs image  could be done as a trusted build, using tags for releases.\n. we're changing the versioning to be in lock-step with docker - so yes :)\n. we're changing the versioning to be in lock-step with docker - so yes :)\n. mmm, I wonder if a trivial solution to this, is to have boot2docker start export DOCKER_HOST=tcp://:$DOCKER_PORT.\noh, and have boot2docker init think about downloading the docker client if its not already on your system.\nsuper magical :)\n. mmm, I wonder if a trivial solution to this, is to have boot2docker start export DOCKER_HOST=tcp://:$DOCKER_PORT.\noh, and have boot2docker init think about downloading the docker client if its not already on your system.\nsuper magical :)\n. The OSX installer has a magic icon that starts everything and sets the env. More work is ongoing in http://github.com/boot2docker/boot2docker-cli\n. The OSX installer has a magic icon that starts everything and sets the env. More work is ongoing in http://github.com/boot2docker/boot2docker-cli\n. see the boot2docker-cli repo - there's a PR that someone can pick up and help with :)\n. so long as you're using the boot2docker tool to create the virtual machine, it already has been applied - the code is in the boot2docker-cli repository.\n. mmm, this is complicated for me - I have a docker running on my host, and then use boot2docker to test other things - so hardcoding a thousand ports doesn't feel right\n. mmm, this is complicated for me - I have a docker running on my host, and then use boot2docker to test other things - so hardcoding a thousand ports doesn't feel right\n. avoiding the issue using the host-onlly network interface in http://github.com/boot2docker/boot2docker-cli\n. avoiding the issue using the host-onlly network interface in http://github.com/boot2docker/boot2docker-cli\n. I rebased and merged using #102 :)\n. I rebased and merged using #102 :)\n. ok, I'm going to close this, as we don't want to hardcode a publically known ssh key in everyone's boot2docker - there is now a better way to do it\n. this will need some mild magic in https://github.com/boot2docker/boot2docker-cli/\n. this will need some mild magic in https://github.com/boot2docker/boot2docker-cli/\n. I think these things were resolved by docker client changes\n. I'm working through the PR's in the wrong direction :/\nThis PR limits me to having one boot2docker vm per user - sounds like a sensible default, and then if I want more, I can make changes to the ~/.boot2docker/profile setting?\n. I'm working through the PR's in the wrong direction :/\nThis PR limits me to having one boot2docker vm per user - sounds like a sensible default, and then if I want more, I can make changes to the ~/.boot2docker/profile setting?\n. @aheissenberger yes, but I do like the default as @gvangool proposes here :)\n. @aheissenberger yes, but I do like the default as @gvangool proposes here :)\n. @gvangool would you like to rebase (ok, redo :)) your PR based on the ./boot2docker/profile change I merged (rather than calling the path $CWD, can you call it something more like $BOOT2DOCKER_DIR, and use that to then default the $BOOT2DOCKER_ISO and $VM_DISK values?\n(with some new cleverness needed to allow any combination of those values to be set in the profile file - so that needs to be loaded first, and then the defaults set if the var is not yet set?)\n. @gvangool would you like to rebase (ok, redo :)) your PR based on the ./boot2docker/profile change I merged (rather than calling the path $CWD, can you call it something more like $BOOT2DOCKER_DIR, and use that to then default the $BOOT2DOCKER_ISO and $VM_DISK values?\n(with some new cleverness needed to allow any combination of those values to be set in the profile file - so that needs to be loaded first, and then the defaults set if the var is not yet set?)\n. @gvangool excellent - this is pretty much what I want users to be able to do :)\n. @proppy when you say reproduce - I presume I need a GCE account ?\n. @proppy when you say reproduce - I presume I need a GCE account ?\n. we're making boot2docker as simple and small as possible - so at this point, adding tools that are not relevant to all usecases (bare HW, vbox, vagrant, hyper-v, vmware, kvm, etc) is not on the plan. This may change in future, but we havn't completed our original feature set yet.\n. we're making boot2docker as simple and small as possible - so at this point, adding tools that are not relevant to all usecases (bare HW, vbox, vagrant, hyper-v, vmware, kvm, etc) is not on the plan. This may change in future, but we havn't completed our original feature set yet.\n. This is now much more plausible, so I added it during some refactoring - not sure if it'll get commited for 1.2.0 - depends on how much time is left to debug.\n. I just reviewed and found some solveable problems in the pre-req to that PR, so its possible that we might get there.\n. sorry guys, we have ntpclient set for the next release. (not sure when it will be yet)\n. ntpclient was added in 0.6.0 : https://github.com/boot2docker/boot2docker/releases/tag/v0.6.0\n. I think we've got most of this now from other PRs\n. @kainz ?\n. @kainz ?\n. k :)\n. k :)\n. @kainz I'm going to close this, we've not moved on it, sorry.\nIf you, or someone else wants to add doid & 9PFS, please make a much more minimal PR :)\n. We need to work out how to add functionality to boot2docker using containers, and this is a nice concrete example.\nTo hack pipeworks into the OS, (not containered) I needed to \n1. get the pipework script\n2. get  ftp://ftp.nl.netbsd.org/vol/2/metalab/distributions/tinycorelinux/4.x/x86/tcz/bridge-utils.tcz as there was no 5.x repo version\n3. tce-load -w iproute2 and copy it to a persisted place (/var/lib/boot2docker/optional)\n4. su - docker -c \"tce-load -i /var/lib/boot2docker/optional/*.tcz\" to install them.\nand then if we're going to make this automagical (ie add feature ~~ docker run -v /var/lib/boot2docker:/var/lib/boot2docker -rm boot2docker-pipework-plugin) we'll need something like spotter installed and running in boot2docker, that detects uses non-pre-specified events to trigger a run of an installation script that is laid down by the container?\n(if at all possible, I would like to avoid logging into the b2d host, I'd actually like to be able to have my orchestration containers request the pre-requisites this way...)\n@jpetazzo @shykes ?\n. @jpetazzo I don't know - you use brctl in pipeworks, and without it, I had nothing but fail ;) (brctl is in bridge-utils)\n. @steeve and I would like the base boot2docker distro to be as small and simple as possible - so the initial goal is to remove many more things from the iso - so I'm not that sure adding pipeworks makes sense.\nmostly, I'd like to try to move optional things into containers, or where that can't be done, into secondary iso's / modules.\n(yes, ok, so I realise its a small bash script that does magic - I would like more input tho :))\n. @steeve and I would like the base boot2docker distro to be as small and simple as possible - so the initial goal is to remove many more things from the iso - so I'm not that sure adding pipeworks makes sense.\nmostly, I'd like to try to move optional things into containers, or where that can't be done, into secondary iso's / modules.\n(yes, ok, so I realise its a small bash script that does magic - I would like more input tho :))\n. the replacement project (https://github.com/boot2docker/boot2docker-cli has a second hostonly network interface added - and work is ongoing to add more control. so yes, but over there :)\n. the replacement project (https://github.com/boot2docker/boot2docker-cli has a second hostonly network interface added - and work is ongoing to add more control. so yes, but over there :)\n. http://github.com/boot2docker/boot2docker-cli is the new tool, and we're not using ENV vars - there are command line switches and an ini style config file.\n. http://github.com/boot2docker/boot2docker-cli is the new tool, and we're not using ENV vars - there are command line switches and an ini style config file.\n. thankyou - I was just about to do this too :)\n. thankyou - I was just about to do this too :)\n. I prefer #82, as it is more DWIM\n. sorry, you're right - LGTM :)\n. Closes #76 \n. Closes #76 \n. #114 shows that we can initialise the b2d manage script disk with some data - and one such thing will be the user's ssh key - the hard question is, which one :)\nI'm thinking of defaulting to the first ~/.ssh/*.pub file, but allowing that to be over-ridden in the ./boot2docker/profile file.\n. http://github.com/boot2docker/boot2docker-cli now makes and adds an ssh key to the vm\n. http://github.com/boot2docker/boot2docker-cli now makes and adds an ssh key to the vm\n. thankyou - just as I run into this, you've fixed it\n. can someone test and confirm please?\n. meh, simple enough - merging as is, and hopefully someone has VT-x turned off, or not in their cpu :)\n. can someone with OSX please give me an idea what to replace the truncate with (unless it has one that is)\n. #78 can be resolved using this initial data too - and for the other use cases, a customised Dockerfile\n. this is not ready sadly, as this patch results in not being able to start containers :/\n. @steeve @tianon and others - could you perhaps take a look and tell me if i've stuffed something up - I'll merge this soon \n. @steeve @tianon I'm going to look at moving this script into the (or another?) Dockerfile - before i do, is there a reason not to?\n(I'd like to get to the point where customising one's b2d is just making a new Dockerfile...\n. ah, righto - so the simple reason is that mknod is not yet permitted in docker build\n. @adrianmacneil sweet :) can you try DOCKER_HOST=tcp:// too? (that uses the deafults, which should be good)\n. @binaryphile does the new 0.5.1 release help at all (I doubt it, but) I've not seen this happen, so its going to be hard to reproduce / debug (unless its a known vbox thing)\n. works on current releases of vbox, so closing\n. works on current releases of vbox, so closing\n. @bruienne can you tell me where you got bridge-utils from? the ones I'm finding all cause havock\n. mmm, i'm using the one from tinycore 4.x - it looks like it works atm\n. I'm going to add this to the FAQ:\nif you need to add tools like pipeworks, and don't want to make your own boot2docker.iso flavour, you can do things by adding startup commands to your /var/lib/boot2docker/bootlocal.sh\nfor example:\n```\n!/bin/sh\nif [ ! -e /var/lib/boot2docker/pipework ]; then\n        curl -o /var/lib/boot2docker/pipework https://raw.github.com/jpetazzo/pipework/master/pipework\n        chmod 777 /var/lib/boot2docker/pipework\nfi\nneed ftp://ftp.nl.netbsd.org/vol/2/metalab/distributions/tinycorelinux/4.x/x86/tcz/bridge-utils.tcz\nand iproute2 (and its friends)\nsu - docker -c \"tce-load -i /var/lib/boot2docker/optional/.tcz\"\nsu - docker -c \"tce-load -i /var/lib/boot2docker/.tcz\"\nstart my management container if its not already there\ndocker run -d -v /var/run/docker.sock:/var/run/docker.sock $(which docker):$(which docker)  -name dom0 svens-dom0\n``\n. @hackdna can you paste the output of./boot2docker info | grep State` please - I had something like this where there was a different state than we coded, but I thought I fixed that in 0.5\n. @hackdna \ncan you please confirm that \n$ ./boot2docker info | grep \"State:\\s*+running\"; echo $?\nworks (added a * as per the stackoverflow link) - then we can change our script to cope with that little buglette\n. this script is gone  now replaced by https://github.com/boot2docker/boot2docker-cli\n. this script is gone  now replaced by https://github.com/boot2docker/boot2docker-cli\n. LGTM\n. LGTM\n. we're removing this script and replacing with the golang version\n. we need to find a way to differentiate between the boot2docker OS, and the manage script :/\nadded a manage-script label\n. mmm, sounds another reason to implement https://github.com/boot2docker/boot2docker-cli/issues/137\n. mmm, sounds another reason to implement https://github.com/boot2docker/boot2docker-cli/issues/137\n. This should not happen now that we use a host only network.\n. I'm testing a fix for this - using bind mounts instead, we'll make a 0.5.4 for it in ~8 hours\n. I'm testing a fix for this - using bind mounts instead, we'll make a 0.5.4 for it in ~8 hours\n. @proppy did you write some documentation and hide it somewhere? :p\n. @proppy did you write some documentation and hide it somewhere? :p\n. I implemented this in boot2docker 1.0 - boot2docker init sends some keys to the persistent disk :)\n. heya @GrahamDumpleton would you like to rebase this to the new, new-ness? \n. implemented in http://github.com/boot2docker/boot2docker-cli as a commandline parameter (i think)\n. implemented in http://github.com/boot2docker/boot2docker-cli as a commandline parameter (i think)\n. me too (now that I have an OSX box).\n. I'm building a test ISO using @tatsushid 's change in #354 - if that works, then awesome, another pain point killed off, and a very huge thankyou @tatsushid \n. Yeah, I agree - its been long enough and there's been few complaints - so new lag issues are probably due to different things :)\n. @AveryRegier the lag issues seem to be solved for quite a few people - suggesting that we've resolved some of the more mainstream issues.\nIf you have issues, please detail them in a new issue, and if you have found workarounds, tell us more, and maybe make a PR.\n. @hoverruan I presume you tried downloading .5.4 again to verify it wasn't something odd - we'll need to test  ;/\nI presume you're using OSX?\n. @hoverruan I presume you tried downloading .5.4 again to verify it wasn't something odd - we'll need to test  ;/\nI presume you're using OSX?\n. there is a ./boot2docker download - I thought init used it, :/\nOn 21/02/14 18:20, mike w wrote:\n\nProblem still exists, at least on OS X 10.9 + boot2docker 0.6.0 (as \ninstalled via homebrew).\nSteps:\n|$ brew install boot2docker docker\n[...]\n$ boot2docker init\n[2014-02-20 20:19:01] Creating VM boot2docker-vm\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 6a25a0e7-a307-466a-9daa-6ccf3aed96ff\nSettings file: '/Users/mikey/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n[2014-02-20 20:19:01] Setting VM settings\n[2014-02-20 20:19:01] Setting VM networking\n[2014-02-20 20:19:01] boot2docker.iso not found.\n[2014-02-20 20:19:01] Could not get lastest release name! Cannot download boot2docker.iso.\n[2014-02-20 20:19:01] Setting VM disks\n[2014-02-20 20:19:01] Creating 40000 Meg hard drive...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nDisk image created. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nConverting from raw image file=\"format-flag.txt\" to file=\"format-flag.vmdk\"...\nCreating dynamic image with size 5242880 bytes (5MB)...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone hard disk created in format 'VMDK'. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nVBoxManage: error: Could not find file for the medium '/Users/mikey/./boot2docker.iso' (VERR_FILE_NOT_FOUND)\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Medium, interface IMedium, callee nsISupports\nVBoxManage: error: Context: \"OpenMedium(Bstr(pszFilenameOrUuid).raw(), enmDevType, enmAccessMode, fForceNewUuidOnOpen, pMedium.asOutParam())\" at line 178 of file VBoxManageDisk.cpp\nVBoxManage: error: Invalid UUID or filename \"./boot2docker.iso\"\n[2014-02-20 20:19:02] Done.\n[2014-02-20 20:19:02] You can now type boot2docker up and wait for the VM to start.\n$ boot2docker ssh\n[command hangs]\n|\nResolved problem by downloaded iso. At minimum, seems like the \nVBoxManage errors above should be fatal...?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/boot2docker/boot2docker/issues/149#issuecomment-35707496.\n. there is a ./boot2docker download - I thought init used it, :/\n\nOn 21/02/14 18:20, mike w wrote:\n\nProblem still exists, at least on OS X 10.9 + boot2docker 0.6.0 (as \ninstalled via homebrew).\nSteps:\n|$ brew install boot2docker docker\n[...]\n$ boot2docker init\n[2014-02-20 20:19:01] Creating VM boot2docker-vm\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 6a25a0e7-a307-466a-9daa-6ccf3aed96ff\nSettings file: '/Users/mikey/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n[2014-02-20 20:19:01] Setting VM settings\n[2014-02-20 20:19:01] Setting VM networking\n[2014-02-20 20:19:01] boot2docker.iso not found.\n[2014-02-20 20:19:01] Could not get lastest release name! Cannot download boot2docker.iso.\n[2014-02-20 20:19:01] Setting VM disks\n[2014-02-20 20:19:01] Creating 40000 Meg hard drive...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nDisk image created. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nConverting from raw image file=\"format-flag.txt\" to file=\"format-flag.vmdk\"...\nCreating dynamic image with size 5242880 bytes (5MB)...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone hard disk created in format 'VMDK'. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nVBoxManage: error: Could not find file for the medium '/Users/mikey/./boot2docker.iso' (VERR_FILE_NOT_FOUND)\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Medium, interface IMedium, callee nsISupports\nVBoxManage: error: Context: \"OpenMedium(Bstr(pszFilenameOrUuid).raw(), enmDevType, enmAccessMode, fForceNewUuidOnOpen, pMedium.asOutParam())\" at line 178 of file VBoxManageDisk.cpp\nVBoxManage: error: Invalid UUID or filename \"./boot2docker.iso\"\n[2014-02-20 20:19:02] Done.\n[2014-02-20 20:19:02] You can now type boot2docker up and wait for the VM to start.\n$ boot2docker ssh\n[command hangs]\n|\nResolved problem by downloaded iso. At minimum, seems like the \nVBoxManage errors above should be fatal...?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/boot2docker/boot2docker/issues/149#issuecomment-35707496.\n. Should we resolve this by not using the NAT interface for the DOCKER_HOST setting, and instead using the second HostOnly interface that has been added to the not quite ready boot2docker-cli?\n. Can you please test using the latest release of the new manage tool: https://github.com/boot2docker/boot2docker-cli/releases , \n\nif export DOCKER_HOST=tcp://localhost:4243 still has the problem, please test using the IP address that boot2docker ip reports as the host only interface.\n(and tell me how it goes)\n. excellent. Sounds like removing the port forwards entirely will help al sorts of things.\n. excellent. Sounds like removing the port forwards entirely will help al sorts of things.\n. I might use pause for a container that is using too much cpu to let some other things settle and to give me a chance to work up a better fix - but at that point, I can probably also work out the vboxmanage options..\n. I installed on a new server I just bought, and the time was set to 2 Apr 2012 - which resulted in a really unhelpful cert failure error message... \nie - boot2docker is the OS :)\n. this one looks like its making some pretty big assumptions - I'm currently looking into winding back the things that boot2docker.iso does - and then we need to push it into containers.\nWe also need to work on our docs - I'm making local modifications, and there isn't any guidance :)\n. last night I had a quick try of making a volume container, and then an nfs (decided no) and samba container that shares that volume. It works, though there are details I need to work through.\nHowever, it does need something like #93 - I note there are several PR's that all appear to add a host only adaptor. I'm not so fussed about a fixed IP, as that won't work for thos of us with multiple VM, (I'd rather detect it and tell the user about it (fixed hostname works tho, if its based on the vm-name\n. we really need to make a few containers and document these things\n. we really need to make a few containers and document these things\n. #162 can close this, but we're also discussing things on #163 \n. commited\n. commited\n. @shykes - I wonder if this is a good enough reason to have a ./docker/profile or something - we can easily set that from our script (after testing that there is no other dockerd running)\n. mmm, true, we now assume both the NAT (for ssh bootstrapping) and host only (for docker socket access) networks are there.\nFor now, perhaps a solution is to add a third network interface to vbox?\n. THIS needs documenting - its probably the best way to expose containers to other users on your network\nexcept we should also see if we can make it not be the default for security (ie, the docker daemon should not listen on it unless th euser explicitly configures it, and docker run -P should not use it - you should need to add the IP explicitly.\nmmm, i fear that needs a Proposal in the dockre project.\n. That would be one way to do it. And perhaps it should be for saftey :/\n. That would be one way to do it. And perhaps it should be for saftey :/\n. I've redone the PR to enable by default, and you can disable by putting unset NTP_SERVER into the /var/lib/boot2docker/profile\n. @imavroukakis the boot2docker ENV vars don't currently get sent to the boot2docker vm, so your problem will require some fancier footwork :)\nthe ones without persistent partition present a further challenge - my original intent was to add more data to the unformatted persistence partition - which also means the settings are hardcoded into the vm after the first boot2docker start :/\n. There are now ways to add customisations via the persistence partition that get run as the vm starts - see the FAQ \n. /var/lib/boot2docker/profile is used as ENV vars to start the Docker daemon (only)\n. /var/lib/boot2docker/profile is used as ENV vars to start the Docker daemon (only)\n. and when I add the .ashrc modifying line to my bootlocal.sh it works - the variable is set in my shell too.\nwhat are the ownership and permissions like on the /var/lib/boot2docker/bootlocal.sh - and perhaps the /var/log/bootlocal.log file will tell you more.\n. and when I add the .ashrc modifying line to my bootlocal.sh it works - the variable is set in my shell too.\nwhat are the ownership and permissions like on the /var/lib/boot2docker/bootlocal.sh - and perhaps the /var/log/bootlocal.log file will tell you more.\n. I can reproduce a variation of this without boot2docker: https://github.com/dotcloud/docker/issues/4077\n. I'm not really sure that 'reload' is the right name - maybe reinit is more consistent.\nalso, would it make sense to add a download step too?\nI'm still wondering if we can separate the update so that one doesn't have to lose the /var/lib/docker information unless its explicitly requested....\nSo in a way, I'm asking - what specific use case is this solving?\n. we've moved the manage script to golang, http://github.com/boot2docker/boot2docker-cli :/\n. oh, how very cruel :) my port isn't quite half way, so I'll ditch it and poke yours instead...\n. we implemented this in https://github.com/boot2docker/boot2docker-cli - awesome\n. done in b2d-cli\n. implemented in boot2docker-cli\n. @kennu me too - I do that by adding a /var/lib/boot2docker/bootlocal.sh that creates my mount point and mounts the data partition\n. the only things to be aware of, is that it needs to work on OSX, and soon Windows too.\noh, and that the 'format me please' payload will be expanded to include ssh keys, and other things.\nso I was actually thinking i'd be easier to make the raw file programmaticly..\n( we were thinking it'd be nice for the payload to be a simple tar file.. )\n. oh, and @riobard we'll be moving this module to its own repo some time soon\n. oh giggle - I totally didn't notice that you were changing the shell script - I meant the go port will be moved - the shell script was going to be, but its way too much pain to break all the links again\n. oh what unfun - I upgraded this new box from win8 to win8.1, and now my vbox is busted - from what i hear its because i now have hyper-v\nso we'll need to document this fact - and i may just add a hyper-v mode to the b2d-cli.go\n. yes please - once the iso supports it we can look at using it in the cli too :)\n. I'm curious about the grep Google - what happens if I have my nexus plugged into the usb as i boot, or some other kernel driver that happens to say (c) Google?\nI'm really tempted to add some extra kernel boot params to trigger things - including using ext4 / btrfs...\n. pinging @proppy \n. @proppy @unclejack we haven't made the decision to merge - for us to make it, we need the 2 to be comparable - and they're drifting apart atm\n. i'm going to close this PR - feel free to get it ready for merge whenever you like.\n. I agree - blkid tells us everything :)\n. LGTM\n. @tiborvass ??\n. yes, too much rst, and the fact that its not actually incorrect markdown, just redundant.\n. which version of the boot2docker script are you using? we moved the repository, and I think that broke all previous versions :( - please, download the latest, I think it should fix it for you\n. I am assuming that the person that wrote that code was testing with a specific version of vbox on a specific platform.\nwhich implies that not all of them are identical :(\nand thus we need to track things down, and simplify or add more layers\n. sorry, we moved all development to golang - http://github.com/boot2docker/boot2docker-cli\n. sorry, we moved all development to golang - http://github.com/boot2docker/boot2docker-cli\n. @steeve I thought we'd added ntpclient to b2d (ignoring that yes, indeed in a vm, it should not be so off)\n@lvh I did read in the docker issues that there was a temporary problem with a Cloudflare certificate having not-right dates, and that this had been rectified.\ncan you please try again and see if things have worked themselves out\n. I presume that if you ./boot2docker ssh things are still unusably slow?\ncan you stop all that, and create a virtualbox vm by hand and see how that goes? and if thats just as slow, try a debian / ubuntu vm and tell us how that feels?\n. @boot2docker/team-os \n. there's a good chance this is DHCP / DNS related. and may depend on the specifics of your network (web proxy, etc)\nClosing in the hope that you've resolved it :/\n. there's a good chance this is DHCP / DNS related. and may depend on the specifics of your network (web proxy, etc)\nClosing in the hope that you've resolved it :/\n. it hasn't had any sideeffects that I can detect on debian linux, vbox 4.3.6_Debianr91406\n. causes no problems on windows either\n. LGTM - I'm taking a version for b2d-cli too\n. https://github.com/dotcloud/docker/issues/4546 is the only remaining docker test failure when running with this cfg\n. @boot2docker/team-os \n. @tianon much merci. \n. I am testing removing the IP_TUNNEL option - if this works, then b2d 0.7.0 will be able to build and test docker cleanly. (with the other PR's I've been working on)\n. I'm having a heck of a time getting iso's that have changes in them :(\nit might also be better to just set CONFIG_NET_IPIP=m\n. we removed them.\n. we removed them.\n. done :)\nhttps://github.com/boot2docker/boot2docker/releases\n. @tianon\n. @boot2docker/team-os @tianon - I'm going to commit this in a few minutes, as its what 've used to build - you have a few moments to review - if you hurry :)\n. @samalba it will change the UI, as the nfs share will be from a data-volume (ie, you mount the share on your OSX box) rather than the less secure and less perfomant mount an nfs share on my OSX into the VM, and then bind mount it into the container.\nimo having the data located on the docker host is safer, places the data where it is processed, and sets the docker user up using a pattern that will work well when they deploy the container to their production farm.\n. we're making boot2docker as simple and small as possible - so at this point, adding tools that are not relevant to all usecases (bare HW, vbox, vagrant, hyper-v, vmware, kvm, etc) is not on the plan. This may change in future, but we havn't completed our original feature set yet.\n. we're making boot2docker as simple and small as possible - so at this point, adding tools that are not relevant to all usecases (bare HW, vbox, vagrant, hyper-v, vmware, kvm, etc) is not on the plan. This may change in future, but we havn't completed our original feature set yet.\n. @leeolayvar you don't need vbox extensions for that. thats kinda the point - port forwarding works now, and sharing folders is much more scalable and docker-ized if you use volume containers and share from there. Especially when you then consider that running in vbox is a gateway to running b2d on real hardware.\n. Yes, I am working on real documentation - but havn't gotten to it yet.\n. fundamentally, we are working towards not doing sharing this using vbox specific extensions. instead, the solution will come from either docker itself, or using a network shared volume container - see https://github.com/SvenDowideit/dockerfiles/blob/master/samba/Dockerfile for what I use to share my boot2docker tools with my Windows desktop.\nbind-mounting a directory that is actually located remotely to the docker daemon is both risky and slow, whereas using network shared volume containers matches much more closely what you would do in deployment.\n. Guys - does that mean you've tried the samba sharing container solution and its not sharing for you, or ?\n. ok, I'll have to write up something.\nthe key takeaway is: using host mount -v /localdir:/container_dir should not be done, especially over a network fs. - using the samba server volume container means you're using --volumes-from.\nand then you mount the samba share on your OSX, and point your IDE/editors to that.\n. @lazywei I finally have an OSX box, and am working through the things I need to write up a how to (well, ok, I'm making changes to the boot2docker manage tooling to make it even easier)\n. @sfitts that is exactly right. The data locality is on the server side. There are a number of reasons for this - the biggest of which is that docker is focussed on portability - so linking your container to remote data (in this case your windows fs) makes your container less portable (as does the use of -v /host:/container on any platform).\nThe Docker project is working towards a fuller solution - but that will take time. For now, adding the vbox extenstions to allow vbox shares sounds like a short term gain, but it hurts in the medium and long term - I wanted Hyper-V support to have happened already, but I havn't found time.\nBTW - rather than using the about to be removed boot2docker script - use https://github.com/boot2docker/boot2docker-cli - it has a windows, osx and linux binary. :)\n. boot2docker-cli is a drop in replacement (except that the config file has changed) and there are a number of new features already - it adds a host-only network so you don't need to do the port forwarding thing, and I'm auto-adding ssh keys to the docker user.\nmostly, if there are problems, its because i'm the only windows user/developer - I need help.\nsame pain for the Windows docker client - I don't know enough go yet to make it happen.\nok workflow wise - what I do atm, is I use volume containers for everything. that way my workflow is the same on all 3 platforms I use (win/osx/linux) - and then I use the samba share of my data volume to give my windows based tools to get access to the data.\nThis also means my workflow is the same when I use a remote boot2docker (as opposed to a vm based one).\n. yup - what I do:\n- docker run -v /home --name home-vol busybox true\n- docker run ....... (lots of params) svendowideit/samba home-vol\n- connect to that share from windows, checkout my code to the share, and then edit away using the idea\n- docker run --volumes-from home-vol my-app-container\n  OR\n- docker build (with ADD statements) from another container that has home-vol mounted, and has access to the docker daemon.\nfundamentally, my windows box has no data in its filesystem - and half the time I'm not using a vbox based boot2docker, but doing exactly the same workflow to the rather larger docker-host I have in the data-center.\nThe assumption is that the container is doing lots of io and work, whereas the IDE is doing little - so it breaks down if you're doing video editing (where really, you'd run the gui app in a container, and just transmit the gui over the network)\n. https://github.com/bradfitz/docker/issues/ is the preferred solution to the use case. \n. https://github.com/bradfitz/docker/issues/ is the preferred solution to the use case. \n. The best solution is to use Volume containers and then share that volume using something like samba. that way you don't get the performance and reliability issues that come with vbox shares, and you solve the problem for all b2d systems - not just vbox based ones, and have a solution that is consistent with any remote Docker Engine.\n. The best solution is to use Volume containers and then share that volume using something like samba. that way you don't get the performance and reliability issues that come with vbox shares, and you solve the problem for all b2d systems - not just vbox based ones, and have a solution that is consistent with any remote Docker Engine.\n. @weisk because it gets the linux kernel source, builds it, makes a complete Linux Distro and then makes an ISO from that.\n. @mattes I debug those by then starting the vboxvm from the vbox gui - I've been working on trying to debug over serial console, but its not much fun.\n. @willkessler what is it performing like using the vbox extensions? From my experience, they are very unsuitable for any consistent performance, and with larger amounts of data can be very flakey.\nif virtual disk size is your only issue, you can solve this in 2 other ways:\n1 change the virtual disk size in your boot2docker profile (see boot2docker config for more)\n2 add a second virtual disk and link it to the vm - thus separating your large database from the more disposable boot2docker-data disk - and then you can use the /var/lib/boot2docker/bootlocal.sh to mount and use it (perhaps even auto-start a volume container that brings the data into Docker)\nIf you think of your boot2docker Docker as a remote Docker Engine - perhaps running halfway around the world in a cloud service of your choice, then your boot2docker configurations will be portable - and now we can run the svendowideit/samba volume sharing container in Google App Engine :)\n. you need to upgrade your boot2docker management tool - from the look of it, you're using the very old script version, rather than the golang based binary - see https://github.com/boot2docker/boot2docker-cli\nI use samba rather than nfs - see https://github.com/SvenDowideit/dockerfiles/tree/master/samba - but if its fast enough, then its just another option you have to choose from :)\n. wow, thankyou for the stat - proportionally - vs 120k downloads in May, thats a tiny number - I'm also very -1 on adding vbox specifc tooling - vbox is only one of the many different virtualisation (and not) systems that boot2docker runs on.\nNow that the installation and setup works most of the time, I'm spending time working on Docker based solutions - the samba container I made is one very effective way to work today.\n. I have always had a few other concerns.\nVirtualBox is not the only existing user of boot2docker\nWe have users that use all the virtualisation solutions that exist, and also run directly on bare hardware. Adding the VBox extensions not only doesn't help them, it adds complexities, and a demand to add the other drivers.\nmitigation\nyeah, none. its not a good problem.\n(I wrote this before i noticed the possibility I expand on below...)\nsecurity - what are you choosing to share with the vm&random docker containers\nEven if you restrict to any subdirs /Users/sven, you're auto-handing out the user's .ssh, and any secret documents.\nthe risk is that we give a container the ability to do things that then lead to eventually giving a sneaky container root / admin on the OS X / Windows box. (imagine a rails image that helpfully auto-starts the db and other containers by getting you to pass it a docker socket, and then at some stage puts some extra sauce into your .bashrc, that later makes its way into your sudo env.\nmitigation possibility\nInstead of using anything under the User's dir, we add a /Users/sven/docker_share dir. This can be implemented either by mounting the Samba volume container using something like svendowideit/samba to that location, \nor perhaps mounting that dir inside the vm using cifs? (I only tried the containerised version - anyone want to confirm the obvious solution we've forgotten??) - I was able to mount -t cifs //osx/Docker, but not as guest, so some extra magic will be needed.\nSo what I just tried, is:\nmake a new OS X Share /Users/sven/Docker, then boot2docker ssh and run\nsudo mkdir /mnt/Docker\nsudo mount -v -t cifs //10.10.10.14/Docker /mnt/Docker -o 'username=sven,password=yeah-no,nounix,sec=ntlmssp,noperm,uid=1000,gid=100'\nI did some investigation into scripting the share creation a few months ago, and it worked ok, but I don't recal if i needed to deal with the user&password issue.\nthe Making and attaching to the share would be handled by the boot2docker tool, and then the icing would be to amend the docker client to make it clear to the user when they are using the Docker hosts's FS, and when they are using the Docker client's FS.\nmaking it obvious to the Docker client user which FS is being used\nHow to we make sure they know when they are using the Docker client's FS, and when they are using the Docker Host's FS. This is not just an issue for boot2docker, its an issue for all remote docker daemons - tho we sidestep this atm, but not explicitly dealing with it at all.\n. @sfitts Windows users are not in the minority. They are slightly quieter though.\nplease, speak up with your concerns and issues, otherwise its hard to try to account for them :)\n. @sfitts please re-read :)\nI just noticed a way to share a directory from your windows box to the Docker vm (and thats what I talk about above).\nwe all agree that a windows native Docker client is a big deal - in fact, I think its a bigger issue than the -v bind mount one.\n. I'm sorry @nathanleclaire but if you make users type a choice between a short line, and a long line, you've effectively defaulted to the short one - and then you get on your high horse and tell them it was their fault. \nadd to this that boot2docker is intended to require no user action to make the best way work.\nthe biggest group that we should think of first, are the ones that don't and likely will never understand the risks involved, and will happily follow anything they can cut and paste from some place on the internet....\n. no, @mitar is wrong. the risk is essentially that by sharing the Desktop user's home dir, we provide clever containers the keys to their servers, and the keys to building and releaseing software signed using their certificates. - ie, that a container uses the ~/.ssh and ~/.gpg` dir's - or plays with their bookmarks and browser addins to download an exploit next time they goto their bank.\nSecurity is about layers, and the extra layer that running boot2docker in a virtual machine allows us to protect the user.\nthe vbox modules don't actually achieve anything that the approach I'm going to take for 1.3.0 does, except limit our ability to not increase the security risks.\nand Yes, using other tools flaws to say its ok for Boot2docker to essentially get not only root on the VM, but on your Windows or OSX box, is hard to justify.\nBoot2Docker needs to be safe for users that will never know what the risks are\n. no, its not the same risk, as the user group is not the same. Also, those that have read a little more about Docker security, have read that its safer to contain your Docker daemon inside a VM - which Boot2Docker does. \nRunning Boot2Docker on OSX is like running Boot2Docker on Linux (which I do), safer.\nIts not OK / good enough for Linux developers - its a problem on Linux that needs a safer solution too. \nI have no intention of just passing on risks that occur on one platform onto another where its not necessary.\nAnd if you didn't know that our goal for both Docker and Boot2Docker is to iteratively reduce the security risks to all Docker users, you do now.\n. I think its important to remember that the users of a trivial to install suite of tools like Boot2Docker have very wide ranges in knowledge and interest, and that its our responsibility as contributors to these tools, to ensure a default level of security that assumes that users of the suite are not exposed to risks that they are either unaware of, or would not want to be distracted by.\nBoot2Docker has come to the point where its possible for someone to tell their non-technical user to install it, and then run a very simple and potentially misleading commands.\nBy way of explanation, please consider these scenarios:\n- Someone new to the world of computers wants to help out on a project that has a Dockerfile, and instructions how to use it. They install Boot2Docker and do so, totally unaware that there could be any risks - they are after all only helping work on project X. Is it fair to them that we default to sharing their tax information, their Mothers tax information, and who knows what other personal data.\n- A non-computing professional uses a tool that is delivered using Docker, and uses Boot2Docker for installation on non-Linux systems - again, the same risks to both that user, and any other users of the OSX / Windows computers.\n- A corporation considers the use of Boot2Docker to deploy its business related systems, client side, whatever, and their Network Admins need to ensure that the confidential information on those computers is not less safe by installing Boot2Docker and therefore Docker.\nIn all these quite reasonable use cases for Boot2Docker, we have a situation where defaulting to a newly created Subdirectory prevents unrealised harm, whereas defaulting to sharing either the entire filesystem, or the users home dir causes un-necessary risks, or worse means that Boot2Docker cannot be used.\nMeanwhile, by choosing to implement the Desktop file sharing to default to a safe ~/docker-share , that doesn't stop users who think they know what they are doing (I'm avoiding judging if its true or not) from changing the default.\nYes, I do think that OS X and Windows users are a much broader range of knowledge and experience than Linux Developers - and by delivering an all in one GUI installation tool, we need to be very conscious that our users are not only Developers. \n. @steeve no, you are not going to merge this. b2d 1.3.0 will solve it properly, and we do not have time to test all the problems it will cause before 1.2.0 is released.\nsee https://github.com/boot2docker/boot2docker-cli/issues/202 for the plan.\n. one particularly scary user-story I told the other day, is when someone installs b2d on their family computer to try out some SW that can be run using it, then days later is finished, and forgets all about it. for the next 5 years, b2d is running (for some auto-start at boot time reason), and therefore is not updated to fix what we missed - then someone else clicks a link in an email that gets around a tls impl issue and hands the magically run container the docker socket \n- yay. \nboot2docker is already a tool that can be used by non-developers - and there will be more all the time.\n. as the version numbers of the tack are all moving to lock-step, this now works.\n. as the version numbers of the tack are all moving to lock-step, this now works.\n. I use a subdir of /mnt/sda1 when I'm feeling naughty. \nThe real idea is that you persist your data in a data container volume, and then share those.\n. LGTM\n. there will be a 0.7.1 release the day there is a 0.9.1 release :) - i thought that was today, but it looks like tomorrow\n. oh, and you don't need to do your own rootfs build - you can use \nhttps://index.docker.io/u/boot2docker/boot2docker-rootfs/\nso ''all'' you need to do it pull that 1.7GB :( and then do the run and cp steps in \nhttps://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\n. I don't know that we can do anything for this, so closing - please make a PR in the happy even that Im'm wrong\n. I don't know that we can do anything for this, so closing - please make a PR in the happy even that Im'm wrong\n. awesome analysis! merci for the education too.\n@steeve \n. sadly, that won't fix it for everyone, just vbox users\n. @aheissenberger there are lots more visualization platforms than vbox - and b2d works on them too.\n. actually - I wonder if we can use the acpi events to trigger ntpdate - rather than needing a virtualisation specific solution.\n. acpi_listen also does not receive anything - vbox'd again?\n. ntpclient should be active - the iso's bootscript.sh has:\n```\nimport settings from profile (or unset them)\nexport NTP_SERVER=pool.ntp.org\ntest -f \"/var/lib/boot2docker/profile\" && . \"/var/lib/boot2docker/profile\"\nset the hostname\n/etc/rc.d/hostname\nsync the clock (in the background, it takes 40s to timeout)\n/etc/rc.d/ntpclient > /var/log/ntpclient.log 2>&1 &\n``\n. @tianon thats not a bad idea - useboot2docker ssh ntpdate` to regularly kick the vm into line - I presume this could also be wired up to the host computers resume event....\n. @razic I would look into https://github.com/boot2docker/boot2docker/issues/290#issuecomment-49558174 and https://github.com/boot2docker/boot2docker/issues/290#issuecomment-58004609\non OSX - basically, if you can have your host OSX call some variation on boot2docker ssh sudo ntpclient -s -h de.pool.ntp.org both regularly, and on resume events, then things should limp along.\nI'd be interested in a pull request that adds that to the OSX and windows installers ...\n. @pandrew excellent, thankyou!  Is there any chance you can write some documentation for users of this?\nmind you, I'm not sure I want it for user's bashrc - I was actually thinking to use it on startup - so I can trigger different containers, or even get the automounter to use different FS's / settings for the docker daemon\nmmm, oh dear, whats the colour of that bikeshed :)\n. LGTM @steeve @aheissenberger @tianon\n. LGTM\n. @lalyos so basically, boot2docker works :) closing \n. @lalyos so basically, boot2docker works :) closing \n. LGTM\n. I like the idea - @tianon ?\n. I'm going to close this as #350 superceeds it\n. awesome, thank you for this. We are working towards teasing the vbox code out of https://github.com/boot2docker/boot2docker-cli so that we can then add things. Windows 8.1 is my target; I specifically bought a new notebook and am using it (rather than my preferred Linux).\n. if we can use that info to then build it into the golang manage tool @ https://github.com/boot2docker/boot2docker-cli - it would certainly not be terrible ;) we are however trying to make that one tool do windows, osx and linux - so will be avoiding powershell.\nThe other reason not to use pwershell in the long term, is that the docker client will be ported to windows too - and it will also need unix tty support (and git and ssh tools are rather useful in the docker context).\n(Long term, I hope to get the boot2docker-cli code into a set of docker client plugins, as that will simplify usage even further)\n. https://github.com/boot2docker/boot2docker-cli/issues/137\n. LGTM\n. this too is solveable by using the host only network interface and not the nated one (as per dev in boot2docker-cli)\n. @wsargent I use https://github.com/boot2docker/boot2docker-cli - but apparently, there's a problem cross compiling to OSX (there is a way to make it work, but as I don't OSX, I don't know enough)\n. https://github.com/boot2docker/boot2docker-cli/releases should solve this \n. @creack may have found that this is not b2d specific, but a symptom of some not great interactions with the nat'ed network\n. @vieux I have built a custom b2d using docker-master, and similarly make cross - running 3230889, on b2d and docker logs -f container from OSX with the darwin client, and its following along nicely.\nI'll hit it a little harder, but it looks good.\n. @vieux I have built a custom b2d using docker-master, and similarly make cross - running 3230889, on b2d and docker logs -f container from OSX with the darwin client, and its following along nicely.\nI'll hit it a little harder, but it looks good.\n. closing - please open a new issue if you have a similar issue\n. @tinganho does this still happen? are you able to download the iso manually from https://github.com/boot2docker/boot2docker/releases ?\n. very odd :/ I presume boot2docker download also fails? \n. @tinganho as we've released a new ISO, can you please try running ./boot2docker download and see what it says? (There's another possibility that I forgot about - you might need to update your boot2docker script)\n. please see #564 for suggestions how to debug  - peppering closed or multiple issues makes it harder to support.\n. @shaftoe boot2docker is already in use on linux and windows, so for us to link to this puppet module, it would either need to be less OSX-y (I don't mean that you should necessarily make it work on windows, but rather that its very hardcoded and not OS-modular)\ncan you please be more clear (in the docs) about what it does? does it install boot2docker the OS/iso, or boot2docker the manage script, or both?\n. :) I use b2d on linux when I need to test more than one different Docker version - very handy\nonce the structure is in place, I can hack in and test the Windows version\n. @brandonparsons yes - see https://github.com/boot2docker/boot2docker/blob/master/doc/FAQ.md\nbasically:\ncreate the /var/lib/boot2docker/profile file, and add EXTRA_ARGS=-dns 172.17.42.1 to it\n. @brandonparsons - I hope this is a little more helpful ;)\n. LGTM\n. yes and no.\nI get the same error trying to remove it after its stopped.\n. @creak & @crosbymichael - this is frustrating. We havn't changed boot2docker, so I don't really know what has made this so much worse.\n. If I do docker stop container_a ; docker rm container_a I get the same failure to delete\nif I add a sleep 5 between them, it works as expected.\nAnd then I tried the same again, and I get the same as @jlhawn\n. docker@boot2docker:~$ docker run -dit --name container_a debian:stable bash\nc56389a5ccceaa310751e7dd0a875e67b6f6d27846a733d963fae0e6b09ae0c1\ndocker@boot2docker:~$ docker run -dit --name container_b debian:stable bash\n87ad2aef832bde2b257e562256adf23d26ff3f2147731fb7394441a11c50a18f\ndocker@boot2docker:~$ docker stop container_a ; docker rm container_a\ncontainer_a\nError: Cannot destroy container container_a: Driver aufs failed to remove root filesystem c56389a5ccceaa310751e7dd0a875e67b6f6d27846a733d963fae0e6b09ae0c1: rename /mnt/sda1/var/lib/docker/aufs/mnt/c56389a5ccceaa310751e7dd0a875e67b6f6d27846a733d963fae0e6b09ae0c1 /mnt/sda1/var/lib/docker/aufs/mnt/c56389a5ccceaa310751e7dd0a875e67b6f6d27846a733d963fae0e6b09ae0c1-removing: device or resource busy\n2014/04/09 14:46:09 Error: failed to remove one or more containers\ndocker@boot2docker:~$ docker stop container_b ; sleep 5 ; docker rm container_b\ncontainer_b\ncontainer_b\ndocker@boot2docker:~$ docker run -dit --name container_a debian:stable bash\n2014/04/09 15:01:48 Error: Conflict, The name container_a is already assigned to c56389a5ccce. You have to delete (or rename) that container to be able to assign container_a to a container again.\ndocker@boot2docker:~$ docker stop container_a ; docker rm container_a\ncontainer_a\ncontainer_a\ndocker@boot2docker:~$ docker run -dit --name container_a debian:stable bash\nc04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b\ndocker@boot2docker:~$ docker run -dit --name container_b debian:stable bash\na1d21107b4b0926ce6e8b827eb60d5f2277fca9bff87dffde05e1d36dce5ba7b\ndocker@boot2docker:~$ docker stop container_a ; sleep 5 ; docker rm container_a\ncontainer_a\nError: Cannot destroy container container_a: Driver aufs failed to remove root filesystem c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b: rename /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b-removing: device or resource busy\n2014/04/09 15:02:28 Error: failed to remove one or more containers\ndocker@boot2docker:~$ docker rm container_a\nError: Cannot destroy container container_a: Driver aufs failed to remove root filesystem c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b: rename /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b-removing: device or resource busy\n2014/04/09 15:02:44 Error: failed to remove one or more containers\ndocker@boot2docker:~$ docker rm container_a\nError: Cannot destroy container container_a: Driver aufs failed to remove root filesystem c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b: rename /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b-removing: device or resource busy\n2014/04/09 15:03:04 Error: failed to remove one or more containers\ndocker@boot2docker:~$ docker rm container_a\nError: Cannot destroy container container_a: Driver aufs failed to remove root filesystem c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b: rename /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b /mnt/sda1/var/lib/docker/aufs/mnt/c04daa21b72b68f100acb8539c0a8b11d050537efb233c13afa497d7a8868a1b-removing: device or resource busy\n2014/04/09 15:04:17 Error: failed to remove one or more containers\ndocker@boot2docker:~$ docker stop container_b ; docker rm container_b\ncontainer_b\ncontainer_b\ndocker@boot2docker:~$ docker rm container_a\ncontainer_a\n. @steeve - yes, @crosbymichael looked into it, and it is indeed because the workaround leaks. debian2docker with persistence doesn't seem to have this issue - so perhaps we can figure out why.\n. I've just uploaded Boot2Docker v0.9.0 which fixes this issue : https://github.com/boot2docker/boot2docker/releases/tag/v0.9.0\nsee #342\n. @steeve no, I followed the process in doc/BUILD.md - if there's a step missing, tell me, and I'll add it to the PR\n(I'm going to update it to 3.14.1 while I'm here tho)\n. ah, sweet - good work indeed :)\n. heya - see https://github.com/boot2docker/boot2docker/blob/master/doc/FAQ.md\nyou can add the EXTRA_ARGS to the persistent profile  - assuming you're using a persistence partition (the default if you use the boot2docker manage tool)\n. we can temporarily add a mode (and make it default) to create an OS disk from the iso\nbut that still leaves the PXE and usb users with a bug that it would be better to work out (even if we need to get some kernel dev to do it.)\n. @steeve excellent. On IRC @crosbymichael and I discussed the issue a little - assuming we can't get the ns_move approach working, I'll add a mode to boot2docker-cli that sets things up without ramdisk so that the average windows and osx user has the best experience - and us 'experts' can thus have a little more time to find a real solution to the pxe/usb/ramdisk boot use\n. I've just uploaded Boot2Docker v0.9.0 which fixes this issue : https://github.com/boot2docker/boot2docker/releases/tag/v0.9.0\nsee #342\n. LGTM\n. I use it on bare hardware. For me, this is one of the main uses - CoreOS is too heavy for my liking - tbh, b2d is still to heavy for my liking - I'd prefer sshd to be in a container too.\n. however - it is also an interest of mine to see if we can push the different kernel modules out of the main iso and into dynamically loadable module containers.\n. @arey we added windows support during the development of the golang replacement for the manage script - if you use the installer @steeve mentioned, it will also install msys-git, which will give you ssh and other unix tooling.\nsorry - its in progress, its a 'time' thing\n. @arey when you use the windows-installer, you still do not use the boot2docker shell script, you use the boot2docker-cli executable.\n. @arey - after it times out, are you able to boot2docker-cli ssh ?\nif not, what I do to debug this, is to start the b2d vm using virtualbox, so I can see the console.\nwhat version of vbox are you using? (I've only had time to test with the one the installer installs (and the latest, as i'm working on the next installer too)\n. its working well for me :/\n. its working well for me :/\n. I'm working on this feature right now - in the next release, if you also use the golang boot2docker-cli, it will create an ssh key, send it in the initialisation payload and set things up for us.\nbut no, this is not an existing feature.\n. implemented in http://github.com/boot2docker/boot2docker-cli\n. implemented in http://github.com/boot2docker/boot2docker-cli\n. LGTM - i prefer debian too :) (tested, and i get an iso that looks ok to me)\n. I'm not sure we need to revert - adding the depmod makes a working ISO for me.\n@crosbymichael \n. #328 fixes this properly by installing kmod before we build.\n. @tianon @steeve @aheissenberger \n. @crosbymichael - this should resolve your build problems and Closes #326 and Closes #327\n. @steeve many times when I've remade an image it didn't rebuild the kernel - but other times,I do thing there are some build cache issues we can get @crosbymichael to fix.\n. depends. I've updated the docs/BUILD.md instructions for making your own iso based on top of ours - it still uses FROM boot2docker to avoid rebuilding everything (basically, set up your own stuff on top of our image, then re-run make_iso.sh.\nbut I really do wonder  how large an audience that is, and if they're actually likely to not just re-build anyway.\n. tested with the the other PR on Linux, Windows and OSX - works well.\n. @steeve @tianon @crosbymichael\n. @steeve @tianon @crosbymichael\n. ah, worse, it looks like these changes snuck into #328\n. ah, worse, it looks like these changes snuck into #328\n. @tslater - when and how do you get 'this error'?\nI'm at a loss how to reproduce the problem...\n. LGTM\n. mmm, boot2docker/boot2docker-cli#94 will hopefully help with this, as you'll be able to specify the key you want it to use (and if you don't it will create one for you)\n. mmm, boot2docker/boot2docker-cli#94 will hopefully help with this, as you'll be able to specify the key you want it to use (and if you don't it will create one for you)\n. @robparrott please try the latest release of http://github.com/boot2docker/boot2docker-cli/releases\n. @robparrott please try the latest release of http://github.com/boot2docker/boot2docker-cli/releases\n. I just tested using boot2docker 0.8.0 - the one that has Docker 0.10, and it works for me.\nHowever, there is / was a bug in Docker 0.10.0 when -v mounting from a sofflink (like debian's /var/run) - so this might be related to that.\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.8.0\ndocker@boot2docker:~$ docker version\nClient version: 0.10.0\nClient API version: 1.10\nGo version (client): go1.2.1\nGit commit (client): dc9c28f\nServer version: 0.10.0\nServer API version: 1.10\nGit commit (server): dc9c28f\nGo version (server): go1.2.1\nLast stable version: 0.10.0\ndocker@boot2docker:~$ docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):$(which docker) busybox sh\n/ # docker info\nContainers: 6\nImages: 11\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Dirs: 23\nExecution Driver: native-0.1\nKernel Version: 3.13.3-tinycore64\nDebug mode (server): true\nDebug mode (client): false\nFds: 16\nGoroutines: 25\nEventsListeners: 0\nInit Path: /usr/local/bin/docker\n/ # docker version\nClient version: 0.10.0\nClient API version: 1.10\nGo version (client): go1.2.1\nGit commit (client): dc9c28f\nServer version: 0.10.0\nServer API version: 1.10\nGit commit (server): dc9c28f\nGo version (server): go1.2.1\n. I just tested using boot2docker 0.8.0 - the one that has Docker 0.10, and it works for me.\nHowever, there is / was a bug in Docker 0.10.0 when -v mounting from a sofflink (like debian's /var/run) - so this might be related to that.\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.8.0\ndocker@boot2docker:~$ docker version\nClient version: 0.10.0\nClient API version: 1.10\nGo version (client): go1.2.1\nGit commit (client): dc9c28f\nServer version: 0.10.0\nServer API version: 1.10\nGit commit (server): dc9c28f\nGo version (server): go1.2.1\nLast stable version: 0.10.0\ndocker@boot2docker:~$ docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v $(which docker):$(which docker) busybox sh\n/ # docker info\nContainers: 6\nImages: 11\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Dirs: 23\nExecution Driver: native-0.1\nKernel Version: 3.13.3-tinycore64\nDebug mode (server): true\nDebug mode (client): false\nFds: 16\nGoroutines: 25\nEventsListeners: 0\nInit Path: /usr/local/bin/docker\n/ # docker version\nClient version: 0.10.0\nClient API version: 1.10\nGo version (client): go1.2.1\nGit commit (client): dc9c28f\nServer version: 0.10.0\nServer API version: 1.10\nGit commit (server): dc9c28f\nGo version (server): go1.2.1\n. oh - and yup its the softlinked dir issue:\ndocker@boot2docker:~$ docker run --rm -it -v /var/run/docker.sock:/var/run/docke\nr.sock -v $(which docker):$(which docker) debian:stable bash\nUnable to find image 'debian:stable' locally\nPulling repository debian\nd8309758b8fe: Download complete\n511136ea3c5a: Download complete\n574c4c3fda05: Download complete\n2014/05/04 11:44:41 setup mount namespace mounting /var/run/docker.sock into /mnt/sda1/var/lib/docker/aufs/mnt/f690f190ba1ee93cc0048ba59f31c03570f2dcb2eeb88e8f4d7e82c1829df40d/var/run/docker.sock no such file or directory\ndocker@boot2docker:~$ docker run --rm -it -v /var/run/docker.sock:/docker.sock -\nv $(which docker):$(which docker) debian:stable bash\nroot@596a5423139c:/# docker -H unix:///docker.sock version\nClient version: 0.10.0\nClient API version: 1.10\n. oh - and yup its the softlinked dir issue:\ndocker@boot2docker:~$ docker run --rm -it -v /var/run/docker.sock:/var/run/docke\nr.sock -v $(which docker):$(which docker) debian:stable bash\nUnable to find image 'debian:stable' locally\nPulling repository debian\nd8309758b8fe: Download complete\n511136ea3c5a: Download complete\n574c4c3fda05: Download complete\n2014/05/04 11:44:41 setup mount namespace mounting /var/run/docker.sock into /mnt/sda1/var/lib/docker/aufs/mnt/f690f190ba1ee93cc0048ba59f31c03570f2dcb2eeb88e8f4d7e82c1829df40d/var/run/docker.sock no such file or directory\ndocker@boot2docker:~$ docker run --rm -it -v /var/run/docker.sock:/docker.sock -\nv $(which docker):$(which docker) debian:stable bash\nroot@596a5423139c:/# docker -H unix:///docker.sock version\nClient version: 0.10.0\nClient API version: 1.10\n. LGTM\n. LGTM\n. @tianon nice. and thus I move more little things from the make script into the Dockerfile. win!\n. @tianon nice. and thus I move more little things from the make script into the Dockerfile. win!\n. @steeve @crosbymichael\n. @steeve @crosbymichael\n. @steeve @crosbymichael \n. LGTM\n. LGTM\n. very odd :/ I don't recal doing anything to that code that would fix it, but we have released 0.9.1 :)\nis there a reason why you're dd-ing the iso to the disk? we tend to keep the iso, so upgrading means only swapping the attached iso and rebooting - leaving the persistence disk in place.\n. @jkingyens yes, it did reach feature parity - so yes, its worth trying out :)\n. @jkingyens yes, it did reach feature parity - so yes, its worth trying out :)\n. LGTM - @steeve @tianon @crosbymichael \n. @steeve @tianon @crosbymichael\n. @steeve @tianon @crosbymichael\n. oh, and removes the DOCKER_RAMDISK\n. oh, and removes the DOCKER_RAMDISK\n. yeah @steeve , I read that too - do you have a better fix?\n. @crosbymichael how'd it go?\n. @steeve @tianon @crosbymichael\n. @steeve @tianon @crosbymichael\n. LGTM - @steeve @tianon @crosbymichael \n. @steeve oh, very good point, damnit, back to dotcloud/docker#5654\n. on the other hand:\nMay 14 10:36:33 svens-mac-mini kernel[0]: process VBoxHeadless[10043] caught causing excessive wakeups. Observed wakeups rate (per sec): 278; Maximum permitted wakeups rate (per sec): 150; Observation period: 300 seconds; Task lifetime number of wakeups: 45148\nMay 14 10:36:33 svens-mac-mini.home.org.au ReportCrash[10054]: Invoking spindump for pid=10043 wakeups_rate=278 duration=162 because of excessive wakeups\nMay 14 10:36:34 svens-mac-mini.home.org.au spindump[10055]: Saved wakeups_resource.spin report for VBoxHeadless version ??? (???) to /Library/Logs/DiagnosticReports/VBoxHeadless_2014-05-14-103634_Svens-Mac-mini.wakeups_resource.spin\nwould be b2d\n. oh wow. I've not gone there myself, so it needs someone to spend some time nutting out the details :/\n. https://github.com/dotcloud/docker/pull/6890\nI hope to be adding code to the boot2docker iso to generate the cert, and then export it to host system.\n. +1 on option 3 :)\n@pohl oh gads, basically, you're in an organisation that's attacking you. I would probably make a docker container that runs some kind of vpn like proxy (i'm thinking ssh) to talk to my own host out there on the internet. and then have the Docker daemon talk to that proxy container. (using --insecure-registry\n. /me is evil and runs an ssh daemon on port 80.\n. oh? ok, then we need to work that out.  The only persistent place on your b2d, is /var/lib/boot2docker - a script called /var/lib/boot2docker/bootlocal.sh (and it can't be a bash script) will run at startup - though after the docker daemon has started, so you'll probably need to restart that...\n. please see http://github.com/boot2docker/boot2docker-cli \n. I'd love to have it fixed, but none of us have worked out a solution that works every time\n. take a look at the dmesg - \ndocker@boot2docker:~$ /bin/dmesg | /bin/egrep '(VirtualBox|VMware|QEMU)'\nVMware PVSCSI driver - version 1.0.2.0-k\nneat huh?\n. on vbox, \ndocker@boot2docker:/proc$ dmesg | grep -i box\nDMI: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\nACPI: RSDP 00000000000e0000 000024 (v02 VBOX  )\nACPI: XSDT 000000003fff0040 000044 (v01 VBOX   VBOXXSDT 00000001 ASL  00000061)\nACPI: FACP 000000003fff0110 0000F4 (v04 VBOX   VBOXFACP 00000001 ASL  00000061)\nACPI: DSDT 000000003fff0500 001B96 (v01 VBOX   VBOXBIOS 00000002 INTL 20100528)\nACPI: APIC 000000003fff0280 00006C (v02 VBOX   VBOXAPIC 00000001 ASL  00000061)\nACPI: HPET 000000003fff02f0 000038 (v01 VBOX   VBOXHPET 00000001 ASL  00000061)\nACPI: SSDT 000000003fff0330 0001CC (v01 VBOX   VBOXCPUT 00000002 INTL 20100528)\nata1.00: ATAPI: VBOX CD-ROM, 1.0, max UDMA/133\nscsi 0:0:0:0: CD-ROM            VBOX     CD-ROM           1.0  PQ: 0 ANSI: 5\nata2.00: ATA-6: VBOX HARDDISK, 1.0, max UDMA/133\nscsi 1:0:0:0: Direct-Access     ATA      VBOX HARDDISK    1.0  PQ: 0 ANSI: 5\n. @steeve if you boot2docker on real hardware, the if triggers and we export the tcp port. ie, its never false. \n. @steeve if you boot2docker on real hardware, the if triggers and we export the tcp port. ie, its never false. \n. yes. don't you?\ndocker@boot2docker:~$ /bin/dmesg | /bin/egrep '(VirtualBox|VMware|QEMU)'\nVMware PVSCSI driver - version 1.0.2.0-k\n. yes. don't you?\ndocker@boot2docker:~$ /bin/dmesg | /bin/egrep '(VirtualBox|VMware|QEMU)'\nVMware PVSCSI driver - version 1.0.2.0-k\n. from #449 \nThe stuff in /sys/devices/virtual/dmi/id is going to be much more accurate and less error-prone than our current grepping of dmesg output.  For example, on QEMU, /sys/devices/virtual/dmi/id/sys_vendor is \"QEMU\" (nice and obvious).\nOn VirtualBox, /sys/devices/virtual/dmi/id/product_name is \"VirtualBox\".\n. ouch. I'll make a point of looking out for the 0.9.1 release\n. ah yes, and b2d-cli has down in the usage already :)\n. @steeve @crosbymichael \n. I suspect this is a vagrant question. I don't use vagrant, so perhaps you'd be better of asking there?\n. mmm, ok, the way I do this, is to use a Docker data-container, and then share it using my https://github.com/SvenDowideit/dockerfiles/tree/master/samba container. and then connect to that from my host system.\nOther people use docker build to send the data to the Docker Host.\n. @rhysym very odd, given that I managed to build a release :/ \n. @rhysym very odd, given that I managed to build a release :/ \n. @rhysym I have this feeling that you may have had an outdated cache - if you remove that line (as docker builds and runs as root normally) does it continue working?\n. @rhysym I have this feeling that you may have had an outdated cache - if you remove that line (as docker builds and runs as root normally) does it continue working?\n. @rhysym @ramakrishnan it didn't occur to me before, but the boot2docker build system does assume that you're using the latest version of Docker. \nIt will fail on 0.9 iirc\n. @jojow what version of boot2docker (OS) are you running?\n. @jojow what version of boot2docker (OS) are you running?\n. ok, closing as a dupe of #357\n. ok, closing as a dupe of #357\n. I havn't tested yet, but I like the idea alot\n@steeve @tianon @crosbymichael \n. I'm going to do some further work on this in #463 and then merge for 1.2.0\n. sorry - @durdn can you rebase this and squash the commits please?\ngit fetch --all ; git rebase -i upstream/master\n. replaced by #461 where I merge the commits....\n. LGTM - though all this shall be gone in a week\n. LGTM - though all this shall be gone in a week\n. boot2docker-cli gives the vm 2 networks - the nat one, and a hostonly one - so once you know the ip address, you can talk to the containers directly\nboot2docker ssh ip addr dev eth1\n. I've been changing to Boot2Docker for the combination, and lowercase for the tool and iso - but otherwise - merci for noticing :)\n. @crosbymichael - what do you think?\n. @crosbymichael - what do you think?\n. @crosbymichael @jpetazzo - what do you think?\n. @vishh nice :) and thank you for updating this issue :)\n. @vishh nice :) and thank you for updating this issue :)\n. @jamtur01\n. @jamtur01\n. @proppy - you had some issues with serial console and b2d - can you tell me what to test for?\n. @proppy - you had some issues with serial console and b2d - can you tell me what to test for?\n. @steeve @tianon @crosbymichael @proppy \n. @steeve @tianon @crosbymichael @proppy \n. @tianon so far my testing says no - but I don't have my real HW here, so I'm just making VM's\n. @tianon so far my testing says no - but I don't have my real HW here, so I'm just making VM's\n. @snowch are you talking about the OSX or Windows installer? (and which version) Both of them try to test for the existence of vbox, and if they find it don't install, but clearly, its not perfect.\n. @snowch are you talking about the OSX or Windows installer? (and which version) Both of them try to test for the existence of vbox, and if they find it don't install, but clearly, its not perfect.\n. wow. I didn't realise that vbox's installer was that brutal\n. wow. I didn't realise that vbox's installer was that brutal\n. ah, and now that I'm upgrading the installer to use vbox 4.3.12 I see why. this release of vbox does not add to the PATH, so boot2docker can't find vboxmanage. fantastic.\n. This should never happen again - please open a new task.\n. @tianon i presume you guys are upgrading the windows installer to install the latest vbox?\n. @CleanCut yes please!\n. @steeve @tianon @crosbymichael \n. LGTM\n. I'm about to release the 0.12.0 installer for OSX - that should help :)\n. From what I've seen, using the hostonly IP ( run boot2docker up ) to talk to the docker daemon\n(eg export DOCKERHOST=tcp://192.168.59.103:2375 ) resolves it.\n. @jareware 2375 is the right port. since Docker 1.0, (0.12) i think actually), we've had an officially registered port number, and used it.\nWe also now avoid the use of the vbox port forwarding, because it causes the EOF issue.\nthe latest boot2docker sets up and tells you to export DOCKER_HOST=tcp://192.168.59.103:2375 for a very good reason.\n. @jareware 2375 is the right port. since Docker 1.0, (0.12) i think actually), we've had an officially registered port number, and used it.\nWe also now avoid the use of the vbox port forwarding, because it causes the EOF issue.\nthe latest boot2docker sets up and tells you to export DOCKER_HOST=tcp://192.168.59.103:2375 for a very good reason.\n. That pretty much means you have not upgraded your vm and need to\nboot2docker delete ; boot2docker download ; boot2docker start\nMind you, I'm almost sure that getting 'localhost' means you are not running the current boot2docker manage too either.\n. That pretty much means you have not upgraded your vm and need to\nboot2docker delete ; boot2docker download ; boot2docker start\nMind you, I'm almost sure that getting 'localhost' means you are not running the current boot2docker manage too either.\n. Have you used boot2docker ip to get the host only IP and then use that instead of localhost?\nOn 7 June 2014 10:52:28 GMT-07:00, Sagi Bernstein notifications@github.com wrote:\n\nHi,\nI also tried that since I've read docker they changed the port\n(complies with IANA), But I saw the same port forwarding message and\nthe same export message...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/boot2docker/boot2docker/issues/384#issuecomment-45416557\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I think this is a mismatch in versions issue\nyou really need an 0.12.0 boot2docker ISO and manage tool. and for its magical docker port detection to work, you may need to recreate the vm (ie boot2docker delete ; boot2docker init)\n. mmm, very odd. can you make sure that you do have boot2docker version 0.12.0?\nI just tested and after a delete and init, I get 2375 reported.\n. Weird. I've been using it without for ages, and my docker hosts are mostly remote\n. @cpuguy83 tbh, I we really need a reproducible case, and then to get the core devs to fix whatever the issue is.\n. @cpuguy83 tbh, I we really need a reproducible case, and then to get the core devs to fix whatever the issue is.\n. I'm going to close this, i think that if anything, it would be a Docker bug - as it should work, and does work for many of us. We're thinking its a darwin cli <-remote-> docker daemon issue, but they'll need a way to reproduce.\n. @steeve I'm leaning towards removing it - have you got any contact?\n. @davidcelis that would be fine if they also keep it up to date :) but if its not, then its very unhelpful to everyone.\n. @davidcelis that would be fine if they also keep it up to date :) but if its not, then its very unhelpful to everyone.\n. ooooh. I'm not surprised they said no - you asked to remove bother docker and boot2docker - which is pretty excessive.\nShould they not be separate homebrew packages?\n. ooooh. I'm not surprised they said no - you asked to remove bother docker and boot2docker - which is pretty excessive.\nShould they not be separate homebrew packages?\n. https://github.com/Homebrew/homebrew/blob/master/Library/Formula/boot2docker.rb\nis at 1.0.1, so closing\n. I'm afraid you've lost me - to test, I just upgraded a 0.12.0 boot2docker to 1.0, and got the following:\nboot2docker: 0.12.0\n             master : b233125 - Fri Jun  6 21:16:28 UTC 2014\ndocker@boot2docker:~$ mk\nmkdir         mkfifo        mkfs.ext3     mkfs.ext4dev  mknod         mktemp\nmke2fs        mkfs.ext2     mkfs.ext4     mklost+found  mkswap\ndocker@boot2docker:~$ Connection to localhost closed.\nboot2docker-cli(master) $ pwd\n/mnt/sda6/sven/src/docker/boot2docker-cli\nboot2docker-cli(master) $ ./boot2docker-v0.12.0-linux-amd64 stop\nboot2docker-cli(master) $ ./boot2docker-v0.12.0-linux-amd64 download\n2014/06/11 08:08:21 Downloading boot2docker ISO image...\n2014/06/11 08:08:21 Latest release is v1.0.0\n2014/06/11 08:08:25 Success: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.0.0/boot2docker.iso\n    to /home/sven/.boot2docker/boot2docker.iso\nboot2docker-cli(master) $ ./boot2docker-v0.12.0-linux-amd64 start\n2014/06/11 08:08:31 Waiting for VM to be started...\n..........\n2014/06/11 08:08:51 Started.\n2014/06/11 08:08:51 Auto detection of the VM's IP address.\n2014/06/11 08:08:51 To connect the Docker client to the Docker daemon, please set:\n2014/06/11 08:08:51     export DOCKER_HOST=tcp://:2375\nboot2docker-cli(master) $ ./boot2docker-v0.12.0-linux-amd64 ssh\nWarning: Permanently added '[localhost]:2022' (ECDSA) to the list of known hosts.\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 1.0.0\n             master : 16013ee - Mon Jun  9 16:33:25 UTC 2014\ndocker@boot2docker:~$ mk\nmkdir         mkfifo        mkfs.ext3     mkfs.ext4dev  mknod         mktemp\nmke2fs        mkfs.ext2     mkfs.ext4     mklost+found  mkswap\ndocker@boot2docker:~$ which mkfs.ext4\n/sbin/mkfs.ext4\n. @charleyzhang From 0.9.1 its complicated, as there are quite a number of changes in virtual machine setup - including a change in Docker engine port number to 2375.\nyou can try\ndocker stop\ndocker download\nand then add a second network interface - host only.\nthis won't set up the ssh key magic, and you'll need to work out how to change the port forwarding.\nmmm - or maybe, you could make a copy of the virtualbox disk, then boot2docker delete , create a new vm with the new boot2docker, and later copy the virtual box disk back (losing only the ssh key auto-login)\n. @charleyzhang interesting - so how are you 'installing'? I'd love to have a better upgrade process for bare metal too..\n. excellent :) I thought I tested that, but iirc, i had a much more complicated disk layout, so decided it was a more risk than I wanted. So I still boot from usb :)\n. @Freyskeyd your issue looks different to @luebken 's\nyou probably don't need to delete the vm - run boot2docker ip, or even boot2docker up again, and the link should work - there is a small timing window that I haven't fully tracked down where the IP address isn't gotten correctly.\nwhereas  @luebken looks very much like the vm was created pre-1.0.0 - which can work, but may be from before 0.9 - when I added the host only network.\n. very very odd - @dmlond if you boot2docker ssh to the vm, can you please paste the output of ip addr here?\n. @garthk awesome - wanna make a PR?\n. ok, so we need to add some code to https://github.com/boot2docker/boot2docker-cli to check and clean up the old port forwards - anyone want to have a go?\n. https://forums.virtualbox.org/viewtopic.php?f=8&t=55066 has some interesting details that may help some users\n. excellent :)\none thing - please replace your export DOCKER_HOST... line with $(boot2docker shellinit) - that will detect the docker port, and will also add any future env vars \nit already will add the DOCKER_CERT_PATH var if you configure the iso to run using TLS.\n. please. do not use the vbox port forwarding. use the host only IP address.\nThis will mean you need the new management tool, and to re-create your vm, but it avoids a stack of bugs in virtualbox.\n. following on from the original example, you would\ncurl http://$(boot2docker ip):49153/\n. @piclez can you please 'boot2docker delete' again and then run 'boot2docker -v init'\nIf it fails again there should be more debug output that may help us debug\n. @jbolinger I assume you mean OSX - how did you install? \n. @crosbymichael @vieux\n. i did :)\n. thats not the correct version. you should have:\nbash-3.2$ boot2docker version\nClient version: v1.2.0\nGit commit: a551732\nI'm told that brew has updated their version to correct this.\n. mmm, that aligns somewhat with how docker hosts throws everything into ~/.docker/hostname/\nbut does result in non-shared iso files, meaning you re-re-re-download the same one\n. the worst thing about the delay, is that I have a raw hardware boot2docker server that has no disk - its very fast, but taking longer to boot is annoying.\nok - lets start with 10 seconds, and hopefully someone will find it annoying enough to work through.\nnow - as there are several of you using Hyper-V, can you give me a bat / cmd file that sets up the vm and makes it all go? (I need something that I can add to the golang based https://github.com/boot2docker/boot2docker-cli )\n. might be related to #357 \nthis is one of those painful things that are hard for me to find, reproduce and then work out if its fixed or not.\nthankyou for the info :)\n. The samba shares are set up to use guest - iirc on OSX there is a 'connect to share as guest' radio box\n. ah. I think you may be interpreting the log output as a failure, even though it may well be working\nfrom my boot2docker test box:\n``\ndocker@boot2docker:~$ docker run --rm -v $(which docker):/docker -v /var/run/docker.sock:/docker.sock\nsvendowideit/samba data\nError: No such image or container: samba-server\nstarting samba server container with data /data\nadd /data\nStarting Samba daemons: nmbd smbd.\nwatching /var/log/samba/*\ntail: error reading/var/log/samba/cores': Is a directory\ntail: /var/log/samba/cores: cannot follow end of this type of file; giving up on this name\n==> /var/log/samba/cores <==\n==> /var/log/samba/log.nmbd <==\n[2014/06/26 03:47:16,  0] nmbd/nmbd.c:861(main)\n  nmbd version 3.6.6 started.\n  Copyright Andrew Tridgell and the Samba Team 1992-2011\n==> /var/log/samba/log.smbd <==\n[2014/06/26 03:47:16,  0] smbd/server.c:1053(main)\n  smbd version 3.6.6 started.\n  Copyright Andrew Tridgell and the Samba Team 1992-2011\n[2014/06/26 03:47:16.110233,  0] printing/print_cups.c:110(cups_connect)\n  Unable to connect to CUPS server localhost:631 - Connection refused\n[2014/06/26 03:47:16.110360,  0] printing/print_cups.c:487(cups_async_callback)\n  failed to retrieve printer list: NT_STATUS_UNSUCCESSFUL\ndocker@boot2docker:~$ docker ps\nCONTAINER ID        IMAGE                       COMMAND                CREATED             STATUS              PORTS                                                                                    NAMES\n24ee09800677        svendowideit/samba:latest   /setup.sh --start da   18 seconds ago      Up 17 seconds       0.0.0.0:137->137/tcp, 0.0.0.0:138->138/tcp, 0.0.0.0:139->139/tcp, 0.0.0.0:445->445/tcp   samba-server\ndocker@boot2docker:~$\n```\nthen from my other computer's samba client container:\n```\nroot@1dd9bb20bd0c:/# smbclient -L 10.10.10.15\nEnter GUEST's password:\nDomain=[WORKGROUP] OS=[Unix] Server=[Samba 3.6.6]\nSharename       Type      Comment\n---------       ----      -------\nprint$          Disk      Printer Drivers\ndata            Disk      data volume from\nIPC$            IPC       IPC Service (24ee09800677 server)\n\nDomain=[WORKGROUP] OS=[Unix] Server=[Samba 3.6.6]\nServer               Comment\n---------            -------\n24EE09800677         24ee09800677 server\n\nWorkgroup            Master\n---------            -------\nWORKGROUP\n\nroot@1dd9bb20bd0c:/#\n```\nand then I connect to it as guest:\nroot@1dd9bb20bd0c:/# mount -t cifs //10.10.10.15/data /data -o username=guest\nroot@1dd9bb20bd0c:/# ls /data\nasdf.txt\n. if you're getting timeouts to the host only network, then there's something serious wrong with your setup. adding vbox port forwards will only make things worse - as they're not reliable enough even for simple docker client use.\nI would suggest doing a boot2docker delete, then having a look at your virtualbox gui to see what else you have set up - perhaps simplifying that, and then run the Boot2Docker applet in your Application folder - it should set up a new vm, start it and set up your DOCKER_HOST correctly.\nplease note that you're best off doing this after installing/updating to the 1.1.1 version of the boot2docker osx-installer.\n. if you're getting timeouts to the host only network, then there's something serious wrong with your setup. adding vbox port forwards will only make things worse - as they're not reliable enough even for simple docker client use.\nI would suggest doing a boot2docker delete, then having a look at your virtualbox gui to see what else you have set up - perhaps simplifying that, and then run the Boot2Docker applet in your Application folder - it should set up a new vm, start it and set up your DOCKER_HOST correctly.\nplease note that you're best off doing this after installing/updating to the 1.1.1 version of the boot2docker osx-installer.\n. I don't know enough about the speed issue - but #357 may help wrt the dns until I get it tested and into the next release.\n. @cosmincatalin is there any chance you can do your test using boot2docker booted from USB stick on your thinkpad?\nI'm wondering if b2d on native HW is also slow, indicating an OS issue, or in virtualboox only, which narrows it down to our vbox cfg.\n. nice - thank you very much! \nWe need to figure out how to deal with non-vbox setups, and real hardware, but essentially, this is a good idea.\n. so on my notebook, with no network plugged in, this sits there for 3+60 seconds (3 from the wait for disk before boot delay)\nso we can't use this as is :(\n. @crosbymichael @tianon I sill wonder if we could add a signal handler to the docker daemon - so that on SIGHUP it would re-read its cfg and perhaps update its DNS. (oh what a huge number of things to go wrong)\n. @tianon can you er, explain?\n. oh mumble. and you only tell me this today? I gotta find more hours in my days to do more reading :/\n. Lets keep it open until we have resolved it one way or another. It may remind or inspire one of us :)\n@tianon harsh, but fair! :grimacing: \n. grumble - no magic bullet for me.\n. grumble - no magic bullet for me.\n. sounds to me like there's something very wrong, and adding port forwarding only makes a bad situation worse.\nWhat version of boot2docker do you have installed, and if you upgraded, did you run boot2docker delete ; boot2docker download ; boot2docker init ?\ncan you post your version info:\nboot2docker version\nboot2docker version\nboot2docker info \nplease\n. We're working on it. Its not simple, as boot2docker supports more than just virtualbox\n. vbox shares.\n. It would be great - if you make a PR, I'd love to merge it. I only use OSX to develop, build and test boot2docker - so what you get relies on the small amount of magic I work out.\n. cool! :) shame about the separate API biz tho\n. we already had a patch to do this - the problem is that it fails hard when iTerm is not installed - so someone needs to make an updated patch that can work well in both circumstances.\n. we already had a patch to do this - the problem is that it fails hard when iTerm is not installed - so someone needs to make an updated patch that can work well in both circumstances.\n. this is a duplicate of https://github.com/boot2docker/windows-installer/issues/21\n. is this all we need?\n. @crosbymichael \n. see #374 for discussion - I'm going to wait..\n. @LK4D4  thank you for the link - I'll have to test this.\n. yes, it looks like this does not apply to boot2docker with this PR:\ndocker@boot2docker:~$ more /etc/passwd\nroot:x:0:0:root:/root:/bin/sh\nlp:x:7:7:lp:/var/spool/lpd:/bin/sh\nnobody:x:65534:65534:nobody:/nonexistent:/bin/false\ntc:x:1001:50:Linux User,,,:/home/tc:/bin/sh\ndocker:x:1000:50:Linux User,,,:/home/docker:/bin/sh\ndocker@boot2docker:~$ docker run -i -t ubuntu adduser --system --quiet --home /var/lib/postgresql --no-create-home  --shell /bin/bash --group --gecos \"PostgreSQL administrator\" tc\ndocker@boot2docker:~$ docker run -i -t ubuntu adduser --system --quiet --home /var/lib/postgresql --no-create-home  --shell /bin/bash --group --gecos \"PostgreSQL administrator\" docker\ndocker@boot2docker:~$\ncould someone else please verify this with this PR?\n. Could someone please try building the extension modules into an image that could then be docker pull ed? \nWe're supposed to be making the iso smaller, and pushing things into containers....\n. LGTM\n. interesting. I have a server that is bringing up my containers at reboot, but it is real hardware - Ill have to investigate.\n. ```\ncoverage: 78.3% of statements\nok      github.com/dotcloud/docker/utils/filters    0.037s\nTest failures in: ./daemon/graphdriver/devmapper\n2014/07/09 08:20:08 Error response from daemon: Cannot destroy container 408416f72c4bcac441b97afd8f9aa67fb12d34b779870e6b04522c94cb050fcf: Driver aufs failed to remove root filesystem 408416f72c4bcac441b97afd8f9aa67fb12d34b779870e6b04522c94cb050fcf: rename /mnt/sda1/var/lib/docker/aufs/diff/408416f72c4bcac441b97afd8f9aa67fb12d34b779870e6b04522c94cb050fcf /mnt/sda1/var/lib/docker/aufs/diff/408416f72c4bcac441b97afd8f9aa67fb12d34b779870e6b04522c94cb050fcf-removing: device or resource busy\nmake: *** [test] Error 1\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.15.4-tinycore64 #1 SMP Wed Jul 9 16:45:46 UTC 2014 x86_64 GNU/Linux\n```\n. oh no. - 3.14.11 also has the issue?\n```\nTest failures in: ./daemon/graphdriver/devmapper\n2014/07/09 09:28:39 Error response from daemon: Cannot destroy container 9435756b15a6d1f7ff8bfe58d1ddd87a48a916b5eb9066fb172f2c6d8d949e89: Driver aufs failed to remove root filesystem 9435756b15a6d1f7ff8bfe58d1ddd87a48a916b5eb9066fb172f2c6d8d949e89: rename /mnt/sda1/var/lib/docker/aufs/diff/9435756b15a6d1f7ff8bfe58d1ddd87a48a916b5eb9066fb172f2c6d8d949e89 /mnt/sda1/var/lib/docker/aufs/diff/9435756b15a6d1f7ff8bfe58d1ddd87a48a916b5eb9066fb172f2c6d8d949e89-removing: device or resource busy\nmake: *** [test] Error 1\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.11-tinycore64 #1 SMP Wed Jul 9 18:41:54 UTC 2014 x86_64 GNU/Linux\n```\n. ok, i'm going to test 3.14.1  next.\n. NOPE. 3.14.1 has the same issue.\n```\nTest failures in: ./daemon/graphdriver/devmapper\n2014/07/09 10:15:18 Error response from daemon: Cannot destroy container 050e7183346fd9d2aa6a63567deb3e5884cb094a241099a068481f86f1a338d4: Driver aufs failed to remove root filesystem 050e7183346fd9d2aa6a63567deb3e5884cb094a241099a068481f86f1a338d4: rename /mnt/sda1/var/lib/docker/aufs/diff/050e7183346fd9d2aa6a63567deb3e5884cb094a241099a068481f86f1a338d4 /mnt/sda1/var/lib/docker/aufs/diff/050e7183346fd9d2aa6a63567deb3e5884cb094a241099a068481f86f1a338d4-removing: device or resource busy\nmake: *** [test] Error 1\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.1-tinycore64 #1 SMP Wed Jul 9 19:39:48 UTC 2014 x86_64 GNU/Linux\n```\nand in case its worth repeating:\n```\n+ go test github.com/dotcloud/docker/daemon/graphdriver/devmapper\nSIGQUIT: quit\nPC=0x4299b1\nruntime.notetsleepg(0xcfb660, 0xffffffffffffffff)\n    /usr/local/go/src/pkg/runtime/lock_futex.c:190 +0x46 fp=0x7f1848bacf48\nruntime.signal_recv(0x0)\n    /usr/local/go/src/pkg/runtime/sigqueue.goc:110 +0xe2 fp=0x7f1848bacf70\nos/signal.loop()\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:21 +0x1e fp=0x7f1848bacfa0\nruntime.goexit()\n    /usr/local/go/src/pkg/runtime/proc.c:1394 fp=0x7f1848bacfa8\ncreated by os/signal.init\u00b71\n    /usr/local/go/src/pkg/os/signal/signal_unix.go:27 +0x31\ngoroutine 1 [chan receive]:\ntesting.RunTests(0x82a9e0, 0xcdbee0, 0x5, 0x5, 0xceb201)\n    /usr/local/go/src/pkg/testing/testing.go:472 +0x8d5\ntesting.Main(0x82a9e0, 0xcdbee0, 0x5, 0x5, 0xcf9e60, ...)\n    /usr/local/go/src/pkg/testing/testing.go:403 +0x84\nmain.main()\n    github.com/dotcloud/docker/daemon/graphdriver/devmapper/_test/_testmain.go:113 +0x11b\ngoroutine 4 [syscall]:\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper._C2func_dm_task_run(0x7f18300008c0, 0xc210000330, 0x447faf, 0x7f18300008c0)\n    github.com/dotcloud/docker/daemon/graphdriver/devmapper/_test/_cgo_defun.c:52 +0x31\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper.dmTaskRunFct(0x7f18300008c0, 0x1)\n    /go/src/github.com/dotcloud/docker/daemon/graphdriver/devmapper/devmapper_wrapper.go:121 +0x27\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper.(Task).Run(0xc210000318, 0xc210000328, 0x90000)\n    github.com/dotcloud/docker/daemon/graphdriver/devmapper/_test/devmapper.go:118 +0x3d\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper.createPool(0xc21004c6e0, 0x15, 0xc2100002f0, 0xc210000310, 0x400, ...)\n    github.com/dotcloud/docker/daemon/graphdriver/devmapper/_test/devmapper.go:440 +0x5d9\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper.(DeviceSet).initDevmapper(0xc21005b1a0, 0x1, 0x0, 0x0)\n    github.com/dotcloud/docker/daemon/graphdriver/devmapper/_test/deviceset.go:773 +0xf0f\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper.NewDeviceSet(0xc21000a740, 0x30, 0x1, 0x0, 0x0, ...)\n    github.com/dotcloud/docker/daemon/graphdriver/devmapper/_test/deviceset.go:1512 +0x3fb\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper.Init(0xc21000a740, 0x30, 0x0, 0x0, 0x0, ...)\n    github.com/dotcloud/docker/daemon/graphdriver/devmapper/_test/driver.go:28 +0x67\ngithub.com/dotcloud/docker/daemon/graphdriver.GetDriver(0x7b2090, 0xc, 0xc210037d80, 0x23, 0x0, ...)\n    /go/src/github.com/dotcloud/docker/daemon/graphdriver/driver.go:76 +0x14e\ngithub.com/dotcloud/docker/daemon/graphdriver/graphtest.newDriver(0xc21004d090, 0x7b2090, 0xc, 0x28)\n    /go/src/github.com/dotcloud/docker/daemon/graphdriver/graphtest/graphtest.go:33 +0x265\ngithub.com/dotcloud/docker/daemon/graphdriver/graphtest.GetDriver(0xc21004d090, 0x7b2090, 0xc, 0x53bd1383, 0xd057564)\n    /go/src/github.com/dotcloud/docker/daemon/graphdriver/graphtest/graphtest.go:52 +0x4b\ngithub.com/dotcloud/docker/daemon/graphdriver/devmapper.TestDevmapperSetup(0xc21004d090)\n    /go/src/github.com/dotcloud/docker/daemon/graphdriver/devmapper/devmapper_test.go:20 +0x3b\ntesting.tRunner(0xc21004d090, 0xcdbee0)\n    /usr/local/go/src/pkg/testing/testing.go:391 +0x8b\ncreated by testing.RunTests\n    /usr/local/go/src/pkg/testing/testing.go:471 +0x8b2\ngoroutine 5 [syscall]:\nruntime.goexit()\n    /usr/local/go/src/pkg/runtime/proc.c:1394\ngoroutine 6 [finalizer wait]:\nruntime.park(0x40da30, 0xcf9f80, 0xcdf508)\n    /usr/local/go/src/pkg/runtime/proc.c:1342 +0x66\nrunfinq()\n    /usr/local/go/src/pkg/runtime/mgc0.c:2279 +0x84\nruntime.goexit()\n    /usr/local/go/src/pkg/runtime/proc.c:1394\nrax     0xca\nrbx     0xc21002a0e8\nrcx     0xffffffffffffffff\nrdx     0x0\nrdi     0xcfb660\nrsi     0x0\nrbp     0xc21000e000\nrsp     0x7f1848baceb0\nr8      0x0\nr9      0x0\nr10     0x0\nr11     0x286\nr12     0xc210062010\nr13     0x15\nr14     0x0\nr15     0x2\nrip     0x4299b1\nrflags  0x286\ncs      0x33\nfs      0x0\ngs      0x0\n*** Test killed with quit: ran too long (10m0s).\nFAIL    github.com/dotcloud/docker/daemon/graphdriver/devmapper 600.005s\n```\n@tibor - can you confirm that this ever worked on boot2docker, and if so, which version, and why do you think its a kernel issue - something that needs to be configured differently on boot2docker, or ?\n. talking to @tibor this morning makes me realise that it could also be the changed kernel config settings where we turned NFS back on, so I'll be testing without and then we'll see where we are at.\n. ok - so from a plain 1.0.1 release iso:\n```\n[PASSED]: version - verify that it works and that the output is properly formatted\nPASS\ncoverage: 75.7% of statements\nok      github.com/dotcloud/docker/integration-cli  381.390s\n+++ cat /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/test-integration-cli/docker.pid\n++ kill 18593\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.1-tinycore64 #1 SMP Mon Jun 2 04:19:19 UTC 2014 x86_64 GNU/Linux\ndocker@boot2docker:/mnt/sda1/src$ docker version\nClient version: 1.0.1\nClient API version: 1.12\nGo version (client): go1.2.1\nGit commit (client): 990021a\nServer version: 1.0.1\nServer API version: 1.12\nGo version (server): go1.2.1\nGit commit (server): 990021a\ndocker@boot2docker:/mnt/sda1/src$ \n```\nand now I'll replace the docker binary in it with 1.1.1 and restart the daemon\n. ok - so from a plain 1.0.1 release iso:\n```\n[PASSED]: version - verify that it works and that the output is properly formatted\nPASS\ncoverage: 75.7% of statements\nok      github.com/dotcloud/docker/integration-cli  381.390s\n+++ cat /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/test-integration-cli/docker.pid\n++ kill 18593\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.1-tinycore64 #1 SMP Mon Jun 2 04:19:19 UTC 2014 x86_64 GNU/Linux\ndocker@boot2docker:/mnt/sda1/src$ docker version\nClient version: 1.0.1\nClient API version: 1.12\nGo version (client): go1.2.1\nGit commit (client): 990021a\nServer version: 1.0.1\nServer API version: 1.12\nGo version (server): go1.2.1\nGit commit (server): 990021a\ndocker@boot2docker:/mnt/sda1/src$ \n```\nand now I'll replace the docker binary in it with 1.1.1 and restart the daemon\n. and that works ok\n```\ncoverage: 75.7% of statements\nok      github.com/dotcloud/docker/integration-cli  388.426s\n+++ cat /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/test-integration-cli/docker.pid\n++ kill 18525\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.1-tinycore64 #1 SMP Mon Jun 2 04:19:19 UTC 2014 x86_64 GNU/Linux\ndocker@boot2docker:/mnt/sda1/src$ docker version\nClient version: 1.1.1\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): bd609d2\nServer version: 1.1.1\nServer API version: 1.13\nGo version (server): go1.2.1\nGit commit (server): bd609d2\n```\n. and that works ok\n```\ncoverage: 75.7% of statements\nok      github.com/dotcloud/docker/integration-cli  388.426s\n+++ cat /go/src/github.com/dotcloud/docker/bundles/1.1.1-dev/test-integration-cli/docker.pid\n++ kill 18525\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.1-tinycore64 #1 SMP Mon Jun 2 04:19:19 UTC 2014 x86_64 GNU/Linux\ndocker@boot2docker:/mnt/sda1/src$ docker version\nClient version: 1.1.1\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): bd609d2\nServer version: 1.1.1\nServer API version: 1.13\nGo version (server): go1.2.1\nGit commit (server): bd609d2\n```\n. and yet when I build the 1.0.1 iso again (though that then gets the 1.1.1 docker) I get the failure.\nThis may mean I need to re-write the final remnants of the build process to not use the latest version of things :/ - I'll have to compare the containers used to build the iso :/\n. and yet when I build the 1.0.1 iso again (though that then gets the 1.1.1 docker) I get the failure.\nThis may mean I need to re-write the final remnants of the build process to not use the latest version of things :/ - I'll have to compare the containers used to build the iso :/\n. and this is what happens when I rebuild the 1.0.1 iso with 1.0.1 - showing that the builds are not-repeatable (no surprise, but a bad time to need to deal with it)\n```\nTest failures in: ./daemon/graphdriver/devmapper\n2014/07/10 00:55:00 Error response from daemon: Cannot destroy container f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e: Driver aufs failed to remove root filesystem f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e: rename /mnt/sda1/var/lib/docker/aufs/diff/f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e /mnt/sda1/var/lib/docker/aufs/diff/f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e-removing: device or resource busy\nmake: *** [test] Error 1\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.1-tinycore64 #1 SMP Thu Jul 10 09:31:42 UTC 2014 x86_64 GNU/Linux\ndocker@boot2docker:/mnt/sda1/src$ docker version\nClient version: 1.0.1\nClient API version: 1.12\nGo version (client): go1.2.1\nGit commit (client): 990021a\nServer version: 1.0.1\nServer API version: 1.12\nGo version (server): go1.2.1\nGit commit (server): 990021a\n```\n. and this is what happens when I rebuild the 1.0.1 iso with 1.0.1 - showing that the builds are not-repeatable (no surprise, but a bad time to need to deal with it)\n```\nTest failures in: ./daemon/graphdriver/devmapper\n2014/07/10 00:55:00 Error response from daemon: Cannot destroy container f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e: Driver aufs failed to remove root filesystem f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e: rename /mnt/sda1/var/lib/docker/aufs/diff/f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e /mnt/sda1/var/lib/docker/aufs/diff/f7a236585969b58e509c6fca9d4600a025cf97e47c7c22ddd1abf8a77d49c04e-removing: device or resource busy\nmake: *** [test] Error 1\ndocker@boot2docker:/mnt/sda1/src$ uname -a\nLinux boot2docker 3.14.1-tinycore64 #1 SMP Thu Jul 10 09:31:42 UTC 2014 x86_64 GNU/Linux\ndocker@boot2docker:/mnt/sda1/src$ docker version\nClient version: 1.0.1\nClient API version: 1.12\nGo version (client): go1.2.1\nGit commit (client): 990021a\nServer version: 1.0.1\nServer API version: 1.12\nGo version (server): go1.2.1\nGit commit (server): 990021a\n```\n. as a lesson in the importance of looking in the logs:\n```\nFinally duplicated, and found this in dmesg:\ndivide error: 0000 [#3] SMP\nModules linked in: dm_thin_pool dm_persistent_data dm_bio_prison\ndm_bufio dm_mod veth xt_addrtype xt_conntrack ipt_MASQUERADE\niptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat\nnf_conntrack bridge stp llc ipv6 cpufreq_userspace cpufreq_stats\ncpufreq_powersave cpufreq_conservative squashfs loop ppdev parport_pc\nparport battery ac pcspkr intel_agp i2c_piix4 intel_gtt agpgart\nCPU: 7 PID: 16063 Comm: devmapper.test Tainted: G      D\n3.15.3-tinycore64 #1\nHardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006\ntask: ffff88003f9e4010 ti: ffff880003abc000 task.ti: ffff880003abc000\nRIP: 0010:[]  [] 0xffffffffa011f227\nRSP: 0018:ffff880003abfba8  EFLAGS: 00010246\nRAX: 0000000000010000 RBX: ffff88000376fa40 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000010000 RDI: ffff88003a6917c0\nRBP: ffff880003abfbf0 R08: 0000000000000200 R09: 0000000000000200\nR10: 00007f0decf04000 R11: ffff880004d3d400 R12: ffff880078e61000\nR13: 0000000000000001 R14: ffffffffa0044317 R15: ffff880003abfd60\nFS:  00007f0ded724700(0000) GS:ffff88007ebc0000(0000) knlGS:00000000f77146c0\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000f75dd068 CR3: 0000000079a63000 CR4: 00000000000006e0\nStack:\n ffff880038132000 ffffc9000137d040 ffff880078c32600 ffff880003abfc70\n ffffc9000137d040 ffff880078c32600 ffff880003abfc70 ffffffffa0041d14\n 0000000000000000 000fffffffffffff 00000000ffffffff 000000ff000000ff\nCall Trace:\n [] ? 0xffffffffa0041d14\n [] ? 0xffffffffa0044317\n [] ? 0xffffffffa00402a2\n [] ? 0xffffffffa0044317\n [] ? 0xffffffffa004441e\n [] ? 0xffffffffa0043712\n [] ? 0xffffffff814cf6e8\n [] ? 0xffffffff8107f451\n [] ? 0xffffffffa0043746\n [] ? 0xffffffff81110143\n [] ? 0xffffffff810a6adc\n [] ? 0xffffffff811101bf\n [] ? 0xffffffff814d02b9\nCode: 38 04 00 00 48 c1 ea 0e 83 e2 01 eb 02 31 d2 85 d2 74 58 39 81\nfc 05 00 00 72 59 8b 89 04 06 00 00 c1 e0 09 48 39 c1 77 54 31 d2 <48>\nf7 f1 48 85 d2 75 53 48 8b 43 08 8b 50 38 89 55 2c f6 43 4c\nRIP  [] 0xffffffffa011f227\n RSP \n---[ end trace 532e13bcff5d2061 ]---\n\u2665,\n- Tianon\n```\n. I may have a resolution. I'm re-building and doing some more testing.\n. resolved by #483\n. it means things broke :/ \nI think this will be fixed by the 1.1.1 update to boot2docker I'm working on right now (its a fix in the boot2docker/windows-installer#25 repo)\n. it means things broke :/ \nI think this will be fixed by the 1.1.1 update to boot2docker I'm working on right now (its a fix in the boot2docker/windows-installer#25 repo)\n. :crying_cat_face: There is work going on to add vmware (fusion initially) support to the boot2docker cli. Would someone like to do the same for hyper-v ?\n. :crying_cat_face: There is work going on to add vmware (fusion initially) support to the boot2docker cli. Would someone like to do the same for hyper-v ?\n. 1 oooo, not something people have hit (the installers ship with an iso now, and too many of us have net access - though mine is terrible) We'll code something for 1.2.0 or so (its probably too late for 1.1.1)\n2. Someone needs to write an uninstaller for OS X - I'm still learning my way around, and I don't use OSX as my day to day platform. we don't lay down too many files though\n- /usr/loca/bin/docker, /usr/local/bin/boot2docker/, /usr/share/boot2docker (iirc), /Applications/Boot2Docker.app, then the contents of ~/.boot2docker, and VirtualBox, which I hope has an uninstaller.\n. 1 oooo, not something people have hit (the installers ship with an iso now, and too many of us have net access - though mine is terrible) We'll code something for 1.2.0 or so (its probably too late for 1.1.1)\n2. Someone needs to write an uninstaller for OS X - I'm still learning my way around, and I don't use OSX as my day to day platform. we don't lay down too many files though\n- /usr/loca/bin/docker, /usr/local/bin/boot2docker/, /usr/share/boot2docker (iirc), /Applications/Boot2Docker.app, then the contents of ~/.boot2docker, and VirtualBox, which I hope has an uninstaller.\n. @logicminds @memelet if boot2docker-cli cannot download the iso for you, you can do it yourself by downloading from https://github.com/boot2docker/boot2docker/releases and saving the iso to ~/.boot2docker/boot2docker.iso.\nplease see #564 for suggestions how to debug \n. btw, @huangsam made a PR for an uninstall.sh, which has been merged for b2d 1.3.0 (coming soon)\n. mm, @logicminds where was the old script? - it was placed down such a long time ago (by each user) that i'm not sure we can just go around and randomly delete a file with the same name as the old boot2docker.sh :/\n. made https://github.com/boot2docker/osx-installer/issues/76 to track that\n. ah, good catch! \nLGTM\n. ah, good catch! \nLGTM\n. There was a cloudfront/cloudflare ssl issue a few days ago - its worth trying again, or downloading the iso manually from the Releases tab here and then copying it into ~/.boot2docker/\n. There was a cloudfront/cloudflare ssl issue a few days ago - its worth trying again, or downloading the iso manually from the Releases tab here and then copying it into ~/.boot2docker/\n. you need to get out of your car, close and lock all the doors, and mmmmm, walk to the nearest park - get an ice cream and sit and enjoy :) (I hope there's no lactose, sugar, xxx intolerances)\ncomputers are horrible things.\n. you need to get out of your car, close and lock all the doors, and mmmmm, walk to the nearest park - get an ice cream and sit and enjoy :) (I hope there's no lactose, sugar, xxx intolerances)\ncomputers are horrible things.\n. oh wow :) merci. Need to work out how and where to write this up.\n. see #501 - do you want to make a PR?\n. yup, thats very unexpected. worse - it works for me? \nperhaps the only thing we can do is ask more questions - like (rummages around, and pretends like he has a reason to ask...) vbox version, if you use the vbox GUI, how many vm's do you have, OOOOOOOOOOh. I did have this once - and you would not believe how i caused it (not to say its the same reason here)....\nI had this happen when I accidentally ran boot2docker as 2 different users on OSX\nso vbox happily let me do: boot2docker init ; boot2docker up as my normal user, and then in another terminal, which i didn't notice was running as root, I did the same again.\nthen hours later, a container in one, and couldn't talk to it - presumably i started it on the second vm, but then tried to use the firsts host only IP?\nso the thing that tripped me up, is that both vm's had the same NAT port forwarding - probably....\nI was so surprised that I rebooted and went for a walk, muttering rude things about single user OS's and Sun/Oracle engineers....\ny, a long shot, but :)\n. yup, thats very unexpected. worse - it works for me? \nperhaps the only thing we can do is ask more questions - like (rummages around, and pretends like he has a reason to ask...) vbox version, if you use the vbox GUI, how many vm's do you have, OOOOOOOOOOh. I did have this once - and you would not believe how i caused it (not to say its the same reason here)....\nI had this happen when I accidentally ran boot2docker as 2 different users on OSX\nso vbox happily let me do: boot2docker init ; boot2docker up as my normal user, and then in another terminal, which i didn't notice was running as root, I did the same again.\nthen hours later, a container in one, and couldn't talk to it - presumably i started it on the second vm, but then tried to use the firsts host only IP?\nso the thing that tripped me up, is that both vm's had the same NAT port forwarding - probably....\nI was so surprised that I rebooted and went for a walk, muttering rude things about single user OS's and Sun/Oracle engineers....\ny, a long shot, but :)\n. my advice would be to use a container, and to avoid running things in the raw VM\nie - rather than boot2docker ssh, docker run --rm -it debian bash - although I use a data volume as my home, and have a custom image that has my tools in it\n. my advice would be to use a container, and to avoid running things in the raw VM\nie - rather than boot2docker ssh, docker run --rm -it debian bash - although I use a data volume as my home, and have a custom image that has my tools in it\n. if only we could run all this stuff in a container and not need to worry about what you had already installed and customised :/\nif someone works it out and can send a patch, it'll be fixed - detecting that someone has installed git in Z:\\somewhere\\tools\\git is kinda hard (er, duh - I'll see if i can find it in the registry, its been way too long since i worked on windows)\n. yup, windows-installer\n. There's a PR for this now: https://github.com/boot2docker/osx-installer/pull/71\n. @huangsam hopefully @tianon will come by and review it, as he's the boot2docker lead now.\n. why would it? the windows installer has (iirc) always had an uninstaller built by innosetup. (and you need to use the standard windows unintall UIs\n. @sindhus awesome suggestion - would you like to make a pull request?\n. damn, missed it, I'll target this for 1.2.0\n. damn, missed it, I'll target this for 1.2.0\n. oh, and @bjaglin nice work - thank you\n. I'm switching to wheezy for 1.1.2 - \n. I'm switching to wheezy for 1.1.2 - \n. @tianon it sounds like its time for us to make our own distro :) this debian stuff just changes too much :grimacing: \n. I'm going LGTM - with a side order of we need to rejig this to be less rolling and more static.\n. mmm, what happens if something changes and there are more than one file found?\n. I'm testing using debian:wheezy atm, and things seem to be working so far, so we may be moot :)\n. I'm testing using debian:wheezy atm, and things seem to be working so far, so we may be moot :)\n. closing - we're using wheezy, but argh, and thankyou :)\n. LGTM\n. @jamshid \n$ docker run --rm -i -t -p 80:80 nginx\nthen access your server at \"http://[the boot2docker ip]:80/\"\ndoes work for me :(\ndoing ssh tunnels is not a solution to this problem - its for accessing container ports from other computers on your network.\nThere have been a number of weird ways this has happened. Some people have upgraded existing vm's to use a newer boot2docker manage tool / iso, others ave found that they needed to uninstall their virtualbox, and then installing the one in the installer helped (no, i don't know why)\nand at least one has had it fail whenever they used their vpn software.\nI don't have enough details to know where and what can be done to mitigate it tho - i live in hope.\n. Y, I liked that idea too - I looked into it when I added the sockets: [] output to docker info and I didn't find a way to bubble that info up from the newtork connection layer to where it was needed (plus, getting it right when there's port forwarding and things is hard)\n. @Peeja you can add EXTRA_OPTS=--ip=IP_ADDRESS to the /var/lib/boot2docker/profile file on the vm, and then reboot.\nmmm, @tianon maybe we should do this by default - and bind to the host only network!\n. duplicate of #441 :)\nthough I'm thinking of going wheezy as @tianon suggests\n. reopening - it might be interesting to document.\n. reopening - it might be interesting to document.\n. yeah, i've never spent time tracking down why tiny core is making such a mess. motd - good suggestion - I wonder if you might be able to work out how to fix it :) and then send a PR\n. @docwhat looks to me like its not quite enough - it fixes sudo -i and sudo su - but su - still seg faults for me.\n. +1\n. see #358 for more details, and a hint how to do it. (closing as duplicate) \n. b2d does not forward the container ports to your real network, see https://github.com/boot2docker/boot2docker/blob/master/doc/WORKAROUNDS.md for some tips.\n. mmm, ok, I'm not comfortable adding using some other tool and then (if i read right) port forwarding all the mapped container ports to the network.\nlets try #460 instead - would that help?\n. closing in hope of code ;)\n. yup, sadly people keep dumping more things into it, and never writing the little bit of code that fixes it. In this case, it was the jq stuff that tipped me over to, hey, why not write 6 lines of golang?\n. Heya @pushou I'm hoping that you can follow http://serverfault.com/questions/281909/how-do-you-use-tinycore-with-a-virtualbox-and-a-non-us-keyboard to resolve your issue :)\n. LGTM - @steeve @tianon @crosbymichael \n. LGTM\n. @steeve @crosbymichael \n. no :)\n1. I would like the script to go away, and moved as much as I could out of it.\n2. cool\n3. true, if the image was only used for building the latest release - then again, more is just a git fetch away, so ok\n4. I was thinking of setting an ENV - mmm, can Docker do ENV VERSION $(cat /rootfs/rootfs/version)\n5. k\n6. smaller and simpler? impossible!\nso, yup, nice, expect for moving things back into the horrid monolith script - I like using the build cache.\n. alright, convinced LGTM\n. did you create a fresh vm, or did you upgrade an existing one?\nor, do you use a vpn (I've had one other report of difficulties with some vpn software, though other people using the same sw are ok)\n. nice! rather than mess about fixing the problem afterwards, is there some detection we can do and then get b2d to switch to using a different network range? I've been told by some people that their workplaces use all 3 non-routeable networks, so we can't fix it for everyone, but we can try increasing our chances of success :)\n. nice! rather than mess about fixing the problem afterwards, is there some detection we can do and then get b2d to switch to using a different network range? I've been told by some people that their workplaces use all 3 non-routeable networks, so we can't fix it for everyone, but we can try increasing our chances of success :)\n. @ksylvan and others - as you're obviously paying for this cisco software, is there any chance someone could talk to their support about the right way to go about resolving it? We don't use it, so really don't have the detailed knowledge.\n. and the related PR https://github.com/coreos/coreos-overlay/pull/777\n. @tianon do you think we should do this for 1.2.0 ?\n. no, @gregkh suggested ( in https://github.com/coreos/coreos-overlay/pull/777 ) that they could compile it in, and then disable it at boot - which I presume works around an assumption on the part of the rpm packages that they're running on an rpm provided kernel.\n. :)\n. https://github.com/docker/docker/issues/6980\n. https://github.com/docker/docker/issues/6980\n. @tianon this might be a reason to switch b2d to using btrfs by default.\n. @tianon this might be a reason to switch b2d to using btrfs by default.\n. @steeve @tianon @crosbymichael \n. I've re-opened the original issue with a little more of the error logs.\n. yay, I'm glad it fixed it, I wasn't looking forward to tearing out more hair :)\nI'm very much looking forward to trying overlayfs tho\n. @steeve @tianon @crosbymichael \nplease consider :)\n. @qxo - is there any chance you can respond to @tianon's questions? I was puzzled too, and hadn't gotten to deciding why, so didn't want to just change it without knowing / discussing first.\n. @tianon I've done a little here and there, can you poke holes a little more, or merge and we'll clean up more later.\n. @qxo - they're the 'tianon commented on an outdated diff' ones above :) I've spent some time on it, but I'm still not 100% sure what you intended with some.\n. #qxo oh, no wonder its complicated then - the PR is for logging the bootup to file, and there have been some automount issues fixed in other PR's. Lets hope that we've covered all the issues, or new PR's should be raised.\n. merging - @tianon if you have concerns, please fix them in a new PR.\n. we're not switching in the sense of dropping vbox, we're adding options - hyper-v should happen eventually, and I had a test version running qemu/kvm a while back.\n. please see the Docker machine project: https://github.com/docker/machine\nwe recently merged hyper-v support, and now its going through the normal testing and fixing stages.\n. please see the Docker machine project: https://github.com/docker/machine\nwe recently merged hyper-v support, and now its going through the normal testing and fixing stages.\n. @sammcj this fork is (i think) being subsumed into https://github.com/docker/machine \n. I was thinking we should make sure it can be set using an ENV var on the persistent disk too\n. very excellent, thank you very much LGTM\n. mmm, this does not appear to have worked.\n. @tianon your 3+ corrections really don't show that to be a robust, nor simple solution. \nUsing the much simpler to understand approach will work even if the sshd_config doesn't exist on the persistent partition, if it contains a version of the cfg that doesn't have the defaults commented out \nplease, can we use simple solutions?\n. good enough for me :)\n. awesome! LGTM\n. We have some changes that may help going into boot2docker 1.2.0, see #486 for more :)\n. This causes much pain - @tianon do you guys have time to figure this out?\n. wow.\nThe next thing to do for debugging, is to use the VirtualBox GUI to start the vm - that way you can see what is happening at bootup.\n. LGTM merci to all!\n. LGTM\n. wonderful :) I'll start testing with the new version and try to figure out what part of their commandline they changed (each release has broken something new)\n. I was going to wait on Windows due to https://forums.virtualbox.org/viewtopic.php?f=6&t=62615\n. interesting perhaps this is something we can be more explicit with\n. interesting perhaps this is something we can be more explicit with\n. nice. This is a very good approach. in 1.3.0, I'll be working on adding more automation for sharing - see https://github.com/boot2docker/boot2docker-cli/issues/202 - \nYou're right though, I'll have to look at bringing what you've done into the boot2docker-cli too :)\n. the disk size can be set from both the commandline when you're init-ing, and from the config file - will that help?\n. I don't know :/ I'll need to investigate.\n. mmm, I'm not sure that VirtualBox is relocatable - especially as we're chaining it from another installer. The other files we install are small and need to go into /usr/local/binso they're in your path.\nI'm not sure we can change this.\n. @docwhat true - can you think of circumstances where doing this may be a problem? (I'm worried, but busy elsewhere, so hoping you could list some of the risks :))\n. I did it this way so that the certs are also generated when using the iso without the boot2docker-cli, like the physical HW I use, or non-vbox setups. Also, At some point in the future Docker will probably do it.\n. LGTM\n. What do boot2docker -v init and boot2docker -v run print out?\n. @tianon can we make the error message more obvious?\n. @tianon can we make the error message more obvious?\n. mmm, is this still needed? in v1.1.0 or so we added a 10 second disk startup delay? - OR could this PR replace that delay?\nThe weirdest thing is that you're not re-evaluating the blkid - so $BOOT2DOCKER_DATA never changes.\n. @qxo does that mean we can remove the waitusb=10 that we added in 1.1.0?\n. \u221e !\n. \u221e !\n. @huselage - is this that OSX beta thing you were talking about? \n. oh wow :/ sounds like its time to move away from github :(\n. that would work - I was thinking more along the lines of pushing the b2d release artifacts onto get.docker.io.\n. Mind you - I wonder why @srid 's IP is hitting the GitHub API more than 60 times an hour.\nSounds like the first fix is to improve our error message.\n. This is basically reverting a change that was in @qxo 's PR - I would probably merge this, but @qxo perhaps you can tell us what your change was for?\n. So the extra q is - should we go to 3.16.1 instead.\n. @dduportal if you make a PR in the next day or 2, i'll merge it into the next release :)\n. please, make a PR asap - you can keep updating your branch until it gets merged, but that makes it easier for us to see the differences and discuss them :)\n. @tianon - I don't think i can merge this without your review\n. and if its good, I'm happy to rebase - unless @dduportal gets there first :)\n. @dduportal to get rid of the extra commits rebase using git rebase -i upstream/master\n. mmm, can you please merge your commits? \n. yes - tcp://localhost:XXXX should not work. we use a host only network now because its much more reliable. boot2docker up should output the export DOCKER_HOST=.... command to use to set things right - if not, it needs updating.\n(I'm working on a 1.2.0 release right now, but 1.1.2 should do the trick too)\n. since v1.2.0, you now run:\n(assuming OSX's open command)\n```\nboot2docker up\n$(boot2docker shellinit)\ndocker run --name nginx-test -d -p 80:80 nginx\nopen http://$(boot2docker ip 2>/dev/null)/\ndocker stop nginx-test\ndocker rm nginx-test\n```\n. I would love some Go code to do mdns for Docker. I had a go months ago and failed, if you can, that would be awesome (and then we can see if we can get it into Docker :)\n(auto-detect all the shared Docker daemons on my network, then use TLS to allow me into some of them :) )\n. yup, that would be the awesome end result - but if we can trial it as a small go based binary in the iso, then we'll have more of an idea where it works (and not)\nYour mdns repo is the server side? - can we add client side code to the boot2docker binary to match (so that it works on Linux, OSX and Windows?) or does it depend on OS support ?\n. the idea is basically to give us a non-port forwarded b2d sshd way for the remote client to find out where the docker daemon is. dealing with multiple docker daemons will obviously need to be dealt with, given that I have a minimum of 4 b2d based systems running in my network... :)\n. oh, nice! I'd love to see a writeup of that :)\n. Very interesting indeed - I used hello-world as my test, and it worked here.\nI don't know what information will help us debug - could you perhaps send / post your /usr/local/etc/init.d/docker from inside the vm?\n. er, sorry, I meant /var/log/docker.log :( \n. nope. frustrating.\n. see #430 - do you want to make a PR?\n. na, i don't really have a preference :)\n. First up, ideally, you would not do this. If at all possible, rather than adding things to the Boot2Docker ISO / OS, you'd create a container inside which your users would work.\nIf you have a little time, it would be great to work with you to show how this can be done, but assuming you need something now\nyou don't want to install the debian packages, you want to add more Tiny core packages - which in the main Dockerfile is goverened by the TCZ_DEPS env var.\nif you copy the rootfs/Dockerfile example to build on top of the existing boot2docker/boot2docker you'll need to copy the tce-load loop to it :)\n. this is intentional. when Dockerport is set to 0, we don't set up the VBox port forwarding of the Docker port to the OSX localhost (which is both buggy and insecure)\nThat setting is not the port used by the VM.\n. BTW, what you should call from your script, is $(boot2docker shellinit). this will set your DOCKER_HOST, and any other env vars needed (like DOCKER_CERT_PATH if you turn on TLS)\n. @htok just wrote: https://github.com/docker/docker/pull/7749 which might help you too.\n. docker info output would also be good :)\n. docker info output would also be good :)\n. very odd.\ncan you please try deleting the 2 ssh files /Users/<user>/.ssh/id_boot2docker*, then running boot2docker delete && boot2docker -v init\nit should recreate the keys and then use them..\n. can you show me the verbose log of boot2docker -v init showing it failing to create the keys?\nwhat is boot2docker version say?\n. can you show me the verbose log of boot2docker -v init showing it failing to create the keys?\nwhat is boot2docker version say?\n. the 1.2.0 release is a551732 - for some reason the github tag was on the wrong commit - I've since forced it to where it should be and @thoughtcroft seems to confirm that this has worked. \nSorry for the confusion.\n. the 1.2.0 release is a551732 - for some reason the github tag was on the wrong commit - I've since forced it to where it should be and @thoughtcroft seems to confirm that this has worked. \nSorry for the confusion.\n. I wonder why we used vmdk's @tianon ?\n. @tianon what do you recon? \n. @tianon what do you recon? \n. can you suggest a better error message?\n. What does it say when you run 'boot2docker -v init'?\nOn 29 August 2014 18:40:17 GMT+10:00, Fabrice Le Coz notifications@github.com wrote:\n\nI've install boot2docker on my mac ( OSX 10.9.4 ), but when i try to\nrun boot2docker init, I've a strange error :\nerror in run: config error: Near line 1, key 'alias ls': Near line 1:\nExpected value but found '\\'' instead.\nmy only alias is : \nalias rvm-restart='rvm_reload_flag=1 source\n'\\''/Users/fablec/.rvm/scripts/rvm'\\'''\nhave you any ideas to pass through ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/boot2docker/boot2docker/issues/512\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. What does it say when you run 'boot2docker -v init'?\nOn 29 August 2014 18:40:17 GMT+10:00, Fabrice Le Coz notifications@github.com wrote:\n\nI've install boot2docker on my mac ( OSX 10.9.4 ), but when i try to\nrun boot2docker init, I've a strange error :\nerror in run: config error: Near line 1, key 'alias ls': Near line 1:\nExpected value but found '\\'' instead.\nmy only alias is : \nalias rvm-restart='rvm_reload_flag=1 source\n'\\''/Users/fablec/.rvm/scripts/rvm'\\'''\nhave you any ideas to pass through ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/boot2docker/boot2docker/issues/512\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. odd :/\n. can you show the output of C:\\Program Files (x86)\\Git\\bin\\ssh.exe -vvv -o Ide\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o L\nogLevel=quiet -p 2022 -i c:\\Users\\Zilong.ssh\\id_boot2docker docker@localhost ?\nI'm a little suspicious of the windows paths - given that at this point, we need the MSYS bash shell.\n. can you show the output of C:\\Program Files (x86)\\Git\\bin\\ssh.exe -vvv -o Ide\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o L\nogLevel=quiet -p 2022 -i c:\\Users\\Zilong.ssh\\id_boot2docker docker@localhost ?\nI'm a little suspicious of the windows paths - given that at this point, we need the MSYS bash shell.\n. fascinating! what version of virtualbox are you using?\n. fascinating! what version of virtualbox are you using?\n. what do you mean by I get nothing?\n. what do you mean by I get nothing?\n. I wonder if 192.168.59.103 is actually the IP address of your boot2docker vm - thats only the default, but it can change.\n. I wonder if 192.168.59.103 is actually the IP address of your boot2docker vm - thats only the default, but it can change.\n. @tianon - this sounds worrying\n. @amjibaly it would be useful to report problems that are 'unreliable' - at this point, b2d does not support mounting your desktop's FS into the vm, specifically because we've not found a satisfactory way to do it.\nHowever, when you say 'unreliable' - that suggests you're having issues with the supported functionality - please report!\nto the rest of you - yes, I clone to the b2d vm's filesystem when I'm on windows - until there is a docker client for windows, things there are restricted - if anyone can help, that would be great!\n(atm, i'm fixing some bugs in the cli - but boot2docker share is coming soon)\n. @amjibaly it would be useful to report problems that are 'unreliable' - at this point, b2d does not support mounting your desktop's FS into the vm, specifically because we've not found a satisfactory way to do it.\nHowever, when you say 'unreliable' - that suggests you're having issues with the supported functionality - please report!\nto the rest of you - yes, I clone to the b2d vm's filesystem when I'm on windows - until there is a docker client for windows, things there are restricted - if anyone can help, that would be great!\n(atm, i'm fixing some bugs in the cli - but boot2docker share is coming soon)\n. So you have virtualbox and the vm working on the surface? (nice!)\ncan you tell me what boot2docker -v ip tells you?\n. that is expected. If you're going to run boot2docker from a cmd shell, you need to tell it where the ssh exe is.\nboot2docker should work if you start it in the MSYS-bash shell, or if you double click on the boot2docker start icon that the installer makes for you.\n(I havn't found a totally reliable way to detect and add the msys ssh path to PATH - most things work most of the time, but not quite)\n. is there any chance you can copy&paste the text next time, screenshots are not great for searching issues :)\nso basically - it works? nice!\n. I guess you'll need to give us more information on how to reproduce :)\n. I guess you'll need to give us more information on how to reproduce :)\n. boot2docker up does work in the MSYS shell.\nat the point where you're typing it in the example above, you're no longer in MSYS, but are ssh'ed into the virtual machine.\nWe don't have a boot2docker tool inside the VM - though it would be nice.\n. can you give us enough information to reproduce your setup please?\n. can you give us enough information to reproduce your setup please?\n. That doesn't tell us anything about your local registry setup - ie, how to reproduce your issue.\n. That doesn't tell us anything about your local registry setup - ie, how to reproduce your issue.\n. The reason I ask, is that I can test this in very many different ways, and its quite possible that most of them won't show the same problem.\nClearly, the more information you give, the sooner someone can give you some relevant help...\n. The reason I ask, is that I can test this in very many different ways, and its quite possible that most of them won't show the same problem.\nClearly, the more information you give, the sooner someone can give you some relevant help...\n. mmm, ok that might be enough.\nthe docker0 virtual network interface defaults to using 172.17.42.1/16, and while it tries to avoid clashes, being inside the boot2docker vm makes that hard. If you run ping 172.17.16.31 I'm expecting that you see timeouts too.\nFor more information, see https://docs.docker.com/articles/networking/#docker0\nIn boot2docker, we can set that in /var/lib/boot2docker/profile so its set up correctly at virtual machine boot.\nplease add \nEXTRA_ARGS=\" --bip 10.10.4.5/24 \"\n(this assumes that your workplace doesn't use the 10.10.4.* network - you may need to tune that further.)\n@tianon the boot2docker init code probably needs to duplicate the docker0 conflict detection code and send the info in the initial disk creation payload.\n. mmm, ok that might be enough.\nthe docker0 virtual network interface defaults to using 172.17.42.1/16, and while it tries to avoid clashes, being inside the boot2docker vm makes that hard. If you run ping 172.17.16.31 I'm expecting that you see timeouts too.\nFor more information, see https://docs.docker.com/articles/networking/#docker0\nIn boot2docker, we can set that in /var/lib/boot2docker/profile so its set up correctly at virtual machine boot.\nplease add \nEXTRA_ARGS=\" --bip 10.10.4.5/24 \"\n(this assumes that your workplace doesn't use the 10.10.4.* network - you may need to tune that further.)\n@tianon the boot2docker init code probably needs to duplicate the docker0 conflict detection code and send the info in the initial disk creation payload.\n. LGTM\n. LGTM\n. LGTM\n. What version of virtualbox are you running (as that seems to be a VBoxManage error, not a boot2docker one.\n. bash-3.2$ VBoxManage -v\n4.3.14r95030\nsame. though I don't have OS X 10.8 :/\n. bash-3.2$ VBoxManage -v\n4.3.14r95030\nsame. though I don't have OS X 10.8 :/\n. @tianon whats the plan for supporting non-head versions of OS X?\n. @tianon whats the plan for supporting non-head versions of OS X?\n. @evgeny-goldin can you tell us a little more? OSX / Windows, what version in particular etc?\n. @evgeny-goldin can you tell us a little more? OSX / Windows, what version in particular etc?\n. reopening - surely we can write some code to detect this situation and either tell the user to delete, or fix it ourselves.\n. @tianon (solving this here, or in docker-hosts will be a win..)\n. you mean https://github.com/boot2docker/osx-installer/pull/60 ?\n. you mean https://github.com/boot2docker/osx-installer/pull/60 ?\n. nice - though dangerous if your network already uses it - I wonder if we can do something to detect the existing routes more.\n. y, we can duplicate that daemon code :/\n. While I like the changes you've made, I don't think they're necessary to achieve any of the things you've listed in your description.\nThere's already partial support for PXE boot params - see the disabled /etc/rc.d/automated_script.sh (we removed bash, and it needs to be translated)\nand I've been using FROM boot2docker to make customised iso's for very many months - see https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md#making-your-own-customised-boot2docker-iso\nso LGTM, but.\n. What are you setting your DOCKER_HOST to?\nyou really should use $(boot2docker shellinit) as that will also set the TLS variable if configured (ie, is rather more future-proof)\n. @qxo - what version of b2d and which kernel?\nlooking at our kernel_config:\n```\nCONFIG_AUFS_FS=y\nCONFIG_AUFS_BRANCH_MAX_127 is not set\nCONFIG_AUFS_BRANCH_MAX_511 is not set\nCONFIG_AUFS_BRANCH_MAX_1023 is not set\nCONFIG_AUFS_BRANCH_MAX_32767=y\nCONFIG_AUFS_SBILIST=y\n```\nfor my diskless b2d:\n121\n ---> 63eb5118ad12\nRemoving intermediate container 9061da65b0bc\nStep 122 : RUN echo 122\n2014/09/11 01:57:35 Cannot create container with more than 127 parents\nand on a v1.2.0 vm:\n---> f4d24847652e\nRemoving intermediate container 18b406a288ac\nStep 122 : RUN echo 122\n2014/09/11 02:00:07 Cannot create container with more than 127 parents\ndocker@boot2docker:/mnt/sda1/tmp$ uname -a\nLinux boot2docker 3.16.1-tinycore64 #1 SMP Fri Aug 22 06:40:10 UTC 2014 x86_64 GNU/Linux\ndocker@boot2docker:/mnt/sda1/tmp$ mount\nrootfs on / type rootfs (rw,size=1017280k,nr_inodes=254320)\ntmpfs on / type tmpfs (rw,relatime,size=1851016k)\nproc on /proc type proc (rw,relatime)\nsysfs on /sys type sysfs (rw,relatime)\ndevpts on /dev/pts type devpts (rw,relatime,mode=600,ptmxmode=000)\ntmpfs on /dev/shm type tmpfs (rw,relatime)\nfusectl on /sys/fs/fuse/connections type fusectl (rw,relatime)\n/dev/sda1 on /mnt/sda1 type ext4 (rw,relatime,data=ordered)\ncgroup on /sys/fs/cgroup type tmpfs (rw,relatime,mode=755)\ncgroup on /sys/fs/cgroup/cpuset type cgroup (rw,relatime,cpuset)\ncgroup on /sys/fs/cgroup/cpu type cgroup (rw,relatime,cpu)\ncgroup on /sys/fs/cgroup/cpuacct type cgroup (rw,relatime,cpuacct)\ncgroup on /sys/fs/cgroup/memory type cgroup (rw,relatime,memory)\ncgroup on /sys/fs/cgroup/devices type cgroup (rw,relatime,devices)\ncgroup on /sys/fs/cgroup/freezer type cgroup (rw,relatime,freezer)\ncgroup on /sys/fs/cgroup/net_cls type cgroup (rw,relatime,net_cls)\ncgroup on /sys/fs/cgroup/blkio type cgroup (rw,relatime,blkio)\ncgroup on /sys/fs/cgroup/perf_event type cgroup (rw,relatime,perf_event)\n/dev/sda1 on /mnt/sda1/var/lib/docker/aufs type ext4 (rw,relatime,data=ordered)\n. @dduportal for most of us, b2d is very able to build itself. as @qxu noted in the last comment - the issue is caused if you set things up in an unusual way.\n. LGTM - merge after rebase :)\n. Where's the Documentation?\n. This PR is only missing some documentation to say that it does not work for Linux - even if you share /home as Users, it will then be mounted in the wrong place, and the -v $(pwd):/data will thus fail.\nonce that's done - LTGM\n. LGTM - will there be a b2d-cli PR to set these up?\n. @michaelneale just you wait! the awesomness that @bfirsh and @tianon are working on is...\n. @huahaiy there is nothing in these changes that are dependant on fig - there are comanion changes in boot2docker-cli to make it work. - if you read @AkeemMcLennon 's comment, it asks about integrating this change into fig :)\n. LGTM - though i've not tested.\n. what does boot2docker -v init report?\n. I would delete the /Users/rwalls/VirtualBox VMs/boot2docker-vm directory :)\n. yup - this is fixed in the boot2docker-cli repo; and is just waiting for #docker, and then @tianon to do a 1.2.1 release.\nor a 1.3.0 in October.\n. LGTM\n. LGTM\n. On one of the installation pages there's a 'Customise' button that allows you to select / deselect components to install - virtualbox can be unselected using it :)\n. They're in the docker image that is used to build the iso - at the moment, I think you'll need to build your own from the source in this repo.\n(or just download it yourself from kernel.org)\n. the Dockerfile downloads it - you'll see the wget in there :)\n. yup, tests fine here too\nLGTM\n. very surprising! I'm not sure what changed, or if it happens on all windows, 1.2.0\nneeds testing :/\n. I'm not sure what to ask or look into - I do not experience this on my windows 7, 8 or 8.1 test systems.\nhowever @raghuveerp 's comment is interesting.\nI doubt it is proxys or that level of things :/\nWhat version of virtualbox ? - @wolfs when you downgraded to 1.1.2, did you change the iso, the cli or everything (is it still the same vbox version?)\n. @tianon this seems important\nmmm, @wolfs I've been on holidays, and need to spend time catching up on other things, but one idea is that you could add some code to the initial disk payload code (I basically dd a tar file into the unformated virtual disk) during the boot2docker init, which is then saved into /var/lib/boot2docker when the vm is started (just before the vm formats the disk).\nyou could add a parameter to boot2docker init that adds a /var/lib/boot2docker/profile file to that tar file, and then some small code on the bootup to use it (i'm not 100% sure about the order and details, but its doable :) )\n. @lalyos iirc that patch made it into boot2docker 1.2.0\n. its worth reading https://docs.docker.com/userguide/usingdocker/ :)\nplease do not use the VBoxManage controlvm boot2docker-vm natpf1... command @odewahn  mentions unless you specifically need to allow everyone else to access your ipython notebook.\nAs you're restarting an existing container, we should see what (if any) of its ports are available on the boot2docker vm's host only network. \nif you run `docker ps', you would see something like \nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES\n9b4551c644f0        busybox:latest      \"top\"               45 seconds ago      Up 58 seconds       0.0.0.0:1234->2345/tcp   cranky_wozniak\nindicating that in my case, I can access the container's port 2345 using the vm's 192.168.59.103:1234\nsimilarly, docker inspect furious_curie, will give you a json which includes:\n\"NetworkSettings\": {\n        \"Bridge\": \"docker0\",\n        \"Gateway\": \"172.17.42.1\",\n        \"IPAddress\": \"172.17.0.8\",\n        \"IPPrefixLen\": 16,\n        \"PortMapping\": null,\n        \"Ports\": {\n            \"2345/tcp\": [\n                {\n                    \"HostIp\": \"0.0.0.0\",\n                    \"HostPort\": \"1234\"\nif your container is not set up to forward a port to the vm, then you'll need to stop it, and make one that does:\ndocker run -p 8888:8888 -it your_image will set up the container to pass its port 8888 to the vm's 8888, which you would then be able to access (only on your computer) using http://192.168.59.103:8888).\n. very true - this isn't supported for non-local Docker daemons yet - though #258 is working on a simplified solution to this.\n. sorry, wrong repository: https://github.com/boot2docker/boot2docker-cli/pull/258\n. I don't suppose you can find out what the results of the troubleshooting was?\n. using the portable version of VBox doesn't (in my experience) reduce the conflict with VMWare. for it to work, the kernel modules are still installed, and the network is still set up.\n. https://github.com/boot2docker/boot2docker-cli/pull/247 contains all the steps needed to use sshfs to mount your host's dirs into the vm :)\n. no, true, it doesn't answer the direct question, because there are better ways to achieve the desired result (i hope)\n. needs some docs updates, and the kernel_config file updated \nLGTM tho\n. LGTM - @tianon please merge\n. bash is installed by the installer, but if notepad++ is started, its because you have a windows file association to open all .sh files in notepad++.\nyou need to either change that setup, or select open with\n. I would hope so. Docker uses iptables to make its networking work.....\nThe boot2docker OS is an in-memory copy of the filesystem that is on the ISO, so every time you boot, you start fresh (except for the persistence partition)\n. very very surprising - You're the first person that has reported an issue with it. @tianon given that we're now adding virtualisation specific stuff to the iso's, perhaps you could turn the serial port code off, as we're not going to persuade MS and VMWare to use it instead..\n. much yay - thought it should also be documented in this PR\n. LGTM\n. LGTM\n. the PRs are merged, so merging\n. the PRs are merged, so merging\n. @logicminds @memelet if boot2docker-cli cannot download the iso for you, you can do it yourself by downloading from https://github.com/boot2docker/boot2docker/releases and saving the iso to ~/.boot2docker/boot2docker.iso.\nI don't know why your computer can't talk to github's API to get the release name - what happens when you run\ncurl -I https://api.github.com/repos/boot2docker/boot2docker/releases ?\nI'm expecting an error, but if there is no http header info telling you there's a problem, try\ncurl curl -I https://api.github.com/repos/boot2docker/boot2docker/releases\nwhich is what boot2docker does to find out the release name.\nthis should be a json structure of all the release versions, but can also contain json error info.\nif not, perhaps you have some kind of proxy or firewall getting in the way?\n. er - i was going to say :)\n. er - i was going to say :)\n. duplicate of #563 ?\n. I'm building a rebased to master version of this with added 1.3.0 docker test binary, and will work with it for the rest of my day.\n. I'm building a rebased to master version of this with added 1.3.0 docker test binary, and will work with it for the rest of my day.\n. - Darwin: using b2d 1.3 and b2d-cli 1.3 and docker 1.2, it works - you only need --tls (as it should be) :white_check_mark: \n- Darwin: 1.3 for all 3, and it works, no --tls needed :white_check_mark: \n. - Darwin: using b2d 1.3 and b2d-cli 1.3 and docker 1.2, it works - you only need --tls (as it should be) :white_check_mark: \n- Darwin: 1.3 for all 3, and it works, no --tls needed :white_check_mark: \n. - small nit: every time you run boot2docker init or boot2docker shellinit, the b2d certs are re-copied - even if they did not change\n. - small nit: every time you run boot2docker init or boot2docker shellinit, the b2d certs are re-copied - even if they did not change\n. I've edited out the BINDDIR remote DOCKER_HOST check in the docker make file, created a new b2d vm: make cross results in fully functional binaries in the bundle dir on OSX  (so the vbox share works) - PR needed:\n```\ndiff --git a/Makefile b/Makefile\nindex 842cc18..842be75 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -2,7 +2,8 @@\n# to allow make BINDDIR=. shell or make BINDDIR= test\n # (default to no bind mount if DOCKER_HOST is set)\n-BINDDIR := $(if $(DOCKER_HOST),,bundles)\n+#BINDDIR := $(if $(DOCKER_HOST),,bundles)\n+BINDDIR := bundles\n # to allow make DOCSPORT=9000 docs\n DOCSPORT := 8000\n```\n(will update with make test results in a few hours?)\n. I've edited out the BINDDIR remote DOCKER_HOST check in the docker make file, created a new b2d vm: make cross results in fully functional binaries in the bundle dir on OSX  (so the vbox share works) - PR needed:\n```\ndiff --git a/Makefile b/Makefile\nindex 842cc18..842be75 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -2,7 +2,8 @@\n# to allow make BINDDIR=. shell or make BINDDIR= test\n # (default to no bind mount if DOCKER_HOST is set)\n-BINDDIR := $(if $(DOCKER_HOST),,bundles)\n+#BINDDIR := $(if $(DOCKER_HOST),,bundles)\n+BINDDIR := bundles\n # to allow make DOCSPORT=9000 docs\n DOCSPORT := 8000\n```\n(will update with make test results in a few hours?)\n. oh, and LGTM :)\n. oh, and LGTM :)\n. @tianon @bfirsh this also should be done in the osx-installer and win-installer's\nbut sadly needs testing to make sure it doesn't break (it has at least twice in the 6months i worked on it)\n. @tianon @bfirsh this also should be done in the osx-installer and win-installer's\nbut sadly needs testing to make sure it doesn't break (it has at least twice in the 6months i worked on it)\n. I think that's them :)\n. I think that's them :)\n. I'll take @tianon 's comment as a LGTM, add my own LGTM, and merge.\n. I'll take @tianon 's comment as a LGTM, add my own LGTM, and merge.\n. that's the TLS changes - you need to add --tls to your docker client flags (until you have docker 1.3.0)\n. that's the TLS changes - you need to add --tls to your docker client flags (until you have docker 1.3.0)\n. @pnathan your docker client is ancient! you need to upgrade it - which the boot2docker installer will do for you..\n. @pnathan your docker client is ancient! you need to upgrade it - which the boot2docker installer will do for you..\n. perhaps you have an older docker client in a different path from the one we install?\nwhich docker?\n. perhaps you have an older docker client in a different path from the one we install?\nwhich docker?\n. $ docker version\nClient version: 0.9.1\nthis is ancient. you need Client version to be 1.3.0\n. waiting for confirmation that its significantly different to the 1.2.0 installer - if not, punt to 1.4\n. waiting for confirmation that its significantly different to the 1.2.0 installer - if not, punt to 1.4\n. the best resolution is probably to remove the msts installer and to get our installer to hand install the few portable msys files we need. (which is almost all of them, but don't tell :) )\n. mmm, i think I'd rather have only one ISO - is there a reason you can't add the guest tools during the build like the vbox ones are?\nsecondly, please don't use host shared volumes, that means you can only build the iso on local docker daemons - and my fastest docker servers are all remote bare metal boot2docker's which I talk to using a remote socket.\n. There is already a test/Dockerfile\nperhaps we should refactor to have the base Dockerfile build without any vm extensions as you say, if we use dirs like vmware/Dockerfile then we match the cli driver layout too :)\n. ok - I'll bite tho. Can you explain why the hypervisor drivers conflict? are they not kernel drivers which can then be optionally loaded as things are detected, and based on that detection, the different tools can be selected?\n. I'm -1 on make_iso being container-runtime - its unnecessary, even if you need multiple ISO's - there's an example in the repo of re-running it to make a customised iso.\nthe biggest reason i did this, is that it means that iso's can be totally built on the Docker hub - and then customisations can be made FROM boot2docker.\nThis we have a clean build server everytime.\nAlso, the CMD [\"cat\", \"isofile\"] exists so its possible to build the iso on a remote Docker daemon - which I found useful for testing.\nbut - I'm not the one building the release process, so, I'll let @tianon decide on it :)\n. I'm -1 on make_iso being container-runtime - its unnecessary, even if you need multiple ISO's - there's an example in the repo of re-running it to make a customised iso.\nthe biggest reason i did this, is that it means that iso's can be totally built on the Docker hub - and then customisations can be made FROM boot2docker.\nThis we have a clean build server everytime.\nAlso, the CMD [\"cat\", \"isofile\"] exists so its possible to build the iso on a remote Docker daemon - which I found useful for testing.\nbut - I'm not the one building the release process, so, I'll let @tianon decide on it :)\n. personally, and very non-Docker Inc wise, i think the virtualisation vendors need to fix their tools - if they can't co-exist, thats a bug.\n. personally, and very non-Docker Inc wise, i think the virtualisation vendors need to fix their tools - if they can't co-exist, thats a bug.\n. thing is, the non-vendor tools iso is still very useful - so there's no reaon to neuter its build by putting:\n+CMD [\"/make_iso.sh\"]\ninto the base Dockerfile.\n(yes, I'd rather a single ISO for everyone :) )\n. thing is, the non-vendor tools iso is still very useful - so there's no reaon to neuter its build by putting:\n+CMD [\"/make_iso.sh\"]\ninto the base Dockerfile.\n(yes, I'd rather a single ISO for everyone :) )\n. Heya @linux-china sorry, it looks like we all overlooked this - I've made a PR that will resolve it - if you need something now, you can grab the code and build your own iso (see https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md for how)\n. @detro what do you mean port mapping is gone ? (do you mean the boot2docker port forwarding on localhost?)\n. @detro we replaces that with the host only network - because the NAT port forwarding was unreliable.\nif you need to expose your containers to other users on your LAN, then you can follow the directions in the documentation to do that - or if you have a little time - there was a proposal to add some code to boot2docker to make that simpler.\nif you're doing local testing - point your browser at http://192.168.59.103 :)\n. yeah - the breaking changes are painful, sorry :/\nthe localhost mapping was changed before the 1.0 release - and we'd kept the NAT mapping for about 3 months before turning it off - I guess we need to work out a way to get the info out to more people.\nthe TLS compulsory for all b2d is sadly, extremely important for dev as well as everyone else.\nwe turned it on by default after only one transitionary release (the code was in 1.2.0) because we noticed that someone can craft a html email that they send to you which will be able to control your b2d Docker - and run any image they like - I doubt you'd want that either :)\nThis is all made even more frustrating by the fact that I was the main development resource Jan-Sept, and I only worked on it part time. We've since handed over development to @tianon and his team, so I can get back to the Docker support needs - so I'm hoping things will be able to be looked at earlier in the release cycle.\nyup, compatibility and communication of deprecations is hard :)\n. yeah - the breaking changes are painful, sorry :/\nthe localhost mapping was changed before the 1.0 release - and we'd kept the NAT mapping for about 3 months before turning it off - I guess we need to work out a way to get the info out to more people.\nthe TLS compulsory for all b2d is sadly, extremely important for dev as well as everyone else.\nwe turned it on by default after only one transitionary release (the code was in 1.2.0) because we noticed that someone can craft a html email that they send to you which will be able to control your b2d Docker - and run any image they like - I doubt you'd want that either :)\nThis is all made even more frustrating by the fact that I was the main development resource Jan-Sept, and I only worked on it part time. We've since handed over development to @tianon and his team, so I can get back to the Docker support needs - so I'm hoping things will be able to be looked at earlier in the release cycle.\nyup, compatibility and communication of deprecations is hard :)\n. @tianon @bfirsh damn.\nI've asked @ewindisch for advice too\n. @ewindisch the counterpoint is that once someone makes an ISO that turns it off, they'll just share it, and it'll be even easier for users than this PR.\nbut y, I'm worried about the risks too.\n. @lalyos awesome! that one we'll have to document - which I thought of just bouncing it... (mmm, i wonder what corners that will bring out)\n. I'm going to read @tianon's comment above as a LGTM, and we've discussed with @ewindisch a bit more and am thus going to merge this for 1.3.1\n. I'm going to reopen this to help others find it, and to remind me to write some more docs for Docker :)\n. @lalyos boot2docker upgrade is your friend :)\n. @lalyos boot2docker upgrade is your friend :)\n. @mtscout6 please also note that there is a boot2docker app in your Applications folder that will set everything up right, leaving you at a terminal :)\n. Client version: 1.2.0, and ort DOCKER_HOST=tcp://$(/usr/local/bin/boot2docker ...\ntell me that you need to upgrade both your boot2docker and boot2docker.app to 1.3.0 - which really mean, use the 1.3.0 osx-installer to upgrade everything.\n. yeah, sometimes something goes weird - we think its vbox, but really , no idea, and deleting the vm and making a new one mostly works. :/\n. see #573 for how to use the TLS certs from curl - I've not use fiddler :/\n. @rodolfo42 the extra lines are written to STDERR - running $(boot2docker shellinit) works - we use it for the Boot2docker applet that you find in the Applications folder in OSX and the Boot2docker icon on Windows.\nAlso - there are actually 3 settings now, so you may not habe the latest boot2docker-cli\n. @tianon ?\n. @tianon ?\n. tbh, the right place to do all this is in docker client - which would be the one to create a new share every time, and then the vm mount would be specific to the container - aaaand, for that we need help writing code :)\n. yup, @vmaatta has it baout right - you could do this by hand, but you probably should consider that you might be better off working out a different way to acheive it - like using volume containers.\n. @vmaatta yeah - you get around that atm by creating your data container like:\ndocker run --name data -v /data busybox chmod 777 /data\nand then you need to copy that data to your local machine using another container.\nI use samba containers for a reason :)\n. I'm hoping for https://github.com/docker/docker/issues/9250 :)\n. I'm hoping for https://github.com/docker/docker/issues/9250 :)\n. wow - i'm not getting that. I wonder whats different - what OS, shell etc are you using?\n. yeah, I think this should be raised in the docker repo - though it may come back to being a fix we can do here.\nupdate: mmm and then i see whereas it works successfully on e.g. regular Ubuntu docker 1.3.0\n. oh wow - I'd forgotten that one existed!\nI think we should make this a synonym of boot2docker shellinit (which most of us use by running $(boot2docker shellinit)\n. very much agreed - I was also surprised that shellinit was changed to not show anything - as it makes it impossible to find out what it thinks should be :)\n. yup.\n. yup.\n. @dekz no, the share is re-created by boot2docker up :/\n. yeah - there's a bug where flags that are in the driver are not in the profile - I tried to fix it in 1.2.0, and several things went wobbly. - needs someone to spend some careful time.\n. yeah - there's a bug where flags that are in the driver are not in the profile - I tried to fix it in 1.2.0, and several things went wobbly. - needs someone to spend some careful time.\n. this is a duplicate of  #581(I'm not closing to make it easier for people to find)\n. this is a duplicate of  #581(I'm not closing to make it easier for people to find)\n. @paolomainardi yup, that was one of the solutions we should explore.\n. @jfrazelle just remember to get a USB3 stick - makes a heck of a difference :)\n. replaced by #884 - i think we can just update the workarounds page if something changes, but this situation has been the case for over a year.\n. replaced by #884 - i think we can just update the workarounds page if something changes, but this situation has been the case for over a year.\n. LGTM - much goodly english :)\n. closed as duplicate. @jmreicha yup, I made an experimental PR to add samba, and sshfs (and was going to play with nfs) support in the boot2docker-cli\nthe problem is that getting access to configuring these things in OSX, Windows and Linux is a pest - and it was decided vbox was more likely to work in time to be released in 1.3.0.\nYou're welcome to help get the other sharing options over the line - I havn't got time in the next 3 weeks (i think) due to traveling.\n. you might be interested in https://github.com/boot2docker/boot2docker-cli/pull/247\nthough it is out of date now.\n. you might be interested in https://github.com/boot2docker/boot2docker-cli/pull/247\nthough it is out of date now.\n. for large apps, you would need to design your storage layout specifically for your needs, this is not new because of Docker / Boot2Docker, its true without too.\n. for large apps, you would need to design your storage layout specifically for your needs, this is not new because of Docker / Boot2Docker, its true without too.\n. can we rename automount-shares to something more host-support-detection like - and then separate the scripts out (ok, the vbox one, and add yours) to something like /usr/lib/boot2docker/host-support/vbox.sh - \nmmm, and lastly, get it to first check /var/lib/boot2docker/host-support to allow users to customise / replace it\nThan would give us something scalabile - wrt review and responsibility, and allow some development experimentation.\nmmm, don't ask me what to key off though - I want to add 'this is real HW, on my network, so automount sshfs/samba stuff)\n. @jeffmendoza yeah - the abstraction will be useful when we have vbox,hyper-v, vmware, paralells, azure, aws, ..... , native HW default, and user customisable specific HW.\nso if our bootscript has a detection heuristic that calls only one of those - so the vbox script isn't called on a vmware image, life gets easier.\nI guess you're going for the 'run all the scripts and hope they don't conflict' approach, which works today :)\nLGTM I guess, we can add re-engineering when we need it.\n. yeah, LGTM - as you've tested it on vbox :)\n. yeah, LGTM - as you've tested it on vbox :)\n. Yeah, the NAT network is terrible. can you try ssh -L3000:localhost:3000 docker@$(boot2docker ip) ?\nthat will go via the host only network :)\n@tianon is our network setup different to vagrant's, or is it just they have the vbox kernel modules?\n. @ahallock darn. I' don't really, know how to tune VBox to be faster. maybe there are some tricks we can learn from vagrant :/\n. https://github.com/boot2docker/windows-installer/issues/67#issuecomment-61021246\nmight be related, and pose a solution\n. docker client is only that one file in that URL you have above - so your install == download and copy binary to /usr/local/bin (mmm, and myabe chmod 755 docker)\n. @ftom its not too bad :)\nin the vm, create / edit a file called /varlib/boot2docker/profile and add your setting to the EXTRA_ARGS var - for example\nEXTRA_ARGS=\"--registry-mirror http://10.10.10.2:5000\"\n. several :)\nboot2docker is a 32 bit userspace running on a 64 bit kernel (seriously, its a long tale)\nie, you need the 32 bit version\n. mmm, thats not bad - LGTM\nthough it might be worth also noting that you can have more than one --registry-mirror setting, and they'll be tryed in turn (mmm, no intention to imply order)\n. nice LGTM @tianon \n. I think you can't do it like this - your ~/tmp is owned by you, and will be mounted that way.\nYou will probably need to make your own vbox share, and then mount it yourself with different params.\n. what does docker version - can you run it both on your OSX box, and insider the vm (run boot2docker ssh docker version )\n. @aaronfay what does docker --version on the mac tell you?\nmm, and what does env | grep DOCKER tell you (on the mac?)\n. @tianon perhaps we should delete any host only networks that are attached to our vm when we do a boot2docker delete\n. there's a chance that you have more than one vm, or an old vm / iso?\ncan you tell me more? \n. ah, so we should be able to fix that in the cli :) sweet.\n. There's a version of vbox that seems to break things - looking for a link\n. https://github.com/boot2docker/windows-installer/issues/67#issuecomment-61021246\nmight be related, and pose a solution\n. though your message seems different.\n. This is a Docker issue that I thought had been worked on.\nWhat version of Docker do you have?\nDocker will truncate the hex container ID, and try to match that - so if you have a container who's UID starts with db, this can happen.\nThough I thought this was resolved in 1.1 or so - perhaps you can raise an issue in the docker/doccker project, and include the output of docker -D info - and paste in the result of running docker inspect db\n. brave soul is right - I don't think we are able to adequately support an 'official' boot2docker on i386\nif we did, you would expect us to test it just as much as we do the existing ones (which is on OSX, Windows 7, 8 and 8.1 and Linux).\nand thats ignoring the fact that the Docker daemon itself isn't tested or supported officially on i386 - and essentially cannot interact with the Docker Hub, so is very strongly expert brave developer souls only.\nI wonder if there's an i386 image registry out there.\n. yup, and you're going to hate this...\nyour server is bound to the container's loopback device only, and so its not listening to the container's outwards facing network.\nI've had to modify quite a few services to listen to 0.0.0.0 - so that you can get to them from outside the container.\nand wow - if you can give me a hint about where in the documentation you looked, I can add something in those places (cos it needs documenting more, but its hard for me to work out where)\n. yup, and you're going to hate this...\nyour server is bound to the container's loopback device only, and so its not listening to the container's outwards facing network.\nI've had to modify quite a few services to listen to 0.0.0.0 - so that you can get to them from outside the container.\nand wow - if you can give me a hint about where in the documentation you looked, I can add something in those places (cos it needs documenting more, but its hard for me to work out where)\n. sounds about right - but try it :)\n. sounds about right - but try it :)\n. this may be documented in the original b2d repo PR's (when the cli was a script) - I can't recal atm\n. @tianon can we look into this before 1.4?\n. @tianon can we look into this before 1.4?\n. I'm not sure atm, I think I only went with what someone else mentioned worked for them - but i'm not 100% sure.\n. I'm not sure atm, I think I only went with what someone else mentioned worked for them - but i'm not 100% sure.\n. mmm, that'll be an interesting tradeoff :/\n. it sure sounds better - we'll probably only find out if there are problems after we release with it :)\n. LGTM - I havn't tested this though - @tianon \n. LGTM - I havn't tested this though - @tianon \n. This is really just an internal indicator - please ignore it.\n@tianon we should really just clean that file up after its been un-tared at boot time.\n. This is really just an internal indicator - please ignore it.\n@tianon we should really just clean that file up after its been un-tared at boot time.\n. opening, as we really could clean it up.\n. opening, as we really could clean it up.\n. The magic string is actually a tar filename - and that tar file is used to initialise the user's home dir at bootup :) so its mostly useful.\ni do use the magic string, but i coded that mostly to be backwards compatible (b2d-cli 1.3 can thus control a 0.8 iso)\n. the magic string is needed when the boot2docker cli talks to previous releases of the ISO - which users are still doing.\nand don't forget, its also used for users that are not using virtualised boot2docker.\n. a disk label is just a magic string - imo, its really not worth removing - right now, the current CLI can initialialise the vbox disk if a user is running boot2docker init with a v 0.9.0 iso - if you remove it, this will stop working. (We allow use this functionality to test old docker releases)\nA much simpler fix, which does not break existing functionality, is to remove that file in the automount code right after its un-tared...\n. ew! I run b2d on bare metal on a fleet (ok, 3?) boxes - so I'm kinda -1 on this :/\nbut I think I need some thinking music, during which @tianon can make an executive decision.\n(yes, if the official b2d becomes vm specific, I'll have to roll my own, which clearly, I'm capable of doing)\n. ew! I run b2d on bare metal on a fleet (ok, 3?) boxes - so I'm kinda -1 on this :/\nbut I think I need some thinking music, during which @tianon can make an executive decision.\n(yes, if the official b2d becomes vm specific, I'll have to roll my own, which clearly, I'm capable of doing)\n. its not a change - I've been running it on bare metal since before Jan 2014 :) but I'm not sure if we're still focussed on my needs :)\n. its not a change - I've been running it on bare metal since before Jan 2014 :) but I'm not sure if we're still focussed on my needs :)\n. beats me :)\n. beats me :)\n. i think @tianon was going to suggest some subset?\n. i think @tianon was going to suggest some subset?\n. building :) (i'm back in Brissy now :)) \n. ok, yup, this breaks console - there's no ttyS0/ttyS1 :) - I can still ssh to the box, so thats a positive.\n. its also removed loopback?  \ndocker@boot2docker:/mnt/sda1/src$ tce-load -iw make\nDownloading: make.tcz\nConnecting to repo.tinycorelinux.net (89.22.99.37:80)\nmake.tcz             100% |******************************************************************| 73728   0:00:00 ETA\nmake.tcz: OK\nmount: mounting /dev/loop0 on /tmp/tcloop/make failed: No such device\ndocker@boot2docker:/mnt/sda1/src$\n(which is what i normally use to build docker as a shakeout test for b2d)\n. I'm starting to think more about making my own bare-metal boot2docker's, as I'm starting to want X11, wifi and selinux.\n@tianon can we get together at DockerCon to work this through?\n. I'm starting to think more about making my own bare-metal boot2docker's, as I'm starting to want X11, wifi and selinux.\n@tianon can we get together at DockerCon to work this through?\n. The last user to have this problem deleted the files in their .ssh dir (the one listed below), ran boot2docker delete and then started fresh.\nhowever, I'm not feeling confident - C:\\Users\\markl_000.ssh\\id_boot2docker is not the dir i was expecting.\n. The last user to have this problem deleted the files in their .ssh dir (the one listed below), ran boot2docker delete and then started fresh.\nhowever, I'm not feeling confident - C:\\Users\\markl_000.ssh\\id_boot2docker is not the dir i was expecting.\n. this looks to me like its working.\n. this looks to me like its working.\n. what you do from a windows cmdline is:\n- run boot2docker ssh\n- then cd /c/Users/<yourwindowsaccount>/wheveryourappis\n- and then you can run the docker commands from inside the VM.\nThe native windows client is not yet released (some more polish is needed), but we're getting there :)\n. what you do from a windows cmdline is:\n- run boot2docker ssh\n- then cd /c/Users/<yourwindowsaccount>/wheveryourappis\n- and then you can run the docker commands from inside the VM.\nThe native windows client is not yet released (some more polish is needed), but we're getting there :)\n. @zeeyang how does this fit with the work you need done?\n. @zeeyang how does this fit with the work you need done?\n. @oliverkurth you will need to squash your commits at some point\n. @oliverkurth you will need to squash your commits at some point\n. @oliverkurth yup, sounds reasonable :)\n. @oliverkurth yup, sounds reasonable :)\n. YAY - LGTM, though I'd love some feedback from @jayzeng \n. YAY - LGTM, though I'd love some feedback from @jayzeng \n. @oliverkurth boot2docker is licensed under Apache 2 - so anything you want to put into it needs to be Apache 2 compatible too.\n. wait a moment - TinyCore linux is GPL2 - http://distro.ibiblio.org/tinycorelinux/faq.html#license\n(sorry, I'm slowly catching up from a week's holiday :) )\n. @jokeyrhyme having someone write volume migration instructions for the docker upstream docs would be really cool - its a general issue (though is somewhat mitigated by @cpuguy83's docker-volumes tool)\n. @tianon i think this is waiting on you?\n. @oliverkurth can you please write up what specific functionalities this PR provides? @jamtur01 has found at least 3 things it doesn't do :)\noh and as far as i know, no-one's used the serial port stuff I tried to add...\n. just so its recorded in this PR - #331 shows that the OVT/VMW tools are not needed for b2d to function. if the only reason to add them is to give us a hint how to talk to it, then perhaps the generated but known MAC Address is enough.\nBut if the tools add something that can't be worked out another way, it would be great to know.\n. excellent :) thanks for the list. \nI'm only puzzled by the shutdown one - do you mean that vmware doesn't send the ACPI shutdown signal to request a graceful shutdown? mmm, I'm pretty sure it does, but yes, the suspend/resume passthrough is useful - as is anything that helps the vm's time get updated.\n. you can add a persistent scipt into /var/lib/boot2docker/bootlocal.sh.\n. you can add a persistent scipt into /var/lib/boot2docker/bootlocal.sh.\n. LGTM @knownasilya sorry, are you willing to rebase this?\n@tianon \n. LGTM @knownasilya sorry, are you willing to rebase this?\n@tianon \n. I've heard that some users have manually created a Hyper-V vm using boot2docker - There is ongoing work to integrate Hyper-V support into the boot2docker-cli tool, but its not ready yet.\n. I've heard that some users have manually created a Hyper-V vm using boot2docker - There is ongoing work to integrate Hyper-V support into the boot2docker-cli tool, but its not ready yet.\n. last time i tried it out, none of that was needed - I was able to mount -t cifs //9.53.216.11/myshare /mnt/windows -o user=myname,pass=mypassword - iirc, there were other options needed tho.\nI don't know anything about the subfolders problem you mention in the samba image - I found it quite useful, but the general desire was to have the files not stored in the vm, which requires the shares to be set up on the host box - much harder to to automatically without opening security issues.\n. yup. however, to be clear, implementing this should not be called only - I started work on it, but it needs admin rights, which many don't have, and worse, on OSX turned out to be unreliable.\nhttps://github.com/boot2docker/boot2docker-cli/pull/247 is where I was experimenting with it before we shipped the vbox shares - \n. yup, iirc, i had some weird errors or corner cases to deal with on NFS and OSX, and of course, you have to get root access every time\nand the same on windows - you don't need to make a user, you need to create a share, which is also a privileged operation.\nMind you, I was also trying to avoid sharing /Users...\nand avoid sharing that share on the network (ie restricted to the virtual host only network)\nits all in the details :)\n. LGTM\n. LGTM\n. shrug - I'd rather reduce the reliance on the vbox modules - as they're not available now, now applicable generally to all vm backends.\n. It could be done, but its strongly discouraged, as it leaves Docker, boot2docker and your host machine open to some very trivial to exploit hacks.\nrather than disabling it, use the code, or output of boot2docker shellinit to auto-support TLS.\n. , so that sounds like a bug that needs fixing, not something we should 'work around' by making unsafe configurations.\n. sounds to me like you've not set the boot2docker environment variables so that the client knows where to talk to the daemon.\nrun $(boot2docker shellinit) :)\n. @tbronchain no, do not do this.\nput $(boot2docker shellinit) into the ~/.profile file - that way it will be correct when run.\n@jancarloviray thats what I do...\n. @tbronchain no, do not do this.\nput $(boot2docker shellinit) into the ~/.profile file - that way it will be correct when run.\n@jancarloviray thats what I do...\n. I've triggered them, it'll take a about an hour til we see if it worked :)\n. @tianon does this mean you're not using the hub builds to make the release?\n. really? oh well.\n. I'm going to re-open this, as its another vbox pain we should try to work around\n. LGTM - thanks!\n. scares me - @frapposelli why would this be a blocker for fusion? you can use the same trick virtuabox does in creating a raw disk image that contains the magic data.\nit is a problem for providors that don't have the ability to seed an image file - like azure?\nseriously though - do any of you want to be responsible for auto-magically partitioning and formatting someone's real hardware without asking?\n. @frapposelli sweet - have you got any ideas?\n@zeeyang yup, I'm reluctant to 'only grab the first blank' but I am only one voice here :)\n. @frapposelli nice. So you can't dd the tar file contents into the first bytes of the virtual disk?\n. yes, see https://github.com/boot2docker/boot2docker/issues/667#issuecomment-66953842\nits very easy to send configuration choices into boot2docker at init time, except that the VMWare fusion guys have indicated that they're unable to create an initial disk with payload in https://github.com/boot2docker/boot2docker/pull/659#issuecomment-67002871 (I hope we can find a way around that). @frapposelli  ?\nI have not found a good portable way to send cfg info at boot-time, but yes, the alternative is to update the init tarfile (/var/lib/boot2docker/userdata.tar) and then reboot \n. I think cloudinit would be very useful going forward :)\n. I think cloudinit would be very useful going forward :)\n. @bfirsh boot2docker-cli (and the other components) are released and updated in lockstep with docker - so we don't gain much..\n. @jeffmendoza go on, make a PR of what you have - hopefully it adds the new support without removing the current?\n. not just that, but we need to be clear that the release artifact is not Apache2\n. One possible solution to this, is to add a boot2docker --profile=filename init which might default to ~/.boot2docker/vm_profile, which is put into the userdata.tgz that is the default vm-disk payload.\nthis would then be able to be copied to the persistent /var/lib/boot2docker/profile on the first bootup (before the Docker daemon is started).\nThis would allow users to have a default set of options - registry-mirror, insecure-registry etc that would be used whenever they create a new vm.\nit might be worth adding a similar option to auto-add a bootlocal.sh too - that way the users can customise almost anything.\n. ok, wrt your soapbox - you're talking about registry TLS - I was going to talk about the Docker daemon's Docker socket TLS, but that's not applicable here :) \n. yup - its actually possible to find the version string in the iso file - I put it into the iso headers - all it needs is someone to code up finding it :)\n. ooo - @tianon this needs review and then re-un-merging of the docs for it :)\n. yup, please remove the sudo bit - that means that if you have your env set right, it will be discarded.\n. @markseddon you should see 3 settings when you run env | grep DOCKER. If you don't, then run $(boot2docker shellinit)\n. That looks suspicious - boot2docker 1.3 uses port 2376 - which makes me wonder if your boot2docker.iso is out of date.\nwhat happens if you \n- boot2docker delete \n- boot2docker download \n- boot2docker init \n- boot2docker start \n?\nanother useful diagnostic, is to start the virtualbox VM graphically, and then to watch the console.\n. y - you definitely need to run $(boot2docker shellinit) before you run docker version\n. y - you definitely need to run $(boot2docker shellinit) before you run docker version\n. Heya @mwlind you need to run $(boot2docker shellinit) - the $(...) is part of the command - this causes the strings you see in your above screenshot to be executed in your current shell.\n. that string is not the device label, its raw data - ie dd if=userdata.tar of=/dev/sdb where userdata.tar contains as its first file boot2docker, please format-me\nor, you can mkfs -L boot2docker-data /dev/sda1 - which tells b2d to skip partitioning the disk...\n. that string is not the device label, its raw data - ie dd if=userdata.tar of=/dev/sdb where userdata.tar contains as its first file boot2docker, please format-me\nor, you can mkfs -L boot2docker-data /dev/sda1 - which tells b2d to skip partitioning the disk...\n. b2d either looks for a totally un-initialised disk, with the raw string boot2docker, please format me directly at its base (ie, no gpt partitions), or it looks for an initialised and formated partition labeled boot2docker-data - you seem to be asking about something inbetween?\n. b2d either looks for a totally un-initialised disk, with the raw string boot2docker, please format me directly at its base (ie, no gpt partitions), or it looks for an initialised and formated partition labeled boot2docker-data - you seem to be asking about something inbetween?\n. it would\nfor now, you can download the file yourself and place it in your ~/.boot2docker/ dir from https://github.com/boot2docker/boot2docker/releases\n. it would\nfor now, you can download the file yourself and place it in your ~/.boot2docker/ dir from https://github.com/boot2docker/boot2docker/releases\n. yup, add some code to the /var/lib/boot2docker/bootlocal.sh - this could do with some docs\n. yup. thanks to that @tianon guy, the Docker Makefile has some logic at the top, which stops the bundle dir linking on remote Docker daemons - which is what b2d is. you can get around it by explicitly setting the BINDDIR\nie make BINDIR=bundles binary.\n. are you running that in the bash command shell you get when you run the blue docker icon?\n. oh, very nice LGTM - @tianon ?\n. do you want something more detailed than https://github.com/boot2docker/boot2docker/releases ?\n(we do add that info to each release)\n. I would start the virtualbox GUI and start the boot2docker-vm interactivly from there. That often tells you what's wrong either with vbox, or in the console.\n. I mean the virtual box GUI - oracle's one - if the basic vbox tool can't do it, then the problem is probably that your windows or virtualbox itself is broken. (ie, not the boot2docker / kitematic UI)\n. looking at that boot log, I wonder if your boot2docker.iso file is possibly corrupted - I've never seen that happen before.\ndid you download the windows installer with everything bundled?\n. looking at that boot log, I wonder if your boot2docker.iso file is possibly corrupted - I've never seen that happen before.\ndid you download the windows installer with everything bundled?\n. I'm sorry to say, but I fear your windows box is not in a stable state :(\n. I'm sorry to say, but I fear your windows box is not in a stable state :(\n. You seem to be using the built in Windows cmd.exe shell - which is not supported. You need to use the Boot2Docker shell (the installer should have put a link to it on your desktop, and in the Boot2Docker Program Files folder.\n. that is correct, if you set up your vm differently from how boot2docker-cli does, then the instructions will apply less :)\nI agree though, the boot2docker docs do assume you're using the boot2docker-cli\n. actually, nc -l 5555 isn't working on my non-bridge b2d's too - I wonder if this is a tinycore pain \n. @tianon can we play with overlayfs?\n. the kernel_config changes are needed for the new kernel to compile - just doing the usual make oldconfig resulted in a broken kernel.\nyes, I can take the Dockerfile and Makefile out, but I'm not sure that gains much.\n. mmm, I'll run a test with 3.18.4 too\n @tianon ?\n. https://github.com/boot2docker/boot2docker/issues/704 is a kernel crash in 3.16.7, which is so totally EOL, and its replacement 3.17 is also EOL.\n@tianon @bfirsh \n. @tianon this is needed to fix a problem caused by the dhcp-server used by vmware fusion when you have more than one ethernet device\n. @tianon :)\n. @tianon :)\n. wow, thats quite alot slower than i'm seeing - though i agree, its not fast\n. wow, thats quite alot slower than i'm seeing - though i agree, its not fast\n. I'm very +1 :) @tianon \n. I'm very +1 :) @tianon \n. @colinrymer @tianon \n. mmm, I'm going to close this, as the person doing the releases doesn't really want to duplicate the work, and this PR is out of date.\nfeel free to reopen to convince @tianon otherwise :)\n. can you paste the output when you run boot2docker stop; boot2docker -v delete ; boot2docker -v upgrade ; boot2docker -v init ; boot2docker -v up ?\n. I'm going to reopen this, in casae it reminds one of us of something (or we document it, cos thats interesting\n. mmm, I recon LGTM - II recal reading at least 2 reports that utf8 Usernames on Windows failed...\nbut I only found https://github.com/boot2docker/boot2docker/issues/687 which is a different, though related issue.\n. ping @tianon \n. @kofj are you going to make this change?\n. You seem to be using the built in Windows cmd.exe shell - which is not supported. You need to use the Boot2Docker shell (the installer should have put a link to it on your desktop, and in the Boot2Docker Program Files folder.\n. if that fails with the same error, then your .sh extensions are linked to the wrong program, it needs to be linked to, and running in MSYS-Bash. if you see a C:\\ style prompt, thats not the right shell.\n. The Boot2Docker installer for MSYS-git is in programfiles/boot2docker (or similar).\n. I would hope that it installed itself into the progamfiles folder.\n. its not supposed to be installed into that folder. MSYS-git's installer installs itself into its own directory, as does virtualbox.\n. when MSYS installs, it puts some icons into your program files - one is bash.\nsimilarly, the boot2docker installer adds some shortcuts, including a Start Boot2Docker one on the desktop\n. @tianon ? (I havn't tested, but I like the idea)\n. adding SELinux brings up red flags which mean we need to do some more research - we discussed it somewhere, and were told there were consequences - but this might be under slightly different details.\n. @paolomainardi can you rebase this PR please?\n. I'll do some testing in the next week - doing some conference speaking atm\n. I'll do some testing in the next week - doing some conference speaking atm\n. @tianon I can't find a downside to this change.\n. @tianon I can't find a downside to this change.\n. i finally made time to play with the experimental volume plugins - \ndocker run --rm -it --volume-driver=nfs -v 127.0.0.1/data:/no busybox ls -la works :)\nsee https://github.com/SvenDowideit/docker-volumes-nfs for where i'm heading.\n. @thaJeztah ooops - it was in the Makefile, but i forgot to talk it up :)\nI havn't had time since my flight, but hopefully I'll find time during one of the hackathons (or worst case, July, when I'm back in AU.\nwrt a simple way to choose the share - yup, that too is coming :)\n. mmm, might close this as non-report :)\n. @tianon this may be a good reason to merge https://github.com/boot2docker/boot2docker/pull/692 for 1.5.0\nthe 3.16.x series seem to be very EOL\n. @foxx - on boot2docker 1.4, 1.5 or 1.6?\n. @foxx - on boot2docker 1.4, 1.5 or 1.6?\n. You're both talking about files that are being served by boot2docker from your /User directory on your mac?\nif so, that would be because the vbox based file sharing isn't triggering the file-changed linux kernel events inside the vm.\nif i understand correctly, this is a limitation of virtualbox, and will require an alternative file sharing implementation.\n. @tianon \n. yes, it could - I'd use the vbox GUI to test - including starting the b2d virtual machine from the GUI, and then using the GUI to attach the USB device.\n. very odd. I've just managed to do exactly the same thing on a just installed windows box.\nI have, however, not tested on a windows system that isn't up to date.\n. it does :) there's a tickbox for it during the installation.\nI'm not 100% sure what you have to do to get Windows to take note of the change - any already running cmd.exe windows certainly won't get updated.\n. oh. I'm not 100% sure we cover all the possibilities, reopening\n. LGTM - @tianon \nI'd rather add the /var/lib/boot2docker/profile file to the boot2docker init tar payload, but I've not managed to find time to code it.\n. @proppy sorry - are you still seeing this?\nwhen the cli is printing o's, its trying to talk to the nat port forwarded ssh socket - so it can find out which port the Docker daemon is listening on.\nI'd try to reproduce with boot2docker -v (or turn on the verbose option in the b2d profile file)\nand I would look at the vbox network settings to see if they're 'normal' (ie that the vm's ssh is port forwarded to where your b2d thinks it should be)\nlastly, try sshing to there using ssh - it should at least connect.\n. @proppy sorry - are you still seeing this?\nwhen the cli is printing o's, its trying to talk to the nat port forwarded ssh socket - so it can find out which port the Docker daemon is listening on.\nI'd try to reproduce with boot2docker -v (or turn on the verbose option in the b2d profile file)\nand I would look at the vbox network settings to see if they're 'normal' (ie that the vm's ssh is port forwarded to where your b2d thinks it should be)\nlastly, try sshing to there using ssh - it should at least connect.\n. LGTM - though I've note tested\n. oh wow, so its a really easy fix for us to order the commands right\nthankyou for the details!\n. oh. I missread the export ... unset ... version, oh boy.\n. ok, so \nmini:~ sven$ $(echo \"\n    export DOCKER_TLS_VERIFY= \n    export DOCKER_HOST=tcp://10.10.10.2:2375\n    export DOCKER_CERT_PATH=\n\")\nseems to allow the Docker client to correctly not use TLS\ncan we replace the unset's with export and get away with it?\n. @tianon should we get this into 1.5.0 too?\n. ok, over it, I'm implementing this atm.\n. ug. 32 bit userspace mush.\n. yup :) - and its restricted to the /User dir.\n. LGTM\n. and a belated LGTM\n. and a belated LGTM\n. ah, I was using the gen 1 vm, cool :)\n. ah, I was using the gen 1 vm, cool :)\n. very surprising - what version of virtual box and windows are you running?\n. very surprising - what version of virtual box and windows are you running?\n. before you run docker version please run $(boot2docker shellinit) to make sure your env is right for the docker client to find your daemon. (its a long shot tho)\n. @nathanleclaire I thought you coded this up - do you know what version it was released in?\n. @nathanleclaire I thought you coded this up - do you know what version it was released in?\n. goodness me.\nLGTM\n. @tianon gosh.\n. sounds like you probably did not run $(boot2docker shellinit) before you ran the docker client, and so it was looking in the wrong place.\n. @tianon please merge :)\n. cool! how big does this make the iso?\nand have you had a chance to test it with the 64 bit work from @afressancourt ?\n. yeah, LGTM - though I've not had a system setup to test it. @tianon ?\n. this would be a 1.7 thing :)\n. I've rebased this in #854\n. the bootlocal should go into /var/lib/boot2docker/bootlocal.sh\nI'd probably add a second virtual disk to the vm and set that up.\n. no real reason - other than the need for someone to write the code :)\n. first thing I'd do, is start the vm using the vbox GUI and see what the output is\nif that seems to work, then run boot2docker -v up to see the verbose logs\n. first thing I'd do, is start the vm using the vbox GUI and see what the output is\nif that seems to work, then run boot2docker -v up to see the verbose logs\n. That sounds like the iso is broken, try boot2docker download \n. That sounds like the iso is broken, try boot2docker download \n. Un happily, automated build repositories are currently immutable - you can't tag or push to them (this is part of what is intended to make them safely related only to what is in GitHub\n. Un happily, automated build repositories are currently immutable - you can't tag or push to them (this is part of what is intended to make them safely related only to what is in GitHub\n. I'm not sure what you have set up - are you running the registry on the OSX box, in the boot2docker vm, or in a container on the boot2docker vm? (I'd do the last..)\nand yes, you're talking about nteworking, so localhost is not going to be the same thing everywhere.\nbut ... docker pull and docker push run on in the docker daemon, so if your registry was running on the vm, it would have worked out :)\n. I'm not sure what you have set up - are you running the registry on the OSX box, in the boot2docker vm, or in a container on the boot2docker vm? (I'd do the last..)\nand yes, you're talking about nteworking, so localhost is not going to be the same thing everywhere.\nbut ... docker pull and docker push run on in the docker daemon, so if your registry was running on the vm, it would have worked out :)\n. oh please don't do this.\nFirstly, Docker uses filesystem features - and vbox's share fs implementation is not particularly fast or robust.\ninstead, use the --disksize option in boot2docker init to make a vm with a larger disk..\nIn case you're happy to ignore my predictions of doom :) I'm going to bet that you can call /etc/init.d/docker stop and restart from the /var/lib/boot2docker/bootlocal.sh` with a little clean up and mounting in between :)\n. oh please don't do this.\nFirstly, Docker uses filesystem features - and vbox's share fs implementation is not particularly fast or robust.\ninstead, use the --disksize option in boot2docker init to make a vm with a larger disk..\nIn case you're happy to ignore my predictions of doom :) I'm going to bet that you can call /etc/init.d/docker stop and restart from the /var/lib/boot2docker/bootlocal.shwith a little clean up and mounting in between :)\n. On to reviewing the PR - I'd rather put the/etc/init.d/docker startbetween the 2 customisable scripts - that way you can set up the pre-conditions in/var/lib/boot2docker/bootsync.shand then run some post conditions in/var/lib/boot2docker/bootlocal.sh`\n@tianon what do you think?\n. On to reviewing the PR - I'd rather put the /etc/init.d/docker start between the 2 customisable scripts - that way you can set up the pre-conditions in /var/lib/boot2docker/bootsync.sh and then run some post conditions in /var/lib/boot2docker/bootlocal.sh\n@tianon what do you think?\n. yes. When there is an official Docker release containing the Windows Client, then the boot2docekr installer will be updated to include it.\nThis is expected to happen with the 1.6 release, and the number of fixes that have happened in the last month suggest that its going well :)\n(those blog posts assume that you are building your own from source.)\n. LGTM - @tianon \n. LGTM - @tianon \n. kinda RTFM, and kinda not:\n```\n[sven@t440s ~]$ boot2docker --help\nUsage: boot2docker []  []\nBoot2Docker management utility.\nCommands:\n   init                Create a new Boot2Docker VM.\n   up|start|boot       Start VM from any states.\n   ssh [ssh-command]   Login to VM via SSH.\n   save|suspend        Suspend VM and save state to disk.\n   down|stop|halt      Gracefully shutdown the VM.\n   restart             Gracefully reboot the VM.\n   poweroff            Forcefully power off the VM (may corrupt disk image).\n   reset               Forcefully power cycle the VM (may corrupt disk image).\n   delete|destroy      Delete Boot2Docker VM and its disk image.\n   config|cfg          Show selected profile file settings.\n   info                Display detailed information of VM.\n   ip                  Display the IP address of the VM's Host-only network.\n   shellinit           Display the shell commands to set up the Docker client.\n   status              Display current state of VM.\n   download            Download Boot2Docker ISO image.\n   upgrade             Upgrade the Boot2Docker ISO image (restart if running).\n   version             Display version information.\nOptions:\n      --basevmdk=\"\": Path to VMDK to use as base for persistent partition\n      --clobber=false: overwrite Docker client binary on boot2docker upgrade\n      --dhcp=true: enable VirtualBox host-only network DHCP.\n      --dhcpip=192.168.59.99: VirtualBox host-only network DHCP server address.\n  -s, --disksize=20000: boot2docker disk image size (in MB).\n      --dockerport=0: host Docker port (forward to port 2376 in VM). (deprecated - use with care)\n      --driver=\"virtualbox\": hypervisor driver.\n      --force-upgrade-download=false: always download on boot2docker upgrade, never skip\n      --hostip=192.168.59.3: VirtualBox host-only network IP address.\n      --iso=\"/home/sven/.boot2docker/boot2docker.iso\": path to boot2docker ISO image.\n      --iso-url=\"https://api.github.com/repos/boot2docker/boot2docker/releases\": source URL to provision the boot2docker ISO image.\n      --lowerip=192.168.59.103: VirtualBox host-only network DHCP lower bound.\n  -m, --memory=2048: virtual machine memory size (in MB).\n      --netmask=ffffff00: VirtualBox host-only network mask.\n      --no-dummy=\"\": Example parameter for the dummy driver.\n      --retries=75: number of port knocking retries during 'start'\n      --serial=false: try serial console to get IP address (experimental)\n      --serialfile=\"\": path to the serial socket/pipe.\n      --ssh=\"ssh\": path to SSH client utility.\n      --ssh-keygen=\"ssh-keygen\": path to ssh-keygen utility.\n      --sshkey=\"/home/sven/.ssh/id_boot2docker\": path to SSH key to use.\n      --sshport=2022: host SSH port (forward to port 22 in VM).\n      --upperip=192.168.59.254: VirtualBox host-only network DHCP upper bound.\n      --vbm=\"VBoxManage\": path to VirtualBox management utility.\n      --vbox-share=[]: List of directories to share during 'up|start|boot' via VirtualBox Guest Additions, with optional labels\n  -v, --verbose=false: display verbose command invocations.\n      --vm=\"boot2docker-vm\": virtual machine name.\n      --waittime=300: Time in milliseconds to wait between port knocking retries during 'start'\nerror in run: config error: pflag: help requested\n```\n(hint: use boot2docker init --iso=/some/path/to/some.iso)\nlet us know how it goes :)\n. kinda RTFM, and kinda not:\n```\n[sven@t440s ~]$ boot2docker --help\nUsage: boot2docker []  []\nBoot2Docker management utility.\nCommands:\n   init                Create a new Boot2Docker VM.\n   up|start|boot       Start VM from any states.\n   ssh [ssh-command]   Login to VM via SSH.\n   save|suspend        Suspend VM and save state to disk.\n   down|stop|halt      Gracefully shutdown the VM.\n   restart             Gracefully reboot the VM.\n   poweroff            Forcefully power off the VM (may corrupt disk image).\n   reset               Forcefully power cycle the VM (may corrupt disk image).\n   delete|destroy      Delete Boot2Docker VM and its disk image.\n   config|cfg          Show selected profile file settings.\n   info                Display detailed information of VM.\n   ip                  Display the IP address of the VM's Host-only network.\n   shellinit           Display the shell commands to set up the Docker client.\n   status              Display current state of VM.\n   download            Download Boot2Docker ISO image.\n   upgrade             Upgrade the Boot2Docker ISO image (restart if running).\n   version             Display version information.\nOptions:\n      --basevmdk=\"\": Path to VMDK to use as base for persistent partition\n      --clobber=false: overwrite Docker client binary on boot2docker upgrade\n      --dhcp=true: enable VirtualBox host-only network DHCP.\n      --dhcpip=192.168.59.99: VirtualBox host-only network DHCP server address.\n  -s, --disksize=20000: boot2docker disk image size (in MB).\n      --dockerport=0: host Docker port (forward to port 2376 in VM). (deprecated - use with care)\n      --driver=\"virtualbox\": hypervisor driver.\n      --force-upgrade-download=false: always download on boot2docker upgrade, never skip\n      --hostip=192.168.59.3: VirtualBox host-only network IP address.\n      --iso=\"/home/sven/.boot2docker/boot2docker.iso\": path to boot2docker ISO image.\n      --iso-url=\"https://api.github.com/repos/boot2docker/boot2docker/releases\": source URL to provision the boot2docker ISO image.\n      --lowerip=192.168.59.103: VirtualBox host-only network DHCP lower bound.\n  -m, --memory=2048: virtual machine memory size (in MB).\n      --netmask=ffffff00: VirtualBox host-only network mask.\n      --no-dummy=\"\": Example parameter for the dummy driver.\n      --retries=75: number of port knocking retries during 'start'\n      --serial=false: try serial console to get IP address (experimental)\n      --serialfile=\"\": path to the serial socket/pipe.\n      --ssh=\"ssh\": path to SSH client utility.\n      --ssh-keygen=\"ssh-keygen\": path to ssh-keygen utility.\n      --sshkey=\"/home/sven/.ssh/id_boot2docker\": path to SSH key to use.\n      --sshport=2022: host SSH port (forward to port 22 in VM).\n      --upperip=192.168.59.254: VirtualBox host-only network DHCP upper bound.\n      --vbm=\"VBoxManage\": path to VirtualBox management utility.\n      --vbox-share=[]: List of directories to share during 'up|start|boot' via VirtualBox Guest Additions, with optional labels\n  -v, --verbose=false: display verbose command invocations.\n      --vm=\"boot2docker-vm\": virtual machine name.\n      --waittime=300: Time in milliseconds to wait between port knocking retries during 'start'\nerror in run: config error: pflag: help requested\n```\n(hint: use boot2docker init --iso=/some/path/to/some.iso)\nlet us know how it goes :)\n. to make this clear for anyone reading this - the best place for this kind of work will be in docker-machine - and I think some initial work has gone into looking at it.\n. this is also changed by https://github.com/boot2docker/boot2docker-cli/pull/351 - which will always print out the settings, even if they're set (its clearer to the user that way)\n. I'm not sure - I've not had that (though we don't run boot2docker using cmd.exe much - we use install MSYS Bash specifically to avoid some problems)\nWhat does the virtualbox GUI tell you about the VM?\n. I'm not sure - I've not had that (though we don't run boot2docker using cmd.exe much - we use install MSYS Bash specifically to avoid some problems)\nWhat does the virtualbox GUI tell you about the VM?\n. I would start the vm again using the virtualbox GUI - that way you can see if the VM is hanging somewhere. \nThe other thing worth trying sometimes is to delete them and start again - sometimes it just gets confused.\nWhat version of windows are you running?\n. I wonder if something went wrong in the creation of the NAT based port forwarding. \nIf you use the vbox GUI, you should be able to check if there is a mapping from the vm's port 22 and the host's 2022 :/\n. yes, on windows, there's a strong assumption that you have exactly the right versions of MSYS-git installed, so that might be the problem\n. poking this too\n. this is a duplicate of #715\n. I have passed this on to the docker-machine project, as the b2d-cli which sets this is in the process of being replaced.\nhttps://github.com/docker/machine/issues/1062\n. @jeffmendoza do you know where and how we might pass this info on?\n. You Boot2Docker containers should have access to your OSX box using the OSX host's IP address (not localhost/127.0.0.1) - no configuration should be necessary.\n. You Boot2Docker containers should have access to your OSX box using the OSX host's IP address (not localhost/127.0.0.1) - no configuration should be necessary.\n. your OSX's IP on the local network should work - I use 10.10.10.XX in my local network, and my b2d vm can talk to the OSX host using that IP.\n. your OSX's IP on the local network should work - I use 10.10.10.XX in my local network, and my b2d vm can talk to the OSX host using that IP.\n. LGTM - @tianon \n. LGTM - @tianon \n. what do you mean by FreeBSD port? what VM system would you be using to run the b2d linux?\n(mostly, this requires a FreeBSD user / coder to add the VM engine driver (to docker-machine) and should not require changes to the b2d linux distro.\n. who reviewed that PR? geeeesh. (or maybe it did work then, but ouch anyway)\n. noice - LGTM\n. oh - did you forget to update the docs too? :p\n. LGTM\n. LGTM\n. if you use b2d alot, then you would use the -s, --disksize=20000: boot2docker disk image size (in MB). init option. For most users I'm expecting that 20GB is already quite a large hit on their disk?\n. Boot2docker won't mean that you have docker on AIX - its more like you're talking to a remote Docker server. \nI suspect you might want to talk to IBM about it though.\n. Boot2docker won't mean that you have docker on AIX - its more like you're talking to a remote Docker server. \nI suspect you might want to talk to IBM about it though.\n. @munkyboy are you interested in updating this PR as per @tianon ?\n. @tianon ?\n. @tianon ?\n. LGTM\n. LGTM\n. yup, this is a common problem with services defaulting to listening to the localhost only :(\n. @tianon? LGTM i guess\n. @tianon? LGTM i guess\n. this is a boot2docker-cli issue, and I think its fixed.\n. @tianon @bfirsh another b2d user that created an nfs based solution....\n. @tianon @bfirsh another b2d user that created an nfs based solution....\n. I made the output verbose so that the log files that the Docker Hub auto-build keeps would tell me what happened.\nas for ignoring - I'm not sure I ignore it - i read and then decide if its an error, or just a warning.\nso I guess time to close :)\n. yes, its not trivial :)\nI havn't actually done it, but you'll need to make a new iso, which contains the images, and some scripting to copy / docker import when the vm boots.\nthis repo is the right place to start though: see https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md for using your own Dockerfile to make a new iso (I'm not sure if its up to date though)\n. Boot2Docker and Docker are at version 1.6.0. We do not recommend using brew, as it seems to often fail  for unknown reasons :/.\nI would suggest following the official OSX installation documentation: http://docs.docker.com/installation/mac/\n. this is essentially ( @rossbachp 's advice) what #807 does.\nneither Docker 1.5 or 1.6 seem to use the certs in /etc/docker/certs.d correctly.\n. @tianon\n. @tianon this includes the change in #806\n. @tianon ping.\n. mmm, I was just testing something like this yesterday - though I was using a Docker 1.6 release candidate\n@Rob-Johnson could you possibly test using an iso from https://github.com/tianon/boot2docker/releases ?\nnote that I was using a instantssl cert, and did not have to install any certs to be able to push&pull the local registry\n. does #807 help you?\nOne thing I did notice, was that once you did the things to make curl happy, Docker was happy too.\nOH - one big note - you must restart your Docker daemon if you install new certs.\n. note that restarting the docker daemon manually solves it, as that triggers a cert re-generation\nboot2docker ssh sudo /etc/init.d/docker restart\nplease tell me if this doesn't work for you, as its the basis for the fix i'm pondering (essentially, i think the 1.7 dhcp ip address setting is happening slightly slower than before)\n. note that restarting the docker daemon manually solves it, as that triggers a cert re-generation\nboot2docker ssh sudo /etc/init.d/docker restart\nplease tell me if this doesn't work for you, as its the basis for the fix i'm pondering (essentially, i think the 1.7 dhcp ip address setting is happening slightly slower than before)\n. @simonvanderveldt go on, use @tianon 's example :)\n. LGTM - @tianon ?\n. ping @simonvanderveldt looks like we're waiting for your rebase.\n. LGTM - @tianon \n. have you run boot2docker upgrade ?\n. mmm, ok, I guess your version of Boot2Docker (the cli) is too old, so its not upgrading either it, or the docker client.\npersonally, I'd download the osx installer and use that to upgrade everything.\n. mmm, ok, I guess your version of Boot2Docker (the cli) is too old, so its not upgrading either it, or the docker client.\npersonally, I'd download the osx installer and use that to upgrade everything.\n. The boot2docker init process will create a persistence partition for the vm in which the images should be saved.\n. LGTM\n. @frapposelli awesome! now all I need is the VMWare workstation for Windows and Linux drivers for docker-machine - I don't use OSX!\n:p\n. aha. the way sshd deals with ev has changed., doing more kicking.\n. aha. the way sshd deals with ev has changed., doing more kicking.\n. vbox share works. :beers: - I was able to edit files on my windows host from a docker container.\nso its only boot2docker stop being broken due to acpi problems that is left. - And I think I know what that is.\n. vbox share works. :beers: - I was able to edit files on my windows host from a docker container.\nso its only boot2docker stop being broken due to acpi problems that is left. - And I think I know what that is.\n. :whale: now ACPI shutdown works too.\n@tianon @bfirsh can we get this merged asap so we have as much time to shake it out - this means docker machine will be able to talk nicely to vmware.\nx64 bit Boot2Docker!\nfor those that would like to help test it - goto: https://github.com/SvenDowideit/boot2docker/releases/tag/x64pr1\n. :whale: now ACPI shutdown works too.\n@tianon @bfirsh can we get this merged asap so we have as much time to shake it out - this means docker machine will be able to talk nicely to vmware.\nx64 bit Boot2Docker!\nfor those that would like to help test it - goto: https://github.com/SvenDowideit/boot2docker/releases/tag/x64pr1\n. Yeah - the user env thing was a hack to workaround a bug fix in tcl6 - and @programmerq 's machine report shows its not enough, so I'll do it the more brutal way later today.\nand yes, the vmhgfs stuff is whiney - I'm going to defer to @frapposelli to fix that :)\n. Yeah - the user env thing was a hack to workaround a bug fix in tcl6 - and @programmerq 's machine report shows its not enough, so I'll do it the more brutal way later today.\nand yes, the vmhgfs stuff is whiney - I'm going to defer to @frapposelli to fix that :)\n. ah. not-so-wonderful. tcl5's sshd is compiled with a very long and useful PATH, whereas tcl6's horrid and short.\nI'm going to go for a soft-link in the bootscript.sh\n. and a build to go with it - https://github.com/SvenDowideit/boot2docker/releases/tag/x64pr2\n@programmerq can you please tell me it works  (he pleads - I'll test it tomorrow too, works on qemu, but thats got very different timing.)\n. @tianon I'll squash the commits once you think its good to merge - til then, I'm finding it useful to have a way to see who did what :)\n. @tianon I'd like to get this merged - if I back out the vmware specifics and let @frapposelli make a new PR, would we be good to go?\n. I'm working on getting the new OVT release working - the kernel module now builds, need to add more libs.\n. at this point, the mounting of vmware based shares works. the vmtoolsd complains bitterly on the console tho. @frapposelli \n. @frapposelli there are more complaints than that - it also fails because b2d doesn't have a lbs_release binary, and something else.\nI'm happy to merge as-is and figure it out in a later PR, as it does not affect vbox, qemu or bare HW.\n@tianon ? - if you LGTM, I'll squash to about 5 commits - so we know who worked on it :)\n. turns out vmtoolsd hard codes the path now, so I've added a softlink for it too.\n. @tianon ?\n. @afressancourt @dduportal @frapposelli @tianon @SvenDowideit @steeve \nI've constructed a lie in which we have each only made 4 commits to get this done. \ncan you please each take a look to see that the end result is what we all intended - and once we have all LGTM's we can talk about merging.\n. I've built one and uploaded it to https://github.com/SvenDowideit/boot2docker/releases/tag/x64rc1\n. yup, https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md#making-your-own-customised-boot2docker-iso\n. yup, https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md#making-your-own-customised-boot2docker-iso\n. ah, nice!\n. the /var/lib/boot2docker/profile file only sets the environment that the Docker daemon is started with, not that of the users.\n. the /var/lib/boot2docker/profile file only sets the environment that the Docker daemon is started with, not that of the users.\n. mmm, a much older version of the boot2docker commandline tool had this problem - these days, the vm and the cli negotiate to re-build and sync the keys on every boot2docker up.\ncan you check `boot2docker version?\n. ok, very odd.\ncan you please try:\n$ boot2docker delete\n$ boot2docker upgrade\n$ boot2docker -d init\nthe -d should output lots of debug info, and hopefully tell us what's going wrong.\n. ok, very odd.\ncan you please try:\n$ boot2docker delete\n$ boot2docker upgrade\n$ boot2docker -d init\nthe -d should output lots of debug info, and hopefully tell us what's going wrong.\n. yay +1 - I'm using jessie in my selinux/apparmor version as the compiler in wheezy is too old for building selinux.\nI did have issues with the hybrid iso when dding it to a usb stick, so LGTM assuming that you've tested it.\n. LGTM\n. yup, we've had overlay and btrfs for a while, but we've not made is obvious.\nvery yay LGTM\n. another 3 seconds that everyone has to wait?\nthat sounds terrible. can't we kick the kernel sync style?\n. @phuslu are you interested in making the change to add parted?\n. LGTM, though it needs a rebase - @tianon ?\n. LGTM, though it needs a rebase - @tianon ?\n. boot2docker is a livecd distro that boots from the iso.\nso the question is what do you mean by 'not-fine'\n. na, its all intertwined - i didn't realise OVT had been merged already.\n. I'm going to close this. boot2docker has always worked on Linux - It is mostly developed and tested there - the only problem is the vbox shares, and this may become better in the 1.7 release.\n. I'm going to close this. boot2docker has always worked on Linux - It is mostly developed and tested there - the only problem is the vbox shares, and this may become better in the 1.7 release.\n. This must have been an implied requirement for some other tool - its quietly working again in my master / pre-1.7 builds, but I'll add it in explicitly\n. This must have been an implied requirement for some other tool - its quietly working again in my master / pre-1.7 builds, but I'll add it in explicitly\n. I think we'll be re-writing the boot2docker docs pretty soon, and integrating them into the http://docs.docker.com docs. Especially as the boot2docker-cli is being replaced by docker/machine.\nso yes, its a good helper, but will (i hope) be dealt with by the documentation tooling.\n. its not particularly easy to hook up a GUI app this way. \nI have an experimental set of Dockerfiles that make an Xrdp server (see https://github.com/SvenDowideit/dockerfiles/tree/master/xrdp ) which I then link the /tmp dir into the other containers. This means that your eclipse would render on the xrdp server, which you can then connect to using a standard RDP client (ie rdesktop client).\n. its not particularly easy to hook up a GUI app this way. \nI have an experimental set of Dockerfiles that make an Xrdp server (see https://github.com/SvenDowideit/dockerfiles/tree/master/xrdp ) which I then link the /tmp dir into the other containers. This means that your eclipse would render on the xrdp server, which you can then connect to using a standard RDP client (ie rdesktop client).\n. we build our own kernel during the creation of boot2docker so the right place to get it is probably a case of getting the GH repo for the release you're working with, and building it locally - then grabbing the headers from the final build container.\nI wonder if we should be adding source & header snapshots to the releases\n. The Homebrew support is not done by us - so we'd welcome the contribution :)\n. The Homebrew support is not done by us - so we'd welcome the contribution :)\n. LGTM\n. LGTM\n. wow - and then there's https://github.com/boundary/libdnet\ntalk about old unmaintained SW deps\nthe google code version  (1.12) dates from .... 2007\nthe sf version (1.11) from 2006\nnote that dugsong (assuming the 2 usernames are for the same person) are listed on both sf and googlecode.\n. I'm going to test and merge this, as sf has been down for 3-4 days now.\n. I'm going to test and merge this, as sf has been down for 3-4 days now.\n. ok, it seems to work, we can modify later :)\n. ok, it seems to work, we can modify later :)\n. I'm somewhat interested, as I too use b2d on a desktop. but yes, its not a big priority.\n. I'm somewhat interested, as I too use b2d on a desktop. but yes, its not a big priority.\n. /me cues thinking music.\n. /me cues thinking music.\n. LGTM\n. LGTM\n. I'm going to play with this a little during the hackathons thou - so there will be something more to play with :)\n. yup, confirmed:\n```\nFri Jun 26 17:43:24 UTC 2015\nFri Jun 26 17:43:29 UTC 2015\n1: lo:  mtu 65536 qdisc noqueue state UNKNOWN group default\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: dummy0:  mtu 1500 qdisc noop state DOWN group default\n    link/ether 9e:86:5e:cf:b5:69 brd ff:ff:ff:ff:ff:ff\n3: eth0:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:29:6c:8e brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe29:6c8e/64 scope link tentative\n       valid_lft forever preferred_lft forever\n4: eth1:  mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether 08:00:27:6a:0d:e6 brd ff:ff:ff:ff:ff:ff\n\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\n```\nwhen we start the Docker daemon, the eth1 is not up for some racing issue :(.\n. yup, confirmed:\n```\nFri Jun 26 17:43:24 UTC 2015\nFri Jun 26 17:43:29 UTC 2015\n1: lo:  mtu 65536 qdisc noqueue state UNKNOWN group default\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: dummy0:  mtu 1500 qdisc noop state DOWN group default\n    link/ether 9e:86:5e:cf:b5:69 brd ff:ff:ff:ff:ff:ff\n3: eth0:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:29:6c:8e brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe29:6c8e/64 scope link tentative\n       valid_lft forever preferred_lft forever\n4: eth1:  mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether 08:00:27:6a:0d:e6 brd ff:ff:ff:ff:ff:ff\n\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\n```\nwhen we start the Docker daemon, the eth1 is not up for some racing issue :(.\n. note that restarting the docker daemon manually solves it, as that triggers a cert re-generation\nboot2docker ssh sudo /etc/init.d/docker restart\n. note that restarting the docker daemon manually solves it, as that triggers a cert re-generation\nboot2docker ssh sudo /etc/init.d/docker restart\n. closing as dup of https://github.com/boot2docker/boot2docker/issues/824\nnote that restarting the docker daemon manually solves it, as that triggers a cert re-generation\nboot2docker ssh sudo /etc/init.d/docker restart\n. closing as dup of https://github.com/boot2docker/boot2docker/issues/824\nnote that restarting the docker daemon manually solves it, as that triggers a cert re-generation\nboot2docker ssh sudo /etc/init.d/docker restart\n. we took the decision last year to keep the b2d version number the same as the docker release version we use - it became quite difficult to ensure that all the versions matched up otherwise.\n(yes, version numbers are painful)\n. nice! I'll take a look and test it in the next week (DockerCon, and then flying back to Australia)\n. LGTM - @tianon \nI've tested it with parallels, and it works. running on vbox hasn't degraded either.\n@legal90 if you'd like to rebase this PR, great - otherwise, I've made a rebased version at #969 that can just be merged.\n. i don't know what's going on here - can you perhaps tell us a little more detail so we can try to reproduce it?\n. I'm finally getting this with Docker 1.8.x :(\n. I'm finally getting this with Docker 1.8.x :(\n. see https://github.com/docker/docker/issues/15941\n. see https://github.com/docker/docker/issues/15941\n. @tianon This seems to be just enough for the vbox tests I've made so far.\n. @tianon I agree - it's really a horrid extension of the 5 second timeout we already had.\nMostly, i made this PR because I've been in transit the last 2-3 days, so didn't expect to have time to do something better for 1.7.1.\nball of string, held together by simple sticky tape.\n. much yay\n. LGTM - thou this should be solved by 1.7.1, if its not :)\n. depressing - @tianon ?\n. @nlf , I'd feel more comfortable with a non-inifinite loop on failure.....\n. this problem should be fixed by the changes I made that will be in v1.7.1\n. I think I've run 1.7.1 for longer than that on real hardware.\nAre you really running b2d in virtualbox running on OSX in vmware?\n. I think I've run 1.7.1 for longer than that on real hardware.\nAre you really running b2d in virtualbox running on OSX in vmware?\n. LGTM - @tianon ?\n. perhaps it would be safer to use 49152-61000 ?\n. LGTM - though I'd be even happier if there was a proposed timeline for EOL too\n. @tianon @icecrime @aanand @bfirsh can we add this for 1.8.0 boot2docker, or should I make a separate iso for user's that aren't going to move to docker-machine straight away.\n. @tianon @icecrime @aanand @bfirsh can we add this for 1.8.0 boot2docker, or should I make a separate iso for user's that aren't going to move to docker-machine straight away.\n. LGTM\n. LGTM\n. can you tell us more about your VPN? so far, we've have very little success getting VM's and VPNs to play nice.\n. nice summary - thank you (I don't have solutions, but this helps us investigate the problem space)\n. oh yay\nLGTM (er, ok, but i've not tested it)\n. you have an interesting point - @nathanleclaire and I were just talking about the difference in UX, and you're right, we could make the boot2docker-cli a simplified frontend for docker-machine.\n. sadly, NFS also doesn't do user mapping well either - the uid's , or the username (in NFSv3) need to match.\n. sadly, NFS also doesn't do user mapping well either - the uid's , or the username (in NFSv3) need to match.\n. I vote for 4.2 :)\n. I vote for 4.2 :)\n. untested but LGTM\n. untested but LGTM\n. I'm assuming we're talking about a locally customized boot2docker, and not proposing to add ansible etc to the generally available boot2docker?\nIMO, 60Mb is still awesome small for a local modified iso :)\nAssuming that, then personally, I make a FROM boot2docker Dockerfile, which then generates the iso that I use. That way, you're not auto-updating, you update to newer versions when you've satisfied yourself that it works well enough to roll out.\nI also think it'd be useful to distribute a few Docker images on my local custom ISO - I've just not gotten around to needing it enough to work on it :)\nThere really is zero need for Packer - the Boot2Docker Dockerfiles allow you to extend them using the standard Dockerfile way.\n. I'm assuming we're talking about a locally customized boot2docker, and not proposing to add ansible etc to the generally available boot2docker?\nIMO, 60Mb is still awesome small for a local modified iso :)\nAssuming that, then personally, I make a FROM boot2docker Dockerfile, which then generates the iso that I use. That way, you're not auto-updating, you update to newer versions when you've satisfied yourself that it works well enough to roll out.\nI also think it'd be useful to distribute a few Docker images on my local custom ISO - I've just not gotten around to needing it enough to work on it :)\nThere really is zero need for Packer - the Boot2Docker Dockerfiles allow you to extend them using the standard Dockerfile way.\n. @rivaros do both the installing of tce packages and pip installation in a Dockerfile that uses FROM boot2docker/boot2docker, and then use that iso\nand when you need to update the tools, build a new iso :)\n. @rivaros do both the installing of tce packages and pip installation in a Dockerfile that uses FROM boot2docker/boot2docker, and then use that iso\nand when you need to update the tools, build a new iso :)\n. LGTM \n. I don't use compose as much as i should, but I really do wonder why you'd install it into the vm.\nI pretty much always reach for my svendowideit/compse image: https://hub.docker.com/r/svendowideit/compose/\n@bfirsh @aanand we should really work though this stuff to make and document a good solution.\n. I don't use compose as much as i should, but I really do wonder why you'd install it into the vm.\nI pretty much always reach for my svendowideit/compse image: https://hub.docker.com/r/svendowideit/compose/\n@bfirsh @aanand we should really work though this stuff to make and document a good solution.\n. LGTM - @tianon \n. LGTM - @tianon \n. very LGTM\n. yeah, I'm wanting this too - I might do it soon :)\nOn Mon, Oct 12, 2015 at 2:24 PM, Sebastiaan van Stijn \nnotifications@github.com wrote:\n\nAlso\nhttp://sirile.github.io/2015/07/02/using-docker-18-experimental-with-docker-machine-and-virtualbox-driver-boot2docker.html\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/1061#issuecomment-147289540\n.\n. mmm, ok, so I still use boot2docker on my bare hardware. removing this functionality will mean I need to maintain my own fork.\n\nso IMO NOT-LGTM, but merging has the advantage that I'll go back to working on it.\n. @tianon if it defaults to yes, and gets turned off explicitly by docker-machine, then yes, that works.\nmy point is not to say no to this specifically, but more to wonder where this is going in the long run.\nI'm happy for there to be an explicit decision to make b2d (or its successor) to be docker-machine specific - but this needs more communication first - so those of us that don't match the reduced goal set can plan for migration to something else.\n(imo, it would be better to do in the successor project, rather than changing the goals for this one)\nCan point me at the discussion wrt changing the goals of b2d, or of its successor, I really should read them.\n. LGTM - though I have not had time to set up a test\n. works for my setup - I hope you'll be able to figure out what the vbox issue is :/\n. @aheissenberger yes, please, doit!  :)\n. interesting - more unwritten process? >:}\n. yeah, for 0.9, but I use b2d to test other versions too\n. na - this is if someone's doing it locally - boot2docker/boot2docker is really the trusted build\nI've never quite groked the idea that we should tell other users to use someone else's username/namespace in instructions.\n. argh! I'm still doing it :( maybe i need a githook that tells me i'm un-teachable! \n. gutless!\n. :rabbit2: \n. When I look at the release names of the docker github project, its been using 'v1.1.1' forever - seems more consistent that way.\n. mmmm, you're right, /var/log/ isn't in the persistence disk..\n. and gosh, doesn't that line look awfully complicated, and assumes that the original template doesn't get changed to remove the commented out default...\n(which has happened to me during my debian packaging life)\n. we'd still need to patch it - that tree doesn't have the aufs3-loopback.patch applied.\nI have no arguments either way - personally, I do like how we're using the kernel.org kernel and then explicitly showing what we are changing.\n. if there is one, yes\n. please do not delete the code - that makes debugging harder.\n. can we use the better hypervisor detection to make a name based switch here?\n. What about boot2docker on linux?\n. if you really think it makes a noticeable difference to the 1.7GB image...\n. I want to add an sshfs based version soon after this lands for my remote b2d's.\n. so, how exactly does it work on linux.... right now?\n. yeah, something like that - i'd rather not 'try every script and fail' but having it hardcoded to vbox is :/\n. ah, ok, so a tiny amount of post processing - like in boot2docker up can fix that up for us, sweet.\nI do wonder - why are we not doing the same thing for OSX & Windows, thus at minimum increasing the safety of the other users files?\n. so - why not do this now? it'd be safer than always sharing /Users, and a heffalump more flexible for Linux hosts that run b2d\n(even though I presume you would want to do this using the non-working VBoxService - you have full access to getting boot2docker-cli to tell the vm what you need to know...)\n. Considering it further - Given that the boot2docker vm that we create using b2d is not accessible to any other users (if you log in as a different user, they won't see this one, and would init a new one, Why are we sharing /Users/ ?\n. mmm, after a litte reading - can you explain why we need 2 pid files containing the docker daemon's pid? it seems to me that the --make-pidfile --background --pidfile .. is redundant because docker makes its own, but assuming you added that complexity for a reason, please, can you document it in the file?\n. mmm, ok - I think handing /Users/ is a worse hack, especially as this implementation currently doesn't work on Linux.\n. These 2 are incorrect - there are non-modifyable versions here, but you need to put yours into /var/lib/boot2docker\n. no. - /opt/ is where the defaults live, and changes here are lost when you reboot\n. yup, this one is true :)\n. Is this really the best solution? the NAT port forwarding was removed as its unreliable :/\n. I presumed that aufs3.18+ will contain changes that would apply to eventually going to be 3.18.2 - whereas this branch would be specific to 3.18.1\n. nad fake :)\n. yes, plus more - its also because there was a new release of OVT in march, and then a series of patches to make OVT useful in post 3.16 kernels.\nI prefer using a repo to using a \"random\" :D patch in a gist\n. I use kvm on b2d, so please keep it on.\n. Is there any benefit to b2d having modules over built in? either way, we're using iso-space?\n. @nathanleclaire please change this. the /var/lib/boot2docker/tls dir has reduced permissions compared to /var/lib/boot2docker\n. ",
    "rcarmo": "There. Now I can run shipyard and tell it to use 172.17.42.1 instead of the host's IP address. Seems to work OK.\n. There. Now I can run shipyard and tell it to use 172.17.42.1 instead of the host's IP address. Seems to work OK.\n. Actually, that IP doesn't change. It's the base IP address for the internal network interface docker creates upon startup. The only way it can change is for docker to change the defaults on a newer version.\nAlso, the point is that I'd like to get shipyard to run upon boot without user intervention. Having to restart dockerd manually every time is a pain.\n. Actually, that IP doesn't change. It's the base IP address for the internal network interface docker creates upon startup. The only way it can change is for docker to change the defaults on a newer version.\nAlso, the point is that I'd like to get shipyard to run upon boot without user intervention. Having to restart dockerd manually every time is a pain.\n. Yeah, I know. The 172.16 CIDR was reserved in RFC1918 for private, non-routable use. \nBut it's set internally on a virtual interface that is neither bridged nor routed to any of the hosts' other interfaces, and collision will only happen if the host is also on the very same network (including netmask).\nWhich, let's face it, is extremely unlikely, so we're really splitting hairs here, especially on a highly experimental Linux distro that works best inside a VM.\nBut sure, the patch can be re-written to pick up the IP address from docker0 and use that instead. It's horrendous, though, and has to be something like /sbin/ifconfig docker0 | grep 'inet addr:' | cut -d: -f2| cut -d' ' -f1 (adjust splitting to taste and Linux flavor).\n. Good point. I got carried away by the (ultimately, rather pointless) argument.\nThen we just have to use the hard-coded IP address (which is still the saner option against going with 0.0.0.0 and have the port open on all interfaces).\nUnless docker can restrict TCP access to docker0 through some other CLI parameter I can't divine from looking at docker -h, then we're stuck with the default IP.\nAnother option is to make the startup script persistent on the read/write partition and let folk tweak it to their hearts' content (adding stuff like -icc for inter-container communication is also interesting for me), or expose a few shadow files with environment variables that control this behaviour.\nOr do a (somewhat silly) thing like launching docker, have it create the interface, and then restarting it with \"proper\" arguments, which is, on the whole, too much trouble, I think.\n. No, shipyard runs as a docker container at the moment (at least if you install it the \"right\"/easy way - I see no point in installing it the hard and messy way on a distro that has very little built-in persistence for the host).\nWhich is kind of the whole point - the beauty of shipyard is that your management interface for your containers is also a container and can be upgraded/managed/monitored in the same way.\nIf it were not so, I would be lobbying for shipyard to be included in the distro (even though it's bigger than the core) ;)\n. It insists on a TCP socket. It's designed to remotely manage multiple Docker hosts, as is clearly stated in the documentation:\nhttps://github.com/shipyard/shipyard/wiki/QuickStart\nGive it a whirl, it's really easy to set up.\nI think the UNIX socket support is still there, but it's not the default anymore.\n. I honestly don't get why we're still debating this instead of just making the startup script user-configurable somehow. \n. Why not have a simple diversion script? Something like:\nif [ -x /persistentpath/etc/init/docker.sh ]; then\n   . /persistentpath/etc/init/docker.sh\nelse\n       # run docker init as usual\n   fi\nThat way we can all be happy and not have to rebuild the ISO to tweak a single line.\n. You can do one better: When persistent storage is detected for the first time, deploy a copy of the default startup script. \nAt boot time, if that's missing (or not marked as executable), then run the built-in. If it's there and executable, log a message saying you're going to run it and do so (that way it's clear to whomever tweaked the script that it's being used).\n. ",
    "crosbymichael": "No, please do not do this.  Hard coded ip is not a good thing ( that ip can change ) and if you need to expose docker over tcp you can edit and restart docker at runtime.\n. No, please do not do this.  Hard coded ip is not a good thing ( that ip can change ) and if you need to expose docker over tcp you can edit and restart docker at runtime.\n. @rcarmo Actually it can change if that ip range is already consumed on the network.  That ip is just the starting point for docker when it creates the bridge.\n. @rcarmo Actually it can change if that ip range is already consumed on the network.  That ip is just the starting point for docker when it creates the bridge.\n. its released\n. Because your mounting a volume on the docker host, not on your local machine.\n. LGTM ;)\n. The boot2docker iso is really easy to build yourself with this patch........\n. ping @tianon what do you think?  LGTM to me\n. This is only on aufs right or can you reproduce with another backend driver? \n. If we can just run this on disk if I dd the iso and not out of rootfs I would be happy in that usecase\n. Testing today\n. This still does not work\n. If I go to the commit before the 3.14 change everything is fine. We should just revert those two commits\n. Humm, going back in the commit history it looks like my debian changes are to blame with the new kernel version.   You can just rollback my changes and keep the updated kernel.  it is more important.\n. @steeve pr #327 reverts the changes \n. It should also close this PR\n. @SvenDowideit Adding depmod does not for me, i tried that already because you cannot run your command without it.\n. Testing now\n. LGTM\n. LGTM\n. ",
    "thedrow": "Maybe Github releases can assist instead of using Git directly?\n. Maybe Github releases can assist instead of using Git directly?\n. ",
    "eugeneware": "Hi @proppy. I've found out how to disable the graphics mode. If you pass nomodeset to the kernel parameters on boot the graphics don't run.\nSo at the kernel boot screen you just type in (or hit ^C to stop the boot in progress):\nbash\nboot2docker nomodeset\nI've successfully run the following command and had it work:\nbash\n$ qemu-system-x86_64 -hda hda.vmdk -cdrom boot2docker.iso -m 1024 -boot order=d -net nic -net user,hostfwd=tcp:127.0.0.1:4243-:4243\nHowever, I couldn't get any of the console messages. How are you doing that? How are you listening to ttyS0 with qemu?\nI'm running qemu on Mac OS X and am quite new to qemu.\nBut hope this helps.\nIf you want to modify the iso image so it always does this, just modify the /rootfs/isolinux/isolinux.cfg b/rootfs/isolinux/isolinux.cfg file and rebuild the iso as per the README.md on this repo's home page:\n``` diff\ndiff --git a/rootfs/isolinux/isolinux.cfg b/rootfs/isolinux/isolinux.cfg\nindex 9267600..68c5102 100644\n--- a/rootfs/isolinux/isolinux.cfg\n+++ b/rootfs/isolinux/isolinux.cfg\n@@ -3,7 +3,7 @@ default boot2docker\n label boot2docker\n        kernel /boot/vmlinuz64\n        initrd /boot/initrd.img\n-       append loglevel=3 user=docker console=ttyS0 console=tty0\n+       append loglevel=3 user=docker console=ttyS0 console=tty0 nomodeset\nimplicit 0\n prompt 1\n```\n. I've put in a PR that disables frame buffer graphics on boot in PR https://github.com/steeve/boot2docker/pull/66\n. @proppy I was unsure of how to access the serial port in qemu, so I haven't tested that.\nHow do you do that in qemu? Have you got a sample command line example?\n. I'm getting the same problem.\n. Also having this issue. I don't seem to get the problem with release 0.3.0, but do with what's in master when I build my own ISO using the README.md instructions.\nI also get the device in my fstab:\n```\ndocker@boot2docker:/etc$ cat fstab\n/etc/fstab\nproc            /proc        proc    defaults          0       0\nsysfs           /sys         sysfs   defaults          0       0\ndevpts          /dev/pts     devpts  defaults          0       0\ntmpfs           /dev/shm     tmpfs   defaults          0       0\ncgroup  /cgroup     cgroup  defaults    0   0\nnone    /dev/mqueue mqueue  defaults    0   0\n/dev/zram0  swap         swap    defaults,noauto   0       0\n/dev/sda1       /mnt/sda1       ext4     noauto,users,exec    0 0 # Added by TC\n/dev/sr0        /mnt/sr0        iso9660  noauto,users,exec    0 0 # Added by TC\n```\nBut it doesn't automount.\nRunning /etc/rc.d/automount works, however, but it doesn't stick on reboot.\n. Just to be clear. I'm having the issue with what's in master at e44de41d648265f91adfeb7f7f574dd4d709196c\n. And I'm having the issue with VirtualBox 4.3.6. boot2docker 0.3.0 release ISO works, but not master.\n. OK. It's also a problem with 0.3.0. I've checked out boot2docker at the 0.3.0 branch, and built and ISO and hard-coded it to download the old version 0.7.1 version of docker and the problem is still there.\nSteps to reproduce:\n\nCheck out master or v0.3.0\nFollow the build steps on the README.md\nLaunch boot2docker with the new iso.\nCreate /dev/sda1:\n\nsudo -s\n   fdisk /dev/sda\n   n    # new primary partition\n   p\n   1   # first partition\n   Enter  # default start\n   Enter  # default end\n   w  # write partition table and quit\n   mkfs.ext4 /dev/sda1\n   reboot\n5. boot2docker ssh\n6. mount - The automount failed.\n7. cat /etc/fstab - The device is present but not mounted.\n8. sudo /etc/rc.d automount\n9. mount - the manual mount succeeded.\n. OK. More sleuthing. I thought it might be the order the rc.d scripts get run. So I added logging to the startup scripts, so for example to automount:\n`````` bash\n!/bin/sh\nThis script mounts the first hard drive found on /var/lib/docker\necho date [automount] - Start >> /tmp/bootlog\nFIRST_HD=autoscan-devices | cut -d' ' -f1\necho date [automount] - FIRST_HD: $FIRST_HD >> /tmp/bootlog\nif [ -n \"$FIRST_HD\" ]; then\n    echo date [automount] - Before mount >> /tmp/bootlog\n    echo mount >> /tmp/bootlog\n    echo date [automount] - running: mount /dev/$FIRST_HD /var/lib/docker >> /tmp/bootlog\n    mount /dev/$FIRST_HD /var/lib/docker 2>&1 >> /tmp/bootlog\n    echo date [automount] - After mount >> /tmp/bootlog\n    echo mount >> /tmp/bootlog\nfi\necho date [automount] - Finish >> /tmp/bootlog```\nAnd I did similar things to all the startup scripts and also to /usr/local/etc/init.d/docker. Here's the logs:\n``` sh\ndocker@boot2docker:~$ cat /tmp/bootlog\nWed Jan 8 08:35:25 UTC 2014 [tce] - Start\nWed Jan 8 08:35:25 UTC 2014 [tce] - Finish\nWed Jan 8 08:35:25 UTC 2014 [automount] - Start\nWed Jan 8 08:35:25 UTC 2014 [automount] - FIRST_HD: sda1\nWed Jan 8 08:35:25 UTC 2014 [automount] - Before mount\nrootfs on / type rootfs (rw,relatime,size=922400k,nr_inodes=125150)\nproc on /proc type proc (rw,relatime)\nsysfs on /sys type sysfs (rw,relatime)\ndevpts on /dev/pts type devpts (rw,relatime,mode=600,ptmxmode=000)\ntmpfs on /dev/shm type tmpfs (rw,relatime)\ncgroup on /cgroup type cgroup (rw,relatime,perf_event,blkio,freezer,devices,cpuacct,cpu,cpuset)\nnone on /dev/mqueue type mqueue (rw,relatime)\nfusectl on /sys/fs/fuse/connections type fusectl (rw,relatime)\nWed Jan 8 08:35:25 UTC 2014 [automount] - running: mount /dev/sda1 /var/lib/docker\nWed Jan 8 08:35:25 UTC 2014 [automount] - After mount\nrootfs on / type rootfs (rw,relatime,size=922400k,nr_inodes=125150)\nproc on /proc type proc (rw,relatime)\nsysfs on /sys type sysfs (rw,relatime)\ndevpts on /dev/pts type devpts (rw,relatime,mode=600,ptmxmode=000)\ntmpfs on /dev/shm type tmpfs (rw,relatime)\ncgroup on /cgroup type cgroup (rw,relatime,perf_event,blkio,freezer,devices,cpuacct,cpu,cpuset)\nnone on /dev/mqueue type mqueue (rw,relatime)\nfusectl on /sys/fs/fuse/connections type fusectl (rw,relatime)\nWed Jan 8 08:35:25 UTC 2014 [automount] - Finish\nWed Jan 8 08:35:25 UTC 2014 [sshd] - Start\nWed Jan 8 08:35:25 UTC 2014 [sshd] - Finish\nWed Jan 8 08:35:25 UTC 2014 [docker] - Start\nWed Jan 8 08:35:25 UTC 2014 [docker] - Before forward\nWed Jan 8 08:35:25 UTC 2014 [docker] - Before start\nWed Jan 8 08:35:25 UTC 2014 [dockerd] - Start\nWed Jan 8 08:35:25 UTC 2014 [dockerd] - Before docker -d\nWed Jan 8 08:35:25 UTC 2014 [dockerd] - After docker -d\nWed Jan 8 08:35:25 UTC 2014 [dockerd] - Finish\nWed Jan 8 08:35:25 UTC 2014 [docker] - Finish\n``````\nYou  can see that the disk is detected in automount, and the mount branch executes. And it executes before anything else, and how the mounts don't change after running the mount command.\nWhat do you think is going on?\n. OK. I've worked out what's going on. The issue is that /var/lib/docker doesn't exist on the file system, so the mount command fails. Adding a mkdir -p /var/lib/docker before the mount seems to fix the issue. I'll put in a PR.\n. OK. Fixed it in this PR: #59\n. I agree, it should be a fork or a different branch, or at least release different build ISOs.\n. Good question, if it's only a few meg or so, then maybe it's not a big deal. \nBut do we do the same for VMWare Fusion or Parallels?\n. @steeve I've put the virtualbox check in PR #60 to expose only if it finds virtualbox.\n. Hi @aheissenberger , that's awesome.\nThe only issue with that is that they have to confirm the addition of the key, and then type in \"tcuser\" for the password.\nI've had a crack at using expect to execute the commands, and the script executes fine, but for some reason the changes don't stick even though I can see that it's doing the right thing. \nAnyway, here's what I've come up with so far:\n```\n!/bin/sh\nDOCKER_HOST=localhost\nVM_NAME=boot2docker-vm\nVBM=VBoxManage\nDOCKER_PORT=4243\nSSH_HOST_PORT=2022\nssh-keygen -R [${DOCKER_HOST}]:$SSH_HOST_PORT\nexpect << EOD\nspawn ssh -o NoHostAuthenticationForLocalhost=yes -p 2022 docker@localhost\nexpect \"password: \"\nsleep 1\nsend \"tcuser\\r\"\nexpect \"docker@boot2docker:~$ \"\nsleep 1\nsend \"mount | grep -q /dev/sda1 && echo \\\"Persistent Image exists\\\" && exit\\r\"\nexpect \"docker@boot2docker:~$ \"\nsend \"sudo fdisk /dev/sda\\r\"\nsend \"n\\r\"\nsend \"p\\r\"\nsend \"1\\r\"\nsend \"\\r\"\nsend \"\\r\"\nsend \"w\\r\"\nexpect \"docker@boot2docker:~$ \"\nsleep 1\nsend \"sudo mkfs.ext4 /dev/sda1\\r\"\nexpect \"docker@boot2docker:~$ \"\nsleep 2\nsend \"sudo reboot\"\nsleep 3\ninteract\nEOD\nssh-keygen -R [${DOCKER_HOST}]:$SSH_HOST_PORT\n```\n. A much better idea! :-)\n. Good point! What about if we check if we're running in VirtualBox like you mentioned in #48?\n. I did notice the same problem running it purely from OS X. I ended up building it inside virtual box and had it work well too.\n. I do like the idea of having a public key, but we should it easy for people to remove the key too if they want to use it on bare metal.\nProjects like boot2docker-vagrant-box have been adding these changes into the disk and packaging up a virtualbox image. They hack boot2docker by overwriting the sshd_config in /var/lib/docker/vm/ssh and baking into the virtualbox image.\nI like your approach better in baking it into the ISO, as it makes it really difficult to talk to the box being asked for the password each time, and this gives us a way to configure things like networking etc, over ssh, rather than having to include virtualbox guest additions.\nMy only question is: if someone was running this on bare metal, would it be easy to for them to revoke or change the key?\nThat being said, from my understanding the \"tcuser\" default password can't easily be changed with the current distribution as /etc/passwd is on the ISO and not symlinked over to /usr/local/etc leaving a pretty big security hole?\nAll in all, I'm +1 on this.\n. You are a legend. This was driving me nuts. Annoying to have to build build2docker from inside the VM!\n:+1: \n. My thoughts are.\n1. Go with a really unique IP.\n2. If it's taken, throw an error and ask them to override it with a command line option or ENV variable.\nI guess the main points of ease of use is getting an entry into their hosts file and into their $DOCKER_HOST env variable.\n@aheissenberger in the osacript thing, I get where you're coming from, but when I tried it, it pops up a pretty weird dialog asking for your password, which for me at least was a little bit unexpected coming from a command line install. I expect to enter my password for sudo, but the popup almost looked a little virusey.\nWhen you mount an nfs share with vagrant, it asks you for your sudo password.\nPerhaps we can make the assumption that as a developer they'll have admin rights, or try to detect this first?\n. My thoughts are.\n1. Go with a really unique IP.\n2. If it's taken, throw an error and ask them to override it with a command line option or ENV variable.\nI guess the main points of ease of use is getting an entry into their hosts file and into their $DOCKER_HOST env variable.\n@aheissenberger in the osacript thing, I get where you're coming from, but when I tried it, it pops up a pretty weird dialog asking for your password, which for me at least was a little bit unexpected coming from a command line install. I expect to enter my password for sudo, but the popup almost looked a little virusey.\nWhen you mount an nfs share with vagrant, it asks you for your sudo password.\nPerhaps we can make the assumption that as a developer they'll have admin rights, or try to detect this first?\n. @aheissenberger strange, because when I used the nfs mapping script I definitely got a popup, and I have Admin rights. Maybe that script doesn't check?\nNot a big deal in any way, just some feedback.\n. @aheissenberger strange, because when I used the nfs mapping script I definitely got a popup, and I have Admin rights. Maybe that script doesn't check?\nNot a big deal in any way, just some feedback.\n. Thanks @aheissenberger! You rock!\n. Thanks @aheissenberger! You rock!\n. @aheissenberger This is really great work!\nI think something like this is critical for facilitating local development workflows on OS X.\nIt seems that we'll be waiting a long time for this functionality with boot2docker if it depends on the docker team to expose nfs mapping through their API.\nI don't think we need to make it 100% pretty through the boot2docker script to do the host mappings.\nPerhaps all we need to do is at add a simple command such as:\nbash\n$ boot2docker map /my/mac/path /var/lib/docker/my/mac/path`\nAnd then you can just do the mappings yourself when using docker:\n$ docker run -d -v /var/lib/docker/my/mac/path:/container/path my-image\nThis would probably tie us over for the short-term until the docker team can come up with a better solution.\nI don't mind whether it happens over nfs or virtualbox guest additions, as long as the end user experience is pleasant.\nI do think this is an important enough feature to have something in the short-term for the major use case of local development from the Mac, particularly for server-centric dev workflow (LAMP stack, etc).\nI have a development team at work and I just want to tell them to use boot2docker for wordpress development, but the lack of a simple mapping mechanism is making this tricky. \nAt the moment I'm having to point them the coreos or stock docker vagrant images because of their synced folder support which is a real shame, because boot2docker is so much a better fit for this use csae in every other respect.\nThoughts?\n. My recommendation at this stage is NOT to use virtualbox synced folders due to a bug which prevents using mmap() working correctly which effectively makes it useless for running most databases, and a lot of software on a shared folder.\nHere's the bug in virtualbox vboxvfs which I discovered yesterday:\nhttps://www.virtualbox.org/ticket/819#comment:55\nnfs works fine. Will test the sshfs as a solution too. Thanks @rimusz!\n. OK. Having played around the sshfs system for a bit (which is great), I think I'm on the side of supporting @aheissenberger's nfs extensions, or at the very least adding nfs to the boot2docker ISO. \nnfs has much higher performance (particularly with udp) in my testing than sshfs, and will allow mmap() which virtualbox synced folders do not due to the previously mentioned bug.\nsshfs is nice, but the /mnt/sda1 is still inherently volatile and more difficult to backup, etc for development workflows. The number of times I've done boot2docker delete and blown away my persistent storage makes this an unsafe place to store development artifacts.\nI don't think we necessarily need to with a full boot2docker cmd option, though that's really nice (and not against it in principle), but at least an easy way to export the Mac's file system into the file system of boot2docker, and then the user can figure the rest out. (See my previous comments).\nThe vagrant file for coreos uses nfs to export the mac's fs into boot2docker. You just have to enter in your root password to do the export, and you're done.\nI think this is the best option until the docker team expose some crazy way for us to export our file systems into the API, which I don't see happening for a long time.\n@steeve I think should you reconsider. Maybe we can just add boot2docker map /my/mac/path or boot2docker share /my/mac/path which would map the local fs into /mnt/sda1/share as a compromise?\nIt would also be nice if there isn't already a way to add some scripts that get run on boot2docker startup and shutdown in ~/.boot2docker so you can put in commands that you can do your mounts automatically, like vagrant does with it's synced folders.\n. OK. Having played around the sshfs system for a bit (which is great), I think I'm on the side of supporting @aheissenberger's nfs extensions, or at the very least adding nfs to the boot2docker ISO. \nnfs has much higher performance (particularly with udp) in my testing than sshfs, and will allow mmap() which virtualbox synced folders do not due to the previously mentioned bug.\nsshfs is nice, but the /mnt/sda1 is still inherently volatile and more difficult to backup, etc for development workflows. The number of times I've done boot2docker delete and blown away my persistent storage makes this an unsafe place to store development artifacts.\nI don't think we necessarily need to with a full boot2docker cmd option, though that's really nice (and not against it in principle), but at least an easy way to export the Mac's file system into the file system of boot2docker, and then the user can figure the rest out. (See my previous comments).\nThe vagrant file for coreos uses nfs to export the mac's fs into boot2docker. You just have to enter in your root password to do the export, and you're done.\nI think this is the best option until the docker team expose some crazy way for us to export our file systems into the API, which I don't see happening for a long time.\n@steeve I think should you reconsider. Maybe we can just add boot2docker map /my/mac/path or boot2docker share /my/mac/path which would map the local fs into /mnt/sda1/share as a compromise?\nIt would also be nice if there isn't already a way to add some scripts that get run on boot2docker startup and shutdown in ~/.boot2docker so you can put in commands that you can do your mounts automatically, like vagrant does with it's synced folders.\n. Thanks @steeve That's awesome news. Love your work! :-)\n. Thanks @steeve That's awesome news. Love your work! :-)\n. I agree. I think this is a nice alternative to keep mapping simple for the\nuser. Good idea.\nOn Tue, Feb 25, 2014 at 9:15 AM, Steeve Morin notifications@github.comwrote:\n\n@olalonde https://github.com/olalonde that's a great idea IMHO\n\nReply to this email directly or view it on GitHubhttps://github.com/boot2docker/boot2docker/pull/154#issuecomment-35946450\n.\n\n\nEugene Ware\nChief Executive Officer\nPhone: +61 3 9955 7041\nEmail: eugene@noblesamurai.com\nTwitter: @EugeneWare http://twitter.com/EugeneWare\nNoble Samurai Pty Ltd\nLevel 1, 234 Whitehorse Rd\nNunawading, Victoria, 3131, Australia\nnoblesamurai.com http://www.noblesamurai.com/ | eugeneware.com |\nfacebook.com/Eugene.S.Ware http://www.facebook.com/Eugene.S.Ware\n. Ok. So this approach maps the docker file system to my mac.\nWhat if I want to do i the other way around? Is there a simple way to do this? \n@rimusz is there an easy way?\n. Thanks @aheissenberger \nWhen I try to map the shared folder into a docker container it's complaining about permissions.\nIs there any magic I need to do to map my mac uid/gid into sshfs space?\n. Thanks @aheissenberger \nWhen I try to map the shared folder into a docker container it's complaining about permissions.\nIs there any magic I need to do to map my mac uid/gid into sshfs space?\n. And, BTW, I love the idea of having sshfs as an option for your awesome script.\n. And, BTW, I love the idea of having sshfs as an option for your awesome script.\n. This is the error message I'm getting:\nbash\ndocker@boot2docker:~$ sshfs -o uid=1000 -o gid=50 eugeneware@192.168.0.55:/Users/eugeneware/Dropbox/work /mnt/share\nPassword:\ndocker@boot2docker:~$ docker run -rm -v /mnt/share:/data -i -t eugeneware/nodejs bash\n2014/02/17 12:07:40 Error: start: Cannot start container 1f90ac52f8aaf9b5faada98c3ff0b2cb145493a5785f576cb4df53f3f9971a91: stat /mnt/share: permission denied\nAny thoughts?\n. This is the error message I'm getting:\nbash\ndocker@boot2docker:~$ sshfs -o uid=1000 -o gid=50 eugeneware@192.168.0.55:/Users/eugeneware/Dropbox/work /mnt/share\nPassword:\ndocker@boot2docker:~$ docker run -rm -v /mnt/share:/data -i -t eugeneware/nodejs bash\n2014/02/17 12:07:40 Error: start: Cannot start container 1f90ac52f8aaf9b5faada98c3ff0b2cb145493a5785f576cb4df53f3f9971a91: stat /mnt/share: permission denied\nAny thoughts?\n. Actually fixed it, you need to run sshfs as root.\nSo should be:\nbash\ntce-load -wi sshfs-fuse\nmkdir /mnt/remote\nsudo sshfs me@192.168.59.1:/Users/me/tmp /mnt/remote/\n. Actually fixed it, you need to run sshfs as root.\nSo should be:\nbash\ntce-load -wi sshfs-fuse\nmkdir /mnt/remote\nsudo sshfs me@192.168.59.1:/Users/me/tmp /mnt/remote/\n. And for mapping into containers you should probably use uid=0,gid=0.\nSo the final steps would be:\nbash\n$ tce-load -wi sshfs-fuse\n$ mkdir /mnt/remote\n$ sudo sshfs -o uid=0 -o gid=0 me@192.168.59.1:/Users/me/tmp /mnt/remote/\n$ docker run -v /mnt/remote:/path/in/container ubuntu bash\n. And for mapping into containers you should probably use uid=0,gid=0.\nSo the final steps would be:\nbash\n$ tce-load -wi sshfs-fuse\n$ mkdir /mnt/remote\n$ sudo sshfs -o uid=0 -o gid=0 me@192.168.59.1:/Users/me/tmp /mnt/remote/\n$ docker run -v /mnt/remote:/path/in/container ubuntu bash\n. Thanks @aheissenberger I'll give it a go!\n. Thanks @aheissenberger I'll give it a go!\n. My own caveat to adding vboxfs is that there's a serious bug with vboxfs at the moment (https://www.virtualbox.org/ticket/819#comment:55) that prevents you doing mmap calls. So if you're trying to run anything that needs to do memory mapped operations using a mapped file system (like most databases, and a lot of software that uses mmap under the hood - eg. apache), then it's a non-starter. \nIt doesn't seem to be high on their list of priorities to fix at the moment. Many people won't have a problem with that, but for a lot of my use cases the only viable option is nfs which I can't wait to be supported as a first-class citizen in boot2docker.\n. ",
    "nbensa": "Hello.\nI can trigger ghost status on Ubuntu hosts too but I can stop/kill the containers and restart them using docker commands.\nYou can trigger ghost status just by killing the docker daemon while at least one container is running. On boot2docker I cannot recover ghost containers using docker commands.\nI've found a way/hack to recover from the ghost status editing the file /var/lib/docker/containers/[c-id]/config.json and change \"Running: true\" to \"Running: false\". I have not had any problems by doing this but of course it is a hack, dangerous, and you should not do it.\nHTH,\nNorberto\n. Maybe it is the LXC version shipped with boot2docker? \nI'm getting unrecoverable ghost status on Ubuntu with LXC 1.0.0~alpha3+master~20131210-1800-0ubuntu1~ppa1~precise1. While with LXC 1.0.0~alpha1-0ubuntu14 (on Ubuntu 13.10) I get Ghost but recoverable with docker stop/start.\nDowngrading LXC on the Ubuntu (precise) host to 0.7.5 (stock version), fixes the problem.\n. I think this one can be closed as I cannot reproduce with b2d 0.5.2 the original bug I experienced when I opened this issue months ago. \n. I think this one can be closed as I cannot reproduce with b2d 0.5.2 the original bug I experienced when I opened this issue months ago. \n. ",
    "SnowRipple": "Same problem, many ghosts that can't be stopped, restarted, killed on ubuntu 13.04\n. ",
    "bkc": "on ubuntu 13.0, aptitude upgrade automatically restarts docker, all containers that were running are now listed as 'ghost' (0.7.5 to 0.7.6)\ndocker stop  either did stop the process, or just thinks it did..\n. ",
    "0ptimus": "Awesome, thanks for letting me know steeve!  Will try to dd v0.3.0 to hard drive :).\n. ",
    "pandrew": "There seem to some support for tc running on ARMv6 (pi) http://www.tinycorelinux.net/4.x/armv6/ . I understand your point on running it from ram. Theres no necessity to run it entirely in ram considering how small boot2docker is it should have no issues being installed on an sd.\n. Go the same panic here. Using the current master boot2docker, and virtualbox 4.3.8 r92456. Ram set to 4GB\n. This issue is resolved in 0.7.0.\n. @SvenDowideit Yes, i can write some docs. There is no difference between this and using kickstart for redhat based systems or preseed for debian in fact this is the way you kickstart archlinux. You could restart docker daemon with other parameters using a script.\n@steeve Regarding the security; if you would boot this in an unknown network using boot from network there is a potential risk that someone could give you a malicious link to execute. For example if you are booting from lets say a wireless network you do not own. \n. There where some issues with pushing. I will make a clean PR with docs rebased from master. Closing this for now.\n. Ping @steeve @SvenDowideit @tianon \n. If i can get the script working with whatever shell b2d is currently using i might be able to fix it. Not sure i will be able to fix it today but i will see what i can do.\n. Maybe an uninstall option would be great to have implemented in the installer?\n. If you create a user in boot2docker vm and destroy it the data is gone. There should be minimal work with the boot2docker environment for obvious reasons ---> docker. At most you would be interested in changing the password for docker user. Hacks have been made to share data between container and host. see https://github.com/SvenDowideit/dockerfiles/tree/master/samba Please describe your issue further if i'm on the wrong path of what your trying to solve.\n. There is plenty of issues discussing adding secrets to docker plz see dotcloud/docker/pull/6075 I believe the issue is in how we should implement adding secrets in docker and solving it would solve the issue you're experiencing in b2d as well. My suggestion is that you build a PR and we can all try it out and if its of interest it might be merged. I cant promise you anything but at least it's a start.\n. Does it depend on python? If so do we want to add it?\n. Does it depend on python? If so do we want to add it?\n. Documentation: https://github.com/boot2docker/boot2docker/blob/da830ef9abb9b949d9252affd2127dfd646b2993/doc/AUTOMATED_SCRIPT.md\nAutomated script\nOverview\nThe document describes the \"automated script\" functionality and some use cases. I assume \nyou have basic knowledge of iPxe/pxe booting. Please see the following link for more documentaion regarding iPxe:\nhttp://ipxe.org/\nSummary\nAutomated script allows you to run an arbitrary script as a boot parameter. The script \nparses /proc/cmdline for script variable and download the script if its either\nan ftp or http uri. This method is used by Archlinux to install unattendedly. Please see the\nfollowing link for reference:\nhttps://projects.archlinux.org/archiso.git/tree/configs/releng/airootfs/root/.automated_script.sh \nUsecase\nLets say you want to run boot2docker on multiple physical machines and you want run hashicorp/consul\non all machines. You boot the machine via ipxe and add script as a parameter. The script you\nuse could take information from the host as an identifier and announce itself using that information.\nExtracting initrd and vmlinuz64\nYou mount the iso and the files are located in /boot.\nExtracting boot parameters\nExtracting the parameters and adjusting these will help you boot and provision using iPxe. It will also\nhelp you understand how boot2docker is being run currently.\nroot@896569876a97:/# cat /proc/cmdline\nloglevel=3 user=docker console=ttyS0 console=tty0 noembed nomodeset norestore waitusb=10:LABEL=boot2docker-data base initrd=/boot/initrd.img BOOT_IMAGE=/boot/vmlinuz64\niPxe example\n```\n!ipxe\nset script http://192.168.3.3:4321/repo/script.sh\nset append loglevel=3 user=docker console=ttyS0 console=tty nomodeset norestore base script=${script}\nset kernel http://192.168.3.3:4321/repo/vmlinuz64\nset initrd http://192.168.3.3:4321/repo/initrd.img\nimgfree\nkernel ${kernel} ${append}\ninitrd ${initrd}\nboot\n``\n. Got it. Closing this.\n. Yes it seems so. I want to be able to tell boot2docker which drive to prepare asboot2docker-data`. That way i can tell it to use the raid and not the system disk. The raw string seems to be virtualbox specific so preparing a specific drive must be done manually. \nThe issue is easier to resolve if there is just one drive, as an example; lets say we don not have system drive but either boots from usbkey or pxe we could tell it to prepare and use the first drive we find that is not the boot medium with the label: boot2docker-system where system is the label of usbkey\nGpt partitions allows using drives larger than 2TB, which can be seen mostly on RAID systems. boot2docker cant handle these types of drives and prepare it to be used for docker.\n. Double brackets are syntax specific for ksh,bash and zsh so it works on both bsd and linux. Single bracket is probably pointing to /bin/[ on the system and is not the same for all *nix type systems. This means that the might break if you run your script on linux and want to move it to bsd system.\n. ",
    "hlev": "I appreciate this is a closed issue, but as others (Resin, hypriot) seem to have pulled off Docker on the RPi, has this been ever revisited? \n. I see, understandable. Thanks for the prompt response!\n. I see, understandable. Thanks for the prompt response!\n. ",
    "dominikborkowski": "Another data point: the disk image will automount once the following actions are taken:\n1) reboot\n2) sudo /etc/rc.d/automount\n3) sudo /etc/rc.d/docker restart\n4) docker pull ubuntu\nIt seems that it won't get automounted until it's populate.\n. ",
    "mattapperson": "Having the same issue... also looking into it...\n. +1 even if it only worked to an extent\n. @durdn it says on their (the vagrant) site \"Perhaps Chef, Puppet, etc. but not strictly required.\"\n. ",
    "unclejack": "ping @steeve\n. @proppy Yes, but debian2docker needs contributions as well, even if they're just bug reports or feature requests.\n. I'm building boot2docker now to test this PR.\n. ping @tianon @SvenDowideit \n. ",
    "boffbowsh": "Chef and Puppet would not be required - it's not a requirement of Vagrant base boxes to support Chef and Puppet.\n. ",
    "durdn": "@boffbowsh I actually copied the bullet list of requirements from the official documentation on Vagrant base boxes as it mentions: \"The above are absolutely required of a base box in order to work properly with Vagrant\". \nBut I am also puzzled by that and it would be cool if they could be skipped.\n. Awesome @steeve thanks for the update! \n. @mitchellh Fantastic Mitchell. I want to give this a go. Definitely keep me posted if you publish the Packer templates.\n. ",
    "mrmurphy": "\nfeels ^\n. ",
    "mitchellh": "I just want to chime in on this. I think using Docker as client to a raw B2D VM is fantastic. \nBut for those who want it, it should be very easy to make a B2D base box: you just have to modify the bootsync.sh to add the Vagrant public key: https://github.com/mitchellh/vagrant/tree/master/keys\nThen just package it up. I did this locally and it works and its super fast (vagrant up to b2d takes maybe 5 seconds). The process is a little crap right now (my problem, not b2d) because building the ISO has a bootstrapping problem, but I think if I have free time I should be able to solve that. I already have Packer templates to automate all this so hopefully I can publish something that is pretty push-button.\n. Done, here you go: https://github.com/mitchellh/boot2docker-vagrant-box\n:)\n. Done, here you go: https://github.com/mitchellh/boot2docker-vagrant-box\n:)\n. @teohm It doesn't, because Tiny Core Linux doesn't have VirtualBox guest additions support. If you use Vagrant with something like an Ubuntu VM, though, Vagrant will automatically install Docker for you and shared folders work just fine.\n. @teohm Again, assuming you use a heavier OS like Ubuntu or install some of pre-reqs on your own, Vagrant will do all this for you. Vagrant as it is released now supports VirtualBox shared folders, VMware shared folders, and NFS (host to guest). If you have any of those, it will automatically set them up.\nThe next version of Vagrant will support rsync, plain old SCP listening for file changes, and guest-to-host NFS (much better performance), at the least. \nAgain, Vagrant will configure these and run them all for you. The easiest thing to do to get started is probably just use Ubuntu with this, but with proper configuration, Vagrant should be able to also automatically configure b2d to have these, too.\n. @steeve VirtualBox shared folders would be a good starting area. You'll find quickly that the performance is ABYSMAL, however, and that'll affect utility of b2d. With only a few thousand files (Rails projects), the load time can be multiple orders of magnitude (I've seen 100x on large projects) slower than native. NFS brings this down considerably. NFS guest-to-host is VERY good.\nI'll try to help you out here... I'll ping you and this thread when I have something to show.\n. I may have been misunderstood. I didn't ask you to include a publicly known SSH key. Actually, the latest versions of the repo I have just does that for backwards compatibility but it actually isn't necessary anymore (we just put it in the \"box\" format that Vagrant understands, we don't modify the binary at all actually).\nI'm just asking to include in the README for those interested in executing it that way, that that option exists.\n. ",
    "parente": "+1 I have a hacky script that does this using the CoreOS Vagrantbox. Having something that boots even faster would be great.\n. @brandonparsons I had to attach the drive, boot boot2docker, fdisk to create a partition table on it, format it as ext4, and then reboot. Upon reboot, it was mounted as /var/lib/docker.\nSomething like:\nbash\nsudo -s\nfdisk /dev/sda\nn    # new primary partition\n1   # first partition\nEnter  # default start\nEnter  # default end\nw  # write partition table and quit\nmkfs.ext4 /dev/sda1\nreboot\n. @brandonparsons I had to attach the drive, boot boot2docker, fdisk to create a partition table on it, format it as ext4, and then reboot. Upon reboot, it was mounted as /var/lib/docker.\nSomething like:\nbash\nsudo -s\nfdisk /dev/sda\nn    # new primary partition\n1   # first partition\nEnter  # default start\nEnter  # default end\nw  # write partition table and quit\nmkfs.ext4 /dev/sda1\nreboot\n. ",
    "bfirsh": "It would be fantastic to have boot2docker working with Vagrant so we can use it with https://github.com/noplay/docker-osx . At the moment we're using an Ubuntu image which is ridiculously large.\n@mitchellh \u2013\u00a0have you got a Packer script you can share?\n/cc @josephschorr\n. It would be fantastic to have boot2docker working with Vagrant so we can use it with https://github.com/noplay/docker-osx . At the moment we're using an Ubuntu image which is ridiculously large.\n@mitchellh \u2013\u00a0have you got a Packer script you can share?\n/cc @josephschorr\n. :-1: a wrapper script. Loads of discussion about this here: https://github.com/noplay/docker-osx/issues/25\nThough setting DOCKER_HOST is a good idea. With docker-osx, you run docker-osx shell it opens a new shell with DOCKER_HOST set. I'm not sure I like this though\u00a0\u2013\u00a0I keep on forgetting to open a shell. It either needs to make it really clear that it is a magical Docker shell, or maybe it could set the env var automatically with launchd or something like that.\nI wonder how other OS X tools handle stuff like this? Does homebrew set env vars I wonder?\n. :+1:\nThe default location being ~/.boot2docker makes a whole load of sense.\n. :+1:\nThe default location being ~/.boot2docker makes a whole load of sense.\n. Virtualbox shared folders are very slow though. I'd much get NFS (or similar) working which doesn't need the Virtualbox guest additions.\n. #284 looks like it might help with this.\n. @aheissenberger As well as having a predictable IP address, it's also useful to have the VM on a memorable domain name.\n. Then, unfortunately, you get unpredictable port numbers, which is almost as bad as having to remember an IP address.\n. \"Now you need have a virtual box port forwarding setting which does bind 8080 to 8080 on your host running the VM.\" \u2013\u00a0that's the problem.\nWith docker-py, you don't need to do any manual work to get that. If I expose port 8080 to the Docker VM, then I can just type http://localdocker:8080 into my browser to access it.\nMaybe I'm not explaining myself properly \u2013\u00a0I'm thinking of this in context of development environments, where stuff needs to be available on a predictable host and a predictable IP without without any of the hassle of port forwarding, etc.\n. To paint a bikeshed, I wonder if boot2docker as the hostname might be easier to comprehend. One less thing to understand.\n. To paint a bikeshed, I wonder if boot2docker as the hostname might be easier to comprehend. One less thing to understand.\n. I'm going to give a +1 to #93 and -1 for this. There's no need to wrap the docker command with #93, and it feels far, far less fragile. (What happens on reboot, etc.)\n. I'm going to give a +1 to #93 and -1 for this. There's no need to wrap the docker command with #93, and it feels far, far less fragile. (What happens on reboot, etc.)\n. This  is being worked on here: https://github.com/steeve/boot2docker/pull/93\n. This  is being worked on here: https://github.com/steeve/boot2docker/pull/93\n. Is pause of any use? Perhaps there just needs to be one Vagrant-style command - \"suspend\".\n. As @SvenDowideit says, if you're in the extremely unlikely case where you need to pause, you can probably figure out how to do it with vbox. There seems to be little need for both - the main thing it will do is confuse users.\n. :+1:\nHopefully this means we can use boot2docker for Fig. (See https://github.com/orchardup/fig/issues/26)\n. @steeve @SvenDowideit What is the status of this? What is missing to get it merged that I could work on?\nI can imagine there also being something added to boot2docker-cli to mount directories (ideally automatically?).\n. @steeve @SvenDowideit What is the status of this? What is missing to get it merged that I could work on?\nI can imagine there also being something added to boot2docker-cli to mount directories (ideally automatically?).\n. It'll be great to get that included, but don't we need something in the meantime? What practical solutions are there right now to get development environments working?\n. Though it isn't possible to share a directory on the host filesystem with a container using that method, is it? That is what you want to do in development without it being impractical.\n. @steeve @SvenDowideit What's the status of this?\n. Alright, here's a new build, rebased on master: https://bfirsh.s3.amazonaws.com/boot2docker/boot2docker-1.3.0-fd99db6.iso\n. Can we support cloudinit?\n. Looks like this is worth getting in for 1.8.\n. ",
    "deinspanjer": "Someone else mentioned in a blog post the possibility of using 9P and diod as an alternative to NFS..\n. So is there still further development work to be done here or is it just pending merge?\nThe user guide for OSX on the Docker site suggests the following script to set up dynamic port forwarding:\nfor i in {49000..49900}; do\n VBoxManage modifyvm \"boot2docker-vm\" --natpf1 \"tcp-port$i,tcp,,$i,,$i\";\n VBoxManage modifyvm \"boot2docker-vm\" --natpf1 \"udp-port$i,udp,,$i,,$i\";\ndone\nI created a script called boot2docker-fwd that lets you create specific custom forwards or the brute force method described above:\nhttps://gist.github.com/deinspanjer/9215467\n. Okay, I asked because the feedback was mostly positive and the PR was still open.  If it won't be incorporated, but the PR just hasn't been closed yet, that is fine.\n. ",
    "dduportal": "I got a vboxsf from @steeve one : https://vagrantcloud.com/dduportal/boot2docker\n(Built from https://github.com/dduportal/boot2docker-vagrant-box)\n. I got a vboxsf from @steeve one : https://vagrantcloud.com/dduportal/boot2docker\n(Built from https://github.com/dduportal/boot2docker-vagrant-box)\n. :+1: Because running docker on a constrained dev windows env is pretty straightforward. Bringing boot2docker with vboxsf will ease all ! (Replacing an ubuntu ~700 Mo base box by boot2docker will change all user experience and adoption ! )\nThanks for implementing this !\n. @steeve @samalba i tried to build a vagrant box with boot2docker inside (Goal : running this into a Windows env).\nI used the @mitchellh repository for building my basebox (https://github.com/mitchellh/boot2docker-vagrant-box), using the iso pointed by @steeve in https://github.com/boot2docker/boot2docker/pull/284.\nIt seems that Vagrant use these commands for mounting shared folder inside the VM :\nmount -t vboxsf -o uid=`id -u docker`,gid=`getent group docker | cut -d: -f3` /home/docker /home/docker\nmount -t vboxsf -o uid=`id -u docker`,gid=`id -g docker` /home/docker /home/docker\nBut it works when mounting manually (while vagrant has auto-configured the VBox mount, i just had to run a sudo mount -t vboxsf with basic parameters) :+1: \nThe vagrant error came from getent binary (http://man7.org/linux/man-pages/man1/getent.1.html) isn't installed so from here, two roads :\n- Pull requesting Vagrant for managing vbox sharedfolder for Tiny Core Linux guests (https://github.com/mitchellh/vagrant/tree/master/plugins/guests/tinycore) : aiming at using a simpler mount command\n- Installing getent into boot2docker from boot2docker-vagrant project (i understand this is not the philosophy of boot2docker, so moving it appart seems the \"right\" decision).\nWhat do you think about it ?\nIs there any plan for docker / boot2docker from Windows as light as possible ?\n. Here is a working version for building a vagrant basebox with vboxsf by default for /vagrant mount : https://github.com/dduportal/boot2docker-vagrant-box/tree/1a92a02eb8839d5210df044e9553f5f06e098090.\nIt works very well !\n. Hi, I got another use case with my Windows configuration : i need to build my containers on this windows, for testing purposes (of my app).\nConcrete example :\n- Checkout a repo with a basic  project inside from windows (yeah, we got cool GUI for editing and \"gitting\")\n- Build the \"container-app\" (e.g. docker build with  build commands (nom for node, mvm for java, etc.) from the source code\n- Run the freshly built container.\n=> How to proceed with data container ?\n. Just in case of, see my vagrant box : https://vagrantcloud.com/dduportal/boot2docker .\nIt combines both of two worlds : vagrant for command line workflow homogenous, virtual box portability. it's another way to achieve these goals. (be carefull : vbox shared folder are slooooow and given that my basebox is based upon official b2d image on Docker index, i'll always have a version late from the official iso) :-)\n. @gansbrest : http://mitchellh.com/comparing-filesystem-performance-in-virtual-machines \nYes\n. Hello @ehernandez-xk !\nThis is due to a regression in Vagrant, from 1.8.5 until 1.8.5 included:\n- Issue: https://github.com/mitchellh/vagrant/pull/7683\n- Pull request: https://github.com/mitchellh/vagrant/pull/7720 (merged on master)\n- It should be fixed in next version: https://github.com/mitchellh/vagrant/blob/master/CHANGELOG.md#next-version-unreleased\nFor now, I strongly recommend you to stay on Vagrant 1.8.1 and VirtualBox 5.0.x line, since Vagrant support of VBox 5.1.x landed on... vagrant 1.8.2...\n. Tried with :\n- sudo call with docker cli\n- --privileged option for docker run\n- ubuntu image for container instead of debian\n- Centos host with docker 0.9.x\n- Centos host with docker 0.10.0\nended up with same results : seem to be docker 0.10 related stuff.\nDo you confirm that ?\n. Tried with :\n- sudo call with docker cli\n- --privileged option for docker run\n- ubuntu image for container instead of debian\n- Centos host with docker 0.9.x\n- Centos host with docker 0.10.0\nended up with same results : seem to be docker 0.10 related stuff.\nDo you confirm that ?\n. Yeah, confirmed that works.\nDefinitively an container-OS related problem (debian/ubuntu family at least with their softlink).\nThanks !\n. Yeah, confirmed that works.\nDefinitively an container-OS related problem (debian/ubuntu family at least with their softlink).\nThanks !\n. Seems related to this existing issues in boot2docker :\n- https://github.com/boot2docker/boot2docker/issues/407\n- https://github.com/boot2docker/boot2docker/issues/431\nFrom the Docker point of view, i found these things around the init.d-style docker scripts https://github.com/docker/docker/issues/6184 : this issue is around the race conditions. It references :\n- This PR - https://github.com/docker/docker/pull/6185/files - which dedicate a pid file to docker and another to the start-stop-daemon (the mecanism which role is to launch the docker daemon), in order to not mess around.\n- This PR - https://github.com/docker/docker/pull/5844/files - which add a crappy \"while sleep wait loop \" but \"good enough\"  solution.\nI'll try to test the first, and eventually the second in the init.d script, in order to have a solution.\nIf anyone is aware (i'm not the best at these things) to a \"good method\", i'm really interested to learn and implements.).\ncc @tianon @steeve @SvenDowideit @jpetazzo \n. @SvenDowideit WiP :-)\n. cc @tianon : at first try, what you provide secures the start, but not the restart, i got the same error. i'll try to play with the multiple tries when stoppin, before kill purely the docker daemon, with a but of configuration.\n. This my current version : \nhttps://github.com/dduportal/boot2docker/blob/fix_docker_init_script/rootfs/rootfs/usr/local/etc/init.d/docker , forked from latest master of boot2docker.\nThree improvements: \n- Tianon proposal for securing the start\n- A new getPid function which can detect an orphaned docker daemon (used with check and stop...)\n- An aggressive kill if docker daemon could not stop. This is tunable from /var/lib/boot2docker/profile with a dedicated variable. The idea is to loop N times, sleeping 1s. At each iteration, it will check if docker is already running.\nI'm building a custom ISO for easying tests, but i provide you my first try to have advices.\n. Yep already done : https://github.com/boot2docker/boot2docker/issues/489 (sorry, forgot to comment here)\n. Rebased ;)\nSorry for the delay, i had to learn how to pull-request / rebase.\nTell me if there is some things missing it the latest version of the PR (Github tells me thats it can be automatically merged now, so i guess it's OK)\n. @SvenDowideit  thanks for the tip, i'll use it at the next commit for the PR :)\n@tianon : yep i know that TCL doesn't handle these daemons things like debian families. Inside b2d, i found the  start-stop-daemon, located in the /usr/bin folder, and it made me fought that it was available under TCL. \nI really think that my PR is bad \"as-it\". You can close it, i'll re-open it only if i can find a cleaner solution.\nI'm thinking about :\n- Create a reproduction case, runnable outside of my company. It'll be a functional test for non-regress in the future, and be sure we spoke the same language (because re-reading my comment show me that i'm a bit dark in my descriptions :) )\n- Trying to separate the pid files between Docker and the init.d script (whatever daemonization method used), and test it\n- Eventually, dig onto the /usr/bin/start-stop-daemon to stretch to a debian-like thing.\nMy 2-cent question : is systemd portable to TCL ?\n. Step 1 : reproduction.\nHere is a gist with a fig project i use. The project used Vagrant + my b2d box, but the gist reproduce on a vanilla boot2docker (Mac OS 10.9.2).\nhttps://gist.github.com/dduportal/69f42de4bd4fa4095241\nCan you reproduce on your side ?\nI don't have the \"docker -d\" process alone, i suppose that docker 1.2.0 brought some new things. I'll try with my company project next week with the new b2d + docker.\n. Cool, i 'm in :)\nI won \u00b4t be able to try/test until next week for info.\n. Hi, sorry, no time due to some illness. I'll manage some tries this week :-)\n. Hi, sorry, no time due to some illness. I'll manage some tries this week :-)\n. WiP :\n- First Naive try (yep i like to begin like a beginner) : https://raw.githubusercontent.com/docker/docker/master/contrib/init/sysvinit-debian/docker =>\nroot@boot2docker:/etc/init.d# ./docker status\n./docker: .: line 35: can't open '/lib/lsb/init-functions'\n=> We are not on debian system, so we need to refactor the script.\n- This command launch successfully the Docker Daemon :\nstart-stop-daemon --pidfile /var/run/docker-ssd.pid --exec /usr/local/bin/docker --background --make-pidfile -S -- -d -D -g \"/var/lib/docker\" -H unix:// -H tcp://0.0.0.0:2375\nJust have to implement.\nRewriting is currently running...\n. WiP :\n- First Naive try (yep i like to begin like a beginner) : https://raw.githubusercontent.com/docker/docker/master/contrib/init/sysvinit-debian/docker =>\nroot@boot2docker:/etc/init.d# ./docker status\n./docker: .: line 35: can't open '/lib/lsb/init-functions'\n=> We are not on debian system, so we need to refactor the script.\n- This command launch successfully the Docker Daemon :\nstart-stop-daemon --pidfile /var/run/docker-ssd.pid --exec /usr/local/bin/docker --background --make-pidfile -S -- -d -D -g \"/var/lib/docker\" -H unix:// -H tcp://0.0.0.0:2375\nJust have to implement.\nRewriting is currently running...\n. OK, script modified, i'v built this image in the Docker Hub : https://registry.hub.docker.com/u/dduportal/boot2docker/builds_history/52877/\nfor testing.\nI'm launching my auto-tests, but manually it was good for me.\n. OK, script modified, i'v built this image in the Docker Hub : https://registry.hub.docker.com/u/dduportal/boot2docker/builds_history/52877/\nfor testing.\nI'm launching my auto-tests, but manually it was good for me.\n. Hi !\nI tried to squash the commits with an itneractive rebase, but git complained that some patches could not be applied. I tried a manual merging with a lot of git rebase --continue and i pushed that, but the PR seems to ref all my commits :-(\nHave you a solution for the git newbie i am or should i just create another branch from your master, and just add the latest changes (maybe simpler ? )\n. OK, i'v done another PR with a cleaner history, forked from recent master. It'll be simpler for you : https://github.com/boot2docker/boot2docker/pull/535\nIt embed the latest correction that @tianon told me (the var $DOCKER_ARGS not reused which would have been result in code duplication.) \n. Same here. It makes impossible b2d to build itself :(\n. My bad, it works with the formatting /dev/sda1 partition :)\nThanks a lot !\n~~@SvenDowideit yep but i don't understand what's wrong.~~\n~~I used the Mitchellh's vagrant box for boot2docker:https://github.com/mitchellh/boot2docker-vagrant-box ~~\n~~Briefly, this is a default virtualbox VM (i don't user vmware nor parallels), in default VM (so a HDD of 40 Gb is attached) as Linux_64 type.~~\n~~The only command done by packer is ~~\n~~=> it seems to be the \"unusual way\" you are talking about.~~\n~~But, trying to format in classical way, as the boot2docker documentation says for the persistent partition, i got that : ~~\n~~=> throwing an error that no sda1 found. OK because i haven't formatted the partition, the disk is raw.~~\n~~No problem :~~\n~~=> it resultst in the same error when built, with the 42 layers :(~~\n~~How do you configure, in the default b2d with virtualbox, the persistent disk ? (I cannot see the diff, but i want to see where in order to note having to switch to btrfs :) ) Thanks !~~\n. That's a good job !\nOne point to (maybe?) help you : while it's perfectly working with vagrant (see my custom vagrant image, based on the previous work - http://vagrantup.com/dduportal/boot2docker), we should throw an eye on how vagrant did it on Windows ?\n. Just one thing : do we have a repo to embed non regression tests ?\n. Yep seems legit. I don't if i'll got times until the next docker release, see ya this we if can get trough.\nAnyway, thx for the responses\n. @tianon OK, first try with the check at the beginning of start + only the ps parsing logic.\nBasic testing OK : \n```\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is not running\nroot@boot2docker:/etc/init.d# docker ps\n2014/10/14 14:57:20 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\nroot@boot2docker:/etc/init.d# ./docker start\nDevice \"eth1\" does not exist.\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\n\nGenerating CA cert\n2014/10/14 14:57:24 Generating a new certificate authority.\nrm: can't remove '/var/lib/boot2docker/tls/server.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls/serverkey.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls/cert.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls/key.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls//hostnames': No such file or directory\nGenerate server cert\n/usr/local/bin/generate_cert --host=boot2docker,127.0.0.1,10.0.2.15 --ca=/var/lib/boot2docker/tls/ca.pem --ca-key=/var/lib/boot2docker/tls/cakey.pem --cert=/var/lib/boot2docker/tls/server.pem --key=/var/lib/boot2docker/tls/serverkey.pem\n2014/10/14 14:57:26 Generating a server cert\nGenerating client cert\n2014/10/14 14:57:30 no --host parameters, making a client cert\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is running\nroot@boot2docker:/etc/init.d# docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nroot@boot2docker:/etc/init.d# ./docker restart\nDevice \"eth1\" does not exist.\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\n\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is running\nroot@boot2docker:/etc/init.d# docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nroot@boot2docker:/etc/init.d# ./docker stop\nroot@boot2docker:/etc/init.d# docker ps\n2014/10/14 14:58:14 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is not running\nroot@boot2docker:/etc/init.d#\n```\nbut when i'm trying this workflow, it's not OK :\n- Start b2d\n- Pull a big image\n- CTLR-C while pulling, and launchign a docker restart\n```\ndocker@boot2docker:/mnt/sda/tmp/wp-docker$ docker pull centos:centos6\nPulling repository centos\n\nCTRL-C \ndocker@boot2docker:/mnt/sda/tmp/wp-docker$ sudo /etc/init.d/docker restart\nerror: Docker daemon is already running; please stop it first\n```\n\n(I assume that when Docker finished to pull, re-running the restart will work).\nI think that, altough the \"start-stop-daemon solution + ssd_pid_file\" is not the simpler, it's the one which reuse daemon init logic and protect us against weird bugs ?\n. @tianon OK, first try with the check at the beginning of start + only the ps parsing logic.\nBasic testing OK : \n```\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is not running\nroot@boot2docker:/etc/init.d# docker ps\n2014/10/14 14:57:20 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\nroot@boot2docker:/etc/init.d# ./docker start\nDevice \"eth1\" does not exist.\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\n\nGenerating CA cert\n2014/10/14 14:57:24 Generating a new certificate authority.\nrm: can't remove '/var/lib/boot2docker/tls/server.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls/serverkey.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls/cert.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls/key.pem': No such file or directory\nrm: can't remove '/var/lib/boot2docker/tls//hostnames': No such file or directory\nGenerate server cert\n/usr/local/bin/generate_cert --host=boot2docker,127.0.0.1,10.0.2.15 --ca=/var/lib/boot2docker/tls/ca.pem --ca-key=/var/lib/boot2docker/tls/cakey.pem --cert=/var/lib/boot2docker/tls/server.pem --key=/var/lib/boot2docker/tls/serverkey.pem\n2014/10/14 14:57:26 Generating a server cert\nGenerating client cert\n2014/10/14 14:57:30 no --host parameters, making a client cert\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is running\nroot@boot2docker:/etc/init.d# docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nroot@boot2docker:/etc/init.d# ./docker restart\nDevice \"eth1\" does not exist.\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\n\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is running\nroot@boot2docker:/etc/init.d# docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nroot@boot2docker:/etc/init.d# ./docker stop\nroot@boot2docker:/etc/init.d# docker ps\n2014/10/14 14:58:14 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\nroot@boot2docker:/etc/init.d# ./docker status\nDocker daemon is not running\nroot@boot2docker:/etc/init.d#\n```\nbut when i'm trying this workflow, it's not OK :\n- Start b2d\n- Pull a big image\n- CTLR-C while pulling, and launchign a docker restart\n```\ndocker@boot2docker:/mnt/sda/tmp/wp-docker$ docker pull centos:centos6\nPulling repository centos\n\nCTRL-C \ndocker@boot2docker:/mnt/sda/tmp/wp-docker$ sudo /etc/init.d/docker restart\nerror: Docker daemon is already running; please stop it first\n```\n\n(I assume that when Docker finished to pull, re-running the restart will work).\nI think that, altough the \"start-stop-daemon solution + ssd_pid_file\" is not the simpler, it's the one which reuse daemon init logic and protect us against weird bugs ?\n. Just to let you know i'v rebased the PR, i need to test again if it's always needed today\n. Just to let you know i'v rebased the PR, i need to test again if it's always needed today\n. This PR - https://github.com/boot2docker/boot2docker/pull/831- have corrected my problem in a simpler way :)\n. Proposal of @josephpage and me for generating (quickly ?) a fig official docker image, while waiting for the \"Docker groups\" proposal implementation : https://github.com/docker/fig/pull/619#issuecomment-63644486\n. Proposal of @josephpage and me for generating (quickly ?) a fig official docker image, while waiting for the \"Docker groups\" proposal implementation : https://github.com/docker/fig/pull/619#issuecomment-63644486\n. Just to let you know that this PR : https://github.com/boot2docker/boot2docker/pull/748 maybe a big help for the future : it will make boot2docker a full 64 Bits OS (user and kernel), leaving possibility to embed docker-compose\n. Hello !\nYou have to keep in mind that :\n- The docker-compose binary is a self-embeded python interpreter with the application and dependencies. Some are statically compiled, other are not => context dependent.\n- While the pip install option will take care of getting the dependency stack for you, on the contexte you are running. \nOn the boot2docker side :\n- boot2docker < 1.7.0 Old versions have a 32-bits userspace, that make the default docker-compose binary not running by default. The solution proposed by @edmorley to have it inside the VM is a working one, while it have to be written in /var/lib/boot2docker/bootlocal.sh in order to persist across reboots. (Idea of boot2docker as a \"transparent hypervisor\" explains why until today, there is no python/deps/pip/docker-compose embedded. \n- boot2docker >= 1.7.0 The future : have a 64-bits userspace (See https://github.com/boot2docker/boot2docker/pull/854 which has been merged on master AFTER 1.6.2 release ). So docker-compose binary works out of the box. Maybe we can propose to install compose inside as a \"docker official part\" now that it isn't fig anymore ?\nOn Windows side using boot2docker as a remote Docker Engine :\n- You can use for now the container based solution, the behaviour of caching was corrected (TL;DR; vbox shared folder with sendfile is bad. Recent moving to linux alpine with shared folder use sendfile. Getting rid of alpine for now while waiting for docker 1.7.x to introduce new volume sharing system). See https://github.com/dduportal-dockerfiles/docker-compose/issues/7#issuecomment-111801938\n- Docker-compose can theoretically be built under Windows. Since i'm not a python guy, i'm not sure how to exactly do that, but getting a 64 bits python dev + pip inside Windows would be a great beginning ? \nThe sharing folder part may also be improved when playing in remote mode with Docker 1.7.0 : https://github.com/docker/docker/blob/v1.7.0-rc3/CHANGELOG.md#170-2015-06-16\nHope it helps\n. Just added a PR for that : https://github.com/boot2docker/boot2docker/pull/932\n. @afressancourt we'll talk about that these days at work, but i think i'll manage to help on the vboxsf part, as i've managed it in the past with my dduportal/boot2docker vagrant box.\n. @afressancourt we'll talk about that these days at work, but i think i'll manage to help on the vboxsf part, as i've managed it in the past with my dduportal/boot2docker vagrant box.\n. @frapposelli : sorry, i forgot to comment here, i think i'm not skilled enough for recompiling vbox (it seems related to dbus).\nAnyway, the PR does not seems to be in-sync with master : we shoudl give another try (for me, around this friday)\n. Sorry also on my side, didn't have enough time due to personnal stuff :(\nBut i think we'll need help around the vbox compilation on TCL x64...\n. ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.6.1, build 64b : 8b823eb - Wed May 13 10:54:35 UTC 2015\nDocker version 1.6.1, build 97cd073\ndocker@boot2docker:~$ sudo su -\nBoot2Docker version 1.6.1, build 64b : 8b823eb - Wed May 13 10:54:35 UTC 2015\nDocker version 1.6.1, build 97cd073\nroot@boot2docker:~# curl -L https://github.com/docker/compose/releases/download/1.2.0/docker-compose-`un\name -s`-`uname -m` > /usr/local/bin/docker-compose\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   401    0   401    0     0    719      0 --:--:-- --:--:-- --:--:--   718\n100 5140k  100 5140k    0     0  1349k      0  0:00:03  0:00:03 --:--:-- 2144k\nroot@boot2docker:~# chmod +x /usr/local/bin/docker-compose\nroot@boot2docker:~# exit\ndocker@boot2docker:~$ docker-compose --version\ndocker-compose 1.2.0\nLGTM also !!\nTried to eat our own dog food : this boot2docker 64 bits can build itself also.\n. Hello !\nYou're right when talking about \"advanced\" user whom masters the data volumes.\nIn that case, target is \"beginners\" and \"basics\" users if docker who has not yet (or do not need) to think about complex filesystems path and bindings :)\nAlso, since there is no \"official\" docker-compose image, i'm not fan of pushing a personnal one : it does not bring enough quality insurance on my mind.\nThis was the philosophy of this PR, but maybe it will add more confusion also.\nBut anyway it is just a proposal. Thank for your time !\n. Updated to take in account compose 1.3.1 (https://github.com/docker/compose/releases/tag/1.3.1)\n. @tianon Yep, you're right, as @lmakarov stated, docker-compose should be run from the client outside boot2docker :)\nThis is why I propose this PR : for now, since docker-compose for Windows is not a reality, it will help user to begin with, without suffering :)\nAnother thing is the volume sharing which is a pain. The new Docker plugins may help, but the conceptual problem the user have still exists : I want to share the volumes from C:\\bla to /app in the data container\".\nThe idea of the PR will help user to begin softly, with a docker-engine path visibility, again the time that -v will be fully supported.\nWhen the 2 things would have been implemented, i'll be the first the PR to remove the docker-compose binary :\n- For achieving full transparent hypervisor concept with a ligthweight boot2docker\n- Push user to understand the volume implications\n- Follow you, Docker maintainers, state of mind by using client / side Docker that take advantages of API\nAnyway, thank for your time :)\n. Just a note here : since docker-compose is now supported in Windows, it does not make sense to pre-install inside boot2docker now :)\nSo : closing the MR !\n. Hello @ghahramani , given:\n- The future of boot2docker (that should be dumped in the future, or change a lot)\n- The stabilization of docker-compose patterns uses (e.g. using docker-compose and docker-cli outside boot2docker)\nI closed the PR because it did not make any sense, especially regarding the time investment to maintain compose version while it is already packaged on docker-toolbox.\nIn your case, if you strongly need docker-compose inside boot2docker, you should build you own boot2docker to ensure control of this behavior. \n. Hello @ghahramani , given:\n- The future of boot2docker (that should be dumped in the future, or change a lot)\n- The stabilization of docker-compose patterns uses (e.g. using docker-compose and docker-cli outside boot2docker)\nI closed the PR because it did not make any sense, especially regarding the time investment to maintain compose version while it is already packaged on docker-toolbox.\nIn your case, if you strongly need docker-compose inside boot2docker, you should build you own boot2docker to ensure control of this behavior. \n. My bad, bad text editor configuration.\n. It seems thats not enough. maybe we should take more time to understand the behaviour i encounter.\nThe problem in my case is that the original Docker daemon never stop, it never releases the sockets, resulting in a broken boot2docker.\nI tought too the \"kill -9\" option is very agressive and uncommon. I'm not sure where to go : using start_stop_daemon like in the debian/redhat-sysv systems ?\n. My bad : it's just a miss, i forgot to re-use the var. i'm going to correct that.\n. In fact, i tried some ps  manually on my command line in b2d 1.2.0, and the exit code was always 0.\nI checked the ps help and it seems that the embeded ps doesn't check for process and exit if not existing :\n```\nboot2docker: 1.2.0\n             master : e75396e - Fri Aug 22 06:03:48 UTC 2014\ndocker@boot2docker:~$ ps --help\nBusyBox v1.22.1 (2014-04-04 15:16:09 UTC) multi-call binary.\nUsage: ps [-o COL1,COL2=HEADER]\nShow list of processes\n    -o COL1,COL2=HEADER     Select columns for display\n\ndocker@boot2docker:~$\n```\nThat's why i had to male it a bit shell-complicated :-S\n. @SvenDowideit I added a little comment thru lines 15-16.\nIn fact :\n- Due to some golang constraints, docker doesn't background itself (see https://github.com/docker/docker/issues/2758). When you launch it with the \"-d\" option, it is detached alone but cannot be manageable without another tool like \"home-made script\", start-stop-dameon, etc.\n- So the \"contrib\" init script in the main docker project try to use start-stop-daemon, and ran into some race-conditions issues like https://github.com/docker/docker/issues/5359. \n- The idea they use in the \"Debian\" init script, is to allocate a specific PID to the parent process which role is to background the docker process. This \"SSD_PID\" is used to manage the parent process, forked from start-stop-daemon (see the doc here for reference - http://www.delafond.org/traducmanfr/deb/man8/start-stop-daemon.8.html).\nSee https://github.com/docker/docker/issues/2758 for details.\ncc @tianon : your advise on that (it seems you got a foot in these thing in Docker :) ) ?\n. Be careful, the # char. for comment has disappeared :)\n. ",
    "benjamine": "I'm trying to get started with boot2docker on windows, but without support for shared folders, and without a docker CLI on the windows host (which is there on OSX), it's hard to find it useful beyond a cool demo.\nI have my Dockerfile on the windows machine, how can I build it? (ie. I need to run: docker build, on windows, not sshing into the boot2docker VM, unless I can see my files there using a VBox shared folder)\n. @LukasRos but how can I run docker on the windows machine? I don't want to run it in the VM (my Dockerfile is not there, it's on the windows host) as far as I could test, \"docker\" command is not there, when I double-click the desktop icon that's opening an ssh session into the VM (where yes, docker is available), but of course my files are not, I need to either:\n- run docker on the windows host (preferrable)\n- have my files in the boot2docker VM\n  but neither of those seem possible right now\n. I know it works on OSX, this is what I wrote:\n\nwithout a docker CLI on the windows host (which is there on OSX)\n\nbut why do you say \"the docker command line tool can also be run from Windows\" when you don't use Windows, and I'm saying precisely that's not there (and I have tested it in at least 2 Windows machines)? so starting over: there's no docker CLI on windows, maybe it's hidden? maybe docker CLI doesn't run on windows? (at least Go has support for windows)\n. ",
    "LukasRos": "@benjamine You should be able to run docker build from your Windows machine because the build context (= current directory) is automatically uploaded to the docker host (the VM). So you can use the ADD instruction in a dockerfile to add files from your Windows machine to a new image.\n. @benjamine Not exactly sure about Windows since I'm using it on a Mac but the basic setup is the same:\n- the docker daemon runs inside the VM and that's where the docker containers and images are actually stored\n- the docker command line tool can also be run from Windows and connect to the daemon inside the VM over TCP/IP; if it's not available then probably your PATH setup is not correct\nMaybe someone on IRC who also uses Windows can help you better than me ...\n. ",
    "gaffa": "Hi!\nI have started something and it is already doing something :)\nhttp://igaffa.blogspot.be/2014/11/docker4windows-docker-on-windows.html\nhttps://github.com/gaffa/docker4windows\nFeel free to contribute. I do not have that much time to implement the missing bits.\nAlso to the boot2docker-Team: feel free to integrate whatever parts you like.\nRegards\n. Hi!\nWhat exists and could be downloaded yesterday did not help as there is no \"docker command\". But maybe its worth trying boot2docker with the batch  file Form my approach once more. Does it forward ports to the host?\nAlso can you provide me with a link to the issue where a native client is developed and provide me with a better guess in what \" soon\" means?\nIf we are talking months or many weeks this would still be worth the work.\n. Also: how do shared folders work? Is the current work dir automatically mounted or does one have to do that manually?\n. I have removed my repo and blog post as it seems to be working with boot2docker as well. Maybe consider documenting the workaround with alias or .bat-File forwarding the command to boot2docker or even include an alias to boot2docker with the name docker? \n. ",
    "playerwtf": "Just stumbled on this as well and was quite confused. A segmentation fault? really?\n. Well not gonna rant about boot2docker or TCL. I love how easy it is to get started with it but that segfault should be fixed :) Not sure though if this is a fault from TCL or boot2docker\n. ",
    "pikeas": "+1, rather surprised this segfaults...\n. +1, rather surprised this segfaults...\n. Can someone share a quick explanation of how to set up better filesharing (NFS) under boot2docker?\n. ",
    "mdkent": "Try it! An interactive shell punts you back to the docker user thanks to root's ~/.profile\n. I think there's 10 ways to do this :wink:\nI cribbed sudo su from http://www.tinycorelinux.net/faq.html#root but sudo -s works too.\n. ",
    "brandonparsons": "Thanks @parente . I will create a pull request for the readme.\n. Thanks @parente . I will create a pull request for the readme.\n. Thank you kindly :)  Sorry I did not spot it in the FAQ.... I was getting myself mixed up between boot2docker and a standard install on Vagrant.... too many things in my mind.\n. Thanks ! :)\n. ",
    "helander": "I have installed boot2docker on hard disk (no vm but a physical machine). I have a boot partition (/dev/sda1) and a data partition to be used for persisting docker state (/dev/sda2). From what I have seen in the code, this would not work, since only the first partition would be checked, is this correct?\nAny ideas on how to deal with a configuration like this? TinyCore supports configuration of various disk locations (tce, home, opt, restore) via boot codes, maybe this could be utilized or add a similar boot code for \"docker persistence\"?\n. I have installed boot2docker on hard disk (no vm but a physical machine). I have a boot partition (/dev/sda1) and a data partition to be used for persisting docker state (/dev/sda2). From what I have seen in the code, this would not work, since only the first partition would be checked, is this correct?\nAny ideas on how to deal with a configuration like this? TinyCore supports configuration of various disk locations (tce, home, opt, restore) via boot codes, maybe this could be utilized or add a similar boot code for \"docker persistence\"?\n. ",
    "jamtur01": "+1\n. +1\n. +1\n. Neat! Love to see this merged with the mainline! :)\n. Perhaps we want to make that clear?\n. After it's built just drop it into the .boot2docker directory in your $HOME.\n. After it's built just drop it into the .boot2docker directory in your $HOME.\n. I just have a boot2docker_v010.iso and boot2docker_v011.iso and copy as needed when testing. But that's probably clumsy. :)\n. I just have a boot2docker_v010.iso and boot2docker_v011.iso and copy as needed when testing. But that's probably clumsy. :)\n. LGTM\n. No - what he's asking is how to interact with the VirtualBox VM underneath boot2docker. \n@lazywei Boot2Docker doesn't use Vagrant at all. It's a tiny VirtualBox image wrapped in a script that manages it. \n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @tianon This will need to be merged for Fusion support to work.\n. @tianon Nope - this is required to do anything.\n2014/12/24 03:12:44 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 22 -i /Users/james/.ssh/id_boot2docker docker@Error: The VMware Tools are not running in the virtual machine: /Users/james/.boot2docker/boot2docker-vm/boot2docker-vm.vmx grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\n. Yep. :(\n. Other issues exploring the ISO and the current fusion cli build.\n1. boot2docker-cli is hard-coded for eth1 (https://github.com/boot2docker/boot2docker-cli/blob/master/util.go#L219) which virtualbox creates but fusion does not.\n2. The SSH key setup doesn't seem to be working either - I am prompted for for a password when I B2D -v up.\n3. The VMW Tools don't seem to start when the box initiates. I have to manually go through Fusion to get them going.\n. @zeeyang That should be VMW Tools - they don't auto-start when the VM runs. I had to manually kick them.\n. ",
    "philwhln": "Thanks! Just what I was looking for\n. Thanks! Just what I was looking for\n. ",
    "radomirml": "I second this. (Or at least it would be useful to have instructions how to do it.)\n. I second this. (Or at least it would be useful to have instructions how to do it.)\n. ",
    "aheissenberger": "The Vagrant docs suggest to use NFS as the better solution:\nhttp://docs-v1.vagrantup.com/v1/docs/nfs.html\n. @steeve how should this work? As far as I understand is docker using \"bind mounts\" - how can the native docker client running on osx create a bind mount to a directory existing inside a virtual box drive.\nI would need a option to share a folder between OSX filesystem and a container.\n. This Happens if you run the build process from a remote client with the option -i\nOn Fri, Jan 17, 2014 at 7:00 PM, Steeve Morin notifications@github.com\nwrote:\n\nCan you reproduce it with 0.4?\nBecause I can't :(\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/48#issuecomment-32629445\n. @steeve we should add some port testing with nc to insure that the port 4243 is free and if not print a warning, suggest a local boot2docker conf and stop to create the config for the VM\n. @steeve we should add some port testing with nc to insure that the port 4243 is free and if not print a warning, suggest a local boot2docker conf and stop to create the config for the VM\n. I use this script on OSX to prepare boot2docker:\n\n```\n!/bin/sh\nexport DOCKER_HOST=localhost\nVM_NAME=boot2docker-vm\nVBM=VBoxManage\nDOCKER_PORT=4243\nSSH_HOST_PORT=2022\nKEY=\"$HOME/.ssh/id_dsa.pub\"\necho \"Remove existing key in known hosts\"\nssh-keygen -R [${DOCKER_HOST}]:$SSH_HOST_PORT\necho \"Putting your key on $DOCKER_HOST ... \"\nif [ -f ~/.ssh/id_dsa.pub ];then\nKEYCODE=cat $KEY\nssh -q -p ${SSH_HOST_PORT} docker@${DOCKER_HOST} \"mkdir .ssh;echo \\\"$KEYCODE\\\" >> ~/.ssh/authorized_keys\"\nfi\necho \"done\"\nssh -q -p $SSH_HOST_PORT docker@${DOCKER_HOST} <<-ENDX\n    sudo /usr/local/etc/init.d/docker stop;\n    echo \"Upgrade docker daemon\"\n    sudo wget http://get.docker.io/builds/Linux/x86_64/docker-latest -O /usr/local/bin/docker;\n    echo \"listen on IP 0.0.0.0\"\n    sudo sed -i -e \"s/docker -d >/docker -d -H=\"0.0.0.0:4243\" -api-enable-cors >/\" /usr/local/etc/init.d/docker;\n    sudo /usr/local/etc/init.d/docker start;\nENDX\n```\n. The latest version of the ISO >= 0.4.0 build from the repository does not need any of the changes listed above\n. here is my script to automate the process:\n```\n!/bin/sh\nDOCKER_HOST=localhost\nVM_NAME=boot2docker-vm\nVBM=VBoxManage\nDOCKER_PORT=4243\nSSH_HOST_PORT=2022\nssh-keygen -R [${DOCKER_HOST}]:$SSH_HOST_PORT\nssh -q -p $SSH_HOST_PORT docker@${DOCKER_HOST} <<-ENDX\nmount | grep -q /dev/sda1 && echo \"Persistent Image exists\" && exit\necho \"Partition Disk /dev/sda\"\nsudo fdisk /dev/sda<<EOF\nn\np\n1\nw\nEOF\nsudo mkfs.ext4 /dev/sda1\nsudo reboot\nENDX\nssh-keygen -R [${DOCKER_HOST}]:$SSH_HOST_PORT\n``\n. I have been starting modifying the ISO - it is much easier to implement this as a startup script as there will be no issue with authentication.\n. I do not think it should be done fully automatic - I would prefer a message with tells me that there is a medium connected which is not initialized and that persistance wont be available without a formatted device plus a information how to do it.\nI suggest to add a small bash script e.g. \"boot2docker-activate-persistance\" to the ISO which can be called from the shell or by using \"boot2docker ssh boot2docker-activate-persistance\"\n_@pubkey: _\nOption (general) 1)**\nthe minimum here would be to save an uploaded pubkey on every shutdown - there exists a hook in the tinycore shutdown script for backups\nThis would also solve (#87) the key beeing baked into the ISO which is not the best way for bare metal and non local development enviroments.\nOption 2)\nto use the public key used by vagrant which would make the image more vagrant compatible and implement the private key in the boot2docker ssh <cmd> call - see my implementation https://github.com/aheissenberger/boot2docker/compare/feature;pull;boot2docker-ssh-public-key (does not use the vagrant key!)\n. the easiest way would be to download a formated and maybe compressed vmdk image as part of the init script - this file should be very small as it will grow with the content\n. I have added this to boot2docker:\nCFWPORTS=\"\"\n    for ip in {49000..49900}\n        do\n            CFWPORTS=\"$CFWPORTS --natpf1 zfp$ip,tcp,127.0.0.1,$ip,,$ip\"\n        done\n    $VBM modifyvm $VM_NAME $CFWPORTS\nbased on the code I found at the end of the Vagrant docker config file https://github.com/dotcloud/docker/blob/master/Vagrantfile\n. I think this is an IP6 Binding isue of docker:\nhttps://github.com/dotcloud/docker/issues/2174\n. There is now a fix for this we should test:\nenable packet forwarding for ipv6 by adding the following line to your /etc/sysctl.conf:\nnet.ipv6.conf.all.forwarding=1\nhttps://github.com/dotcloud/docker/issues/2174#issuecomment-35219757\n. This is a problem of the docker remote API not setting the extended privileges when starting the container:\nhttps://github.com/dotcloud/docker/issues/3518\n. Thanks @felixbuenemann!\n@steeve : any idea which command needs an iteractve terminal and maybe this could be suppressed by an option?\n. @schickling you can try NFS with my FORK https://github.com/aheissenberger/boot2docker - more info here https://github.com/steeve/boot2docker/issues/64\n. @schickling you can try NFS with my FORK https://github.com/aheissenberger/boot2docker - more info here https://github.com/steeve/boot2docker/issues/64\n. if boot2docker cmd is used as a wrapper it can export the variable vor each call to docker - e.g. :\nboot2docker cmd version\nto get a shorter command people can use alias\n. I would only add a hint to the README FAQ part that everyone is free to shorten the call by adding alias b2dc='boot2docker cmd' to their bash setup config\n. I also like the way brew suggest some todos after a successful install - e.g. adding export DOCKER_HOST=tcp://:locahost to the bash config\n. I have not found a 9p Server/Client for OSX\n. I have go it working:\n1. I am using a host only network on eth1\n2. exporting a share from OSX does work\n3. exporting a share from docker vm works\nopen problems:\n1. exporting a share from OS only works if security is set to no - which I only can set with \"NFS Manager\" - not able to get this configuration in my /etc/exports config:\n/Users/ah/SVN-Checkouts/DEV/dev -network 192.168.56.0 -mask 255.255.255.0\nYou can find a working new boot2docker which adds the hostonly adaper and the ISO which include the nfs utilities here:\nhttps://github.com/aheissenberger/boot2docker\ndo not forget to start the nfs client or server inside the VM:\nsudo /usr/local/etc/init.d/nfs-server start\nsudo /usr/local/etc/init.d/nfs-client start\n. Here is the patch to use it - but the code is not finally cleaned up and you need to rebuid the ISO:\nhttps://github.com/aheissenberger/boot2docker/tree/feature/shared-folder-nfs\n. Here is the link to the bug preventing tiny core to support NAT and hostonly in a VM:\nhttps://bugs.busybox.net/show_bug.cgi?id=6788\nmy code above contains the fix already \n. @schickling the existing code in in my repository creates an ISO with nfs support but at the moment you have to manuel mount the shares.\n@steeve would be nice if the docker remote client could tell the daemon to handle the mounting if the hostpath contains an IP - e.g:\ndocker run -v 192.168.56.1:/var/logs:/var/host_logs:ro ubuntu bash\n. Finished - sharing a directory from the host to a container in a VM works:\nboot2docker cmd run -d -p 8081:80 -name webserver -v ~/SVN-Checkouts/DEV/dev:/app tutum/apache-php /run.sh\nthe CMD option will magically convert the input to docker run -d -p 0.0.0.0::80 -name webserver -v /var/lib/docker/share/809218c9bf1bdfa803dfedb65ef0de83:/app tutum/apache-php /run.sh and will mount the directory and will set the port forwarding #104 .\nmount 192.168.56.1:/Users/franz/SVN-Checkouts/DEV/dev /var/lib/docker/share/809218c9bf1bdfa803dfedb65ef0de83\nVBoxManage controlvm boot2docker-vm natpf1 zfp8081,tcp,127.0.0.1,8081,0.0.0.0,49154\nIt expects/User/franz/SVN-Checkouts/ to be exported by the NFS-server on the host\n$ cat /etc/exports\n/Users/franz/SVN-Checkouts -alldirs -ro -network 192.168.56.0 -mask 255.255.255.0\nYou will need my ISO with NFS installed, 2nd host only interface and my ./boot2docker script with the ./boot2docker cmd option\nhttps://github.com/aheissenberger/boot2docker\nToDO:\n[ ] more testing\n[ ] there is no clean up of the mounted volums after the container gets stopped\n. Finished - sharing a directory from the host to a container in a VM works:\nboot2docker cmd run -d -p 8081:80 -name webserver -v ~/SVN-Checkouts/DEV/dev:/app tutum/apache-php /run.sh\nthe CMD option will magically convert the input to docker run -d -p 0.0.0.0::80 -name webserver -v /var/lib/docker/share/809218c9bf1bdfa803dfedb65ef0de83:/app tutum/apache-php /run.sh and will mount the directory and will set the port forwarding #104 .\nmount 192.168.56.1:/Users/franz/SVN-Checkouts/DEV/dev /var/lib/docker/share/809218c9bf1bdfa803dfedb65ef0de83\nVBoxManage controlvm boot2docker-vm natpf1 zfp8081,tcp,127.0.0.1,8081,0.0.0.0,49154\nIt expects/User/franz/SVN-Checkouts/ to be exported by the NFS-server on the host\n$ cat /etc/exports\n/Users/franz/SVN-Checkouts -alldirs -ro -network 192.168.56.0 -mask 255.255.255.0\nYou will need my ISO with NFS installed, 2nd host only interface and my ./boot2docker script with the ./boot2docker cmd option\nhttps://github.com/aheissenberger/boot2docker\nToDO:\n[ ] more testing\n[ ] there is no clean up of the mounted volums after the container gets stopped\n. sorry I am new to github pulls - this was not planned to be included but if you look at the virtual box docu you will read that this is the suggest network hardware:\nhttps://www.virtualbox.org/manual/ch06.html#nichardware\n. the best solution would be a docker wraper which will handle this by parsing the docker command line options and will dynamical set the ports to be forwarded - a similar solution will be needed for shared folders\n. the best solution would be a docker wraper which will handle this by parsing the docker command line options and will dynamical set the ports to be forwarded - a similar solution will be needed for shared folders\n. I have looked at your code and have also played with this solution but my understanding of this project was to expose as less as possible from the embedded system. \nMy current solution #104  does all the port forward mapping automaticly :-)\nUsing NFS I have to use the second host only interface too but I hope this gets solved with the 9fs files system.\n. @deinspanjer this project will not provide this feature \n. I am not sure if we really need it as we do not attach hardware to the VM.\nI have started the discussion about all settings here #75 maybe someone is a better expert than me on this settings.\nI have all of them swiched on and the VM does work on OSX.\n. I have not tested it, but if you copy your ISO to a hard disk, /etc/passwd will become writeable too.\nAnd as a root you can allways modify a running sshd configuration. \nIf you run boot2docker on bare metal you have to setup security by setting up your own keys!\nI like the solution from @mitchellh and I think it would make sense to reuse the vagrant keys to make it easier for boot2docker to live in both worlds.\n@steeve are you interessted? which way would you like to go?\n. you can use this boot2docker script which includs a build command to download the newest code from the git repository and creates the ISO - its BETA!!:\nhttps://github.com/aheissenberger/boot2docker/blob/feature/boot2docker/build-command/boot2docker#L228\n. need to clean up and more testing :-) and I miss some feature I need:\n- detecting an existing checkout in the current directory\n- optional specifying an other repositository to download the code\n- detecting the path to the current ISO \n- replacing the boot2docker script with the new one\nI am not sure if this is a job for boot2docker or should be part of e.g. a homebrew setup script\n. done:\n- detecting an existing checkout in the current directory\n- optional specifying an other repositository to download the code\n- detecting the path to the current ISO\nand I found a way to ensure that the build process is finished and fixed #61 before I try to copy the ISO from the container:\n```\n    docker pull steeve/boot2docker-base\n    docker build -t boot2docker rootfs/\n    docker rm build-boot2docker  > /dev/null 2>&1\ndocker run -privileged -name build-boot2docker boot2docker\ndocker wait build-boot2docker\n\ndocker cp build-boot2docker:/boot2docker.iso .\n\n``\n. I also found out that if the remote client loses the connection the process will finish the process. You can usedocker wait build-boot2docker` to wait before you copy the ISO\n. I still think this is a bug in the docker remote API because it does work know but still closes sometimes the connection to the docker remote client but continues with the process inside the container.\nBecause the work around was to add the Option \"-i=false: Keep stdin open even if not attached\" I expected the problem comming from parts of the ouptut created by the script.\nIn a first step I added \" > /dev/null 2>&1\" to all lines what helped immediately and then started to remove this step by step and at some places e.g. \"cp -v\" removed the \"-v\" which helped too.\nBased on my latest work for adding a build command to the boo2docker script I suggest not to use this fixes and just wait for docker to fix their remote api output streaming. I suggest to use docker wait build-boot2docker to insure the ISO creation has finished before applying the command to copy the image.\n. here is my Setup with docker OSX client and docker daemon on tiny core linux (boot2docker):\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\nYou can reproduce the problem with these steps and the use of the OSX docker client:\n1. clone the code from https://github.com/steeve/boot2docker\n2. $ docker pull steeve/boot2docker-base\n3. $ docker build -t boot2docker rootfs/\n4. $ docker rm build-boot2docker\n5. $ docker run -privileged -name build-boot2docker boot2docker \nAt step 5 the remote API will loose the connection during streaming of status messages to the OSX native docker client - last output from script:\n9937 blocks\nThe container will run until the process is finished. Waiting with docker wait build-boot2docker goes very well.\nThe correct Output of the Step 5 should end with this:\n\u2026...\nWritten to medium : 12288 sectors at LBA 0\nWriting to 'stdio:/boot2docker.iso' completed successfully.\nI have tried a work around with the parameter '-i' but this will lead into never finish running the container until some one presses ENTER.\ndebian virtual box / docker daemon / host only interface*\nI have repeatet the same process with a docker daemon on debian inside a virtual box vm, connecting with the docker OSX client and have not been able to get the same problems.\nboot2docker.iso virtual box / docker daemon / host only interface*\nI have repeatet the same process with a docker daemon but connecting thru a host only interface and not thru the forwarded ports and have not been able to get the same problems.\n=> Based on this test I think the problem is related to the port forwarding thru virtual box - can someone repeat my steps to prove that I am right?\n. I think we have allready a solution based on the option to change the default values with a custom config file #97 - this way all the above is possible without any further changes\n. I think we have allready a solution based on the option to change the default values with a custom config file #97 - this way all the above is possible without any further changes\n. but it is not usual to have big variable content e.g. (iso, vmdk) in the home directory. - on OSX I would move them to ~/Library/boot2docker or /Libraray if I need to share it between users.\nI am not an expert but FHS would suggest something like:\n/var/lib/boot2docker/\nhttp://refspecs.linuxfoundation.org/FHS_2.3/fhs-2.3.html#VARLIBVARIABLESTATEINFORMATION\n. but it is not usual to have big variable content e.g. (iso, vmdk) in the home directory. - on OSX I would move them to ~/Library/boot2docker or /Libraray if I need to share it between users.\nI am not an expert but FHS would suggest something like:\n/var/lib/boot2docker/\nhttp://refspecs.linuxfoundation.org/FHS_2.3/fhs-2.3.html#VARLIBVARIABLESTATEINFORMATION\n. You could look into the option to partial install the vbox guest additions with only sharing activated.\nOn Thu, Jan 16, 2014 at 8:11 PM, Ben Firshman notifications@github.com\nwrote:\n\nShared folders is one of the things that is stopping me from switching myself and Fig from docker-osx. It's essential for using Docker in development.\nThe way we have it set up for docker-osx is it mounts your home directory into the same place inside the VM. So, for example, /Users/ben on OS X is mounted at /Users/ben inside the VM. This works brilliantly for Docker volumes, because I can do run like docker run -v .:/code ... and it Just Works because . expands to /Users/ben/....\nI see there are plans to get NFS working in #64, but are there plans to do a similar automatic NFS mount for boot2docker? Or a better question perhaps \u2013\u00a0are there any objections to doing this? Because I'd quite like to do it. ;)\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/84\n. You can try this https://github.com/steeve/boot2docker/pull/87 to activate NFS Server & Client but I have not found a simple solution without modifying the docker code to mount the current home directory\n. Just add a host only interface to your vm setup. Look at my fork for some fixes to get this setup running\n\nOn Thu, Jan 16, 2014 at 8:29 PM, Ben Firshman notifications@github.com\nwrote:\n\ndocker-osx adds localdocker to /etc/hosts to make accessing ports really easy: https://github.com/noplay/docker-osx/blob/master/docker-osx#L37-L61\nI see some work has been done to automatically forward dynamically assigned ports in #73, but when doing development work I want my server to be at a predictable address (so, for example, I could always go to http://boot2docker:8000 in my web browser).\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/85\n. the current setup uses NAT and port forwarding - you have a predictable name wich is always \"localhost\" or the name you gave your host which runs the VM. Use my patch to forward the dynamical created ports to your local ip and you can access your container similar to a setup without a VM.\n. with docker it is up to you what you get - you can specify it e.g.:\ndocker run -p 127.0.0.1:80:8080 ubuntu bash\nThis binds port 8080 of the container to port 80 on 127.0.0.1 of the host inside the vm machine. Now you need have a virtual box port forwarding setting which does bind 8080 to 8080 on your host running the VM.\n\nmore info: http://docs.docker.io/en/latest/use/port_redirection/#port-redirection\nIf you use dynamic binding, the port number can be accessed by this:\ndocker port 4c01 80\n. I do understand what you want as I have similar requirements.\nOption 1) As long as the docker client is not integrated with the vm and does this manipulation for you, you have to write a wrapper script which will do the dynamic port forward changes for you and then calls the docker client. \nOption 2) you need to use a host only or bridged setup to get direct access to the host running the docker vm\nI am planning to setup this:\n- Dnsmasq on my host running the VM to allow multiple virtual domains for development e.g. \"*.dev\"\n- a container with pound (reverse proxy) on port 80 exposed to my host\n- a container per project which will registere its dynamic port and domain at the reverse proxy\n. 1) What kind of network configuration do you use to run boot2docker in your VM?\nHave you changed from from NAT and port forwarding to host only?\n2) do you plan to offer a brew recipe or a binary for the DIOD 9PFS server?\n. :+1:\n. does 9PFS support inotify?\ne.g. I change a file on the host and an app runnning in the vm using inotify will get informed about the file change.\nNFS and many others do not support inotify on mounted volumes.\n. @eugeneware I always use a user on OSX without admin rights (= no sudo) and my boot2docker script tests if the user has access to sudo and will only use the oascript on OSX if there is no other way to get access to sudo. a developer with admin rights (= access to sudo) will not see any kind of popup:\nhttps://github.com/aheissenberger/boot2docker/blob/master/boot2docker#L527\nThe way I implemented the host only interface you will allway get a unique IP and I will reuse any existing vbox interface as long it complies to my requirements. to enjure that that I know the IP I will add an magic update of the IP to the local /etc/hosts file.\n. @eugeneware I always use a user on OSX without admin rights (= no sudo) and my boot2docker script tests if the user has access to sudo and will only use the oascript on OSX if there is no other way to get access to sudo. a developer with admin rights (= access to sudo) will not see any kind of popup:\nhttps://github.com/aheissenberger/boot2docker/blob/master/boot2docker#L527\nThe way I implemented the host only interface you will allway get a unique IP and I will reuse any existing vbox interface as long it complies to my requirements. to enjure that that I know the IP I will add an magic update of the IP to the local /etc/hosts file.\n. @eugeneware can you do a sudo -v and post me your output?\n. @eugeneware can you do a sudo -v and post me your output?\n. @eugeneware fixed it - have not tested it with an admin user - should work now without the popup for you\n. @eugeneware fixed it - have not tested it with an admin user - should work now without the popup for you\n. finished my hostonly interface implemetation which also includes now setting /etc/hosts and ~/.bash_profile\n. finished my hostonly interface implemetation which also includes now setting /etc/hosts and ~/.bash_profile\n. Because of the amount of possible variables I would suggest to use a typical bash style config file and an option to optional define the name and location of the config file if not found in the current directory\n. Because of the amount of possible variables I would suggest to use a typical bash style config file and an option to optional define the name and location of the config file if not found in the current directory\n. @steeve I think we should change the position of the include of the config file to make it easier and less redundant to overwrite values with enviroment variables:\ntest -f $HOME/.boot2docker/profile && . $HOME/.boot2docker/profile\n{SSH_HOST_PORT:=2022}\nIf there is no value set by an ENV variable or conf file it will fall back to the default values.\nWe should rename SSH_HOST_PORT to BOOT2DOCKER_SSH_PORT to make ENV variables unique to boot2docker.\nThere should also be some advance with #82 \n. @steeve I think we should change the position of the include of the config file to make it easier and less redundant to overwrite values with enviroment variables:\ntest -f $HOME/.boot2docker/profile && . $HOME/.boot2docker/profile\n{SSH_HOST_PORT:=2022}\nIf there is no value set by an ENV variable or conf file it will fall back to the default values.\nWe should rename SSH_HOST_PORT to BOOT2DOCKER_SSH_PORT to make ENV variables unique to boot2docker.\nThere should also be some advance with #82 \n. I still think it should be possible to additional overwrite the path to e.g. ISO in the conf file. With the current code this will not work as the relevant directory structure is only created for the master directory and not when needed at some other places.\n. I still think it should be possible to additional overwrite the path to e.g. ISO in the conf file. With the current code this will not work as the relevant directory structure is only created for the master directory and not when needed at some other places.\n. Hi @niclashoyer  the docker build command is only aviable in my fork https://github.com/aheissenberger/boot2docker and is not part of the official development.\nPlease post this kind if questions here: \nhttps://github.com/aheissenberger/boot2docker/issues\nAt the moment I am not planning to replace git with unzip as there have been problems with unzip in recognizing the folder which contains the unzipped content.\n. Hi @niclashoyer  the docker build command is only aviable in my fork https://github.com/aheissenberger/boot2docker and is not part of the official development.\nPlease post this kind if questions here: \nhttps://github.com/aheissenberger/boot2docker/issues\nAt the moment I am not planning to replace git with unzip as there have been problems with unzip in recognizing the folder which contains the unzipped content.\n. git is now available in the newes release https://github.com/steeve/boot2docker/releases/tag/v0.5.4\n. git is now available in the newes release https://github.com/steeve/boot2docker/releases/tag/v0.5.4\n. @steeve b2d script - but we can close this if the script gets rewriten in Go\n. 1) check if you can mount ./boot2docker.iso - on OSX it is a douple click on the file and check if you can see some folders\n2) open virtual box GUI and start the vm - now you will get all the boot msg\n. can you check line 19 in the boot2docker script:\ncurl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null | grep \"tag_name\" | awk '{print $2}' | sed 's/[\",]*//g' | head -1\nit does work - but I can see in your log that you got:\n[2014-01-24 10:57:05] Latest version is _Automatically_, downloading...\nit should be:\n[2014-01-24 10:57:05] Latest version is _v0.4.0_, downloading...\n. this looks like a problem on your local setup - try the url curl 'https://api.github.com/repos/steeve/boot2docker/releases' in your browser - does each attribute start in a new line?\n[\n  {\n    \"url\": \"https://api.github.com/repos/steeve/boot2docker/releases/147197\",\n    \"assets_url\": \"https://api.github.com/repos/steeve/boot2docker/releases/147197/assets\",\n    \"upload_url\": \"https://uploads.github.com/repos/steeve/boot2docker/releases/147197/assets{?name}\",\n    \"html_url\": \"https://github.com/steeve/boot2docker/releases/v0.4.0\",\n    \"id\": 147197,\n    \"tag_name\": \"v0.4.0\",\n    \"target_commitish\": \"master\",\n\u2026.\nIs it possible that your system is behind a proxy which does some kind of compression by reducing spaces and new lines?\n. There is no rule that the json format needs to have line breaks - the current parsing expects something which is not part of the json standard - the fixed version will allways find the corrent json value in depend to the formation of the json output\n. Thank you very much @weltonrodrigo !!\n. @ngocphamm you only need to setup manually a network interface in parallel desktop which is host only or a bridged network and does use a DHCP IP range which only allows one IP (your DOCKER IP)\n. @ngocphamm you only need to setup manually a network interface in parallel desktop which is host only or a bridged network and does use a DHCP IP range which only allows one IP (your DOCKER IP)\n. your problem is that the dhcp-client inside tiny for linux is started as a background process and there is no way to tell if it will finish before or after your script gets called. In your case it finished getting data from the DHCP Server after your script. if the /etc/resolv.conf is empty this is because of a bug in the configuration of busy box setting the /etc/resolv.conf even there is no name server data coming from the DHCP Server. Please check if your tiny core linux already includes this fix:\nhttps://bugs.busybox.net/show_bug.cgi?id=6788\n. your problem is that the dhcp-client inside tiny for linux is started as a background process and there is no way to tell if it will finish before or after your script gets called. In your case it finished getting data from the DHCP Server after your script. if the /etc/resolv.conf is empty this is because of a bug in the configuration of busy box setting the /etc/resolv.conf even there is no name server data coming from the DHCP Server. Please check if your tiny core linux already includes this fix:\nhttps://bugs.busybox.net/show_bug.cgi?id=6788\n. no - it will take some time to upstream from busy box to TCL and than to boot2docker - use the solution in my fork but it is just a hack :-)\nhttps://github.com/aheissenberger/boot2docker/tree/master/rootfs/rootfs/usr/share/udhcpc\nThere will be a solution for this with #93 and each build from master automatically pulls the latest 5.x release from TCL.\n. no - it will take some time to upstream from busy box to TCL and than to boot2docker - use the solution in my fork but it is just a hack :-)\nhttps://github.com/aheissenberger/boot2docker/tree/master/rootfs/rootfs/usr/share/udhcpc\nThere will be a solution for this with #93 and each build from master automatically pulls the latest 5.x release from TCL.\n. This is fixed in the latest master #126 - and there is a workaround to allow you to build the latest ISO in you broken ISO\n. This is fixed in the latest master #126 - and there is a workaround to allow you to build the latest ISO in you broken ISO\n. some libs are missing - this is also true for xz - will fix this soon\n. some libs are missing - this is also true for xz - will fix this soon\n. which version of grep?\n. which version of grep?\n. can you try:\n$ ./boot2docker info | grep 'State:[[:space:]]+running'; echo $?\nand\n$ ./boot2docker info | grep \"State:\\s+running\"; echo $?\n. can you try:\n$ ./boot2docker info | grep 'State:[[:space:]]+running'; echo $?\nand\n$ ./boot2docker info | grep \"State:\\s+running\"; echo $?\n. The problem here is gnu grep 2.5.x - there is a known bug with spaces:\nhttp://stackoverflow.com/questions/4233159/grep-regex-whitespace-behavior\nyou should update your system or replace your grep with a newer version from Homebrew\n. does not work if the JSON has no line breaks\n see #106 and #107 - this is the test case:\ncurl -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" -s 'https://api.github.com/repos/steeve/boot2docker/releases' | awk -F\\\" '/tag_name/{print $4;exit}'\n. does not work if the JSON has no line breaks\n see #106 and #107 - this is the test case:\ncurl -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" -s 'https://api.github.com/repos/steeve/boot2docker/releases' | awk -F\\\" '/tag_name/{print $4;exit}'\n. I was able to reproduce with:\n$ docker pull ubuntu\n$ docker run -i -t ubuntu /bin/bash\n[error] commands.go:2496 Couldn't send EOF: use of closed network connection\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES\n2e774674ee67        ubuntu:12.04        /bin/bash              6 minutes ago       Exit 0                                  clever_ritchie\ngetting this:\n$ docker rm 2e7\nError: container_delete: Cannot destroy container 2e7: Driver aufs failed to remove root filesystem 2e774674ee67c35715239f1e11c2f8c2d76f4d79ef6f713254b5b7365d6b5ebb: rename /var/lib/docker/aufs/mnt/2e774674ee67c35715239f1e11c2f8c2d76f4d79ef6f713254b5b7365d6b5ebb /var/lib/docker/aufs/mnt/2e774674ee67c35715239f1e11c2f8c2d76f4d79ef6f713254b5b7365d6b5ebb-removing: device or resource busy\n2014/02/06 12:34:50 Error: failed to remove one or more containers\nI get the same result if I use the native OSX docker client or if I call docker directly inside the VM with tiny core linux boot2docker.iso 0.52.\nI do not get this problem on my debian installation with docker 0.8.0 and lxc-version 0.9.0.alpha3.\n. I was able to reproduce with:\n$ docker pull ubuntu\n$ docker run -i -t ubuntu /bin/bash\n[error] commands.go:2496 Couldn't send EOF: use of closed network connection\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES\n2e774674ee67        ubuntu:12.04        /bin/bash              6 minutes ago       Exit 0                                  clever_ritchie\ngetting this:\n$ docker rm 2e7\nError: container_delete: Cannot destroy container 2e7: Driver aufs failed to remove root filesystem 2e774674ee67c35715239f1e11c2f8c2d76f4d79ef6f713254b5b7365d6b5ebb: rename /var/lib/docker/aufs/mnt/2e774674ee67c35715239f1e11c2f8c2d76f4d79ef6f713254b5b7365d6b5ebb /var/lib/docker/aufs/mnt/2e774674ee67c35715239f1e11c2f8c2d76f4d79ef6f713254b5b7365d6b5ebb-removing: device or resource busy\n2014/02/06 12:34:50 Error: failed to remove one or more containers\nI get the same result if I use the native OSX docker client or if I call docker directly inside the VM with tiny core linux boot2docker.iso 0.52.\nI do not get this problem on my debian installation with docker 0.8.0 and lxc-version 0.9.0.alpha3.\n. Works for me with master\n. Works for me with master\n. @sethvoltz can you post the code with the error you got when you tried to delete the container\n. @morgante please check that you run the latest release boot2docker: 0.5.4\n. @sbyrnes can you do:\n./boot2docker ssh grep \"DOCKER_DIR\" /usr/local/etc/init.d/docker\nyour output should be this if you run the latest version:\nDOCKER_DIR=`readlink -f /var/lib/docker`\n    TMPDIR=`readlink -f /tmp` /usr/local/bin/docker -d -D -g \"$DOCKER_DIR\" -H unix:// $EXPOSE_ALL > /var/lib/boot2docker/docker.log 2>&1 &\n. @sethvoltz do you have a simple example which leads to your broken container to allow us to reproduce your problem\n. I can reproduce the truncation and I can confirm that this is only related to a forwarded port from virtual box.\nIt does not happen if I connect to the VM thru a host only ip.\n. I can reproduce the truncation and I can confirm that this is only related to a forwarded port from virtual box.\nIt does not happen if I connect to the VM thru a host only ip.\n. @SvenDowideit this label is wrong - the problem is not related to the boot2docker management-script - this is a problem which exists between native osx-docker client and connection with port forwarding/NAT to the vm running with virtual box. \nI did a test with docker daemon on debian / osx-native-docker client an was able to reproduce the same problem when using port forwarding. \nI would suggest to lable this problem \"virtual box\" and exept for not using port forwarding there is no easy way to fix this here.\nI did some more tests by simulation with nc but was not able to reproduce. Searching Google I found multiple posts which make the Linux kernel sendfile() not working reliable in virtual environments:\nhttp://www.conroyp.com/2013/04/25/css-javascript-truncated-by-nginx-sendfile/\n. please change the overriding order to the usual standard:\n1. default value\n2. values loaded from config file\n3. enviroment variable\n. please change the overriding order to the usual standard:\n1. default value\n2. values loaded from config file\n3. enviroment variable\n. :+1: @steeve following your rule should we change BRIDGE_IF to BOOT2DOCKER_BRIDGE_IF? Or should  we go a more generic way by using BOOT2DOCKER_NIC1_TYPE=BRIDGE\n. the do a test without the network start the vm inside the virtualbox GUI and do your tests inside the console.\n. @SvenDowideit have been opening a issue #222 to easy reference cases based on the old release being served by homebrew\n. @SvenDowideit have been opening a issue #222 to easy reference cases based on the old release being served by homebrew\n. I was able to reproduce this with port forwarding and host only remote API connection which means it is not related to #140 but it is the rame reason why the boot2docker build process #61 output stops.\nI was not able to reproduce this problem with a docker daemon running on debian. \nThis problem seams to be related to TCL/boot2docker ISO.\n. :+1: \n. I vote for saved State to be added and keeping paused State\n. :+1: @steeve OK for you?\n. vagrant uses the vm save state which is what has suggested with this patch:https://docs.vagrantup.com/v2/cli/suspend.html\nThe vm save command saves the current state of the VM and then shutsdown the hole vm process. To activate you need to call start.\u00a0\nThe vm pause command will freeze the VM. To activate you need to call resume and not start. We could call this command \"sleep\" if you would like to use \"pause\" for the save state\n. @steeve does this meen you would like to remove the code for pause from the boot2docker script and live with \"pause | suspend) savestate;;\"? \nI suggest to not remove the code which detects the state \"is_paused\"\n. I did a reboot on OSX with a VM status running - the result is now:\n$ boot2docker status\n[2014-02-10 19:54:22] boot2docker-vm does not exist.\nlooking into shows that we need to add a new state:\n$ VBoxManage showvminfo boot2docker-vm | grep State\nState:           aborted (since 2014-02-10T18:51:32.000000000)\n. I did a reboot on OSX with a VM status running - the result is now:\n$ boot2docker status\n[2014-02-10 19:54:22] boot2docker-vm does not exist.\nlooking into shows that we need to add a new state:\n$ VBoxManage showvminfo boot2docker-vm | grep State\nState:           aborted (since 2014-02-10T18:51:32.000000000)\n. @cap10morgan What OS to you use to run boot2docker? Virtualbox is set to sync your host clock to the VM clock but it expects the host clock to local time and not UTC. Can you post the results from date from host and VM.\n. You cannot asume that there is an internet connection if you use boot2docker it for local development - have you checkt what will happen?\n. @SvenDowideit I would prefer if docker remote would support hfs mounts native - this would make the docker remote API equal to the local API. The only change would be to modify the -v Directory to Container mount option to accept nfs mounts.\nIf this is not happening there is no other way than to have a wrapper as in all other cases it will be way to complicated to be used as you need to know where your local share will be mapped inside boot2docker VM.\nMy solution works by parsing the \"-v\" parameter and then does the following steps:\n1. convert local path to absolut path on host\n2. add the path to /etc/exports and update NFS Server\n3. create a hash from path\n4. create a directors in VM /var/lib/docker/shares/\n5. mount the shared folder inside the VM at  /var/lib/docker/shares/\n6. call the docker remote API with a \"-v\" parameter which uses /var/lib/docker/shares/\n_Example:_\nboot2docker cmd run -d -p 8081:80 -name webserver -v data:/app tutum/apache-php /run.sh\nbecomes\ndocker run -d -p 0.0.0.0::80 -name webserver -v /var/lib/docker/share/ebd8aaede9c6c7099bc62b5a7bf129e3:/app tutum/apache-php /run.sh\nOne of my next steps will be to clean up my code and add an command to boot2docker which will allow to setup a directory mapping to VM without running a docker cmd. \nAt the moment only one \"-v\" parameter is supported!\n. 1.) the docker client needs to implement the setup of a share (nfs, cifs) if it the remote API is used to communicate with the deamon.\n2) the docker deamon needs to be able to mount shares (nfs, cifs)\nwith nfs and cifs most major platforms should be served - an other option would be to use virtual box directory sharing with the benefit of the same interface on all platforms but the lockin to virtual box\n. @olalonde  would be very easy to implement based on my code as this was the solution I started with - I can have a look at it but this is a OSX only solution which will not work for Linux nor for Windows. \n@SvenDowideit I still would prefer if docker would implement native mounting of network volumes into the docker client with support for smb:// and nfs:// with the -v parameter\n@steeve without a secnd host only interface #198 or #93 I have not been able to use NFS\n. @YungSang I have taken a look at the vagrant synced folder magic and most of it is done similar by remote login to the VM by the vagrant script. \nmy problem here is that vagrant usally sets up \"one\" setup versus if I start boot2docker it will run vor ever and I will user different containers with different needs for mapping at runtime started by the docker client\n. @YungSang thats what I suggested https://github.com/boot2docker/boot2docker/pull/190#issuecomment-35945537\n. There is a bootoption of TCL which does set the clock with ntp - this should be the option for people running the ISO on barebones\nOn Sun, Feb 9, 2014 at 2:01 PM, Sven Dowideit notifications@github.com\nwrote:\n\nas @aheissenberger pointed out, its probably not a good idea for users with no internet\nand I'm having issues with the test I'm running - as ntp.pool.org is a pretty aweful default in my area.\nReply to this email directly or view it on GitHub:\nhttps://github.com/steeve/boot2docker/issues/158\n. you can use the iso and setup any kind (e.g. bridged) of network configuration with virtual box or any other vm. Tiny Core Linux expects to get the IP per DHCP. \n. :+1:\n. I have done some tests and I did not got any time lag when I started b2d without an internet connection - I think we can close this issue.\n. have you looked at the tinycore boot option which does the same?\ntinycore settime\nhttp://distro.ibiblio.org/tinycorelinux/faq.html#bootcodes\n. They have changed the name to nortc - look at Line 69, 172, 592:\n/etc/init.d/tc-config\n\nthere is a script to wait for the network to be ready and use the nearest ntp server:\n/etc/init.d/settime.sh\n/usr/bin/getTime.sh\n. The bad thing with nortc is that if  /usr/bin/getTime.sh fails the clock is not set to hwclock :\n/etc/init.d/tc-config - LINE 172\nif [ -n \"$NORTC\" ]; then\n    echo \"${BLUE}Skipping rtc as requested from the boot command line.${NORMAL}\"\nelse\n    while [ ! -e /dev/rtc0 ]; do usleep 50000; done\n    if [ -n \"$NOUTC\" ]; then\n        hwclock -l -s &\n    else\n        hwclock -u -s &\n    fi\nfi\nwe need to test this without internet connection!\n. I am not sure if it is a good idea to bury FAQs into a subfolder - there will be more people opening an issue instead of reading the FAQs\nI also suggest to add a simple road map to reduce the number of features requested or submited as a pull request which already exist or planned.\n. :+1: moving up is a good compromise -most websites now change to a one page concept :-)\n. The main focus of this project is to go without port forwarding #93 \n. you can do this by setting an eviroment variable which is used by most tools (e.g. curl):\nexport http_proxy=http://your.proxy.server:port/\nWhen you need to proxy HTTPS traffic, the environment variable is upper case: HTTPS_PROXY\nthere is no need to implemet this inside the boot2docker script\n. This is easy too without hacking - you only need to set eviroment variables HTTP_PROXY / HTTPS_PROXY here:\n/var/lib/boot2docker/profile\nfor more deatils read FAQ - Section Local Customisation (with persistent partition)\nhttp://github.com/steeve/boot2docker/blob/master/doc/FAQ.md\n. if you looking for a hack you can try this to change the proxy values from your host:\n./boot2docker ssh \"sudo sed -i -e 's/DOCKER_DIR=/HTTP_PROXY=http:\\/\\/88.88.88.88:8888; DOCKER_DIR=/' /usr/local/etc/init.d/docker; sudo /usr/local/etc/init.d/docker restart;\"\nthis will only last until you stop the VM\n. @imavroukakis boot2docker does not use vagrant and as @SvenDowideit said there is no way to add any config to the ISO except if you build your own ISO. \nThe only option which exists are to add a bootlocal.sh script if you have a persistent disk or to modify settings with ssh. \nIf you need auto detection you only need to modify the boot2docker script and add solution 2 as part oft the start command.\n. @imavroukakis vargrant is also using internally ssh to modify stuff inside a running VM and has no other option to setup a VM bevor it is started.\n. I do have the same problem on OSX 10.8.5 with bash - and there is no difference between port forwarding and host only access to the VM.\nIf I type exit plus RETURN in the shell of the docker container the container will hang until I press RETURN a second time which will print then the error msg:\n[error] commands.go:2496 Couldn't send EOF: use of closed network connection\n. an other option would be to create something like /etc/init/docker which is the official way on debian to add ENV variables.\n@steeve I understand that this allows to add anything but this is anyway possible if I add a script to /var/lib/boot2docker/bootlocal.sh\nthis still does not solve the problem, that HTTP_PROXY should only be set if needed - one option would be to test with nc if HTTP_PROXY exists and only then set this option\n. If you need shared folder just have a look at my fork https://github.com/aheissenberger/boot2docker/ which does all the stuff you want - more details here #154 and there is an ISO  which is based on the current master\nhttps://github.com/aheissenberger/boot2docker/releases/tag/v0.54ah\nThe good thing with nfs - there is no need to install anything on OSX :-)\n. @eugeneware very easy:\n- activate remote login on OSX in Systemsettings->sharing for a specific user\n  log into vm and install this or modify the bootscript.sh to do it for you on every start:\ntce-load -wi sshfs-fuse\nmkdir /mnt/remote\nsshfs me@192.168.59.1:/Users/me/tmp /mnt/remote/\n192.168.59 is the host (OSX) ip on my aditional host only network\nit would be very easy to adapt my boot2docker script to support nfs and sshfs\n. @eugeneware there is a new boot2docker script with support for sshfs in my repo - you can controll the type of directory sharing with BOOT2DOCKER_SHAREDFOLDER_type but it does not work for me as there are still some troubles with the mapping of the user ids.\n. @eugeneware there is a new boot2docker script with support for sshfs in my repo - you can controll the type of directory sharing with BOOT2DOCKER_SHAREDFOLDER_type but it does not work for me as there are still some troubles with the mapping of the user ids.\n. @schickling you shoud use virtual box to do the forwarding - if you really want to do it by ssh tunneling you need to use the ssh client directly sudo ssh -p 2022 docker@localhost\n. the better way is:\nVBoxManage controlvm docker-vm setlinkstate1 off\nVBoxManage controlvm docker-vm natpf1 dfhttp,tcp,127.0.0.1,80,127.0.0.1,80\nVBoxManage controlvm docker-vm setlinkstate1 on\nthis only works if your VM is running!\n. boot2docker delete I suggest to ask the user if he wants .vmdk to be deleted and an optional parameter boot2docker -y delete to force deleting - anyway we currently do not delete the config file directory but we do create one on init\n. if we expect more relevant modifications we should go with the second option otherwise I would prefer your suggest solution\n. if we expect more relevant modifications we should go with the second option otherwise I would prefer your suggest solution\n. :+1: \n. @maelp what system do you use and is your user allowed to sudo?\n. can you run it with bash -x boot2docker up to get the exact line where thescript fails\n. @maelp can you try it again with the last patch\n. @steeve @SvenDowideit do you want to go this way?\n. @maelp this will only work if you use my modified ISO from my fork which includes the needed changes. nfs client is only available in the master but not in the released ISO\n. @maelp  I will do a check - please post any further results here:\nhttps://github.com/aheissenberger/boot2docker/issues/5\nthis is the wrong repository to discuss this\n. @SvenDowideit @steeve we need to find a common ground how shared folders should be handled - this pull request is only about offering a second interface which will allow to use hfs, smb\n@SvenDowideit how do you think we should implement shared folders?\nI personally still think this should be done by the docker client/server\n. @steeve I have done some more research and think it would be good to add the virtualbox kernel module to the VM. This will allow us to simple read the dynamic IP of the second interface:\nVBoxManage guestproperty enumerate VM_NAME | grep \"Net.*V4.*IP\"\n(more here https://www.virtualbox.org/ticket/9969)\nand adding only the kernerl module should not make the ISO so much bigger:\nhere are some infos and a script to create the extension but maybe we can build it directly into the kernel\nhttp://forum.tinycorelinux.net/index.php/topic,12839.msg71468.html?PHPSESSID=fn92igu8155q6bpfnkg6l2huq3#msg71468\nadditional this will give us a very nice interface for any kind of data exchange by using VBoxManage guestproperty get/set and we wont have to use ssh\n. on most Unix is this tool called ssh-copy-id which is not avaible on OSX:\nhttp://linux.die.net/man/1/ssh-copy-id\nI will adapt my script to check for this in this order:\n~/.ssh/id_rsa.pub ~/.ssh/id_dsa.pub\nand I will add a parameter to add a link to a file\n. @SvenDowideit no I would prefer your solution - just take my code and adapt it to your solution - I am only tryng to get the host only interface final for everybody to use to offer nfs sharing based on the unmodified official ISO.\n. If you implement it thru the raw format - use a tar container which will contains all the files which should be mapped\n. Great - looks like I need to learn one more language to add my features :-)\n. @riobard you found the original creator of the script :-)\n. @YungSang this is a hack #197 which will be removed when a newer version of busybox will be avaible for TCL. In the mean time the error msg will remind everyone that this should be removed in a future version.\n. you can close it\n. @riobard yes :-)\n. no cross compiling does not work as os/user is used which results in the follwing error:\n./boot2docker.exe version\n2014/02/21 13:26:30 cannot get current user: user: Current not implemented on darwin/386\nif build with export CGO_ENABLED=1 i get this error during build:\n```\ngo-darwin-386 build -o boot2docker.exe boot2docker.go \nruntime/cgo\n/go/src/pkg/runtime/cgo/cgo.go:26:46: fatal error: sys/types.h: No such file or directory\ncompilation terminated.\n```\nmore infos here:\nhttp://code.google.com/p/go/issues/detail?id=6376\n. @mitar in a native docker enviroment docker uses a linux specific api to map the subdirectory in a secure way into a container. There is no kind of \"sharing\" based on something like nfs, cifs or vbox involved. \n. The problem with the clock of the virtual box VM is known and the only perfect solution is the vbox guest additions but this is no accepted option.\nWe should look into the option to run the ntpclient on resume - there is a hook to add scripts:\nhttp://wiki.ubuntuusers.de/pm-utils\n. @steeve I had a look at it and spend two days on trying to get them compiled but failed :-(\n. this should be fixed by adding the vbox guest additions #284\nhttps://www.virtualbox.org/manual/ch09.html#changetimesync\n. @SvenDowideit this is a Problem only related to vbox users - there is no sleep/resume on real hardware with clock problems.\n. http://blog.matchgenius.com/tiny-core-acpi-support/\n. sorry guys - but I am to busy with other projects - thanks for asking :-)\n. sorry guys - but I am to busy with other projects - thanks for asking :-)\n. No - NFS Clients do not triggering a file-changed linux kernel event - to solve this you need some kind of inotify sync daemon \n. we should add the parameter \"--fail\" to curl to insure that there is no output if curl fails to connect to the server\n. I would prefer if the ntpclient is only called if an NTP_SERVER was set which should not be the default\nif [ -n \"$NTP_SERVER\" ]; then\n   /usr/local/bin/ntpclient -s -h $NTP_SERVER\nfi\n. remove suspend from pause and put it to\nsave | suspend )  - this makes it easy for everyone who knows this from other systems\n. How about using this to allow even more fine tuning:\n: ${DOCKER_HOST:=\"tcp://0.0.0.0:4243\"}\n/bin/dmesg | /bin/egrep '(VirtualBox|VMware|QEMU)' > /dev/null && EXPOSE_ALL=\"-H $DOCKER_HOST\"\n. ",
    "creack": "I don't second this.\nI see the advantages of having the Vbox additions, but if it happen, it should be a fork. When using boot2docker with baremetal, you do not want them.\n@aheissenberger the \"bind mounts\" are server side only. Meaning you can't mount your local osx directory to the remote linux server.\nHowever, with Vbox addition, you can have a shared folder and then, you have access to it from the server. you can do docker run -v AbsolutePathToTheSharedDirOnServer/YourFileOrDir:ContainerDestination.\n. ",
    "roylee17": "ping @SvenDowideit \n. I'm not sure nproc is portable, but is indeed much cleaner.\nHere's the updated PR\n. I'm not sure nproc is portable, but is indeed much cleaner.\nHere's the updated PR\n. You're right. It's container :-)\nThe associated commit has updated.\n. You're right. It's container :-)\nThe associated commit has updated.\n. Sorry my bad...Pushed  wrong commit.\nShould be updated this time.\n. Sorry my bad...Pushed  wrong commit.\nShould be updated this time.\n. ",
    "tonicospinelli": "@SvenDowideit \n\nwe're trying to remove external dependencies\n\njust to say... VirtualBox is a dependency today, so... why the boot2docker not has a VirtualBox Guest Additions to take easy sharing folder with host? :smirk: \n. ",
    "teodor-pripoae": "You are getting this error becouse docker daemon is not running inside the VM. (maybe related to #50).\n. You are getting this error becouse docker daemon is not running inside the VM. (maybe related to #50).\n. ",
    "anildigital": "It's running for sure.\nI did docker2boot ssh\nand the docker ps\nIt's running in VM\nAlso you can see docker version is printing out stuff.\n. > I got this too. I was able to work around this by manually specifying the hostname every time I ran docker:\n\ndocker -H localhost ps\n\nNope.. that doesn't help for me too.\n. I did above mentioned steps. But it still gives \nAnils-MacBook-Pro:~ anil$ docker ps\n2014/01/06 01:40:18 unexpected EOF\n. For me\ndocker@boot2docker:~$ docker version\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\nLast stable version: 0.8.0, please update docker\ndocker@boot2docker:~$ docker -H tcp:// version\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\nLast stable version: 0.8.0, please update docker\ndocker@boot2docker:~$ docker -H tcp://localhost:4243 version\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\nLast stable version: 0.8.0, please update docker\nIs this an issue?\nI did remove all old versions and downloaded fresh versions.. I guess.\n. ```\n$ boot2docker delete\n/usr/local/bin/boot2docker: line 172: delete: command not found\n.\n$ boot2docker delete\n/usr/local/bin/boot2docker: line 172: delete: command not found\n```\n. Any clue how to update docker insider boot2docker vm?\nIt shows 'Client version: 0.7.6' but now.. we need 0.8\n. Any clue how to update docker insider boot2docker vm?\nIt shows 'Client version: 0.7.6' but now.. we need 0.8\n. ",
    "jackpal": "I got this too. I was able to work around this by manually specifying the hostname every time I ran docker:\ndocker -H localhost ps\n. I got this too. I was able to work around this by manually specifying the hostname every time I ran docker:\ndocker -H localhost ps\n. Oops, never mind me -- my problem was that I didn't have the DOCKER_HOST environment variable set up correctly. Once I set that up I was able to use docker without the -H localhost option\n. Oops, never mind me -- my problem was that I didn't have the DOCKER_HOST environment variable set up correctly. Once I set that up I was able to use docker without the -H localhost option\n. ",
    "garindra": "Did you do these steps written on the readme? (https://github.com/steeve/boot2docker#init-script-osx-only-for-now)\n$ ./boot2docker ssh\ndocker@boot2docker:~$ sudo /usr/local/etc/init.d/docker stop\ndocker@boot2docker:~$ /usr/local/bin/docker -H tcp:// -d > /var/lib/docker/docker.log 2>&1 &\ndocker@boot2docker:~$ exit\n$ curl http://get.docker.io/builds/Darwin/x86_64/docker-0.7.3.tgz | tar xvz\n$ export DOCKER_HOST=localhost\n$ ./usr/local/bin/docker version\n. Did you do these steps written on the readme? (https://github.com/steeve/boot2docker#init-script-osx-only-for-now)\n$ ./boot2docker ssh\ndocker@boot2docker:~$ sudo /usr/local/etc/init.d/docker stop\ndocker@boot2docker:~$ /usr/local/bin/docker -H tcp:// -d > /var/lib/docker/docker.log 2>&1 &\ndocker@boot2docker:~$ exit\n$ curl http://get.docker.io/builds/Darwin/x86_64/docker-0.7.3.tgz | tar xvz\n$ export DOCKER_HOST=localhost\n$ ./usr/local/bin/docker version\n. ",
    "statik": "I'm getting the same symptom using 0.4, a bit puzzled about where to check next.\nI'm running docker stable 0.7.4 installed from homebrew binary.\nThe virtualbox machine has 4343 forwarded to 4343.\nLooking at docker inside the boot2docker instance shows that it is detecting virtualbox just fine and running with -H tcp://\nYet when I run docker -H localhost ps I get the unexpected EOF error.\nAny ideas on how I might be able to provide more useful diagnostics of what is happening?\n. Figured it out, I have the crashplan backup service running on my laptop, and that was conflicting with port 4243 on the host. Changing the host port to 4242 and running docker -H localhost:4242 ps works just fine.\n. ",
    "johntdyer": "Sure,\nhere you go\n``` log\njdyer at retina.local in ~/Projects on git:master x [13:39:17]\n$ boot2docker ssh                                                                                                        \u00b1[\u25cf\u25cf][master]\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\ndocker@localhost's password:\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"_/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           __ o          /\n             \\    \\        /\n              __/\n _                 _   _     _            \n| |   | || \\ _| |  | |  _ \n| '_ \\ / _ \\ / _ \\| | ) / _` |/ _ \\ / | |/ / _ \\ '|\n| |) | () | () | | / / (| | () | (|   <  / |\n|./ _/ _/ __|__,|_/ _||____|_|\nboot2docker: 0.5.1\ndocker@boot2docker:~$ docker version\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\nLast stable version: 0.8.0, please update docker\ndocker@boot2docker:~$ docker -H tcp:// version\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\nLast stable version: 0.8.0, please update docker\ndocker@boot2docker:~$ docker -H tcp://localhost:4243 version\nClient version: 0.7.6\nGo version (client): go1.2\nGit commit (client): bc3b2ec\nServer version: 0.7.6\nGit commit (server): bc3b2ec\nGo version (server): go1.2\nLast stable version: 0.8.0, please update docker\ndocker@boot2docker:~$\n```\n. Still not working for me... Here are the steps I performed\nStop\n``` log\njdyer at retina.local in ~/Projects on git:master x [13:43:49]\n$ boot2docker stop                                 \n[2014-02-05 13:43:50] Shutting down boot2docker-vm...\n```\nUpgrade\n``` log\njdyer at retina.local in ~/Projects on git:master x [13:43:55]\n$  curl https://raw.github.com/steeve/boot2docker/master/boot2docker > ~/bin/boot2docker  \njdyer at retina.local in ~/Projects on git:master x [13:44:05]\n$ ls -la ~/bin/boot2docker\n-rwxr-xr-x 1 jdyer staff 6884 Feb  5 13:44 /Users/jdyer/bin/boot2docker\n```\nDelete\n``` log\njdyer at retina.local in ~/Projects on git:master x [13:44:25]\n$ boot2docker delete\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n```\nInit\n``` log\njdyer at retina.local in ~/Projects on git:master x [13:44:26]\n$ boot2docker init\n[2014-02-05 13:44:30] Creating VM boot2docker-vm\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 954bcc52-9264-412f-932d-54f8465e8fe9\nSettings file: '/Users/jdyer/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n[2014-02-05 13:44:30] Setting VM settings\n[2014-02-05 13:44:30] Setting VM networking\n[2014-02-05 13:44:30] Setting VM disks\n[2014-02-05 13:44:30] Creating 40000 Meg hard drive...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nDisk image created. UUID: df9a7622-0ad2-42d4-b0c5-36f0743976b0\nConverting from raw image file=\"format-flag.txt\" to file=\"format-flag.vmdk\"...\nCreating dynamic image with size 5242880 bytes (5MB)...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone hard disk created in format 'VMDK'. UUID: df9a7622-0ad2-42d4-b0c5-36f0743976b0\n[2014-02-05 13:44:31] Done.\n[2014-02-05 13:44:31] You can now type boot2docker up and wait for the VM to start.\n```\nStart\n``` log\njdyer at retina.local in ~/Projects on git:master x [13:44:31]\n$ boot2docker up\n[2014-02-05 13:44:38] Starting boot2docker-vm...\n[2014-02-05 13:44:58] Started.\n```\nVersion\n``` log\njdyer at retina.local in ~/Projects on git:master x [13:44:58]\n$ docker version                                   \nClient version: 0.8.0\nGo version (client): go1.2\nGit commit (client): cc3a8c8\n2014/02/05 13:45:05 unexpected EOF\n```\n. Hrm... Not working for me\nI did get v0.5.2\nlog\n$ boot2docker ssh                                                                                                        \u00b1[\u25cf\u25cf][master]\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\ndocker@localhost's password:\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.5.2\ndocker@boot2docker:~$ docker version\nClient version: 0.8.0\nGo version (client): go1.2\nGit commit (client): cc3a8c8\nServer version: 0.8.0\nGit commit (server): cc3a8c8\nGo version (server): go1.2\nLast stable version: 0.8.0\ndocker@boot2docker:~$ docker -H tcp://localhost:4243 version\nClient version: 0.8.0\nGo version (client): go1.2\nGit commit (client): cc3a8c8\nServer version: 0.8.0\nGit commit (server): cc3a8c8\nGo version (server): go1.2\nLast stable version: 0.8.0\ndocker@boot2docker:~$  docker -H tcp:// version\nClient version: 0.8.0\nGo version (client): go1.2\nGit commit (client): cc3a8c8\nServer version: 0.8.0\nGit commit (server): cc3a8c8\nGo version (server): go1.2\nLast stable version: 0.8.0\ndocker@boot2docker:~$\nbut when I try to run the client on the host I still get EOF\n``` bash\njdyer at retina.local in ~/Projects on git:master x [14:44:55]\n$ docker version                                                                                                         \u00b1[\u25cf\u25cf][master]\nClient version: 0.8.0\nGo version (client): go1.2\nGit commit (client): cc3a8c8\n2014/02/05 14:44:57 unexpected EOF\n```\n. I was able to fix the crashplan issue by doing the following:\n``` bash\nStop desktop UI\nsudo kill -15 ps aux | grep -e \"CrashPlanServic[e]\" | awk '{print $2}'\nStop backup service\nsudo launchctl unload /Library/LaunchDaemons/com.crashplan.engine.plist\nUpdate backup service listen port\nsed -i \"\" 's/4243/4244/' /Library/Application\\ Support/CrashPlan/conf/my.service.xml\nUpdate UI to use new Backup agent listen port\nsed -i \"\" 's/^#ui.properties=4243/^ui.properties=4244/' /Applications/CrashPlan.app/Contents/Resources/Java/conf/ui.properties\nRestart backup daemon\nsudo launchctl load /Library/LaunchDaemons/com.crashplan.engine.plist\n```\n. ",
    "helderco": "I'm also getting this. Same steps as @johntdyer \n. I'm also getting this. Same steps as @johntdyer \n. I can't even boot2docker up, but\n```\n$ curl -v http://localhost:4243\n Adding handle: conn: 0x7f9342804400\n Adding handle: send: 0\n Adding handle: recv: 0\n Curl_addHandleToPipeline: length: 1\n - Conn 0 (0x7f9342804400) send_pipe: 1, recv_pipe: 0\n About to connect() to localhost port 4243 (#0)\n   Trying ::1...\n   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 4243 (#0)\n\nGET / HTTP/1.1\nUser-Agent: curl/7.30.0\nHost: localhost:4243\nAccept: /\n^C\n``\n. I can't evenboot2docker up`, but\n\n```\n$ curl -v http://localhost:4243\n Adding handle: conn: 0x7f9342804400\n Adding handle: send: 0\n Adding handle: recv: 0\n Curl_addHandleToPipeline: length: 1\n - Conn 0 (0x7f9342804400) send_pipe: 1, recv_pipe: 0\n About to connect() to localhost port 4243 (#0)\n   Trying ::1...\n   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 4243 (#0)\n\nGET / HTTP/1.1\nUser-Agent: curl/7.30.0\nHost: localhost:4243\nAccept: /\n^C\n```\n. I still can't solve mine, not even sure what to do next. Booting takes a long time, can't shut down (have to force it in VirtualBox), can't ssh...\n\n$ sudo lsof -i :2022\nCOMMAND    PID   USER   FD   TYPE            DEVICE SIZE/OFF NODE NAME\nVBoxHeadl 1270 helder   26u  IPv4 0x10d9d13ccbf88f1      0t0  TCP localhost:down (LISTEN)\nVBoxHeadl 1270 helder   29u  IPv4 0x10d9d13ccbf8109      0t0  TCP localhost:down->localhost:49995 (CLOSE_WAIT)\n$ sudo lsof -i :4243\nCOMMAND    PID   USER   FD   TYPE            DEVICE SIZE/OFF NODE NAME\nVBoxHeadl 1270 helder   27u  IPv4 0x10d9d13cccf2109      0t0  TCP localhost:4243 (LISTEN)\nIt must be something wrong with VirtualBox but don't know how to solve it. I'll try reinstalling.\n. I still can't solve mine, not even sure what to do next. Booting takes a long time, can't shut down (have to force it in VirtualBox), can't ssh...\n$ sudo lsof -i :2022\nCOMMAND    PID   USER   FD   TYPE            DEVICE SIZE/OFF NODE NAME\nVBoxHeadl 1270 helder   26u  IPv4 0x10d9d13ccbf88f1      0t0  TCP localhost:down (LISTEN)\nVBoxHeadl 1270 helder   29u  IPv4 0x10d9d13ccbf8109      0t0  TCP localhost:down->localhost:49995 (CLOSE_WAIT)\n$ sudo lsof -i :4243\nCOMMAND    PID   USER   FD   TYPE            DEVICE SIZE/OFF NODE NAME\nVBoxHeadl 1270 helder   27u  IPv4 0x10d9d13cccf2109      0t0  TCP localhost:4243 (LISTEN)\nIt must be something wrong with VirtualBox but don't know how to solve it. I'll try reinstalling.\n. I've completely removed VirtualBox (with TrashMe), then reinstalled, still no luck.\n$ VBoxManage --version\n4.3.7r91560\n. I've completely removed VirtualBox (with TrashMe), then reinstalled, still no luck.\n$ VBoxManage --version\n4.3.7r91560\n. Works when downgraded to version 4.3.6r91406, but then I have this problem: https://www.virtualbox.org/ticket/12441#comment:16\nWhat's in 4.3.7 that boot2docker no longer works?\n. Works when downgraded to version 4.3.6r91406, but then I have this problem: https://www.virtualbox.org/ticket/12441#comment:16\nWhat's in 4.3.7 that boot2docker no longer works?\n. I posted the link in #48. \nhttps://www.virtualbox.org/ticket/12441#comment:16\n. ",
    "shykes": "boot2docker ships with a script which can handle installs and updates (I\nthink!)\nOn Wed, Feb 5, 2014 at 11:00 AM, Anil Wadghule notifications@github.comwrote:\n\nAny clue how to update docker insider boot2docker vm?\nIt shows 'Client version: 0.7.6' but now.. we need 0.8\n\nReply to this email directly or view it on GitHubhttps://github.com/steeve/boot2docker/issues/48#issuecomment-34224465\n.\n. Hi all, this has become one of the top issues for people using Docker on Mac and Windows, period. So I'm going to escalate it to a Docker-wide issue, and make a call taking in consideration the pros and cons for the whole platform. @SvenDowideit @steeve @tianon I hope you won't mind.\n\nHere's what everyone seems to agree on:\n- A lot of people install Docker on their Mac and Windows machines. Most of them install boot2docker as part of this, because that's the official installation method for those platforms.\n- Many people expect docker run -v /host:/container to work on their Docker installation, even if that's a Mac or Windows machine backed by boot2docker. Currently, it does not work as expected.\n- The ideal solution is to solve this in Docker itself, with built-in filesystem sync between client and server. This is ideal because it works exactly the same way on 100% of Docker installations, and is not subject to variations and quirks in hypervisor and host system configuration.\n- This ideal solution is work in progress [1]. While it's being developed, if there's a stopgap solution which can be implemented faster, which 1) Makes life easier for a large number of Docker users, 2) doesn't make it harder or longer to implement the ideal solution, and 3) can be easily deprecated later in favor of the ideal solution - then we should implement it.\n- One possible stopgap is to install vbox guest additions, and configure the VM so that the current user's home directory on the host is shared at the same path in the VM. This will allow docker run -v /host:/container to work as expected, as long as /host is a path inside the current user's home directory. That is typically the case for the most common use case, which is \"interactive development\" with the project source code mounted into the container.\n- The advantages of this stopgap are 1) they are relatively easy to add. If we agree we could probably release them with 1.2 next week. 2) they are forward-compatible. In a future version of Docker, -v /host:/container from a remote client will almost certainly change to always share the contents of the client-side host. When this happens, the stopgap can be safely retired, and the behavior will not break people's expectations.\n- Possible disadvantages of this stopgap: 1) vbox guest additions have a reputation of being buggy and slow. It might create new problems for boot2docker users. 2) it might make the boot2docker install and upgrade process more difficult. If that is the case, we should not merge.\nHere are my questions to all of you:\n1: do you disagree with anything I stated here, or do you feel I forgot something?\n2: how do you feel about the disadvantages? Can they be solved or mitigated? Do you feel the the advantages are worth the tradeoff?\n. ",
    "FabriZZio": "Works! Thanks!\n. Works! Thanks!\n. ",
    "phrawzty": "Everything appears to work as advertised right up until that EOF from the host docker binary (as noted in this gist). :frowning: \nI suspect the problem might be a port conflict - note the output from netcat, which suggests exactly that:\n```\n$ nc -vz localhost 4243\nnc: connectx to localhost port 4243 (tcp) failed: Connection refused\nfound 0 associations\nfound 1 connections:\n     1: flags=82\n    outif lo0\n    src 127.0.0.1 port 52994\n    dst 127.0.0.1 port 4243\n    rank info not available\n    TCP aux info available\nConnection to localhost port 4243 [tcp/*] succeeded!\n```\n. Everything appears to work as advertised right up until that EOF from the host docker binary (as noted in this gist). :frowning: \nI suspect the problem might be a port conflict - note the output from netcat, which suggests exactly that:\n```\n$ nc -vz localhost 4243\nnc: connectx to localhost port 4243 (tcp) failed: Connection refused\nfound 0 associations\nfound 1 connections:\n     1: flags=82\n    outif lo0\n    src 127.0.0.1 port 52994\n    dst 127.0.0.1 port 4243\n    rank info not available\n    TCP aux info available\nConnection to localhost port 4243 [tcp/*] succeeded!\n```\n. Indeed:\n```\n$ sudo lsof -i :4243\nCOMMAND PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME\njava    106 root   80u  IPv4 0x526e46575c780cd7      0t0  TCP localhost:4243 (LISTEN)\n$ ps ax | grep java | grep -v grep | wc -l\n       1\n$ ps ax | grep java\n89722   ??  SNs    0:02.60 /usr/bin/java -Dapp=CrashPlanService      \n$ sudo launchctl unload /Library/LaunchDaemons/com.crashplan.engine.plist\n$ ps ax | grep java | grep -v grep | wc -l\n       0\n```\nGreat, let's try b2dc again:\n```\n$ ./boot2docker start\n[2014-02-05 21:43:32] Starting boot2docker-vm...\n[2014-02-05 21:43:52] Started.\n$ ./docker info\nContainers: 0\nImages: 0\nDriver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 0\nDebug mode (server): true\nDebug mode (client): false\nFds: 10\nGoroutines: 12\nExecution Driver: lxc-0.8.0\nEventsListeners: 0\nKernel Version: 3.12.1-tinycore64\nInit Path: /usr/local/bin/docker\n```\nSo yeah, no wonder it EOF'd, haha.  Sorry for the noise - total user error. :tongue: \n. Indeed:\n```\n$ sudo lsof -i :4243\nCOMMAND PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME\njava    106 root   80u  IPv4 0x526e46575c780cd7      0t0  TCP localhost:4243 (LISTEN)\n$ ps ax | grep java | grep -v grep | wc -l\n       1\n$ ps ax | grep java\n89722   ??  SNs    0:02.60 /usr/bin/java -Dapp=CrashPlanService      \n$ sudo launchctl unload /Library/LaunchDaemons/com.crashplan.engine.plist\n$ ps ax | grep java | grep -v grep | wc -l\n       0\n```\nGreat, let's try b2dc again:\n```\n$ ./boot2docker start\n[2014-02-05 21:43:32] Starting boot2docker-vm...\n[2014-02-05 21:43:52] Started.\n$ ./docker info\nContainers: 0\nImages: 0\nDriver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 0\nDebug mode (server): true\nDebug mode (client): false\nFds: 10\nGoroutines: 12\nExecution Driver: lxc-0.8.0\nEventsListeners: 0\nKernel Version: 3.12.1-tinycore64\nInit Path: /usr/local/bin/docker\n```\nSo yeah, no wonder it EOF'd, haha.  Sorry for the noise - total user error. :tongue: \n. ",
    "ashleyw": "Solved by changing the the CrashPlan port away from 4243. :+1: \n. Solved by changing the the CrashPlan port away from 4243. :+1: \n. ",
    "rmoff": "Same issue with Crashplan port conflict, stopping CrashPlan engine per @johntdyer's solution and then restarting boot2docker worked for me.\n. ",
    "thebengeu": "Just to add to @johntdyer's solution, changing the CrashPlan menu bar app's setting for the backup service port too:\n``` sh\n!/bin/sh\nPORT=4200\nsudo launchctl unload /Library/LaunchDaemons/com.crashplan.engine.plist\nsudo sed -i '' \"s/()[^<]/\\1$PORT/\" /Library/Application\\ Support/CrashPlan/conf/my.service.xml\nsed -i '' \"s/#(servicePort=).*/\\1$PORT/\" /Applications/CrashPlan.app/Contents/Resources/Java/conf/ui.properties\ndefaults write /Applications/CrashPlan.app/Contents/Resources/CrashPlan\\ menu\\ bar.app/Contents/Info CPPort $PORT\nsudo launchctl load /Library/LaunchDaemons/com.crashplan.engine.plist\n```\nhttps://gist.github.com/ahbeng/9065790\n. I'd be happy to help with this, as I've been maintaining unofficial experimental ISO releases at ahbeng/boot2docker-experimental for awhile.\nHowever, I'm not sure what the regular boot2docker ISO release process looks like as I don't see a release script.\nIf automated releases for experimental ISOs are desired, there's a release script which might be helpful to adapt.\n. ",
    "mitchwongho": "I was getting the same issue:\nmwh-mbp:bin mwho$ docker version\nClient version: 0.9.1\nGo version (client): go1.2.1\nGit commit (client): 3600720\n2014/04/10 22:56:30 unexpected EOF\nI then started up boot2docker.iso from VirtualBox Manager (VBM) and got the following:\nThis kernel requires an x84-64 CPU, but only detected an i686 CPU.\nUnable to boot - please use a kernel appropriate for your CPU\nI thought this strange, so I started poking around the VMs setting in VBM, what I found was that if I toggled the VM's OS from 'Linux 2.6/3.x (64 bit)' to 'Linux 2.6/3.x (32 bit)' and then back to the 64-bit version, the VM would start up correctly, and so 'docker version' would response as expected:\nmwh-mbp:bin mwho$ docker version\nClient version: 0.9.1\nGo version (client): go1.2.1\nGit commit (client): 3600720\nServer version: 0.10.0\nGit commit (server): dc9c28f\nGo version (server): go1.2.1\nbtw I'm running VirtualBox version 4.3.10r93012\n. ",
    "systembell": "@rhacker @aheissenberger VBoxManage modifyvm \"boot2docker-vm\" --natdnshostresolver1 on works for me, as well. Running 0.11.1. Cheers.\n. ",
    "rhacker": "@m1crofarmer but still, i find that this doesn't work flawlessly. The problem will still come back. \n. @m1crofarmer but still, i find that this doesn't work flawlessly. The problem will still come back. \n. I have no idea what's going on but reinit the vm and backup the hard drive disk in vm work flawlessly. I just delete the old, flawed vm :) I guess I should close this one then.\n. ",
    "lifepillar": "Should this be re-opened? I was getting the error in the subject, but I could not connect in any way to the vm, so I ran the iso from VirtualBox as @mitchwongho did, and got the same message. The suggested fix (toggle to 32 bit and then to 64 bit again) fixed the misbehavior. Details: OS X 10.7.5, 2.4Ghz Core 2 Duo, boot2docker 0.9.1 and docker 0.11.1, both from Homebrew.\n. Should this be re-opened? I was getting the error in the subject, but I could not connect in any way to the vm, so I ran the iso from VirtualBox as @mitchwongho did, and got the same message. The suggested fix (toggle to 32 bit and then to 64 bit again) fixed the misbehavior. Details: OS X 10.7.5, 2.4Ghz Core 2 Duo, boot2docker 0.9.1 and docker 0.11.1, both from Homebrew.\n. ",
    "michi88": "the 0.12.0 release, with the 2375 port, fixed it for me. Thanks!\nhttps://github.com/boot2docker/osx-installer/releases/tag/v0.12.0\n. ",
    "oschrenk": "I have the same problem and wanted to partition and format the HDD as you mentioned.\nmount doesn't list an sda1 though\ndocker@boot2docker:~$ mount\nrootfs on / type rootfs (rw,relatime,size=922024k,nr_inodes=125100)\nproc on /proc type proc (rw,relatime)\nsysfs on /sys type sysfs (rw,relatime)\ndevpts on /dev/pts type devpts (rw,relatime,mode=600,ptmxmode=000)\ntmpfs on /dev/shm type tmpfs (rw,relatime)\ncgroup on /cgroup type cgroup (rw,relatime,perf_event,blkio,freezer,devices,memory,cpuacct,cpu,cpuset)\nnone on /dev/mqueue type mqueue (rw,relatime)\nfusectl on /sys/fs/fuse/connections type fusectl (rw,relatime)\n. I didn't see that comment on the README about Hard Disk Persistence using Virtualbox. I needed to execute those commands.\n. I can't mount it. The iso was only 227kb big and the content was a Github HTML page with the title <title>Page not found &middot; GitHub</title>. It seems the download script is broken. Downloading the image manually now.\n. Seems the script to parse the latest tag is not working \ncurl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null | grep \"tag_name\" | awk '{print $2}' | sed 's/[\",]*//g' | head -1\nAutomatically\n. As mentioned in my last comment, the download script does not work. Here is the output I get:\nCalling \ncurl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null \nresults in\n[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/147197\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/147197/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/147197/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.4.0\",\"id\":147197,\"tag_name\":\"v0.4.0\",\"target_commitish\":\"master\",\"name\":\"v0.4.0\",\"body\":\"* Automatically let `dockerd` listen on all interface if running in a VM (boot2docker)\\r\\n* Upgrade to LXC 1.0 beta1\\r\\n* Kernel now fully support cgroups\\r\\n* Disable frame buffer on boot (useful for cloud)\\r\\n* Fix some automount issues\\r\\n* ACPI support\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2014-01-14T01:27:18Z\",\"published_at\":\"2014-01-14T01:39:39Z\",\"assets\":[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/assets/60279\",\"id\":60279,\"name\":\"boot2docker.iso\",\"label\":\"boot2docker.iso\",\"content_type\":\"application/octet-stream\",\"state\":\"uploaded\",\"size\":25165824,\"download_count\":408,\"created_at\":\"2014-01-14T01:34:47Z\",\"updated_at\":\"2014-01-14T01:39:39Z\"}],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.4.0\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.4.0\"},{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/115995\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/115995/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/115995/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.3.0\",\"id\":115995,\"tag_name\":\"v0.3.0\",\"target_commitish\":\"master\",\"name\":\"v0.3.0\",\"body\":\"* Docker v0.7.1\\r\\n* 40% reduced size (38mb to 23mb)\\r\\n* Hybrid ISO file (install by `dd` the ISO to a hard drive)\\r\\n* Firmware files and iw tools for wifi cards\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-12-08T23:03:58Z\",\"published_at\":\"2013-12-08T23:11:32Z\",\"assets\":[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/assets/46405\",\"id\":46405,\"name\":\"boot2docker.iso\",\"label\":\"boot2docker.iso\",\"content_type\":\"application/octet-stream\",\"state\":\"uploaded\",\"size\":24117248,\"download_count\":884,\"created_at\":\"2013-12-08T23:16:12Z\",\"updated_at\":\"2013-12-08T23:20:11Z\"}],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.3.0\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.3.0\"},{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112533\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112533/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/112533/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.2\",\"id\":112533,\"tag_name\":\"v0.2\",\"target_commitish\":\"master\",\"name\":\"Such new, very fast\",\"body\":\"This version adds a nicer boot process, no longer requires sudo, and properly redirects the console to ttyS0.\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-12-05T01:06:11Z\",\"published_at\":\"2013-12-05T01:15:29Z\",\"assets\":[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/assets/44792\",\"id\":44792,\"name\":\"boot2docker.iso\",\"label\":\"boot2docker.iso\",\"content_type\":\"application/octet-stream\",\"state\":\"uploaded\",\"size\":37881856,\"download_count\":288,\"created_at\":\"2013-12-05T01:08:26Z\",\"updated_at\":\"2013-12-05T01:15:29Z\"}],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.2\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.2\"},{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112099\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112099/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/112099/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.1\",\"id\":112099,\"tag_name\":\"v0.1\",\"target_commitish\":\"master\",\"name\":\"First version\",\"body\":\"This is the first version of boot2docker. Just download this ISO and boot from it to get started.\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-12-04T17:34:10Z\",\"published_at\":\"2013-12-04T18:32:56Z\",\"assets\":[],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.1\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.1\"}]\nCalling \ncurl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null | grep \"tag_name\"\nresults in (the same as above)\n[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/147197\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/147197/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/147197/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.4.0\",\"id\":147197,\"tag_name\":\"v0.4.0\",\"target_commitish\":\"master\",\"name\":\"v0.4.0\",\"body\":\"* Automatically let `dockerd` listen on all interface if running in a VM (boot2docker)\\r\\n* Upgrade to LXC 1.0 beta1\\r\\n* Kernel now fully support cgroups\\r\\n* Disable frame buffer on boot (useful for cloud)\\r\\n* Fix some automount issues\\r\\n* ACPI support\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2014-01-14T01:27:18Z\",\"published_at\":\"2014-01-14T01:39:39Z\",\"assets\":[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/assets/60279\",\"id\":60279,\"name\":\"boot2docker.iso\",\"label\":\"boot2docker.iso\",\"content_type\":\"application/octet-stream\",\"state\":\"uploaded\",\"size\":25165824,\"download_count\":408,\"created_at\":\"2014-01-14T01:34:47Z\",\"updated_at\":\"2014-01-14T01:39:39Z\"}],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.4.0\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.4.0\"},{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/115995\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/115995/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/115995/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.3.0\",\"id\":115995,\"tag_name\":\"v0.3.0\",\"target_commitish\":\"master\",\"name\":\"v0.3.0\",\"body\":\"* Docker v0.7.1\\r\\n* 40% reduced size (38mb to 23mb)\\r\\n* Hybrid ISO file (install by `dd` the ISO to a hard drive)\\r\\n* Firmware files and iw tools for wifi cards\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-12-08T23:03:58Z\",\"published_at\":\"2013-12-08T23:11:32Z\",\"assets\":[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/assets/46405\",\"id\":46405,\"name\":\"boot2docker.iso\",\"label\":\"boot2docker.iso\",\"content_type\":\"application/octet-stream\",\"state\":\"uploaded\",\"size\":24117248,\"download_count\":884,\"created_at\":\"2013-12-08T23:16:12Z\",\"updated_at\":\"2013-12-08T23:20:11Z\"}],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.3.0\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.3.0\"},{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112533\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112533/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/112533/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.2\",\"id\":112533,\"tag_name\":\"v0.2\",\"target_commitish\":\"master\",\"name\":\"Such new, very fast\",\"body\":\"This version adds a nicer boot process, no longer requires sudo, and properly redirects the console to ttyS0.\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-12-05T01:06:11Z\",\"published_at\":\"2013-12-05T01:15:29Z\",\"assets\":[{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/assets/44792\",\"id\":44792,\"name\":\"boot2docker.iso\",\"label\":\"boot2docker.iso\",\"content_type\":\"application/octet-stream\",\"state\":\"uploaded\",\"size\":37881856,\"download_count\":288,\"created_at\":\"2013-12-05T01:08:26Z\",\"updated_at\":\"2013-12-05T01:15:29Z\"}],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.2\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.2\"},{\"url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112099\",\"assets_url\":\"https://api.github.com/repos/steeve/boot2docker/releases/112099/assets\",\"upload_url\":\"https://uploads.github.com/repos/steeve/boot2docker/releases/112099/assets{?name}\",\"html_url\":\"https://github.com/steeve/boot2docker/releases/v0.1\",\"id\":112099,\"tag_name\":\"v0.1\",\"target_commitish\":\"master\",\"name\":\"First version\",\"body\":\"This is the first version of boot2docker. Just download this ISO and boot from it to get started.\",\"draft\":false,\"prerelease\":false,\"created_at\":\"2013-12-04T17:34:10Z\",\"published_at\":\"2013-12-04T18:32:56Z\",\"assets\":[],\"tarball_url\":\"https://api.github.com/repos/steeve/boot2docker/tarball/v0.1\",\"zipball_url\":\"https://api.github.com/repos/steeve/boot2docker/zipball/v0.1\"}]\nThe awk script then \ncurl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null | grep \"tag_name\" | awk '{print $2}'\nresults in\nAutomatically\nAfter this sed and head don't change the result. It seem that the script relies on Github to respond with pretty printed json.\nI can have a look at it tomorrow at send a pull request.\n. Not a proxy. But I had a .curlrc setting the user agent to user-agent = \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)\" masking curl as IE10 on Windows 7. Therefore I effectively was calling\ncurl -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null\"\nWith that user agent, Github sends the API result compressed, resulting in my problems. Without that user agent everything is fine. \nSorry for the false alarm. Though it is weird that the result depends on the user agent.\n. Thanks!\n. Thanks!\n. I might have the same issue.\nMy goal is to have a directory on my OSX host machine that a container will write to (specifically tutum/mysql). From what I understand in the README I do:\n```\n  $ boot2docker init\n  $ boot2docker up\n  2014/07/11 15:47:22 Started.\n    2014/07/11 15:47:22 To connect the Docker client to the Docker daemon, please set:\n    2014/07/11 15:47:22     export DOCKER_HOST=tcp://192.168.59.103:2375\n  $ export DOCKER_HOST=tcp://192.168.59.103:2375\n  $ boot2docker ssh\n  docker@boot2docker:~$ docker run -v /data --name my-data busybox true\n  docker@boot2docker:~$ docker run --rm -v /usr/local/bin/docker:/docker -v /var/run/docker.sock:/docker.sock svendowideit/samba my-data\n  docker@boot2docker:~$ docker ps\n  CONTAINER ID        IMAGE                       COMMAND                CREATED             STATUS              PORTS                                                                                    NAMES\n  40f52eb4be4e        svendowideit/samba:latest   /setup.sh --start my   6 seconds ago       Up 6 seconds        0.0.0.0:137->137/tcp, 0.0.0.0:138->138/tcp, 0.0.0.0:139->139/tcp, 0.0.0.0:445->445/tcp   samba-server      \n  docker@boot2docker:~$ docker logs samba-server\n  Setting up samba cfg --start my-data /data\n  add /data\n  Starting Samba daemons: nmbd smbd.\n  watching /var/log/samba/*\n  ==> /var/log/samba/cores <==\n==> /var/log/samba/log.nmbd <==\n  [2014/07/11 13:35:41,  0] nmbd/nmbd.c:861(main)\n    nmbd version 3.6.6 started.\n    Copyright Andrew Tridgell and the Samba Team 1992-2011\n==> /var/log/samba/log.smbd <==\n  [2014/07/11 13:35:41,  0] smbd/server.c:1053(main)\n    smbd version 3.6.6 started.\n    Copyright Andrew Tridgell and the Samba Team 1992-2011\n  tail: error reading `/var/log/samba/cores': Is a directory\n  tail: /var/log/samba/cores: cannot follow end of this type of file; giving up on this name\n  [2014/07/11 13:35:41.734285,  0] printing/print_cups.c:110(cups_connect)\n    Unable to connect to CUPS server localhost:631 - Connection refused\n  [2014/07/11 13:35:41.736190,  0] printing/print_cups.c:487(cups_async_callback)\n    failed to retrieve printer list: NT_STATUS_UNSUCCESSFUL\n==> /var/log/samba/log.nmbd <==\n  [2014/07/11 13:36:04,  0] nmbd/nmbd_become_lmb.c:397(become_local_master_stage2)\n    *\nSamba name server 40F52EB4BE4E is now a local master browser for workgroup WORKGROUP on subnet 172.17.0.5\n\n*****\n\ndocker@boot2docker:~$ exit\n  $ boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.103\n```\nI then go to the finder and try to connect to the server using\ncifs://192.168.59.103/data\nas the server address. This will time out. I added port forwarding in VirtualBox\nnetbios-ns TCP 127.0.0.1 137 137\n  netbios-dgm TCP 127.0.0.1 138 138\n  netbios-ssn TCP 127.0.0.1 139 139\n  netbios-ssn TCP 127.0.0.1 139 139\n  cifs TCP 127.0.0.1 445 445\nbut with this configuration the connection will also time out.\nAny clues what I'm missing?\nPS: \n- I can't find the option to login as a guest\nalso it seems that I can't connect to the machine using the ip\n```\n$ boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.103\n```\nand if I set \nexport DOCKER_HOST=tcp://192.168.59.103:2375\ndocker ps will time out.\nbut I use\nexport DOCKER_HOST=tcp://localhost:2375\nit works.\n. I might have the same issue.\nMy goal is to have a directory on my OSX host machine that a container will write to (specifically tutum/mysql). From what I understand in the README I do:\n```\n  $ boot2docker init\n  $ boot2docker up\n  2014/07/11 15:47:22 Started.\n    2014/07/11 15:47:22 To connect the Docker client to the Docker daemon, please set:\n    2014/07/11 15:47:22     export DOCKER_HOST=tcp://192.168.59.103:2375\n  $ export DOCKER_HOST=tcp://192.168.59.103:2375\n  $ boot2docker ssh\n  docker@boot2docker:~$ docker run -v /data --name my-data busybox true\n  docker@boot2docker:~$ docker run --rm -v /usr/local/bin/docker:/docker -v /var/run/docker.sock:/docker.sock svendowideit/samba my-data\n  docker@boot2docker:~$ docker ps\n  CONTAINER ID        IMAGE                       COMMAND                CREATED             STATUS              PORTS                                                                                    NAMES\n  40f52eb4be4e        svendowideit/samba:latest   /setup.sh --start my   6 seconds ago       Up 6 seconds        0.0.0.0:137->137/tcp, 0.0.0.0:138->138/tcp, 0.0.0.0:139->139/tcp, 0.0.0.0:445->445/tcp   samba-server      \n  docker@boot2docker:~$ docker logs samba-server\n  Setting up samba cfg --start my-data /data\n  add /data\n  Starting Samba daemons: nmbd smbd.\n  watching /var/log/samba/*\n  ==> /var/log/samba/cores <==\n==> /var/log/samba/log.nmbd <==\n  [2014/07/11 13:35:41,  0] nmbd/nmbd.c:861(main)\n    nmbd version 3.6.6 started.\n    Copyright Andrew Tridgell and the Samba Team 1992-2011\n==> /var/log/samba/log.smbd <==\n  [2014/07/11 13:35:41,  0] smbd/server.c:1053(main)\n    smbd version 3.6.6 started.\n    Copyright Andrew Tridgell and the Samba Team 1992-2011\n  tail: error reading `/var/log/samba/cores': Is a directory\n  tail: /var/log/samba/cores: cannot follow end of this type of file; giving up on this name\n  [2014/07/11 13:35:41.734285,  0] printing/print_cups.c:110(cups_connect)\n    Unable to connect to CUPS server localhost:631 - Connection refused\n  [2014/07/11 13:35:41.736190,  0] printing/print_cups.c:487(cups_async_callback)\n    failed to retrieve printer list: NT_STATUS_UNSUCCESSFUL\n==> /var/log/samba/log.nmbd <==\n  [2014/07/11 13:36:04,  0] nmbd/nmbd_become_lmb.c:397(become_local_master_stage2)\n    *\nSamba name server 40F52EB4BE4E is now a local master browser for workgroup WORKGROUP on subnet 172.17.0.5\n\n*****\n\ndocker@boot2docker:~$ exit\n  $ boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.103\n```\nI then go to the finder and try to connect to the server using\ncifs://192.168.59.103/data\nas the server address. This will time out. I added port forwarding in VirtualBox\nnetbios-ns TCP 127.0.0.1 137 137\n  netbios-dgm TCP 127.0.0.1 138 138\n  netbios-ssn TCP 127.0.0.1 139 139\n  netbios-ssn TCP 127.0.0.1 139 139\n  cifs TCP 127.0.0.1 445 445\nbut with this configuration the connection will also time out.\nAny clues what I'm missing?\nPS: \n- I can't find the option to login as a guest\nalso it seems that I can't connect to the machine using the ip\n```\n$ boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.103\n```\nand if I set \nexport DOCKER_HOST=tcp://192.168.59.103:2375\ndocker ps will time out.\nbut I use\nexport DOCKER_HOST=tcp://localhost:2375\nit works.\n. ",
    "jemmyw": "I still get this error after persisting the disk. Docker is storing files in /tmp/docker-build on the rootfs partition.\nroot@boot2docker:~# df -h\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                  900.4M     97.5M    802.9M  11% /\ntmpfs                   500.2M    696.0K    499.5M   0% /dev/shm\n/dev/sda1                38.3G    886.3M     35.5G   2% /var/lib/docker\n. ",
    "mcollina": "In the latest release the /dev/sda1 is already mounted, so everything should be ok and we can close this bug?\n. Same here. It was working smoothly on v1.2.0\n. Let me add some more details: I was able to replicate this on three different Macs, coming from a fresh install. Any idea how I can help solve this?\nnmap reports the port being open, however connecting in there gives nothing back.\n. For me the problem were two:\n1. the wrong DOCKER_HOST variable, the port was changed and there was no notice (it should be written IN CAPS), also a lot of guides are now broken :(.\n2. at some point I got docker 1.2.0 reinstalled, and that was bad.\n. ",
    "eamonnfaherty": "How come this was closed?  Is it possible to run virtualbox within a linux container on a mac os x host os?\n. How come this was closed?  Is it possible to run virtualbox within a linux container on a mac os x host os?\n. ",
    "chrisabrams": "@steeve I tried your VBoxManage command and now boot2docker doesn't load. Is there another config setting I need to change?\nEdit: It seems I had a typo earlier; working now.\n. I'm using master based on this guide: http://docs.docker.io/en/latest/installation/mac/\n. curl worked fine; it was when i said boot2docker download that it redirected.\n. Alright, well I curl'd boot2docker again, and the problem went away.\n. :+1: \n. ",
    "schickling": "Any update @steeve? Are you planing to include the vbox additions or will you merge NFS support?\n. Sounds great. I'll close this issue. Please provide a little usage example in the README how to mount a local folder as soon as the feature makes it into the master branch.\nThanks for all your work! :+1: \n. @eugeneware makes some good points :+1: \n. @eugeneware makes some good points :+1: \n. Since osx is unix based the linux/unix install steps also work for osx.\n. We could link the doc folder and the wiki pages?\n. Alright, that seems fine to me. The reason for this PR was that IMO the old readme got kinda fragmented and unreadable, but it's not perfect for sure! :hamster: \n. Thanks @juliankrause. It work's fine!\nConcerning the folder sharing: @steeve thanks for your suggestions, so what's the most simple way to accomplish that right now?\n. Thanks a lot @rimusz :+1: \n. I created a pull request with the workarounds. Thanks for your participation. If you got an even simpler solution for the scenarios, let me know :)\n. @rimusz Unfortunately sshfs doesn't seem to work for me (Installed both packages from the website). I get the following error:\n\n. @rimusz the problem was indeed the ssh connection. I needed to fix my known_hosts file.\n. Thanks! I'll add it also to the docs.\n. @rimusz Am I right with the assumption that I need to reference the shared path of the boot2docker VM? Like that? docker run -i -t -v /mnt/sda1/myapp:/var/www 80e721db2a7b /bin/bash\n. Yes that makes sense. Is it possible to \"fill\" the shared folder on the host machine with symbolic links?\n. Does follow_symlinks mean it follows the symlinks on the VM or on the host machine?\nWhen I mounted the shared folder and try to create a symlink within my host machine like this: $ ln -s ~/some/folder ~/share I get ln: /Users/johannes/share/folder: No such file or directory.\nThe strange thing: In my VM when I run ls -l /mnt/sda1/share I can see the symlink pointing to /Users/johannes/some/folder\n. @juliankrause concerning the port forwarding:\nHave you managed to forward the 80 port? By using boot2docker ssh -L 80:localhost:80 I obviously get Privileged ports can only be forwarded by root.\nBy running sudo boot2docker ssh -L 80:localhost:80 I get boot2docker-vm does not exist.\n. Thanks @aheissenberger. It works with sudo ssh -p 2022 docker@localhost -L 80:localhost:80\n. Check out the fork of @aheissenberger. More infos can be found here https://github.com/boot2docker/boot2docker/issues/64\n. +1\n. ",
    "gravis": "Any update on this? The issue is closed, but nothing was updated / released.\nThanks\n. same here\n. same here\n. (quickfix: docker-machine create -d vmwarefusion --vmwarefusion-boot2docker-url https://github.com/boot2docker/boot2docker/releases/download/v1.8.2/boot2docker.iso fusion) :(\n. (quickfix: docker-machine create -d vmwarefusion --vmwarefusion-boot2docker-url https://github.com/boot2docker/boot2docker/releases/download/v1.8.2/boot2docker.iso fusion) :(\n. Yup\n. Yup\n. Thanks!\n. ",
    "moul": "The boot2docker start export DOCKER_HOST=tcp://:$DOCKER_PORT, won't stay after the end of the script, so we need to store it\nAnother solution is to use socat, this is working but need sudo\n```\nsudo socat UNIX-LISTEN:/var/run/docker.sock,reuseaddr,fork,mode=777 TCP-CONNECT:boot2docker:4243\nunset DOCKER_HOST\ndocker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n...\n```\n:+1: boot2docker init downloading the docker client is a good idea :)\n. Look at #93 \nIt add an host only interface, so you have a dedicated ip for the boot2docker and won't have to setup any nat rules nor wrap anything\nIt stays simple and compatible with current solution\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. Another option is to call modifyvm multiple times so it will just fail locally for the unsupported option\n. Interesting :) thank you !\n. :+1: subscribed\n. @jpetazzo, about the readonly file system, it's still possible to create a mbin folder in /var/lib/docker and add it to $PATH or an easy way to run commands through ssh and code some helpers in the boot2docker shell script as install-pipework for instance\n. Thanks ! :+1: \n. Thanks ! :+1: \n. @steeve, @bfirsh, @aanand what do you think about this ?\nThe main difficulty is about having a dedicated VirtualBox interface, since the user can use boot2docker alongside other typical virtual machines\nA big part of the commits is dedicated to handling this and also the reboot issue\nIt may remain some bugs, but I think we should merge it in master and begin to use it\n. @steeve, @bfirsh, @aanand what do you think about this ?\nThe main difficulty is about having a dedicated VirtualBox interface, since the user can use boot2docker alongside other typical virtual machines\nA big part of the commits is dedicated to handling this and also the reboot issue\nIt may remain some bugs, but I think we should merge it in master and begin to use it\n. Did you ./boot2docker init first ?\n. Did you ./boot2docker init first ?\n. https://github.com/steeve/boot2docker/pull/93\nIf using a secondary host only interface, we don't need to update nat rules anymore\n. Did you boot2docker stop and boot2docker start (restart) ?\nThe password and ssh key is erased on start\nThere are some ideas in pull requests to fix this\n. Thank you, I can close #91 \n. :+1: \n. :+1: \n. :+1: \n. ",
    "vincentbernat": "Will this eventually be merged to boot2docker?\n. ",
    "mitar": "+1\n. +1\n. +1\n. +1\n. I am using @mattes VirtualBox Guest Additions image. It seems I have an issue with speaks against using it (but maybe the same would happen with NFS):\n\nI discovered an issue with using VirtualBox Guest Additions and nginx. I am using volumes to map my Wordpress blog into the container so that I can develop easily. And I use nginx to server PHP and static files. I discovered that for static files if I change them outside the container, nginx still servers the old file. File inside the container changes, only nginx servers the old version. After some debugging I discovered that sendfile option was the reason. It was turned on and it seems it does not work well together with all this VirtualBox sharing and volume mapping combination. After I disabled sendfile nginx servers the latest version of the file.\n. I am using @mattes VirtualBox Guest Additions image. It seems I have an issue with speaks against using it (but maybe the same would happen with NFS):\nI discovered an issue with using VirtualBox Guest Additions and nginx. I am using volumes to map my Wordpress blog into the container so that I can develop easily. And I use nginx to server PHP and static files. I discovered that for static files if I change them outside the container, nginx still servers the old file. File inside the container changes, only nginx servers the old version. After some debugging I discovered that sendfile option was the reason. It was turned on and it seems it does not work well together with all this VirtualBox sharing and volume mapping combination. After I disabled sendfile nginx servers the latest version of the file.\n. I is a system call to send files to HTTP sockets efficiently. On Debian (which I use as a base for my images) it is on by default.\n. I is a system call to send files to HTTP sockets efficiently. On Debian (which I use as a base for my images) it is on by default.\n. It seems symlinks are not supported as well? If my Mac OS X directory has symlinks and I map that into the container and try to access it I get \"Too many levels of symbolic links\". This happens even if I try to access the symlink through /Users shared directory directly inside boot2docker VM (using boot2dockere ssh).\n. It seems symlinks are not supported as well? If my Mac OS X directory has symlinks and I map that into the container and try to access it I get \"Too many levels of symbolic links\". This happens even if I try to access the symlink through /Users shared directory directly inside boot2docker VM (using boot2dockere ssh).\n. So I was testing using vbox guest additions for development on Mac OS X and the biggest issue is that symlinks do not work at all. You cannot create symlinks inside vbox mounted guest additions. You cannot read symlinks made outside on host.\n\nIn additiona, mmap does not work. If you have a program using mmap to read files (nginx), if file is modified, mmap does not show this and program still shows old data.\n. So I was testing using vbox guest additions for development on Mac OS X and the biggest issue is that symlinks do not work at all. You cannot create symlinks inside vbox mounted guest additions. You cannot read symlinks made outside on host.\nIn additiona, mmap does not work. If you have a program using mmap to read files (nginx), if file is modified, mmap does not show this and program still shows old data.\n. I don't understand the issue of mounting home directory into boot2docker. Isn't it exactly the same on Linux? Running container on Linux which has access to Docker socket can be used to get SSH keys from home directory of the user.\n. Also in boot2docker (at least in existing images with VBox additions) this is done the same. So called \"sharing\" is used to map Mac OS X users home directory inside Linux host running inside Virtualbox, and then Linux specific API is used to map subdirectories inside containers. I really do not see any difference. Containers without Docker socket access inside VBox additions enabled boot2docker cannot access SSH keys in exactly the same way as on Linux machine.\n. +1 for nsinit.\n. There is now docker exec.\n. ",
    "sreuter": "+1\n. +1\n. ",
    "g12n": "+1\n. ",
    "prologic": "+!\n. @zkanda same strategy as Vagrant? What would that be? AFAIK Vagrant supports different types of \"synced folders\". rsync, virtualbox shared folders, nfs, etc. There is no \"strategy\" as such :)\n. @zkanda Ahh :) So not \"strategy\" -- You want configurable \"sync folder\" mechanisms :)\n+1 I guess :)\n. @zkanda Ahh :) So not \"strategy\" -- You want configurable \"sync folder\" mechanisms :)\n+1 I guess :)\n. I agree - If you don't have native Docker (Linux Desktop) this makes it all very hard :)\n. I agree - If you don't have native Docker (Linux Desktop) this makes it all very hard :)\n. Is this in the latest 1.2.1 boot2docker iso? I ran into this today where boot2docker came up okay but I wasn't told so because of the exceedingly long dns timeout (eventually I ^C'd). This is a case say where you have a non-functional dns :)\n. ping?!. ping?!. @tianon How would you suggest we implement a way to automatically provisioned Docker hosts via docker-machine where Proxmox VE is the Hypervisor? It seems without some way to either a) allocate an IP Address up front or b) Communicate with the new guest there isn't much way to continue with the docker-machine provisioning process.. @tianon How would you suggest we implement a way to automatically provisioned Docker hosts via docker-machine where Proxmox VE is the Hypervisor? It seems without some way to either a) allocate an IP Address up front or b) Communicate with the new guest there isn't much way to continue with the docker-machine provisioning process.. This whole point of this PR is to validate and open up the door for further work on the docker-machine-proxmox-ve driver by @lnxbil \n\nWhy not use a production-grade distribution like Debian or Ubuntu instead? docker-machine supports them reasonably well in my experience.\n\nEven if we were to do this; you'd still need to build a custom Image or ISO based off of a so-called \"mainstream distro\" with the qemu-agent installed and running anyway.\nI don't understand the intend being your statement and your position. Why are you reluctant to also support the addition of the qemu guest agent?. This whole point of this PR is to validate and open up the door for further work on the docker-machine-proxmox-ve driver by @lnxbil \n\nWhy not use a production-grade distribution like Debian or Ubuntu instead? docker-machine supports them reasonably well in my experience.\n\nEven if we were to do this; you'd still need to build a custom Image or ISO based off of a so-called \"mainstream distro\" with the qemu-agent installed and running anyway.\nI don't understand the intend being your statement and your position. Why are you reluctant to also support the addition of the qemu guest agent?. Yeah fair enough. I actually didn't realise boot2docker was in maintenance mode tbh. A crying shame really since I probably won't ever use Docker for Mac -- Since I'm one of those weird UNIXy / CLI types that just brew install and expect everything to have sane CLI/API interfaces :)\nThat being said; we may need to find other ways to get Docker on to Proxmox VE guests by way of docker-machine (which I assume is NOT in maintenance mode right?)\n@lnxbil This may mean rethinking our approach and maybe making some assumptions on requisite infrastructure that docker-machine-proxmox-ve would require ahead of time in order to function.. Yeah fair enough. I actually didn't realise boot2docker was in maintenance mode tbh. A crying shame really since I probably won't ever use Docker for Mac -- Since I'm one of those weird UNIXy / CLI types that just brew install and expect everything to have sane CLI/API interfaces :)\nThat being said; we may need to find other ways to get Docker on to Proxmox VE guests by way of docker-machine (which I assume is NOT in maintenance mode right?)\n@lnxbil This may mean rethinking our approach and maybe making some assumptions on requisite infrastructure that docker-machine-proxmox-ve would require ahead of time in order to function.. > Maybe a little off topic, but there is currently no official bare-metal provisioning tool available for Docker that is not in maintenance mode from Docker Inc.?\nIt's actually not off-topic at all! The whole point of the work that went into docker-machine-proxmox-ve and this PR was to support Docker on Proxmox VE based infra. This is what I happen to run in a small Rack.\nAs both docker-machine and boot2docker are considered EOL and in Maintenance Mode; assuming infrakit doesn't support Prmox (haven't looked) I'd say your choices are slim; Shell, Ansbile, by hand (ugh).. > Maybe a little off topic, but there is currently no official bare-metal provisioning tool available for Docker that is not in maintenance mode from Docker Inc.?\nIt's actually not off-topic at all! The whole point of the work that went into docker-machine-proxmox-ve and this PR was to support Docker on Proxmox VE based infra. This is what I happen to run in a small Rack.\nAs both docker-machine and boot2docker are considered EOL and in Maintenance Mode; assuming infrakit doesn't support Prmox (haven't looked) I'd say your choices are slim; Shell, Ansbile, by hand (ugh).. ",
    "glung": "+1\n. https://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/\n\nUsing Docker on Mac OS X has become much easier since we incorporated boot2docker, but the experience has had some usability quirks. With this release we are addressing the most common issue: sharing directories between your Mac and your containers. Using Docker 1.3 with the corresponding version of boot2docker, host-mounted volumes now work the way you expect them to. \nTo make debugging easier, we\u2019re introducing docker exec, which allows a user to spawn a \nprocess inside their Docker container via the Docker API and CLI. For example\u2026\n$ docker exec -it ubuntu_bash bash \n\u2026will create a new Bash session inside the container ubuntu_bash.\n. @nicklinnell I did not get a change to test. \n. \n",
    "voxxit": "+1\n. How about now? :)\n. ",
    "yyyc514": "+1\n. It looks like all the pieces are actually there to setup this us semi-manually:\n- add NFS exports on Mac OS X\n- add a post-boot script to boot2docker that mounts shares (however many you want) to project locations on the VM... I'm thinking of something like /projects/a /projects/b, etc... then when setting up volumes you map the /projects/* locations into your dockers as you want to.\nThe post-boot script will insure the shares are mounted should you restart boot2docker.  I'll add additional details when I set this up later.\n. It looks like all the pieces are actually there to setup this us semi-manually:\n- add NFS exports on Mac OS X\n- add a post-boot script to boot2docker that mounts shares (however many you want) to project locations on the VM... I'm thinking of something like /projects/a /projects/b, etc... then when setting up volumes you map the /projects/* locations into your dockers as you want to.\nThe post-boot script will insure the shares are mounted should you restart boot2docker.  I'll add additional details when I set this up later.\n. So toolbox (docker-machine) has a driver for vmware now... but when I suspend and wake my vmware instance, it's network connection is lost.  Can anyone help?\nIf I log into the boot2docker as root and kickstart the DHCP daemon all is well again... but has anyone else solved this?  Any quick tweak I can make to fix it so when the VM wake up it just does the right thing by default?  If no ideas I'll open a separate issue.\n. Ok, so that helps with docker itself, but not the networking of docker containers... The interface comes back up and docker answers, but the container (https://github.com/tutumcloud/hello-world for example) is not accepting connections.\n. The following /var/lib/boot2docker/bootlocal.sh has fixed everything for me:\n```\n!/bin/sh\nmkdir -p /etc/vmware-tools/scripts/resume-vm-default.d/\ncat > /etc/vmware-tools/scripts/resume-vm-default.d/networking <<EOF\n!/bin/sh\nifconfig docker0 172.17.0.1 broadcast 0.0.0.0 up\n/etc/rc.d/dhcp.sh start \nEOF\nchmod +x /etc/vmware-tools/scripts/resume-vm-default.d/networking\n```\nThe puts a networking hook script in place that after a resume kicks DHCP and also brings the docker0 interface back online.  Not sure if the 172.17 is going to be the same for everyone or if it's dynamic... My VMWare DHCP is giving out 172.16, so it could be based on that.\nFeedback/comments welcome.  Hoping this can help someone else.\n. If there is some more automated way to get the 172.17 address I'd love to hear it (remember the interfaces are offline at the time these commands need to run, so you can't just get the info from ifconfig).\n. I suppose you could grab the address and shove it in a file before suspend and then use that same address after suspend.  Not sure it's worth the effort to make this general though until someone comments if this could somehow get into boot2docker proper so that everyone might benefit.\n. Note, you can't guarantee the same DHCP assignment after wake (this may or may not matter based on your config) but as long as it's serving off the same subnet the local networking config of docker (172.17) should still be ok for internal use on the box - since it's already used in tons of places, iptables, etc.\n. Going fully static also doesn't look hard, but it seems like you'd have to code the IP address by hand: https://github.com/docker/machine/issues/1709\n. Is this just dead?. ",
    "softprops": "+1\n. I ran into this problem as well. Was there a reason this was a default? It's probably going to break a lot of tools.\n. @lalyos I'm not sure what kind of wizardry this is but it works! I spend alot of time getting my http client to work with boot2dockers generated certs with little to show for the effort. your example works with one line. Thanks so much for posting!\n. @lalyos I'm not sure what kind of wizardry this is but it works! I spend alot of time getting my http client to work with boot2dockers generated certs with little to show for the effort. your example works with one line. Thanks so much for posting!\n. ",
    "getvega": "@nicklinnell +1 \nvboxsf mounted folders are still way too slow compared to nfs\ncf http://mitchellh.com/comparing-filesystem-performance-in-virtual-machines\n. ",
    "Jupiterrr": "@nicklinnell +1\n. Currently I'm using a small shell script on OS X that wraps rsync to mount/copy the files into the vm. This works quite well for me with my rails app. \nMaybe this is helpful to anyone. \nhttps://gist.github.com/Jupiterrr/5348f7f95df7de2888f0\n. Some people are facing the same problem in #64.\n. ",
    "afillatre": "@nicklinnell +1 as well\nLike other people, my benchmark shows that performance is up to 10 times worst when files are on a VirtualBox shared folder. I was very excited about the v1.3 and being able to mount the folders I needed, but I realise now that I get the same performance issues I had with the samba mounts before.\nAnyway, a simple tutorial on how to use NFS shared folders instead on Mac OSX and Windows would be nice, even if this is not automated yet.\n. ",
    "jmreicha": "@afillatre same here.  Volume mounting works perfectly but the performance is horrible.\nIt would be nice if there was some way to specify NFS or vbox shared folders.\n. Okay thanks I will have a look and see if I can help.\n. @gansbrest @dduportal is there a workaround for the VBox guest addition horrible performance issue?  I haven't looked at hodor yet.\n. @FelikZ NFS shared folders via Vagrant is one workaround I have found to work well but insn't perfect since you can't really leverage boot2docker-cli.\n. @FelikZ NFS shared folders via Vagrant is one workaround I have found to work well but insn't perfect since you can't really leverage boot2docker-cli.\n. ",
    "clifton": ":+1: boot2docker/fig is working great for small projects but projects with a large number of small files (as other have reported above) is still too slow. Would it be possible to use NFS by default?\n. :+1:\nDocker performance looks solid for our smaller services but development mode on a large app has major performance problems. Is there a way that NFS could be used by default?\n. ",
    "ora726": "A notice in the doc on the performance/restrictions of host shared folders would be nice. I spent 2 days struggling to get this to work (Access rights using a non root user in the guest) and when finally all my problems where solved I hit this really bad performance problem. Performance are so bad that 50% of the time building a MEAN.io environment will partially fail. starting the mean.io stack can take over a minute. in comparison the same process on a guest local folder work like charm. Anybody wanting to find a better alternative or knowing how to speed up the shares has my unconditional support :-)\n. ",
    "Pindar": ":+1: \n. @andyshinn thank you for mentioning. I switched to the CoreOS vagrant box and it's much better.\n. :+1: \n. works for me too with docker 1.7,  latest boot2docker and docker-machine\n. works for me too with docker 1.7,  latest boot2docker and docker-machine\n. ",
    "andyshinn": "@phpguru I use yungsang/boot2docker and yungsang/coreos boxes with Vagrant for the NFS support. They work well and give useable performance for local Rails app development on Mac with Docker.\n. The biggest difference for me is btrfs vs aufs for the underlying filesystem. The CoreOS version issue was raised at https://github.com/YungSang/coreos-packer/issues/5. But you can also force CoreOS to update with update_engine_client -update.\n. The biggest difference for me is btrfs vs aufs for the underlying filesystem. The CoreOS version issue was raised at https://github.com/YungSang/coreos-packer/issues/5. But you can also force CoreOS to update with update_engine_client -update.\n. Is this still on the roadmap? I'm trying to use boot2docker for testing service discovery locally with fig. One container I use (https://github.com/progrium/registrator) uses the IP address of the resolved hostname when I run the container with --net host. On most hosts, this is usually the first assigned IP address. But on boot2docker it is 127.0.0.1. Would be nice to map it to the hostonly or NAT private interface instead.\n. Here is a more permanent solution after each boot2docker init. Your VirtualBox NAT DHCP server will just hand out the same name server as the host:\nconsole\n$ boot2docker down\n$ VBoxManage modifyvm boot2docker-vm --natdnsproxy1 off --natdnshostresolver1 off\n$ boot2docker up\nWaiting for VM and Docker daemon to start...\n..........ooo\nStarted.\nWriting /Users/andy/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/andy/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/andy/.boot2docker/certs/boot2docker-vm/key.pem\nYour environment variables are already set correctly.\n$ boot2docker ssh cat /etc/resolv.conf\nnameserver 192.168.1.254\n. ",
    "hadronzoo": "In that Vagrantfile, v.customize ['set', :id, '--device-add', 'hdd'] should be changed to the following to avoid duplicate disk creation:\nruby\nunless `prlctl list --info boot2docker | grep hdd0`\n  v.customize ['set', :id, '--device-add', 'hdd']\nend\n. ",
    "lmakarov": "@eerkel I achieved some good results with this box: yungsang/boot2docker\nRunning docker that way is no different from using boot2docker.\nInstead of boot2docker start you do vagrant up.\nThe rest is the same, except you now have complete control over the docker VM and can switch to using NFS shares instead of vboxfs, etc.\nWhat you eventually get is this:\n- Your project dir exported as an NFS share => Vbox/Vagrant VM mounts the NFS share => docker maps the folder via volumes in a container.\n- your dev tools access files natively on your Mac\n- performance is much better than with vboxs\nI did some testing with different combinations of folder sharing options - installing plain Drupal 7 standard profile with drush: time drush si standard -y\nFor that particular test case Docker via Boot2docker w/ NFS performs as good as VBox VM w/ NFS and just a tiny bit slower than VBox VM w/rsync.\nHere's the Vagrantfile gist that kicked things off for me with yungsang/boot2docker and NFS. Specifically the following:\nruby\n  # Mount current dir under same path in VM\n  config.vm.synced_folder \".\", Dir.pwd, type: \"nfs\", mount_options: [\"nolock\", \"vers=3\", \"udp\"]\nThat's what makes things transparent for docker running in a VM to mount volumes from the host.\n. @andyshinn, @Pindar is there any difference in performance (or anything else) between the two images (yungsang/boot2docker and yungsang/coreos)?\nI did not try yungsang/coreos since it had an older Docker version than yungsang/boot2docker.\nDo you have different use cases for them?\n. @andyshinn, @Pindar is there any difference in performance (or anything else) between the two images (yungsang/boot2docker and yungsang/coreos)?\nI did not try yungsang/coreos since it had an older Docker version than yungsang/boot2docker.\nDo you have different use cases for them?\n. @uptownhr NFS will only work for Mac. vboxfs while terribly slow is cross-platform and more reliable (?)\n. And if you want versatility and portability, check-out https://github.com/blinkreaction/boot2docker-vagrant\nThis project aims to provide equally good support forth both Mac (via nfs, rsync) and Windows (via smb, \"smb2\", rsync).\n. And if you want versatility and portability, check-out https://github.com/blinkreaction/boot2docker-vagrant\nThis project aims to provide equally good support forth both Mac (via nfs, rsync) and Windows (via smb, \"smb2\", rsync).\n. --hostip is the VirtualBox HOST IP address (so your Mac in this case).\n--hostip=192.168.59.3: VirtualBox host-only network IP address.\nboot2docker ip shows the IP address of the boot2docker VM.  \nThere is no direct way to set it with command line options. It gets assigned by a VirtualBox DHCP server.\nYou can use the following two options to have the VM pick a specific IP address:\n--lowerip=192.168.59.103: VirtualBox host-only network DHCP lower bound.\n--upperip=192.168.59.254: VirtualBox host-only network DHCP upper bound.\nE.g. this will initialize the boot2docker VM with the 192.168.59.100 IP\nboot2docker --lowerip=192.168.59.100 --upperip=192.168.59.100 init\nSadly this only takes effect with the init command and does not work with start.\n. @tianon \n\nShouldn't users usually be running docker-compose directly on their host instead of inside the VM?\n\nThis will be true and make this PR irrelevant as soon as docker-compose gets ported to Windows... :)\n. Was this issue closed as \"Won't fix\"?\nI'm trying to get this to work per https://github.com/docker/docker/pull/20262 on Mac with boot2docker (v1.11.2).\n$ docker volume create --name=test --driver=local --opt type=nfs --opt device=<host-ip>:<nfs-share> --opt o=\"vers=3\"\ntest\n$ docker run -it --rm -v test:/test alpine ls -la /test\ndocker: Error response from daemon: invalid argument.\nMounting the share directly works fine:\nmkdir /test\nmount -t nfs <host-ip>:<nfs-share> -o vers=3 /test\nSince the mount command works fine, but docker complains about invalid argument, the issue does not seem to be with boot2docker, but with docker volume local drive implementation.\n. Just tested with tmpfs and it works fine. Don't have a Windows share to test with right now.\n$ docker volume create --name=tmpfs --driver local --opt type=tmpfs --opt device=tmpfs --opt o=size=100m,uid=1000\ntmpfs\n$ docker run -it --rm -v tmpfs:/test alpine ls -la /test\ntotal 4\ndrwxrwxrwt    2 1000     root            40 Jul  6 22:49 .\ndrwxr-xr-x   25 root     root          4096 Jul  6 22:49 ..\n. Found an answer to my issue. See https://github.com/docker/docker/pull/20262#issuecomment-230941746\n. See this comment for an explanation and a temporary fix (until vagrant 1.8.6 is released):\nhttps://github.com/blinkreaction/boot2docker-vagrant/issues/83#issuecomment-243599131\n. I rebased the PR today. Wonder if it can be accepted. It looks to be a trivial change.\nping @tianon . ",
    "benjy": "Yes I can confirm the Vagrant approach using NFS is the way to go. No performance issues at all for me.\n. This worked for me, good for your local dev environment. I'm using Boot2Docker.\nRUN usermod -u 1000 www-data\n. ",
    "uptownhr": "So why isn't NFS the default? Is there a reason?\n. wish someone could make a one liner, copy and paste to get this done.\n. wish someone could make a one liner, copy and paste to get this done.\n. ",
    "zkanda": "I wonder what's taking this too long, can't we just use the same strategy that vagrant is using?\n. @prologic Well I'm sorry if that's not clear for you, what I'm saying is to support different types of \"synced folders\".\nE.g. \nOSX/Linux - NFS/Rsync.\nSMB - Windows.\nSomething like boot2docker up --sync_type=nfs\nor a config in ~/.boot2docker\n. Here's an interesting project: https://github.com/codekitchen/dinghy\nI tested it myself and works pretty well.\nThough it doesn't support < OSX 10.10\n. ",
    "rawkode": "@prologic one would argue that giving people the choice to use the tools that work in their environment is definitely a strategy - arguably the most important strategy. \nThe sad part is this issue has been here a year and we've all had to conjure up our own way a of making Docker work for our development environments\n. ",
    "blueimp": "I also ran into performance issues when sharing host directories with many files.\nI've released my boot2docker Vagrant Box for Parallels implementation which might be useful to some.\nIt's similar to the NFS based versions released by other users, but fixes some path handling issues (it works with folders containing spaces or quotes) and tries to emulate the ease of use of the official setup.\n. ",
    "olalonde": "Until boot2docker offers this functionality natively, I wrote this script that sets up both local OS X nfs server config and boot2docker nfs client: http://syskall.com/using-boot2docker-using-nfs-instead-of-vboxsf/ Hope it's useful to someone else.\n. @haggen Oh, I remember having seen that message at some point when writing the script. Could you copy/paste the full log and the output on cat /etc/exports (on OS X) would also help.\n. @haggen Oh thanks for documenting that. I'll see if I can update my script.\n. @haggen Just updated the script (it adds nfs.server.mount.require_resv_port = 0 to /etc/nfs.conf now if its not set already) https://gist.github.com/olalonde/3f7512c0bd2bc8abb46d#file-boot2docker-use-nfs-sh-L39. Should work now.\n. @uptownhr have you tried https://gist.github.com/olalonde/3f7512c0bd2bc8abb46d ?\n. Apparently, vbox won't fix either: https://www.virtualbox.org/ticket/10660?cversion=0&cnum_hist=1. NFS doesn't help either: http://stackoverflow.com/questions/4231243/inotify-with-nfs\n. Well, I fixed the problem by mounting /Users with nfs instead of vboxsf in boot2docker. I made a script here: https://gist.github.com/olalonde/3f7512c0bd2bc8abb46d\n. Disclaimer: I just tested the script on my local machine so I'm not sure it will work on different setups. Basically the script adds the correct line to /etc/exports on OS X and executes a shell script on b2d VM to mount /Users with nfs. It's safe to run the script multiple times because it deletes any line in /etc/exports that start with /Users (a backup of /etc/exports is made on first run).\n. Thanks\n. ",
    "ryl": "Just ran into the slow performance problem on a mac. Like a few of the others here I'm doing development on a Drupal site and seeing really slow performance on file operations. For me using boot2docker and docker-compose is preferable to using vagrant, so it would be wonderful to have some means of using NFS.\n. ",
    "Ninir": "@tianon @SvenDowideit Hey guys, do you plan to do something for NFS Sharings like overridable option or parameter, or so... ?\nThanks!\n. ",
    "haggen": "@olalonde Hey nice script, but when I ran it, I got this from boot2docker machine:\nmount: RPC: Authentication error; why = Client credential too weak\nmount: mounting 192.168.1.34:/Users/Arthur on /Users/Arthur failed: Bad file descriptor\nLooking around I read that it has to do with what ports are being mapped, but that's too far for me, any ideas ?\n. @olalonde Hey nice script, but when I ran it, I got this from boot2docker machine:\nmount: RPC: Authentication error; why = Client credential too weak\nmount: mounting 192.168.1.34:/Users/Arthur on /Users/Arthur failed: Bad file descriptor\nLooking around I read that it has to do with what ports are being mapped, but that's too far for me, any ideas ?\n. Hey @olalonde thanks anyway, but I got it working! The missing bit was a nfs configuration in /etc/nfs.conf on my Mac.\nI made a gist for the whole process that worked for me: https://gist.github.com/haggen/f84f55e3ed2c9c930335\n. Hey @olalonde thanks anyway, but I got it working! The missing bit was a nfs configuration in /etc/nfs.conf on my Mac.\nI made a gist for the whole process that worked for me: https://gist.github.com/haggen/f84f55e3ed2c9c930335\n. Hey, I just would like to thank you all for the amazing work! ;D Have a nice day.\n. I'm having this issue with 1.7.0.\n. Very annoying, +1 for fixing or working around it.\nPeople mentioned that disabling sendfile or changing the disk controller from sata to ide fixes the issue. Has anyone tried those ?\n. @CleanCut Since the bug is in vboxsf, and it's also slow as hell, I replaced the shared folders with a nfs mount and documented the whole thing, here it is:\nhttps://gist.github.com/haggen/f84f55e3ed2c9c930335\n. @CleanCut Since the bug is in vboxsf, and it's also slow as hell, I replaced the shared folders with a nfs mount and documented the whole thing, here it is:\nhttps://gist.github.com/haggen/f84f55e3ed2c9c930335\n. ",
    "brikis98": "I tried using NFS as @olalonde and @haggen suggested, but it made no difference in performance. I tried Vagrant + NFS as @lmakarov suggested, and it was still slow. I tried the unison file system as leighmcculloch suggested, but hit strange connection errors. \nAt it is, Boot2Docker, Docker, and OS X seem unusable for development. If anyone has other ideas to try, I created a StackOverflow thread to try to gather possible answers.\n. @squaresurf: how did you set it up?\n@zkanda: thanks for the pointer, I'll check that out.\n. @zkanda: I just tried out dinghy and it's an improvement. Instead of a mounted folder being 10x or 15x slower, it's now only 2-3x slower. It's almost usable, but not quite. \nAlso, it doesn't solve the file system watcher issue. For example, with jekyll serve --watch --force_polling, file changes are only picked up ~30 seconds after they happen.\n@squaresurf: Thanks. I'll mess around with Vagrant next and see if I can get anything good out of it.\n. OK, I may have finally found a solution that actually makes me productive: vagrant + rsync. It's a bit of a pain to setup, so I've captured the details in this StackOverflow answer. If I find something even better, I'll update that answer.\n. Thanks @michaelfavia, I'll play around with those. \nBTW, in the meantime, I've packaged my Vagrant + Rsync solution for being productive with Docker on OS X as an open source project called docker-osx-dev. \n. +1 for @squaresurf's comment. If you want to use NFS, dinghy is the easiest way to set it up. If you want to use rsync, which I've found to be much faster than NFS (albeit one-way only), check out docker-osx-dev.\n. +1 for @squaresurf's comment. If you want to use NFS, dinghy is the easiest way to set it up. If you want to use rsync, which I've found to be much faster than NFS (albeit one-way only), check out docker-osx-dev.\n. For folks still struggling with the performance of mounted folders and vboxsf, I put together a small open source project called docker-osx-dev that uses Vagrant + Docker + Rsync, and I'm seeing build performance with mounted folders that is on par with native performance and file watchers work correctly as well, without any need for polling. See A productive development environment with Docker on OS X for more info.\n. For folks still struggling with the performance of mounted folders and vboxsf, check out A productive development environment with Docker on OS X.\n. @thaJeztah: thanks! From a quick search, it looks like you need to tweet at the Docker Twitter account to get into the newsletter. I'll try that, but if anyone has other suggestions, send them my way.\n. ",
    "squaresurf": "I've found my apps to be an order of a magnitude quicker using NFS with a Vagrant wrapper.\n. @zkanda I like the look of that.\n@brikis98 here is an example Vagrantfile:\n``` ruby\n-- mode: ruby --\nvi: set ft=ruby :\nVagrant.configure('2') do |config|\n  config.vm.box = 'spartan/docker'\n  config.vm.provider 'virtualbox' do |vb|\n    vb.memory = 2048\n  end\nconfig.vm.network 'private_network', ip: '10.10.10.10'\nconfig.vm.synced_folder '.', '/vagrant', type: 'nfs'\n# Provision the box with the bin/vagrant_provision script.\n  config.vm.provision 'shell', path: 'bin/vagrant_provision'\nend\n```\nThe provisioner: bin/vagrant_provision\n``` sh\n!/bin/sh\nInstall needed packages\napt-get update;\napt-get install -y ntp;\nSet it up to cd to /vagrant on login.\nprofile='/home/vagrant/.profile';\nif [ \"$(tail -n 1 $profile)\" != 'cd /vagrant' ]; then\n    echo 'cd /vagrant' >> $profile;\nfi\ncd /vagrant;\nBuild the boxes\ndocker-compose build;\nSet up the database.\ndocker-compose up -d db;\nsleep 5;\ndocker-compose run --rm web bundle exec rake db:setup;\ndocker-compose stop db;\n```\nSimple script to start it all up: bin/up\n``` sh\n!/bin/sh\nvagrant up\nvagrant ssh -c \"docker-compose up --no-recreate\"\n```\n. @brikis98 you shouldn't get more speed out of my setup than dinghy. I actually just switched to using dinghy since it makes interfacing with docker so much easier. It is as fast if not faster than my vagrant solution above.\n@zkanda thanks again for sharing dinghy with us.\n. @uptownhr I think dingy is the closest you'll get:\nbrew install https://github.com/codekitchen/dinghy/raw/latest/dinghy.rb\nDingy replaces boot2docker btw.\n. @uptownhr I think dingy is the closest you'll get:\nbrew install https://github.com/codekitchen/dinghy/raw/latest/dinghy.rb\nDingy replaces boot2docker btw.\n. @douglasmiranda, that looks like the future. I'm gonna give it a shot here soon.\nI like that it doesn't try to replace docker-machine so you get the benefits of the latest development on docker-machine. Which is why I had to stop using dinghy. I needed to use the latest version of docker, but dinghy was behind.\n. ",
    "chouclee": "@olalonde Thanks for your script. \nHave you seen any improvement using NFS? What is your benchmark? \nI used Docker to deploy a Tomcat webapp located in host's folder, but I couldn't see any improvement using NFS. Host would use about 12s to deploy, docker would use 45-120s(usually 60s) with vboxsf, and 32-120s with NFS  (usually 60s). \n. @olalonde Ah, I see. I'm curious because most people say NFS could be 1.3-2x slower than rsync which is almost as fast as native. Anyway, thanks for sharing the script.\n. For me, I tried virtualbox + boot2docker + docker, and virtualbox + ubuntu + docker, both using vboxsf, same internet configuration. The former one would take almost 1 min to start haproxy within a container while latter one could do that instantly.  So I guess the problem should be boot2docker itself.\n. For me, I tried virtualbox + boot2docker + docker, and virtualbox + ubuntu + docker, both using vboxsf, same internet configuration. The former one would take almost 1 min to start haproxy within a container while latter one could do that instantly.  So I guess the problem should be boot2docker itself.\n. +1 permission denied\n. +1 permission denied\n. I guess my problem could be a python issue. I'm wondering does anyone else have met this problem before?\n. So fast! Let me try it.\n. So fast! Let me try it.\n. @frapposelli @nathanleclaire  Another problem arises... The shared folder is not working properly again.  And I could see this virtual machine through Virtual Machine Library now... Should I open another issue?\n. @nathanleclaire I re-created a machine. And the issues are gone. I'm not sure what exactly was going on. I just run a container to deploy Tomcat web app, checked the log to see the startup time and exited the container, then did it over and over again. After a certain point, the shared folder performance dropped drastically (app deployment time from 24s was increasing to 130s). I tried several more times, the performance issue was still there. So I rebooted my Mac and suddenly I could see this machine in Virtual Machine Library. I started the machine with VMware Fusion GUI and saw warning messages like \"failed to get vmstats\" and some shared folders were missing.\nSo far the new machine is working fine. And I don't know if this issue is reproducible... So if it happens again, I'll open a new issue.\n. ",
    "vincepri": "I am using https://github.com/dduportal/boot2docker-vagrant-box that seems to fix all the crazy issues I was having with boot2docker. I am not sure why Vagrant + NFS is much faster that NFS on official boot2docker though.\nI set it up making it on the same IP address of boot2docker and using the same certs path.\n. I am using https://github.com/dduportal/boot2docker-vagrant-box that seems to fix all the crazy issues I was having with boot2docker. I am not sure why Vagrant + NFS is much faster that NFS on official boot2docker though.\nI set it up making it on the same IP address of boot2docker and using the same certs path.\n. ",
    "heyyoyo": "Anyone achieved success to mount a Windows NFS folder from boot2docker vm with the NFS Windows server WinNFSd ?\nI'm using this version : https://bitbucket.org/yannschepens/winnfsd-new\nAfter starting the nfs-client,\nEverytime I tried to mount my Windows folder I have this error:\npmap_getmaps.c: rpc problem: RPC: Procedure unavailable\nmount: RPC: Unable to receive; errno = Connection refused\nmount: mounting 10.0.0.1:/c/web on /var/www failed: Bad file descriptor\nBut I could see WinNFSd is seeing the request because it logs:\nPORTMAP NOTIMP\n. I replaced winnfsd by HanWIN nfs server and now it works as expected. It's strange winnfsd was working with vagrant and regular ubuntu.  The nfs client is probably different \n. Did anyone successfully used the nfs-client from boot2docker with the Windows NFS server WinNFSd ?\n. ",
    "ain": ":+1: for a consistent fix. It's a killer for the whole concept, esp. on large projects.\n. :+1: for a consistent fix. It's a killer for the whole concept, esp. on large projects.\n. :+1: for integral fix. 1.7.0 is completely broken on OS X.\nI'd also suggest a reasonable release mechanism so that you won't jeopardise people's setups and release alpha/beta-grade software with a respective tag. This 1.7 mishap just cost me 12 GB of lost images as a result of the official boot2docker upgrade command.\n. :+1: for integral fix. 1.7.0 is completely broken on OS X.\nI'd also suggest a reasonable release mechanism so that you won't jeopardise people's setups and release alpha/beta-grade software with a respective tag. This 1.7 mishap just cost me 12 GB of lost images as a result of the official boot2docker upgrade command.\n. :+1: \n. ",
    "douglasmiranda": "Has anyone tried this? https://github.com/adlogix/docker-machine-nfs\n. Just a feedback about docker-machine-nfs.\nIt works beautifully :D\n. ",
    "intellix": "Damn, docker-machine-nfs was easily the best solution. Tried docker-osx-dev but it didn't really install correctly. docker-machine-nfs was a one command thing and it's an instant fix\n. ",
    "georgediaz88": "same here. Already loving docker-machine-nfs just because I can naturally use and feel comfortable with docker-machine vs what some of these other tools do.\n. ",
    "mtscout6": "How do I apply this update to my boot2docker install?\n. I followed the installation instructions from docker.io here just this week. So, I should have the latest if this was there in January. Yet all the time keeps saying it's two days in the past.\n. Ok, I figured out my problem when I sleep my mac then wake it up the next morning the boot2docker clock is not updating. When I bring down boot2docker then restart it works fine.\n. @lalyos Still a no go even with your diagnostic steps.\n```\n\u279c  dotfiles git:(master) \u2717 boot2docker up\nWaiting for VM and Docker daemon to start...\n...................\nStarted.\nWriting /Users/smithm/.docker/boot2docker-vm/ca.pem:\nWriting /Users/smithm/.docker/boot2docker-vm/cert.pem:\nWriting /Users/smithm/.docker/boot2docker-vm/key.pem:\nYour DOCKER_HOST env variable is already set correctly.\n\u279c  dotfiles git:(master) \u2717 docker ps\n2014/10/20 08:30:27 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n\u279c  dotfiles git:(master) \u2717 boot2docker ssh\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"_/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           __ o          /\n             \\    \\        /\n              __/\n _                 _   _     _            \n| |   | || \\ _| |  | |  _ \n| '_ \\ / _ \\ / _ \\| | ) / _` |/ _ \\ / | |/ / _ \\ '|\n| |) | () | () | | / / (| | () | (|   <  / |\n|./ _/ _/ __|__,|_/ _||____||\nboot2docker: 1.3.0\n             master : a083df4 - Thu Oct 16 17:05:03 UTC 2014\ndocker@boot2docker:~$ cat /proc/$(cat /var/run/docker.pid)/cmdline|grep //\ncat: can't open '/proc/878/cmdline': No such file or directory\ndocker@boot2docker:~$ ls /proc/878\nls: /proc/878: No such file or directory\ndocker@boot2docker:~$ exit\nerror in run: exit status 1\n\u279c  dotfiles git:(master) \u2717 for var in ${!DOCKER*}; do echo $var=${!var}; done\nzsh: event not found: DOCKER_\n\u279c  dotfiles git:(master) \u2717 boot2docker shellinit\nerror in run: Error requesting socket: exit status 2\n\u279c  dotfiles git:(master) \u2717 boot2docker down\n\u279c  dotfiles git:(master) \u2717 boot2docker shellinit\nerror in run: VM \"boot2docker-vm\" is not running.\n\u279c  dotfiles git:(master) \u2717 env | grep DOCKER\nDOCKER_HOST=tcp://192.168.59.103:2376\nDOCKER_CERT_PATH=/Users/smithm/.docker/boot2docker-vm\n```\nI added DOCKER_TLS_VERIFY=1 and got\n```\n\u279c  dotfiles git:(master) \u2717 boot2docker down\n\u279c  dotfiles git:(master) \u2717 boot2docker up\nWaiting for VM and Docker daemon to start...\n...................\nStarted.\nWriting /Users/smithm/.docker/boot2docker-vm/ca.pem:\nWriting /Users/smithm/.docker/boot2docker-vm/cert.pem:\nWriting /Users/smithm/.docker/boot2docker-vm/key.pem:\nYour DOCKER_HOST env variable is already set correctly.\n\u279c  dotfiles git:(master) \u2717 docker ps\n2014/10/20 08:42:14 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n\u279c  dotfiles git:(master) \u2717 env | grep DOCKER\nDOCKER_HOST=tcp://192.168.59.103:2376\nDOCKER_CERT_PATH=/Users/smithm/.docker/boot2docker-vm\nDOCKER_TLS_VERIFY=1\n```\n@SvenDowideit Boot2Docker app output: (I don't prefer that app since it leaves you in the default mac terminal and bash, I prefer iTerm2 with a ZSH setup)\n```\nbash\nunset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\nmkdir -p ~/.boot2docker\nif [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\n/usr/local/bin/boot2docker init \n/usr/local/bin/boot2docker up && export DOCKER_HOST=tcp://$(/usr/local/bin/boot2docker ip 2>/dev/null):2375\ndocker version\nLast login: Thu Oct 16 07:28:01 on ttys000\n\u279c  ~  bash\n[08:35] smithm@sll-macc02lw491  ~ \n$ unset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\n[08:35] smithm@sll-macc02lw491  ~ \n$ mkdir -p ~/.boot2docker\n[08:35] smithm@sll-macc02lw491  ~ \n$ if [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\n[08:35] smithm@sll-macc02lw491  ~ \n$ /usr/local/bin/boot2docker init \nVirtual machine boot2docker-vm already exists\n[08:35] smithm@sll-macc02lw491  ~ \n$ /usr/local/bin/boot2docker up && export DOCKER_HOST=tcp://$(/usr/local/bin/boot2docker ip 2>/dev/null):2375\nWaiting for VM and Docker daemon to start...\n...................\nStarted.\nWriting /Users/smithm/.docker/boot2docker-vm/ca.pem:\nWriting /Users/smithm/.docker/boot2docker-vm/cert.pem:\nWriting /Users/smithm/.docker/boot2docker-vm/key.pem:\nYour DOCKER_HOST env variable is already set correctly.\n[08:35] smithm@sll-macc02lw491  ~ \n$ docker version\nClient version: 1.2.0\nClient API version: 1.14\nGo version (client): go1.3.1\nGit commit (client): fa7b24f\nOS/Arch (client): darwin/amd64\n2014/10/20 08:35:45 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n[08:35] smithm@sll-macc02lw491  ~ \n$ \n```\n. @bigkraig Is this where you added the port forwarding rule?\n\n\n. @SvenDowideit I updated the mac application to 1.3.0 and running it I get:\n``\nbash\nunset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\nmkdir -p ~/.boot2docker\nif [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\n/usr/local/bin/boot2docker init \n/usr/local/bin/boot2docker up \n$(/usr/local/bin/boot2docker shellinit)\ndocker version\nLast login: Tue Oct 28 08:18:35 on ttys012\n\u279c  ~  bash\n[08:18] smithm@sll-macc02lw491  ~ \n$ unset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\n[08:18] smithm@sll-macc02lw491  ~ \n$ mkdir -p ~/.boot2docker\n[08:18] smithm@sll-macc02lw491  ~ \n$ if [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\n[08:18] smithm@sll-macc02lw491  ~ \n$ /usr/local/bin/boot2docker init \nVirtual machine boot2docker-vm already exists\n[08:18] smithm@sll-macc02lw491  ~ \n$ /usr/local/bin/boot2docker up \nWaiting for VM and Docker daemon to start...\n.................oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\nStarted.\n  Trying to get Docker socket one more time\nError requesting socket: exit status 2\nWriting /Users/smithm/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/smithm/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/smithm/.boot2docker/certs/boot2docker-vm/key.pem\nAuto detection of the VM's Docker socket failed.\nPlease runboot2docker -v up` to diagnose.\n[08:19] smithm@sll-macc02lw491  ~ \n$ $(/usr/local/bin/boot2docker shellinit)\nerror in run: Error requesting socket: exit status 2\n[08:19] smithm@sll-macc02lw491  ~ \n$ docker version\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): darwin/amd64\n2014/10/28 08:19:58 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n[08:19] smithm@sll-macc02lw491  ~ \n$ \n```\nAt this point do I need to manually remove the existing VM from my machine and let the app recreate it? If that's the case is there a way to initialize the VM with a desired hard drive size? 20GB has been a bit small for me I'd like to avoid the task of resizing the image again.\n. I finally just gave up and deleted the existing VM and re-initialized it. Seems to be working now.\n. I don't know if this helps but running boot2docker -v up:\n\u279c  docker-dns-scripts git:(master) \u2717 boot2docker -v up\nBoot2Docker-cli version: v1.3.0\nGit commit: deafc19\n2014/11/13 10:11:08 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/11/13 10:11:08 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2014/11/13 10:11:08 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2014/11/13 10:11:08 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\nVBoxManage: error: Shared folder named 'Users' already exists\nVBoxManage: error: Details: code VBOX_E_OBJECT_IN_USE (0x80bb000c), component SessionMachine, interface IMachine, callee nsISupports\nVBoxManage: error: Context: \"CreateSharedFolder(Bstr(name).raw(), Bstr(hostpath).raw(), fWritable, fAutoMount)\" at line 1009 of file VBoxManageMisc.cpp\n2014/11/13 10:11:08 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2014/11/13 10:11:08 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2014/11/13 10:11:08 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0)2014/11/13 10:11:08 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/smithm/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\ndocker@localhost's password:\n. I don't know if this helps but running boot2docker -v up:\n\u279c  docker-dns-scripts git:(master) \u2717 boot2docker -v up\nBoot2Docker-cli version: v1.3.0\nGit commit: deafc19\n2014/11/13 10:11:08 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/11/13 10:11:08 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2014/11/13 10:11:08 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2014/11/13 10:11:08 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\nVBoxManage: error: Shared folder named 'Users' already exists\nVBoxManage: error: Details: code VBOX_E_OBJECT_IN_USE (0x80bb000c), component SessionMachine, interface IMachine, callee nsISupports\nVBoxManage: error: Context: \"CreateSharedFolder(Bstr(name).raw(), Bstr(hostpath).raw(), fWritable, fAutoMount)\" at line 1009 of file VBoxManageMisc.cpp\n2014/11/13 10:11:08 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2014/11/13 10:11:08 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2014/11/13 10:11:08 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0)2014/11/13 10:11:08 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/smithm/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\ndocker@localhost's password:\n. @frosenberg I don't blame you, I had a feeling it wouldn't work with 1.3.0 but gave it a try anyways. I figured I'd be able to undo it all anyway, but I didn't count on weird issues with destroying my boot2docker image and recreating it.\nThe only cleanup I've done on my Mac was to remove the route table entry you add. I ran sudo -i route delete 172.12.0.0/16 172.16.0.11 I assume that's all that I needed to do to remove that change.\n. Ok, I ran the uninstall script then re-ran the mac installer. Now, I'm getting this:\n\u279c  ~  docker ps\n2014/11/13 11:52:04 Get https://192.168.59.103:2376/v1.15/containers/json: dial tcp 192.168.59.103:2376: i/o timeout\n\u279c  ~  boot2docker ssh\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 1.3.0\n             master : a083df4 - Thu Oct 16 17:05:03 UTC 2014\ndocker@boot2docker:~$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\ndocker@boot2docker:~$\nAny thoughts on why I'm getting the timeouts while running docker commands from my mac terminal?\n. Issue #392 solved my problem. Looks like the host only network was messed up. This comment's instructions fixed things. I'll have to give @frosenberg 's vpn-fix.sh shell script alone later tonight when I'm at home again.\n. ",
    "freiit": "This is not fixed.\n. ",
    "erikprice": "@brdloush Does #661 fix this for you?\n. Same here @aral. In the meantime I've been using this convenience wrapper: https://github.com/beechnut/boot2docker-ntp\n. ",
    "aral": "Hi @erikprice, I can confirm that #661 does not fix this for me. Current time on OS X 23 Jan, 9:08 AM. In the container 23 Jan, 6:22 AM. Running with release 1.4.1.\nThe workaround, as provided by Eric Silverberg, is to run the following command periodically from OS X:\n/usr/local/bin/boot2docker ssh sudo ntpclient -s -h pool.ntp.org\n. ",
    "muneeb-ali": "+1 to @aral, having the same issue and need to run \n\n/usr/local/bin/boot2docker ssh sudo ntpclient -s -h pool.ntp.org\n. +1 to @aral, having the same issue and need to run \n/usr/local/bin/boot2docker ssh sudo ntpclient -s -h pool.ntp.org\n. \n",
    "quick1024": "I would love to see #93 happen.  The project may want to keep it minimal, but a big part of the docker effort is to allow auto assigned ports like: 0.0.0.0:49157->11211/tcp, 0.0.0.0:49158->22/tcp, 0.0.0.0:49159->3306/tcp, 0.0.0.0:49160->80/tcp.  Sure would be nice to have @moul's work implemented so i could just go to secondary interface ip:auto port after a docker run. \n104 moves things away from native os-x support, not towards it.  If you're going to run commands inside the VM, might as well just use a vagrant :-/\n. ",
    "gvangool": "You're anyway limited to 1 VM per user (based on the name). This only makes sure that the external disk (and iso) are in a guessable location. Not just somewhere on your filesystem.\n. Sure, I'll update it tonight (CET)\n-- Gert\nOn Thu, Jan 23, 2014 at 1:35 PM, Sven Dowideit notifications@github.comwrote:\n\n@gvangool https://github.com/gvangool would you like to rebase (ok,\nredo :)) your PR based on the ./boot2docker/profile change I merged (rather\nthan calling the path $CWD, can you call it something more like\n$BOOT2DOCKER_DIR, and use that to then default the $BOOT2DOCKER_ISO and\n$VM_DISK values?\n(with some new cleverness needed to allow any combination of those values\nto be set in the profile file - so that needs to be loaded first, and then\nthe defaults set if the var is not yet set?)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/steeve/boot2docker/pull/82#issuecomment-33120044\n.\n. @SvenDowideit I've updated it. Check it out\n. \n",
    "weltonrodrigo": ":+1:\n. Vote here: \n;)\nEDIT: Removed the pull request URL as this wasn't really a voting. :( My fault.\n. ",
    "jmmills": "It seems like the real underlying issue here (at least in my fiddling with trying to get similar things to work) is that the relative paths are not transparent. \nTo make it seem (under OSX) like your working with a native docker service it would seem that you would want the workflow to behavior like this:\n$ boot2docker up\n...\n$ cd ~/some/project/dir/\n$ docker run -t -i -v $CWD:/some/working/dir $image\nI think in my case the biggest help to make a work around is actually an issue with the docker client communicating to boot2docker and the docker service. \nIf I could just tell docker (or fig) that . needs to be mounted in boot2docker (at runtime?) and used as a volume that would help to make things seamless. \nSo really something like this would be optimal:\n$ boot2docker up\n...\n$ cd ~/some/project/dir\n$ grep WORKDIR Dockerfile\nWORKDIR /project\n$ cat fig.yml\ndev:\n  build: .\n  volumes:\n    - .:/project\n  command: test\n$ fig up\nKind of an interesting problem.\n. ^ at least my thinking is that it would keep things orthogonal between docker's run and build verbs when using boot2docker. \n. @steeve Sure, but what I'm really saying is that this should be something included in the core feature set. Accessing volume data is a core and heavily used feature in docker, this boot2docker shouldn't hobble the tool it's built to support.\nMy input was directed at the fact that this needs to be (IMHO) more than a work around. \n. Actually I'll try my luck writing a patch to allow for post-init hooks, this would be lite and simple but allow people share setup recipes. \n. I've got this method working, and it does behave nicely with things like fig.\nNow it seems however that since the guest additions are running that clock sync is functioning but in my particular case the guest is syncing 2 seconds behind the host, which causes things like make to complain about files with {m,c,a}times in the future. \n. Actually I was mistaken it appears, fuse is enabled...\nboot2docker: 1.0.1\n             master : cad5ece - Fri Jun 20 04:56:12 UTC 2014\ndocker@boot2docker:~$ grep -i fuse /proc/filesystems\n    fuseblk\nnodev   fuse\nnodev   fusectl\ndocker@boot2docker:~$\n. ",
    "paulrosania": "+1! This had me stumped for quite awhile. In case anyone else is trying to Google this, here's the precise error that happens when the client fails to validate SSL, in docker login:\n2014/02/12 22:22:34 Error: auth: Server Error: Post https://<host>/v1/users/: x509: certificate has expired or is not yet valid\n. No sweat, boot2docker is great. :)\n. ",
    "lvh": "This bug bit me too; did that release ever happen? If so, can we close this?\n. Actually, perhaps I'm not being bitten by this bug; when I ssh in, the datetime is fine. Missing cacerts? I'll open a new ticket :)\n. Not quite yet, at least. I will attempt again later today.\n. LGTM:\n[~]$ boot2docker ssh\ndocker@localhost's password:\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.6.0\ndocker@boot2docker:~$ date\nThu Mar  6 05:33:12 UTC 2014\n. This appears to have been an intermittent issue, indeed. Works fine for me now. Closing :-)\n. It may even be useful to unconditionally just start the VM if it hasn't been already.\n. Done (see above). Should I close this?\n. ",
    "kainz": "I don't think v9fs or p9fs in general supports inotify.  As for a folder sharing process, you'll need to use a script similar to rectifier to start DIOD on the host, and then SSH into your boot2docker instance to call the lxc-attach -- mount stuff.\n. @SvenDowideit Been backburnered on this for a bit due to other responsibilites.  I should be able to revisit this by next week maybe?  A lot has also changed in docker since I last touched this, so I'll need some time to catch up on the environment as well.\n. ",
    "shoaibkamil": "jpetazzo wrote up a guide for using 9pfs here: https://gist.github.com/jpetazzo/5668338\nThis isn't quite right for OS X/boot2docker, though (he seems to be using lxc-attach, for example).  \nThe working flow looks like, on the host, to do:\ndiod --foreground --export $DIR --listen 127.0.0.1:$PORT --no-auth --allsquash\nand in the guest\nsudo mount -t 9p -o port:$PORT,trans=tcp,version=9p2000.L,aname=$DIR $HOST_IP_FROM_GUEST $PATH_TO_MOUNT\nThis works if I use an Ubuntu VM on my Mac, with the following caveats:\n- I can't get the right incantation to make the mounted directory read/write for all users (only root works)\n- some FS operations don't work (e.g. doing 'ls -l' will spit out errors about unsupported FS calls)\nI'd be happy to test a boot2docker iso that has 9pfs support built in.\n. jpetazzo wrote up a guide for using 9pfs here: https://gist.github.com/jpetazzo/5668338\nThis isn't quite right for OS X/boot2docker, though (he seems to be using lxc-attach, for example).  \nThe working flow looks like, on the host, to do:\ndiod --foreground --export $DIR --listen 127.0.0.1:$PORT --no-auth --allsquash\nand in the guest\nsudo mount -t 9p -o port:$PORT,trans=tcp,version=9p2000.L,aname=$DIR $HOST_IP_FROM_GUEST $PATH_TO_MOUNT\nThis works if I use an Ubuntu VM on my Mac, with the following caveats:\n- I can't get the right incantation to make the mounted directory read/write for all users (only root works)\n- some FS operations don't work (e.g. doing 'ls -l' will spit out errors about unsupported FS calls)\nI'd be happy to test a boot2docker iso that has 9pfs support built in.\n. I built a boot2docker ISO to test this with, but I'm seeing lots of errors doing simple operations such as mv with non-intuitive messages (e.g. mv is getting ENETRESET).  Setting this aside for now until @kainz has a chance to test the diod port more extensively.\n. ",
    "garthk": "@jpetazzo, I can see where @SvenDowideit got the impression pipeworks uses brctl:\n\ndocker@boot2docker:~$ curl -OL https://github.com/jpetazzo/pipework/raw/master/pipework\ndocker@boot2docker:~$ chmod a+x ./pipework\ndocker@boot2docker:~$ ./pipework br1 fe226c1d70fe 192.168.23.23/24\n./pipework: line 152: brctl: command not found\n\npipework runs ip link with stdout and stderr piped to /dev/null, so we can't see that ip link set br1 type bridge failed with:\n\nCannot find device \"br1\"\n\nShould there be an ip link add br1 type bridge somewhere? \nUPDATE: Ne'er mind; doing that manually doesn't get these two containers talking, even if I make the VM interface promiscuous with VBoxManage modifyvm boot2docker-vm --nicpromisc1 allow-all. I'm missing something.\u0010 \n. This isn't quite as fixed as I'd hoped. \n```\n$ curl https://raw.github.com/steeve/boot2docker/master/boot2docker > $(which boot2docker)\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  7891  100  7891    0     0   3103      0  0:00:02  0:00:02 --:--:--  3103\n $ boot2docker stop\n[2014-02-14 08:18:16] Shutting down boot2docker-vm...\n$ boot2docker \nUsage ~/bin/boot2docker {init|start|up|save|pause|stop|restart|status|info|delete|ssh|download}\n$ boot2docker download\n[2014-02-14 08:18:40] Latest version is v0.5.4, downloading...\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 27.0M  100 27.0M    0     0   693k      0  0:00:39  0:00:39 --:--:--  756k\n\u2026\n$ docker build .\nUploading context 3.584 kB\nUploading context \nStep 0 : FROM stackbrew/ubuntu:precise\n ---> 3aa646e4f1d2\n\u2026\nStep 6 : ADD sources.list /etc/apt/\n2014/02/14 08:17:09 build: Forbidden path outside the build context: sources.list (/mnt/sda1/tmp/docker-build866961424/sources.list)\n```\nThen, just to be sure, after hand-deleting the boot2docker VM:\n$ boot2docker up\n[2014-02-14 08:26:23] Starting boot2docker-vm...\n[2014-02-14 08:26:44] Started.\n$ docker build .\nUploading context 3.584 kB\nUploading context \nStep 0 : FROM stackbrew/ubuntu:precise\n ---> 3aa646e4f1d2\n\u2026\nStep 6 : ADD sources.list /etc/apt/\n2014/02/14 08:27:07 build: Forbidden path outside the build context: sources.list (/mnt/sda1/tmp/docker-build095585768/sources.list)\n$ docker --version\nDocker version 0.8.0, build cc3a8c8\nWhat else should I be doing to ensure I have the latest boot2docker script and ISO? \n. boot2docker: 0.5.3. \nAah. Time to boot2docker upgrade:\nboot2docker stop\nboot2docker delete\nboot2docker download # which I've already done\nboot2docker init\nboot2docker up\nThat did the trick. \nSince neither of us caught that the VM hadn't been re-initialised, despite both looking at the trace and you knowing boot2docker inside out, reckon we should give users VM upgrade instructions after download? \n. Yep. And, now we get to add safety catches to prevent people from cutting themselves on the bleeding edge. Or, to lower the support overhead. Same feature; different driver. :)\n. brew to the rescue! \n[2014-02-26 18:26:48] Could not get lastest release name! Cannot download boot2docker.iso.\nOr, not. \n. No, wait!\nbrew update\nbrew upgrade\nboot2docker download\nExcellent.\n. I'm afraid not. Long story. So, I file detailed bug reports. \n. docker@boot2docker:~$ sudo udhcpc\nudhcpc (v1.22.1) started\nSending discover...\nSending select for 10.0.2.15...\nLease of 10.0.2.15 obtained, lease time 86400\ndeleting routers\nroute: SIOCDELRT: No such process\nadding dns 10.10.10.10\nadding dns 10.11.10.11\n. sudo udhcpc doesn't pick up OS X' full list of search domains, no. \n. I'm also running a VPN, and newly experiencing this problem after upgrading. ~~and dismayed that the only quick fix is to destroy everything and start over.~~\nTo preserve your images and containers:\n- Locate boot2docker-vm.vmdk in either $HOME/.boot2docker or $HOME/VirtualBox VMs/boot2docker-vm\n- Move it out of the way\n- Touch the original filename so boot2docker delete doesn't stuff up\n- boot2docker delete\n- boot2docker init\n- Move boot2docker-vm.vmdk back\n- boot2docker up\n. +1 @enjalot:\n\nchmod go-r ~/.ssh/id_boot2docker\n\nStrikes me quite reasonable that boot2docker could check that and/or fix it.\n. I'm now getting panics shortly after boot2docker up with VirtualBox 4.3.28 on OS X 10.10.3. \n. Short-cut:\nboot2docker ssh\nsudo curl -o /var/lib/boot2docker/profile https://gist.githubusercontent.com/garthk/d5a17007c277aa5c76de/raw/3d09c77aae38b4f2809d504784965f5a16f2de4c/profile\nsudo halt\nboot2docker up\nAll credit to @fayep for PR #411 and @gesellix for pointing it out. Slower documentation in https://gist.github.com/garthk/d5a17007c277aa5c76de\nWARNING: boot2docker didn't come up for me on the third run-through. I'm attributing it to the VirtualBox-inflicted kernel panics. Manual power-off and restart in VirtualBox yielded a working docker, after which boot2docker down and up did the same.\n. ",
    "copumpkin": ":+1: I'd love a smooth way to do this\n. ",
    "aanand": ":+1: This is definitely the way to go in my opinion - much simpler than doing port-forwarding. I'm going to have a go at porting the /etc/hosts thing over from docker-osx.\n. :+1: This is definitely the way to go in my opinion - much simpler than doing port-forwarding. I'm going to have a go at porting the /etc/hosts thing over from docker-osx.\n. OK, have a look at https://github.com/aanand/boot2docker/compare/hostonly\nI also rebased onto the current master, but there was a conflict in the first commit and I don't fully understand it, so you might want to have a quick look at d5d7db7cd7041b92c0be41a31eeb4ba85873c779 to see if anything broke.\n. OK, have a look at https://github.com/aanand/boot2docker/compare/hostonly\nI also rebased onto the current master, but there was a conflict in the first commit and I don't fully understand it, so you might want to have a quick look at d5d7db7cd7041b92c0be41a31eeb4ba85873c779 to see if anything broke.\n. OK, I think I fixed the rebase. Sorry for the noise.\n. OK, I think I fixed the rebase. Sorry for the noise.\n. OK, posted a comment there.\n. Note added to README.\n. @bfirsh updated.\n. @bfirsh done.\n. I can reproduce this too.\nWorking OpenSSL versions:\nOpenSSL 0.9.8zf 19 Mar 2015\nOpenSSL 1.0.1f 6 Jan 2014\nOpenSSL 1.0.1j 15 Oct 2014\nNon-working:\nOpenSSL 1.0.2a 19 Mar 2015\nOpenSSL 1.0.2d 9 Jul 2015\n0.9.8zf is the OS X system openssl - all others are installed with Homebrew.\n. Note that I cannot reproduce this error against a Boot2Docker VM provisioned with docker-machine - it only happens against a VM provisioned with the boot2docker command.\nThis point came up a few weeks ago with Compose and I discussed it with @ehazlett here, but we couldn't at the time think of a reason why one would work but not the other.\n. I've pasted the output of the command failing with a boot2docker VM and succeeding with a docker-machine VM here:\nhttps://gist.github.com/aanand/3d865623481ba8ae66ee\n. > I'm not sure where the \"server.pem\" file may be. Perhaps in the boot2docker-vm dir or on the VM in /var/lib/boot2docker/tls/server.pem\nThat's where it was for me, yes. Output of all 3 here: https://gist.github.com/aanand/d57d22ff198a66d7c354\n. Agreed.\n. Agreed.\n. ",
    "jumoel": "Any news regarding this? :)\n. Any news regarding this? :)\n. ",
    "axelson": "For those curious about how it works in boot2docker-cli (which I installed with Boot2Docker.app) you need to expose the port as normal (using -P or p 127.0.0.0:$HOST_PORT:$CONTAINER_PORT), then you can access the port via the boot2docker vm ip, which is usually 192.168.59.103 (you should see the IP when you first run boot2docker up).\nhttps://github.com/boot2docker/boot2docker-cli/issues/164\n. For those curious about how it works in boot2docker-cli (which I installed with Boot2Docker.app) you need to expose the port as normal (using -P or p 127.0.0.0:$HOST_PORT:$CONTAINER_PORT), then you can access the port via the boot2docker vm ip, which is usually 192.168.59.103 (you should see the IP when you first run boot2docker up).\nhttps://github.com/boot2docker/boot2docker-cli/issues/164\n. ",
    "GrahamDumpleton": "Yep, sounds reasonable. Could though perhaps just check in the home directory of the account and anything more than that could hang off whatever people put in that. Thus:\n```\nVM_NAME=boot2docker-vm\nDOCKER_PORT=4243\nSSH_HOST_PORT=2022\nVM_DISK=./boot2docker.vmdk\nBOOT2DOCKER_ISO=./boot2docker.iso\ntest -f $HOME/.boot2docker/profile && . $HOME/.boot2docker/profile\n```\nHaving it be in the same directory may cause confusion when people run in it in a different directory by mistake.\n. Yep, sounds reasonable. Could though perhaps just check in the home directory of the account and anything more than that could hang off whatever people put in that. Thus:\n```\nVM_NAME=boot2docker-vm\nDOCKER_PORT=4243\nSSH_HOST_PORT=2022\nVM_DISK=./boot2docker.vmdk\nBOOT2DOCKER_ISO=./boot2docker.iso\ntest -f $HOME/.boot2docker/profile && . $HOME/.boot2docker/profile\n```\nHaving it be in the same directory may cause confusion when people run in it in a different directory by mistake.\n. Sorry for delay. Now updated relative to latest. I think.\n. Not really because boot2docker-cli doesn't seem to allow the location for the VirtualBox VM image to be configured either. If boot2docker-cli is going to be a replacement, it needs to implement the same thing.\nSo the modified script for boot2docker had:\nlog \"Creating VM $VM_NAME\"\n    if [ -n \"$VM_DIRECTORY\" ]; then\n        $VBM createvm --name $VM_NAME --basefolder $VM_DIRECTORY --register\n    else\n        $VBM createvm --name $VM_NAME --register\n    fi\nNote the addition of --basefolder option with alternate directory for where VirtualBox should place VM.\nIn boot2docker-cli it has:\nlogf(\"Creating VM %s...\", B2D.VM)\n    if err := vbm(\"createvm\", \"--name\", B2D.VM, \"--register\"); err != nil {\n        logf(\"Failed to create vm: %s\", err)\n        return 1\n    }\nSo it isn't already allowing it.\nEven if boot2docker-cli were changed, would be nice if feature parity were kept for now between both, especially since says to use at own risk.\n. Can you also check normal 'run' output as well as 'logs'. As noted in the original issue under docker project, they both had similar issues with truncation. I focused on 'attach' as it was easier to describe by referencing documentation which gave a good example of what should happen.\n. The workaround for it is to create a SSH tunnel into the VM and define DOCKER_HOST to connect via that.\nSo, in one window run:\nssh docker@localhost -p 2022 -L 14243:127.0.0.1:4243 -N\nand then:\nDOCKER_HOST=localhost:14243 docker attach $ID\nAnnoying to have to do it, but works.\nDon't understand why not being encountered by more people. Would be nice to see it fixed.\n. ",
    "MichielDeMey": "I resolved the issue using https://github.com/steeve/boot2docker/pull/93.\nWe should go with that, it's cleaner and safer to use.\n. ",
    "josephwinston": "I'm using commit 51f3e5cbed54b316b8bc8d17795d5aef3e8b2457\nHere is what happens on an up to date OS X system \n$ git pull\nAlready up-to-date.\n$ cd vm\n$/vm ../boot2docker stop\n[2014-01-25 19:30:07] boot2docker-vm is not running.\n$/vm ../boot2docker start\n[2014-01-25 19:30:10] Starting boot2docker-vm...\n[2014-01-25 19:30:31] Started.\n$/vm ../boot2docker ssh\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\ndocker@localhost's password:\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.4.0\ndocker@boot2docker:~$ Connection to localhost closed.\n$/vm ../boot2docker stop\n[2014-01-25 19:30:41] Shutting down boot2docker-vm...\n$/vm ../boot2docker start\n[2014-01-25 19:30:49] Starting boot2docker-vm...\n[2014-01-25 19:31:22] Started.\n$/vm\n$/vm ../boot2docker ssh\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\ndocker@localhost's password:\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.4.0\ndocker@boot2docker:~$ Connection to localhost closed.\n. As one who develops in OS X, Linux, and windows, I really like what boot2docker provides me on non Linux platforms. \nOne question - What do you see as the basic requirements the platform needs to provide if one wants to replace the boot2docket script with something more portable?  \nOn Jan 26, 2014, at 7:32 AM, Steeve Morin notifications@github.com wrote:\n\nYeah this is due to lack of proper persistance besides containers. Right now boot2docker only persists keys and containers. In a rather hackish way too :)\nThis should be fixed in the next version. However, please be aware that the focus right now is to provide easy docker usage for non-linux (via boot2docker up + native docker client for instance).\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "mpolden": "The current version (v0.5.4), which is in Homebrew, is currently broken. I'm guessing it's because moving the repository broke all the links.\n. ",
    "MarcDiethelm": "The current version is outdated with two new released versions: 0.12 and 1.0\nhttps://github.com/boot2docker/boot2docker/releases\n. The current version is outdated with two new released versions: 0.12 and 1.0\nhttps://github.com/boot2docker/boot2docker/releases\n. ",
    "binaryphile": "Just tried latest, same kernel panic, made sure I cleared out everything including the script.\nThis is a new PC I'm on, just bought it but it runs vagrant's precise64 box fine.\nIt's an AMD A10 if there are any known architecture issues.\n. Oh, I'm not expecting a miracle, I understand completely.  A good pointer on where to start looking is all I was hoping for.  I'll play around more tomorrow, have to quit for the evening.\nThanks.\n. I've tried disabling every one of those options, as well as comparing the vbox file to that of the precise64 vagrant box which does work.  HPET and Longmode were the only settings which seemed like they might make a difference, but no luck.\nI'm afraid boot2docker isn't for my machine, at least for now.\n. I've tried disabling every one of those options, as well as comparing the vbox file to that of the precise64 vagrant box which does work.  HPET and Longmode were the only settings which seemed like they might make a difference, but no luck.\nI'm afraid boot2docker isn't for my machine, at least for now.\n. Just as an addendum, I tried 0.6.0, this time on my work machine which is a 2008 AMD machine.  It also kernel panics immediately.  Interestingly, the boot2docker script reports that the vm is started after a long pause.  Looks like it isn't detecting the error condition.\nIn any case, I suspect that all AMD architectures may be a problem for boot2docker since I've experienced the issue on both old and new AMD hardware.  FYI.\n. ",
    "bruienne": "Understood, and excellent point. I had the same feeling as I was going down what felt an awful lot like a slippery slope, trying to satisfy the pipework requirements.\n. Was about to file the same issue - removing /tmp and creating a symlink to someplace else resolves the limited /tmp size issue. Until a reboot of course, so a permanent change would be good.\n. ",
    "yosifkit": "Closing as this seems to be resolved.  If you feel this issue was closed prematurely, please comment and let us know.\n. Closing as the google group has been removed.  If you feel this issue was closed in error, please comment and let us know.\n. This was added by docker-machine. Closing as this is resolved. If you feel this issue was closed prematurely, please comment and let us know.\n. (Sorry for the long tail)\nThis was fixed on folders mounted automatically in https://github.com/boot2docker/boot2docker/pull/1044.  I would guess that the same mount option would apply to your Samba share.\n. Fixed by https://github.com/boot2docker/boot2docker/pull/661. If you feel this issue was closed prematurely, please comment and let us know.\n. @jamshid, That is the only instructions I can find for using fdisk to resize a partition.  I would just grab a GParted live ISO and use it, since gparted removes the manual steps by doing both the partition resize and file system resize.. With https://github.com/docker-library/mysql/pull/161 you should be able to run mysql as the owner of the directory in question:\nconsole\ndocker run -d -e MYSQL_ROOT_PASSWORD=foobar1234 --user 1000:50 -v /Users/my-user/mysql-data/:/var/lib/mysql/ mysql:5.7\nThis will fix the permissions problem, but I cannot guarantee that mysql will always run on a VirtualBox Shared Folder.  MongoDB for example cannot run on the shared folder since the file system does not support everything it needs.\n. @TyIsI, many of the images provided by Docker Official Images (like rabbitmq) were modified to allow running as a different user so that you would not need to create or modify the user in the image. See https://github.com/docker-library/rabbitmq/pull/60 and the other PRs linked from there.  What this means is that in most instances when using boot2docker on a Mac, you can do something like the following:\nconsole\n$ docker run -d -v /Users/myuser/rabbitdir/:/var/lib/rabbitmq/ --user 1000:50 rabbitmq:3-managment\nSome notable exceptions that don't work with the VirtualBox shared folder are MongoDB (https://github.com/docker-library/mongo/issues/74#issuecomment-175855893) and MariaDB 10.1 (https://github.com/docker-library/percona/issues/42#issuecomment-297865389).. @TyIsI, many of the images provided by Docker Official Images (like rabbitmq) were modified to allow running as a different user so that you would not need to create or modify the user in the image. See https://github.com/docker-library/rabbitmq/pull/60 and the other PRs linked from there.  What this means is that in most instances when using boot2docker on a Mac, you can do something like the following:\nconsole\n$ docker run -d -v /Users/myuser/rabbitdir/:/var/lib/rabbitmq/ --user 1000:50 rabbitmq:3-managment\nSome notable exceptions that don't work with the VirtualBox shared folder are MongoDB (https://github.com/docker-library/mongo/issues/74#issuecomment-175855893) and MariaDB 10.1 (https://github.com/docker-library/percona/issues/42#issuecomment-297865389).. The docker way is to run a single process in a container, but if you need to get into the container (say with bash to check config) then docker exec is what you want rather than dealing with something like supervisord or systemd on top of ssh and its keys.\n. Not necessarily, you should be able to achieve it all with mounts and DISPLAY.  Like the example for gparted in docker iteself: Dockerfile.\n. I don't have access to an OSX machine, so no.  Yeah, docker exec is just barely released in Docker 1.3.0.\n. @ImranAhmed, yes, as far as I know it is still a bug/limitation when using VirtualBox Shared Folders.. @ImranAhmed, yes, as far as I know it is still a bug/limitation when using VirtualBox Shared Folders.. LGTM\n. LGTM\n. If you are using Docker Toolbox to install Docker on OSX/Windows then it will be the most up to date docker (1.12) and use VirtualBox.  The only time you will not be using VirtualBox is when you are using Docker for Mac and Docker for Windows which do not even use the boot2docker project.\n. If you are using Docker Toolbox to install Docker on OSX/Windows then it will be the most up to date docker (1.12) and use VirtualBox.  The only time you will not be using VirtualBox is when you are using Docker for Mac and Docker for Windows which do not even use the boot2docker project.\n. @radu-matei, boot2docker is meant as a development tool to get docker running on OSX and Windows, which, in most cases, is now superseded by \"Docker for Mac\" and \"Docker for Windows\".  For production environments on cloud infrastructure, something better designed for that like CoreOS or RancherOS and even the regular Linux distributions like CentOS, Debian, Fedora, RedHat, and Ubuntu with docker installed would probably be a better choice than boot2docker.. @radu-matei, boot2docker is meant as a development tool to get docker running on OSX and Windows, which, in most cases, is now superseded by \"Docker for Mac\" and \"Docker for Windows\".  For production environments on cloud infrastructure, something better designed for that like CoreOS or RancherOS and even the regular Linux distributions like CentOS, Debian, Fedora, RedHat, and Ubuntu with docker installed would probably be a better choice than boot2docker.. If you are using boot2docker, then this question is solved: run the following from the VM sudo /etc/init.d/docker restart.  Since you most likely installed Docker using docker-toolbox you need to get to the VM; to do so, run docker-machine ssh and then run the restart command there.\nIf you are having trouble stopping or restarting your Docker daemon in places that are not boot2docker, then this is not the place to file that issue. Try the Docker forums: https://forums.docker.com/.. If you are using boot2docker, then this question is solved: run the following from the VM sudo /etc/init.d/docker restart.  Since you most likely installed Docker using docker-toolbox you need to get to the VM; to do so, run docker-machine ssh and then run the restart command there.\nIf you are having trouble stopping or restarting your Docker daemon in places that are not boot2docker, then this is not the place to file that issue. Try the Docker forums: https://forums.docker.com/.. (sorry for the long tail on this issue)\nThe behavior described is to be expected for any executable that uses /tmp with the described setup. Any mounts coming from OSX are given a specific user and group ownership and inside the boot2docker VM (1000:50) and Linux utilities assume that any user has access to /tmp.  It might work if you chmod 777 the folder on the Mac and then run your container.  I think the other solution is to just use --tmpfs /tmp.\nClosing as this seems to be resolved. If you feel this issue was closed prematurely, please comment and let us know.\n. Closing as this seems to be resolved. If you feel this issue was closed prematurely, please comment and let us know.\n. Wouldn't it make more sense for the docker-toolbox installer to fix the port range on Windows rather than limiting all users of boot2docker to the default Windows ephemeral port range when it could be a VM on OSX or Linux?  Or maybe have docker-toolbox configure the boot2docker vm with the detected ephemeral port range, since a user could have changed their host?\nThe linked KB from above gives examples of how to set or get this range.\n``` console\nnetsh int ipv4 show dynamicport tcp\nnetsh int  set dynamic  start=number num=range\n```\n. Wouldn't it make more sense for the docker-toolbox installer to fix the port range on Windows rather than limiting all users of boot2docker to the default Windows ephemeral port range when it could be a VM on OSX or Linux?  Or maybe have docker-toolbox configure the boot2docker vm with the detected ephemeral port range, since a user could have changed their host?\nThe linked KB from above gives examples of how to set or get this range.\n``` console\nnetsh int ipv4 show dynamicport tcp\nnetsh int  set dynamic  start=number num=range\n```\n. @tianon and @nathanleclaire agree, so LGTM\n. LGTM\n. LGTM, cc @tianon \n. I restarted the build again but it looks like it is just a really long and large build, hence the time out on upload of the image. Maybe this time will work. :pray: \n. @educatedwarrior Where did you get your boot2docker iso?  Did you get it from github and verify it with the the listed sha512 and sha256?. Not enough information.\n. It is not a module or compiled in to the kernel in boot2docker: https://github.com/boot2docker/boot2docker/blob/e030bab8fc7e20ea3b50760e4a3e8808f4335ba0/kernel_config#L4034.  So it would require an accepted PR and a new release (or a fork and build for yourself).\n. LGTM\n. What is the specific need for this?  Mostly I would like to have a documented reason for enabling it.\nIn any case, it seems fair to enable Stream_Control_Transmission_Protocol, since these two flags are also enabled in debian: https://sources.debian.net/src/linux/4.7.5-1/debian/config/config/#L6278 and https://sources.debian.net/src/linux/4.7.5-1/debian/config/config/#L6576.\ncc @tianon\n. Those are the same values as a Debian kernel (http://sources.debian.net/src/linux/4.7.5-1/debian/config/config/?hl=5553#L5553).  So, it seems fine to me.  cc @tianon\nWe could also add CONFIG_NETFILTER_XT_MATCH_BPF=m since that is in Debian and might be helpful too.\n. Does it show the same limit when doing the df in docker-machine ssh default?  It could be just a limitation if you are using devicemapper as the storage driver.\nIf you resized the default disk with VirtualBox, then you'd also need to go in the Linux VM and use something like a gparted live iso to go in and resize the partition and filesystem.  If you have nothing important on the VM you could just delete it with docker-machine rm default and then docker-machine create with your desired value in --virtualbox-disk-size.\n. Seems fine to me.\ncc @tianon \n. The url you provided only gets me the web page that says \"thanks for downloading\", but on that page is a direct link for the tar.gz file. It gave me a ~300MB download at this url.  Downloading that file, I can then tar -xf eclipse-jee-neon-1a-linux-gtk.tar.gz and end up with a directory for eclipse.\nI tested this in a buildpack-deps:curl container.\n. The url you provided only gets me the web page that says \"thanks for downloading\", but on that page is a direct link for the tar.gz file. It gave me a ~300MB download at this url.  Downloading that file, I can then tar -xf eclipse-jee-neon-1a-linux-gtk.tar.gz and end up with a directory for eclipse.\nI tested this in a buildpack-deps:curl container.\n. You can put it in /var/lib/boot2docker/profile.\n. Its just sourced as a shell script so you can drop it right in.\n```bash\nEXTRA_ARGS='\n--label provider=virtualbox\n'\nCACERT=/var/lib/boot2docker/ca.pem\nDOCKER_HOST='-H tcp://0.0.0.0:2376'\nDOCKER_STORAGE=aufs\nDOCKER_TLS=auto\nSERVERKEY=/var/lib/boot2docker/server-key.pem\nSERVERCERT=/var/lib/boot2docker/server.pem\nUpdate the vm.max_map_count setting\nsysctl -w vm.max_map_count=262144\n``. The only time I have seen theE: Unable to locate package wgetis when there is no apt cache and usually points to a missing or failedapt-get update. It could also be related to the apt cache being from a different layer in the image (and so it becomes outdated) and will not be updated on adocker buildwhen a new package is added to the list.  I would minimally recommend doing a--no-cachedocker build or pulling the latestubuntu:14.04` image. \nI would also recommend writing your apt installs on one line so that the created images end up slimmer:\nDockerfile\nFROM ubuntu:14.04\nRUN apt-get update \\\n  && apt-get install -y wget mercurial git python \\\n  && rm -rf /var/lib/apt/lists/*\n. \"Docker for Windows\" is a separate project and does not use the iso produced here.  This project is for the \"Docker Toolbox\" with docker-machine.  You'll probably want to file an issue over in their repo: https://github.com/docker/for-win/.. I am a bit hesitant, especially since the documentation from virtualbox makes it sound like it is still experimental, even though the current release is 5.1.14.\n\nStarting with release 3.1, VirtualBox includes experimental support for the Extensible Firmware Interface (EFI), which is a new industry standard intended to eventually replace the legacy BIOS as the primary interface for bootstrapping computers and certain system services later.\n\nThere are quite a few EFI fixes listed in their changelogs, so maybe I am wrong about it still being \"experimental\".  Here is a sampling of fixes across versions 4.0 to 5.1:\n\n\nEFI: fixed access to devices attached to SATA port 2 and higher (bug 15607)\nVMM: fixed a potential hang with 32-bit EFI guests on Intel CPUs (VT-x without unrestricted guest execution)\nSATA: fixed hotplug flag handling when EFI is used\nEFI: improved performance of IDE disk access\nEFI: properly announce the amount of RAM for big VMs (bugs 11103 and 13211)\nEFI: don't fail with 64-bit guests on 32-bit hosts (bug 11456)\nEFI: support for SATA disks and CDROMs\n\n\ncc @tianon and @nathanleclaire, what do you think about adding EFI support to boot2docker and maybe even turning it on by default in virtualbox via docker-machine?. I am a bit hesitant, especially since the documentation from virtualbox makes it sound like it is still experimental, even though the current release is 5.1.14.\n\nStarting with release 3.1, VirtualBox includes experimental support for the Extensible Firmware Interface (EFI), which is a new industry standard intended to eventually replace the legacy BIOS as the primary interface for bootstrapping computers and certain system services later.\n\nThere are quite a few EFI fixes listed in their changelogs, so maybe I am wrong about it still being \"experimental\".  Here is a sampling of fixes across versions 4.0 to 5.1:\n\n\nEFI: fixed access to devices attached to SATA port 2 and higher (bug 15607)\nVMM: fixed a potential hang with 32-bit EFI guests on Intel CPUs (VT-x without unrestricted guest execution)\nSATA: fixed hotplug flag handling when EFI is used\nEFI: improved performance of IDE disk access\nEFI: properly announce the amount of RAM for big VMs (bugs 11103 and 13211)\nEFI: don't fail with 64-bit guests on 32-bit hosts (bug 11456)\nEFI: support for SATA disks and CDROMs\n\n\ncc @tianon and @nathanleclaire, what do you think about adding EFI support to boot2docker and maybe even turning it on by default in virtualbox via docker-machine?. It seems like this might be the same as https://github.com/boot2docker/boot2docker/issues/652 and related to https://www.virtualbox.org/ticket/9069, but the VirtualBox ticket has Ubuntu VM's having the issue as well.. It seems like this might be the same as https://github.com/boot2docker/boot2docker/issues/652 and related to https://www.virtualbox.org/ticket/9069, but the VirtualBox ticket has Ubuntu VM's having the issue as well.. This is not a change within boot2docker, but, as far as I can tell, a ~\"feature\"~ regression of the 17.04.0-ce docker release (release notes).  I can only guess that it seems to be related to https://github.com/moby/moby/pull/30807, since it is the only one to mention ipv6, but I can't seem to figure out how to use link-local-ip to have it just generate one.. Any bind mount from host to container is incredibly complex when userns is used.  I think you need to adjust the mapping so that a specific group id of the user you are running as is mapped to the docker group id on the host.. It is the design of the boot2docker VM to save as little state as possible between restarts. \n /var/lib/boot2docker would be the place to put persistent things.. @newbie-gk, could be related to the github outage this morning? https://twitter.com/githubstatus/status/892060343920414720. @newbie-gk, could be related to the github outage this morning? https://twitter.com/githubstatus/status/892060343920414720. @newbie-gk, it sounds like you are unable to resolve the aws url that the github link redirects to.  Does your network block some DNS requests?  Are you able to download any other releases of boot2docker?\nIf your network is blocking you, you can just build the iso by cloning this git repo, checking out the v17.06.0-ce tag, and following the build doc.. @newbie-gk, it sounds like you are unable to resolve the aws url that the github link redirects to.  Does your network block some DNS requests?  Are you able to download any other releases of boot2docker?\nIf your network is blocking you, you can just build the iso by cloning this git repo, checking out the v17.06.0-ce tag, and following the build doc.. If you installed boot2docker with docker-toolbox, then it should be in the path when you run the \"Docker Quickstart terminal\" (instead of cmd or Powershell).. If you installed boot2docker with docker-toolbox, then it should be in the path when you run the \"Docker Quickstart terminal\" (instead of cmd or Powershell).. I got this same issue in a chat; I was able to fix this by changing the git tag date of v17.03.2-ce to be older than v17.06.0-ce.  Let me know if it working now for you. :smile:. I got this same issue in a chat; I was able to fix this by changing the git tag date of v17.03.2-ce to be older than v17.06.0-ce.  Let me know if it working now for you. :smile:. cc @frapposelli. cc @frapposelli. I'm sorry.  I am unable to understand your language, so I do not know what you are asking. :cry:\nPerhaps it would be better to post questions like this in the Docker Community Forums, the Docker Community Slack, or Stack Overflow.. I'm sorry.  I am unable to understand your language, so I do not know what you are asking. :cry:\nPerhaps it would be better to post questions like this in the Docker Community Forums, the Docker Community Slack, or Stack Overflow.. Duplicate of https://github.com/boot2docker/boot2docker/issues/1245.. Duplicate of https://github.com/boot2docker/boot2docker/issues/1245.. That looks like a general limitation of Docker's registry-mirror setting and not something specific to Boot2Docker.  So it should be filed on the main Docker repo: https://github.com/moby/moby/issues.. As far as I understand it, that would involve first giving your VM access to the video card of the host machine (assuming running on a laptop or desktop) and then installing nvidia drivers and cuda support in boot2docker which is based on Tiny Core Linux, but it seems the Nvidia-docker installation instructions only support running on apt or yum based systems so I would recommend using one of those instead (Debian, Ubuntu, CentOS, Oracle Linux, etc).. This is an upstream Docker issue and not a problem specific to boot2docker.  It should be fixed in the next release (18.09.1).\nTwo possible workarounds are to downgrade to 18.06.1 or use host mode publishing (https://docs.docker.com/compose/compose-file/#long-syntax-1).. @TeeJayD, Thanks for confirming!. As far as I can tell, this is a duplicate of https://github.com/boot2docker/boot2docker/issues/1349 which was fixed by https://github.com/boot2docker/boot2docker/pull/1353.\n(though if there still are necessary things missing, we probably do want to add them). This is not necessary for an rc.\n. :open_mouth: :disappointed:  This time I will build test my changes first.\n. Swap order of ssh and default.\n. Probably still wanted restart here?  docker-machine restart default\n. This still needs default, like all the docker-machine commands :cry: \n. boot2docker-vm might get confused as a command.\n. default again :wink: \n. I feel like the cut on spaces is an incomplete solution.  What happens when a user decides to use a share with a space in the path?  ie: c:\\Program Files\n. This line should be deleted, since it is no longer applicable.. ",
    "cbier": "@steeve I know this is unrelated, but where can I download VBox 4.3.7? I am unable to find a download\n. ",
    "ngocphamm": "@bfirsh Thanks! Waiting for that one :+1: \n. @bfirsh Thanks! Waiting for that one :+1: \n. Wait a minute. I just went to the PR to see file changes and I think it's not really what I can wait to resolve my problem as it still relies on VirtualBox. Am I getting it right?\n. Wait a minute. I just went to the PR to see file changes and I think it's not really what I can wait to resolve my problem as it still relies on VirtualBox. Am I getting it right?\n. Hi @aheissenberger.\nThank you for your suggestion. It seems to be a great approach so I decided to do a brief search to see if I can do it. It appears that Parallels does provide a pretty good command line set for managing its services. Anyone who cares can have a look at this man page, or typing prlsrvctl in your Terminal.\nThen I think I can create a another Host-only virtual network for only the Docker VM by running this command:\nprlsrvctl net add DockerVM --ip 10.48.150.2/24 --dhcp-server on --dhcp-ip 10.48.150.1 --ip-scope-start 10.48.150.10 --ip-scope-end 10.48.150.10\nUnfortunately, Parallels only accepts creation of a DHCP scope of 16 or more IP addresses.\n\nFailed to add Virtual Network DockerVM: The specified DHCP scope is invalid. Make sure that the DHCP scope includes 16 or more IP addresses and try again\n\nPretty frustrated! Oh wait... my original intention is to, somehow, configure the environment in which the Docker VM will have a static IP so I won't be bothered looking for its IP each time it starts up. The original problem is within the Tiny Core Linux of boot2docker image, there's (currently) no way to set up static IP address. Your suggestion is to create a 1-IP network to assign to that Docker VM. It's not possible now, though. However, I think that actually it's still possible, because in a network with DHCP enabled, if Docker is the only VM that is connected to, the VM's IP won't be changed anyway.\nThat I think I can still setup another Host-only network, with a scope of 16 or more IP addresses as required by Parallels for this purpose.\nI will test it out right away.\nThank you so much, @aheissenberger.\n. Hi @aheissenberger.\nThank you for your suggestion. It seems to be a great approach so I decided to do a brief search to see if I can do it. It appears that Parallels does provide a pretty good command line set for managing its services. Anyone who cares can have a look at this man page, or typing prlsrvctl in your Terminal.\nThen I think I can create a another Host-only virtual network for only the Docker VM by running this command:\nprlsrvctl net add DockerVM --ip 10.48.150.2/24 --dhcp-server on --dhcp-ip 10.48.150.1 --ip-scope-start 10.48.150.10 --ip-scope-end 10.48.150.10\nUnfortunately, Parallels only accepts creation of a DHCP scope of 16 or more IP addresses.\n\nFailed to add Virtual Network DockerVM: The specified DHCP scope is invalid. Make sure that the DHCP scope includes 16 or more IP addresses and try again\n\nPretty frustrated! Oh wait... my original intention is to, somehow, configure the environment in which the Docker VM will have a static IP so I won't be bothered looking for its IP each time it starts up. The original problem is within the Tiny Core Linux of boot2docker image, there's (currently) no way to set up static IP address. Your suggestion is to create a 1-IP network to assign to that Docker VM. It's not possible now, though. However, I think that actually it's still possible, because in a network with DHCP enabled, if Docker is the only VM that is connected to, the VM's IP won't be changed anyway.\nThat I think I can still setup another Host-only network, with a scope of 16 or more IP addresses as required by Parallels for this purpose.\nI will test it out right away.\nThank you so much, @aheissenberger.\n. Well, thing doesn't go very well. :disappointed:\nFirst problem: I don't really know exactly how to assign the new Network with the DHCP scope. The command executed without error and the network is on the list.\nrlsrvctl net list\nNetwork ID        Type      Bound To\nShared            shared  vnic0\nHost-Only         host-only  vnic1\nDockerVM          host-only  vnic2\nWi-Fi (en0)       bridged   en0\nen1 (en1)         bridged   en1\nen2 (en2)         bridged   en2\nThunderbolt Bri~  bridged   bridge0\np2p0 (p2p0)       bridged   p2p0\nvnic0 (vnic0)     bridged   vnic0\nvnic1 (vnic1)     bridged   vnic1\nvnic2 (vnic2)     bridged   vnic2\nDefault           bridged   FF:FF:FF:FF:FF:FF\nHowever, when I go to the VM and create another Network adapter, pointing to the new DockerVM network, the VM starts up with an IP from another scope 10.37.132.0/24. I come up to the Network preferences of Parallels (GUI) and the (default) Host-only network there has switched from 10.37.129.0/255 network by default to the one that the VM is getting IP from. I have no idea why I create a new Host-only network and the default one changed, and changed to another thing.\nI'm clueless now! :confused: \n. Well, thing doesn't go very well. :disappointed:\nFirst problem: I don't really know exactly how to assign the new Network with the DHCP scope. The command executed without error and the network is on the list.\nrlsrvctl net list\nNetwork ID        Type      Bound To\nShared            shared  vnic0\nHost-Only         host-only  vnic1\nDockerVM          host-only  vnic2\nWi-Fi (en0)       bridged   en0\nen1 (en1)         bridged   en1\nen2 (en2)         bridged   en2\nThunderbolt Bri~  bridged   bridge0\np2p0 (p2p0)       bridged   p2p0\nvnic0 (vnic0)     bridged   vnic0\nvnic1 (vnic1)     bridged   vnic1\nvnic2 (vnic2)     bridged   vnic2\nDefault           bridged   FF:FF:FF:FF:FF:FF\nHowever, when I go to the VM and create another Network adapter, pointing to the new DockerVM network, the VM starts up with an IP from another scope 10.37.132.0/24. I come up to the Network preferences of Parallels (GUI) and the (default) Host-only network there has switched from 10.37.129.0/255 network by default to the one that the VM is getting IP from. I have no idea why I create a new Host-only network and the default one changed, and changed to another thing.\nI'm clueless now! :confused: \n. I just found that inside the /opt/bootsync.sh file, there's an include that probably allow execution of custom scripts upon startup.\nbash\nif [ -e /var/lib/boot2docker/bootlocal.sh ]; then\n    /var/lib/boot2docker/bootlocal.sh &\nfi\nKnowing that, I try to create the /var/lib/boot2docker/bootlocal.sh file to add DNS servers to /etc/resolv.conf.\nsudo echo nameserver 8.8.8.8 >> /etc/resolv.conf\nHowerver, it's not okay. I boot up boot2docker VM and the /etc/resolv.conf file is still empty. If I add a touch /var/lib/boot2docker/testfile command into the bootlocal.sh file, I can see the file was created after boot up. Therefore, I assume that the networking daemon, or something else has been touching the /etc/resolv.conf after my script was executed. I'm not sure.\nIf anyone know an answer to this, please help.\nThank you very much.\nP.S: I got the problem of wrong DHCP scope for Custom created Host-only network solved already. I need to go to file /Library/Preferences/Parallels/network.desktop.xml to manually modify the scope. Have no idea why the command line didn't take effect.\n. I just found that inside the /opt/bootsync.sh file, there's an include that probably allow execution of custom scripts upon startup.\nbash\nif [ -e /var/lib/boot2docker/bootlocal.sh ]; then\n    /var/lib/boot2docker/bootlocal.sh &\nfi\nKnowing that, I try to create the /var/lib/boot2docker/bootlocal.sh file to add DNS servers to /etc/resolv.conf.\nsudo echo nameserver 8.8.8.8 >> /etc/resolv.conf\nHowerver, it's not okay. I boot up boot2docker VM and the /etc/resolv.conf file is still empty. If I add a touch /var/lib/boot2docker/testfile command into the bootlocal.sh file, I can see the file was created after boot up. Therefore, I assume that the networking daemon, or something else has been touching the /etc/resolv.conf after my script was executed. I'm not sure.\nIf anyone know an answer to this, please help.\nThank you very much.\nP.S: I got the problem of wrong DHCP scope for Custom created Host-only network solved already. I need to go to file /Library/Preferences/Parallels/network.desktop.xml to manually modify the scope. Have no idea why the command line didn't take effect.\n. You are right, @aheissenberger. I've check the file usr/share/udhcpc/default.script and it doesn't include your suggested fix yet. Should I create an issue here to ask @steeve  for an update to Tiny Core Linux or not?\n. You are right, @aheissenberger. I've check the file usr/share/udhcpc/default.script and it doesn't include your suggested fix yet. Should I create an issue here to ask @steeve  for an update to Tiny Core Linux or not?\n. Or my workaround atm is to add a little delay to my /var/lib/boot2docker/bootlocal.sh, ensuring the DHCP daemon has finished its operation then adding my own DNS servers.\n. Or my workaround atm is to add a little delay to my /var/lib/boot2docker/bootlocal.sh, ensuring the DHCP daemon has finished its operation then adding my own DNS servers.\n. Considering the usage of boot2docker init script, the PR under #93 will be more elegant, indeed. However, as stated, I am not using VirtualBox, meaning basically the init script is not for me. I think I still have to go with either my workaround (adding delay) or @aheissenberger's hack. Thank you for your attention to my specific issue! :+1: \n. Considering the usage of boot2docker init script, the PR under #93 will be more elegant, indeed. However, as stated, I am not using VirtualBox, meaning basically the init script is not for me. I think I still have to go with either my workaround (adding delay) or @aheissenberger's hack. Thank you for your attention to my specific issue! :+1: \n. Hi @Analect!\nI'm sorry that you are still struggling with this problem. My configuration for Docker is a little bit different from yours so I'm not sure what could be the issue on your side. Have you tried to reach the Docker vm manually (ping, ssh, etc.)? If it's reachable already, have you tried something like export DOCKER_HOST=<ip_of_the_vm> and see if docker version can find out the server?\nAnyway, my settings is creating my own Host-only network (you need to do it with the command line) for only the VM. I had to do it because I need another Host-only network with only ONE IP address for the DHCP scope so I will have the vm getting a \"static\" IP whenever it boots up. Lately, I figured out how to set the static IP via script passed to the Tiny Core OS so this dedicated Host-only network might not be necessary anymore.\nPlease try to add a Host-only network and add the IP assigned to the network interface to the DOCKER_HOST variable to see if it helps.\n. Well, it has to be 512MB of RAM or more, I suppose. I tested with 384MB and it failed. 512MB is fine.\nThank you @YungSang for testing it out for me.\n. @Analect In my case, well, it's just the amount of RAM you need to set for the vm. Since 0.6.0, boot2docker needs at least 512MB. If that doesn't solve it for you, I don't know what's for.\n. Oh sorry. I thought you were asking about the problem stated on this issue.\nUsing Parallels, you need to setup the vm manually. Choose a linux box and add the iso as a CD/DVD. Something similar to this.\n\nYou cannot use the boot2docker script because it's for VirtualBox only :smile: \n. ",
    "Analect": "@ngocphamm .. sorry to resurrect this issue, but still struggling with getting boot2docker working with parallels and it seems you may have resolved this. Following docker instructions http://docs.docker.io/en/latest/installation/mac/#docker-os-x-client/ , I performed most steps, except those related to the virtualbox part. I set export DOCKER_HOST=tcp://127.0.0.1:4243 .... and then once the boot2docker VM booted under parallels manually, I was hoping I could just forward port 4243 on that VM back to the host as follows (see screenshot), but it appears that doesn't work ... as back in there mac terminal on trying 'docker version' ... I just get 'Illegal Instruction: 4'.  Any pointers on how I might fix this ... is edit default.script (as above) the best solution?\n\n. @ngocphamm : would you mind advising what changes you had to make to get this running with parallels? Thanks\n. @ngocphamm It's more related to telling boot2docker to use parallels rather than virtualbox.  I used the brew install method to install boot2docker on my mac ... but when I initiate, I get this error ... since I haven't specified it should be using a parallels VM anywhere. I just need to know where to tweak that config, so that it defaults to parallels. Is it using a vagrantfile somewhere?  Thanks.\nDevelopment me$ boot2docker init\ncommand 'VBoxManage' is required but not installed.  Aborting.\nYou need to install VirtualBox https://www.virtualbox.org!\n. @ngocphamm  I'll try that. Thanks.\n. ",
    "boxofrox": "Not sure if my solution is relevant, but maybe someone will find inspiration from it.\nFull disclosure.  I'm running boot2docker on a VMWare ESXI host, so this solution may overlook some setup required in your VM of choice.\nI perform a custom build of boot2docker with dhcp turned off, and append the static IP assignment to the boot script.\n```\nFROM boot2docker/boot2docker\nMAINTAINER Justin Charette \"charetjc@gmail.com\"\ndisable dhcp\nRUN sed -i 's/^(\\s+append .*)$/\\1 nodhcp/' /tmp/iso/boot/isolinux/isolinux.cfg\nconfigure networking\nRUN echo                                         >>$ROOTFS/opt/bootscript.sh && \\\n    echo \"# assign static ip addr\"               >>$ROOTFS/opt/bootscript.sh && \\\n    echo \"ip link set eth0 up\"                   >>$ROOTFS/opt/bootscript.sh && \\\n    echo \"ip addr add 192.168.0.166 dev eth0\"    >>$ROOTFS/opt/bootscript.sh && \\\n    echo \"ip route add 192.168.0.0/24 dev eth0\"  >>$ROOTFS/opt/bootscript.sh && \\\n    echo \"ip route add default via 192.168.0.1\"  >>$ROOTFS/opt/bootscript.sh\nRUN /make_iso.sh\nCMD [\"cat\", \"boot2docker.iso\"]\n```\nnodhcp is a tinycore kernel option that disables the automatic dhcp initialization.  You may also need to determine the name boot2docker assigns to the VM virtual network device (eth0 in my instance).  Also, I didn't bother configuring nameservers.  Following ngocphamm's example, I imagine this will work.\nRUN echo nameserver 192.168.0.1 >>$ROOTFS/etc/resolv.conf && \\\n    echo nameserver 8.8.8.8     >>$ROOTFS/etc/resolv.conf\nIf you prefer a more dynamic configuration, you might consider moving the network commands into bootlocal.sh on your boot2docker-data partition.\n. I will write a pull request.  Just to clarify, the 2nd fix is to update the inittab.  I really should have numbered them.  Do I need a particular Signed-Off for my commit?\n. 3rd fix it shall be.\n. Thank you :)\n. @pyotr777 the packages on nluug.nl were created in 2009.  The issue was mentioned on the TCL forums, but never addressed [1].\nBoot2docker does have adduser, addgroup, deluser, delgroup commands.  While not identical to the shadow-util variety, those will help you get started.  Unfortunately, I didn't find an alternative to usermod or groupmod.\n[1] http://forum.tinycorelinux.net/index.php?topic=13099.0\n. @pyotr777 the packages on nluug.nl were created in 2009.  The issue was mentioned on the TCL forums, but never addressed [1].\nBoot2docker does have adduser, addgroup, deluser, delgroup commands.  While not identical to the shadow-util variety, those will help you get started.  Unfortunately, I didn't find an alternative to usermod or groupmod.\n[1] http://forum.tinycorelinux.net/index.php?topic=13099.0\n. @pyotr777 \nAlso, keep in mind that TinyCoreLinux (TCL) is intended to be a readonly distro, and provides options for persisting configuration files.  Which is to say, even if you installed shadow-utils, your changes would be lost on the next reboot.  Chapter 1.10 and 24.1 of the Core Book [1] discusses how to backup and restore files and add a new user.\n[1] http://tinycorelinux.net/book.html\nOut of the box boot2docker disables the restore system.  We can write Dockerfiles that build custom boot2docker isos.  If you're interested in trying it out, let me know.\n. @pyotr777 \nAlso, keep in mind that TinyCoreLinux (TCL) is intended to be a readonly distro, and provides options for persisting configuration files.  Which is to say, even if you installed shadow-utils, your changes would be lost on the next reboot.  Chapter 1.10 and 24.1 of the Core Book [1] discusses how to backup and restore files and add a new user.\n[1] http://tinycorelinux.net/book.html\nOut of the box boot2docker disables the restore system.  We can write Dockerfiles that build custom boot2docker isos.  If you're interested in trying it out, let me know.\n. You're welcome.  There might still be hope.  Boot2docker may switch to Debian instead of TCL in the future.  See #1065 and https://github.com/docker/boot2docker .\n. ",
    "StalkAlex": "For me with lines above internet inside docker machine isn't working, so I added this command route add default gw 192.168.1.1 to specify correct gateway.\n. ",
    "suresh1566": "We can set permanet ip address for docker machine in two way:\nOption 1:\nStart the docker machine then use below command:\n[suresh@suresh ~]$ docker-machine start manager1\necho \"ifconfig eth1  netmask  broadcast \" | docker-machine ssh  sudo tee /var/lib/boot2docker/bootsync.sh > /dev/null\necho \"ifconfig eth1 192.168.99.100 netmask 255.255.255.0 broadcast 192.168.99.255 up\" | docker-machine ssh manager1 sudo tee /var/lib/boot2docker/bootsync.sh > /dev/null\nRestart docker machine:\n[suresh@suresh ~]$ docker-machine stop worker1\n[suresh@suresh ~]$ docker-machine start worker1\nVeify ip address:\n[suresh@suresh ~]$ docker-machine ip worker1 \n192.168.99.100\nOption 2:\nStart the docker machine then connect to docker machine and make the following changes:\n[suresh@suresh ~]$ docker-machine start worker1\n[suresh@suresh ~]$ docker-machine ssh worker1\nCreate the bootsync.sh file and make following changes:\ndocker@worker1:~$ sudo vi /var/lib/boot2docker/bootsync.sh\nifconfig eth1 192.168.99.101 netmask 255.255.255.0 broadcast 192.168.99.255 up\n[suresh@suresh ~]$ docker-machine stop worker1\n[suresh@suresh ~]$ docker-machine start worker1\nVeify ip address:\n[suresh@suresh ~]$ docker-machine ip worker1 \n192.168.99.101. We can set permanet ip address for docker machine in two way:\nOption 1:\nStart the docker machine then use below command:\n[suresh@suresh ~]$ docker-machine start manager1\necho \"ifconfig eth1  netmask  broadcast \" | docker-machine ssh  sudo tee /var/lib/boot2docker/bootsync.sh > /dev/null\necho \"ifconfig eth1 192.168.99.100 netmask 255.255.255.0 broadcast 192.168.99.255 up\" | docker-machine ssh manager1 sudo tee /var/lib/boot2docker/bootsync.sh > /dev/null\nRestart docker machine:\n[suresh@suresh ~]$ docker-machine stop worker1\n[suresh@suresh ~]$ docker-machine start worker1\nVeify ip address:\n[suresh@suresh ~]$ docker-machine ip worker1 \n192.168.99.100\nOption 2:\nStart the docker machine then connect to docker machine and make the following changes:\n[suresh@suresh ~]$ docker-machine start worker1\n[suresh@suresh ~]$ docker-machine ssh worker1\nCreate the bootsync.sh file and make following changes:\ndocker@worker1:~$ sudo vi /var/lib/boot2docker/bootsync.sh\nifconfig eth1 192.168.99.101 netmask 255.255.255.0 broadcast 192.168.99.255 up\n[suresh@suresh ~]$ docker-machine stop worker1\n[suresh@suresh ~]$ docker-machine start worker1\nVeify ip address:\n[suresh@suresh ~]$ docker-machine ip worker1 \n192.168.99.101. ",
    "ryanseys": "Thanks @steeve!\n. ",
    "hackdna": "```\n$ VBoxHeadless --version\nOracle VM VirtualBox Headless Interface 4.2.16\n(C) 2008-2013 Oracle Corporation\nAll rights reserved.\n4.2.16r86992\n```\n. $ ./boot2docker info | grep 'State:[[:space:]]+running'; echo $?\n1\n$ ./boot2docker info | grep \"State:\\s+running\"; echo $?\n1\n$ grep --version\ngrep (GNU grep) 2.5.1\n. ",
    "tiborvass": "I confirm that it also resolves the \"Cannot destroy container\" error that says \"Driver aufs failed to remove root filesystem\".\n. I confirm that it also resolves the \"Cannot destroy container\" error that says \"Driver aufs failed to remove root filesystem\".\n. Works for me with 0.5.3.\n. Works for me with 0.5.3.\n. Yeah I'm working on VBoxManage and SSH with putty. I still have problems with VBoxManage that I have to figure out.\nBut this PR looks good to me, it is even better than what I had since it checks multiple env variables.\nQuestion: do you guys prefer to have build constraints for different platforms or a bunch of ifs in one piece? (https://github.com/tiborvass/boot2docker/blob/master/boot2docker_windows.go)\n. Sure! I'll send PRs to go-boot2docker :)\n. Thanks, I rereforked :)\n. No I don't want to merge this. I thought we agreed on working on github.com/boot2docker/boot2docker-cli . I didn't have time at all this weekend (was oncall with some bad luck), so I will hopefully merge my windows stuff soonish to the -cli repo. Sorry for the delay.\n. @tianon can't we close this since docker exec is here?\n. @tianon can't we close this since docker exec is here?\n. @SvenDowideit I confirm it works with b2d 1.0.1.\n. Thanks @SvenDowideit !\n. Thanks @SvenDowideit !\n. @SvenDowideit I still see this with 1.2.0. I just restarted not long ago the VM and there's already time skew:\n$ date -u; b2d ssh date -u\nMon Sep 22 14:43:49 UTC 2014\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\nMon Sep 22 14:43:44 UTC 2014\n$ ps aux | grep ntp | grep -v grep\n  737 root     /usr/local/bin/ntpclient -l -h pool.ntp.org\nI'm not sure what's going on :(\n. I will run the Docker test suite with this PR. Please don't merge yet.\n. All Docker tests passed :)\n. Just FYI, https://github.com/tiborvass/docker/commit/5937663a08d9e7ddc9347c4fc33a506d3d596ccd has been merged. I rewrote the documentation on the Docker side. Also localhost will be insecure by default in 1.3.2 (coming soon).\n. Just FYI, https://github.com/tiborvass/docker/commit/5937663a08d9e7ddc9347c4fc33a506d3d596ccd has been merged. I rewrote the documentation on the Docker side. Also localhost will be insecure by default in 1.3.2 (coming soon).\n. Little correction on what @RomanSaveljev said: instead of using --privileged + bind mount, you should be able to simply do --device=/dev/bus/usb:/dev/bus/usb:rwm.\nAnd here is the documentation on VirtualBox: https://www.virtualbox.org/manual/ch08.html#idp59658992\n. @mauvm before doing anything with Docker you'll need to forward the USB device into the VM. Boot2docker does not do that automatically as far as i know.\nYou should be able to modify the VM settings in VirtualBox's UI, if you stop the VM. But if you want it to be scriptable, you should use VBoxManage.\n. Ping @steeve :D\n. I'm not exactly sure what xhyve needs from boot2docker, but if anything, I'm in favor of it :)\nPlease note that this repo is about the boot2docker distro itself, and although there used to be boot2docker-cli, the recommended approach today is to use https://github.com/docker/machine. I would love to have xhyve support in machine, but for that xhyve needs to mature a little and at least not cause kernel panics while other virtualization software is running :)\n. I would urge you to try recovering files with a recovery software right away and try not to utilize your disk in the meanwhile.\n. I would urge you to try recovering files with a recovery software right away and try not to utilize your disk in the meanwhile.\n. :+1: \n. @frapposelli I might be doing something weird (and I'm not testing your PR directly), but I wanted to check the vendor of my sda on VMWare Fusion 7, and it only said VMware,. Do you know why that would be the case?\n. +1 for *VMware*\n. ",
    "al-x": "@steeve \nCan you show me the output you see? It works when I run it:\ncommand:\ncurl -fs -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" 'https://api.github.com/repos/steeve/boot2docker/releases' | awk -F\\\" '/tag_name/{print $4;exit}' RS=,\noutput:\nv0.5.4\n. @steeve \nCan you show me the output you see? It works when I run it:\ncommand:\ncurl -fs -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" 'https://api.github.com/repos/steeve/boot2docker/releases' | awk -F\\\" '/tag_name/{print $4;exit}' RS=,\noutput:\nv0.5.4\n. From curl's manpage (error 23: \"Write error. Curl couldn't write data to a local filesystem or similar.\") , it looks like this could be a problem with the local filesystem, which is odd, because we are not explicitly writing to a file. We explicitly call curl with -f/--fail in order to \"fail silently (no output at all) on server errors\".\nIf we add back 2>/dev/null, I guess that would also discard local errors. Can you please check the results of:\ncurl -fs -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null | awk -F\\\" '/tag_name/{print $4;exit}' RS=,\nfor me it is only:\nv0.5.4\n. From curl's manpage (error 23: \"Write error. Curl couldn't write data to a local filesystem or similar.\") , it looks like this could be a problem with the local filesystem, which is odd, because we are not explicitly writing to a file. We explicitly call curl with -f/--fail in order to \"fail silently (no output at all) on server errors\".\nIf we add back 2>/dev/null, I guess that would also discard local errors. Can you please check the results of:\ncurl -fs -A \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)\" 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null | awk -F\\\" '/tag_name/{print $4;exit}' RS=,\nfor me it is only:\nv0.5.4\n. ",
    "klaemo": "yep same here\n. yep same here\n. Works now\n. Works now\n. VirtualBox-4.3.6-91406-OSX\nThrough the docker client docker run -i -t ubuntu:latest /bin/bash\nand then trying to execute any command (even as simple as ls or exit) inside of the container takes forever. I takes about 15sec only for the input to show up in the terminal.\nsame when sshing into b2d and running docker stop xyz\nhere is the output of boot2docker info https://gist.github.com/klaemo/8866044\n. VirtualBox-4.3.6-91406-OSX\nThrough the docker client docker run -i -t ubuntu:latest /bin/bash\nand then trying to execute any command (even as simple as ls or exit) inside of the container takes forever. I takes about 15sec only for the input to show up in the terminal.\nsame when sshing into b2d and running docker stop xyz\nhere is the output of boot2docker info https://gist.github.com/klaemo/8866044\n. this might demonstrate the problem a little better\nhttps://dl.dropboxusercontent.com/u/12230203/b2d-lag.mov (1,1mb)\nhttps://dl.dropboxusercontent.com/u/12230203/b2s-exit-lag.mov (1,8mb)\n. this might demonstrate the problem a little better\nhttps://dl.dropboxusercontent.com/u/12230203/b2d-lag.mov (1,1mb)\nhttps://dl.dropboxusercontent.com/u/12230203/b2s-exit-lag.mov (1,8mb)\n. Interesting. I've experienced number 2 as well.\nThe similar hardware config makes me wonder...\n. hey, sorry for not being around the last few days.\nthanks @vgarg for providing more information on this.\nI just reinstalled b2d with brew from scratch and it seems to work. Just some quick testing with an ubuntu container and no lag so far.\nI'll check out the latest master of b2d and play around with it a little.\n. same as @advanderveer. it seemed to work for a while, for no obvious reason. then today I reinstalled docker b2d from scratch to get the newest version and it lags again.\ndocker run -t -i --rm ubuntu:12.04 /bin/bash is unusable as shown in my videos :(\n. same as @advanderveer. it seemed to work for a while, for no obvious reason. then today I reinstalled docker b2d from scratch to get the newest version and it lags again.\ndocker run -t -i --rm ubuntu:12.04 /bin/bash is unusable as shown in my videos :(\n. So, I'm on OSX 10.9.2 now and VirtualBox 4.3.8\n@steeve I installed it with brew, but I can still confirm the really slow top startup time mentioned by @jerolimov and the behavior @sinm reported.\nCan we provide you with any logs that might help?\nI think it's some little issue with the vm. Maybe the hardware combination? I fair amount of people here seem to have third party SSDs. Also, I seem to recall that OSX treats them differently than preinstalled SSDs.\n. more info.\n``` bash\ntime boot2docker start\n[2014-02-26 15:51:16] Starting boot2docker-vm...\n[2014-02-26 15:51:48] Started.\nreal    0m32.293s\nuser    0m0.130s\nsys 0m0.138s\n```\n32s seems fairly long, doesn't it? It's only on a Core2Duo 2.4Ghz, but with SSD.\nsome log files:\nvbox.log\ndmesg.log\n. So, so weird! I was just able to work inside a docker container for a while, then it stalled for like 30sec and now it's working again.\n. yep, docker 0.9 + b2d 0.7, same same ;)\n. It's still happening for me with the latest everything. After a few minutes with lags it started happening again. \n. Can't update with homebrew atm\n```\n$ brew install boot2docker\n==> Downloading https://github.com/boot2docker/boot2docker/archive/v0.9.0.tar.gz\n################################################################## 100.0%\ncurl: (22) The requested URL returned error: 503 Service Unavailable\nError: Failed to download resource \"boot2docker\"\nDownload failed: https://github.com/boot2docker/boot2docker/archive/v0.9.0.tar.gz\n```\nThis might be a github problem though. I'll try again later.\n. Sorry @steeve the lag is still there. :( maybe someone else can confirm.\n. yes please! :) \n. I got around to testing @tatsushid's image and it has gotten much much better. :)\nIt's still not as smooth as on a linux box, especially while pulling docker images the VM becomes unresponsive every once in a while.\nI can live with that though.\n. ",
    "delfuego": "I too am seeing this regardless of which docker client I use (0.8.0 running on OS X or 0.8.0 running inside the boot2docker VM).\n. I too am seeing this regardless of which docker client I use (0.8.0 running on OS X or 0.8.0 running inside the boot2docker VM).\n. ",
    "jaredm4": "Same.\n. Same.\n. Yes, works. Thanks @steeve.\n. Yes, works. Thanks @steeve.\n. ",
    "sethvoltz": "Same issue with boot2docker 0.5.4 and docker 0.8.0. System is OS X Mavericks running ZSH. $DOCKER_HOST set to tcp://\n```\n$> docker run -i -t ubuntu /bin/bash                                                                                                                        (Sat, Feb 08 17:25)\nroot@612654966e1f:/# echo hi\nhi\nroot@612654966e1f:/# exit\n[error] commands.go:2496 Couldn't send EOF: use of closed network connection\n$> boot2docker ssh                                                                                                                                          (Sat, Feb 08 17:27)\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\ndocker@localhost's password:\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"_/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           __ o          /\n             \\    \\        /\n              __/\n _                 _   _     _            \n| |   | || \\ _| |  | |  _ \n| '_ \\ / _ \\ / _ \\| | ) / _` |/ _ \\ / | |/ / _ \\ '|\n| |) | () | () | | / / (| | () | (|   <  / |\n|./ _/ _/ __|__,|_/ _||____|_|\nboot2docker: 0.5.4\ndocker@boot2docker:~$ docker run -t -i ubuntu /bin/bash\nroot@0610c474e6ed:/# echo hi\nhi\nroot@0610c474e6ed:/# exit\ndocker@boot2docker:~$ Connection to localhost closed.\n$> docker version                                                                                                                                           (Sat, Feb 08 17:27)\nClient version: 0.8.0\nGo version (client): go1.2\nGit commit (client): cc3a8c8\nServer version: 0.8.0\nGit commit (server): cc3a8c8\nGo version (server): go1.2\n``\n. @aheissenberger Whoops, this is my bad. I came into this issue via a google search for thecommands.go:2496 Couldn't send EOF` portion of my posting and those above mine. I dug further and while others have referenced it I have not seen a fix listed.\nShould I open a new issue?\nHowever, to this issue, most containers will delete but testing right now I have one which doesn't want to go:\n```\n$> docker ps -a\nCONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES\n0610c474e6ed        ubuntu:12.04        /bin/bash              27 hours ago        Exit 0                                  ecstatic_brattain\nf26b91adac7a        ubuntu:12.04        /bin/bash              27 hours ago        Exit 0                                  suspicious_mccarthy\n612654966e1f        ubuntu:12.04        /bin/bash              27 hours ago        Exit 0                                  prickly_brown\nbfa23cb6be11        ubuntu:12.04        /bin/bash              27 hours ago        Exit 0                                  jolly_archimedes\nb91e334a4ce9        ubuntu:12.04        /bin/bash              31 hours ago        Exit 0                                  lonely_feynman\n8b0e5814e7c3        ubuntu:12.04        /bin/bash              31 hours ago        Exit 0                                  focused_morse\nd636627a0140        ubuntu:12.04        /bin/echo hello worl   31 hours ago        Exit 0                                  distracted_galileo\n$> docker rm 0610c474e6ed                                                                                                                    0610c474e6ed\n$> docker rm 0610c474e6ed\nError: container_delete: No such container: 0610c474e6ed\n2014/02/09 20:59:37 Error: failed to remove one or more containers\n$> docker rm 612654966e1f\n612654966e1f\n$> #... the rest delete without error\n$> docker ps -a\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nf26b91adac7a        ubuntu:12.04        /bin/bash           27 hours ago        Exit 0                                  suspicious_mccarthy\n$> # try again\n$> docker rm f26b91adac7a\nf26b91adac7a\n$> docker ps -a\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n```\n. @aheissenberger I can not reliably reproduce the issue. Using my example from above (opening a bash instance) I nearly always can delete with the occasional error which is resolved trying to delete a second time. \n. ",
    "morgante": "I cannot delete either. Here's the error I get:\nError: container_delete: Cannot destroy container 7bcd2e23a0fc: Driver aufs failed to remove root filesystem 7bcd2e23a0fce9730452d8f85a762ae276da151c7c819157d4ce38c62b540a48: rename /var/lib/docker/aufs/mnt/7bcd2e23a0fce9730452d8f85a762ae276da151c7c819157d4ce38c62b540a48 /var/lib/docker/aufs/mnt/7bcd2e23a0fce9730452d8f85a762ae276da151c7c819157d4ce38c62b540a48-removing: device or resource busy\n2014/02/09 19:59:23 Error: failed to remove one or more containers\nHere's my info, on OS X:\nClient version: 0.8.0\nGo version (client): go1.2\nGit commit (client): cc3a8c8\nServer version: 0.8.0\nGit commit (server): cc3a8c8\nGo version (server): go1.2\n. This is my grep version, but these commands should ideally not be dependent on that.\ngrep (BSD grep) 2.5.1-FreeBSD\n. Okay, upgrading to the latest version fixed this.\n. I've also seen terrible networking performance.\n. Even with the Docker 1.2.0 client and DOCKER_TLS_VERIFY=1, the only way for me to access docker is with the --tls flag.\n. ",
    "sbyrnes": "I ran into this same problem with the latest release of boot2docker and docker. The only solution I found was to destroy the VM and recreate it - does anyone have a better method for solving?\n. ",
    "anentropic": "boot2docker download in @garthk's steps above doesn't work, I guess because of this https://github.com/boot2docker/boot2docker/pull/210 ..?\non the plus side a homebrew install is now an option\n. Same here, with bash and Docker 0.8.0, boot2docker 0.6.0\nAdditionally when I docker attach 6dccb98361ba I have to hit enter a second time before I get a command prompt in the container.\n. boot2docker 1.8.1\nVirtualBox 5.0.2 on OS X 10.9.5\n```\n$ boot2docker up\nWARNING: The 'boot2docker' command line interface is officially deprecated.\nPlease switch to Docker Machine (https://docs.docker.com/machine/) ASAP.\nDocker Toolbox (https://docker.com/toolbox) is the recommended install method.\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\n```\nyeah well whatever, Toolbox is broken too\nsame result after deleting all docker-machine and boot2docker VMs in virtualbox control panel and starting from scratch\n. ",
    "panamantis": "Or use a mount instead of a ln  mount --bind olddir newdir\n. Or use a mount instead of a ln  mount --bind olddir newdir\n. ",
    "jfoy": "Addresses https://github.com/dotcloud/docker/issues/3980 and #143 \n. ",
    "runvnc": "The developer I am working with says she reinstalled boot2docker after having this issue and now she is still having the issue.  Will the install instructions at https://docs.docker.io/en/master/installation/mac/ (curl https://raw.github.com/steeve/boot2docker/master/boot2docker > boot2docker etc) load the newest master with the fix?  She is still getting build: Forbidden path outside the build context: cupsd.conf (/mnt/sda1/tmp/docker-build781626545/cupsd.conf)\n. ",
    "logicminds": "I am still seeing this error.  Even updated the boot2docker repo and removed boot2docker.iso, and associated running VMs.\nIs there something I am missing?\n$ docker build dockerfile\nUploading context 2.048 kB\nUploading context\n2014/02/10 00:31:07 Error: build: open /mnt/sda1/tmp/docker-build752578755/Dockerfile: not a directory\nWhy is there a pipe character here: docker|6b91f21f\nopen /mnt/sda1/tmp/docker-build295981044/Dockerfile: not a directory[/mnt/sda1/var/lib/docker|6b91f21f] -job build() = ERR (1)\n[error] api.go:959 Error: build: open /mnt/sda1/tmp/docker-build295981044/Dockerfile: not a directory\n[error] api.go:91 HTTP Error: statusCode=500 build: open /mnt/sda1/tmp/docker-build295981044/Dockerfile: not a directory\n[debug] api.go:933 Calling GET /version\n. Ah, that works much better.\n. This occurs while I am on wifi though.  After deleting everything and reinstalling I still get this error.\nboot2docker download\n[2014-07-09 19:47:46] Could not get lastest release name! Cannot download boot2docker.iso.\n. This occurs while I am on wifi though.  After deleting everything and reinstalling I still get this error.\nboot2docker download\n[2014-07-09 19:47:46] Could not get lastest release name! Cannot download boot2docker.iso.\n. yep, just downloaded the latest and its still broken.  Haven't been able to use boot2docker for several months because of this error.\n. I found the issue and I thought I replied in this thread but I must not have click the save button.  Anyways the problem likes in that the boot2docker script was not deleted after updating to the latest boot2docker that was written in go.  So the old bash script was taking precedence in my PATH variable was being called instead of the new GO boot2docker binary.  After deleting the old boot2docker bash script everything worked as expected.  So in this upcoming uninstall script please ensure you remove the boot2docker bash script. @hangsam @SvenDowideit  @memelet \n. the old script is in /usr/bin which takes precedence over /usr/local/bin\n. From boot2docker in /usr/bin\n``` bash\nget_latest_release_name() {\n    local LRN\n    LRN=$(curl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null|grep -o -m 1 -e \"\\\"tag_name\\\":[[:space:]]\\\"[a-z0-9.]\\\"\"|head -1|cut -d: -f2|tr -d ' \"')\n    if [ -z \"$LRN\" ]; then\n        echo \"ERROR\"\n    else\n        echo \"$LRN\"\n    fi\n}\n```\nI am not sure if this is supposed to return a version string but it looks like this might be the problem.\ncurl 'https://api.github.com/repos/steeve/boot2docker/releases'\n{\n  \"message\": \"Not Found\",\n  \"documentation_url\": \"https://developer.github.com/v3\"\n}\nThis boot2docker is a bash script and hasn't this changed to a go cli command?  If so looks like the bash script is taking precedence over the cli go command.\n. Ok I just verified the fix for this:  I just deleted the boot2docker command which was the old bash script and now the correct boot2docker go cli command is now being used.\n. ",
    "vgarg": "\nRunning into the same freezes as demonstrated in the videos from OP. Have also noticing similar behavior in other areas e.g. freezes while editing a file in vi on the guest VM.\nI am also having trouble with launching the containers consistently. It was a hit or miss earlier, but now it is mostly a miss. For example I run into the following :\n\n$ docker run busybox /bin/echo hello\n2014/02/08 17:20:08 Error: start: Cannot start container 92181c5a54e966335d2d4abb57480f03a140f292f0329a1f961ac5ab72a87360: Process could not be started\nMy environment is:\nOS X 10.9.1\nVirtual Box: 4.3.6 r91406\nBoot2Docker: 5.4\nDocker: 0.8\nAs OP, mine is a 2010 MBP with an after market Samsung SSD\n. After reading on some VB forums, I did an Uninstall, Reboot, Install of Virtual Box. The freeze I was experiencing while editing a file in the vi seems to have gone (hopefully it doesn't return).\nThe version of VB I am running (4.3.6 r91406) appears to be the latest. I don't see anything more recent on the VB site. Also I did not find a /var/log/docker.log file in the guest VM. Am I looking at the wrong place?\nI did the test suggested above. I went to the VM settings using the VirtualBox GUI and disabled the network interface 1. Started the VM and still run into the issue: Error: start: Cannot start container 92181xxxx: Process could not be started when I run a command like docker run busybox /bin/echo hello. Sometimes the command is successful, sometimes it is not.\nThis looks same as reported in the last few comments of https://github.com/dotcloud/docker/issues/3957\n. I was able to find the docker.log on the host vm. As you scull down, you will notice it showing the issue with starting the container:\n[/mnt/sda1/var/lib/docker|e1e82023] +job initserver()\n[/mnt/sda1/var/lib/docker|e1e82023.initserver()] Creating server\n[debug] runtime.go:632 Using graph driver aufs\n[debug] runtime.go:641 Migrating existing containers\n[debug] runtime.go:647 Creating images graph\n[debug] graph.go:60 Restored 0 elements\n[debug] runtime.go:659 Creating volumes graph\n[debug] graph.go:60 Restored 0 elements\n[debug] runtime.go:664 Creating repository list\n[/mnt/sda1/var/lib/docker|e1e82023] +job init_networkdriver()\n[/mnt/sda1/var/lib/docker|e1e82023.init_networkdriver()] creating new bridge for docker0\n[debug] driver.go:260 Creating bridge docker0 with network 172.17.42.1/16\n[/mnt/sda1/var/lib/docker|e1e82023.init_networkdriver()] getting iface addr\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-C POSTROUTING -t nat -s 172.17.42.1/16 ! -d 172.17.42.1/16 -j MASQUERADE]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-I POSTROUTING -t nat -s 172.17.42.1/16 ! -d 172.17.42.1/16 -j MASQUERADE]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-D FORWARD -i docker0 -o docker0 -j DROP]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-C FORWARD -i docker0 -o docker0 -j ACCEPT]\n[debug] driver.go:187 Enable inter-container communication\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-I FORWARD -i docker0 -o docker0 -j ACCEPT]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-C FORWARD -i docker0 ! -o docker0 -j ACCEPT]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-I FORWARD -i docker0 ! -o docker0 -j ACCEPT]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-C FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-I FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -D PREROUTING -m addrtype --dst-type LOCAL -j DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -D OUTPUT -m addrtype --dst-type LOCAL ! --dst 127.0.0.0/8 -j DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -D OUTPUT -m addrtype --dst-type LOCAL -j DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -D PREROUTING -j DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -D OUTPUT -j DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -F DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -X DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -N DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER]\n[DEBUG] [iptables]: /usr/local/sbin/iptables, [-t nat -A OUTPUT -m addrtype --dst-type LOCAL ! --dst 127.0.0.0/8 -j DOCKER]\n[/mnt/sda1/var/lib/docker|e1e82023] -job init_networkdriver() = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023.initserver()] Creating pidfile\n[/mnt/sda1/var/lib/docker|e1e82023.initserver()] Setting up signal traps\n[/mnt/sda1/var/lib/docker|e1e82023] -job initserver() = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] +job serveapi(unix:///var/run/docker.sock, tcp://:4243)\n2014/02/12 01:23:32 Listening for HTTP on unix (/var/run/docker.sock)\n[debug] api.go:1045 Registering GET, /events\n[debug] api.go:1045 Registering GET, /images/search\n[debug] api.go:1045 Registering GET, /images/{name:.*}/get\n[debug] api.go:1045 Registering GET, /images/{name:.*}/history\n[debug] api.go:1045 Registering GET, /containers/json\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/export\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/json\n[debug] api.go:1045 Registering GET, /info\n[debug] api.go:1045 Registering GET, /images/viz\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/top\n[debug] api.go:1045 Registering GET, /images/json\n[debug] api.go:1045 Registering GET, /images/{name:.*}/json\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/attach/ws\n[debug] api.go:1045 Registering GET, /version\n[debug] api.go:1045 Registering GET, /containers/ps\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/changes\n[debug] api.go:1045 Registering POST, /auth\n[debug] api.go:1045 Registering POST, /build\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/wait\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/attach\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/copy\n[debug] api.go:1045 Registering POST, /commit\n[debug] api.go:1045 Registering POST, /images/create\n[debug] api.go:1045 Registering POST, /images/load\n2014/02/12 01:23:32 Listening for HTTP on tcp (:4243)\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/changes\n[debug] api.go:1045 Registering GET, /images/search\n[debug] api.go:1045 Registering GET, /containers/json\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/export\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/json\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/attach/ws\n[debug] api.go:1045 Registering GET, /info\n[debug] api.go:1045 Registering GET, /version\n[debug] api.go:1045 Registering GET, /images/viz\n[debug] api.go:1045 Registering GET, /containers/ps\n[debug] api.go:1045 Registering GET, /containers/{name:.*}/top\n[debug] api.go:1045 Registering GET, /events\n[debug] api.go:1045 Registering GET, /images/json\n[debug] api.go:1045 Registering GET, /images/{name:.*}/get\n[debug] api.go:1045 Registering GET, /images/{name:.*}/history\n[debug] api.go:1045 Registering GET, /images/{name:.*}/json\n[debug] api.go:1045 Registering POST, /auth\n[debug] api.go:1045 Registering POST, /images/{name:.*}/insert\n[debug] api.go:1045 Registering POST, /images/create\n[debug] api.go:1045 Registering POST, /images/load\n[debug] api.go:1045 Registering POST, /images/{name:.*}/push\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/start\n[debug] api.go:1045 Registering POST, /build\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/restart\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/wait\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/attach\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/copy\n[debug] api.go:1045 Registering POST, /commit\n[debug] api.go:1045 Registering POST, /images/{name:.*}/tag\n[debug] api.go:1045 Registering POST, /containers/create\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/kill\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/stop\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/resize\n[debug] api.go:1045 Registering DELETE, /containers/{name:.*}\n[debug] api.go:1045 Registering DELETE, /images/{name:.*}\n[debug] api.go:1045 Registering OPTIONS, \n2014/02/12 01:23:32 /!\\ DON'T BIND ON ANOTHER IP ADDRESS THAN 127.0.0.1 IF YOU DON'T KNOW WHAT YOU'RE DOING /!\\\n[debug] api.go:1045 Registering POST, /images/{name:.*}/push\n[debug] api.go:1045 Registering POST, /images/{name:.*}/tag\n[debug] api.go:1045 Registering POST, /images/{name:.*}/insert\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/restart\n[debug] api.go:1045 Registering POST, /containers/create\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/kill\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/start\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/stop\n[debug] api.go:1045 Registering POST, /containers/{name:.*}/resize\n[debug] api.go:1045 Registering DELETE, /containers/{name:.*}\n[debug] api.go:1045 Registering DELETE, /images/{name:.*}\n[debug] api.go:1045 Registering OPTIONS, \n[debug] api.go:1155 docker group found. gid: 100\n[debug] api.go:933 Calling GET /images/json\n2014/02/12 01:24:01 GET /v1.9/images/json\n[/mnt/sda1/var/lib/docker|e1e82023] +job images()\n[/mnt/sda1/var/lib/docker|e1e82023] -job images() = OK (0)\n[debug] api.go:933 Calling POST /images/create\n2014/02/12 01:24:08 POST /v1.9/images/create?fromImage=busybox&tag=\n[/mnt/sda1/var/lib/docker|e1e82023] +job pull(busybox, )\n[debug] registry.go:318 [registry] Calling GET https://index.docker.io/v1/repositories/busybox/images\n[debug] http.go:168 https://index.docker.io/v1/repositories/busybox/images -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] server.go:1120 Retrieving the tag list\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/repositories/library/busybox/tags -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] registry.go:292 Got status code 200 from https://cdn-registry-1.docker.io/v1/repositories/library/busybox/tags\n[debug] server.go:1135 Registering tags\n[debug] server.go:1162 Image (id: 24abbd812704df36ef0d4ec77aa3e8be80714bbbbfa33e0c002f6df095053e23) present in this repository but untagged, skipping\n[debug] server.go:1162 Image (id: 3dd072f45bf6a180c9a4d5da73462c0279c652d1d91a53aa404f958dd090dd55) present in this repository but untagged, skipping\n[debug] server.go:1162 Image (id: 48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb) present in this repository but untagged, skipping\n[debug] server.go:1162 Image (id: 511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158) present in this repository but untagged, skipping\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/769b9341d937a3dba9e460f664b4f183a6cecdd62b337220a28b3deb50ee0a02/ancestry -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] server.go:1162 Image (id: a943c4969b70574bb546a26bb28dc880e79dd2e1c878f6e61be553de0aee1e61) present in this repository but untagged, skipping\n[debug] server.go:1162 Image (id: bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78) present in this repository but untagged, skipping\n[debug] server.go:1162 Image (id: e9aa60c60128cad1) present in this repository but untagged, skipping\n[debug] registry.go:199 Ancestry: [\n    \"769b9341d937a3dba9e460f664b4f183a6cecdd62b337220a28b3deb50ee0a02\",\n    \"48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb\",\n    \"bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78\",\n    \"511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\"\n]\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158/json -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] image.go:303 Json string: {{\"id\":\"511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\",\"comment\":\"Imported from -\",\"created\":\"2013-06-13T14:03:50.821769-07:00\",\"container_config\":{\"Hostname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Dns\":null,\"Image\":\"\",\"Volumes\":null,\"VolumesFrom\":\"\"},\"docker_version\":\"0.4.0\",\"architecture\":\"x86_64\"}}\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158/layer -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] archive.go:81 [tar autodetect] n: 10\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78/json -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] image.go:303 Json string: {{\"id\":\"bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78\",\"parent\":\"511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\",\"created\":\"2014-02-03T15:58:08.52236968Z\",\"container\":\"28c54617d310c57a3dae782434f2fd18120d1d7056dd5617a24468c5cc85fa27\",\"container_config\":{\"Hostname\":\"28c54617d310\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) MAINTAINER J\u00e9r\u00f4me Petazzoni \\u003cjerome@docker.com\\u003e\"],\"Dns\":null,\"Image\":\"511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\",\"Volumes\":null,\"VolumesFrom\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"Privileged\":false},\"docker_version\":\"0.6.3\",\"author\":\"J\u00e9r\u00f4me Petazzoni \\u003cjerome@docker.com\\u003e\",\"config\":{\"Hostname\":\"28c54617d310\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":null,\"Dns\":null,\"Image\":\"511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\",\"Volumes\":null,\"VolumesFrom\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"Privileged\":false},\"architecture\":\"x86_64\",\"Size\":0}}\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78/layer -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] archive.go:81 [tar autodetect] n: 10\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb/json -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] image.go:303 Json string: {{\"id\":\"48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb\",\"parent\":\"bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78\",\"created\":\"2014-02-03T15:58:08.72383042Z\",\"container\":\"80dc0292dbc561f80c103b09c6b9129c25e8dc78feb725473c776c64cadf8af7\",\"container_config\":{\"Hostname\":\"28c54617d310\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD rootfs.tar in /\"],\"Dns\":null,\"Image\":\"bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78\",\"Volumes\":null,\"VolumesFrom\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"Privileged\":false},\"docker_version\":\"0.6.3\",\"author\":\"J\u00e9r\u00f4me Petazzoni \\u003cjerome@docker.com\\u003e\",\"config\":{\"Hostname\":\"28c54617d310\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":null,\"Dns\":null,\"Image\":\"bf747efa0e2fa9f7c691588ce3938944c75607a7bb5e757f7369f86904d97c78\",\"Volumes\":null,\"VolumesFrom\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"Privileged\":false},\"architecture\":\"x86_64\",\"Size\":0}}\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb/layer -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] archive.go:81 [tar autodetect] n: 10\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/769b9341d937a3dba9e460f664b4f183a6cecdd62b337220a28b3deb50ee0a02/json -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] image.go:303 Json string: {{\"id\":\"769b9341d937a3dba9e460f664b4f183a6cecdd62b337220a28b3deb50ee0a02\",\"parent\":\"48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb\",\"created\":\"2014-02-03T15:58:08.872585903Z\",\"container\":\"a2af951c57be9154cf31a507c619c517757ec24dcbdd6fc41002537256ff6230\",\"container_config\":{\"Hostname\":\"28c54617d310\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [/bin/sh -c /bin/sh]\"],\"Dns\":null,\"Image\":\"48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb\",\"Volumes\":null,\"VolumesFrom\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"Privileged\":false},\"docker_version\":\"0.6.3\",\"author\":\"J\u00e9r\u00f4me Petazzoni \\u003cjerome@docker.com\\u003e\",\"config\":{\"Hostname\":\"28c54617d310\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"/bin/sh\"],\"Dns\":null,\"Image\":\"48e5f45168b97799ad0aafb7e2fef9fac57b5f16f6db7f67ba2000eb947637eb\",\"Volumes\":null,\"VolumesFrom\":\"\",\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"Privileged\":false},\"architecture\":\"x86_64\",\"Size\":0}}\n[debug] http.go:168 https://cdn-registry-1.docker.io/v1/images/769b9341d937a3dba9e460f664b4f183a6cecdd62b337220a28b3deb50ee0a02/layer -- HEADERS: map[User-Agent:[docker/0.8.0 go/go1.2 git-commit/cc3a8c8 kernel/3.12.1-tinycore64 os/linux arch/amd64 ]]\n[debug] archive.go:81 [tar autodetect] n: 10\n[/mnt/sda1/var/lib/docker|e1e82023] -job pull(busybox, ) = OK (0)\n[debug] api.go:933 Calling POST /containers/create\n2014/02/12 01:25:13 POST /v1.9/containers/create\n[/mnt/sda1/var/lib/docker|e1e82023] +job create()\n[/mnt/sda1/var/lib/docker|e1e82023] -job create() = OK (0)\n[debug] api.go:933 Calling POST /containers/{name:.*}/attach\n2014/02/12 01:25:13 POST /v1.9/containers/7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781/attach?stderr=1&stdout=1&stream=1\n[/mnt/sda1/var/lib/docker|e1e82023] +job inspect(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781, container)\n[/mnt/sda1/var/lib/docker|e1e82023] -job inspect(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781, container) = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] +job attach(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781)\n[debug] container.go:458 attach: stdout: begin\n[debug] container.go:496 attach: stderr: begin\n[debug] container.go:542 attach: waiting for job 1/2\n[debug] api.go:933 Calling POST /containers/{name:.*}/start\n2014/02/12 01:25:13 POST /v1.9/containers/7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781/start\n[/mnt/sda1/var/lib/docker|e1e82023] +job start(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781)\n[/mnt/sda1/var/lib/docker|e1e82023] +job allocate_interface(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781)\n[/mnt/sda1/var/lib/docker|e1e82023] -job allocate_interface(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781) = OK (0)\n[error] container.go:1244 Error running container: Process could not be started\n[/mnt/sda1/var/lib/docker|e1e82023] +job release_interface(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781)\n[/mnt/sda1/var/lib/docker|e1e82023] -job release_interface(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781) = OK (0)\n[debug] container.go:475 attach: stdout: end\n[debug] container.go:513 attach: stderr: end\n[debug] container.go:547 attach: job 1 completed successfully\n[debug] container.go:542 attach: waiting for job 2/2\n[debug] container.go:547 attach: job 2 completed successfully\n[debug] container.go:549 attach: all jobs completed successfully\n[/mnt/sda1/var/lib/docker|e1e82023] -job attach(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781) = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] +job release_interface(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781)\n[/mnt/sda1/var/lib/docker|e1e82023] -job release_interface(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781) = OK (0)\nCannot start container 7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781: Process could not be started[/mnt/sda1/var/lib/docker|e1e82023] -job start(7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781) = ERR (1)\n[error] api.go:959 Error: start: Cannot start container 7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781: Process could not be started\n[error] api.go:91 HTTP Error: statusCode=500 start: Cannot start container 7df002e1be47fcfaa642e7d691bf208fbfee67bda863b0b2bf4b82a14b45f781: Process could not be started\n[debug] api.go:933 Calling POST /containers/create\n2014/02/12 01:25:45 POST /v1.9/containers/create\n[/mnt/sda1/var/lib/docker|e1e82023] +job create()\n[/mnt/sda1/var/lib/docker|e1e82023] -job create() = OK (0)\n[debug] api.go:933 Calling POST /containers/{name:.*}/attach\n2014/02/12 01:25:45 POST /v1.9/containers/587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2/attach?stderr=1&stdout=1&stream=1\n[/mnt/sda1/var/lib/docker|e1e82023] +job inspect(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2, container)\n[/mnt/sda1/var/lib/docker|e1e82023] -job inspect(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2, container) = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] +job attach(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2)\n[debug] container.go:458 attach: stdout: begin\n[debug] container.go:496 attach: stderr: begin\n[debug] container.go:542 attach: waiting for job 1/2\n[debug] api.go:933 Calling POST /containers/{name:.*}/start\n2014/02/12 01:25:45 POST /v1.9/containers/587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2/start\n[/mnt/sda1/var/lib/docker|e1e82023] +job start(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2)\n[/mnt/sda1/var/lib/docker|e1e82023] +job allocate_interface(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2)\n[/mnt/sda1/var/lib/docker|e1e82023] -job allocate_interface(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2) = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] -job start(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2) = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] +job release_interface(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2)\n[/mnt/sda1/var/lib/docker|e1e82023] -job release_interface(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2) = OK (0)\n[debug] container.go:475 attach: stdout: end\n[debug] container.go:513 attach: stderr: end\n[debug] container.go:547 attach: job 1 completed successfully\n[debug] container.go:542 attach: waiting for job 2/2\n[debug] container.go:547 attach: job 2 completed successfully\n[debug] container.go:549 attach: all jobs completed successfully\n[/mnt/sda1/var/lib/docker|e1e82023] -job attach(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2) = OK (0)\n[debug] api.go:933 Calling POST /containers/{name:.*}/wait\n2014/02/12 01:25:47 POST /v1.9/containers/587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2/wait\n[/mnt/sda1/var/lib/docker|e1e82023] +job wait(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2)\n[/mnt/sda1/var/lib/docker|e1e82023] -job wait(587af1a4e36e0f967476ebff26b33d6042d3131f6d9eec1c347927194f3b1ac2) = OK (0)\n[debug] api.go:933 Calling POST /containers/create\n2014/02/12 01:25:48 POST /v1.9/containers/create\n[/mnt/sda1/var/lib/docker|e1e82023] +job create()\n[/mnt/sda1/var/lib/docker|e1e82023] -job create() = OK (0)\n[debug] api.go:933 Calling POST /containers/{name:.*}/attach\n2014/02/12 01:25:48 POST /v1.9/containers/495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467/attach?stderr=1&stdout=1&stream=1\n[/mnt/sda1/var/lib/docker|e1e82023] +job inspect(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467, container)\n[/mnt/sda1/var/lib/docker|e1e82023] -job inspect(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467, container) = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] +job attach(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467)\n[debug] container.go:458 attach: stdout: begin\n[debug] container.go:496 attach: stderr: begin\n[debug] container.go:542 attach: waiting for job 1/2\n[debug] api.go:933 Calling POST /containers/{name:.*}/start\n2014/02/12 01:25:48 POST /v1.9/containers/495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467/start\n[/mnt/sda1/var/lib/docker|e1e82023] +job start(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467)\n[/mnt/sda1/var/lib/docker|e1e82023] +job allocate_interface(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467)\n[/mnt/sda1/var/lib/docker|e1e82023] -job allocate_interface(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467) = OK (0)\n[error] container.go:1244 Error running container: Process could not be started\n[/mnt/sda1/var/lib/docker|e1e82023] +job release_interface(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467)\n[/mnt/sda1/var/lib/docker|e1e82023] -job release_interface(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467) = OK (0)\n[debug] container.go:475 attach: stdout: end\n[debug] container.go:513 attach: stderr: end\n[debug] container.go:547 attach: job 1 completed successfully\n[debug] container.go:542 attach: waiting for job 2/2\n[debug] container.go:547 attach: job 2 completed successfully\n[debug] container.go:549 attach: all jobs completed successfully\n[/mnt/sda1/var/lib/docker|e1e82023] -job attach(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467) = OK (0)\n[/mnt/sda1/var/lib/docker|e1e82023] +job release_interface(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467)\n[/mnt/sda1/var/lib/docker|e1e82023] -job release_interface(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467) = OK (0)\nCannot start container 495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467: Process could not be started[/mnt/sda1/var/lib/docker|e1e82023] -job start(495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467) = ERR (1)\n[error] api.go:959 Error: start: Cannot start container 495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467: Process could not be started\n[error] api.go:91 HTTP Error: statusCode=500 start: Cannot start container 495704a2cb1fef10165881a66bf133f99e79945ebf51ac0150ee1dfc37ab0467: Process could not be started\n[debug] api.go:933 Calling GET /images/json\n2014/02/12 01:29:05 GET /v1.9/images/json\n[/mnt/sda1/var/lib/docker|e1e82023] +job images()\n[/mnt/sda1/var/lib/docker|e1e82023] -job images() = OK (0)\n. @steeve I have tried the instructions above. I still get the intermittent failures while starting a container. \n. @steeve gave the coreos a try. I followed the instructions at: http://www.siliconfidential.com/articles/docker-coreos-osx/ to get things up and running. So far it seems to be firing container consistently. Keeping fingers crossed.\n. ",
    "advanderveer": "I had the exact same problem (also on a mac) but I suddenly got this to work today, to be honest i'm not sure what i did to fix it:\n- I didn't upgrade my virtual box\n- I did follow the five steps of @steeve\n- I did delete ~/.boot2docker (this is where the .iso .vmdk are kept on my mac)\n- I did remove it from the virtual box manager\n- I did upgrade boot2docker to 0.6.0 this morning\nI then followed the installation steps at http://docs.docker.io/en/latest/installation/mac/\nupdate: while resetting everything and trying the whole procedure again to see wether it was consistent I ran into the same problem again, so it just seemed to have worked randomly once.\n. I had the exact same problem (also on a mac) but I suddenly got this to work today, to be honest i'm not sure what i did to fix it:\n- I didn't upgrade my virtual box\n- I did follow the five steps of @steeve\n- I did delete ~/.boot2docker (this is where the .iso .vmdk are kept on my mac)\n- I did remove it from the virtual box manager\n- I did upgrade boot2docker to 0.6.0 this morning\nI then followed the installation steps at http://docs.docker.io/en/latest/installation/mac/\nupdate: while resetting everything and trying the whole procedure again to see wether it was consistent I ran into the same problem again, so it just seemed to have worked randomly once.\n. ",
    "sinm": "Same here. OSX 10.8.5.\ndocker@boot2docker:~$ ls /var/log\nautologin  wtmp\n. \u2026 when input/output freezes within docker run -i -t so does docker ps too. They unlock and show output in sync then.\n. Have touched VM parameters, have tried 3 latest VBox releases, etc. For now working with a daemon running under centos guest.\nOn Thursday, 27 February 2014 \u0433. at 4:12, Steeve Morin wrote:\n\nThanks for the logs. 32s on Core2Duo isn't impossible, considering we are using xz at maximum compression for the rootfs (else the iso would be ~40mb), which can result in a longer times unpack.\nAs for the lag itself, can you guys try to play with the VM parameters (stuff such as VT-x and al.). Don't be afraid to mess things up, you can just delete/init if you break something.\nWe need to get to the bottom of this but none of us in the team can reproduce :(\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/boot2docker/boot2docker/issues/148#issuecomment-36195063).\n. \n",
    "nuxlli": "I have the same thing happening here and across a few different configurations (see below). \nOSX 10.9.1, no SSD, 8GB RAM with:\n- docker 0.8.0, VirtualBox 4.3.6\n- docker 0.8.0, VirtualBox 4.3.8\n- docker 0.8.1, VirtualBox 4.3.6\n- docker 0.8.1, VirtualBox 4.3.8\nCould this have anything to do with lxc? I noticed that the error happens at lxc-start, which stops responding (I verified this by running a container as daemon) and can only be terminated with a SIGKILL. I have tried to update lxc to 1.0.0 but I wasn't able to remake the patch that allows for running lxc in ramdisk. \nAnother possible cause may be related to AUFS. One could verify this by running docker with device-mapper instead to discover if the latency error persists (although device-mapper is already slower than AUFS). However, in oder to do that, it is necessary to fiddle with Tiny Core Linux packets and unfortunately work contingencies haven't allowed me much time to work on that right now.\n. The problem continues even with updated kernel and different settings Docker (native driver and devicemapper).\nI was wondering if that may have no relation with the libs and programs on 32-bit when the Docker requires a 64-bit system?\n. Thank you @tatsushid \nThis bug nearly cost me my business and relationship (I'm serious).\nNow I can leave my fork of debian2docker and reuse the boot2docker.\n. @yshrsmz correct, thanks for reminding me.\n. @yshrsmz correct, thanks for reminding me.\n. @SvenDowideit may be right about calling reinit, reload came from my experience with Vagrant.\nI added a protection to prevent accidental removal of the \"/var/lib/docker\" in delete, you can force the removal with --disk.\nAbout the motivation: I have the impression that for the standard user not even make much sense, perhaps in the update, like you mentioned. But for evolution boot2docker (as I have done in recent days) this feature is missing.\n. Discussions about setting it through ENV aside, I made an update to the default values and added support to configure it through ENV :)\n. :+1: \n. Agree. I was unaware of these parameters, thanks for the tip ;)\n. you are correct, I made the change\n. ",
    "hbredin": "+1 same here: it lags (i.e. becomes unusable) after a short while (with latest docker, boot2docker and VirtualBox)\n. @steeve @klaemo  -- just updated docker (0.11.1), boot2docker (0.9) and virtualbox (4.3.10)\n$ docker version\nClient version: 0.11.1\nClient API version: 1.11\nGo version (client): go1.2.1\nGit commit (client): fb99f99\nServer version: 0.11.1\nServer API version: 1.11\nGit commit (server): fb99f99\nGo version (server): go1.2.1\nLast stable version: 0.11.1\nsame lag issue...\n. works great with @tatsushid 's ISO!\nI no longer notice any lag.\nI can finally use docker on my Mac!\nThanks @tatsushid \n. ",
    "aseppala": "I'm experiencing the same problem. Interactive bash in running containers and ssh to boot2docker vm is randomly hanging.\n- boot2docker: 0.8.0\n- docker: 0.10.0\n- vbox: 4.3.10 r93012\n. I'm experiencing the same problem. Interactive bash in running containers and ssh to boot2docker vm is randomly hanging.\n- boot2docker: 0.8.0\n- docker: 0.10.0\n- vbox: 4.3.10 r93012\n. +1 on option 3\n. +1 on option 3\n. ",
    "cbeams": "I've just logged a similar problem at dotcloud/docker#5581, though for me it's not just the annoying lag... I get \"unexpected EOF\" errors as well. Perhaps that issue belongs here (in boot2docker) after all. Happy to move it if so advised.\n. I've just logged a similar problem at dotcloud/docker#5581, though for me it's not just the annoying lag... I get \"unexpected EOF\" errors as well. Perhaps that issue belongs here (in boot2docker) after all. Happy to move it if so advised.\n. ",
    "regadas": "For me one other thing that improved was switching also the network adapter from virtio-net to 82540EM (didn't test with the others)\n. ",
    "AveryRegier": "This shouldn't be closed until the lag issues are solved in the basic installation without workarounds being necessary.\n. ",
    "hoverruan": "Only failed on v0.5.4, v0.5.3 is fine\n. Only failed on v0.5.4, v0.5.3 is fine\n. @SvenDowideit I tried downloaded v0.5.4 iso manually again, everything goes fine ...\nYes, tested under OSX 10.9\n. Also works fine without downloading iso manually.\n$ boot2docker init\n[2014-02-08 11:07:23] Creating VM boot2docker-vm\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 4ef9472c-e582-4f56-bf82-4eb31572f3fa\nSettings file: '/Users/hover/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n[2014-02-08 11:07:23] Setting VM settings\n[2014-02-08 11:07:23] Setting VM networking\n[2014-02-08 11:07:23] boot2docker.iso not found.\n[2014-02-08 11:07:25] Latest version is v0.5.4, downloading...\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   344  100   344    0     0    459      0 --:--:-- --:--:-- --:--:--   460\n100 27.0M  100 27.0M    0     0   462k      0  0:00:59  0:00:59 --:--:-- 1142k\n[2014-02-08 11:08:24] Done\n[2014-02-08 11:08:24] Setting VM disks\n[2014-02-08 11:08:24] Creating 40000 Meg hard drive...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nDisk image created. UUID: afbbae5f-9f4e-4e1e-b482-ad336e3aac47\nConverting from raw image file=\"format-flag.txt\" to file=\"format-flag.vmdk\"...\nCreating dynamic image with size 5242880 bytes (5MB)...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone hard disk created in format 'VMDK'. UUID: afbbae5f-9f4e-4e1e-b482-ad336e3aac47\n[2014-02-08 11:08:25] Done.\n[2014-02-08 11:08:25] You can now type boot2docker up and wait for the VM to start.\nhover at HoverMac in ~/vms/b2d04\n$ boot2docker up\n[2014-02-08 11:08:32] Starting boot2docker-vm...\n[2014-02-08 11:08:52] Started.\nhover at HoverMac in ~/vms/b2d04\n$ boot2docker ssh\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\ndocker@localhost's password:\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 0.5.4\ndocker@boot2docker:~$\n. ",
    "mik3y": "Problem still exists, at least on OS X 10.9 + boot2docker 0.6.0 (as installed via homebrew).\nSteps:\n$ brew install boot2docker docker\n[...]\n$ boot2docker init\n[2014-02-20 20:19:01] Creating VM boot2docker-vm\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 6a25a0e7-a307-466a-9daa-6ccf3aed96ff\nSettings file: '/Users/mikey/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n[2014-02-20 20:19:01] Setting VM settings\n[2014-02-20 20:19:01] Setting VM networking\n[2014-02-20 20:19:01] boot2docker.iso not found.\n[2014-02-20 20:19:01] Could not get lastest release name! Cannot download boot2docker.iso.\n[2014-02-20 20:19:01] Setting VM disks\n[2014-02-20 20:19:01] Creating 40000 Meg hard drive...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nDisk image created. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nConverting from raw image file=\"format-flag.txt\" to file=\"format-flag.vmdk\"...\nCreating dynamic image with size 5242880 bytes (5MB)...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone hard disk created in format 'VMDK'. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nVBoxManage: error: Could not find file for the medium '/Users/mikey/./boot2docker.iso' (VERR_FILE_NOT_FOUND)\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Medium, interface IMedium, callee nsISupports\nVBoxManage: error: Context: \"OpenMedium(Bstr(pszFilenameOrUuid).raw(), enmDevType, enmAccessMode, fForceNewUuidOnOpen, pMedium.asOutParam())\" at line 178 of file VBoxManageDisk.cpp\nVBoxManage: error: Invalid UUID or filename \"./boot2docker.iso\"\n[2014-02-20 20:19:02] Done.\n[2014-02-20 20:19:02] You can now type boot2docker up and wait for the VM to start.\n$ boot2docker ssh\n[command hangs]\nResolved problem by downloaded iso. At minimum, seems like the VBoxManage errors above should be fatal...?\n. Problem still exists, at least on OS X 10.9 + boot2docker 0.6.0 (as installed via homebrew).\nSteps:\n$ brew install boot2docker docker\n[...]\n$ boot2docker init\n[2014-02-20 20:19:01] Creating VM boot2docker-vm\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 6a25a0e7-a307-466a-9daa-6ccf3aed96ff\nSettings file: '/Users/mikey/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n[2014-02-20 20:19:01] Setting VM settings\n[2014-02-20 20:19:01] Setting VM networking\n[2014-02-20 20:19:01] boot2docker.iso not found.\n[2014-02-20 20:19:01] Could not get lastest release name! Cannot download boot2docker.iso.\n[2014-02-20 20:19:01] Setting VM disks\n[2014-02-20 20:19:01] Creating 40000 Meg hard drive...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nDisk image created. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nConverting from raw image file=\"format-flag.txt\" to file=\"format-flag.vmdk\"...\nCreating dynamic image with size 5242880 bytes (5MB)...\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone hard disk created in format 'VMDK'. UUID: 396e6782-f989-49d4-befb-1eb3f7744f24\nVBoxManage: error: Could not find file for the medium '/Users/mikey/./boot2docker.iso' (VERR_FILE_NOT_FOUND)\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Medium, interface IMedium, callee nsISupports\nVBoxManage: error: Context: \"OpenMedium(Bstr(pszFilenameOrUuid).raw(), enmDevType, enmAccessMode, fForceNewUuidOnOpen, pMedium.asOutParam())\" at line 178 of file VBoxManageDisk.cpp\nVBoxManage: error: Invalid UUID or filename \"./boot2docker.iso\"\n[2014-02-20 20:19:02] Done.\n[2014-02-20 20:19:02] You can now type boot2docker up and wait for the VM to start.\n$ boot2docker ssh\n[command hangs]\nResolved problem by downloaded iso. At minimum, seems like the VBoxManage errors above should be fatal...?\n. Looks like this line in my [purportedly v0.6.0] boot2docker is the problem:\n```\n$ LRN=$(curl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null|grep -o -m 1 -e \"\\\"tag_name\\\":[[:space:]]\\\"[a-z0-9.]\\\"\"|head -1|cut -d: -f2|tr -d ' \"')\n$ echo $LRN\n$\n```\nSeems it was fixed in 68b5931c0bb658e7b3b983c44ed97b00cf0d2b02\n. Looks like this line in my [purportedly v0.6.0] boot2docker is the problem:\n```\n$ LRN=$(curl 'https://api.github.com/repos/steeve/boot2docker/releases' 2>/dev/null|grep -o -m 1 -e \"\\\"tag_name\\\":[[:space:]]\\\"[a-z0-9.]\\\"\"|head -1|cut -d: -f2|tr -d ' \"')\n$ echo $LRN\n$\n```\nSeems it was fixed in 68b5931c0bb658e7b3b983c44ed97b00cf0d2b02\n. ",
    "hendysg": "Is there a work around for this? \nTIA\n. Thank you! I'll give it a try.\nOn Fri, Mar 7, 2014 at 3:50 PM, Graham Dumpleton\nnotifications@github.comwrote:\n\nThe workaround for it is to create a SSH tunnel into the VM and define\nDOCKER_HOST to connect via that.\nSo, in one window run:\nssh docker@localhost -p 2022 -L 14243:127.0.0.1:4243 -N\nand then:\nDOCKER_HOST=localhost:14243 docker attach $ID\nAnnoying to have to do it, but works.\nDon't understand why not being encountered by more people. Would be nice\nto see it fixed.\n\nReply to this email directly or view it on GitHubhttps://github.com/boot2docker/boot2docker/issues/150#issuecomment-37080553\n.\n. \n",
    "r1chardj0n3s": "+1 - am just trying out boot2docker and yeah, this is still a problem :(\n. ",
    "AnimalRepellentGranules": "I've grabbed the latest pre-release, v0.11.1-pre1, this after installing boot2docker and docker via homebrew.\nlocalhost export does not work.  ip export (192.168...) behaves as desired.\n. I've grabbed the latest pre-release, v0.11.1-pre1, this after installing boot2docker and docker via homebrew.\nlocalhost export does not work.  ip export (192.168...) behaves as desired.\n. ",
    "joallard": "Current version (cli v1.4.1), with DOCKER_HOST=\"tcp://192.168.59.103:2376\", still no response on docker attach. An earlier comment alludes that using IP export with 0.11.1 will work, but I still get the issue on 1.4.1.\nEdit: Meanwhile, #374 tells us we can use docker exec -it [container] bash as a workaround.\n. In fact, \n```\n$ boot2docker ssh\ndocker@boot2docker:~$ docker attach insane_mccarthy\nno response\n```\nIs this expected/the same issue?\n. ",
    "walf443": "sorry. It may be duplicated in some issues. So I'm close it.\n. ",
    "rimusz": "I do not think so the \"pause\" is needed at all, it is just a waste of computer resources, we should have as you suggested \"suspend\" which calls vbox's \"savestate\" then. \n. But anyway, at least having \"saved state\" as an extra to \"pause\" should be sufficient for everybody's use.\n. Hi guys,\nOff topic but ..\nAs a weekend project I have  made a small OS X GUI App for the boot2docker OS.\n\"boot2docker GUI for Mac OS X\" is a Mac Status bar App which allows to control the boot2docker shell script,\ne.g. to Start, pause, restart, stop boot2docker OS VM and etc, no needs to mess with the command line for that.\nIt also does a full boot2docker OS + docker OS X client install as per boot2docker and docker.io documentation.\nTake a look at https://github.com/rimusz/boot2docker-gui-osx\nIt might be useful for you guys as it is for me.\nThanks\n. Cool, let's have both.\nShall we rename save to suspend?\n. So we have to change as this:\ninit | setup) init;;\nstart | up) start;;\npause) pause;;\nsave | suspend) savestate;;\nstop | halt | down) stop;;\n......\n*) echo \"Usage $0 {init|start|up|pause|save|suspend|stop|restart|status|info|delete|ssh|download}\";\nI removed the suspend from the pause part as it cannot be in two places, right?\nLet me know if you guys are happy with the such change, I will prepare a new pull request.\n. I think to have less confusion we should have as Andreas suggested \nsleep - to freeze the VM\npause - save the VM state\nAs thinking more about such names it makes a good sense to use that way.\nJust my 1cent :)\n. Yes we should keep it, just in case it was paused from VirtualBox Manager by user\n. To pause/resume takes just about 1sec each. Mac resources are still used\nFor the process below Mac resources are not used:\nTo  save state - about 1.5 sec on my Mac with SSD drive\nTo start from saved state - about 9 secs.\nAlso saved state is good when you want continue where you left it and does not matter\neven if you rebooted your Mac.\nTo shutdown - about 5sec\nTo start as new - about 21 sec\n. ok, let me try the reboot with the paused one, to be sure to be sure\n. ok, let me try the reboot with the paused one, to be sure to be sure\n. Yep, it gets aborted state and the start afterwards is just a normal long start of VM\n. Yep, it gets aborted state and the start afterwards is just a normal long start of VM\n. Steeve,\nSure, will do it later.\n. Steeve,\nSure, will do it later.\n. We have already there-\nis_aborted() {\n    info | grep \"State:\\s+aborted\" > /dev/null\n}\nSo we need to add in status() part\n    elif is_aborted; then\n        log \"$VM_NAME is aborted.\"\n        exit 1\nI will update with it in the same PR as savestate.\n. We have already there-\nis_aborted() {\n    info | grep \"State:\\s+aborted\" > /dev/null\n}\nSo we need to add in status() part\n    elif is_aborted; then\n        log \"$VM_NAME is aborted.\"\n        exit 1\nI will update with it in the same PR as savestate.\n. I think we can close this one, as there is a new #168 PR\n. I think we can close this one, as there is a new #168 PR\n. @eugeneware I'm fully with you. The lack of the shared folder it is a big problem for me too. \nTake a look to my recommended workaround via sshfs at #188\n@schickling has prepared the documentation on that work around at PR #189 \n. No worries mate\n. Everything was very carefully tested\n. Everything was very carefully tested\n. What exactly is missing?\nI have pulled your master first, then branched it locally \n. What exactly is missing?\nI have pulled your master first, then branched it locally \n. I see you merged my other #152 PR, which I pulled back\n. I see you merged my other #152 PR, which I pulled back\n. Sure, I will\n. Sure, I will\n. Steeve,\nSorry I'm not getting about the boot2docker file version.\nI see only one changed file there.\nWill squash commits next time. :)\n. Steeve,\nSorry I'm not getting about the boot2docker file version.\nI see only one changed file there.\nWill squash commits next time. :)\n. Sorry, a question about these squashed commits.\nI have not done it before as we did not needed on bitbucket.\nGoogling returned too many different solutions.:)\nAny trick you can recommend for it?\n. Sorry, a question about these squashed commits.\nI have not done it before as we did not needed on bitbucket.\nGoogling returned too many different solutions.:)\nAny trick you can recommend for it?\n. Do I have to change all pick to squash?\nOr only the top has to be the pick one?\n. Thanks\nbut jesus it was the longest taking pull request in my live. :)\n. still wrong? \n. Sorry, must be tired.\nI have to learn these squash things.\n. ok, thanks\nBut I did apply the patch to the clean pull from latest master. :)\n. Right, I did not deleted it.\n. I think we should show user how to install without brew as well.\nAs I had problems a few times  with the brew itself.\nSo ended using curl based installs.\nAnd it is one of my reasons I built  boot2docker GUI for OS X, which uses simple shell scrips- to install, update and manage boot2docker and docker.\nMaybe later one will include brew based install there too.\n. yep, we have to make more clear readme doc\n. Readme looks nice now, but we should have links from there to FAQ and BUILD docs.\n. check your grep version, I had problems with the gnu grep. with the OSX native one boot2docker works just fine \n. right, you have the correct one.\nAnd boot2docker depends on grep.\nDo you have the latest boot2docker version?\n. It should, as yesterday night there was a new version released, which checks for statuses more correctly.\n. We have no versions yet for the boot2docker script, which would be very nice to have  as @riobard is suggesting.\nBut \"boot2docker version\" should show as well the boot2docker OS (ISO) version too.\nAs these two guys are two separate things.\nPlus boot2docker script receives updates more often too, so it needs versioning.:)\nSo for example we should have an output something like this:\nScript version: 0.1.1\nOS version: 0.5.4\n. Maybe to store in ./boot2docker/config file as:\nBOOT2DOCKER_ISO_VERSION=0.5.4\nIt can be updated with \"download_latest()\" which checks for the lasted release name and downloads the ISO file.\n. Yes, the timeframe for the Go rewrite would be nice to know. :)\nAs I was thinking over this weekend to polish/tidy up my boot2docker GUI for Mac.\nSo I'm not sure how much I have to change it again when we have the GO version.\nRegarding the naming I think script name should stay as boot2docker, but for the ISO/OS it should be called \"boot2docker OS\". \nI'm already calling that way in my GUI for Mac, makes easier to know which one is which one.\n. very good :+1: \n. @schickling for the simple folder sharing for now you can use:\n```\non Mac:\nInstall  osxfuse and sshfs from http://osxfuse.github.io\n\u2014\u2014\u2014\non boot2docker:\nsudo mkdir /mnt/sda1/share\nsudo chown -R docker:docker /mnt/sda1/share\n\non Mac\ncreate a file /.boot2docker/b2d-passwd\nput there tcuser\nto mount\nsshfs docker@localhost:/mnt/sda1/share ~/b2d-share -oping_diskarb,volname=b2d-share -p 2022 -o reconnect -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o password_stdin < ~/.boot2docker/b2d-passwd\nto unmount\numount -f  ~/b2d-share\n```\nIt works very well for me, so I can wait for the nfs support.:-)\n. And for sure the workarounds should be mentioned in the README/docs.\nJust to save other guys time for looking for work arounds themselves.\nOr even having a link on the main page to it.\n. I can reproduce the same error if only it cannot connect to boot2docker, so my case if boot2docker is stopped I get that error.\nI was playing a lot with that sshfs automation so it always works for me.\nBut I did reboot my Mac after osxfuse/sshfs install.\nAlso does \"ssh docker@localhost\" work for you?\n. so update sshfs command like below, so your know_hosts file will be ignored\nsshfs docker@localhost:/mnt/sda1/share ~/b2d-share -oping_diskarb,volname=b2d-share -p 2022 -o reconnect -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o password_stdin < ~/.boot2docker/b2d-passwd\n. no problem\n. yes, you are correct, as docker os x client does not know about os x folders at all.\n. also you should use /mnt/sda1/share folder as a name, as then you can put different folders per container there.\n e.g in your case /mnt/sda1/share/myapp\n. try this sshfs docker@localhost:/mnt/sda1/share ~/b2d-share -oping_diskarb,volname=b2d-share -p 2022 -o reconnect -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o follow_symlinks -o password_stdin < ~/.boot2docker/b2d-passwd\nI added there -o follow_symlinks   \" follow symlinks on the server \"\n. It is following symlinks on the server side, you see sshfs is just the remote access to the boot2docker file system, so all sym links must be done there, but not on your mac.\nBelow is a good sshfs FAQ:\nhttp://sourceforge.net/apps/mediawiki/fuse/?title=SshfsFaq#Following_symlinks_on_the_server_side\n. I went this way as I do not have to install anything to boot2docker OS and I can use any latest stable ISO release.\nYou can install sshfs on to boot2docker OS to have the b2d mapping to your mac file system.\n. Guys,\nI gave a go for the boot2docker go version and I love it's speed how it works.\nSpecially the save on the go version works much quicker, 3 times quicker comparing to the bash version.\nSo from 18 sec down to 6 sec to suspend the VM. :+1: \nWell done @riobard \n. @riobard \nfmt.Printf(\"export DOCKER_HOST=tcp://localhost: %s\\n\\n\", B2D.DOCKER_PORT)\nremove the space between localhost: %s\\n\\n\" as it it shows the incorrect message:\nTo connect the docker client to the Docker daemon, please set:\nexport DOCKER_HOST=tcp://localhost: 4243\nexport fails if you try to copy/paste it.\n. @riobard no worries, I'm not pushing you to get fixed it straight away. :)\nBut going forward to GO based boot2docker it really makes sense as I can see it's advantages already. \n. Me too. Shell scripts for me are fine up to some complexity, afterwards e.g. Go lang is better.\nPlus very complex shell scripts are interpreted much slower comparing to the compiled code.\n. ",
    "cap10morgan": "I'm running it on Mac OS X 10.9.1 with the latest VirtualBox release. I'll post some sample time discrepancies when I'm near my computer again.\n. @steeve It is non-blocking now that https://github.com/steeve/boot2docker/pull/162 has been merged.\n. What if we kick it off as a background process instead? That way, if it contacts a server, it sets the clock. If it doesn't, it times out and exits.\nI'd be happy to test that w/ no Internet connection and confirm that it behaves itself.\n. Yeah, I agree that we should run it by default against pool.ntp.org and background it. Especially since configuring it seems to require setting up a persistent partition.\nWhat are the negative side effects of this? Because the clock drift has been pretty severe and unpredictable in my testing.\n. While ntpclient supports ongoing drift correction, I'm not sure it's doing that in the way we're using it currently. From the little reading up on it I did for my original PR, it looks like the command that now lives in /etc/rc.d/ntpclient is just a \"set it once\" command. Ongoing drift correction appears to involve gathering data for 20 minutes - 24 hours on how badly and in what direction your \"hardware\" clock drifts from the actual time and then putting that number into an ntpclient argument.\nI'm not sure how much we care one way or the other, as I have yet to have issues after ntpclient sets the clock initially.\n. @SvenDowideit Any idea what's causing it?\n. @SvenDowideit Any idea what's causing it?\n. ",
    "YungSang": "FYI: The next version of Vagrant will have TinyCoreLinux guest plugin and better Docker provisioner support.\nThis is off topic, but it might be another simple solution for nfs synced folder.\nI made a vagrant box for the proof.\nhttps://github.com/YungSang/boot2docker-vagrant-box/releases/tag/yungsang%2Fv0.6.1-dev.5\n. @aheissenberger Do you mean that you want to use multiple VMs (containers) at one time?\nIf so, you can setup another Vagrantfile in the other directory with other port forward mapping.\nOr you can setup multiple synced folders in one VM.\nI know that boot2docker is convenient just like boot2docker init boot2docker-vm2, but it is dangerous for me to use boot2docker delete without boot2docker-vm2 by mistake. :p\nboot2docker delete may be needed a confirmation prompt BTW.\n. @aheissenberger :+1: \n. I believe that you have to build a base from source instead of pulling steeve/boot2docker-base, because the current steeve/boot2docker-base was built before the base/Dockerfile was updated.\n. @aheissenberger I see. Thanks. :)\nIt should be closed? Or stay open for information?\n. @aheissenberger I see. Thanks. :)\nIt should be closed? Or stay open for information?\n. @riobard FYI: Gox looks good for cross compiling. It will parallelize builds for multiple platforms.\nhttps://github.com/mitchellh/gox\n. You're very welcome! :) Thanks for the great go porting. I love it.\n. Yes, we do. But I don't know NFS server is needed. At least I need NFS client for Vagrant.\n. @aheissenberger I agree with you totally. :)\nI will open another PR regarding bootlocal.sh.\n. Oh I didn't know that because I'm new to TCL.\nThis is a patch work for Vagrant, so I may need to patch Vagrant instead of boot2docker.\nAnyway I'm trying to use boot2docker with Vagrant and initialize some env for a provisioner using bootlocal.sh.\nBecause a provisioner was executed right after booting, some provisioning failed with async bootlocal.sh.\nTherefore, I made bootlocal.sh sync.\nIs there sync bootstrap that can be used locally?\n/var/lib/boot2docker/bootscript.sh is the one? @aheissenberger mentioned at #224 .\n. I googled \"tinycorelinux bootlocal.sh async\".\nNow I understand it. bootsync.sh is the one for sync.\nSorry to bother you.\n. It may need more memory to boot.\n. Hmm. I tried to boot boot2docker.iso 0.6.0 with default setting for other Linux on Parallels 8. It was successful.\n. It was 1GB memory. With 256MB memory, I got the same error on boot.\n. @ngocphamm No problem. :)\n. Oh... Closing.\n. ??\nWe don't need other releases except precise, do we?\n. I mean 'FROM: ubuntu' will download all ubuntu releases, but with 12.04 will download precise only.\n. Oh, I didn't consider it was a bug though. :)\n. Do you use the latest version of boot2docker script or Go version of boot2docker-cli?\nIt seems old, I guess.\nbrew one? You may need brew upgrade.\n. Hmm. The same panic?\nI use it on Mac OS 10.9.2 + vbox 4.3.8 without any problem.\nCould you try the latest master boot2docker from this repo?\nfrom README\n$ curl https://raw.github.com/boot2docker/boot2docker/master/boot2docker > boot2docker\n$ chmod +x boot2docker\n. The brew version or the latest master?\n. I saw the same error at https://github.com/mitchellh/boot2docker-vagrant-box/issues/25 .\nBut It's not a memory issue, because boot2docker configures 1GB as RAM.\nHmm. Sorry it seems I can not help you anymore.\n. @jmonster It might be the same as #255 .\n. @tianon Thanks. I'm looking forward to it.\n. @SvenDowideit How do you want us to update this? What is wrong?\n. Or just rebase?\n. @wolfs CONFIG_SUNRPC* are included as well.\nPlease see https://github.com/boot2docker/boot2docker/pull/349/files .\n. @SvenDowideit I didn't think that they asked me the questions. Sorry and thanks anyway.\n. Because I've just put them back to the same as before exactly, I'm not sure this config is the best.\nBut it works for me so far.\n. @Tthread @wolfs Please advise me.\n. @wolfs Thank you for the explanation.\nCurrently with this PR, NFS client in boot2docker works for me without the sunrpc modules.\nBut as you mentioned, it seems that the modules should be included, too.\n. @wolfs merged with your commit.\n. @wolfs I have a question.\nI'm not familiar with kernel config, but CONFIG_SUNRPC=y means the sunrpc in kernel, doesn't it?\nIs the sunrpc modules needed in this case, CONFIG_SUNRPC=y instead of CONFIG_SUNRPC=m?\n. CONFIG_NFS_V4_1=y seems good to go.\nAnd CONFIG_NFSD_TCP=y, too.\n. @wolfs I tried to use NFS server in boot2docker VM with this PR (including your commit), but I couldn't. Although NFS client is fine with this PR (with or without your commit).\nActually I don't use NFS server in the VM.\nHave you used boot2docker with this setting? Does it work on your side?\n. @Tthread If you mean you are trying to use NFS client in a container, you can try my custom boot2docker ISO which has NFS client at least.\n$ curl -LO https://github.com/YungSang/boot2docker-vagrant-box/releases/download/yungsang%2Fv0.9.1/boot2docker-virtualbox.box\n$ tar zxvf boot2docker-virtualbox.box boot2docker.iso\n$ ls -l\n-rw-r--r--   1 yungsang  staff  21985955 May 28 20:16 boot2docker-virtualbox.box\n-rw-r--r--   1 yungsang  staff  23068672 May 14 22:55 boot2docker.iso\n. It seems I had better close this for now.\n. @wolfs \nAt the beginning I thought that this was good, because it works for me, but I realized that I could not prove it in some case (e.g. NFS server).\nIf you think it is still good enough even though, please open a new PR.\nPS:\nContainer runtime environment depends on its host kernel, boot2docker is good for a simple application in a container, but not for all. Some Dockerfiles can not be built in it.\nYou might be interested in CoreOS for those cases.\n. CONFIG_NFSD=m is there. Do you want to set CONFIG_NFSD=y instead?\n. @wolfs Thank you for trying. I will wait for your reply about my version.\nCould you tell me how to confirm the server, so that I can test it on my side as well?\n@steeve What do you think about the sunrpc directory?\nhttps://github.com/boot2docker/boot2docker/commit/7517bba2efe44561c1ac4da6a0c55d78956a0959\n. @wolfs Thanks.\n\nFor me it would be more convenient if nfsd would be compiled into the kernel.\n\nI see. I will update my config.\n. I found something.\nhttp://mirror.srobarka.sk/pub/linux/tinycore/5.x/x86/tcz/nfs-utils.tcz.info\n\nfilesystems-uname -r.tcz is a dependency if you are using the nfs-server, and needs to be installed for server use.\n\nAnd there is no filesystems-3.14.1-tinycore64.tcz.\n. @tianon \nI tried it again with v1.1.2 and vagrant halt/up/reload and it seems good.\nA running container is restarted successfully after reboot.\n. I'm not sure. I've just put them back to the same as before exactly.\n. @wolfs @steeve \n. Even thought, I couldn't confirm NFS server working in the boot2docker.\n. ",
    "kalanbates": "@jdmarshall \nDo you have any procedure documented for working with the boot2docker-vm in this way?\n(or a resource list for someone to follow)\n. So how would I go about detaching my server from the hidden loopback?\nRe documentation: ...I wasn't really going off of the documentation for this task.  I'm generally familiar with the user guide, I guess.  \nI tried switching my boot2docker-vm to Bridged mode to try and get it its own IP but when I tried to Start b2d, it tried to start and crashed with no obvious error; switching it back to NAT allowed it to start but it has the interface issue.  \nWhy does the vm crash in bridged mode? If the vm could get its own IP, wouldn't that solve all of the binding issues to localhost?\n(I'm going to bed as soon as I post this. It's 1AM EST)\n. Right.  I know that it needs to be bound to the default gateway, but I posted my server above:\nShow me how to get it to stand up on 0.0.0.0.\n. (updated my original post with source)\nit says\nif __name__ == \"__main__\":\n   app.run()\n...will(/should) this work? (just ran across it on my interwebz machine)\nif__name__==\"__main\":\n  app.run(host='0.0.0.0')\n. Planning on trying it out when I get back to my devbox :)\n. I prefer a manual, ungraceful shutdown because of the commands I get to execute\ndocker@boot2docker~$: docker kill sad_wozniak  #<= I scream WWOOOOZZZ!!!! every time I do it\ndocker@boot2docker~$: docker kill sadomasochistic_liskov\nI'll give you just a moment longer to picture Barbara Liskov in a skin tight black jumpsuit with a cat o' nine tails.\nYou're welcome.\n. ",
    "jdmarshall": "@kalanbates \nShut down boot2docker\nOpen the VirtualBox dashboard\nEdit the Settings\nGo to Network\nEnable Adapter 3\nSet to Bridged Adapter\nSave, exit\nRestart boot2docker\nboot2docker ssh \nrun ifconfig and find the 3rd nic (eth2), write down the inet address\nNote:  This has security implications.  I'm only using this on an intranet for testing purposes.\n. @SvenDowideit Would this be a case where boot2docker should grab an IP address but run ipfw or another firewall to turn everything off, and then add an allow for every -P option?\n. ",
    "dominicphillips": "VBoxManage modifyvm boot2docker-vm --nic3 bridged\nVBoxManage modifyvm boot2docker-vm --bridgeadapter3 \"en0\" \n. VBoxManage modifyvm boot2docker-vm --nic3 bridged\nVBoxManage modifyvm boot2docker-vm --bridgeadapter3 \"en0\" \n. ",
    "k1xme": "@jdmarshall That works fine! Thank you!\n. Same problem here!  I was going to compile an C program that is mounted from my Mac(specifically, shared from my mac to the VM and then mounted to the dev container). \nNothing goes wrong at first, but after I put my mac into sleep and came back, the warnings showed up. I tried to use touch filename to update the timestamp of those files in the warnings, but it didn't work.\n. Have you tried to forward the time of the VM a little bit ahead of your host os?\n. ",
    "fyddaben": "@jdmarshall  it works for me .very thank u \n. i have the   problem too, is there any easy way to slove it ?? i want to use  it in my team\n. i have the   problem too, is there any easy way to slove it ?? i want to use  it in my team\n. @jordscream  u can try sshd \n. @jordscream  u can try sshd \n. @jordscream    u can install a sshd client on windows. and  this is the website\nsshfs -p 2023 -o allow_other work@$(docker-machine ip dev):/docker/path/  /widows/path\n2023 is my ssh open port. \nand   the speed should be   faster than vbox\n. @jordscream    u can install a sshd client on windows. and  this is the website\nsshfs -p 2023 -o allow_other work@$(docker-machine ip dev):/docker/path/  /widows/path\n2023 is my ssh open port. \nand   the speed should be   faster than vbox\n. i have the same problem.\n. i have the same problem.\n. ",
    "mrvicadai": "many thanks @jdmarshall \n. ",
    "dweinstein": "Has anyone using the approach of adding a bridged network adapter noticed a bit of instability when communicating to the host from another device on the network? I've often gotten \"Host is down\" errors like when trying to ping or access the services from a system other than the underlying physical host.\nI'm +1 for official bridged network support.\n. So I did get this working. I'm now able to chroot into an ARM root fs from within docker using a very slightly modified b2d kernel image\n~/git/dweinstein/dockerfile-qemu-arm-chroot/qemu-arm\n  % docker run --privileged -t -i --rm --volumes-from qemu-arm_data qemu-arm                                                                                                                                                                                           !10239\n[ root@33c5b8986d28:/chroot ]$ mount -o loop /data/images/sdb2-system.bin /chroot/\n[ root@33c5b8986d28:/chroot ]$ chroot . /bin/bash\nchroot: failed to run command '/bin/bash': No such file or directory\n[ root@33c5b8986d28:/chroot ]$ ls\n[ root@33c5b8986d28:/chroot ]$ cd ..\n[ root@33c5b8986d28:/ ]$ cd /chroot\n[ root@33c5b8986d28:/chroot ]$ chroot . /bin/bash                                                                                                                                                                                                                             \nroot@33c5b8986d28:/# uname -a\nLinux 33c5b8986d28 3.16.1-tinycore64 #1 SMP Sun Aug 24 07:00:58 UTC 2014 armv7l GNU/Linux\nroot@33c5b8986d28:/home/serpent# file test\ntest: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.16, not stripped\nroot@33c5b8986d28:/home/serpent# ./test\nhello!\nI wouldn't recommend this right now too much because it requires the use of --privileged to the child containers.\n. I compiled the option in. The other issue asked for a module. Do you have a preference on which?\n. @lalyos nice workaround. I think it's great that docker is moving to being more secure by default, but there are some legacy (mostly for testing) docker environments that benefit from this type of workaround.\n. @lalyos nice workaround. I think it's great that docker is moving to being more secure by default, but there are some legacy (mostly for testing) docker environments that benefit from this type of workaround.\n. @rtfpessoa I can confirm I hit a similar issue to you when building the iso on my mac. I followed the doc/build.md instructions and experienced very odd behaviors like not being able to finish creation or later ssh into the docker host.  I could on the other hand bring up the terminal window via virtualbox directly.\nThe error I saw while creating with the bad boot2docker.iso is:\n```\nError creating machine: Error in driver during machine creation: Maximum number of retries (5) exceeded\n```\nAfter building the iso, I was using docker-machine create -d virtualbox --virtualbox-boot2docker-url=file:///Users/user/git/dweinstein/boot2docker/boot2docker.iso foo to create my new docker host.\nand while building /when ssh'ing in it was not picking up the docker host ip/port correctly so it would fail. (you can easily confirm this using the -D flag passed to docker-machine -D ssh <new host> -vvv for extra logging power)\nthis is the type of error I would see once I finally managed to ssh into the docker host. (I managed to do this by figuring out what ip the host really was and port it was using for ssh then updating my config.json for the machine):\n``` sh\n-sh: id: Permission denied\ncat: can't open '/etc/sysconfig/tcuser': Permission denied\n-sh: .: line 3: can't open '/etc/init.d/tc-functions'\n-sh: .: line 3: can't open '/etc/init.d/tc-functions'\n@boot2docker:/home/docker$ debug2: client_check_window_change: changed\ndebug2: channel 0: request window-change confirm 0\n```\nI bet it has something to do with the rootfs being copied into the host without the proper permissions (mac vs linux). building the iso on a linux box worked fine, so I did that and moved the iso image over like this:\nsh\n\u00b1 ssh <linux-build-box> docker run --rm boot2docker-builder > boot2docker.iso\n. @rtfpessoa I can confirm I hit a similar issue to you when building the iso on my mac. I followed the doc/build.md instructions and experienced very odd behaviors like not being able to finish creation or later ssh into the docker host.  I could on the other hand bring up the terminal window via virtualbox directly.\nThe error I saw while creating with the bad boot2docker.iso is:\n```\nError creating machine: Error in driver during machine creation: Maximum number of retries (5) exceeded\n```\nAfter building the iso, I was using docker-machine create -d virtualbox --virtualbox-boot2docker-url=file:///Users/user/git/dweinstein/boot2docker/boot2docker.iso foo to create my new docker host.\nand while building /when ssh'ing in it was not picking up the docker host ip/port correctly so it would fail. (you can easily confirm this using the -D flag passed to docker-machine -D ssh <new host> -vvv for extra logging power)\nthis is the type of error I would see once I finally managed to ssh into the docker host. (I managed to do this by figuring out what ip the host really was and port it was using for ssh then updating my config.json for the machine):\n``` sh\n-sh: id: Permission denied\ncat: can't open '/etc/sysconfig/tcuser': Permission denied\n-sh: .: line 3: can't open '/etc/init.d/tc-functions'\n-sh: .: line 3: can't open '/etc/init.d/tc-functions'\n@boot2docker:/home/docker$ debug2: client_check_window_change: changed\ndebug2: channel 0: request window-change confirm 0\n```\nI bet it has something to do with the rootfs being copied into the host without the proper permissions (mac vs linux). building the iso on a linux box worked fine, so I did that and moved the iso image over like this:\nsh\n\u00b1 ssh <linux-build-box> docker run --rm boot2docker-builder > boot2docker.iso\n. @SvenDowideit I would suggest that the rootfs be copied over as a tarball which preserves proper permissions when extracted, or suggest people use linux to build the boot2docker iso in the docs, or insert a sane chown into the Dockerfile (maybe around here ) to set the permissions before building the iso. Unfortunately I blew away the \"corrupted\" boot2docker iso so I can't easily recreate the scenario atm.\n. @SvenDowideit I would suggest that the rootfs be copied over as a tarball which preserves proper permissions when extracted, or suggest people use linux to build the boot2docker iso in the docs, or insert a sane chown into the Dockerfile (maybe around here ) to set the permissions before building the iso. Unfortunately I blew away the \"corrupted\" boot2docker iso so I can't easily recreate the scenario atm.\n. @tianon just curious if my comments from earlier about building from a Mac might interest you. I suspect I ended up hijacking this thread from the OP. appreciate you taking a look and letting me know if I should open a new issue or not. \n. oops got a little trigger happy. I want to test this more before the merge since we're only on kernel 4.1.15. Closing for now.\n. oops got a little trigger happy. I want to test this more before the merge since we're only on kernel 4.1.15. Closing for now.\n. ..in progress..\nfrom a docker container, listing the remote apple device hooked up to another linux box:\n```\non the docker host (boot2docker vm)\ndocker@usbip:/lib/modules$ sudo modprobe usbip_core\ndocker@usbip:/lib/modules$ sudo modprobe vhci_hcd\nstarted an ubuntu docker container:\ndocker@usbip:/lib/modules$ docker run --privileged -v /dev/bus/usb:/dev/bus/usb -d -t -i --name ubuntu-usbip ubuntu /bin/bash\nroot@0585a670215a:~# apt-get update\nroot@0585a670215a:~# lsusb -v\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nDevice Descriptor:\n  bLength                18\n  bDescriptorType         1\n  bcdUSB               2.00\n  bDeviceClass            9 Hub\n  bDeviceSubClass         0 Unused\n  bDeviceProtocol         1 Single TT\n  bMaxPacketSize0        64\n  idVendor           0x1d6b Linux Foundation\n  idProduct          0x0002 2.0 root hub\n  bcdDevice            4.01\n  iManufacturer           3 Linux 4.1.15-boot2docker vhci_hcd\n  iProduct                2 USB/IP Virtual Host Controller\n  iSerial                 1 vhci_hcd\n  bNumConfigurations      1\n  Configuration Descriptor:\n    bLength                 9\n    bDescriptorType         2\n    wTotalLength           25\n    bNumInterfaces          1\n    bConfigurationValue     1\n    iConfiguration          0\n    bmAttributes         0xe0\n      Self Powered\n      Remote Wakeup\n    MaxPower                0mA\n    Interface Descriptor:\n      bLength                 9\n      bDescriptorType         4\n      bInterfaceNumber        0\n      bAlternateSetting       0\n      bNumEndpoints           1\n      bInterfaceClass         9 Hub\n      bInterfaceSubClass      0 Unused\n      bInterfaceProtocol      0 Full speed (or root) hub\n      iInterface              0\n      Endpoint Descriptor:\n        bLength                 7\n        bDescriptorType         5\n        bEndpointAddress     0x81  EP 1 IN\n        bmAttributes            3\n          Transfer Type            Interrupt\n          Synch Type               None\n...\n```\n... transfer a pre-built usbip from my archlinux box to the container via nc magic... the one you get when you apt-get install usbip is a bit old.\n``` sh\nroot@0585a670215a:~# ./usbip list -r 10.0.1.10\nExportable USB devices\n======================\n - 10.0.1.10\n      2-1.1: Apple, Inc. : iPhone5/5C/5S (05ac:12a8)\n           : /sys/devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1\n           : (Defined at Interface level) (00/00/00)\nroot@0585a670215a:~# ./usbip attach -r 10.0.1.10 -b 2-1.1\n8 ports available\nport 0 attached\nroot@0585a670215a:~# lsusb\nBus 001 Device 004: ID 05ac:12a8 Apple, Inc.\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```\nso I now have my iPhone on my archlinux box connected to my docker container running in vbox on my mac...\nlets install libimobildevice-utils so we can query the device id:\n``` sh\nroot@0585a670215a:~# libimobildevice-utils\nroot@0585a670215a:~# usbmuxd & # start usbmux\nroot@0585a670215a:~# idevice_id -l\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\ndetach device\nroot@0585a670215a:~# udevadm monitor &\nroot@0585a670215a:~# ./usbip detach -p 0\n8 ports available\nKERNEL[3418.915558] remove   /devices/platform/vhci_hcd/usb1/1-1/1-1:1.0 (usb)\nKERNEL[3418.916002] remove   /devices/platform/vhci_hcd/usb1/1-1 (usb)\nport 0 detached\n```\ntake a screenshot of device over usb/ip:\n```\nroot@0585a670215a:~# time idevicescreenshot\nScreenshot saved to screenshot-2016-01-17-05-47-43.tiff\nreal    0m20.393s\nuser    0m0.030s\nsys     0m0.020s\n```\n. ..in progress..\nfrom a docker container, listing the remote apple device hooked up to another linux box:\n```\non the docker host (boot2docker vm)\ndocker@usbip:/lib/modules$ sudo modprobe usbip_core\ndocker@usbip:/lib/modules$ sudo modprobe vhci_hcd\nstarted an ubuntu docker container:\ndocker@usbip:/lib/modules$ docker run --privileged -v /dev/bus/usb:/dev/bus/usb -d -t -i --name ubuntu-usbip ubuntu /bin/bash\nroot@0585a670215a:~# apt-get update\nroot@0585a670215a:~# lsusb -v\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nDevice Descriptor:\n  bLength                18\n  bDescriptorType         1\n  bcdUSB               2.00\n  bDeviceClass            9 Hub\n  bDeviceSubClass         0 Unused\n  bDeviceProtocol         1 Single TT\n  bMaxPacketSize0        64\n  idVendor           0x1d6b Linux Foundation\n  idProduct          0x0002 2.0 root hub\n  bcdDevice            4.01\n  iManufacturer           3 Linux 4.1.15-boot2docker vhci_hcd\n  iProduct                2 USB/IP Virtual Host Controller\n  iSerial                 1 vhci_hcd\n  bNumConfigurations      1\n  Configuration Descriptor:\n    bLength                 9\n    bDescriptorType         2\n    wTotalLength           25\n    bNumInterfaces          1\n    bConfigurationValue     1\n    iConfiguration          0\n    bmAttributes         0xe0\n      Self Powered\n      Remote Wakeup\n    MaxPower                0mA\n    Interface Descriptor:\n      bLength                 9\n      bDescriptorType         4\n      bInterfaceNumber        0\n      bAlternateSetting       0\n      bNumEndpoints           1\n      bInterfaceClass         9 Hub\n      bInterfaceSubClass      0 Unused\n      bInterfaceProtocol      0 Full speed (or root) hub\n      iInterface              0\n      Endpoint Descriptor:\n        bLength                 7\n        bDescriptorType         5\n        bEndpointAddress     0x81  EP 1 IN\n        bmAttributes            3\n          Transfer Type            Interrupt\n          Synch Type               None\n...\n```\n... transfer a pre-built usbip from my archlinux box to the container via nc magic... the one you get when you apt-get install usbip is a bit old.\n``` sh\nroot@0585a670215a:~# ./usbip list -r 10.0.1.10\nExportable USB devices\n======================\n - 10.0.1.10\n      2-1.1: Apple, Inc. : iPhone5/5C/5S (05ac:12a8)\n           : /sys/devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1\n           : (Defined at Interface level) (00/00/00)\nroot@0585a670215a:~# ./usbip attach -r 10.0.1.10 -b 2-1.1\n8 ports available\nport 0 attached\nroot@0585a670215a:~# lsusb\nBus 001 Device 004: ID 05ac:12a8 Apple, Inc.\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```\nso I now have my iPhone on my archlinux box connected to my docker container running in vbox on my mac...\nlets install libimobildevice-utils so we can query the device id:\n``` sh\nroot@0585a670215a:~# libimobildevice-utils\nroot@0585a670215a:~# usbmuxd & # start usbmux\nroot@0585a670215a:~# idevice_id -l\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\ndetach device\nroot@0585a670215a:~# udevadm monitor &\nroot@0585a670215a:~# ./usbip detach -p 0\n8 ports available\nKERNEL[3418.915558] remove   /devices/platform/vhci_hcd/usb1/1-1/1-1:1.0 (usb)\nKERNEL[3418.916002] remove   /devices/platform/vhci_hcd/usb1/1-1 (usb)\nport 0 detached\n```\ntake a screenshot of device over usb/ip:\n```\nroot@0585a670215a:~# time idevicescreenshot\nScreenshot saved to screenshot-2016-01-17-05-47-43.tiff\nreal    0m20.393s\nuser    0m0.030s\nsys     0m0.020s\n. about 1 MB bigger when I compare to the bootdocker.iso I got from docker toolbox, which surprised me a little tbh it was that much (31MB with new modules)\n. about 1 MB bigger when I compare to the bootdocker.iso I got from docker toolbox, which surprised me a little tbh it was that much (31MB with new modules)\n. sh\n\u00b1 wc -c ~/.docker/machine/machines/default/boot2docker.iso ~/.docker/machine/machines/usbip/boot2docker.iso\n 31457280 /Users/user/.docker/machine/machines/default/boot2docker.iso\n 32505856 /Users/user/.docker/machine/machines/usbip/boot2docker.iso\n. sh\n\u00b1 wc -c ~/.docker/machine/machines/default/boot2docker.iso ~/.docker/machine/machines/usbip/boot2docker.iso\n 31457280 /Users/user/.docker/machine/machines/default/boot2docker.iso\n 32505856 /Users/user/.docker/machine/machines/usbip/boot2docker.iso\n```\n. ",
    "nick-korsakov": "Yet another +1 for official bridged network support.\nMy case. I wish to use Macvlan to access containers via IP from remote hosts.\nMy current workaround:\n- create bridged adapter manually with promisc mode;\n- SSH to Docker host and set promisc mode on the bridged eth0 (ip link set eth0 promisc on).\nIt will be very handy to me to have this ability out of the box (install docker, push container and go).\n. Yet another +1 for official bridged network support.\nMy case. I wish to use Macvlan to access containers via IP from remote hosts.\nMy current workaround:\n- create bridged adapter manually with promisc mode;\n- SSH to Docker host and set promisc mode on the bridged eth0 (ip link set eth0 promisc on).\nIt will be very handy to me to have this ability out of the box (install docker, push container and go).\n. ",
    "arnaudbreton": "Same issue here.\n. ",
    "csabapalfi": "Oops. Sorry. \nI'm not even to first one to do this #151 \nClosing this one and can't wait for #93 to be merged!\nThanks!\n. ",
    "amattn": "@steeve I just checked...  My understanding is that boot2docker delete will call $VBM unregistervm --delete $VM_NAME\nAt that point, virtual box should \"know\" which is the correct vmdk file to remove.\nI just tried the following:\n```\n$(prepatched) boot2docker init\ncreated ~/.boot2docker/boot2docker.vmdk\ncreated ~/VirtualBox VMs/boot2docker-vm/...\n$(postpatched) VM_NAME=abc boot2docker init\ncreated ~/.boot2docker/abc.vmdk\ncreated ~/VirtualBox VMs/abc/...\n$(postpatched) boot2docker delete\ndeleted ~/.boot2docker/boot2docker.vmdk\ndeleted ~/VirtualBox VMs/boot2docker-vm/...\n$(postpatched) VM_NAME=abc boot2docker delete\ndeleted ~/.boot2docker/abc.vmdk\ndeleted ~/VirtualBox VMs/abc/...\n```\nIt seemed to do the right thing...\nI apologize if I am misunderstanding your comment\n. I am pretty sure this is a docker issue and not a b2d issue.  \nWhen I get this, I stop all containers.  Usually then I can delete the container I want.\n. Totally agree that it's not a best practice (esp for prod), but for certain dev environments, it's helpful.\n/mtn/sda1 works fine.  I can use that.\nThanks.\n. @steeve Thanks for the update.  \nThe original issue description still stands that if my Mac OS X laptop goes to sleep while the b2d VM is running, when the laptop wakes up, all the clocks are wrong in the VM and in the containers.\nI just poked around a bit and looking at the current version the ntpclient is in the VM, but there is no /etc/ntp.conf and no /var/lib/ntp... furthermore, looking at /mnt/sda1/var/lib/boot2docker/log/ntpclient.log shows this:\nrunning ntpclient -s -h pool.ntp.org in background\npool.ntp.org: Resolver internal error\na quick man tells me that -s means to set the clock just once and not keep running and check at intervals.\nIs this expected?  \nremoving -s means that ntpclient should ping the pool once every 600 seconds by default...\n. ",
    "imavroukakis": "How so? Does this not need to be set before the docker daemon is started so that it gets picked up? The only way I've managed to do this so far is to SSH into the instance and hack the docker startup script.\n. I read that and it's still not versatile enough I'm afraid. I move my laptop between environments. Some have proxies, others do not so the persistent partition here doesn't pay off. \n. I think this needs to be a two pronged approach\n1) Decide  in the Vagrantfile how we signal we are in a (non transparent) proxied network\n  Look for the presence of either HTTP_PROXY or HTTPS_PROXY \n2) Setup the proxy\nBundle the distribution with the vagrant-proxyconf plugin and include the following lines in the Vagrantfile\nif Vagrant.has_plugin?(\"vagrant-proxyconf\") && proxy_network?\n  config.proxy.http = ENV['HTTP_PROXY']\n  config.proxy.https = ENV['HTTPS_PROXY']\n  config.proxy.no_proxy = \"localhost,127.0.0.1\"\nend\nWhere proxy_network is a function def similar to this (apologies this is not valid Ruby but you get the picture)\n```\ndef proxy_network?\n  ENV['HTTP_PROXY'] || ENV['HTTPS_PROXY']\nend\n```\n. aah shame that would have been so much easier. cheers!\n. @aheissenberger that's why I am using the vagrant-proxyconf plugin. Also it's not modifying behaviour, it merely sets env vars and also manages yum/apt proxy configs.\n. ",
    "scott-abernethy": "What solution should we be using for this at present? \nI've tried \n(i) the adding \"export HTTP_PROXY=... etc\" to /var/lib/boot2docker/profile\n(ii) using the bootlocal.sh script to hack all .profile and .bashrc files\nNo dice.\n. ",
    "btrepp": "I have read the FAQ but it is unclear how I would add these proxy variables.\nI have tried\n```\n\ncat /var/lib/boot2docker/profile\nexport http_proxy=http://10.0.2.2:8080\n```\n\n```\n\ncat /var/lib/boot2docker/profile\nhttp_proxy=http://10.0.2.2:8080\n```\n\n```\n\ncat /var/lib/boot2docker/bootlocal.sh\n\n!/bin/sh\nexport http_proxy=http://10.0.2.2:8080\n```\n```\n\ncat /var/lib/boot2docker/bootlocal.sh\n\n!/bin/sh\necho \"export http_proxy=http://10.0.2.2:8080\" >> /home/docker/.ashrc\n```\nRebooting the machine via sudo reboot\nand these environment variables are never set in the shell. Nor is my ashrc modified. Does bootlocal etc only function on boot2docker up?.\n. I have read the FAQ but it is unclear how I would add these proxy variables.\nI have tried\n```\n\ncat /var/lib/boot2docker/profile\nexport http_proxy=http://10.0.2.2:8080\n```\n\n```\n\ncat /var/lib/boot2docker/profile\nhttp_proxy=http://10.0.2.2:8080\n```\n\n```\n\ncat /var/lib/boot2docker/bootlocal.sh\n\n!/bin/sh\nexport http_proxy=http://10.0.2.2:8080\n```\n```\n\ncat /var/lib/boot2docker/bootlocal.sh\n\n!/bin/sh\necho \"export http_proxy=http://10.0.2.2:8080\" >> /home/docker/.ashrc\n```\nRebooting the machine via sudo reboot\nand these environment variables are never set in the shell. Nor is my ashrc modified. Does bootlocal etc only function on boot2docker up?.\n. Ah-ha! Simple error on my part. bootlocal.sh wasn't executable!.\nI suspected that about the profile file too, but wasn't sure (hence I tried dumping everything everywhere).\nSo for anyone who stumbles upon this in the future, you will need lines like\n```\n\ncat /var/lib/boot2docker/bootlocal.sh\n\n!/bin/sh\necho \"export http_proxy=http://10.0.2.2:8080\" >> /home/docker/.ashrc\n```\nwhich gives your terminal proxy access (if you need it).\nand \ncat /var/lib/boot2docker/profile\nexport HTTP_PROXY=http://10.0.2.2:8080\nwhich should give docker the ability to see the proxy too. For certificates install them as part of bootlocal.sh\n. @kfish I also had to append the cert to /etc/ssl/certs/ca-certificates.crt\nThough boot2docker uses tce, so I'm not sure if this will disappear if the machine is rebooted?.\nI'm using docker as a provider in vagrant.\n. @kfish I also had to append the cert to /etc/ssl/certs/ca-certificates.crt\nThough boot2docker uses tce, so I'm not sure if this will disappear if the machine is rebooted?.\nI'm using docker as a provider in vagrant.\n. How does boot2docker know what certificates to use?. I thought this was about specifying  custom certificates?.\nIs there a folder/place we need to put them to have boot2docker cli's grab them and place them in the vm?\n. I'm in the same situation, it basically involved manually putting the certificates in boot2dockers VM, not exactly elegant.\nRunninga VPN/ssh is most likely difficult in corporate land too, machines can only get to the internet through the proxies (that MITM ssl). So you can't exactly punch out via port 22 :S\n. I'm in the same situation, it basically involved manually putting the certificates in boot2dockers VM, not exactly elegant.\nRunninga VPN/ssh is most likely difficult in corporate land too, machines can only get to the internet through the proxies (that MITM ssl). So you can't exactly punch out via port 22 :S\n. Even still, it has to go through a corporate proxy. So you are either muxing ssh over http (this sounds horrible!), or you have a special ssh server that works with CONNECT https calls.\nThat technique may also draw the ire of the enterprisey security guys that are trying to MITM you anyway. My usually approach is make my apps use the corporate certs, If they want to inspect a whole bunch of binary data they are free to do it :)\nI imagine there is a way to get bootlocal to install the certs, but atm I'm personally having 0 success with having bootlocal.sh even run.\n. Even still, it has to go through a corporate proxy. So you are either muxing ssh over http (this sounds horrible!), or you have a special ssh server that works with CONNECT https calls.\nThat technique may also draw the ire of the enterprisey security guys that are trying to MITM you anyway. My usually approach is make my apps use the corporate certs, If they want to inspect a whole bunch of binary data they are free to do it :)\nI imagine there is a way to get bootlocal to install the certs, but atm I'm personally having 0 success with having bootlocal.sh even run.\n. I have managed to get it working with bootlocal.sh :) This is obviously dependant on my setup here (Im using fiddler2 to operate as an open proxy for local apps on my machine, and it is resigning the connection again). So if you are on windows and have a corporate proxy this should help you\n```\n\ncat /var/lib/boot2docker/bootlocal.sh\n\n!/bin/sh\ncurl -s --resolve localhost:8888:10.0.2.2 http://localhost:8888/FiddlerRoot.cer | openssl x509 -inform der -outform pem -out /etc/ssl/certs/fiddler.pem\nln -s /etc/ssl/certs/fiddler.pem /etc/ssl/certs/openssl x509 -hash -in /etc/ssl/certs/fiddler.pem -noout 2>/dev/null.0\necho /etc/ssl/certs/fiddler.pem >> /etc/ssl/certs/ca-certificates.crt\necho \"export http_proxy=http://10.0.2.2:8888\" >> /home/docker/.ashrc\necho \"export https_proxy=http://10.0.2.2:8888\" >> /home/docker/.ashrc\necho \"export HTTP_PROXY=http://10.0.2.2:8888\" >> /home/docker/.ashrc\necho \"export HTTPS_PROXY=http://10.0.2.2:8888\" >> /home/docker/.ashrc\n```\nIt basically grabs the certificate from fiddler, runs it through openssl to be in openssl format and puts it where it needs to be. Then I set the proxy as needed.\nI'm not 100% sure if the docker daemon would need to be restarted, and obviously it needs the profile persistance file setup to use the proxy too, but this should be workable with updates etc going forward.\n. ",
    "srobertson": "+1\n. ",
    "blalor": "yep, here too.\n. Another +1 for fixing this issue in the boot2docker ISO.\n. Also having this problem; @andyshinn's solution works for me, temporary though it may be.\n. ",
    "cameron": "me seven. also noticing that --rm does not remove the container.\nEdit: woops! I shouldn't have posted here\u2014I'm using a CoreOS image. \n. ",
    "mdub": "I'm seeing the same problem, with boot2docker 0.7.0 (docker 0.9.0 server), docker 0.9.0 client.\n. ",
    "ccollicutt": "Me too.\n``` bash\ncurtis$ docker run -i -t busybox echo \"hi\"\nhi\nhit enter key\n[error] client.go:2264 Couldn't send EOF: use of closed network connection\n```\nbash\ncurtis$ brew list --versions | grep docker\nboot2docker 0.7.0\ndocker 0.9.0\n. ",
    "hbokh": "Cannot reproduce on these versions - a \"brew update & upgrade\" might help:  \nboot2docker 0.7.1\ndocker 0.9.1\n. ",
    "jamshid": "Same. OpenVPN client installed. boot2docker 1.1.2 (via brew), did \"boot2docker init\" after 1.0.\nSeems to happen often when I try to boot2docker ssh sudo /etc/init.d/docker restart. Btw I usually have to sudo killall docker, a restart alone doesn't really stop the process. Why am I restarting docker? To pick up a new DNS server in the vm's /etc/resolv.conf.\nAnyway, although docker is running again (this works: \"boot2docker ssh docker ps\"), docker does not appear to be listening on DOCKER_HOST=tcp://192.168.59.103:2375. \nThen I just \"boot2docker restart\" to fix it all. Anyone know how to service network restart in TinyLinux?\n. Also seeing this with latest boot2docker on osx. Running containers are not automatically restarted after either \"boot2docker restart\" or \"boot2docker ssh sudo /usr/local/etc/init.d/docker restart\".\n. Maybe related, but I also see the docs at https://docs.docker.com/installation/mac/ say that you can run:\n    $ docker run --rm -i -t -p 80:80 nginx\nthen access your server at \"http://[the boot2docker ip]:80/\", but that doesn't work for me. \nI installed boot2docker using \"brew\" and use VirtualBox 4.3.12, not the boot2docker package installer, in case that matter. \nIf I let docker pick the port (\"-p 80\"), then I can access the server at:\nhttp://[the boot2docker ip]:[the 49XXX port from \"docker port\"]/\nI think I need to tell virtualbox to forward port 80, but I want to make sure it does it on the boot2docker ip, not my machine's \"real\" ip.\n    VBoxManage modifyvm \"boot2docker-vm\" --natpf1 \"tcp-port80,tcp,,80,,80\"\n. Maybe related, but I also see the docs at https://docs.docker.com/installation/mac/ say that you can run:\n    $ docker run --rm -i -t -p 80:80 nginx\nthen access your server at \"http://[the boot2docker ip]:80/\", but that doesn't work for me. \nI installed boot2docker using \"brew\" and use VirtualBox 4.3.12, not the boot2docker package installer, in case that matter. \nIf I let docker pick the port (\"-p 80\"), then I can access the server at:\nhttp://[the boot2docker ip]:[the 49XXX port from \"docker port\"]/\nI think I need to tell virtualbox to forward port 80, but I want to make sure it does it on the boot2docker ip, not my machine's \"real\" ip.\n    VBoxManage modifyvm \"boot2docker-vm\" --natpf1 \"tcp-port80,tcp,,80,,80\"\n. What is the fdisk command to resize /dev/sda without losing data? It's not \"delete partitions sda1 and sda2 (swap), then create a new partition\". That causes \"docker-machine restart\" to hang and fail at \"Waiting for an IP...\".. I guess boot2docker is not getting updated anyway, this will be moved to:\nhttps://github.com/docker/boot2docker\n?\nI also wish this had first-class support in docker. Sometimes I need to run (especially debug / develop) an application on my local machine and it needs to communicate with each container directly, as if it were inside the docker network. \nI haven't used the new docker networking feature (https://docs.docker.com/engine/userguide/networking/dockernetworks/), does that support the route command mentioned in this issue?\n. I guess boot2docker is not getting updated anyway, this will be moved to:\nhttps://github.com/docker/boot2docker\n?\nI also wish this had first-class support in docker. Sometimes I need to run (especially debug / develop) an application on my local machine and it needs to communicate with each container directly, as if it were inside the docker network. \nI haven't used the new docker networking feature (https://docs.docker.com/engine/userguide/networking/dockernetworks/), does that support the route command mentioned in this issue?\n. I also was getting VBoxManage: error: Shared folder named 'Users' already exists on boot2docker start -v, and VirtualBoxStartup.sh restart did not help (see below).\nReinstalling virtualbox fixed it without having to recreate my boot2docker image. I think the real problem was that I somehow lost my \"Host only\" network adapter. \nOther tips: if you're messing with forwarding ports, make sure the virtual box gui Network tab is not open -- that seems to prevent vboxmange changes. Also, check your port forwarding and make sure there is no bogus rule forwarding port 0 -- I think that was causing strange problems.\n$  sudo /Library/Application\\ Support/VirtualBox/LaunchDaemons/VirtualBoxStartup.sh restart\nPassword:\nUnloading VBoxNetFlt.kext\n(kernel) Kext org.virtualbox.kext.VBoxNetFlt did not stop (return code 0x5).\n(kernel) Kext org.virtualbox.kext.VBoxNetFlt can't unload - module stop returned 0xdc008017.\nFailed to unload org.virtualbox.kext.VBoxNetFlt - (libkern/kext) kext (kmod) start/stop routine failed.\nError: Failed to unload VBoxNetFlt.kext\nUnloading VBoxDrv.kext\n(kernel) Can't remove kext org.virtualbox.kext.VBoxDrv; services failed to terminate - 0xdc008018.\nFailed to unload org.virtualbox.kext.VBoxDrv - (libkern/kext) kext is in use or retained (cannot unload).\nError: Failed to unload VBoxDrv.kext\nFatal error: VirtualBox\n. Also struggling with boot2docker's fdisk, I guess it's from busybox and old? Do newer versions really support GPT? I thought you have to use parted ( docker@boot2docker:~$ tce then Search for \"parted\" and Install it).\nWhen I do dd if=~/Downloads/boot2docker.iso of=/dev/disk3 bs=1M that creates a MBR drive (not GPT) but if I add a partition using fdisk I run into issues like http://www.tldp.org/FAQ/Linux-FAQ/error-messages.html#fdisk-says-partition.\nWould be great if someone posted exact commands for making a self-contained docker bootable drive out of a large usb disk. I'm trying to make use of spare machines whose drives I don't necessarily want to mess with, but I'd like to use the machines as docker servers running off a big fast SSD.\nI think such a docker boot drive needs to be GPT (so it handles large drives and boots on any PC/Linux hardware). It needs a boot2docker.iso(?) boot partition, a \"boot2docker-data\" ext4 partition, and probably a separate EXFAT or ext4 partition to store application data e.g. for sharing to containers as a volume.\nWondering if boot2docker is going away in favor of \"docker machine\" with maybe a baremetal driver https://github.com/docker/machine/issues/291? Sorry I guess this should be a post on groups.\n. And it's not fixed in boot2docker 1.6.2.\nFYI you can install libncurses with this, though you'll have to redo it whenever you restart boot2docker:\n$ docker-machine ssh\n...\ndocker@dev:~$ top\ntop: error while loading shared libraries: libncurses.so.5: cannot open shared object file: No such file or directory\ndocker@dev:~$ tce-load -wi ncurses\nDownloading: ncurses-common.tcz\n...\ndocker@dev:~$ top\nterminals database is inaccessible\ndocker@dev:~$ TERM=vt100 top -c  # works and displays full command line\n. Thanks! In case anyone else wants a boot2docker.iso image that downgrades aufs to avoid blocking bug docker/docker#18180 but wants to keep using docker 1.9.1:\ngit clone https://github.com/boot2docker/boot2docker.git\ncd boot2docker\ngit checkout v1.9.1\n<edit Dockerfile, changing AUFS_COMMIT to older e8b6a1538ae1aa8e5ad1d7c6d843dbf835b6af2a>\ndocker build -t boot2docker-fix .\ndocker-machine stop dev\ndocker run boot2docker-fix > ~/.docker/machine/machines/dev/boot2docker.iso\ndocker-machine start dev\nHopefully nothing in docker 1.9.1 depends on the newer aufs.\n. @tianon, just one user's opinion but this seems like a serious enough issue to warrant a new release of boot2docker (and toolbox) that downgrades the kernel or aufs while preserving docker 1.9.1.\n. @stremlenye It did take a long time and I got at least one failure from an apt-get, so I had to rerun docker build .. I attached the iso I'm using to https://gist.github.com/jamshid/05005c1ab90bc51a8715, if you're trusting.\n. CORRECTION that aufs revert fixes the defunct java problem in one environment (server booted off usb boot2docker.iso), but it does not fix the problem in my local virtual box on OSX. Sorry for the confusion, I had been trying a couple of different things. I'm going to go back to boot2docker 1.9.0 with only /usr/local/bin/docker replaced with 1.9.1 at startup.\n. @stremlenye Yes, I didn't see the defunct java problem with 1.9.0, and I don't see it on boot2docker 1.9.0 with /usr/local/bin/docker upgraded to 1.9.1.\n. ",
    "davesag": "I'm getting the same\nBoot2Docker Client version: v1.1.2 (Git commit: 429947b)\nrunning under DVM. dvm: 0.9.0\n. ",
    "paulmaunders": "Great, thanks!\n. ",
    "timsuchanek": "+1\n. ",
    "harleyk": "For the latter part, I run boot2docker ssh -L 8000:localhost:8000 to create the ssh tunnel needed to connect to the docker port open.\n. ",
    "juztin": "This thread saved me a lot of time, so here's a pre-thanks for everyone =)\nI created a fork @ https://github.com/juztin/boot2docker with the below:\n- added the sshfs libs to the .iso (nothing else, just didn't like doing this on every restart)\n- ssh keys are setup on boot2docker start\n- updated the boot2docker script to pull this iso and adds mount and unmount commands\n- added additional instructions in README\nThe mount and unmount commands use sshfs, with the ssh keys, to mount your home directory in the same place within the boot2docker vm (easy -v pwd:blah)\nI haven't tested this on Linux (I use Ubuntu with no VM, just needed this to work a bit easier on OS X for co-workers)\nHopefully someone finds it useful =)\n. Doh! I think I found all of the other issues around sharing, except that one =)\nThanks @steeve.\nThis works much better for me due to sleep, sshfs timeouts, switching networks, VPN, etc.\n. ",
    "benschumacher": "@eugeneware Your solution with sshfs in the TinyCore image worked for my needs. Thanks!\n\nAnd for mapping into containers you should probably use uid=0,gid=0.\nSo the final steps would be:\n$ tce-load -wi sshfs-fuse\n$ mkdir /mnt/remote\n$ sudo sshfs -o uid=0 -o gid=0 me@192.168.59.1:/Users/me/tmp /mnt/remote/\n$ docker run -v /mnt/remote:/path/in/container ubuntu bash\n. \n",
    "yshrsmz": "IMHO you should add reload in line 311?\n. ",
    "sindhus": "is this still reproducible? I am able to ssh into boot2docker without password. Running boot2docker 1.3.0\n. @garthk Thank you for that solution!! that totally worked :)\n. +1\n. Is this available under the installer pkg right now? or should compile boot2docker from source on OSX to get uninstaller? I installed 1.3 version and I could not find uninstaller. \nWhenever the uninstaller commits do find their way into the OSX installer release, I'd like to put a request inclusion in docker docs http://docs.docker.com/installation/mac/\n. ",
    "riobard": "Ha! I didn't know that ssh can be supported this easily! :D \nDoes it work on Windows too? That's my primary holdback. Do they have command line version of a SSH client? I often see people use PuTTY on Windows. \n. Hi! Finally found the one discussing the tar file :-D\nIf you have the format of the tar file please let me know so I can support it in the Go port. \n. Yes, it works on OS X\u2014that's my dev environment :) As for Windows\u2026 I don't think the shell script is suitable for that platform. We might have to reply on the Go port for cross-platform usage. \nDo you mean you'll move the shell script into its own repo? What about the Go port? Just let me know so I know where to send future pull requests :)\n. @SvenDowideit I took the liberty to split the Go port into its own repo with the relevant commits. Please let me know if you want the repo to be part of the boot2docker organization. \nThe repo is here https://github.com/riobard/go-boot2docker\n. Is this a question for me? \n. Haha :) \nI didn't use a Docker container to build the Go code, as it depends only on Go standard library. You can cross compile it on any machine with the necessary Go tool chain. Please see here for the new repo https://github.com/riobard/go-boot2docker\n. Oops, I totally forgot about the multiple partition thing\u2026 :| \nSince we have to deal with the cross-parition moving anyway, I'm gonna try something simpler. Give me a few minutes! :P\n. Voila! :D https://github.com/riobard/go-boot2docker/commit/0d2a2eef9857c033a28dbe075ef36873f80c6731\n. ",
    "bflad": "This is awesome. Thanks everyone.\n. :+1: \n. ",
    "bradfitz": "I've put up our Go style guide here: https://code.google.com/p/go-wiki/wiki/Style\n. ",
    "kennu": "Ok nice, I will do something similar. With regards to closing this issue, perhaps the README could be made slightly more clear on the fact that the boot2docker-data volume is already automatically created? For a newbie like me, it reads like I should create it myself, in addition to the default stuff.\n. It seems like a question of which is the more common use case:\n- user moving their data disk from VirtualBox to some other VM platform\n- user just wanting to enlarge the data disk\nI think quite many users might want to do the latter, so using .vdi would make it easier for them. Anybody can still convert the .vdi to .vmdk if they want to move the data.\nAccording to this question on superuser, .vmdk also supports splitting the data to 2GB files which .vdi does not. But I think it's also a rarer use case and can still be done by converting from .vdi to .vmdk if really needed.\n. If you run a database or a samba server in your Docker containers, it's not \"just redownload all your images\". You have to preserve the data somehow. That's why resizing the disk is necessary.\nMounting a data disk from OS X would be nice, but likely quite problematic for said use case of running databases, which might do some quite elaborate things with the filesystem.\n. All databases do locking, which might go badly through a VirtualBox share. MongoDB also does huge mmap()s on the data files. If they actually all work just fine, I'm happy to be proven wrong about this. :-)\n. ",
    "prisoner": "I think @kennu is right. the README really puzzles me.\n. ",
    "cpswan": "I just tried this out, and although I'm seeing the hv_xyz drivers in lsmod I'm not getting an eth0 interface.\n. ",
    "Slach": "Hello guys, i see cgroupfs-mount added on boot2docker, it's so strange, but latest version docker-toolbox which use boot2docker failed with following errors\ndocker run --rm -it ubuntu:18.04 bash\nUnable to find image 'ubuntu:18.04' locally\n18.04: Pulling from library/ubuntu\nStatus: Downloaded newer image for ubuntu:18.04\nC:\\Portable\\Docker Toolbox\\docker.exe: Error response from daemon: cgroups: cannot find cgroup mount destination: unknown.\nsome workaround described here\nhttps://github.com/moby/moby/issues/36016#issuecomment-382737224\ncould you explain me how docker-toolbox lost compatibility with cgroup-mount contained on boot2docker ?. ",
    "simonvanderveldt": "@tianon actually it does ;)\n\nThis is using 1.12.5\nSeems to be caused by the ipv6 module not being loaded at the moment sysctl is called.\nWhen logging in to the TTY after startup issuing /etc/rc.d/sysctl (or sysctl -p /etc/sysctl.conf directly) does work, because at that time the ipv6 module is loaded, through the following dependency chain:\nbr_netfilter -> bridge -> ipv6\nbr_netfilter actually gets loaded because of the default bridge network included with docker, through libnetwork.\nI guess we have the following options:\n- Disable IPv6, though that's probably not an option because there will probably be people who use boot2docker with IPv6\n- Make IPv6 a kernel builtin instead of a module\n- Add an explicit modprobe ipv6 in bootsync.sh before /etc/rc.d/sysctl gets called. Example here\n- Since forwarding is a global option (see the kernel's docs under conf/all/forwarding) changing it will always apply to all interfaces. So we can set it later by calling /etc/rc.d/sysctl after the docker daemon has started/the bridge network has been created and it's setting will still apply to all interfaces.\nThe last one seems the most logical one to me, unless there's a specific reason /etc/rc.d/sysctl gets called as the first item in bootsync.sh/before starting the docker daemon.\nThis is the result from a quick test with modprobe ipv6 added to the top of bootsync.sh, works as it should :)\n\n. @waltervdb The boot2docker install offers to install MSys Git, this contains bash.\n@SvenDowideit Wouldn't it make more sense to use .bat files instead of bash scripts? See also this question @ the Docker forums https://forums.docker.com/t/docker-on-windows-its-overkill-to-require-msys-git/1119\n. @tianon and @SvenDowideit loopback is configured as a module, is it actually loaded?\nSince there's no change to the kernel config itself (CONFIG_BLK_DEV_LOOP=m) regarding loopback in this PR it probably has some other cause.\n. Allright, thanks for the input!\nI've rebased on master and incorporated the switch to ! as separator for sed.\n. @SvenDowideit Running the build now, will commit once I know for sure it's OK.\n. @SvenDowideit that were quiet a lot of commits in the rebase :P, just pushed a final commit to remove the 32bit flag for the compilation of the KVP daemon.\nThe Dockerfile looks good to me, build succeeds and works as well.\nPing @tianon I've rebased again, as discussed in #889 \n. Sorry for the lack of response, bit busy here :)\nAs far as I can remember the Makefile from Hyper-V KVP didn't read the CFLAGS because it directly sets them within the Makefile. Could be wrong though and/or might have changed in the meantime.\nDoes the build work OK?\nI can properly check it this weekend, is that soon enough?\n. Sorry for the lack of response, bit busy here :)\nAs far as I can remember the Makefile from Hyper-V KVP didn't read the CFLAGS because it directly sets them within the Makefile. Could be wrong though and/or might have changed in the meantime.\nDoes the build work OK?\nI can properly check it this weekend, is that soon enough?\n. @tianon it's indeed as I expected.\nStep 45 : RUN cd /linux-kernel &&     make INSTALL_HDR_PATH=/tmp/kheaders headers_install &&     cd /linux-kernel/tools/hv &&     CFLAGS='-I/tmp/kheaders/include' CPPLFAGS=\"$CFLAGS\" LDFLAGS=\"$CPPFLAGS\" make hv_kvp_daemon &&     cp hv_kvp_daemon $ROOTFS/usr/sbin &&     rm -rf /tmp/kheaders\n ---> Running in 6d4510939ed1\n  CHK     include/generated/uapi/linux/version.h\n  INSTALL include/asm-generic (35 files)\n   ...\n  INSTALL include/asm (65 files)\ngcc -Wall -Wextra -g -lpthread -o hv_kvp_daemon hv_kvp_daemon.c\nThis compared to my PR which uses sed\nStep 42 : RUN cd /linux-kernel &&     make INSTALL_HDR_PATH=/tmp/kheaders headers_install &&     cd /linux-kernel/tools/hv &&     sed -i 's!\\(^CFLAGS = .*\\)!\\1 -m32 -I/tmp/kheaders/include!' Makefile &&     make hv_kvp_daemon &&     cp hv_kvp_daemon $ROOTFS/usr/sbin &&     rm -rf /tmp/kheaders\n ---> Running in 92e7eaf357c9\n  CHK     include/generated/uapi/linux/version.h\n  INSTALL include/asm-generic (35 files)\n  ...\n  INSTALL include/asm (65 files)\ngcc -Wall -Wextra -g -lpthread -m32 -I/tmp/kheaders/include -o hv_kvp_daemon hv_kvp_daemon.c\nThe -I/tmp/kheaders/include is missing from the gcc command. Which means gcc isn't using the correct kernel headers.\n(Since we've moved to 64-bit the -m32 obviously isn't necessary anymore)\nThis happens because the KVP Makefile assigns/overwrites CFLAGS:\nCFLAGS = $(WARNINGS) -g $(PTHREAD_LIBS)\nIf they would've used += we would've been able to set CFLAGS from the command line. I guess that's something that should be fixed upstream.\nThis was the reason I used sed to replace the CFLAGS value in the Makefile directly.\nIf you want I can rebase my PR on current master.\n. FYI Debian and Arch use the 1.12 release from Google Code as well.\nNote that there are commits from 2010 at the Google Code repository, but there hasn't been a release after 2007.\n. Just scanned the mailing list @ sourceforge back till 2006, there's nothing there that says that the project is abandoned or moved to google code, only unanswered questions.\nThe same goes for Google Code, there's an issue there about Google Code closing with no response, just like all the other 30+ issues.\nFor all intents and purposes this project seems to be abandoned.\nDo we really need it? open-vm-tools can be compiled without it.\nI've reached out to the e-mail addresses from Dug Song I could find, will see if we can get an answer :)\n. @frapposelli Do you know if libdnet is needed for the functionality that is used in boot2docker?\nopen-vm-tools can be compiled without it, which mean it can be dropped if not needed.\n. @frapposelli Do you know if libdnet is needed for the functionality that is used in boot2docker?\nopen-vm-tools can be compiled without it, which mean it can be dropped if not needed.\n. FYI This has been enabled on Debian since at least Squeeze/6.0 from 2011 :)\n. This is a duplicate of #697\n. @wufeifei it might be useful to join the conversion @ #697, the change you proposed in this PR from mount -t vboxsf to mount.vboxsf is discussed there.\n. @dduportal isn't it enough to be able to run compose inside a container?\nAfaik with the recent fixes your image works as it should, right?\n. @tianon Yeah, strange thing. I noticed that commit as well, so I triple checked everything but it really is not working correctly right now and I couldn't find a reason why it would be different now compared to when #761 was merged.\n~~The only thing I can think of is that somehow something within TinyCore could have changed this behaviour. Maybe they switched from fdisk from util-linux to the one from busybox.\nIt could also have to do with the switch to TinyCore 6.0/64-bit for boot2docker.\nI couldn't find a decent history/changelog for TinyCore though, so no way to check.~~\n(edit: #761 was simply wrong, see comment below)\nI'm building the iso from commit 6f2713b that merged #761 right now to check if it worked back then.\n. @tianon I just rebuilt the boot2docker iso for both commit 6f2713b (the commit after the merge of #761) and commit 175488c (the commit before @AntonioMeireles added his fix) and tested it with both of them + with the iso from boot2docker 1.5.0.\nAll of them them automatically select partition 2 when you want to change the partition type as I mentioned in the description of this PR.\nSince #761 also added the w to write the changes to the swap partition to disk the actual effect of #761 is that the partition type for the swap partition was changed from the default 83/Linux to 2/Unknown because of the error in the echo line.\nIn other words the changes in #761 didn't actually fully fix the creation of the correct partition type.\n. @tianon is this fix actually working for you/have you had any new reports about it not working?\nI couldn't find any new issues on it, but for me it still isn't working correctly. I still have situations where the time is too much out of sync which means certain signed requests fail to work.\nOne obvious thing is what @legal90 mentions, that both ntpd as well as virtualbox timesync are now being used, which will probably result in issues. Would it be possible to get rid of the ntpd?\n. @brettdh @tianon it seems like this was introduced by the switch to TCL7 in #1147\nTCL6's openssh contained the relevant files /usr/local/etc/ssh/ssh_config_example and /usr/local/etc/ssh/sshd_config_example, see http://distro.ibiblio.org/tinycorelinux/6.x/x86_64/tcz/openssh.tcz.list\nFor TCL7 these files have been renamed, see http://distro.ibiblio.org/tinycorelinux/6.x/x86_64/tcz/openssh.tcz.list where they're now called /usr/local/etc/ssh/ssh_config.orig and /usr/local/etc/ssh/sshd_config.orig\nI've compared the old and new ones and they are indeed the same files (with some slight changes) that now have a different name.\nFor people with an existing boot2docker install there's no impact because the initial copying has been done with the old/then correct filenames and this part doesn't get triggered for them again.\nFor new/clean installs it will fail though. I'll create a PR to fix it.. @galeksandrp you should use modprobe to load modules, not insmod. modprobe will load dependencies whereas insmod doesn't, which is the issues you're seeing here.\nmodprobe ip6table_filter works fine (using 1.12.5, but won't be any different on your version).. What might work is having the entry in inittab execute a script that checks if the relevant /dev/tty device exists and then (re)starts getty for the tty and if it doesn't it just sleeps indefinitely?\nSo something like this in inittab:\nnull::respawn:/path/to/script /dev/ttysomething\nNot sure of how \"ugly\"/OK this is though :x. @tianon Not really sure what the above voodoo is :P\n(looks pretty interesting though, will try it out when I can)\nAlso, I'm not sure if my initial idea of sleeping indefinitely will work for the situation described by @jonathanperret because that would still mean no restart of getty when initially there's no serial console connected.\nAfter some more pondering I came to the conclusion that it would be perfect if udev could do this using some udev rules, that way it would be properly dynamic.\nI have no clue though if there's a way to detect from udev when a serial port gets connected. AFAIK there's some signalling in the port itself, but I'm not sure if that changes a udev attribute.\nMaybe something like this will work? Will have to do some trial and error to see if this works\nSUBSYSTEM==\"tty\", ACTION==\"add\", ATTRS{type}==\"0\", RUN+=\"/sbin/getty -l /usr/local/bin/autologin 9600 ttyS0 vt100\". @jonathanperret sorry, then I guess I misunderstood. So we can start getty as longs as the port exists, independent of if something's connected to it.\nBut this:\n\nI just tested that with getty set to be started only once, one can get a to a shell by connecting to the serial port, but once that shell exits, nothing listens on the port anymore (getty does not hang around). Is that intentional?\n\ndoes mean that once disconnected getty exits and will need to be restarted again (which the inittab + script solution would do, so should be fine), correct?. @nathanleclaire on the other hand the same issue as described in https://github.com/docker/machine/issues/3711 would happen for every host (VM or bare metal) that doesn't enable ttyS0 and ttyS1, so I think it would still be a good idea to have a fix for that case in boot2docker as well.. Sample implementation of patching dhcp.sh can be found here https://github.com/simonvanderveldt/boot2docker-zfs/commit/86bd92f578c33c63b04665c069a01a3f84080fb1. Agreed! I didn't want to bring that change into this one, for example line 95 could use a different separator as well.\nShould I include it or create a separate PR for that?\n. Ping @tianon. Should I change the separators in the PR?\nIf replacing the separator, any preference for a symbol? ! as in your example?\n. According to the announcement all repo's moved to @sfjro except for the aufs-util repo :|\nHow certain are we that @distrotech is the right use/place to get the sources?\nSee here for a cached version of the overview.\nAlso, Sourceforge is having an outage, it's not like they announced they would be shutting down like Google Code. So is it necessary to move away from Sourceforge?\n. Guess this change is an accident?\n. @tianon did you add this file on purpose?\nI already have one with boot2docker 1.12.5 which contains the following\n```\n$ cat /usr/local/bin/autologin\n!/bin/sh\n/bin/login -f docker\n```. Nice! Good to have an explanation, was pretty much magic without it ;). Sorry, totally missed that you just moved it. It was a long week ;). ",
    "sardaukar": "I updated to the latest homebrew versions of docker and boot2docker, and that fixes downloading the ISO. But I still get a kernel panic on vbox 4.3.8\n. Different panic after using your mentioned version!\n\n. The master one\n. Thanks for trying!\n. Fixed in VirtualBox 4.3.10 r93012 (for MacOS X)\n. ",
    "mcoms": "Same here with v0.6.0, previously fine, now panics after upgrading VirtualBox to v4.3.8 r92456.  Other VMs are unaffected.\nOnly thing in the VM log that looks suspicious:\n00:00:00.269553 Guest Log: BIOS: Boot : bseqnr=1, bootseq=0233\n00:00:00.272133 Guest Log: BIOS: Booting from CD-ROM...\n00:00:00.551048 Guest Log: BIOS: KBD: unsupported int 16h function 03\n00:00:00.551366 Guest Log: BIOS: AX=0305 BX=0000 CX=0000 DX=0000\n. Thanks @cathper, also did this testing but forgot to write it up last night! Same results, including rebuilding the machine with a PIX4 IDE controller, and trying 2GB RAM.\nGlad others are finding a solution by downgrading VirtualBox \u2014 will try this tonight :)\n. Perfect, thanks @steeve :)\n. Sorry for the delay, rebased :)\n. Sorry for the delay, rebased :)\n. ",
    "cathper": "I can confirm to have the same behavior on boot2docker.iso v.0.6.0, v.0.5.4 and v0.5.3 using VirtualBox v. 4.3.8 r92456 (latest).\n- Unchecking Enable VT-x/AMD-v makes VirtualBox err: \"Invalid settings detected\".\n- Unchecking nested paging: Same behavior.\n- Unchecking Enable I/O ACPI makes VirtualBox err: \"Invalid settings detected\".\n- Only PIIX3 and and ICH9 is available; Using ICH9 gives same behavior.\n. The config said 1 GB mem for the vm, so that doesn't confirm this to be a duplicate of #255.\nVirtualBox v.4.3.6, however, does work.\n. ",
    "jmonster": "I attempted booting the .iso file with vmware fusion (getting desperate!) and it kernel panics there, too.\n\nKernel panic - not syncing: No working init found. Try passing init= option to kernel.\n\nThis is a fresh install of Mac OS 10.9.2\n. 1. sure is, thank you :)\n2. I installed virtualbox 4.3.6 instead of .3.8 and boot2docker works as you might expect.\n. ",
    "thebyrd": "I ran into the same issue, downgraded to 4.3.6 and everything worked\n. ",
    "hackable": "Here's a temporary fix for this issue.\nhttps://github.com/hackable/boot2docker/commit/e7a03b2e0a6096d71d3db154642c361bb6c3687e\n. ",
    "smeijer": "Thanks @steeve, that fix actually works!\nstart -> run -> cmd\n%programfiles%\\oracle\\VirtualBox>vboxmanage setextradata boot2docker VBoxInternal/CPUM/EnableHVP 1\n. ",
    "gaolitao": "Has this issue been fixed in 4.3.20 for Linux?\nI met this issue today.\nThe error message is same with the 1st screen capture:\nhttps://camo.githubusercontent.com/df38f0db4628f6085ecef3d9ae0d1ffeef508a63/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f3135333430372f323238303631302f35313030633135322d396638652d313165332d396530302d6564646565313738613230372e706e67\n. ",
    "volkertb": "@SvenDowideit Would https://github.com/boot2docker/boot2docker/pull/497#issuecomment-247808093 in any way be helpful to you, w.r.t. this issue? \n. @md5 @SvenDowideit I managed to get it working by running a container instance of image enernoclabs/avahi, as follows:\ndocker run --net host --name \"avahi-daemon\" -d enernoclabs/avahi\nAfter entering the above command, the Docker machine (the VM running the Docker daemon) should become resolvable from the physical host machine (as well as other connected VMs) through its hostname, appended with the TLD \".local\": \nping $DOCKER_MACHINE_NAME.local\nmDNS/Zeroconf works out of the box on both Macs (through Bonjour) and most modern Linux distros (through Avahi). To add support for it on Windows, the Bonjour Print Services need to be installed, which Apple has made freely available at https://support.apple.com/kb/dl999.\nAnyway, as you can all see, it's easy to set up in a Docker machine. Howeve, it would indeed be a great improvement if boot2docker supported this feature out of the box. Is the enernoclabs/avahi image really too big to integrate directly into boot2docker?\n. There is another workaround for this frustrating VPN problem: you can talk to the Docker machine (boot2docker VM) through an (emulated) serial console. I didn't see it documented anywhere, but I noticed in boot2docker's Dockerfile that boot2docker does indeed start up serial consoles on /dev/ttyS0 (COM1) and /dev/ttyS1 (COM2) if those serial ports are available.\nI tried it with one emulated serial port and it worked. Instructions for Windows are described below. The instructions will be somewhat different for Linux and Mac environments, but setting up emulated serial connections between a host computer (regardless of the OS) and a VM on VirtualBox is well-documented on many sites.\nTo enable emulated serial ports in your Docker machine, shut it down first, then open the VirtualBox GUI, right-click on your Docker machine VM, select Settings... -> select list item \"Serial Ports\" -> select tab \"Port 1\" (if not already selected). Configure the settings under the tab as follows (assuming Windows, it will be somewhat different on Linux or Mac hosts):\n- Check (enable) \"Enable Serial Port\"\n- Port Mode: \"Host Pipe\"\n- Uncheck (disable) \"Connect to existing pipe/socket\"\n- Path/Address: \".\\pipe\\vbox_boot2docker_com1\" (without the quotes)\n- Click OK.\nNow start the Docker machine (boot2docker) VM up again. Do this preferably through the \"docker-machine\" command, unless of course you're already running a VPN connection, in which case you'll have little choice but to start the VM through VirtualBox, through either the GUI or the VBoxManage command.\nTo connect to the emulated serial port on the now running VM, use a console application that can initiate serial connections to host pipes. I recommend PuTTY for this. In the case of PuTTY, you can connect to the emulated serial port by starting PuTTY and creating a PuTTY session with the following settings/parameters:\n- Connection type: Serial (select the radio button next to \"Serial\")\n- Serial line: \".\\pipe\\vbox_boot2docker_com1\" (without the quotes, the same string you entered behind \"Path/Address\" earlier in VirtualBox)\n- Speed: 115200\n- Text field right under the title \"Saved Sessions\": (enter any name here that is convenient and practical to you)\n- Click Save to save the session for later reuse.\n- Either double-click on the saved session in the list or click on the \"Open\" button below to start the session.\n- When a new PuTTY console pops up with a green cursor in it, press ENTER to request a login prompt.\n- When prompted for a user name, enter \"docker\" (without the quotes). It should not ask you for a password.\nYou should now have regained control over your Docker machine. And since you are now controlling it over a serial connection (albeit an emulated one), the connection will not be disrupted by any changes in your host computer's TCP/IP configuration. You can continue to enter Docker commands and manage your container instances, regardless of whether you are connected through a VPN or not. Access to the outside Internet from within the Docker machine should also still be possible, since the NAT interface managed by VirtualBox should also remain unaffected by any changes on the host machine, except for possible proxy server issues on the VPN of course. But you can work around those as well by configuring the http_proxy and https_proxy environment variables on the Docker machine and inside your container instances.\nWARNING: when you disconnect the serial console by closing it (without entering the command \"exit\"), you will still be logged in the next time you connect to the same serial console. Make sure no one else has access to the user session on your computer.\nYou should still be able to access any local files in your home folder(s) through the path /c/Users if you created the docker VM using the standard docker-machine settings. If you need access to any other local folders, you will have to stop the docker machine VM and add it as a shared folder using the VirtualBox VM and then restart the VM and mount the newly added shared volume.\nBy the way, it would be a very practical and convenient enhancement if the docker-machine client tool could be improved to automatically fall back to an emulated serial connection to the boot2docker VM, whenever SSH connections to it failed. \nLastly, it might be a good idea to simply create a separate \"client VM\" in VirtualBox (alongside your Docker machine) and run a light-weight OS with a GUI and a web browser in it. I'd recommend Lubuntu in Live CD mode for this, but you could for instance also use one of the Windows/IE VMs that Microsoft has officially made available for testing purposes, in case you need to test anything with Internet Explorer. The client VM can then serve to both control and test the Docker machine. To virtually \"connect\" it to the Docker machine, add a host-only network interface to this new client VM and connect it to the same host-only adapter that is already connected to the Docker machine. This way, the new client VM will be able to access the Docker machine directly. And since the connection between these two VMs will be taking place over an internal virtual \"network switch\" managed by VirtualBox, this connection will remain in tact, even once the host machine no longer has access to it due to changed routes by a VPN client. You will then be able to continue accessing and testing your docker container instances on the Docker machine by accessing it from the new client VM. In addition, you could also add a second network interface in NAT mode to the client VM, so you can access both the Docker machine and the outside internet (again, taking account any possible proxy issues that pop up while connecting to a corporate VPN).\nI hope these suggestions help! \ud83d\ude03\n. @SvenDowideit @harrydb's pull request has been ready for review for quite some time. It's quite a useful improvement. It would be nice if someone could review and merge it. Thanks.\n. ",
    "jkingyens": "okay, thanksi!\n. Okay. Did the go port reach feature parity with this script at some point? Should I be using that instead?\n. Okay. Did the go port reach feature parity with this script at some point? Should I be using that instead?\n. @iemejia good suggestions. updated the patch\n. ",
    "xiaods": "I run into same issue.\nI installed by this oneline cmd \nbash\nbrew install boot2docker\nVirtualbox 4.3.4/OSX wavericks\nI don't know how to use boot2docker with debian/ubuntu image\n. @SvenDowideit  from my test result, I found the reason,\nif i use boot2docker download to download iso, the issue will happen.\nwhen i download the iso from here: https://github.com/boot2docker/boot2docker/releases\ni got correct response from this iso. please have a check.\n. @mdeltito please use below instruction to resolve your question\nbash\n$ brew update\n$ brew upgrade docker\n$ brew upgrade boot2docker\n$ boot2docker stop\n$ boot2docker delete\n$ boot2docker download\n$ boot2docker init\n$ boot2docker up\n. @SvenDowideit yes, it resolved by docker team. thanks.\n. @SvenDowideit thanks, it like a tip. \n. it update to another variable:\nmake BIND_DIR=bundles binary\n. ",
    "j0hnsmith": "With VirtualBox 4.3.8 I was seeing 100% cpu usage (on a single core) when I tried to start boot2docker 0.6, no other boot2docker commands would work. When I downgraded to VirtualBox 4.3.4 everything works as normal.\n. @steeve With VirtualBox 4.3.8 I ran boot2docker init, then the command above, then bootstrap ssh, all is good. Thx\n. The above is a bit long winded, basically filenames with code points > 256 cause errors with iso8859-1, a generic UTF-8 locale would be far more suitable (and more likely to resemble the environment containers are actually run in).\n. +1\n. #277\n. #277\n. ",
    "euforic": ":+1: \n. ",
    "farconada": "+1\n. ",
    "fesplugas": ":+1:\n. ",
    "shaftoe": "To us the missing sharing folders feature is a blocker, given that we use Docker mainly to run tests on code files living on our host desktop/laptop machines. So thanks a lot @steeve for the iso :+1: \n. I'm also experiencing inconsistency between container output if running inside or outside the b2d VM. For instance, from inside the VM I see the expected output, but from outside it stops to log after a while with no apparent reason.\nboot2docker: 0.7.0\ndocker@boot2docker:~$ docker -v\nDocker version 0.9.0, build 2b3fdf2\nhost $ docker -v\nDocker version 0.9.1, build 3600720\nHTH\n. Well, as the Readme on the repo says, it just \"Install docker on MacOSX\" using Puppet instead of following the CLI instructions here: http://docs.docker.io/en/latest/installation/mac/, my proposal was to add this to the OSX section of the documentation and not as standalone (for instance I don't use Homebrew on my Mac).\nBy the way, I don't have any Windows environment to test with so I can't add that support, but I'll be happy to add support for Linux now that I know it's there (I didn't notice when I first installed, and to be honest I didn't even think to install Docker via boot2docker there given that Docker is already supported, but I guess there are use cases or Linuxes where it is not so easy to install)\n. ",
    "sysless": ":+1: This is a must-have to run quick tests on local machine.\n. ",
    "leeola": ":+1: #284 is a lifesaver. I'm not sure what the \"right\" move is, but from a UX perspective 284 was amazing for me.\n. Can't say i agree that sharing folders / forwarding ports via docker isn't in the normal use case, but oh well. If you can, update the documentation to reflect a \"roll your own\" approach, rather than pointing to this thread as a solution edit: Pointing to 284, that is\n. @KyleCartmell \n\nedit: found docker/docker#4023 and have now learned to stop worrying and love boot2docker. <3\n\nMind explaining what you found, regarding your above statement? I'm still looking for a solid solution to this problem.\n. @KyleCartmell Thanks, i saw those but i just wanted to make sure i wasn't missing anything. I appreciate the info\n@jokeyrhyme Yea, that's possible for some of my workflows but i am currently toying with moving my development (tools and all) inside of Docker. A bit crazy of course, but it's a toy regardless. With that said, i need a firm way to have the host fs be the persistent storage (for code/etc), and the dev environment would be disposable. This type of workflow would require a good shared fs setup.\n. @james-nesbitt  For all my \"normal\" development i'm able to use one of two \"Docker approved\" methods:\n1. Adding on each build. This can be fast, or it can be slow. It really depends on how you are able to setup your Dockerfile, and what steps need to be run through with each compile.\n2. Adding your source like normal during the build, but then sharing your source from inside the container outwards via samba or nfs. Your development tools all live outside the container, but this can be a bit volatile as you have to ensure that you commit/push your code properly.\nHonestly, i still vastly prefer shared volumes via -v foo for \"normal\" development. It's basically the same as option #2, but it reduces the need to push your code back outside the container or risk losing it all.\nHowever, i am currently toying with hosting all of my tools within a container. This is a bit off topic (and don't care to discuss it here haha), but i am using \"normal\" Shared Volumes for this, via the old standard vbox Guest Additions.\nI'm using my own branch from https://gist.github.com/mattes/2d0ffd027cb16571895c, and it's proving to work quite well so far. Detailed instructions can be found here\nIn closing, shared volumes will likely be the way to go for most of our (the people in these types of threads) needs. From what i can tell, the Docker Team is still working on this, and it will likely be handled by FUSE via -v fuse:/remote/foo:/host/bar\n. @jokeyrhyme Well it's still early, so perhaps there is a huge flaw that i'll run into in the next few days haha, but overall i'm not doing anything outside the VM. All of my tools are running inside the VM/Container, the host fs is simply being used as a form of persistent storage between container runs/builds. Hosting code, mainly.\nOverall i'm expecting it to fail, but we'll see haha.\n. @tianon Wow, awesome! :+1: +++\n. It is rather slow, i agree. Though it's been usable enough for me, as a stopgap until they add the planned shared network volumes (iirc)\n. ",
    "shlomifruchter": "Is there a workaround for now? How can I manually install the vbox guest additions on the boot2docker image?\n. ",
    "lightsofapollo": "For me this is the only thing that makes me keep around my custom docker environment (vagrant basically) -v is required for happy docker usage :)\n. ",
    "aidanhs": "@tianon has this been raised as a Docker issue then?\n. I'm ok with this not being merged, but it'd be nice for up-to-date iso's being posted on this issue so they can be used...\n. ",
    "hunterloftis": "+1\n. Same issue here (Heroku node.js buildpack in boot2docker on osx vs standard ubuntu instance). Would love any recommendations for vbox config changes to test.\n. ",
    "TheBigBear": "What are the steps required to build a 'custom' iso like the one posted above under 'steeve's first comment:\n[quote]\nsteeve said:\nA test ISO based on 0.7 is at https://dl.dropboxusercontent.com/u/12014139/boot2docker.iso\n[/quote]\nCan this somehow be done 'scripted', or automated to the maximum, as bjaglin called it above, by using a Dockerfile somehow? \n. Thanks bjaglin that is great and very helpful. \nSo seeing that there is a lot more documentation out there than I was aware off and just to make sure I don't try to re-invent the wheel. ;-) \nWhat I was hoping to do was to build a tcz extension pkg that contains the virtual box guest additions kernel modules to allow folder sharing (maybe I should plan to also include the others?) And then include this optional tcz kernel module extension pkg in the 'optional' pkgs dir on the iso and then have a Dockerfile that loads these guest extensions from the tcz extension pkg at boot time when I use my boot2docker client on my mac to boot off the boot2docker+optional_vbox_fs_extension.iso\nThis way the additional vbox flles only get into ram IF I chose to install this optional kernel modules tcz pkg.\nWould any of this make sense? If not why not? \n. OK, I am too new to docker to really know or understand how this all works together , just yet. But I have seen enough (mainly Mac) people's posts, and I am also one of them, that would like (even if it's temporary) a virtual box shared file integration.\nHow would I, basically combine the basic isos rebuild script from  the instructions at \nhttps://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\nwith the vbox additons Dockerfile from:\nhttps://gist.github.com/nsfmc/9862241#file-dockerfile-tmpl\nand of course also the finale customisations that bjaglin mentions here\nhttps://github.com/boot2docker/boot2docker/pull/284#issuecomment-40459426\nor can it even be done in one single Dockerfile?\nThe main question I have on this  I think is how do I work a single Dockerfile so I can have the combination of these two manual lines:\n$ sudo docker build -t boot2docker/boot2docker:base base/\n$ sudo docker build -t boot2docker/boot2docker-rootfs rootfs/\nI believe that once I understand how to do that, I think I can then \"merge\" all those pieces and instructions together into one final Dockerfile. (hopefully)\nThanks for a quick sample Dockerfile that achives the above two manual steps with a single Dockerfile?\n. I am quite stuck. Trying to folow the instructions bjaglin pointed me to at:\nhttps://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\nbut on the very first line I already get an error \"no Dockerfile found in base/\" when running\nsudo docker build -t boot2docker/boot2docker:base base/\n. @1mentat yes, you got it! It works! \nIf I prepare a shared folder in virtualbox called 'Downloads' and then do\nboot2docker ssh\nsudo -s\nmkdir -p /home/docker/Downloads\nchown docker:staff /home/docker/Downloads\nmodprobe vboxsf\nmount -t vboxsf home /home/docker/Downloads\nexit\ndf -h\nand it shows me my hosts 'Downloads' directory mounted in my container. ;-)\nso I think 1st part of solution is to create a shared folder share in virtualbox, if that's not there you can't mount it from the container.\nnot sure why the sudo modprobe line fails , but the sudo -s followed by modprobe works, my guess is it's something to do with the env that docker user has vs what root user has\nPS: If I try to mount the home to /home/docker - that fails, but I guess there is possibly an open file handles or something that keeps me from mounting a shared folder to my own home dir that I am logged in to?\n. @1mentat I take that back. I now manually removed the Shared folders I had defined in virtualbox, and then started anew following the instructions on top of this page:\n$ boot2docker stop\n$ VBoxManage sharedfolder add boot2docker-vm -name home -hostpath $HOME\nand after this the mounting worked flawlessly for me.\n$ boot2docker up\n$ boot2docker ssh \"sudo modprobe vboxsf && mkdir -p $HOME && sudo mount -t vboxsf home $HOME\"\n. ",
    "tunix": "I'm a Mac user and really hoping an easy way of using docker with it. My development heavily relies on Virtualbox VM's and I want to convert it to docker containers. I can't make use of docker just because of this sharing folders issue. Is there a plan to solve this in near releases?\n. @SvenDowideit i've been using VBox (+ vagrant) shares for a long time for development purposes and haven't noticed any performance issues. IMHO creating/configuring a Samba share isn't practical and introduces an overhead to the process. I do start & stop my VM's often and cannot afford to go over this process again and again.\n. Since this is a blocker for me to use docker, I gave a chance to CoreOS today. Mounting works fine if you attach a volume which is on the box. As it works with Vagrant and actually shares the Vagrantfile dir with the container I'm good to go. Just wanted to share so that others may try as well.\n. ",
    "mattes": "Same here. @tunix Using https://github.com/noplay/docker-osx in the meanwhile works out for me.\n. I built the new boot2docker.iso with all the scripts mentioned above. But when I try to boot the new boot2docker.iso it hangs:\n.boot2docker  $ boot2docker start\n2014/06/06 18:52:46 Waiting for SSH server to start...\n2014/06/06 18:53:26 Failed to connect to SSH port at localhost:2022 after 10 attempts. Last error: read tcp 127.0.0.1:2022: i/o timeout\nHmmm?\nEDIT: Build log: https://gist.github.com/mattes/938658a0279e19ebf7d7\n. Maybe someone how was able to build it for VirtualBox 4.3.12 wants to upload that iso somewhere?\n. I believe that docker run -i -t --rm mattes/my-boot2docker > boot2docker.iso which runs CMD [\"cat\", \"boot2docker.iso\"] could be the problem. I just built something else that way and the build output didn't work neither. So I copied it with docker cp and everything worked ok. Will verify this for boot2docker later.\n@SvenDowideit thanks for the vbox gui hint. i remember serial console sessions from my pandaboard ... i am with you ;-) \n. Following up on my issue above: The issue for me really was the docker run -i -t --rm mattes/my-boot2docker > boot2docker.iso thing. docker cp works just fine. No idea why though.\n\nSome colleagues couldn't figure it out how to build their own boot2docker.iso. \nSo I wrote this little\nguide to build a custom boot2docker.iso\nhttps://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c\nFor the lazy: You could just download http://static.dockerfiles.io/boot2docker-v1.0.1-virtualbox-guest-additions-v4.3.12.iso and move it to ~/.boot2docker/boot2docker.iso. \n. @willkessler did you you have a look at my blog post https://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c? this should help you achieve the same thing with boot2docker. no need to run vagrant.\nEDIT: If you have troubles installing boot2docker-cli, check https://gist.github.com/mattes/9961a8bd5c9d53f48ce6.\n. @willkessler \n\ncreating my own iso for boot2docker seems laborious\n\nCorrect. That's why you could download the ready-to-use boot2docker.iso with VirtualBox Guest Additions (see link to blog post above). Maybe maybe, someday boot2docker-vbox.iso will be available officially from boot2docker. \n\nwould make it difficult to upgrade boot2docker\n\nI don't think so. There are two parts: boot2docker(-cli) and the boot2docker.iso. So downloading and replacing the original boot2docker.iso doesn't touch the boot2docker(-cli) at all. \nI can't help you with your vagrant setup unfortunately.\n. I updated the boot2docker.iso to the latest version 1.0.1: http://static.dockerfiles.io/boot2docker-v1.0.1-virtualbox-guest-additions-v4.3.12.iso (blog post)\n. this is somehow related: Collected issues with Volumes (linking it here for reference)\n. I absolutely agree with you, @tianon and I am looking forward to a solution from docker itself. But in the meanwhile people are kinda stuck with this and looking for options. I don't think it would hurt too much, if the virtualbox guest additions thing would be released as official work-around. I guess the boot2docker-cli would make it easy to allow boot2docker download vbox or sth.\nSome stats [27 Jun]:\n- The actual blog post was accessed 1.2K times and read 573 times (thats what medium.com says)\n- the .iso file was downloaded ~ 475 times (from aws s3 logs, roughly counted the rows in the web interface)\n. > virtualbox guest additions are well-known for being absolutely abysmally slow\nWhile this might be true, it didn't affect my local development workflow so far. \n\neven worse user experience than we have now.\n\nhonestly, I doubt that. \n. @SvenDowideit are you a linux or mac user?\nAnyway, I will keep updating the .iso file as long as there is no solution (from docker itself) that fits into my workflow.\n. The latest boot2docker v1.1.0 is now available: \nhttp://static.dockerfiles.io/boot2docker-v1.1.0-virtualbox-guest-additions-v4.3.12.iso\n```\n$ docker version\nClient version: 1.1.0\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): 79812e3\nServer version: 1.1.0\nServer API version: 1.13\nGo version (server): go1.2.1\nGit commit (server): 79812000\n$ boot2docker version\nClient version: v1.1.0\nGit commit: 7e20d36\n```\n. @larrycai oh, where did you find the old link?\n. Ah it probably makes sense. At first I typed the wrong URL here and corrected it immediately afterwards. But Email notifications were quicker I guess. ;-) \n. Updated boot2docker.iso to version 1.1.1\nhttps://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c\n. Updated boot2docker.iso to version 1.1.1\nhttps://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c\n. @mitar \n\nI discovered that for static files if I change them outside the container\n File inside the container changes\nnginx still servers the old file\n\nI found this: http://www.reddit.com/r/linux/comments/12ssxq/i_ran_into_a_really_strange_issue_with_nginx_and/c6xvzv3. What does sendfile do? It's turned off per default.\n. @mitar \n\nI discovered that for static files if I change them outside the container\n File inside the container changes\nnginx still servers the old file\n\nI found this: http://www.reddit.com/r/linux/comments/12ssxq/i_ran_into_a_really_strange_issue_with_nginx_and/c6xvzv3. What does sendfile do? It's turned off per default.\n. Updated boot2docker with virtualbox guest additions to version 1.1.2.\nhttps://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c\nhttp://static.dockerfiles.io/boot2docker-v1.1.2-virtualbox-guest-additions-v4.3.12.iso\n. Updated boot2docker with virtualbox guest additions to version 1.1.2.\nhttps://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c\nhttp://static.dockerfiles.io/boot2docker-v1.1.2-virtualbox-guest-additions-v4.3.12.iso\n. I am still +1 for offering an official boot2docker.iso with virtualbox guest additions enabled. I maintain an unoffcial .iso here.\nIf an official .iso isn't something everybody can agree on, why not implement this: \nboot2docker download url ?\n. @nathan-zhu Check out https://github.com/synack/docker-rsync. It's pretty experimental though.\n. I don't think there is a default IP for boot2docker. Using docker-machine with multiple VM instances here. We should add a comment where IPs are coming from. \n192.168.59.103 is the boot2docker VM IP\n192.168.59.3 is the Host only adapter IP\nAlso check out this script I wrote to automate the process of patching boot2docker with NFS.\nhttps://gist.github.com/mattes/4d7f435d759ca2581347\n. I don't think there is a default IP for boot2docker. Using docker-machine with multiple VM instances here. We should add a comment where IPs are coming from. \n192.168.59.103 is the boot2docker VM IP\n192.168.59.3 is the Host only adapter IP\nAlso check out this script I wrote to automate the process of patching boot2docker with NFS.\nhttps://gist.github.com/mattes/4d7f435d759ca2581347\n. @chiedojohn if you have time, yes, please go ahead! :-)\n. @chiedojohn if you have time, yes, please go ahead! :-)\n. I wouldn't rely on that static IP.\n. ",
    "1mentat": "This does keep boot2docker from \"just working\" for all the people using it as the official OS X solution. We really need a resolution on this sooner rather than later.\n. @TheBigBear Here's what worked for me:\nbash\ngit clone https://gist.github.com/9862241.git\ncd 9862241\nsh build_docker.sh\ndocker build -t 1mentat/boot2docker-rootfs .\ndocker rm build-boot2docker\ndocker run --privileged --name build-boot2docker 1mentat/boot2docker-rootfs\ndocker cp build-boot2docker:/boot2docker.iso .\ncp boot2docker.iso ~/.boot2docker/boot2docker.iso\nboot2docker stop\nVBoxManage sharedfolder add boot2docker-vm -name home -hostpath $HOME\nVBoxManage sharedfolder add boot2docker-vm -name var_folders -hostpath /var/folders\nboot2docker up\nboot2docker ssh \"sudo modprobe vboxsf && mkdir -p $HOME && sudo mount -t vboxsf home $HOME\"\nboot2docker ssh \"sudo modprobe vboxsf && mkdir -p /var/folders && sudo mount -t vboxsf var_folders /var/folders\"\nEdited: Was missing VBoxManage command.\nEdited: Added mapping for packer script provisioner.\n. @SvenDowideit I'm unclear on how I'd actually use that on OS X to get transparent -v mounting.\n. I'm running into this purely from using packer.io, I don't have an commitment to it beyond being able to use that tool. I'll have to look at --volumes-from to see how to best file the feature request with that project.\n. @bfirsh see @SvenDowideit 's comment https://github.com/boot2docker/boot2docker/pull/284#issuecomment-41868977 for an example workflow. I haven't made it work yet but it seems valid as well as the reasoning.\n. @bfirsh see @SvenDowideit 's comment https://github.com/boot2docker/boot2docker/pull/284#issuecomment-41868977 for an example workflow. I haven't made it work yet but it seems valid as well as the reasoning.\n. I'm not sure exactly what development flow people are objecting to volumes for. You mount the volume on your development machine using samba, use that as a working directory to check out files, do your work or testing facilitated by the application and support containers then check in changes.\nI'd also appreciate people giving others contributing to this discussion a \"generous reading\". If you have objections to it being \"impractical for development\", specify them succinctly and leave off the personal bits. I'm happy to (again) put together the step by step directions that actually work, but I need to know what the problems are.\n. @sfitts My only interest is trying to get something that works in whichever situation is necessary and ideally secondarily something that's supported. I'm trying to help and bring to light the merits of different approaches and \"it just doesn't work for me except this specific way\" doesn't help me bridge any gaps of understanding.\nI ended up here trying to get packer.io working with docker builds on OS X. The proposed change of workflow for that is a significant code change to packer which I think will not have much traction with the dev.\nThere are, more broadly, a bunch of things that don't work cleanly with VBox being managed through the script including port sharing (at least when I last looked.) I tend to agree that if this the official way to do docker without being on native linux it's got a long way to go for standard workflows people are using on linux (regardless of whether they \"should be\"). Still, I see the elegance of the volume approach as being able to work local and non-local which was why I was bringing it to people's attention even though my initial reaction was \"I can't work like that\" too.\n. You cannot protect people who are willing to copy and paste from the\ninternet. It is outside the info sec concerns of any project.\nOn Aug 4, 2014 7:16 PM, \"Sven Dowideit\" notifications@github.com wrote:\n\none particularly scary user-story I told the other day, is when someone\ninstalls b2d on their family computer to try out some SW that can be run\nusing it, then days later is finished, and forgets all about it. for the\nnext 5 years, b2d is running (for some auto-start at boot time reason), and\ntherefore is not updated to fix what we missed - then someone else clicks a\nlink in an email that gets around a tls impl issue and hands the magically\nrun container the docker socket\n- yay.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/284#issuecomment-51142309\n.\n. \n",
    "homerjam": "+1\n. ",
    "sambanks": "+1 for this. \nUsing Ubuntu at the moment solely due to a lack of a hdd installable boot2docker image. \nTried to do dd of this to a partition, but wouldn't boot. Guessing that ability came after 0.7?\nCheers\nSam\n. +1 for this. \nUsing Ubuntu at the moment solely due to a lack of a hdd installable boot2docker image. \nTried to do dd of this to a partition, but wouldn't boot. Guessing that ability came after 0.7?\nCheers\nSam\n. Ah, how did I miss that?! Thanks @sfitts and @1mentat that worked a treat!\nHave now converted it to a vdi and have exactly what I wanted.\n. ",
    "sfitts": "@sambanks FWIW I have successfully built the current version of boot2docker with this pull applied using the instructions provided by @1mentat above.  This gives me the most recent version with the ability to mount a directory from my local windows FS in the VBox VM (thus giving the docker server direct access to my disk, just as it would have if it were running directly on Windows).  At this point it is all working well for me.  Not sure if that will help you or not.\n. @christianrondeau -- your experience mirrors our own.  \nSince we only use shared folders so the docker client (running in VBox) can have access to host files during the building of an image any overhead is negligible.  Once the images are built and the containers are running we are using volume containers only for storage.\n. @shykes for starters, thanks for escalating this.\n1) I don't disagree with anything you said.  There are some additional concerns for Windows users beyond the bind mounting use case, but I understand that Windows users are a minority.\n2) For me the alternative is that Docker is essentially unusable.  So personally I'll take the risk of slow and buggy (neither of which I've personally observed) for a usable development tool (one that is rapidly becoming a cornerstone of our development process).\nI'm sure there are other risks/downsides, but IMO this is a classic case of not letting the perfect become the enemy of the good enough.\n. @SvenDowideit sorry, I didn't want to get into rehashing old stuff (I've posted about this a couple of times).  Our primary issue is the lack of a native Windows client for Docker.  If one existed then we wouldn't be using this workaround (we don't use bind mounting of volumes in any of our containers).\nWhat we do today is use a docker shell script (we use Git-Bash on Windows) which launches the Linux docker client via boot2docker ssh.  The only thing that stops this from being seamless is the fact that those commands can see only the VBox filesystem.  Using this workaround addresses that issue.  So I can cd into some sub-directory of my home, run docker build . and it all just works.\nThe only reasonable alternative solution that I've seen proposed is your samba based approach.  Unfortunately this doesn't work for us.  Not for any technical or objective reason, but due mostly to purely subjective concerns.  We simply aren't ready to treat Docker as our primary file system during development.  Maybe eventually, but not yet.\nMy personal preference would be for a native Windows client for Docker, but I've seen no sign that this is planned or even on the horizon.  In the meantime we're using this solution because it works for us.  Since we only use it on personal development machines many of the concerns cited here do not apply to us (which isn't to say they aren't real, we just don't share them).\nIf you'd like to explore any of this in more detail I'd be happy to do so directly (just drop me an email).\n. @SvenDowideit -- sorry, given the references to OSX and the fact that this doesn't preserve the underlying host FS structure (something you need to make the use of the Linux docker client work as I describe above), it wasn't immediately obvious how this applied to my situation.  But I'll see if I can tweak it to make it work for us.\n. Just got bit by this myself.  Restart of course clears it, but that's a painful workaround.  We'll use the ntpclient approach for now, any reason that ntpd isn't active by default as suggested by @docwhat ?\n. Is this a recent change, because as of 1.1.1 it is still losing time every time the host machine sleeps and you have to kick it to get it to resync.\n. @docwhat thanks.  Unfortunately we can't update to 1.2.x due to Docker issue #6231 which breaks all of our build scripts.\n. Ditto -- upgraded after taking the time to work around the other issue and it is still drifting.\n. @matthewleon agreed.  At this point I'm good with any non-OSX specific fix.  I'm slowly training folks to fix things up manually, but that's error prone and frankly just looks bad.\n. @matthewleon agreed.  At this point I'm good with any non-OSX specific fix.  I'm slowly training folks to fix things up manually, but that's error prone and frankly just looks bad.\n. Even on Windows it would be nice if the boot2docker vm had the same timezone as the host machine.  It would obviously take more work than copying a file, but it should be doable.\n. I've run into the msys auto-conversion thing myself and the only thing I've found is that if you add an extra / to the path it should prevent the conversion (though you end up with both slashes, so sometimes that doesn't really help).  Not sure if trick will work here, but it might be worth a shot (I'll try it out myself at some point, but that won't be for a bit due to other work priorities).\nOh -- and thanks for resurrecting this.  I know it is controversial, but it really does make life for those of us working on Windows a lot nicer (the lack of a native Docker client there gives us a few more issues than our Mac brethren).\n. @ewindisch that's great -- unfortunately it breaks all of the current maven/gradle build plug-ins.  So having the option to turn it off seems like a reasonable compromise.  Docker is becoming increasingly important core infrastructure (for us at least), so I'm hoping there will be more focus on maintaining compatibility (of the entire environment) across releases.\n@SvenDowideit -- thanks -- any idea when this will make it into a patch?\n. @ewindisch I think it's great that Docker is moving to be more secure; however... I'm not sure the position of \"wait for the other tools to upgrade\" is ideal (at least it isn't for us).  I very much want access to new Docker features (such as exec) and I very much don't want to have to burn a random day or 2 in the middle of our dev cycle working to get the tooling upgrading.  Not to mention that something like SSL is always more complex and painful than it should be (especially once you toss in the need to support multiple platforms and languages, as we have in our environment).\nHaving ways to maintain previous, working behavior so we can decouple upgrades to Docker from upgrades to other parts of our environment makes Docker easier to work with and a better overall citizen.  I'm also not sure I buy the security arguments, since being stuck on old releases doesn't help improve the security of anyone's environment (and may in fact due to the opposite since you can't pick up bug fixes).\nJust my $0.02 (no doubt highly influenced by the fact that my update the 1.3 didn't \"just work\" and now I'm stuck trying to dig myself out of the resulting hole).\n. @lalyos thanks, understood.  That would work fine for me, but having to roll that out to all of our development team is likely to be more pain than it is worth right now, so we'll stick on 1.2.0 (having to start a separate container each time you start and stop the VM is just going to be too much hassle for folks, most of our team views Docker as a necessary evil, so I need to make it as transparent as possible).\nHopefully @SvenDowideit 's change will make it into a patch release and if not I'll take it and build the ISO myself (we're already using an off the grid ISO now to get the guest additions, I was really hoping that this release would mean I could use the vanilla release, but...)\n. ",
    "tgross": "Just for anyone else who runs into problems with the gist provided above and the current version of boot2docker, I've modified that gist here https://gist.github.com/tgross/ad9892dcc86bee922772. This seems to be working for me.  I'm then adding to the boot2docker script the following:\nto init():\n$VBM sharedfolder add $VM_NAME \\\n        --name source --hostpath $HOST_PATH_FOR_SOURCE_CODE\nto start():\nboot2docker ssh \"sudo mkdir /src; sudo modprobe vboxsf && sudo mount -t vboxsf source /src\"\n. Just for anyone else who runs into problems with the gist provided above and the current version of boot2docker, I've modified that gist here https://gist.github.com/tgross/ad9892dcc86bee922772. This seems to be working for me.  I'm then adding to the boot2docker script the following:\nto init():\n$VBM sharedfolder add $VM_NAME \\\n        --name source --hostpath $HOST_PATH_FOR_SOURCE_CODE\nto start():\nboot2docker ssh \"sudo mkdir /src; sudo modprobe vboxsf && sudo mount -t vboxsf source /src\"\n. @aidanhs said:\n\nI'm ok with this not being merged, but it'd be nice for up-to-date iso's being posted on this issue so they can be used\n\n@jayd3e said:\n\nDocker supports shared volumes, so why wouldn't it be possible on OSX?\n\nThe primary trouble with this, and the reason the developers are avoiding using VirtualBox guest additions as a solution (hopefully I'm not putting words in their mouths here) is that different versions of VirtualBox require different versions of the guest additions.  So to be safe you'd need an iso for every version folks are likely to have of VirtualBox.  Or you end up tracking the releases of VirtualBox, which probably isn't a solution the developers would care for either.\nIf it were up to me I'd post up-to-date instructions for baking the ISO in the \"workarounds\" section and then look for https://github.com/dotcloud/docker/issues/4023 to land.  But I do agree it's a bit frustrating that the \"anointed\" way of using Docker on OS X doesn't support an important piece of the functionality out of the box.\n. The output of the build_docker.sh script in the gist I posted should be an iso file you can share between anyone using the same version of VirtualBox.  You then drop that iso in ~/.boot2docker and boot2docker will use it.  You can modify the boot2docker script with the items in my comment https://github.com/boot2docker/boot2docker/pull/284#issuecomment-43640542 if you want to turn on the shared folders automatically at boot.\n. Yes, but it doesn't turn anything on.  You'll still need to add the folders you want to share with the TinyCore guest, do the modprobe vboxsf, etc.\n. I think at one point I may have run into something similar and ended up doing a docker cp of the iso file out of the final container instead.  I'll see if I can verify that (probably not till later tonight or tomorrow morning) and then update the instructions if that's the case.\n. ",
    "jayd3e": "@tgross I tried implementing your fix, and I received this error modprobe: module vboxsf not found in modules.dep.  I'm obviously not installing the guest additions correctly to the boot2docker vm, but I'm not sure where I'm going wrong.\n. @tgross nvm, just got it working!\n. @tunix yeah that's the same conclusion I came to.  Creating a new iso is a far easier process imo as well.\n. So I might not have all of the necessary context needed to argue either way, but my take on this, is that if docker supports a feature, it should be made available to all platforms, including OSX.  Docker supports shared volumes, so why wouldn't it be possible on OSX?\n. @steeve so to load the modules, it would just require a VBoxManage command correct?\n. @steeve Data containers totally makes sense for a few use-cases that shared volumes are used for.  However when it comes to using docker for development, volumes are completely necessary.  For example, if I want to develop in  and run my app inside of a docker environment(similar to the way you would use vagrant), then volumes seems like the only feasible way to do that.\n@sfitts beat me to it, it seems.\n. @sfitts ha! +1\n. So I'm a bit confused.  Let's say I want to use this branch right meow, and use boot2docker as though it includes the guest additions out of the box, how would I go about doing that?  Atm I'm using @tgross's method as shown above, but it's annoying b/c it needs to download the entire boot2docker image.  From what I can tell, there should be a way that I can create a boot2docker iso, and distribute that to my team.  Then using a few commands, somehow tell boot2docker to boot up its VM using the iso.  Then I should be able to share folders by issuing VBoxManage commands, no?  I guess I'm looking for a little instruction on the shortest path to install boot2docker using this new branch.  Thanks in advance.\n. @tgross ok awesome, so the boot2docker repo does two things.  It provides a cli to install/interact with the VM running docker, AND it also able to generate the boot2docker.iso correct?  Your Dockerfile and build_docker.sh file just streamline the process of creating an iso with guest additions, no?  This pull request is adding guest additions permanently.  So iso builds from now on, will include guest additions, correct?\n. Cool, makes sense.\n. @tgross so using your gist as you mentioned verbatim, I'm now seeing this really odd stalling issue.  For example, calling docker version will output:\njayd3e ~ $ docker version\nClient version: 0.11.1\nClient API version: 1.11\nGo version (client): go1.2.1\nGit commit (client): fb99f99\nThen stall.  About a minute later, 2014/05/30 09:15:18 Get http://localhost:4243/v1.11/version: EOF is outputted.  My full process was:\n```\ngit clone https://gist.github.com/ad9892dcc86bee922772.git\ncd ad9892dcc86bee922772\nsh build_docker.sh\ncp boot2docker.iso ~/.boot2docker/boot2docker.iso\nboot2docker stop\noptionally called the necessary shared folders commands here\nboot2docker start\n```\n. @mattes your solution worked great for me as well.  I have one question, how would I go about getting shared volumes to work with NFS?  I'm running into some speed issues on a larger project, and I need something faster like NFS.  I feel like I've read everything about this topic, and have still come out confused.\n. ",
    "willkessler": "Our main issue with the Samba approach at my workplace (where macs are used for development) is that we need to access a folder with data that's about 50Gb large (neo4j). That fits fine on the mac drive, but it's not possible to copy it to the VM for access by containers (it won't fit).  At least, as far as I can tell, the device at /dev/sda1 has only 37.4Gb available.\n. Hi Sven, Can you provide slightly more detail? That would help me immensely and the team here at crunchbase could become super happy users...\nWhen I do boot2docker config, I get only:\nUsage /usr/local/bin/boot2docker {init|start|up|save|pause|stop|restart|status|info|delete|ssh|download}\nI tried boot2docker info, which I think is pointing me to boot2docker-vm.vbox, and in there I found:\n<HardDisks>\n    <HardDisk uuid=\"{f1a59ef2-e176-4c22-8ba2-5e32c6dc9993}\" location=\"<myhomedirectory>/.boot2docker/boot2docker-vm.vmdk\" format=\"VMDK\" type=\"Normal\"/>\n  </HardDisks>\n(I excised my home dir path  in the above).\nAre you saying I want to change this setup so that the provisioned HD would be bigger and rerun boot2docker init?\nAlso, when I created developer VMs just using plain vagrant, we mounted the database as an NFS volume. It wasn't super fast but it was fast enough. This seems to be a recipe for doing this.\nOther than speed, is there a big disadvantage to taking the nfs approach? Because even if i were to increase boot2docker virtual disk size, I'd still have to copy the database over to it again every time developers wanted newer data sets (which is practically daily).\nThanks for your help! Cheers.\n. The samba solution doesn't address the issue: we really can't copy the required huge amounts of data to the docker container every time we build it. We need to be able to mount remote volumes reliably on the container. In the cloud, the data volume may not even be local to the host instance.   So I'm looking at NFS and bittorrent too. Going to try latest boot2docker management tool as @SvenDowideit mentions above to get started.\nUPDATE: I just tried installing boot2docker by following the instructions. It fails like this:\nbash-3.2$ boot2docker download\n2014/06/16 09:37:00 Downloading boot2docker ISO image...\n2014/06/16 09:37:01 Latest release is v1.0.0\n2014/06/16 09:37:38 Success: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.0.0/boot2docker.iso\n    to /xxxxxxxxx/.boot2docker/boot2docker.iso\nbash-3.2$ boot2docker up\n2014/06/16 09:37:42 Failed to get machine \"boot2docker-vm\": machine does not exist\nFound one comment by Sven that seems relevant here: https://github.com/unclejack/debian2docker/issues/29\nSECOND UPDATE: Didn't realize I needed to do boot2docker init again after update. That solved the above issue, but read on...\nWhen I visit here: https://github.com/boot2docker/boot2docker-cli  then click on the link to go to MacOSx docs, it's a 404 at http://docks.docker.io/mac/. I figured this was a typo but http://docs.docker.io/mac/  also produces nothing. Are there installation instructions somewhere?\n. The samba solution doesn't address the issue: we really can't copy the required huge amounts of data to the docker container every time we build it. We need to be able to mount remote volumes reliably on the container. In the cloud, the data volume may not even be local to the host instance.   So I'm looking at NFS and bittorrent too. Going to try latest boot2docker management tool as @SvenDowideit mentions above to get started.\nUPDATE: I just tried installing boot2docker by following the instructions. It fails like this:\nbash-3.2$ boot2docker download\n2014/06/16 09:37:00 Downloading boot2docker ISO image...\n2014/06/16 09:37:01 Latest release is v1.0.0\n2014/06/16 09:37:38 Success: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.0.0/boot2docker.iso\n    to /xxxxxxxxx/.boot2docker/boot2docker.iso\nbash-3.2$ boot2docker up\n2014/06/16 09:37:42 Failed to get machine \"boot2docker-vm\": machine does not exist\nFound one comment by Sven that seems relevant here: https://github.com/unclejack/debian2docker/issues/29\nSECOND UPDATE: Didn't realize I needed to do boot2docker init again after update. That solved the above issue, but read on...\nWhen I visit here: https://github.com/boot2docker/boot2docker-cli  then click on the link to go to MacOSx docs, it's a 404 at http://docks.docker.io/mac/. I figured this was a typo but http://docs.docker.io/mac/  also produces nothing. Are there installation instructions somewhere?\n. After a lot of trying, I gave up on boot2docker for now. I'm going with straight-up vagrant as per the posting here http://cjlarose.com/2014/03/08/run-docker-with-vagrant.html.   To help others, here's my Vagrantfile. The directory /shared_vol is shared with the resulting VM via NFS and that can easily be shared with containers with the -v command to docker run.  Vagrant-cachier is really helpful if you have to rebuild your vm several times to get it right-- this definitely takes longer to set up than boot2docker's VM (it's bigger).  I also tweak the memory, nat, etc a bit.  You lose the ability to run docker right at your mac prompt (you have to ssh into the ubuntu vm first) but otherwise, it seems to me to function.\n```\n-- mode: ruby --\nvi: set ft=ruby :\nVAGRANTFILE_API_VERSION = \"2\"\n$script = <<SCRIPT\napt-get update\napt-get install -y curl\ncurl https://get.docker.io/ubuntu/ | sh\nusermod -aG docker vagrant\nSCRIPT\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  # Cache apt-get, bundles, etc. Yay!\n  if Vagrant.has_plugin?('vagrant-cachier')\n    config.cache.auto_detect = true\n  end\nconfig.vm.boot_timeout = 600\n  config.nfs.map_uid = Process.uid\n  config.nfs.map_gid = Process.gid\n  config.vm.box = \"phusion/ubuntu-12.04-amd64\"\n  config.vm.network :private_network, ip: '192.168.33.9'\n  config.vm.synced_folder '/shared_vol', '/shared_vol', type: 'nfs'\n  config.vm.provider 'virtualbox' do |vb|\n    vb.customize ['modifyvm', :id, '--memory', '8192']\n    vb.customize ['modifyvm', :id, '--name', 'dockervm']\n    vb.customize ['modifyvm', :id, '--cpus', '4']\n  end\nfor i in 49000..49900\n    config.vm.network \"forwarded_port\", guest: i, host: i\n  end\n  config.vm.provision \"shell\", inline: $script\nend\n```\nLastly, if it helps anybody else using Docker, here's the Dockerfile I'm using to spin up neo4j-1.9.7-enterprise.  Couple key takeaways: under Docker, you have to start neo4j with neo4j console, not neo4j start because going to daemon mode under docker seems to cause neo4j to crash.  Also, I'm using the volume I nfs-shared in the Vagrant file, above, to access neo's database by tweaking neo's configuration file (assuming there's a data dir in the shared_vol).  This Dockerfile assumes you have neo4j's tarball is in the same directory with the Dockerfile.\n```\nFROM ubuntu:precise\nADD . /src\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ precise main restricted\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ precise main restricted\" >> /etc/apt/sources.list\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN apt-get -qq update\nRUN apt-get -y install software-properties-common python-software-properties wget lsof\nRUN add-apt-repository ppa:webupd8team/java\nRUN apt-get -qq update\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections\nRUN apt-get -y install oracle-java7-installer\nWORKDIR /opt\nRUN tar xzf /src/neo4j-enterprise-1.9.7-unix.tar.gz\nRUN mv neo4j-enterprise-1.9.7 neo4j\nWORKDIR /opt/neo4j/conf\nRUN cat neo4j-server.properties | sed \"s/#org.neo4j.server.webserver.address/org.neo4j.server.webserver.address/g\" > neo4j-server.properties.open\nRUN mv neo4j-server.properties.open neo4j-server.properties\nRUN cat neo4j-server.properties | sed \"s/org.neo4j.server.database.location=data\\/graph.db/org.neo4j.server.database.location=\\/shared_vol\\/data\\/graph.db/g\" > neo4j-server.properties.db\nRUN mv neo4j-server.properties.db neo4j-server.properties\nEXPOSE 7474\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"-c\", \"/opt/neo4j/bin/neo4j console\"]\n```\nBuild it with:docker build -t neoj4 . \nFinally, running neo4j with this entire setup is simple:\ndocker run -d -p 49160:7474 --privileged -v /shared_vol/data:/data neo4j\nThe --privileged flag may not be required.\n. After a lot of trying, I gave up on boot2docker for now. I'm going with straight-up vagrant as per the posting here http://cjlarose.com/2014/03/08/run-docker-with-vagrant.html.   To help others, here's my Vagrantfile. The directory /shared_vol is shared with the resulting VM via NFS and that can easily be shared with containers with the -v command to docker run.  Vagrant-cachier is really helpful if you have to rebuild your vm several times to get it right-- this definitely takes longer to set up than boot2docker's VM (it's bigger).  I also tweak the memory, nat, etc a bit.  You lose the ability to run docker right at your mac prompt (you have to ssh into the ubuntu vm first) but otherwise, it seems to me to function.\n```\n-- mode: ruby --\nvi: set ft=ruby :\nVAGRANTFILE_API_VERSION = \"2\"\n$script = <<SCRIPT\napt-get update\napt-get install -y curl\ncurl https://get.docker.io/ubuntu/ | sh\nusermod -aG docker vagrant\nSCRIPT\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  # Cache apt-get, bundles, etc. Yay!\n  if Vagrant.has_plugin?('vagrant-cachier')\n    config.cache.auto_detect = true\n  end\nconfig.vm.boot_timeout = 600\n  config.nfs.map_uid = Process.uid\n  config.nfs.map_gid = Process.gid\n  config.vm.box = \"phusion/ubuntu-12.04-amd64\"\n  config.vm.network :private_network, ip: '192.168.33.9'\n  config.vm.synced_folder '/shared_vol', '/shared_vol', type: 'nfs'\n  config.vm.provider 'virtualbox' do |vb|\n    vb.customize ['modifyvm', :id, '--memory', '8192']\n    vb.customize ['modifyvm', :id, '--name', 'dockervm']\n    vb.customize ['modifyvm', :id, '--cpus', '4']\n  end\nfor i in 49000..49900\n    config.vm.network \"forwarded_port\", guest: i, host: i\n  end\n  config.vm.provision \"shell\", inline: $script\nend\n```\nLastly, if it helps anybody else using Docker, here's the Dockerfile I'm using to spin up neo4j-1.9.7-enterprise.  Couple key takeaways: under Docker, you have to start neo4j with neo4j console, not neo4j start because going to daemon mode under docker seems to cause neo4j to crash.  Also, I'm using the volume I nfs-shared in the Vagrant file, above, to access neo's database by tweaking neo's configuration file (assuming there's a data dir in the shared_vol).  This Dockerfile assumes you have neo4j's tarball is in the same directory with the Dockerfile.\n```\nFROM ubuntu:precise\nADD . /src\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ precise main restricted\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ precise main restricted\" >> /etc/apt/sources.list\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN echo \"deb-src http://archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN apt-get -qq update\nRUN apt-get -y install software-properties-common python-software-properties wget lsof\nRUN add-apt-repository ppa:webupd8team/java\nRUN apt-get -qq update\nRUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections\nRUN apt-get -y install oracle-java7-installer\nWORKDIR /opt\nRUN tar xzf /src/neo4j-enterprise-1.9.7-unix.tar.gz\nRUN mv neo4j-enterprise-1.9.7 neo4j\nWORKDIR /opt/neo4j/conf\nRUN cat neo4j-server.properties | sed \"s/#org.neo4j.server.webserver.address/org.neo4j.server.webserver.address/g\" > neo4j-server.properties.open\nRUN mv neo4j-server.properties.open neo4j-server.properties\nRUN cat neo4j-server.properties | sed \"s/org.neo4j.server.database.location=data\\/graph.db/org.neo4j.server.database.location=\\/shared_vol\\/data\\/graph.db/g\" > neo4j-server.properties.db\nRUN mv neo4j-server.properties.db neo4j-server.properties\nEXPOSE 7474\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"-c\", \"/opt/neo4j/bin/neo4j console\"]\n```\nBuild it with:docker build -t neoj4 . \nFinally, running neo4j with this entire setup is simple:\ndocker run -d -p 49160:7474 --privileged -v /shared_vol/data:/data neo4j\nThe --privileged flag may not be required.\n. @mattes I saw your blog post independently but had some difficulty understanding it. In addition, creating my own iso for boot2docker seems laborious and would make it difficult to upgrade boot2docker, IMHO.  I'm going to use vagrant with NFS for now... note, that's not perfect, because I can't seem to get Vagrant nfs exports to allow chown/chgrp from the VM side (looks like no_root_squash is ignored or I just don't have the right export parameter), so this means persisting a mysql container's data on NFS, for instance, is difficult (because mysql wants to chown during setup).\n. ",
    "LordFPL": "Excellent ! :+1: \nI admit it : i'm lazy... and think guest additions must be in future official releases.\n. ",
    "harrykao": "I worry that volume containers make it too easy to lose your data. For example, I sometimes do this to clean up old containers: docker rmdocker ps -aq``. If I had a non-running volume container, the data is now gone or at best tenuously connected to another container. Or the VM could blow up and destroy everything.\nDoes anyone else share these concerns or am I overlooking something?\n. I worry that volume containers make it too easy to lose your data. For example, I sometimes do this to clean up old containers: docker rmdocker ps -aq``. If I had a non-running volume container, the data is now gone or at best tenuously connected to another container. Or the VM could blow up and destroy everything.\nDoes anyone else share these concerns or am I overlooking something?\n. FWIW, I'm with guest additions camp. I've been using @mattes ISO (thanks for that!) because I don't think the samba approach is suitable for us for the reasons I mentioned above.\n. ",
    "ejholmes": "+1 on @mattes custom boot2docker.iso image. Docker integration feels pretty seamless with it and makes working with fig really easy.\n. +1 on @mattes custom boot2docker.iso image. Docker integration feels pretty seamless with it and makes working with fig really easy.\n. ",
    "larrycai": "+1, it is the great feature for people to work in git-bash in windows and compile and deploy in docker\n. I guess the 1.1.0 link shall be\nhttp://static.dockerfiles.io/boot2docker-v1.1.0-virtualbox-guest-additions-v4.3.12.iso\nOn Tue, Jul 8, 2014 at 7:28 AM, Alex Z. Li notifications@github.com wrote:\n\nawesome! thanks @mattes https://github.com/mattes\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/284#issuecomment-48254590\n.\n\n\nTrue software development embraces consistent inconsistency.\nblog: http://larrycaiyu.com/blog (en), http://larrycaiyu.com (chinese)\n. @mattes , weird, I saw the link was incorrect in gmail (auto notification)\n(see attachment), while it looks correct in github\nOn Tue, Jul 8, 2014 at 10:31 AM, Matthias Kadenbach \nnotifications@github.com wrote:\n\n@larrycai https://github.com/larrycai oh, where did you find the old\nlink?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/284#issuecomment-48265584\n.\n\n\nTrue software development embraces consistent inconsistency.\nblog: http://larrycaiyu.com/blog (en), http://larrycaiyu.com (chinese)\n. I use windows vbox iso, thx to @mattes though there is one problem for me, as @mitar said, the changes in shared folder will not be noticed in docker container, it is quite tricky for starters, please add this notice for vbox edition.\nI hope we can add one environment below like into boot2docker\nBOOT2DOCKER_SHARED_FOLDER=vbox|standard|...\nThis can make vbox is optional, and user can switch to different version when he wants.\n1. During installation phase, it can be optional in GUI, the selection is put into this variable.\n2. in upgrade, this environment can be used to choose the real target source by boot2docker download command\n. I met this problem in latest boot2docker (1.0.1) as well in Windows 7 Host. Using company network, so I need to fetch the host DNS information inside docker container.\nAfter follow the suggestion @SvenDowideit , refresh dhcp and restart the docker service\n$ sudo udhcpc\n$ sudo /etc/init.d/docker restart\nThe new started container works fine. \n. In 1.1.0 / Windows7, during the course, 20% of the students had this problem. Any chance to fix this in coming release ?\n. In 1.1.0 / Windows7, during the course, 20% of the students had this problem. Any chance to fix this in coming release ?\n. @pandrew I know the share folder solution. I want the boot2docker VM can contains some data for permanent, for example : the private key\nThen all the docker container can share the private key by using volume.\ncreate home can simulate the unix environment in boot2docker\nI don't want to use samba solution or vbox guest optional solutions in this case.\n. Noticed that IS/IT just enable intelligent/transparent proxy, it is not related with docker.\n. ",
    "c4milo": "I haven't had any issues with vbox and guest additions so far. Performance is not as good as in VMware, but it is aceptable. Besides, it is better to have this working that not working at all. At least, until https://github.com/dotcloud/docker/issues/4023 is finished and released.  \n. @SvenDowideit @tianon the fact here is that boot2docker does not fully work out of the box in OSX. Including guest additions is a pretty fairly workaround.\n. Downloading the new boot2docker cli fixed this issue: https://github.com/boot2docker/boot2docker-cli/releases/download/v1.0.0/boot2docker-v1.0.0-darwin-amd64\n. I had the same issue and downloaded the new boot2docker management tool which fixed it: https://github.com/boot2docker/boot2docker-cli/releases/download/v1.0.0/boot2docker-v1.0.0-darwin-amd64\n. Yes\u2014\nSent from Mailbox\nOn Thu, Jun 12, 2014 at 12:06 PM, Ivan Glushkov notifications@github.com\nwrote:\n\n@c4milo here I described that usage, it didn't work for me either.\nThough, I built it from sources.\nYou used that binary to init and up vm the same way?\nReply to this email directly or view it on GitHub:\nhttps://github.com/boot2docker/boot2docker/issues/395#issuecomment-45912099\n. \n",
    "christianrondeau": "I had a very hard time getting started with Docker on Windows because of that (http://stackoverflow.com/questions/24196956/how-to-deploy-dockerfile-and-application-files-to-boot2docker)\nPutting aside performance concerns (which I didn't experience myself), being able to 1) checkout and work on Windows, and when needed spawn a Docker container without having to first copy my project files and 2) Reduce the amount of steps needed to get someone else to use and learn Docker on an existing solution makes it worth potential penalties.\nIn any case, one can still use Samba and not mount any file share.\nI believe it would make a big difference in the learning curve.\nSide note: thank you @mattes for filling that gap in the meantime.\n. ",
    "luebken": "+1 for an immediate solution like @mattes suggested:\nboot2docker download vbox-guest-additions\nFor my development @mattes ISO works great. And making it more accessible would help people getting started. You could insert a disclaimer with the drawbacks.\n. +1\nThe IP is missing.\nAlso try:\nboot2docker ip\n2014/06/11 22:56:01 exit status 255\nFailed to get VM Host only IP address.\n    Was the VM initilized using boot2docker?\nAnd ssh doesn't work anymore\nboot2docker ssh\nssh_exchange_identification: Connection closed by remote host\n2014/06/11 22:56:12 exit status 255\nThe only workaround that works for so far is boot2docker delete and boot2docker init\n. +1\n. ",
    "xbeta": ":+1: This thread is tl;dr for me, but I think we really should opt-in for vbox guest additions for mounting volume from mac box to the containers\n. ",
    "alex-zige": "I'm having problem with v1.1.0 with the previous iso. \n client and server don't have same version (client : 1.13, server: 1.12) \ndo you have iso that works with 1.1.0 by any chance? \n. awesome! thanks @mattes \n. @gansbrest @dduportal Yeah. You are not alone. Had the same problem. :(\n. ",
    "p3k": ":+1:\n. :+1:\n. ",
    "keymon": ":+1: it is an obvious win to ease development workflows. \nAs @mattes suggests, boot2docker can provide a easy and scriptable way to install the vbox additions. \n. :+1: it is an obvious win to ease development workflows. \nAs @mattes suggests, boot2docker can provide a easy and scriptable way to install the vbox additions. \n. @mitar is right, the only risk is that boot2docker iso contains malicious code... but if the official boot2docker.iso includes the vbox modules, we assume that is OK because the user already  boot2docker-cli the host (so it has access to the /Users already)... and then we assume that you trust boot2docker. \nThat is why it is important that boot2docker provide a way to get the vbox drivers.\n. Other option are SSH tunnels. \nThis script can do the magic adhoc (requires jq, brew install jq):\ndocker ps  -q | xargs -n 1 docker inspect  | jq '.[0].NetworkSettings.Ports +{} | map(select(. != null)[0].HostPort) | map(\"-L \\(.):localhost:\\(.)\") ' | sed -n 's/.*\"\\(.*\\)\".*/\\1/p' |xargs boot2docker ssh -N\nIf you want to get a command that can run in foreground, run this. It will print a SSH command which can be run after starting boot2docker.\ndocker ps  -q | xargs -n 1 docker inspect  | jq '.[0].NetworkSettings.Ports +{} | map(select(. != null)[0].HostPort) | map(\"-L \\(.):localhost:\\(.)\") ' | sed -n 's/.*\"\\(.*\\)\".*/\\1/p' |xargs echo boot2docker ssh -f -N\n. Sure, but I thought that's why this was called workarounds, to propose a temporary suboptimal solution ;)\n. Yep, I was planning to learn Go as soon as I got time, it looks a nice task\nto do so :)\n\nH\u00e9ctor Rivas\nOn Thu, Jul 31, 2014 at 9:06 AM, Sven Dowideit notifications@github.com\nwrote:\n\nyup, sadly people keep dumping more things into it, and never writing the\nlittle bit of code that fixes it. In this case, it was the jq stuff that\ntipped me over to, hey, why not write 6 lines of golang?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/452#issuecomment-50729037\n.\n. \n",
    "thaJeztah": "@shyke :thumbsup: for a nice summary. Regarding the downside of Guest additions; maybe some way to inform users that performance may be suboptimal and point to some documentation to explain on the work that is in progress?\n. @shyke :thumbsup: for a nice summary. Regarding the downside of Guest additions; maybe some way to inform users that performance may be suboptimal and point to some documentation to explain on the work that is in progress?\n. @nathan-zhu no single solution yet. The performance issue isn't related to Docker itself, just the VBox guest additions. You can find some alternative approaches in the discussion above though, that might help in your situation.\nHowever, the Docker 1.7 \"experimental build\" offers \"Volume Drivers\" (see https://github.com/docker/docker/blob/master/experimental/plugins_volume.md), which could potentially open up some possibilities (for example, see https://github.com/docker/docker/issues/13420#issuecomment-111346689)\n. Have you tried uninstalling OS X? The log entries disappeared on my side when I did that :smile_cat: \n. +1 on option 3\n. +1 on option 3\n. @SvenDowideit Don't know if b2d works on them, but maybe add (a note to add) Parallels Desktop to that?\n. I really hope this will be included in the default install; to be able to 'enter' a container, without having to install sshd.\n. Does this also cover Windows installations?\n. @SvenDowideit doh! Stupid. Thought I had seen someone looking for ways to remove leftovers/traces on Windows as well, but a) that was probably another ticket and b) yes, of course there's the uninstaller.\n. @cimbriano the boot2docker uninstaller for OS X can be found here; https://github.com/boot2docker/osx-installer/blob/master/uninstall.sh\nHowever, (afaik) the installer is the preferred way to install boot2docker on OS X; The homebrew formula is not maintained by boot2docker itself and uses the boot2docker-cli (see source) script which will be deprecated in the near future (see the boot2docker-cli README).\nSo, unless you have a strong reason to use homebrew instead, I'd stick with the official installer.\nHope this helps!\n. Probably getting way off topic, but NGINX-proxy is really good, we've been using it for a few months now and no problems so far. Was particularly interested in it because of its simplicity. SkyDock, SkyDNS, etcd sure are good, but require a lot more setting up.\n. @brikis98 Excellent article! You should submit it for the Docker Weekly newsletter (sorry, don't know where to do that, but I can try and find out if you need)\n. @brikis98 that could well be the way to do that. If I hear another way, I'll let you know :+1:\n. @ghoffer there were some problems with the download server(s) a few hours ago, so this may have been what's causing that for you. Could you try again and see if you're able to download the client again?\n. @kalanbates did it solve your problem? (Checking to see if this issue can be closed)\n. If I understand correctly, grunt watch uses inotify to check for changes, but vboxsf doesn't support this (https://www.virtualbox.org/ticket/10660?cversion=0&cnum_hist=1). So possibly grunt will have to scan all files to check for modifications?\n. I think it's best to search in the other issues about this topic. Depending on your situation, there may be some workarounds, but not sure.\nIn my personal setup (but this is beyond the scope of boot2docker), I don't use a shared folder, but have a SSHD helper-container and let my IDE sync changes to the container over SSH. The downside of course is having the source in two locations, but performance-wise it just works a lot better.\n. >  I am mounting it with docker run -v, this shouldn't make a considerable difference should it?\nActually, that could make a difference. boot2docker currently uses vbox guest additions to mount folders on the OS X machine inside the boot2docker virtual machine, which is infamously slow. Some existing issues on this topic; https://github.com/boot2docker/boot2docker/issues/631 https://github.com/boot2docker/boot2docker/issues/593\nYou could try how performance is when not bind-mounting the app (ie, not using -v) to narrow down the problem? \n. Thanks for reporting back. If you agree, can you close this issue (to keep the issue tracker clean)?\nThe maintainers are aware of the performance issues with vbox guest additions. Basically, including them was a stop-gap solution until a better way was found to achieve this.\nFor now, I don't think there's a direct solution for your problem, but you may find some alternative approaches in the other issues.\n. Thanks for reporting back. If you agree, can you close this issue (to keep the issue tracker clean)?\nThe maintainers are aware of the performance issues with vbox guest additions. Basically, including them was a stop-gap solution until a better way was found to achieve this.\nFor now, I don't think there's a direct solution for your problem, but you may find some alternative approaches in the other issues.\n. Why don't you give it a try? https://beta.docker.com - you can install it next to boot2docker / VirtualBox, so nothing lost. You need an invite code, but last I heard, those are arriving pretty quick after you registered now\n. Why don't you give it a try? https://beta.docker.com - you can install it next to boot2docker / VirtualBox, so nothing lost. You need an invite code, but last I heard, those are arriving pretty quick after you registered now\n. Hm, not sure if there's ways to \"speed it up\", but I know they're still working on improvements. if you have more information about your exact use case (e.g. Number of files, exactly what is slow), probably best to post on the Docker for Mac beta forum\n. Hm, not sure if there's ways to \"speed it up\", but I know they're still working on improvements. if you have more information about your exact use case (e.g. Number of files, exactly what is slow), probably best to post on the Docker for Mac beta forum\n. @SvenDowideit is it in the docs, running on bare metal? :smiley:\n. @SvenDowideit is it in the docs, running on bare metal? :smiley:\n. Looks like you forgot to set the environment-variables, as instructed in the output of boot2docker start;\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.105:2376\n    export DOCKER_CERT_PATH=/Users/mark/.boot2docker/certs/boot2docker-vm\n    export DOCKER_TLS_VERIFY=1\nAccording to that, the DOCKER_HOST is at 192.168.59.105:2376, but because you didn't set the environment-variables, the client is trying to connect to 192.168.59.104:2376;\nFATA[0032] An error occurred trying to connect: Get https://192.168.59.104:2376/v1.17/version: dial tcp 192.168.59.104:2376: i/o timeout\n. Thanks for reporting back, @markseddon, glad you got it working.\n@senecahinds are you still having this problem or can this issue be closed?\n. Thanks for reporting back, @markseddon, glad you got it working.\n@senecahinds are you still having this problem or can this issue be closed?\n. @rwatts3 it's better to open a separate issue for that; but check if one exists first (there may be an existing issue already).\nYou may be interested in Docker Machine, which will eventually replace the Boot2Docker tools, and the documentation for Docker Machine already has a better description of the environment variables; https://docs.docker.com/machine/. The links for providing feedback on Docker Machine can be found here; https://docs.docker.com/machine/#getting-help\n. Actually (was about to post that); there's a more detailed section on that topic linked in the documentation; https://docs.docker.com/userguide/dockerlinks/#network-port-mapping-refresher\n\nthe -P flag was used to automatically map any network ports inside it to a random high port from the range 49153 to 65535 on our Docker host\n. Additionally, if you want to know which port it was mapped to, have a look at https://docs.docker.com/reference/commandline/cli/#port and (more advanced) https://docs.docker.com/reference/commandline/cli/#inspect\n. I think the issue numbers should be changed to full (https://....) links to the GitHub issue tracker. I know Github does that automatically when viewing, but that won't work when reading the document locally. Also not sure what happens on forked repos (but that's less important).\n\nI like this very much!\nOh, I think a note should be added to CONTRIBUTING.md to explain who, when and how the document should be updated\n. @SvenDowideit that's interesting! Looks like your README is incomplete \n\nTo use the plugin when mounting a volume, run:\nLicense\nMIT\n\nI tried, but :wink: :\nroot@e0b10a13dcf8:/# License MIT\nbash: License: command not found\n. I wonder if this is still an issue; I think the releases are now better coordinated, for example, Boot2Docker 1.7.0-rc3 was available 6 minutes after Docker 1.7.0-rc3; https://github.com/docker/docker/pull/13528#issuecomment-111608710.\n. @leifhanack are you sure? 1.7 was released an hour ago; https://github.com/boot2docker/boot2docker/releases\n. @leifhanack that's unfortunate, @tianon missed the GitHub notification that 1.7 was merged, resulting in a slight delay, so I pinged him on IRC, apologies for the inconvenience there.\n. @glaucio-melo-movile it's possible you somehow only updated your client, but not the virtual machine; this doesn't sound like the \"race\" described here, because docker 1.8.x has been available for a while (and so is boot2docker with docker 1.8.x)\nTry updating the VM by running docker-machine upgrade <yourmachinename> or boot2docker upgrade (if you're still using boot2docker-cli)\n. Perhaps check VBoxManage.exe list hostonlyifs. Does this look related? https://github.com/boot2docker/boot2docker/issues/473#issuecomment-69011695\nAlso check for existing issues, I think there are some other issues reported that may contain useful information to debug.\n. @jeffmendoza anything interesting in the system logs that might provide more information? Are you able to test if the same happens if you only perform a regular VirtualBox installation (without boot2docker)?\nThat might narrow it down to an issue in VirtualBox, or VirtualBox + Boot2Docker\n. @jeffmendoza That's useful. I kinda suspected this to be an issue with VirtualBox. Perhaps a note should be added to the docs to state that VirtualBox currently isn't compatible with Windows 10.\nare you willing to make a pull request?\n. @jeffmendoza That's useful. I kinda suspected this to be an issue with VirtualBox. Perhaps a note should be added to the docs to state that VirtualBox currently isn't compatible with Windows 10.\nare you willing to make a pull request?\n. Is the /data/projects partition a partition inside the Virtual Machine, or on OS X?\nIf it's on OS X, then I think the problem is that boot2docker only shares the OS X Users/[username]/ directory with the boot2docker Virtual Machine (via VBox Guest Additions / Shared folder).\nAny other directory should be present inside the Virtual Machine. The reason Docker doesn't produce an error, is that Docker will automatically create the /data/projects directory if it doesn't exist inside the virtual machine.\n. Is the /data/projects partition a partition inside the Virtual Machine, or on OS X?\nIf it's on OS X, then I think the problem is that boot2docker only shares the OS X Users/[username]/ directory with the boot2docker Virtual Machine (via VBox Guest Additions / Shared folder).\nAny other directory should be present inside the Virtual Machine. The reason Docker doesn't produce an error, is that Docker will automatically create the /data/projects directory if it doesn't exist inside the virtual machine.\n. @chiedojohn perhaps you should create a pull request to add this as a document to the docs?\n. @chiedojohn perhaps you should create a pull request to add this as a document to the docs?\n. :heart: best issue of the day!\n. Can you edit the description on this page so that it includes the text \"closes #821\"? Otherwise GitHub won't automatically close the issue if this is merged. (GitHub doesn't look at the title of the pull-request)\n. Thanks!\nFor reference; this came up in https://github.com/boot2docker/boot2docker/issues/817#issuecomment-91617172 and I suggested creating a pull-request (in case it's helpful to other users)\n. Thanks!\nFor reference; this came up in https://github.com/boot2docker/boot2docker/issues/817#issuecomment-91617172 and I suggested creating a pull-request (in case it's helpful to other users)\n. @nathanleclaire good suggestion, forgot that machine was also working on this!\n. @nathanleclaire I've seen many requests in this area. Just think that many people are used to boot2docker and haven't really looked at \"machine\" yet :smile:\nSo anyone wanting this; join @nathanleclaire on his mission :)\n. Docker 1.6 (which is scheduled to be released today) will be the first release with a native windows client binary; you should be able to download that from the docker website. There are still some rough edges with shell handling, but it is shaping up nicely thanks to a lot of effort from the Microsoft contributors!\n. @ereOn Well the 1.6 release is still being tested, so if all goes well, it should be released (famous last words...)\nI think the Boot2Docker maintainers will release at the same time\n. @sunhaolin note that by default, only the c:\\users directory is shared with the boot2docker virtual machine, any other directory is not shared with the VM by default, so doesn't exist inside the VM. See the README.md for more information\n. @danielo515 correct; you need to understand that the -v /some/path:/container/path option mounts /some/path from the host that the docker daemon runs on. When using boot2docker, that host is the Virtual Machine. Your c:\\ and h:\\ drive are on your Windows host, not in the Virtual Machine, so when mounting those, the docker daemon creates an empty directory (because the path you're mounting doesn't exist), and mounts that inside the container;  as a result, you get an empty directory mounted in the container.\nBecause you sometimes want to mount files from the Windows host inside a container, boot2docker uses a \"trick\"; the c:\\Users directory is mounted inside the Virtual Machine (at the /c/Users directory) using \"VirtualBox guest additions\". So when you use -v c:\\Users\\something:/container/path, you're actually bind-mounting /c/Users/something from the Virtual Machine. That path happens to be mounted from the Windows machine into the Virtual Machine, so you'll see your Windows files there.\nIt's a bit complicated, so, hope it's clear what's happening :smile:\n. @danielo515 yes, you can add additional paths, but that has to be done manually, some instructions can be found here; https://github.com/boot2docker/boot2docker/#virtualbox-guest-additions\nAlso, you may be interested in the Docker for Windows beta; https://beta.docker.com\n. If, for some reason, you're mounting a volume, not a bind-mounted directory, then the contents of the container image is copied to the volume on first use (if the volume is empty). If you're running boot2docker / Docker ToolBox, syncing should be handled by VirtualBox sharing (if properly configured); not sure what could case syncing to not work with the current information.. Nice! So overlay and btrfs support as well?\n. Hm, sounds like I should be pestering DigitalOcean to add b2d as an option :)\n. @tianon no worries, I won't, was just fooling around (although I hope they have a 4.x kernel soon, haven't checked recently) :smiley: \n. Looks like this is related to https://github.com/docker/docker/issues/12751#issuecomment-96288101 and https://github.com/docker/docker/issues/12590#issuecomment-95370211\n\n[...] It's happening due to msys, it converts unix paths to windows paths before passing them to docker.exe. In this case, that's not a docker bug. (it's not a msys bug either, it's by design.)\nSee comments in #12590 to run it correctly, or use cmd.exe or powershell to not to have this problem.\n. @cgcgbcbc You're welcome; I remembered it because the behavior surprised me as well.\n. Thanks, LGTM\n\nI did notice that there are various other \"notes\" in this document not following the standard formatting, perhaps something for a follow up PR\n. Thanks, LGTM\nI did notice that there are various other \"notes\" in this document not following the standard formatting, perhaps something for a follow up PR\n. There are various existing issues covering this and this is a known limitation of the way directories on your host are shared with the boot2docker VM.\nThese issues may give you some hints; https://github.com/boot2docker/boot2docker/issues/593, https://github.com/boot2docker/boot2docker/issues/64\nI think it's best to close this issue, because it's a duplicate of other issues\n. @ahmetalpbalkan ^^ is that a known issue on your side?\n. I'm not very profound in working with Boot2Docker, but you may check the \"persistent partition\" section here https://github.com/boot2docker/boot2docker/blob/master/doc/FAQ.md\n. @edmorley honestly, no real idea here :smile: I'm quite a B2D n00b (should be working on that), I just pointed to that section, because I know some people weren't aware of that :wink:\n. Well, the maintainers here welcome pull-requests :)\n(Hm.. talking of which, I can't find a CONTRIBUTING.md)\nBut seriously, it sometimes takes a \"fresh\" user to spot omissions in the documentation, and (although I'm really a n00b here), I know it's much appreciated to correct things by creating a pull-request. Many times a pull-request makes it easier to discuss as well\nSo if you have the chance to create one, :+1: \n. Thanks @legal90 and (Parallels) for this! Looks like I should upgrade my Parallels license after all :smile: \n. \\o/ great!\n. Think this can be closed @tianon @SvenDowideit\n. Okay, that just made me LOL\n. LOL twice in a day?\n. The original PR has been rebased, so this is probably not needed anymore https://github.com/boot2docker/boot2docker/pull/954#issuecomment-118334426\n. think this was created by mistake\n@LibLogic could you close this issue?\n. ping @tianon any ideas on this one, could be helpful to get more testers for experimental features :-)\n. ping @tianon @SvenDowideit could you please review this? We'd like to have this in 1.10 if possible\n. ping @legal90 perhaps you have an idea?\n. @kane-c you may also be interested in https://blog.docker.com/2016/03/docker-for-mac-windows-beta/ if you didn't register yet (beta.docker.com)\n. What needs to be updated in boot2docker? The linked issue talks about 1.10.3 binaries that are built with an incorrect version of Go (the official 1.10.3 binaries in the docker repository are developed for, and tested against a different Go version, because there were some known issues with Go 1.6 and the docker 1.10.3 codebase); Docker 1.12 has a patch to allow building it on Go 1.6, while keeping compatibility with older clients (see https://github.com/docker/docker/pull/22000)\n. Thanks for clearing that up @tianon - so this has always been a requirement, just not checked in the check-config.sh \ud83d\udc4d \ud83e\udd17 \u2764\ufe0f . I think this should be #!/bin/bash (note the exclamation mark). If \"bash\" is not strictly nescessary, #!/bin/sh is generally preferred (but that's nit-picking)\n. ",
    "nathanleclaire": "@SvenDowideit raises a good point with the security concern (don't just share your SSH keys willy nilly etc.).\nWhat if we gave users option to set up shared folder themselves with boot2docker share command?\nThen, if you don't care about the security implications of mounting ~ in the VM, you can do:\nsh\nboot2docker share ~\nand docker run -v /host:/container will \"Just Work\" anywhere within your home directory.\nOr if you prefer, you can set up a little \"workspace\" folder for doing Docker work that involves this usage of -v:\nboot2docker share ~/docker-workspace\nThen, you aren't forced into sharing secrets or anything that you haven't consciously put into that directory (~ usually gets littered with dotfiles etc.).\nYou wouldn't be forced into doing anything if you don't do it explicitly, so you can use workarounds like a Samba volume container if you like those or they suit your usecase better, and it's just one extra command (on top of boot2docker init etc.) for the users who want convenience over security.  Not too much mental overhead.  I think you may need to reboot the VM after adding a shared folder, though, so there's that.\n. First off:  Everyone, @SvenDowideit is very correct.  You really do not want to share your SSH keys, other secrets, and essentially anything in your home directory with containers running arbitrary images.  Arbitrary images are from the Internet and it is important to treat the public Internet as if everyone on it is actively trying to kill you (steal your bank passwords, etc.).  \nThe tradeoff between security and usability is 100% worth it here: it'd be very convenient to log into any account that you have using a password of \"password\" but that doesn't mean it's a good idea.\n\nMeanwhile, by choosing to implement the Desktop file sharing to default to a safe ~/docker-share , that doesn't stop users who think they know what they are doing (I'm avoiding judging if its true or not) from changing the default.\n\nSo Sven, if I understand you correctly, you are in favor of this (~/docker-share mounted where volumes will \"just work\")?  Because I am pretty +1 on this.  It seems like a reasonable tradeoff, and personally I'd be happy to do all of my Dockerized work (which involves volumes at least) inside of a pre-prescribed directory.\nAdditionally I'm starting to come around to the samba container method more for instances where I can control the volume commands.  However things where -v is out of your control (e.g. the Docker build scripts) it is still a little annoying.  For the shorter/medium term some ideas:\n- Publishing the existing blog post on using samba container method (in particular there is no mention of e.g. \u2318-K to connect to the server which would stop me dead in my tracks if I was just following our existing documentation).  Or I could look into merging that post into the official doc.  Let me know what you think @SvenDowideit .  Additionally:\n- We could consider a boot2docker samba (or better named) command to group the commands to \"make it work\" into one unified thing?  I wonder if perhaps users get lost in the four or so steps to get the samba method working.\n. > To be clear: sharing your home directory with the virtual machine does not mean arbitrary images have access to anything in your home directory. They have access to what you choose to give them access to in your home directory, in the same way that running Docker on Linux works.\nSure, but that doesn't stop users from accidentally allowing this with a docker run -v $HOME:/free_secrets command concealed in a run.shscript, or copy-pasted from the Internet by users who aren't familiar with the CLI, etc.\nI'll move discussion over to the other issue.\n. > Pardon my ignorance but if Docker running on Linux directly allows you to share whatever (what I understand from @bfirsh comment above) and therefore is OK running nasty run.sh scripts, why is this boot2docker's problem? Isn't it more a security issue with Docker itself that should be addressed there and not here?\n@wavded Well, this is why Sven says he runs boot2docker when working with Docker in Linux as well.  It provides an additional layer of security should something wonky happen.  Additionally on Linux you have to deliberately add the user to the docker group to run without sudo, on Mac/Windows a lot of this kind of thing is abstracted away from users, thus making them less aware of the risks.\n\nYou cannot protect people who are willing to copy and paste from the internet. It is outside the info sec concerns of any project.\n\n@1mentat  Sure you can.  This is why Facebook attempts to mitigate attacks made by tricking people into copy-pasting malicious JavaScript into their URL bar.  Just because someone will always fall for tricks doesn't mean you shouldn't even try.  Even people who know better copy-paste commands and code from the Internet from time to time.  Not to mention that's not the only attack surface, there are a huge variety of attacks and if a Docker exploit comes out tomorrow we're all going to be very glad we have a VM sitting between Docker and our \"real\" computer.\n\nin any computer security discussion, the first thing is to define a threat model. Because, will boot2docker protect users against NSA as well?\n\nIf only.\nKeep in mind everyone that most likely the solution implemented will allow you to share your home directory if you want to, but it won't do that by default.  Being vulnerable should be \"opt-in\" not \"opt-out\".\n. Is the new version / alternative in boot2docker-cli?  What will it be?\n. Is the new version / alternative in boot2docker-cli?  What will it be?\n. @SvenDowideit You mean the script to unload and reload the kernel extensions?  I can create a writeup on how to use it, however I'm not 100% sure it would help with the issues listed here.\n@henter @piclez Are you able to open VirtualBox and see the VM running?\n. That being said:\nsh\nsudo /Library/Application\\ Support/VirtualBox/LaunchDaemons/VirtualBoxStartup.sh restart\nhas resolved Virtual Box issues in the past for me.  But mine were related to Darwin kernel extensions misbehaving, and it looks like the issues mentioned by @piclez has to do with a misconfigured host-only network.\n. Followup:  I just upgraded from an older version (0.11 I think) on my Mac laptop to 1.0, and I attempted to use the boot2docker installer.  I rm -red $(which boot2docker) and ~/.boot2docker first before re-installing, but the installer bombed out (said that it failed) with no useful errors in the logs.  \nI still got the boot2docker binary installed on my system so I was able to run boot2docker status but it returned:\nsh\n2014/06/19 10:08:25 Failed to get machine \"boot2docker-vm\": exit status 126\nVirtualBox also wouldn't start up and gave me an error.\nRunning:\nsh\n~$ sudo /Library/Application\\ Support/VirtualBox/LaunchDaemons/VirtualBoxStartup.sh restart\nUnloading VBoxUSB.kext\nUnloading VBoxNetFlt.kext\nUnloading VBoxNetAdp.kext\nUnloading VBoxDrv.kext\n/Applications/VirtualBox.app/Contents/MacOS/VBoxAutostart => /Applications/VirtualBox.app/Contents/MacOS/VBoxAutostart-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxBalloonCtrl => /Applications/VirtualBox.app/Contents/MacOS/VBoxBalloonCtrl-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxDD2GC.gc => /Applications/VirtualBox.app/Contents/MacOS/VBoxDD2GC.gc-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxDDGC.gc => /Applications/VirtualBox.app/Contents/MacOS/VBoxDDGC.gc-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxExtPackHelperApp => /Applications/VirtualBox.app/Contents/MacOS/VBoxExtPackHelperApp-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxHeadless => /Applications/VirtualBox.app/Contents/MacOS/VBoxHeadless-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxManage => /Applications/VirtualBox.app/Contents/MacOS/VBoxManage-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdpCtl => /Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdpCtl-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxNetDHCP => /Applications/VirtualBox.app/Contents/MacOS/VBoxNetDHCP-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxNetNAT => /Applications/VirtualBox.app/Contents/MacOS/VBoxNetNAT-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxSVC => /Applications/VirtualBox.app/Contents/MacOS/VBoxSVC-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VBoxXPCOMIPCD => /Applications/VirtualBox.app/Contents/MacOS/VBoxXPCOMIPCD-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VMMGC.gc => /Applications/VirtualBox.app/Contents/MacOS/VMMGC.gc-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VirtualBox => /Applications/VirtualBox.app/Contents/MacOS/VirtualBox-amd64\n/Applications/VirtualBox.app/Contents/MacOS/VirtualBoxVM => /Applications/VirtualBox.app/Contents/MacOS/VirtualBoxVM-amd64\n/Applications/VirtualBox.app/Contents/MacOS/vboxwebsrv => /Applications/VirtualBox.app/Contents/MacOS/vboxwebsrv-amd64\nLoading VBoxDrv.kext\nLoading VBoxUSB.kext\nLoading VBoxNetFlt.kext\nLoading VBoxNetAdp.kext\nFixed VirtualBox (allowed it to start up without issue), and changed that message to:\nsh\n~$ boot2docker status\n2014/06/19 10:09:41 Failed to get machine \"boot2docker-vm\": machine does not exist\nWhich allowed me to resume the normal boot2docker init; boot2docker up; set DOCKER_HOST; run docker commands flow.\nNot sure what's going on in all of these wide ranging error messages and issues.\n. @rcielak Did you remember to forward ports with -p flag on docker run?  Please share the docker command you are using to run the iPython notebook.\n. @rcielak Did you remember to forward ports with -p flag on docker run?  Please share the docker command you are using to run the iPython notebook.\n. > I did forward ports.\nAre you sure?\nipython notebook --no-browser --port 8888 \"--ip=*\"\nWhere are you running this from?\nWhat is the docker command you are using to create and start the container?\nWhat are the contents of your Dockerfile if you are using one?\nYou will need a docker run command that uses -p to make this work e.g.\ndocker run -p 8888:8888 -it rcielak/ipython\n(in this case I am assuming you have built the image from a Dockerfile)\nIt won't be available on localhost unless you explicitly forward the ports with VBoxManage, you are much better off using the host-only network. \n. > I did forward ports.\nAre you sure?\nipython notebook --no-browser --port 8888 \"--ip=*\"\nWhere are you running this from?\nWhat is the docker command you are using to create and start the container?\nWhat are the contents of your Dockerfile if you are using one?\nYou will need a docker run command that uses -p to make this work e.g.\ndocker run -p 8888:8888 -it rcielak/ipython\n(in this case I am assuming you have built the image from a Dockerfile)\nIt won't be available on localhost unless you explicitly forward the ports with VBoxManage, you are much better off using the host-only network. \n. Hm, why the docker start?  docker run creates and starts a container for you.  You should be able to do:\ndocker run -p 8888:8888 -t -i nanounanue/itam-mate-computacional:v5 ipython notebook --no-browser --port 8888 \"--ip=*\"\nWhat is the docker logs output of running this container?\n. Hm, why the docker start?  docker run creates and starts a container for you.  You should be able to do:\ndocker run -p 8888:8888 -t -i nanounanue/itam-mate-computacional:v5 ipython notebook --no-browser --port 8888 \"--ip=*\"\nWhat is the docker logs output of running this container?\n. > LGTM, and I think leaving this in the README and not adding another boot2docker-cli command should be enough (personally), especially since it's very OSX-specific and even more VirtualBox-specific\nAgreed.\n. Ah, yep, pretty much.\n. Ah, yep, pretty much.\n. > I don't suppose you can find out what the results of the troubleshooting was?\nI'll ask\n. More information:\n\nDebugging/troubleshooting the issue was mostly a process of elimination.\nAfter installing \u201cboot2docker\u201d 1.2 on my work Windows 7, 64 bit machine (I believe there was a reboot before I noticed the problem) when I next went to start up an existing, previously working, VMWare Workstation VM, I noticed I couldn\u2019t ssh in. \nFirst, I had suspected some internal work IP routing changes (there was a re-ip-process going on for network segmentation, but that hadn\u2019t hit my block yet).  Then I suspected DNS, but everything seemed fine there.\nI confirmed that it happened to multiple of my VM\u2019s (running different OS) to rule out the VM itself, and rebooted the host (which fixes lots of windows problems) all with no effect.  I confirmed I could still ssh to other machines which weren\u2019t VM\u2019s on my local box, which led me to think it was either Windows or VMWare networking.  Interestingly, I fired up Wireshark to watch the ssh traffic, and saw nothing.  That should have been a clue the packets were going to a different networking interface, but I didn\u2019t quite catch on to it then.\nSince things had been working on Friday, and stopped working on Monday, the only thing I could think of that had changed was my installing boot2docker Friday afternoon.  At which point I recalled that it used VirtualBox to provide the Linux kernel.  I looked in Windows Networking, and saw the VirtualBox \u201chost-only\u201d network present and figured that might be interfering with VMWare..\n. I can confirm that myself and at least one other user have run into this same issue.  Looks like it's fixed now, which is good, unfortunately I didn't get a chance to test with HEAD as I simply went into VBox and manually discarded the \"Saved\" state to get my VM running smoothly again.\n. Is there a \"saved\" state on your boot2docker VM if you open it manually in VBox?  If so, try right clicking and \"discard saved state\".  Also, try getting the most recent version of boot2docker-cli manually (https://github.com/boot2docker/boot2docker-cli/releases/download/v1.3.1/boot2docker-v1.3.1-darwin-amd64) and see if that binary works out better for you.\n. Is there a \"saved\" state on your boot2docker VM if you open it manually in VBox?  If so, try right clicking and \"discard saved state\".  Also, try getting the most recent version of boot2docker-cli manually (https://github.com/boot2docker/boot2docker-cli/releases/download/v1.3.1/boot2docker-v1.3.1-darwin-amd64) and see if that binary works out better for you.\n. @kameshsampath If the boot2docker binary version is 1.4.1, you can run boot2docker upgrade to get the latest everything (b2d binary, docker client binary, and ISO).  Please try it and let us know how it goes.\n. For the server side, yes.\n. @jokeyrhyme  Hm, this should not happen.  Sorry to hear.  It sounds like the new boot2docker ISO has not been downloaded (it should be).  Could you please paste the output from when you run the boot2docker upgrade command?\nI noticed that the old docker binary is backed up to ~/.boot2docker, so this is not the end of the world for me or anything. :)\n\nI love it when a plan comes together!\n. > use boot2docker upgrade immediately after the new docker release, and before the matching boot2docker release is available\nAh, so here's our issue.  It's a race between the releases - probably should have an additional check around that.  Thanks for reporting!\n. @aravindgan You can find a binary named docker-1.4.1 (or whatever version you upgraded from) in your ~/.boot2docker directory which is the old client version if you need it.\nHowever, the issue you're running into shouldn't happen.  Could you please share the contents of the file ~/.boot2docker/profile?  I'm wondering if you're set up to use an alternative ISO or something else is off in configuration.  Looks like the ISO is downloading correctly, so I am suspicious that something else is awry.\nAlso, I don't think this is the issue at hand, but you shouldn't need sudo on the boot2docker upgrade command- try it without.\nLastly, please ensure that your environment variables are set correctly ($(boot2docker shellinit) should do the trick) before running any Docker commands.\n. Hm, if the boot2docker binary is from 1.3, the upgrade won't update client binary.  It will only update the ISO because those changes (client upgrade) landed in 1.4.1 IIRC.  @grange74 please try the 1.5.0 b2d binary from https://github.com/boot2docker/boot2docker-cli/releases and see if the upgrade works for you.  You should retain all of your containers and images without an issue.\n. Hm, if the boot2docker binary is from 1.3, the upgrade won't update client binary.  It will only update the ISO because those changes (client upgrade) landed in 1.4.1 IIRC.  @grange74 please try the 1.5.0 b2d binary from https://github.com/boot2docker/boot2docker-cli/releases and see if the upgrade works for you.  You should retain all of your containers and images without an issue.\n. Yup looks right!  Glad we could help.\n. Yup looks right!  Glad we could help.\n. Hi @movie4, thanks for the bug report.  This looks to me like a Vagrant issue (Usually the last argument to docker build is ., so /mnt/docker_build_4bcbee0d7c5db0ace3ccc3b3b952c89d seems a quite odd choice to me), so please report it here instead: https://github.com/mitchellh/vagrant .\n. @mg-devstack Generally you should use the boot2docker-cli tool (https://github.com/boot2docker/boot2docker-cli) to create and manage VMs, although I admire the spirit of doing it yourself!  You can give the image however much RAM you want, but we generally recommend about 2GB minimum to ensure very smooth operation.\nboot2docker requires a 64 bit kernel.  Are you sure you have selected such in the VirtualBox wizard?\n. @moxiegirl Could you please give this a whirl again when you get a chance?  Seems to be a network issue and I can't reproduce it today.\n. Really sorry for any inconvenience encountered in the meantime, everyone.  In our excitement to migrate to Docker Machine, unfortunately this one slipped through the cracks.\n. Hey @chiedojohn , if you are interested in this you should ping me about possibly helping with https://github.com/docker/machine/pull/793 ...\n. @thaJeztah Well, I should be clear that it's my pet PR and it's not on the official roadmap.  But if the users want it, let it be known!\n. :clap: :clap: :clap: :clap: :clap: I'll try it out ASAP... thanks for the fast turnaround @frapposelli !\n. :clap: :clap: :clap: :clap: :clap: I'll try it out ASAP... thanks for the fast turnaround @frapposelli !\n. > It builds and runs OK, but I don't have VMware Fusion available to test it. :disappointed:\n:(\n\n@nathanleclaire what can I do to help you test too? I can get you a direct ISO build if that'd be helpful. :+1:\n\nLink to ISO would be great, I don't have a boot2docker build cached around so it would take me a second to generate from scratch.  I have Fusion :+1: \n. > It builds and runs OK, but I don't have VMware Fusion available to test it. :disappointed:\n:(\n\n@nathanleclaire what can I do to help you test too? I can get you a direct ISO build if that'd be helpful. :+1:\n\nLink to ISO would be great, I don't have a boot2docker build cached around so it would take me a second to generate from scratch.  I have Fusion :+1: \n. Sweet @frapposelli !\n@chouclee To try, in case you're not familiar:\nconsole\n$ docker-machine -D create -d vmwarefusion --vmwarefusion-boot2docker-url https://github.com/frapposelli/boot2docker/releases/download/lk4/boot2docker-lk4-vmhgfs-fix.iso sffix\n. Sweet @frapposelli !\n@chouclee To try, in case you're not familiar:\nconsole\n$ docker-machine -D create -d vmwarefusion --vmwarefusion-boot2docker-url https://github.com/frapposelli/boot2docker/releases/download/lk4/boot2docker-lk4-vmhgfs-fix.iso sffix\n. The bug is fixed for me :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: \n. The bug is fixed for me :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: \n. We need to make sure to test with the 1.7 RC (2 is the latest today) though --- that ISO gives me 1.6.2.\n. We need to make sure to test with the 1.7 RC (2 is the latest today) though --- that ISO gives me 1.6.2.\n. Trying it with an RC build @tianon gave me and everything looks good on my end!  Shared folders work as expected.\n. Trying it with an RC build @tianon gave me and everything looks good on my end!  Shared folders work as expected.\n. :clap: :clap: :clap: :confetti_ball: :confetti_ball: :confetti_ball: \n. :clap: :clap: :clap: :confetti_ball: :confetti_ball: :confetti_ball: \n. @chouclee Yes, please open another issue with as much detail as possible.\n. OK thanks @chouclee.\n. > Although, I'm wondering if TLS is even necessary for boot2docker at all. If it's only running on my local machine, why introduce unneeded complexity?\nRCE due to the IP address provided by the host-only adapter.  A web page can make an HTTP request to, say, 192.168.99.100:2375 using JavaScript, i.e. a web page can run containers in your VM if it's not protected by TLS.\nSee here: https://groups.google.com/forum/#!topic/docker-announce/aQoVmQlcE0A\n. Thanks @tianon.  Sorry all for any inconvenience encountered in the meantime.  In our excitement to migrate to Docker Machine this one slipped through the cracks.\n. :heart: :heart: :heart: :heart: Appreciate hearing that it is working for you.\n. @lordkada Is the boot2docker.iso file itself on 1.7.1 (you should be able to see this if you boot2docker ssh)?  boot2docker upgrade will give you the latest of everything.\n. @lordkada Is the boot2docker.iso file itself on 1.7.1 (you should be able to see this if you boot2docker ssh)?  boot2docker upgrade will give you the latest of everything.\n. https://github.com/docker/machine/pull/1496 makes it work with docker-machine, perhaps a similar change would be all that is needed for boot2docker-cli.\n. LGTM\n. Nice man.  I'll give this a little test drive and get back to you.\n. In my cursory experiment, looks like the daemon gets exposed on :2375 with the default Machine provisioning.\n. > In my cursory experiment, looks like the daemon gets exposed on :2375 with the default Machine provisioning.\nI think I know why -- we're checking netstat for :2376 to see if the daemon is up before doing our little provisioning / config file bit, but this boots up on :2375 the first time (before the certs have been copied over etc.).\n. Yup, that's definitely the issue.  I can make it work by checking for :2375 the first time around instead of :2376, but that is a pretty ;_; solution\n. Potentially, might change our daemon detection code to be more robust.\n. In case it's not clear from the above comments: NOT LGTM until we can make some corresponding changes in Machine.\n. > merging has the advantage that I'll go back to working on it.\n:smiling_imp: \n. @SvenDowideit Yeah looks like a duplicate of some issues I've seen on Machine side.  See: https://github.com/docker/machine/issues/1094\n@wahidpasha Please try again with the latest https://github.com/docker/toolbox RC and let us know how it goes there.\n. cc @dgageot @jeanlaurent as well\n. Isn't the userspace also 64bit now?\n. Which OS are you testing on?  Have you tried OSX, Windows, and Linux?  Pathing issues seem likely to me.\n. Main thing IMO is to verify that default functionality still works OK on Linux and Windows before merging this in.\n. Main thing IMO is to verify that default functionality still works OK on Linux and Windows before merging this in.\n. Interesting. I'll have to take a look on Monday.\n. Interesting. I'll have to take a look on Monday.\n. Also haven't really had time to test but the code looks reasonable and if you think it's good to merge I trust your judgment.\n. Also haven't really had time to test but the code looks reasonable and if you think it's good to merge I trust your judgment.\n. See also https://github.com/docker/docker/issues/18403\nI can confirm that boot2docker/boot2docker@f651ad2 is the offending line.  If I change that variable back to 5.0.8, the build on master succeeds :(\nI'm not 100% positive what the best course of action to remedy this is.  @legal90 if you have any input on the Parallels-tools side nd/or at least confirming a dupe, that would be good.\nOne possible solution is to just change the VirtualBox Guest Additions to 5.0.8, but that's pretty rough.  We generally try and have everyone running the latest version of VirtualBox and consequently the latest version of the Guest Additions.  Even though the version divergence is not likely to cause issues it's possible.\n. In the meanwhile, I am going to try reverting the AUFS commit with the Guest Additions also reverted to see if it fixes the bug that caused this yak shave in the first place.\n. Oof, I have no idea, it's probably close-able as we made some changes to the vendored AUFS version and kernel\n. Historically we've left shared folder mounting (at least for VBox) to the OS for the exact reason you specify: if a reboot / start happens outside of Docker Machine, the mount won't be working properly.  However, that also starts to get into what I call \"warranty voiding\" turf: you've diverged from the directly supported workflow, so arguably you shouldn't be surprised when some otherwise expected behavior diverges as well.  So, I'm a bit torn.\nI do agree that architecturally it's somewhat dissatisfying to do the mounts in boot2docker itself (although I think @SvenDowideit has some really good arguments for actually giving more responsibility to the OS), and want to say thank you @frapposelli for putting in the PR to fix it in the vmwarefusion driver.  Really, we're long overdue on ripping out the hacky mount code and replacing it with a (hopefully better) solution, but that will take a little time and consideration to not abruptly break what's already existing.\nI think if this does not conflict with the manual mount in @frapposelli PR, I see no harm in adding it.  We should verify specifically that works, though.  Maybe this PR should also do a -d check to only perform the mount if the directory exists already.\n. Looks like I misspoke -- I meant to say \"check if the directory/mount does not exist already\".  At any rate, the idea is that whichever mount comes first, it does not conflict  directly with the existing one.\n. Yes -- if provisioning fails the certs will not get copied over to the VM properly, so my suspicion is that the superfluous --engine-install-url=https://get.docker.com/builds/Linux/x86_64/docker-1.10.0 line is causing issues (that flag is meant to specify a URL to a script such as get.docker.com which gets passed directly to shell)\n. Cool!  Curious to see where this goes\n. I'll bake ISO and smash on it a bit.\n. Seems to be handling docker-stress (docker-stress --containers 1000 --concurrent 10) pretty OK.\n. Ran docker-stress quite a bit and also did a little thing like:\n$ for i in $(seq 0 1000); do docker run -d -P nginx; done\nMy VM ran out of memory before it ran out of inodes.\nLGTM\n. @yosifkit You might want to consider this one for the release tomorrow.\n. :+1: \n. Sure I'll check it out!\n. Been poking it a bit and so far everything seems normal on my end.\n. LGTM\n. @yosifkit \n. OK, removed those changes related to version semantics.\n. :heart_eyes: \n. \n. If Keanu approves then you know it's good.\n. Hahaha... I'm not sure the relevance of Professor Quirrel, but supporting --pids-limit is good right?\n. On older VM it complains to me.\nconsole\ndocker@default:~$ docker run -ti --rm --pids-limit 1 alpine sh\nUnable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\n420890c9e918: Pull complete\nDigest: sha256:9cacb71397b640eca97488cf08582ae4e4068513101088e9f96c9814bfda95e0\nStatus: Downloaded newer image for alpine:latest\nWARNING: Your kernel does not support pids limit capabilities, pids limit discarded.\n. \n. \ud83c\udf89 \n. Blergh, thanks for taking care of this.\n. Yeah, definitely not default, but I'd be happy to merge support for such a feature into Machine if offered. Hm, we might need to update the Docker client libraries due to some recent changes in the way TLS stuff works, but the same versions of Machine and boot2docker work OK for me locally.... Sure. Done. edit: had a conflict on kernel version. What should be done instead to bump the version for the Dockerfile?\n. Nice\n. I know this pain\n\n. I feel like this could use at least a bit more explanation (don't need to go overboard since it doesn't get touched too much) -- I'm not sure what 42 refers to below for instance. Other than the secret of the universe, obviously.. looks great! \ud83d\udcaf . ",
    "silenceisgolden": "Just stumbled onto this thread while bumping into this problem so pardon any ignorance:\n@SvenDowideit is making an important point on security which should immediately rule out any sharing of the home directory. However that shouldn't stop users from using a boot2docker share-like command to allow for configurability. \nAn option would be to have the docker directory be ~/docker_dev and it automatically be shared into the boot2docker configuration (share might seem odd to non-knowledgable users, and the problem seems to stem around dev files) and then have a command available that would allow the directory to change. This could be boot2docker share or maybe even boot2docker devdir and the script would gracefully error if the user tried to share/mount/include a home directory. I think this solves a majority of the problems while still allowing the user, IT admin, dev-ops person or whoever else to still have configuration options that they might be looking for.\nEdit: And thanks a whole heck of a ton @mattes for the .iso.\n. @mitar I'm not sure the ~/Library works. I think enough people are used to entering the command line at ~ that a subdirectory in there would work just fine, and like you mentioned it should normalize the location between different operating systems.\n. ",
    "dgageot": "This thread has become so long to read... It'd be funny if volume mounting on OSX was not a pain in the ass.\nCouldn't we give a try to vbox guest additions and see if it makes users happy? We've tried the samba way and it doesn't make users happy. It is elegantly using a container to solve the problem, it is secure and performant but let's face it, users hate it. Sorry if that's harsh but that's the reaction of every user I saw trying to use it.\nI want to stay positive, a good solution will be found!\n. Hi @u-foka and @tianon. What's the update on this PR? There's a docker-machine PR (https://github.com/docker/machine/pull/2100) waiting for this to be merged.\nIs it something that could be merged as is? Does it need improvements from @u-foka?\n. Hi @u-foka and @tianon. What's the update on this PR? There's a docker-machine PR (https://github.com/docker/machine/pull/2100) waiting for this to be merged.\nIs it something that could be merged as is? Does it need improvements from @u-foka?\n. ",
    "gansbrest": "VirtualBox Guest Additions are unusable/slow for project with lots of small files ( tested with 17K files ). Is it just me?\nI created Hodor github.com/gansbrest/hodor to streamline dev workflow for Mac and Linux. Let me know what you guys think.\n. @jmreicha hodor! )) \n. @nathan-zhu I guess I still have to recommend Hodor (https://github.com/gansbrest/hodor) for now for fast bidirectional sync through Unison.\n. VirtualBox Guest Additions are unusable/slow for project with lots of small files ( tested with 17K files ). Is it just me? \nI created Hodor github.com/gansbrest/hodor  to streamline dev workflow for Mac and Linux. Let me know what you guys think.\n. Yep, thats great. I wonder what technology is used for volumes sharing?\n. @charlietran glad and sad to hear! ) Anyways, recently Hodor learned to work with volumes within same project dir, https://github.com/gansbrest/hodor/issues/4 That allows to create interesting dev setups.\n. Take a look at Hodor - https://github.com/gansbrest/hodor where we use Unison with monitoring for reliable and fast syncing. \n. You can build your iso with NFS or Samba, but it still be very slow with lot's of small files, trust me here. If you will decide to go this road I would advice against changing boot2docker.iso but running separate containers on top of it, so you can always use latest .iso version.\n. NFS should work a bit faster especially on local interface. But it still\nwill be slow for reliable use for a big project with lots of files if you\nwill want to run some kind of files watcher on top of it (like nodemon). My\nadvice - don't do it, run away if you can. Or try Hodor.\nOn Jan 9, 2015 9:21 AM, \"Simon Paitrault\" notifications@github.com wrote:\n\nIn performance side, what's the difference between a Samba server\ndockerized and a NFS boot2docker image?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/413#issuecomment-69339390\n.\n. I would like to add couple more custom packages to my boot2docker ISO, but kind of confused about the process. Like I have main boot2docker Dockefile, I can start my own FROM it, but the tricky part for me is conversion from Debian to TinyCore.. Like I want to add Perl to my tinycore iso,  how should I do it with my own Dockerfile?\n. @gsmiro did you actually built custom boot2docker with extra packages for TinyCore following FAQ? I found it confusing ( Debian vs TinyCore parts ) that's why looking for simple examples.\n. I tried boot2docker iso with guest additions. It turned out to be very slow for projects with lots of small files and if you planning to use file watchers like nodemon. Anyways - up to you, https://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c\n\nI'm going Rsync/Unison for now\n. Ha, docker in VM is a pain in the ass! I spent couple weeks working on the script which is collection of different hacks to make it work same way as on linux.. I'll try to opesource it once it's done..\n. Vagrant feels like black box when working with docker. Most of the time you need to install sshd in your containers. Plus for some scenarios you need custom commands to run things in containers. I don't think Vagrant is a great fit for Docker to be honest. Not even sure if Vagrant supports \"container --> host file sync\" and that too is a requirement for some setups.\n. Yes, tell that to a bunch of developers. Anyways, that local folder sharing you mentioned, last time I tried Vagrant they seemed to use Rsync? Assume they do only host --> vagrant VM sync, but not VM --> host or that works both ways?\n. That folders sharing crawls to a halt when you have lots of small files in a project ( tried with our nodejs app ). Unusable if you need to run nodemon inside of the container with fs so slow..\n. Anyways, I have \"workable\" beta of my approach. Will share with you a bit later.\n. By the way, I just released initial version of Hodor which created specifically to solve problems with Docker and VMs ( Linux worflow = Mac workflow ). https://github.com/gansbrest/hodor\nMaybe that will help someone.\n. Thanks for your advice. I'll try to change the flow using local containers instead.\nI see how you list tinycore packages in the Dockerfile, but could you explain what happens here?\nunsquashfs -f -d $ROOTFS /tmp/$dep.tcz\nAnd what if I need to compile some libraries from source, should I just place those to the correct locations on $ROOTFS using ./configure flags?\n. VirtualBox Guest Additions are unusable/slow for project with lots of small files ( tested with 17K files ). Is it just me?\nI created Hodor github.com/gansbrest/hodor to streamline dev workflow for Mac and Linux. Let me know what you guys think.\n. Sorry guys, I'm not too familiar with fig. From the brief look, Hodor seem to follow similar concepts ( define config  and run task ). You may probably take and integrate file sync/forwarding parts. I just wanted to create simple tool to allow our team to do develop in the docker environment efficiently. \n. ",
    "ehernandez-xk": "Hi, \nWhat is the status of this? because I have the problem with the following configuration:\nWindows 7\nI have a custom boot2docker form 1.11.1 version\nVirtualBox 5.0.16\nVagrant 1.8.5\n```\nVagrant was unable to mount VirtualBox shared folders. This is usually\nbecause the filesystem \"vboxsf\" is not available. This filesystem is\nmade available via the VirtualBox Guest Additions and kernel module.\nPlease verify that these guest additions are properly installed in the\nguest. This is not a bug in Vagrant and is usually caused by a faulty\nVagrant box. For context, the command attemped was:\nset -e\nmount -t vboxsf -o uid=id -u docker,gid=getent group docker | cut -d: -f3 b5\n973a5087 /var/lib/docker/docker_1472079332_51007\nmount -t vboxsf -o uid=id -u docker,gid=id -g docker b5973a5087 /var/lib/doc\nker/docker_1472079332_51007\nThe error output from the command was:\nmount: mounting b5973a5087 on /var/lib/docker/docker_1472079332_51007 failed: Pr\notocol error\n```\nDo you have an example to use it on windows? I'm using Vagrant and docker as a provider.\n. When I run mountmanually I get this message.\n-sh: getent: not found\ngid= requires an argument (i.e. gid==<arg>)\nmount: mounting vagrant on /vagrant failed: Protocol error\n. Thank you @dduportal \n. I have the same problem using \n- Boot2docker  1.12.6\n- macOS Sierra, 10.12.4\nI have spent hours trying to find what happen, I don't know if this doesn't happen in newest versions. I will try. Tks @mcatalin1 \nYou are right. NFS works well, I decided to use vboxsf because works on Mac and Windows, and NFS requires Administrator privileges every time you create a mount. (there are cases when the user does not have sudo power) for that reason I'm looking a way to prevent this issue. \ud83d\ude38 \n. Yea, you are right, I tested it with:\n\nVagrant 1.9.6\nVB 5.1.22r115126\n\n@oraoto \nUpdated:\nThe file is cached until you cat it. after that is still cached. (the issue persists)\n\nboot2docker v17.06.0-ce\nMacOS Sierra 10.12.5\n\nVirtualBox 5.1.22\n. Yea, you are right, I tested it with:\n\n\nVagrant 1.9.6\n\nVB 5.1.22r115126\n\n@oraoto \nUpdated:\nThe file is cached until you cat it. after that is still cached. (the issue persists)\n\nboot2docker v17.06.0-ce\nMacOS Sierra 10.12.5\nVirtualBox 5.1.22\n. \n",
    "jimmcslim": "Can we get an official release with Hyper-V support please? I'm trying to build my own, however the rootfs build seems to be continually hanging on step 9 (curl -L ftp://ftp.de.debian.org...)\nUPDATE: The DE mirror might have hit the deck. I modified the Dockerfile to be ftp://ftp.debian.org and my build is progressing now...\n. On the Windows 8 platform (or Windows Server where Hyper-V is installed) you could probably replace boot2docker-cli with a Powershell module, since Hyper-V has a great set of Powershell 'cmdlets' for creating, starting, stopping VMs. In fact, it might be something I could contribute to the boot2docker project if it would be considered worthwhile?\n. ",
    "Jud": "Any update on this issue? I'm running containers that depend on semi-accurate time (bitcoin testnet client) and any time my laptop sleeps, I need to ssh into the boot2docker vm and run ntpdate. Sometimes I get an Internal Resolver Error and need to restart the VM.\n. Any update on this issue? I'm running containers that depend on semi-accurate time (bitcoin testnet client) and any time my laptop sleeps, I need to ssh into the boot2docker vm and run ntpdate. Sometimes I get an Internal Resolver Error and need to restart the VM.\n. @steeve I tried editing /usr/local/etc/acpi/events/all and changing event=button/power* to event=.* and changed the action to a little shell script that logged to a file. Restarted acpid and tried to trigger some acpi events by closing / opening the lid, saving the box, etc.\nI didn't get any acpi events logged.\n. For now, I've hacked around this using SleepWatcher and disabling vbox's \"feature\" of going to sleep when the battery is low: VBoxManage setextradata global \"VBoxInternal2/SavestateOnBatteryLow\" 0. \nBasically it just runs boot2docker ssh sudo ntpclient -s -h pool.ntp.org whenever the host wakes from sleep.\n. ",
    "alfonsodev": "to me \nsudo ntpclient -s -h de.pool.ntp.org  (I'm in Germany)\nstill gives two hours less than current time, \ndo you know where timezone is defined ?\n. to me \nsudo ntpclient -s -h de.pool.ntp.org  (I'm in Germany)\nstill gives two hours less than current time, \ndo you know where timezone is defined ?\n. My problem was that even that the time given by ntp was right, tiny core linux has defined a time zone already. So after reading tiny core docs, figure out you have to export TZ  variable,  to define your timezone.\n    sudo ntpclient -s -h de.pool.ntp.org\n    export TZ=CET-1CEST,M3.5.0,M10.5.0/3\n. I understand , hopefully one day we don't need that \nboot2docker/osx-installer checks for virtualbox existence because it's not needed.\nThanks for the replay!\n. ",
    "docwhat": "Using NTPD is probably the easiest/best solution. It's more reliable than depending on random guest tools and works whether the acpi stuff is installed or not.\nAdding an init.d script to run ntpd -p pool.ntp.org on boot would probably suffice.\n. I have a fix-up script I use to work around unfixed issues in boot2docker that does this:\n``` sh\nFix NTP/Time\nhttps://github.com/boot2docker/boot2docker/issues/290\nboot2docker ssh -- sudo killall -9 ntpd\nboot2docker ssh -- sudo ntpclient -s -h pool.ntp.org\nboot2docker ssh -- sudo ntpd -p pool.ntp.org\n```\nIt's meant to be idempotent, hence the killall.\n. @alfonsodev I fixed it by copying /etc/localtime into the boot2docker vm. See #476.\n@felixrabe No, I need an accurate clock to do test some of the containers I work with.\n. @sfitts at least 1.2.0\n. Hah!  I'll take a look at it. \n. I have a way of making it work:\n``` sh\nFix sudo -i and su -\nboot2docker ssh -- rm -f /etc/sysconfig/superuser\nboot2docker ssh -- sudo sh -c 'echo root > /etc/sysconfig/superuser'\n```\nI have this part of a \"fix/workaround bugs in boot2docker\" script I run when re-initializing my boot2docker vm.  It's meant to be idempotent, hence the rm -f.\n. @SvenDowideit I don't know why su - is segfaulting... I suspect it is unrelated because sudo is a real binary and su is a symlink to busybox.suid.\n. Specifically, su - only segfaults when not run as root.  Which implies that busybox.suid is having a problem becoming root, despite the fact that it is setuid root:\nroot@boot2docker:~# ls -al /bin/busybox.suid\n-rwsr-xr-x    1 root     root         56120 Jul 23 23:24 /bin/busybox.suid\n. So the zoneinfo database format is pretty stable, so I don't anticipate any changes that would cause breakage.  Also, boot2docker is usually pretty up-to-date so if anything it'll be a newer libc in boot2docker for an older zoneinfo format, which should always work.\nObviously, not all systems have an /etc/localtime file, such as on Windows.  But if it exists, it should always be in zoneinfo format.\n/etc/localtime is usually a link to /usr/share/zoneinfo/<your timezone>.  That link could be broken, but then we could just fall back to whatever we do on windows (e.g. nothing or emit a warning?).\nThis should be pretty darn safe in the scheme of things.\n. You could also just put a .json file on the ghpages that contains all the boot2docker ISO releases.  If you auto-generate it when you do a release, it should be easy to keep up-to-date.\n. I can see that being useful... should it then be setting DockerPort to empty string instead of 0?\n. Did it correct after about 10-15 minutes?  Or did it remain off?  ntpd doesn't fix the clock immediately.\n. ",
    "felixrabe": "Workaround: boot2docker restart. Does the job if you\n- can accept a restart of the VM,\n- are only annoyed by the wrong clock and don't depend on it being correct all the time.\n. I just had this same issue, see https://github.com/nginxinc/docker-nginx/issues/24.\n. I just had this same issue, see https://github.com/nginxinc/docker-nginx/issues/24.\n. ",
    "ahmetb": "I'm also using boot2docker up  and boot2docker down commands instead of poweroff/restart  (boot2docker 1.1.1 on OS X)\nOver time, I have observed a time drift of ~40 minutes.\n\nEpoch of VM:  Sun, 24 Aug 2014 22:11:19 GMT\nEpoch of My Mac: GMT: Sun, 24 Aug 2014 22:50:51 GMT\nboot2docker restart solved it though.\n. Just came across this issue from a Google search, looks like OSStatus -25299 is a broad issue with OS X Yosemite and curl.\n. ",
    "vmaatta": "Yeah well, updating to 1.2 makes no difference. I had an old brew build so I just deleted and installed a fresh 1.2 of boot2docker. VM time is drifting just like before.\n$ boot2docker version\nClient version: v1.2.0\nGit commit: a551732\nI don't think the docker version output changed\u2026\n$ docker version\nClient version: 1.2.0\nClient API version: 1.14\nGo version (client): go1.3.1\nGit commit (client): fa7b24f\nOS/Arch (client): darwin/amd64\nServer version: 1.2.0\nServer API version: 1.14\nGo version (server): go1.3.1\nGit commit (server): fa7b24f\n$boot2docker ssh\n\u2026\nboot2docker: 1.2.0\n             3.16.1-config-file : e75396e - Fri Aug 22 06:45:30 UTC 2014\n(HOST) $ date\nFri Oct  3 18:21:29 EEST 2014 vs. (B2D) $ date\nFri Oct  3 18:12:23 EEST 2014 (I copied over /etc/localtime manually.\nFYI\u2026\n$ cat /var/lib/boot2docker/profile\ncat: can't open '/var/lib/boot2docker/profile': No such file or directory\n. @kalanbates try running the following (run in the VM as in your own examples).\nsudo ntpclient -s -h pool.ntp.org\nI don't know whether boot2docker is a shell command on the Windows version, assuming it is you should see the comment above from @docwhat, specifically boot2docker ssh -- sudo ntpclient -s -h pool.ntp.org is the command that should work.\n. @kalanbates yes? That's the correct time.\n. Aa OK good :+1: .\n. Ok so folders on the Mac host (under $HOME) can now be shared with the container\u2026 and you can do nothing with them:\nOperation not permitted, Permission denied, could not create directory\u2026\nI've tried chowning them to 999:999, changed folder rights to 777\u2026 and still, those volume folders are just as unusable from the container.\nE.g. -v ($HOME)/projects/data/db/:/var/lib/postgresql/data/\n. Ok, say:\n1) docker run -v /Users/vmaatta/test:/tmp/test -it --rm debian:latest bash: I can manually read, write files and create folders in the container.\n2) I make the same folder a data volume for a postgres /var/lib/postgresql/data and here's the result:\nfixing permissions on existing directory /var/lib/postgresql/data ... ok\ncreating subdirectories ... initdb: could not create directory \"/var/lib/postgresql/data/global\": Permission denied\ninitdb: removing contents of data directory \"/var/lib/postgresql/data\"\nThe same with a different container, a web server that needs to write all kinds of files, they both fail with the aforementioned access problems.\n. And it seems there's an issue for it\u2026 #581. The release notes are really quite misleading / missing an important note.\n. Mounting a VBox share as UID 999 will allow the created container user to write as it's usually 999. This is just a fragile hack on the hack but it does allow writing\u2026\nsudo mount -t vboxsf -o uid=999,gid=50 your-other-share-name /some/mount/location\n. Mounting a VBox share as UID 999 will allow the created container user to write as it's usually 999. This is just a fragile hack on the hack but it does allow writing\u2026\nsudo mount -t vboxsf -o uid=999,gid=50 your-other-share-name /some/mount/location\n. /Users is a bit special as it's mounted by the boot2docker script (any share matching the names listed in release notes), changing it requires customising the code. I just created a custom share anyway as I don't want to share the whole /Users structure with containers.\n1) Overriding the /Users default share on boot2docker start:\nboot2docker --vbox-share=$(pwd)/share-location=share-name up\n2) boot2docker ssh in and mount the custom share:\nsudo mount -t vboxsf -o uid=999,gid=50 share-name [SHARE-FULL-PATH]/share-location\n. /Users is a bit special as it's mounted by the boot2docker script (any share matching the names listed in release notes), changing it requires customising the code. I just created a custom share anyway as I don't want to share the whole /Users structure with containers.\n1) Overriding the /Users default share on boot2docker start:\nboot2docker --vbox-share=$(pwd)/share-location=share-name up\n2) boot2docker ssh in and mount the custom share:\nsudo mount -t vboxsf -o uid=999,gid=50 share-name [SHARE-FULL-PATH]/share-location\n. @tianon above in your example you're running as the docker user in the VM. It'll work just fine there but the container and added users are a different story.\n- Outside the container, in the VM, the vboxsf is mounted as UID=1000, GID=50, i.e. docker:staff\n- Inside a running container that UID is not in use by default, but if you'll just useradd new user, 1000 will be the first ID. Ok so far.\n- If you add both a new group and a new user to the freshly created group, inside the container, you'll likely end up with UID / GID 999:999\u2026 -> Quite a few containers in the Hub do just that. They add a group and a user for the process to run as. Here's an example from the postgres container* RUN groupadd -r postgres && useradd -r -g postgres postgres. That'll end up with 999:999\nHere's some testing I did with my custom uid=999,gid=50 vboxsf:\nTest \"postgres\" container\n```\nroot@9aa1b6f15b1c:/# groupadd -r postgres && useradd -r -g postgres postgres\nroot@9aa1b6f15b1c:/# cat /etc/group | grep post\npostgres:x:999:\nroot@9aa1b6f15b1c:/tmp/test# mkdir root-dir\nroot@9aa1b6f15b1c:/tmp/test# su -c 'mkdir user-dir' postgres\nroot@9aa1b6f15b1c:/tmp/test# su -c 'touch user-file' postgres\nroot@9aa1b6f15b1c:/tmp/test# su -c 'echo \"test\" > user-file' postgres\nroot@9aa1b6f15b1c:/tmp/test# su -c 'cat user-file' postgres\ntest\nroot@9aa1b6f15b1c:/tmp/test# su -c 'ln -s user-file user-link' postgres\nroot@9aa1b6f15b1c:/tmp/test# su -c 'ln user-file user-hard-link' postgres\nln: failed to create hard link user-hard-link' =>user-file': Operation not permitted\n```\nNew container\nroot@7a795aa575df:/# useradd test-user\nroot@7a795aa575df:/# cat /etc/passwd\n\u2026\ntest-user:x:1000:1000::/home/test-user:/bin/sh\nroot@7a795aa575df:/tmp/test# su - test-user\nNo directory, logging in with HOME=/\n$ cd /tmp/test\n$ touch test-user-test-file\ntouch: cannot touch `test-user-test-file': Permission denied\nVM\ndocker@boot2docker:~$ ls -lAF /Users/vmaatta/projects/data/writetest/\ntotal 8\ndrwxr-xr-x    1 999      staff           68 Oct 23 20:44 root-dir/\ndrwxr-xr-x    1 999      staff           68 Oct 23 20:45 user-dir/\n-rw-r--r--    1 999      staff            5 Oct 23 20:48 user-file\nlrwxr-xr-x    1 999      staff            9 Oct 23 20:49 user-link -> user-file\nNow, as you said, it's very difficult to come up with a general fix. And this is actually not that different from the situation of running docker on a Linux host without boot2docker or any other virtualisation layer. Issues with volume folder rights are a challenge there as well.\nCurrently the vboxsf mount is UID /  GID 1000:50. That's docker:staff in the VM and, no-one:staff or first user to default group in a container. I changed this to 999:50 which matches the new group and user scenario by UID. GID is still 50 and this allows the VM docker user access and also the container root user is fine. The web server I mount a volume for uses the new group and user scenario as well so it works for me.\nI don't know\u2026 maybe there's a better / more general UID / GID combination but I've seen 999:999 mentioned already a couple times in the Hub for containers' documentation. No surprise as they add both group and a user. But YMMV and that's why I've just done this in bootlocal.sh instead of a pull request.\nAnd maybe we need something completely different [from vboxsf] to solve this.\n- Postgres being a bit bad example now as initdb dies on hard links now but oh well\u2026 there's nothing we can do for that here unfortunately.\n. I might be wrong but I don't think there is really much that can be done on the boot2docker side very soon. Every container's needs are going to be different and getting the automatic vbox share working with them all is quite difficult.\nIf the apache2 container does not need to make hard links to the bind mounted volume you should be able to use a custom share with access rights suitable for the apache user. Above you can find my override of the default share but you could also add another one for use with apache\n1. Add a share location to the VM: $VBoxManage sharedfolder add \"boot2docker-vm\" --name \"apacheshare\" --hostpath \"/Users/username/shares/data/apache\" You could just as well do that via the VirtualBox UI.\n2. Mount it in the VM after bootup: mount -t vboxsf -o uid=999,gid=50 apacheshare /Users/username/shares/data/apache You'll need to find the suitable UID that works for the apache2 user, if it works.\nFor multiple bind mounts, and different containers, there might need to be multiple different shares depending on the needed UIDs.\nI've added my version of number 2 to the bootlocal.sh in the VM so it's done automatically on boot. I don't have the script handy now but I can add it here later.\n. @lukaswelte Here's my /mnt/sda1/var/lib/boot2docker/bootlocal.sh. You'll need to adapt it to your needs.\n```\n!/bin/sh\nif [ -e /Users/username ]; then\n    umount /Users\nfi\nmkdir -p /Users/username/projects\nmount -t vboxsf -o uid=999,gid=50 projects /Users/username/projects\n```\n@SvenDowideit I'm probably missing the point but\u2026 Volume containers are great and should always be used where they make sense. But with regards to bind mounting something from the host they don't change anything. They suffer from the same problems any other container does.\n. @SvenDowideit yeah, no I don't\u2026 need to copy that data to your local machine kinda being the kicker :). I've used the Samba container too but we can copy data into and out of containers manually if we want. And that's really what samba is, just a target location(s) to manually copy data in / out. The real problem is -v host:container. This is the old different workflows discussion that's been had a couple times. Copying data into a location manually for production, say release workflow, might be workable with Samba or something like that. But local change-refresh-change etc, edit in IDE / see change reflected by the running container, jump into a different project with different kinds of files in different locations\u2026\nI've yet to see any hint of how is a Samba (or NFS or\u2026) volume container to replace -v host:container. That's one single data location used in two places, host computer and container. Not two copies of data, one on the host and other in some Samba share, and worse, maybe even a third copy where it was copied from a data share folder to an application folder. Manually copying data around in different containers\u2026 What is the workflow, 2 seconds to make a change and 2 minutes to monkey around with rsync. I just can't compute this workflow :).\nAnd the point I was making above: Volume container is not really relevant here. It can't bind mount a location from the host any different to any other container. It doens't change the problem at hand in any way, just moves it.\n. @txchen Fixing this issue may not help you anyway. There is more information regarding postgres specifically in the above comments. It might be best to just run a separate data volume container, use the volume from there for postgres and handle any mounting and transfer needs between the data volume container and host.\n. @sjtuadamyang Pretty much, yes. You should probably go with a data volume container for Postgres. In the data volume container make /var/lib/postgresql/data just a normal volume. Additionally add some other path such as /mnt/hostdata as a host volume to some location on your host.\nNow, as mentioned you still have to get data into and out of the database but it's not as bad as it sounds in Postgres' case. Just like you can open psql in a container, you can pg_dump data in a temporary container into/out the extra host mounted folder:\ndocker run -ti --volumes-from postgres-data --link postgres:postgres --rm postgres sh -c 'exec pg_dump -h \"$POSTGRES_PORT_5432_TCP_ADDR\" -p \"$POSTGRES_PORT_5432_TCP_PORT\" -U postgres -Fd -f /mnt/hostdata/backup/some_database_local_20150120_bak <some_database>'\nThat assumes there's a data volume container postgres-data and a running Postgres database in container postgres. All of these containers are postgres:latest.\n. @sjtuadamyang Yes, you can make it work without a data volume container; you can just change the --volumes-from to your running postgres and otherwise modify as needed. Generally I would not \"get into\", i.e. SSH (or nsenter etc.) into a container.\nYou can read up about data volume containers and why maybe use them in the documentation and only you can really know whether to use them or not. \n. First, @tianon sorry about that, sure the documentation was there in boot2docker help and I had even read #258 earlier. Too tired to think straight I guess.\nAdding this to the profile might be good. I think it should default to not sharing /Users and allow setting the share path via config. But I think something like that was the plan already and vbox-share route is temporary workaround anyway.\n. ",
    "fcvarela": "DISCLAIMER: OSX only\nI'm using this: https://gist.github.com/fcvarela/2c90b090e1e5f8c91127 (launchd job to periodically sync as well as on wake-from-sleep). If you improve it, please let me know so I can use that instead :)\nTapping into ACPI would be great, but unfortunately that creates a dependency on the vm/hypervisor configuration. I can imagine scenarios where you might want to disable ACPI event forwarding to the guest.\n. Not sure how helpful this is but i always create a user w/ id 1000 in the\ncontainer and run the processes from that. Works perfectly fine. I also ADD\nthe data needed and them add a VOLUME to the same location. You can choose\nto -v vol:vol in production and not to in dev, thereby using the same image\nfor both envs.\nHope this helps\nOn Tue, Jan 6, 2015 at 12:00 PM, Ahmet Emre Alada\u011f <notifications@github.com\n\nwrote:\nI have the same problem with boot2docker: Docker v1.4.1, fig 1.0.1\nIt's fine on Linux: Docker v1.4.0, fig 1.0.1\nI can't mount rabbitmq or mongodb just for persistence.\nAny news on this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-68857203\n.\n. Not sure how helpful this is but i always create a user w/ id 1000 in the\ncontainer and run the processes from that. Works perfectly fine. I also ADD\nthe data needed and them add a VOLUME to the same location. You can choose\nto -v vol:vol in production and not to in dev, thereby using the same image\nfor both envs.\n\nHope this helps\nOn Tue, Jan 6, 2015 at 12:00 PM, Ahmet Emre Alada\u011f <notifications@github.com\n\nwrote:\nI have the same problem with boot2docker: Docker v1.4.1, fig 1.0.1\nIt's fine on Linux: Docker v1.4.0, fig 1.0.1\nI can't mount rabbitmq or mongodb just for persistence.\nAny news on this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-68857203\n.\n. Actually the other way around, you can docker run -v stuff:stuff in dev and\nnot to in prod :) Sorry about that.\n\nOn Tue, Jan 6, 2015 at 12:28 PM, Filipe Varela fcvarela@gmail.com wrote:\n\nNot sure how helpful this is but i always create a user w/ id 1000 in the\ncontainer and run the processes from that. Works perfectly fine. I also ADD\nthe data needed and them add a VOLUME to the same location. You can choose\nto -v vol:vol in production and not to in dev, thereby using the same image\nfor both envs.\nHope this helps\nOn Tue, Jan 6, 2015 at 12:00 PM, Ahmet Emre Alada\u011f \nnotifications@github.com wrote:\n\nI have the same problem with boot2docker: Docker v1.4.1, fig 1.0.1\nIt's fine on Linux: Docker v1.4.0, fig 1.0.1\nI can't mount rabbitmq or mongodb just for persistence.\nAny news on this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-68857203\n.\n. Actually the other way around, you can docker run -v stuff:stuff in dev and\nnot to in prod :) Sorry about that.\n\n\nOn Tue, Jan 6, 2015 at 12:28 PM, Filipe Varela fcvarela@gmail.com wrote:\n\nNot sure how helpful this is but i always create a user w/ id 1000 in the\ncontainer and run the processes from that. Works perfectly fine. I also ADD\nthe data needed and them add a VOLUME to the same location. You can choose\nto -v vol:vol in production and not to in dev, thereby using the same image\nfor both envs.\nHope this helps\nOn Tue, Jan 6, 2015 at 12:00 PM, Ahmet Emre Alada\u011f \nnotifications@github.com wrote:\n\nI have the same problem with boot2docker: Docker v1.4.1, fig 1.0.1\nIt's fine on Linux: Docker v1.4.0, fig 1.0.1\nI can't mount rabbitmq or mongodb just for persistence.\nAny news on this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-68857203\n.\n. \n\n",
    "ringods": "@fcvarela change the property StartInterval to StartCalendarInterval and launchd will also trigger the script when the computer wakes up.\n. @garthk thanks for the fix. Works like a charm.\n. ",
    "razic": "@SvenDowideit what is the recommended approach to making sure the time is correct without restarting the VM? i run into this problem everyday. the only thing i can do right now is boot2docker restart but all my containers get shut down :(\n. Wow this actually made it in?\n. ",
    "defunctzombie": "@fcvarela any hope of getting that launch script added to homebrew? Might be nice for OSX folks to get it installed by default\n. @fcvarela any hope of getting that launch script added to homebrew? Might be nice for OSX folks to get it installed by default\n. Is there a PR anyone has made to fix this?\nOn Wednesday, December 3, 2014, Ted Strauss notifications@github.com\nwrote:\n\nThis issue is somehow mangling synchronization of files between my OSX IDE\nand boot2docker files. Files are not being properly updated in nginx when\nthe date/time gets broken.\nCritical bug > switching to vagrant.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/290#issuecomment-65452723\n.\n. :D\n. :D\n. \n",
    "martinlauer": "Here a chained command to get datesync working.\nwget -q https://gist.githubusercontent.com/fcvarela/2c90b090e1e5f8c91127/raw/1e63833d4ec7edea98298204a0c26f79ead3db8e/com.fcvarela.boot2docker.datesync.plist -O ~/Library/LaunchAgents/com.fcvarela.boot2docker.datesync.plist && launchctl load ~/Library/LaunchAgents/com.fcvarela.boot2docker.datesync.plist && launchctl start com.fcvarela.boot2docker.datesync\nThx to @fcvarela\n. Here a chained command to get datesync working.\nwget -q https://gist.githubusercontent.com/fcvarela/2c90b090e1e5f8c91127/raw/1e63833d4ec7edea98298204a0c26f79ead3db8e/com.fcvarela.boot2docker.datesync.plist -O ~/Library/LaunchAgents/com.fcvarela.boot2docker.datesync.plist && launchctl load ~/Library/LaunchAgents/com.fcvarela.boot2docker.datesync.plist && launchctl start com.fcvarela.boot2docker.datesync\nThx to @fcvarela\n. ",
    "mikz": "Starting ntpclient as init.d service looks like no brainer to me.\n. ",
    "matthewleon": "Would love to see some kind of decision from Above as to what approach the team is favoring for this issue. It's biting a lot of us.\n. Would love to see some kind of decision from Above as to what approach the team is favoring for this issue. It's biting a lot of us.\n. ",
    "adizam": "For now, my entire team is broken up into linux & mac users.. the linux users obviously not experiencing this problem (don't require boot2docker).. and @martinlauer's solution works fine for my mac developers.\nI would love to see a real solution to this issue, but for now, that will have to suffice. If you guys do decide on a route you'd prefer it to go, I wouldn't mind throwing a bit of time and submitting a PR.. just don't want to overstep if the team has it on their roadmap.\nCheers\n. For now, my entire team is broken up into linux & mac users.. the linux users obviously not experiencing this problem (don't require boot2docker).. and @martinlauer's solution works fine for my mac developers.\nI would love to see a real solution to this issue, but for now, that will have to suffice. If you guys do decide on a route you'd prefer it to go, I wouldn't mind throwing a bit of time and submitting a PR.. just don't want to overstep if the team has it on their roadmap.\nCheers\n. ",
    "JeroenVdb": "When I run the ntpclient command I get this error: recvfrom: Connection refused\nBoot2Docker version 1.3.1, build master : 9a31a68 - Fri Oct 31 03:14:34 UTC 2014\nDocker version 1.3.1, build 4e9bbfa\ndocker@boot2docker:~$ sudo ntpclient -s -h pool.ntp.org\nrecvfrom: Connection refused\ndocker@boot2docker:~$\nI'm connected to the internet and can ping to pool.ntp.org.\n. ",
    "cooniur": "Has this issue been fixed? I just found after sleeping and resuming my Mac, the time in boot2docker VM is 15min behind the host. I'm on the latest version (1.5.0).\n. ",
    "jmshelby": "I noticed this still happening to me today. On 1.5.0 as well ...\n. I'm having the same problem after doing boot2docker update to version 1.7.0 also...\nPerforming the steps mentioned by @mmikulicic does not work; in fact, it breaks other things. (like boot2docker shellinit returning error in run: Error requesting socket: exit status 1)\nThe problem goes away if I destroy the image, and re-init; but comes back once I restart the vm (like 'restart' or 'start' and then 'stop).\nHere is my specific message:\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/containers/json: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\n. @rooty0 as I explained, I already performed those steps (the ones mentioned by @mmikulicic), and they DO NOT WORK. After exiting from ssh'ing into boot2docker, and running boot2docker shellinit I get error in run: Error requesting socket: exit status 1\nEven if that did work, it's something I would have to do every single time I restarted the b2d instance, it's not a solution\n. I decided to just move on to kitematic (which seems to be a wrapper for docker-machine which seems to be a wrapper for b2d) so far I haven't had the same issues (which is strange because it seems to be the same thing undercover).\nLooks like kitematic might be what they're moving toward - just takes a bit of time to figure out how to work things without that pesky gui.\n. ",
    "inflector": "Definitely happens to me too\n. Ah, good idea. That will probably work until the next time you wake when the code that synchs the VM time upon wake will recreate the problem again. Still, might be worth doing. Let me know what your command looks like if you do this. I'd want it to set the time only one second advanced as that will likely be sufficient.\nLikewise, if I do implement this and it works, I'll post here again and let you know. \nIf it does work, I might make a pull-request for boot2docker itself for the code that does the wakeup synching to set it one second advanced there too as that would end up eliminating the problem completely for this case. I don't see any real downside to having the VM time be some portion of a second ahead of the Mac. Definitely better than having it be some portion of a second behind like it is now since I'm sure the case of editing on the Mac and compiling on the VM is far more common than vice-versa.\n. ",
    "jordi-chacon": "Happens to me too.\n. ",
    "mickep76": "Here is an example using the SleepWatcher workaround.\nInstall SleepWatcher:\nbash\nbrew install SleepWatcher\nLaunch and enable on login:\nbash\nlaunchctl load ~/Library/LaunchAgents/de.bernhard-baehr.sleepwatcher-20compatibility-localuser.plist\nln -sfv /usr/local/opt/sleepwatcher/*.plist ~/Library/LaunchAgents\nCreate wake up script:\n``` bash\ncat << EOF >~/.wakeup\n!/bin/bash\nMACHINE=''\nNTP_SERVER='pool.ntp.org'\nPATH=\"\\${PATH}:/usr/local/bin\"\ndocker-machine ssh \\${MACHINE} \"sudo ntpclient -s -h \\${NTP_SERVER}\"\nEOF\nchmod +x ~/.wakeup\n```\nReplace <machine> with the name of your docker-machine instance.\n. I got it working in a similar manner:\n``` bash\nboot2docker ssh\nsudo tee /var/lib/boot2docker/bootlocal.sh << EOF >/dev/null\n!/bin/sh\ncurl http:///ca.crt >>/etc/ssl/certs/ca-certificates.crt\nEOF\nsudo chmod +x /var/lib/boot2docker/bootlocal.sh\nexit\nboot2docker restart\n```\n. ",
    "mvadu": "I am trying docker stuff for the first time on WIndows 8.1 Update 1, with Hyper-V. I also have other virtual machines (WP 8.1 emulator), so I got a \"Broadcom 802.11ac Network Adapter Virtual Switch\", which I tried directly as well as via Legacy Network Adapter. \nI followed instructions at http://blog.thestateofme.com/2014/02/18/boot2docker-on-hyper-v. VM boots up, but does not login to @docker, but will be under root. No DHCP address, and sudo udhcpc will keep posting \"Sending Discover\". Any pointers?\n. Never mind.. today I tried adding simple \"Regular\" hyper-v network adapter with virtual switch, and it got network connectivity. I don't think legacy network adapter is needed anymore.\n. ",
    "wsargent": "@SvenDowideit Can you point me to some documentation or some code I can run, or a blog post?\n. ",
    "adamw": "Same here with docker 0.10 and b2d.\n. ",
    "tinganho": "yes it is still happening. If fixed it with adding the ISO on the VM's storage and than just restart. It was also the first time I tried out Docker this error occured.\n. @SvenDowideit yes it fails. I now have a working docker by manually downloading the ISO file. But I'm pretty sure it failed.\n. Ok it works now. \nThough it would be good to check if the ISO file is not corrupt or something. I could download half of the ISO file. And run boot2docker initand boot2docker up without any complaints. And when the VM is up, the docker command just stalls.\n. ",
    "millisami": "Where to put that EXTRA_ARGS setting?\nThere is not any file in mac host.\nThe file is inside the vm. So do I put the file inside the boo2docker vm's file?\n. ",
    "cordoval": "you first kill it then rm -f\n. i ended up using the youngsang vagrant box which has nfs support for mounting files from host, please add a note at the very top to use this, it saves much much time to everybody!\n. give the korean a medal!\n. just in case i think @ludofleury meant this http://www.craftitonline.com/2015/02/docker-symfony-development-box-with-data-containers/ perhaps it can be useful to some that ran into this.\n. sorry to hear you abandoned it\n. one thing that i think everybody missed is that one has to comment out the three export lines for it to be reinstalled. I try and retry and nothing, until i commented out those lines on my shell and then retry what @DariusLT said. All works again! :older_man: \n. you have to be systematic, i bet in one of the steps you are just redoing it wrongly. It is tricky though!\n. ",
    "arey": "@steeve I've tried the boot2docker windows-installer but the Boot2Docker shell failed to start:\n```\nRun 'git help git' to display the help index.\nRun 'git help ' to display help for specific commands.\ninitialising...\n2014/04/27 10:57:13 Creating VM boot2docker-vm...\n2014/04/27 10:57:20 Failed to create VM \"boot2docker-vm\": machine does not exist\nstarting...\n2014/04/27 10:57:22 Waiting for SSH server to start...\n2014/04/27 10:58:02 Failed to connect to SSH port at localhost:2022 after 10 att\nempts. Last error: dial tcp 127.0.0.1:2022: ConnectEx tcp: i/o timeout\nconnecting... (password: tcuser)\nssh: connect to host localhost port 2022: Bad file number\n2014/04/27 10:58:05 exit status 255\n```\nNote that I'm using my own VirtualBox and Msysgit installation.\nDo you know how I can create and format a disk by myself from the boot2docker VM?\n. @SvenDowideit I just try the boot2docker-cli executable.\nMy first execution theboot2docker-cli init command failed because some VM do not exist any more and the script stop:\nC:\\Software\\Dev\\Boot2Docker>boot2docker-cli init -v\n2014/04/28 12:04:50 Creating VM boot2docker-vm...\n2014/04/28 12:04:50 executing: C:\\Software\\System\\VirtualBox\\VBoxManage.exe list vms\n2014/04/28 12:04:51 executing: C:\\Software\\System\\VirtualBox\\VBoxManage.exe showvminfo Elasticsearch --machinereadable\n2014/04/28 12:04:51 executing: C:\\Software\\System\\VirtualBox\\VBoxManage.exe showvminfo <inaccessible> --machinereadable\n2014/04/28 12:04:51 Failed to create VM \"boot2docker-vm\": machine does not exist\nI have removed the inaccessible VM and the boot2docker-cli init  runs OK.\nThe boot2docker-cli up failed:\nC:\\Software\\Dev\\Boot2Docker>boot2docker-cli.exe up -v\n2014/04/28 12:08:18 executing: C:\\Software\\System\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/04/28 12:08:18 executing: C:\\Software\\System\\VirtualBox\\VBoxManage.exe startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2014/04/28 12:08:19 Waiting for SSH server to start...\n2014/04/28 12:08:19 Connecting to tcp://localhost:2022 (attempt #0)\n2014/04/28 12:08:23 Connecting to tcp://localhost:2022 (attempt #1)\n2014/04/28 12:08:27 Connecting to tcp://localhost:2022 (attempt #2)\n2014/04/28 12:08:31 Connecting to tcp://localhost:2022 (attempt #3)\n2014/04/28 12:08:35 Connecting to tcp://localhost:2022 (attempt #4)\n2014/04/28 12:08:39 Connecting to tcp://localhost:2022 (attempt #5)\n2014/04/28 12:08:43 Connecting to tcp://localhost:2022 (attempt #6)\n2014/04/28 12:08:47 Connecting to tcp://localhost:2022 (attempt #7)\n2014/04/28 12:08:51 Connecting to tcp://localhost:2022 (attempt #8)\n2014/04/28 12:08:55 Connecting to tcp://localhost:2022 (attempt #9)\n2014/04/28 12:08:59 Failed to connect to SSH port at localhost:2022 after 10 attempts. Last error: dial tcp 127.0.0.1:2022: ConnectEx tcp: i/o timeout\nDespite the VMs is started, the SSH connection could ne not be etablished. Any idea?\n. @SvenDowideit  my VirtualBox version was the 4.2.16 so I have installed the last one: 4.3.10.\nThe SSH connection time out was still there.\nBut I am able to boot2docker-cli shh. So I can now use boot2docker on Windows without my no space left error. docker run ubuntu /bin/echo hello worldis working.\nThanks for your help\n. ",
    "rws-github": "Password is tcuser.\n. ",
    "devinsba": "I am building my own ISO but it looks to me like they just have to put a new ISO up and create a new git tag\n. Theres a doc that I am following: https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\nI am not exactly sure how to point it at the new ISO after it is built though. Be aware though if you use your current boo2docker to build this you must have at least 2Gigs of RAM allocated to it\n. Yeah, I ended up just modifying the boot2docker.vbox file directly but I image that will have the same effect\n. hmm. I should have looked at that before. Thanks for the heads up\nEDIT: It appears to work with the master version so I will stick with what I have\n. @jamtur01 Yeah, I didn't want to overwrite my working ISO with one I wasnt sure would work. Once the released one is out I will do that\n. ",
    "mgcrea": "@devinsba Is there a tuto out there to build up one? Or could you host it (eg wetransfer)? Thanks!\n\nFound it : https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\n. @devinsba Is there a tuto out there to build up one? Or could you host it (eg wetransfer)? Thanks!\n\nFound it : https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\n. @devinsba I think something like this might work:\nhttps://github.com/boot2docker/boot2docker/blob/master/boot2docker#L149\nCurrently building...\n. @devinsba I think something like this might work:\nhttps://github.com/boot2docker/boot2docker/blob/master/boot2docker#L149\nCurrently building...\n. @steeve thanks, you did beat me to it! \n. @steeve thanks, you did beat me to it! \n. ",
    "kishorevaishnav": "@devinsba Try changing the step 7 & 8.\nADD index.js /webhook_services/index.js\nADD package.json /webhook_services/package.json\n. ",
    "ktheory": "LGTM\n. @SvenDowideit, @steeve: thanks, boot2docker download worked like a charm. :star2: \nJust made a homebrew PR for v0.9.0. Will update the formula with some instructions for bootstrapping.\n. @chrisbutterworth: the new hotness for docker 1.0+ is to use the boot2docker binaries instead of homebrew. Does that work for you?\n. :boom: :exclamation: \n. ",
    "kfish": "To add mycert.pem (exported from your keychain on osx-host) to a running boot2docker, copy it over, symlink it and symlink its hash:\n``` shell\nosx-host$ boot2docker ssh\nPicture of a whale\ndocker@boot2docker:~$ scp username@osx-host:Documents/mycert.pem /tmp\ndocker@boot2docker:~$ sudo -s\nroot@boot2docker:~$ mv /tmp/mycert.pem /usr/local/share/ca-certificates\nroot@boot2docker:~$ cd /etc/ssl/certs\nroot@boot2docker:/etc/ssl/certs$ ln -s /usr/local/share/ca-certificates/mycert.pem .\nroot@boot2docker:/etc/ssl/certs$ openssl x509 -hash -in mycert.pem\nThis will output an 8 hex digit hash hhhhhhhh\ndocker@boot2docker:/etc/ssl/certs$ ln -s mycert.pem hhhhhhhh.0\n```\nI found this out by examining the c_rehash script, which update-ca-certificates would run if it and perl existed on boot2docker.\n. To add mycert.pem (exported from your keychain on osx-host) to a running boot2docker, copy it over, symlink it and symlink its hash:\n``` shell\nosx-host$ boot2docker ssh\nPicture of a whale\ndocker@boot2docker:~$ scp username@osx-host:Documents/mycert.pem /tmp\ndocker@boot2docker:~$ sudo -s\nroot@boot2docker:~$ mv /tmp/mycert.pem /usr/local/share/ca-certificates\nroot@boot2docker:~$ cd /etc/ssl/certs\nroot@boot2docker:/etc/ssl/certs$ ln -s /usr/local/share/ca-certificates/mycert.pem .\nroot@boot2docker:/etc/ssl/certs$ openssl x509 -hash -in mycert.pem\nThis will output an 8 hex digit hash hhhhhhhh\ndocker@boot2docker:/etc/ssl/certs$ ln -s mycert.pem hhhhhhhh.0\n```\nI found this out by examining the c_rehash script, which update-ca-certificates would run if it and perl existed on boot2docker.\n. ",
    "virtuald": "It would be good to make this process significantly easier than it currently is, since as of 1.3.1 docker no longer allows connections to non-SSL registries. We need an easy way to deposit the certificate in a place that will persist, otherwise we will need to copy the cert each time we boot2docker up.\n. @SvenDowideit No, please open this ticket again. The certificates that boot2docker generates as of 1.3.x for the user is for connecting to the docker daemon, not a private docker registry with custom certificates.\n. I realize this issue is about 'documentation', but the current process of adding a registry cert is annoying at best. I would recommend adding yet another boot2docker command (maybe addregistrycert) that copies the certificate to the right place on the permanent storage, and at boot time the iso copies all the certs to /etc/docker/certs.d/. For example, I'm using the following script in bootlocal.sh:\n```\n!/bin/sh\nsudo cp -r /var/lib/boot2docker/etc/docker /etc\n``\n. My go-fu is a bit weaker than I would like, and I have about 3 other projects that I'm behind on. However, should be easy enough for someone familiar with the codebase to do. ;)\n. I like option 3.\n. I like option 3.\n. Well, I have to imagine that docker on linux has a similar problem. I suspect you could deal with it the same way?\n. Well, it depends on what the daemon does. Maybe it's not a daemon that does it?\n. +1 onboot2docker share-network` subcommand\n. +1 on pushing fix separately\n. @vielmetti restarting the docker daemon does not fix the issue for me.\n. ",
    "metcalfc": "I see at least 3 approaches in this issue. I'm happy to do the work but which of them is the best practice?\n1. append the cert to /etc/ssl/certs/ca-certificates.crt\n2. do the hash magic that update-ca-certificates would do\n3. copies all the certs to /etc/docker/certs.d/\n. ",
    "pohl": "I'm having an issue that may be related, but I'm not sure:  I work for an organization that has a certificate-rewriting proxy and it is getting in the way with my attempts to even use the public registry at Docker Hub. I am just learning Docker, so I'm curious whether the steps outlined in this PR discussion would also apply to my situation.  \nhttp://stackoverflow.com/questions/27536180/docker-on-mac-behind-proxy-that-changes-ssl-certificate\n. I'm having an issue that may be related, but I'm not sure:  I work for an organization that has a certificate-rewriting proxy and it is getting in the way with my attempts to even use the public registry at Docker Hub. I am just learning Docker, so I'm curious whether the steps outlined in this PR discussion would also apply to my situation.  \nhttp://stackoverflow.com/questions/27536180/docker-on-mac-behind-proxy-that-changes-ssl-certificate\n. I am also experiencing this. \nOSX 10.8.5 \nVirtual Box v4.3.18 r96516\nboot2docker 1.3.3\nOverall, the problem seems the same, although the failure details are somewhat different:\nVBoxManage: error: The host network interface with the given name could not be found\nVBoxManage: error: Details: code NS_ERROR_INVALID_ARG (0x80070057), component Host, interface IHost, callee nsISupports\nVBoxManage: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage: error: Could not find interface 'dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp'\nThis is my first Docker experience, so I don't have much to offer beyond that observation.\n. I believe I managed to get beyond this by grabbing a slightly more recent installer pkg (1.4.1).  Hope this helps someone\u2026\nhttps://github.com/boot2docker/osx-installer/releases/tag/v1.4.1\n. ",
    "spencerkohan": "I ended up using bootlocal.sh as well - it was pretty easy to just symlink to certs.d from a local directory with the expected structure:\n```\n!/bin/sh\nmkdir /etc/docker\nln -s /path/to/certs/dir /etc/docker/certs.d\n```\nThe certificates just have to be somewhere accessible from inside the VM.\n. ",
    "hairyhenderson": "Just wanted to add my experience since it took me so long to figure this out ;)\nI decided to follow @steeve's advice and put my certs right in the image. @kfish's followup was also useful, except it took me a head-scratching hour to figure out why this wasn't working in the Dockerfile.\nThe problem was that /etc/ssl/certs/ca-certificates.crt gets overwritten at boot time, so I added a command to the /etc/init.d/rcS script.\nHere's what I ended up with:\n```\nFROM boot2docker/boot2docker\nRUN mkdir -p $ROOTFS/usr/local/share/ca-certificates/foo.com\nCOPY foo.crt $ROOTFS/usr/local/share/ca-certificates/foo.com\nRUN mkdir -p $ROOTFS/usr/local/etc/ssl/certs && \\\n  cd $ROOTFS/usr/local/etc/ssl/certs && \\\n  ln -s /usr/local/share/ca-certificates/foo.com/foo.crt foo.crt && \\\n  export hash=openssl x509 -hash -in $ROOTFS/usr/local/share/ca-certificates/foo.com/foo.crt | head -n1 && \\\n  ln -s foo.crt $hash.0 && \\\n  echo \"cat /usr/local/share/ca-certificates/foo.com/foo.crt >> /usr/local/etc/ssl/certs/ca-certificates.crt\" >> $ROOTFS/etc/init.d/rcS\nRUN /make_iso.sh\nCMD [\"cat\", \"boot2docker.iso\"]\n``\n. Any more progress on this issue? I'm having a particularly ugly time with DNS when a VPN client (Cisco AnyConnect) is involved...\n. Can you provide some more details on what you did to get this error? What command(s) you ran, what version of boot2docker, etc...\n. You probably meantdocker run -d --expose=80 2e856b5ecde9`\n. ",
    "koliyo": "@irgeek Thank you, this setup works for me!\nBefore this I tried adding EXTRA_ARGS=\"--insecure-registry my.registry.domain:port\"\nto /var/lib/boot2docker/profile but this only solves half the problem, I still get the\nx509: certificate signed by unknown authority response.\n. ",
    "rickli1989": "@irgeek +1, works for me\n. ",
    "kevinsimper": "My files is not copied into boot2docker? Anybody know why? Or is there something else you have to do yo make @irgeek solution work?\n. My files is not copied into boot2docker? Anybody know why? Or is there something else you have to do yo make @irgeek solution work?\n. ",
    "jacoelho": "Couldn't we use a container for this?\ndocker run -v /etc/ssl/certs/:/etc/ssl/certs/ -v /usr/local/share/ca-certificates:/usr/local/share/ca-certificates ubuntu \nadd certificates and run all the needed commands\nthis should work (not tested yet)\n. ",
    "0xE282B0": "@jacoelho great approach, thanks! Sometimes the simplest solutions are the best.\n. ",
    "roma86": "Add my two cents worth. Connect docker to private registry unexpected hard procedure.\nI have installed official docker-registry under nginx ssl proxy with basic auth. \nTesting connection to this registry from my mac:\n``` bash\nport 80 redirect to 301 as setup\n$ curl cwt-registry.com\n301 Moved Permanently\n```\n``` bash\nwrong auth password\n$ curl --user kdocker:'**' --cacert ~/Downloads/ca.pem  https://cwt-registry.com\n401 Authorization Required\n```\n``` bash\ncorrect user/login\n$ curl --user kdocker:'*' --cacert ~/Downloads/ca.pem  https://cwt-registry.com\n\"\\\"docker-registry server\\\"\"\n```\n``` bash\nv1/_ping also works\n$ curl --user kdocker:'Ju3ke*3h499(sdj0)sd5e2' --cacert ~/Downloads/ca.pem  https://cwt-registry.com/v1/_ping\n\"{}\"\n```\nI used the methods described @mickep76 and @irgeek \nBut every time get same error:\n``` bash\n$ docker login cwt-registry.com\n\"Error response from daemon: v1 ping attempt failed with error: Get https://cwt-registry.com/v1/_ping ...\nsimply place the CA certificate at /etc/docker/certs.d/cwt-registry.com/ca.crt\"\n```\nFollow this message i try this \n``` bash\ndocker@boot2docker:~$ sudo vi /var/lib/boot2docker/bootlocal.sh\nsudo mkdir -p \"/etc/docker/certs.d/cwt-registry.com\"\nsudo cp \"/var/lib/boot2docker/certs/ca.pem\" \"/etc/docker/certs.d/cwt-registry.com/ca.crt\"\nexit\n$ boot2docker restart\n$ boot2docker ssh\ndocker@boot2docker:~$ sudo ls /etc/docker/certs.d/cwt-registry.com/\nca.crt\n```\nFinally same result. \nI can not understand why is so hard. \nI am sorry, @jacoelho can you explain you method of resolve this issue. I can run ubuntu container in way that you describe, but how it should help connect to private registry?\n. ",
    "tlightsky": "@mickep76 +1,works well for me\n. ",
    "flychen50": "@mickep76  thank you,+1\n. ",
    "daagar": "The solution presented by @irgeek above worked fine for docker 1.7.1/boot2docker - however, it seems to no longer be sufficient for Docker 1.8.1b via a Toolbox installation. \nI've added the needed cert to /var/lib/boot2docker/certs, and created the necessary bootlocal.sh script. This does allow 'docker pull' to get past the x509 error. However, the pull itself still fails (from the client, with a 'Can't reach any registry endpoint'). The following shows the relevant excerpt form docker.log. Note that once outside of the company network on the same installation, a 'docker pull' works fine. I'm commenting here as I still believe it is something going wonky with the certs, but I can open this as a new issue if that's not the case.\n```\ntime=\"2015-08-19T14:13:25.025194341Z\" level=debug msg=\"Calling POST /images/crea\nte\"\ntime=\"2015-08-19T14:13:25.025268176Z\" level=info msg=\"POST /v1.20/images/create?\nfromImage=hello-world%3Alatest\"\ntime=\"2015-08-19T14:13:25.025758796Z\" level=debug msg=\"Trying to pull hello-worl\nd from https://registry-1.docker.io v2\"\ntime=\"2015-08-19T14:13:25.576184346Z\" level=debug msg=\"Fetched 1 base graphs at\n2015-08-19 14:13:25.57615336 +0000 UTC\"\ntime=\"2015-08-19T14:13:25.584767097Z\" level=debug msg=\"Reloaded graph with 3 gra\nnts expiring at 2017-03-22 19:04:46.713978458 +0000 UTC\"\ntime=\"2015-08-19T14:13:26.397998709Z\" level=debug msg=\"Pulling tag from V2 regis\ntry: \\\"latest\\\"\"\ntime=\"2015-08-19T14:13:27.414716213Z\" level=debug msg=\"v2 error: errcode.Error u\nnauthorized: access to the requested resource is not authorized\"\ntime=\"2015-08-19T14:13:27.415026858Z\" level=debug msg=\"Error trying v2 registry:\n unauthorized: access to the requested resource is not authorized\"\ntime=\"2015-08-19T14:13:27.415058513Z\" level=debug msg=\"Trying to pull hello-worl\nd from https://index.docker.io v1\"\ntime=\"2015-08-19T14:13:27.483446594Z\" level=debug msg=\"Fetched 1 base graphs at\n2015-08-19 14:13:27.483413884 +0000 UTC\"\ntime=\"2015-08-19T14:13:27.483511319Z\" level=debug msg=\"hostDir: /etc/docker/cert\ns.d/docker.io\"\ntime=\"2015-08-19T14:13:27.484138172Z\" level=debug msg=\"[registry] Calling GET ht\ntps://index.docker.io/v1/repositories/library/hello-world/images\"\ntime=\"2015-08-19T14:13:27.495658509Z\" level=debug msg=\"Reloaded graph with 3 gra\nnts expiring at 2017-03-22 19:04:46.713978458 +0000 UTC\"\ntime=\"2015-08-19T14:13:29.542515521Z\" level=debug msg=\"Retrieving the tag list\"\ntime=\"2015-08-19T14:13:29.967607311Z\" level=debug msg=\"Got status code 401 from\nhttps://registry-1.docker.io/v1/repositories/library/hello-world/tags/latest\"\ntime=\"2015-08-19T14:13:29.967762474Z\" level=error msg=\"unable to get remote tags\n: Could not reach any registry endpoint\"\ntime=\"2015-08-19T14:13:29.968026579Z\" level=debug msg=\"Not continuing with error\n: Could not reach any registry endpoint\"\n```\n. Holy cow, that works @Shuliyey! I do still need a copy of the *.pem files to be in /var/lib/boot2docker/certs as well but otherwise that was the magic voodoo to finally hit the official docker hub from inside a MITM certificate rewrite proxy. \n. @joshskinner's solution appears to have been the key in a Windows 7 environment with docker-machine and Cisco AnyConnect. Setting the port-forward IP to the docker-machine IP rather than 127.0.0.1 worked around certificate issues that were present with @johnnyt's solution.\nAs stated by @Kalle80, be sure to create the VM before connecting to VPN. Also, once having run AnyConnect it was necessary to reboot before AnyConnect was truly shutdown, even after killing the visible Cisco services. \n. ",
    "livecano": "Can you guys confirm if the actual workaround on the documentation Using self-signed certificates is valid for docker > 1.8.1 via Toolbox? I place my ca in the folder /etc/docker/certs.d/domain:8080/ca.crt which points to the private registry and still not working at all, I wonder if there is any way to use the self-signed certificate without having to add the flag --insecure-registry to the configuration.\n. ",
    "varsy": "I've installed Docker Toolbox on Mac instead of boot2docker and now it can't work with insecure registry. I haven't any /var/lib/boot2docker/profile file and nothing happened even when I created one with EXTRA_ARGS. Placing my ca.cert to /etc/docker/certs.d/.../ca.rt inside the VM doesn't work either.\nAs for me, the following workaround helped. Edit /etc/init.d/docker inside your virtualbox VM:\nvars@andreysizov-mbp:~ \u00bb docker-machine ssh default\ndocker@default:~$ sudo vi /etc/init.d/docker\nAdd line:\n```\n...\ntest -f '/var/lib/boot2docker/profile' && . '/var/lib/boot2docker/profile'\nEXTRA_ARGS=\"--insecure-registry docker-registry.labs.intellij.net\"\n...\n```\nRestart docker service:\ndocker@default:~$ sudo /etc/init.d/docker stop\ndocker@default:~$ sudo /etc/init.d/docker start\n. ",
    "olimsaidov": "@varsy, Thank you!\n. ",
    "Shuliyey": "as far as I know boot2docker doesn't come with any certificate import tools, so this made it a bit difficult to add ssl certificate to your certificate bundle.\nBut you can still do it manually. \n- make sure you have your selfsigned certificate in PEM format, usually this file has the .crt file type, copy the file to /usr/local/share/ca-certificates\nbash\nsudo cp <your_crt_file> /usr/local/share/ca-certificates/\n- check again this crt file of your is in PEM format, the below command should return 1, if it is in PEM format, otherwise you should convert your crt file to PEM format.\nbash\ncat /usr/local/share/ca-certificates/<your_crt_file> | grep 'BEGIN.* CERTIFICATE' | wc -l\n- (optional) you should verify that the fingerprint of this certificate does match the original certificate you created, but this step is not necessary as long as you are sure the crt file you are trying to import to the ca-bundle can be trusted\nbash\nopenssl x509 -noout -fingerprint -in /usr/local/share/ca-certificates/<your_crt_file>\n-  create a .pem simlink in /etc/ssl/certs pointing to your original certificate location\nbash\nsudo ln -s /usr/local/share/ca-certificates/<your_crt_file> /etc/ssl/certs/<your_crt_file_name_without_the_file_type>.pem\n- create a hash simlink (this hash simlink should end with .0 extension) in /etc/ssl/certs pointing to the previous .pem simlink you just created\nbash\ncd /etc/ssl/certs && sudo ln -s <the_previous_pem_simlink_you_created> `openssl x509 -noout -hash -in /usr/local/share/ca-certificates/<your_crt_file>`.0\n- last step for extra assurance, append the content of your crt file to the /etc/ssl/certs/ca-certificates.crt. Please do this step carefully, it's always a good idea to back up the /etc/ssl/certs/ca-certificates.crt file, before doing this step (in case you actually overridden the file, instead of modifying it) \nbash\nsudo -i -u root\ncat /usr/local/share/ca-certificates/<your_crt_file> >> /etc/ssl/certs/ca-certificates.crt\nexit\nIf you have done all the above step correctly you should get something like this (remember when you do the grep, grep for your crt file name without the file type. In my case I just grep \"blue\" short for \"bluecoat\")\nbash\ninfinityadmin@mep-openstack1:/etc/ssl/certs$ ls -l /etc/ssl/certs | grep blue\nlrwxrwxrwx 1 root root     12 Feb  5 07:56 37b52fd1.0 -> bluecoat.pem\nlrwxrwxrwx 1 root root     45 Feb  5 07:56 bluecoat.pem -> /usr/local/share/ca-certificates/bluecoat.crt\nIn my case\nthe bluecoat.crt is my crt_file, bluecoat.pem is the pem simlink file i created pointing to my bluecoat.crt. 37b52fd1.0 is the hash simlink (ending with .0 extension) I created pointing to my pem simlink.\nFor more information, you can read this article\nhttp://gagravarr.org/writing/openssl-certs/others.shtml\nThe final thing to do to have more assurance is to restart docker daemon\nbash\nsudo /etc/init.d/docker restart\nBut again, I would still like to address that it would be great if boot2docker can come with a certificate bundle update tool like update-ca-certificates in Ubuntu or update-ca-trust in CentOS\n. thanks @tobilarscheid, you are right  :smile: \nI've fixed the typo ;). Cheers :+1: \n. thank you @daagar , glad it worked :smile: .\nsorry I'm actually trying to understand the /var/lib/boot2docker/certs part, do you mean if the certificate is not in /var/lib/boot2docker/certs, you actually still won't be able to do docker pull/push (even with certificates updated in /etc/ssl/certs/)?\nInteresting case, does it apply for the both the case?\n-  doing a docker pull/push from a host terminal (so not in the boot2docker vm, but on the Windows/Mac host)\n-  doing a docker pull/push inside the boot2docker vm\nI believe the /var/lib/boot2docker repository is mainly used to provide the communication between the boot2docker guest vm and the host OS (Windows/Mac). So I'm trying to get a better understanding on how boot2docker manages its certificates verification\nyou can do \nbash\ndocker-machine ssh default\nto get into the boot2docker os vm :smile: \n. thanks @mickep76 +1 :+1: \nthe changes that's made to boot2docker / partition drive will be overwritten everytime docker-machine is restarted. So the /var/lib/boot2docker/bootlocal.sh is useful in this case to keep your changes.\n- create the /var/lib/boot2docker/bootlocal.sh file and set the execution permission correctly\nbash\nsudo touch /var/lib/boot2docker/bootlocal.sh && sudo chmod +x /var/lib/boot2docker/bootlocal.sh\n- put your self-signed crt file at /var/lib/boot2docker/certs/, this path can actually be any path, that can keep its files saved (instead of overwritten on docker-machine restart ). E.g. /home/docker/ can also be a good choice\nbash\nsudo mkdir /var/lib/boot2docker/certs\nmv <your_crt_file> /var/lib/boot2docker/certs/\n- add the changes to be made into /var/lib/boot2docker/bootlocal.sh, (In this case, we're adding the certificate to /etc/docker/certs.d/)\nbash\nmkdir -p /etc/docker/certs.d/<your_docker_registry_url> && cp <your_crt_file_location> /etc/docker/certs.d/<your_docker_registry_url>/\n- restart docker-machine\n``` bash\nIf terminal is actually the docker-machine VM terminal\nsudo reboot\nif terminal is started using docker quick start terminal\ndocker-machine restart \n```\nNote: In my case this is my contents in /var/lib/boot2docker/bootlocal.sh\nbash\nmkdir -p /etc/docker/certs.d/registry.mev-rancher.dev.tech.local && cp /var/lib/boot2docker/certs/radiance.crt /etc/docker/certs.d/registry.mev-rancher.dev.tech.local/\n. @kumlali nice, would be great also to integrate this into kitematic. If we can configure the proxy and ssl settings inside the kinematic gui (like in the settings page), would make proxy and certificate configuration much easier.\n. @magnayn  interesting the boot2docker 1.11 version of docker should work if the certificate is placed in the /var/lib/boot2docker/certs\ndid you put the public certificate (which is not the private key) in the /var/lib/boot2docker/certs\nif you could do the below and verify your certificate (which you put under /var/lib/boot2docker/certs)\nbash\ncat /var/lib/boot2docker/certs/<your_crt_file> | grep 'BEGIN.* CERTIFICATE' | wc -l # this should return 1\n:smile: \n. ",
    "tobilarscheid": "Hi,\nthanks for your input. This really helped a lot! Actually, this is the only working way for boot2docker.\nTwo additions:\nShouldn't this\n\nln -s /usr/local/share/ca-certificate. /etc/ssl/certs/.pem\n\nrather be\n\nln -s /usr/local/share/ca-certificates/ /etc/ssl/certs/.pem\n\n??\nAlso, in this statement:\n\ncat /usr/local/share/ca-certificates/ >> /etc/ssl/certs/ca-certificate.crt\n\nthe last part should be\n\ncat /usr/local/share/ca-certificates/ >> /etc/ssl/certs/ca-certificates.crt\n. \n",
    "kumlali": "Thanks @Shuliyey. In my environment(Docker Toolbox 1.9.1i & Windows 7), copying certificate files to /var/lib/boot2docker/certs is enough. I do not need to create /etc/docker/certs.d/<your_docker_registry_url> and copy files to it.\n@all\nAfter I spent significant time to make Docker Toolbox on Windows behind proxy to work, I decided to create a small project to help others: https://github.com/kumlali/windocker. \nHope you'll find it usefull.\n. ",
    "so0k": "ok, so since Boot2Docker 1.6 any certs you place in /var/lib/boot2docker/certs are automatically loaded for you - cool\nsee: https://github.com/boot2docker/boot2docker/pull/807/files\n. Could you try these instructions? http://docker-saigon.github.io/post/Private-Registry-Setup/ it includes adding trust for self signed CA\n. @softwarevamp - for containers to trust ca's from the host, mount the host certs dir and run update-certificates before starting the process in the container?. @softwarevamp - for containers to trust ca's from the host, mount the host certs dir and run update-certificates before starting the process in the container?. For windows, the below gist will mount G drive to the samba share, I imagine using robocopy mirroring to keep a local source code directory synchronized, could be added to task runners such as grunt\nhttps://gist.github.com/so0k/708eeaf5a9382db842eb\nEDIT: I've replaced this with a powershell build script that not only synchronizes but also uses SSH to rebuild the containers\n. One concern I've seen raised by others is the maximum image size for the boot2docker-vm. as suggested, additional vhd's or modified vbox config file might get around that.\n. Thank you for that, for now I'm not running into space issues.\nI realized that my scripts should use the /opt/ directory - I will update them at some point.\nFor now, I've added a powershell script that uses robocopy to sync with the samba share, then uses\nPosh-SSH to stop/remove/rebuild/start all containers.\nthe script is here, but it depends on other scripts within the project directory (also publicly shared on github)\n. ",
    "gotgenes": "\nok, so since Boot2Docker 1.6 any certs you place in /var/lib/boot2docker/certs are automatically loaded for you - cool\nsee: https://github.com/boot2docker/boot2docker/pull/807/files\n\nIf you're arriving here from Google, the above is the proper solution to, \"How do I use self-signed certificates when using boot2docker?\"\nNote, though, at the moment, only certificates that end with .pem will be processed. (I have submitted PR #1167 that would also process certificates ending in .crt per the Docker self-signed certificate instructions.) If you place your certificate in /var/lib/boot2docker/certs/ but it doesn't work, make sure it's in PEM format, and make sure the file name ends with \".pem\".\n. @magnayn Did you reboot your boot2docker instance after adding your certificates to /var/lib/boot2docker/certs? boot2docker will not process the certificates until a reboot takes place. In my case, I issued\ndocker-machine reboot <boot2docker_instance>\nAlso, yes, by default there is no certs directory in /var/lib/boot2docker; I had to create it, too.\n. > note that restarting the docker daemon manually solves it, as that triggers a cert re-generation\n\nboot2docker ssh sudo /etc/init.d/docker restart\nplease tell me if this doesn't work for you, as its the basis for the fix i'm pondering (essentially, i think the 1.7 dhcp ip address setting is happening slightly slower than before)\n\n@SvenDowideit, this did work for me, in my case.\n. > Given https://github.com/boot2docker/boot2docker/blob/d63b52eefd94c793ec7ecb3bc198eb425fd78ed9/rootfs/rootfs/usr/local/etc/init.d/docker#L31-L35 (persistent /etc/docker), wouldn't it be better to follow the official documentation and use /etc/docker/certs.d for this now?\nPossibly? Documentation in the main README.md would go a long way to help here, as well as a definitive answer in the FAQ of, \"How do I add a self-signed certificate to boot2docker?\" /var/lib/boot2docker/etc/docker was at no point mentioned in #347. That change was introduced in January, yet boot2docker users are still searching for answers as the comments in #347, and it is still an open issue. #347 is the second hit on Google for me with the search \"boot2docker self signed certificate\" (the top hit being #735, which points to #347).\n. @tianon Upon further review of the Docker self-signed certificates documentation, placing certificates in /etc/docker/certs.d may be insufficient:\n\nWhen using authentication, some versions of docker also require you to trust the certificate at the OS level.\n\nThis latter action (making the OS trust the certificates) appears to be the role of install-ca-certs, which processes the certificates in /var/lib/boot2docker/certs.\n. Thanks, all!\n. ",
    "softwarevamp": "container host does trust the certificate but the not the container itself\nwhen i  run ruby got below:\n```\nFetching source index from https://rubygems.org/\nRetrying fetcher due to error (2/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.\nThere is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn't have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change 'https' to 'http'.\nthe container SHOULD trust it also.. container host does trust the certificate but the not the container itself\nwhen i  run ruby got below:\nFetching source index from https://rubygems.org/\nRetrying fetcher due to error (2/4): Bundler::Fetcher::CertificateFailureError Could not verify the SSL certificate for https://rubygems.org/.\nThere is a chance you are experiencing a man-in-the-middle attack, but most likely your system doesn't have the CA certificates needed for verification. For information about OpenSSL certificates, see http://bit.ly/ruby-ssl. To connect without using SSL, edit your Gemfile sources and change 'https' to 'http'.\n```\nthe container SHOULD trust it also.. ",
    "MetinSolmaz": "In Boot2Docker (version 17.10.0-ce), for me it only worked when the certificate was called 'ca.crt' in a folder with hostname for which the certificate was used.\nSo copy the certificate as follows:\n/var/lib/boot2docker/etc/docker/certs.d//ca.crt. ",
    "leonardochaia": "In Boot2Docker 18.05.0-ce using self-signed certificates it seems to be enough by copying the ca.crt and cert.pem to /etc/docker/certs.d/{hostname} in a bootsync.sh script.\nBoot2Docker version 18.05.0-ce, build HEAD : b5d6989 - Thu May 10 16:35:28 UTC 2018\nDocker version 18.05.0-ce, build f150324. ",
    "wolfs": "Will this be merged soon? Should sunrpc then be also included?\n. Probably related to pull #349.\n. I did the ping from the VM console and an already existing ssh session locked up. As soon as the DNS-Lookup finished the ssh-session was back to normal. So it seems that network gets unresponsive on nslookup.\n. ",
    "gijs": "Thx. Is there any documentation on how to use this yet?\n. ",
    "fayep": "OK, There are two things you need to do to resolve this, I believe:\n1) boot2docker should run the following:\n    VBoxManage modifyvm boot2docker-vm --natdnshostresolver1 on\n  boot2docker already picks up the resolv.conf update from the 10.0.2.* interface this way.\n  this makes people who use VPNs happy, is there any reason not to do this by default?\n2)  make docker start AFTER the nat interface is up by udhcpd.  Container DNS is set to whatever the host DNS is at the time the docker daemon starts.  This is google by default, and restarting docker after the resolv.conf is rewritten to 10.0.2.3 by udhcp causes the containers to also get 10.0.2.3 rather than 8.8.8.8, 8.8.4.4.  As a workaround, you can restart docker:\nsudo /usr/local/etc/init.d/docker stop\nsudo /usr/local/etc/init.d/docker start\n. Sorry I couldn't get around to it until now, but I've submitted a PR to boot2docker and boot2docker-cli   I am running these right now.\n. Er Yay.  I did consider doing a docker reload when the resolv.conf is updated, but I feared that it would cause havoc on lease renewal.  I guess this can be closed out?\n. faye.salwin:~/Sources/opower-fat-containers $ docker version\nClient version: 1.1.0-dev\nClient API version: 1.13\nGo version (client): go1.3\nGit commit (client): 02ef943-dirty\nServer version: 1.1.0-dev\nServer API version: 1.13\nGo version (server): go1.3\nGit commit (server): 02ef943-dirty\nChanging to go1.3 does NOT resolve the updating of resolv.conf problem.\n. faye.salwin:~/Sources/opower-fat-containers $ docker version\nClient version: 1.1.0-dev\nClient API version: 1.13\nGo version (client): go1.3\nGit commit (client): 02ef943-dirty\nServer version: 1.1.0-dev\nServer API version: 1.13\nGo version (server): go1.3\nGit commit (server): 02ef943-dirty\nChanging to go1.3 does NOT resolve the updating of resolv.conf problem.\n. Urgh,  And it looks as though the kernel update to 3.15 has changed something... oh well.  Oh yeah, not building on a system running the new kernel already.\n. The goal of this is to allow me to build docker \"the official supported way\" from the mac which right now only works if you run it from the boot2docker ssh shell and the copy the files out of the VM, or manually run: docker run -it --privileged -e TESTFLAGS -e TESTDIRS -e DOCKER_GRAPHDRIVER -e DOCKER_EXECDRIVER \"docker:master\" hack/make.sh binary cross and docker cp the files out after finding the containerid because that's squashed now.  I was thinking that we could export /Users as /Users to the boot2docker-VM.  Do you really not need the VBoxService at all?  Is that only necessary for the Automounter and other things we don't use?\n. Would docker accept a patch to the docker build script to say --volumes-from boot2docker/uservolume for the special case of running on a Mac with boot2docker?  That container would modprobe vboxguest,vboxsf and mount /Users as /Users.  Can you combine --volumes-from with a -v bind map?\n. Successfully built f141d5678bf3\ndocker run --rm -it --privileged -e TESTFLAGS -e TESTDIRS -e DOCKER_GRAPHDRIVER -e DOCKER_EXECDRIVER -v \"/Users/faye.salwin/Sources/docker/bundles:/go/src/github.com/dotcloud/docker/bundles\" \"docker:master\" hack/make.sh binary cross\nbundles/1.1.0-dev already exists. Removing.\n---> Making bundle: binary (in bundles/1.1.0-dev/binary)\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/binary/docker-1.1.0-dev\n---> Making bundle: cross (in bundles/1.1.0-dev/cross)\nCreated symlinks: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/linux/amd64/docker /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/linux/amd64/docker-1.1.0-dev /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/linux/amd64/docker-1.1.0-dev.md5 /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/linux/amd64/docker-1.1.0-dev.sha256\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/linux/386/docker-1.1.0-dev\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/linux/arm/docker-1.1.0-dev\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/darwin/amd64/docker-1.1.0-dev\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/darwin/386/docker-1.1.0-dev\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/freebsd/amd64/docker-1.1.0-dev\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/freebsd/386/docker-1.1.0-dev\nCreated binary: /go/src/github.com/dotcloud/docker/bundles/1.1.0-dev/cross/freebsd/arm/docker-1.1.0-dev\nfaye.salwin:~/Sources/docker $ ls -l bundles/1.1.0-dev/\nbinary/ cross/\nfaye.salwin:~/Sources/docker $ ls -l bundles/1.1.0-dev/cross/\ntotal 0\ndrwxr-xr-x  4 faye.salwin  staff  136 Jul  6 16:45 darwin\ndrwxr-xr-x  5 faye.salwin  staff  170 Jul  6 16:45 freebsd\ndrwxr-xr-x  5 faye.salwin  staff  170 Jul  6 16:44 linux\nmy ISO is identically sized to the stock 1.1.0 iso:\n-rw-r--r--  1 faye.salwin  staff  23068672 Jul  6 16:41 boot2docker.iso\n-rw-r--r--  1 faye.salwin  staff  23068672 Jul  6 12:17 boot2docker.iso.old\n-rw-r--r--  1 faye.salwin  staff  23068672 Jun 27 22:37 boot2docker.iso.stock\nfaye.salwin:~/Sources/docker $ docker version\nClient version: 1.1.0-dev\nClient API version: 1.13\nGo version (client): go1.3\nGit commit (client): 02ef943-dirty\nServer version: 1.1.0-dev\nServer API version: 1.13\nGo version (server): go1.3\nGit commit (server): 02ef943-dirty\nI thought I'd build docker with go1.3 because of the DNS issue and that's why this pull exists.\n. Needed outside the container:\nVBoxManage sharedfolder add boot2docker-vm --name users --hostpath /Users\nVBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/users 1\n. I am not going to do that.  There's literally no point: if it was just the modules then the magic bleedthrough into the running kernel would be fine, but if you can only mount from inside a container (it needs mount.vboxsf or you get a protocol error) then this is a pointless exercise.  I'll reluctantly keep my functional fork which just works with docker and packer builds.  It makes more sense to be utilizing tczs.  Have a repository for tczs for boot2docker (or submit your kernel tczs to tiny core) and you can strip out a bunch of things that you build into the image right now.  Of course you'd need the internet to run boot2docker (or install the extra modules to your VM image when you do have the computer on the internet), but you'd need that to get a container anyway.\n. I am not going to do that.  There's literally no point: if it was just the modules then the magic bleedthrough into the running kernel would be fine, but if you can only mount from inside a container (it needs mount.vboxsf or you get a protocol error) then this is a pointless exercise.  I'll reluctantly keep my functional fork which just works with docker and packer builds.  It makes more sense to be utilizing tczs.  Have a repository for tczs for boot2docker (or submit your kernel tczs to tiny core) and you can strip out a bunch of things that you build into the image right now.  Of course you'd need the internet to run boot2docker (or install the extra modules to your VM image when you do have the computer on the internet), but you'd need that to get a container anyway.\n. ",
    "hangtwenty": "this link may (or may not) be relevant: http://www.devopslife.com/2014/08/08/docker-boot2docker-and-dns-resolution-of-containers.html\n. @auxesis can you please adjust line 3 in your code snippet? it's a helpful tip, but you typed 192.168.56 instead of 192.168.59.103 and it could screw up a copy-and-paster :tongue: \n. ",
    "davidxia": "@SvenDowideit I've noticed that editing /var/lib/boot2docker/profile in the boot2docker VM to have the correct nameservers (e.g. EXTRA_ARGS=\"--dns 192.168.1.2\") is persistent. This is a better workaround than changing /etc/resolv.confwhich is overwritten on boot2docker restart.\nIs there a way to have EXTRA_ARGS=\"--dns 192.168.1.2\" on my Mac's ~/.boot2docker/profile work?\n. @SvenDowideit I've noticed that editing /var/lib/boot2docker/profile in the boot2docker VM to have the correct nameservers (e.g. EXTRA_ARGS=\"--dns 192.168.1.2\") is persistent. This is a better workaround than changing /etc/resolv.confwhich is overwritten on boot2docker restart.\nIs there a way to have EXTRA_ARGS=\"--dns 192.168.1.2\" on my Mac's ~/.boot2docker/profile work?\n. @SvenDowideit thanks for clarifying\ncc @rohansingh @rculbertson @drewcsillag @Kobolog \n. @thaJeztah Thanks for clarifying.. Feel free to close.. ",
    "dev-guy": "/etc/resolv.conf in my container contained settings that worked on my home network but not on other wifi networks. Since my laptop moves around a lot, that's a big problem for me. I overwrote the file with the contents \"nameserver 8.8.8.8\" and everything's happy again.\n. @duykhoa, I have not needed to change the network interface settings. I am therefore wondering out loud why that was necessary for you.\n. ",
    "oplatek": "@SvenDowideit is it supposed to work in boot2docker 1.8?\nI have version:\nboot2docker version\nBoot2Docker-cli version: v1.8.0\nGit commit: 9a26066\nand still have the same problem. It picks the local dns server and I have not figured out anything better than \nRUN echo \"8.8.8.8\" >  /etc/resolv.conf\nRUN echo \"8.8.4.4\" >>  /etc/resolv.conf\nThanks for any hint how to fix it.\n. ",
    "victorklos": "An excellent virtualisation check is provided by http://micky.ibh.net/~liske/imvirt.html, maybe you can use that (or learn from it)\n. An excellent virtualisation check is provided by http://micky.ibh.net/~liske/imvirt.html, maybe you can use that (or learn from it)\n. ",
    "wglambert": "Issue is resolved\nconsole\nBoot2Docker version 18.05.0-ce, build HEAD : b5d6989 - Thu May 10 16:35:28 UTC 2018\nDocker version 18.05.0-ce, build f150324\ndocker@boot2docker:~$ cat /etc/boot2docker \nHEAD : b5d6989 - Thu May 10 16:35:28 UTC 2018\ndocker@boot2docker:~$ cat /etc/version \n18.05.0-ce. Issue is resolved, pruning. Issue seems resolved, going to prune. Does it work now, or is it perhaps a networking issue?\n```console\n$ wget https://github.com/boot2docker/boot2docker/releases/download/v18.03.1-ce/boot2docker.iso\n--2018-06-11 11:06:14--  https://github.com/boot2docker/boot2docker/releases/download/v18.03.1-ce/boot2docker.iso\nResolving github.com (github.com)... 192.30.255.113, 192.30.255.112\nConnecting to github.com (github.com)|192.30.255.113|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://github-production-release-asset-2e65be.s3.amazonaws.com/14930729/be3dfbf8-4936-11e8-88a6-1d0cd712540c?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20180611%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180611T180614Z&X-Amz-Expires=300&X-Amz-Signature=c4a6b4c463b7aafef344b2b0dcb5f9815b095a673c57010ba3acbcdfa585512d&X-Amz-SignedHeaders=host&actor_id=0&response-content-disposition=attachment%3B%20filename%3Dboot2docker.iso&response-content-type=application%2Foctet-stream [following]\n--2018-06-11 11:06:14--  https://github-production-release-asset-2e65be.s3.amazonaws.com/14930729/be3dfbf8-4936-11e8-88a6-1d0cd712540c?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20180611%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180611T180614Z&X-Amz-Expires=300&X-Amz-Signature=c4a6b4c463b7aafef344b2b0dcb5f9815b095a673c57010ba3acbcdfa585512d&X-Amz-SignedHeaders=host&actor_id=0&response-content-disposition=attachment%3B%20filename%3Dboot2docker.iso&response-content-type=application%2Foctet-stream\nResolving github-production-release-asset-2e65be.s3.amazonaws.com (github-production-release-asset-2e65be.s3.amazonaws.com)... 52.216.227.96\nConnecting to github-production-release-asset-2e65be.s3.amazonaws.com (github-production-release-asset-2e65be.s3.amazonaws.com)|52.216.227.96|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 47185920 (45M) [application/octet-stream]\nSaving to: \u2018boot2docker.iso\u2019\nboot2docker.iso     100%[=================>]  45.00M  9.23MB/s    in 5.4s    \n2018-06-11 11:06:20 (8.26 MB/s) - \u2018boot2docker.iso\u2019 saved [47185920/47185920]\n```. ",
    "lazywei": "OK, i got it. Thank you both!\n@SvenDowideit So I can use that samba server for my own container, right?\n. Same here\n. @jfrazelle I fixed this problem by\n1. Download the latest boot2docker-cli binaries: https://github.com/boot2docker/boot2docker-cli/releases\n2. boot2docker down\n3. boot2docker delete\n4. boot2docker init\n5. boot2docker up\n6. export DOCKER_HOST=tcp://:2375\nThen all docker commands work fine\n. ",
    "rhysym": "@SvenDowideit thanks for the reply. I managed to build by adding this line\nUSER root\nI'm not sure whether this is necessary but I did build successfully.\n. @SvenDowideit thanks for the reply. I managed to build by adding this line\nUSER root\nI'm not sure whether this is necessary but I did build successfully.\n. @SvenDowideit  I commented out USER root and could build successfully. However, I would also like to point out that when I tried to build on a brand new Ubuntu 14.04 virtual machine, I got the same error. The first thing I did after installing docker was to build boot2docker.\n. @SvenDowideit  I commented out USER root and could build successfully. However, I would also like to point out that when I tried to build on a brand new Ubuntu 14.04 virtual machine, I got the same error. The first thing I did after installing docker was to build boot2docker.\n. @ramakrishnan I added it right below the MAINTAINER line.\n. @ramakrishnan No, I didn't see any errors until it came to cpio.\n. @steeve did you try on an existing machine or build on a brand new (virtual) machine?\n. Yeah, the issue is related to the version of docker. On Ubuntu 14.04, after running\n$ sudo apt-get update\n$ sudo apt-get install docker.io\n$ sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker\nI got\nClient version: 0.9.1\nGo version (client): go1.2.1\nGit commit (client): 3600720\nServer version: 0.9.1\nGit commit (server): 3600720\nGo version (server): go1.2.1\nLast stable version: 0.11.1, please update docker\nFollowing the instruction here, I then got\nClient version: 0.11.1\nClient API version: 1.11\nGo version (client): go1.2.1\nGit commit (client): fb99f99\nServer version: 0.11.1\nServer API version: 1.11\nGit commit (server): fb99f99\nGo version (server): go1.2.1\nThe build succeeded with docker version 0.11.1, but failed with docker version 0.9.1.\n. ",
    "ramakrishnan": "Even I am facing the same error. Can you be specific where you added USER root\nI even faced few problem in getting through the apt-get installs. I had to include the flag --fix-missing.\nOS Ubuntu 14-04\n. Thanks, I will try it, and BTW did you face any issues while running the apt-get installs?\n. @SvenDowideit \nWhen I installed docker in my Ubuntu 14.04 sudo apt-get install docker-io I got version 0.9.\nBut on Ubuntu 13.10 sudo apt-get install lxc-docker gave me docker version 0.11\nboot2docker build works fine in 0,11\n. ",
    "arjenpdevries": "I have docker version 1.2.0 and the current boot2docker git checkout.\nTrying to build on a relatively clean redhat machine, Fedora 20.\nExactly same problem occurs: the building process fails on errors with cpio:\nStep 31 : RUN cd $ROOTFS && zcat /tcl_rootfs.gz | cpio -f -i -H newc -d --no-absolute-filenames\n ---> Running in ab1b8298cb45\ncpio: dev/hda1: Cannot mknod: Permission denied\ncpio: dev/hda7: Cannot mknod: Permission denied\ncpio: dev/sda3: Cannot mknod: Permission denied\ncpio: dev/hda3: Cannot mknod: Permission denied\ncpio: dev/sda5: Cannot mknod: Permission denied\n[...]\nAdding \"USER root\" does not help me however.\n. Update:\nFedora 20 has just created version 1.3.0 package for docker.\nI have installed from rpm using:\n  https://kojipkgs.fedoraproject.org/packages/docker-io/1.3.0/1.fc20/x86_64/\nThis does not solve the problem with the step involving cpio failing.\n. Another update:\nUsing the same process, out of the box, on a different machine, also RH F20, it did work without cpio errors.\nYet have to find out what makes the difference.\n. They do reside in /opt though - need to modify $ ROOTFS/opt usage?\n. Oh and the README.md fix seems correct (/boot.log is not used)\n. I see!\nThanks for clarifying.\nThe problem is that the template in /opt does suggest that it is the one to\nmodify -\nmaybe its contents should refer to /var/lib/boot2docker as the place to\nmake modification?\nOr simply put\ntest -f \"/var/lib/boot2docker/bootlocal.sh\" && .\n\"/var/lib/boot2docker/bootlocal.sh\"\nas only line in that file?\nCheers,\nArjen\nOn 27 October 2014 00:47, Sven Dowideit notifications@github.com wrote:\n\nIn doc/FAQ.md:\n\nYou can also set variables that will be used during the boot initialisation (after\n-the automount) by setting them in /var/lib/boot2docker/profile\n+the automount) by setting them in /opt/profile\n\nThese 2 are incorrect - there are non-modifyable versions here, but you\nneed to put yours into /var/lib/boot2docker\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/594/files#r19385039.\n\n\n\nCWI, room L333                            Centre for Mathematics and\nComputer Science\nScience Park 123                           Email: Arjen.de.Vries@cwi.nl\n1098 XG Amsterdam                       tel:       +31-(0)20-5924306\nThe Netherlands                              fax:       +31-(0)20-5924199\n===================== http://www.cwi.nl/~arjen/ ====================\n. ",
    "jojow": "@SvenDowideit I'm running the latest version of boot2docker (v0.9.1). Meanwhile I found out that it is a DNS configuration problem. When I try to ping an IP address directly, the connection works.\nSo, it seems to be a similar or the same issue as discussed in #357\n. @SvenDowideit I'm running the latest version of boot2docker (v0.9.1). Meanwhile I found out that it is a DNS configuration problem. When I try to ping an IP address directly, the connection works.\nSo, it seems to be a similar or the same issue as discussed in #357\n. ",
    "1106944911": "Hi  \uff0cI have the same problem  on ubuntu system\uff0ccompany have proxy network\uff0c\n docker run -it  --net=host ubuntu ping www.google.com, it is ok,but docker build can not access internet ,apt-get update error in Dockerfile \n. Hi  \uff0cI have the same problem  on ubuntu system\uff0ccompany have proxy network\uff0c\n docker run -it  --net=host ubuntu ping www.google.com, it is ok,but docker build can not access internet ,apt-get update error in Dockerfile \n. ",
    "ThomasSteinbach": "I have this issue too. At my home network sudo docker run --rm ubuntu ping www.google.de works fine. When I am in the network of my university, I have to add --net=host. Otherwise it won't work.\nI have docker installed natively on Ubuntu 14.10 in Version 1.4.1. Both host network connections are WIFI connections. At home with personal WPA and the university via certificate.\n. ",
    "Vrakfall": "There's no bash in the image. That's one of the reasons why I made the PR #746.\n. A question to the maintainers: Shouldn't it be written in the doc that docker is talking to the containers though the docker0 interface ? Also, does docker0 always have the ip 172.17.42.1 ?\nI can propose a doc PR if needed.\n. A question to the maintainers: Shouldn't it be written in the doc that docker is talking to the containers though the docker0 interface ? Also, does docker0 always have the ip 172.17.42.1 ?\nI can propose a doc PR if needed.\n. Thanks @bradgessler for that workaround, I really like it. I'll use a groupadd instead as it seems to be a less violent solution to me.\nThe --vbox-share=[] option of boot2docker seems to be another good solution to me if you know the uid in advance but I still prefer a groupadd to this.\nI see no other solution than the workaround because, for me, it all comes from Virtualbox, as @paolomainardi said. It would be better Virtualbox supports POSIX permissions \"on the go\". Sad that remounting doesn't actually work. :'(\nI checked a bit, but not really much, and I didn't find this \"usermod/groupadd\" workaround in the boot2docker documentation. Shouldn't it be there for less users to lose time while trying to figure out why mysql (e.g.) can't write on its on database ?\n. Mmmh, what about performances ? Isn't vboxfs better for hard hdd usages ?\n. Wow, I wasn't expecting such a difference !\nThanks a lot ! You made me change my mind for the NFS solution here ! =D (Would be hard for Windows users btw).\n. Arh ! Any clue or howto about mounting nfs from host to a container ? I find myself stuck because my container can't ping my server.\nThanks in advance !\n. Hosting folders with samba to read them with nfs... Meh, that sounds really weird to me. Ok, with cifs that would work but... I'd really much prefer using nsf (hoster on the host machine if possible) in this case. Any clue ? @paolomainardi ?\n. Thanks for the help. Yes, I'm working on osx at work.\nIt feels I should copy it as root to /var/lib/boot2docker/bootlocal.sh but I can't find the root password anywhere. The docker user can't write to that directory or am I doing something wrong ?\nI tried this:\n$boot2docker ssh\n$cp /Users/osxUser/path/bootlocal.sh /var/lib/boot2docker/bootlocal.sh\ncp: overwrite '/var/lib/boot2docker/bootlocal.sh'? y\ncp: can't create '/var/lib/boot2docker/bootlocal.sh': Permission denied\nI'm forced to using command lines because my goal is to create an automated script.\n. What was I thinking. xD\nOh and thank you for #699. I'm indeed curious AND interested in any better way of sharing host's files to containers.\nI'm still stuck trying to mount the nfs share:\ndocker@boot2docker:~$ sudo sh /var/lib/boot2docker/bootlocal.sh\nmount: RPC: Remote system error - Connection refused\nmount: mounting 192.168.59.3:/Users on /Users failed: Bad file descriptor\nWeird because here is my osx /etc/exports file:\n/Users -mapall=stagiaire:staff 192.168.59.103(rw,non_root_squash,no_subtree_check)\nI'm used to Linux for a long time but I'm new to osx so I might be missing some obvious points.\n. It was done by the .sh script. Sorry, I've removed the obvious lines from the output juste to make it clearer.\nHere the original one:\ndocker@boot2docker:~$ sudo sh /var/lib/boot2docker/bootlocal.sh\numount: can't umount /Users: Invalid argument #Because I tried it multiple times\n/usr/local/sbin/rpcbind is already running\n808\n/usr/local/sbin/rpc.statd is already running\n810\nStarting nfs client utilities.\nmount: 192.168.59.3:/Users failed, reason given by server: Permission denied\nmount: mounting 192.168.59.3:/Users on /Users failed: Bad file descriptor\n. Yup for both statements.\n$ boot2docker ip\n192.168.59.103\n. That did it. :3 It was kinda my fault. I've removed the async option from /var/lib/boot2docker/bootlocal.sh and it worked as soon as I put it back (and after removing options from /etc/exports).\nI'm not used to nfs servers. :s\nI was thinking about moving the discussion to the emails or by skype or any IM way because we kinda were spamming everyone. =/ Sorry for that. But now it's working so it's too late.\nThank you a lot again !\n. @mnapoli If you find yourself stuck with permissions, try mounting your volums with nfs on the boot2docker vm rather than vbox shares. ;D It's pretty neat and supports uid and gid permissions.\n. @mnapoli If you find yourself stuck with permissions, try mounting your volums with nfs on the boot2docker vm rather than vbox shares. ;D It's pretty neat and supports uid and gid permissions.\n. Hi, any update ?\n. Hi, any update ?\n. Let's take boot2docker-vm as example. boot2docker would be the name part of it and -vm the label part. If we have 4 different data disk attached, respectively called boot2docker-data, boot2docker-alpha, testname-one and testname-two, boot2docker will attach boot2docker-data(because it is the first name it is looking for) then it will attach testname-one and will forget the two others because they have the same name.\nWell, I didn't check this behaviour for days so I might be a little bit wrong. At least, I'm sure that boot2docker-alpha will be forgotten.\nMy above explanation should probably be in the doc, as it is a bit clearer I guess.\nFeel free to change it as you wish to make it clearer, the English isn't my mother language.\n. It took me at least 24 hours to figure it out. =D Thought it would save some time from others.\n. You're right. I can't find back the issue I was inspired from, they were telling something like I did. I did some tests and the only partition that seems to be mounted is boot2docker-vm.\nAnyway, to fix my commit I need some more information. According to the script you linked, boot2docker-vm shouldn't even be loaded BUT according to my tests no partition can be loaded except boot2docker-vm. Even boot2docker-data isn't loaded if attached alone. Maybe there's a link with #339 but I didn't check much.\n. ",
    "Nipol": "Oh. i find solution\ndefault NatNetwork is not exist\nSo Create. : P\n. ",
    "vishh": "I am working on adding nsinit to docker and extending docker to run arbitrary commands in an existing container.\n. ",
    "tcurdt": "would be great to have this added\n. so cool! totally missed that. sorry for the noise.\n. I had the registry running in a separate vagrant vm with the port mapped to the host.\nSo the \"why\" is pretty clear now. It still sucks though :)\n. ",
    "snowch": "It was the windows installer v0.9.0.  Virtualbox was also running a guest at the time, which got wiped out.  Luckily nothing important was lost.\n. It was the windows installer v0.9.0.  Virtualbox was also running a guest at the time, which got wiped out.  Luckily nothing important was lost.\n. ",
    "claesb": "Just got my 4.3.16 VBox downgraded to 4.3.14. (OSX installer)\n(Even though it was detected and forced me to shut it down before continuing.)\n. ",
    "jonseymour": "That did the trick, thank you. \nI was using the brew installed docker client which happens to be 0.9.1. When I upgraded it to 0.11.1 per your advice, everything worked as expected.\n. (The current brew recipe is correct - I hadn't run brew update for a while, so got an older one).\n. Sorry, this should have been raised against boot2docker-cli. Will move.\n. ",
    "jamesmoriarty": "+1\n. @sagioto I had to \"upgrade\":\nboot2docker delete\nboot2docker download\nboot2docker init\nboot2docker up\nexport DOCKER_HOST=tcp://192.168.59.103:2375\ndocker images\n:+1: \n. ",
    "jareware": "I was getting this as well:\n$ docker -v\nDocker version 1.1.1, build bd609d2\n$ docker ps\n2014/07/13 22:38:37 Get http://localhost:4244/v1.13/containers/json: EOF\nI've just installed the latest boot2docker, downloaded & init'ed the image, and exported the right DOCKER_HOST.\nFor reasons unknown, the docker daemon was listening to 2375 on the vm instead of the expected 4244, so I updated the port-forward config in VirtualBox accordingly, and that fixed the issue.\n. I was getting this as well:\n$ docker -v\nDocker version 1.1.1, build bd609d2\n$ docker ps\n2014/07/13 22:38:37 Get http://localhost:4244/v1.13/containers/json: EOF\nI've just installed the latest boot2docker, downloaded & init'ed the image, and exported the right DOCKER_HOST.\nFor reasons unknown, the docker daemon was listening to 2375 on the vm instead of the expected 4244, so I updated the port-forward config in VirtualBox accordingly, and that fixed the issue.\n. Okay, odd, I still got:\n```\n$ boot2docker up\n[2014-07-13 22:30:37] Starting boot2docker-vm...\n[2014-07-13 22:31:09] Started.\nTo connect the docker client to the Docker daemon, please set:\nexport DOCKER_HOST=tcp://localhost:4244\n```\nAnd I just installed the latest version.\nBut managing without port forwards does sound nice!\n. Okay, odd, I still got:\n```\n$ boot2docker up\n[2014-07-13 22:30:37] Starting boot2docker-vm...\n[2014-07-13 22:31:09] Started.\nTo connect the docker client to the Docker daemon, please set:\nexport DOCKER_HOST=tcp://localhost:4244\n```\nAnd I just installed the latest version.\nBut managing without port forwards does sound nice!\n. I'm pretty sure I just downloaded the latest release from github, but I guess I may have botched something. There's no \"--version\" for the management tool, apparently, so we may never know. :)\n. I'm pretty sure I just downloaded the latest release from github, but I guess I may have botched something. There's no \"--version\" for the management tool, apparently, so we may never know. :)\n. ",
    "sagioto": "Hi,\nI also tried that since I've read docker they changed the port (complies with IANA), But I saw the same port forwarding message and the same export message...\n2014/06/07 20:54:56 Port forwarding [docker] tcp://127.0.0.1:4243 --> :4243\n2014/06/07 20:56:06 To connect the Docker client to the Docker daemon, please set:\n2014/06/07 20:56:06     export DOCKER_HOST=tcp://localhost:4243\n. ",
    "cglewis": "Not sure about @sagioto's environment, but I downloaded the latest b2d, deleted the old vm, did an init, then updated the docker client (osx) and turned out with this result.  Both the client and server report using 0.12.0.  The client tried to connect over 4243 still, but the server runs on the new 2375.  Perhaps the latest binary for the Mac client didn't get the new port, even though it's version 0.12.0?\n. @SvenDowideit oh, I think I see what happened.  I updated the b2d .iso and created the new VM, but I didn't update or change the ./boot2docker script, which doesn't have commands like ip and version.  Let me try pulling down the osx package and see if everything is happy.\n. yup, that was it.  installed the osx-package does everything as expected.  sorry about that, closing this ticket.\n. this has been fixed now.\n. looks like it's good to go now. thanks @yosifkit \n. looks like it's good to go now. thanks @yosifkit \n. any update on this?\n. any update on this?\n. looks like it just keeps error-ing out.  are there alternatives we can do in the mean time? it seems this happens quite often, maybe a longer term solution is in order...\n. looks like this issue might be the cause: https://github.com/docker/hub-feedback/issues/811\n. @yosifkit cool. as an aside, I think the PR I opened (referenced above) will solve the problem that the automated build was experiencing. \nsadly this project seems like a long lost pet project at this point and doesn't get as much attention as the ones under the docker org.  is this project looking for maintainers?  i'd really like to keep it alive, or even if there's a next evolution of it (i think there was an attempt to do something debian based at one point)...\n. did you use docker-machine to deploy, or how did you deploy the ISO?  if using docker-machine you can do docker-machine ls and then docker-machine ip <name>.\n. ",
    "angstwad": "If it matters any, I'm personally not a fan of the installer .pkg and would\nmuch prefer to have it in Homebrew.  Maybe I can work with you to keep it\nthere.\nThat said, if you are going to keep the .pkg installer as the official\ninstallation and upgrade path, then having  homebrew install an outdated\nversion of boot2docker isn't doing anyone any good.\nPerhaps now that this is a .pkg install it belongs in brew cask?\nOn Wed, Jun 11, 2014 at 12:43 PM, Tianon Gravi notifications@github.com\nwrote:\n\nWhy? Is it causing any problems to have the formula in Homebrew besides\nbeing outdated?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/389#issuecomment-45774882\n.\n. \n",
    "davidcelis": "@SvenDowideit: FWIW, I submitted Homebrew/homebrew#30013 to suggest/discuss removal of the Docker and Boot2Docker formulae given that the official installation story is using the .pkg binary, but it didn't go over terribly well. A good number of people prefer using homebrew to install their tools when they can, and there's definitely an opinion that people want to be able to build the Docker ecosystem from source.\n. They are separate packages. The docker formula simply installs the OS X Docker client, and the boot2docker formula installs... Well, Boot2Docker. But Docker's website lists Boot2Docker as the official OS X install point for Docker, and Boot2Docker with 1.0.0 also installs the client now. That is why I brought up the discussion of removing both formulae\n. They are separate packages. The docker formula simply installs the OS X Docker client, and the boot2docker formula installs... Well, Boot2Docker. But Docker's website lists Boot2Docker as the official OS X install point for Docker, and Boot2Docker with 1.0.0 also installs the client now. That is why I brought up the discussion of removing both formulae\n. ",
    "TimMoore": "There's a separate open (but stalled) issue to get Homebrew support working again at boot2docker/boot2docker-cli#90.\n. There's a separate open (but stalled) issue to get Homebrew support working again at boot2docker/boot2docker-cli#90.\n. ",
    "bkcsfi": "this is still driving me nuts.\nI think it may be an esxi issue. the virtual machine I'm having trouble with was a 5.0 compatible vm. I 'upgraded' it to 5.5 compatibility at the same time I upgraded boot2docker.iso\nif I create a new virtual machine (5.5 compatible), and attach the persistent disk from the broken vm to the new vm, boot2docker does automount it correctly.\nAlso in the oldvm when I boot I am seeing udevadm timeout errors as well.\nI think it's just a corrupted virtual machine..\n. ",
    "zhangqianliang": "@SvenDowideit My situation was in bare metal. I found this way work:\n1. Re-fdisk, and keep the size of /dev/sda1 same with its previous. Rest to be /dev/sda2(also same as its previous).\n2. Install boot2docker v1.0.0 into /dev/sda2, and then reboot. The result: my data are still there.\n. @SvenDowideit Here is my steps:\n1. First time to install boot2docker(v0.12.0) with CDROM:\na) $ dd if=/dev/cdrom of=/dev/sda\nb) fdisk disk with 2 primary partitions: \n$ sudo fdisk /dev/sda\n$ n\n$ p\n$ 2\n$ ENTER\n$ ENTER\n$ w\nc) format sda2: $ sudo mkfs.ext4 /dev/sda2\nd) mount into /mnt/: $ sudo mkdir -p /mnt/sda2 $ sudo mount /dev/sda2 /mnt/sda2\ne) Add some private files into /mnt/sda2, like pulling some docker images, or other test files.\nf) reboot.\n2. Update to boot2docker v1.0.0 with CDROM, same steps as 1 a) b) , and then reboot, after rebooting, you will find the data added in /mnt/sda2 was still there.\n. @SvenDowideit lol, if I had a much more complicated disk layout, I would boot from usb too. \n. ",
    "Freyskeyd": "i agree the only solution is to delete and init the VM again.\n. I've tried to up, ip, down -> up -> ip. Nothing changed. The only solution for my problem is to:\ndelete -> download -> init\n. I've tried to up, ip, down -> up -> ip. Nothing changed. The only solution for my problem is to:\ndelete -> download -> init\n. I think it's a problem with vagrant, i get this when i specify forwarded port i think.\n. I think it's a problem with vagrant, i get this when i specify forwarded port i think.\n. I confirm:\n`` bash\n$ boot2docker delete\n$ boot2docker download\n$ boot2docker init\n2014/06/17 16:19:58 Creating VM boot2docker-vm...\n2014/06/17 16:19:58 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/06/17 16:19:58 Setting NIC #1 to use NAT network...\n2014/06/17 16:19:58 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/06/17 16:19:58 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/06/17 16:19:59 Setting NIC #2 to use host-only network \"vboxnet5\"...\n2014/06/17 16:19:59 Setting VM storage...\n2014/06/17 16:20:05 Done. Typeboot2docker up` to start the VM.\n$ boot2docker up\n2014/06/17 16:20:11 Waiting for VM to be started...\n............\n2014/06/17 16:20:36 Started.\n2014/06/17 16:20:36 Auto detection of the VM's IP address.\n2014/06/17 16:20:36 To connect the Docker client to the Docker daemon, please set:\n2014/06/17 16:20:36     export DOCKER_HOST=tcp://:2375\n$ boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.104\n$ VBoxManage controlvm boot2docker-vm natpf1 \"fskdTwitterRuby,tcp,127.0.0.1,3000,,3000\"\n$ boot2docker ip\n2014/06/17 16:20:51 exit status 255\nFailed to get VM Host only IP address.\n    Was the VM initilized using boot2docker?\n```\nWhen i use VBoxManage to open port, boot2docker fire an error.\n. I confirm:\n`` bash\n$ boot2docker delete\n$ boot2docker download\n$ boot2docker init\n2014/06/17 16:19:58 Creating VM boot2docker-vm...\n2014/06/17 16:19:58 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/06/17 16:19:58 Setting NIC #1 to use NAT network...\n2014/06/17 16:19:58 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/06/17 16:19:58 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/06/17 16:19:59 Setting NIC #2 to use host-only network \"vboxnet5\"...\n2014/06/17 16:19:59 Setting VM storage...\n2014/06/17 16:20:05 Done. Typeboot2docker up` to start the VM.\n$ boot2docker up\n2014/06/17 16:20:11 Waiting for VM to be started...\n............\n2014/06/17 16:20:36 Started.\n2014/06/17 16:20:36 Auto detection of the VM's IP address.\n2014/06/17 16:20:36 To connect the Docker client to the Docker daemon, please set:\n2014/06/17 16:20:36     export DOCKER_HOST=tcp://:2375\n$ boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.104\n$ VBoxManage controlvm boot2docker-vm natpf1 \"fskdTwitterRuby,tcp,127.0.0.1,3000,,3000\"\n$ boot2docker ip\n2014/06/17 16:20:51 exit status 255\nFailed to get VM Host only IP address.\n    Was the VM initilized using boot2docker?\n```\nWhen i use VBoxManage to open port, boot2docker fire an error.\n. Currently i'm trying to use Host-only with some tricks.\nI think problem is VBoxManage forwarded port modification\n. I think this issue can be close now?\n. i'm facing very slow performance with symfony app with boot2docker due to vboxsf any idea if a solution exists to have a boot2docker with NFS or something?\n. There is a way to build an iso with NFS support ? :/\n. In performance side, what's the difference between a Samba server dockerized and a NFS boot2docker image?\n. ",
    "tjrivera": "I'm also seeing this problem. I ended up completely removing boot2docker. Not just running boot2docker delete but also removing ~/.boot2docker and making sure the machine was gone from Virtualbox. The issue seems to be related to my use of a VPN. Trying to use boot2docker while connected to my VPN tends to screw everything up ( would have to change DOCKER_HOST to tcp://:2375 -- even then unable to communicate with the daemon). pre-1.0 I would usually have to restart the boot2docker vm to make sure it was binding to the VPN instead of my regular network interface and everything remained generally usable. I don't know enough about the network stack to provide any kind of helpful information as to whats going on behind the scenes on my system, but would be happy to provide info if pointed in the right direction.\n. ",
    "dmlond": "I am on Mavericks (10.9.3).\n$ boot2docker version\nClient version: v1.0.0\nGit commit: 2fef7b2\nI am using the Cisco Anyconnect VPN to connect to the my work VPN.\n$ boot2docker down\n$ boot2docker delete\n$ boot2docker init\n2014/06/18 08:36:52 Creating VM boot2docker-vm...\n2014/06/18 08:36:52 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/06/18 08:36:52 Setting NIC #1 to use NAT network...\n2014/06/18 08:36:52 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/06/18 08:36:52 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/06/18 08:36:53 Setting NIC #2 to use host-only network \"vboxnet0\"...\n2014/06/18 08:36:53 Setting VM storage...\n2014/06/18 08:36:59 Done. Type boot2docker up to start the VM.\n$ boot2docker up\n2014/06/18 08:37:04 Waiting for VM to be started...\n............\n2014/06/18 08:37:28 Started.\n2014/06/18 08:37:28 To connect the Docker client to the Docker daemon, please set:\n2014/06/18 08:37:28     export DOCKER_HOST=tcp://192.168.59.105:2375\n$ export DOCKER_HOST=tcp://192.168.59.105:2375\n$ boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.105\n$ docker images\n2014/06/18 08:39:46 Get http://192.168.59.105:2375/v1.12/images/json: dial tcp 192.168.59.105:2375: operation timed out\n. ok. For me, it all works, with or without vpn, if I export DOCKER_HOST=tcp://127.0.0.1:2375.  I am not sure if this is the intended way to do things?\n. I was able to get it working today :)  I have to export DOCKER_HOST=tcp://\n127.0.0.1:2375 I am not sure if this is the intended way to do things, but\nit works.\nOn Wed, Jun 18, 2014 at 10:43 AM, Simon Paitrault notifications@github.com\nwrote:\n\nCurrently i'm trying to use Host-only with some tricks.\nI think problem is VBoxManage forwarded port modification\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/392#issuecomment-46444558\n.\n. Here is the output from boot2docker running in the absence of VPN.\n\n```\ndocker@boot2docker:~$ ip addr\n1: lo:  mtu 65536 qdisc noqueue state UNKNOWN\nlink/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\ninet 127.0.0.1/8 scope host lo\n\n   valid_lft forever preferred_lft forever\n\ninet6 ::1/128 scope host\n\n   valid_lft forever preferred_lft forever\n\n2: dummy0:  mtu 1500 qdisc noop state DOWN\nlink/ether be:6a:df:66:df:4f brd ff:ff:ff:ff:ff:ff\n\n3: eth0:  mtu 1500 qdisc pfifo_fast state\nUP qlen 1000\nlink/ether 08:00:27:4c:77:a2 brd ff:ff:ff:ff:ff:ff\n\ninet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n\n   valid_lft forever preferred_lft forever\n\ninet6 fe80::a00:27ff:fe4c:77a2/64 scope link\n\n   valid_lft forever preferred_lft forever\n\n4: eth1:  mtu 1500 qdisc pfifo_fast state\nUP qlen 1000\nlink/ether 08:00:27:b6:c7:df brd ff:ff:ff:ff:ff:ff\n\ninet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n\n   valid_lft forever preferred_lft forever\n\ninet6 fe80::a00:27ff:feb6:c7df/64 scope link\n\n   valid_lft forever preferred_lft forever\n\n5: docker0:  mtu 1500 qdisc noqueue\nstate DOWN\nlink/ether 56:84:7a:fe:97:99 brd ff:ff:ff:ff:ff:ff\n\ninet 172.17.42.1/16 scope global docker0\n\n   valid_lft forever preferred_lft forever\n\ninet6 fe80::5484:7aff:fefe:9799/64 scope link\n\n   valid_lft forever preferred_lft forever\n\n```\nHere is the output after I ran boot2docker stop; boot2docker delete;\n(ATTACH TO VPN); boot2docker init; boot2docker up; boot2docker ssh\n```\ndocker@boot2docker:~$ ip addr\n1: lo:  mtu 65536 qdisc noqueue state UNKNOWN\nlink/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\ninet 127.0.0.1/8 scope host lo\n\n   valid_lft forever preferred_lft forever\n\ninet6 ::1/128 scope host\n\n   valid_lft forever preferred_lft forever\n\n2: dummy0:  mtu 1500 qdisc noop state DOWN\nlink/ether 26:70:4c:11:39:bb brd ff:ff:ff:ff:ff:ff\n\n3: eth0:  mtu 1500 qdisc pfifo_fast state\nUP qlen 1000\nlink/ether 08:00:27:79:ea:88 brd ff:ff:ff:ff:ff:ff\n\ninet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n\n   valid_lft forever preferred_lft forever\n\ninet6 fe80::a00:27ff:fe79:ea88/64 scope link\n\n   valid_lft forever preferred_lft forever\n\n4: eth1:  mtu 1500 qdisc pfifo_fast state\nUP qlen 1000\nlink/ether 08:00:27:c2:76:af brd ff:ff:ff:ff:ff:ff\n\ninet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n\n   valid_lft forever preferred_lft forever\n\ninet6 fe80::a00:27ff:fec2:76af/64 scope link\n\n   valid_lft forever preferred_lft forever\n\n5: docker0:  mtu 1500 qdisc noqueue\nstate DOWN\nlink/ether 56:84:7a:fe:97:99 brd ff:ff:ff:ff:ff:ff\n\ninet 172.17.42.1/16 scope global docker0\n\n   valid_lft forever preferred_lft forever\n\n```\nOn Wed, Jun 18, 2014 at 10:25 PM, Sven Dowideit notifications@github.com\nwrote:\n\nvery very odd - @dmlond https://github.com/dmlond if you boot2docker ssh\nto the vm, can you please paste the output of ip addr here?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/392#issuecomment-46517248\n.\n. The problem is that cisco anyconnect reroutes every network interface through its utun0 interface.  If you can create the boot2docker or docker-machine interface before you connect to the vpn, you can 'fix' the connection after you connect to vpn by restoring just the network segment that should go to the b2d interface.  You may also have to 'fix' the connection after you disconnect from anyconnect, since I think it tries to be too smart with the way it restores your original network interface connections (in the absence of knowledge about b2d).\n\nFor boot2docker, you can use this script to 'fix' the boot2docker connection.  If you are using docker-machine, I forked and modified the script to work with docker-machine.  The idea is the same.  \nTo connect to cisco vpn and still use docker, do the following:\n- start boot2docker or docker-machine\nbash\n$ boot2docker up\n$ docker-machine start dev\n- 'fix' the b2d or d-m network interface to make sure there is an interface in the machine routes for it (if you dont do this, and you run fix after connecting to vpn, you will be able to use docker, but your internet will not work).  The d-m version takes an argument for the specific machine you need to fix (you can fix every machine you are running by running this script for each machine).  Also, this requires you to have sudo rights on your mac:\n```\nb2d\n$ vpn-fix.sh\nd-m\n$ vpn-fix.sh dev\n```\n- connect to vpn\n- fix your b2d or d-m again by rerunning the above script\nAfter you disconnect from the vpn, you may need to run the script again to restore the connection to the interface.  \nAlso, if your internet connection experiences an ephemeral hiccup and causes your anyconnect to reconnect, it will likely reconfigure the network and hose your connection to the b2d.  Just disconnect from vpn, run the fix script, reconnect to vpn, and run the fix script.  Yes, its a pain, but it does work.\n. The problem is that cisco anyconnect reroutes every network interface through its utun0 interface.  If you can create the boot2docker or docker-machine interface before you connect to the vpn, you can 'fix' the connection after you connect to vpn by restoring just the network segment that should go to the b2d interface.  You may also have to 'fix' the connection after you disconnect from anyconnect, since I think it tries to be too smart with the way it restores your original network interface connections (in the absence of knowledge about b2d).\nFor boot2docker, you can use this script to 'fix' the boot2docker connection.  If you are using docker-machine, I forked and modified the script to work with docker-machine.  The idea is the same.  \nTo connect to cisco vpn and still use docker, do the following:\n- start boot2docker or docker-machine\nbash\n$ boot2docker up\n$ docker-machine start dev\n- 'fix' the b2d or d-m network interface to make sure there is an interface in the machine routes for it (if you dont do this, and you run fix after connecting to vpn, you will be able to use docker, but your internet will not work).  The d-m version takes an argument for the specific machine you need to fix (you can fix every machine you are running by running this script for each machine).  Also, this requires you to have sudo rights on your mac:\n```\nb2d\n$ vpn-fix.sh\nd-m\n$ vpn-fix.sh dev\n```\n- connect to vpn\n- fix your b2d or d-m again by rerunning the above script\nAfter you disconnect from the vpn, you may need to run the script again to restore the connection to the interface.  \nAlso, if your internet connection experiences an ephemeral hiccup and causes your anyconnect to reconnect, it will likely reconfigure the network and hose your connection to the b2d.  Just disconnect from vpn, run the fix script, reconnect to vpn, and run the fix script.  Yes, its a pain, but it does work.\n. I am using docker-machine + virtualbox, which uses the standard boot2docker virtualbox vm under the hood.  it works fine for me if I use fix_vpn.sh. Note, if you are using Yosemite, it ships without /sbin/ipfw, yet cisco anyconnect seems to be able to create a \"deny ip from any to any\" firewall rule. Without ipfw, fix_vpn.sh cannot find and remove it. You can find a OSX mavericks machine with /sbin/ipfw and copy the ipfw binary to your Yosemite machine, and this script will work again.  If anyone has suggestions for how to use the new apple pf firewall manager to fix this, that would be great.\n. I am using docker-machine + virtualbox, which uses the standard boot2docker virtualbox vm under the hood.  it works fine for me if I use fix_vpn.sh. Note, if you are using Yosemite, it ships without /sbin/ipfw, yet cisco anyconnect seems to be able to create a \"deny ip from any to any\" firewall rule. Without ipfw, fix_vpn.sh cannot find and remove it. You can find a OSX mavericks machine with /sbin/ipfw and copy the ipfw binary to your Yosemite machine, and this script will work again.  If anyone has suggestions for how to use the new apple pf firewall manager to fix this, that would be great.\n. so, if you actually need to use Cisco AnyConnect, e.g. part of a web application you are developing needs to access databases within your work VPN, is there anything you can do?\n. so, if you actually need to use Cisco AnyConnect, e.g. part of a web application you are developing needs to access databases within your work VPN, is there anything you can do?\n. the port forward to the NAT works.  If you are running a webserver or other service listening on a port on the container, you will need to bind to a set port at runtime with docker run -p X:X and then port forward X to the NAT as well, or you will not be able to communicate with your service.\n. ",
    "jchauncey": "I had to go in to virtual box preference and remove the host-only networks to delete the old vbox interfaces.\n. ```\n  \u25ef : docker version                                                                              \u23ce\nClient version: 1.0.1\nClient API version: 1.12\nGo version (client): go1.3\nGit commit (client): 990021a\n2014/06/22 16:36:56 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n\u25ef : boot2docker version                                                                       \nClient version: v1.0.1\nGit commit: 219d665\n```\n. did this - \n\u25ef : boot2docker delete ; boot2docker download ; boot2docker up                                                                                                                                         \u23ce\n2014/06/22 17:27:58 Machine \"boot2docker-vm\" does not exist.\n2014/06/22 17:27:58 Downloading boot2docker ISO image...\n2014/06/22 17:27:59 Latest release is v1.0.1\n2014/06/22 17:28:23 Success: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.0.1/boot2docker.iso\n    to /Users/jchauncey/.boot2docker/boot2docker.iso\n2014/06/22 17:28:23 Failed to get machine \"boot2docker-vm\": machine does not exist\nand then did a boot2docker init and everything seems to work fine now\n. ",
    "tauren": ":+1: experiencing same problem with Cisco Anyconnect VPN.\n. :+1: experiencing same problem with Cisco Anyconnect VPN.\n. ",
    "tardyp": "The above method did not work for me (Anyconnect 3.1)\nanyconnect maintains a route to my docker network but redirects it to tun0.\nI did manage to resolve the situation with the command:\n```\nsudo route -nv change -net 192.168.59 -interface vboxnet0\nsudo ipfw list |grep 'deny ip'\ncopy paste rule number\nsudo ipfw delete 00035\n```\n. The above method did not work for me (Anyconnect 3.1)\nanyconnect maintains a route to my docker network but redirects it to tun0.\nI did manage to resolve the situation with the command:\n```\nsudo route -nv change -net 192.168.59 -interface vboxnet0\nsudo ipfw list |grep 'deny ip'\ncopy paste rule number\nsudo ipfw delete 00035\n```\n. ",
    "auxesis": "These are the steps I used to work around this AnyConnect problem: \n``` bash\nQuit AnyConnect.\nboot2docker down # Shut down boot2docker VirtualBox bits\nsudo route -nv add -net 192.168.56 -interface vboxnet0 # Add a static route\nboot2docker up # Start up boot2docker, bring VirtualBox bits back up\nexport DOCKER_HOST=tcp://$(boot2docker ip 2>/dev/null):2375 # Dynamically determine how to connect to the Docker daemon in the VirtualBox VM\ndocker images # List images. This should just work.\n``\n. @hangtwenty\u00af_(\u30c4)_/\u00af` not much I can do about copy-and-pasters running commands verbatim from random comments on GitHub issues. \nAlso, that's exactly what I typed to make it work. \n. ",
    "darethas": "@auxesis solution worked for me, however had to change to vboxnet1, not vboxnet0\n. ",
    "Kris-Law": "@jchauncey Your solution of removing the VirtualBox host only networks worked for me. I am running Docker / boot2docker on OS X Yosemite. Here's what I did in detail:\n- boot2docker delete\n- In Virtualbox, go to VirtualBox (menu) => Preferences => Network => Host Only Networks\n  - Delete the host only networks, then I re-added them\n- boot2docker init\n- boot2docker up\nNow Docker works from the OS X command line via iTerm2 for me.\n. None of the above things worked for me, however, I did find that when I go to Virtualbox Preferences => Network => Host Only Networks, then delete both vboxnet0 and vboxnet1, then re-add them, everything worked. Note, I ran boot2docker delete before removing the networks and adding them back. Then boot2docker init, boot2docker up and all was well.\n. ",
    "ksylvan": "@jchauncey and @Kris-Law \nThat solution also worked for me. \n$ docker info\nContainers: 0\nImages: 0\nStorage Driver: aufs\nRoot Dir: /mnt/sda1/var/lib/docker/aufs\nDirs: 0\nExecution Driver: native-0.2\nKernel Version: 3.16.4-tinycore64\nOperating System: Boot2Docker 1.3.1 (TCL 5.4); master : 9a31a68 - Fri Oct 31 03:14:34 UTC 2014\nDebug mode (server): true\nDebug mode (client): false\nFds: 10\nGoroutines: 11\nEventsListeners: 0\nInit Path: /usr/local/bin/docker\nUsername: kayvan\nRegistry: [https://index.docker.io/v1/]\nRunning on a MacBook Pro with OSX 10.9.5\n. @jchauncey and @Kris-Law \nThat solution also worked for me. \n$ docker info\nContainers: 0\nImages: 0\nStorage Driver: aufs\nRoot Dir: /mnt/sda1/var/lib/docker/aufs\nDirs: 0\nExecution Driver: native-0.2\nKernel Version: 3.16.4-tinycore64\nOperating System: Boot2Docker 1.3.1 (TCL 5.4); master : 9a31a68 - Fri Oct 31 03:14:34 UTC 2014\nDebug mode (server): true\nDebug mode (client): false\nFds: 10\nGoroutines: 11\nEventsListeners: 0\nInit Path: /usr/local/bin/docker\nUsername: kayvan\nRegistry: [https://index.docker.io/v1/]\nRunning on a MacBook Pro with OSX 10.9.5\n. Is boot2docker & docker going to incorporate all this somehow to make it work out of the box, or could someone summarize all this in an easy to follow manner? My team at work uses Macs and needs to use Cisco AnyConnect as well. Thanks for all the hard work!!!\n. I'm having this same issue now on a docker-machine created boot2docker instance.\n$ docker-machine start boot2docker\nError setting up host only network on machine start: strconv.ParseUint: parsing \"128\": value out of range\nStarted machines may have new IP addresses. You may need to re-run the `docker-machine env` command.\nGoing to try some of the suggested workarounds and see what happens.\n. Looks like disablling ipv6 on the VirtualBox Host-Only Adapters also does the trick for the docker-machine created boot2docker.\n@DanCech mentioned his tweak, but I didn't see a response to it. Is there any reason not to support IPV6NetworkMaskPrefixLength: 128 as he said above?\n. What's the workaround for Windows? How do I get the head/unreleased version of docker-machine on Windows?\n. Never mind. I figured it out. Cloned the docker/machine repository on my Linux box and did:\n./script/build -os=windows -arch=amd64\nSending build context to Docker daemon 8.307 MB\nSending build context to Docker daemon \nStep 0 : FROM golang:1.4.2-cross\n ---> bbc500088baa\n[...]\nRemoving intermediate container fc1cc69270bd\nSuccessfully built b7a90fe3c3a9\nNumber of parallel builds: 4\n-->   windows/amd64: github.com/docker/machine\nAnd the new docker-machine binary worked beautifully.\n. ",
    "acaird": "@jchauncey and @Kris-Law and @ksylvan \nThat also worked for me; I didn't re-add the host-only networks, I just deleted them and vboxnet0 was re-added.  \n```\nbash-3.2$ docker info\nContainers: 0\nImages: 0\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Dirs: 0\nExecution Driver: native-0.2\nKernel Version: 3.16.4-tinycore64\nOperating System: Boot2Docker 1.3.1 (TCL 5.4); master : 9a31a68 - Fri Oct 31 03:14:34 UTC 2014\nDebug mode (server): true\nDebug mode (client): false\nFds: 10\nGoroutines: 11\nEventsListeners: 0\nInit Path: /usr/local/bin/docker\nbash-3.2$ docker version\nClient version: 1.3.1\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): 4e9bbfa\nOS/Arch (client): darwin/amd64\nServer version: 1.3.1\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): 4e9bbfa\n```\n. ",
    "eelcocramer": "@Kris-Law's solution worked for me.\n. @Kris-Law's solution worked for me.\n. When I create a vpn connection (cisco anyconnect) the issue gets back. \n. When I create a vpn connection (cisco anyconnect) the issue gets back. \n. @nickmarden Works for me. Thanks.\n. A fix that would not require manual configuration every time a new boot2docker vm is created would be apreciated but i can live with this. \nCan the port forwarding from localhost be automated?\n. A fix that would not require manual configuration every time a new boot2docker vm is created would be apreciated but i can live with this. \nCan the port forwarding from localhost be automated?\n. If you want the fix of @nickmarden to be more permanent then you can make boot2docker add the NAT rule by itself by changing the value of the DockerPort variable in the boot2docker profile to the appropriate value:\nDockerPort  = 2376\nThe default value of DockerPort is 0 which does not create the NAT rule.\nThe boot2docker profile can be found in ~/.boot2docker/profile but in my setup I did not have one and created a default profile using boot2docker config > ~/.boot2docker/profile. After that I changed the value of DockerPort. boot2docker init will now create a VM that already forwards the docker port to localhost.\n. ",
    "datajerk": "Solution only worked for me after removing all VirtualBox VMs manually.\n. Solution only worked for me after removing all VirtualBox VMs manually.\n. Yep, same here.  I updated anyconnect to version: anyconnect-macosx-i386-3.1.05187-k9.dmg.  Problem appears to be solved for me.\n. Yep, same here.  I updated anyconnect to version: anyconnect-macosx-i386-3.1.05187-k9.dmg.  Problem appears to be solved for me.\n. I have been able to repeatably get OS/X anyconnect and docker to work, YMMV.\nMy notes:\n-1.  OS/X 10.10.1, anyconnect-macosx-i386-3.1.05187-k9.dmg, and boot2docker 1.3.1\n0. Quit AnyConnect\n1. boot2docker up\n2. sudo route -nv add -net 192.168.59 -interface vboxnet0 # this command does not take if anyconnect is up.\n3. check: netstat -rn | grep 192.168\n4. check: docker info\n5. I think virtualbox may be hosing my default gateway, easy fix: turn on/off wifi to fix default gateway\n6. Now AnyConnect\n7. From this point on you can boot2docker stop, start, save, etc\u2026 with no problems and you can disconnect/reconnect exit/launch AnyConnect.  Until you reboot your machine.\n. Did you check \"Web Security\" when you installed?\nOn Thu, Nov 27, 2014 at 6:37 PM, Tyler Rivera notifications@github.com\nwrote:\n\nI'm still having problems with this.\nMy steps:\nStarting state:\n- delete boot2docker iso\n- restart virtualbox\n- reset gateway just to be sure (wifi on then off)\n- check routes:\n\n$ netstat -rn | grep \"192.168\"\ndefault            192.168.1.1        UGSc           36        0     en0\n192.168.1          link#4             UCS             4        0     en0\n192.168.1.1        4:a1:51:ba:e9:3e   UHLWIir        29       60     en0   1193\n192.168.1.13       ac:18:26:5a:db:ba  UHLWIi          0        0     en0   1177\n192.168.1.20       127.0.0.1          UHS             0        0     lo0\n192.168.1.255      ff:ff:ff:ff:ff:ff  UHLWbI          0       32     en0\n192.168.59         link#10            UC              3        0 vboxnet\n192.168.59.103     8:0:27:d5:d8:37    UHLWIi          0       40 vboxnet   1156\n192.168.59.255     ff:ff:ff:ff:ff:ff  UHLWbI          0       32 vboxnet\n\ncool -- all good.\nI then start up AnyConnect and my routes change to:\ndefault            192.168.1.1        UGScI           7        0     en0159.14.249.243/32  192.168.1.1        UGSc            1        0     en0\n192.168.1          link#6             UCS             1        0   utun0\n192.168.1.1        4:a1:51:ba:e9:3e   UHLSr           4       14     en0\n192.168.1.20       127.0.0.1          UHS             0        0     lo0\n192.168.1.255      link#6             UHW3Ii          0        1   utun0      8\n192.168.59         link#6             UCS             2        0   utun0\n192.168.59.103     link#6             UHW3Ii          0        2   utun0      8\n192.168.59.255     link#6             UHWIi           1        1   utun0\nI seem to be unable to consistently maintain a route to my virtualbox\ninterfaces. AnyConnect appears continually monitor and rewrite the routes.\nI was using an older version of AnyConnect and have upgraded to 3.1.05187\nwith no change in results.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/392#issuecomment-64843122\n.\n. Same here with 1.3.1.  However I cannot ping the 103 interface either.  \"boot2docker ssh docker ps\" works however.\n\nHack:  alias docker='boot2docker ssh docker'\n. ",
    "yorch": "Having the same problem as @tjrivera. My AnyConnect installation does not have Web Security on it (I left it out). Any ideas?\n. ",
    "nickmarden": "As a workaround, you can do the following and it will work regardless of whether you are connected to the AnyConnect VPN:\n-  boot2docker init\n- Open VirtualBox and edit the network settings for boot2docker-vm's network adapter 1 (NAT) by adding a port forwarding from localhost port 2376 to bootdocker-vm port 2376:\n  \n\n- boot2docker up\n- When setting the DOCKER_HOST environment variable, replace the vboxnet address with 127.0.0.1, e.g. export DOCKER_HOST=tcp://127.0.0.1:2376\n- profit \n. ",
    "shivawu": "@nickmarden This is so cool, works like a charm!!\n. @nickmarden This is so cool, works like a charm!!\n. ",
    "bortels": "There may be some confusion in the comments just prior to this one - let me clarify, and mention what works for me. \nApparently boot2docker + OS X 10.10 + Cisco Anyconnect are a witches brew of ugly. Routing-based solutions seem to fail entirely (where they worked on 10.9) - as soon as Anyconnect wakes up, you basically can't talk to the docker vm at all, or at least I couldn't. \nThe workaround (hopefully temporary!) is to use port forwarding, then connect to 127.0.0.1, which will bypass Anyconnect and let you thru. Here's what I did that seemed to work:\n```\n\u279c  ~  boot2docker init\nLatest release for boot2docker/boot2docker is v1.4.1\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.4.1/boot2docker.iso\nto /Users/tbortels/.boot2docker/boot2docker.iso\n\u279c  ~  vboxmanage modifyvm \"boot2docker-vm\" --natpf1 \"docker,tcp,127.0.0.1,2376,,2376\"\n\u279c  ~  boot2docker up \nWaiting for VM and Docker daemon to start..........................oooooooooooooooooooo\nStarted.\nWriting /Users/tbortels/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/tbortels/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/tbortels/.boot2docker/certs/boot2docker-vm/key.pem\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.104:2376\n    export DOCKER_CERT_PATH=/Users/tbortels/.boot2docker/certs/boot2docker-vm\n    export DOCKER_TLS_VERIFY=1\n\u279c  ~  $(boot2docker shellinit)\nWriting /Users/tbortels/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/tbortels/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/tbortels/.boot2docker/certs/boot2docker-vm/key.pem\n\u279c  ~  export DOCKER_HOST=tcp://127.0.0.1:2376\n\u279c  ~  docker ps \nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n\u279c  ~\n```\n(Here's hoping that formats nicely)\nThe TL;DR there is \"install docker, add the port forward, start it up, then modify your environment to point to 127.0.0.1 rather than the VM IP\". \nNote that the docker containers are all still stuck behind port forwarding, so if you run one you want to connect to \"from the outside\", you'd need to add more port forwards, so this isn't a great solution. (I suspect, but have not tried yet, that within the VM the IP will work fine). But at least now I can hopefully do some docker builds and so on. \n. ",
    "christian-blades-cb": "Until there's a better solution, I industrialized a hack to get it to work. \nThere are 2 stages:\n1. Delete the firewall rule (lifted that code from devopslife.com)\n2. Modify the routes\nYou can run this script after connecting or disconnecting from the AnyConnect tunnel and connection to the boot2docker vm will be restored.\nEvery so often, it will appear to hose all of my network connections, but a quick Turn Off Wifi/Turn On Wifi does the trick. \nHope some of you find this useful!\n. ",
    "vitan": "I also met the similar VPN failed my boot2docker up problem, which is ssh issue also. And seem VPN app is removing the 127.0.0.1 localhost away from /etc/hosts/. Causing ssh docker@localhost -p .... can not loop to ssh docker@127.0.0.1 -p .\ntext it here in case some guys getting the same problem.\n. @lahirug , I am using boot2docker as my development env, and easy-to-use with my terminal. So what's your issues?  You'd better to list them.\n. @lahirug , I am using boot2docker as my development env, and easy-to-use with my terminal. So what's your issues?  You'd better to list them.\n. ",
    "kylepragerattensity": "On Mac OSX with Boot2Docker using Virtualbox, I changed Adapter 2 on my VM from \"Host-only Adapter\" to \"Bridged Adapter\".  That gave my VM a 10.x.x.x address on my home network (NAT'd of course behind a router), and it works now when I'm connected to my VPN for work.  HTH.\n. ",
    "ryanwalls": "@christian-blades-cb Thanks!  You're script helped us a lot!\n. @christian-blades-cb Thanks!  You're script helped us a lot!\n. Using virtualbox driver\n2014/09/15 13:53:04 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/09/15 13:53:04 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/09/15 13:53:04 executing: VBoxManage list vms\n2014/09/15 13:53:04 executing: VBoxManage createvm --name boot2docker-vm --register\nVBoxManage: error: Machine settings file '/Users/rwalls/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox' already exists\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Machine, interface IMachine, callee nsISupports\nVBoxManage: error: Context: \"CreateMachine(bstrSettingsFile.raw(), bstrName.raw(), ComSafeArrayAsInParam(groups), bstrOsTypeId.raw(), createFlags.raw(), machine.asOutParam())\" at line 275 of file VBoxManageMisc.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. That fixed it.  Thanks @SvenDowideit \n. ",
    "willbuck": "I've been plauged with this issue for a couple days, thanks to everyone that's posted in this thread for the suggestions.\nI compiled the simplest, fewest number of steps I could that repeatably works, here it is (maybe it will help others!)\nboot2docker delete\nboot2docker download\nboot2docker init\nvboxmanage modifyvm \"boot2docker-vm\" --natpf1 \"docker,tcp,127.0.0.1,2376,,2376\"\nboot2docker up\n$(boot2docker shellinit)\nexport DOCKER_HOST=tcp://127.0.0.1:2376\n. I've been plauged with this issue for a couple days, thanks to everyone that's posted in this thread for the suggestions.\nI compiled the simplest, fewest number of steps I could that repeatably works, here it is (maybe it will help others!)\nboot2docker delete\nboot2docker download\nboot2docker init\nvboxmanage modifyvm \"boot2docker-vm\" --natpf1 \"docker,tcp,127.0.0.1,2376,,2376\"\nboot2docker up\n$(boot2docker shellinit)\nexport DOCKER_HOST=tcp://127.0.0.1:2376\n. Glad it helped @zeroorone13!\n. ",
    "connaryscott": "I find it strange that my boot2docker is completely unusable AFTER I bring my cisco anyconnect down.  At least my vmware does not do this.  I do undertand a bit why local vms are inaccessible DURING the vpn connection.  boot2docker usability should be restored AUTOMATICALLY after anyconnect is brought down.\n. I find it strange that my boot2docker is completely unusable AFTER I bring my cisco anyconnect down.  At least my vmware does not do this.  I do undertand a bit why local vms are inaccessible DURING the vpn connection.  boot2docker usability should be restored AUTOMATICALLY after anyconnect is brought down.\n. Thank you for this simple and easy to understand fix.  Verified that it works with my anyconnect setup, v3.1.00495 on OSX 10.9.5\n. Thank you for this simple and easy to understand fix.  Verified that it works with my anyconnect setup, v3.1.00495 on OSX 10.9.5\n. I use my mac for reading e-mails like this or dealing with other apps that corporations force you to use..\nI do not use my mac for much of anything else.\nInstead, I create a NAT\u2019d vm that is agnostic to the network that my mac may use such as whether my stupid cisco vpn is in use or not\u2026..\nI just use docker on my CentOS vm (or whatever O/S you like)\nOn Jun 2, 2015, at 9:51 AM, lahirug notifications@github.com wrote:\n\nCreating your own VM. I have been incredibly having issues with boot2docker when I try to mount my local file system and decided to move ahead with my own vm. Boot2docker is just a wasting of time of everyone.\n\u2014\nReply to this email directly or view it on GitHub.\n. i would like to start boot2docker from scratch.   After starting cisco anyconnect and frying it completely ( I understand that clugy routes can be applied, however, this is a mess especially when conveying it to others).  Looking for a decent reset here.\n. i would like to start boot2docker from scratch.   After starting cisco anyconnect and frying it completely ( I understand that clugy routes can be applied, however, this is a mess especially when conveying it to others).  Looking for a decent reset here.\n. Thanks for the tip will investigate...\n. Thanks for the tip will investigate...\n. \n",
    "Shaun1": "I recently had that problem with a fresh boot2docker install on Windows. Upgrading VirtualBox & VirtualBox Extension Pack solved the problem for me. In VirtualBox Manager go to Help-->Check for updates...\n. ",
    "xiangzhuyuan": "when I run docker info, I got this:\nFATA[0000] An error occurred trying to connect: Get https://192.168.59.103:2376/v1.17/info: Forbidden\n. ",
    "lahirug": "Boot2docker is piece of shit,don't' use it.\n. Creating your own VM. I have been incredibly having issues with boot2docker when I try to  mount my local file system and decided to move ahead with my own vm. Boot2docker is just a wasting of time of everyone.\n. Creating your own VM. I have been incredibly having issues with boot2docker when I try to  mount my local file system and decided to move ahead with my own vm. Boot2docker is just a wasting of time of everyone.\n. ",
    "wanghaisheng": "@lahirug  what do you suggest instead of boot2docker\n. ",
    "kevin-king": "@jchauncey That worked for me. Thanks! I installed using homebrew on Any Connect VPN, which seems to have messed things up. My exact steps were:\nUninstall:\nDisconnect from VPN\nVirtual Box -> Preferences -> Network -> Host-only Networks -> Delete\nboot2docker down\nbrew uninstall boot2docker\nbrew uninstall docker\nrm -Rf ~/.boot2docker\nrm -Rf ~/VirtualBox\\ VMs/boot2docker-vm\nReinstall:\nbrew install boot2docker\nboot2docker init\nboot2docker up\n$(boot2docker shellinit)\ndocker version\n. ",
    "sk29110": "@kevin-king  so I shouldn't install docker?\n. @kevin-king  so I shouldn't install docker?\n. I still have the socket issue after setting Docker 23776 for port forwarding.\nAfter boot2docker up\nTrying to get Docker socket one more time\nError requesting socket: exit status 255\nAuto detection of the VM's Docker socket failed.\nPlease run boot2docker -v up to diagnose.\ntried uninstall reinstall a couple of times. However on my macbook which comes with El Capitain I didn't have the same problem. Is this java problem?\n. I still have the socket issue after setting Docker 23776 for port forwarding.\nAfter boot2docker up\nTrying to get Docker socket one more time\nError requesting socket: exit status 255\nAuto detection of the VM's Docker socket failed.\nPlease run boot2docker -v up to diagnose.\ntried uninstall reinstall a couple of times. However on my macbook which comes with El Capitain I didn't have the same problem. Is this java problem?\n. ",
    "Elijen": "@nickmarden This solution works and I think it's better then fiddling with routes set by AnyConnect (I need both Docker and my VPN working).\n. ",
    "lutaoact": "worked for me. Thanks.\nsudo route -nv add -net 192.168.99 -interface vboxnet0\n. ",
    "gliush": "@SvenDowideit thanks for the advice to avoid vbox :)\nyou mean smth like:\ncurl http://boot2docker ip/\n?\n. Sure, I mean the same.\nThanks, Sven.\nOn Fri, Jun 13, 2014 at 2:36 PM, Sven Dowideit notifications@github.com\nwrote:\n\nfollowing on from the original example, you would\ncurl http://$(boot2docker ip):49153/\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/395#issuecomment-45997332\n.\n. \n",
    "piclez": "I just installed the new version 1.0 and after delete I get:\nboot2docker init\n2014/06/13 23:59:14 Downloading boot2docker ISO image...\n2014/06/13 23:59:14 Latest release is v1.0.0\n2014/06/13 23:59:25 Success: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.0.0/boot2docker.iso\n    to /Users/peterwd/.boot2docker/boot2docker.iso\n2014/06/13 23:59:25 Creating VM boot2docker-vm...\n2014/06/13 23:59:25 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/06/13 23:59:25 Setting NIC #1 to use NAT network...\n2014/06/13 23:59:25 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/06/13 23:59:25 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/06/13 23:59:26 Failed to create host-only network interface: exit status 2\nboot2docker up\n2014/06/13 23:59:44 Waiting for VM to be started...\n.............................\n2014/06/14 00:00:42 Started.\n2014/06/14 00:00:42 Auto detection of the VM's IP address.\ndocker images\n2014/06/14 00:02:15 Get http://127.0.0.1:2375/v1.12/images/json: EOF\nAny ideas?\nThanks.\n. I just installed the new version 1.0 and after delete I get:\nboot2docker init\n2014/06/13 23:59:14 Downloading boot2docker ISO image...\n2014/06/13 23:59:14 Latest release is v1.0.0\n2014/06/13 23:59:25 Success: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.0.0/boot2docker.iso\n    to /Users/peterwd/.boot2docker/boot2docker.iso\n2014/06/13 23:59:25 Creating VM boot2docker-vm...\n2014/06/13 23:59:25 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/06/13 23:59:25 Setting NIC #1 to use NAT network...\n2014/06/13 23:59:25 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/06/13 23:59:25 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/06/13 23:59:26 Failed to create host-only network interface: exit status 2\nboot2docker up\n2014/06/13 23:59:44 Waiting for VM to be started...\n.............................\n2014/06/14 00:00:42 Started.\n2014/06/14 00:00:42 Auto detection of the VM's IP address.\ndocker images\n2014/06/14 00:02:15 Get http://127.0.0.1:2375/v1.12/images/json: EOF\nAny ideas?\nThanks.\n. @SvenDowideit I ran that and this is what I get now:\nexecuting: VBoxManage hostonlyif ipconfig dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp --ip 192.168.59.3 --netmask 255.255.255.0\nThe host network interface with the given name could not be found\nVBoxManage: error: Details: code NS_ERROR_INVALID_ARG (0x80070057), component Host, interface IHost, callee nsISupports\nVBoxManage: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage: error: Could not find interface 'dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp'\n2014/06/14 09:57:07 Failed to create host-only network interface: exit status 2\nI believe is something with VirtualBox. I remember I used a command one time to reload it with another similar problem. [I restarted VB and no luck]\nThanks!\n. @SvenDowideit I ran that and this is what I get now:\nexecuting: VBoxManage hostonlyif ipconfig dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp --ip 192.168.59.3 --netmask 255.255.255.0\nThe host network interface with the given name could not be found\nVBoxManage: error: Details: code NS_ERROR_INVALID_ARG (0x80070057), component Host, interface IHost, callee nsISupports\nVBoxManage: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage: error: Could not find interface 'dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp'\n2014/06/14 09:57:07 Failed to create host-only network interface: exit status 2\nI believe is something with VirtualBox. I remember I used a command one time to reload it with another similar problem. [I restarted VB and no luck]\nThanks!\n. ",
    "henter": "I had the same issue\n. I had the same issue\n. > @henter @piclez Are you able to open VirtualBox and see the VM running?\nyes, the VM is running, but port forward is not working\n. @SvenDowideit , Hi I'm just try to run this demo on port 49160\nthanks.\n. > in that case, you really do not need vbox port forwarding - you can connect to that port on the ip address returned by boot2docker ip\ncan I forward port to docker from my mac ?\nlike this:\nmac(41960) => boot2docker VM(41960) => docker(8080) ?\n. ",
    "aaron0browne": "@piclez I had the same problem as you and found a solution.\nIf you look closely at the output of boot2docker -v init in your comment, you can see that the dyld notice is somehow getting pulled into the command. The dyld notice is triggered when your bash config sets some DYLD_ variables, but the shell is initialized by a suid executable (you'll probably see the notice anytime you run sudo ... on your machine).\nIn my case, I had DYLD_ variables set up for the Oracle client on my machine. But regardless, you will need to find those variables and unset them before running initializing your boot2docker VM. I would suggest something like the following:\n``` sh\nIf you type 'echo $DYLD_' and hit TAB, your particular 'DYLD_' var should autocomplete\n$ echo $DYLD_LIBRARY_PATH\n/usr/local/lib/instantclient_11_2:\nObviously, substitute your particular var if its different\n$ unset DYLD_LIBRARY_PATH\n$ echo $DYLD_LIBRARY_PATH\n$ boot2docker delete\n$ boot2docker -v init\n```\n. ",
    "borromeotlhs": "I am trying to make multiple instance of a client that only runs, by default, on one port (9000), and use dockers -p port exposure methodology to start multiple clients at specific ports on the host machine.  By what this issue states, at version 1.2.0, is this supposed to now work?\nI seem to only be able to use one client at port 9000, and have no option but to use --net=host networking mode :(\n. Might have more to do with what the spec is for allowable hostnames rather\nthan with boot2docker now enforcing a constraint that most *nix variants\nallow you to violate :(\nI know this sounds crass, but did you try renaming to remove the underscore?\nOn Sep 11, 2014 4:39 AM, \"James Mulcahy\" notifications@github.com wrote:\n\nJust trying out boot2docker for the first time, and the 'boot2docker init'\nstep is failing.\n$ boot2docker version\nClient version: v1.2.0\nGit commit: a551732\nVirtualBox is 4.3.14\nMy Mac username is 'james_mulcahy', but it looks like boot2docker is\ndropping the _mulcahy potion, and as a result is trying to access a path\nthat doesn't exist.\nbash-3.2$ pwd\n/Users/james_mulcahy\nbash-3.2$ echo $USER\njames_mulcahy\nbash-3.2$ /usr/local/bin/boot2docker -v init\nUsing virtualbox driver\n2014/09/11 12:37:31 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/09/11 12:37:31 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/09/11 12:37:32 executing: VBoxManage list vms\n2014/09/11 12:37:32 executing: VBoxManage createvm --name boot2docker-vm --register\nVBoxManage: error: Could not create a directory '/Users/james/VirtualBox VMs/boot2docker-vm' to save the settings file (VERR_ACCESS_DENIED)\nVBoxManage: error: Details: code NS_ERROR_FAILURE (0x80004005), component Machine, interface IMachine, callee nsISupports\nVBoxManage: error: Context: \"SaveSettings()\" at line 277 of file VBoxManageMisc.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/533.\n. \n",
    "jai11": "I ,\nActually I am facing a issue with docker. Looks like the same as discussed above.\nI have installed jenkins on ubuntu:14.04 image\nI am running the docker image with below command -\ndocker run -p 49153:8080 jai11/jenkins-run\nDocker starts the jenkins process in it and I can access the jenkins through executing 192.168.59.103:49153 in my IE (windows)\nWhat I want to know why it si not able to connect http://localhost:49153\nI also tried to ping the container ID from my windows(CMD prompt) but its getting time out)\nWhat is the expected behavior over here , also how can I connect from localhost.\nHoping a help from you.\nThanks\n~Jai\n. ",
    "dopry": "@SvenDowideit, a note on use cases for the port forwarding. If you're working with TLS or any x.509 based PKI and STARTTLS and you've generated self-signed certs with a CN of localhost for development you do need to forward ports to localhost because https://{boot2docker ip}:{port}/ will not be localhost and the certificate will be rejected. Admittedly most people should generate properly named certificates for production, but boot2docker is a development tool and localhost is a pretty common CN when doing development. of course the work around is to just manually forward the ports in VirtualBox... \n. @SvenDowideit, a note on use cases for the port forwarding. If you're working with TLS or any x.509 based PKI and STARTTLS and you've generated self-signed certs with a CN of localhost for development you do need to forward ports to localhost because https://{boot2docker ip}:{port}/ will not be localhost and the certificate will be rejected. Admittedly most people should generate properly named certificates for production, but boot2docker is a development tool and localhost is a pretty common CN when doing development. of course the work around is to just manually forward the ports in VirtualBox... \n. ",
    "jbolinger": "Yes, OSX - installed via Boot2Docker-1.0.0.pkg\n. Yes, OSX - installed via Boot2Docker-1.0.0.pkg\n. ",
    "RubenVerborgh": "I encounter the same bug on 10.9.4:\n```\n$ boot2docker\nfatal error: runtime: bsdthread_register error (unset DYLD_INSERT_LIBRARIES)\nruntime stack:\nruntime.throw(0x50dc35)\n    /usr/local/go/src/pkg/runtime/panic.c:520 +0x69\nruntime.goenvs()\n    /usr/local/go/src/pkg/runtime/os_darwin.c:87 +0x54\nruntime.schedinit()\n    /usr/local/go/src/pkg/runtime/proc.c:164 +0x76\n_rt0_go()\n    /usr/local/go/src/pkg/runtime/asm_amd64.s:91 +0x114\n```\nIt can be fixed by following the advice, i.e.:\n$ unset DYLD_INSERT_LIBRARIES\nMaybe this should be incorporated into the startup script.\n. ",
    "paraskakis": "None of the above worked for me. However doing a fresh install with brew did.\n$ brew install boot2docker\n$ brew install docker\n. ",
    "sohilv": "This works for me,\n$ brew install boot2docker\n$ brew install docker\nMake sure remove old files under /usr/local/bin related to docker, otherwise it may give link error,\nrm /usr/local/bin/boot2docker\nrm /usr/local/bin/docker \n. ",
    "frosforever": "Just installed fresh with DockerToolbox and ran into the same issue. https://github.com/docker/toolbox/issues/109\nunset DYLD_INSERT_LIBRARIES had no effect.\nAfter digging around in https://groups.google.com/forum/#!topic/golang-nuts/HtcZc3wO-rw, \nare those with this issue running a WebsenseEndpoint per corporate policy?\n. ",
    "azharamir": "@frosforever i have same issue, any soultion for solving with WebsenseEndpoint ?\n. ",
    "jbeda": "I'm pretty sure this is a Docker bug.  See https://github.com/dotcloud/docker/issues/6483.\n. ",
    "jessfraz": "thanks so much!\n. ping @tianon\n. see also this entire convo https://botbot.me/freenode/docker-maintainers/2015-04-14/?msg=36608675&page=2\n. see also this entire convo https://botbot.me/freenode/docker-maintainers/2015-04-14/?msg=36608675&page=2\n. ",
    "anweiss": "I'm seeing the same issue when running under Hyper-V as well. Only after stopping the docker daemon, running automount, and restarting the docker daemon am I able to gain persistent storage on my data disk.\n. @sykesm like @shaunol, I also see the countdown from 3 to 0 during boot \n. ",
    "jdgomeza": "I had the same problem, delete/download/init did not resolved the problem for me. \nI opened VBox UI and found I had an outdated Extension pack. After I installed the new version, the keys were finally generated. I had VBox UI installed before so maybe there was conflict. \nbash-3.2$ boot2docker delete\nbash-3.2$ boot2docker init\nGenerating public/private rsa key pair.\nYour identification has been saved in /Users/javier.gomez/.ssh/id_boot2docker.\nYour public key has been saved in /Users/javier.gomez/.ssh/id_boot2docker.pub.\nHope that helps\n. I had the same problem, delete/download/init did not resolved the problem for me. \nI opened VBox UI and found I had an outdated Extension pack. After I installed the new version, the keys were finally generated. I had VBox UI installed before so maybe there was conflict. \nbash-3.2$ boot2docker delete\nbash-3.2$ boot2docker init\nGenerating public/private rsa key pair.\nYour identification has been saved in /Users/javier.gomez/.ssh/id_boot2docker.\nYour public key has been saved in /Users/javier.gomez/.ssh/id_boot2docker.pub.\nHope that helps\n. ",
    "jheintz": "Why is this issue closed? I'm getting the problem with a fresh brew update && brew upgrade.\n~ $ boot2docker version\nClient version: v1.2.0\nGit commit: 22b11f1\n~ $ boot2docker delete\n~ $ boot2docker download\nDownloading boot2docker ISO image...\nLatest release is v1.2.0\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.2.0/boot2docker.iso\n    to /Users/jheintz/.boot2docker/boot2docker.iso\n~ $ boot2docker -v init\nUsing virtualbox driver\n2014/09/02 12:12:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/09/02 12:12:33 executing: VBoxManage list vms\n2014/09/02 12:12:33 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 43908ce0-f559-42ed-a13d-5866b7200279\nSettings file: '/Users/jheintz/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2014/09/02 12:12:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/09/02 12:12:33 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/09/02 12:12:33 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 4 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/jheintz/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2014/09/02 12:12:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/09/02 12:12:33 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/09/02 12:12:33 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/09/02 12:12:33 executing: VBoxManage list hostonlyifs\n2014/09/02 12:12:33 executing: VBoxManage list dhcpservers\n2014/09/02 12:12:33 executing: VBoxManage modifyvm boot2docker-vm --nic2 hostonly --nictype2 virtio --cableconnected2 on --hostonlyadapter2 vboxnet0\n2014/09/02 12:12:34 executing: VBoxManage storagectl boot2docker-vm --name SATA --add sata --hostiocache on --bootable on\n2014/09/02 12:12:34 executing: VBoxManage storageattach boot2docker-vm --storagectl SATA --port 0 --device 0 --type dvddrive --medium /Users/jheintz/.boot2docker/boot2docker.iso\nerror in run: Failed to initialize machine \"boot2docker-vm\": open /Users/jheintz/.ssh/id_boot2docker.pub: no such file or directory\n~ $\n. Thanks @SvenDowideit, working now.\nI needed to \nbrew remove boot2docker\nbrew install boot2docker\nand then I got that version number. \n. Thanks @SvenDowideit, working now.\nI needed to \nbrew remove boot2docker\nbrew install boot2docker\nand then I got that version number. \n. ",
    "njt1982": "Removing boot2docker, updating brew and resintalling fixed the SSH issue for me too.\n. I've tried rebooting (thinking that the virtualbox update may have effected the ketxs), no change.\nTried running:\nsudo /Library/Application\\ Support/VirtualBox/LaunchDaemons/VirtualBoxStartup.sh restart\nNo change...\n. Fixed\nUsed \"AppCleaner\" to remove VirtualBox (along with the uninstall script in the DMG). Rebooted. Reinstalled. Rebooted.\nWorking now.\nProbably didn't need to reboot quite so much, but wanted to be sure all the kexts unloaded...\n. ",
    "gabrielstein": "Well, what solved to me, and I think that more people can use it. If you already had boot2docker installed(using brew), do that:\n- Update brew\n-  Check Ruby Version\n- Check VMs at VMs Virtualbox(if you don't have anything important with the vm-boot2docker, delete it)\n-  Do a boot2docker upgrade\n-  Look at the ssh-keys from boot2docker at .ssh(they id_boot2docker*). Rename them  or delete.\n-  Run boot2docker again\n. ",
    "enjalot": "on a brand new mac with a fresh install of 1.3.1 and homebrew i had this problem. I was able to fix it by following the other issue and confirming that the ssh keys were generated with the wrong permissions\nchmod go-r ~/.ssh/id_boot2docker\n. ",
    "ahknight": "I just experienced what @enjalot did: after removing/reinstalling everything the SSH keys in .ssh were 0644.  I set them to 0400 and it booted just fine. \nEverything was installed on OS X 10.10 via the latest Homebrew.\n$ boot2docker version\nBoot2Docker-cli version: v1.3.1\nGit commit: 57ccdb8\n. ",
    "Quexer69": "just btw... I run into this right now. Just tried PW docker on boot2docker upgrade and it works ->\n```\nMacBook-Pro-2:p4-app cstebe$ boot2docker upgrade\nLatest release for boot2docker/boot2docker is v1.3.1\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.3.1/boot2docker.iso\n        to /Users/cstebe/.boot2docker/boot2docker.iso\nWaiting for VM and Docker daemon to start...\n.........docker@localhost's password: \n.o\nStarted.\nWriting /Users/cstebe/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/cstebe/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/cstebe/.boot2docker/certs/boot2docker-vm/key.pem\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.104:2376\n    export DOCKER_CERT_PATH=/Users/cstebe/.boot2docker/certs/boot2docker-vm\n    export DOCKER_TLS_VERIFY=1\nMacBook-Pro-2:p4-app cstebe$\n```\nadded the exports to my .bash_profile and boot2docker start \n. ",
    "fotinakis": "I had to clear my entire local config to fix this, and it worked:\nbash\nboot2docker delete\nrm -rf ~/.boot2docker/ ~/.ssh/id_boot2docker*\nboot2docker init\nboot2docker up\n. ",
    "dixon1e": "I'm trying with image 1.3.2 and getting error:\n\"The host network interface with the given name could not be found.\"\nI have tried everything listed above here. Removing id_boot2docker, fixing .ssh permissions, removing the .boot2docker directory, etc. etc.\nI also upgraded virtualbox to 4.3.20. This seems to be network related somehow? Running on Mac Os X 10.8.5.\nHere is the full boot2docker -v init output:\n2014/11/28 21:06:08 executing: VBoxManage hostonlyif ipconfig dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp --ip 192.168.59.3 --netmask 255.255.255.0\nVBoxManage: error: The host network interface with the given name could not be found\nVBoxManage: error: Details: code NS_ERROR_INVALID_ARG (0x80070057), component Host, interface IHost, callee nsISupports\nVBoxManage: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage: error: Could not find interface 'dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp'\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 2\n. ",
    "xcolwell": "I'm seeing this problem on OS X 10.10.1 repeatedly when using docker installed via\nbrew cask install virtualbox\nbrew install docker\nbrew install boot2docker\nI've found the root cause in my case, which is the permissions of the docker private key get changed to u=rw,go=r, causing SSH to avoid using it (it requires that the private key be readable by the user only). \nls -lah ~/.ssh/id_boot2docker\n-rw-------@ 1 brien  staff   1.6K Jan  9 12:30 /Users/brien/.ssh/id_boot2docker\nls -lah ~/.ssh/id_boot2docker.bad\n-rw-r--r--@ 1 brien  staff   1.6K Jan  8 22:42 /Users/brien/.ssh/id_boot2docker.bad\nFixing the permissions can be done with chmod u=rw,go= ~/.ssh/id_boot2docker.\nUsually nothing touches my private keys, so I'm wondering if there's a check in boot2docker or some startup script that updates the permissions erroneously?\nI reset the permissions in my own init script for now.\n. ",
    "mgijsberti": "This worked for me: \nboot2docker delete\nrm -rf ~/.boot2docker/ ~/.ssh/id_boot2docker*\nboot2docker init\nboot2docker up\n. ",
    "strogonoff": "In case anyone else happen to come across this even with the latest version of boot2docker, make sure you don\u2019t have the VM running under another user account on the same machine simultaneously.\nAs a side note, even after stopping boot2docker VM under first account I still haven\u2019t been able so far to work with Docker from the second account. The VM takes much longer to start for some reason and after that docker client is not able to connect to it, throwing up with an \u201ci/o timeout\u201d error.\n. In case anyone else happen to come across this even with the latest version of boot2docker, make sure you don\u2019t have the VM running under another user account on the same machine simultaneously.\nAs a side note, even after stopping boot2docker VM under first account I still haven\u2019t been able so far to work with Docker from the second account. The VM takes much longer to start for some reason and after that docker client is not able to connect to it, throwing up with an \u201ci/o timeout\u201d error.\n. ",
    "RomanSaveljev": "The other issue with running boot2docker concurrently under different accounts is https://github.com/boot2docker/boot2docker-cli/issues/337\n. Recently, I started seeing occasional SSH connection problems over boot2docker NAT connection. It turns out that the local network (or DNS) server is not very stable. The VB behavior may be related to https://www.virtualbox.org/ticket/12441\nCurrently, I am exhaustively testing a proposed configuration fix:\nVBoxManage modifyvm \"VM name\" --natdnshostresolver1 on\nThe test script will try to list docker images 1000 times. I saw it fail with a normal network connection. Then it did not fail after I unplugged network cable. Now I am running it again after modifyvm thing and it did not break.\n. I have been having this module in a private boot2docker fork for around half a year now. It runs decently for me.\n:+1: for integrating it\n. ",
    "mcqj": "This is still a problem in boot2docker 1.5.0\n. ",
    "ghost": "I had the same issue caused by PreferredAuthentications password,keyboard-interactive,publickey under Host * in ~/.ssh/config\n. +1\n. I got it running inside iTerm :smile:\nWrite a shell script named e.g. boot2docker with the following content:\n!/bin/bash\nunset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\nmkdir -p ~/.boot2docker\nif [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\n/usr/local/bin/boot2docker init && /usr/local/bin/boot2docker up\nEND OF SCRIPT (Hint: \"if [ !  -f ~/.boot2dock....\" until \"...2docker/ ; fi\" must be one line)\nGive them execute rights:\nchmod +x boot2docker\nAdd a new profile to iTerm with the following \"Send text at start\" value:\npath/to/script/boot2docker && $(/usr/local/bin/boot2docker shellinit) && docker version\nHint: replace \"path/to/script/boot2docker\" with path to your generated boot2docker shell script.\nUse this profile to start a docker ready shell inside iTerm.\nI tried to put all code inside the shell script, but it does not work.\nMaybe someone else know why...\n. @lalyos educated me on how to implement client-side certs (issue #573) for a docker tool I've been developing. Perhaps educating other developers on how to implement TLS authentication with boot2docker would steer them away from disabling it.\n. Thanks for the workaround, @lalyos. However, I'd still like to get certificate authentication working.\nUsing the example given at https://docs.docker.com/reference/api/docker_remote_api/ , I sent an API request via curl as such:\ncurl --insecure --cert $DOCKER_CERT_PATH/cert.pem --key $DOCKER_CERT_PATH/key.pem https://192.168.59.103:2376/images/json\ncurl spits out the following error info:\n2014-10-17 14:56:24.798 curl[1162:32239] * Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '* -[__NSPlaceholderArray initWithObjects:count:]: attempt to insert nil object from objects[0]'\n*** First throw call stack:\n(\n    0   CoreFoundation                      0x00007fff8f66864c __exceptionPreprocess + 172\n    1   libobjc.A.dylib                     0x00007fff8d66e6de objc_exception_throw + 43\n    2   CoreFoundation                      0x00007fff8f50c068 -[__NSPlaceholderArray initWithObjects:count:] + 360\n    3   CoreFoundation                      0x00007fff8f50ba2d CFArrayCreate + 141\n    4   libcurl.4.dylib                     0x00007fff8c25369e darwinssl_connect_common + 2089\n    5   libcurl.4.dylib                     0x00007fff8c25273a Curl_ssl_connect_nonblocking + 36\n    6   libcurl.4.dylib                     0x00007fff8c21b673 Curl_http_connect + 77\n    7   libcurl.4.dylib                     0x00007fff8c229977 Curl_protocol_connect + 129\n    8   libcurl.4.dylib                     0x00007fff8c23bcef multi_runsingle + 799\n    9   libcurl.4.dylib                     0x00007fff8c23b93d curl_multi_perform + 170\n    10  libcurl.4.dylib                     0x00007fff8c234d25 curl_easy_perform + 352\n    11  curl                                0x0000000109546a87 curl + 47751\n    12  curl                                0x00000001095431f4 curl + 33268\n    13  curl                                0x0000000109542c00 curl + 31744\n    14  libdyld.dylib                       0x00007fff91fd25c9 start + 1\n    15  ???                                 0x0000000000000007 0x0 + 7\n)\nlibc++abi.dylib: terminating with uncaught exception of type NSException\nAbort trap: 6\nIf I try the same command again, curl returns the following error:\ncurl: (58) SSL: Can't load the certificate \"$DOCKER_CERT_PATH/cert.pem\" and its private key: OSStatus -25299\nIs there anything wrong with my request? If not, what's wrong with the certificate or how it's being handled?\nThanks.\n. Yes, I also noticed I was able to use curl via boot2docker ssh and read about the problems with the OSX specific curl at http://curl.haxx.se/mail/archive-2014-10/0053.html . Thanks for verifying the curl error, by the way.\nHowever, this doesn't explain the ERR_BAD_SSL_CLIENT_AUTH_CERT error when making requests from a browser. There is something wrong with the certificate and the trust between client and server.\nThanks.\n. Thank you cert master. I spent hours searching the interwebz and still couldn't figure out how to properly import the client-side cert.\n. what continues to work for me is docker-machine. just download it and docker-machine create --driver virtualbox dev and eval $(docker-machine env dev) and don't directly interact with boot2docker cli anymore at all. no problems with starting and stopping the vm or anything.\nps: if you have local images you want to keep, you might want to docker save -o images.tar $(docker images -q) from your boot2docker host (also docker images > imagelist.txt). then docker load -i images.tar from your docker-machine host. as this will not restore image names but only image ids, you can then docker pull the images from your imagelist.txt and the tags will be added. probably this can be done better. but i only had to do it once so .. afterwards you might want to remove your prior boot2docker vm to save some disk-space.\n. Hi guys,\nit looks like there is a temporary workaround for this problem. Please see this comment.\nJust tried it and everything works fine.\n. @tianon, I've tested xe-guest-utilities with kernel 4.1.6 and works fine, and 4.2 should be ok as well.\n. ",
    "karlingen": "+1\n. +1\n. +1\n. +1\n. You do not have to type it 4 times. Just keep on pressing enter without typing a password and you will get by. \n$ boot2docker start\n..\ndocker@localhost's password:\ndocker@localhost's password:\ndocker@localhost's password:\ndocker@localhost's password:\n..\n. ",
    "dbkaplun": "boot2docker shouldn't need to auth using an SSH key to connect to localhost. Maybe we should consider turning auth off completely in the VM's SSH daemon, and this issue would go away for free.\n. ",
    "metakermit": "OK, for me moving the old .ssh/id_boot2docker* files to a different folder and then running the sequence helped:\nboot2docker delete\nboot2docker download\nboot2docker -v init\nboot2docker start\n. ",
    "MartinSeeler": "I had this issue caused by my ./ssh/config seetings to auto-copy zsh settings to remote by\nbash\nHost *\n   PermitLocalCommand yes\n   LocalCommand tar c -C${HOME} .oh-my-zsh .zshrc .vim .vimrc | ssh -o PermitLocalCommand=no %n \"tar mx -C${HOME} ; chsh -s /bin/zsh\"\nRemoving these settings fixed it for me.\n. ",
    "thekarel": "I had to change the VirtualBox settings to not have a space in Default Machine Folder path:\n\nBefore this, running boot2docker -v init gave me\nVBoxManage: error: Invalid UUID or filename \"/Users/x/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vmdk\"\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\nUsing docker and boot2docker 1.5.0 via brew\n(based on @jerrymf https://github.com/boot2docker/osx-installer/issues/106#issuecomment-87893137)\n. I had to change the VirtualBox settings to not have a space in Default Machine Folder path:\n\nBefore this, running boot2docker -v init gave me\nVBoxManage: error: Invalid UUID or filename \"/Users/x/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vmdk\"\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\nUsing docker and boot2docker 1.5.0 via brew\n(based on @jerrymf https://github.com/boot2docker/osx-installer/issues/106#issuecomment-87893137)\n. ",
    "subfuzion": "I was tearing my hair out for a while on this one. Nothing seemed to work, including everything mentioned in this thread. I had completely removed everything (.boot2docker/, ./ssh/id_boot2docker*, /usr/bin/local/boot2docker, VirtualBox VMs/boot2docker-vm/, VirtualBox application) and still couldn't fix. Installing latest version of boot2docker (1.5.0) didn't help, installing the latest VirtualBox (4.3.26) didn't help ... \nFinally, I opened the VirtualBox GUI and explicitly deleted all previous appliances (including boot2docker-vm and one I had renamed to 'dev'), and that finally did the trick. Argh. Hope this helps someone else. \n. ",
    "swogger": "Solution: As strange as it may sound you need to enter the password \"tcuser\" at least 4 times. Makes no sense but it works. \n. Solution: As strange as it may sound you need to enter the password \"tcuser\" at least 4 times. Makes no sense but it works. \n. ",
    "toddlers": "@swogger  I've done that as well but no help :(\nfinally ran fours magic commands\nboot2docker delete\nrm -rf ~/.boot2docker/ ~/.ssh/id_boot2docker*\nboot2docker init\nboot2docker up\nWorked fine :)\n. ",
    "shaimr": "Thanks @toddlers, it worked for me :+1: \n. ",
    "beetree": "Had the same error on fresh install following the exact instructions on https://docs.docker.com/installation/mac/\nReboot of the host machine solved my issue.\n. ",
    "tylercloke": "@toddlers black magic was effective.\n. ",
    "eduardopelitti": "@toddlers solution worked for me too. Thanks!\n. ",
    "sykesm": "@anweiss if you boot with a gui, do you see the waitusb countdown going all the way down to 0 or does it terminate early and boot?\n. @shaunol @anweiss If either of you can build the iso using the instructions in the repo (it's pretty simple), you can play with different timeout values to see what works.  I chose 3 seconds because it seemed good (didn't add too much delay for those without a persistent disk) and it worked for me.  Maybe build an image with a timeout as high as 20 or 30 seconds and watch how much time is remaining when it's detected.\nIf you find a good value, it would be interesting to know what it is and propose a change.  Honestly, there's not much more I can offer.\n. ",
    "shaunol": "I'm also having this issue, I'm a new user so not sure if I've done something wrong.\nI've formatted my disk to ext4 and given it the label 'boot2docker-data' but it's not mounting when I reboot. I do see the countdown on boot  fully count down from 3 to 0. I have a gif of this: http://i.imgur.com/hVVKnF8.gif\n/usr/local/etc/init.d/docker stop\n/etc/rc.d/automount\n/usr/local/etc/init.d/docker start\nAppears to get it mounted and running without issue. \nHyper-V on Windows 8.1 Pro\n. @sykesm No worries, happy to give it a go and see what works, will revert back to this ticket with more info later tonight.\n. @sykesm I've just rebuilt the image using a waitusb timeout of 30 seconds and it seems to take on average about 5 seconds to detect the device, sometimes it would take 6 seconds but never more than that. I'm not sure if a less powerful machine would take even longer or if it's simply something to do with Hyper-V\nAnother gif for your viewing pleasure: http://i.imgur.com/B2uwIwh.gif\nI rebooted/coldstarted around 20 times and never once saw the countdown go below 24 seconds. Most of the time it would stop at 25 seconds.\n@SvenDowideit I wouldn't have a clue as to why it's taking so long to detect, that is out of my league. I would propose a 10 second timeout for Hyper-V guests but it doesn't seem like it would be easy to use that timeout without affecting other platforms. There must be a better way to do this.\nI am personally happy knowing there is a workaround at least and have no problem using my own build for continued use.\nI also tried all combinations of using VHD vs. VHDX disk format, IDE vs. SCSI controller and Fixed vs. Dynamic drive allocation - none of these settings had any effect on the detection time.\n. ",
    "jasonkuhrt": "Similar issue here https://github.com/boot2docker/boot2docker/issues/431 but haven't had any success yet\n. Similar issue here https://github.com/boot2docker/boot2docker/issues/431 but haven't had any success yet\n. Wow looks similar. Could be. Sorry looks like I should have made this issue in the cli repo.\n. Wow looks similar. Could be. Sorry looks like I should have made this issue in the cli repo.\n. @tianon Yeah actually that's the one I was trying heh.\n. @tianon Yeah actually that's the one I was trying heh.\n. @SvenDowideit Still blocked by the cert issue but I've had weird OSX cert issues on my computer for some months now. Glad I can bypass by just sticking the iso there though.\n. @SvenDowideit Still blocked by the cert issue but I've had weird OSX cert issues on my computer for some months now. Glad I can bypass by just sticking the iso there though.\n. @SvenDowideit :+1: \n. @SvenDowideit :+1: \n. And yes I have the DOCKER_HOST setup in my zshrc:\n```\nexport DOCKER_HOST=tcp://$(boot2docker ip 2>/dev/null):2375\nexport DOCKER_HOST=tcp://192.168.59.103:2375\n```\nI've commented out the first one as that doesn't seem necessary?\n. And yes I have the DOCKER_HOST setup in my zshrc:\n```\nexport DOCKER_HOST=tcp://$(boot2docker ip 2>/dev/null):2375\nexport DOCKER_HOST=tcp://192.168.59.103:2375\n```\nI've commented out the first one as that doesn't seem necessary?\n. ```\n\u29d1 boot2docker version\nClient version: v1.1.1\nGit commit: 8dd1935\n~\n\u29d1 docker version\nClient version: 1.1.1\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): bd609d2\n2014/07/14 12:41:35 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n~\n\u29d1 boot2docker delete\n~\n\u29d1 boot2docker status\n2014/07/14 12:43:55 Failed to get machine \"boot2docker-vm\": machine does not exist\n~\n\u29d1 boot2docker init\n2014/07/14 12:44:00 Creating VM boot2docker-vm...\n2014/07/14 12:44:00 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/07/14 12:44:00 Setting NIC #1 to use NAT network...\n2014/07/14 12:44:00 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/07/14 12:44:00 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/07/14 12:44:00 Setting NIC #2 to use host-only network \"vboxnet0\"...\n2014/07/14 12:44:00 Setting VM storage...\n2014/07/14 12:44:05 Done. Type boot2docker up to start the VM.\n~\n\u29d1 boot2docker up\n2014/07/14 12:44:16 Waiting for VM to be started...\n..........\n2014/07/14 12:44:47 Started.\n2014/07/14 12:44:47 To connect the Docker client to the Docker daemon, please set:\n2014/07/14 12:44:47     export DOCKER_HOST=tcp://192.168.59.103:2375\n~\n\u29d1 docker images\n2014/07/14 12:46:19 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n.\n\u29d1 boot2docker version\nClient version: v1.1.1\nGit commit: 8dd1935\n~\n\u29d1 docker version\nClient version: 1.1.1\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): bd609d2\n2014/07/14 12:41:35 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n~\n\u29d1 boot2docker delete\n~\n\u29d1 boot2docker status\n2014/07/14 12:43:55 Failed to get machine \"boot2docker-vm\": machine does not exist\n~\n\u29d1 boot2docker init\n2014/07/14 12:44:00 Creating VM boot2docker-vm...\n2014/07/14 12:44:00 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/07/14 12:44:00 Setting NIC #1 to use NAT network...\n2014/07/14 12:44:00 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/07/14 12:44:00 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/07/14 12:44:00 Setting NIC #2 to use host-only network \"vboxnet0\"...\n2014/07/14 12:44:00 Setting VM storage...\n2014/07/14 12:44:05 Done. Type boot2docker up to start the VM.\n~\n\u29d1 boot2docker up\n2014/07/14 12:44:16 Waiting for VM to be started...\n..........\n2014/07/14 12:44:47 Started.\n2014/07/14 12:44:47 To connect the Docker client to the Docker daemon, please set:\n2014/07/14 12:44:47     export DOCKER_HOST=tcp://192.168.59.103:2375\n~\n\u29d1 docker images\n2014/07/14 12:46:19 Cannot connect to the Docker daemon. Is 'docker -d' running on this host?\n```\n. Maybe this is relevant too:\n```\n~\n\u29d1 boot2docker info\n{\"Name\":\"boot2docker-vm\",\"UUID\":\"e58bc903-8090-45fe-9fce-a8f4f6a2f435\",\"State\":\"running\",\"CPUs\":8,\"Memory\":2048,\"VRAM\":8,\"CfgFile\":\"/Users/jasonkuhrt/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox\",\"BaseFolder\":\"/Users/jasonkuhrt/VirtualBox VMs/boot2docker-vm\",\"OSType\":\"\",\"Flag\":0,\"BootOrder\":null,\"DockerPort\":2375,\"SSHPort\":2022,\"SerialFile\":\"/Users/jasonkuhrt/.boot2docker/boot2docker-vm.sock\"}\n~\n\u29d1 boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.103\n```\n. Maybe this is relevant too:\n```\n~\n\u29d1 boot2docker info\n{\"Name\":\"boot2docker-vm\",\"UUID\":\"e58bc903-8090-45fe-9fce-a8f4f6a2f435\",\"State\":\"running\",\"CPUs\":8,\"Memory\":2048,\"VRAM\":8,\"CfgFile\":\"/Users/jasonkuhrt/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox\",\"BaseFolder\":\"/Users/jasonkuhrt/VirtualBox VMs/boot2docker-vm\",\"OSType\":\"\",\"Flag\":0,\"BootOrder\":null,\"DockerPort\":2375,\"SSHPort\":2022,\"SerialFile\":\"/Users/jasonkuhrt/.boot2docker/boot2docker-vm.sock\"}\n~\n\u29d1 boot2docker ip\nThe VM's Host only interface IP address is: 192.168.59.103\n```\n. WOW, my fault, I did not notice this until now:\n.zshrc\n```\nexport DOCKER_HOST=tcp://192.168.59.103:2375\nSSH stuff\nssh-add ~/.ssh/little_bits_aws.pem\nDocker\nexport DOCKER_HOST=tcp://localhost:4243\n```\n. WOW, my fault, I did not notice this until now:\n.zshrc\n```\nexport DOCKER_HOST=tcp://192.168.59.103:2375\nSSH stuff\nssh-add ~/.ssh/little_bits_aws.pem\nDocker\nexport DOCKER_HOST=tcp://localhost:4243\n```\n. Sorry about the false negative\n. Sorry about the false negative\n. ",
    "wanaoishi": "Found a way to make it work : \nI had to add my wifi card to the VM in virtualbox manually, then he used DHCP to add the nameservers.\n:-1: \nI keep that in Issue to see if you could have something to do it automatically in next version. thanks \n. ",
    "AaronRustad": "We've installed 1.0.1 on several MBP-13\" successfully, but the one MBP-15\" with similar specs (16GBRAM) to yours is experiencing very slow network connectivity. I didn't time the startup, but connections from the host to the postgresql container are about 30% slower. I'm not a much of a networking guy so I don't have much to offer other than my additional whining. :-(\n. I actually don't think this is related to Docker itself.  For me, it was just the normal overhead of using a TCP connection to the database when previously I was using a unix socket.\n. No. \nA Unix domain socket or IPC socket (inter-process communication socket) is a data communications endpoint for exchanging data between processes executing within the same host operating system.\n. ",
    "cosmincatalin": "I am also experiencing degraded performance  when running against an OrientDB container. Don't know if this is related directly to networking but here goes. My test results represent the insert speed of records into the database running in different scenario:\n| Scenario | MacBook Pro 2.3 GHz, i7 16GB | ThinkPad W530, 2.4 Ghz, i7 16GB |\n| --- | --- | --- |\n| host install | 11000 | 5000 |\n| boot2docker install | 220 | - |\n| docker install | - | 4000 |\n| vagrant install | 1400 | 2300 |\n| docker over vagrant install | 1000 | 2300 |\nSome general observations:\n- A host installation of OrientDB offers the best performance when the test program executes on it. That was to be expected.\n- Running on top of VirtualBox slows things down. Understandable.\n- Running in boot2docker is at least 5 times slower than docker over vagrant. Not OK.\nThe code used for testing was running locally in the host environment in all of the cases. The vagrant VMs had 2GB RAM allocated to them.\n```\npackage com;\nimport com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx;\nimport com.orientechnologies.orient.core.intent.OIntentMassiveInsert;\nimport com.orientechnologies.orient.core.metadata.schema.OClass;\nimport com.orientechnologies.orient.core.record.impl.ODocument;\nimport java.io.IOException;\npublic class Base {\npublic static void main(String[] args) throws IOException {\n    int numberOfRecordsToInsert = 1000000;\n    String host = \"localhost\";\n    String database = \"GratefulDeadConcerts\";\n    String user = \"admin\";\n    String password = \"admin\";\n\n    ODatabaseDocumentTx db = new ODatabaseDocumentTx(\"remote:\" + host +\"/\" + database).open(user, password);\n\n    long startTime = System.nanoTime();\n\n    db.declareIntent(new OIntentMassiveInsert());\n\n    ODocument doc = new ODocument();\n\n    for (int i = 0; i < numberOfRecordsToInsert; i++) {\n        doc.reset();\n        doc.setClassName(\"Customer\");\n        doc.field(\"id\", i);\n        db.save(doc);\n    }\n\n    db.declareIntent(null);\n    db.close();\n    long endTime = System.nanoTime();\n\n    float speed = 1000000000f * numberOfRecordsToInsert/(endTime - startTime);\n    System.out.format(\"Insert speed: %.0f records/second.\", speed);\n}\n\n}\n```\n. ",
    "lucasweb78": "I see similar issues on OS X Yosemite on a MacBook Pro Retina. \nWhen I run our applications test suite locally using a local mysql install it takes approx. 10 mins. If I run the same test suite locally using mysql running in a docker container via boot2docker it takes 45 mins.\nI do not see this issue in our CI environment which runs on AWS linux on an EC2 instance using mysql running in a container.\n. ",
    "harveyr": "Same here. I'm hoping to use dockerized postgres for my team's OS X development environment, but our test suite runs 3+ times slower against it versus a local postgres instance. Our linux users don't appear to suffer a performance penalty.\nAre there any thoughts floating out there on how to improve things?\n. ",
    "codedearta": "+1 I'm experiencing similar issues. I'm using a Redis image inside boot2docker on a mac.\n. ",
    "JakeWarner": "+1 also experiencing incredibly slow network performance on OSX using VirtualBox & boot2docker. Installed using the latest version of Docker Toolbox today.\n. ",
    "lukebarton": "+1 - I'm having issues with running tests which make http requests to other containers taking longer than those running natively (by an order of 4 times slower) with lesser cpu hardware. Without profiling, I'm putting it down to networking.\nPossibly related:\nTwice recently, I've experienced my MacBook's network inexplicably slowing down to <0.5mb sec with no network traffic in or out, with the network adapter (via Activity Monitor) seemingly capped at x kb/sec until I restart, then it jumps right back up to expected levels. Will try killing boot2docker before restarting next time to see if that's affecting it.\n. ",
    "gesellix": "I needed to add a similar code due to eth1 not being available before starting docker. see #824 for details. Is there any possibility to make a service start dependent on an interface?\n. would #960 also address the issue in this pull request?\n. the /var/log/boot2docker.log shows the following output for me:\n```\n...\n1: lo:  mtu 65536 qdisc noqueue state UNKNOWN group default \n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: dummy0:  mtu 1500 qdisc noop state DOWN group default \n    link/ether 26:08:5d:72:12:81 brd ff:ff:ff:ff:ff:ff\n3: eth0:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:5a:72:f2 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe5a:72f2/64 scope link tentative \n       valid_lft forever preferred_lft forever\n4: eth1:  mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether 08:00:27:c7:75:1b brd ff:ff:ff:ff:ff:ff\n\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\n```\nLooks like eth1 is DOWN during the initial boot, so that its ip cannot be used for the certs creation step. Would it be enough to make the docker init script be dependent on all interface initializations?\n. I made it work on my machine by adding the following to /var/lib/boot2docker/profile:\nwait4eth1() {\n        CNT=0\n        until ip a show eth1 | grep -q UP\n        do\n                [ $((CNT++)) -gt 60 ] && break || sleep 1\n        done\n        sleep 1\n}\nwait4eth1\ncredits go to @fayep for PR #411 \n. the fix also applies for boot2docker-windows.\n. thanks @garthk for the convenient gist!\nAfter applying the patch it was enough for me to restart the docker daemon with sudo /etc/init.d/docker restart (or from outside of the vm: boot2docker ssh sudo /etc/init.d/docker restart).\n. thanks @garthk for the convenient gist!\nAfter applying the patch it was enough for me to restart the docker daemon with sudo /etc/init.d/docker restart (or from outside of the vm: boot2docker ssh sudo /etc/init.d/docker restart).\n. @warden does the last command fix problems even for reboots? The wait4eth1 func in https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164 helped me to not have to repeat the docker daemon restart everytime.\n. @warden does the last command fix problems even for reboots? The wait4eth1 func in https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164 helped me to not have to repeat the docker daemon restart everytime.\n. @jakirkham can you share the output of your boot2docker log? Get it like this:\nboot2docker ssh cat /var/log/boot2docker.log\n. @jakirkham can you share the output of your boot2docker log? Get it like this:\nboot2docker ssh cat /var/log/boot2docker.log\n. @jakirkham @m0ppers the line at the end of the log should contain the public boot2docker ip 192.168.59.103. If that's not the case, there are two options:\n1. re-run the docker daemon init script: boot2docker ssh sudo /etc/init.d/docker restart, which should add the ip address of the eth1 interface to the list of secured interfaces, and ultimately generate matching certificates\n2. add the delay script from https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164 and restart the docker daemon, which should fix the problem until you reset/delete your boot2docker VM. @garthk created a little gist for your convenience: https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113970908\nSo, the following line from boot2docker ssh cat /var/log/boot2docker.log is wrong:\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15\nit should look like:\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15,192.168.59.103\nIf you got another ip adress like 192.168.59.105, you have a different problem, which won't be fixed with the delay script mentioned above.\n. @jakirkham you're right, both routes aren't a final solution. I actually asked in #411 if there's a more stable and definitive way to make the docker init dependent on all interfaces being UP.\n. @jakirkham I would guess that a /etc/init.d/docker restart should help - so not the complete boot2docker vm. The other option would be to add the delay script.\nYour log shows that eth1 doesn't have an ip, which would be a precondition to add the relevant certificates.\n. @jakirkham I guess the boot2docker vm isn't aware of your hardware connections. As your log output shows there's no wlan interface found.\nYou can check the current interfaces (and their ips) with boot2docker ssh ip addr show.\n. @timhtheos you need to boot2docker ssh first.\n. @timhtheos you need to boot2docker ssh first.\n. @timhtheos I didn't measure the boot time before and after the additional delay script, but I also didn't notice any extra time. So I guess you have another issue.\n. @jakirkham can you check boot2docker ssh ip addr show before the docker restart? The output should contain the interface eth1, which should be declared as UP and have an ip address.\nThe expectation to let the docker restart work is an initialized interface eth1 (or eth0).\n. @jakirkham can you check boot2docker ssh ip addr show before the docker restart? The output should contain the interface eth1, which should be declared as UP and have an ip address.\nThe expectation to let the docker restart work is an initialized interface eth1 (or eth0).\n. @SvenDowideit is #411 related to the eth1 dhcp issue?\n. @SvenDowideit is #411 related to the eth1 dhcp issue?\n. On my machine eth1 isn't UP during certs creation, so it doesn't have an ip. See https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113898405\n. I made the docker init script wait for eth1 to come UP by using this code: https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164\nworks for me now.\n. the fix in #824 works for both boot2docker-OSX and boot2docker-Windows.\n. @samkelleher the fix in #824 only works around a network interface issue inside a boot2docker vm and applies for the initial start of the docker daemon.\nYour problem sounds like you used some boot2docker specific env variables (DOCKER_HOST, ...), but you might need to reconfigure them when using the Google Cloud CLI.\n. @samkelleher the fix in #824 only works around a network interface issue inside a boot2docker vm and applies for the initial start of the docker daemon.\nYour problem sounds like you used some boot2docker specific env variables (DOCKER_HOST, ...), but you might need to reconfigure them when using the Google Cloud CLI.\n. @buckett did you add the delay script mentioned in https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164 ?\n. @buckett did you add the delay script mentioned in https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164 ?\n. @samkelleher I'm not sure whether the boot2docker settings/configuration also apply to gcloud. I guess gcloud isn't aware of boot2docker. If so, I would suggest to focus on gcloud configuration and remove any boot2docker specific environment settings.\n. @aidanlister @leftdevel did you try https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164 ?\n. ",
    "Chekote": "I've been running into this issue continually, and this helped get me back on track. Thanks for saving my sanity!\n. ",
    "Integralist": "I tried to run the following command:\nVBoxManage controlvm boot2docker-vm natpf1 \"integralist-sinatra,tcp,127.0.0.1,49161,,4567\"\n\nNote: integralist-sinatra was just a unique name I made up and doesn't relate to anything\n\nIt was suggested here: https://github.com/dotcloud/docker/issues/4007#issuecomment-35246612 but it didn't work for me. When I now run curl -i $(boot2docker ip):49161 I get a different message but it's still a failure: \n```\n2014/06/28 21:03:19 exit status 255\nFailed to get VM Host only IP address.\n    Was the VM initilized using boot2docker?\ncurl: (52) Empty reply from server\n``\n. Seems this is an open issue here: https://github.com/boot2docker/boot2docker/issues/395\n. @SvenDowideit Hi, thanks for the reply - the details you requested are as follows (and yes I did also try updating using thedelete; download; init` sequence of commands):\n``` bash\n$ boot2docker version\nClient version: v1.0.0\nGit commit: 2fef7b2\n$ boot2docker info\n{\"Name\":\"boot2docker-vm\",\"UUID\":\"02786c12-7530-4819-af7f-58ecf362e1f4\",\"State\":\"saved\",\"CPUs\":8,\"Memory\":1024,\"VRAM\":8,\"CfgFile\":\"/Users/markmcdonnell/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox\",\"BaseFolder\":\"/Users/markmcdonnell/VirtualBox VMs/boot2docker-vm\",\"OSType\":\"\",\"Flag\":0,\"BootOrder\":null,\"DockerPort\":2375,\"SSHPort\":2022,\"SerialFile\":\"/Users/markmcdonnell/.boot2docker/boot2docker-vm.sock\"}\n```\n. I've resolved the issue by ensuring my Ruby application was listening to all interfaces:\nruby\nset :bind, '0.0.0.0'\nI've not explicitly tested this with Boot2Docker. I moved to using my own CoreOS VM set-up with Vagrant and I had the same error. I then binded the interface as show above and it worked.\n. @jaimon awesome! that's good to know. Thanks for confirming :-)\n. ",
    "cochincoder": "set :bind, '0.0.0.0'\nThis worked for me with boot2docker. Thanks\n. ",
    "qguv": "Googlers: If you're using the Docker Toolbox on OS X, you'll need to use the VM's IP and not localhost.\nbash\nopen \"http://$(docker-machine ip default):3000/\"\nIf you've changed the VM name, change \"default\" above to the new name.\nOn OS X, Docker actually spins up a Linux VM to act as the docker host machine. When you expose a port from the container, you're actually exposing it to the Linux VM rather than to OS X, so you need to visit the Linux VM's IP to connect to the container inside.\n. @mmahalwy: I'm not sure what you mean. Docker in OS X runs in a Linux VM because OS X (based on Darwin BSD) does not directly support lightweight Linux containers.\n. @mmahalwy: I'm not sure what you mean. Docker in OS X runs in a Linux VM because OS X (based on Darwin BSD) does not directly support lightweight Linux containers.\n. I'm happy that people still find this useful!\n@huangtao800: This is mentioned in the boot2docker README and one of the more popular Docker tutorials but not in the official, mainline Docker tutorial. You ought to contact the Docker team to see if they'd be willing to clarify this in their official tutorial!\n. ",
    "dirkjan111": "@qguv : THANKS!\n. ",
    "chenrui333": "Add reference link to @qguv comment:\nhttps://docs.docker.com/machine/get-started/\n. Add reference link to @qguv comment:\nhttps://docs.docker.com/machine/get-started/\n. ",
    "mmahalwy": "@qguv thanks! This worked! Any idea how to make it work in the OSX versus just the VM? \nThanks! \n. ",
    "pmatias": "About @qguv's comment about the host's ip, it applies the same for the Docker Toolbox Windows version :)\n. ",
    "jokeyrhyme": "Regarding the file change notification, it appears this isn't feasible without polling in VirtualBox: https://www.virtualbox.org/ticket/10660\n. @SvenDowideit it's great to know it's something you're thinking about.\nIn the meantime, I'm going to give the suggested approach a serious evaluation. Never hurts to turn your workflow on its head. :)\n. Are there other tickets to track the progress on this? Is it worth following more specific tickets and closing this one?\n. Relates to #282 and #284 for VirtualBox vboxsf usage.\n. As Docker caches intermediate build steps, I'm actually increasingly open to a development workflow that still requires an image rebuild and re-run after each modification. As long as that's fast enough (which is going to be project specific) then I don't feel the need to have files shared into the VM and then mounted into the container as I originally suggested.\n. @leeolayvar I'm curious to know how file-system events work in your setup? As per my 2nd comment (from the top), vboxsf doesn't seem to trigger them at all, so polling is the only way to have things inside a container (inside VirtualBox) react to changes made out in the host machine. Polling gives me hives. :P\n. https://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/ Hooray!\n. Yeah, this is working suspiciously well. :D Combined with fig, I think I'm finally able to move away from non-Docker vagrant.\n. There's some work being done on this already:\nhttps://github.com/boot2docker/boot2docker/pull/65\n. I've heard that work is being done on VMware Fusion first.\n. What is the policy on data orphaned within VirtualBox when the CLI tools automatically switch over to VMware? Is this \"an exercise left to the reader\"? Should there be a migration guide / script? Should migration be automatic? I personally don't have anything critical in my boot2docker containers, but I wonder if other people do...\n. @SvenDowideit I mean on an individual computer. When boot2docker operates via VMware as well as it does VirtualBox, which will be the default? The current default is VirtualBox, and current container volumes are stored within. If boot2docker prefers VMware when it is available (and I think there's good reason for this), then will this not overnight leave existing data stranded in VirtualBox?\n. When this becomes active, will boot2docker automatically start using VMware? Is it worth posting instructions on how to migrate data from container volumes that are orphaned in VirtualBox?\n. Loosely related to #575 .\n. Loosely related to #575 .\n. @nathanleclaire eek. Too late now. boot2docker 1.5.0 is out now, so this exact situation is no longer repeatable. These are the prerequisites in order to reproduce:\n- have boot2docker installed with a certain API version\n- have a recent release of docker with a new API version\n- use boot2docker upgrade immediately after the new docker release, and before the matching boot2docker release is available\n- boot2docker upgrade will update the docker binary on the host to the latest docker, but will not be able to update either boot2docker or the boot2docker ISO\n. @aravindgan boot2docker upgrade should backup your Docker binary into ~/.boot2docker, so you can manually restore it from there. Also, now that the latest stable releases for Docker and boot2docker match again (v1.5.0), you should be able to run boot2docker upgrade again to have everything fixed.\n. @pensu are you able to install just the 1.5.0 stable client? The output says you are running 1.5.0-dev.\n. @pensu building from git code is fine, but make sure that you've checked out a stable tag. Don't just build from master (unless you know that works).\n.\n. @Pensu all I can suggest is double-checking how you've set it up: https://docs.docker.com/machine/#using-docker-machine-with-docker-swarm\nIt could also be that specific non-stable versions of docker / swarm / machine are required? /shrug\n. How the boot2docker maintainers decide to tackle this is their business, but I'm personally happy when boot2docker upgrade fixes things. My concern with this ticket is that boot2docker upgrade actually breaks things in the first place (depending on when you run it).\n. It has been well-established that once all the required versions of docker and boot2docker are actually available, that simply running boot2docker upgrade is sufficient to correct any issues. When I first reported this issue, my desire was that boot2docker upgrade should not be able to break anything in the first place. Running it a second time a few days later is known to fix it, but is little consolation if you are prevented from using Docker during this time.\n. @thaJeztah I've noticed this too. Why keep this as a code problem if the deployment process has solved it?\n. @kevinSuttle I opened #670 a while back RE: unnecessary downloads\n. @kevinSuttle I opened #670 a while back RE: unnecessary downloads\n. ",
    "KyleCartmell": "+1 This feature would be extremely valuable.\nedit: found https://github.com/dotcloud/docker/issues/4023 and have now learned to stop worrying and love boot2docker. <3\n. bradfitz left a really encouraging note 3 months back regarding a hacking session at the docker offices to integrate some fuse filesystem solution. That seems to have stalled out and I have moved my docker work to a Debian box in the meantime. If I had to do docker integration work on my MacBook today I would use a Linux vim instead of trying to do boot2docker stuff.\n. ",
    "james-nesbitt": "Currently, I am using a production container for releases, with source ADDed, but for dev environments I am use the same source mounted on top, -v style, to get the local source advantages.\nWith regards to not being able to mount host folders into the containers, I see real inconveniences from the developer perspective.  How are other developers handling:\n1. Revision repository management: locally cloned/checked-out source, with local repo management tools, and integrated IDE version control are much easier to deal with than remote source.  Should I put all of my RSA keys into the container(s)?  Should I replicate my password management tools into the containers?\n2. IDE integration with remote source: My IDE handling large projects over remote FS suffers for code scanning and compiling;\nI think that the mount-out from the containers/VM is a poor solution for me.\nYes I understand that -v mounts aren't the right solution with production tools, but if I am using boot2docker to develop those containers, then I might need to use solutions that work for development. Often there  is little difference between putting project source/files on a \"source\" container and sharing it into a \"project\" container, and putting in in the \"project\" container to start with.\nTruthfully, I don't really suffer from the problem, as I am not using boot2docker myself, but it makes it really hard for me to convince fellow developers in my office, using OSX/Win machines, to adopt docker dev environments.\n. ",
    "charlietran": "still extremely slow with a medium sized Rails app :sob: @gansbrest your solution still looks to be the most performant, besides using vagrant / docker-osx\n. ",
    "pencilcheck": "http://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/\nMac shared directory!!\n. +1 for docker-osx-dev, using it so far and it is fast and using a lot less CPU\n. +1 for docker-osx-dev, using it so far and it is fast and using a lot less CPU\n. Still wish for a native solution directly from virtualbox or boot2docker\n. This is definitely a virtualbox issue as I still experience this issue in a different vm on virtualbox\n. ",
    "madamimadam": "Incidentally, the performance is amazingly variable. I have boot2docker set up on my MBP for dev work, and running our unit test suite varies between taking 6 to 8 minutes and taking 50 to 80 minutes. I have absolutely no insight into what the variability is caused by, and it is giving me absolute fits. If I copy all the files into the docker container, the tests take 5 minutes or so to run.\n. ",
    "israelshirk": "Similar to @brikis98 docker-osx-dev, using Vagrant to simplify the setup a bit: https://github.com/yeti-support/docker-development-helper\n. ",
    "wyattjoh": "+1 Would be great to implement, just switched to iTerm2 today... Would love to see the support.\n. ",
    "bdauton": "+1 iTerm support\n. ",
    "devilankur18": "+1\n. ",
    "alexisjanvier": "+1\n. +1\n. ",
    "stepmr": "+1\n. ",
    "lardissone": ":+1: \n. ",
    "jaydrogers": ":+1:\n. ",
    "snoopotic": "yepyep! +1\n. yepyep! +1\n. ",
    "damassi": ":+1: \n. :+1: \n. ",
    "thomastosoni": "+1\n. ",
    "solupro": ":+1: \n. ",
    "davelab": "+1 for iterm\n. ",
    "begizi": ":+1: \n. @rabe69 Worked like a charm! I tried putting all of the command into a bash script a couple of days ago without any luck. Great trick with the profiles to get it to work! :+1: \n. @rabe69 Worked like a charm! I tried putting all of the command into a bash script a couple of days ago without any luck. Great trick with the profiles to get it to work! :+1: \n. ",
    "ylemoigne": "+1\n. ",
    "kellyrob99": "@rabe69 Thanks for sharing, your solution works perfectly :+1: \n. ",
    "inigosola": "The following applescript is working for me. You can save it as Application and use the boot2docker icon (you can write launch session \"Default Session\" in the blank line to force to create a new tab).\n```\ntell application \"iTerm\"\n    make new terminal\n    tell the current terminal\n        activate current session\n    tell the last session\n        write text \"unset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\"\n        write text \"mkdir -p ~/.boot2docker\"\n        write text \"if [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\"\n        write text \"/usr/local/bin/boot2docker init && /usr/local/bin/boot2docker up && $(boot2docker shellinit) && docker version\"\n    end tell\nend tell\n\nend tell\n``\n. The following applescript is working for me. You can save it as Application and use the boot2docker icon (you can writelaunch session \"Default Session\"` in the blank line to force to create a new tab).\n```\ntell application \"iTerm\"\n    make new terminal\n    tell the current terminal\n        activate current session\n    tell the last session\n        write text \"unset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\"\n        write text \"mkdir -p ~/.boot2docker\"\n        write text \"if [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\"\n        write text \"/usr/local/bin/boot2docker init && /usr/local/bin/boot2docker up && $(boot2docker shellinit) && docker version\"\n    end tell\nend tell\n\nend tell\n```\n. ",
    "ptt-homme": "@inigosola this works perfectly, thanks !\n. ",
    "GerryG": "It's worse that just needing to support it.  On my installation, it confuses iTerm and Terminal.  An extra window that I can't access shows up on iTerm2, and a second dock icon shows up for Terminal, but I cannot get access to the shell on the docker instance.\nThis is a bug and should be fixed.\n. ",
    "sirkkalap": "Somewhat related is that for me the default handler for .command files (terminal) was Terminal, not iTerm. So I put together a small project to setup and test the defaults: https://github.com/sirkkalap/osx-default-terminal \n. I may be wrong here, but\nusing open command to open a script that has extension .command might work too. And it would use the system default terminal, so there would be no need for configuration.\nAny thoughts about that?\n\n. I may be wrong here, but\nusing open command to open a script that has extension .command might work too. And it would use the system default terminal, so there would be no need for configuration.\nAny thoughts about that?\n\n. You can also use $(boot2docker shellinit) to avoid temp file. It is syntax for subshell execution and evaluation of result in parent shell. \n. ",
    "bevans157": "+1 pls\n. +1 pls\n. ",
    "deitch": "+1, but make it an option. You should be able to use an env var or config file/flag in $HOME/.boot2docker/\n. OK, I got tired of getting all of the notifications. I created an AppleScript (what a horrible language!) that:\n- Checks if iTerm exists\n- Checks if ~/.boot2docker/terminal exists\n- Checks if the first word in ~/.boot2docker/terminal equals \"iTerm\"\nIf all of the above are true, it launches in iTerm; else, it launches in Terminal\nI cleaned up the variables by unifying them outside of Terminal vs. iTerm instantiation, but didn't bother fixing the different implementation methods (Terminal uses do script, iTerm uses write text, etc.) but it works quite well.\nPull Request coming in 2...\n. OK, I got tired of getting all of the notifications. I created an AppleScript (what a horrible language!) that:\n- Checks if iTerm exists\n- Checks if ~/.boot2docker/terminal exists\n- Checks if the first word in ~/.boot2docker/terminal equals \"iTerm\"\nIf all of the above are true, it launches in iTerm; else, it launches in Terminal\nI cleaned up the variables by unifying them outside of Terminal vs. iTerm instantiation, but didn't bother fixing the different implementation methods (Terminal uses do script, iTerm uses write text, etc.) but it works quite well.\nPull Request coming in 2...\n. ",
    "jeffmay": ":+1: \n. ",
    "honzatrtik": "+1\n. +1\n. ",
    "hotpro": "+1\n. +1\n. ",
    "spencern": "+1\n. +1\n. ",
    "levbrie": "+1\n. ",
    "MrCitron": "+1\n. ",
    "archr": "+1\n. ",
    "malteseduck": "+1\n. ",
    "raw34": "+1\n. ",
    "Yemsheng": "+1\n. ",
    "danielwhatmuff": "+1\n. ",
    "mariten": ":+1: \n. ",
    "pedropregueiro": "+1\n. ",
    "josecanhelp": "+1\n. +1\n. ",
    "dternyak": "+1\n. +1\n. ",
    "BostjanPisler": "+1\n. +1\n. ",
    "aquartier": "To fix this issue, here is what I did:\nUse the Script Editor to edit the first line of main.scpt in Contents/Resources/Scripts as follows:\nFrom\ntell application \"Terminal\"\nto\ntell application \"iTerm\"\nThen open the iTerm and run :\nboot2docker delete\nOpen virtualbox, go to Preferences > Network > Host Only Networks, then delete all networks.\nLast, run the following commands in iTerm:\nboot2docker init\nboot2docker up\n. ",
    "frankV": "+1\n. ",
    "ajacquelin": "+1\n. ",
    "behrangsa": ":+1: \nboot2docker can inspect the global environment variables for something like:\nDOCKER_TERM=/path/to/term\nand use that Terminal. There are some possible options mentioned in this StackOverflow thread.\n. boot2docker is failing for me as well on Windows 2008 R2:\n```\nC:>boot2docker -v init\nBoot2Docker-cli version: v1.7.0\nGit commit: 7d89508\n2015/07/02 09:59:38 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/02 09:59:38 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/02 09:59:38 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2015/07/02 09:59:38 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 0e687e1c-5ed6-46e8-b320-c83dd864abb8\nSettings file: 'C:\\Users\\bsaeedzadeh\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2015/07/02 09:59:38 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/02 09:59:39 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/07/02 09:59:39 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein of\nf --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --c\npus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirte\nx on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server\n \\.\\pipe\\boot2docker-vm --boot1 dvd\n2015/07/02 09:59:39 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/02 09:59:39 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cabl\neconnected1 on\n2015/07/02 09:59:39 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/07/02 09:59:40 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2015/07/02 09:59:41 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2015/07/02 09:59:41 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic2 hostonly --nictype2 virtio -\n-cableconnected2 on --hostonlyadapter2 VirtualBox Host-Only Ethernet Adapter #2\n2015/07/02 09:59:41 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe storagectl boot2docker-vm --name SATA --add sata --portcoun\nt 4 --hostiocache on --bootable on\n2015/07/02 09:59:41 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe storageattach boot2docker-vm --storagectl SATA --port 0 --d\nevice 0 --type dvddrive --medium C:\\Users\\bsaeedzadeh.boot2docker\\boot2docker.iso\nConverting from raw image file=\"stdin\" to file=\"C:\\Users\\bsaeedzadeh\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vmdk\"...\nCreating dynamic image with size 20971520000 bytes (20000MB)...\nInitializing disk with ssh keys\nWRITING: boot2docker, please format-me                                                                       0000000 0000000 0000000 0000000\n0035 00000000000 014423                                                                                                       ustar 00\n                                                          0000000 0000000\n                                                                                                     boot2docker, please format-me\n                                                 .ssh\n         0000700 0000000 0000000 00000000000 00000000000 007767  5\n                          ustar 00                                                                0000000 0000000\n\n .ssh/authorized_keys                                                                                0000644 0000000 0000000 00000000617\n\n00000000000 013140                                                                                                       ustar 00\n                                                      0000000 0000000\n                                                                                                 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCvxlo\nW9D+xFWR4XcWABDszCBtJhcpGiGsNS+vv1mg2jxPppN+mPObp62LljwHrlPbI3h6sIKikJSHzXF4NO8KYhVUdxO9YeLn/naVUAia8WyFmLFSOpmfI+SkdHkmY1It3T93/MseWKPiUdPf\n9vZ4wZ+RwX2p1YdoadpLVCkt1SLcRaUqFj70TJniiCqEXmhUOb7tNd/c72Fm+23iv8rv0ZF9Sbbg5Ql7hN+4kxan4sRtgSugFwMiFmLBkKu1J3qefAK0pmvf7yBBXuuNCgxCHXDTTkHO\nsTQB9rKXtZVOSkmQXcjrDawAuGrt+3FQfOyMxNMenkvOfouvkaWb8aacz bsaeedzadeh@D2104\n                                                                                                                 .ssh/authorized_keys2\n                                                                         0000644 0000000 0000000 00000000617 00000000000 013222\n                                                                                          ustar 00\n                      0000000 0000000\n                                                                 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCvxloW9D+xFWR4XcWABDszCBtJhcpGiGsNS+v\nv1mg2jxPppN+mPObp62LljwHrlPbI3h6sIKikJSHzXF4NO8KYhVUdxO9YeLn/naVUAia8WyFmLFSOpmfI+SkdHkmY1It3T93/MseWKPiUdPf9vZ4wZ+RwX2p1YdoadpLVCkt1SLcRaUq\nFj70TJniiCqEXmhUOb7tNd/c72Fm+23iv8rv0ZF9Sbbg5Ql7hN+4kxan4sRtgSugFwMiFmLBkKu1J3qefAK0pmvf7yBBXuuNCgxCHXDTTkHOsTQB9rKXtZVOSkmQXcjrDawAuGrt+3FQ\nfOyMxNMenkvOfouvkaWb8aacz bsaeedzadeh@D2104\n\n2015/07/02 10:00:26 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe storageattach boot2docker-vm --storagectl SATA --port 1 --d\nevice 0 --type hdd --medium C:\\Users\\bsaeedzadeh\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vmdk\n```\n. ",
    "jakubLangr": "+1\n. ",
    "eliocapelati": "+1\n. ",
    "willgdjones": "+1\n. ",
    "markhu": "+1\n. ",
    "cmourouvin": "+1\n. ",
    "sunggun-yu": "+1\n. +1\n. ",
    "BryanSaxon": ":+1: \n. :+1: \n. ",
    "prinzdezibel": "Terminal agnostic boot2docker launcher: https://gist.github.com/afmacedo/013723430541a2fc4d94\n. ",
    "rdsubhas": "ping!\nThank you so much!\n. Thanks @SvenDowideit!\n. Ubuntu 14.04 - File contents are up to date:\n\nBoot2docker 1.8.2 - File contents are cached after a cat and then never updated:\n\n. Further investigation: Its got to do with the Filesystem cache/buffers. cat shows the cached file, wherease less and vi show the uncached file.\nRunning the following command clears the filesystem cache and shows the updated file:\necho 3 > /proc/sys/vm/drop_caches\nI'm investigating with older versions of boot2docker ISO to find out whether this is a regression.\n. @trigun539 I'm testing this with boot2docker 1.6.2 to see if the same shared folder problem is present there as well. could be a regression somewhere...\n. UPDATE 1: Shared folder works perfectly with Boot2docker 1.6.2 release. No caching issues, file changes immediately  reflected.\n\n\n. UPDATE 2: Gotcha: Regression in boot2docker 1.7.0, could be the FSCACHE changes.\n\n\n. pinging @tianon @paolomainardi @SvenDowideit to have a second look, referencing #699\nI'm now disabling each CONFIG_FSCACHE related flag introduced in #699 and rebuilding the ISO to test\n. @braderhart sorry was not able to do that yet, will be checking with CONFIG_FSCACHE today. Good to know that I'm not the only person facing this issue ;)\n. @braderhart sorry was not able to do that yet, will be checking with CONFIG_FSCACHE today. Good to know that I'm not the only person facing this issue ;)\n. awesome @tianon will try out the RC :+1: \n. awesome @tianon will try out the RC :+1: \n. checking it out right away\n. @lalyos just to confirm: does 1.9.0-rc2 fix the issue? or clearing the cache (cache-clear or echo 3 > ..../drop_caches) ?\n. Good to hear @lalyos! I still see cat is caching, and its nice to note that mkdocs, less, vi, npm don't use the cache. I'm checking with python in a container. Thanks a bunch @tianon but I'm not sure what to make of the output :) Any ideas?\n\n. Yep ran the same steps multiple times just to make sure, and ran cache-clear in between. Also lsmod does not list \"fscache\" both in the RC as well as 1.8.2, guess fscache is built into the kernel when compiled.\n\n. @garykrige just a try, but have you checked with Virtualbox Guest Additions installed?\n. ",
    "LK4D4": "@SvenDowideit Not sure if this has influence on boot2docker, but there is bug in docker with 3.15 branch: dotcloud/docker#6345\n. ",
    "alex-sherwin": "Works for me using 1.1.2\n. Works for me using 1.1.2\n. ",
    "pjratl": "Having same issue under windows 8.1 with 1.1.1\nwhat info could help?\n. Having same issue under windows 8.1 with 1.1.1\nwhat info could help?\n. ok underlying problem seems to have been VirtualBox 4.3.12 network issue installed 4.3.14RC1  deleted old boot2docker vm and re ran boot2docker start and all is well.\nthis page got me started in ntis direction https://www.virtualbox.org/ticket/13096\n. ok underlying problem seems to have been VirtualBox 4.3.12 network issue installed 4.3.14RC1  deleted old boot2docker vm and re ran boot2docker start and all is well.\nthis page got me started in ntis direction https://www.virtualbox.org/ticket/13096\n. ",
    "rrichardson": "I have this problem, but it is because I'm going through a corporate proxy which MITMs SSL connections.  I need some way to tell whatever is doing the download to ignore SSL cert mismatches, or a way to give it a list of SSL root certs to trust. \n. OK. I was able to fix my problem by scp'ing a cacert.pem collection onto the boot2docker vm, and then catting it onto the end of /etc/ssl/cacert.pem and/or copying it into /etc/ssl/certs and then restarting the docker daemon on the vm. \n. ",
    "aterreno": "I've the same problem on a pretty fresh mac os x (yosemite), trying to use boot2docker 1.3\n\u03bb ~/code/ boot2docker download\nerror in run: Failed to get latest release: Get https://api.github.com/repos/boot2docker/boot2docker/releases: x509: certificate signed by unknown authority\n. ",
    "chengweiv5": "I'm using the latest boot2docker release and have this problem too.\n\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n\nHowever, I can download the releases file by wget like below\n\nwget https://api.github.com/repos/boot2docker/boot2docker/releases\n--2015-03-18 22:14:38--  https://api.github.com/repos/boot2docker/boot2docker/releases\nConnecting to 127.0.0.1:8087... connected.\nProxy request sent, awaiting response... 200 OK\nLength: 108566 (106K) [application/json]\nSaving to: 'releases'\nreleases                                100%[===============================================================================>] 106.02K  57.4KB/s   in 1.8s\n2015-03-18 22:14:42 (57.4 KB/s) - 'releases' saved [108566/108566]\n\nAny thoughts?\n. ",
    "dustinbarnes": "I ended up using Vagrant to put together an ubuntu box (phusion/ubuntu-14.04-amd64), and had the same issue. I ended up finding a \"private network\" option, put it in my vagrant file, and everything works. The relevant line: \nconfig.vm.network \"private_network\", ip: \"192.168.33.10\"\nI'm not familiar enough with virtualbox to know what this did or why it works, but it does. \n. ",
    "flyinprogrammer": "(I'm experiencing the same problem, but I think I've sort of figure out the issue. more or less.)\n@dustinbarnes I suspect you're maybe using the latest boot2docker install at this point (1.1.2) -- even then the issue you're experiencing is that I suspect you're starting things via command line instead of using the applet. The applet will create a route to the host-only ip address (netstat -nr), and when you/I run the same commands the applet seems to be running via command line the route doesn't get created and then things are 'broken'.\nIdk if someone knows where the code is that creates the route - but that'd be a first step I imagine towards getting this closed out.\nUpdate my issue was/is cisco anyconnect related: https://forums.virtualbox.org/viewtopic.php?f=8&t=55066\n. (I'm experiencing the same problem, but I think I've sort of figure out the issue. more or less.)\n@dustinbarnes I suspect you're maybe using the latest boot2docker install at this point (1.1.2) -- even then the issue you're experiencing is that I suspect you're starting things via command line instead of using the applet. The applet will create a route to the host-only ip address (netstat -nr), and when you/I run the same commands the applet seems to be running via command line the route doesn't get created and then things are 'broken'.\nIdk if someone knows where the code is that creates the route - but that'd be a first step I imagine towards getting this closed out.\nUpdate my issue was/is cisco anyconnect related: https://forums.virtualbox.org/viewtopic.php?f=8&t=55066\n. ",
    "jcderr": "Wait. I might be an idiot. I think the app image may not have actually launched nginx...\n[edit] yep. ignore me.\n. Wait. I might be an idiot. I think the app image may not have actually launched nginx...\n[edit] yep. ignore me.\n. ",
    "abhishekkr": "This error occured for me also, even I had MSysGit pre-installed.\nBut if you run\nbash\n$ boot2docker init\nit will fix the case\nit creates the missing \"bootdocker-vm\", which is supposed to happen via \"start.sh\" in installed artifacts but doesn't take place\n. ",
    "bradisbell": "I have the same symptoms when I already had Git and VirtualBox installed.  boot2docker init didn't fix things in my case as now I'm getting an error that ssh-keygen isn't found in the path.  I'll fix this manually.\n. I have the same symptoms when I already had Git and VirtualBox installed.  boot2docker init didn't fix things in my case as now I'm getting an error that ssh-keygen isn't found in the path.  I'll fix this manually.\n. ",
    "vyjaikumar": "for me same problem dint appear when i used start.sh from git bash prompt.\n. ",
    "abrkn": ":+1:\n. :+1:\n. I actually managed to extend the whale without adding the container. Thanks for the heads up, @tianon\n. ",
    "yangtao309": "good job!\n. ",
    "Bohne": "Had the same problem (Win7 64bit) and found a solution at https://github.com/boot2docker/windows-installer/issues/31 - most important I had to remove the folder boot2docker-vm at \"C:\\Users\\username\\VirtualBox VMs\" from a previous installation.\n. ",
    "damianesteban": "I'm having the same issue, on OS X 10.10.3.\n$ boot2docker init\nruns fine, but when I do:\n$ boot2docker up\nI get the following error:\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\n. I'm having the same issue, on OS X 10.10.3.\n$ boot2docker init\nruns fine, but when I do:\n$ boot2docker up\nI get the following error:\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\n. ",
    "colmonty": "I'm getting the same issues as @themicmac and @damianesteban on my Mac.  Oddly, it only started yesterday after I upgraded VirtualBox - but despite downgrading again, and installing with and without brew/cask, I still get the same issues.\nThe VM seems to start fine, as far as VBox is concerned, but it's like boot2docker can't communicate with it.\n. finally got it to work again.  I think my boot2docker ISO was corrupted or something and I was assuming (I know...) that it was getting the ISO fresh every time I did a brew install boot2docker.\nboot2docker delete\nbrew uninstall docker\nbrew uninstall boot2docker\nrm -rf /Users/<your-username>/.boot2docker/\nrm -rf /Users/<your-username>/VirtualBox\\ VMs/boot2docker-vm\nbrew install boot2docker\nboot2docker init\nboot2docker up\n. ",
    "dapper-hacker": "What worked for me was a simple copy of ssh key(private) which I already had for the pre-installed git. \nGo to c:/user/YOU/.ssh/  then \ncopy id_rsa id_boot2docker\nthen run \nboot2docker init\nIt should work. \n. ",
    "ssmythe": "If you're on Windows, make sure your virtualization options are turned on in the BIOS.  Many vendors ship with this option turned off (go figure).\n. ",
    "vanng822": "I removed boot2docker-vm from GUI and had the same problem for Mac OS (can not run any boot2docker command). I did following and works fine (incase some one has the same problem):\nrm -rf /Users//VirtualBox\\ VMs/boot2docker-vm\nboot2docker init\nboot2docker up\n(be aware of new docker settings)\n. I removed boot2docker-vm from GUI and had the same problem for Mac OS (can not run any boot2docker command). I did following and works fine (incase some one has the same problem):\nrm -rf /Users//VirtualBox\\ VMs/boot2docker-vm\nboot2docker init\nboot2docker up\n(be aware of new docker settings)\n. ",
    "Seikho": "Windows 8.1 64bit here. I had the same error as many others:\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\nTo help diagnose the error, I launched VirtualBox directly and tried to run boot2docker. I ended up getting an error related to VT-x not being enabled/available (VirtualBox trouble ticket).\nFor me, the solution was uninstalling Hyper-V via Programs and Features. After un-installing and a reboot, I had no issues.\n. ",
    "dotnetCarpenter": "@SvenDowideit use can use where git to find the path on windows. Doesn't work in PowerShell though.\n. ",
    "Mellbourn": "@dotnetCarpenter The PowerShell replacement for where git is (Get-Command git).Path\n. +1 delete and init helps, but you have to repeat it.\n. ",
    "wrenzi": "Thank you @vanng822, that worked for me.\n. ",
    "naomik": "I found these files too\n/usr/local/bin/docker\n~/.ssh/id_boot2docker\n~/.ssh/id_boot2docker.pub\n/private/var/db/receipts/io.boot2docker.pkg.boot2docker.bom\n/private/var/db/receipts/io.boot2docker.pkg.boot2docker.plist\n/private/var/db/receipts/io.boot2docker.pkg.boot2dockerapp.bom\n/private/var/db/receipts/io.boot2docker.pkg.boot2dockerapp.plist\n/private/var/db/receipts/io.boot2dockeriso.pkg.boot2dockeriso.bom\n/private/var/db/receipts/io.boot2dockeriso.pkg.boot2dockeriso.plist\n. I found these files too\n/usr/local/bin/docker\n~/.ssh/id_boot2docker\n~/.ssh/id_boot2docker.pub\n/private/var/db/receipts/io.boot2docker.pkg.boot2docker.bom\n/private/var/db/receipts/io.boot2docker.pkg.boot2docker.plist\n/private/var/db/receipts/io.boot2docker.pkg.boot2dockerapp.bom\n/private/var/db/receipts/io.boot2docker.pkg.boot2dockerapp.plist\n/private/var/db/receipts/io.boot2dockeriso.pkg.boot2dockeriso.bom\n/private/var/db/receipts/io.boot2dockeriso.pkg.boot2dockeriso.plist\n. Great work !\nEveryone's +1's made something happen and stuff !\nEveryone should feel proud and have a great day.\nLel.\n. After opening a new shell, I ran\nsh\ndocker version\nI got this output:\nplain\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 7c8fca2\nOS/Arch (client): darwin/amd64\nFATA[0000] Get http:///var/run/docker.sock/v1.18/version: dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS?\nWel that's no good ! Let's fix that up !\nAfter doing a little research, I found I have to export the DOCKER_HOST, DOCKER_CERT_PATH, and DOCKER_TLS_VERIFY environment vars provided with boot2docker shellinit\n\n:warning: :warning:  If this is the wrong way to do this, please let me know ! :warning: :warning:\nTo get everything setup, I opened up my .zshrc file and added the following lines\n``` sh\nboot2docker\n$(boot2docker shellinit 2> /dev/null)\n```\nThe 2> /dev/null bit prevents shellinit from dumping text on your screen every time you start a new terminal session.\nTo verify this works, I started a new shell session and I re-ran:\nsh\ndocker version\nNow I get the correct output\nplain\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 7c8fca2\nOS/Arch (client): darwin/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.2\nGit commit (server): 7c8fca2\nOS/Arch (server): linux/amd64\nYay !\nI hope this helps someone ^.^\n. ",
    "jjbubudi": "+1\n. ",
    "djhworld": "+1\n. ",
    "hellobrian": "+1\n. +1\n. ",
    "eshamow": "+1\n. +1\n. ",
    "funkytaco": "+1\n. +1\n. ",
    "kiahhan": "+1\n. +1\n. ",
    "haren": "+100\n. ",
    "michaelsbradleyjr": "+1\n. @connaryscott docker-machine may be worth a look. I've found it to be a super-easy way to setup and teardown local boot2docker VMs:\n``` shellsession\ndocker-machine create -d virtualbox dev1\ndocker-machine create -d virtualbox dev2\ndocker-machine upgrade dev1\ndocker-machine rm dev2\nand so on... see: docker-machine help\n```\nWhen using the virtualbox driver, docker-machine uses (and automatically downloads) the boot2docker iso. I much prefer working with boot2docker in this way as I don't have to think about the particulars of installing, removing or upgrading it.\nI cooked up some aliases and a bash function for simple toggling of the \"active\" machine and its DOCKER_... env variables:\nhttps://gist.github.com/michaelsbradleyjr/b179ca7e92838d7f08a1#file-bash_aliases-sh-L19\n. @connaryscott docker-machine may be worth a look. I've found it to be a super-easy way to setup and teardown local boot2docker VMs:\n``` shellsession\ndocker-machine create -d virtualbox dev1\ndocker-machine create -d virtualbox dev2\ndocker-machine upgrade dev1\ndocker-machine rm dev2\nand so on... see: docker-machine help\n```\nWhen using the virtualbox driver, docker-machine uses (and automatically downloads) the boot2docker iso. I much prefer working with boot2docker in this way as I don't have to think about the particulars of installing, removing or upgrading it.\nI cooked up some aliases and a bash function for simple toggling of the \"active\" machine and its DOCKER_... env variables:\nhttps://gist.github.com/michaelsbradleyjr/b179ca7e92838d7f08a1#file-bash_aliases-sh-L19\n. ",
    "dbroeglin": "+1\n. ",
    "skyl": "In addition to what is listed above, I have:\n/private/var/db/BootCaches/B58C288C-3434-4C6F-8ACD-64B27BC4098C/app.com.apple.ScriptEditor.id.boot2docker.playlist\n/User/skyl/Library/Saved Application State/com.apple.ScriptEditor.id.boot2docker.savedState\n/usr/local/Library/Aliases/boot2docker-cli\n/usr/local/Library/Formula/boot2docker.rb\nI guess the last two are homebrew-related and not to be uninstalled. Not sure about the first two.\n. ",
    "mkatrenik": "+1\n. ",
    "wndxlori": "+1 Especially since it's borked after a Files & Settings transfer to a new machine.\n. ",
    "aaronhall": "+1\n. ",
    "chmouel": "+1\n. ",
    "nguyenchiencong": "+1\n. ",
    "huangsam": "@naomik I included the files you found in my commit https://github.com/huangsam/osx-installer/commit/e6b110f834ec7d30b2921574a3316739bae652c2. @SvenDowideit, Are there any other files/processes I am missing before you merge the PR?\n. FYI my VirtualBox version is 4.3.14\n. How's the testing going on your end? I'm interested if you found anything new in this area. Still using 4.3.12 right now\n. @SvenDowideit makes sense. I downgraded to 4.3.12 as well, and it didn't work after doing a boot2docker upgrade. Apparently, doing the following made boot2docker work for Windows:\n\n. Sure here it is:\n``` bash\n!/bin/sh\ndocker daemon start script\n[ $(id -u) = 0 ] || { echo 'must be root' ; exit 1; }\nimport settings from profile (e.g. HTTP_PROXY, HTTPS_PROXY)\ntest -f '/var/lib/boot2docker/profile' && . '/var/lib/boot2docker/profile'\n: ${DOCKER_HOST:='-H tcp://0.0.0.0:2375'}\n: ${DOCKER_TLS:=''}\n: ${DOCKER_STORAGE:=auto}\n: ${DOCKER_DIR:=/var/lib/docker}\n: ${DOCKER_ULIMITS:=1048576}\n: ${DOCKER_LOGFILE:=/var/lib/boot2docker/docker.log}\n: ${CERTDIR:=/var/lib/boot2docker/tls/}\n: ${CACERT:=\"${CERTDIR}ca.pem\"}\n: ${CAKEY:=\"${CERTDIR}cakey.pem\"}\n: ${SERVERCERT:=\"${CERTDIR}server.pem\"}\n: ${SERVERKEY:=\"${CERTDIR}serverkey.pem\"}\n: ${CERT:=\"${CERTDIR}cert.pem\"}\n: ${KEY:=\"${CERTDIR}key.pem\"}\nstart() {\n    # Not enabling Docker daemon TLS by default.\n    if [ \"$DOCKER_TLS\" != \"\" ]; then\n        CERTHOSTNAMES=\"$(hostname -s),$(hostname -i)\"\n        ETH0=$(ip addr show eth0 |sed -nEe 's/^[ \\t]inet[ \\t]([0-9.]+)\\/.$/\\1/p')\n        ETH1=$(ip addr show eth1 |sed -nEe 's/^[ \\t]inet[ \\t]([0-9.]+)\\/.$/\\1/p')\n        if [ \"$ETH0\" != \"\" ]; then\n            CERTHOSTNAMES=\"$CERTHOSTNAMES,$ETH0\"\n        fi\n        if [ \"$ETH1\" != \"\" ]; then\n            CERTHOSTNAMES=\"$CERTHOSTNAMES,$ETH1\"\n        fi\n        echo \"Need TLS certs for $CERTHOSTNAMES\"\n        echo \"-------------------\"\n    mkdir -p \"$CERTDIR\"\n    chmod 700 \"$CERTDIR\"\n    if [ ! -f \"$CACERT\" ] || [ ! -f \"$CAKEY\" ]; then\n        echo \"Generating CA cert\"\n        /usr/local/bin/generate_cert --cert=\"$CACERT\" --key=\"$CAKEY\"\n        rm \"$SERVERCERT\" \"$SERVERKEY\" \"$CERT\" \"$KEY\" \"$CERTDIR/hostnames\"\n    fi\n\n    CERTSEXISTFOR=$(cat \"$CERTDIR/hostnames\" 2>/dev/null)\n    if [ \"$CERTHOSTNAMES\" != \"$CERTSEXISTFOR\" ]; then\n        echo \"Generate server cert\"\n        echo /usr/local/bin/generate_cert --host=\"$CERTHOSTNAMES\" --ca=\"$CACERT\" --ca-key=\"$CAKEY\" --cert=\"$SERVERCERT\" --key=\"$SERVERKEY\" \n        /usr/local/bin/generate_cert --host=\"$CERTHOSTNAMES\" --ca=\"$CACERT\" --ca-key=\"$CAKEY\" --cert=\"$SERVERCERT\" --key=\"$SERVERKEY\" \n        echo \"$CERTHOSTNAMES\" > \"$CERTDIR/hostnames\"\n    fi\n\n    if [ ! -f \"$CERT\" ] || [ ! -f \"$KEY\" ]; then\n        echo \"Generating client cert\"\n        /usr/local/bin/generate_cert --ca=\"$CACERT\" --ca-key=\"$CAKEY\" --cert=\"$CERT\" --key=\"$KEY\"\n    fi\n\n    if [ \"$DOCKER_TLS\" == \"auto\" ]; then\n        DOCKER_HOST='-H tcp://0.0.0.0:2376'\n        EXTRA_ARGS=\"$EXTRA_ARGS --tlsverify --tlscacert=$CACERT --tlscert=$SERVERCERT --tlskey=$SERVERKEY\"\n    else\n        EXTRA_ARGS=\"$EXTRA_ARGS $DOCKER_TLS --tlscacert=$CACERT --tlscert=$SERVERCERT --tlskey=$SERVERKEY\"\n    fi\n\n    # now make the client certificates available to the docker user\n    USERCFG=\"/home/docker/.docker\"\n    mkdir -p \"$USERCFG\"\n    chmod 700 \"$USERCFG\"\n    cp \"$CACERT\" \"$USERCFG\"\n    cp \"$CERT\" \"$USERCFG\"\n    cp \"$KEY\" \"$USERCFG\"\n    chown -R docker:staff \"$USERCFG\"\nfi\n\nmkdir -p \"$DOCKER_DIR\"\n\nif [ \"$DOCKER_STORAGE\" = 'auto' ]; then\n    # if /var/lib/docker is on BTRFS, let's use the native btrfs driver\n    # (AUFS on top of BTRFS does very bad things)\n    DOCKER_DEVICE=\"$(/bin/df -P \"$DOCKER_DIR\" | /usr/bin/awk 'END { print $1 }')\"\n    DOCKER_FSTYPE=\"$(/sbin/blkid -o export \"$DOCKER_DEVICE\" | /bin/grep TYPE= | /usr/bin/cut -d= -f2)\"\n    if [ \"$DOCKER_FSTYPE\" = 'btrfs' ]; then\n        DOCKER_STORAGE=\"$DOCKER_FSTYPE\"\n    fi\nfi\nif [ \"$DOCKER_STORAGE\" != 'auto' ]; then\n    # in the general case, let's trust Docker to \"do the right thing\"\n    EXTRA_ARGS=\"$EXTRA_ARGS -s $DOCKER_STORAGE\"\nfi\n\n# Increasing the number of open files and processes by docker\nulimit -n $DOCKER_ULIMITS\nulimit -p $DOCKER_ULIMITS\n\necho \"------------------------\" >> \"$DOCKER_LOGFILE\"\necho \"/usr/local/bin/docker -d -D -g \\\"$DOCKER_DIR\\\" -H unix:// $DOCKER_HOST $EXTRA_ARGS >> \\\"$DOCKER_LOGFILE\\\"\" >> \"$DOCKER_LOGFILE\"\n/usr/local/bin/docker -d -D -g \"$DOCKER_DIR\" -H unix:// $DOCKER_HOST $EXTRA_ARGS >> \"$DOCKER_LOGFILE\" 2>&1 &\n\n}\nstop() {\n    kill $(cat /var/run/docker.pid)\n}\nrestart() {\n    if check; then\n        stop && sleep 1 && start\n    else\n        start\n    fi\n}\ncheck() {\n    [ -f /var/run/docker.pid ] && ps $(cat /var/run/docker.pid) > /dev/null 2>&1\n}\nstatus() {\n    if check; then\n        echo 'Docker daemon is running'\n        exit 0\n    else\n        echo 'Docker daemon is not running'\n        exit 1\n    fi\n}\ncase $1 in\n    start) start;;\n    stop) stop;;\n    restart) restart;;\n    status) status;;\n    *) echo \"Usage $0 {start|stop|restart|status}\"; exit 1\nesac\n``\n. One terminal is runningdocker run hello-world` outside of the VM\nbash-3.2$ docker run hello-world\n2014/08/26 20:45:04 Post http://192.168.59.103:2375/v1.14/containers/create: malformed HTTP status code \"201\\x00Created\"\nThe other terminal is running tail -f /var/log/docker.log from within the VM\n[ed2a7d26] +job create()\n[ed2a7d26] +job log(create, c65cf38aaa3eef11c0640dc6b83ebdde5c07d7e8f2e41984b406883fe6a5fe2f, hello-world:latest)\n[ed2a7d26] -job log(create, c65cf38aaa3eef11c0640dc6b83ebdde5c07d7e8f2e41984b406883fe6a5fe2f, hello-world:latest) = OK (0)\n[ed2a7d26] -job create() = OK (0)\n. Were you able to diagnose or repeat this error for yourself, @SvenDowideit?\n. Were you able to diagnose or repeat this error for yourself, @SvenDowideit?\n. ",
    "cimbriano": "Arrived at this thread when searching for a boot2docker uninstaller. I don't see anything on the OS X installation page referenced by sindhus about uninstalling and the installer 1.4.1 installer seems to go right into the installation.\nI installed boot2docker via the installer before I realized there was a homebrew Formula. So now I'd like to uninstall and reinstall with homebrew. Any advice for a docker newbie?\n. ",
    "Peeja": "We could bind Docker's exposed ports explicitly to the correct IP, which will get Docker to report that IP from docker port:\n\nOr if you always want Docker port forwards to bind to one specific IP address, you can edit your system-wide Docker server settings (on Ubuntu, by editing DOCKER_OPTS in /etc/default/docker) and add the option --ip=IP_ADDRESS. Remember to restart your Docker server after editing this setting.\n\nI don't know enough about how boot2docker actually operates to know how to set DOCKER_OPTS, though.\n. ",
    "kevinSuttle": "This is especially troublesome for any apps built with OAuth that require specific URLs for callbacks. I tried all of the workarounds in the doc, and though I got lots of errors from VBoxManage, I saw the additions in port forwarding entries. However, I still wasn't able to connect.\n. This is especially troublesome for any apps built with OAuth that require specific URLs for callbacks. I tried all of the workarounds in the doc, and though I got lots of errors from VBoxManage, I saw the additions in port forwarding entries. However, I still wasn't able to connect.\n. FATA[0000] Error response from daemon: client and server don't have same version (client : 1.18, server: 1.17)\nI got this today, but running boot2docker upgrade fixed it.\n. Am I the only one who finds the messages confusing? \n``` bash\n\u276f brew install codeclimate                                                                              12:39:30 PM\n==> Installing codeclimate from codeclimate/homebrew-formulae\n==> Downloading https://github.com/codeclimate/codeclimate/archive/v0.0.7.tar.gz\n==> Downloading from https://codeload.github.com/codeclimate/codeclimate/tar.gz/v0.0.7\n################################################################## 100.0%\n==> env PATH=/usr/local/bin:/usr/local/Library/ENV/4.3:/usr/bin:/bin:/usr/sbin:/sbin PREFIX=/usr/local/Cellar/codecl\nbin/check\n```\nNotice the version numbers carefully. Those specific versions (1.19, 1.18) are only ever mentioned in the error from the daemon. \nError response from daemon: client and server don't have same version (client : 1.19, server: 1.18)\nNow this next one is the kicker. If boot2docker is up to date, then why is it downloading a new image of the same version? \n\u276f boot2docker upgrade                                                                                   12:39:37 PM\ndocker is up to date (1.7.0), skipping upgrade...\nboot2docker is up to date (v1.7.0), skipping upgrade...\nLatest release for github.com/boot2docker/boot2docker is v1.7.0\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.7.0/boot2docker.iso\n    to /Users/kevinsuttle/.boot2docker/boot2docker.iso\n...\n. Am I the only one who finds the messages confusing? \n``` bash\n\u276f brew install codeclimate                                                                              12:39:30 PM\n==> Installing codeclimate from codeclimate/homebrew-formulae\n==> Downloading https://github.com/codeclimate/codeclimate/archive/v0.0.7.tar.gz\n==> Downloading from https://codeload.github.com/codeclimate/codeclimate/tar.gz/v0.0.7\n################################################################## 100.0%\n==> env PATH=/usr/local/bin:/usr/local/Library/ENV/4.3:/usr/bin:/bin:/usr/sbin:/sbin PREFIX=/usr/local/Cellar/codecl\nbin/check\n```\nNotice the version numbers carefully. Those specific versions (1.19, 1.18) are only ever mentioned in the error from the daemon. \nError response from daemon: client and server don't have same version (client : 1.19, server: 1.18)\nNow this next one is the kicker. If boot2docker is up to date, then why is it downloading a new image of the same version? \n\u276f boot2docker upgrade                                                                                   12:39:37 PM\ndocker is up to date (1.7.0), skipping upgrade...\nboot2docker is up to date (v1.7.0), skipping upgrade...\nLatest release for github.com/boot2docker/boot2docker is v1.7.0\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.7.0/boot2docker.iso\n    to /Users/kevinsuttle/.boot2docker/boot2docker.iso\n...\n. This gets weird because of what I suspect is another bug. Trying to install https://github.com/codeclimate/codeclimate and I happened to get this bug. \n`` bash\n\u276f brew install codeclimate                                                                              12:40:53 PM\n==> Installing codeclimate from codeclimate/homebrew-formulae\n==> Downloading https://github.com/codeclimate/codeclimate/archive/v0.0.7.tar.gz\nAlready downloaded: /Library/Caches/Homebrew/codeclimate-0.0.7.tar.gz\n==> env PATH=/usr/local/bin:/usr/local/Library/ENV/4.3:/usr/bin:/bin:/usr/sbin:/sbin PREFIX=/usr/local/Cellar/codecl\nbin/check\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/version: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\nUnable to rundocker version', the docker daemon may not be running\nPlease ensure boot2docker up' succeeds and you've runboot2docker shellinit' in this shell\nmake: *** [install] Error 1\n\u276f boot2docker shellinit                                                                                 12:47:46 PM\nWriting /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm/key.pem\n    set -x DOCKER_HOST tcp://192.168.59.103:2376\n    set -x DOCKER_CERT_PATH /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm\n    set -x DOCKER_TLS_VERIFY 1\n/Users/kevinsuttle\n\u276f boot2docker ip                                                                                        12:47:50 PM\n192.168.59.103\n```\nCouple of things: \n1. The success of boot2docker up and boot2docker shellinit can be automated and checked programmatically. \nPlease ensureboot2docker up' succeeds and you've run boot2docker shellinit' in this shell. \n1. Both DOCKER_HOST and boot2docker ip report being set to 192.168.59.103, so the above error shouldn't be true. \n. This gets weird because of what I suspect is another bug. Trying to install https://github.com/codeclimate/codeclimate and I happened to get this bug. \n`` bash\n\u276f brew install codeclimate                                                                              12:40:53 PM\n==> Installing codeclimate from codeclimate/homebrew-formulae\n==> Downloading https://github.com/codeclimate/codeclimate/archive/v0.0.7.tar.gz\nAlready downloaded: /Library/Caches/Homebrew/codeclimate-0.0.7.tar.gz\n==> env PATH=/usr/local/bin:/usr/local/Library/ENV/4.3:/usr/bin:/bin:/usr/sbin:/sbin PREFIX=/usr/local/Cellar/codecl\nbin/check\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/version: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\nUnable to rundocker version', the docker daemon may not be running\nPlease ensure boot2docker up' succeeds and you've runboot2docker shellinit' in this shell\nmake: *** [install] Error 1\n\u276f boot2docker shellinit                                                                                 12:47:46 PM\nWriting /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm/key.pem\n    set -x DOCKER_HOST tcp://192.168.59.103:2376\n    set -x DOCKER_CERT_PATH /Users/kevinsuttle/.boot2docker/certs/boot2docker-vm\n    set -x DOCKER_TLS_VERIFY 1\n/Users/kevinsuttle\n\u276f boot2docker ip                                                                                        12:47:50 PM\n192.168.59.103\n```\nCouple of things: \n1. The success of boot2docker up and boot2docker shellinit can be automated and checked programmatically. \nPlease ensureboot2docker up' succeeds and you've run boot2docker shellinit' in this shell. \n1. Both DOCKER_HOST and boot2docker ip report being set to 192.168.59.103, so the above error shouldn't be true. \n. ",
    "maximkulkin": "Any progress on this ? I also think that this should be a default behavior. From my perspective this is an easy fix: most likely boot2docker VM will have only two network interfaces. You can just add that eth1 interface is the interface containers are bound to. Just add line like this somewhere in rootfs/rootfs/usr/local/etc/init.d/docker:\nEXTRA_ARGS=\"$EXTRA_ARGS --ip=$(ip addr show dev eth1 | grep -Eo 'inet [0-9.]+' | awk '{print $2}')\"\n. ",
    "iamfat": "I found the way... run a container with rsyslog service and map it to /dev in boot2docker host.\n. ",
    "danscan": "I see that there is a workaround posted by @dougmarcey for coreos/coreos-vagrant#124 by disabling NAT DNS Proxy 1 and NAT Host Resolver 1... if i'm interpreting it right.\nIs there a similar workaround for boot2docker?  I've tried to achieve something similar by changing some of the VM's networking settings, but was unsuccessful.\n. I see that there is a workaround posted by @dougmarcey for coreos/coreos-vagrant#124 by disabling NAT DNS Proxy 1 and NAT Host Resolver 1... if i'm interpreting it right.\nIs there a similar workaround for boot2docker?  I've tried to achieve something similar by changing some of the VM's networking settings, but was unsuccessful.\n. Thank you so much @EchoVelocity!  This issue was literally blocking my work for most of the morning.\n. (It works for me.)\n. ",
    "JacobMillward": "There is a temporary workaround located here:\nhttp://stackoverflow.com/questions/24060099/docker-failed-to-pull-images-from-registry\nIt works for me, and persists until reboot\n. There is a temporary workaround located here:\nhttp://stackoverflow.com/questions/24060099/docker-failed-to-pull-images-from-registry\nIt works for me, and persists until reboot\n. ",
    "marians": "VBoxManage modifyvm boot2docker-vm --natdnsproxy1 off --natdnshostresolver1 off seems to do the trick for me, too. Thanks @andyshinn!\n. VBoxManage modifyvm boot2docker-vm --natdnsproxy1 off --natdnshostresolver1 off seems to do the trick for me, too. Thanks @andyshinn!\n. ",
    "jamescarr": "Thanks @andyshinn, this worked for me as well!\n. Thanks @andyshinn, this worked for me as well!\n. ",
    "chriscohoat": "Thanks @andyshinn , works for me too.\n. Thanks @andyshinn , works for me too.\n. ",
    "alph486": "@andyshinn works here, thanks!\n. @andyshinn works here, thanks!\n. ",
    "pmuntyanu": "@andyshinn, thank you.\n. ",
    "masarufuruya": "@andyshinn works here! thanks.\n. ",
    "krancour": "@andyshinn works great!  Thank you!\n. ",
    "ludoch": "But this will not work if you need port bindings.\nSo not an option, unless you do the loop to map them all...which is not\nrecommended anymore\nOn Thu, Jul 31, 2014 at 3:43 PM, frankamp notifications@github.com wrote:\n\nI get a similar result:\n2014/07/31 15:24:15 Done. Type /usr/local/bin/boot2docker up to start the VM.\nbash-3.2$ /usr/local/bin/boot2docker up && export DOCKER_HOST=tcp://$(/usr/local/bin/boot2docker ip 2>/dev/null):2375\n2014/07/31 15:24:16 Waiting for VM to be started...\n...........\n2014/07/31 15:24:49 Started.\n2014/07/31 15:24:49 To connect the Docker client to the Docker daemon, please set:\n2014/07/31 15:24:49     export DOCKER_HOST=tcp://192.168.59.103:2375\nbash-3.2$ docker version\nClient version: 1.1.2\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): d84a070\n2014/07/31 15:26:05 Get http://192.168.59.103:2375/v1.13/version: dial tcp 192.168.59.103:2375: operation timed out\nI tried this a couple times, tried uninstalling, tried brew, uninstalled\nthat, killed off a bunch of files, reinstalled fresh 1.1.2, still dead.\nUpon opening VirtualBox I noticed boot2docker helpfully setup forwarded\nports to my localhost on 2375, so I thought hey why don't I just export\nthat for DOCKER_HOST. Then I'm in business:\nbash-3.2$ export DOCKER_HOST=tcp://127.0.0.1:2375\nbash-3.2$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nbash-3.2$ docker run ubuntu echo \"hi\n\n\"\nUnable to find image 'ubuntu' locally\nPulling repository ubuntu\nba5877dc9bec: Download complete\n511136ea3c5a: Download complete\n9bad880da3d2: Download complete\n25f11f5fb0cb: Download complete\nebc34468f71d: Download complete\n2318d26665ef: Download complete\nhi\n\nbash-3.2$ docker version\nClient version: 1.1.2\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): d84a070\nServer version: 1.1.2\nServer API version: 1.13\nGo version (server): go1.2.1\nGit commit (server): d84a070\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/457#issuecomment-50828573\n.\n. No VPN running. (but OpenVPN installed).\n\nsudo ipfw -a list\n65535 0 0 allow ip from any to any\nSame when OpenVPN is running.\nOn Tue, Aug 5, 2014 at 6:24 AM, Jonathan Abourbih notifications@github.com\nwrote:\n\nAre you running the Cisco AnyConnect VPN client by any chance?\nCan you try:\nsudo ipfw -a list\nand see whether there's an entry like:\n00111       2        170 deny ip from any to any\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/457#issuecomment-51196206\n.\n. More data on this issue:\nOne person in my team has also a Mac and can use Host Only Docker.\n\nIn the netstat -nr command,\n192.168.59.103     8:0:27:e1:c0:31    UHLWIi          1    32580 vboxnet\n1169\nis working.\nIn my case, the netstart -nr is:\n192.168.59.103     a:0:27:0:0:0       UHLWIi          1        6     lo0\nAs you see, the critical difference is lo0 instead of vboxnet...\nHow is adding/configuring this routing entry? Vbox? Boot2Docker?\nThanks\nOn Thu, Aug 7, 2014 at 11:00 AM, frankamp notifications@github.com wrote:\n\n@jonbca https://github.com/jonbca I should have come back to the\nthread, yes my issue is AnyConnect related. The VirtualBox link by\n@SvenDowideit https://github.com/SvenDowideit in #392\nhttps://github.com/boot2docker/boot2docker/issues/392 (\nhttps://forums.virtualbox.org/viewtopic.php?f=8&t=55066) helped me\nunderstand what is going on. This may be the same issue, or at least its\nclose enough people are getting them mixed up.\nIt's not resolved for me quite yet but maybe with a manual route I can get\nby, at least I understand it now.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/457#issuecomment-51508280\n.\n. Cool, so now the story is to make it working on my Mac out of the box!\n\nSo in the VM, the command was:\nsudo ifconfig eth1 192.168.59.104\nand on my Mac, it was:\nsudo route -nv add -net 192.168.59.0/24 -interface vboxnet1\n. Cool, so now the story is to make it working on my Mac out of the box!\nSo in the VM, the command was:\nsudo ifconfig eth1 192.168.59.104\nand on my Mac, it was:\nsudo route -nv add -net 192.168.59.0/24 -interface vboxnet1\n. Yes, fresh VM created via boot2docker delete and init yesterday.\nNo VPN, same issue from work or at home, or traveling.\nGot that for 6 weeks, and having no clue, but it seems the routing is not\nworking...\nSame with previous versions since 1.0.\nBefore I was using port forwarding, and I'm still force to use it and\nlocalhost.\nMaybe you could attach the output of netstat?\nThanks,\nLudo\n On Jul 30, 2014 9:57 PM, \"Sven Dowideit\" notifications@github.com wrote:\n\nthis command would map the container's port to the desktop computer's\nnetwork, so a user can set up something and let their peers use it.\nthis removes some of the documented workarounds, and avoids opening all\nthe container ports on the cafe wifi.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/460.\n. Sorry, this response was for bug 467...\nOn Jul 30, 2014 10:02 PM, \"Ludovic Champenois\" ludovic.champenois@gmail.com\nwrote:\nYes, fresh VM created via boot2docker delete and init yesterday.\nNo VPN, same issue from work or at home, or traveling.\nGot that for 6 weeks, and having no clue, but it seems the routing is not\nworking...\nSame with previous versions since 1.0.\nBefore I was using port forwarding, and I'm still force to use it and\nlocalhost.\nMaybe you could attach the output of netstat?\nThanks,\nLudo\n On Jul 30, 2014 9:57 PM, \"Sven Dowideit\" notifications@github.com\nwrote:\n\nthis command would map the container's port to the desktop computer's\nnetwork, so a user can set up something and let their peers use it.\nthis removes some of the documented workarounds, and avoids opening all\nthe container ports on the cafe wifi.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/460.\n. It would be bad to break again Google Cloud customers with 1.5.0.\n1.3.1 changes already did a breakage for us, and the user base is now emitting the idea that Docker is not 'mature' (or it's dependent libraries like docker.py) and is breaking things in dot.dot or dot releases. \n. \n\n",
    "jesperfj": "I hop on and off AnyConnect on a regular basis and have observed similar issues. Specifically:\n- When I hop on VPN, I can no longer connect to the 192.168.59 network. AnyConnect reconfigures this route to go through the VPN tunnel\n- When I hop off the VPN, I still cannot connect to the 192.168.59 network. AnyConnect cleans up all routes after itself, including the 192.168.59 route.\nThe solution that works for me is to manually add the route back after hopping off VPN:\nsudo route -n add -net 192.168.59.0/24 -interface vboxnetX\nReplace X with the appropriate number based on output from your ifconfig. For example, with this configuration:\nvboxnet0: flags=8842<BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500\n    ether 0a:00:27:00:00:00 \nvboxnet1: flags=8943<UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500\n    ether 0a:00:27:00:00:01 \n    inet 192.168.59.3 netmask 0xffffff00 broadcast 192.168.59.255\nvboxnet1 is the interface configured for the 192.168.59 network.\nUnfortunately I haven't found a way of changing my routes while on the VPN. I can modify the 192.168.59 route to point back to the vboxnet interface but I get a \"dial tcp: ... permission denied\" when I run the docker CLI. Perhaps AnyConnect is preventing this action. I am not sure.\n. I hop on and off AnyConnect on a regular basis and have observed similar issues. Specifically:\n- When I hop on VPN, I can no longer connect to the 192.168.59 network. AnyConnect reconfigures this route to go through the VPN tunnel\n- When I hop off the VPN, I still cannot connect to the 192.168.59 network. AnyConnect cleans up all routes after itself, including the 192.168.59 route.\nThe solution that works for me is to manually add the route back after hopping off VPN:\nsudo route -n add -net 192.168.59.0/24 -interface vboxnetX\nReplace X with the appropriate number based on output from your ifconfig. For example, with this configuration:\nvboxnet0: flags=8842<BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500\n    ether 0a:00:27:00:00:00 \nvboxnet1: flags=8943<UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500\n    ether 0a:00:27:00:00:01 \n    inet 192.168.59.3 netmask 0xffffff00 broadcast 192.168.59.255\nvboxnet1 is the interface configured for the 192.168.59 network.\nUnfortunately I haven't found a way of changing my routes while on the VPN. I can modify the 192.168.59 route to point back to the vboxnet interface but I get a \"dial tcp: ... permission denied\" when I run the docker CLI. Perhaps AnyConnect is preventing this action. I am not sure.\n. ",
    "ryanbrainard": "To resolve vboxnetX, you can use VBoxManage showvminfo boot2docker-vm --machinereadable | grep hostonlyadapter | cut -d '\"' -f 2 so all together this one-liner works for me:\nsudo route -n add -net 192.168.59.0/24 -interface $(VBoxManage showvminfo boot2docker-vm --machinereadable | grep hostonlyadapter | cut -d '\"' -f 2)\n. To resolve vboxnetX, you can use VBoxManage showvminfo boot2docker-vm --machinereadable | grep hostonlyadapter | cut -d '\"' -f 2 so all together this one-liner works for me:\nsudo route -n add -net 192.168.59.0/24 -interface $(VBoxManage showvminfo boot2docker-vm --machinereadable | grep hostonlyadapter | cut -d '\"' -f 2)\n. ",
    "MarkVLK": "My boot2docker was running flawlessly until this week for some reason. Even after reinstalling boot2docker, still was having issues so not sure what changed.\nAnyways, I tried running the 2 commands @ludoch mentioned (subbing the 2nd one for @ryanbrainard 's one-liner):\nOn boot2docker VM:\nsudo ifconfig eth1 192.168.59.103\nNote: (I looked up the correct IP to use rather than 192.168.59.104 via the ifconfig command, though I found this one-liner that can get the appropriate IP for you: ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/' so maybe could use that in a similar manner to the one-liner below)\nOn host machine:\nsudo route -n add -net 192.168.59.0/24 -interface $(VBoxManage showvminfo boot2docker-vm --machinereadable | grep hostonlyadapter | cut -d '\"' -f 2)\nAnd now it works for me as long as I'm not connected to VPN (was using AnyConnect).\n. My boot2docker was running flawlessly until this week for some reason. Even after reinstalling boot2docker, still was having issues so not sure what changed.\nAnyways, I tried running the 2 commands @ludoch mentioned (subbing the 2nd one for @ryanbrainard 's one-liner):\nOn boot2docker VM:\nsudo ifconfig eth1 192.168.59.103\nNote: (I looked up the correct IP to use rather than 192.168.59.104 via the ifconfig command, though I found this one-liner that can get the appropriate IP for you: ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/' so maybe could use that in a similar manner to the one-liner below)\nOn host machine:\nsudo route -n add -net 192.168.59.0/24 -interface $(VBoxManage showvminfo boot2docker-vm --machinereadable | grep hostonlyadapter | cut -d '\"' -f 2)\nAnd now it works for me as long as I'm not connected to VPN (was using AnyConnect).\n. ",
    "thomassuckow": "If you use Anyconnect VPN, you can add a port forward to the NAT interface on the VM and then use -H=tcp://127.0.0.01:2375\nI'm not sure why boot2docker doesn't just do that in the first place.\n. I setup qemu on a Mac before it dawned on me. Which by the way is ~8x slower than virtualbox.\n. I think you mean port 2375, at least that is what I have.\n. I think you mean port 2375, at least that is what I have.\n. ",
    "rseymour": "@thomassuckow dear. god. how was that not blatantly obvious to me (and boot2docker for that matter)\n. ",
    "knownasilya": "@thomassuckow Which ports should be forwarded from the VM?\nFigured it out:\nFor those having the same issue, open VirtualBox and settings for the boot2docker-vm, under Network and NAT adapter, hit port forwarding and set host to 127.0.0.1:5555 and guest to port 2376. Then change your DOCKER_HOST env to tcp://127.0.0.1:5555 and try again.\n. Mine was 2376, but yeah I've had 2375 in the past. Guess depends on what boot2docker returns.\n. @greenimpala all set.\n. Sure, well try to get it done today.\n. Ah, was wondering how to do this :+1: \n. This is a workaround until there is a solution. I would love to have an official solution.\n. ",
    "joshes": "FWIW, I've found this script works a charm on Mac OSX 10.8.5 / boot2docker v1.3.2 without the need to fiddle with the VirtualBox NAT routing tables (aka the DOCKER_HOST=tcp://127.0.0.1:2736 fix).\nhttps://gist.github.com/christian-blades-cb/16e8ae55697ae65b5318\nI'm now able to successfully run the following test repeatedly:\n<restart>\nboot2docker up\n$(boot2docker shellinit)\ndocker run -d -p 80:80 tutum/hello-world\nboot2docker ip <confirm its 192.168.59.103>\ncurl -v 192.168.59.103\n<yay!>\n<connect to cisco anyconnect>\ncurl -v 192.168.59.103\n<boo!>\n<run script linked above>\ncurl -v 192.168.59.103\n<yay!>\nWorks the same after disconnecting from VPN (Cisco AnyConnect 3.1.04072) (meaning, if you run that script after disconnecting, you can connect to the vboxnet again)\n. FWIW, I've found this script works a charm on Mac OSX 10.8.5 / boot2docker v1.3.2 without the need to fiddle with the VirtualBox NAT routing tables (aka the DOCKER_HOST=tcp://127.0.0.1:2736 fix).\nhttps://gist.github.com/christian-blades-cb/16e8ae55697ae65b5318\nI'm now able to successfully run the following test repeatedly:\n<restart>\nboot2docker up\n$(boot2docker shellinit)\ndocker run -d -p 80:80 tutum/hello-world\nboot2docker ip <confirm its 192.168.59.103>\ncurl -v 192.168.59.103\n<yay!>\n<connect to cisco anyconnect>\ncurl -v 192.168.59.103\n<boo!>\n<run script linked above>\ncurl -v 192.168.59.103\n<yay!>\nWorks the same after disconnecting from VPN (Cisco AnyConnect 3.1.04072) (meaning, if you run that script after disconnecting, you can connect to the vboxnet again)\n. ",
    "raykrueger": "The script didn't work for me, but the port forwarding @knownasilya suggested did work.\n. The script didn't work for me, but the port forwarding @knownasilya suggested did work.\n. ",
    "michaelshobbs": "This article sheds some light I think\nhttp://superuser.com/questions/268776/how-do-i-configure-ssh-so-it-dosent-try-all-the-identity-files-automatically\nPerhaps running this will work:\nssh -v -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 2022 -i /Users/anonymous/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nPerhaps adding it above or below these lines?\nhttps://github.com/boot2docker/boot2docker-cli/blob/master/cmds.go#L516\nhttps://github.com/boot2docker/boot2docker-cli/blob/master/cmds.go#L460\n. Closing this in favor of boot2docker/boot2docker-cli#204\n. ",
    "brenttheisen": "+1\n. ",
    "eheb": "I get this error  when pulling jboss/wildfly. I use the latest 1.2 docker version  from boot2docker MACOSX\nIs there a solution to this issue : form docker, dockerHub or jboss docker repository ?\n. thanks a lot for this feedback.\nHave a good day.\nBest regards.\nEric H\u00e9bert\nLe Samedi 11 octobre 2014 0h51, Tianon Gravi notifications@github.com a \u00e9crit :\nYes, the fix for this was #543, and it will be in the next release of boot2docker, which should come next week.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "fuzzdoug": "This is how I got boot2docker (b2d) to work on VMware along with shipyard.\nI figure some could use this info...maybe...\nSorry if my markdown is jacked. \nI'm not a dev and never posted before.\nI did this on a vSphere Client v5.1.0, VMwareESXi v5.1.0.\nI have not tested this using VM player.\nStep 1 - Create a VM with:\n1. Two Network Adapters (under Virtualbox b2d makes two adapters)\n2. 2 GB ram or more...or less\n3. Hard disk 1 - IDE (0:0) Do not use SCSI (unless you want to configure the drivers)\n   See: http://wiki.tinycorelinux.net/wiki:vmware_installation?s[]=vmware\n4. CD/DVD Drive mapped to boot2docker.iso\n5. Boot into BIOS and change boot order to boot from CDROM\n6. Check your network config\n   $ ifconfig\n7. You should have: _docker0, eth0, eth1, lo listed\n8. My host ip is on _eth0: 10.18.226.125\n9. Test your SSH connection (it didn\u2019t work for me using just a single network adapter)\nStep 2 - Setup Persistent Data:\n1. Use fdisk and find your drive. (chances are it\u2019s /dev/sda)\n   $ fdisk -l\n2. Create a partition with label boot2docker-data\n   $ mkfs.ext4 -L boot2docker-data /dev/sda\n3. Reboot (I did not create a boot partition)\nStep 3 - Setup variable for shipyard\n1. Create and edit /var/lib/boot2docker/profile add DOCKER_OPTS as per below.\n$vi /var/lib/boot2docker/profile\nDOCKER_OPTS=\"-H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock\"\n2. Hit ESC\n3. :w\n4. :q\n5. Reboot\nStep 4 - Setup shipyard\n1. docker run -i -t -v /var/run/docker.sock:/docker.sock shipyard/deploy setup\nStep 5 - Setup shipyard-agent\n1. As per: https://github.com/shipyard/shipyard-agent\n$ docker run -i -t -v /var/run/docker.sock:/docker.sock \\\n   -e IP=`ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1;}'` \\\n   -e URL=http://<shipyard-host>:8000 -p 4500:4500 shipyard/agent\n2. Note: in my case 'shipyard-host' is 10.18.226.125\nHopefully I didn\u2019t miss a step.\nMost is just following direction as per the documention on the individual github repos.\nREF:\nhttps://github.com/boot2docker/boot2docker\nhttps://github.com/boot2docker/boot2docker/blob/master/doc/FAQ.md\nhttps://github.com/shipyard/shipyard/wiki/QuickStart\nhttps://github.com/shipyard/shipyard-agent\n. ",
    "jgoodall": "Is this being worked on? Happy to help test.\n. ",
    "romanrev": ":+1: for this to happen\n. ",
    "sammcj": "This would be really good, as @hansgru said many people can't or don't want to run Virtualbox (Not only is it slow as a dog it's also owned by Oracle!).\nMore than happy to help test if required.\n. @SvenDowideit are you having anything to do with VMware's fork? https://github.com/vmware/boot2docker\nThey don't seem to be accepting issues / PRs etc... which seems strange but it would be great if this was merged in if worthy?\n. Oh right, thanks Sven :)\n. ",
    "jwaldrip": ":+1: \n. ",
    "apriendeau": ":+1: \n. ",
    "Hellslicer": ":+1: \n. ",
    "SebCorbin": "And also a :+1:\n. ",
    "MelwinKfr": ":+1: \n. ",
    "Nominak": ":+1: \n. ",
    "lilfaf": ":+1: \n. ",
    "pvos": "+1\n. ",
    "nightexcessive": ":+1: \n. :+1: \n. ",
    "jeffwilcox": "Sounds like we all want it, but just need to jump in and get going. Maybe there's a hackathon opportunity in the future to get some expertise on this...\nTactically it sounds like at least:\n1. The PR https://github.com/boot2docker/boot2docker/pull/65 on exposing port/s\n2. fuzzdoug has some instructions. I wonder if others on this thread have had success manually and could share their experiences and trials?\n. Sounds like we all want it, but just need to jump in and get going. Maybe there's a hackathon opportunity in the future to get some expertise on this...\nTactically it sounds like at least:\n1. The PR https://github.com/boot2docker/boot2docker/pull/65 on exposing port/s\n2. fuzzdoug has some instructions. I wonder if others on this thread have had success manually and could share their experiences and trials?\n. ",
    "sebnash": ":+1: \n. :+1: \n. ",
    "znmeb": "I'm inches away from giving up on VMware Workstation. They aren't doing a very good job of tracking changes in the Linux kernel - every time the kernel changes, VMware Tools and Linux host modules stop compiling and you have to go hunting for patches. For a commercial product in the $75 - $119 range every year, this is unacceptable.\n. > I've heard that some users have manually created a Hyper-V vm using boot2docker - There is ongoing work to integrate Hyper-V support into the boot2docker-cli tool, but its not ready yet.\nAnything here on Github I can gawk at / fork / hack on? \n. ",
    "md5": "I just ran into the fact that shared folder performance under VirtualBox is absolutely abysmal and started playing around with VMWare Fusion last night. It looks like in order to get shared folder support, the boot2docker.iso image would need to have mount.vmhgfs installed.\nI started working on adding vmhgfs.ko and mount.vmhgfs here: https://github.com/md5/boot2docker/tree/vmware-shared-folders\nUnfortunately, the open-vm-tools build expects a different directory layout than it finds under /linux-kernel in the boot2docker build, so I don't have it working just yet. I should have more time to look into it Monday unless someone else beats me to it :)\n. Also, to get my VMWare Fusion VM working, I basically used Step 1 of @fuzzdoug's instructions, but I reused my existing vmdk file from my VirtualBox boot2docker-vm instead of creating one from scratch and didn't look into the Shipyard part. I was also able to change the boot order from the VMWare fusion GUI instead of doing it from the BIOS, though I think the right way to do it for a boot2docker scenario is to generate a .vmx file directly (Packer does this).\n. I spent a bit of time trying to get open-vm-tools to build for boot2docker today and didn't make much progress.\nI was able to patch configure.ac to fall back to $LINUXDIR\\include for the kernel includes when it doesn't find $LINUXDIR\\build\\include, but then I ran into the fact that open-vm-tools requires glib.\nI went a bit down the road of trying to add a --without-glib flag to configure, but I quickly ran into the fact glib is used all over the place and teasing it out is not straightforward.\n. I just came across this fork from @vmware adding open-vm-tools to boot2docker: https://github.com/vmware/boot2docker/compare/ovt\ncc @oliverkurth @SlimYang\n. Looks like they actually build it over in https://github.com/vmware/tcl-container/blob/master/build.sh\n. Thanks @oliverkurth \n. I just started randomly seeing lags during boot2docker shellinit in the last few days. As far as I can tell, it wasn't related to any particular software installation or anything like that. I confirmed that UseDNS no is still in effect.\nI was able to verify that this is hanging during an SSH call by setting a custom --ssh command that adds -vvv to the command line.\nDoes anyone know of any other reason I might have started randomly having this issue?\nconsole\n$ boot2docker version\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n. FYI, I can update the docs if you guys are amenable to the change. Not sure whether you'd consider having boot2docker.local working out of the box as being worth 2 megs.\n. It's probably possible to whip up something quite a bit lighter than Avahi using this library: https://github.com/armon/mdns\n. I made an attempt to make a simple mDNS daemon to announce boot2docker.local to the network, but it isn't working yet. Probably because I've never written any Go code...\nHere's the repo in case you're interested: https://github.com/md5/boot2docker-mdns\nIt currently hard codes the Docker port, and uses the os and net packages to get the hostname and IP address, but perhaps they should just be passed on the command line.\nAlso, I'm not sure that going this route will actually save any space over installing Avahi. The compiled binary is 6 megs (go 1.2.1), but I didn't check how much it affects the final image size since the code isn't working yet.\n. Rereading your comment, it looks like your idea was actually to run the mDNS functionality under the Docker daemon. That would actually make it quite easy to determine the port the Docker daemon is running on.\n. If my code were working, it would be the server side.\nAs for client/OS supports, all that is needed is mDNS/DNS-SD support in the OS, which is supported on all modern developer distributions that I'm aware of (Bonjour on OS X, Avahi on Linux, and LLMNR on Windows).\nAs for whether or not boot2docker.local would resolve throughout the network, it would not. Multicast responses from the boot2docker VM would only be visible on the VM network (i.e. from all VMs on that network and from the host OS). If there were multiple VMs on that network calling themselves \"boot2docker\", then they would conflict unless the server code were smart enough to pick an alternate name. I believe all the real mDNS/DNS-SD services that ship with OSs include this logic, but it would have to be coded into any solution used for boot2docker/docker (unless the boot2docker uses Avahi as in my original patch).\n. I'll also add that this sort of \"magic\" is very common for home network devices. On my network at home, I've got a DLink router, a Synology NAS, and an Epson printer, all of which come with instructions that tell the user to go to \"dlinkrouter.local\", \"DiskStation.local\", and \"printer.local\". Rasbian devices default to calling themselves \"rasberrypi.local\", etc.\n. Just to give an update on this issue, I've been watching the development of https://github.com/armon/mdns, but it hasn't really stabilized yet, unfortunately. I also discovered there is a Go library that predates armon/mdns, but I haven't had a chance to look into it: https://github.com/davecheney/mdns\nOn the plus side, I've been playing around with a combination of docker-gen, forego, and dns-sd to automatically register the VIRTUAL_HOST values of containers behind nginx-proxy.\nThis lets me do stuff like this:\n$ docker run -d -e VIRTUAL_HOST=my-test-service.local my-test-service\nAnd then go into my browser and hit \"my-test-service.local\" with no further manual steps.\n. I think I should be able to make that happen in the next couple days. I was waiting on fsouza/go-dockerclient#169 to get merged first before making a couple PRs myself, since my hacky setup requires a patched version of docker-gen with TLS support and a couple additional template functions.\n. I'm going to close this for now since I don't expect it to be merged in its current form.\n. I personally think a good way to solve this issue would be to introduce a volume driver that's able to provision new VMDK or VDI disks under VirtualBox and to steer users away from using host directories for their data mount.\nI started writing such a volume driver over at appropriate/docker-volumes-virtualbox, but it ended up being really tedious to interact with VirtualBox's SOAP-based vboxwebsrv. There are also questions of how the lifecycle of vboxwebsrv would be managed in a docker-machine/boot2docker setup without having the user have to start and manage the web service themselves. Another approach I'm considering is creating a storage driver for the REX-Ray volume driver instead of creating a standalone volume driver for VirtualBox. See here: https://github.com/emccode/rexray/issues/104\n. @leighmcculloch you might want to have a look at https://github.com/gansbrest/hodor\n. I noticed that this has --without-kernel-modules set. I was hoping to be able to use this branch to test out VMWare shared folders, which won't work without both vmhgfs.ko and mount.vmhgfs as I understand it.\nIs there a reason that the kernel modules aren't being built in this branch?\n. @oliverkurth glad to hear it wasn't due to some sort of blocker\n. The docs don't make it clear, but using -P publishes all exposed ports to random host ports. This is similar to what you'd get with -p 8080 (i.e. without an explicit host port of 8080).\n. > It's actually better as it supports shared folders (can't make them work with the current 64bit kernel/32bit userspace situation).\n:raised_hands: \n. > It's actually better as it supports shared folders (can't make them work with the current 64bit kernel/32bit userspace situation).\n:raised_hands: \n. :tada: \n. Is this a duplicate of #736?\n. I should read better next time... :eyeglasses: \n. Did you try pointing at a copy of your CA cert file with -tlscacert? The Mac OS X builds of Docker are cross-compiled, so they are not able to access local CA certificates in your system keychain. Not sure whether that's something you're doing, but I know it's a gotcha that users with corporate CAs encounter.\n. There are lots of issues and bug reports in the Docker ecosystem for this issue affecting various tools, but here's one I found: https://github.com/docker/docker/issues/3946\nI also recall a good discussion on one of the Docker Machine issue about possible workarounds.\n. Here it is: https://github.com/docker/machine/issues/491#issuecomment-76256467\n. The docker daemon in b2d is only set up to recognize a single CA certificate: https://github.com/boot2docker/boot2docker/blob/175488c34ff9c05c1307705c47a4d8a1282951b8/rootfs/rootfs/usr/local/etc/init.d/docker#L60\nIt doesn't look at /etc/ssl/certs.\n. You should be able to set CACERT to point to a PEM bundle that includes the GoDaddy root CA cert in /var/lib/boot2docker/profile.\n. Acutally... The instructions I just gave are for if you want to recognize a client certificate signed by a real CA. For the case of the docker client recognizing a server cert signed by a real CA, you need to do the same thing and pass the PEM bundle name to -tlscacert yourself.\n. You also might be able to just append the root CA to your ~/.boot2docker/certs/boot2docker-vm/ca.pem and not have to much with -tlscacert directly.\n. All I meant is that the default setup only recognizes the internally generated cert, not that it is only able to use that cert.\n. @Crazee See #1057\n. @rivaros Perhaps using Packer to create a custom ISO based on the boot2docker.iso would make sense in your case. See https://www.packer.io/docs/builders/virtualbox-iso.html and https://www.packer.io/docs/provisioners/ansible-local.html\n. I'm not a maintainer, so this isn't one of my releases, but I think I can answer your questions.\n\nWhat happens when you create a new virtualbox machine - it just creates a blank machine, connects iso to it as cd-drive, connects hdd, and starts. Is it right?\n\nThat's correct.\n\nSo boot2docker.iso contains everth including the guest additions ?\n\nYes. The ISO is created with this Dockerfile: https://github.com/boot2docker/boot2docker/blob/master/Dockerfile\nI suppose you could extend that Dockerfile in a derived image instead of using Packer. See this doc for information on building the ISO: https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\n\nAnd hard disk initially is just blank, or it still contains some configuration?\n\nThe hard disk is initially blank, but it gets set up as needed at boot time by this script: https://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/etc/rc.d/automount\n. In fact, this section should serve your well: https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md#making-your-own-customised-boot2docker-iso\n. > There really is zero need for Packer - the Boot2Docker Dockerfiles allow you to extend them using the standard Dockerfile way.\n@SvenDowideit Agreed. Not a great suggestion on my part.\n. Also, I think that would need to be FROM boot2docker/boot2docker.\nAnd if an automatic update is desired, it could be done with an automated build and a repository link on Docker Hub.\n. It appears that python.tcz requires openssl.tcz, but that package conflicts with the already installed openssl-1.0.0.tcz because they both try to supply /usr/local/lib/libssl.so.1.0.0.\nIt might be worth rebuilding the ISO with the openssl-1.0.0 on this line changed to openssl: https://github.com/boot2docker/boot2docker/blob/eb5571f185ef46ccbb14b74ce969eff0327f8dfd/Dockerfile#L68\n. I had a chance to test out replacing openssl-1.0.0 in the build with openssl and it looks like it works fine.\nHere's a list of executables that depend on libssl.so.1.0.0:\nconsole\n$ find 2>/dev/null / -xdev -perm -0111 -type f -print -exec ldd {} \\; | grep -e ^/ -e libssl | grep -B1 libssl\n/usr/local/bin/openssl\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007f0cc58af000)\n--\n/usr/local/bin/curl\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007f14d493c000)\n--\n/usr/local/lib/git-core/git-http-push\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007f4bc9211000)\n--\n/usr/local/lib/git-core/git-imap-send\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007f5a6b7a5000)\n/usr/local/lib/git-core/git-http-fetch\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007f5e944db000)\n--\n/usr/local/lib/git-core/git-remote-ftps\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007fe7900d3000)\n/usr/local/lib/git-core/git-remote-http\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007ff9fd9f7000)\n/usr/local/lib/git-core/git-remote-https\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007fa0b7aed000)\n/usr/local/lib/git-core/git-remote-ftp\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007f20f5c5e000)\n--\n/usr/local/lib/libcurl.so.4.3.0\n    libssl.so.1.0.0 => /usr/local/lib/libssl.so.1.0.0 (0x00007ff15a53c000)\n/usr/local/lib/libssl.so.1.0.0\nBased on that list, I tested curl with an HTTPS URL, git with an HTTPS remote, and openssl req to make sure they actually worked.\nI then ran @michbil's original command and it succeeded, finishing with this:\nSuccessfully built docker-compose docopt PyYAML texttable websocket-client docker-py dockerpty\nInstalling collected packages: docopt, PyYAML, requests, texttable, six, websocket-client, docker-py, dockerpty, docker-compose\nSuccessfully installed PyYAML-3.11 docker-compose-1.4.0 docker-py-1.3.1 dockerpty-0.3.4 docopt-0.6.2 requests-2.6.2 six-1.9.0 texttable-0.8.3 websocket-client-0.32.0\nI've opened https://github.com/boot2docker/boot2docker/pull/1056 with the change.\n. Also, I think that curl -f should be used for most of the curl commands in these Dockerfiles, but I didn't make that change in this PR.\n. I think it will work if you change the shebang to /bin/bash\n. D'oh!\n. ",
    "desrod": "Just a quick heads-up.. I wrote a very detailed blog post with some detail on how to get this working in VMware Fusion and ESXi, which corrects some of the incorrect information and detail in the earlier post above in this thread: \nhttp://blog.gnu-designs.com/howto-run-boot2docker-in-vmware-fusion-and-esxi-with-shipyard-to-manage-your-containers/\n. ",
    "andrerom": ":+1: vmware is a lot faster then virtualbox, and would take away a lot of the pain using docker on Mac (and windows, but hyper-v would also solve that)\nNote that support in Docker Machine is probably more important for the future, but it seems to reuse boot2docker so hence the +1 here.\n. ",
    "jgangemi": "@desrod perhaps i'm missing something but what did creating a vm from the boot2docker instance give you over just creating a vm from your linux flavor of choice and then just installing the binaries?\ni have a vmware image that serves as my docker host and i created it using the latter option. the one thing i don't get is being able to mount volumes from my mac into a container (although i think i could work around that using shared folders).\n. @desrod perhaps i'm missing something but what did creating a vm from the boot2docker instance give you over just creating a vm from your linux flavor of choice and then just installing the binaries?\ni have a vmware image that serves as my docker host and i created it using the latter option. the one thing i don't get is being able to mount volumes from my mac into a container (although i think i could work around that using shared folders).\n. i'm experiencing this issue which i think is related: https://github.com/docker/machine/issues/4479. are you saying that regenerating the certs successfully enables shared folders?. @koksin i don't know if what you referenced is the same problem unless some how regenerating the certs causes mounting of the volume to some how be successful.\nsad that there hasn't been any movement on this issue either way.. ",
    "bdemers": "I can confirm latest as of now 7960f9 works with VMware fusion.  I has issues getting hgfs working on the 1.6.2 working (but it looks like the official 1.7 build just dropped anyway)\n. ",
    "topac": "+1\n. +1\n. ",
    "danorton-cubic-austin": "VMSA-2015-0005\nVMware Workstation, Player and Horizon View Client for Windows updates address a host privilege escalation vulnerability\n- See more at: http://www.vmware.com/security/advisories/VMSA-2015-0005.html\n. ",
    "cwndrws": "this was a mistake on my part. sorry for the inconvenience.\n. ",
    "tingletech": "I'm seeing the same thing -- can't use aws s3 ... because it complains of clock skew...\ndate -u; boot2docker ssh date -u; boot2docker version; docker version\nFri Oct 17 16:36:07 UTC 2014\nFri Oct 17 03:37:44 UTC 2014\nBoot2Docker-cli version: v1.3.0\nGit commit: deafc19\nClient version: 1.2.0\nClient API version: 1.14\nGo version (client): go1.3.1\nGit commit (client): fa7b24f\nOS/Arch (client): darwin/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\nThis seems to be a workaround to use aws commands\nboot2docker ssh sudo date -u -D %Y%m%dT%T --set=\"$(date -u +%Y%m%dT%T)\"\n. I'm seeing the same thing -- can't use aws s3 ... because it complains of clock skew...\ndate -u; boot2docker ssh date -u; boot2docker version; docker version\nFri Oct 17 16:36:07 UTC 2014\nFri Oct 17 03:37:44 UTC 2014\nBoot2Docker-cli version: v1.3.0\nGit commit: deafc19\nClient version: 1.2.0\nClient API version: 1.14\nGo version (client): go1.3.1\nGit commit (client): fa7b24f\nOS/Arch (client): darwin/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\nThis seems to be a workaround to use aws commands\nboot2docker ssh sudo date -u -D %Y%m%dT%T --set=\"$(date -u +%Y%m%dT%T)\"\n. ",
    "chancefeick": "My docker container is a Rails 4.1 app using the aws-sdk gem. I ran into this error as well.\n@tingletech solution worked for me:\nboot2docker ssh sudo date -u -D %Y%m%dT%T --set=\"$(date -u +%Y%m%dT%T)\"\n. ",
    "rguldener": "Running 1.3.2 and this is definitely still an issue, had to manually adjust the clock three times today (skew appears to get worse/clock appears to be still when the physical device sleeps).\nVersions output:\n$ boot2docker version; docker version\nBoot2Docker-cli version: v1.3.2\nGit commit: e41a9ae\nClient version: 1.3.2\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): 39fa2fa\nOS/Arch (client): darwin/amd64\nServer version: 1.3.2\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): 39fa2fa\nRunning boot2docker on OS X 10.10\n. ",
    "treeder": "Probably a dupe of this: https://github.com/boot2docker/boot2docker/issues/290\nAnd https://github.com/boot2docker/boot2docker/pull/661 appears to be the fix. \n. ",
    "ghstridr": "OSX was nice enough to restore the previous terminal session that contained everything leading up to the lockup:\nbash\nunset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\nmkdir -p ~/.boot2docker\nif [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\n/usr/local/bin/boot2docker init \n/usr/local/bin/boot2docker up && export DOCKER_HOST=tcp://$(/usr/local/bin/boot2docker ip 2>/dev/null):2375\ndocker version\nLast login: Tue Jul 29 10:35:15 on ttys007\nls: /Users/michaelg/.ec2/pk-.pem: No such file or directory\nls: /Users/michaelg/.ec2/cert-.pem: No such file or directory\nmikeg-mbp:~ michaelg$ bash\nls: /Users/michaelg/.ec2/pk-.pem: No such file or directory\nls: /Users/michaelg/.ec2/cert-.pem: No such file or directory\nbash-3.2$ unset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\nbash-3.2$ mkdir -p ~/.boot2docker\nbash-3.2$ if [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\nbash-3.2$ /usr/local/bin/boot2docker init \nGenerating public/private rsa key pair.\nYour identification has been saved in /Users/michaelg/.ssh/id_boot2docker.\nYour public key has been saved in /Users/michaelg/.ssh/id_boot2docker.pub.\nThe key fingerprint is:\n2f:3f:07:5a:d1:da:c0:69:42:c7:ad:82:18:b1:f0:a0 michaelg@mikeg-mbp.local\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|  o ..   . .     |\n| . +..  . o .    |\n|E   oo o o +     |\n|    . . o B .    |\n|        S+ =     |\n|         .+ .    |\n|        .o..     |\n|        .o. .    |\n|          .o     |\n+-----------------+\n2014/08/06 12:10:20 Creating VM boot2docker-vm...\n2014/08/06 12:10:20 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)\n2014/08/06 12:10:21 Setting NIC #1 to use NAT network...\n2014/08/06 12:10:21 Port forwarding [ssh] tcp://127.0.0.1:2022 --> :22\n2014/08/06 12:10:21 Port forwarding [docker] tcp://127.0.0.1:2375 --> :2375\n2014/08/06 12:10:21 Setting NIC #2 to use host-only network \"vboxnet1\"...\n2014/08/06 12:10:21 Setting VM storage...\n2014/08/06 12:10:27 Done. Type /usr/local/bin/boot2docker up to start the VM.\nbash-3.2$ /usr/local/bin/boot2docker up && export DOCKER_HOST=tcp://$(/usr/local/bin/boot2docker ip 2>/dev/null):2375\n2014/08/06 12:10:28 Waiting for VM to be started...\n.....\n. Done. Seems to boot fine straight to a cmdline prompt. I looked at the\noutput of dmesg and that looked good. I can ping yahoo.com from within it.\nI can ssh docker@localhost -p2022 -i id_boot2docker and get in.\nI am using the java based Juniper vpn client. I can try the app from the\ndock again later after I'm done with work to see if it's that.\nOn Wed, Aug 6, 2014 at 4:26 PM, Sven Dowideit notifications@github.com\nwrote:\n\nwow.\nThe next thing to do for debugging, is to use the VirtualBox GUI to start\nthe vm - that way you can see what is happening at bootup.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/470#issuecomment-51411596\n.\n. \n",
    "lwhd42": "I have the same issue, trying docker 1.1.2 and 1.2.0 with already installed VirtualBox 4.3.14:\n\n2014/08/26 17:47:03 executing: D:\\tools\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/08/26 17:47:03 executing: D:\\tools\\VirtualBox\\VBoxManage.exe list hostonlyifs\nerror in run: Failed to initialize machine \"boot2docker-vm\": strconv.ParseUint: parsing \"128\": value out of range\n\nVBoxManage.exe list hostonlyifs\n\nName:            VirtualBox Host-Only Ethernet Adapter\nGUID:            f937d130-e93e-434e-8a7a-b9b31f19b81d\nDHCP:            Disabled\nIPAddress:       192.168.56.1\nNetworkMask:     255.255.255.0\nIPV6Address:     fe80:0000:0000:0000:c51e:b1e9:9645:a252\nIPV6NetworkMaskPrefixLength: 128\nHardwareAddress: 08:00:27:00:5c:20\nMediumType:      Ethernet\nStatus:          Up\nVBoxNetworkName: HostInterfaceNetworking-VirtualBox Host-Only Ethernet Adapter\n\nIs \"IPV6NetworkMaskPrefixLength: 128\" the culprit? The VirtualBox GUI does not show any value:\n\nThese are the Windows interface settings:\n\nEthernet adapter VirtualBox Host-Only Network:\n   Connection-specific DNS Suffix  . :\n   Description . . . . . . . . . . . : VirtualBox Host-Only Ethernet Adapter\n   Physical Address. . . . . . . . . : 08-00-27-00-5C-20\n   DHCP Enabled. . . . . . . . . . . : No\n   Autoconfiguration Enabled . . . . : Yes\n   Link-local IPv6 Address . . . . . : fe80::c51e:b1e9:9645:a252%21(Preferred)\n   IPv4 Address. . . . . . . . . . . : 192.168.56.1(Preferred)\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . :\n   DHCPv6 IAID . . . . . . . . . . . : 352845863\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-1B-73-EB-23-00-0C-29-CF-57-7D\n   DNS Servers . . . . . . . . . . . : fec0:0:0:ffff::1%1\n                                       fec0:0:0:ffff::2%1\n                                       fec0:0:0:ffff::3%1\n   NetBIOS over Tcpip. . . . . . . . : Enabled\n\nI also downgraded to VirtualBox 4.3.12, but it did not help.\n. As the error message tells us the problem obviously is that a value of 128 does not fit into a 7 bit integer...\n\ncase \"IPV6NetworkMaskPrefixLength\":\n        l, err := strconv.ParseUint(val, 10, 7)\n        if err != nil {\n            return nil, err\n        }\n        n.IPv6.Mask = net.CIDRMask(int(l), net.IPv6len*8)\n. Obviously I messed up the downgrade. Now I did a full deinstall-reboot-reinstall cycle and voila, now I see IPV6NetworkMaskPrefixLength: 64\nVBoxManage.exe list hostonlyifs\nName:            VirtualBox Host-Only Ethernet Adapter\nGUID:            21fe41e0-a849-426b-b8e5-d1fbf70386db\nDHCP:            Disabled\nIPAddress:       192.168.56.1\nNetworkMask:     255.255.255.0\nIPV6Address:     fe80:0000:0000:0000:c9ba:6480:89d3:5aa9\nIPV6NetworkMaskPrefixLength: 64\nHardwareAddress: 08:00:27:00:e0:ae\nMediumType:      Ethernet\nStatus:          Up\nVBoxNetworkName: HostInterfaceNetworking-VirtualBox Host-Only Ethernet Adapter\n\nAnd now VM creation works...\n. ",
    "geggo98": "I had the same problem. Disabling IPv6 for the Virtual PC Network \"VirtuakBox Host-Only Network\" fixed the problem for me.\nSteps:\n1. Open Control Panel\\Network and Internet\\Network Connections\n2. Right click on \"VirtualBox Host-Only Network\"\n3. Select \"Properties\"\n4. A Dialog Box \"VirtualBox Host-Only Network Properties\" opens\n5. On the tab \"Networking\" disable the item \"Internet Protocol Version 6 (TCP/IPv6)\n6. Make sure that the item \"TCP/IPv4\" is still selected. The Bos should look like this:\n   \n7. Click \"OK\"\n8. Open VirtualBox and delete \"boot2docker-vm\". Select \"Yes\" when asked if all files should be deleted\n. ",
    "gmacario": "Isn't this bug same as https://github.com/boot2docker/boot2docker-cli/issues/347 ?\nIf so, this has been fixed by https://github.com/boot2docker/boot2docker-cli/commit/941c70cb0137acccd36c2f8ef9426a12ddc58ef0\n. ",
    "igorgatis": "As of 2018, what's the proper way of sharing docker volumes using samba in boot2docker?. ",
    "ARF1": "Is there any movement on this? Is it possible to set a timezone on a Windows boot2docker vm?. ",
    "dxmann73": "I guess this only applies to Windows 7 / Docker Toolkit anymore. Anyway, here is how I changed the timezone on my Windows 7 docker machine:\nYou need to add some permanent settings to the docker machine as  per the boot2docker FAQ\n- create /var/lib/boot2docker/bootlocal.sh in the docker machine (to get a shell, hit VirtualBox -> \"Show\" on the virtual machine)\n- give exec flag chmod u+x bootlocal.sh\nAs described in the Tiny Core Linux forum and the Wiki\n```\ncd /var/lib/boot2docker\ntce-fetch.sh tzdata.tcz\nmkdir ext\nsudo mount tzdata.tcz ext -t squashfs -o loop,ro,bs=4096\nI needed Europe/Berlin; find your timezone by scanning the ./ext directory\ncp ext/usr/local/share/zoneinfo/Europe/Berlin ./Europe-Berlin.tz\numount ext\nrm -rf ext tzdata.tcz\nThe fileEurope-Berlin.tz``` should now survive restarts of the docker machine; verify this.\nFinally, copy the timezone file when starting up docker-machine by adding the following to the bootlocal.sh script\n```\n!/bin/sh\ncp /var/lib/boot2docker/Europe-Berlin.tz /etc/localtime\n```\nYou should see the correct time now when you enter date. ",
    "michelcve": "With the 17,9 branch this no longer works, as the squashfs kernel module is missing.\nThe kernel option CONFIG_SQUASHFS=m is no longer set in 17.9 :-(\nShould we do this differently in 17.9, or is this a 'bug' and should the squashfs module be brought back?. ",
    "jbuedel": "I am having the same issue.  The results below include print out of init and run.\n~\\Projects\\Olympus [master]>boot2docker.exe start\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\n~\\Projects\\Olympus [master]>boot2docker.exe start -v\nUsing virtualbox driver\n2014/09/11 09:44:56 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/09/11 09:44:57 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVBoxManage.exe: error: VT-x is disabled in the BIOS. (VERR_VMX_MSR_VMXON_DISABLED)\nVBoxManage.exe: error: Details: code E_FAIL (0x80004005), component Console, interface IConsole\n2014/09/11 09:44:58 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\n~\\Projects\\Olympus [master]>boot2docker.exe -v init\nUsing virtualbox driver\n2014/09/11 09:46:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\nVirtual machine boot2docker-vm already exists\n~\\Projects\\Olympus [master]>boot2docker.exe -v run\nUsing virtualbox driver\nerror in run: Unknown command: run\nUsage: C:\\Program Files\\Boot2Docker for Windows\\boot2docker.exe [<options>] {help|init|up|ssh|save|down|poweroff|reset|restart|config|status|info|ip|socket|shellinit|delete|destroy|download|version} [<args>]\n~\\Projects\\Olympus [master]>\n. ",
    "f-lopes": "Same issues for me (v1.2.0), but VT-x was already in use.\nDisabling \"Active Virus Control\" in BitDefender 2015 fixed the problem.\n. Hi,\nAs the message says, is VT-x  enabled in your BIOS ?\n. You're welcome.\n. You're welcome.\n. ",
    "eschiebel": "I'm sorry, I should have been more clear. I thought the answer was yes, but in going back to my BIOS config to double check and copy down exactly what my settings were, I discovered that I had done something wrong, and the virtualization technology settings were in-fact disabled. I enabled, power cycled, and the VM seems to be booting without issue as we speak. I feel like a bit of the fool. Thanks for the help.\n. ",
    "davidmam": "I click on the 'boot2docker  start' Program option and get a dos box titled Boot2Docker Start but which repeats the same git message over and over again.\n'run git help git to display the help index.'\n. ",
    "ianchanning": "I actually have a similar problem with VT-x not being enabled but for me the error message was even more buried.\nFirstly the default start command gives a simple exit status 1:\nC:\\Program Files\\Boot2Docker for Windows>boot2docker start\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\nIt would be useful if this recommended running boot2docker -v start as this is non-obvious.\nThen secondly for me even running with -v I don't get any errors about VT-x:\nC:\\Program Files\\Boot2Docker for Windows>boot2docker -v start\nBoot2Docker-cli version: v1.6.0\nGit commit: 9894ae9\n2015/05/06 10:35:04 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/05/06 10:35:05 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2015/05/06 10:35:05 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2015/05/06 10:35:05 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe sharedfolder add boot2docker-vm --name c/Users --hostpath C:\\Users --automount\nVBoxManage.exe: error: Shared folder named 'c/Users' already exists\nVBoxManage.exe: error: Details: code VBOX_E_OBJECT_IN_USE (0x80bb000c), component SessionMachine, interface IMachine, callee IUnknown\nVBoxManage.exe: error: Context: \"CreateSharedFolder(Bstr(name).raw(), Bstr(hostpath).raw(), fWritable, fAutoMount)\" at line 1008 of file VBoxManageMisc.cpp\n2015/05/06 10:35:05 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/c/Users 1\n2015/05/06 10:35:05 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\nIt's only when I go and check in C:\\Users\\ian\\VirtualBox VMs\\boot2docker-vm\\Logs\\VBox.log that I find the VT-x error:\n```\nVirtualBox VM 4.3.26 r98988 win.amd64 (Mar 16 2015 17:35:35) release log\n00:00:00.081271 Log opened 2015-05-06T08:48:02.115086800Z\n00:00:00.081272 Build Type: release\n00:00:00.081274 OS Product: Windows 7\n00:00:00.081275 OS Release: 6.1.7601\n00:00:00.081275 OS Service Pack: 1\n00:00:00.110831 DMI Product Name: To be filled by O.E.M.\n00:00:00.112873 DMI Product Version: To be filled by O.E.M.\n00:00:00.112876 Host RAM: 8153MB total, 5431MB available\n00:00:00.112877 Executable: C:\\Program Files\\Oracle\\VirtualBox\\VBoxHeadless.exe\n00:00:00.112878 Process ID: 5472\n00:00:00.112878 Package type: WINDOWS_64BITS_GENERIC\n00:00:00.116492 Installed Extension Packs:\n00:00:00.116508   None installed!\n00:00:00.165567 SUP: Loaded VMMR0.r0 (C:\\Program Files\\Oracle\\VirtualBox\\VMMR0.r0) at 0xfffff8800b403000 - ModuleInit at fffff8800b422770 and ModuleTerm at fffff8800b422a80 using the native ring-0 loader\n00:00:00.165592 SUP: VMMR0EntryEx located at fffff8800b423cb0, VMMR0EntryFast at fffff8800b422e00 and VMMR0EntryInt at fffff8800b422df0\n00:00:00.165596 SUP: windbg> .reload /f C:\\Program Files\\Oracle\\VirtualBox\\VMMR0.r0=0xfffff8800b403000\n00:00:00.168993 Guest OS type: 'Linux26_64'\n00:00:00.172592 WARNING! 64-bit guest type selected but the host CPU does NOT support HW virtualization.\n00:00:00.172614 fHMForced=true - SMP\n...\n00:00:00.361270 *** End of CFGM dump ***\n00:00:00.361276 VM: fHMEnabled=true  (configured) fRecompileUser=false fRecompileSupervisor=false\n00:00:00.361277 VM: fRawRing1Enabled=false CSAM=true  PATM=true \n00:00:00.361499 VMSetError: F:\\tinderbox\\win-4.3\\src\\VBox\\VMM\\VMMR3\\HM.cpp(532) int __cdecl HMR3Init(struct VM ); rc=VERR_VMX_MSR_VMXON_DISABLED\n00:00:00.361515 VMSetError: VT-x is disabled in the BIOS.\n00:00:00.638071 ERROR [COM]: aRC=E_FAIL (0x80004005) aIID={8ab7c520-2442-4b66-8d74-4ff1e195d2b6} aComponent={Console} aText={VT-x is disabled in the BIOS. (VERR_VMX_MSR_VMXON_DISABLED)}, preserve=false\n00:00:00.647200 Power up failed (vrc=VERR_VMX_MSR_VMXON_DISABLED, rc=E_FAIL (0X80004005))\n```\n. ",
    "alexandrerocco": "@ianchanning thanks for the heads up. in fact, checking the -v information did not helped a lot. when checking virtualbox log, i got the \"vt-x disabled\" message.\n. @ianchanning thanks for the heads up. in fact, checking the -v information did not helped a lot. when checking virtualbox log, i got the \"vt-x disabled\" message.\n. ",
    "yeasy": "Also meet  this error.\nC:\\windows\\system32>boot2docker -v init\nBoot2Docker-cli version: v1.6.2\nGit commit: cb2c3bc\n2015/06/04 14:19:21 executing: D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereada\nble\n2015/06/04 14:19:21 executing: D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereada\nble\n2015/06/04 14:19:21 executing: D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.exe list vms\nerror in run: Failed to initialize machine \"boot2docker-vm\": exec: \"D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.\nexe\": file does not exist\n. Also meet  this error.\nC:\\windows\\system32>boot2docker -v init\nBoot2Docker-cli version: v1.6.2\nGit commit: cb2c3bc\n2015/06/04 14:19:21 executing: D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereada\nble\n2015/06/04 14:19:21 executing: D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereada\nble\n2015/06/04 14:19:21 executing: D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.exe list vms\nerror in run: Failed to initialize machine \"boot2docker-vm\": exec: \"D:\\Program Files\\Oracle\\VirtualBox\\;D:\\Program Files\\Oracle VM VirtualBox\\VBoxManage.\nexe\": file does not exist\n. ",
    "qxo": "I thought we should remove waitusb=10 on boot entry and loop check :)\nOn boot2docker 1.2 the issue still exists\n2014-08-14 15:29 GMT+08:00 Sven Dowideit notifications@github.com:\n\n@qxo https://github.com/qxo does that mean we can remove the waitusb=10\nthat we added in 1.1.0?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/480#issuecomment-52152016\n.\n. sorrry for the mistake ,I should using branch for pull a request,the new\npull request is #607\n\n2014-10-23 7:59 GMT+08:00 Sven Dowideit notifications@github.com:\n\n\u221e !\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/480#issuecomment-60174679\n.\n. It's fine to merge.\n\nMy PR work base on https://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md#making-your-own-customised-boot2docker-iso \n. 36\n ---> fd587acf4990\nRemoving intermediate container 608788ae69e6\nStep 37 : RUN echo 37\n ---> Running in 76b481ba194d\nexec: \"/bin/sh\": stat /bin/sh: no such file or directory2014/09/11 13:36:54 exec: \"/bin/sh\": stat /bin/sh: no such file or directory\nI know how  reproduce the issue:\n  format  entire disk, not just one partition(eg: mkfs.ext4 -L boot2docker-data /dev/sdX\" )\n  will cause the issue:can not build or run over 42 layer image\nand if run docker  on the disk but other dir (not /mnt/sdX/var/lib/docker) work fine\n. It's my mistake\n. It's my mistake\n. Or we can do some tricky code, eg: cp /var/lib/boot2docker/bootsync.sh  to /tmp before run, then we can mount and fsck disk ,remount ...\n. Yes,It's cannot reproduce on 18.09\nI'm tested on 18.06 and before version. Yes,It's cannot reproduce on 18.09\nI'm tested on 18.06 and before version. yes,it solve the mount issue,but I don't know the reason.\n. ok. ",
    "srid": "Yup it's the developer preview build.\nI was wondering if the logging can be made verbose so as to directly see the source of the problem.\n. nothing to do with OS X, beta or not. \naccessing the failing URL https://api.github.com/repos/boot2docker/boot2docker/releases in my browser, i see:\n{\n  \"message\": \"API rate limit exceeded for [IP ADDR SNIPPED]. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\n  \"documentation_url\": \"https://developer.github.com/v3/#rate-limiting\"\n}\n. ",
    "rtoma": "Same issue here.\nDownloading boot2docker ISO image...\nerror in run: Failed to get latest release: Error getting releases: API rate limit exceeded for X.X.X.X.\n(But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation\n for more details.)\n see\nClient version: v1.2.0\nGit commit: a551732\nMy workaround:\n- cd ~/.boot2docker ; wget https://github.com/boot2docker/boot2docker/releases/download/v1.2.0/boot2docker.iso\n- boot2docker init\nvoila.\n. +1 for the API token mechanism like Homebrew has implemented.\n. ",
    "jbayer": "confirmed work-around for this same issue in boot2docker 1.4.1 is:\n$ boot2docker --iso-url=https://github.com/boot2docker/boot2docker/releases/download/v1.4.1/boot2docker.iso download\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.4.1/boot2docker.iso\n    to /Users/jamesbayer/.boot2docker/boot2docker.iso\n$ boot2docker init\n$ boot2docker start\n. ",
    "silarsis": "@SvenDowideit we just hit the same problem - because we're running in a large organisation behind NAT, the github API almost always gives errors due to arbitrary other people behind the NAT hitting it.\nEither not using the API, or falling back to some other method cleanly in case of this error, would be really useful. Alternately, print out some instructions if this happens so people at least know what to do.\nOr yeah, host the iso somewhere that's not github ;)\n. ",
    "cuttlefish": "homebrew supports setting your own API token via environment variable. That would work without changing the discovery mechanism.\n. ",
    "mclate": "Sweet. Thank you. I'll give it a try\n. From my experience i can say that docker in vagrant can work. We were using it as development environment in one of our projects. There were some issues with changing IP address, but no issues with file access. On my linux box, however, vagrant had different issues with startup that didn't appear on mac instance.\n. you can connect via ssh to vargant box and work as you'd work from your own console. And you can share your local folder into vargant box, and from there you simply do docker run -d <folder in vm>:<folder in container> nd you have your local folder proxied in container.\n. um... rsync? what i was talking about (in previous comment as well as in topic) is virtualbox shared folders, which works in both directions. There is no rsync involved.\nAnd for developers - don't see any issue. If they need to run commands to do something with docker container - they should be able to use console. And there is no big deal to wrap these commands in ssh and execute it in container (being invoked as simple command from local console)\n. Probably. Can't say. Our project was no bigger than 200 py/js/html files. And it was working fine. It's a pity if it doesn't work with more files.\n. ",
    "rredpoppy": "So there is actually no good solution to this? I just wasted 3 days configuring a container? Good Lord, you should put that in bold everywhere..\n. I can confirm the issue with shared folders, on both windows host and osx host. this seems to be a tough nut to crack for all virtual machine engines. solution: use linux everywhere :)\n. ",
    "hems": "all good ( :\n:+1: \n. ",
    "activars": "I can confirm using docker --tls run works for me. \n. I suspect the issue is caused by docker client and boot2docker image version mismatch. After I reinstalled boot2docker using pkg, the issue has been resolved.\n. Glad it helped. I think the resolution for this problem should be docket\nclient advise users about version miss-match, at lease printing warnings.\nOn 21 Nov 2014, at 20:43, Peter Mooshammer notifications@github.com wrote:\n@activars https://github.com/activars - same here works as advertised\nnow!!!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/500#issuecomment-64034672\n.\n. Glad it helped. I think the resolution for this problem should be docket\nclient advise users about version miss-match, at lease printing warnings.\nOn 21 Nov 2014, at 20:43, Peter Mooshammer notifications@github.com wrote:\n@activars https://github.com/activars - same here works as advertised\nnow!!!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/500#issuecomment-64034672\n.\n. ",
    "mrjackdavis": "@activars I took your advice. Using homebrew on mac I updated both docker and boot2docker. From 1.2.0 to 1.3.1. \nFixed it =D\n. ",
    "pmoosh": "@activars - same here works as advertised now!!!\n. ",
    "misfo": "Woops, opened the issue in the CLI project instead: boot2docker/boot2docker-cli#237\n. ",
    "Murf": "Nicely not answered\n. ",
    "hourback": "Excellent!  Thank you very much, Sven.\n. Thanks, @tianon and @SvenDowideit .  I was unable to replicate this issue.  (I was just starting out with Docker and changing my environment very quickly.)  I think the problem was indeed running Docker-in-Docker (if that's what you were suggesting was the problem), which people on the Discourse forum convinced me was a horrible idea.  :-) \n. ",
    "bscott": "Fixed, had to enter the tcuser password 4 times. \n. ",
    "kmetsalu": "OK found that it could be easier by using.\n``\nsudo kill -TERMpidof docker`\nsudo ip link delete docker0\nsudo /usr/local/bin/docker -d -D -g /var/lib/docker -bip=192.168.10.1/24 -H unix:// -H tcp://0.0.0.0:2375\n```\nHow can i add this to boot2docker init script?\n. OK found that it could be easier by using.\n``\nsudo kill -TERMpidof docker`\nsudo ip link delete docker0\nsudo /usr/local/bin/docker -d -D -g /var/lib/docker -bip=192.168.10.1/24 -H unix:// -H tcp://0.0.0.0:2375\n```\nHow can i add this to boot2docker init script?\n. ",
    "farvour": "There is a profile configuration that consumes additional command line settings from $EXTRA_ARGS into the docker command on boot. These are passed along to the docker command.\necho EXTRA_ARGS=\"--bip=172.19.42.1/16\" >> /var/lib/boot2docker/profile\nThen restart your boot2docker instance with boot2docker stop && boot2docker start.\nThere are other configurations that can be passed along as well,\nSee: https://docs.docker.com/articles/networking/\nI'm not sure if a pull request is needed in the edge cases where your network configuration conflicts with what the docker developers chose as the defaults, if they can be changed in this file.\n. There is a profile configuration that consumes additional command line settings from $EXTRA_ARGS into the docker command on boot. These are passed along to the docker command.\necho EXTRA_ARGS=\"--bip=172.19.42.1/16\" >> /var/lib/boot2docker/profile\nThen restart your boot2docker instance with boot2docker stop && boot2docker start.\nThere are other configurations that can be passed along as well,\nSee: https://docs.docker.com/articles/networking/\nI'm not sure if a pull request is needed in the edge cases where your network configuration conflicts with what the docker developers chose as the defaults, if they can be changed in this file.\n. ",
    "sjackman": "Everything was installed using Homebrew.\nsh\nbrew cask install virtualbox\nbrew install docker boot2docker\nUsing the boot2docker cask works as expected\nsh\n\u276f\u276f\u276f brew cask install boot2docker\n\u276f\u276f\u276f open -a boot2docker\n\u276f\u276f\u276f ls -l ~/.ssh/id_boot2docker*\n-rw-------  1 sjackman  assembly  1675 28 Aug 12:19 /home/sjackman/.ssh/id_boot2docker\n-rw-r--r--  1 sjackman  assembly   418 28 Aug 12:19 /home/sjackman/.ssh/id_boot2docker.pub\n. \u279c  ~  boot2docker version\nClient version: v1.2.0\nGit commit: 22b11f1\n\u279c  ~  boot2docker -v init\nUsing virtualbox driver\n2014/08/29 10:12:57 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/29 10:12:57 executing: VBoxManage list vms\n2014/08/29 10:12:57 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 0e96df03-d151-413a-be8f-569b83dd654a\nSettings file: '/Users/sjackman/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2014/08/29 10:12:57 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/29 10:12:57 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/08/29 10:12:57 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 4 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/sjackman/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2014/08/29 10:12:57 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/29 10:12:57 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/08/29 10:12:57 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/08/29 10:12:57 executing: VBoxManage list hostonlyifs\n2014/08/29 10:12:57 executing: VBoxManage list dhcpservers\n2014/08/29 10:12:57 executing: VBoxManage modifyvm boot2docker-vm --nic2 hostonly --nictype2 virtio --cableconnected2 on --hostonlyadapter2 vboxnet0\n2014/08/29 10:12:57 executing: VBoxManage storagectl boot2docker-vm --name SATA --add sata --hostiocache on --bootable on\n2014/08/29 10:12:57 executing: VBoxManage storageattach boot2docker-vm --storagectl SATA --port 0 --device 0 --type dvddrive --medium /Users/sjackman/.boot2docker/boot2docker.iso\nVBoxManage: error: Could not find file for the medium '/Users/sjackman/.boot2docker/boot2docker.iso' (VERR_FILE_NOT_FOUND)\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Medium, interface IMedium, callee nsISupports\nVBoxManage: error: Context: \"OpenMedium(Bstr(pszFilenameOrUuid).raw(), enmDevType, enmAccessMode, fForceNewUuidOnOpen, pMedium.asOutParam())\" at line 178 of file VBoxManageDisk.cpp\nVBoxManage: error: Invalid UUID or filename \"/Users/sjackman/.boot2docker/boot2docker.iso\"\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n\u279c  ~  boot2docker download\nDownloading boot2docker ISO image...\nLatest release is v1.2.0\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.2.0/boot2docker.iso\n    to /Users/sjackman/.boot2docker/boot2docker.iso\n\u279c  ~  boot2docker -v init\nUsing virtualbox driver\n2014/08/29 10:17:38 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n\u279c  ~  ls ~/.ssh/id_boot2docker*\nzsh: no matches found: /Users/sjackman/.ssh/id_boot2docker*\n. \u279c  ~  boot2docker version\nClient version: v1.2.0\nGit commit: 22b11f1\n\u279c  ~  boot2docker -v init\nUsing virtualbox driver\n2014/08/29 10:12:57 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/29 10:12:57 executing: VBoxManage list vms\n2014/08/29 10:12:57 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 0e96df03-d151-413a-be8f-569b83dd654a\nSettings file: '/Users/sjackman/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2014/08/29 10:12:57 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/29 10:12:57 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/08/29 10:12:57 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 4 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/sjackman/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2014/08/29 10:12:57 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/29 10:12:57 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/08/29 10:12:57 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/08/29 10:12:57 executing: VBoxManage list hostonlyifs\n2014/08/29 10:12:57 executing: VBoxManage list dhcpservers\n2014/08/29 10:12:57 executing: VBoxManage modifyvm boot2docker-vm --nic2 hostonly --nictype2 virtio --cableconnected2 on --hostonlyadapter2 vboxnet0\n2014/08/29 10:12:57 executing: VBoxManage storagectl boot2docker-vm --name SATA --add sata --hostiocache on --bootable on\n2014/08/29 10:12:57 executing: VBoxManage storageattach boot2docker-vm --storagectl SATA --port 0 --device 0 --type dvddrive --medium /Users/sjackman/.boot2docker/boot2docker.iso\nVBoxManage: error: Could not find file for the medium '/Users/sjackman/.boot2docker/boot2docker.iso' (VERR_FILE_NOT_FOUND)\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Medium, interface IMedium, callee nsISupports\nVBoxManage: error: Context: \"OpenMedium(Bstr(pszFilenameOrUuid).raw(), enmDevType, enmAccessMode, fForceNewUuidOnOpen, pMedium.asOutParam())\" at line 178 of file VBoxManageDisk.cpp\nVBoxManage: error: Invalid UUID or filename \"/Users/sjackman/.boot2docker/boot2docker.iso\"\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n\u279c  ~  boot2docker download\nDownloading boot2docker ISO image...\nLatest release is v1.2.0\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.2.0/boot2docker.iso\n    to /Users/sjackman/.boot2docker/boot2docker.iso\n\u279c  ~  boot2docker -v init\nUsing virtualbox driver\n2014/08/29 10:17:38 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n\u279c  ~  ls ~/.ssh/id_boot2docker*\nzsh: no matches found: /Users/sjackman/.ssh/id_boot2docker*\n. Okay. Thanks for the fix. I've opened an issue on Homebrew/homebrew#32029.\n. ",
    "BerkeleyTrue": "Same issue here. Same versions as above, except I installed VirtualBox using an installer\nUsing virtualbox driver\n2014/08/28 17:47:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/28 17:47:33 executing: VBoxManage list vms\n2014/08/28 17:47:33 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: ab84b221-a8cf-4219-bf9b-af0f23595576\nSettings file: '/Users/berkeley/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2014/08/28 17:47:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/28 17:47:33 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/08/28 17:47:33 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/berkeley/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2014/08/28 17:47:34 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/08/28 17:47:34 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/08/28 17:47:34 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/08/28 17:47:34 executing: VBoxManage list hostonlyifs\n2014/08/28 17:47:34 executing: VBoxManage list dhcpservers\n2014/08/28 17:47:34 executing: VBoxManage modifyvm boot2docker-vm --nic2 hostonly --nictype2 virtio --cableconnected2 on --hostonlyadapter2 vboxnet0\n2014/08/28 17:47:34 executing: VBoxManage storagectl boot2docker-vm --name SATA --add sata --hostiocache on --bootable on\n2014/08/28 17:47:34 executing: VBoxManage storageattach boot2docker-vm --storagectl SATA --port 0 --device 0 --type dvddrive --medium /Users/berkeley/.boot2docker/boot2docker.iso\nerror in run: Failed to initialize machine \"boot2docker-vm\": open /Users/berkeley/.ssh/id_boot2docker.pub: no such file or directory\n. Those 2 keys did not exist and it would not create them no matter how many times I restarted. Got it to work by created my own keys. Up and running.\n$ ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key : ~/.ssh/id_boot2docker\nMore details instruction here: https://help.github.com/articles/generating-ssh-keys\n. $ boot2docker version\nClient version: v1.2.0\nGit commit: 22b11f1\nInstalled thru brew. I don't have that data anymore. Output was similar to above. It could not find the keys but never bothered to create the keys.\nDon't know if this has anything to do with it, but I also had to boot2docker download to get the iso as init method gave an error that it could not find it and did not try to download it. \n. $ boot2docker version\nClient version: v1.2.0\nGit commit: 22b11f1\nInstalled thru brew. I don't have that data anymore. Output was similar to above. It could not find the keys but never bothered to create the keys.\nDon't know if this has anything to do with it, but I also had to boot2docker download to get the iso as init method gave an error that it could not find it and did not try to download it. \n. ",
    "thoughtcroft": "I had the same issue.  brew cask install boot2docker resolved it\n. I had the same issue.  brew cask install boot2docker resolved it\n. ",
    "GrantGochnauer": "+1\n. ",
    "pheuter": "+1\n. I've created a startup script for my team that takes care of automatically resizing and attaching a new HDD to the image, might be of use?\nsh\n$ VBoxManage clonehd $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vmdk $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vdi --format VDI --variant Standard\n$ VBoxManage modifyhd $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vdi --resize $BOOT2DOCKER_IMAGE_SIZE\n$ VBoxManage storageattach boot2docker-vm --storagectl \"SATA\" --device 0 --port 1 --type hdd --medium $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vdi\nwhere BOOT2DOCKER_IMAGE_SIZE is the size in MBs.\n. I've created a startup script for my team that takes care of automatically resizing and attaching a new HDD to the image, might be of use?\nsh\n$ VBoxManage clonehd $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vmdk $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vdi --format VDI --variant Standard\n$ VBoxManage modifyhd $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vdi --resize $BOOT2DOCKER_IMAGE_SIZE\n$ VBoxManage storageattach boot2docker-vm --storagectl \"SATA\" --device 0 --port 1 --type hdd --medium $HOME/VirtualBox\\ VMs/boot2docker-vm/boot2docker-vm.vdi\nwhere BOOT2DOCKER_IMAGE_SIZE is the size in MBs.\n. Note: this is done before the initial startup of the image\n. Note: this is done before the initial startup of the image\n. ",
    "yvess": "another use case is if you want to shrink you image, this also needs a VDI image\n. I make a new disk image and clone it clonezilla and than delete the old image. Really fast!\n. ",
    "astubbs": "+1\nanother help might be able to query for a disk size on install..\n. Just start from from scratch and set the default size in your config. I don't think it's worth doing the resize. \n\nOn 21/10/2014, at 9:25 pm, Nicolas Modrzyk notifications@github.com wrote:\n+1, as I am resizing manually right now, and it's not so fun.\n\u2014\nReply to this email directly or view it on GitHub.\n. Right. But the second time I ran out of space, I just deleted to vm (boot2docker delete), set the default size, and boot2docker init. \nYou just have to redownload all your images. \nImo, we should try mounting a dir from OS X into the vm, and use that for image storage, so we don't even have that problem. It at least make it an option. \nOn 22/10/2014, at 9:28 am, Mark Fayngersh notifications@github.com wrote:\nNote: this is done before the initial startup of the image\n\u2014\nReply to this email directly or view it on GitHub.\n. Right. But the second time I ran out of space, I just deleted to vm (boot2docker delete), set the default size, and boot2docker init. \nYou just have to redownload all your images. \nImo, we should try mounting a dir from OS X into the vm, and use that for image storage, so we don't even have that problem. It at least make it an option. \nOn 22/10/2014, at 9:28 am, Mark Fayngersh notifications@github.com wrote:\nNote: this is done before the initial startup of the image\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah yes, good point. \n\nWould like to hear ain't examples or ideas of \"might do some quite elaborate things with the filesystem.\"?\n\nOn 22/10/2014, at 10:07 am, Kenneth Falck notifications@github.com wrote:\nIf you run a database or a samba server in your Docker containers, it's not \"just redownload all your images\". You have to preserve the data somehow. That's why resizing the disk is necessary.\nMounting a data disk from OS X would be nice, but likely quite problematic for said use case of running databases, which might do some quite elaborate things with the filesystem.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah yes, good point. \n\nWould like to hear ain't examples or ideas of \"might do some quite elaborate things with the filesystem.\"?\n\nOn 22/10/2014, at 10:07 am, Kenneth Falck notifications@github.com wrote:\nIf you run a database or a samba server in your Docker containers, it's not \"just redownload all your images\". You have to preserve the data somehow. That's why resizing the disk is necessary.\nMounting a data disk from OS X would be nice, but likely quite problematic for said use case of running databases, which might do some quite elaborate things with the filesystem.\n\u2014\nReply to this email directly or view it on GitHub.\n. How about just storing images/image cache from repos on the mapped drive from host host? Leave container storage as is. I don't know if that's possible with the architecture though. \nOn 22/10/2014, at 10:27 am, Kenneth Falck notifications@github.com wrote:\nAll databases do locking, which might go badly through a VirtualBox share. MongoDB also does huge mmap()s on the data files. If they actually all work just fine, I'm happy to be proven wrong about this. :-)\n\u2014\nReply to this email directly or view it on GitHub.\n. How about just storing images/image cache from repos on the mapped drive from host host? Leave container storage as is. I don't know if that's possible with the architecture though. \nOn 22/10/2014, at 10:27 am, Kenneth Falck notifications@github.com wrote:\nAll databases do locking, which might go badly through a VirtualBox share. MongoDB also does huge mmap()s on the data files. If they actually all work just fine, I'm happy to be proven wrong about this. :-)\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "hellonico": "+1, as I am resizing manually right now, and it's not so fun. \n. ",
    "blaggacao": "After deleting an image (to gain space) AND rebooting the b2d (to refresh something about this free space), I got resize2fs successfully into ram with tce-load -wi e2fsprogs.tcz\narguably, a 164 KB tcz would by tiny enough to make up for the annoiance of having to deleta an image an reboot the b2d\nbtw, hyper-v uses VHDX which is rezisable, if you are on a windows machine and prefer built-in hypervisor (without b2d-cli niceties)\nUpdate:\nFor reference, a brutal online resize worked like a charm resize2fs /dev/sda - made as sudo -s, probaby it isn't even  needed to be root\n. After deleting an image (to gain space) AND rebooting the b2d (to refresh something about this free space), I got resize2fs successfully into ram with tce-load -wi e2fsprogs.tcz\narguably, a 164 KB tcz would by tiny enough to make up for the annoiance of having to deleta an image an reboot the b2d\nbtw, hyper-v uses VHDX which is rezisable, if you are on a windows machine and prefer built-in hypervisor (without b2d-cli niceties)\nUpdate:\nFor reference, a brutal online resize worked like a charm resize2fs /dev/sda - made as sudo -s, probaby it isn't even  needed to be root\n. @SvenDowideit\n@znmeb\nmaybe if we could build and include a samba client, with the following files, for the 3.16.7 kernel this could be an elegant solution for file synching.\nNo need to be intrusive on the windows client / just some (advanced) settings, mount folders in samba and else, use boot2docker as normal. \nThe relevant files which would (probably) need to be compiled against the updated kernel are:\nmtd-3.8.13-tinycore.tcz\nfilesystems-3.8.13-tinycore.tcz\nin total: less than 1224 KB - and the problem could be solved easily\nFrom: http://distro.ibiblio.org/tinycorelinux/faq.html\n\nIf the sharing computer is at least Windows 2000, you can mount the share with only the filesystems-2.6.29.1-tinycore.tcz extension.\nIn a root console:\nmkdir /mnt/windows\nmount -t cifs //9.53.216.11/myshare /mnt/windows -o user=myname,pass=mypassword\n\nComplementary instructions for windows users: http://www.howtogeek.com/176471/how-to-share-files-between-windows-and-linux/\nEdward ( @znmeb ), are you able to hack the boot2docker Dockerfile in order to have a built with samba client on it. The docker run swendowedeit/samba unfortunately didn't work for subfolders and is a bit heavier (if I remember right arround 300MB ? on the persistence storage). Maybe, if Sven approves the ideas, you can make it a pull request. (I'm personally skillwise not capable of executing such ideas)\nI would else lurk to vagrant how they solve it (NFS for Linux Hosts, SMB for Windows Hosts) - Virtual Guest Editions are pinned to have comparably high performance costs against those alternatives. Why not make it standard for the respective hosts (and abandon guest editions)?\nSven ( @SvenDowideit ), are you able to ping the right collegues\n. This partly DEPRECATES the above post and gets closer to the solution...\nIn my boot2docker a sudo find / -type d -name 'cifs' retourns this already, so CIFS (Samba) client is already there in the right kernel version seems to be already there: (btw NFS also sudo find / -type d -name 'nfs') \n/proc/fs/cifs\n/lib/modules/3.16.7-tinycore64/kernel/fs/cifs\n/sys/module/cifs\nThis is greate news, so we can get rid of performance-costly Guest-Additions, I guess, either on unix or windows hosts and unify concepts for vmware and hyper-v etc...\nand with sudo mount -t cifs //MYPC/hostgithub ~/windows -o user=USER i get a permission denied, which already seems that MYPC s reached...\nthe boot2docker-cli would then only have to manage windows folder configuration, authentication and mountpoints within boot2docker. Nice.\n. OSX couldn't use NFS instead? - I would best-guess so.\n<hr>\nFor my understanding:\nOn windows, there would be need for a dedicated user, right? - this is why admin rights would be required (one-time), not quite so in order to modify the file permissions. Or did I miss something?\n. ;-D Well on the long run it's probably worth it, as this was some PITA in order to get sourcecode from my windows IDE onto docker and back and forth and, .... well it's still a mess ;)\n. close, as not a maintainance issue.\n. close, as not a maintainance issue.\n. Things got moving, xref: https://github.com/docker/docker/pull/20262\n. :heart: and :watch:  for baking cifs/nfs into boot2docker \n. cc/ @tianon \n. cc/ @tianon \n. we are in different times (roadmap of mobylinux)\n. ",
    "robinbb": "+1 for using resizable disk images with VirtualBox.\n. +1 for using resizable disk images with VirtualBox.\n. ",
    "patsissons": "please include resize2fs in the boot2docker iso, this would make the process so much better!\n. please include resize2fs in the boot2docker iso, this would make the process so much better!\n. ",
    "masaeedu": "The problem is that the version of parted available on tinycore is precisely the most unfortunate possible version for getting anything done. parted deleted the ability to resize partitions in 3.0 because it was tied to some weird filesystem juggling stuff, then added it back later under the resizepart command. Guess what version of parted you have available on tinycore? fdisk only supports totally nuking and recreating your partition, so you can't use that either, because otherwise you won't have a filesystem to grow.. ",
    "robertmain": "Perhaps dont show the message about Docker client.  Instead maybe just: \"Started. You can now connect using C:\\Program Files\\Boot2Docker for Windows\\ssh.bat to SSH into the VM.\"\n. ",
    "AnneTheAgile": "+1 on that wording.\nAlso I would love it if the title could be changed again to prefix with \"Doc:\" for documentation issue.  Doing my due diligence before installing, I searched for 'windows' tickets and was alarmed to see this title :). \n. +1 on that wording.\nAlso I would love it if the title could be changed again to prefix with \"Doc:\" for documentation issue.  Doing my due diligence before installing, I searched for 'windows' tickets and was alarmed to see this title :). \n. Hmm, perhaps we need to check this;  Windows 8.1 prof (64 bit), not able to run Boot2Docker #31 https://github.com/boot2docker/windows-installer/issues/ \nand perhaps https://github.com/boot2docker/windows-installer/issues/19 \n. Hmm, perhaps we need to check this;  Windows 8.1 prof (64 bit), not able to run Boot2Docker #31 https://github.com/boot2docker/windows-installer/issues/ \nand perhaps https://github.com/boot2docker/windows-installer/issues/19 \n. I am not an IPython developer, but its purpose is to display IPNB files that are located at a certain folder. It enables CRUD on those files as well.  I'm  unclear why it seems you are trying to run ipython from outside of the Docker/Container ? Where is your commandline of starting up \"ipython notebook\" from within your  Docker ? Once you have created a running ipynb server with that command, only then would you be able to access it from a GUI Web Browser.   Have I understood your use case?\n. I am not an IPython developer, but its purpose is to display IPNB files that are located at a certain folder. It enables CRUD on those files as well.  I'm  unclear why it seems you are trying to run ipython from outside of the Docker/Container ? Where is your commandline of starting up \"ipython notebook\" from within your  Docker ? Once you have created a running ipynb server with that command, only then would you be able to access it from a GUI Web Browser.   Have I understood your use case?\n. Also, does a simple Nginx Docker container display correctly for you?\n. Also, does a simple Nginx Docker container display correctly for you?\n. @rcielak , so closing means you are all good now? I'm  glad to hear it as I have a Surface pro as well :).\n. Sorry for barging in. Do you think this could help with my Windows 8.1 Surface Pro 2 error, \"this kernel requires an x86-cpu, but only detected an i686 cpu. unable to boot  - please use a kernel appropriate for your cpu.\"\nI've gone around in some circles so far. I tried turning off the feature for Hyper-V, but that didn't help - then I get a similar error, about amd this time. \nthank you!\nAnneTheAgile\np.s. I tried going through the below article to use Hyper-V, but not all the menus were present for me and it failed with the x86-cpu required error.\nhttp://cicoria.com/cs1/blogs/cedarlogic/archive/2014/10/09/getting-docker-running-on-hyper-v-8-1-2012-r2.aspx\nGetting Docker Running on Hyper-V 8.1/ 2012 R2\n. ",
    "xacaxulu": "+1\n. ",
    "meta-meta": "+1\n. ",
    "venkateshvalarajan": "hi , Error requesting socket: exit status 255\no2015/07/10 15:49:36 executing: C:\\Program Files (x86)\\\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKno\nLogLevel=quiet -p 0 -i C:\\Users\\Connovate.ssh\\id_boot2\nrep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nBad port '0' . i am getting error message like this. i am using windows 7 but my virtual box is running , please can u any suggesstion\n. ",
    "fablec": "Sorry for the disruption, after fully removing it and reinstall, it works :) \n. Sorry for the disruption, after fully removing it and reinstall, it works :) \n. ",
    "zlwu": "bash\n$ \"C:\\Program Files (x86)\\Git\\bin\\ssh.exe\" -vvv -o IdentitiesOnly=yes -o Strict\nHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i\n c:\\\\Users\\\\Zilong\\\\.ssh\\\\id_boot2docker docker@localhost\nOpenSSH_4.6p1, OpenSSL 0.9.8e 23 Feb 2007\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to localhost [127.0.0.1] port 2022.\ndebug1: connect to address 127.0.0.1 port 2022: Connection refused\nssh: connect to host localhost port 2022: Bad file number\n. BTW, there is a error message in the virtualbox boot2docker log indicates the NAT port forwarding is failed.\nlog\n00:00:02.736975 VM: Halt method global1 (5)\n00:00:02.737042 HaltedGlobal1 config: cNsSpinBlockThresholdCfg=50000\n00:00:02.737131 Changing the VM state from 'CREATING' to 'CREATED'.\n00:00:02.737255 Changing the VM state from 'CREATED' to 'POWERING_ON'.\n00:00:02.737429 NAT: set redirect TCP host port 2022 => guest port 22 @ 10.0.2.15\n00:00:02.829193 NAT: failed to redirect TCP 2022 => 22\n00:00:02.829603 Changing the VM state from 'POWERING_ON' to 'RUNNING'.\n00:00:02.835494 Guest Log: BIOS: VirtualBox 4.3.14\n. ",
    "benmarwick": "Sorry for the lack of detail, I get a network error dialog box, like so: \n\n. Sorry for the lack of detail, I get a network error dialog box, like so: \n\n. Thanks, yes I check it with boot2docker ip in another terminal each time I test for folder sharing. I've got it going on one windows 7 machine, but not on my main windows 7 computer. I've tried to make all the network and sharing settings similar between the two machines, but still nothing budges on my main machine.\n. I've just discovered that folder sharing could be enabled on my system when I downgraded VirtualBox to 4.3.12, so I'd recommend that to anyone else with a similar problem. \n. Sharing folders between windows and boot2docker is also something I'm having trouble with (#514).\nI was able to build an image with boot2docker on windows 7 from a dockerfile on github:\n```\nbuild from a dockerfile in my github repo:\ndocker build --rm -t benmarwick/ropensci https://raw.githubusercontent.com/benmarwick/docker/master/ropensci/Dockerfile\nrun my newly built container\ndocker run -d -p 8787:8787 benmarwick/ropensci \n```\n. Sharing folders between windows and boot2docker is also something I'm having trouble with (#514).\nI was able to build an image with boot2docker on windows 7 from a dockerfile on github:\n```\nbuild from a dockerfile in my github repo:\ndocker build --rm -t benmarwick/ropensci https://raw.githubusercontent.com/benmarwick/docker/master/ropensci/Dockerfile\nrun my newly built container\ndocker run -d -p 8787:8787 benmarwick/ropensci \n```\n. ",
    "slifin": "This just needs to be easier\nsomething like boot2docker share \"c:\\project\"  \"/var/www/project\" \"container name\"\n. This just needs to be easier\nsomething like boot2docker share \"c:\\project\"  \"/var/www/project\" \"container name\"\n. ",
    "pocesar": "it's meant to be ran outside the ssh...\n. @benmarwick yeah, relying on an external source is somewhat I wasn't willing to do so, I have a bunch of \"ADD\" statements inside Dockerfile\n@amjibaly sadly, that kinda makes boot2docker on windows not useful at all, seems just a \"playground\" version of what you would get on a Linux machine. If I were to git push to a remote instance, I would just do that :(\nEDIT: Using this modified image https://medium.com/boot2docker-lightweight-linux-for-docker/boot2docker-together-with-virtualbox-guest-additions-da1e3ab2465c works! It's mounted inside /Users, just name your path inside VirtualBox settings to \"home\"\n. @SvenDowideit I understand b2d is still under heavy dev, but the workaround provided by that image is just perfect, because usually devs know what are they doing (even more when trying to build an container that will be deployed in production), I don't see a problem going to the extra steps of manually adding a permanent mount to the vm image (unless the image itself is hijacked, then you could have some files stolen)\n. ",
    "amjibaly": "Yeah I've found Docker on Windows is very unreliable. The docker client doesn't run on Windows at all and if you try to mount a folder using virtual box for example you often get corrupted files. Your best bet is to git clone your source repos inside your boot2docker instance and then run your docker build from there.\n. Yeah I've found Docker on Windows is very unreliable. The docker client doesn't run on Windows at all and if you try to mount a folder using virtual box for example you often get corrupted files. Your best bet is to git clone your source repos inside your boot2docker instance and then run your docker build from there.\n. @pocesar Yeah that image is awesome, works really (on Mac).\n@SvenDowideit yeah I was referring to running docker on Windows in general, I should have clarified that. You've done an awesome job with boot2docker and it just keeps getting better. I spent about a week trying to get our (Mac) docker-based dev environment working for 2 PC-based contractors and eventually just gave up and had them get Macs.\n. @pocesar Yeah that image is awesome, works really (on Mac).\n@SvenDowideit yeah I was referring to running docker on Windows in general, I should have clarified that. You've done an awesome job with boot2docker and it just keeps getting better. I spent about a week trying to get our (Mac) docker-based dev environment working for 2 PC-based contractors and eventually just gave up and had them get Macs.\n. ",
    "rcielak": "\n. \n. $ boot2docker -v ip\n2014/09/02 13:29:25 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/09/02 13:29:25 executing: ssh -v -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 2022 -i c:\\Users\\r.ssh\\id_boot2docker docker@localhost ip addr show dev eth1\nOpenSSH_6.6.1, OpenSSL 1.0.1i 6 Aug 2014\ndebug1: Connecting to localhost [127.0.0.1] port 2022.\ndebug1: Connection established.\ndebug1: identity file c:\\Users\\r.ssh\\id_boot2docker type 1\ndebug1: identity file c:\\Users\\r.ssh\\id_boot2docker-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.6.1\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_6.0\ndebug1: match: OpenSSH_6.0 pat OpenSSH* compat 0x04000000\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: server->client aes128-ctr hmac-md5 none\ndebug1: kex: client->server aes128-ctr hmac-md5 none\ndebug1: sending SSH2_MSG_KEX_ECDH_INIT\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ECDSA ed:ab:9e:8b:1c:0d:ea:67:6f:53:22:95:65:16:c5:91\ndebug1: checking without port identifier\nWarning: Permanently added '[localhost]:2022' (ECDSA) to the list of known hosts.\ndebug1: ssh_ecdsa_verify: signature correct\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: Roaming not allowed by server\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: c:\\Users\\r.ssh\\id_boot2docker\ndebug1: Server accepts key: pkalg ssh-rsa blen 279\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type RSA\ndebug1: Authentication succeeded (publickey).\nAuthenticated to localhost ([127.0.0.1]:2022).\ndebug1: channel 0: new [client-session]\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: Sending command: ip addr show dev eth1\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\ndebug1: channel 0: free: client-session, nchannels 1\nTransferred: sent 3344, received 2288 bytes, in 0.0 seconds\nBytes per second: sent 222934.9, received 152534.4\ndebug1: Exit status 0\n2014/09/02 13:29:25 SSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 08:00:27:b6:9c:5d brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:feb6:9c5d/64 scope link\n       valid_lft forever preferred_lft forever\nEND SSH\nThe VM's Host only interface IP address is: 192.168.59.103\n. but I can't get the Ipython notebook to open with that ip\n. I did forward ports. The commasnd I use is\nipython notebook --no-browser --port 8888 \"--ip=*\"\nThis is what I get\n[I 23:07:11.696 NotebookApp]B Using existing profile dir: u'/home/itam/.ipython/profile_default'\n[I 23:07:11.832 NotebookApp]B Using MathJax from CDN: https://cdn.mathjax.org/mathjax/latest/MathJax.js\n[C 23:07:11.865 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended.\n[C 23:07:11.865 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using authentication. This is highly insecure and not recommended.\n[I 23:07:11.874 NotebookApp]B Serving notebooks from local directory: /\n[I 23:07:11.875 NotebookApp]B 0 active kernels\n[I 23:07:11.875 NotebookApp]B The IPython Notebook is running at: http://[all ip addresses on your system]:8888/\n[I 23:07:11.875 NotebookApp]B Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\nBut I can't open it with http://192.168.59.103:8888/, http://0.0.0.0:8888/, or http://127.0.0.1:8888/\n. I did forward ports. The commasnd I use is\nipython notebook --no-browser --port 8888 \"--ip=*\"\nThis is what I get\n[I 23:07:11.696 NotebookApp]B Using existing profile dir: u'/home/itam/.ipython/profile_default'\n[I 23:07:11.832 NotebookApp]B Using MathJax from CDN: https://cdn.mathjax.org/mathjax/latest/MathJax.js\n[C 23:07:11.865 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended.\n[C 23:07:11.865 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using authentication. This is highly insecure and not recommended.\n[I 23:07:11.874 NotebookApp]B Serving notebooks from local directory: /\n[I 23:07:11.875 NotebookApp]B 0 active kernels\n[I 23:07:11.875 NotebookApp]B The IPython Notebook is running at: http://[all ip addresses on your system]:8888/\n[I 23:07:11.875 NotebookApp]B Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\nBut I can't open it with http://192.168.59.103:8888/, http://0.0.0.0:8888/, or http://127.0.0.1:8888/\n. docker run -p 8888:8888 -t -i nanounanue/itam-mate-computacional:v5 /bin/bash\nIs the command I used to create the container. To start it I use\ndocker start -a -i lonely_brown\n. docker run -p 8888:8888 -t -i nanounanue/itam-mate-computacional:v5 /bin/bash\nIs the command I used to create the container. To start it I use\ndocker start -a -i lonely_brown\n. I used docker run to create the container, I use docker start to access the once it was already created and I had exited the container\n. I used docker run to create the container, I use docker start to access the once it was already created and I had exited the container\n. It doen't work\n. I am trying to run it inside docker. Yes, I did map the port with -p 8888:8888\n. ",
    "pditommaso": "I've just download the distribution package for OSX and installed as described here \nhttp://docs.docker.com/installation/mac/\n. I see, but I don't get what you need to know about the registry setup. It's installed in our internal network. \nThe point I can manage to use it by using a \"normal\" Docker installation on a Linux machine, but I cant from a Docker running through boot2docker \n. I see, but I don't get what you need to know about the registry setup. It's installed in our internal network. \nThe point I can manage to use it by using a \"normal\" Docker installation on a Linux machine, but I cant from a Docker running through boot2docker \n. Hi Sven, the problem is that I do know nothing about the docker registry installation. They just gave me the endpoint address http://my-registry:5000/v1/_ping \nI can say that it is installed in our private network, it's address is 172.17.16.31\nI can access the registry by using a \"plain\" Docker installation (I mean without using boot2docker). \nOn the Mac where  I've installed boot2docker I get the error above. I exclude that it a connection/firewall problem since I tried to connect the registry with a browser and it returns the message \n\"docker-registry server (local) (v0.7.1)\"\nI'm supposing the problem is in the Vagrant network configuration for the VM cerated by boot2docker, but I really no have idea how to change it. \n. Hi Sven, the problem is that I do know nothing about the docker registry installation. They just gave me the endpoint address http://my-registry:5000/v1/_ping \nI can say that it is installed in our private network, it's address is 172.17.16.31\nI can access the registry by using a \"plain\" Docker installation (I mean without using boot2docker). \nOn the Mac where  I've installed boot2docker I get the error above. I exclude that it a connection/firewall problem since I tried to connect the registry with a browser and it returns the message \n\"docker-registry server (local) (v0.7.1)\"\nI'm supposing the problem is in the Vagrant network configuration for the VM cerated by boot2docker, but I really no have idea how to change it. \n. No way, still error \ndial tcp 172.21.11.39:5000: i/o timeout\nBut I noticed that I can ping  172.17.16.31 successfully from the boot2docker vm. May it be a problem of TCP ports ?\n. No way, still error \ndial tcp 172.21.11.39:5000: i/o timeout\nBut I noticed that I can ping  172.17.16.31 successfully from the boot2docker vm. May it be a problem of TCP ports ?\n. ",
    "i3zhe": "@SvenDowideit  4.3.14 r95030\nLooks I am already on the latest version of virtualbox, may I know what you working version is?\n. @SvenDowideit  4.3.14 r95030\nLooks I am already on the latest version of virtualbox, may I know what you working version is?\n. @SvenDowideit I tried to download and use VB 4.2.26, but got another error while initing: \n```\nVBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 2 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/jerry/.boot2docker/boot2docker-vm.sock --boot1 dvd\nOracle VM VirtualBox Command Line Management Interface Version 4.2.26\n(C) 2005-2014 Oracle Corporation\nAll rights reserved.\n......\nVBoxManage: error: Unknown option: --longmode\n```\nRemove the --longmode, and I got: \nVBoxManage: error: Unknown option: --triplefaultreset\nAny thought please?\n. @SvenDowideit I tried to download and use VB 4.2.26, but got another error while initing: \n```\nVBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 2 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/jerry/.boot2docker/boot2docker-vm.sock --boot1 dvd\nOracle VM VirtualBox Command Line Management Interface Version 4.2.26\n(C) 2005-2014 Oracle Corporation\nAll rights reserved.\n......\nVBoxManage: error: Unknown option: --longmode\n```\nRemove the --longmode, and I got: \nVBoxManage: error: Unknown option: --triplefaultreset\nAny thought please?\n. @tianon  @SvenDowideit Hi, I uninstalled 4.2 and installed the latest stable release of VirtualBox 4.3.14 again, and it is working now... One hint for the zsh users: remember to put the DOCKER_HOST line into .zshrc \nand I am closing this issue.\n. @tianon  @SvenDowideit Hi, I uninstalled 4.2 and installed the latest stable release of VirtualBox 4.3.14 again, and it is working now... One hint for the zsh users: remember to put the DOCKER_HOST line into .zshrc \nand I am closing this issue.\n. ",
    "evgeny-goldin": "Happens with VirtualBox 4.3.18, solved by downgrading to 4.3.16.\n. Happens with VirtualBox 4.3.18, solved by downgrading to 4.3.16.\n. Sure, it's OS X 10.9.5:\n$ brew update\nAlready up-to-date.\n$ brew doctor\nYour system is ready to brew.\n$ VBoxManage --version\n4.3.18r96516\n$ brew install docker\nWarning: docker-1.2.0 already installed\n$ brew install boot2docker\nWarning: boot2docker-1.2.0 already installed\n$ boot2docker -v init\nUsing virtualbox driver\n2014/10/14 15:49:04 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nDownloading boot2docker ISO image...\nLatest release is v1.2.0\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.2.0/boot2docker.iso\n    to /Users/ev/.boot2docker/boot2docker.iso\n2014/10/14 15:49:14 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/10/14 15:49:15 executing: VBoxManage list vms\n2014/10/14 15:49:15 executing: VBoxManage createvm --name boot2docker-vm --register\nVBoxManage: error: Machine settings file '/Users/ev/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox' already exists\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Machine, interface IMachine, callee nsISupports\nVBoxManage: error: Context: \"CreateMachine(bstrSettingsFile.raw(), bstrName.raw(), ComSafeArrayAsInParam(groups), bstrOsTypeId.raw(), createFlags.raw(), machine.asOutParam())\" at line 275 of file VBoxManageMisc.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n$\n. Sure, it's OS X 10.9.5:\n$ brew update\nAlready up-to-date.\n$ brew doctor\nYour system is ready to brew.\n$ VBoxManage --version\n4.3.18r96516\n$ brew install docker\nWarning: docker-1.2.0 already installed\n$ brew install boot2docker\nWarning: boot2docker-1.2.0 already installed\n$ boot2docker -v init\nUsing virtualbox driver\n2014/10/14 15:49:04 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nDownloading boot2docker ISO image...\nLatest release is v1.2.0\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.2.0/boot2docker.iso\n    to /Users/ev/.boot2docker/boot2docker.iso\n2014/10/14 15:49:14 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/10/14 15:49:15 executing: VBoxManage list vms\n2014/10/14 15:49:15 executing: VBoxManage createvm --name boot2docker-vm --register\nVBoxManage: error: Machine settings file '/Users/ev/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox' already exists\nVBoxManage: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component Machine, interface IMachine, callee nsISupports\nVBoxManage: error: Context: \"CreateMachine(bstrSettingsFile.raw(), bstrName.raw(), ComSafeArrayAsInParam(groups), bstrOsTypeId.raw(), createFlags.raw(), machine.asOutParam())\" at line 275 of file VBoxManageMisc.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n$\n. My bad, after deleting \"/Users/ev/VirtualBox VMs/\" all is fine now. Sorry for the noise!\n. My bad, after deleting \"/Users/ev/VirtualBox VMs/\" all is fine now. Sorry for the noise!\n. ",
    "rpond-pa": "Can confirm.  Deleting the \"VirtualBox VMs\" from the home directory helped me too.\n. ",
    "brephophagist": "@atomantic did you have any pre-existing virtualbox images/config besides boot2docker-vm, or a completely clean virtualbox install?\nI get this same error (which has also been reported at https://forums.docker.com/t/boot2docker-bug-on-osx-10-8-5/309) using latest homebrew, cask, and virtualbox. unsetting the environment vars mentioned at the forum link does not fix the issue. (I'm on 10.8.5 as well.)\n. ",
    "atomantic": "@brephophagist I did have an old version of VirtualBox and had upgraded it with all the VMs still around. I did try the rm -rf ~/VirtualBox\\ VMs method, which didn't make a difference. All working now that I wiped it completely and reinstalled... (I'm 10.8.5 too)\n. ",
    "msainz": "I experienced this problem on Mac OS with the following versions:\n```\n\u25cb \u2192 sw_vers -productVersion\n10.8.5\n\u25cb \u2192 boot2docker version\nBoot2Docker-cli version: v1.4.1\nGit commit: 43241cb\n\u25cb \u2192 vboxmanage --version\n4.3.20r96996\n```\nI then went ahead and upgraded VirtualBox to 4.3.22r98236, and that fixed the problem.\n. ",
    "gyang-aa": "I solve this problem by delete the vbox folder under in /Users/username/VirtualBox VMs.\n. ",
    "Oliboy50": "@gyang-aa :+1: \nWould be great to have an automatic fix for that (I uninstall/install VirtualBox and Boot2Docker twice before doing that...)\n. ",
    "darylteo": "Had a slightly different configuration - I had configured my default machine directory into a external harddisk, but this harddisk wasn't plugged in at the time, so it failed.\nPersonally I would prefer if boot2docker would install it in specific location on the disk using --basefolder rather than relying on virtualbox to put it in its default location. Would make cleaning up easier too.\n. Had a slightly different configuration - I had configured my default machine directory into a external harddisk, but this harddisk wasn't plugged in at the time, so it failed.\nPersonally I would prefer if boot2docker would install it in specific location on the disk using --basefolder rather than relying on virtualbox to put it in its default location. Would make cleaning up easier too.\n. ",
    "rodolfocaldeira": "Hey @thiagodiniz did you find our what was causing that issue?\n. Thank you @thiagodiniz, I was able to solve the problem by uninstalling and reinstalling virtualbox, vagrant and boot2docker.\nThank you for your quick reply.\n. ",
    "glyph": "It would be really handy to have a \"this might break your network\" boot2docker subcommand which does this.  I didn't know a ton about how docker sets up networking, so I ended up blowing about a half a day reading the iptables rules docker sets up and figuring out how to get traffic out of the VM, only to re-invent the above route command in parallel.\nI would much rather have had a documented boot2docker share-network subcommand that just ran this for me, so I could have discovered how to do it faster, even if there were a chance that it could break my network.\n. ",
    "abstractj": "@SvenDowideit I'm setting at my .zshrc. After your suggestion, it stopped to abort the VM and the timeouts were gone.\nThanks a lot for you time\n. ",
    "odewahn": "+1\nThis worked great for me, as well.   Thanks, @sciutand\nOn Mon, Sep 22, 2014 at 6:14 PM, bsr203 notifications@github.com wrote:\n\nindeed ..worked like a charm.. it would be better to be this\nVBoxManage sharedfolder add boot2docker-vm -name /Users -hostpath /Users\nexplicitly mention in the documentation, for user not aware of it.. thanks\nagain for your patience and help..\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/534#issuecomment-56451877\n.\n. Have you tried exposing port 8888 from the VM to your host?  (Opening port 8888 in docker only exposes it from the container to the VM. )\n\nIf not, try this on the host and then try the notebook in Chrome again:\nVBoxManage controlvm boot2docker-vm natpf1 \"ipython-notebook,tcp,127.0.0.1,8888,,8888\"\n. Hi, @MarianaMenchero .  Sorry to hear about your other computer.  Too bad.  \nYou can get more details at http://odewahn.github.io/docker-jumpstart/boot2docker.html, but here's what I meant about the ports.  Docker can only run natively on Linux.  To make it run on Windows or a Mac, you need boot2docker, which installs a small linux virtual machine that runs in something called VirtualBox.  So, when you run docker commands, they're not really running on your host operating system.  Instead, they're running on the \"guest\" OS that is installed by boot2docker. \nIf you're running things that just need linux, you're normally in pretty good shape.  But, if you want to connect from your \"host\" OS (like, you're windows machine) to a service running on the \"guest\" OS (i.e., like the IPyhton notebook server running in the boot2docker VM), you have to explicitly open the port on your machine to the VM.  That's what this command does:\nVBoxManage controlvm boot2docker-vm natpf1 \"ipython-notebook,tcp,127.0.0.1,8888,,8888\"\nIt maps your port 8888 on your host OS to port 8888 on the VM where your docker container is actually executing.  Note that you need to run this from within a plain old windows terminal, and not within the boot2docker VM.  (I'm assuming you're on windows from the .exe in the screenshots.)\nIt's a bit confusing, I know.  It's kind of like that movie Inception, where you have a bunch of different layers of abstraction, and you just need to keep up with what layer your ports are actually mapping to.  \nAlso, I noticed in the screen shot you provided that the syntax you're using to start IPython might also be problematic.  I've used this command to run IPython Notebooks in Docker and it's run great:\nipython notebook --ip=0.0.0.0 --port=8888 --pylab=inline --no-browser\nHope this helps!\n. Thanks for this explanation, @SvenDowideit.  I'd had trouble getting the notebooks running before, but this works great.\n. Try plain http (not https)\nhttp://192.168.59.103:8888\n. ",
    "mkolodny": "Yes, thanks @sciutand! Those instructions line for line worked for me.\n. ",
    "gaastonsr": "Eager for this to be in the official release.\n. If the above ISO works why not use it?\n. It is not in the official release yet. You need to build your image if you want to use it. See https://github.com/boot2docker/boot2docker/pull/534.\nSpecifically https://github.com/boot2docker/boot2docker/pull/534#issuecomment-56432262 in how to do it.\n. Ohh really? nice... I didn't rebuild my cli, just the image. Thanks.\n. ",
    "stevepereira": "Is this release waiting to sync with the next Docker release?\n. ",
    "SchumacherFM": "Nice work @gansbrest !\nSounds like a great solution as we are using Magento with the same amount of files and it is so slow via shared folders ...\nBut I don't like Ruby so I'm gonna to rewrite it in Go. I also need the sync on Windows :-(\nGo has a library for cross plattform sync: https://github.com/howeyc/fsnotify no idea if that works well....\n. ",
    "AkeemMcLennon": "Hmm, @gansbrest and @SchumacherFM bring up some interesting points and ideas. \nHowever, since these changes are ultimately intended for the fig project, perhaps it might be useful to integrate this filesystem monitoring into Fig directly? \n. ",
    "huahaiy": "These changes should be independent from Fig. The results of Fig's monitoring filesystem change is to rebuild and reload the container, but that may be too expensive. People often prefer to use their development environment's own system reloading mechanism, e.g. Clojure's lein-ring, etc.  boot2docker should support these use cases.\n. @vmaatta  I seem to be able to run postgres container just fine on boot2docker, see my Postgres Dockerfile here.  initdb run as the user postgres, so make sure that user have permission on the $PGDATA directory. \n. @vmaatta  I seem to be able to run postgres container just fine on boot2docker, see my Postgres Dockerfile here.  initdb run as the user postgres, so make sure that user have permission on the $PGDATA directory. \n. ",
    "abilash222": "the above ISO is not working. /User directory is not mounted\n. the above ISO is not working. /User directory is not mounted\n. i tried the same in different machine and it worked properly but when i try to run docker from host i get the below error docker images\n2014/10/14 15:11:45 Get http://X.X.X.X:2376/v1.14/images/json: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\n. i tried the same in different machine and it worked properly but when i try to run docker from host i get the below error docker images\n2014/10/14 15:11:45 Get http://X.X.X.X:2376/v1.14/images/json: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\n. I have configured everything and my application is running properly but it takes almost 10x times more than running directly in host machine or a vagrant vm. why does this occur should i do any network changes for the VM or this is a issue?\n. ",
    "dekz": "@abilash222 did you use VBoxManage to share the folder into boot2docker?\n. ",
    "daviderickson": "Ahhh I clicked right past that customize button in the corner on OSX, wasn't obvious.. thanks for the pointer!\n. ",
    "MidnightLightning": "While waiting for an official release including this fix, is there a way to apply these flags to an already-built boot2docker VM image? Or given that these are kernel configs, do they need to be part of the OS install and aren't just a simple fix on a running VM?\n. I have a running VM of the latest release of boot2docker; let's see if we can Inception-ally create boot2docker within boot2docker...\nEDIT: Result: nope....\ndocker@boot2docker:~/boot2docker$ docker build -t boot2docker . && docker run --rm boot2docker > boot2docker.iso\n[...]\nStep 37 : RUN echo root > $ROOTFS/etc/sysconfig/superuser\n ---> Running in b18050625e1a\nexec: \"/bin/sh\": stat /bin/sh: no such file or directory2014/09/24 15:46:56 exec: \"/bin/sh\": stat /bin/sh: no such file or directory\ndocker@boot2docker:~/boot2docker$\nAh well, I'll wait for the official release to update.\n. ",
    "alexhowarth": "Can confirm that deleting the VM in VirtualBox, building the boot2docker.iso from master and copying to ~/.boot2docker fixes the \"operation not permitted\" error.\nFor me the issue was with pulling jboss/wildfly\nhttps://github.com/boot2docker/boot2docker/blob/master/doc/BUILD.md\n. ",
    "raghuveerp": "I am facing the exact same problem. I have windows 7 machine and installed docker & boot2docker. I have noticed that when I am on corporate network, it is very slow, but when i run boot2docker from my home network, it works like a charm. Do I need to configure some proxy settings explicitly ?  So far I have updated: /var/lib/boot2docker/profile and exported the http_proxy variables, but it does not help much.\n. Can you please share how did you downgraded iso version ? Did you recompile old code from https://github.com/boot2docker/boot2docker ?\n. Thanks for the information. Let me try this. \n. ",
    "blackstrype": "Confirmed: downgrading to v1.1.2 removes the ugly ping loop behind a corporate proxy. How would one change (or nullify) the NTP_SERVER variable ?\nTo avoid disabling $NTP_SERVER by default, a profile config file sounds nice -- that way NTP_SERVER can be manually set. I'm not familiar enough with the code to test this, but I like the idea.\nI saw this code in bootscript.sh\n```\nsync the clock (in the background, it takes 40s to timeout)\n26  /etc/rc.d/ntpclient > /var/log/ntpclient.log 2>&1 &\n```\nThere doesn't seem to be any sort of timeout because I continue to see lag in the ssh client well after 40 seconds.\n. ",
    "lalyos": "We had a similar issue for very slow ssh connection, which cased by changing DNS nameserver. (starting boot2docker at work, than connecting wifi at home)\nOur solution was, to disable DNS lookup completely for sshd inside of b2d. This is the line\nwe have in /var/lib/boot2docker/bootlocal.sh\nsed  -i \\\"/UseDNS/ s/.*/UseDNS no/ \\\" /var/lib/boot2docker/ssh/sshd_config\n. @SvenDowideit  You can switch of by a one-liner in bootlocal.sh:\nsed -i 's/DOCKER_TLS:=auto/DOCKER_TLS:=/' /etc/init.d/docker ; /etc/init.d/docker restart\nissue\nBut as you sad it brings out some corners:  boot2docker shellinit only sets environment variables. So when TLS is enabled shellinit sets  DOCKER_TLS_VERIFY=1. If you disable TLS and want to have a new set of env variables. you have to clear them manually: unset ${!DOCKER_*}\nSo maybe shellinit would need to always start with a bunch of unset DOCKER_XXX before setting them.\nBut still playing around with bootlocal.sh seems a better option than creating a new iso. \n. As a workaround you can reach Docker on port 2375 via plain http\n$(docker run sequenceiq/socat)\nThis starts a socat in a container which proxy /var/run/docker.sock on port 2375. So you can use: http://192.168.59.103:2375/images/json\n. It looks like it is a bug in the OSX specific curl. If you run the exact same command inside of boot2docker, it works just fine.\n$curl -sS --insecure --cert $DOCKER_CERT_PATH/cert.pem --key $DOCKER_CERT_PATH/key.pem https://192.168.59.103:2376/_ping                                                             \ncurl: (35) Unknown SSL protocol error in connection to 192.168.59.103:-9825\nby simple adding a boot2docker ssh prefix suddenly it works fine\n$boot2docker ssh curl -sS --insecure --cert $DOCKER_CERT_PATH/cert.pem --key $DOCKER_CERT_PATH/key.pem https://192.168.59.103:2376/_ping\nOK$\n. It looks like it is a bug in the OSX specific curl. If you run the exact same command inside of boot2docker, it works just fine.\n$curl -sS --insecure --cert $DOCKER_CERT_PATH/cert.pem --key $DOCKER_CERT_PATH/key.pem https://192.168.59.103:2376/_ping                                                             \ncurl: (35) Unknown SSL protocol error in connection to 192.168.59.103:-9825\nby simple adding a boot2docker ssh prefix suddenly it works fine\n$boot2docker ssh curl -sS --insecure --cert $DOCKER_CERT_PATH/cert.pem --key $DOCKER_CERT_PATH/key.pem https://192.168.59.103:2376/_ping\nOK$\n. @ghoffer As the error message states the CLIENT side certification is missing.\nWhen tls is enbled Docker uses client and serverside certificates. You can see 3 pem files in $DOCKER_CERT_PATH:\n- ca.pem: that is the server-side certificate. The client can identify the server, and decode messages coming from the server.\n- cert.pem: that is the client-side certificate. The server identifies the client with this (instead of user/pwd).\n- key.pem: This is the private key, the client will use to encoded/decode messages.\nSo when you choose \"Always Trust\", you were deciding about the server-side cert (ca.pem).\ncert.pem and key.pem files are used by the client side. With the docker command you specify the  --cert and  --key options. But browsers and some other application needs them in a combined form. That format called PKCS #12\nopenssl pkcs12 -export \\\n  -inkey  key.pem \\\n  -in cert.pem \\\n  -name b2d-client-side \\\n  -out b2d-client-side.p12 \\\n  -password pass:tcuser\nNow you need to import this p12 certificate. The import password is tcuser. \nNext time you try to connect to https://192.168.59.103:2376/images/json the browser will provide you a gray dialog (similar to basic auth) to select which client side certificate to use. You choose the just imported Boot2Docker and voila ...\n. @ghoffer As the error message states the CLIENT side certification is missing.\nWhen tls is enbled Docker uses client and serverside certificates. You can see 3 pem files in $DOCKER_CERT_PATH:\n- ca.pem: that is the server-side certificate. The client can identify the server, and decode messages coming from the server.\n- cert.pem: that is the client-side certificate. The server identifies the client with this (instead of user/pwd).\n- key.pem: This is the private key, the client will use to encoded/decode messages.\nSo when you choose \"Always Trust\", you were deciding about the server-side cert (ca.pem).\ncert.pem and key.pem files are used by the client side. With the docker command you specify the  --cert and  --key options. But browsers and some other application needs them in a combined form. That format called PKCS #12\nopenssl pkcs12 -export \\\n  -inkey  key.pem \\\n  -in cert.pem \\\n  -name b2d-client-side \\\n  -out b2d-client-side.p12 \\\n  -password pass:tcuser\nNow you need to import this p12 certificate. The import password is tcuser. \nNext time you try to connect to https://192.168.59.103:2376/images/json the browser will provide you a gray dialog (similar to basic auth) to select which client side certificate to use. You choose the just imported Boot2Docker and voila ...\n. the OSX curl can be replacing the stock curl:\nbrew install curl --with-openssl\nbrew link curl --force\nhash -r\n. the OSX curl can be replacing the stock curl:\nbrew install curl --with-openssl\nbrew link curl --force\nhash -r\n. A pending pullrequest will fix this: https://github.com/boot2docker/boot2docker-cli/pull/293\nMeanwhile you can start your vm as:\nVBoxManage startvm --type headless boot2docker-vm\n. Probably you boot2docker.iso is old. You can fix it by:\nboot2docker download\nboot2docker restart\n. The docker (client) uses 2 different socket to connect to the daemon:\n- inside of boot2docker it uses unix:// when no $DOCKER_HOST set\n- when used outside from the OSX host: it connects using tcp://192.168.59.103:2376 with TLS\nlets check first inside of boot2docker:\n$ boot2docker ssh\ncheck listening sockets\nDocker should listen on 2 sockets:\n$ cat /proc/$(cat /var/run/docker.pid)/cmdline|grep //\nunix://\ntcp://0.0.0.0:2376\nSo when you checked that it listens on unix:// you should be able to connect. When DOCKER_HOST is unset it defaults to unix://, but to be on the safe side,\nspecify the -H option:\ndocker -H unix:// ps\nOn the OSX host\nYou need 3 env variables to be set: DOCKER_HOST, DOCKER_CERT_PATH and DOCKER_TLS_VERIFY\n$ for var in ${!DOCKER_*}; do echo $var=${!var}; done\nDOCKER_CERT_PATH=/Users/lalyos/.boot2docker/certs/boot2docker-vm\nDOCKER_HOST=tcp://192.168.59.103:2376\nDOCKER_TLS_VERIFY=1\nWhen they are not set just run the $(boot2docker shellinit) command.\nCheck if you can ping the Host-Only Network osx side:\nping 192.168.59.103\n. The docker (client) uses 2 different socket to connect to the daemon:\n- inside of boot2docker it uses unix:// when no $DOCKER_HOST set\n- when used outside from the OSX host: it connects using tcp://192.168.59.103:2376 with TLS\nlets check first inside of boot2docker:\n$ boot2docker ssh\ncheck listening sockets\nDocker should listen on 2 sockets:\n$ cat /proc/$(cat /var/run/docker.pid)/cmdline|grep //\nunix://\ntcp://0.0.0.0:2376\nSo when you checked that it listens on unix:// you should be able to connect. When DOCKER_HOST is unset it defaults to unix://, but to be on the safe side,\nspecify the -H option:\ndocker -H unix:// ps\nOn the OSX host\nYou need 3 env variables to be set: DOCKER_HOST, DOCKER_CERT_PATH and DOCKER_TLS_VERIFY\n$ for var in ${!DOCKER_*}; do echo $var=${!var}; done\nDOCKER_CERT_PATH=/Users/lalyos/.boot2docker/certs/boot2docker-vm\nDOCKER_HOST=tcp://192.168.59.103:2376\nDOCKER_TLS_VERIFY=1\nWhen they are not set just run the $(boot2docker shellinit) command.\nCheck if you can ping the Host-Only Network osx side:\nping 192.168.59.103\n. My usecase was running mkdocs in a container, and this issue was driving me crazy! I confirm your 1.9.0-rc2 iso fixes the issue. Thanks @tianon \n. Yes, upgrading to the iso, this is what i did:\nboot2docker  upgrade --iso-url=https://github.com/tianon/boot2docker-legacy/releases/download/v1.9.0-rc2/boot2docker.iso\naaaaand magically it works again. I had the same symptom you described: cat was cashing while anything else like wc or more not.\n. ",
    "vmi": "Hi,\nI have the same problem as @wolfs on Boot2Docker version 1.3.2.\nI think it's possible to solve the problem by setting \"ntpserver=\" boot parameter. (see /etc/init.d/tc-config)\nBut I could not find how to set boot parameters for boot2docker.\nHow to set it?\n. [note] my workaround: /var/lib/boot2docker/bootlocal.sh\n```\n!/bin/sh\nexec > /var/lib/boot2docker/log/bootlocal.log 2>&1\nset -x\npid=\"$(ps | awk '/{ntpclient}/ { print $1 }')\"\nif [ -n \"$pid\" ]; then\n  kill \"$pid\"\n  sleep 3\n  export NTP_SERVER=''\n  echo \"$NTP_SERVER\" > /etc/sysconfig/ntpserver\n  /etc/rc.d/ntpclient\n  echo \"Done: $?\"\nelse\n  echo \"Don't stop ntpclient.\"\nfi\n```\n. ",
    "philliprower": "My work machine boot2docker ssh is extremely slow.  Pretty much unresponsive as I haven't been able to successfully enter a command yet.  I can ssh into the vitrtual box vm using cygwin with no response problems at all.  Don't think it there is any problems with the VM as it is very responsive when I use cygwin's ssh.  Other's at my work don't have this problem.  I don't think it's a network issue.\n. ",
    "MarianaMenchero": "@odewahn \nI'm really new to docker and I don't understand very well what you mean by \"exposing port 8888 from the virtual machine (VM) to your host?\" Could you elaborate? I'm taking a class on computacional mathematics. so we have an ipython notebook with lectures and homeworks. \nFirst I created the image of the class with \ndocker pull nanounanue/itam-mate-computacional\nThen I created a container with \ndocker run -p 8888:8888 -t -i nanounanue/itam-mate-computacional:v5 /bin/bash\nand finally I cloned everything from git using \ngit clone https://github.com/<usuario_git_hub>/itam-mate-computacional.git\nI ran the ipython notebook, but I can't open it on chrome. \nI'm very confused because I did this before and everything worked out without problems. Then my laptop got stolen and I failed to install everything on my new laptop (same model, repeat everything like the first time). \n. ",
    "jniesen": "Cool. Thanks to hear someone is working on it. \nThough, issue #258 seems to be talking about how to reference a Ubuntu version. Is that the issue I should be watching?\n. Thank you. I will be watching and waiting anxiously :)\n. ",
    "arthurlee": "I find a way to do that. First please login as docker user. Then create the password of the root using command 'sudo passwd root'. At the end, you can switch to root user with 'su - root'. It works in my machine.\n. ",
    "lvmodan": "I also can change the password of root user by 'sudo passwd root'. Is it expected? anyway, it solved my problem.. I also can change the password of root user by 'sudo passwd root'. Is it expected? anyway, it solved my problem.. ",
    "jakirkham": "This may be relevant for people trying to use iPython in a docker container. ( https://github.com/ipython/ipython/issues/7062 )\n. This may be relevant for people trying to use iPython in a docker container. ( https://github.com/ipython/ipython/issues/7062 )\n. I am seeing this same problem. I notice it, in particular, if I try to modify port mappings on the VM. I tried some of the fixes on here. Any that came before this comment did not work. Deleting the cert's made the problem worse as I could no longer connect to the machine at all. The variants of @gesellix's fix had no effect.\n. I am seeing this same problem. I notice it, in particular, if I try to modify port mappings on the VM. I tried some of the fixes on here. Any that came before this comment did not work. Deleting the cert's made the problem worse as I could no longer connect to the machine at all. The variants of @gesellix's fix had no effect.\n. As much as I hoped @warden's fix would help, it also failed along with the long list of other suggestions here. Aside from destroying the VM and reinitializing it from scratch, I still can't get around this issue.\n. As much as I hoped @warden's fix would help, it also failed along with the long list of other suggestions here. Aside from destroying the VM and reinitializing it from scratch, I still can't get around this issue.\n. @gesellix, sure, I have put it in this gist ( https://gist.github.com/jakirkham/5b4ddb833d737cf29299 ).\nSo, I retried the restart strategy by @warden and in this instance it worked. I think last time I ssh'd into the VM and then ran the restart command. This time I simply ran it as a single command as shown. However, I can't understand why that would make any difference. FWIW, I seem to need to do this restart everytime the VM is restarted.\n. I am beginning to think these two issues may be related ( boot2docker/boot2docker#945 ).\n. @gesellix, I have tried route 2 previously and have had no success. Regardless, I have to agree with @m0ppers, neither of these is a \"fix\" at best they are workarounds.\n. Thanks @gesellix.\n. Ok, so here is a gist containing the log when restarting, by which I mean sudo /etc/init.d/docker restart, won't work at all ( https://gist.github.com/jakirkham/de8a3d515577c776255d ). This happened to me yesterday.\nIn this particular, instance I was using mobile internet, which was a bit spotty. That being said, I was only trying to use my existing running container that I finally lost connection with. I started trying to use @gesellix method to see if it helps in this event. This has run for 15 minutes with no joy so I will terminate it.\n. @gesellix, earlier I was connected to Ethernet (with WiFi off) and I destroyed and reinitialized the VM. Then I switched to WiFi (disconnected Ethernet) and was able to use my container that was up and running for a bit. Then I stopped the container and tried to start a new one hence where this issue comes into play.\nThe fact that it show eth1 as unassigned doesn't surprise me unless I don't understand something about how their VM is configured, which may very well be the case. I would think that wlan0 should show up, but if they are letting it masquerade as Ethernet, then this may explain it.\n. @meenarc, it looks like this problem also effects Windows, as claimed by @joebalt, do you mind updating the title to reflect that this no longer just an OS X issue? Also, it might not be a bad idea to drop the version numbers as it is clearly not restricted to those old versions.\n. @SvenDowideit Sorry, this does not always work for me. Old description of problem when I ran into it with log attached in gist. Please let me know if you have any questions.\n\nOk, so here is a gist containing the log when restarting, by which I mean sudo /etc/init.d/docker restart, won't work at all ( https://gist.github.com/jakirkham/de8a3d515577c776255d ). This happened to me yesterday.\n. @SvenDowideit Sorry, this does not always work for me. Old description of problem when I ran into it with log attached in gist. Please let me know if you have any questions.\nOk, so here is a gist containing the log when restarting, by which I mean sudo /etc/init.d/docker restart, won't work at all ( https://gist.github.com/jakirkham/de8a3d515577c776255d ). This happened to me yesterday.\n. @gesellix, here is a pretty comprehensive log of how boot2docker ssh ip addr show varies ( https://gist.github.com/jakirkham/8b42f6a9d97c6aa43d2e ). At the very beginning, I have just switched networks, which is how this problem normally affects me. Normally, I have to reboot boot2docker because everything is immediately messed up just by switching networks. Then I try to reboot to see if that will help. At that point, I have tried the patch you added, which goes super slow and either never finishes or errors. Finally, I'm forced to destroy the VM and start from scratch. I have included all of these steps with info from boot2docker ssh ip addr show as to what changed at each point.\n. So, @SvenDowideit has supplied a PR above, which appears to work at least in a few cases. ~~To make it easier for people to try out, I have placed a copy of the ISO built from this PR in Dropbox ( https://www.dropbox.com/s/gsjtioqydni9l7r/boot2docker.iso?dl=0 ), which I will keep at least until the next release (i.e. 1.7.1).~~ This has been removed as the release 1.7.1 has been provided with this fix. Please provide feedback as to whether it works and if not what issue you are seeing.\n\nOn Mac, you will want to run the following. This strategy should work the same on Windows when using Boot2Docker Start (i.e. MinGW).\n~~$ curl -L https://www.dropbox.com/s/gsjtioqydni9l7r/boot2docker.iso?dl=0 > ~/.boot2docker/boot2docker.iso~~\n   ~~$ openssl sha1 ~/.boot2docker/boot2docker.iso   # should be c10470db7a5f90b0fa8ec7e99d8145c41acbc5ad~~\n   ~~$ boot2docker destroy && boot2docker init && boot2docker up && eval $(boot2docker shellinit)~~\n$ boot2docker upgrade\n. @liamdawson Feel free to try it. See notes here if you don't feel like building it ( https://github.com/boot2docker/boot2docker/issues/824#issuecomment-116759440 ).\n. @liusongsen, just upgrade. The fix has been included in version 1.7.1.\n. @mariowise, are you sure the VM is actually using this version. If not, could you try the following and see if it makes any difference?\nboot2docker destory && boot2docker init && boot2docker up\nAlso, you may find that you need to reboot the VM when switching networks. That is unfortunately a different unresolved problem ( https://github.com/boot2docker/boot2docker/issues/945 ).\n. @Laxman-SM, I have the same specs as @mariowise and the update works for me. I think something else is going on.\n. +1\nAlso, I know that Vagrant use to have this problem, but does not any more. They also use VirtualBox. So, a solution should be possible.\n. Were you ever able to figure this out?\n. So, I could be wrong, but I think this is the domain of docker machine.\n. It appears this now can be installed via the package manager thanks to @cameronbrunner's work on this. So, this issue seems to be resolved. \n. I posted some steps to get an ISO working from a PR made by @SvenDowideit on the other issue ( https://github.com/boot2docker/boot2docker/issues/824#issuecomment-116759440 ). I'd be interested to know if you guys see an improvement with this problem, as well, or not.\n. So, I don't believe this issue is solved yet. That being said, with the aforementioned fix, I don't have to destroy the VM every time I switch networks. Instead, I merely have to reboot the VM. Running containers continue to run after the VM reboot.\n. @randerzander, sounds like quite a hack. Also, the /etc/resolve.conf of the VM remains the same as the container's too (excepting the container's hostname).\nThat being said, if we were to change them, what would you recommend we change them too?\n. Related ( https://github.com/docker/machine/issues/2095 ).\n. Also, related ( https://github.com/docker/machine/issues/1857 ).\n. Though I am sure I could put my password in plain text, this is not an acceptable fix.\n. Unless @pfortuna could you please run the following boot2docker version && docker version. Also, try doing what @timmles has stated to ensure that you are using the latest ISO.\n. Glad to hear that you got working.\n. Fixed by boot2docker/boot2docker#960.\n. Could you try a known working version of VirtualBox (e.g. v4.3.28)?\n. Put the configuration values there in this file ~/.boot2docker/profile (on Windows use the provided Git Bash to do this). Afterwards, you will need to recreate the VM from scratch as shown below.\n$ boot2docker poweroff\n$ boot2docker destroy\n$ boot2docker init\n$ boot2docker up\n. So, I completely wiped the installation. Removed all copies of Git, MinGW, boot2docker, and VirtualBox with the uninstaller and deleted all remaining files manually. Also, I removed the .boot2docker directory in my home directory and all of its contents. Did a fresh installation and ran \"Boot2Docker Start\" and was able to get docker up and running again. However, I now get a new issue ( #1017 ).\n. I should add that I downloaded a new copy of the installer. Maybe it is worth wiping Git, as well.\n. I should add that I downloaded a new copy of the installer. Maybe it is worth wiping Git, as well.\n. Weird, but maybe needed. Also, make sure you remove the .boot2docker directory from your user directory.\n. Weird, but maybe needed. Also, make sure you remove the .boot2docker directory from your user directory.\n. Any luck?\n. To summarize, you would like boot2docker --version to include the version of boot2docker and docker. If I understand you correctly, I agree, as well.\n. Though the move has been towards dropping the -- so I would like to see it work in that case.\n. I just don't see boot2docker --version currently, but I would also be happy with both.\n. @tianon, wanted to bring this to your attention as I think it would help when debugging issues raised here. \n. Upgrade. I believe this is the same as this issue ( boot2docker/boot2docker#824 ), which was resolved in version 1.7.1.\n. Dup of boot2docker/boot2docker#999.\n. @jaredpetersen, not a problem. It happens. Thanks.\n. Could you give us more info like what command you ran?\n. Are you able to run this docker run hello-world?\n. Also, are you able to share the Dockerfile? If so, that could be really helpful.\n. Can you also run boot2docker version and provide its results with your versions above?\n. Could you try running boot2docker ssh and then try rerunning the same command to start the container?\n. Could you show how you built these images?\n. This may be related to this issue ( https://github.com/docker/docker/issues/14102 ). If you follow along with any of there suggestions, stay inside the VM to do so.\n. Interesting, I will have to try this on a Windows machine. I have tried building and running containers based on what you have provided me on my Mac and have not been able to reproduce the error.\n. Actually, I won't be able to because of this ( boot2docker/boot2docker#999 ).\n. Yeah, these last few comments are insightful, @drasamsetti. So, the issue might be related to the fact that you are referencing some file in the docker image that does not exist. Assuming this is the cause, it either does not exist because it was not created or because of the some weird behavior in terms of how things get escaped on Windows. Something to play around with at least.\n. Fixes boot2docker/boot2docker#988.\n. Glad to help.\n. Try the following.\nboot2docker download\nboot2docker destroy\nboot2docker init\n. What version of VirtualBox is being used here?\n. What version of VirtualBox is being used here?\n. @aaronsturm, so version 1.7.1 shipped with VirtualBox v4.3.28. Would you mind trying that version in case there is some unusual issue with 5.0?\n. @aaronsturm, so version 1.7.1 shipped with VirtualBox v4.3.28. Would you mind trying that version in case there is some unusual issue with 5.0?\n. Looks like someone very recently made a fix for VirtualBox, which should address this problem.\n. Looks like someone very recently made a fix for VirtualBox, which should address this problem.\n. Dup of #999.\n. Also, tried the hello-world container.\n$ docker run hello-world\nAn error occurred trying to connect: Post https://192.168.59.103:2376/v1.19/cont\nainers/create: dial tcp 192.168.59.103:2376: ConnectEx tcp: A connection attempt\n failed because the connected party did not properly respond after a period of t\nime, or established connection failed because connected host has failed to respo\nnd.\n. Am seeing this error ( https://github.com/docker/machine/issues/673 ) as well if I run docker ps.\n. Moved here ( https://github.com/docker/docker/issues/15526 ).\n. Are you using the boot2docker CLI or docker-machine?\n. @thaJeztah, by large change in an upcoming release are you referring to the fact the VM will be Debian-based instead of Tiny Core-based or are you meaning something different?\n. ",
    "waltervdb": "Actually I expect the installer, if it would install bash, to change this association. Typical behaviour in Windows is that the last program installed overrules the file association of previous installations. \nI already tried open with but couldn't find bash. \nIn C:\\Program Files\\Boot2Docker for Windows I see:\n$ ls\nGit-1.9.0-preview20140217.exe  boot2docker.ico  delete.sh  unins000.dat  unins000.msg\nboot2docker.exe                boot2docker.iso  start.sh   unins000.exe\nWhere should the installer place bash?\n. Sorry that I wasn't clear enough to state in my initial comment that I have a workaround. These are step-by-step instructions that I used as workaround:\n1. Install MinGW\n2. Use the MinGW Installation Manager to install the packages for clear and ssh-keygen\n3. Start the bash shell from the MinGW installation by clicking in Windows Explorer on c:\\MinGW\\msys\\1.0\\msys.bat\n4. In the bash window type cd /c/Program\\ Files/Boot2Docker\\ For\\ Windows/\n5. In the bash window type ./start.sh\nRegarding solving this ticket: most user friendly may be to have the installer offer to download MinGW if its not yet installed and set the proper file association.\n. ",
    "krunalvora": "Same issue.. any solution?\n. Same issue.. any solution?\n. ",
    "mefernandez": "Thanks @Moghedrin, I'll be waiting for the next release of Docker.\n. ",
    "JemiloII": "As a heads up, I've also tried to manually delete the files, but they came back after a reboot.\n. ",
    "bheavner": "I updated to the most recent VirtualBox (4.3.16 r95972), and get the same result.\n. Using the VirtualBox Manager, if I change the settings on the VM to disable the serial port, it appears to work fine. So... problem managed for me, but I'm not sure if this requires a change to make it easier for future people who come across the problem.\n. ",
    "rogeriopradoj": "\nosx-installer:\nhttps://github.com/boot2docker/osx-installer/blob/master/Dockerfile\nwin-installer:\nhttps://github.com/boot2docker/windows-installer/blob/master/Boot2Docker.iss\nhttps://github.com/boot2docker/windows-installer/blob/master/build.sh\n\n@SvenDowideit @tianon @bfirsh, are just these 3 files above that need to be updated (1 or osx, 2 for win)? Or should we try to change other files as well?\n. ",
    "calavera": "@SvenDowideit I just wanted to let you know that the problem is also present using Docker 1.3. But, using --tls fixes the problem in that version too:\ncalavera@dcp $ docker version\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): darwin/amd64\n2014/10/18 14:34:31 Get http://192.168.59.103:2376/v1.15/version: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\ncalavera@dcp $ docker --tls version\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): darwin/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\n. @SvenDowideit I just wanted to let you know that the problem is also present using Docker 1.3. But, using --tls fixes the problem in that version too:\ncalavera@dcp $ docker version\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): darwin/amd64\n2014/10/18 14:34:31 Get http://192.168.59.103:2376/v1.15/version: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\ncalavera@dcp $ docker --tls version\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): darwin/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\n. I updated my boot2docker client to 1.3.0 and I'm experiencing the same response times than @abilash222 .\n. I updated my boot2docker client to 1.3.0 and I'm experiencing the same response times than @abilash222 .\n. yeah, it looks like it's only the first verification that's slow. After\nthat, it just just fine.\nOn Sat, Oct 18, 2014 at 5:11 PM, Tianon Gravi notifications@github.com\nwrote:\n\nHave you done a \"$(boot2docker shellinit)\" ? That'll set DOCKER_TLS_VERIFY\nwhich should make the Docker client use TLS appropriately.\n\u2014\nReply to this email directly or view it on GitHub.\n. yeah, it looks like it's only the first verification that's slow. After\nthat, it just just fine.\n\nOn Sat, Oct 18, 2014 at 5:11 PM, Tianon Gravi notifications@github.com\nwrote:\n\nHave you done a \"$(boot2docker shellinit)\" ? That'll set DOCKER_TLS_VERIFY\nwhich should make the Docker client use TLS appropriately.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "westonplatter": "@tianon had the same issue. $(boot2docker shellinit) fixed it.\n. ",
    "pnathan": "Downloaded the latest boot2docker PKG - boot2docker shellinit is not working to resolve this issue. Manually setting DOCKER_TLS_VERIFY doesn't seem to make it work.\nAs a quick confirmation, here's what I have going on: \n$ shasum ~/Downloads/Boot2Docker-1.3.0.pkg \n7b5a31f70ff4cd70fb321255a7f0513f233b15c8  /Users/pnathan/Downloads/Boot2Docker-1.3.0.pkg\n~\nversion:\n$ docker version\nClient version: 0.9.1\nGo version (client): go1.2.1\nGit commit (client): 3600720\n2014/10/22 16:07:54 malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\nMy nose tells me that maybe \"Client version 0.9.1\" is the problem.... did we get an old client bundled into this PKG?\nHowever, I can do this:\n$ boot2docker ssh\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 1.3.0\n             master : a083df4 - Thu Oct 16 17:05:03 UTC 2014\ndocker@boot2docker:~$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\ndocker@boot2docker:~$ docker version\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): linux/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\ndocker@boot2docker:~$\nand everything is hunky-dory.\nEDIT 1: More version information:\n$ boot2docker version\nBoot2Docker-cli version: v1.3.0\nGit commit: deafc19\n~ \n $ docker version\nClient version: 0.9.1\nGo version (client): go1.2.1\nGit commit (client): 3600720\n2014/10/22 16:13:23 malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\n~ \n $ docker --tls ps\nflag provided but not defined: --tls\nUsage of docker:\n  -D, --debug=false: Enable debug mode\n  -G, --group=\"docker\": Group to assign the unix socket specified by -H when running in daemon mode; use '' (the empty string) to disable setting of a group\n  -H, --host=[]: tcp://host:port, unix://path/to/socket, fd://* or fd://socketfd to use in daemon mode. Multiple sockets can be specified\n  --api-enable-cors=false: Enable CORS headers in the remote API\n  -b, --bridge=\"\": Attach containers to a pre-existing network bridge; use 'none' to disable container networking\n  --bip=\"\": Use this CIDR notation address for the network bridge's IP, not compatible with -b\n  -d, --daemon=false: Enable daemon mode\n  --dns=[]: Force docker to use specific DNS servers\n  -e, --exec-driver=\"native\": Force the docker runtime to use a specific exec driver\n  -g, --graph=\"/var/lib/docker\": Path to use as the root of the docker runtime\n  --icc=true: Enable inter-container communication\n  --ip=\"0.0.0.0\": Default IP address to use when binding container ports\n  --ip-forward=true: Disable enabling of net.ipv4.ip_forward\n  --iptables=true: Disable docker's addition of iptables rules\n  --mtu=0: Set the containers network MTU; if no value is provided: default to the default route MTU or 1500 if no default route is available\n  -p, --pidfile=\"/var/run/docker.pid\": Path to use for daemon PID file\n  -r, --restart=true: Restart previously running containers\n  -s, --storage-driver=\"\": Force the docker runtime to use a specific storage driver\n  -v, --version=false: Print version information and quit\n~ \n $\nnote that docker --tls has a \"Defined but unused\" flag, which smells wrong.\n. Hmmm! I have rerun the boot2docker pkg multiple times ... is that not\ncorrect upgrade path?\n. ",
    "PaddyMann": "I have 1.3 docker and Boot2Docker and still get the malformed HTTP response error.\npaddy:docker paddymann$ docker version\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): darwin/amd64\n2014/10/27 13:22:42 Get http://192.168.59.103:2376/v1.15/version: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\n. ",
    "vohi": "Ran into this as well; the confusion seems to come from boot2docker upgrade upgrading only the VM with the daemon inside; it does not upgrade the docker client binaries on your host - leaving you with a broken install. Solution for me was to install latest boot2docker from https://docs.docker.com/installation/mac/\n. ",
    "mcortinas": "Yes, totally agree with vohi! I had an older docker version in path /Users/$USER/bin/docker\nI just removed /Users/$USER/bin/docker and launched $(boot2docker shellinit).\nAfter removed it has working fine!\n. ",
    "bkbonner": "I'm seeing this issue with Docker Client 1.3.3\nbrians-air:~ bbonner$ docker --version\nDocker version 1.3.3, build d344625\nbrians-air:~ bbonner$ docker ps -a\n2014/12/16 16:53:12 Get http://192.168.59.103:2376/v1.15/containers/json?all=1: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\nmeanwhile, with _--tls_, it seems to work fine.  \nbrians-air:~ bbonner$ docker --tls ps\nCONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS                                                      NAMES\n. ",
    "sean9999": "my version of boot2docker shellinit does not produce output that sets DOCKER_TLS_VERIFY=1. running this command worked:\nexport DOCKER_TLS_VERIFY=1\n. ",
    "metalivedev": "Was testing beta 1.3 installer.\n. ",
    "zeeyang": "@SvenDowideit unfortunately vm guest tools will conflict when installed on the same image. We will need different ISOs to target specific hypervisors.\nHow about we add Dockerfile.vbox, Dockerfile.ovt, etc, at the root. The ISOs will be stored in these branch images and you can cat it like before. \n. Here is the excerpt from Virtualbox's docs. https://wiki.archlinux.org/index.php/VirtualBox#Remove_additions\nI don't think anyone has done a thorough test of mixing different vm guest tools. Considering the possibility of supporting hyper-v, parallels, qemu, etc down the road, it's going to bloat if they are all in the same iso.\nThe automount-shares and boot-local script will also need to be adapted for each guest tool, so having a separate dockerfile directory is the best way to go.\n. @SvenDowideit @tianon can you take a look at this and see if you are happy with the layout. I flattened rootfs and moved virtualbox to its own Dockerfile.\nhttps://github.com/vmware/boot2docker/tree/vmwaretools\n. @SvenDowideit sorry I didn't communicate this clearly enough - this proposal is running make_iso during container build time, but it was just pushed down to the vendor specific builds. The main dockerfile is meant to be an intermediate image. https://github.com/vmware/boot2docker/blob/vmwaretools/virtualbox/Dockerfile#L29-L30\n@tianon as far as I know, vm tools probes for a vcpu registry and exists gracefully if it's not running in vmware hypervisor. I'm sure others tools do something similar. My concern was as b2d include more vendor tools, it only takes one misbehaving tool to ruin it for everyone.\nAnother point to consider is that each vendor tool will add bits to the boot script. Shell scripts can get messy over time. I think letting each tool overlay it's rootfs and build separate ISOs is a cleaner longterm solution. \nI can open a PR with all the tools in one iso, if you guys want more time to think about this. I just want to get the vm tools upstream soon so it will unblock the Fusion driver work. Just let me know.\n. @SvenDowideit sorry I didn't communicate this clearly enough - this proposal is running make_iso during container build time, but it was just pushed down to the vendor specific builds. The main dockerfile is meant to be an intermediate image. https://github.com/vmware/boot2docker/blob/vmwaretools/virtualbox/Dockerfile#L29-L30\n@tianon as far as I know, vm tools probes for a vcpu registry and exists gracefully if it's not running in vmware hypervisor. I'm sure others tools do something similar. My concern was as b2d include more vendor tools, it only takes one misbehaving tool to ruin it for everyone.\nAnother point to consider is that each vendor tool will add bits to the boot script. Shell scripts can get messy over time. I think letting each tool overlay it's rootfs and build separate ISOs is a cleaner longterm solution. \nI can open a PR with all the tools in one iso, if you guys want more time to think about this. I just want to get the vm tools upstream soon so it will unblock the Fusion driver work. Just let me know.\n. I'm closing this pull in favor of the single iso path. See https://github.com/boot2docker/boot2docker/pull/638\n. @SvenDowideit what if we get rid of the magic string business. In automount script, it will just format the first blank raw device...\n. It looks like boot2docker is using the tar as the block device. The magic string is just one file in the tar, along with the ssh keys. So it's possible to safely remove the magic string file, and still retain the ability to pass files via the tar.\nThe magic string is only necessary if you are planning on attaching multiple vmdks. I can whip up a quick pull request to demonstrate the changes.\n. I'm still not convinced the magic string is necessary. In cases where users are using cli with old ISO, it's only a problem if the user deletes the existing vm and use the ISO to boot a fresh disk. In that case the cli should just update the ISO first. \nIt could be done in two stages: remove the magic string check in automount first. Give users one or two release cycles to get the latest ISO, and then remove the magic string writer in the cli. \nWith the none virtualized b2d use case, b2d cli should just set the disk label instead of going through the magic string detour. \n. @tianon the cli uses vm tools (ovt) for two things: get guest ip and drop ssh keys (put files). \nAs @jamtur01 pointed out, 1 and 2 are cli driver deficiencies. There's a lot of tech debt in the cli driver, and I started a new go lib to address those issues. https://github.com/zeeyang/fusia\nI'm not sure what @jamtur01 mean by 3. Why would you need to run virtual box tools inside fusion?\ntldr. this ovt patch is needed. cli fusion driver needs more love.\n. @jamtur01 ah. can you do a quick test with this iso. it will help us pin down if it's your iso build or the vmw environment. https://github.com/cloudnativeapps/boot2docker/releases\n. @tianon i think @oliverkurth already listed the technical reasons why this patch is needed in a previous comment. The issues @jamtur01 pointed out were cli issues that have been addressed in the docker machine fusion driver.\n. @SvenDowideit we definitely take user's data disks very seriously. When using b2d-cli or docker machine, we have completely control over the VM's lifecycle - there is no risk there.\nI assume you are more concerned with people booting up physical machines using b2d iso. In that case, automount will only grab the first blank raw block device, so there's no danger of data loss. The only annoyance would be if user happens to have several blank disks attached, and want to choose a particular one. In that case, the best approach is manually format the disk, and apply the boot2docker-data disk label.\n. ",
    "ewindisch": "TLS authentication is now required in boot2docker 1.3. We believe that boot2docker is principally used on desktop systems where users also tend to use web browsers. It was determined that without authentication to the Docker socket, browsers could access and control Docker and, subsequently, perform management on Docker containers. The Docker API is equivalent to root access on the system and unauthenticated access to this API is ill-advised. For that reason, we have made authentication a default requirement. We issued two CVEs related to this change (CVE-2014-5280 and CVE-2014-5279).\nYou may find the CVEs here: https://groups.google.com/forum/#!topic/docker-announce/aQoVmQlcE0A\n. I'm concerned that tool authors will be building solutions for end-users that won't know any different.\nIt might be unfortunate, but why can such developers simply not ask their users not to upgrade to boot2docker 1.3 until their tools have been upgraded? The tools should be updated to use TLS auth anyway.\nAlso, I believe some of this comes from users not understanding why we made the change... I'll reply back to them to include information on the CVEs.\n. It's ugly for the users that want it, but they could run a container with volume and port mapping, using socat to proxy the unix socket back to the host as a TCP port. Again, it's ugly, but it's a solution that requires an explicit action on the user's side and isn't opening a can of worms for someone to (easily) vendor boot2docker in an insecure way.\n. @zeus - You have Ansible talking to the TCP socket?  Ansible should support TLS. It is based on docker-py which has TLS support. If there is a bug in Ansible, I'd personally be interested in seeing the bug report and I will help track it. Lets not devolve further into fixing Ansible in this thread, but lets break this discussion out (ewindisch at docker dot com)\n. http://seclists.org/oss-sec/2015/q2/589\n. http://seclists.org/oss-sec/2015/q2/589\n. They're there:\ncommit ef20854f7600f5019f1869fb331f73281f834257\ncommit 9993cbfde223f91ad29c5d002f6711fceff75219\nOn Mon, Jun 8, 2015 at 5:12 PM, Tianon Gravi notifications@github.com\nwrote:\n\nHmm, I'm looking at the changelog for 4.0.5\nhttps://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.0.5 and not\nseeing the fix -- did I miss something?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/902#issuecomment-110141914\n.\n. \n",
    "detro": "In addition from this change being forceful (and inconsiderate), I have had another issue: boot2docker always downloads the latest image. So even if I downgrate to 1.1.2, still it's going to fetch 1.3.0. Causing total breakage of my dev environment.\nVersion 1.1.2 should dowload version 1.1.2.\nI had to manually put the 1.1.2 .iso into my .boot2docker directory to resume work.\nIt's ridiculous how many times Docker has caused API incompatibility from one version to another.\nAnd, if you look to the Release Notes, very little is said about those choices.\nI TOTALLY see the need for TLS in production, and offering it even as part of boot2docker makes sense. But you guys have reached enough ciritical mass now: you need to make changes slowly. Particularly if we are not talking about MAJOR changes!\nI'm still using 1.1.2! 1.2.0 port mapping for http is gone and creates all sort of issues for us while developing on Mac. Think about it...\n. Yep\nOn 20 Oct 2014 18:33, \"Sven Dowideit\" notifications@github.com wrote:\n\n@detro https://github.com/detro what do you mean port mapping is gone ?\n(do you mean the boot2docker port forwarding on localhost?)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/571#issuecomment-59866709\n.\n. @SvenDowideit I finally can take a sit and be a bit more \"verbose\".\nI appreciate the quality of the changes. And the need.\n\nWhat I'm complaining about (and I think I'm not alone here) is the procedure with which changes seems to be done in this project and even the Docker project.\nAssuming that all the ppl that are adopting it are constantly up to date with the \"community-to-dev-to-community\" comms is wrong: Docker has quickly (maybe too quickly) grown into a commonly known, production tool.\nUnless you (a generic \"you\") are in the business of Container technologies, your interest isn't following Docker latest/greatest news - it's about using Docker to deploy your stuff on it.\nWhen a new version is released, and the version is a 1.x.y, you assume a few things (common in other project) 1) if I switch to it, it's not going to break my code as it should not have API or behavioural changes 2) I'll look at the Changelog just so I'm sure I can switch safely.\nInstead, in 1.2.0, all of a sudden, this port mapping changed for boot2docker: that immediately rendered all our HTTP-based Docker client (that bound to localhost:2375) dead in the water. We pocked things around, and figured what happened. A good half day of work was gone just because this little change was made \"default behaviour\".\nBear in mind, all the production servers were fine: was the devs that were affected.\nNot 1.3.0 makes the use of certificates mandatory. The http-based client is dead in the water again, this time requiring code changes so that we probably can't quickly patch and keep going.\nIn production, it's definitely something we want to spend time and setup, but it's now going to be put on hold until \"we have time\". The fact that to use 1.3.0 on my dev box I got to spend time reworking our client it's just a no brainer for \"I can't do this right now - too many other things to do\".\nFeel free to add new features. Fix bugs. Improve security.\nBut you should make an effort at 1) maintaining compatibility with what's running (unless you are releasing a 2.x) and 2) boot2docker is a development tool - I don't need to setup certificates to communicated with a docker host that is running in my VirtualBox.\nIn short, you are being your own enemy. How long before someone else decides to make their own LXC technology, building upon all the lessons you guys have learned in the meantime?\nDocker is a tool used by devs and DevOps: you need to pass on the \"feeling\" that is a reliable and solid technology. Not the feeling that every release is a roller-coaster. It really works against your amazing effort.\nAll that said, keep making awesome. Maybe a little slower if you can :)\n. @SvenDowideit I finally can take a sit and be a bit more \"verbose\".\nI appreciate the quality of the changes. And the need.\nWhat I'm complaining about (and I think I'm not alone here) is the procedure with which changes seems to be done in this project and even the Docker project.\nAssuming that all the ppl that are adopting it are constantly up to date with the \"community-to-dev-to-community\" comms is wrong: Docker has quickly (maybe too quickly) grown into a commonly known, production tool.\nUnless you (a generic \"you\") are in the business of Container technologies, your interest isn't following Docker latest/greatest news - it's about using Docker to deploy your stuff on it.\nWhen a new version is released, and the version is a 1.x.y, you assume a few things (common in other project) 1) if I switch to it, it's not going to break my code as it should not have API or behavioural changes 2) I'll look at the Changelog just so I'm sure I can switch safely.\nInstead, in 1.2.0, all of a sudden, this port mapping changed for boot2docker: that immediately rendered all our HTTP-based Docker client (that bound to localhost:2375) dead in the water. We pocked things around, and figured what happened. A good half day of work was gone just because this little change was made \"default behaviour\".\nBear in mind, all the production servers were fine: was the devs that were affected.\nNot 1.3.0 makes the use of certificates mandatory. The http-based client is dead in the water again, this time requiring code changes so that we probably can't quickly patch and keep going.\nIn production, it's definitely something we want to spend time and setup, but it's now going to be put on hold until \"we have time\". The fact that to use 1.3.0 on my dev box I got to spend time reworking our client it's just a no brainer for \"I can't do this right now - too many other things to do\".\nFeel free to add new features. Fix bugs. Improve security.\nBut you should make an effort at 1) maintaining compatibility with what's running (unless you are releasing a 2.x) and 2) boot2docker is a development tool - I don't need to setup certificates to communicated with a docker host that is running in my VirtualBox.\nIn short, you are being your own enemy. How long before someone else decides to make their own LXC technology, building upon all the lessons you guys have learned in the meantime?\nDocker is a tool used by devs and DevOps: you need to pass on the \"feeling\" that is a reliable and solid technology. Not the feeling that every release is a roller-coaster. It really works against your amazing effort.\nAll that said, keep making awesome. Maybe a little slower if you can :)\n. @buuhsmead thanks for that\n. ",
    "buuhsmead": "Made a asciicast https://asciinema.org/a/13542 to show how to disable TLS in 1.3.1 on OSX.\n. ",
    "RichardHightower": "sh\ndocker run -d -p 2375:2375 --volume=/var/run/docker.sock:/var/run/docker.sock --name=docker-http sequenceiq/socat\nFixes problem for me and we tried every damn thing. That works. \n. ",
    "zeus": "@ewindisch for example:\nboot2docker 1.3 enable host directory mapping which is HUGE improvement\nAnsible (which is widely used) still not support TLS. 'proxy the unix socket' makes API calls work, but when i ran direct docker from ansible it fails since it tries to work by TLS over proxy. Making it works takes too much time (and add useless code) than temporary disabling TLS.\n. @ewindisch for example:\nboot2docker 1.3 enable host directory mapping which is HUGE improvement\nAnsible (which is widely used) still not support TLS. 'proxy the unix socket' makes API calls work, but when i ran direct docker from ansible it fails since it tries to work by TLS over proxy. Making it works takes too much time (and add useless code) than temporary disabling TLS.\n. ",
    "Priyanky": "@lalyos , Importing in PKCS #12 format worked. But having trouble wrapping head around this. Thank You!. \n1. Why the curl command does not work? 2. And the combination form required by the browser. I doubt is there anything fundamentally wrong the way certs are generated in boot2docker\n. @lalyos , Importing in PKCS #12 format worked. But having trouble wrapping head around this. Thank You!. \n1. Why the curl command does not work? 2. And the combination form required by the browser. I doubt is there anything fundamentally wrong the way certs are generated in boot2docker\n. ",
    "davidthornton": "Hey all, I can confirm that OS X El Capitan 10.11.1 still has a bug in its curl implementation of https. Great.\nI'm getting the same OSStatus -25299. Does someone want to let Cupertino know? haha.\n. ",
    "raeesbhatti": "OS X El Capitan 10.11.6 has this bug too\n. ",
    "xionglun": "Thanks, it's OK now!\n. Thanks, it's OK now!\n. ",
    "mcandre": "\nboot2docker upgrade is your friend :)\n\nWorks for me, thank you @SvenDowideit \n. ",
    "bigkraig": "I've got this same problem. I was able to connect to the daemon by adding a port forwarding rule for 2376 and setting DOCKER_HOST to tcp://127.0.0.1:2376.\n. ",
    "bluej100": "+1 got this problem, deleted the vm, everything is fine\n. ",
    "rclayton-the-terrible": "Just ran into this.  The solution was to boot2docker delete and then to reinitialize the VM.\n. ",
    "bodiam": "Same here. My fix was:\nboot2docker delete\nboot2docker init\nboot2docker up\n$(boot2docker shellinit)\nafter that, docker ps worked!\n. ",
    "matthewpbyrne": "What @bodiam says did it for me, but it didn't work the first time.\n. ",
    "aroraumang": "Thanks @bodiam. It worked.\n. ",
    "staxmanade": "I concur with @matthewpbyrne, I had to run @bodiam's steps but it didn't work the first time - starting it over made it work the second time.\n. ",
    "mihneasim": "My steps:\n$ boot2docker init\n$ boot2docker start\nAuto detection of the VM's Docker socket failed.\n$ boot2docker -v up\ngrep: /proc/1159/cmdline: No such file or directory\nalthough\n$ boot2docker -v status                                                                                                                        2 \nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/21 09:47:08 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nso then i followed your \"hard reset\":\n$ boot2docker delete\n$ boot2docker init\n$ boot2docker start\n$ boot2docker -v status\nboot2docker -v status\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/21 09:50:54 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nrunning\nbut then again\n$ boot2docker -v shellinit\ngrep: /proc/1117/cmdline: No such file or directory\ngot it working with one more \n$ boot2docker stop; boot2docker start\n. My steps:\n$ boot2docker init\n$ boot2docker start\nAuto detection of the VM's Docker socket failed.\n$ boot2docker -v up\ngrep: /proc/1159/cmdline: No such file or directory\nalthough\n$ boot2docker -v status                                                                                                                        2 \nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/21 09:47:08 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nso then i followed your \"hard reset\":\n$ boot2docker delete\n$ boot2docker init\n$ boot2docker start\n$ boot2docker -v status\nboot2docker -v status\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/21 09:50:54 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nrunning\nbut then again\n$ boot2docker -v shellinit\ngrep: /proc/1117/cmdline: No such file or directory\ngot it working with one more \n$ boot2docker stop; boot2docker start\n. ",
    "scottstanfield": "I also followed @mihneasim steps to get mine working. The stop then start fixed the endless grep problem. Thanks @staxmanade as well :)\n. ",
    "schmunk42": "I am getting the same error like @emhagman after upgrading to 1.7.0\n. I needed to update my docker daemon options, like so:\nEXTRA_ARGS=\"--insecure-registry registry.example.com --insecure-registry https://registry.example.com/v1/\"\nto work with docker and docker-compose, also the trailing slash seems to be required since docker 1.6.\n. On an Ubuntu installation service network restart could be a quick-fix, does someone know the equivalent for boot2docker?\n. @RomanSaveljev Thank you! I'll check it, when I have the problem the next time.\nThe command below works, I don't know yet if it will fix the problem\ndocker-machine ssh $(docker-machine active) \"sudo udhcpc SIGUSR1 && sudo /etc/init.d/docker restart\"\n@jakirkham Is it a new command like docker-machine update-dns?\n. I just came home and had the described problem.\nFirst run of my command above threw this error:\nLoading host from store failed: Host does not exist: \"WARNING\"\nFor whatever reason?!\nBut the second one worked and fixed the issue! :ok:\n. Nice! \nThese options are fairly new, I had 0.5.2. Now after an update, I can also see them :)\n. ",
    "masoudgit": "Remove ~/.boot2docker and do boot2docker up again.\n. ",
    "aChase55": "^^^ THANK YOU!!\n. When can this update be expected? The software is almost impossible to work with as is.\n. ",
    "jgarverick": "After perusing through some other posts, I noticed that someone referenced port 2376, which I switched to and was able to connect on.  However, when I call /info, I receive the following:\n\u0015\u0001\ufffd\nI don't remember seeing anything in the release notes about the port number being changed, and I don't understand why I'm getting gibberish when trying to use the API.  I even get that output when I use curl, both when ssh'd into the VM as well as calling it directly from the command line.\n. After perusing through some other posts, I noticed that someone referenced port 2376, which I switched to and was able to connect on.  However, when I call /info, I receive the following:\n\u0015\u0001\ufffd\nI don't remember seeing anything in the release notes about the port number being changed, and I don't understand why I'm getting gibberish when trying to use the API.  I even get that output when I use curl, both when ssh'd into the VM as well as calling it directly from the command line.\n. I was able to run shellinit, and that did not seem to do anything for my issue.  Instead of it rendering to the browser, now it forces me to download the response, and the response is still the same as before.  I have run it through Fiddler as well, and I get the following:\n\n. I was able to run shellinit, and that did not seem to do anything for my issue.  Instead of it rendering to the browser, now it forces me to download the response, and the response is still the same as before.  I have run it through Fiddler as well, and I get the following:\n\n. I should mention I'm a bit of a TLS noob. I'm going to try using WireShark and/or running it through some other tests. Might just be a PEBCAK thing.\n. I should mention I'm a bit of a TLS noob. I'm going to try using WireShark and/or running it through some other tests. Might just be a PEBCAK thing.\n. Thanks, Sven.  That did work for me using curl.  I'm still not able to get this to work properly in the browser, though.  I'll close this out for now in any event.\n. ",
    "kevana": "In 1.3.0 TLS is enabled by default, that may be the issue if you're getting a message like this:\nGet http://192.168.59.103:2376/v1.15/info: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\nThe solution on OS X is to run:\n$(boot2docker shellinit)\nI'm not sure if that works on Windows.\n. In 1.3.0 TLS is enabled by default, that may be the issue if you're getting a message like this:\nGet http://192.168.59.103:2376/v1.15/info: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\nThe solution on OS X is to run:\n$(boot2docker shellinit)\nI'm not sure if that works on Windows.\n. Is this it? \nhttps://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/usr/local/etc/init.d/docker#L98\n. Is this it? \nhttps://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/usr/local/etc/init.d/docker#L98\n. ",
    "digitalronin": "Sorry, I was being an idiot - I had the port mappings the wrong way round. Using \"-p 8888:80\" works just fine.\n. Sorry, I was being an idiot - I had the port mappings the wrong way round. Using \"-p 8888:80\" works just fine.\n. ",
    "gfrare": "@digitalronin thanks a lot!\nI'm reading the same guide and I don't understand why nginx refuse connection from Curl on Osx...\nI've forgotten to check the IP with boot2docker\n:D\n. ",
    "mikemilano": "Not sure what it was earlier, but I re-pulled the image and ran it in bash mode again. It's all there, hmm.  Thanks for the reply.\n. Not sure what it was earlier, but I re-pulled the image and ran it in bash mode again. It's all there, hmm.  Thanks for the reply.\n. ",
    "rossedman": "@naomik Thank you so much. Committed to my .dotfiles to keep my sanity in check. :+1: \n. +1. I have encountered this problem on Vagrant before as well. Shared files are always the issue. Would love to see this fixed.\n. +1. I have encountered this problem on Vagrant before as well. Shared files are always the issue. Would love to see this fixed.\n. ",
    "mnapoli": "I think I'm having the same issue (latest versions of everything, installed today).\nIn the container, in a directory shared with the host (i.e. mounted through the virtualbox VM):\n- root user can write files\n- www-data user can't, even in a directory with 777 permissions\nIs that normal or not? (i.e. I did something wrong)\n. @tianon Now try with a different user and it will not work.\nThe big problem is that usually, Nginx or MySQL or whatever will run as a different user (www-data, mysql\u2026) so it's impossible to use Docker at all (at least in those situations).\n. @ludofleury thank you! I need to give another try at docker\u2026 That whole boot2docker with virtualbox + problems with write permissions was really a cold shower, lost so much time on this and then gave up\u2026 I need to find another week end to spare :p\n. @ludofleury thank you! I need to give another try at docker\u2026 That whole boot2docker with virtualbox + problems with write permissions was really a cold shower, lost so much time on this and then gave up\u2026 I need to find another week end to spare :p\n. @danros it seems for me that boot2docker doesn't use the /var/lib/boot2docker/profile file. However if I run those commands manually inside the boot2docker VM (boot2docker ssh) it works:\numount /Users\nmount -t vboxsf -o uid=33,gid=33 Users /Users\nAnyone knows where to store these commands in a file so that boot2docker runs this every time?\n. After using the hack mentioned here, I realized that vboxfs performances are just too terrible. It's unusable for bigger applications.\nI am now using NFS mounts instead. The whole thing is described here: http://syskall.com/using-boot2docker-using-nfs-instead-of-vboxsf/ (the instructions in this thread were incomplete for me).\nNo permission issues (for now) and a little faster I/O.\n. Yet another update people: I've started using Dinghy instead of Boot2docker and it rocks!\nIt's amazingly fast (it uses NFS, but I don't know why it's even faster than boot2docker with NFS on my machine) and no permission issues.\n. @pperez I just tried docker-compose run mycontainer chmod 777 /app/tmp/logdump.sql and the file went from -rw-rw-r-- to -rwxrwxrwx (on OS X) so I guess the answer is yes :)\n. +1 been pulling my hair all day on this.\n. ",
    "lukaswelte": "So means if I create a cache folder for example that writes new files and folders to disk during execution, I cannot do this right now?\nCause I experience the same problem as @mnapoli does..\n. So can I use this command to set the /Users share to be writeable?\nOr do I have to create a special share for every application that needs to be able to write in a folder?\n. So can I use this command to set the /Users share to be writeable?\nOr do I have to create a special share for every application that needs to be able to write in a folder?\n. Thanks for the workaround.\nAlthough it would be great to have that behavior built into the boot2docker script (don\u2019t want coworkers to do much extra action).\n. Thanks for the workaround.\nAlthough it would be great to have that behavior built into the boot2docker script (don\u2019t want coworkers to do much extra action).\n. Are there any news on this?\nI have no really good idea how to solve it, but this issue holds me back from switching to boot2docker, cause I just cannot run my apache2 docker container.. \n. @vmaatta Would be awesome if you could share your script.\nI am not that familiar with virtual box.\n@SvenDowideit Volume containers is no real option as we use fig for the development process and only some people use macs. So it would make the process more painful for the non-mac users.\n. ",
    "karolsojko": "I'm experiencing the same issue. Apache on my container can't write to neither cache or log folders located in the application that is bind mounted. \nI'm using Docker 1.3.1 - is this in any nearest future plans to be fixed ?\n. ",
    "bradgessler": "I've approached this problem with a slightly different work-around since I'm actually creating new docker images. Basically, you'll want to change the uid on the user you want to have access the host-mounted volume to 1000.\nThat means you'll want to add something like\n```\nSample docker file, mysql is the example login.\nRUN usermod -u 1000 mysql\n```\nThen everything seems to work OK.\n. ",
    "txchen": "Any updates on this?\nWith this bug, postgresql cannot start if the data folder is mounted as volume. Because postgresql requires data folder to have 700 permission, and if the folder is mounted as volume (boot2docker, mac), chown/chmod cannot work at all, thus the service failed to start.\nIMHO, this is a blocking bug.\n. @vmaatta thanks for your input! I will try to switch to data volume container solution, although I still think old style (volume to local folder) is much more convenient. \n. ",
    "splio-kjoyeux": "Hello. \nAny news on this ? It's really inconvenient. \nThanks.\n. Hello. \nAny news on this ? It's really inconvenient. \nThanks.\n. ",
    "theitsmith": "I'm experiencing the same issue with Apache 2. In my case, though, I'm not using boot2docker--I'm running Docker inside a CentOS 7 VirtualBox VM.\nWith this, the default UID for VirtualBox's Shared Folders (within the VM) is root with a GID of vboxsf. In order for the VM to write to the Shared Folder, the non-root user performing the writing must be a member of the vboxsf group.\nThe way I worked around this problem of not being able to write to Shared Folders from within the Docker container was to change the GID of the apache user (defaults to 48) within the Docker container to match that of the vboxsf group (996, in my case) in the VM.\nThis allows working around the problem without making any changes to the host or the VM and only requires one small change within the container, something that should be fairly easy to script.\nI know this discussion is related to boot2docker specifically, but there are some situations in which boot2docker isn't the best choice--in my case, there are some kernel features missing that were affecting my containers.\nAs such, I thought it might be important to also consider the affects of this issue outside the context of boot2docker so that the final solution applies there as well. :)\n. I'm experiencing the same issue with Apache 2. In my case, though, I'm not using boot2docker--I'm running Docker inside a CentOS 7 VirtualBox VM.\nWith this, the default UID for VirtualBox's Shared Folders (within the VM) is root with a GID of vboxsf. In order for the VM to write to the Shared Folder, the non-root user performing the writing must be a member of the vboxsf group.\nThe way I worked around this problem of not being able to write to Shared Folders from within the Docker container was to change the GID of the apache user (defaults to 48) within the Docker container to match that of the vboxsf group (996, in my case) in the VM.\nThis allows working around the problem without making any changes to the host or the VM and only requires one small change within the container, something that should be fairly easy to script.\nI know this discussion is related to boot2docker specifically, but there are some situations in which boot2docker isn't the best choice--in my case, there are some kernel features missing that were affecting my containers.\nAs such, I thought it might be important to also consider the affects of this issue outside the context of boot2docker so that the final solution applies there as well. :)\n. See my comment above for a workaround: http://github.com/boot2docker/boot2docker/issues/581#issuecomment-63724242\nThis is easily scriptable during container creation (or applied afterwards). I use the following in my start.sh:\ngroupmod --gidstat --format=%g /srv/volumeapache\n. Agreed--UID 1000 will work for b2d. However, this may not work in other environments--in CentOS, for example, the mounted volume's UID is 0.\nVirtualBox's convention is to always set the Shared Folders group to \"vboxfs\" in the VM. To allow a VM user to write to the Shared Folder, they advise adding said user to the vboxfs group. Carrying this same convention into the container, I think, adds additional portability beyond just b2d--I can't use b2d, for example, due to kernel compatibility issues with the services I need to containerize.\nAlternatively, I've had success creating a raw disk image in Shared Folders and then mounting that disk image directly into the container (though I'm still experimenting some with this). This allows the container to do pretty much whatever it needs to with the mounted disk image--which includes choosing it's own file system format, setting user and group permissions, setting SELinux contexts, and so on.\nUsing a raw disk image like this is easy to do and allows additional portability between different hypervisors since neither Docker nor the containers have to care much about how the hypervisor shares host folders, which host file system is in use, etc, etc.\nBut going back to the post of @joeellis, prestashop needs write access to its data directory (per their documentation, prestashop doesn't care about the UID or GID--it just needs to be able to write to its data directory)--since he's using b2d, setting either the UID or the GID will work.\n. ",
    "crucialfelix": "I tried vagrant with docker provider and was able to share my data folder and start PostgreSQL. I am guessing that their folder sharing is more robust. This is always an issue with VMs. And b2d is a vm with a container inside. Two levels of folder sharing.\nBoot2dpcker still seems more appropriate and I can ssh in and play more.  But give vagrant a try too. In the end I'm sure b2d will solve this issue.\n. To add to this, not only do chown/chmod not have any effect from inside the container, they also do not have any affect from the boot2docker vm shell.  so its natural that the container has no ability to modifiy since the host (boot2docker VM) cannot modify the files on the real host (OS X)\nI guess this is a read only mount ?\nPermissions show the files as owned by docker:\ndocker@boot2docker:/Users/crucial/shared/postgres$ ls -la\n-rwxr-xr-x    1 docker   staff        19130 Nov  3  2013 postgresql.conf\nBut can't touch this:\n```\nno error message, but does not actually touch the file\ndocker@boot2docker:/Users/crucial/shared/postgres$ touch /Users/crucial/shared/postgres/postgresql.conf\nsudo make me a sandwich\ndocker@boot2docker:/Users/crucial/shared/postgres$ sudo touch postgresql.conf\n```\nStill untouched:\n-rwxr-xr-x    1 docker   staff        19130 Nov  3  2013 postgresql.conf\ncat throws an error:\ncat \"# added a line\" >> /Users/crucial/shared/postgres/postgresql.conf\n-sh: can't create /Users/crucial/shared/postgres/postgresql.conf: Operation not permitted\nchown and chmod of course do not work.  although I'm doing this on a large postgres data directory and it does take a while to run. so it is doing work. but there is no change \n. ",
    "joeellis": "Been hitting this bug hard in 1.3.2 and not sure what else to do.  \nFor context, I'm trying to mount a data volume container in an apache container under /var/www and no amount of chown -R www-data:www-data /var/www/myvolume will change these permissions over.  \nThis bug is particularly blocking because the site I'm trying to install there, prestashop, refuses to complete it's install process until all permissions in it's directory are set to www-data:www-data, which I can't do.\nAnyone have advice on how to fix this?  Or maybe I'm just doing it all wrong?\n. ",
    "tkoeppen": "We also tried running postgresql (9.3) with boot2docker (1.3.0) and failed\ndocker run --rm -i -t -v /Users/<user>/dev/data:/var/lib/postgresql\nThis small script shows that chown does not work. \n\necho \"DATADIR=$DATADIR\"\n   echo \"Initializing Postgres Database at $DATADIR\"\n   id\n   su -c \"chown -R postgres:postgres $DATADIR\"\n   ls -la $DATADIR\n   su -c \"chown -R 102:106 $DATADIR\"\n   ls -la $DATADIR\n   su postgres sh -c \"mkdir -p $DATADIR/test\"\n   su postgres sh -c \"id\"\n\nThe result:\n\nDATADIR=/var/lib/postgresql/9.3/main\nInitializing Postgres Database at /var/lib/postgresql/9.3/main\nuid=0(root) gid=0(root) groups=0(root)\ntotal 0\ndrwxr-xr-x 1 1000 staff  68 Nov 29 10:43 .\ndrwxr-xr-x 1 1000 staff 102 Nov 29 10:43 ..\ntotal 0\ndrwxr-xr-x 1 1000 staff  68 Nov 29 10:43 .\ndrwxr-xr-x 1 1000 staff 102 Nov 29 10:43 ..\nmkdir: cannot create directory '/var/lib/postgresql/9.3/main/test': Permission denied\nuid=102(postgres) gid=106(postgres) groups=106(postgres),105(ssl-cert)\n\nThe only workaround I found is to use /tmp as DATADIR.\ndocker run --rm -i -t -v /tmp:/var/lib/postgresql\nwhich makes of course no sense as I can't persist my postgres data on the host system.\n. ",
    "paolomainardi": "+1 same issue here...\n. Maybe related with this issue:http://superuser.com/questions/640027/why-cant-i-chown-a-virtualbox-shared-directory\n. @cnaicc remount is not a solution, containers should have access to multiple uid/gid and they need to be isolated by the host environment.\n. @Vrakfall switch to NFS to fix those issues.\n. @Vrakfall not really: http://mitchellh.com/comparing-filesystem-performance-in-virtual-machines nfs/samba is ever a better option.\n. @Vrakfall if you are using osx:\n1) Edit /etc/exports as follows:\n/Users -mapall=[youruser]:staff [boot2docker-vm-ip]\nWhere [youruser] is your localuser as reported by whoami and boot2docker-vm is the ip as reported by boot2docker ip\n2) Restart nfsd services:\nsudo nfsd stop && sudo nfsd start\n3) Create a script on boot2docker vm on /var/lib/boot2docker/bootlocal.sh: \n```\ndocker@boot2docker:~$ cat /var/lib/boot2docker/bootlocal.sh\n|/bin/bash\nsudo umount /Users\nsudo /usr/local/etc/init.d/nfs-client start\nsudo mount 192.168.59.3:/Users /Users -o rw,async,noatime,rsize=32768,wsize=32768,proto=tcp\n```\nYou're done.\n. And in the meanwhile i'm working on improving NFS/CIFS (samba) shares using FSCACHE kernel implementation, for boot2docker.\nIf you are curious/interested follow this thread: https://github.com/boot2docker/boot2docker/pull/699\n. Just try \"sudo su\"\nSorry for typos, sent by mobile.\nIl 17/feb/2015 10:11 \"J\u00e9r\u00e9my Lecocq\" notifications@github.com ha scritto:\n\nThanks for the help. Yes, I'm working on osx at work.\nIt feels I should copy it as root to /var/lib/boot2docker/bootlocal.sh\nbut I can't find the root password anywhere. The docker user can't write to\nthat directory or am I doing something wrong ?\nI tried this:\n$boot2docker ssh\n$cp /Users/osxUser/path/bootlocal.sh /var/lib/boot2docker/bootlocal.sh\ncp: overwrite '/var/lib/boot2docker/bootlocal.sh'? y\ncp: can't create '/var/lib/boot2docker/bootlocal.sh': Permission denied\nI'm forced to using command line because my goal is to create an automated\nscript.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-74637324\n.\n. Try to start nfs-rpc services:\n/usr/local/etc/init.d/nfs-client start\n\nSorry for typos, sent by mobile.\nIl 17/feb/2015 10:45 \"J\u00e9r\u00e9my Lecocq\" notifications@github.com ha scritto:\n\nWhat was I thinking. xD\nOh and thank you for #699\nhttps://github.com/boot2docker/boot2docker/pull/699. I'm indeed curious\nAND interested in any better way of sharing host's files to containers.\nI'm still stuck trying to mount the nfs share:\ndocker@boot2docker:~$ sudo sh /var/lib/boot2docker/bootlocal.sh\nmount: RPC: Remote system error - Connection refused\nmount: mounting 192.168.59.3:/Users on /Users failed: Bad file descriptor\nWeird because here is my /etc/exports file:\n/Users -mapall=stagiaire:staff 192.168.59.103(rw,non_root_squash,no_subtree_check)\nI'm used to Linux for a long time but I'm new to osx so I might be missing\nsome obvious points.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-74641358\n.\n. I see a \"permission denied\" on osx side.\nAre you sure that boot2docker IP on export is correct ? Have you tried to\nrestart nfsd on osx ?\n\nSorry for typos, sent by mobile.\nIl 17/feb/2015 10:53 \"J\u00e9r\u00e9my Lecocq\" notifications@github.com ha scritto:\n\nIt was done by the .sh script. Sorry, I've removed the obvious lines from\nthe output juste to make it clearer.\nHere the original one:\ndocker@boot2docker:~$ sudo sh /var/lib/boot2docker/bootlocal.sh\numount: can't umount /Users: Invalid argument #Because I tried it multiple times\n/usr/local/sbin/rpcbind is already running\n808\n/usr/local/sbin/rpc.statd is already running\n810\nStarting nfs client utilities.\nmount: 192.168.59.3:/Users failed, reason given by server: Permission denied\nmount: mounting 192.168.59.3:/Users on /Users failed: Bad file descriptor\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-74642427\n.\n. Try to remove the options you specified () on /etc/exports and restart the\nserver.\n\nSorry for typos, sent by mobile.\nIl 17/feb/2015 11:03 \"J\u00e9r\u00e9my Lecocq\" notifications@github.com ha scritto:\n\nYup for both statements.\n$ boot2docker ip\n192.168.59.103\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-74643694\n.\n. Hi guys!\n\nIf you want a better and native NFS implementation for boot2docker, please\ntest this MR: https://github.com/boot2docker/boot2docker/pull/699\nSorry for typos, sent by mobile.\nIl 07/giu/2015 20:12 \"Matthieu Napoli\" notifications@github.com ha\nscritto:\n\nAfter using the hack mentioned here, I realized that vboxfs performances\nare just too terrible. It's unusable for bigger applications.\nI am now using NFS mounts instead. The whole thing is described here:\nhttp://syskall.com/using-boot2docker-using-nfs-instead-of-vboxsf/ (the\ninstructions in this thread were incomplete for me).\nNo permission issues (for now) and a little faster I/O.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-109776789\n.\n. Just a quick update from my experiments, some weeks ago has been merged my PR about including fscache modules on boot2docker, starting from 1.7.0, this means that NFS+FSCache can achieve almost native FS performance.\n\nMR: https://github.com/boot2docker/boot2docker/pull/699\nHow to test it:\n1) Configure NFS on OSX side.\nEdit /etc/exports as follows:\n/Users -mapall=YOURUSER:staff BOOT2DOCKER_IP\nReplacing YOURUSER with the result of whoami and BOOT2DOCKER_IP with the result of boot2docker ip\nNow restart NFS service: sudo nfsd stop && sudo nfsd start\n2) Run cachefilesd container:\nboot2docker ssh \"sudo modprobe cachefiles\"\ndocker run --privileged -d -v /mnt/sda1/var/cache/fscache:/var/cache/fscache sparkfabrik/docker-cachefilesd\nYou should see something like this:\n% docker ps                                                                                                                                                                              \nCONTAINER ID        IMAGE                               COMMAND                CREATED              STATUS              PORTS                    NAMES\n5cc4416c9f58        cachefilesd:latest                  \"/bin/sh -c '/sbin/c   13 minutes ago       Up 13 minutes                                lonely_goldstine\n3) Unmount vboxfs and mount NFS with fsc attribute on:\nboot2docker ssh \"sudo umount /Users\"\nboot2docker ssh \"sudo /usr/local/etc/init.d/nfs-client start\"\nboot2docker ssh \"sudo mount.nfs 192.168.59.3:/Users /Users -o fsc,rw,async,noatime,rsize=32768,wsize=32768,proto=tcp\"\nIt's done, check if it works correctly, you should see something like this:\n```\n% boot2docker ssh 'sudo cat /proc/fs/nfsfs/volumes'                                                                                                                           \nNV SERVER   PORT DEV     FSID              FSC\nv3 c0a83b03  801 0:72    1000003:0         yes\n% boot2docker ssh 'sudo du -chs /mnt/sda1/var/cache/fscache'\n16.3M   /mnt/sda1/var/cache/fscache\n16.3M   total\n```\n. @mnapoli this article has been very helpful: http://chase-seibert.github.io/blog/2014/03/09/vagrant-cachefilesd.html\n. yes @YGuillemin it permits to avoid almost any permission problem and it works exactly as vboxfs does. (much faster :))\n. Guys to solve all the permissions problems you just have to switch to NFS\ninstead of vboxfs, it''s not really a matter of dlite or whatever.\nJust Google: docker-machine-nfs\nIl 10/mar/2016 15:04, \"Pierre\" notifications@github.com ha scritto:\n\n@JulienD https://github.com/JulienD : I had the same problem, I\nswitched to dlite https://github.com/nlf/dlite, it just works.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-194858242\n.\n. The architecture doesn't have any problem guys, the problem here is vboxfs,\njust change it to NFS.\nIl 10/mar/2016 16:29, \"Denis Denisov\" notifications@github.com ha scritto:\n@paolomainardi https://github.com/paolomainardi Another 3rd module\nhack, it doesn't fix the underlying architectural problem.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-194905233\n.\n. Yes, you can automate using this script:\nhttps://github.com/adlogix/docker-machine-nfs\n\nIt's a a matter of just a few commands.\nIl 13/mar/2016 13:39, \"Julien Dubreuil\" notifications@github.com ha\nscritto:\n\n@paolomainardi https://github.com/paolomainardi, any hint on how to do\nthat ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-195948941\n.\n. Same issue here, shared local volumes from osx to containers are unable to handle permissions properly, which makes boot2docker unusable for a local dev environments. I've also tried to work just with data containerz, but exporting them with NFS/samba is a performance nightmare, a simple 'git status' takes seconds.\n. This is.probably related:\n\nhttp://superuser.com/questions/640027/why-cant-i-chown-a-virtualbox-shared-directory\n. My temporary solution is to use NFS shared folders instead of vboxfs, as vagrant does.\nFrom osx \"/etc/exports\":\n/Users -mapall=[youruser]:[yourgroup] [boot2dockerip]\nFrom boot2docker umount/remount /Users using NFS:\nsudo umount /Users\nsudo /usr/local/etc/init.d/nfs-client start\nsudo mount 192.168.59.3:/Users /Users -o rw,async,noatime,rsize=32768,wsize=32768,proto=tcp\n. @mikeys let me see the error log output\n. @mikeys are you using fig ?\n. @mikeys are you using fig ?\n. @mikeys sometimes it happens, i really don't why. If you don't have anything important try to docker rm -fdocker ps -a -qand start them from scratch.\n. @mikeys sometimes it happens, i really don't why. If you don't have anything important try to `docker rm -f`docker ps -a -q and start them from scratch.\n. @mikeys i agree, maybe with docker-compose things will change :)\n. @mikeys i agree, maybe with docker-compose things will change :)\n. @mafintosh if can i ask, why do you want to mount the share as root user ?\n. Thanks @mafintosh i was asking because i'm experiencing the same problems mounting a local volume for Mysql, as the files are owned by \"1000:staff\" local vm user.\n. Yes you have to use NFS: https://github.com/boot2docker/boot2docker/issues/587#issuecomment-66935011\n. This is just the kernel part, than we need the userspace client: http://linux.die.net/man/8/cachefilesd\nAs a static binary to be included in the ISO or a tcz package but needs to be created as it does not exist right now.\n. thanks @tianon, let me check if the userspace client running in a container, very nice idea indeed, i'll back soon.\n. A bit late, but i've finally find some spare time to test it.\nBoot2docker built with fscache support (this PR):\nroot@boot2docker:/mnt/sda1/tmp# lsmod | grep cache\ncachefiles             32768  0\nfscache                36864  1 cachefiles\nCachefilesd dockerized Dockerfile:\nFROM ubuntu:14.04\nMAINTAINER Paolo Mainardi \"paolo@twinbit.it\"\nENV UPDATE_AT 1\nRUN apt-get update && apt-get -y install cachefilesd\nCMD /sbin/cachefilesd -n -f /etc/cachefilesd.conf -s\nRUN output:\n% docker run --privileged -it --rm cachefilesd                                                                                                                                         \nAbout to bind cache\nCacheFiles bind failed: errno 95 (Operation not supported)\nContainer dmesg:\nCacheFiles: Security denies permission to nominate security context: error -95\nCacheFiles: Security denies permission to nominate security context: error -95\nCacheFiles: Security denies permission to nominate security context: error -95\nThe problem seems related to this function: https://github.com/dz0ny/nims-kernel-ics/blob/master/fs/cachefiles/security.c#L34\nI'm still trying to understand what is going on, in the meanwhile if have any suggestions they are more than welcome.\n. Ok, it seems that cachefilesd client requires some selinux kernel configuration, i'm going to put everything together, i'll keep you posted.\n. Updated with required kernel configurations.\nI've also tried to run cachefilesd in a container and it works as expected.\n. @tianon any updates ?\n. Sorry for bumping up, any updates\u00a0@tianon @SvenDowideit ?\n. @tianon @SvenDowideit i've tried extensively in the meanwhile without any nasty side effects. Anyway SELINUX is disabled by default:\n+CONFIG_SECURITY_SELINUX_BOOTPARAM=y\n+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=0\n+CONFIG_SECURITY_SELINUX_DISABLE=y\n. @SvenDowideit yes, i'll do it ASAP.\n. Rebased, @SvenDowideit everything works as expected.\nIn order to test it, follows this steps.\n0) Rebuild the boot2docker.iso using this kernel_config.\n1) Configure NFS on OSX side.\nEdit /etc/exports as follows:\n/Users -mapall=YOURUSER:staff BOOT2DOCKER_IP\nReplacing YOURUSER with the result of whoami and BOOT2DOCKER_IP with the result of boot2docker ip\nNow restart NFS service: sudo nfsd stop && sudo nfsd start\n2) Create cachefilesd container and load the kernel module:\nFROM ubuntu:14.04\nMAINTAINER Paolo Mainardi \"paolo@twinbit.it\"\nENV UPDATE_AT 1\nRUN apt-get update && apt-get -y install cachefilesd\nCMD /sbin/cachefilesd -n -f /etc/cachefilesd.conf -s\nCompile and run:\nboot2docker ssh \"sudo modprobe cachefiles\"\ndocker build -t cachefilesd .\ndocker run --privileged -d -v /mnt/sda1/var/cache/fscache:/var/cache/fscache cachefilesd\nYou should see something like this:\n% docker ps                                                                                                                                                                              \nCONTAINER ID        IMAGE                               COMMAND                CREATED              STATUS              PORTS                    NAMES\n5cc4416c9f58        cachefilesd:latest                  \"/bin/sh -c '/sbin/c   13 minutes ago       Up 13 minutes                                lonely_goldstine\n3) Unmount vboxfs and mount NFS with fsc attribute on:\nboot2docker ssh 'sudo umount /Users'\nboot2docker ssh 'sudo /usr/local/etc/init.d/nfs-client start'\nboot2docker ssh 'sudo mount.nfs BOOT2DOCKER_IP:/Users /Users -o fsc,rw,async,noatime,rsize=32768,wsize=32768,proto=tcp'\nWhere BOOT2DOCKER_IP\u00a0is the result of boot2docker ip.\nCheck if it works correctly, you should see something like this:\n```\n% boot2docker ssh 'sudo cat /proc/fs/nfsfs/volumes'                                                                                                                           \nNV SERVER   PORT DEV     FSID              FSC\nv3 c0a83b03  801 0:72    1000003:0         yes\n% boot2docker ssh 'sudo du -chs /mnt/sda1/var/cache/fscache'\n16.3M   /mnt/sda1/var/cache/fscache\n16.3M   total\n```\n. Rebased, @SvenDowideit everything works as expected.\nIn order to test it, follows this steps.\n0) Rebuild the boot2docker.iso using this kernel_config.\n1) Configure NFS on OSX side.\nEdit /etc/exports as follows:\n/Users -mapall=YOURUSER:staff BOOT2DOCKER_IP\nReplacing YOURUSER with the result of whoami and BOOT2DOCKER_IP with the result of boot2docker ip\nNow restart NFS service: sudo nfsd stop && sudo nfsd start\n2) Create cachefilesd container and load the kernel module:\nFROM ubuntu:14.04\nMAINTAINER Paolo Mainardi \"paolo@twinbit.it\"\nENV UPDATE_AT 1\nRUN apt-get update && apt-get -y install cachefilesd\nCMD /sbin/cachefilesd -n -f /etc/cachefilesd.conf -s\nCompile and run:\nboot2docker ssh \"sudo modprobe cachefiles\"\ndocker build -t cachefilesd .\ndocker run --privileged -d -v /mnt/sda1/var/cache/fscache:/var/cache/fscache cachefilesd\nYou should see something like this:\n% docker ps                                                                                                                                                                              \nCONTAINER ID        IMAGE                               COMMAND                CREATED              STATUS              PORTS                    NAMES\n5cc4416c9f58        cachefilesd:latest                  \"/bin/sh -c '/sbin/c   13 minutes ago       Up 13 minutes                                lonely_goldstine\n3) Unmount vboxfs and mount NFS with fsc attribute on:\nboot2docker ssh 'sudo umount /Users'\nboot2docker ssh 'sudo /usr/local/etc/init.d/nfs-client start'\nboot2docker ssh 'sudo mount.nfs BOOT2DOCKER_IP:/Users /Users -o fsc,rw,async,noatime,rsize=32768,wsize=32768,proto=tcp'\nWhere BOOT2DOCKER_IP\u00a0is the result of boot2docker ip.\nCheck if it works correctly, you should see something like this:\n```\n% boot2docker ssh 'sudo cat /proc/fs/nfsfs/volumes'                                                                                                                           \nNV SERVER   PORT DEV     FSID              FSC\nv3 c0a83b03  801 0:72    1000003:0         yes\n% boot2docker ssh 'sudo du -chs /mnt/sda1/var/cache/fscache'\n16.3M   /mnt/sda1/var/cache/fscache\n16.3M   total\n```\n. ok @SvenDowideit thanks\n. related to #828 #817 #224 \n. Thanks for testing @SvenDowideit \n. Thanks for testing @SvenDowideit \n. Wow, thanks a lot guys!\nNow i nave to test new NFS volume driver and we need a simple way to choose vboxfs/NFS share.\n. @tianon i've changed the repository from fedoraproject to googlecode and update version to 1.12, which it seems to be the only available package.\n. @SvenDowideit we have to take in mind that google code will close 26th january 2016:\nhttp://google-opensource.blogspot.com.tr/2015/03/farewell-to-google-code.html\nCurrently, i don't know which one is the \"official\" port of google code on github.\n. @SvenDowideit we have to take in mind that google code will close 26th january 2016:\nhttp://google-opensource.blogspot.com.tr/2015/03/farewell-to-google-code.html\nCurrently, i don't know which one is the \"official\" port of google code on github.\n. Thanks a lot Simon :)\nSorry for typos, sent by mobile.\nIl 12/giu/2015 09:03 \"Simon van der Veldt\" notifications@github.com ha\nscritto:\n\nJust scanned the mailing list @ sourceforge back till 2006, there's\nnothing there that says that the project is abandoned or moved to google\ncode, only unanswered questions.\nThe same goes for Google Code, there's a issue there about Google Code\nclosing with no response, just like all the other 30+ issues.\nFor all intents and purposes this project seems to be abandoned.\nDo we really need it, open-vm-tools can be compiled without it\nhttps://github.com/vmware/open-vm-tools/blob/aaa20859c29247ca89a68f47c1a7b1a3b15bae09/open-vm-tools/configure.ac#L671\n.\nI've reached out to the e-mail addresses I could find, will see if we can\nget an answer :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/906#issuecomment-111369434\n.\n. @tianon removed libdnet dependency, changed aufs-util from SF (which not responds anymore) and removed libdnet dependency.\n. @tianon @SvenDowideit @simonvanderveldt \n. @frapposelli you are right, let me change it again.\n. @frapposelli updated.\n. @tianon i can open a new PR to hard lock a specific commit.\n. @tianon i can open a new PR to hard lock a specific commit.\n. @tianon check here https://github.com/boot2docker/boot2docker/pull/998\n. @tianon check here https://github.com/boot2docker/boot2docker/pull/998\n. refs #906\n. refs #906\n. @alanyih are you on Windows ?\n. @tianon thanks for fixing it, seems that some refactoring on the PR made the fscache statically compiled instead of being a module, as it was supposed to be, sorry for that.\n. Do you mean just for SELINUX or the overall changes ?\n. @tianon yes i understand, it was one of my first concern about that, but i tried it extensively without any kind of problem, i think that without the userspace tools it is quite harmless.\n. @simonvanderveldt yes i think that is necessary, read the links on my first post, they are rebasing \"abandoned\" projects with spyware.\n. yes, let me fix it.\n. \n",
    "kai-zhong": "+1 same issue here.................. ^ ^\n. @paolomainardi  Thanks.  remount is a good solution.\n. @jaux Thanks~~~\n. @jaux Thanks~~~\n. ",
    "brunoric": "Same problem here. =(\n. Same problem here. =(\n. ",
    "aladagemre": "I have the same problem with boot2docker: Docker v1.4.1, fig 1.0.1\nIt's fine on Linux: Docker v1.4.0, fig 1.0.1\nI can't mount rabbitmq or mongodb just for persistence. \nAny news on this?\n. I have the same problem with boot2docker: Docker v1.4.1, fig 1.0.1\nIt's fine on Linux: Docker v1.4.0, fig 1.0.1\nI can't mount rabbitmq or mongodb just for persistence. \nAny news on this?\n. ",
    "hgl": "I think this should be fixed from the docker end. Related issue: https://github.com/docker/docker/issues/7198\nEvery time a host directory is mounted, you should be able to specify uid/gid of the mounted directory. That way, boot2docker can keep using whatever uid & gid for vboxsf, and still allow different users in different containers to write to it.\nA lot of people affects by this, not sure why that issue is still not fixed, probably not very easy to implement?\n. ",
    "sjtuadamyang": "@vmaatta , so it's not possible to set up boot2docker + postgres with /var/lib/postgresql/data mounted from host machine since postgres needs to create hardlink in /var/lib/postgresql/data which is not supported by vboxsf??\n. @vmaatta , thanks for you explanation. Correct me if I understand it wrong, the reason I need a data-only container here is that I can keep the data-only container alive, and just run the postgres container one-off to dump the data into host directory. Theoretically, I can do the same thing by just get into the postgres container when it's serving and dump the database by issue the pg_dump command inside the postgres container, right?\n. ",
    "neciu": "Same here lads.\n. Same here lads.\n. ",
    "pkerpedjiev": "Pardon my ignorance, by why doesn't the mounted folder within the container have group write permissions? Other users could then be added to the 'staff' group and everything would be much easier.\n. Pardon my ignorance, by why doesn't the mounted folder within the container have group write permissions? Other users could then be added to the 'staff' group and everything would be much easier.\n. ",
    "ludofleury": "@mnapoli for your use case, I ended with a solution mixing volume container & custom path for the Symfony/php app cache/logs.\nI've got a volume container for /var/cache/my-app & another one for /var/log/my-app.\nPretty neat.\n. @cordoval @mnapoli yes, exactly I gave a less detailed example there: http://testonsteroid.tumblr.com/post/111468785847/docker-symfony-mac-filesystem-permissions\nYet, I abandoned docker for the moment. I was trying to setup a full workflow between local env to production env with it, and it's not ready for that now. I'm back to the classic stack with separated VM / CI / prod env, mixing vagrant/berkshelf and puppet.\n. Use Docker-compose, extends the base config with a dev config, in the Dev\nconfig use a data container.\nOn Mon, 5 Oct 2015 at 18:08, Mahmoud Saada notifications@github.com wrote:\n\n@David-Crty https://github.com/David-Crty, I have a mac too and here's\nwhat I have in my fpm Dockerfile I added this:\nRUN usermod -u 1000 www-data\nRUN usermod -G staff www-data\nRUN chown -Rf www-data.www-data /usr/share/nginx/html/\nMy fpm runs as www-data user. My boot2docker VM user (host VM) runs as uid\n1000.\nThis way I guarantee that files saved are owned by the same uid as\nboot2docker user and everything just works.\nThis is a terrible workaround because it allows inconsistencies between\nenvironments since not all host machine will run as user with uid 1000. It\nbreaks the entire point of what docker promises which is \"build once, run\nanywhere\". It's all a big lie basically until they fix the one year old bug.\nOur startup is struggling to go to production because of this bug. AWS\nuser uids are not the same as our DEV machine uids which breaks permissions\nsignificantly. Our dockerfile does work the same everywhere. Anyone else\nrun into this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/581#issuecomment-145584155\n.\n. \n",
    "mikehaertl": "\nI checked a bit, but not really much, and I didn't find this \"usermod/groupadd\" workaround in the boot2docker documentation.\n\n+1\nThe usermod -u 1000 www-data fixes it for us. This should really be added as a simple workaround to the documentation.\n. Now that docker-compose is released, this issue should be updated to include that instead.\n. ",
    "grimabe": "@danros workaround is working fine, but is there any fix coming ?\n. ",
    "c0nstantx": ":+1: @danros This workaround did the trick and saved me from insanity! Thank you.\n. ",
    "exlee": "I think I got a fix for that.\nProof of concept code (it's ugly, but that's due my Shellscript inaptitude - and I wanted to use shellscript so that other could use that too):\nhttps://gist.github.com/exlee/4b35915bbb96aa9ac8b8\nWhat I'm doing here is using separate Mountfile to specify how directories should be linked. Then, based on this, I'm disabling machine, adding shares using auto-generated ids and mounting them inside while using given uid/gid (which, not to say has to be exactly the same as the one used inside Docker).\nI've explored this issue for quite a while, and I think that is the proper way to approach it. I would prepare patch myself, but don't speak Go :disappointed: \n. ",
    "ljsommer": "+1 this is a pain. Trying to dev postgresql on osx using vagrant mounting data volume from a data container into my process container with no luck.\nWhy is Docker so painful  =(\n. ",
    "alasarr": "+1. Also with postgresql. That would be really nice to fix this issue.\n. ",
    "tomdavidson": "@mnapoli you can make your own custom boot2docker.iso fairly easy. boot2docker uses tinycore, so you can make persistent changes the tinycore way.\n. @mnapoli you can make your own custom boot2docker.iso fairly easy. boot2docker uses tinycore, so you can make persistent changes the tinycore way.\n. ",
    "nachimehta": "I was getting the same problem before when trying to share volumes in a mysql container. I added RUN usermod -u 1000 mysql to the Dockerfile.\nNow I'm getting a unix port bind error:\n[ERROR] Can't start server : Bind on unix socket: Permission denied\n[ERROR] Do you already have another mysqld server running on socket: /var/run/mysqld/mysqld.sock ?\n[ERROR] Aborting\nAnyone else encounter this?\n. I was getting the same problem before when trying to share volumes in a mysql container. I added RUN usermod -u 1000 mysql to the Dockerfile.\nNow I'm getting a unix port bind error:\n[ERROR] Can't start server : Bind on unix socket: Permission denied\n[ERROR] Do you already have another mysqld server running on socket: /var/run/mysqld/mysqld.sock ?\n[ERROR] Aborting\nAnyone else encounter this?\n. @marklocker ,\nI went with the following:\n    ssh boot2docker\nsudo mount -t vboxsf -o uid=999,gid=50 Users /Users\nit's not pretty, and you have to do it each time you re-init your docker container, but it works.\n. @mnapoli , I did. It just uses docker-machine which is still built using the boot2docker iso. Problem still exists.\n. ",
    "perrierism": "@nachimehta \nYes, everyone attempting to mount volumes for mysql containers encounters this. \n. HBD!\nI love docker but this bug is one of the reasons I haven't been using it.\n:birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada:\n. ",
    "pperez": "@mnapoli Can you use images that do chmod/chown?\n. @mnapoli Can you use images that do chmod/chown?\n. ",
    "jakedeichert": "I just spent about 8 hours today at work trying to get mysql to use a volume on osx through boot2docker... then finally it worked using a couple of different RUN commands in a Dockerfile. As some people have mentioned, usermod -u 1000 works but I also had to change a group and an owner as you'll see below.\nDockerfile\nFROM mysql\nRUN usermod -u 1000 mysql\nRUN usermod -G staff mysql\nRUN chown mysql /var/run/mysqld\nEXPOSE 3306\nThen build and run it...\ndocker build -t custom-mysql .\ndocker run -d --name db -p 3306:3306 -v /Users/<name>/path:/var/lib/mysql custom-mysql\nAfter 8 hours, I saw this dockerfile and realized I never tried usermod -G (after a million other attempted solutions). 8 hours and all I needed was to change the group :-1: \n. Yeah it's definitely a temporary workaround. I'll be waiting for an actual solution so this doesn't have to be done per-container.\n. Yeah it's definitely a temporary workaround. I'll be waiting for an actual solution so this doesn't have to be done per-container.\n. ",
    "tompson": "@jakedeichert thanks for your post - I just extended the official wordpress image with\nFROM wordpress\nRUN usermod -u 1000 www-data\nRUN usermod -G staff www-data\nto allow me mounting the wordpress folder from OS X to /var/www/html and installing plugins\n. ",
    "luxifer": "For me it's still just a workaround to have to run usermod inside the dockerfile. What if you want to share the image? push it to the docker hub? Or use it anywhere else but your laptop? It should only be a platform problem, not a user problem. I'm still looking for real solutions (like NFS) or maybe another VM like https://github.com/codekitchen/dinghy. For the NFS part, take a look at http://blog.blackfire.io/how-we-use-docker.html\n. ",
    "pdonorio": "I totally agree with @luxifer: IMHO if we need a workaround for any image to work properly on the laptop, then we are back to where we lived before Docker.\nAlso another VM would become a real option for my self only when integrated in docker machine, which is the best way at the momento to have a development environment on the laptop which you run with the same commands on the most famous cloud provisioning, including my own internal openstack cloud. And for dinghy we have to wait: https://github.com/codekitchen/dinghy/issues/16\nLooks like the best bet is NFS, will run some tests.\n. ",
    "timbrandin": "@tompson's https://github.com/boot2docker/boot2docker/issues/581#issuecomment-114804894 solved it for me: https://github.com/timbrandin/docker-drupal-kitematic/blob/master/Dockerfile#L27\n. ",
    "saada": "@timbrandin , you're a life saver! :bow: \n. @mnapoli what version of OS X are you on?\n. @frank-dspeed, do you have a repo created somewhere for that?\n. @frank-dspeed, do you have a repo created somewhere for that?\n. It's been almost one entire year!\n:sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob: :sob:\n. @David-Crty, I have a mac too and here's what I have in my fpm Dockerfile I added this:\ndockerfile\nRUN usermod -u 1000 www-data\nRUN usermod -G staff www-data\nRUN chown -Rf www-data.www-data /usr/share/nginx/html/\nMy fpm runs as www-data user. My boot2docker VM user (host VM) runs as uid 1000.\nThis way I guarantee that files saved are owned by the same uid as boot2docker user and everything just works.\nThis is a terrible workaround because it allows inconsistencies between environments since not all host machine will run as user with uid 1000. It breaks the entire point of what docker promises which is \"build once, run anywhere\". It's all a big lie basically until they fix the one year old bug.\nOur startup is struggling to go to production because of this bug. AWS user uids are not the same as our DEV machine uids which breaks permissions significantly. Also our jenkins node user has a different user than our frontend instances, and so on. Having this UID dependency is a big problem. Our dockerfile does NOT work the same everywhere. \nAnyone else run into this?\n. :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: \n. :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: :birthday: :gift: :balloon: :tada: \n. Found out that docker requires a long running process in the foreground to stay detached...\n. Found out that docker requires a long running process in the foreground to stay detached...\n. ",
    "marklocker": "@nachimehta I'm experiencing the same as you. After adding RUN usermod -u 1000 mysql to my MySQL Dockerfile, the container now writes to my host OS but I get the following error:\n[ERROR] Can't start server : Bind on unix socket: Permission denied\n[ERROR] Do you already have another mysqld server running on socket: /var/run/mysqld/mysqld.sock ?\n[ERROR] Aborting\nDid you find a solution to this?\n. @mnapoli Funnily enough I tried Dinghy based on some messages I'd seen you post, but experienced the same issue. Apparently it used to be fine but a change was made which introduced the same issue that boot2docker has, and it's not one they want to go back on because it sorts out some other problems.\n. ",
    "YGuillemin": "@paolomainardi The way to use nfs instead of vboxfs allow to avoid all problems about permissions ?\nIf i mount a volume from my OSX like \n     /private/var/www -> /var/www OSX to boot2docker \nAnd then i want to launch a container and attach that volume like\n   docker run -ti --rm -v /var/www:/var/www php-fpm (attach on php-fpm or nginx container for example)\nThe container php-fpm has permissions problem to clear:cache in symfony, but no with nfs ?\ni've tried to change iud when i mount the boot2docker volume : \n   sudo mount -t vboxsf -o uid=1000,gid=33 Users /Users\nAnd i've changed the iud of www-data in my Dockerfile : \n   RUN usermod -u 1000 www-data\nBut i can't clear the cache anymore if i launch a page from the server, at this url for example: \n  BOOT_2_DOCKER_IP/web/app_dev.php\nGenerated files haven't the same permissions ? \nYou said that nfs is faster than vbox, but does it allow any container which share volume to write within too ?\nAny solution works for me, but i've not tried nfs yet....\nbtw, sorry for my bad english...\n. Thanks for your help.\nIndeed, it's very slow even with nfs...i'll go back later (2, 3 months) in order to take a look to docker, when it'll come up ;)\n. ",
    "nguyentamgm": "Hi there,\nFor ones who are using Kitematic, just do this:\n1. Open your Kitematic application\n2. Open Settings tab from your container\n3. Add this value to Environment Variables:\n- Key: \"USERMOD\"\n- Value: \"1000 www-data\" (NOT 1000:www-data)\nHope that can help you about this permission issue!\n. Hi there,\nFor ones who are using Kitematic, just do this:\n1. Open your Kitematic application\n2. Open Settings tab from your container\n3. Add this value to Environment Variables:\n- Key: \"USERMOD\"\n- Value: \"1000 www-data\" (NOT 1000:www-data)\nHope that can help you about this permission issue!\n. ",
    "frank-dspeed": "how about starting docker and boot2docker as root in OSX i am not a OSX user but got locked into that by a costumer i think when boot2docker and docker itself would get used with osx sudo then all would work as expected can some one tell me who is responsible for boot2docker at present is it tianon?\n. i dont agree with that the boot2docker method is simply bad maybe a more good way would be to make a new boot2docker iso based on a stripped down kernel most current release would do the trick more well i am working at present on such a image to replace coreos and all this other solutions i think a basic kernel img with all needed kernel moduls for docker will be the most best fit then implament virtualbox guest addtions support as also fusion (vmware) support as option will be the successor over the boot2docker way and will lead into all functions work like expected.\nIf the guest additions dont do fix that then i will simply add casper fs for this and that method will work 100% \n. i dont agree with that the boot2docker method is simply bad maybe a more good way would be to make a new boot2docker iso based on a stripped down kernel most current release would do the trick more well i am working at present on such a image to replace coreos and all this other solutions i think a basic kernel img with all needed kernel moduls for docker will be the most best fit then implament virtualbox guest addtions support as also fusion (vmware) support as option will be the successor over the boot2docker way and will lead into all functions work like expected.\nIf the guest additions dont do fix that then i will simply add casper fs for this and that method will work 100% \n. @saada sure here you got https://developer.ubuntu.com/en/snappy/\n. ",
    "Kephryn": "paolomainardi's solution works great. \nIf you are using Kitematic you can basically replace boot2docker ssh with docker-machine ssh default\nLast thing to note is the change of IP address when doing the mount.nfs use 192.168.99.1\n@paolomainardi Thank you very much, I am very pleased everything is working and quick as well.\n. ",
    "jayfk": "This issue should be a top priority for the next feature release, or at least a documented official way to solve it on your own.\nThat's basically the first thing every new user runs into when building something with a database and that's a no go.\nSorry for the harsh response, but I had 3 mails and two tickets related to this today alone. I know you are working hard on the whole eco system, but docker is on its way to mass adoption by users that assume that basic things work and having a persistent database is one of these things.\n. ",
    "dmitrijev": "On the same boat with you guys, docker container still can NOT write to shared volume on Mac (10.11)\n. ",
    "nhooey": "Happy Birthday Bug 581!\n\n. ",
    "bmurphy1976": "I know everybody is as disappointed as I am that this issue does not yet have a resolution.  That said, could we please stop posting unproductive comments?  I am subscribed to this issue so that I  can track its progress not so that I can receive emoji spam in my email.  Thanks!\n. I know everybody is as disappointed as I am that this issue does not yet have a resolution.  That said, could we please stop posting unproductive comments?  I am subscribed to this issue so that I  can track its progress not so that I can receive emoji spam in my email.  Thanks!\n. ",
    "joonasy": "+1\n. +1\n. ",
    "sampattuzzi": "@krasilich, Fantastic workaround. Thanks for sharing.\n. ",
    "pedrofaria": "@krasilich THANKS SO MUCH! this solution works very well here!\n. @krasilich THANKS SO MUCH! this solution works very well here!\n. ",
    "thSoft": "@krasilich Thank you! The last command to run should be eval \"$(docker-machine env dev-nfs)\". Otherwise, this workaround works for me, but it is very inconvenient because another VM has to be created so Docker Quickstart Terminal and Kitematic cannot be used; what's more, multiple commands have to be issued to set it up.\n. ",
    "bahaaldine": "+1 Works for me too !!\n. ",
    "danawoodman": "@krasilich I owe you a beer! Worked great! :beers: \n. ",
    "koryonik": "Thanks @krasilich, nice nfs workaround !\n. ",
    "rjain15": "@pdonorio I have followed your steps to create docker volumes cli approach\n$docker volume create --name data\n$docker volume ls\n$docker run --name mongo -v data:/data/db -d mongo\n$docker exec $(docker ps -l -q) chown -R mongodb:mongodb /data/db\n$docker exec $(docker ps -l -q) ls -l /data/db\n$docker volume inspect data\n$docker-machine ssh default sudo ls /mnt/sda1/var/lib/docker/volumes/data/_data\nAs @krasilich mentioned, this is creating the data volume inside the boot2docker vm, I want to create them on my OSX host. \nHas anyone figured a way out?\n. Thanks @thaJeztah seems like a cyclic reference :) to #581 \nI have tried the workaround in #581 but the data containers in boot2docker  on macOS creates vol on the vm. \n. ",
    "oypeter": "@krasilich +1\n. ",
    "odrzutowiec": "Hello I am using php:7-apache docker container. I had problem with php writing files to mounted directory. Solution by @sebwebdev works perfectly for me.\nRUN usermod -u 1000 www-data\nRUN usermod -G staff www-data\n. ",
    "motin": "A related workaround, showing how image maintainers can make non-root users write to locally mounted folders on osx: https://github.com/docker-library/mysql/issues/99#issuecomment-145665645\n. > A related workaround, showing how image maintainers can make non-root users write to locally mounted folders on osx: https://github.com/docker-library/mysql/issues/99#issuecomment-146706748\nCheck this out. Many seem to have this problem with mysql/mariadb and a workaround has been around for quite some time - using usermod to change the user/group ids to match the ownership of the host volume folder:\nStep 1: Add the script run.sh somewhere in your project:\n```\n!/bin/bash\nset -e\nScript to workaround docker-machine/boot2docker OSX host volume issues: https://github.com/docker-library/mysql/issues/99\necho ' Working around permission errors locally by making sure that \"mysql\" uses the same uid and gid as the host volume'\nTARGET_UID=$(stat -c \"%u\" /var/lib/mysql)\necho '-- Setting mysql user to use uid '$TARGET_UID\nusermod -o -u $TARGET_UID mysql || true\nTARGET_GID=$(stat -c \"%g\" /var/lib/mysql)\necho '-- Setting mysql group to use gid '$TARGET_GID\ngroupmod -o -g $TARGET_GID mysql || true\necho\necho ' Starting MySQL'\nchown -R mysql:root /var/run/mysqld/\n/entrypoint.sh mysqld --user=mysql --console\n```\nStep 2: Change the command in docker-compose.yml to run this script instead of the ordinary command. \nExample:\n```\nLocal database server to mimic a cloud database\nlocaldb:\n  image: mysql:5.6.27\n  volumes:\n    - ./stack/localdb/.db/mysql:/var/lib/mysql:rw\n    - ./stack/localdb/:/stack/localdb:rw\n  ports:\n    - \"3306\"\n  environment:\n    MYSQL_ROOT_PASSWORD: \"local-mysql-pass\"\n  command: \"/stack/localdb/run.sh\"\n```\n. > A related workaround, showing how image maintainers can make non-root users write to locally mounted folders on osx: https://github.com/docker-library/mysql/issues/99#issuecomment-146706748\nCheck this out. Many seem to have this problem with mysql/mariadb and a workaround has been around for quite some time - using usermod to change the user/group ids to match the ownership of the host volume folder:\nStep 1: Add the script run.sh somewhere in your project:\n```\n!/bin/bash\nset -e\nScript to workaround docker-machine/boot2docker OSX host volume issues: https://github.com/docker-library/mysql/issues/99\necho ' Working around permission errors locally by making sure that \"mysql\" uses the same uid and gid as the host volume'\nTARGET_UID=$(stat -c \"%u\" /var/lib/mysql)\necho '-- Setting mysql user to use uid '$TARGET_UID\nusermod -o -u $TARGET_UID mysql || true\nTARGET_GID=$(stat -c \"%g\" /var/lib/mysql)\necho '-- Setting mysql group to use gid '$TARGET_GID\ngroupmod -o -g $TARGET_GID mysql || true\necho\necho ' Starting MySQL'\nchown -R mysql:root /var/run/mysqld/\n/entrypoint.sh mysqld --user=mysql --console\n```\nStep 2: Change the command in docker-compose.yml to run this script instead of the ordinary command. \nExample:\n```\nLocal database server to mimic a cloud database\nlocaldb:\n  image: mysql:5.6.27\n  volumes:\n    - ./stack/localdb/.db/mysql:/var/lib/mysql:rw\n    - ./stack/localdb/:/stack/localdb:rw\n  ports:\n    - \"3306\"\n  environment:\n    MYSQL_ROOT_PASSWORD: \"local-mysql-pass\"\n  command: \"/stack/localdb/run.sh\"\n```\n. @ababushkin I have read reports from users of native Docker for Mac that they no longer need any workaround. I created the permissions script to make it work on Docker Toolbox. \n. @jeffdm Where did you move the issue to?\n. @jeffdm Where did you move the issue to?\n. ",
    "wpp": "Big thank you to @krasilich! Also it seems like adlogix/docker-machine-nfs#17 has been fixed too.\n\ndocker-machine-nfs test --shared-folder=/var/www --nfs-config=\"-alldirs -maproot=0\"\n. I had the same issue earlier today and tried boot2docker-cli (a215a0772a) seems to work now.\n. \n",
    "haobird": "Here is a solution\u3002\n1.\u8fd0\u884c\u547d\u4ee4\uff1adocker-machine ls    \u67e5\u770b\u5f53\u524d\u4f60\u4f7f\u7528\u7684\u865a\u62df\u673a\n2.\u6839\u636e\u540d\u5b57\u8fdb\u5165\u865a\u62df\u673a\uff1adocker-machine ssh default\n3.\u5728\u865a\u62df\u673a\u4e2d\u7f16\u8f91\u8fd9\u4e2a\u6587\u4ef6\uff1asudo vi /mnt/sda1/var/lib/boot2docker/bootlocal.sh\n4.\u5728\u6587\u4ef6\u4e2d\u5199\u5165\u5982\u4e0b\u547d\u4ee4\uff1a\n```\n!/bin/sh\nif [ -e /Users/jie ]; then\n        sudo umount /Users\nfi\nsudo mount -t vboxsf -o uid=1001,gid=50 Users /Users\n```\n5.\u4fdd\u5b58\u540e\uff0c\u91cd\u542f\u865a\u62df\u673a\uff1asudo reboot\n6.docker run \u65b0\u7684container\u5373\u53ef\u3002\u5982\uff1adocker run -it -P --name web -v /Users/jie/DockerWork:/www ubuntu14.04:latest /bin/bash\n\ufffc\n. @KIVagant I hope it will help someone. ^_^\n. ",
    "KIVagant": "@haobird, \u0434\u0430, \u0432\u0441\u0451 \u0441\u0442\u0430\u043b\u043e \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u043d\u044f\u0442\u043d\u0435\u0435, \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0439 \u0432 \u0442\u043e\u043c \u0436\u0435 \u0434\u0443\u0445\u0435! :)\n. @JulienD, use LXC / LXD and/or Vagrant in OSX.\n. ",
    "emaiax": "@mnapoli I'm still experiencing the same issue with dinghy. https://github.com/codekitchen/dinghy/issues/31\nCan you tell me how have you accomplished this? :/\n. ",
    "istinspring": "holy crap i can't even imagine how such a basic things are still broken.\nSo it's basically impossible to use docker on OSX for development? (if mongo image can't use your local databases files)\n. ",
    "prigal": "@JulienD : I had the same problem, I switched to dlite https://github.com/nlf/dlite, it just works.\n. ",
    "binabot": "RUN usermod -u 1000 www-data Worked great !\n. @agborkowski u can run usermod -u 1000 www-data inside your container OR add RUN usermod -u 1000 www-data into your Dockerfile. Never used kitematic so dont know what to do with your situation ;) gl\n. ",
    "ivicaned": "I used RUN usermod -u 1000 www-data into Docker file and it worked great.\nI am waiting for Docker for OSX which is currently in beta, which should fix this issue with permissions: https://blog.docker.com/2016/03/docker-for-mac-windows-beta/\n. ",
    "ozbillwang": "Thanks, @ivicaned . Your fix is perfect. \nYou save me the whole day that I stuck on this issue. \n. Thanks, @ivicaned . Your fix is perfect. \nYou save me the whole day that I stuck on this issue. \n. and @ivicaned \nRegarding native docker for OSX , I already got token and installed. Yes, there is no this permission issue with same images.\n. and @ivicaned \nRegarding native docker for OSX , I already got token and installed. Yes, there is no this permission issue with same images.\n. That's not vagrant issue. Today I didn't use Vagrant at all, and still get the same issue again. \nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. ",
    "raptor235": "Hey guys could use some help here.. got everything working properly.. I'm also exposing mariadb to a mounted volume so data is persistent. \nThe problem is I can set everything up... run docker-compose build, then docker-compose up, I see the db folder gets built by mariadb (those files are restricted to osx root only user) and things are running fine.\nHowever when I run another docker-compose build command I run into issues from my php container complaining about access to the db folder which is setup from mariadb container... I'm not sure if this has something to do with /etc/exports and permissions of that folder but I can't build anything else unless I delete the db folder in the root... \nI'm not sure if any of the options for docker-machine-nfs will help with this issue...\n\n`#docker-machine ip default\nweb:\n    build: .\n    container_name: web\n    ports:\n        - \"9090:80\"\n    volumes:\n        - /Users/bartdabek/Sites/hgv/hgv_data/sites/:/code\n        - ./site.conf:/etc/nginx/conf.d/site.conf\n        - ./nginx.conf:/etc/nginx/nginx.conf\n        - ./sites-enabled:/etc/nginx/sites-enabled\n    links:\n        - php\n        #- mariadb\n        - memcached\nphp:\n    container_name: php\n    build: .\n    dockerfile: Dockerfile-php\n    volumes:\n        - /Users/bartdabek/Sites/hgv/hgv_data/sites/:/code\n        - ./Tideways.php:/usr/local/lib/php/extensions/no-debug-non-zts-20151012/Tideways.php\n    links:\n        #- mariadb\n        - memcached\nmemcached:\n  container_name: memcached\n  image: sameersbn/memcached:latest\n  ports:\n    - \"11211:11211\"\n  restart: always\nmariadb:\n  container_name: mariadb\n  image: mariadb\n  volumes:\n    - /Users/bartdabek/Sites/docker/db/:/var/lib/mysql\n  environment:\n    DB_ADMIN_PASS: pass\n    MYSQL_ROOT_PASSWORD: root\n  ports:\n    - \"3306:3306\"\n`\n\n\n\n. Hey guys could use some help here.. got everything working properly.. I'm also exposing mariadb to a mounted volume so data is persistent. \nThe problem is I can set everything up... run docker-compose build, then docker-compose up, I see the db folder gets built by mariadb (those files are restricted to osx root only user) and things are running fine.\nHowever when I run another docker-compose build command I run into issues from my php container complaining about access to the db folder which is setup from mariadb container... I'm not sure if this has something to do with /etc/exports and permissions of that folder but I can't build anything else unless I delete the db folder in the root... \nI'm not sure if any of the options for docker-machine-nfs will help with this issue...\n\n`#docker-machine ip default\nweb:\n    build: .\n    container_name: web\n    ports:\n        - \"9090:80\"\n    volumes:\n        - /Users/bartdabek/Sites/hgv/hgv_data/sites/:/code\n        - ./site.conf:/etc/nginx/conf.d/site.conf\n        - ./nginx.conf:/etc/nginx/nginx.conf\n        - ./sites-enabled:/etc/nginx/sites-enabled\n    links:\n        - php\n        #- mariadb\n        - memcached\nphp:\n    container_name: php\n    build: .\n    dockerfile: Dockerfile-php\n    volumes:\n        - /Users/bartdabek/Sites/hgv/hgv_data/sites/:/code\n        - ./Tideways.php:/usr/local/lib/php/extensions/no-debug-non-zts-20151012/Tideways.php\n    links:\n        #- mariadb\n        - memcached\nmemcached:\n  container_name: memcached\n  image: sameersbn/memcached:latest\n  ports:\n    - \"11211:11211\"\n  restart: always\nmariadb:\n  container_name: mariadb\n  image: mariadb\n  volumes:\n    - /Users/bartdabek/Sites/docker/db/:/var/lib/mysql\n  environment:\n    DB_ADMIN_PASS: pass\n    MYSQL_ROOT_PASSWORD: root\n  ports:\n    - \"3306:3306\"\n`\n\n\n\n. Basically I need to change permissions back on the db folder to get things to build again \n\ndrwxr-xr-x  11 bartdabek  staff    374 19 May 00:02 .\ndrwxr-xr-x  13 bartdabek  staff    442 16 May 15:36 ..\n-rw-r--r--   1 bartdabek  staff    365 18 May 22:58 Dockerfile\n-rw-r--r--   1 bartdabek  staff    267 18 May 22:26 Dockerfile-data\n-rw-r--r--   1 bartdabek  staff   1642 18 May 23:06 Dockerfile-php\n-rw-r--r--@  1 bartdabek  staff  43748 17 May 21:44 Tideways.php\ndrwxr-xr-x  11 999        999      374 19 May 00:02 db\n-rw-r--r--   1 bartdabek  staff   1006 19 May 00:02 docker-compose.yml\n-rw-r--r--   1 bartdabek  staff    743 18 May 23:09 nginx.conf\n-rw-r--r--   1 bartdabek  staff    508 16 May 15:38 site.conf\ndrwxr-xr-x   3 bartdabek  staff    102 18 May 23:13 sites-enabled\n\n. Basically I need to change permissions back on the db folder to get things to build again \n\ndrwxr-xr-x  11 bartdabek  staff    374 19 May 00:02 .\ndrwxr-xr-x  13 bartdabek  staff    442 16 May 15:36 ..\n-rw-r--r--   1 bartdabek  staff    365 18 May 22:58 Dockerfile\n-rw-r--r--   1 bartdabek  staff    267 18 May 22:26 Dockerfile-data\n-rw-r--r--   1 bartdabek  staff   1642 18 May 23:06 Dockerfile-php\n-rw-r--r--@  1 bartdabek  staff  43748 17 May 21:44 Tideways.php\ndrwxr-xr-x  11 999        999      374 19 May 00:02 db\n-rw-r--r--   1 bartdabek  staff   1006 19 May 00:02 docker-compose.yml\n-rw-r--r--   1 bartdabek  staff    743 18 May 23:09 nginx.conf\n-rw-r--r--   1 bartdabek  staff    508 16 May 15:38 site.conf\ndrwxr-xr-x   3 bartdabek  staff    102 18 May 23:13 sites-enabled\n\n. Thanks @motin that worked! \nHowever I'm now stuck as the maridb hostname is not longer linked to any of the other containers... any idea why that default functionality is no longer working?\n. Thanks @motin that worked! \nHowever I'm now stuck as the maridb hostname is not longer linked to any of the other containers... any idea why that default functionality is no longer working?\n. Nevermind last comment... some sort of hickup working again! Thanks\n. Nevermind last comment... some sort of hickup working again! Thanks\n. ",
    "jolic": "@cpapidas\nCould you please send a small info or a step by step howto how you did this?\n. ",
    "ababushkin": "Has anyone worked out a simple - StackOverflow style - solution to this problem yet?\nI've tried all the conventional solutions, such as:\n1. Creating and configuring the permissions script (as per @motin's) comment\n2. Manually running usermod -u 1000 mysql in a custom Dockerfile (that inherits from this one)\nThe only 'feasible' solution I see is a custom project created by @dgraziotin, which deviates from the main MySQL / MariaDB docker images (https://github.com/dgraziotin/osx-docker-mysql). This hardly seems like an optimal solution, especially if Docker is to get even more rapid adoption throughout the community.\n. @dgraziotin @motin Ouch, looks like I'm still running Docker v1.11.0.\nI'll upgrade and give it a whirl.\n@yosifkit thanks for the tip!\n. @ernestom did you notice any performance improvement for disk sync when using that solution? Symfony runs really poorly for me at the moment. I have the same issue when using Vagrant and VirtualBox shared volumes and worked around it by using an NFS mount.\nUpdate: I just noticed that the new version of docker has its own VM and a new OSX dedicated file system layer. I'll try this out to see if there are still performance issues :)\n. @ernestom @krasilich Thats a bummer.\n@ernestom do you have a boilerplate docker-compose file that's using the NFS solution by any chance?\n. @dend Yup thats correct, permission issues are fixed with Docker for Mac. You don't need to install the beta version, the stable release fixes it as well. \nUnfortunately performance issues have not been fixed. At this stage I've been getting around performance issues by doing smarter builds of my images (e.g. mounting volumes that don't need lots of read/write operations by the app)\n. ",
    "ernestom": "@ababushkin using docker-machine-nfs worked for me.\n. @ababushkin I didn't notice any significant impact in performance with NFS for Docker, and I've been using it for years on my vagrant/vbox projects without issues. \n. ",
    "dgraziotin": "@ababushkin I confirm that with Docker v1.12.0 for Mac, there is no need to use my ugly workaround anymore :-) @motin \n. ",
    "dend": "So just to follow-up here, the issue seems to be gone on the Mac if you install the native Docker beta (use beta channel here). That obviously doesn't solve the problem much for automated scenarios, but works well for local dev.\n. ",
    "vschoener": "Just trying back to use Docke for mac with a web project, the ownership issue is still here..\nFiles are mounted in root:root and even if I change the ownership to www-data with a entrypoint, the new one will be created as root user.\nAny idea ? I tried to use USER www-data before starting the apache process but as you know, www-data doesn't have the privilege to start the apache service.. Feel stuck :(. ",
    "TyIsI": "Ran into this issue as well.\n@vmaatta was right in his breakdown, and I'd like to add that the \"issue\" is the -r option in groupadd/useradd versus adding users without that specific option. The -r option creates system users, which by default (set in /etc/adduser.conf) \"starts\" with UID/GID 999. (Last in range.)\n```\nroot@9b3da358b593:/# egrep SYSTEM /etc/adduser.conf\nFIRST_SYSTEM_[GU]ID to LAST_SYSTEM_[GU]ID inclusive is the range for UIDs\nFIRST_SYSTEM_UID=100\nLAST_SYSTEM_UID=999\nFIRST_SYSTEM_GID=100\nLAST_SYSTEM_GID=999\n```\nFor regular users, these would be added starting UID/GID 1000 (matching the UID for the boot2docker docker user), which is fine for a single user. This also has the implication that if another user were to be added in a container, that a user with UID 1001 wouldn't be able to access files through vboxsf.\nRight now, I don't know how this could be solved easily, but I'm going to look into this.\nRecap: Images create system users that don't match the UID of the docker user in boot2docker.. Ran into this issue as well.\n@vmaatta was right in his breakdown, and I'd like to add that the \"issue\" is the -r option in groupadd/useradd versus adding users without that specific option. The -r option creates system users, which by default (set in /etc/adduser.conf) \"starts\" with UID/GID 999. (Last in range.)\n```\nroot@9b3da358b593:/# egrep SYSTEM /etc/adduser.conf\nFIRST_SYSTEM_[GU]ID to LAST_SYSTEM_[GU]ID inclusive is the range for UIDs\nFIRST_SYSTEM_UID=100\nLAST_SYSTEM_UID=999\nFIRST_SYSTEM_GID=100\nLAST_SYSTEM_GID=999\n```\nFor regular users, these would be added starting UID/GID 1000 (matching the UID for the boot2docker docker user), which is fine for a single user. This also has the implication that if another user were to be added in a container, that a user with UID 1001 wouldn't be able to access files through vboxsf.\nRight now, I don't know how this could be solved easily, but I'm going to look into this.\nRecap: Images create system users that don't match the UID of the docker user in boot2docker.. Example work-around for rabbitmq:\nDockerfile:\n```\nFROM rabbitmq:3-management\nRUN usermod -u 1000 rabbitmq\nRUN groupmod -g 1000 rabbitmq\n```\ndocker build -t rabbitmq-test .\ndocker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672  -v `pwd`/data/rabbitmq/:/var/lib/rabbitmq rabbitmq-test. Example work-around for rabbitmq:\nDockerfile:\n```\nFROM rabbitmq:3-management\nRUN usermod -u 1000 rabbitmq\nRUN groupmod -g 1000 rabbitmq\n```\ndocker build -t rabbitmq-test .\ndocker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672  -v `pwd`/data/rabbitmq/:/var/lib/rabbitmq rabbitmq-test. ",
    "nornagon": "This is OS X 10.10 (Yosemite), iTerm.app 1.0.0.20140629, zsh 5.0.5 (the one that comes with OS X).\n. Confusingly, it's now working fine. I'll reopen if I see this again.\n. Confusingly, it's now working fine. I'll reopen if I see this again.\n. ",
    "daaku": "Funnily enough I actually tried shellinit and it wasn't printing anything. I eventually realized it doesn't print the things that are already correctly set in the environment. It would be nice to have a way to always get this independent of the current environment.\n. ",
    "chirayuk": "I hit this issue today and it was surprising and annoying.\u00a0 I deleted the share and it popped up again.\u00a0 Apparently by design.\u00a0 I would like a flag / way to tell the tool, \"Yes, I really really really am ok with not helping me out with sharing my entire home directory. Stop doing it\".\u00a0 \n. ",
    "mikeys": "@paolomainardi Maybe i'm doing something wrong: I can't run unmount from within the boot2docker virtual machine...\n. My bad, it's umount not unmount. Thanks!\n. @paolomainardi I'm facing something really odd, the data is persisted but for some reason I can't see any files the volumes i've mounted... both in the host and from inside the container... \n. @paolomainardi Yes I am\n. @paolomainardi Yes I am\n. @paolomainardi Wow... the entire eco-system is shaky lol. Thanks, that actually worked but all those workarounds feel very unstable :disappointed: .\n. @paolomainardi Wow... the entire eco-system is shaky lol. Thanks, that actually worked but all those workarounds feel very unstable :disappointed: .\n. @eerkel @paolomainardi I'm having the exact same problem. Did you manage to solve the problem by any chance?\n. Wondering about this myself... Currently it's very difficult to utilise boot2docker in development environment due to the slowness of VirtualBox's shared folders implementation.\n. ",
    "sheetweaver": "hmm... so I got the same problem with docker-compose that mikeys got with fig. I guess changing the name didn't fix the bug after all. :) ... is this a \"known issue\" (with a bug report somewhere)?\n. ",
    "ataraxus": "stumbled into this issue right now. really anoying\n. ",
    "IBMRob": "I've been also hitting this issue similar to this trying to run the ibmimages/mqadvanced image on a Mac running boot2docker within VirtualBox. If you point to a local filesystem within the boot2docker image it works fine but if you try and use a mounted folder such as /Users on a mac it fails to change the permissions of the mounted files thus resulting in the container failing.\nWould be great to get this working.\n. ",
    "EwanValentine": "+1 \n. ",
    "nicbarker": "+1 just ran into this issue.\n. ",
    "firelife": "+1 postgresql with boot2docker on mac\n. ",
    "alefi87": "+1\n. ",
    "ayeo": "+1\n. To grant permissions to www-data (Apache2, PHP) you can use:\nRUN usermod -u 1000 www-data\n. To grant permissions to www-data (Apache2, PHP) you can use:\nRUN usermod -u 1000 www-data\n. ",
    "nicholasruunu": "+1\n. ",
    "jaco": "+1\n. ",
    "nicekiwi": "+1\n. ",
    "ierceg": "+1\n. +1\n. @ayeo this work - thanks! Though I had to restart the service.\n. @ayeo this work - thanks! Though I had to restart the service.\n. ",
    "johnykov": "+1\n. ",
    "otobrglez": "@ayeo You are my hero of the day. :+1: Cheers!\n. ",
    "asheshambasta": "+1 same issue. Docker is completely useless for us because of this.\nAfter all this fuss about docker, I pitched docker to my dev. team as an option to optimise our deployments and right after the install, we run into really basic issues like these. :-1: Seriously.\n. +1 same issue. Docker is completely useless for us because of this.\nAfter all this fuss about docker, I pitched docker to my dev. team as an option to optimise our deployments and right after the install, we run into really basic issues like these. :-1: Seriously.\n. ",
    "bryanallen": "+1\n. ",
    "ndelitski": "+1\n. ",
    "minskmaz": "+1. this is a serious issue. \n. I was able to get around this using --volumes-from\nsome/data-only/container_id\nOn Wed, Nov 4, 2015 at 6:50 PM, Ross Edman notifications@github.com wrote:\n\n+1. I have encountered this problem on Vagrant before as well. Shared\nfiles are always the issue. Would love to see this fixed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/587#issuecomment-153938671\n.\n. I was able to get around this using --volumes-from\nsome/data-only/container_id\n\nOn Wed, Nov 4, 2015 at 6:50 PM, Ross Edman notifications@github.com wrote:\n\n+1. I have encountered this problem on Vagrant before as well. Shared\nfiles are always the issue. Would love to see this fixed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/587#issuecomment-153938671\n.\n. \n",
    "ducdebreme": "+1\n. +1\n. ",
    "scribnar": "+1 Wasted many hours on this. Permission does not change if a folder is mounted as volume and when trying to change ownership inside container using chown\n. ",
    "krasi-georgiev": "nfs sharing by default  +1\n. ",
    "andrewmclagan": "what's the progress on this? +1\nhttp://stackoverflow.com/questions/35305230/slow-response-times-laravel-5-2-in-docker-container/35305471?noredirect=1#comment58321319_35305471\n. ",
    "bobintornado": "+1 \nrunning crazy against following error now on my coreos kubernetes cluster \nchmod: changing permissions of \u2018/var/lib/postgresql/data/pgdata\u2019: Operation not permitted\n. +1 \nrunning crazy against following error now on my coreos kubernetes cluster \nchmod: changing permissions of \u2018/var/lib/postgresql/data/pgdata\u2019: Operation not permitted\n. ",
    "RadikChernyshov": "+1\n. +1\n. ",
    "jackmcpickle": "Everyone should try the new 'native' docker for mac/window which is in beta now. Mounting files inside my app work fine now. So long as I change the permissions on runtime. \n. Everyone should try the new 'native' docker for mac/window which is in beta now. Mounting files inside my app work fine now. So long as I change the permissions on runtime. \n. Thanks @bukzor worked for me. \n. ",
    "yongzhihuang": "+1\nWhat exactly is staff?  Like @ayeo said, it works when you change the user via:\nusermod -u 1000 www-data, but this does not persist, would need to pass this as part of command in the container config (docker compose or dockerfile).\n@jackmcpickle going to try the native docker for mac and test this out. Thanks!\n. ",
    "vrischmann": "Oh, ok, I didn't think of that. Fortunately the 3rd party app I use is updated to work with TLS, so it's all good in the end.\nThanks !\n. ",
    "carmstrong": "Any timeline on a release with this fix?\n. ",
    "justquick": "@vrischmann it seems that docker is still trying to load your tls certs. i was able to get a work around functioning by modifying the /etc/init.d/docker init script on the vm and removing /var/lib/boot2docker/profile entirely.\n``` diff\n--- /etc/init.d/docker\n+++ /etc/init.d/docker-no-tls\n@@ -6,7 +6,7 @@\n test -f '/var/lib/boot2docker/profile' && . '/var/lib/boot2docker/profile'\n: ${DOCKER_HOST:='-H tcp://0.0.0.0:2375'}\n-: ${DOCKER_TLS:=auto}\n+: ${DOCKER_TLS:=''}\n : ${DOCKER_STORAGE:=auto}\n : ${DOCKER_DIR:=/var/lib/docker}\n : ${DOCKER_ULIMITS:=1048576}\n```\nthen run sudo /etc/init.d/docker restart on the vm and then boot2docker -v up on your computer. make sure to clear out any of the tls related env vars by running unset DOCKER_TLS_VERIFY DOCKER_CERT_PATH on your computer (you should only need to set DOCKER_HOST to make it work w/o tls). if everything is happy, you should b able to see info by running docker info on your computer.\n. ",
    "FelikZ": "Googled a bit of the internet and found the issue is probably in vboxsf and people use NFS as a workaround on this:\nhttp://mitchellh.com/comparing-filesystem-performance-in-virtual-machines\nhttps://docs.vagrantup.com/v2/synced-folders/nfs.html\nIs it possible to fix this in that way?\n. @bentruyman have you any public repo with the example of usage NFS via Vagrant?\n. @bentruyman have you any public repo with the example of usage NFS via Vagrant?\n. ",
    "bentruyman": "I've resolved to using Vagrant + Docker provisioning, pointing my Docker CLI to the Vagrant created machine and using NFS shares (as they're quite easy to setup) and the performance issues vanished. Although, setting up NFS with the boot2docker VM isn't too difficult, but the setup for myself and my team is a bit more straightforward with tools like Vagrant right now, in my opinion.\n. I've resolved to using Vagrant + Docker provisioning, pointing my Docker CLI to the Vagrant created machine and using NFS shares (as they're quite easy to setup) and the performance issues vanished. Although, setting up NFS with the boot2docker VM isn't too difficult, but the setup for myself and my team is a bit more straightforward with tools like Vagrant right now, in my opinion.\n. ",
    "STRML": "I've ended up doing the same as @sdmoralesma, using parallels/boot2docker-vagrant-box. It's a bit more work to get going and it can be fiddly for some of our devs, but at least it's not mind-numbingly slow. Would be great if boot2docker.pkg supported NFS, it would really simplify things. IMO with vboxfs it's not suitable for development at all.\n. Thank you! I've been using NFS, but this is very promising as an\nalternative!\nOn 5/19/15 11:59 AM, Yevgeniy Brikman wrote:\n\nFor folks still struggling with the performance of mounted folders and\nvboxsf, check out A productive development environment with Docker on\nOS X http://www.ybrikman.com/writing/2015/05/19/docker-osx-dev/.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/593#issuecomment-103590847.\n. \n",
    "lox": "Interesting idea @leighmcculloch, the only bummer is that it eliminates the nice characteristics of having /Users mounted in the docker host. \n. This is a huge problem for our team of 30 now using docker-machine. We run into this on a daily basis and need to destroy and recreate our VMs. \nAre there any temporary workarounds that will let us tune the ratio of inodes?\nhttps://github.com/docker/docker/issues/9755\nhttps://github.com/coreos/bugs/issues/264\n. Looks like my whitespace settings have caused additional diffs. Will correct shortly.\n. I've updated this based on feedback, presently building a local test image. Are there any other places that mkfs.ext4 is called that need updating?\n. Nice, thanks all!\n. Yup, I think 4096 or 8192 would be sensible. I'll update the PR.\nOn Saturday, February 20, 2016, Tianon Gravi notifications@github.com\nwrote:\n\nIn rootfs/rootfs/etc/rc.d/automount\nhttps://github.com/boot2docker/boot2docker/pull/1135#discussion_r53547073\n:\n\n@@ -49,7 +49,7 @@ if [ ! -n \"$BOOT2DOCKER_DATA\" ]; then\n                 sleep 0.5\n             done\n             BOOT2DOCKER_DATA=echo \"${UNPARTITIONED_HD}1\"\n-            mkfs.ext4 -L $LABEL $BOOT2DOCKER_DATA\n-            mkfs.ext4 -T news -L $LABEL $BOOT2DOCKER_DATA\n\nDoes our mkfs.ext4 implementation include the -T flag? Does it include\n/etc/mke2fs.conf to define what news means? Would it be safer to instead\njust use -i directly and figure out an OK value? I've had good luck with -i\n8096 myself generally, but did recently have to reformat my home machine\nto -i 6072 (but granted that I do a lot of work on the Docker Official\nImages, so I have thousands++ of images/layers on a constant, cycling basis\nso I think I'm a bit of an edge case here I think).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/pull/1135/files#r53547073.\n. \n",
    "jsamouh": "No temporary Stable solution for Windows ?\n. @fyddaben Can you be more specific ? :/\nToday The fact is:\n1/ docker machine runs almost good in windows 7 except the shared vboxsf of Vbox which is very slow. Change vboxsf to NFS, CIFS, SMB is a complicated stuff and generate severals errors (symlinks, difficult setup for designers in Windows...)\n2/ Boot2docker Vagrant Box is an alternative to the problem but the setup takes several hours if everything is okay... The final is something which work but with big problems as \"cannot enable tty mode\"... Crazy errors if you have a docker image displaying something...\nThe need is to have a docker in windows with shared volumes for developpers (web designers in my case) by following the normal process of docker install (docker toolbox) and have a \"correct\" shared volume performance...\nIf you have something easier than 1/ and faster/better than 2/ , I Take :P\nAnd Yeah, I think everybody sould go to Linux or Mac but in big companies, my bad, Windows stays the King...\n. @fyddaben Can you be more specific ? :/\nToday The fact is:\n1/ docker machine runs almost good in windows 7 except the shared vboxsf of Vbox which is very slow. Change vboxsf to NFS, CIFS, SMB is a complicated stuff and generate severals errors (symlinks, difficult setup for designers in Windows...)\n2/ Boot2docker Vagrant Box is an alternative to the problem but the setup takes several hours if everything is okay... The final is something which work but with big problems as \"cannot enable tty mode\"... Crazy errors if you have a docker image displaying something...\nThe need is to have a docker in windows with shared volumes for developpers (web designers in my case) by following the normal process of docker install (docker toolbox) and have a \"correct\" shared volume performance...\nIf you have something easier than 1/ and faster/better than 2/ , I Take :P\nAnd Yeah, I think everybody sould go to Linux or Mac but in big companies, my bad, Windows stays the King...\n. @fyddaben it seems your website supports only OSX, alternative for windows ?\nThanks for your help\n. @fyddaben it seems your website supports only OSX, alternative for windows ?\nThanks for your help\n. ",
    "jeffmendoza": "@SvenDowideit How about rename automount-shares to automount-shares-vbox, and then run the hyperv daemon in /etc/rc.d/hyperv-daemon? Seems like overkill to put a one (two?) liner in an rc.d script though.\n. @tianon Updated\n. Rebased\n. Rebased\n. Looks like rootfs/rootfs/etc/vmware-tools/scripts/vmware/network is LGPL, can it be contributed under Apache 2?\n. I see two options:\n1. We put a json file or file listing env vars into the tar that is put on the disk that machine/boot2docker-cli attaches to the b2d vm on boot. (Where the ssh keys are put currently). Boot2docker will load the options on boot, and act accordingly.\n2. Machine can ssh in after boot, cat \"AUTH=identity\" to /var/lib/boot2docker/profile\" and reboot the vm. Boot2docker will configure the daemon accordingly.\n. I don't see why not. When boot2docker.iso boots up, it will look for the file in the user's home dir (after automount extracts the tar there). If it doesn't find anything it will not set any options.\n. @SvenDowideit looks perfect.\n. @SvenDowideit looks perfect.\n. The LICENSE file in this repo should apply to the (textual) contents of this git repo. TCL is not checked in.\nThe iso has the licenses under /usr/share/doc/Licnse which apply to the contents of the iso.\n. Oh, hmm, I see there is isolinux.bin checked in, that is probably GPL.\n. No idea, I'm imagining something like: http://windows.microsoft.com/en-us/windows/preview-updates-feedback-pc\n. I found this: https://4sysops.com/archives/install-virtualbox-guest-additions-on-windows-10/\n. I found this: https://4sysops.com/archives/install-virtualbox-guest-additions-on-windows-10/\n. Yep, this sounds great.\n. ",
    "bhandras": "To reproduce this issue, you'll need to have a home directory with and accented character in it. eg. c:\\Users\\Andr\u00e1s\nStill a bug in 1.3.2\n. ",
    "ahallock": "@SvenDowideit Thanks for looking into this. I tried your suggestion, but didn't notice any performance improvements. I could try to use the boot2docker ip instead of localhost, but this app is highly opinionated that the dev env runs on localhost.\n. @nicklinnell I was editing files inside the VM in the Vagrant setup -- no shared directories. So you're right, it's most likely the vbox shares.\n. ",
    "Shtucer": "I have the semisame issue. My home directory located on d:\\Users\\username and c:\\Users\\username is a hardlink to it. When I try to start boot2docker I have this error\n\nerror in run: config error: failed to get boot2docker directory: readlink C:\\Users\\username: The system cannot find the file specified.\n\nUPD: I think I solve my problem by setting USERPROFILE variable.\n. ",
    "LyndonArmitage": "Was having the same issue. Users folder is on D:/ drive. Creating a C:/Users folder solved the issue as happened with @kdepraet.\nNothing was added to C:/Users/ on success.\n. ",
    "step21": "Same issue here. @Shtucer what did you set USERPROFILE to? Shouldn't that be set already?\n@LyndonArmitage I cannot creat C:\\Users unfortunately as this is a junction/hardlink as others have also stated. This is just the best way to put the whole users folder somewhere else.\n. Same issue here. @Shtucer what did you set USERPROFILE to? Shouldn't that be set already?\n@LyndonArmitage I cannot creat C:\\Users unfortunately as this is a junction/hardlink as others have also stated. This is just the best way to put the whole users folder somewhere else.\n. ",
    "ftom": "sorry, bad interpretation on my side, this has to be positioned at daemon command line and not on command-line client side. It makes things a bit trickier :)\n. Added registration of multiple mirrors\n. Indeed, EXTRA_ARGS overloading can be sufficient as soon as documentation describes the procedure, which is what I was lacking when I first asked the question.\nI let up to you to decide what is the preferred direction.\n. Indeed, EXTRA_ARGS overloading can be sufficient as soon as documentation describes the procedure, which is what I was lacking when I first asked the question.\nI let up to you to decide what is the preferred direction.\n. ",
    "ebuildy": "+1, docker-compose is really missing\n. ",
    "edmorley": "Whilst the native Compose binary doesn't work in the boot2docker VM due to docker/compose#599, installing the docker-compose Python package inside boot2docker works perfectly (from what I can tell so far).\nIn fact, it seems to work even better than the \"docker-compose in a container\" method (aka alias docker-compose=\"docker run -v ...\") - since that currently has a caching bug (dduportal-dockerfiles/docker-compose#6).\nAs such for now, running the Python docker-compose package inside boot2docker seems to be the most reliable solution for Windows users (having spent many hours trying to battle with the alternatives).\nTo install docker-compose from PyPI, run this from inside boot2docker:\nbash\ndocker@boot2docker:~$ tce-load -wi python && curl https://bootstrap.pypa.io/get-pip.py | sudo python - && sudo pip install -U docker-compose\nTo save having to run the above every time the boot2docker VM is restarted (since changes don't persist), you can use bootlocal.sh like so:\nbash\ndocker@boot2docker:~$ echo 'su docker -c \"tce-load -wi python\" && curl https://bootstrap.pypa.io/get-pip.py | python - && pip install -U docker-compose' | sudo tee /var/lib/boot2docker/bootlocal.sh > /dev/null && sudo chmod +x /var/lib/boot2docker/bootlocal.sh\n(The su docker -c gymnastics are required since tce-load cannot be run as root, and bootlocal.sh is run as root. The chmod of bootlocal.sh should be unnecessary once #915 is fixed. Add -a to the tee command if you need to append, rather than overwrite bootlocal.sh.)\nIf you wish to use a pre-release version of docker-compose, then replace pip install -U docker-compose with pip install -U docker-compose==1.3.0rc2 or equivalent.\n. Sorry ignore the above, I misread the OP - my issue turned out to be boot2docker/boot2docker-cli#369.\n. I created the VM using boot2docker init which is what https://github.com/boot2docker/boot2docker#persist-data says to do, however the data was not persisted. I suspect this is broken on Windows only?\n. Appreciate the help! :-)\nLooking closer, my boot2docker.exe restart has persisted the /var/lib/{boot2docker,docker} directories, but has wiped everything else.\nThe persist-data section in the readme says:\nWhen you run boot2docker init, the boot2docker tool auto-creates a disk that will be\nautomounted and used to persist your docker data in /var/lib/docker and\n/var/lib/boot2docker. This virtual disk will be removed when you run boot2docker delete.\nIt will also persist the SSH keys of the machine.\nTo me that doesn't imply \"if you reboot the VM, you'll lose everything apart from what is in  /var/lib/{boot2docker,docker}\".\nThe Local Customisation section in the FAQ doesn't warn about this either. \nIf this really is expected behaviour, perhaps we need to:\n1) Add a \"Only files under /var/lib/{boot2docker,docker} will be preseved when the VM reboots\" to the persist-data section of the readme, and also add a link to the \"Local Customisation\" section of the FAQ.\n2) Change the \"Local Customisation\" wording from:\nIf you have a persistence partition, you *can* make customisations...\nto something like:\nIf you wish for customisations to be persisted after reboots, you *must* have a persistence\npartition, and edit files under ``/var/lib/{boot2docker,docker}``, since anything outside of\nthere will not be retained...\n. Happy to submit one - just wanted to make sure this definitely was expected behaviour before doing so :-)\n. Ah good point - have updated to use /bin/sh - thanks! :-)\n. Ah good point - have updated to use /bin/sh - thanks! :-)\n. I'm happy to defer to your judgement on this - however for me it comes down to which scenario is going to be most common:\n1) A dev using sudo (since the target is owned by root) copies/creates a files called exactly bootlocal.sh or bootsync.sh to precisely the directory /var/lib/boot2docker/, but doesn't want - or expect - it to be executed.\n2) A dev copies said file, but forgets to set execute, or thinks that since the original file had execute set, they wouldn't need to set it again - but virtualbox shared folders/something else meant otherwise.\nFor me, case 2 is the much more likely - and since boot2docker is a dev environment, not production, protecting against the first case doesn't seem that important (anyway, if someone has root, the execute bit is neither here nor there).\nUltimately I've learnt my lesson with this (and it only wasted a few mins of my time until I found where the log was [no output is shown in the console during login], so could be worse), so it doesn't matter too much either way - was just hoping to save others wasting any more time doing the same :-)\n. Thanks! :-)\n. Thanks! :-)\n. ",
    "bhatt40": "@edmorley Thanks for this.  I used this method to install docker-compose on the Boot2Docker VM, but I have one issue.  When I ssh into the VM and run the docker-compose ps command, I receive this error:\nCouldn't connect to Docker daemon at http+unix://var/run/docker.sock - is it running?\nI know the daemon is running, because I can run docker ps from my Windows host and get a list of running containers.  I notice that $DOCKER_HOST is undefined in my Boot2Docker VM, but I'm not sure what it should be set to within the VM.\n. ",
    "jayfresh": "@edmorley Having done this inside the boot2docker vm (in Windows), I'm now unclear whether I can reference the files I had available on my main disk. What I'm trying to do is make use of docker-compose in a development workflow, so I'd like to mount a local folder into the container. Unfortunately, docker-compose isn't accessible from the boot2docker bash terminal, and the files aren't available to reference if you ssh into the vm. Of course, I might be misunderstanding how it's working...\n. thanks guys!\n. ",
    "wharsojo": "Hi Guys,\nI did some packaging docker-compose + tmux + zsh (prezto - OMZ) into easy installation:\nhttps://github.com/wharsojo/myboot2docker \nyou can see on this demo how installation and docker-compose works, including tmux, zsh (prezto - OMZ) \nhope it helps.\n. ",
    "aaronfay": "Hey @SvenDowideit, here's the output:\naf:~ aaronfay$ boot2docker -v\nBoot2Docker-cli version: v1.3.0\nGit commit: deafc19\nUsage: boot2docker [<options>] {help|init|up|ssh|save|down|poweroff|reset|restart|config|status|info|ip|socket|shellinit|delete|download|upgrade|version} [<args>]\naf:~ aaronfay$ boot2docker ssh\n                        ##        .\n                  ## ## ##       ==\n               ## ## ## ##      ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n           \\______ o          __/\n             \\    \\        __/\n              \\____\\______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nboot2docker: 1.3.0\n             master : a083df4 - Thu Oct 16 17:05:03 UTC 2014\ndocker@boot2docker:~$ docker --version\nDocker version 1.3.0, build c78088f\nThanks\n. Hey @SvenDowideit, here's the output from those commands. I've added a ping in just to confirm the host is available:\n```\naf:~ aaronfay$ docker --version\nDocker version 1.3.0, build c78088f\naf:~ aaronfay$ env | grep DOCKER\nDOCKER_HOST=tcp://192.168.59.103:2376\nDOCKER_TLS_VERIFY=1\nDOCKER_CERT_PATH=/Users/aaronfay/.boot2docker/certs/boot2docker-vm\naf:~ aaronfay$ ping 192.168.59.103\nPING 192.168.59.103 (192.168.59.103): 56 data bytes\n64 bytes from 192.168.59.103: icmp_seq=0 ttl=64 time=4.553 ms\n64 bytes from 192.168.59.103: icmp_seq=1 ttl=64 time=3.923 ms\n^C\n--- 192.168.59.103 ping statistics ---\n2 packets transmitted, 2 packets received, 0.0% packet loss\nround-trip min/avg/max/stddev = 3.923/4.238/4.553/0.315 ms\naf:~ aaronfay$ \n``\n. Ok, so an update on this issue. I use iTerm2, which is where I'm having the problem specifically. When I run theboot2docker` application from Applications I get a plain old terminal that runs a bunch of commands when it opens, and from there the docker client works fine. \nCopying everything that's run verbatim from the boot2docker terminal into my custom terminal appears to solve the issue (I've left out the bash command on line 1 to spare the extra shell):\nunset DYLD_LIBRARY_PATH ; unset LD_LIBRARY_PATH\nmkdir -p ~/.boot2docker\nif [ ! -f ~/.boot2docker/boot2docker.iso ]; then cp /usr/local/share/boot2docker/boot2docker.iso ~/.boot2docker/ ; fi\n/usr/local/bin/boot2docker init \n/usr/local/bin/boot2docker up \n$(/usr/local/bin/boot2docker shellinit)\ndocker version\nWith that I get a functional docker client:\naf:~ aaronfay$ docker version\nClient version: 1.3.1\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): 4e9bbfa\nOS/Arch (client): linux/amd64\nServer version: 1.3.1\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): 4e9bbfa\naf:~ aaronfay$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\naf:~ aaronfay$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\ndockerdemo_web      latest              3b814f6a6155        21 minutes ago      199.3 MB\nubuntu              14.04               5506de2b643b        2 weeks ago         199.3 MB\nubuntu              latest              5506de2b643b        2 weeks ago         199.3 MB\naf:~ aaronfay$\nHope that helps anyone else.\nEDIT I've also cleared out some environment variables and an alias to the docker command that I had set in my .bash_profile trying to debug the issue in the first place, and now I'm not 100% sure what the fix was. I now cannot seem to reproduce the original issue.\n. ",
    "7kaji": "I have the same trouble as you have.\n$ boot2docker ssh docker version\nClient version: 1.3.1\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): 4e9bbfa\nOS/Arch (client): linux/amd64\nServer version: 1.3.1\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): 4e9bbfa\n. ",
    "SamMorrowDrums": "Thanks @Kris-Law, the above suggestion worked for me too. New remote member to my team, who needed to install our dev env, and the latest B2D doesn't seem to work, without the steps above :-/\nAnyway, the boot2docker delete, remove Network Only Hosts, and then B2D init and B2D up worked!\n+1 for that, without that post I'd have had a nightmare doing this remotely.\n. Some of the issues with a colleague using the latest Boot2docker were actually with using Fig, and the update to TLS with Boot2docker was initially problematic. I think the dust has begun to settle, but there should be some way of pinning the stack to a specific version?\nNode, Meteor and a number of other projects have simple ways of selecting versions for production projects and hard-coding that into the app.\nIs there any way we could look at a command line flag, that can replace the version, so we can avoid issues of a stack not working on a new install?\nNot all developers in the team, are dealing with Docker directly, and troubleshooting isn't always the easiest.\n. ",
    "tegansnyder": "@frosenberg  has a method that works for me:\nhttps://github.com/frosenberg/docker-dns-scripts/blob/master/vpn-fix.sh\n. @frosenberg  has a method that works for me:\nhttps://github.com/frosenberg/docker-dns-scripts/blob/master/vpn-fix.sh\n. ",
    "pavelz": "same as #290 \n. ",
    "rvangundy": "I'm getting the same thing. I've destroyed other VMs in VirtualBox. This occurred from a fresh install of boot2docker. I'm running:\nBoot2Docker Version: v1.3.1 r57ccdb8\nMac OS X Yosemite v10.10\nVirtual Box: v4.3.18 r96516\nLooks like more of #405 \n. ",
    "DominikTo": "Same issue (brew upgraded, boot2docker upgraded, deleted vm, deleted boot2docker keys in ~/.ssh, re-run boot2docker init) - always get the password prompt after boot2docker up (which does not accept tcuser). When then logging in via boot2docker ssh at least the tcuser password is accepted, but when looking at cat /.ssh/authorized_keys on the boot2docker-vm it's definitely not the key that was created on the host system (no key at all on the host actually: cat ~/.ssh/*.pub).\nboot2docker init -v shows that the newly generated key got copied over to the new vm, but the key that's actually on the vm is not the one that was shown in the copy step output of boot2docker init -v. Maybe it gets garbled somehow? The key on the vm (despite always deleting id_boot2docker* on the host for every test run) is always the same (none that actually exists on the host system).\n. ",
    "bukzor": "I'm having this issue today. This seems to be the cause:\n$ /usr/bin/ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 2022 -i /Users/buck/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0644 for '/Users/buck/.ssh/id_boot2docker' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nbad permissions: ignore key: /Users/buck/.ssh/id_boot2docker\ndocker@localhost's password:\n. Putting correct permissions on the file seems to fix it:\n$ chmod go-r ~/.ssh/id_boot2docker\n$ /usr/bin/ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 2022 -i /Users/buck/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nWarning: Permanently added '[localhost]:2022' (RSA) to the list of known hosts.\n4: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 08:00:27:06:ec:56 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe06:ec56/64 scope link\n       valid_lft forever preferred_lft forever\n. ",
    "yms9654": "+1\n. +1\n. This is solution in my case.\n1. copy ~/.ssh/id_boot2docker.pub to clipboard.\n2. boot2docker ssh\n   (password is 'tcuser')\n3. paste to ~/.ssh/authorized_keys file.\n4. exit and try agin 'boot2docker start'\n. This is solution in my case.\n1. copy ~/.ssh/id_boot2docker.pub to clipboard.\n2. boot2docker ssh\n   (password is 'tcuser')\n3. paste to ~/.ssh/authorized_keys file.\n4. exit and try agin 'boot2docker start'\n. ",
    "swatcat92": "$ docker run ubuntu /bin/echo 'Hello world'\nPost http://127.0.0.1:2375/v1.20/containers/create: dial tcp 127.0.0.1:2375: ConnectEx tcp: No connection could be made because the target machine actively refused it..\n- Are you trying to connect to a TLS-enabled daemon without TLS?\n- Is your docker daemon up and running?\n  \"how to resolve this problem can any one help me? please\"\n. $ docker run ubuntu /bin/echo 'Hello world'\nPost http://127.0.0.1:2375/v1.20/containers/create: dial tcp 127.0.0.1:2375: ConnectEx tcp: No connection could be made because the target machine actively refused it..\n- Are you trying to connect to a TLS-enabled daemon without TLS?\n- Is your docker daemon up and running?\n  \"how to resolve this problem can any one help me? please\"\n. ",
    "geev03": "The ssh password for user tc is not  known, so changed it and got ssh working\ncut -d: -f1 /etc/passwd\npasswd tc\nlogin as: tc\ntc@192.168.8.157's password:\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"_**/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           _ o           /\n             \\    \\         /\n              **____/\n\n| |   | |_| \\ **| |  | |  _ __\n| '_ \\ / _ \\ / _ | | ) / ` |/ _ \\ / __| |/ / _ \\ '|\n| |) | () | () | | / / (| | () | (|   <  / |\n|./ _/ / __|_,|/ **||____||\nWARNING: this is a build from test.docker.com, not a stable release.\nCould not chdir to home directory /home/tc: No such file or directory\nBoot2Docker version 1.12.1-rc1, build HEAD : 0e17a04 - Mon Aug 15 18:14:57 UTC 2016\nDocker version 1.12.1-rc1, build 7889dc7\n. ",
    "wangxiaofeng0010": "thanks for @yms9654 , the problem has solved. ",
    "flyisland": "I'm using the latest version of VirtualBox now (v 4.3.18 r96516), some one said https://www.virtualbox.org/ticket/13187 is fixed in 4.3.18 :(\n. @tianon yes, you are right, i make this stupid mistake!\nit works now.\n. ",
    "rayjohnson": "I'm having the exact same issue.  Did you get any resolution?\n. Did you get an answer to this?  I have the same question...\n. ",
    "chrishiestand": "I had this issue or a similar one. Turned out I had an old VirtualBox installation. I uninstalled VirtualBox using the uninstall script (in the installer dmg), installed the latest VirtualBox, then reinstalled boot2docker with homebrew and it worked great.\n. I had this issue or a similar one. Turned out I had an old VirtualBox installation. I uninstalled VirtualBox using the uninstall script (in the installer dmg), installed the latest VirtualBox, then reinstalled boot2docker with homebrew and it worked great.\n. ",
    "phuongnd08": "Oh, I see. It's funny that docker doesn't try to match the name first but the container hex ID. Thanks.\n. ",
    "moriame": "forget it.\ni just stop the VM with VirtualBox.\nThen a start boot2docker from command line & run \"boot2docker ssh\" : I'm now in azerty keyboard.\nsorry for openning this issue for nothing\n. ",
    "atbaker": "@SvenDowideit set me straight on Twitter: https://twitter.com/SvenDowideit/status/530476398377713667\nI'm going to close this PR. Sorry for the inconvenience all!\n. ",
    "nikhilbhardwaj": "Found an answer on SO, related to a previous issue which was resolved.\n. The accepted answer by treehau5 worked for me.\n. ",
    "josephpage": "Yep, but a 32bit release of boot2docker doesn't make sense while Docker is not supporting i386 arch.\n. Hey @arnaudkuyper \nInstead of using -v C:/Users/Code:/var/www/data or Samba, you should try : \nbash\n-v /c/Users/Code:/var/www/data\nbecause your C:/Users is exposed inside your Boot2docker vm with VirtualBox Shared Folders to /c/Users.  (On OS X, /Users is exposed to /Users in the vm)\nhttps://github.com/boot2docker/boot2docker#virtualbox-guest-additions\nYou can also use relative paths with docker-compose https://docs.docker.com/compose/yml/#volumes\nFYI you can get docker-compose working on Windows thanks to \"docker-compose inside Docker\" :\n```\nAfter  boot2docker ssh\nalias docker-compose=\"docker run --rm -t \\\n    -v $(pwd):$(pwd) -w=$(pwd) \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    dduportal/docker-compose:latest\"\n```\nI hope it will be helpful\n. Seems like a good idea.\nThis is a common problem for Windows users. In my team, this happened many times with node_modules/[..]/node_modules/[..]/node_modules/etc folder (Node.js).\nThe path parameter is set here : https://github.com/boot2docker/boot2docker-cli/blob/master/virtualbox/machine.go#L135\nWe should care about performance and check if extended path format is not slower than actual shared folder (which is slow already).\n. Got the same (1.6.2)\n. @SvenDowideit I just discovered your xrdp image, and it is awesome !\nWill you provide soon an automated build for it ?\n. +1\n. Great !!\n:+1:  :+1: :+1: :+1: :+1: :+1: :+1:\n. Embed docker-compose inside boot2docker may be a way to solve the inequality between OS X/Linux and Windows in the brand new (and awesome) Docker Toolbox.\n. Yes ! :+1:\n. Same problem. Fix only by @gesellix workaround.\n. Same problem. Fix only by @gesellix workaround.\n. I'm wondering if boot2docker 1.7.0 on OS X is working out of the box for\nsomeone !\nIn addition to a fix, we need this use case to be tested.\n. You've probably had some problems when downloading boot2docker.iso\nWhat if you're retrying boot2docker upgrade ?\n. You've probably had some problems when downloading boot2docker.iso\nWhat if you're retrying boot2docker upgrade ?\n. Brilliant idea...  but too late, isn't it ?\n. Brilliant idea...  but too late, isn't it ?\n. Hey,\nIs docker --tlsverify=false version working ?\n. Hey,\nIs docker --tlsverify=false version working ?\n. Mmm, your env variables are not set properly for Windows, so docker client try to connect to 127.0.0.1:2375 instead of 192.166.59.103:2375.\nTry in Powershell :\n$Env:DOCKER_HOST = \"tcp://192.168.59.103:2376\"\n$Env:DOCKER_CERT_PATH = \"C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\"\n$Env:DOCKER_TLS_VERIFY = \"1\"\n. Mmm, your env variables are not set properly for Windows, so docker client try to connect to 127.0.0.1:2375 instead of 192.166.59.103:2375.\nTry in Powershell :\n$Env:DOCKER_HOST = \"tcp://192.168.59.103:2376\"\n$Env:DOCKER_CERT_PATH = \"C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\"\n$Env:DOCKER_TLS_VERIFY = \"1\"\n. Weird.\nA last try : docker -H tcp://192.168.59.103:2376 --tlsverify=false ps\nLook at this fix and the thread too.\n. Weird.\nA last try : docker -H tcp://192.168.59.103:2376 --tlsverify=false ps\nLook at this fix and the thread too.\n. Have a look at this fix : https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164\nDuplicate of #824\n. Have a look at this fix : https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164\nDuplicate of #824\n. :+1: \n. ",
    "sja45uk": "Please can you provide a link to the patch?\n. ",
    "CleanCut": "@tianon Ok, thanks.\n. @SvenDowideit @madtechsupport \nThere's another Virtualbox bug for this here:\nhttps://www.virtualbox.org/ticket/12597\nI added my feedback to it, but it doesn't look like it's getting any attention upstream.  This issue is preventing my organization from using containers for development.\n. @haggen Yes, in my case getting everything to avoid using sendfile made it so I could work around the bug.  It took me weeks to find exactly what was using it, though.\n. @haggen Yes, in my case getting everything to avoid using sendfile made it so I could work around the bug.  It took me weeks to find exactly what was using it, though.\n. Are trying to mount a host volume from outside /Users?  I'm just another user and I'm curious as to what your exact problem actually is.\n. @jakirkham Your three-step fix worked great for me.  I'm looking forward to 1.7.1, as this issue is affecting us quite a bit.\n. ",
    "rawlingsj": "This error seems to not be reproducible on other machines so I will close.\n. This error seems to not be reproducible on other machines so I will close.\n. ",
    "sge-babrams": "I have seen the same issue, using fig to build and bring up images but I do not think this is fig related:\nCannot destroy container 404b4aa0fe69c63c481171cdad553f4fb17977d469d771214aa8f1eeadd4911a: Driver aufs failed to remove root filesystem 404b4aa0fe69c63c481171cdad553f4fb17977d469d771214aa8f1eeadd4911a: rename /mnt/sda1/var/lib/docker/aufs/mnt/404b4aa0fe69c63c481171cdad553f4fb17977d469d771214aa8f1eeadd4911a /mnt/sda1/var/lib/docker/aufs/mnt/404b4aa0fe69c63c481171cdad553f4fb17977d469d771214aa8f1eeadd4911a-removing: device or resource busy\n. Other people are experiencing this: http://transcripts.jboss.org/channel/irc.freenode.org/%23fabric8/2014/%23fabric8.2014-11-12.log.html\n. ",
    "DariusLT": "I removed the boot2docker-vm from the VirtualBox GUI and did what you suggested. I can see that it is started up, but somehow I can't get connection to it....\nHere is a snapshot:\nBoot2Docker-cli version: v1.3.1\nGit commit: 57ccdb8\n2014/11/13 09:24:10 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/11/13 09:24:11 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2014/11/13 09:24:11 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2014/11/13 09:24:11 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\n2014/11/13 09:24:11 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2014/11/13 09:24:11 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2014/11/13 09:24:11 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://lo\nIf I type in 'env', I don't see any DOCKER environment variables at all....\n. I removed the boot2docker-vm from the VirtualBox GUI and did what you suggested. I can see that it is started up, but somehow I can't get connection to it....\nHere is a snapshot:\nBoot2Docker-cli version: v1.3.1\nGit commit: 57ccdb8\n2014/11/13 09:24:10 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/11/13 09:24:11 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2014/11/13 09:24:11 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2014/11/13 09:24:11 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\n2014/11/13 09:24:11 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2014/11/13 09:24:11 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2014/11/13 09:24:11 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://lo\nIf I type in 'env', I don't see any DOCKER environment variables at all....\n. By the way, every time I'm starting boot2docker from the app icon, I'm getting this message:\nGet http:///var/run/docker.sock/v1.15/containers/json: dial unix /var/run/docker.sock: no such file or directory\nI'm on MAC Yosemite; Boot2Docker v. 1.3.1\n. By the way, every time I'm starting boot2docker from the app icon, I'm getting this message:\nGet http:///var/run/docker.sock/v1.15/containers/json: dial unix /var/run/docker.sock: no such file or directory\nI'm on MAC Yosemite; Boot2Docker v. 1.3.1\n. OK, I'm fed up!!! Can't deal with it anymore. I tried every single trick out there, but no success. Unfortunately, no support here neither.\nI decided to do it via Vagrant/CoreOS. Here is nice video how to do it: https://www.youtube.com/watch?v=tkyjNPNhD4c and the official website is here: https://coreos.com/docs/running-coreos/platforms/vagrant/\nIn my opinion, it's better anyway to go for vagrant since you wanna deploy and run it on multiple platforms and not being hooked to an OS.\nAnyway, boot2docker is a great starting point! Good luck with it!!\n. OK, I'm fed up!!! Can't deal with it anymore. I tried every single trick out there, but no success. Unfortunately, no support here neither.\nI decided to do it via Vagrant/CoreOS. Here is nice video how to do it: https://www.youtube.com/watch?v=tkyjNPNhD4c and the official website is here: https://coreos.com/docs/running-coreos/platforms/vagrant/\nIn my opinion, it's better anyway to go for vagrant since you wanna deploy and run it on multiple platforms and not being hooked to an OS.\nAnyway, boot2docker is a great starting point! Good luck with it!!\n. After giving up and now reading all your comments, I thought, I'm gonna give it another shot and voila... It's working. ;)\nFirst of all, thanks to \"darrengruber\", who pointed it out to check in my hosts for entry:\n127.0.0.1    localhost\nIndeed, this entry was commented out. I put it back and did the update to version 1.5.0 and removed the entry from the VirtualBox Manager. \nStarted boot2docker by doing:\n$ boot2docker -v init\n$ boot2docker -v up\nAfter the first 'up' it asked me to set some environment path\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.104:2376\n    export DOCKER_CERT_PATH=/Users/DarusLT/.boot2docker/certs/boot2docker-vm\n    export DOCKER_TLS_VERIFY=1\nAfter this, I was able to use it as from the beginning. I'm not sure what was the cause, but I would say both. The commented out host and the update.\nI hope it helps.\n. After giving up and now reading all your comments, I thought, I'm gonna give it another shot and voila... It's working. ;)\nFirst of all, thanks to \"darrengruber\", who pointed it out to check in my hosts for entry:\n127.0.0.1    localhost\nIndeed, this entry was commented out. I put it back and did the update to version 1.5.0 and removed the entry from the VirtualBox Manager. \nStarted boot2docker by doing:\n$ boot2docker -v init\n$ boot2docker -v up\nAfter the first 'up' it asked me to set some environment path\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.104:2376\n    export DOCKER_CERT_PATH=/Users/DarusLT/.boot2docker/certs/boot2docker-vm\n    export DOCKER_TLS_VERIFY=1\nAfter this, I was able to use it as from the beginning. I'm not sure what was the cause, but I would say both. The commented out host and the update.\nI hope it helps.\n. ",
    "splusk": "Just out of interest do you have port forwarding setup on VirtualBox for the boot2docker image from host: 2022 to guest: 22\nYou can check this in VirtualBox via right clicking the image  and selecting settings > network > advanced > port forwarding\nDoing this is not normally part of the set up, but of course sometimes things can go wrong\n. ",
    "darrengruber": "I'd advise people to check the file /etc/hosts and ensure that\n127.0.0.1    localhost\nexists. Once we added that line back (the file got wiped inadvertently) everything worked!\n. ",
    "pwais": "FWIW I just upgraded from v1.3.2 to the freshly released boot2docker v1.5.0 and 1.5 appears to work in OSX 10.9.4 <3 <3 <3\n. ",
    "tcucchietti": "After upgrading to v.1.50, problem has been resolved, ending with same output that Darius\n. ",
    "jamyouss": "I have exactly the same problem on mac os x yosemite.\nWaiting for VM and Docker daemon to start...\n..........................................................................oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\nStarted.\n  Trying to get Docker socket one more time\nError requesting socket: exit status 255\nAuto detection of the VM's Docker socket failed.\nPlease run `boot2docker -v up` to diagnose.\nwith verbose i am blocked on Connecting to tcp://localhost:2022\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/08 20:11:27 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/08 20:11:27 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/08 20:11:27 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0)2015/03/08 20:11:27 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/jamal/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nHave anyone found a solution ?\n. I have exactly the same problem on mac os x yosemite.\nWaiting for VM and Docker daemon to start...\n..........................................................................oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\nStarted.\n  Trying to get Docker socket one more time\nError requesting socket: exit status 255\nAuto detection of the VM's Docker socket failed.\nPlease run `boot2docker -v up` to diagnose.\nwith verbose i am blocked on Connecting to tcp://localhost:2022\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/08 20:11:27 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/08 20:11:27 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/08 20:11:27 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0)2015/03/08 20:11:27 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/jamal/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nHave anyone found a solution ?\n. Already tried and have also made a full reinstallation but doesn't work.\n. It works !\nThe problem was my SSH Config. When it try to connect to boot2docker vm, it use my github private key and not the boot2docker private key.\nI fixed it by adding:\nHost boot2docker:\n    HostName: localhost\n    IdentityFile ~/.ssh/id_boot2docker\n. ",
    "psynaptic": "Try:\nboot2docker delete\nboot2docker download\nboot2docker init\nboot2docker up\nYou might have an old boot2docker image. Worked for me anyway.\n. Try:\nboot2docker delete\nboot2docker download\nboot2docker init\nboot2docker up\nYou might have an old boot2docker image. Worked for me anyway.\n. ",
    "brockwebb": "I just upgraded to 10.10.2, installed the most recent version of docker, and got similar problems which lead me here. \nI opened the virtualbox manager, which said my VBox was out of date.\nI checked the config in the port settings and the /etc/hosts file, so I thought it might be an older version of VirtualBox causing the problem...\nI upgraded VirtualBox to 4.3.24 r98716 \nI ran Docker by starting it from the VirtualBox manager, watched everything load, then went back to following the start guide on https://docs.docker.com/installation/mac/\nI was able to follow along and the \"hello world\" worked. \n. ",
    "jmfederico": "For me the problem was this line\nfe80::1%lo0     localhost\nOnce I commented it from my hosts file, it worked.\n. ",
    "tommasoboccali": "I had the same problem described here, but none of the above worked\nIt was solved via a \ndocker cask remove virtualbox\ndocker cask install virtualbox\nboot2docker delete\nboot2docker init\nboot2docker up\nin practice, a complete reinstall :(\nfortunately I had nothing NOT in the hub\n. ",
    "robertfalken": "For me, the whole delete, download, init,up thing suggested by @psynaptic was the only thing that worked. Thanks!\n. ",
    "flaccid": "I seem to run into this situation when on a corporate LAN hmm.\n. ",
    "methane": "In my case, ProxyCommand in ~/.ssh/config bited me.\nI've added following section to my ssh config:\nHost localhost\n    Hostname 127.0.0.1\n    ProxyCommand none\n. https://github.com/boot2docker/boot2docker-cli/blob/master/virtualbox/machine.go#L661\n. ",
    "zeravlar": "The Open Text Socks Client was getting in the way of Docker accessing port 2022 on my laptop...  so... uninstalled Boot2Docker, VirtualBox, Git & the Open Text Socks Client, then... reinstalled Boot2Docker, VirtualBox & Git and... successfully ran docker hello-world...  then reinstalled the open text socks client...\n. ",
    "einkinder": "Same Issue\n.Connecting to tcp://localhost:2022 (attempt #0)2015/07/21 13:43:53 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/pwalton/.ssh/id_boot2docker docker@localhost ip addr show dev eth\nI've check the .ssh, /etc/hosts/, deleted and re-installed. \nThis is a new installation of Yosemite, new boot2docker, and checked all ports, nothing else pointed to 2022.\nAny other suggestions?\n. Same Issue\n.Connecting to tcp://localhost:2022 (attempt #0)2015/07/21 13:43:53 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/pwalton/.ssh/id_boot2docker docker@localhost ip addr show dev eth\nI've check the .ssh, /etc/hosts/, deleted and re-installed. \nThis is a new installation of Yosemite, new boot2docker, and checked all ports, nothing else pointed to 2022.\nAny other suggestions?\n. ",
    "rjeczalik": "I've just bumped into this issue, starting boot2docker -v up spits out a lot of:\no2015/12/16 13:04:30 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rjeczalik/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\no2015/12/16 13:04:31 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rjeczalik/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\no2015/12/16 13:04:31 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rjeczalik/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\nIn my case the problem was a syntax error in my ~/.ssh/config file - after fixing it everything went smooth. Posting in case it saves someone some debugging.\n. ",
    "buckett": "Ok, I think this is because the boot2docker VM is using the virtualbox host based resolver to do it's DNS lookups, this server doesn't seem to support SRV requests. If you switch to the plain DNS proxy then the lookups start working again:\nVBoxManage modifyvm \"boot2docker-vm\" --natdnshostresolver1 off\nVBoxManage modifyvm \"boot2docker-vm\" --natdnsproxy1 on\nIs there a reason for preferring the resolver over the proxy?\nhttp://www.virtualbox.org/manual/ch09.html#nat-adv-dns\n. Ok, I think this is because the boot2docker VM is using the virtualbox host based resolver to do it's DNS lookups, this server doesn't seem to support SRV requests. If you switch to the plain DNS proxy then the lookups start working again:\nVBoxManage modifyvm \"boot2docker-vm\" --natdnshostresolver1 off\nVBoxManage modifyvm \"boot2docker-vm\" --natdnsproxy1 on\nIs there a reason for preferring the resolver over the proxy?\nhttp://www.virtualbox.org/manual/ch09.html#nat-adv-dns\n. This may well catch quite a few people out as DNS SRV records are used for quite a few things such as SIP, XMPP, Kerbers, etc (http://en.wikipedia.org/wiki/SRV_record#Usage)\n. @tianon That works for me, but the tradeoff of no using the host resolver or proxy is that people running boot2docker on laptops may end up with broken DNS inside their VMs when they move between networks that have different DNS resolves setup I don't believe the change in DNS settings gets pushed through to the VM.\n. My summary of the options:\n- No DNS proxy -- Works well without issues except for people who use boot2docker on laptops and move them across networks with different DNS servers (eg home / work).\n- NAT DNS Host Resolver -- The current setting but doesn't appear to support SRV records (feature request for Virtualbox)?. Does however hide the upstream DNS so travelling laptops work fine.\n- NAT DNS Proxy -- An alternative setting that hides the upstream DNS from the VM so laptops work fine and DNS SRV records also work here.\nIs there a reason not to use the NAT DNS Proxy?\n. Snap @zh-lab did it for me, after upgrading: \n```\n$ $(boot2docker shellinit)\nWriting /Users/buckett/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/buckett/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/buckett/.boot2docker/certs/boot2docker-vm/key.pem\n$ boot2docker ssh 'sudo /etc/init.d/docker restart'\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15,192.168.59.103\n\nGenerate server cert\n/usr/local/bin/generate_cert --host=boot2docker,127.0.0.1,10.0.2.15,192.168.59.103 --ca=/var/lib/boot2docker/tls/ca.pem --ca-key=/var/lib/boot2docker/tls/cakey.pem --cert=/var/lib/boot2docker/tls/server.pem --key=/var/lib/boot2docker/tls/serverkey.pem\n2015/06/24 11:12:53 Generating a server cert\n```\nhowever if I then stop and start the VM:\nboot2docker stop\nboot2docker start\nit's broken again.\n. Snap @zh-lab did it for me, after upgrading: \n```\n$ $(boot2docker shellinit)\nWriting /Users/buckett/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/buckett/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/buckett/.boot2docker/certs/boot2docker-vm/key.pem\n$ boot2docker ssh 'sudo /etc/init.d/docker restart'\nNeed TLS certs for boot2docker,127.0.0.1,10.0.2.15,192.168.59.103\n\nGenerate server cert\n/usr/local/bin/generate_cert --host=boot2docker,127.0.0.1,10.0.2.15,192.168.59.103 --ca=/var/lib/boot2docker/tls/ca.pem --ca-key=/var/lib/boot2docker/tls/cakey.pem --cert=/var/lib/boot2docker/tls/server.pem --key=/var/lib/boot2docker/tls/serverkey.pem\n2015/06/24 11:12:53 Generating a server cert\n```\nhowever if I then stop and start the VM:\nboot2docker stop\nboot2docker start\nit's broken again.\n. On 24 June 2015 at 15:25, Tobias Gesellchen notifications@github.com\nwrote:\n\n@buckett https://github.com/buckett did you add the delay script\nmentioned in #824 (comment)\nhttps://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164\n?\nNo and now I've just deleted and re-created.\n\n\nMatthew Buckett\n. On 24 June 2015 at 15:25, Tobias Gesellchen notifications@github.com\nwrote:\n\n@buckett https://github.com/buckett did you add the delay script\nmentioned in #824 (comment)\nhttps://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164\n?\nNo and now I've just deleted and re-created.\n\n\nMatthew Buckett\n. ",
    "frosenberg": "Sorry to hear my stuff blows up things. I learned today also that my scripts don't work with docker 1.3.x as security has been added. There may also be a change that my crude way of adding a host-only adapter may to VirtualBox may break things for you. \nFor the VPN stuff, I run this script (pre-docker 1.3.x but I presume it still works):\nhttps://github.com/frosenberg/docker-dns-scripts/blob/master/vpn-fix.sh\nIt will remove some firewall stuff that CiscoVPN is setting up. You may wanna give this a try.\n. ",
    "johnnyt": "https://github.com/boot2docker/boot2docker/issues/392#issuecomment-68563869 had the steps that finally worked for me: adding a port forward and then pointing to 127.0.0.1:\nboot2docker down\nvboxmanage modifyvm \"boot2docker-vm\" --natpf1 \"docker,tcp,127.0.0.1,2376,,2376\"\nboot2docker up\nexport DOCKER_HOST=tcp://127.0.0.1:2376\n. https://github.com/boot2docker/boot2docker/issues/392#issuecomment-68563869 had the steps that finally worked for me: adding a port forward and then pointing to 127.0.0.1:\nboot2docker down\nvboxmanage modifyvm \"boot2docker-vm\" --natpf1 \"docker,tcp,127.0.0.1,2376,,2376\"\nboot2docker up\nexport DOCKER_HOST=tcp://127.0.0.1:2376\n. ",
    "dleute": "This fix worked for me running the cisco vpn. I'm also experimenting with kitematic which is awesome. But still needs some work if you use a lot of parameters to run docker containers. For simpler uses, it's fantastic.\n. ",
    "ryanleary": "Cisco AnyConnect messes with your machine's routes. I've done this as a workaround:\n$(boot2docker shellinit 2> /dev/null)\ndocker_fix_route() {\n    sudo route delete 192.168.59.0/24 &> /dev/null\n    sudo route add 192.168.59.0/24 -iface vboxnet0 &> /dev/null\n}\n. Cisco AnyConnect messes with your machine's routes. I've done this as a workaround:\n$(boot2docker shellinit 2> /dev/null)\ndocker_fix_route() {\n    sudo route delete 192.168.59.0/24 &> /dev/null\n    sudo route add 192.168.59.0/24 -iface vboxnet0 &> /dev/null\n}\n. ",
    "keenaudio": "Setting up port forwarding in Virtual Box worked for me, as described here: https://github.com/boot2docker/boot2docker/issues/628#issuecomment-68909772 (thanks @johnnyt)\nI used the Virtual Box UI (Settings / Network) Network type should be NAT. Click on port forwarding and add a rule to forward on 127.0.0.1:2376, then update your ~/.profile file: \nexport DOCKER_HOST=tcp://127.0.0.1:2376\n. ",
    "norbertpy": "@chulkilee, openconnect fixed my problem. Thank you. I hate AnyConnect.\n. ",
    "rickpeters": "Hi,\nI also (have to) use anyconnect. Setting the port forwarding rule to 127.0.0.1 doesn't work anymore for me. Reason is that docker-machine creates secured docker hosts by default. When I forward using 127.0.0.1 i get a message from the docker host that the certificate is created for 192.168.99.100.\nAlso several commands (i.e. docker-machine env default) don't respond anymore.\nI tried re-adding the route to the docker ip-range again (sudo route -nv add -net 192.168.99 -interface vboxnet1) but this doesn't work, probably because anyconnect doesn't allow this :-(\nHowever, the already running containers for which I added a portforward (a webserver on port 8080) still respond, so some part of the solution still works?\nSince anyconnect routes everything through the utun0 it seems like part of the traffic related to the docker-machine call gets blown into the tunnel and disappears?\n. @onejli , we have moved on beyond this issue :-)\nInstead of looking at getting it to work while using the anyconnect vpn on the Mac we turned it around.\nWhat we did was put anyconnect itself in a container :-)\nThe advantage of this is that openvpn (the opensource anyconnect client) just breaks the complete stack inside the vpn container itself and not on my osx itself.\nI'm still thinking on sharing this solution, however there are some secrets in the images I use that I cannot share with others, so I would need to do some clean up.\nWe use this solution in our team on a daily basis and have (almost) no need for Cisco AnyConnect anymore.\nGlobal overview of the solution is that we have a vpn container which uses oneconnect to connect to the corporate vpn. Then we have a second container that uses apache httpd as a proxy server to the vpn container. The http proxy delivers a proxy.pac file so the mac browser knows which adresses go to the corporate vpn and which should go to the real (separate) internet connection.\nSSH into corporate servers is done using a docker exec into the vpn container.\nSecond part of the solution is that sometimes we create a really transparant tunnel from the osx host (using sshuttle) to the apache container and the vpn container and just tunnel the complete 10.0.0.0/8 range of addresses through the ssh tunnel. Also works great, but is sometimes a bit slower.\nThe big advantage is that my local mac is not touched by the vpn at all and everything works (and also all docker tools) work like a charm. Even a local Docker swarm is not a problem anymore :-)\ngrtz,\nRick\n. @onejli , we have moved on beyond this issue :-)\nInstead of looking at getting it to work while using the anyconnect vpn on the Mac we turned it around.\nWhat we did was put anyconnect itself in a container :-)\nThe advantage of this is that openvpn (the opensource anyconnect client) just breaks the complete stack inside the vpn container itself and not on my osx itself.\nI'm still thinking on sharing this solution, however there are some secrets in the images I use that I cannot share with others, so I would need to do some clean up.\nWe use this solution in our team on a daily basis and have (almost) no need for Cisco AnyConnect anymore.\nGlobal overview of the solution is that we have a vpn container which uses oneconnect to connect to the corporate vpn. Then we have a second container that uses apache httpd as a proxy server to the vpn container. The http proxy delivers a proxy.pac file so the mac browser knows which adresses go to the corporate vpn and which should go to the real (separate) internet connection.\nSSH into corporate servers is done using a docker exec into the vpn container.\nSecond part of the solution is that sometimes we create a really transparant tunnel from the osx host (using sshuttle) to the apache container and the vpn container and just tunnel the complete 10.0.0.0/8 range of addresses through the ssh tunnel. Also works great, but is sometimes a bit slower.\nThe big advantage is that my local mac is not touched by the vpn at all and everything works (and also all docker tools) work like a charm. Even a local Docker swarm is not a problem anymore :-)\ngrtz,\nRick\n. @onejli I think we have the same corporate security rules ;-) However my take on this is that since BYOD is possible and even corporate laptops are able to function on a normal internet connection (and allowed to do so), there is really no big risk in using Docker as a vpn tunnel in this way :-)\nHowever everyone is free in his own choices! Good Luck!\n. @onejli I think we have the same corporate security rules ;-) However my take on this is that since BYOD is possible and even corporate laptops are able to function on a normal internet connection (and allowed to do so), there is really no big risk in using Docker as a vpn tunnel in this way :-)\nHowever everyone is free in his own choices! Good Luck!\n. Yes, works as documented. Put it in VPN compatibility mode start your VPN and use the address of the docker daemon VM that's in pinata list\n. Yes, works as documented. Put it in VPN compatibility mode start your VPN and use the address of the docker daemon VM that's in pinata list\n. Don't know the real magic. However to me it looks mostly like it uses a special IP address that your VPN leaves alone. Furthermore if I understand correctly you are not (yet) able to expose ports to your host machine itself. So the main part is that the docker daemon will stay available while you are on your VPN connection. Also, the docker.local alias for addressing the docker VM does not (yet) work when in VPN compatibility mode.\n. Don't know the real magic. However to me it looks mostly like it uses a special IP address that your VPN leaves alone. Furthermore if I understand correctly you are not (yet) able to expose ports to your host machine itself. So the main part is that the docker daemon will stay available while you are on your VPN connection. Also, the docker.local alias for addressing the docker VM does not (yet) work when in VPN compatibility mode.\n. ",
    "Kalle80": "I got it working yesterday with this flow (Cisco VPN Client and Win VirtualBox): \n1. VPN off\n2. Create new VM:\ndocker-machine create -d virtualbox --virtualbox-hostonly-cidr \"10.32.21.100/24\" default (IP would be in  the same network than your VPN)\n1. Run eval for it\neval \"$(docker-machine env default --shell ssh)\"\n4 Turn on VPN\nBut today after Win boot it could not connect to that VM. So I had to remove it and recreated it...\n. I got it working yesterday with this flow (Cisco VPN Client and Win VirtualBox): \n1. VPN off\n2. Create new VM:\ndocker-machine create -d virtualbox --virtualbox-hostonly-cidr \"10.32.21.100/24\" default (IP would be in  the same network than your VPN)\n1. Run eval for it\neval \"$(docker-machine env default --shell ssh)\"\n4 Turn on VPN\nBut today after Win boot it could not connect to that VM. So I had to remove it and recreated it...\n. ",
    "joshskinner": "@atomantic i was able to get docker-machine to work using @johnnyt solution with a few changes.\nmyhost=my_vb_name\nmyip=`docker-machine ip $myhost`\ndocker-machine stop $myhost\nvboxmanage modifyvm \"$myhost\" --natpf1 \"docker,tcp,$myip,2376,,2376\"\ndocker-machine start $myhost\n. ",
    "onejli": "I hacked my way through a similar solution some time back, but never had time to automate it.  It was working fine until I got bitten by the certificate issue that @rickpeters mentioned.  I just put together a small helper script to re-apply the fixes https://github.com/onejli/docker-vpn-helper.  The script will:\n- help VirtualBox fix the routing table\n- insert a port forwarding rule\n- regenerate the ssl cert\nIn its current state (with more than a few TODOs), the helper script assumes that you're creating (or using) a VM named default.  This matches the VM name when using the Docker Quickstart Terminal.  It patches the VM and outputs some environment variables that you'll need to export.  \nAfter running the helper script, you'll be able to:\n- Manage the VM using the standard docker-machine commands (e.g., stop, start, ssh, etc.)\n- Execute docker commands regardless of whether or not you're connected to the VPN\nCisco AnyConnect removes/redirects routes upon connection, but doesn't restore them after disconnecting.  This seems to make the VirtualBox network kernel modules very unhappy.  After dropping off of VPN, VirtualBox is able to add host-only network adapters, but it is NOT able to add the routes needed to connect them.  I stumbled across this thread and found a solution in the last post that I integrated it into my helper script.\n@daagar There's no need to reboot after disconnecting from AnyConnect.  You just need to:\n1.  Disconnect from AnyConnect (you can actually leave the application/services running)\n2.  Stop all VirtualBox processes  (i.e., all VMs and the GUI)\n3.  Restart the VirtualBox kernel modules\nsudo /Library/Application\\ Support/VirtualBox/LaunchDaemons/VirtualBoxStartup.sh restart \n. I hacked my way through a similar solution some time back, but never had time to automate it.  It was working fine until I got bitten by the certificate issue that @rickpeters mentioned.  I just put together a small helper script to re-apply the fixes https://github.com/onejli/docker-vpn-helper.  The script will:\n- help VirtualBox fix the routing table\n- insert a port forwarding rule\n- regenerate the ssl cert\nIn its current state (with more than a few TODOs), the helper script assumes that you're creating (or using) a VM named default.  This matches the VM name when using the Docker Quickstart Terminal.  It patches the VM and outputs some environment variables that you'll need to export.  \nAfter running the helper script, you'll be able to:\n- Manage the VM using the standard docker-machine commands (e.g., stop, start, ssh, etc.)\n- Execute docker commands regardless of whether or not you're connected to the VPN\nCisco AnyConnect removes/redirects routes upon connection, but doesn't restore them after disconnecting.  This seems to make the VirtualBox network kernel modules very unhappy.  After dropping off of VPN, VirtualBox is able to add host-only network adapters, but it is NOT able to add the routes needed to connect them.  I stumbled across this thread and found a solution in the last post that I integrated it into my helper script.\n@daagar There's no need to reboot after disconnecting from AnyConnect.  You just need to:\n1.  Disconnect from AnyConnect (you can actually leave the application/services running)\n2.  Stop all VirtualBox processes  (i.e., all VMs and the GUI)\n3.  Restart the VirtualBox kernel modules\nsudo /Library/Application\\ Support/VirtualBox/LaunchDaemons/VirtualBoxStartup.sh restart \n. @rickpeters I wish I could run my VPN client from within a VM or container :cry:.  Unfortunately, there are some corporate security rules that prohibit us from going down this road.\n@bfarrell Happy to help!  Just keep in mind that this solution is more of a band-aid.  Unfortunately, it doesn't help when you want to expose a port from within a container to the physical host.\ne.g. docker run -p 5000:5000 registry\nA host-only adapter would normally allow you to access any port mapped from a docker container. Due to VPN crippling communication between the physical host and the VM over the host-only adapter, you'll need to manually insert a port forwarding rule over the NAT interface for each container port that you want to expose.\ne.g. (in the case above)\nVBoxManage controlvm default natpf1 registry_port,tcp,127.0.0.1,5000,,5000\nor via the GUI \n. @rickpeters I wish I could run my VPN client from within a VM or container :cry:.  Unfortunately, there are some corporate security rules that prohibit us from going down this road.\n@bfarrell Happy to help!  Just keep in mind that this solution is more of a band-aid.  Unfortunately, it doesn't help when you want to expose a port from within a container to the physical host.\ne.g. docker run -p 5000:5000 registry\nA host-only adapter would normally allow you to access any port mapped from a docker container. Due to VPN crippling communication between the physical host and the VM over the host-only adapter, you'll need to manually insert a port forwarding rule over the NAT interface for each container port that you want to expose.\ne.g. (in the case above)\nVBoxManage controlvm default natpf1 registry_port,tcp,127.0.0.1,5000,,5000\nor via the GUI \n. @bilal @gcarre Most of my complaints about AnyConnect are around a particularly draconian configuration.  No split tunneling and no restoration of the routing table after disconnect make me sad.\n@mohdaliiqbal Great to hear it!\n. Is there any reason to retain this directory (or its contents) in the boot2docker image?\n. I don't have an image handy right now, but IIRC docker-machine pushes the cert+key (generated on the physical host) into the /var/lib/boot2docker directory itself.\nEDIT: Pretty sure the above is accurate (https://github.com/docker/machine/issues/2018#issuecomment-151674818)\nEDIT2: I missed @gcbartlett's original point (sorry about that).  Lines 14-16 reference ${CERTDIR} which is no longer set with this PR.  Combining that with what I thought was being asked -> I think it should become:\n${CERTDIR:=/var/lib/boot2docker/}\n. docker-machine provisions the key as /var/lib/boot2docker/server-key.pem.  The filename here doesn't match.\n. ",
    "bfarrell": "Thanks @onejli !!  This has been holding me back for months.  Finally something worked.\nosx 10.10.5\n. Thanks @onejli !!  This has been holding me back for months.  Finally something worked.\nosx 10.10.5\n. Count me in the list that havent received a response.\n. Same issue\nVirtualBox : 4.3.26r98988\nWindows : Windows 7 Enterprise SP1\n. ",
    "gcarre": "I installed Cisco Anyconnect 4.2 and it fixed my Docker issues: I could use Docker (1.9.1) while connected to the VPN, but as soon as I was disconnected I couldn't use docker anymore, I had to add the route again manually.\n. has anyone been able to make this work with Docker for Mac beta?\n. has anyone been able to make this work with Docker for Mac beta?\n. ",
    "bilal": "If possible, running Cisco VPN in split tunnel mode is an option and it does't have all these problems. It might be a good tradeoff where you can still access your corporate network and still work with docker!\n. ",
    "eoliphan": "Just as a quick FYI, I've been pulling my hair out about this for several days (I'm on osx) , been over this issue and all the related ones several times.  Well, I just thought to check to see if there was a VMWare Fusion driver for docker-machine, there is, and zero problems.  I know it's not free, but it's headache-free for this issue at least.\n. ",
    "alexandrem": "I've struggled with these problems for months (Cisco AnyConnect v3.1.xxx)\nJust switched to openconnect (http://www.infradead.org/openconnect/) and not looking back. Solves all the issues mentioned here. \nWorks like a charm on Yosemite (10.11.x)\nbrew install openconnect\n. ",
    "mohdaliiqbal": "Thanks @onejli  - the VBox launch daemon restart part was critical for me. I use your vpn-helper everyday now. \n. ",
    "mchiang0610": "If anyone still has problems with this, please contact me at mchiang@docker.com. \nWe are working on something to help address this issue. \n. @atomantic That might not be an option for enterprise users. \n. @atomantic Some companies force you to stay with AnyConnect as a policy. \nWe've been working on something new to help address this issue. Still in early private beta\n. +1\n. +1\n. ",
    "dantran": "@mchiang0610, i am interesting on any solution you have :-)\n. https://github.com/docker/machine/issues/2632 ssh port forwarding fits the bill for me for now\n. ",
    "davidkarlsen": "@mchiang0610 I have sent you a couple of mails on the subject. Will you get back in touch? I'd be happy to test.\n. ",
    "chino": "Has anyone heard back yet?\nOn Wed, Mar 23, 2016 at 9:08 AM, David J. M. Karlsen \nnotifications@github.com wrote:\n\n@mchiang0610 https://github.com/mchiang0610 I have sent you a couple of\nmails on the subject. Will you get back in touch? I'd be happy to test.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/628#issuecomment-200338124\n. It will just bind to local host I imagine instead of using host-only\nnetwork?\n\nOn Wed, Apr 13, 2016, 1:41 AM Rick Peters notifications@github.com wrote:\n\nYes, works as documented. Put it in VPN compatibility mode start your VPN\nand use the address of the docker daemon VM that's in pinata list\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/628#issuecomment-209236033\n. It will just bind to local host I imagine instead of using host-only\nnetwork?\n\nOn Wed, Apr 13, 2016, 1:41 AM Rick Peters notifications@github.com wrote:\n\nYes, works as documented. Put it in VPN compatibility mode start your VPN\nand use the address of the docker daemon VM that's in pinata list\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/628#issuecomment-209236033\n. Can the containers communicate together still? Will host be able to act as\na nat gateway for them? If you can't expose ports seems confusing how you\ncould even access the vm at that point since at least ssh is needed?\n\nOn Wed, Apr 13, 2016, 2:37 PM Rick Peters notifications@github.com wrote:\n\nDon't know the real magic. However to me it looks mostly like it uses a\nspecial IP address that your VPN leaves alone. Furthermore if I understand\ncorrectly you are not (yet) able to expose ports to your host machine\nitself. So the main part is that the docker daemon will stay available\nwhile you are on your VPN connection. Also, the docker.local alias for\naddressing the docker VM does not (yet) work when in VPN compatibility mode.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/628#issuecomment-209587648\n. Can the containers communicate together still? Will host be able to act as\na nat gateway for them? If you can't expose ports seems confusing how you\ncould even access the vm at that point since at least ssh is needed?\n\nOn Wed, Apr 13, 2016, 2:37 PM Rick Peters notifications@github.com wrote:\n\nDon't know the real magic. However to me it looks mostly like it uses a\nspecial IP address that your VPN leaves alone. Furthermore if I understand\ncorrectly you are not (yet) able to expose ports to your host machine\nitself. So the main part is that the docker daemon will stay available\nwhile you are on your VPN connection. Also, the docker.local alias for\naddressing the docker VM does not (yet) work when in VPN compatibility mode.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/628#issuecomment-209587648\n. \n",
    "yoplait": "@mchiang0610 I am sending you a mail with this... Thanks!\n. ",
    "shaunsenecal": "My situation was that I was that as soon as I enabled my VPN (using openconnect), I was no longer able to reach my containers.\n$> ping 172.17.0.2\nPING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.                                                                                                                                         \nFrom 172.17.0.2 icmp_seq=3 Destination Host Unreachable                                                                                                                                    \n^C                                                                                                                                                                                         \n--- 172.17.0.2 ping statistics ---                                                                                                                                                         \n5 packets transmitted, 0 received, +1 errors, 100% packet loss, time 4018ms\nI took a look at the routes on my host and noticed that there was a duplicate route\n$> ip route show | grep 172.17\n172.17.0.0/16 dev vpn0  proto static \n172.17.0.0/16 dev docker0  proto kernel  scope link  src 172.17.0.1\nSo I deleted the extraneous route.  I didnt want docker traffic going over the VPN, so that is the route I removed\n$> sudo ip route delete 172.17.0.0/16 dev vpn0\nNow I'm able to ping my containers, and my containers have network access again\n$> ping 172.17.0.2            \nPING 172.17.0.2 (172.17.0.2) 56(84) bytes of data.\n64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.057 ms\n64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.032 ms\n64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.030 ms\n^C\n--- 172.17.0.2 ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 1998ms\nIt seems that the important thing is that there is a route on your host going to the docker interface and that there is not another route ahead of it.  If you are missing the route, simply add it and you should be back in business\nsudo ip route add 172.17.0.0/16 dev docker0\nOf course, this needs to be run each time you reconnect to your VPN, but its easily scripted.\n. Can you still hit the repo from your docker host?  If you can, then I think the container should be able to hit the repo as well, since its traffic should go from the container over the docker0 interface, then the docker host should route the data to the repo over vpn0\n. ",
    "sudtek": "\n\u2022 Path/Address: \".\\pipe\\vbox_boot2docker_com1\" (without the quotes) \n\nnot on virtual box windows must be \"//./pipe/docker_engine\" (without the quotes) (the default for kinematic). ",
    "cowwoc": "@volkertb's suggestion worked for me but I had to set the pipe name to \\\\.\\pipe\\vbox_boot2docker_com1 (notice the two slashes added to the beginning).\nI never could get kinematic to work, even following @sudtek's suggestion.\nAll of this is under Windows 10.. ",
    "vhosakot": "Due to this issue in Cisco AnyConnect VPN client version 4.3.03086, I'm not able to run minikube (https://kubernetes.io/docs/tutorials/stateless-application/hello-minikube/) when I'm connected to the Cisco AnyConnect VPN.\nInterestingly, I see in the Cisco AnyConnect VPN logs that it flaps every time I start minikube.\n12:45:51 AM    Reconnecting to Boxborough - SSL...\n    12:45:53 AM    Establishing VPN - Examining system...\n    12:45:53 AM    Establishing VPN - Activating VPN adapter...\n    12:45:53 AM    Establishing VPN - Configuring system...\n    12:45:56 AM    Establishing VPN...\n    12:45:56 AM    Connected to Boxborough - SSL.\n    12:46:32 AM    Reconnecting to Boxborough - SSL...\n    12:46:34 AM    Establishing VPN - Examining system...\n    12:46:34 AM    Establishing VPN - Activating VPN adapter...\n    12:46:34 AM    Establishing VPN - Configuring system...\n    12:46:36 AM    Establishing VPN...\n    12:46:36 AM    Connected to Boxborough - SSL.\n    12:49:55 AM    Reconnecting to Boxborough - SSL...\n    12:49:57 AM    Establishing VPN - Examining system...\n    12:49:57 AM    Establishing VPN - Activating VPN adapter...\n    12:49:57 AM    Establishing VPN - Configuring system...\n    12:49:59 AM    Establishing VPN...\n    12:49:59 AM    Connected to Boxborough - SSL.\n    12:51:11 AM    Reconnecting to Boxborough - SSL...\n    12:51:13 AM    Establishing VPN - Examining system...\n    12:51:13 AM    Establishing VPN - Activating VPN adapter...\n    12:51:13 AM    Establishing VPN - Configuring system...\n    12:51:15 AM    Establishing VPN...\n    12:51:16 AM    Connected to Boxborough - SSL.\n    12:52:38 AM    Reconnecting to Boxborough - SSL...\n    12:52:40 AM    Establishing VPN - Examining system...\n    12:52:40 AM    Establishing VPN - Activating VPN adapter...\n    12:52:40 AM    Establishing VPN - Configuring system...\n    12:52:43 AM    Establishing VPN...\n    12:52:43 AM    Connected to Boxborough - SSL.\n    12:56:46 AM    Reconnecting to Boxborough - SSL...\n    12:56:48 AM    Establishing VPN - Examining system...\n    12:56:48 AM    Establishing VPN - Activating VPN adapter...\n    12:56:48 AM    Establishing VPN - Configuring system...\n    12:56:50 AM    Establishing VPN...\n    12:56:50 AM    Connected to Boxborough - SSL.. I generated the DART (Diagnostic And Reporting Tool) report from Cisco AnyConnect VPN, and see these errors in system.log.  Clearly, we can see below docker is flapping Cisco AnyConnect VPN. \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: pass in log quick on awdl0 inet6 proto ipv6-icmp from ::0 to FF02:0:0:0:0:1:FF50:A62A icmp6-type 135 code 0\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: pass out log quick on awdl0 inet6 proto ipv6-icmp from FE80:0:0:0:50D4:61FF:FE50:A62A to FF02::1 icmp6-type 136 code 0\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: pass in log quick on awdl0 inet6 proto ipv6-icmp from any to FF02::1 icmp6-type 136 code 0\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: block log quick inet all ! tagged cisco_anyconnect_vpn_pass\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: block log quick inet6 all ! tagged cisco_anyconnect_vpn_pass\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: saveRulesToConfigFile File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 758 Updating pf configuration file /opt/cisco/anyconnect/ac_pf_final.conf with: 0 options, 0 scrubs, 1 IPv4 rules, 1 IPv6 rules\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: saveRulesToConfigFile File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 758 Updating pf configuration file /opt/cisco/anyconnect/ac_pf_filt.conf with: 1 options, 1 scrubs, 11 IPv4 rules, 43 IPv6 rules\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: enablePf File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 1165 Command '/sbin/pfctl -E -f /etc/pf.conf 2>&1' returned output pfctl: Use of -f option, could result in flushing of rules present in the main ruleset added by the system at startup. See /etc/pf.conf for further details.  No ALTQ support in kernel ALTQ related functions disabled pf enabled Token : 18380007534171971645  , extracted token 18380007534171971645\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: reloadPfRules File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 1251 Command '/sbin/pfctl -f /etc/pf.conf 2>&1' returned output pfctl: Use of -f option, could result in flushing of rules present in the main ruleset added by the system at startup. See /etc/pf.conf for further details.  No ALTQ support in kernel ALTQ related functions disabled \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: applyFirewallConfiguration File: ../../vpn/AgentUtilities/HostConfigMgr.cpp Line: 900 No Firewall Rules to configure\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The network control state changed to restricted.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Message type information sent to the user: Establishing VPN...\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 1, old 0)\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The VPN connection has been established and can now pass data.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: VPN state: Connected Network state: Network Accessible Network control state: Network Access: Restricted Network type: Untrusted\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The Primary DTLS connection to the secure gateway is being established.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 1, old 1)\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: connectTransport File: ../../vpn/Common/IPC/SocketTransport.cpp Line: 856 Invoked Function: ::bind Return Code: 22 (0x00000016) Description: unknown \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: initiateTransport File: ../../vpn/Agent/DtlsTunnelTransport.cpp Line: 222 Opened DTLS socket from [192.168.0.29]:64858 to [198.135.0.166]:443\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpndownloader[8247]: Function: WaitForCompletion File: /tmp/build/thehoff/Ironman2_MR30.980020412858/Ironman2_MR3/vpn/Common/Utility/Thread.cpp Line: 286 The thread has successfully completed execution.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpndownloader[8247]: Cisco AnyConnect Secure Mobility Client Downloader (VPN) exiting, version 4.3.03086 , return code 0 [0x00000000]\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Function: launchCachedDownloader File: ../../vpn/Api/ConnectMgr.cpp Line: 7016 Invoked Function: ConnectMgr :: launchCachedDownloader Return Code: 0 (0x00000000) Description: Cached Downloader terminated normally \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: VPN state: Connected Network state: Network Accessible Network control state: Network Access: Restricted Network type: Untrusted\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Message type information sent to the user: Connected to Boxborough - SSL.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Launching script \"/opt/cisco/anyconnect/script/OnConnect_Mac_AnyConnect_Screenlock_D13v2.sh\".\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: A DTLS connection has been established using cipher AES256-SHA\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The Primary DTLS connection to the secure gateway has been established.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 1, old 1)\nFeb  8 00:45:34 VHOSAKOT-M-H6X5 Docker[814]: hosts file has bindings for localhost broadcasthost localhost\nFeb  8 00:45:34 VHOSAKOT-M-H6X5 defaults[8385]: \n    The domain/default pair of (/Library/Preferences/com.jamfsoftware.jamf, global_log_level) does not exist\nFeb  8 00:45:34 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: PluginManager: Monitor - No Plugins Changes observed! [4->4]\nFeb  8 00:45:36 VHOSAKOT-M-H6X5 defaults[8426]: \n    The domain/default pair of (/Library/Preferences/com.jamfsoftware.jamf, global_log_level) does not exist\nFeb  8 00:45:41 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Script \"/opt/cisco/anyconnect/script/OnConnect_Mac_AnyConnect_Screenlock_D13v2.sh\" exited with code 0.\nFeb  8 00:45:50 VHOSAKOT-M-H6X5 diskimages-helper[8520]: *** -[NSMachPort handlePortMessage:]: dropping incoming DO message because the connection is invalid\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.xpc.launchd[1] (com.apple.ftp-proxy): Unknown key for Boolean: ForceEnableHack\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.xpc.launchd[1] (com.apple.bootpd): Unknown key for Boolean: ForceEnableHack\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 kernel[0]: bridge100: attached with 1 suspended link-layer multicast membership(s)\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 kernel[0]: en5: promiscuous mode enable succeeded\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: BCAST is ready [anyExternal, mtu=1406 ]\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 kernel[0]: bridge100: successfully restored 1 suspended link-layer multicast membership(s) (err=0)\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: added addr=192.168.64.1 mask=255.255.255.0 on bridge100\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: A new network interface has been detected.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: logInterfaces File: ../../vpn/AgentUtilities/Routing/InterfaceRouteMonitorCommon.cpp Line: 477 IP Address Interface List: FE80:0:0:0:CA69:CDFF:FEA0:4C88 192.168.0.29 2601:18B:4100:9505:CA69:CDFF:FEA0:4C88 2601:18B:4100:9505:E1CF:A829:66A:2A7A FE80:0:0:0:50D4:61FF:FE50:A62A 10.86.247.79 FE80:0:0:0:CA69:CDFF:FEA0:4C88 2001:420:C0E4:1002:0:0:0:AC 192.168.64.1 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Reconfigure reason code 15: New network interface.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: netInterfaceNoticeCategoryHandler File: ../../vpn/Agent/MainThread.cpp Line: 7965 Network Interface change detected, refreshing physical MAC addresses\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: A routing table change notification has been received.  Starting automatic correction of the routing table.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: started: [DHCP subnet=192.168.64/24 on bridge100 mtu=1500 <---> anyExternal mtu=1406] max-mss=1366\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]:   dns: 192.168.64.1\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: findMatchingRouteChange File: ../../vpn/AgentUtilities/Routing/RouteHandlerCommon.cpp Line: 4300 Found matching non-LL IPv4 VA default route.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: attempted to start dns proxy on anyExternal\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: docker-machine-driver-xhyve: com.apple.NetworkSharing.broadcast-0 has been started\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 mDNSResponder[109]: SetupDNSProxySkts: 14, 20, 25, 27\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: setDefaultRouteViaSysConfig File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 605 Failed to get primary service IPv4 information\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: specialDefaultRouteAutoCorrect File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 382 Invoked Function: CRouteHandlerMac::setDefaultRouteViaSysConfig Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: VerifyRouteTable File: ../../vpn/AgentUtilities/Routing/RouteHandlerCommon.cpp Line: 1049 Invoked Function: CRouteHandlerCommon::specialDefaultRouteAutoCorrect Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Original     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0    10.86.247.79  255.255.255.255     10.86.247.79     10.86.247.79                                                           utun0       9  N       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Modified     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0     10.86.247.79     10.86.247.79                                                           utun0       9  N       0         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0         0.0.0.0          0.0.0.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0    10.86.247.79  255.255.255.255          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     192.168.0.1  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29      \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Index of questionable route entry in 'Modified' table: 2\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table changes: index  Action  Found     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric     0     NOP      Y         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0     1     DEL      N     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     2     ADD      N   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0     3     ADD      N     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     4     NOP      Y         0.0.0.0          0.0.0.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     5     NOP      N 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     6     NOP      N       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     7     NOP      N    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     8     NOP      N       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     9     NOP      N       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnRouteTableChange File: ../../vpn/AgentUtilities/Routing/RouteMgr.cpp Line: 478 Invoked Function: IRouteHandler::VerifyRouteTable Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.pfd[8524]: clearing states for internet-sharingshared_v4\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: dns proxy successfully enabled\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 configd[60]: network changed: v4(en0:192.168.0.29) v6(utun0:2001:420:c0e4:1002::ac, en0) DNS! Proxy SMB\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database lists search domains: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: ; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 75.75.75.75, 75.75.76.76, 2001:558:feed::1, 2001:558:feed::2; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database has domain name: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[814]: updating resolvers to nameserver 2001:558:feed::2#53\n    timeout 2000\n    order 200000\n    nameserver 2001:558:feed::1#53\n    timeout 2000\n    order 200000\n    nameserver 161.44.124.122#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.76.76#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.75.75#53\n    timeout 2000\n    order 200000\n    nameserver 64.102.6.247#53\n    timeout 2000\n    order 200000\n    search cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 configd[60]: network changed: v4(utun0+:10.86.247.79, en0) v6(utun0:2001:420:c0e4:1002::ac, en0) DNS! Proxy SMB\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database lists search domains: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 75.75.75.75, 75.75.76.76, 2001:558:feed::1, 2001:558:feed::2; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: executeRouteCmd File: ../../vpn/AgentUtilities/Routing/RouteTableMac.cpp Line: 219 route cmd success: route delete - dest 192.168.64.0/24, defGw 0.0.0.0, intf bridge100 (idx 11), metric 0, link-level\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - fixed - deleted route     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database has domain name: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 configd[60]: network changed: v4(en0:192.168.0.29) v6(utun0:2001:420:c0e4:1002::ac, en0) DNS! Proxy SMB\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[814]: updating resolvers to nameserver 2001:558:feed::2#53\n    timeout 2000\n    order 200000\n    nameserver 2001:558:feed::1#53\n    timeout 2000\n    order 200000\n    nameserver 161.44.124.122#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.76.76#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.75.75#53\n    timeout 2000\n    order 200000\n    nameserver 64.102.6.247#53\n    timeout 2000\n    order 200000\n    search cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.pfd[8524]: clearing states for internet-sharingshared_v4\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: setDefaultRouteViaSysConfig File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 605 Failed to get primary service IPv4 information\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: specialVADefaultRouteAutoCorrect File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 449 Invoked Function: CRouteHandlerMac::setDefaultRouteViaSysConfig Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: VerifyRouteTable File: ../../vpn/AgentUtilities/Routing/RouteHandlerCommon.cpp Line: 1197 Invoked Function: CRouteHandlerCommon::specialVADefaultRouteAutoCorrect Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Original     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0    10.86.247.79  255.255.255.255     10.86.247.79     10.86.247.79                                                           utun0       9  N       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Modified     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0         0.0.0.0          0.0.0.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     192.168.0.1  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table changes: index  Action  Found     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric     0     NOP      Y         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0     1     DEL      N     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     2     ADD      Y   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0     3     ADD      Y     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     4     NOP      N         0.0.0.0          0.0.0.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     5     NOP      Y 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     6     NOP      Y       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     7     NOP      Y    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     8     NOP      Y       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     9     NOP      Y       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0    10     DEL      N    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       b\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnRouteTableChange File: ../../vpn/AgentUtilities/Routing/RouteMgr.cpp Line: 478 Invoked Function: IRouteHandler::VerifyRouteTable Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database lists search domains: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: ; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 75.75.75.75, 75.75.76.76, 2001:558:feed::1, 2001:558:feed::2; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database has domain name: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Automatic correction of the routing table has failed.  Notifying higher levels of the routing change notification for possible further corrective action.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Reconfigure reason code 5: IP forwarding table modification.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: The entire VPN connection is being reconfigured.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 2, old 1)\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: VPN state: Reconnecting Network state: Network Accessible Network control state: Network Access: Restricted Network type: Untrusted\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Message type information sent to the user: Reconnecting to Boxborough - SSL.... I generated the DART (Diagnostic And Reporting Tool) report from Cisco AnyConnect VPN, and see these errors in system.log.  Clearly, we can see below docker is flapping Cisco AnyConnect VPN. \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: pass in log quick on awdl0 inet6 proto ipv6-icmp from ::0 to FF02:0:0:0:0:1:FF50:A62A icmp6-type 135 code 0\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: pass out log quick on awdl0 inet6 proto ipv6-icmp from FE80:0:0:0:50D4:61FF:FE50:A62A to FF02::1 icmp6-type 136 code 0\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: pass in log quick on awdl0 inet6 proto ipv6-icmp from any to FF02::1 icmp6-type 136 code 0\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: block log quick inet all ! tagged cisco_anyconnect_vpn_pass\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Adding filter rule: block log quick inet6 all ! tagged cisco_anyconnect_vpn_pass\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: saveRulesToConfigFile File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 758 Updating pf configuration file /opt/cisco/anyconnect/ac_pf_final.conf with: 0 options, 0 scrubs, 1 IPv4 rules, 1 IPv6 rules\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: saveRulesToConfigFile File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 758 Updating pf configuration file /opt/cisco/anyconnect/ac_pf_filt.conf with: 1 options, 1 scrubs, 11 IPv4 rules, 43 IPv6 rules\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: enablePf File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 1165 Command '/sbin/pfctl -E -f /etc/pf.conf 2>&1' returned output pfctl: Use of -f option, could result in flushing of rules present in the main ruleset added by the system at startup. See /etc/pf.conf for further details.  No ALTQ support in kernel ALTQ related functions disabled pf enabled Token : 18380007534171971645  , extracted token 18380007534171971645\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: reloadPfRules File: ../../vpn/AgentUtilities/UnixFwUtil_OSX.cpp Line: 1251 Command '/sbin/pfctl -f /etc/pf.conf 2>&1' returned output pfctl: Use of -f option, could result in flushing of rules present in the main ruleset added by the system at startup. See /etc/pf.conf for further details.  No ALTQ support in kernel ALTQ related functions disabled \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: applyFirewallConfiguration File: ../../vpn/AgentUtilities/HostConfigMgr.cpp Line: 900 No Firewall Rules to configure\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The network control state changed to restricted.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Message type information sent to the user: Establishing VPN...\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 1, old 0)\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The VPN connection has been established and can now pass data.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: VPN state: Connected Network state: Network Accessible Network control state: Network Access: Restricted Network type: Untrusted\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The Primary DTLS connection to the secure gateway is being established.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 1, old 1)\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: connectTransport File: ../../vpn/Common/IPC/SocketTransport.cpp Line: 856 Invoked Function: ::bind Return Code: 22 (0x00000016) Description: unknown \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: initiateTransport File: ../../vpn/Agent/DtlsTunnelTransport.cpp Line: 222 Opened DTLS socket from [192.168.0.29]:64858 to [198.135.0.166]:443\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpndownloader[8247]: Function: WaitForCompletion File: /tmp/build/thehoff/Ironman2_MR30.980020412858/Ironman2_MR3/vpn/Common/Utility/Thread.cpp Line: 286 The thread has successfully completed execution.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpndownloader[8247]: Cisco AnyConnect Secure Mobility Client Downloader (VPN) exiting, version 4.3.03086 , return code 0 [0x00000000]\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Function: launchCachedDownloader File: ../../vpn/Api/ConnectMgr.cpp Line: 7016 Invoked Function: ConnectMgr :: launchCachedDownloader Return Code: 0 (0x00000000) Description: Cached Downloader terminated normally \nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: VPN state: Connected Network state: Network Accessible Network control state: Network Access: Restricted Network type: Untrusted\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Message type information sent to the user: Connected to Boxborough - SSL.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Launching script \"/opt/cisco/anyconnect/script/OnConnect_Mac_AnyConnect_Screenlock_D13v2.sh\".\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: A DTLS connection has been established using cipher AES256-SHA\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: The Primary DTLS connection to the secure gateway has been established.\nFeb  8 00:45:32 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 1, old 1)\nFeb  8 00:45:34 VHOSAKOT-M-H6X5 Docker[814]: hosts file has bindings for localhost broadcasthost localhost\nFeb  8 00:45:34 VHOSAKOT-M-H6X5 defaults[8385]: \n    The domain/default pair of (/Library/Preferences/com.jamfsoftware.jamf, global_log_level) does not exist\nFeb  8 00:45:34 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: PluginManager: Monitor - No Plugins Changes observed! [4->4]\nFeb  8 00:45:36 VHOSAKOT-M-H6X5 defaults[8426]: \n    The domain/default pair of (/Library/Preferences/com.jamfsoftware.jamf, global_log_level) does not exist\nFeb  8 00:45:41 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Script \"/opt/cisco/anyconnect/script/OnConnect_Mac_AnyConnect_Screenlock_D13v2.sh\" exited with code 0.\nFeb  8 00:45:50 VHOSAKOT-M-H6X5 diskimages-helper[8520]: *** -[NSMachPort handlePortMessage:]: dropping incoming DO message because the connection is invalid\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.xpc.launchd[1] (com.apple.ftp-proxy): Unknown key for Boolean: ForceEnableHack\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.xpc.launchd[1] (com.apple.bootpd): Unknown key for Boolean: ForceEnableHack\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 kernel[0]: bridge100: attached with 1 suspended link-layer multicast membership(s)\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 kernel[0]: en5: promiscuous mode enable succeeded\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: BCAST is ready [anyExternal, mtu=1406 ]\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 kernel[0]: bridge100: successfully restored 1 suspended link-layer multicast membership(s) (err=0)\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: added addr=192.168.64.1 mask=255.255.255.0 on bridge100\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: A new network interface has been detected.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: logInterfaces File: ../../vpn/AgentUtilities/Routing/InterfaceRouteMonitorCommon.cpp Line: 477 IP Address Interface List: FE80:0:0:0:CA69:CDFF:FEA0:4C88 192.168.0.29 2601:18B:4100:9505:CA69:CDFF:FEA0:4C88 2601:18B:4100:9505:E1CF:A829:66A:2A7A FE80:0:0:0:50D4:61FF:FE50:A62A 10.86.247.79 FE80:0:0:0:CA69:CDFF:FEA0:4C88 2001:420:C0E4:1002:0:0:0:AC 192.168.64.1 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Reconfigure reason code 15: New network interface.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: netInterfaceNoticeCategoryHandler File: ../../vpn/Agent/MainThread.cpp Line: 7965 Network Interface change detected, refreshing physical MAC addresses\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: A routing table change notification has been received.  Starting automatic correction of the routing table.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: started: [DHCP subnet=192.168.64/24 on bridge100 mtu=1500 <---> anyExternal mtu=1406] max-mss=1366\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]:   dns: 192.168.64.1\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: findMatchingRouteChange File: ../../vpn/AgentUtilities/Routing/RouteHandlerCommon.cpp Line: 4300 Found matching non-LL IPv4 VA default route.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: attempted to start dns proxy on anyExternal\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: docker-machine-driver-xhyve: com.apple.NetworkSharing.broadcast-0 has been started\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 mDNSResponder[109]: SetupDNSProxySkts: 14, 20, 25, 27\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: setDefaultRouteViaSysConfig File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 605 Failed to get primary service IPv4 information\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: specialDefaultRouteAutoCorrect File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 382 Invoked Function: CRouteHandlerMac::setDefaultRouteViaSysConfig Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: VerifyRouteTable File: ../../vpn/AgentUtilities/Routing/RouteHandlerCommon.cpp Line: 1049 Invoked Function: CRouteHandlerCommon::specialDefaultRouteAutoCorrect Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Original     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0    10.86.247.79  255.255.255.255     10.86.247.79     10.86.247.79                                                           utun0       9  N       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Modified     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0     10.86.247.79     10.86.247.79                                                           utun0       9  N       0         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0         0.0.0.0          0.0.0.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0    10.86.247.79  255.255.255.255          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     192.168.0.1  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29      \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Index of questionable route entry in 'Modified' table: 2\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table changes: index  Action  Found     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric     0     NOP      Y         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0     1     DEL      N     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     2     ADD      N   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0     3     ADD      N     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     4     NOP      Y         0.0.0.0          0.0.0.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     5     NOP      N 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     6     NOP      N       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     7     NOP      N    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     8     NOP      N       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     9     NOP      N       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnRouteTableChange File: ../../vpn/AgentUtilities/Routing/RouteMgr.cpp Line: 478 Invoked Function: IRouteHandler::VerifyRouteTable Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.pfd[8524]: clearing states for internet-sharingshared_v4\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 InternetSharing[8523]: dns proxy successfully enabled\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 configd[60]: network changed: v4(en0:192.168.0.29) v6(utun0:2001:420:c0e4:1002::ac, en0) DNS! Proxy SMB\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database lists search domains: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: ; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 75.75.75.75, 75.75.76.76, 2001:558:feed::1, 2001:558:feed::2; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database has domain name: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[814]: updating resolvers to nameserver 2001:558:feed::2#53\n    timeout 2000\n    order 200000\n    nameserver 2001:558:feed::1#53\n    timeout 2000\n    order 200000\n    nameserver 161.44.124.122#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.76.76#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.75.75#53\n    timeout 2000\n    order 200000\n    nameserver 64.102.6.247#53\n    timeout 2000\n    order 200000\n    search cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 configd[60]: network changed: v4(utun0+:10.86.247.79, en0) v6(utun0:2001:420:c0e4:1002::ac, en0) DNS! Proxy SMB\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database lists search domains: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 75.75.75.75, 75.75.76.76, 2001:558:feed::1, 2001:558:feed::2; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: executeRouteCmd File: ../../vpn/AgentUtilities/Routing/RouteTableMac.cpp Line: 219 route cmd success: route delete - dest 192.168.64.0/24, defGw 0.0.0.0, intf bridge100 (idx 11), metric 0, link-level\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - fixed - deleted route     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database has domain name: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: WaitWhileProcessingEvents File: ../../vpn/Agent/MainThread.cpp Line: 9794 Invoked Function: CMainThread::internalProcessEvents Return Code: -32702455 (0xFE0D0009) Description: MAINTHREAD_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 configd[60]: network changed: v4(en0:192.168.0.29) v6(utun0:2001:420:c0e4:1002::ac, en0) DNS! Proxy SMB\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[814]: updating resolvers to nameserver 2001:558:feed::2#53\n    timeout 2000\n    order 200000\n    nameserver 2001:558:feed::1#53\n    timeout 2000\n    order 200000\n    nameserver 161.44.124.122#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.76.76#53\n    timeout 2000\n    order 200000\n    nameserver 75.75.75.75#53\n    timeout 2000\n    order 200000\n    nameserver 64.102.6.247#53\n    timeout 2000\n    order 200000\n    search cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 com.apple.pfd[8524]: clearing states for internet-sharingshared_v4\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: setDefaultRouteViaSysConfig File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 605 Failed to get primary service IPv4 information\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: specialVADefaultRouteAutoCorrect File: ../../vpn/AgentUtilities/Routing/RouteHandlerMac.cpp Line: 449 Invoked Function: CRouteHandlerMac::setDefaultRouteViaSysConfig Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: VerifyRouteTable File: ../../vpn/AgentUtilities/Routing/RouteHandlerCommon.cpp Line: 1197 Invoked Function: CRouteHandlerCommon::specialVADefaultRouteAutoCorrect Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Original     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0    10.86.247.79  255.255.255.255     10.86.247.79     10.86.247.79                                                           utun0       9  N       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table - Modified     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0         0.0.0.0          0.0.0.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     169.254.0.0      255.255.0.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     192.168.0.1  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       bridge100      11  Y       0   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0 \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Routing table changes: index  Action  Found     Destination          Netmask          Gateway           IfAddr                                                          IfName IfIndex LL  Metric     0     NOP      Y         0.0.0.0          0.0.0.0      192.168.0.1     192.168.0.29                                                             en0       4  N       0     1     DEL      N     192.168.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     2     ADD      Y   198.135.0.166  255.255.255.255      192.168.0.1     192.168.0.29                                                             en0       4  N       0     3     ADD      Y     192.168.0.0    255.255.255.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     4     NOP      N         0.0.0.0          0.0.0.0          0.0.0.0     10.86.247.79                                                           utun0       9  Y       0     5     NOP      Y 255.255.255.255  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     6     NOP      Y       224.0.0.0    255.255.255.0          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     7     NOP      Y    192.168.0.29  255.255.255.255          0.0.0.0     192.168.0.29                                                             en0       4  Y       0     8     NOP      Y       127.0.0.1  255.255.255.255        127.0.0.1        127.0.0.1                                                             lo0       1  N       0     9     NOP      Y       127.0.0.0        255.0.0.0        127.0.0.1        127.0.0.1                                                             lo0       1  N       0    10     DEL      N    192.168.64.0    255.255.255.0          0.0.0.0     192.168.64.1                                                       b\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnRouteTableChange File: ../../vpn/AgentUtilities/Routing/RouteMgr.cpp Line: 478 Invoked Function: IRouteHandler::VerifyRouteTable Return Code: -24117239 (0xFE900009) Description: ROUTETABLE_ERROR_UNEXPECTED \nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database lists search domains: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: ; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 75.75.75.75, 75.75.76.76, 2001:558:feed::1, 2001:558:feed::2; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database includes DNS service: { Addresses: 161.44.124.122, 64.102.6.247; Order: 200000; Zones:  }\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Docker[816]: SC database has domain name: cisco.com\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Automatic correction of the routing table has failed.  Notifying higher levels of the routing change notification for possible further corrective action.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Reconfigure reason code 5: IP forwarding table modification.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: The entire VPN connection is being reconfigured.\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 acvpnagent[55]: Function: OnTunnelStateChange File: ../../vpn/Agent/TND.cpp Line: 1970 tunnel state change notification (new 2, old 1)\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: VPN state: Reconnecting Network state: Network Accessible Network control state: Network Access: Restricted Network type: Untrusted\nFeb  8 00:45:51 VHOSAKOT-M-H6X5 Cisco AnyConnect Secure Mobility Client[8211]: Message type information sent to the user: Reconnecting to Boxborough - SSL.... ",
    "sarusso": "This should do all the machinery required for setting up docker-machine with local port forwarding: https://github.com/onejli/docker-vpn-helper. Plus explains very well where problems are in using docker-machine with a VPN that intercepts all the traffic.. The same code with minor adjustments worked for me even on Windows (with Bash). But I could not find the time to cleanly publish it here on GitHub yet... ",
    "caleyg": "Thank you!! @volkertb. Thank you!! @volkertb. ",
    "dcp12345678": "@sarusso - Do you have a solution for windows users?. @sarusso - Do you have a solution for windows users?. ",
    "jecot": "@sarusso Would be interested in those 'minor adjustments' for windows user!\n. @sarusso Would be interested in those 'minor adjustments' for windows user!\n. ",
    "CarlosOVillanueva": "I haven't read completely through this thread yet, but has anyone here tried to set \"Allow Local (LAN) access when using VPN (if configured)\" within the Cisco AnyConnect VPN client? I know that in Windows 10, this was the smoking bullet. My symptoms were simply that I could not mount a vol when AnyConnect was connected to my company VPN - even with the local firewall disabled. Enabling this setting within the AnyConnect client fixed the issue immediately.. ",
    "ceridwen": "That option doesn't seem to be available on the Mac OS X version of the client.. ",
    "jimmymain": "that option is also not available on the Cisco AnyConnect Secure Mobility Client.\ni am having the same issues with volumes that cannot mount using the above client.. that option is also not available on the Cisco AnyConnect Secure Mobility Client.\ni am having the same issues with volumes that cannot mount using the above client.. ",
    "justinclayton": "+1 \n. ",
    "johnpancoast": "Likely also related to #593\n. Likely also related to #593\n. EDIT: After looking into this, the same problem exists when using either the samba share or vbox guest additions methods suggested below. Both raise VboxHeadless CPU to >200%.\n~~Following the first suggestion here seemed to be better for me.~~\n~~I'll check it out more soon to verify that works.~~\n. EDIT: After looking into this, the same problem exists when using either the samba share or vbox guest additions methods suggested below. Both raise VboxHeadless CPU to >200%.\n~~Following the first suggestion here seemed to be better for me.~~\n~~I'll check it out more soon to verify that works.~~\n. EDIT: After looking into this, the same problem exists when using either the samba share or vbox guest additions methods suggested below. Both raise VboxHeadless CPU to >200%.\n~~Following the first suggestion here seemed to be better for me.~~\n~~I'll check it out more soon to verify that works.~~\n. It's specifically grunt watch that's the issue in my case. Still thinking it's some kind of perf issue related to the share.\n. It's specifically grunt watch that's the issue in my case. Still thinking it's some kind of perf issue related to the share.\n. Interesting. Thanks. I've noticed after some reading that this is a known (and commonly understood) limitation of vboxsf.\nAre there workarounds, other options, or potential features/fixes on your side related to this?\n. @kimpellikaan thanks! I'll check it out.\n. ",
    "kimpellikaan": "@shideon I faced the exact same problem so started comparing all options (nodemon, forever, grunt). For me grunt-develop with livereload works like a charm. Maybe that can help.\n. ",
    "toruksmakto": "Why does nodemon not work for me? It's not a slow problem, it's totally ineffective, file changes did not trigger a restart.\n. I want to add my ssh key to authorized_keys, but the changes restore after reboot.\nWhat's the right way? @tianon . > This is the first I've ever heard of filetool.sh, so I'm frankly unsurprised it doesn't work, and have no plans to support it.\nfiletool.sh is a tool from tinycore, No plan is needed to support it, but some boot options are missing.\n. https://github.com/boot2docker/boot2docker/blob/8bf3daa2bd19b84a5908218f423c8a790bb46ad5/files/isolinux.cfg#L14\nyou guys disable /etc/init.d/tc-restore.sh by norestore added and bring in  /mnt/sda1/var/lib/boot2docker/userdata.tar , this is repetitive work.\n@tianon . https://github.com/boot2docker/boot2docker/pull/1381/files. I use restore=sda1/tce myselft for a while, it works great.. Alpine is great, Thank you for mentioning.. ",
    "allthetime": "@thaJeztah So, yes, including the application files in the actual image works flawlessly, whereas mounting with -v is pretty much unusable. \n. @thaJeztah I'll just run builds for now...\n. ",
    "tnrich": "Hey there @thaJeztah, \nI was wondering if you know if this issue has been solved with Docker Beta for mac, or if it is still facing the same underlying issues?\n. Hey @thaJeztah , I actually am already using it! It seems to work slightly better than boot2docker, but it still goes very slowly for me and I was hoping it would be a lot faster.. Do you know of any tricks that would work for Docker For Mac Beta to speed things up?\n. Here is a link to a discussion about Docker For Mac Beta:\nhttps://forums.docker.com/t/file-access-in-mounted-volumes-extremely-slow-cpu-bound/8076/33?u=davetucker\n. ",
    "KennyTw": "+1\n. ",
    "laurencer": "+1 (we use UTF8/unicode characters in our tests to indicate the result status)\n. ",
    "4gekkman": "+1\n. ",
    "thomo": "It would even help if the file has a more meaningful name, like \"initial user directory content\".\nMy confusion/question comes from the fact that it was not clear to me if I have to do (format) some thing.\n. ",
    "dizzyd": "Well, this is clearly going to impact bare-metal usage -- I had thought this project was mostly oriented towards users running in a VM. I specifically removed a large swath of drivers for different SCSI controllers, ATA controllers, network cards, serial devices and I2C/sensors (which would be important for bare metal). \nIf you're going to be running a fleet of servers on boot2docker, you probably want a bunch of the modules that I disabled. Is that a typical use-case?\n. Well, this is clearly going to impact bare-metal usage -- I had thought this project was mostly oriented towards users running in a VM. I specifically removed a large swath of drivers for different SCSI controllers, ATA controllers, network cards, serial devices and I2C/sensors (which would be important for bare metal). \nIf you're going to be running a fleet of servers on boot2docker, you probably want a bunch of the modules that I disabled. Is that a typical use-case?\n. I guess it's worth noting that the project slogan for b2d is currently \"Simplify Virtualized Docker usage\" -hence my work on this aspect. If b2d has grown beyond that slogan, I certainly understand, but think it might be good to let others in on this change. :)\n. I guess it's worth noting that the project slogan for b2d is currently \"Simplify Virtualized Docker usage\" -hence my work on this aspect. If b2d has grown beyond that slogan, I certainly understand, but think it might be good to let others in on this change. :)\n. @tianon any further thoughts, or should I consider this PR DOA?\n. @tianon any further thoughts, or should I consider this PR DOA?\n. I'll go through tonight and try to find a more friendly subset of drivers. I have no idea how we'll validate it. :) \n. I'll go through tonight and try to find a more friendly subset of drivers. I have no idea how we'll validate it. :) \n. @tianon @SvenDowideit - I've updated the PR by re-enabling the most common (by my best guess) SCSI and SATA drivers). Given that @SvenDowideit seems to be the bellweather for this requirement, I'd appreciate any feedback he might have on the driver selection and whether this image works.\nIt's still only 17M, so if this works we still have the 30% space savings.\n. @tianon @SvenDowideit - I've updated the PR by re-enabling the most common (by my best guess) SCSI and SATA drivers). Given that @SvenDowideit seems to be the bellweather for this requirement, I'd appreciate any feedback he might have on the driver selection and whether this image works.\nIt's still only 17M, so if this works we still have the 30% space savings.\n. @tianon ping?\n. bump :)\n. ",
    "markl17": "it is not working \nyou are right there is no such directory so i should just erase .ssh and do your advise\nand samething it is not looking into \\users\\markl_000.ssh\\id_boot2docker\nwhat is this all about \nrror requesting socket: exit status 1\n2014/11/19 11:26:56 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\n grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nat: can't open '/var/run/docker.pid': No such file or directory\nrror requesting socket: exit status 1\n2014/11/19 11:26:57 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\n grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nat: can't open '/var/run/docker.pid': No such file or directory\nrror requesting socket: exit status 1\n2014/11/19 11:26:57 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\n grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nat: can't open '/var/run/docker.pid': No such file or directory\nrror requesting socket: exit status 1\n2014/11/19 11:26:58 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\n grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nSH returned: tcp://0.0.0.0:2376\nND SSH\n014/11/19 11:26:58 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Ide\ntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o L\ngLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhost\nip addr show dev eth1\nSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fa\nt state UP qlen 1000\n   link/ether 08:00:27:98:6e:4e brd ff:ff:ff:ff:ff:ff\n   inet 192.168.59.108/24 brd 192.168.59.255 scope global eth1\n      valid_lft forever preferred_lft forever\n   inet6 fe80::a00:27ff:fe98:6e4e/64 scope link\n      valid_lft forever preferred_lft forever\nND SSH\ntarted.\n014/11/19 11:26:58 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Ide\ntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o L\ngLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhost\ntar c /home/docker/.docker/*.pem\nar: Removing leading `/' from member names\nriting C:\\Users\\markl_000.boot2docker\\certs\\boot2docker-vm\\ca.pem\nriting C:\\Users\\markl_000.boot2docker\\certs\\boot2docker-vm\\cert.pem\nriting C:\\Users\\markl_000.boot2docker\\certs\\boot2docker-vm\\key.pem\nocker client does not run on Windows for now. Please use\n   \"boot2docker\" ssh\no SSH into the VM instead.\n. please help\n. now i get this error messaage which I dont understand \n```\n.Connecting to tcp://localhost:2022 (attempt #0)2014/11/20 12:34:31 executing: C\n:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKey\nChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\User\ns\\markl_000.ssh\\id_boot2docker docker@localhost ip addr show dev eth1\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fa\nst state UP qlen 1000\n    link/ether 08:00:27:4c:6f:7c brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe4c:6f7c/64 scope link tentative\n       valid_lft forever preferred_lft forever\nEND SSH\nVM Host-only IP address: 192.168.59.103\nWaiting for Docker daemon to start...\nwhy does this doesnt succed plese let me know \no2014/11/20 12:34:31 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:32 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:33 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:33 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:34 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:35 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:35 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:36 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:37 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:37 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/11/20 12:34:38 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Id\nentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o\nLogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nSSH returned: tcp://0.0.0.0:2376\nEND SSH\n2014/11/20 12:34:38 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Ide\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o L\nogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhost\n ip addr show dev eth1\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fa\nst state UP qlen 1000\n    link/ether 08:00:27:4c:6f:7c brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe4c:6f7c/64 scope link\n       valid_lft forever preferred_lft forever\nEND SSH\nStarted.\n2014/11/20 12:34:38 executing: C:\\Program Files (x86)\\Git\\bin\\ssh.exe ssh -o Ide\nntitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o L\nogLevel=quiet -p 2022 -i C:\\Users\\markl_000.ssh\\id_boot2docker docker@localhost\n tar c /home/docker/.docker/*.pem\ntar: Removing leading `/' from member names\nWriting C:\\Users\\markl_000.boot2docker\\certs\\boot2docker-vm\\ca.pem\nWriting C:\\Users\\markl_000.boot2docker\\certs\\boot2docker-vm\\cert.pem\nWriting C:\\Users\\markl_000.boot2docker\\certs\\boot2docker-vm\\key.pem\nDocker client does not run on Windows for now. Please use\n    \"boot2docker\" ssh\nto SSH into the VM instead.\n```\n. but it keeps on telling me its not running on windows for now and ducker is still not running on pc\ni need it for ,kitchen.yml file which needs docker as a resource \nOn Thu, Nov 20, 2014 at 7:58 PM, Sven Dowideit notifications@github.com\nwrote:\n\nthis looks to me like its working.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/637#issuecomment-63908497\n.\n\n\nDo have a Blessed Day\n. ",
    "frapposelli": ":+1: \n. :+1: \n. Just to keep track of this, this PR blocks docker/machine#6\n. @tianon I believe @oliverkurth could be of more help here, but I'm still watching the PR :wink: \n. @ehazlett the current ISO from cloudnativeapps doesn't have shared folders enabled, it's just a version that contains this patch and the magic string fix.\n. @SvenDowideit I'm currently evaluating some options, I have a prototype package to manage VMDK in golang that could potentially solve the problem (e.g. create the tar and write it at the top of the VMDK) but it's not stable enough to be released yet.\nThat said, I would welcome moving towards something like cloudinit, I believe it's a better strategy going forward and we could reuse the code for other purposes as well, so :+1: on that.\n. @tianon on the ties to vmware/tcl-container, I will refactor it a bit and make it rely on a single patch file, I'd rather keep the build process as part of boot2docker, it is easier to maintain for us in the long run :smile: \n. Here it is, bundled the patches and did some general cleanup, most of the LOC come from the network script that we added :wink: \n. Alright, spit and polish all around, should be ready for prime time this time :smile: \n. @tianon has been done already :smile: I have a branch running at https://github.com/frapposelli/boot2docker/tree/vmware-64bit based on the work made by @afressancourt \nIt's actually better as it supports shared folders (can't make them work with the current 64bit kernel/32bit userspace situation).\n. I just realized I left out an important bit from the auto mount script, need to fix it before merging.\n. Fixed the automount script, forgot that we have a different SCSI VID and PID in ESX :-).\nTested with Fusion, Workstation, Player and ESX, so LGTM :-)\n. Awesome! :beers: :shipit: \n. Super squashing powers!\nLGTM :+1:\n. What's wrong with https://github.com/dugsong/libdnet ? that seems to be a mirror of what is on Google Code and maintained by the same guy, can't we just get that from there? am I missing something?\n. LGTM\n. @simonvanderveldt libdnet is needed for correct suspend/resume network actions in the guest so it shouldn't be ditched.\n. @simonvanderveldt libdnet is needed for correct suspend/resume network actions in the guest so it shouldn't be ditched.\n. Can't wait for it to move to FUSE :smiling_imp: \n. Can't wait for it to move to FUSE :smiling_imp: \n. Here you go: https://github.com/frapposelli/boot2docker/releases/tag/lk4\nhttps://github.com/frapposelli/boot2docker/releases/download/lk4/boot2docker-lk4-vmhgfs-fix.iso\n. Here you go: https://github.com/frapposelli/boot2docker/releases/tag/lk4\nhttps://github.com/frapposelli/boot2docker/releases/download/lk4/boot2docker-lk4-vmhgfs-fix.iso\n. Yes, the ISO was built straight off the Dockerfile on master, that pulled the latest stable version available.\n. Yes, the ISO was built straight off the Dockerfile on master, that pulled the latest stable version available.\n. :shipit: :fireworks: \n. :shipit: :fireworks: \n. thanks @tianon :smile: \n. thanks @tianon :smile: \n. @tianon I'm in the process of moving to open-vm-tools 10.x where we dropped the kernel mod requirement for shared folders altogether, I've tested with 4.1.9 and works fine, 4.2 should be ok as well.\n. @tianon I'm in the process of moving to open-vm-tools 10.x where we dropped the kernel mod requirement for shared folders altogether, I've tested with 4.1.9 and works fine, 4.2 should be ok as well.\n. @tianon see #1054 for the OVT 10 PR\n. @tianon see #1054 for the OVT 10 PR\n. pinging @tianon @SvenDowideit :smile_cat: \n. actually, do not merge this just yet, I need to update the root HGFS automount.\n. Ok, we are good now.\n. cc: @SvenDowideit @tianon \n. @tianon moved to tarball releases, feels much cleaner now, tested against docker/machine@993b5f557f908973e6d3766f22c67d702a88491d and works like a charm :smile: \n. @mixja @robertwe @gravis are you guys using docker-machine to bring the environment up?\n. @mixja @robertwe @gravis are you guys using docker-machine to bring the environment up?\n. @gravis you guys are most likely using a version of docker-machine that doesn't support the new FUSE-based shared folder implementation, see docker/machine#1995 quick fix: compile docker-machine from HEAD.\n. @gravis you guys are most likely using a version of docker-machine that doesn't support the new FUSE-based shared folder implementation, see docker/machine#1995 quick fix: compile docker-machine from HEAD.\n. @tianon I think we can safely close this.\n. @tianon I think we can safely close this.\n. Hmmm, this looks like a regression in the vmwarefusion driver in docker-machine.\nDefinitely not something that should be done here in b2d.\n. see docker/machine#2849\n. I don't think boot2docker should do that, mounting a specific share should be the business of other tools consuming b2d (like docker-machine).\n@tianon thoughts?\n. I don't think boot2docker should do that, mounting a specific share should be the business of other tools consuming b2d (like docker-machine).\n@tianon thoughts?\n. @sevikkk that blog post is from 2014, there was no docker-machine back then :)\nI'd rather keep a clean approach to this, and let the tool that consumes b2d do the mounting.\n. @sevikkk that blog post is from 2014, there was no docker-machine back then :)\nI'd rather keep a clean approach to this, and let the tool that consumes b2d do the mounting.\n. :+1: on what @nathanleclaire said, I see no harm in having b2d do the mount if the directory exists (that should reasonably avoid any conflict).\n. @sevikkk I'm referring to /mnt/hgfs/Users that will only exists if a shared folder was published on the VMware side.\n. Fix https://github.com/boot2docker/boot2docker/pull/1161 waiting to be merged, thanks @kaosagnt for reporting and testing this out.\n. Fix https://github.com/boot2docker/boot2docker/pull/1161 waiting to be merged, thanks @kaosagnt for reporting and testing this out.\n. \n. \n. @tianon Looks better now \ud83d\ude04 \n. @tianon Looks better now \ud83d\ude04 \n. @tianon I probably am \ud83d\ude04 what @blop makes sense, is there a PR open for that change?. @tianon I probably am \ud83d\ude04 what @blop makes sense, is there a PR open for that change?. LGTM. LGTM. @tianon \ud83d\ude04 \n@KamilKopaczyk thanks for the detailed report, there's a more updated driver that works with all our desktop hypervisors (fusion on mac, workstation on windows and linux) that is available here: https://github.com/machine-drivers/docker-machine-driver-vmware (binary releases are available as well)\nWe tried to include it on docker/machine but the project no longer accepts major contributions to drivers \ud83d\ude22 .\nI'll take a look at the bug anyway as I hate to see the included driver broken.. Yes, this is definitely temporary, I really wanted to put this gist under our github org but apparently it's not possible yet. In the future we're going to have a specific patches repo in our org.\n. Makes sense, it's that I'm always a bit anxious when piping stuff out of curl :smile: let me fix that\n. Original comment in my code was \"horrible hack\" :wink: \n. I'm positive that vmtoolsd would quit if can't talk to the vmx backdoor, but let me test it on VirtualBox to be 100% sure.\n. Let me take a deeper look into this, I'm not even 100% sure this file is needed for boot2docker at all.\n. It is indeed needed by vmtoolsd, I will add it to the patch routine instead of adding the file directly to the rootfs.\n. It is a good citizen :smile: added a comment to note that, just tested with VirtualBox:\n\n. Added a comment, it all boils down to the release cadence of open-vm-tools, the patch will go away once we have a new release that incorporates those changes.\n. If there's nothing in the first 256k it's a very weird way to store data in a block device :wink: \n. Apparently busybox doesn't support regex in tests, I can't make this to work...\n``` shell\ndocker@fusion-test-b2d:~$ cat regextest.sh\n!/bin/sh\nDISK_VENDOR=\"asdasd VMware qweqweqwe\"\nif [[ \"$DISK_VENDOR\" == VMware ]]; then\n        echo \"yay\"\nelse\n        echo \"nay\"\nfi\ndocker@fusion-test-b2d:~$ ./regextest.sh\nnay\ndocker@fusion-test-b2d:~$\n```\nWe should be fine with the dual test for now, I guess.\n. @md5 bash is not part of boot2docker\n. Ha! good catch! yes, makes total sense, I think we're stable enough to switch to release tarballs, I'll submit a revised commit tomorrow.\n. so much this!! \ud83d\ude04 \n\n. ",
    "oliverkurth": "@SvenDowideit , do you want me to squash them all together, or just those that are related? If the latter, I think I can squash the 3 commits that add/fix/update open-vm-tools (9cd511c, 391fdff and 5fcfcf7). The others seem to make sense on their own.\n. Okay, I squashed the 3 commits. If you have already checked out this branch, proceed with caution, I had to force update to github.\n. Okay, I squashed the 3 commits. If you have already checked out this branch, proceed with caution, I had to force update to github.\n. @tianon , I haven't tested on vbox myself, but vmtoolsd should detect if it's running on non-vmware, and quietly exit. I verified that it does that on bare metal.\n. @tianon , I haven't tested on vbox myself, but vmtoolsd should detect if it's running on non-vmware, and quietly exit. I verified that it does that on bare metal.\n. @md5 , there is no particular reason other than that we haven't had the time yet to try it.\n. @SvenDowideit , if there is anything missing in this PR, please let me know.\n. @tianon , the original file from open-vm-tools doesn't work in boot2docker, it gives errors when you try to power off or suspend/resume the vm. So I put a fixed version into the rootfs.\n. @jeffmendoza I don't know. But for sure trying to relicense that file will be a painful process that needs to go through our legal department, something that I would rather avoid. open-vm-tools is licensed under LGPL, and so is the original network script and this one is a changed version. Why do you want it relicensed?\n. I can take the file out of this change, and put it into tcl-container, and then update this PR so the Dockerfile would pull an updated version. Would that be okay?\n. I think vmhgfs support should be handled in a separate PR.\nI am not sure how to handle it. vmhgfs is a needs kernel module, but it's not in the kernel source, but in open-vm-tools sources. It could be done in the boot2docker build along with building other modules but it would need to pull the source from open-vm-tools. Or it can be done in tcl-container, but then that needs to change whenever boot2docker changes the kernel.\n. Sorry for the late reply - holidays and cold intervened.\nSo here is a list of things that make this PR valuable:\n- the vmballoon driver is used when the host gets low on memory. Basically, the driver will allocate memory in the guest and make it available to the host.\n- the vmtoolsd makes it possible to shut down the guest gracefully, by calling 'shutdown' (as opposed to just power off, which is just pulling the power plug). Similarly, it releases dhcp leases when suspending.\n  You can shutdown/suspend/resume from Fusion/WS or from the cmd line with vmrun (try vmrun -h).\n- it makes it possible to query the guest using the 'vmrun' (or 'vmware-vim-cmd' for shared VMs), for example to get  information like the IP adddress and others.\n- you can copy files from/to the vm using vmrun\n. ",
    "SlimYang": "@tianon I have verified this on vbox, and vmtoolsd will also exit quietly.\n. @tianon I have verified this on vbox, and vmtoolsd will also exit quietly.\n. ",
    "justinmayer": "@SvenDowideit / @tianon: Oliver's work on this looks good to me. Any chance we could get this merged?\n. ",
    "trkoch": "I successfully built the image and was able to boot it in Vmware Fusion. What needs to be done to include support for Vmware shared folders (vmhgfs)? Does this PR also track progress on the command line client boot2docker?\n. ",
    "ehazlett": "@frapposelli is there anything we can do so get shared folders in here like you have working in the test ISO from cloudnativeapps?  This would also help to get to a single ISO for Docker machine as well. :)\n. This is part of the b2d process I believe.  @tianon can you explain why that file is there and is it safe to remove?\n. This is part of the b2d process I believe.  @tianon can you explain why that file is there and is it safe to remove?\n. Would you mind running the following:\nCA: openssl x509 -in /Users/joelwurtz/.boot2docker/certs/boot2docker-vm/ca.pem -noout -text\nServer: openssl x509 -in server.pem -noout -text\nClient: openssl x509 -in /Users/joelwurtz/.boot2docker/certs/boot2docker-vm/cert.pem -noout -text\nI'm not sure where the \"server.pem\" file may be.  Perhaps in the boot2docker-vm dir or on the VM in /var/lib/boot2docker/tls/server.pem\nThanks\n. LGTM\n. ",
    "mafintosh": "@paolomainardi to fix some permissions issues when using https://github.com/mafintosh/torrent-docker\n. ",
    "Suikerspin": "Thank you . i will try this.\n. ",
    "Govindarj": "Anyone tell me how to install docker in windows 7 32bit????? Thanks in advance\n. Anyone tell me how to install docker in windows 7 32bit????? Thanks in advance\n. ",
    "david756": "i have the same problem\n. i have the same problem\n. ",
    "parths049": "I have same problem\n. I have same problem\n. ",
    "datorse": "Check https://thesocietea.org/2016/04/installing-the-docker-client-cli-on-32-bit-windows/. ",
    "gduprez": "Got the same,\nIt sound like a out of memory issue\nsee https://github.com/docker/compose/issues/1554\ncurrently trying to restart de vm...\n. ",
    "tbronchain": "The problem is that I'm using some different names for the VM, and it seems it's not compatible with TLS, as I detailed in this issue https://github.com/docker/docker-py/issues/406\n. I was just making some tests and trying to make it work before making any proper \"fix\" request. You're right though, would be awesome if it could be fixed :)\n. You can add the 3 \"export\" linux to your shell config file (Commonly on OSX\n~/.profile or ~/.bashrc).\nOn Thu, Feb 5, 2015 at 5:16 PM, Jan Carlo Viray notifications@github.com\nwrote:\n\nIt seems like I continually have to run $(boot2docker shellinit) everytime\nI open my shell. I placed it in my bash_profile to temporary fix the\nannoyance, but I'm not sure if I should be doing this.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/648#issuecomment-73015903\n.\n. Fair enough, that's actually what I have in mine. Sorry guys ;)\nOn Feb 10, 2015 8:23 AM, \"Sven Dowideit\" notifications@github.com wrote:\n@tbronchain https://github.com/tbronchain no, do not do this.\nput $(boot2docker shellinit) into the ~/.profile file - that way it will\nbe correct when run.\n@jancarloviray https://github.com/jancarloviray thats what I do...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/648#issuecomment-73626913\n.\n. Fair enough, that's actually what I have in mine. Sorry guys ;)\nOn Feb 10, 2015 8:23 AM, \"Sven Dowideit\" notifications@github.com wrote:\n@tbronchain https://github.com/tbronchain no, do not do this.\nput $(boot2docker shellinit) into the ~/.profile file - that way it will\nbe correct when run.\n@jancarloviray https://github.com/jancarloviray thats what I do...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/648#issuecomment-73626913\n.\n. \n",
    "senecahinds": "I'm get this message after I type \nsudo docker info \nFATA[0000] Get http:///var/run/docker.sock/v1.16/info: dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS? \nis there something i am not doing correctly \n. thanks for your reply I have it working \n. ",
    "madtechsupport": "Hi,\nThanks for the feedback. What I'm doing amounts to the steps described\nhere:\nhttps://github.com/boot2docker/boot2docker/blob/master/README.md#virtualbox-guest-additions\nAs I'm using OS X, the mount I'm creating is \"docker run -v\n/Users/warren/Docker/nginx/html:/usr/share/nginx/html ...\", which aligns\ncorrectly to the \"/Users share at /Users\" that boot2docker creates. In fact\nwhen I make a change the change appear at:\n/Users/warren/Docker/nginx/html/index.html <--- on OS X\n/Users/warren/Docker/nginx/html/index.html <--- on boot2docker VM\n/usr/share/nginx/html/index.html <--- in the Docker container\nThe change appears correctly in the Docker container, only nginx does not\ndetect the change and continues to display the earlier version of the file.\nIs this expect boot2docker behavior or not?\nRegards,\nWarren.\nOn Fri, Nov 28, 2014 at 2:07 AM, Sergey Zolotorev notifications@github.com\nwrote:\n\nPerhaps you need to read about folder sharing in\nhttps://github.com/boot2docker/boot2docker/blob/master/README.md\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/652#issuecomment-64800663\n.\n. I've worked this out. This is a sendfile bug that affects Virtualbox. More information be found here:\n\nhttps://www.virtualbox.org/ticket/9069\nThe same problem affects Vagrant:\nhttps://github.com/mitchellh/vagrant/issues/351\n. ",
    "manadan999": "Its a big pain. +1\n. Its a big pain. +1\n. ",
    "gerrywastaken": "@kudos I agree, it seems that everybody (on the 20+ threads I've found for various projects) is just assuming it's a Virtualbox issue because Virtualbox hasn't responded for years. However running stat  shows the file being updated the the file contents are showing as updating, so I'm wondering what it is about sendfile or nginx, that is not picking up the change.\nSome more info: http://smotko.si/nginx-static-file-problem/\nAnd the closed nginx ticket which it seems was not investigated on their end: https://trac.nginx.org/nginx/ticket/245\nThey both point to a comment on reddit which suggests that it's due to a limitatation of the shared file system provided by Virtuallbox. However as mentioned, the file is showing as changed on the file server so I still suspect this is not a problem with Virtualbox.\n. ",
    "sleemer": "Same problem... But what I found out is:\nWhen I update file in shared folder on my mac it reflects correctly to docker container, BUT something strange is happening with file in virtualbox vm... What I mean by strange... If, for example, I change file index.html with content 'Hello world' to 'Hi' then content of files would be:\n'Hi' - /Users/username/Docker/nginx/html/index.html <--- on OS X\n'Hel' - /Users/username/Docker/nginx/html/index.html <--- on VM\n'Hi' - /usr/share/nginx/html/index.html <--- in the Docker container\nIf I change file index.html again to 'Hi again to all of you' then content of files would be:\n'Hi again to all of you' - /Users/username/Docker/nginx/html/index.html <--- on OS X\n'Hello world' - /Users/username/Docker/nginx/html/index.html <--- on VM\n'Hi again to all of you' - /usr/share/nginx/html/index.html <--- in the Docker container\n... and, of cause, nginx, with default settings, returns version of file from VM...\nUPDATED: After restarting the VM:\n'Hi again to all of you' - /Users/username/Docker/nginx/html/index.html <--- on OS X\n'Hi again to all of you' - /Users/username/Docker/nginx/html/index.html <--- on VM\n'Hi again to all of you' - /usr/share/nginx/html/index.html <--- in the Docker container\nnginx returns 'Hi again to all of you' .\n. ",
    "jredl-va": "Just a heads up for others on this thread, I found this little tool very helpful with OSX docker development: https://github.com/brikis98/docker-osx-dev\nThe tool gets rsync up and running and is a great workaround for the send file issues. \n. ",
    "ImranAhmed": "Is this still ongoing? I hit this issue today on Windows 7, Docker Toolbox.. Is this still ongoing? I hit this issue today on Windows 7, Docker Toolbox.. ",
    "joe-at-startupmedia": "Still an issue for me using gulp on the host machine and hosting the index file on the client. I just run this bash script against the index file on the client machine for the time being:\n```bash\n!/bin/bash\nSet initial time of file\nLTIME=stat -c %Z $1\nwhile true\ndo\n   ATIME=stat -c %Z $1\nif [[ \"$ATIME\" != \"$LTIME\" ]]\n   then\n     echo \"\" >> $1\n     echo \"File Saved.\"\n     LTIME=stat -c %Z $1\n   fi\n   sleep 3\ndone\n. Still an issue for me using gulp on the host machine and hosting the index file on the client. I just run this bash script against the index file on the client machine for the time being:bash\n!/bin/bash\nSet initial time of file\nLTIME=stat -c %Z $1\nwhile true\ndo\n   ATIME=stat -c %Z $1\nif [[ \"$ATIME\" != \"$LTIME\" ]]\n   then\n     echo \"\" >> $1\n     echo \"File Saved.\"\n     LTIME=stat -c %Z $1\n   fi\n   sleep 3\ndone\n```. ",
    "stephen-mw": "If I comment out the following in my bash_profile I can get an instance error and my terminal doesn't hang:\nComment out:\nexport DOCKER_HOST='tcp://192.168.59.103:2375'\nThe error then becomes an instant:\n2014/12/01 11:06:08 Get http:///var/run/docker.sock/v1.14/images/json: dial unix /var/run/docker.sock: no such file or directory\n. I tracked this down to an alias I had that was attempting to reach docker. Sorry for the false report, all!\n. ",
    "luisrudge": "VBoxSVC.log\nVirtualBox COM Server 4.3.18 r96516 win.amd64 (Oct 11 2014 13:21:57) release log\n00:00:00.001000 main     Log opened 2014-12-06T12:25:17.579221500Z\n00:00:00.001000 main     Build Type: release\n00:00:00.001000 main     OS Product: Windows 10\n00:00:00.001000 main     OS Release: 6.4.9879\n00:00:00.001000 main     OS Service Pack: \n00:00:00.012008 main     DMI Product Name: QAL51\n00:00:00.018011 main     DMI Product Version: 6.40\n00:00:00.018011 main     Host RAM: 16346MB total, 14380MB available\n00:00:00.018011 main     Executable: C:\\Program Files\\Oracle\\VirtualBox\\VBoxSVC.exe\n00:00:00.018011 main     Process ID: 4708\n00:00:00.018011 main     Package type: WINDOWS_64BITS_GENERIC\n00:00:00.019011          Loading settings file \"C:\\Users\\Lu\u00eds/.VirtualBox\\VirtualBox.xml\" with version \"1.12-windows\"\n00:00:00.140683          usbLibDevStrDrEntryGet: DeviceIoControl 1 fail winEr (31)\n00:00:00.398402          HostDnsMonitorProxy: Host's DNS information updated:\n00:00:00.441430          VDInit finished\n00:00:00.442431          Loading settings file \"C:\\Users\\Lu\u00eds\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox\" with version \"1.14-windows\"\n00:00:00.460443          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 1 of controller 'SATA'}, preserve=false\n00:00:00.466446          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 1 of controller 'SATA'}, preserve=false\n00:00:04.528791          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:04.528791          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:04.528791          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:04.529792          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:04.556810          ERROR [COM]: aRC=E_FAIL (0x80004005) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={This machine does not have any snapshots}, preserve=false\n00:00:05.998855 Watcher  ERROR [COM]: aRC=E_FAIL (0x80004005) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={Machine} aText={The virtual machine 'boot2docker-vm' has terminated unexpectedly during startup with exit code -1073741819 (0xc0000005)}, preserve=false\n00:00:06.056934          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:06.056934          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:06.057935          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:06.057935          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:06.083952          ERROR [COM]: aRC=E_FAIL (0x80004005) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={This machine does not have any snapshots}, preserve=false\n00:00:09.251739          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:09.251739          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:09.251739          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:09.251739          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:09.278755          ERROR [COM]: aRC=E_FAIL (0x80004005) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={This machine does not have any snapshots}, preserve=false\n00:00:09.428941          ERROR [COM]: aRC=VBOX_E_OBJECT_IN_USE (0x80bb000c) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={Shared folder named 'c/Users' already exists}, preserve=false\n00:00:10.706227 Watcher  ERROR [COM]: aRC=E_FAIL (0x80004005) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={Machine} aText={The virtual machine 'boot2docker-vm' has terminated unexpectedly during startup with exit code -1073741819 (0xc0000005)}, preserve=false\n00:00:10.766267          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:10.766267          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 2 of controller 'SATA'}, preserve=false\n00:00:10.766267          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:10.766267          ERROR [COM]: aRC=VBOX_E_OBJECT_NOT_FOUND (0x80bb0001) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={No storage device attached to device slot 0 on port 3 of controller 'SATA'}, preserve=false\n00:00:10.792285          ERROR [COM]: aRC=E_FAIL (0x80004005) aIID={480cf695-2d8d-4256-9c7c-cce4184fa048} aComponent={SessionMachine} aText={This machine does not have any snapshots}, preserve=false\n00:00:15.804561 main     ERROR [COM]: aRC=VBOX_E_OBJECT_IN_USE (0x80bb000c) aIID={05f2bbb6-a3a6-4fb9-9b49-6d0dda7142ac} aComponent={Medium} aText={Medium 'C:\\Users\\Lu\ufffds\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vmdk' cannot be closed because it is still attached to 1 virtual machines}, preserve=false\n00:00:15.804561 Watcher  ERROR [COM]: aRC=E_ACCESSDENIED (0x80070005) aIID={fafa4e17-1ee2-4905-a10e-fe7c18bf5554} aComponent={VirtualBox} aText={The object is not ready}, preserve=false\n. Here's the weird thing:\n\nafter a boot2docker init\n\nCan you see the unicode problem? It creates another folder with a buggy unicode char. But now I have two images.\n\n. # boot2docker init -v\n```\nC:\\WINDOWS\\system32>boot2docker init -v\nBoot2Docker-cli version: v1.3.2\nGit commit: e41a9ae\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: d46ac2d4-3c33-4015-80a6-5d0ae92c0d91\nSettings file: 'C:\\Users\\Lu\u00eds\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostres\nolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --long\nmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 ser\nver \\.\\pipe\\boot2docker-vm --boot1 dvd\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/12/06 10:30:49 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2014/12/06 10:30:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2014/12/06 10:30:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic2 hostonly --nictype2 virtio --cableconnected2 on --hostonlyadapter2\nVirtualBox Host-Only Ethernet Adapter #4\n2014/12/06 10:30:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe storagectl boot2docker-vm --name SATA --add sata --portcount 4 --hostiocache on --bootable on\n2014/12/06 10:30:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe storageattach boot2docker-vm --storagectl SATA --port 0 --device 0 --type dvddrive --medium C:\\Use\nrs\\Lu\u00eds.boot2docker\\boot2docker.iso\nConverting from raw image file=\"stdin\" to file=\"C:\\Users\\Lu\ufffds\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vmdk\"...\nCreating dynamic image with size 20971520000 bytes (20000MB)...\nInitializing disk with ssh keys\nWRITING: boot2docker, please format-me                                                                       0000000 0000000 0000000 00000000035 00000000000 014423\n                                                                                       ustar 00                                                                0000000 0000000\n                                                                                                                                                                   boot2docker, ple\nase format-me\n                                                                                                                                      .ssh\n                                                       0000700 0000000 0000000 00000000000 00000000000 007767  5\n                                 ustar 00                                                                0000000 0000000\n                                                                                                             .ssh/authorized_keys\n                              0000644 0000000 0000000 00000000623 00000000000 013135\n        ustar 00                                                                0000000 0000000\n                                                                                    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7JUfRd9IKeuNHy85i54Xyt5E6voxifaTWGqFUIcQOXBfGuIGGAs5\n\n1GRNpi9UOBlG2/HcoFWBwtGkcT60SsJof/nq0ay5YPAcGHRvArtokWHpr0ZoEATrsr5eri975PJr/rRqSpXXyUtubPCvfvhOBccJ9xK2vpu+j5MDs4nkmyZl//dhHr9Ax+Z6HMDrb/6tMcRe6WFzSELpnN0UXAdKE5ZYXdxVY8DfM9GDbi/\nxlk0P0VhKkEOkT5W12MPlT80I5KMcg32t9j97dWX12uAn6ibs5scAYhO+l0a5CftjKR/LDHfaYGsUhVveJOCi/rPrJo7PbjCNQR0ilks6uTAU3 Lu\u00eds@WIN-8UFG2TTBRAU\n                                                                                                             .ssh/authorized_keys2\n                              0000644 0000000 0000000 00000000623 00000000000 013217\n        ustar 00                                                                0000000 0000000\n                                                                                    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7JUfRd9IKeuNHy85i54Xyt5E6voxifaTWGqFUIcQOXBfGuIGGAs51GRN\npi9UOBlG2/HcoFWBwtGkcT60SsJof/nq0ay5YPAcGHRvArtokWHpr0ZoEATrsr5eri975PJr/rRqSpXXyUtubPCvfvhOBccJ9xK2vpu+j5MDs4nkmyZl//dhHr9Ax+Z6HMDrb/6tMcRe6WFzSELpnN0UXAdKE5ZYXdxVY8DfM9GDbi/xlk0\nP0VhKkEOkT5W12MPlT80I5KMcg32t9j97dWX12uAn6ibs5scAYhO+l0a5CftjKR/LDHfaYGsUhVveJOCi/rPrJo7PbjCNQR0ilks6uTAU3 Lu\u00eds@WIN-8UFG2TTBRAU\n\n2014/12/06 10:30:59 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe storageattach boot2docker-vm --storagectl SATA --port 1 --device 0 --type hdd --medium C:\\Users\\Lu\n\ufffds\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vmdk\n```\n. After rolling back virtualbox from v4.3.18 to v4.3.16, I got a different error:\nC:\\Users\\Lu\u00eds {git}\n{lamb} boot2docker init -v\nBoot2Docker-cli version: v1.3.2\nGit commit: e41a9ae\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 58e55686-88e5-4763-b576-6ea66f9a2266\nSettings file: 'C:\\Users\\Lu\u00eds\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/06 10:53:16 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/12/06 10:53:17 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/12/06 10:53:17 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2014/12/06 10:53:17 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2014/12/06 10:53:17 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n2014/12/06 10:53:19 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif ipconfig VirtualBox Host-Only Ethernet Adapter #5 --ip 192.168.59.3 --netmask 255.255.255.0\nVBoxManage.exe: error: The host network interface with the given name could not be found\nVBoxManage.exe: error: Details: code E_INVALIDARG (0x80070057), component Host, interface IHost, callee IUnknown\nVBoxManage.exe: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage.exe: error: Could not find interface 'VirtualBox Host-Only Ethernet Adapter #5'\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 2\nAnd the problem with unicode creating a new folder with buggy unicode has gone.\n. And I do have that interface available:\n\n. any news?\n. ",
    "stimpy77": "I have the same issue. Using VirtualBox v4.3.12, which I can't update because I'm on Win 10 CTP.\nC:\\Program Files\\Boot2Docker for Windows> .\\boot2docker.exe init -v\nBoot2Docker-cli version: v1.3.1\nGit commit: 57ccdb8\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 5a3312bb-f554-4fe9-ab7e-b75686496a90\nSettings file: 'M:\\VM\\boot2docker-vm\\boot2docker-vm.vbox'\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n2014/12/21 19:07:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif ipconfig VirtualBox Host-Only Ethernet Adapter #4 --ip 192.168.59.3 --netmask 255.255.255.0\nVBoxManage.exe: error: The host network interface with the given name could not be found\nVBoxManage.exe: error: Details: code E_INVALIDARG (0x80070057), component Host, interface IHost, callee IUnknown\nVBoxManage.exe: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage.exe: error: Could not find interface 'VirtualBox Host-Only Ethernet Adapter #4'\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 2\n. I have the same issue. Using VirtualBox v4.3.12, which I can't update because I'm on Win 10 CTP.\nC:\\Program Files\\Boot2Docker for Windows> .\\boot2docker.exe init -v\nBoot2Docker-cli version: v1.3.1\nGit commit: 57ccdb8\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 5a3312bb-f554-4fe9-ab7e-b75686496a90\nSettings file: 'M:\\VM\\boot2docker-vm\\boot2docker-vm.vbox'\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/12/21 19:07:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --natdnshostresolver1 on --bioslogodisplaytime 0 --biosbootmenu disabled --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2014/12/21 19:07:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n2014/12/21 19:07:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif ipconfig VirtualBox Host-Only Ethernet Adapter #4 --ip 192.168.59.3 --netmask 255.255.255.0\nVBoxManage.exe: error: The host network interface with the given name could not be found\nVBoxManage.exe: error: Details: code E_INVALIDARG (0x80070057), component Host, interface IHost, callee IUnknown\nVBoxManage.exe: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage.exe: error: Could not find interface 'VirtualBox Host-Only Ethernet Adapter #4'\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 2\n. ",
    "dlorenc": "+@proppy \nI'm all for this supporting identity auth by default, but I'd prefer it to wait until after identity auth is available in docker-py and other libraries.\nHere's the issue for docker-py: https://github.com/docker/docker-py/issues/414\n. Understood, but this is still very disruptive. Making identity auth the default in b2d 1.5 would mean:\n- Docker 1.4.1 and lower clients can no longer talk to default b2d installs.\n- boot2docker-cli 1.4.1 and lower clients can probably no longer talk to b2d installs. How would $(b2d shellinit) work?\n- Any programs written with docker-py or other language bindings are broken, until identity auth is implemented there. It's not clear whether or not py-libtrust will be done in time for the 1.5 release. I'm not sure about any other bindings.\nI understand what machine has to gain from b2d supporting this early, but what are the benefits to other users?\n. b2d up --auth=identity?\nSomething at b2d init time would be nice too. Then users don't have to remember to pass the correct flag each time they run up.\n. Can we make option 1 work without breaking back compat with old boot2docker-cli versions?\n. ",
    "amylindburg": "Can we add this to the 1.5.0 milestone?\n. ",
    "AkihiroSuda": "Hi, any update on this?\nAlso, the license of /usr/share/udhcpc/default.script seems GPL2\nhttps://git.busybox.net/udhcp/commit/samples/simple.script?id=6daadcc6af8081c50fa03822b7b6fcdb845dab83\nhttps://git.busybox.net/udhcp/tree/COPYING\n. I think Boot2Docker CLI is no longer maintained.\nI suggest closing this issue.\nPeople who are hitting this issue can use Docker Machine instead: https://docs.docker.com/windows/step_one/\n. Seems inode exhaustion.\nPlease try df -i ?\n. @greglearns Please try --privileged\n. v1.10.0 should have fixed this. I suggest closing this issue.\n. v1.10.0 should have fixed this. I suggest closing this issue.\n. @clintonskitson Please try #1114?\n. Closing and reopening the issue to trigger Travis again: E: Failed to fetch http://httpredir.debian.org/debian/pool/main/libf/libfile-fcntllock-perl/libfile-fcntllock-perl_0.22-1+b1_amd64.deb  Error reading from server. Remote end closed connection [IP: 5.153.231.35 80]\n. @klodoma \nIt will be officially available for Ubuntu 14.04 soon: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1533043\nIf you need it  immediately, you can build a custom kernel yourself\nhttps://help.ubuntu.com/community/Kernel/Compile\nIf you are going to build a custom kernel, this patch should be enough, but I didn't test for Ubuntu 14.04:\nhttps://github.com/sfjro/aufs4-linux/commit/f60d586b7b8cae42bacc603d192810db85278d3c\n. @klodoma If you meant you just need to use the latest Boot2Docker on VirtualBox/VMWare/QEMU on your Ubuntu 14, just run docker build -t boot2docker . && docker run --rm boot2docker > boot2docker.iso.\n. $ docker-machine create -d virtualbox dm1\n$ docker-machine stop dm1\n$ cp -f your-iso-file ~/.docker/machine/machines/dm1/boot2docker.iso\n. Thank you for the comment.\nThe patch is easy to apply, but I think we can wait for 4.1.16, and after that we can close this issue.\n. http://article.gmane.org/gmane.linux.file-systems.aufs.user/5349\n\n(Vanilla kernel does not allow root in a user namespace to mount\noverlayfs. So I guess it is only the case of ubuntu kernel.)\n\nWe can safely close this issue.\n. http://article.gmane.org/gmane.linux.file-systems.aufs.user/5349\n\n(Vanilla kernel does not allow root in a user namespace to mount\noverlayfs. So I guess it is only the case of ubuntu kernel.)\n\nWe can safely close this issue.\n. ZIP does not contain .git folder.\nYou have to use git clone instead of downloading ZIP.\n. ZIP does not contain .git folder.\nYou have to use git clone instead of downloading ZIP.\n. You can use tce-load: http://wiki.tinycorelinux.net/wiki:tce-load\n. Boot2Docker-cli  is deprecated.\nWhy not use Docker Machine? It automatically installs Boot2Docker Linux distribution (not CLI).\nhttps://docs.docker.com/engine/installation/windows/\n. +1, can be simplified like this?\nbash\nrestart() {\n    if check; then\n        stop\n        while check; do\n            sleep 1\n        done\n    fi\n    start\n}\n. You can set it to 0 by running  echo 0 > /proc/sys/kernel/randomize_va_space.\nDo you think it should be zero by default?\nRecent major distos seem using 2 by default.\n. Please try modprobe kvm_intel outside the container.\n. I meant like this:\nhost$ docker-machine ssh your-docker-machine\nyour-docker-machine$ sudo modprobe kvm_intel\nyour-docker-machine$ exit\nThen, you can use Dockerfile which only contains RUN apt-get install -y kvm qemu.\nNote that kvm_intel.ko module is tied with Boot2Docker kernel rather than Ubuntu container.\nSo you can't load kvm_intel.ko inside the Ubuntu container.\n. Perhaps are you trying to running KVM on VirtualBox?\nIt doesn't work because VirtualBox does not support nested virtualization.\nPlease consider using VMware instead of VirtualBox.\n(Sorry if you are not using VirtualBox)\n. Perhaps are you trying to running KVM on VirtualBox?\nIt doesn't work because VirtualBox does not support nested virtualization.\nPlease consider using VMware instead of VirtualBox.\n(Sorry if you are not using VirtualBox)\n. @iam-peekay https://communities.vmware.com/docs/DOC-8970\n. @iam-peekay https://communities.vmware.com/docs/DOC-8970\n. Is there vmx flag in /proc/cpuinfo?\nIf exists, it might be a B2D bug, if not, it's a VMware misconfiguration.\n. Is there vmx flag in /proc/cpuinfo?\nIf exists, it might be a B2D bug, if not, it's a VMware misconfiguration.\n. You need to run mknod /dev/kvm c 10 232 inside the container.\nYou also need to add--privileged flag when you execute docker run.\n. If you ran modprobe kvm_intel successfully, it means VT is enabled.\n(All the recent Macintoshes support VT by default: https://support.apple.com/en-gb/HT203296)\n- Make sure you check \"Virtualize Intel VT-x/EPT\" in the configuration dialog of VMware Fusion.\n- Make sure you run modprobe kvm_intel (outside the container).\n- Make sure you run docker run with --privileged.\n- Make sure vmx is shown when you run cat /proc/cpuinfo inside the container\n- Make sure kvm_intel is shown when you run lsmod inside the container\n- Make sure you run mknod /dev/kvm c 10 232 inside the container\nSorry actually I don't have VMware Fusion and I can't try your workload locally.\n. $ docker run -it --privileged YOUR_IMAGE\ncontainer# cat /proc/cpuinfo\ncontainer# lsmod\ncontainer# mknod /dev/kvm c 10 232\ncontainer# /YOUR-INIT\n. What's your storage driver?\nEg AUFS Overlay..\nWhat happens if you change the driver?\n. ",
    "draganaperez": "I am seeing the same problem. Same OSX version, Virtual box and boot2docker. Downgrading Virtual Box did not help, neither did restarting. \n. ",
    "DanLipsitt": "Similar problems here as well.\nOSX 10.8.5\nVirtualBox 4.3.20r96996\nboot2docker 1.4.1\n$ boot2docker -v init\nBoot2Docker-cli version: v1.4.1\nGit commit: 43241cb\n2014/12/16 17:35:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/12/16 17:35:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/12/16 17:35:33 executing: VBoxManage list vms\n2014/12/16 17:35:33 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 62410c6f-390d-42f1-a708-f89ff0488d34\nSettings file: '/Users/dan/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2014/12/16 17:35:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/12/16 17:35:33 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2014/12/16 17:35:33 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 4 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/dan/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2014/12/16 17:35:33 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/12/16 17:35:33 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2014/12/16 17:35:33 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2014/12/16 17:35:34 executing: VBoxManage list hostonlyifs\n2014/12/16 17:35:34 executing: VBoxManage list dhcpservers\n2014/12/16 17:35:34 executing: VBoxManage hostonlyif create\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n2014/12/16 17:35:34 executing: VBoxManage hostonlyif ipconfig dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp --ip 192.168.59.3 --netmask 255.255.255.0\nVBoxManage: error: The host network interface with the given name could not be found\nVBoxManage: error: Details: code NS_ERROR_INVALID_ARG (0x80070057), component Host, interface IHost, callee nsISupports\nVBoxManage: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage: error: Could not find interface 'dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp'\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 2\nI have tried running VirtualBoxStartup.sh restart and it didn't help.\n. ",
    "klsmith300": "OSX 10.8.3 \nVirtual Box v4.3.20\nboot2docker 1.4.1\nHaving a very similar issue. Network interface issue seems to be a part but also the ISO image is not being loaded.\nI've uninstalled and reinstalled VirtualBox and am re-attempting to run the boot2docker installer. The framework for the new boot2docker VM is established, but it seems that the instructions for mounting the ISO image are just missing.  Logging at the startup log in VBox, this is what I see:\n00:00:00.469118 Guest OS type: 'Linux26_64'\n00:00:00.475048 fHMForced=true - SMP\n00:00:00.475059 fHMForced=true - 64-bit guest\n00:00:00.475068 fHMForced=true - Darwin host\n00:00:00.491936 Shared clipboard mode: Off\n00:00:00.492701 Drag'n'drop mode: Off\nComparing this to what others provide:\n00:00:00.053887 fHMForced=true - 64-bit guest\n00:00:00.053896 fHMForced=true - Darwin host\n00:00:00.066006 File system of '/Users/mark/.boot2docker/boot2docker.iso' (DVD) is hfs\n00:00:00.070198 File system of '/Users/mark/VirtualBox VMs/boot2docker-vm/Snapshots' (snapshots) is unknown\n00:00:00.070211 File system of '/Users/mark/.boot2docker/boot2docker-vm.vmdk' is hfs\n00:00:00.087226 Shared clipboard mode: Off\n00:00:00.088467 Drag'n'drop mode: Off\nNeedless to say, the VM won't start because it has no device to boot from.\n00:00:00.660557 Guest Log: Could not read from the boot medium! System halted.\nThe ISO image is in the ~/.boot2docker directory as expected.\nThis is the response to the \"init\" request after mopping up any old JVM instances:\n$ boot2docker -v init\nBoot2Docker-cli version: v1.4.1\nGit commit: 43241cb\n2015/01/06 11:19:43 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:43 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:44 executing: VBoxManage list vms\n2015/01/06 11:19:44 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 53a7271d-7e07-420d-abbc-a1fbed7e1319\nSettings file: '/Users/ksmith/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2015/01/06 11:19:44 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:44 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/01/06 11:19:44 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/ksmith/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2015/01/06 11:19:44 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:44 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2015/01/06 11:19:44 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/01/06 11:19:44 executing: VBoxManage list hostonlyifs\n2015/01/06 11:19:44 executing: VBoxManage list dhcpservers\n2015/01/06 11:19:44 executing: VBoxManage hostonlyif create\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n2015/01/06 11:19:44 executing: VBoxManage hostonlyif ipconfig dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp --ip 192.168.59.3 --netmask 255.255.255.0\nVBoxManage: error: The host network interface with the given name could not be found\nVBoxManage: error: Details: code NS_ERROR_INVALID_ARG (0x80070057), component Host, interface IHost, callee nsISupports\nVBoxManage: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage: error: Could not find interface 'dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp'\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 2\n. OSX 10.8.3 \nVirtual Box v4.3.20\nboot2docker 1.4.1\nHaving a very similar issue. Network interface issue seems to be a part but also the ISO image is not being loaded.\nI've uninstalled and reinstalled VirtualBox and am re-attempting to run the boot2docker installer. The framework for the new boot2docker VM is established, but it seems that the instructions for mounting the ISO image are just missing.  Logging at the startup log in VBox, this is what I see:\n00:00:00.469118 Guest OS type: 'Linux26_64'\n00:00:00.475048 fHMForced=true - SMP\n00:00:00.475059 fHMForced=true - 64-bit guest\n00:00:00.475068 fHMForced=true - Darwin host\n00:00:00.491936 Shared clipboard mode: Off\n00:00:00.492701 Drag'n'drop mode: Off\nComparing this to what others provide:\n00:00:00.053887 fHMForced=true - 64-bit guest\n00:00:00.053896 fHMForced=true - Darwin host\n00:00:00.066006 File system of '/Users/mark/.boot2docker/boot2docker.iso' (DVD) is hfs\n00:00:00.070198 File system of '/Users/mark/VirtualBox VMs/boot2docker-vm/Snapshots' (snapshots) is unknown\n00:00:00.070211 File system of '/Users/mark/.boot2docker/boot2docker-vm.vmdk' is hfs\n00:00:00.087226 Shared clipboard mode: Off\n00:00:00.088467 Drag'n'drop mode: Off\nNeedless to say, the VM won't start because it has no device to boot from.\n00:00:00.660557 Guest Log: Could not read from the boot medium! System halted.\nThe ISO image is in the ~/.boot2docker directory as expected.\nThis is the response to the \"init\" request after mopping up any old JVM instances:\n$ boot2docker -v init\nBoot2Docker-cli version: v1.4.1\nGit commit: 43241cb\n2015/01/06 11:19:43 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:43 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:44 executing: VBoxManage list vms\n2015/01/06 11:19:44 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 53a7271d-7e07-420d-abbc-a1fbed7e1319\nSettings file: '/Users/ksmith/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2015/01/06 11:19:44 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:44 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/01/06 11:19:44 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/ksmith/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2015/01/06 11:19:44 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/01/06 11:19:44 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2015/01/06 11:19:44 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/01/06 11:19:44 executing: VBoxManage list hostonlyifs\n2015/01/06 11:19:44 executing: VBoxManage list dhcpservers\n2015/01/06 11:19:44 executing: VBoxManage hostonlyif create\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n2015/01/06 11:19:44 executing: VBoxManage hostonlyif ipconfig dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp --ip 192.168.59.3 --netmask 255.255.255.0\nVBoxManage: error: The host network interface with the given name could not be found\nVBoxManage: error: Details: code NS_ERROR_INVALID_ARG (0x80070057), component Host, interface IHost, callee nsISupports\nVBoxManage: error: Context: \"FindHostNetworkInterfaceByName(name.raw(), hif.asOutParam())\" at line 218 of file VBoxManageHostonly.cpp\nVBoxManage: error: Could not find interface 'dyld: DYLD_ environment variables being ignored because main executable (/Applications/VirtualBox.app/Contents/MacOS/VBoxNetAdp'\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 2\n. ",
    "y2krelic": "Same issue. Any workaround?  This is a very unpleasant experience, as I've just spent three hours trying everything imaginable...\nOSX: 10.8.2 boot2docker : 1.4.1 \n. ",
    "dontrebootme": "I believe I'm having the same issue with 1.4.1\n. ",
    "nicolasdao": "I've had the exact same issue which I fixed by uninstalling everything:\nboot2docker delete -v\nThen running:\nunset DYLD_LIBRARY_PATH\nunset LD_LIBRARY_PATH\nTHEN executing the init command with sudo:\nsudo boot2docker init -v\n. ",
    "rdpanek": "Continuation.\nI removed certificates and vm from virtualbox boot2docker delete\nI started again boot2docker init\nand next\n```\nboot2docker up -v\nBoot2Docker-cli version: v1.3.2\nGit commit: e41a9ae\n2014/12/16 08:53:22 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2014/12/16 08:53:22 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2014/12/16 08:53:22 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2014/12/16 08:53:22 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\n2014/12/16 08:53:22 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2014/12/16 08:53:23 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2014/12/16 08:53:23 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)2014/12/16 08:53:46 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 08:00:27:eb:11:c0 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.104/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:feeb:11c0/64 scope link tentative\n       valid_lft forever preferred_lft forever\nEND SSH\nVM Host-only IP address: 192.168.59.104\nWaiting for Docker daemon to start...\no2014/12/16 08:53:46 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:47 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:47 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:48 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:49 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:49 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:50 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:51 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:51 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:52 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:53 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:53 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:54 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:55 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:55 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:56 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:57 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2014/12/16 08:53:57 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nSSH returned: tcp://0.0.0.0:2376\nEND SSH\n2014/12/16 08:53:57 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 08:00:27:eb:11:c0 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.104/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:feeb:11c0/64 scope link\n       valid_lft forever preferred_lft forever\nEND SSH\nStarted.\n2014/12/16 08:53:57 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/rdpanek/.ssh/id_boot2docker docker@localhost tar c /home/docker/.docker/*.pem\ntar: Removing leading `/' from member names\nWriting /Users/rdpanek/.boot2docker/certs/boot2docker-vm/ca.pem\nWarning: error copying certificates: open /Users/rdpanek/.boot2docker/certs/boot2docker-vm/ca.pem: permission denied\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.104:2376\n    unset DOCKER_CERT_PATH\n    unset DOCKER_TLS_VERIFY\n```\nboot2docker status\nruning http://d.pr/i/13d5J\n. ",
    "debasishg": "also facing the same error .. any fix ?\n. also facing the same error .. any fix ?\n. Looks like http://stackoverflow.com/a/28170951 worked .. \n. Looks like http://stackoverflow.com/a/28170951 worked .. \n. ",
    "mhgbrown": "The above worked for me without the manual re-adding of the \"Host Only Networks\". Looks like boot2docker init handles that.\n. ",
    "artifex404": "+1\n. +1\n. ",
    "pcj": "I have run into this issue without sudo on osx.  $(boot2docker shellinit) seems to fox the issue.  \n(If only my docker push ... commands would succeed.  Makes the docker.com private repos unusable).\n. ",
    "hajhatten": "Getting the same error when running boot2docker from the applications folder for the first time.\n. ",
    "markseddon": "Right that didn't work either so I deleted everything by using the uninstall script found here then removed the app from /Applications. \nI then reinstalled using the latest package and everything is now working OK.\nThanks for your help though, much appreciated!\n. ",
    "mwlind": "Hi All\nI hit same issue as @markseddon did with same 10.10.2\nAfter running \"$ boot2docker shellinit\", DOCKER_*  env variables took no effect.\n\nMBA:~ mwlind$ env |grep DOCKER\nMBA:~ mwlind$\nSo manually export it as below, it's fixed in my env.\n\nMBA:~ mwlind$ export DOCKER_HOST=tcp://192.168.59.103:2376\nMBA:~ mwlind$ export DOCKER_CERT_PATH=/Users/mwlind/.boot2docker/certs/boot2docker-vm\nMBA:~ mwlind$ export DOCKER_TLS_VERIFY=1\nMBA:~ mwlind$ env |grep DOCKER\nDOCKER_HOST=tcp://192.168.59.103:2376\nDOCKER_TLS_VERIFY=1\nDOCKER_CERT_PATH=/Users/mwlind/.boot2docker/certs/boot2docker-vm\n\nMBA:~ mwlind$ docker version\nClient version: 1.5.0\nClient API version: 1.17\nGo version (client): go1.4.1\nGit commit (client): a8a31ef\nOS/Arch (client): darwin/amd64\nServer version: 1.5.0\nServer API version: 1.17\nGo version (server): go1.4.1\nGit commit (server): a8a31ef\n. ",
    "ericandrewlewis": "Should the responsibility of setting environment-variables be on the user? \nCan boot2docker handle this in a way that doesn't expose docker users to a config layer that they may not need to know about?\n. ",
    "rwatts3": "I agree, this is something that needs to be handled by boot2docker. It makes no sense that you run commands, and there is no documentation on these environment variables. \nIt is also pointless to have to set export on each item every time I start boot2docker\n. ",
    "garry-cairns": "I'm also seeing this on Win7SP1. Two things that spring to mind about my setup are that I'm behind a corporate proxy and I don't know whether hardware virtualization is enabled because I can't access lots of things about the machine. Might either of these be causing the problem?\n. ",
    "honi": "I've managed to create the boot2docker-vm with the desired vbox shared folder using --vbox-share flag like this (fresh install):\nboot2docker init\nboot2docker --vbox-share=\"/Volumes/Data/Code=Code\" up\nI figured I always need to repeat the --vbox-share when running boot2docker up, otherwise it will create the default /Users=Users share (though it will keep the other one).\nAlso, every time I run boot2docker up, I have to run (inside the boot2docker-vm):\nsudo mkdir -p /Volumes/Data/Code && sudo mount -t vboxsf Code /Volumes/Data/Code\nI can make an alias for boot2docker up. But not sure how to mount the volume automatically inside the container. \nI don't have any /var/lib/boot2docker/bootlocal.sh file, I tried creating one with those commands, but upon vm restart it doesn't seem to get executed.\nOS X: 10.10.2\nDocker version 1.5.0, build a8a31ef\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\nAny ideas?\n. Current work around:\nalias b2dup=\"boot2docker --vbox-share='/Volumes/Data/Code=Code' up && \\\n             boot2docker ssh 'sudo mkdir -p /Volumes/Data/Code && sudo mount -t vboxsf Code /Volumes/Data/Code'\"\n. ",
    "dnozay": "I ended up here because I was following https://docs.docker.com/installation/mac/ and somehow I was not able to share the directory for the nginx example (I used /tmp instead of my home dir...)\nWorkaround # 2:\nShare the folder:\nVBoxManage sharedfolder add boot2docker-vm --name /tmp/Work --hostpath /CODE --automount\nBased on info found un bootscript.sh, you know that the VM will run a bootlocal.sh script that is in the /var/lib/boot2docker folder, where data persists.\nAdd a file /var/lib/boot2docker/bootlocal.sh\n```\n!/bin/sh\nbash is not available!\nmkdir -p /CODE\nmount -t vboxsf /tmp/Work /CODE\n```\nThen chmod +x /var/lib/boot2docker/bootlocal.sh and reboot your boot2docker-vm vm.\n. Note: based on this SO answer somebody made a gist for the first workaround.\n. ",
    "pstinghua": "+1\n. ",
    "zhkucyb": "\u4f60\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff0c\u628ashell\u4e2d\u7684http\u8bf7\u6c42\u8f6c\u53d1\u5230shadowsocks\u76d1\u542c\u7684\u7aef\u53e3\u3002\nhttp://1992s.com/blog/share-shadowsocks-over-lan-on-mac-os-x.html\n. \u4f60\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u8fd9\u7bc7\u6587\u7ae0\uff0c\u628ashell\u4e2d\u7684http\u8bf7\u6c42\u8f6c\u53d1\u5230shadowsocks\u76d1\u542c\u7684\u7aef\u53e3\u3002\nhttp://1992s.com/blog/share-shadowsocks-over-lan-on-mac-os-x.html\n. ",
    "colinrymer": "http://keepachangelog.com/ does a good job of explaining the rationale behind this request.\n. ",
    "dyatlov": "to add, I tried to use it as described here: http://viget.com/extend/how-to-use-docker-on-os-x-the-missing-guide\nbut it seems that behavior changed since then?\n. rails was listening to localhost, solved this by adding -b 0.0.0.0 to the start command: bundle exec rails s -b 0.0.0.0\nnow all is working. Sorry for false alarm\n. ",
    "williscool": "@dyatlov thanks so much. I feel silly for not thinking of that earlier :/\n. ",
    "sunstudy": "@SvenDowideit that b2d gui quit  with simple message such as:\nerror in run: Failed to get machine \"boot2docker-vm\": fork/exec C:\\Program Files\n\\Oracle\\VirtualBox\\VBoxManage.exe: Access is denied. i have tried this gui weeks ago, it is not a terrible tool for trouble shooting:(\n. @SvenDowideit \n \ndo you mean this GUI? i can open Vbox, but there are two path not found error there, i delete them, then run boot2docker init and status, all failed, what can i do there, can i create docker mirror manually, and how to do this manually? using this iso file? \n. seems i failed to install docker manually \n\n. @OleksandrKucherenko is that boot2docker.iso a livecd? can i boot it without installation?\nwhere do you find the error code 0x80004005, i haven't seen such code :(\n. @SvenDowideit i think that iso file is ok, i can open and extract all the files in it using winrar.\n\n. @SvenDowideit i think that iso file is ok, i can open and extract all the files in it using winrar.\n\n. upgrade and download all failed:(\nwith the same docker installation msi, i can run docker on one win7, but don't know why it works so terrible on this win7 machine, and there is nearly no way to do trouble shooting:(\nE:>boot2docker upgrade\nerror in run: Error upgrading boot2docker binary: Error attempting to get the la\ntest boot2docker-cli release: Get https://api.github.com/repos/boot2docker/boot2\ndocker-cli/releases: dial tcp: GetAddrInfoW: No such host is known.\nE:>boot2docker download\nerror in run: Failed to get latest release: Get https://api.github.com/repos/boo\nt2docker/boot2docker/releases: dial tcp: GetAddrInfoW: No such host is known.\n. upgrade and download all failed:(\nwith the same docker installation msi, i can run docker on one win7, but don't know why it works so terrible on this win7 machine, and there is nearly no way to do trouble shooting:(\nE:>boot2docker upgrade\nerror in run: Error upgrading boot2docker binary: Error attempting to get the la\ntest boot2docker-cli release: Get https://api.github.com/repos/boot2docker/boot2\ndocker-cli/releases: dial tcp: GetAddrInfoW: No such host is known.\nE:>boot2docker download\nerror in run: Failed to get latest release: Get https://api.github.com/repos/boo\nt2docker/boot2docker/releases: dial tcp: GetAddrInfoW: No such host is known.\n. the vbox works well on my win7 host, now i am installing centos on vbox, it works well, but boot2docker command is errorneous, and i don't know how to find the problem. \n\n. the vbox works well on my win7 host, now i am installing centos on vbox, it works well, but boot2docker command is errorneous, and i don't know how to find the problem. \n\n. i reboot my system, then i can create my docker container now, but it maybe damaged in hours, don't know why it is damanaged... \n\n. i reboot my system, then i can create my docker container now, but it maybe damaged in hours, don't know why it is damanaged... \n\n. @SvenDowideit  i reboot my system, then i succeed in creating my docker container, but it maybe damaged in hours, don't know why it is damanaged... and after it damaged, i have to reboot my system, and create a new docker container, that is really dispointing\n\nin fact, after i run poweroff, i can never start this container again, why?\n\ndetailed error message:\nwhy i cannot access VBoxManage.exe, i run boot2docker using cmd console with the highest admin priviledge, \nE:>boot2docker up -v\nBoot2Docker-cli version: v1.4.1\nGit commit: 43241cb\n2015/01/08 19:31:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\nerror in run: Failed to get machine \"boot2docker-vm\": fork/exec C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe: Access is denied.\nwhy i  Failed to get machine \"boot2docker-vm\":\nbtw, i can run VBoxManage command, so there is no problem with the VBoxManage command\n\n. @SvenDowideit  i reboot my system, then i succeed in creating my docker container, but it maybe damaged in hours, don't know why it is damanaged... and after it damaged, i have to reboot my system, and create a new docker container, that is really dispointing\n\nin fact, after i run poweroff, i can never start this container again, why?\n\ndetailed error message:\nwhy i cannot access VBoxManage.exe, i run boot2docker using cmd console with the highest admin priviledge, \nE:>boot2docker up -v\nBoot2Docker-cli version: v1.4.1\nGit commit: 43241cb\n2015/01/08 19:31:50 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\nerror in run: Failed to get machine \"boot2docker-vm\": fork/exec C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe: Access is denied.\nwhy i  Failed to get machine \"boot2docker-vm\":\nbtw, i can run VBoxManage command, so there is no problem with the VBoxManage command\n\n. after the vm is booted from gui, i still failed to run boot2docker command..\nE:>boot2docker status\nerror in run: Failed to get machine \"boot2docker-vm\": fork/exec C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe: Access is denied.\nE:>boot2docker ssh\nerror in run: Failed to get machine \"boot2docker-vm\": fork/exec C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe: Access is denied.\n. after the vm is booted from gui, i still failed to run boot2docker command..\nE:>boot2docker status\nerror in run: Failed to get machine \"boot2docker-vm\": fork/exec C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe: Access is denied.\nE:>boot2docker ssh\nerror in run: Failed to get machine \"boot2docker-vm\": fork/exec C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe: Access is denied.\n. now it's nearly assured that there maybe some bug in boot2docker command line, this time i can boot the vm using command  VBoxMange startvm boot2docker-vm, and boot2docker commad still fails to communicate with the runing vm\n\n. now it's nearly assured that there maybe some bug in boot2docker command line, this time i can boot the vm using command  VBoxMange startvm boot2docker-vm, and boot2docker commad still fails to communicate with the runing vm\n\n. @SvenDowideit i know that link point to a file named start.sh, i failed to run it:( the error message is the same as what you seem above...\n. @SvenDowideit \ni have switch to sh cli, still failed to run start.sh, the error seems to happen at boot2docker init, and it has something to do with .ssh/ folder, \nDo the boot2docker installation install msys to the win7 system, if yes, where is the sh.exe the msi file install to my system, seems now i am using the cygwin tool i installed rather than the tools provided by bootdocker, \n\n. i  know the installer, i install docker to folder H:\\CloudTool\\Docker\\\nand the msys file for installation is in H:\\CloudTool\\Docker\\installers\\msys-git, but where msys is installed by default? i cannot find it in H:\\CloudTool\\Docker\\\n\n. ",
    "OleksandrKucherenko": "I use \"upgrade\" command line option for renewing the boot2docker.iso\nC:\\Program Files\\Boot2Docker for Windows>boot2docker.exe upgrade\nLatest release for boot2docker/boot2docker is v1.4.1\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.4.1/boot2docker.iso\n        to C:\\Users\\Oleksandr\\.boot2docker\\boot2docker.iso\nWaiting for VM and Docker daemon to start...\n.........oooo\nStarted.\nWriting C:\\Users\\Oleksandr\\.boot2docker\\certs\\boot2docker-vm\\ca.pem\nWriting C:\\Users\\Oleksandr\\.boot2docker\\certs\\boot2docker-vm\\cert.pem\nWriting C:\\Users\\Oleksandr\\.boot2docker\\certs\\boot2docker-vm\\key.pem\nDocker client does not run on Windows for now. Please use\n    \"C:\\Program Files\\Boot2Docker for Windows\\boot2docker.exe\" ssh\nto SSH into the VM instead.\nI checked ISO and inside it 'version' file -> 1.3.1 (In program files ISO was old)\nThan I try:\nboot2docker download\nC:\\Program Files\\Boot2Docker for Windows>boot2docker.exe download\nLatest release for boot2docker/boot2docker is v1.4.1\nDownloading boot2docker ISO image...\nerror in run: Failed to download ISO image: rename C:\\Users\\Oleksandr\\.boot2docker\\boot2docker.iso C:\\Users\\Oleksandr\\.boot2docker\\boot2docker.iso.bak: The process cannot access the file because it is being used by another process.\nIssue was in VirtualBox itself, I kill it and run commands again. After that all things works fine.\n. ",
    "envygeeks": "Can and will this ever be fixed or can this even be detected? We've had people ask about this problem for our Docker images on Windows for Jekyll.\n. Can and will this ever be fixed or can this even be detected? We've had people ask about this problem for our Docker images on Windows for Jekyll.\n. Well I guess it's time to just readme a note about it.  Thanks for replying :heart:\n. Well I guess it's time to just readme a note about it.  Thanks for replying :heart:\n. I can understand, if they do it for ntfs they'll have to do it for fsnotify (OS X) to ext4 and all the backwards which makes it extremely hard and annoying to do and even then there is no guarantee it'll work and not just be a pain to manage.\n. I can understand, if they do it for ntfs they'll have to do it for fsnotify (OS X) to ext4 and all the backwards which makes it extremely hard and annoying to do and even then there is no guarantee it'll work and not just be a pain to manage.\n. ",
    "cpuguy83": "@envygeeks This probably won't ever work.\n. Do you think it would be better for docker to start with --config-file=/var/lib/boot2docker/daemon.json instead?\n. ",
    "Maxim-Filimonov": "A workaround which requires some polishing but works https://github.com/leighmcculloch/docker-unison\n. ",
    "dsebastien": "@SvenDowideit are there plans or ideas to improve/automate port forwarding w/ Boot2Docker?\n. ",
    "arun-gupta": "Thanks for the clarification, confirmed that it works as expected.\n. ",
    "sweikenb": "I have the same problem on a freshly installed Mac OS X 10.10,\nafter executing the suggested commands (boot2docker stop; boot2docker -v delete ; boot2docker -v upgrade ; boot2docker -v init ; boot2docker -v up) i get this output:\nbash-3.2$ boot2docker -v up\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/02/25 17:09:23 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/02/25 17:09:24 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2015/02/25 17:09:24 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2015/02/25 17:09:24 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\n2015/02/25 17:09:24 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2015/02/25 17:09:24 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2015/02/25 17:09:24 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0) \n(...)\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)VM Host-only IP address: \nWaiting for Docker daemon to start...\no2015/02/25 17:10:34 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\no2015/02/25 17:10:34 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\n(...)\no2015/02/25 17:10:44 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\no2015/02/25 17:10:45 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 2\no2015/02/25 17:10:45 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 2\no2015/02/25 17:10:45 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 2\nStarted.\n  Trying to get Docker socket one more time\n2015/02/25 17:15:08 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1004/cmdline: No such file or directory\nError requesting socket: exit status 2\n2015/02/25 17:15:08 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost tar c /home/docker/.docker/*.pem\ntar: Removing leading /' from member names\nWriting /Users/ssc/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/ssc/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/ssc/.boot2docker/certs/boot2docker-vm/key.pem\nAuto detection of the VM's Docker socket failed.\nPlease runboot2docker -v up` to diagnose.\nAny suggestions?\n. I have the same problem on a freshly installed Mac OS X 10.10,\nafter executing the suggested commands (boot2docker stop; boot2docker -v delete ; boot2docker -v upgrade ; boot2docker -v init ; boot2docker -v up) i get this output:\nbash-3.2$ boot2docker -v up\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/02/25 17:09:23 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/02/25 17:09:24 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2015/02/25 17:09:24 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2015/02/25 17:09:24 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\n2015/02/25 17:09:24 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2015/02/25 17:09:24 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2015/02/25 17:09:24 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0) \n(...)\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)VM Host-only IP address: \nWaiting for Docker daemon to start...\no2015/02/25 17:10:34 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\no2015/02/25 17:10:34 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\n(...)\no2015/02/25 17:10:44 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 255\no2015/02/25 17:10:45 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 2\no2015/02/25 17:10:45 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 2\no2015/02/25 17:10:45 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 2\nStarted.\n  Trying to get Docker socket one more time\n2015/02/25 17:15:08 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1004/cmdline: No such file or directory\nError requesting socket: exit status 2\n2015/02/25 17:15:08 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/ssc/.ssh/id_boot2docker docker@localhost tar c /home/docker/.docker/*.pem\ntar: Removing leading /' from member names\nWriting /Users/ssc/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/ssc/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/ssc/.boot2docker/certs/boot2docker-vm/key.pem\nAuto detection of the VM's Docker socket failed.\nPlease runboot2docker -v up` to diagnose.\nAny suggestions?\n. ",
    "eaoliver": "I am having the same problem under Mac OS 10.10.2.  \nFollowing is the output of:  (please note it enters an infinite loop at the end)\nboot2docker stop; boot2docker -v delete ; boot2docker -v upgrade ; boot2docker -v init ; boot2docker -v up\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/19 15:36:21 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/19 15:36:21 executing: VBoxManage unregistervm boot2docker-vm --delete\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\ndocker is up to date (1.5.0), skipping upgrade...\nboot2docker is up to date (v1.5.0), skipping upgrade...\n2015/03/19 15:36:23 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nLatest release for boot2docker/boot2docker is v1.5.0\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.5.0/boot2docker.iso\n    to /Users/eaoliver/.boot2docker/boot2docker.iso\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/19 15:36:26 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/19 15:36:26 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/19 15:36:26 executing: VBoxManage list vms\n2015/03/19 15:36:26 executing: VBoxManage createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: ac696e36-14ff-4f05-bea2-b8095dd2a4ce\nSettings file: '/Users/eaoliver/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'\n2015/03/19 15:36:26 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/19 15:36:26 executing: VBoxManage setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/03/19 15:36:26 executing: VBoxManage modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu off --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server /Users/eaoliver/.boot2docker/boot2docker-vm.sock --boot1 dvd\n2015/03/19 15:36:26 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/19 15:36:26 executing: VBoxManage modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2015/03/19 15:36:26 executing: VBoxManage controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/03/19 15:36:26 executing: VBoxManage list hostonlyifs\n2015/03/19 15:36:26 executing: VBoxManage list dhcpservers\n2015/03/19 15:36:26 executing: VBoxManage modifyvm boot2docker-vm --nic2 hostonly --nictype2 virtio --cableconnected2 on --hostonlyadapter2 vboxnet0\n2015/03/19 15:36:26 executing: VBoxManage storagectl boot2docker-vm --name SATA --add sata --portcount 4 --hostiocache on --bootable on\n2015/03/19 15:36:26 executing: VBoxManage storageattach boot2docker-vm --storagectl SATA --port 0 --device 0 --type dvddrive --medium /Users/eaoliver/.boot2docker/boot2docker.iso\nConverting from raw image file=\"stdin\" to file=\"/Users/eaoliver/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vmdk\"...\nCreating dynamic image with size 20971520000 bytes (20000MB)...\nInitializing disk with ssh keys\nWRITING: boot2docker, please format-me0000000000000000000000000000003500000000000014423 ustar0000000000000000boot2docker, please format-me.ssh0000700000000000000000000000000000000000000007767 5ustar0000000000000000.ssh/authorized_keys0000644000000000000000000000062600000000000013140 ustar0000000000000000ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDObob/9iKKF7owjh/Z2qJNDFmP94drfHtG0HrkKT/nYDaTAdPU6vYhszfXOVVWsYxMdNICGatG3Iiu5R+Uk0iLeJ7WBiOmSbkJgRQJfyMUQ7hf0pC7YnzSttAKOq6BI2OZJ6wZG3kt9ofexqOoT73/HK3fxgr8Kbviz+3pR2nH0E1J1ar4RcIAAJ/FAwiwvkpWGf2XXJh+20vkKg8T3B2FY5sNhwvglbOExC16iNKtGGPzqwTQ1APZUGFPtzAxb6LkoEAguSjtolFwH8WOayc7D/LPhfcjvmtCNTgjYmI47Q3aGcztA27ui68AY+wzilasByKoJLatUSE0oF4jwfSv eaoliver@Voracious.local\n.ssh/authorized_keys20000644000000000000000000000062600000000000013222 ustar0000000000000000ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDObob/9iKKF7owjh/Z2qJNDFmP94drfHtG0HrkKT/nYDaTAdPU6vYhszfXOVVWsYxMdNICGatG3Iiu5R+Uk0iLeJ7WBiOmSbkJgRQJfyMUQ7hf0pC7YnzSttAKOq6BI2OZJ6wZG3kt9ofexqOoT73/HK3fxgr8Kbviz+3pR2nH0E1J1ar4RcIAAJ/FAwiwvkpWGf2XXJh+20vkKg8T3B2FY5sNhwvglbOExC16iNKtGGPzqwTQ1APZUGFPtzAxb6LkoEAguSjtolFwH8WOayc7D/LPhfcjvmtCNTgjYmI47Q3aGcztA27ui68AY+wzilasByKoJLatUSE0oF4jwfSv eaoliver@Voracious.local\n\n2015/03/19 15:36:31 executing: VBoxManage storageattach boot2docker-vm --storagectl SATA --port 1 --device 0 --type hdd --medium /Users/eaoliver/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vmdk\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n2015/03/19 15:36:31 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/03/19 15:36:31 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2015/03/19 15:36:31 executing: VBoxManage guestproperty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2015/03/19 15:36:31 executing: VBoxManage sharedfolder add boot2docker-vm --name Users --hostpath /Users --automount\n2015/03/19 15:36:31 executing: VBoxManage setextradata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/Users 1\n2015/03/19 15:36:31 executing: VBoxManage startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2015/03/19 15:36:31 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)2015/03/19 15:36:52 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 08:00:27:f5:d0:6f brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.104/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fef5:d06f/64 scope link tentative\n       valid_lft forever preferred_lft forever\nEND SSH\nVM Host-only IP address: 192.168.59.104\nWaiting for Docker daemon to start...\no2015/03/19 15:36:53 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:53 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:54 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:55 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:55 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:56 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:57 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:57 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:58 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:59 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:36:59 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:00 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:01 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:01 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:02 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:03 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:03 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:04 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:05 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:05 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:06 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:07 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/03/19 15:37:07 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 1\no2015/03/19 15:37:08 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nError requesting socket: exit status 1\no2015/03/19 15:37:09 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:09 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:10 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:11 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:11 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:12 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:13 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:14 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:14 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:15 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:16 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:16 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:17 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:18 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:18 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:19 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:20 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:20 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:21 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:22 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:22 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:23 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\no2015/03/19 15:37:24 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/eaoliver/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ngrep: /proc/1181/cmdline: No such file or directory\nError requesting socket: exit status 2\n. ",
    "kofj": "@SvenDowideit yes,just 'iocharset=utf8'.\n. @SvenDowideit yes,just 'iocharset=utf8'.\n. @tianon I have read the usage info,and tested the default iocharset.But,it didn't work,so I added it.\n. @tianon Ok,it is not necessary.Just add iocharset is well.\n. yes.you can merge it.\n. ",
    "jdiprizio": "Could we please get this change merged (iocharset)?\n. ",
    "itsdpk": "i am also getting the same error in my system. but while manually loading the GUI seems to load the docker daemon, the boot2docker client somehow gets me the error in VM. Please find the error that i am getting in virtual box. this error was not coming when i manually configured the vm mysef but that was not linked by boot2docker when i ran start.sh.\n00:00:01.076650 Guest Log: BIOS: CDROM boot failure code : 0002\n00:00:01.076841 Guest Log: BIOS: Boot from CD-ROM failed\n00:00:01.077068 Guest Log: BIOS: Boot : bseqnr=2, bootseq=0023\n00:00:01.077367 Guest Log: BIOS: CDROM boot failure code : 0002\n00:00:01.077623 Guest Log: BIOS: Boot from CD-ROM failed\n00:00:01.077866 Guest Log: BIOS: Boot : bseqnr=3, bootseq=0002\n00:00:01.078302 Guest Log: int13_harddisk: function 02, unmapped device for ELDL=80\n00:00:01.078567 Guest Log: BIOS: Boot from Hard Disk 0 failed\n00:00:01.080237 Guest Log: Could not read from the boot medium! System halted.\n. @mg-stack you can try editing your bios or check if you 'visualization' capabilities of the system is enabled. if yes check the 'bit' version u selected while created the VM, if ur system is 64 bit u need to select a 64 bit os flavour for the virtualbox too.\n. ",
    "foxx": "I had this problem today as well\n. I had this problem today as well\n. Ah wait, sorry no I commented on the wrong issue, my bad\n. Ah wait, sorry no I commented on the wrong issue, my bad\n. ",
    "klokoy": "Any news on this?  \nI have have this problem both due to npm link on server code and bower link on client code. Both creates symlinks. \n. ",
    "gabriel403": "Any news on this? Getting a very similar issue but can't track it down (don't think I have any symlink either)\nroot@f4f4da520c44:/# ll /usr/share/nginx/html/vendor/slimphp-api/slim-oauth/\nKilled\nroot@f4f4da520c44:/#\n. Any news on this? Getting a very similar issue but can't track it down (don't think I have any symlink either)\nroot@f4f4da520c44:/# ll /usr/share/nginx/html/vendor/slimphp-api/slim-oauth/\nKilled\nroot@f4f4da520c44:/#\n. ",
    "andrewgdavis": "Here are the steps that caused this issue for me, and a potential work around. (I can't explain the behavior, or how to approach debugging it.)\nnote: im still using 1.8.3 due to some kernel issue in docker v1.9.1\nmkdir ./mount\ncd mount\nln -sf ~/my-git-repo ./myproject\ndocker -D run -it --rm -v `pwd`/mount:/home/foo/mount centos:7 bash\ncd /home/foo/mount\nls -la \nlrwxr-xr-x 1 1000 1000 34 Jan 8 19:10 myproject -> /Users/dir/my-git-repo/does/not/have/link/propagated/through/vm\nok, i get it.   can't propagate the symlink.\nso exit the container and i remove the link\nrm ./myproject\nnow i try it with a full clone and name the directory \"myproject\" instead of the link, with the same name as the link that was removed\n``\ncd mount\ngit clone https://github.foo.bar.com/mine/my-git-repo myproject\ndocker -D run -it --rm -vpwd`/mount:/home/foo/mount centos:7 bash\ncd /home/foo/mount\nls -la\ncd myproject\nDEBU[0016] [hijack] End of stdout\n                                                        DEBU[0016] End of CmdRun(), Waiting for hijack to finish.\nabove command exits container\necho $?\n137\n```\nThat was unexpected-- I am not able to enter into the mounted directory that is no longer a symlink.  I thought it would have been a \"clean\" restart.\nPotential workaround:\nIf i do the same steps as above and change \"myproject\" to \"foo-project\"  I am able to \"cd foo-project\" and enter into the mounted directory.\nthis works (i think because i did not try to setup a symlink to it)\ngit clone https://github.foo.bar.com/mine/my-git-repo foo-project\nEnv Info:\nDarwin xxx 14.3.0 Darwin Kernel Version 14.3.0\ndocker-machine version 0.4.1 (e2c88d6)\nDocker version 1.8.3, build f4bf5c7\nStorage Driver: aufs\nKernel Version: 4.1.10-boot2docker\nCPUs: 5\n. did this work for other folks?  maybe i mangled something in the process (it did not work for me, but technically i used a different AUFS commit)\nwhat steps did you take to verify \"it works\"? \nand if it does work... this means that kernel version 4.1.13 is ok with an older version of AUFS.  thus AUFS should then be git bisected to find the offending commit?\n. ",
    "MatthiasEgli": "I experienced the same error as described by @andrewgdavis. My workaround was to restart docker-machine, afterwards I could access to folder without problems. It is likely related to the way the virtual machine is transparently allowing access to the mac file system.\n. I experienced the same error as described by @andrewgdavis. My workaround was to restart docker-machine, afterwards I could access to folder without problems. It is likely related to the way the virtual machine is transparently allowing access to the mac file system.\n. ",
    "cocojas": "We're seeing this exact same issue. It appears like boot2docker is quietly caching connections that are serving static files. Tracing through the go implementation in http, it appears anytime that a file is served via the net.Conn.ReadFrom() interface with an io.Reader, when that is later called with the same file object, boot2docker will spit out whatever was originally read there. This may be happening with any file objects output to a connection, I'm not sure? But it's extremely annoying.\n. ",
    "baptistedonaux": "Thank you, but boot2docker has a solution to resolve it in development environment ?\n. @SvenDowideit Your synthetic explication match with my problem.\n. ",
    "pixelbender": "Hello. Is there any update/workaround for this? Can NFS mounting solve the problem? Thanks\n. ",
    "carn1x": "Assuming this may never be resolved for boot2docker, but is docker-machine also facing the same issue?\n. Assuming this may never be resolved for boot2docker, but is docker-machine also facing the same issue?\n. ",
    "mauvm": "Thanks for the quick response! I have tried both before, but without any luck.. It doesn't seem like boot2docker forwards the USB devices automatically to the boot2docker-vm. When checking the VirtualBox configuration of the VM, under Ports > USB, \"Enable USB controller\" is disabled.\nI hadn't tried the device param with :rwm before, but that also doesn't seem to work..\nI will dig into VirtualBox USB filtering some more! Thanks!\n. Thanks! I have installed the VirtualBox extension pack, relaunched the VirtualBox daemon, rebuild the boot2docker-vm, turned on the USB and USB 2.0 (EHCI) controllers, and added the filter:\nVBoxManage usbfilter add 0 --target boot2docker-vm --name 'Android Device Filter' --product \"Android Phone\" --action hold\nFinally I have tried both -v /dev/bus/usb:/dev/bus/usb and --device=/dev/bus/usb:/dev/bus/usb:rwm. The first one mounts OK, and makes /dev/bus/usb/{001,002}/001 available to the container. The latter gives an error:\nFATA[0000] Error response from daemon: Cannot start container 4cfd924d09e399e915345389405d051fe243c00108620d810f66d3957fd0c105: error gathering device information while adding custom device \"/dev/bus/usb\": not a device node\nWhen the boot2docker-vm is running VBoxManage list usbhost does not show my Android phone, while if the VM is turned off, it does get listed. Could this be some sort of USB conflict between the host and VM?\n. @jonbjo Nope, but haven't tried the suggestion from @SvenDowideit though.\n. @jonbjo Nope, but haven't tried the suggestion from @SvenDowideit though.\n. @jonbjo Thanks. Will definitely check it out!\n. @jonbjo Thanks. Will definitely check it out!\n. @suchja No, both of them didn't seem to work. Are you also on Mac OS X? I don't think the problem lies in the Boot2Docker > Docker container part. It's purely the Mac OS X > Boot2Docker device mounting part.\n. @suchja Sorry, but no. Why not keep using the -v? Because hey, at the end of the day it simply works!\n. ",
    "jonbjo": "Did you manage to solve this? I am also trying to the same thing, plug my Android device into my Macbook and forward the device to my Docker container so that I can launch the app from Cordova on my Android device using cordova run android. \n. @mauvm I managed to get it to work by basically following the steps above. The only difference is that I added the usbfilter in Virtualbox's GUI. It listed the connected devices and automatically created a filter for me that works. The settings in the filter automatically created seems to be a lot more specific than what you have in your VBoxManage string. Don't know if that makes a difference, but maybe. I also had to connect the device after starting Boot2Docker to be able to authorise the device. Now when I run \"cordova run\" in my Docker container it builds and deploys to my Nexus 5 connected to my MacBook. I have a sample Dockerfile at https://github.com/wisobi/leanbean/tree/master/leanbean-docker if that helps.\n. @mauvm I managed to get it to work by basically following the steps above. The only difference is that I added the usbfilter in Virtualbox's GUI. It listed the connected devices and automatically created a filter for me that works. The settings in the filter automatically created seems to be a lot more specific than what you have in your VBoxManage string. Don't know if that makes a difference, but maybe. I also had to connect the device after starting Boot2Docker to be able to authorise the device. Now when I run \"cordova run\" in my Docker container it builds and deploys to my Nexus 5 connected to my MacBook. I have a sample Dockerfile at https://github.com/wisobi/leanbean/tree/master/leanbean-docker if that helps.\n. I didn't get --device to work either. I think I read somewhere an explanation to why one should use privileged for USB devices, but if I did, I can't find back to that explanation. But at least for me it works with Mac OS X, Boot2Docker and --privileged.\n. I didn't get --device to work either. I think I read somewhere an explanation to why one should use privileged for USB devices, but if I did, I can't find back to that explanation. But at least for me it works with Mac OS X, Boot2Docker and --privileged.\n. Have a look at #707 and see if that helps.\n. Have a look at #707 and see if that helps.\n. ",
    "felixbanguera": "If this issue is still happening to someone nowadays on Mac OS X, I fixed it installing the extension package for Virtual box, and then going to >>settings>>ports>>usb and enabling the connection. After that it worked like a charm.\n. ",
    "kenyee": "FYI, this doesn't work if you use Docker 1.12 any more because it uses the OSX Hypervisor instead of Virtualbox :-(\n. @suchja : nope....AFAIK, the hypervisor doesn't support USB port access.  I'm going back to using an older version of docker so I can run it inside virtual box on the Mac.  What's annoying is it doesn't work on a Windows machine either....HAXM is incompatible w/ Hyper-V and Virtualbox, so again, you're stuck w/ the old version of Docker 1.11 that runs inside Virtualbox.\n. ",
    "suchja": "@kenyee have you found any other way to get it working?\n. Thanks for clarification!\n\nAm 31.07.2016 um 23:27 schrieb Ken Yee notifications@github.com:\n@suchja : nope....AFAIK, the hypervisor doesn't support USB port access. I'm going back to using an older version of docker so I can run it inside virtual box on the Mac. What's annoying is it doesn't work on a Windows machine either....HAXM is incompatible w/ Hyper-V and Virtualbox, so again, you're stuck w/ the old version of Docker 1.11 that runs inside Virtualbox.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "Manouchehri": "In VMware Workstation/Fusion, this can be done by adjusting adding usb.autoConnect.device0 = \"0x1234:0x1234\" to the VMX.. In VMware Workstation/Fusion, this can be done by adjusting adding usb.autoConnect.device0 = \"0x1234:0x1234\" to the VMX.. EFI booting doesn't have to be the default, but it would be nice to have as an option.. EFI booting doesn't have to be the default, but it would be nice to have as an option.. ",
    "doron2402": "I think its also related when running docker\nFATA[0000] Couldn't read ca cert /Users/dsegal/.boot2docker/certs/boot2docker-vm/ca.pem: open /Users/dsegal/.boot2docker/certs/boot2docker-vm/ca.pem: no such file or directory  \nseems like I'm missing the ssh keys\n. one last thing, when running boot2docker ssh\n-> \nerror in run: exit status 255\n. @RomanSaveljev yeah I've try to reinstall it after removing the vm but still getting same issue\n. for some reason boot2docker is not creating this directory on my machine \n.boot2docker/certs/...\n. Fix:\n1. locate boot2docker - remove every file related to it.\n2. restart mac.\n3. re-install from the site (don't use the brew version, not sure if its related but its works for me and I'm not going to investigate it further )\n4. boot2docker init, ...\nworks!\n. ",
    "oloo": "@alej0varas i think you meant\n$ boot2docker delete and not $boot2docker remove\notherwise it worked perfectly for me\n. ",
    "thedewi": "I'm seeing this during most boots. Clean install of boot2docker v1.5.0 in Windows 7 with VirtualBox 4.3.22:\ntime=\"2015-03-04T06:29:14Z\" level=\"debug\" msg=\"docker group found. gid: 100\"\nno such device\ntime=\"2015-03-04T06:29:15Z\" level=\"info\" msg=\"-job init_networkdriver() = ERR (1)\"\ntime=\"2015-03-04T06:29:15Z\" level=\"fatal\" msg=\"no such device\"\n745 appears to be a duplicate of this issue.\n@SvenDowideit, sometimes the ssh probe finds the pid & socket and returns success, only for the docker process to terminate moments later. ssh itself is working solidly. I've tried destroying and re-initing the virtualbox machine, but the issue still happens frequently. I can start the daemon manually with:\nboot2docker ssh \"sudo /etc/init.d/docker start\"\n. I'm seeing the same thing as iammichiel and kyleboyle during most boots. Clean install of boot2docker v1.5.0 in Windows 7 with VirtualBox 4.3.22:\ntime=\"2015-03-04T06:29:14Z\" level=\"debug\" msg=\"docker group found. gid: 100\"\nno such device\ntime=\"2015-03-04T06:29:15Z\" level=\"info\" msg=\"-job init_networkdriver() = ERR (1)\"\ntime=\"2015-03-04T06:29:15Z\" level=\"fatal\" msg=\"no such device\"\n. ",
    "geeth4sg": "Hi which port need to allow for aws instance.. docker started without any error (/var/log/docker)..\nThere is no response after run the below command\nroot@system:~# docker run -i -t vbatts/slackware bash\n/var/lib/docker/devicemapper/ - has been created\nroot@system:~# tail -f /var/log/docker.log time=\"2015-05-09T05:17:31Z\" level=\"info\" msg=\"+job serveapi(unix:///var/run/docker.sock)\" time=\"2015-05-09T05:17:31Z\" level=\"info\" msg=\"Listening for HTTP on unix (/var/run/docker.sock)\"\n. ",
    "skozin": "Thanks for fixing this! =)\n. ",
    "roele": "looks like i hit issue #525 ...\n. ",
    "mrajcok": "+1, I'm having the same issue with boot2docker 1.5.0, git commit ccd9032, and Yosemite\n. +1, I'm having the same issue with boot2docker 1.5.0, git commit ccd9032, and Yosemite\n. ",
    "kameshsampath": "yes I did boot2docker upgrade and then tried docker -v which is still showing 1.3.2, i can understand that doing reinstall will solve the issue but then ideally upgrade should :)\n. ",
    "peterjenkins": "I'm also interested in understanding.\n. I'd like to clarify my question. I can think of two main reasons you might not want to use something in production:\n1) Maturity\nAll projects are brand new code at some point, but eventually they become battle tested, if they are popular. So an immature project may be not suitable for production immediately, but can eventually become suitable.\n2) Implicit limitations because of decisions that were made to optimize non-production use of the project\nIn a case like this, it's helpful to understand what choices may have been made that would legitimately make the project unsuitable for production, regardless of it's maturity. For example, valgrind is a mature product, but it's fundamentally meant to be a development tool and the performance characteristics make it completely unsuitable for use when you need to depend on fast and stable execution.\nI understand that (1) applies to boot2docker. If that's the only problem, hopefully that could be fixed by time and effort applied to the project. However, if people are dissuaded from using the project for non-development purposes, it seems like the process of battle-testing it will take much longer.\nFor (2), if there are specific decisions that were made that are good for development with boot2docker but would cause problems in strenuous real-world use, it would be fantastic if someone could share what those decisions or trade-offs might be.\n. ",
    "dubrowgn": "+1\nA very minimal linux distro seems like the perfect thing to use in production: fewer resources wasted, and less attack surface.\n. ",
    "frankgerhardt": "Two years later the strong warning is still there.\nI'm using docker-machine and I find it quite strange that it uses boot2docker even if it should not be used in production.. Two years later the strong warning is still there.\nI'm using docker-machine and I find it quite strange that it uses boot2docker even if it should not be used in production.. ",
    "bezerker": "I discovered the issue is that vboxsf shows as having an inode limit of\n1000 per fs mount. (aka /Users).\nWhile there are no actual inode limitations, tools that check the fs before\nthey write into them will error. (in this case: rpm). The rpm contained\n1200 files and thus it thought it couldn't write it. So ultimately I guess\nthis is an issue with vbox not boot2docker explicitly.\n. In my use case, simply grabbing the boot2docker cli was all that was necessary as long as virtualbox is installed.  \nThe only thing that didn't work as it did on mac was the volumes. Volumes were not passed to my host but only to the virtualbox guest.\n. ",
    "okoala": "VirtualBox: 4.3.20 r96997\nWindows:  Windows 7 SP1\n. VirtualBox: 4.3.20 r96997\nWindows:  Windows 7 SP1\n. ",
    "aravindgan": "hi Nathan, \ni am facing the similar issue. So what is the fix? Could you please help me with that?\nRegards,\nAravind\n. it does not work,\nsudo boot2docker upgrade\nPassword:\ndocker is up to date (1.5.0), skipping upgrade...\nboot2docker is up to date (v1.5.0), skipping upgrade...\nLatest release for boot2docker/boot2docker is v1.5.0\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.5.0/boot2docker.iso\n    to /Users/aravind/.boot2docker/boot2docker.iso\nWaiting for VM and Docker daemon to start...\n.o\nStarted.\nWriting /Users/aravind/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/aravind/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/aravind/.boot2docker/certs/boot2docker-vm/key.pem\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.103:2376\n    export DOCKER_CERT_PATH=/Users/aravind/.boot2docker/certs/boot2docker-vm\n    export DOCKER_TLS_VERIFY=1\nbash-3.2$ docker version\nClient version: 1.5.0\nClient API version: 1.17\nGo version (client): go1.4.1\nGit commit (client): a8a31ef\nOS/Arch (client): darwin/amd64\nFATA[0000] Error response from daemon: client and server don't have same version (client : 1.17, server: 1.16) \n. how can i manually downgrade to older version of client? can you help me with the steps?\n. ",
    "arulrajnet": "Download the docker windows client from here https://master.dockerproject.com/windows/amd64/docker-1.4.1-dev.exe which has api version 1.16\n. Download the docker windows client from here https://master.dockerproject.com/windows/amd64/docker-1.4.1-dev.exe which has api version 1.16\n. ",
    "jasonferrier": "I just encountered the same error.\nI had v1.4.1 installed and working. I just upgraded using the v1.5.0 release and upon running boot2docker.app, I received the error:\nFATA[0000] Error response from daemon: client and server don't have same version (client : 1.17, server: 1.16)\nRunning $ boot2docker upgrade fixed my issue\n. ",
    "orangewise": "I'm using docker-machine and had the same error, docker-machine upgrade  fixed the problem. \n. ",
    "WangWenchao": "boot2docker upgrade   to update the boot2docker images iso file\n. ",
    "zq920320": "@jayasimhan  I do as your method, and success.Thanks :)\n. ",
    "alexanderilyin": "I just had to stop VM and rerun upgrade and it works.\n. ",
    "behemphi": "I just had a problem where client version was 1.18 and server version was 1.17 \nFATA[0000] Error response from daemon: client and server don't have same version (client : 1.18, server: 1.17)\nRunning boot2docker upgrade fixed the issue.\n. ",
    "osswangxining": "If you installed docker directly on native OS instead of VM,  you need to restart the docker daemon service to remove this issue, e.g. using the following command in ubuntu: sudo service docker restart.\n. ",
    "sethkrasnianski": ":+1: Verifying that boot2docker upgrade did in fact fix it.\n. ",
    "greysAcademicCode": "This does not appear to me to be solved.\nFollowing the official installation instructions for Windows (just now) results in FATA[0000] Error response from daemon: client and server don't have same version... when trying to run the docker version command as shown in the instructions.\nThis is for the current stable version of Docker, 1.6.2.\nRunning boot2docker upgrade then restarting the boot2docker environment fixes it, but why should the installer be bringing a version that immediately needs to be upgraded?\n. ",
    "leifhanack": "Still an issue when docker is released before boot2docker is released. Currently (2015-06-18 7pm GMT) docker 1.7 is released but boot2docker is only available in 1.6.2. Doing a boot2docker upgrade will install docker 1.7 (client: 1.19) but keeps the server in version 1.18. \nIs it an alternative to restrict boot2docker upgrade to the same docker client major.minor version, so that in the above case only the latest 1.6.x release will be installed instead of 1.7?\nRegards, Leif \n. I have had the luck of upgrading in the hour right between the two releases:)\n. @thaJeztah @tianon no problem at all. thanks for all your work!\nbtw since 1.7 I have a certificate issue.\ndocker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): darwin/amd64\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/version: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\nso far I couldn't find sth related here\nthanks a lot, leif\n. when i remove my vm (boot2docker delete) and init it again it works. unfortunately i didn't backed up my vm so that i can't help fixing the problem. \n. As mentioned by @rcsa-jr you can disable TLS as a workaround. Call each docker command with flag --tlsverify=false\n. Duplicate of #938 \n. ",
    "glaucio-melo-movile": "Hi folks,\nI'm getting the following error - Error response from daemon: client and server don't have same version (client API version: 1.20, server API version: 1.19). I've read the thread above and it seems this race condition between release is a bit often - Is there any simple way to avoid that? :)\n. ",
    "jm3": "@kevinSuttle you are definitely not the only one \u2014\u00a0the entire process is a living nightmare. it's like we resurrected the worst of linux sysadmin circa 1999.\n. @kevinSuttle you are definitely not the only one \u2014\u00a0the entire process is a living nightmare. it's like we resurrected the worst of linux sysadmin circa 1999.\n. ",
    "grange74": "Thanks a lot, that worked. \nI'm very happy that I can now use the new features and still have all my containers and images.\nFYI, when i ran the upgrade using the new boot2docker binary i got:\nBacking up existing docker binary...\nDownloading new docker client binary...\nSuccess: downloaded https://get.docker.com/builds/Darwin/x86_64/docker-latest\nto /usr/local/bin/docker\nThe old version is backed up to ~/.boot2docker.\nboot2docker is up to date (v1.5.0), skipping upgrade...\nLatest release for boot2docker/boot2docker is v1.5.0\nDownloading boot2docker ISO image...\nSuccess: downloaded       \nhttps://github.com/boot2docker/boot2docker/releases/download/v1.5.0/boot2docker.iso\nto /Users/nic/.boot2docker/boot2docker.iso\nWaiting for VM and Docker daemon to start...\n..........ooo\nStarted.\n. Thanks a lot, that worked. \nI'm very happy that I can now use the new features and still have all my containers and images.\nFYI, when i ran the upgrade using the new boot2docker binary i got:\nBacking up existing docker binary...\nDownloading new docker client binary...\nSuccess: downloaded https://get.docker.com/builds/Darwin/x86_64/docker-latest\nto /usr/local/bin/docker\nThe old version is backed up to ~/.boot2docker.\nboot2docker is up to date (v1.5.0), skipping upgrade...\nLatest release for boot2docker/boot2docker is v1.5.0\nDownloading boot2docker ISO image...\nSuccess: downloaded       \nhttps://github.com/boot2docker/boot2docker/releases/download/v1.5.0/boot2docker.iso\nto /Users/nic/.boot2docker/boot2docker.iso\nWaiting for VM and Docker daemon to start...\n..........ooo\nStarted.\n. ",
    "moxiegirl": "Yep, I can't repro this here.  I forgot to reboot my mac when I brought home --- I have some vague memory of this causing network funkiness...so makes sense.\n. ",
    "lexicalunit": "Yep, that was it! :)\n. ",
    "iammichiel": "Confirmed on a clean 1.5.0 install on Mac. Ssh'd into the machine and starting it manually.\n. Actually, while digging into the log files, this appears to be the cause of the crash as the daemon crashes just after this line.\ntime=\"2015-02-18T20:54:14Z\" level=\"debug\" msg=\"Registering POST, /images/load\"\nno such device\ntime=\"2015-02-18T20:54:14Z\" level=\"info\" msg=\"-job init_networkdriver() = ERR (1)\"\ntime=\"2015-02-18T20:54:14Z\" level=\"fatal\" msg=\"no such device\"\nGot no clue what it means but it seems to be network related.\n. ",
    "kyleboyle": "Im getting the same error\ntime=\"2015-02-25T01:27:10Z\" level=\"debug\" msg=\"Registering DELETE, /images/{name:.*}\" \ntime=\"2015-02-25T01:27:10Z\" level=\"debug\" msg=\"Registering OPTIONS, \" \nno such device\ntime=\"2015-02-25T01:27:10Z\" level=\"info\" msg=\"-job init_networkdriver() = ERR (1)\" \ntime=\"2015-02-25T01:27:10Z\" level=\"fatal\" msg=\"no such device\"\nI can ssh in and run init.d script and it starts fine.\n. Im getting the same error\ntime=\"2015-02-25T01:27:10Z\" level=\"debug\" msg=\"Registering DELETE, /images/{name:.*}\" \ntime=\"2015-02-25T01:27:10Z\" level=\"debug\" msg=\"Registering OPTIONS, \" \nno such device\ntime=\"2015-02-25T01:27:10Z\" level=\"info\" msg=\"-job init_networkdriver() = ERR (1)\" \ntime=\"2015-02-25T01:27:10Z\" level=\"fatal\" msg=\"no such device\"\nI can ssh in and run init.d script and it starts fine.\n. ",
    "tyrbo": "I've seen the same thing. Very unpredictable. Doesn't always occur during boot.\n. I've seen the same thing. Very unpredictable. Doesn't always occur during boot.\n. ",
    "chelin": "Same here on OS X 10.10.3 with VBox 4.3.24.\n. Same here on OS X 10.10.3 with VBox 4.3.24.\n. This worked for me \nboot2docker ssh \"sudo /etc/init.d/docker start\"\n. ",
    "albertein": "Same with OSX 10.10 and Vbox 4.3.20.\n. ",
    "jedi4ever": "Same happening 10.10.2 and Vbox 4.3.26 .\nI've logged in manually over ssh:\n- saw no docker daemon running\n- saw the same fatal network error in the docker.log\n- after a couple of minutes waiting the daemon did come up fine\nso it might be a timing issue at startup where the network is not yet fully there and docker is started?\n. ",
    "deepflame": "@chelin thanks a ton, this worked!\n. ",
    "radu-matei": "Hi, @ahmetalpbalkan !\nCan you please provide some information on how you got a Boot2Docker VM in Azure?\nThanks!. Hi, @ahmetalpbalkan !\nCan you please provide some information on how you got a Boot2Docker VM in Azure?\nThanks!. @ahmetalpbalkan \nI actually managed to deploy a Boot2Docker VM in Azure after creating a VHD as described here and here.\nAs far as I can see, everything works properly, I can SSH into the machine and Docker works fine, but in the portal it shows that the deployment failed due to some timeout.\nAssumption ahead: Since the waagent is not present in the Boot2Docker image, I believe it cannot properly communicate with Azure.\nSince waagent has a rather long list of dependencies (Python 2.6+, OpenSSL 1.0+, OpenSSH5.3+, Filesystem utilities: sfdisk, fdisk, mkfs, parted, Password tools: chpasswd, sudo, Text processing tools: sed, grep, Network tools: ip-route), do you see it possible to install it for Tiny Core Linux?\nThanks,\nRadu. @ahmetalpbalkan \nI actually managed to deploy a Boot2Docker VM in Azure after creating a VHD as described here and here.\nAs far as I can see, everything works properly, I can SSH into the machine and Docker works fine, but in the portal it shows that the deployment failed due to some timeout.\nAssumption ahead: Since the waagent is not present in the Boot2Docker image, I believe it cannot properly communicate with Azure.\nSince waagent has a rather long list of dependencies (Python 2.6+, OpenSSL 1.0+, OpenSSH5.3+, Filesystem utilities: sfdisk, fdisk, mkfs, parted, Password tools: chpasswd, sudo, Text processing tools: sed, grep, Network tools: ip-route), do you see it possible to install it for Tiny Core Linux?\nThanks,\nRadu. ",
    "matthughes": "I like what you added, but think we could have more docs here. \n1) I get that bootlocal.sh/bootsync.sh live in /var/lib/boot2docker/ but how do I get the files there?  Is the only way to ssh and manually edit them?  I'd love to put those files in ~/.boot2docker on my host and have them auto-sync when I init boot2docker.\n2) Still confused about when each of these scripts run.  Does bootlocal.sh run before or after bootsync.sh? \n. This is with boot2docker 1.6.1, docker client/server 1.6.0\n```\n\u203a docker login -u mhughes -p supersecret https://privateregistry:5000\nWARNING: login credentials saved in /Users/mhughes/.dockercfg.\nLogin Succeeded\n// When attempting a pull, I'm prompted for login\n\u203a docker pull privateregistry:5000/corp/elk:1.0.0\nPulling repository privateregistry:5000/corp/elk\n// Try logging in via boot2docker ssh work\n\u203a boot2docker ssh docker login -u mhughes -p supersecret https://privateregistry:5000\nWARNING: login credentials saved in /home/docker/.dockercfg.\nLogin Succeeded\n// Pulling from boot2docker ssh works fine\n\u203a boot2docker ssh docker pull privateregistry:5000/corp/elk:1.0.0\nPulling repository privateregistry:5000/corp/elk\nf8cbc24dc6d2: Pulling image (1.0.0) from privateregistry:5000/corp/elk\nf8cbc24dc6d2: Pulling image (1.0.0) from privateregistry:5000/corp/elk, endpoint: https://privateregistry:5000/v1/\nf8cbc24dc6d2: Pulling dependent layers\n511136ea3c5a: Download complete\n```\n. After blowing away boot2docker and re'initing, I can't seem to reproduce anymore.\n. ",
    "romant": "+1\n. ",
    "afressancourt": "Hello Fabio,\nDo you have the Dockerfile somewhere that I could build upon in parallel of the pullrequest process? Thanks a lot, and congratulations, I am struggling with shared folder support and acpid since the beginning of the week !\n. My own pull request \nhttps://github.com/boot2docker/boot2docker/pull/748\n. I am struggling with acpid, with no success for now. Beyond that, the vbossf part is not functional, for a reason I ignore. \n. Hello,\nOn the TCL side, I have contacted the community and they compiled missing extensions in order that acpid can work properly. I will synchronize with @dduportal on Friday to put the PR in sync and work on VBox compilation.\n. Sorry for the lack of progress, I am fine if we can make it a 1.7 thing\n. LGTM!\nThanks for everything! Believe it or not, it is the first time I push something to a open source project, and I have been excited to follow the effort made on this!\n. I didn't find out yet. I will look at this with @dduportal following his previous comment\n. It turns out that if we don't do this, the path that can be reached by ssh doesn't contain /usr/local/sbin for instance, thus the ip show command can't be found by boot2docker-cli, and boot2docker up fails to start the machine.\n. alternatively, we can change the boot2docker-cli tool to use the full path to the ip binary.\n. I have changed libc6-i386 for libc6 to be able to compile for a 64 bits system. I was wondering if using libc6-amd64 would be better in that regard. This is the meaning of the comment. Note that it might be a plain stupid idea, and using libc6 is perfectly fine.\n. OK with it\n. OK with it\n. Ooops, I will correct that\n. Thanks to @dduportal, support added for Docker 1.5.0\n. Thanks to @dduportal, preparation for future work on using openVSwitch to control container networking.\n. ",
    "dreampuf": "I'm exciting to see this PR get merge for shared folder feature.\nThank you for great job !\n. ",
    "weikinhuang": "Has there been any updates on this?\n. ",
    "cmluciano": "Are there any docs for using this within boot2docker? I tried changing my driver using boot2docker config to no avail.\n. ",
    "xenoterracide": "is there any reason that file couldn't be picked up from an external location? so that it is easily distributed with repository source code and doesn't require telling developers a lot of  manual  work\n. ",
    "vamsiampolu": "It says FATAL could not read from the boot medium!System halted\n. I have upgraded boot2docker to 1.5.0 using \n```\n    boot2docker download\n    boot2docker upgrade\n$ boot2docker version\nBoot2Docker-cli version: v1.5.0\nGit commit: ccd9032\n\n```\nThen I tried the ssh command:\nboot2docker ssh -v\n       OpenSSH_6.6.1, OpenSSL 1.0.1i 6 Aug 2014\n       debug1: Connecting to localhost [127.0.0.1] port 2022.\n       debug1: Connection established.\n       debug1: identity file c:\\\\Users\\\\Vamsi\\\\.ssh\\\\id_boot2docker type 1\n      debug1: identity file c:\\\\Users\\\\Vamsi\\\\.ssh\\\\id_boot2docker-cert type -1\n      debug1: Enabling compatibility mode for protocol 2.0\n      debug1: Local version string SSH-2.0-OpenSSH_6.6.1\n      ssh_exchange_identification: read: Connection reset by peer\n      error in run: exit status 255\n. ",
    "Globegitter": "Running into this issue again and again - is there any workaround for this?\n. ",
    "AntonioMeireles": "thnxs for your reply. i wonder if it wouldn't be possible to tag all future registry builds with the matching git(hub) commitId ? that would be enough for  this case afaict. \n. thnxs for your reply. i wonder if it wouldn't be possible to tag all future registry builds with the matching git(hub) commitId ? that would be enough for  this case afaict. \n. humm... couldn't you create a side repo (simpler i suppose than some web service), say - boot2docker-builds- to where the automated builds machinery would 'post' for each iteration, and on (docker) build success, something along ${githubCommitId} ${dockerHubBuildId} ? just wondering.\n. humm... couldn't you create a side repo (simpler i suppose than some web service), say - boot2docker-builds- to where the automated builds machinery would 'post' for each iteration, and on (docker) build success, something along ${githubCommitId} ${dockerHubBuildId} ? just wondering.\n. @zfogg :smile: i don't care about cat's color if they still catch mice. IMHO this kind of functionality would be very, very handy as it would allow turnkey docker/git plugable/tiered architectures. \n. @zfogg :smile: i don't care about cat's color if they still catch mice. IMHO this kind of functionality would be very, very handy as it would allow turnkey docker/git plugable/tiered architectures. \n. ah, sure... so, in broader terms where would be the the proper 'channel' to lobby for this to get on the radar and implemented :smiley: ?\n. ah, sure... so, in broader terms where would be the the proper 'channel' to lobby for this to get on the radar and implemented :smiley: ?\n. @chiedojohn fwiw and as a 'workaround' you can just try to use my vagrantified boot2docker which does just that ...\n. +1\n. ",
    "zfogg": "@AntonioMeireles that functionality could be created, but not as a github repo.. I believe it would require running some sort of web-connected application server.\n. @AntonioMeireles that functionality could be created, but not as a github repo.. I believe it would require running some sort of web-connected application server.\n. @AntonioMeireles agreed! I was just pointing out that it's probably outside the scope of what the b2d team wants to build\n. @AntonioMeireles agreed! I was just pointing out that it's probably outside the scope of what the b2d team wants to build\n. hmm, good question! perhaps a docker IRC channel, or a docker mailing list? I'm sure many members of the docker community would be interested.\nIn my opinion and experience, the best way to get something built is to show initiative. Why not just start building it? Posting a working prototype in the IRC channel or the mailing list is much more likely to get interest and involvement; you'll have trouble starting the conversation with nothing other than the idea.\n. hmm, good question! perhaps a docker IRC channel, or a docker mailing list? I'm sure many members of the docker community would be interested.\nIn my opinion and experience, the best way to get something built is to show initiative. Why not just start building it? Posting a working prototype in the IRC channel or the mailing list is much more likely to get interest and involvement; you'll have trouble starting the conversation with nothing other than the idea.\n. ",
    "xavriley": "It looks to me like audio isn't handled in the boot2docker image (although I'm still researching).\nDoesn't help that the package installer is broken for the alsa package but that's a separate issue...\ndocker@boot2docker:~$ tce-load -wi alsa\nDownloading: alsa-modules-4.0.3-boot2docker.tcz\nConnecting to repo.tinycorelinux.net (89.22.99.37:80)\nwget: server returned error: HTTP/1.1 404 Not Found\nmd5sum: alsa-modules-4.0.3-boot2docker.tcz.md5.txt: No such file or directory\nError on alsa-modules-4.0.3-boot2docker.tcz\n. @RamonBoza can this be closed now?\n. @vielmetti can this be closed?\n. I think you just need to setup the port as described here: https://github.com/boot2docker/boot2docker#container-port-redirection\nSee also https://github.com/creack/docker-firefox/issues/1 but that might be out of date.\nPost back here if you get something working...\n. I don't think cron will behave the same as a normal shell session (won't source your $PATH or .rc files etc. - you can see that in the X-Cron information you posted above)\nIn this case you might be better off putting the startup command into a shell script and adding the shell script to your Login items (System Preferences > Users and Groups > Login Items). That should setup a proper env for you.\n. This looks to have been fixed recently. Are you using the latest version?\nhttps://github.com/boot2docker/boot2docker/commit/135c7842a7f3871896c8b266a1af7de51f3a041c\n. Yes Jessie's post on Docker on the desktop is awesome https://blog.jessfraz.com/post/docker-containers-on-the-desktop/ :)\nIncluding the kernel bits would be a good start I think.\nThe reason I've had to include userspace tcz packages is for two reasons.\na) The host b2d instance needs to know about /dev/snd in order to be able to pass this on to any containers. I think this means the TC has to have alsa installed (or an equivalent) to pick up the sound card.\nb) As I've tried to describe above, the tce package manager is broken for some packages in the b2d build. I tried several ways to install them on a vanilla b2d without success. Specifically, any packages (or deps) which list the kernel number or use the $KERNEL var to specify whether they should be 32 or 64 bit won't install.\nI'm happy to investigate some other approaches if anyone has suggestions.\n. ",
    "jmorganca": "This also happens on Ubuntu - will move the issue to the right repo!\n. This also happens on Ubuntu - will move the issue to the right repo!\n. Here's the open issue on Docker's repo: https://github.com/docker/docker/issues/9718\n. Here's the open issue on Docker's repo: https://github.com/docker/docker/issues/9718\n. ",
    "rhardih": "I had to ditch VirtualBox because of performance issues in any case and in the switch to VMWare/Ubuntu allowed me to mount shared folders outside, but thanks for the feedback.\n. ",
    "shawnzhu": "it requires lots of manual work to make it work since it is just different convention in rancherOS.\nfirstly, the default user is rancher not docker. so it requires manual step to get boot2docker start or docker-machine start work, where they hard code user docker in ssh commands out of their virtualbox driver.\nBooted rancherOS VM from the given ISO runs OS in memory only, so everything performed by boot2docker/docker-machine (or yourself manually) will be gone when restart although it creates a persistent device for this VM by docker-machine. So you need to persist state to device /dev/sda after mounting it.\nHowever, I need to study rancher os configuration more because it's pretty neat to configure everything via a single YAML file and rancher supports cloud-init which is in the roadmap of docker-machine.\n. it requires lots of manual work to make it work since it is just different convention in rancherOS.\nfirstly, the default user is rancher not docker. so it requires manual step to get boot2docker start or docker-machine start work, where they hard code user docker in ssh commands out of their virtualbox driver.\nBooted rancherOS VM from the given ISO runs OS in memory only, so everything performed by boot2docker/docker-machine (or yourself manually) will be gone when restart although it creates a persistent device for this VM by docker-machine. So you need to persist state to device /dev/sda after mounting it.\nHowever, I need to study rancher os configuration more because it's pretty neat to configure everything via a single YAML file and rancher supports cloud-init which is in the roadmap of docker-machine.\n. @SvenDowideit you're right if talking about docker/machine#693\n. Use --link <your-mongodb-container-name-or-id>:db_1 means it creates a NAT rule to allow visiting unexposed port on your mongodb container. And you should use url http://db_1:27017 as mongodb URL.\nIf you need your mongodb listens to localhost, start mongodb container with --net=container:<your-application-container-name-or-id> after your application container instead of --link. it means re-use the ip stack of your application container in mongodb, so that it looks like your application connects to a mongodb via localhost:27017\n. Use --link <your-mongodb-container-name-or-id>:db_1 means it creates a NAT rule to allow visiting unexposed port on your mongodb container. And you should use url http://db_1:27017 as mongodb URL.\nIf you need your mongodb listens to localhost, start mongodb container with --net=container:<your-application-container-name-or-id> after your application container instead of --link. it means re-use the ip stack of your application container in mongodb, so that it looks like your application connects to a mongodb via localhost:27017\n. ",
    "sunshineo": "Basically everything try to access localhost fails\nHere is me try to run the test\nRunning \"karma:unit\" (karma) task\nINFO [karma]: Karma v0.12.25 server started at http://localhost:9876/\nINFO [launcher]: Starting browser PhantomJS\nERROR [launcher]: Cannot start PhantomJS\nINFO [launcher]: Trying to start PhantomJS again (1/2).\nERROR [launcher]: Cannot start PhantomJS\nINFO [launcher]: Trying to start PhantomJS again (2/2).\nERROR [launcher]: Cannot start PhantomJS\nERROR [launcher]: PhantomJS failed 2 times (cannot start). Giving up.\nWarning: Task \"karma:unit\" failed. Used --force, continuing.\nDone, but with warnings.\n. Basically everything try to access localhost fails\nHere is me try to run the test\nRunning \"karma:unit\" (karma) task\nINFO [karma]: Karma v0.12.25 server started at http://localhost:9876/\nINFO [launcher]: Starting browser PhantomJS\nERROR [launcher]: Cannot start PhantomJS\nINFO [launcher]: Trying to start PhantomJS again (1/2).\nERROR [launcher]: Cannot start PhantomJS\nINFO [launcher]: Trying to start PhantomJS again (2/2).\nERROR [launcher]: Cannot start PhantomJS\nERROR [launcher]: PhantomJS failed 2 times (cannot start). Giving up.\nWarning: Task \"karma:unit\" failed. Used --force, continuing.\nDone, but with warnings.\n. ",
    "lucianenache": "So I've already tried both solutions before posting, I am currently running on windows 7 - 64bit , \nThe funny thing is that if I try to run the image from the virtual box it runs flawlessl\nAlso when boot2docker fires up the image, I can see inside virtualbox trough the preview window that the image loads and it ends up in a waiting state with the shell open.\n. So the port forwarding is there, on top of that, why does the image have two network adapters configured?\nthe first one is the NAT with port forwarding for the SSH protocol (it misses the guest ip is that ok?)\nthe second adapter is a host only adapter.\nOn top of that when I opened the image settings there were two warnings (1st because the image was using all 8 cores that my machine has, it disappeared when I allocated only 4, and the second one because the video memory was too low : 1mb also disappeared when I've increased it)\nBeside that I was thinking, I had vim/git console and ssh already installed before installing boot2docker, maybe it conflicts with those tools.\nI was thinking to remove everything and do a fresh reinstall of only boot2docker, I'll let you know how it went)\n. That solved it :smile: so for all future reference, if you had already git bash and/or ssh and/or virtualbox, it is advised to do a clean install by removing the named tools and whatever configu/resilient files or folders might have created in program files or your user folder.\nCheers\n. That solved it :smile: so for all future reference, if you had already git bash and/or ssh and/or virtualbox, it is advised to do a clean install by removing the named tools and whatever configu/resilient files or folders might have created in program files or your user folder.\nCheers\n. ",
    "AdlerFleurant": "It does not seems to be related. The solution provided in issue #473 did not work here.\n. ",
    "unludo": "I eventually stopped using boot2docker and use docker directly in the VM. I use vagrant to bootstrap everything and expose the ports outside the VM. \n. ",
    "andrewfaria": "Same here after Windows 10 upgrade. I've started from scratch several times. Removed all related software, all old network interfaces in VBox, followed steps in other tickets. \nI've finally accepted that the error in the screenshot below is out of my control:\n\n. Also after upgrade and started completely from scratch several times, removed existing host adapters,  including uninstall/reinstall all related apps, all available upgrades installed, including VBox Extensions, and disabling IPv6.... I've traced this issue down to the following:\nsh\n$ boot2docker init -v\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\n2015/07/30 13:17:33 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\nLatest release for github.com/boot2docker/boot2docker is v1.7.1\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.7.1/boot2docker.iso\n        to C:\\Users\\iMedia\\.boot2docker\\boot2docker.iso\n2015/07/30 13:17:58 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/30 13:18:08 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2015/07/30 13:18:08 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: d8fda62a-a33d-4f7c-a8a0-9fd3d19cd1c0\nSettings file: 'D:\\VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2015/07/30 13:18:09 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/30 13:18:09 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/07/30 13:18:09 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2015/07/30 13:18:09 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/30 13:18:09 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2015/07/30 13:18:09 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/07/30 13:18:09 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2015/07/30 13:18:10 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2015/07/30 13:18:10 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...\nProgress state: E_FAIL\nVBoxManage.exe: error: Failed to create the host-only adapter\nVBoxManage.exe: error: Code E_FAIL (0x80004005) - Unspecified error (extended info not available)\nVBoxManage.exe: error: Context: \"int __cdecl handleCreate(struct HandlerArg *,int,int *)\" at line 66 of file VBoxManageHostonly.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. Another related VBox ticket: https://www.virtualbox.org/ticket/12182\n. ",
    "apexskier": "I'm unable to figure out the address of OS X from inside the container. My ip on my local network is something in the 10.0.1.xxx range, but that doesn't work inside the container. I've also tried the IPs visible from the ip addr command with no luck.\n. I'm unable to figure out the address of OS X from inside the container. My ip on my local network is something in the 10.0.1.xxx range, but that doesn't work inside the container. I've also tried the IPs visible from the ip addr command with no luck.\n. ",
    "nlfiedler": "I'd like to see that as well.\n. ",
    "lantw44": "FreeBSD supports VirtualBox and bhyve.\nThe development branch of FreeBSD (11.0-CURRENT) can also run as a Xen dom0.\n. @znmeb  Yes, VT-x/AMD-V is enabled in VirtualBox on FreeBSD.\n. ",
    "herrbischoff": "Any news regarding this? I'd really love to see Docker running on FreeBSD, even if it's in a VM. Maybe it's worth looking at how the FreeNAS folks have accomplished that. The newest release offers Docker support through what I can only speculate is boot2docker in bhyve.. ",
    "cybercypher": "I have the same issue\n. ",
    "egoldschmidt": "+1, same here\n. ",
    "bnvk": "Yep, I just experienced this same issue when switching from home to work Wifi networks. Our devops wizard had to help me resolve the issue. The boot2docker restart resolved the issue- but for a non sys admin front-end engineer like me I was totally stumped!\n. ",
    "lukemarsden": "This is still a problem, any chance for a fix? It seriously impinges on Docker's usability for a large proportion of users, IMO.\n. ",
    "isubuz": "Even boot2docker restart isn't fixing the issue for me. This is really a blocker! Are there any plans to fix this?\nEdit\nHowever docker-machine restart did solve the issue.\n. Even boot2docker restart isn't fixing the issue for me. This is really a blocker! Are there any plans to fix this?\nEdit\nHowever docker-machine restart did solve the issue.\n. ",
    "tmajibon": "For those encountering this where it's not a DNS issue:\nCheck your iptables rules after a docker restart and immediately after a network disconnect/reconnect.\nIf you have your iptables rules getting restored upon reconnect and the configuration saved was prior to the docker install, your system might be removing the docker NAT rules after every reboot.\nI'm just sharing this as this was the problem I just solved on my own install and it's really easy to overlook. \nI had a script in /etc/network/if-up.d/ restoring my iptables from a file on every reboot. That file had not been updated since installing docker, so every disconnect resulted in that script running and knocking out the docker nat ruleset. (these disconnects including sleeping the computer, or just directly switching networks)\n. An alternative to consider if all networking fails:\nCheck to see if iptables is being restored on network connection being established.\nIn my own system I had a script in /etc/network/if-up.d/ restoring the iptables on network connection.\nThe restored rules did not include Docker's nat rules, which broke all docker network access every time the system reconnected.\nBy saving a fresh copy of iptables after restarting docker, the problem was solved for me.\nSharing this here as I found this while looking for answers and it's a really easy mistake to make.\n. ",
    "mjio": "I'm having the same issue and not a solution yet but after more searching I suspect the problem comes down to the shard file system from VirtualBox, Vboxsf: http://mitchellh.com/comparing-filesystem-performance-in-virtual-machines\nAs I sad, I don't know about solution but if you find anything, please give us an update.\n. ",
    "rtucker88": "I'll agree with @rosskukulinski. I have easily filled up a VM tweaking a Dockerfile build. Being able to specify the size of the drive would be beneficial and save a bunch of frustration!\n. I'll agree with @rosskukulinski. I have easily filled up a VM tweaking a Dockerfile build. Being able to specify the size of the drive would be beneficial and save a bunch of frustration!\n. ",
    "luiselizondo": "If configuring the disk size is too much work, then the disk size should be bigger by default.\n. ",
    "anvikakumar93": "It says /etc/init.d/ command not found :(\n. ",
    "aivarasbiliunas": "or just \nsudo service docker stop\n and then\nsudo service docker start\n. or just \nsudo service docker stop\n and then\nsudo service docker start\n. ",
    "aabuhasna": "Hi,\nI am using debian 8 and when I try to execute service docker stop and/etc/init.d/docker stop nothing happened. Hi,\nI am using debian 8 and when I try to execute service docker stop and/etc/init.d/docker stop nothing happened. ",
    "iarepandemonium": "On ubuntu and my docker has also gone rogue.  I can't stop it at all.\nEDIT: Also, I can't connect to my docker daemon either.  Not only can I not kill the docker daemon, but I can't connect to it either.  This is so fun.. On ubuntu and my docker has also gone rogue.  I can't stop it at all.\nEDIT: Also, I can't connect to my docker daemon either.  Not only can I not kill the docker daemon, but I can't connect to it either.  This is so fun.. ",
    "ORESoftware": "/etc/init.d/docker: No such file or directory\n. ",
    "lparry": "did you ever find a good solution to this?\n. ",
    "raimo": "+1\n. ",
    "roocell": "still trying to resolve this myself. (trying to compile freeradius inside a docker container - the code is mounted from the host). \nthe code is a github repo - so I suspect it may be git doing something.\ngetting errors like\n\"make: warning:  Clock skew detected.  Your build may be incomplete.\"\n\"has modification time 4.6e+02 s in the future\"\nwas hoping that codekitchen/dinghy would help. it did speed up the compile a bit, but not the timestamp problems on the filesystem.\ni've also read that vagrant or rsync may help - but having tried yet.\n. ",
    "ianmiell": "Seeing this with latest beta, eg repo: https://github.com/ianmiell/learn-git-the-hard-way\n. Seeing this with latest beta, eg repo: https://github.com/ianmiell/learn-git-the-hard-way\n. ",
    "chrisburr": "I'm copying the solution here as this this issue normally appears first in google for me. This can be fixed once by updating the clock in the docker VM using:\nbash\ndocker run --rm --privileged alpine hwclock -s\nSee this issue for more details: https://github.com/docker/for-mac/issues/17#issuecomment-290667509. I'm copying the solution here as this this issue normally appears first in google for me. This can be fixed once by updating the clock in the docker VM using:\nbash\ndocker run --rm --privileged alpine hwclock -s\nSee this issue for more details: https://github.com/docker/for-mac/issues/17#issuecomment-290667509. ",
    "munkyboy": "thanks for the feedback! rescoped PR\n. thanks for the feedback! rescoped PR\n. ",
    "detierno": "Im having the same problem, but i really new to docker and boot2docker to help with further information\n. ",
    "upio": "So I was having this problem but it was nothing to do with Docker. The reason it wasn't working or me is because my app was listening on \"localhost\" instead of 0.0.0.0. Make sure your app is doing that.\nI had a quick look at that the Ruby app @jwaldrip linked to. It is listening on port 8080. Why are you trying to reach it on port 9292?\nconfig.json\n\"web\": {\n    \"cmd\": [\"rackup\", \"-p$PORT\", \"-h$HOST\"],\n    \"ports\": [{\n        \"port\": 8080,\n        \"proto\": \"tcp\"\n    }]\n}\nDockerfile\nENV PORT 8080\nENV HOST 0.0.0.0\nEXPOSE 8080\nHave you tried running:\ndocker run -t -p 8080:8080 flynn-test .\nboot2docker ssh\ncurl http://localhost:8080/\n. So I was having this problem but it was nothing to do with Docker. The reason it wasn't working or me is because my app was listening on \"localhost\" instead of 0.0.0.0. Make sure your app is doing that.\nI had a quick look at that the Ruby app @jwaldrip linked to. It is listening on port 8080. Why are you trying to reach it on port 9292?\nconfig.json\n\"web\": {\n    \"cmd\": [\"rackup\", \"-p$PORT\", \"-h$HOST\"],\n    \"ports\": [{\n        \"port\": 8080,\n        \"proto\": \"tcp\"\n    }]\n}\nDockerfile\nENV PORT 8080\nENV HOST 0.0.0.0\nEXPOSE 8080\nHave you tried running:\ndocker run -t -p 8080:8080 flynn-test .\nboot2docker ssh\ncurl http://localhost:8080/\n. ",
    "apilloud": "@md5 That issue is about the hostname used to query pool.ntp.org, this is about the frequency pool.ntp.org is queried. Related, but not the same.\n. ",
    "hypergig": "I just tried with docker for mac it works completely natively.\nhttps://docs.docker.com/docker-for-mac/\nI was able to use a blockchain that I copied from my bitcoind node that I was running in docker-machine.\n. ",
    "znerd": "It should be easy to set the host IP address from the host, in a specific\nfile, like /var/hostip or so.\nConceptually, something like this:\nhost$ HOST_IP=ifconfig en1 | grep inet\\ | awk '{print $2}'\nhost$ ssh --non-interactive --command \"echo $HOST_IP > /var/hostip`\nNote that the SSH command might be a bit more complex, it's just to show\nthe concept.\nThen from within the VM, you can just get the host IP address from that\nfile:\nguest$ cat /var/hostip\nHTH. Cheers, Ernst\n2015-03-23 17:43 GMT+01:00 Olivier Lalonde notifications@github.com:\n\nIs there any way to access the host (OS X) IP from the boot2docker VM? If\nso, what is the IP or how can I find it? I have a default boot2docker init\ninstall.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/795.\n. It should be easy to set the host IP address from the host, in a specific\nfile, like /var/hostip or so.\n\nConceptually, something like this:\nhost$ HOST_IP=ifconfig en1 | grep inet\\ | awk '{print $2}'\nhost$ ssh --non-interactive --command \"echo $HOST_IP > /var/hostip`\nNote that the SSH command might be a bit more complex, it's just to show\nthe concept.\nThen from within the VM, you can just get the host IP address from that\nfile:\nguest$ cat /var/hostip\nHTH. Cheers, Ernst\n2015-03-23 17:43 GMT+01:00 Olivier Lalonde notifications@github.com:\n\nIs there any way to access the host (OS X) IP from the boot2docker VM? If\nso, what is the IP or how can I find it? I have a default boot2docker init\ninstall.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/795.\n. \n",
    "mdaniel": "It has been my experience that if one gets into the habit of ignoring \"known\" error messages, it causes actual ones to be swallowed in the noise.\nHowever, I was just trying to help. If you don't think these are positive changes, then just close the PR.\n. ",
    "dmenne": "I have the same problem, and could not find a solution for a complete installation with all VBoxManage, \"docker start\" stuff. So I guess either:\n-- It's trivial, and we both have overlooked something very simple\n-- It's not so easy, and needs modifications in Inno Setup. \nCould someone  please guide us? One could write some script into bootlocal.sh, but what is the recommended practice?\n. It's a bit easier in 1.6 since two batch-file levels are mostly merged.\n. This proved to be a racing condition: With the following in bootlocal.sh startup works\nsleep 1\ndocker start gastrobase\nAny suggestion how to make this more robust? Wait for what?\n. Seems to work mostly, but hangs (not reproducibly) occasionally.\nA better refererence is:\nhttps://docs.docker.com/reference/run/#restart-policies-restart\n. @imwithye  $pwd: Even better! Thanks for sharing, having to use a static name was another nuisance in the syntax.\n. ",
    "iattoumani": "When you build the docker cli executable you have to build it from the 1.5 tag to get docker with the 1.17 client api.\n. ",
    "Hoedic": "I downgraded to VirtualBox 4.3.25 (from 4.3.26) and it is working back.\n. ",
    "jmagnusson": "I actually got it working by upgrading to 4.3.28 (from 4.3.20).\n. Hmmm. We seem to be getting mixed results.\n. Hmmm. We seem to be getting mixed results.\n. ",
    "shawndrape": "I was experiencing the same issue, but updating to 4.3.30 (latest as of posting) allowed me to avoid the panics.\n. ",
    "laceybeela": "This is happening to me too!\n. ",
    "geddski": "My mistake, the files are syncing correctly. It was the webpack dev server that wasn't picking up the file changes. \n. ",
    "MrMMorris": "@SvenDowideit I am using https://github.com/codekitchen/dinghy and it installs docker with homebrew, but even if I use the binary, same issue.\nhttps://gist.github.com/MrMMorris/11cfce48ed9f6cd7adc6\n. ",
    "mlb-": "To avoid race conditions, and lag from my boot2docker's hosting VM, I put this line before my docker commands:\nwhile [ ! -e /var/run/docker.sock ]; do sleep 1; done\nThis is, admittedly, hacky, but it gets the job done.\n. ",
    "erikogan": "Thanks for your replies. I don\u2019t think the cross-compilation is to blame, since all of the commands above were run inside the boot2docker VM. But still, it\u2019s good to know that could be an issue.\nI\u2019ll go read the threads you linked and see if I can find a suitable workaround. Thanks.\n. Complicating matters is that I\u2019m running boot2docker in virtualbox to build a generic solution for the rest of the company. I have both CentOS 7 & boot2docker running in Parallels VMs configured via Vagrant, and neither one exhibits this behavior. It\u2019s maddening!\n(This is why I posted an issue in this repo: it seems specific to the specific boot2docker install)\n. ",
    "rossbachp": "Add your ca cert to /etc/ssl/certs/ca-certificates.crt\nYou must create a executable /var/lib/boot2docker/bootlocal.sh scripts:\n```\n!/bin/sh\nsu - docker -c \"cat /var/lib/boo2docker/docker.changeeng.org/ca.crt >>/etc/ssl/certs/ca-certificates.crt\"\n```\n. ",
    "pwnall": "+1\nI ran into the same issue. This is causing me trouble when trying to use the docker API from a Ruby app. Here are the openssl commands that I used. They're similar to the ones above, but print more debugging information and use DOCKER_ env vars.\nbash\nopenssl s_client -showcerts -connect ${DOCKER_HOST/tcp:\\/\\//} \\\n    -key $DOCKER_CERT_PATH/key.pem \\\n    -cert $DOCKER_CERT_PATH/cert.pem \\\n    -CAfile $DOCKER_CERT_PATH/ca.pem -tls1\nbash\n/usr/local/Cellar/openssl/1.0.2a-1/bin/openssl \\\n    s_client -showcerts -connect ${DOCKER_HOST/tcp:\\/\\//} \\\n    -key $DOCKER_CERT_PATH/key.pem \\\n    -cert $DOCKER_CERT_PATH/cert.pem \\\n    -CAfile $DOCKER_CERT_PATH/ca.pem -tls1\n. ",
    "tdsmith": "I wonder if the problem is that the Issuer and Subject DNs are the same for the boot2docker certs.\nNote, for boot2docker's server cert:\nServer certificate\nsubject=/O=Boot2Docker\nissuer=/O=Boot2Docker\nvs, for docker-machine's:\nServer certificate\nsubject=/O=dev\nissuer=/O=aanand\n. I wonder if the problem is that the Issuer and Subject DNs are the same for the boot2docker certs.\nNote, for boot2docker's server cert:\nServer certificate\nsubject=/O=Boot2Docker\nissuer=/O=Boot2Docker\nvs, for docker-machine's:\nServer certificate\nsubject=/O=dev\nissuer=/O=aanand\n. FWIW the boot2docker certs are generated here: https://github.com/boot2docker/boot2docker/blob/30800b21799f3aedba2150c729aeafc13baad8d9/rootfs/rootfs/usr/local/etc/init.d/docker#L44\nusing this program: https://github.com/SvenDowideit/generate_cert/blob/master/generate_cert.go\n. ",
    "posita": "Needs SvenDowideit/generate_cert#10. See https://github.com/docker/compose/issues/890#issuecomment-126854371 et seq. for relevant discussion (which probably should have happened here).\nUPDATE: PR with fix submitted as boot2docker/boot2docker#1029.\n. Needs SvenDowideit/generate_cert#10. See https://github.com/docker/compose/issues/890#issuecomment-126854371 et seq. for relevant discussion (which probably should have happened here).\nUPDATE: PR with fix submitted as boot2docker/boot2docker#1029.\n. FYI, the reason this PR is submitted against this repository as opposed to SvenDowideit/generate_cert is because @SvenDowideit gently pointed out that a patch to generate_cert is not needed to overcome the issue. Rather boot2docker can call it with the appropriate command line options when generating the certificates.\n. FYI, the reason this PR is submitted against this repository as opposed to SvenDowideit/generate_cert is because @SvenDowideit gently pointed out that a patch to generate_cert is not needed to overcome the issue. Rather boot2docker can call it with the appropriate command line options when generating the certificates.\n. Done (and squashed).\n. ",
    "nagarajanewlife": "verify error:num=18:self signed certificate.. ",
    "ejono": "What type of volume is your other volume?  Is it a sparsebundle?  I'm running into the same problem with a sparsebundle, so I'm wondering if this is specifically a problem with sparsebundles or with any other type of volume.\n. What type of volume is your other volume?  Is it a sparsebundle?  I'm running into the same problem with a sparsebundle, so I'm wondering if this is specifically a problem with sparsebundles or with any other type of volume.\n. ",
    "dimroc": "Likewise. I'm trying to mount a volume to a docker container as described here:\nhttp://stackoverflow.com/a/27320731/639773\n. ",
    "dlueth": "Same error and above mentioned solution does not work as well...\n. ",
    "chiedo": "Thanks @AntonioMeireles  I will check that out. That could be a game changer. Things are running so slowly as it currently stands!\n. Hey @joelwurtz,\nThanks for your suggestion. I'm having no luck though, \nI am getting the following after attempting to mount the nfs on the client:\nmount: RPC: Authentication error; why = Client credential too weak\nAnd I did change 192.168.59.3 to my host IP address as assumed.\nAny ideas?\nThanks!\n. Hey @joelwurtz,\nThanks for your suggestion. I'm having no luck though, \nI am getting the following after attempting to mount the nfs on the client:\nmount: RPC: Authentication error; why = Client credential too weak\nAnd I did change 192.168.59.3 to my host IP address as assumed.\nAny ideas?\nThanks!\n. Scratch that last statement. It looks like I wasn't supposed to change 192.168.59.3 to my host IP. Looks like it's working. Thanks for your help.\n. Scratch that last statement. It looks like I wasn't supposed to change 192.168.59.3 to my host IP. Looks like it's working. Thanks for your help.\n. Thanks again for all of your help. \nI went ahead and wrote a quick tutorial for whoever else comes across this page on how to automate that process so it's automatically is configured each time boot2docker is started.\nhttps://gist.github.com/chiedojohn/4d2cc894f53c3da1910c\n. Thanks again for all of your help. \nI went ahead and wrote a quick tutorial for whoever else comes across this page on how to automate that process so it's automatically is configured each time boot2docker is started.\nhttps://gist.github.com/chiedojohn/4d2cc894f53c3da1910c\n. @thaJeztah good call. The pull request has been submitted.\n. @thaJeztah good call. The pull request has been submitted.\n. Good call @mattes I went ahead and added those comments! Do you want to add a pull request for incorporating your automation script for the patch after/if this pull request gets merged? If you'd rather me attempt to incorporate it into this one, that works for me too!\n. Good call @mattes I went ahead and added those comments! Do you want to add a pull request for incorporating your automation script for the patch after/if this pull request gets merged? If you'd rather me attempt to incorporate it into this one, that works for me too!\n. No problem @mattes. I went ahead and simplified in for the boot2docker use case without docker-machine. I gave it a few tests runs and it seems to work A-OK.\nTo all concerned, let me know if you want me to update any of my documentation style, where I placed the scripts or anything like that.\n. No problem @mattes. I went ahead and simplified in for the boot2docker use case without docker-machine. I gave it a few tests runs and it seems to work A-OK.\nTo all concerned, let me know if you want me to update any of my documentation style, where I placed the scripts or anything like that.\n. @mattes sounds good! I went ahead and made it dynamic. I'll be honest though in saying that I don't fully understand where that IP address is coming from... but I guess that's OK.\n. @nathanleclaire pinging you now :)\n. Hey @tuzonghua, I just made an update to the script that may fix the problems you're having.\nIn your /etc/exports though change -maproot=root to -mapall=501:20 restart your nfs server and let me know if that works for you.\n. Thanks for catching that! \nI've made the fix.\nPlease let me know if you have any other feedback on how I can improve on any pull requests in the future and if you notice anything else that needs fixing on this one.\n. ",
    "joelwurtz": "You can use nfs inside boot2docker, it is just not documented\nI have done the following steps in order to have nfs share on boot2docker : \n- Share the nfs folder on your mac by adding it to your /etc/exports : \n```\n/etc/exports\n/Users 192.168.59.103 -alldirs -mapall=501:20\n```\n- Reload your nfs : \nsudo nfsd restart\n- Mount the volume on boot2docker\nboot2docker ssh\nsudo umount /Users\nsudo /usr/local/etc/init.d/nfs-client start\nsudo mount -t nfs -o rw 192.168.59.3:/Users /Users\n. ",
    "Rob-Johnson": "Hi @md5,\nThanks for your comments, they definitely identify the cause of the problem.\nWe're trying to reduce the amount of extra setup that developers have to go through to be up and running with Docker, so this isn't ideal. Why is it that boot2docker is set up to replace the recognised CAs, rather than just adding to them?\n. Hi @md5,\nThanks for your comments, they definitely identify the cause of the problem.\nWe're trying to reduce the amount of extra setup that developers have to go through to be up and running with Docker, so this isn't ideal. Why is it that boot2docker is set up to replace the recognised CAs, rather than just adding to them?\n. Hi @SvenDowideit,\nJust tried with the latest boot2docker iso available at the link you pointed me to and I'm still having no luck. You being able to use an instantssl certificate gives me hope though, and means that what @md5 said above about boot2docker only accepting it's own self-signed certificate may not be entirely true.\nThanks,\nRob\n. Hi @SvenDowideit \nIn the end I found it was an issue with the certificate - the cert issued by GoDaddy was signed by an intermediate cert so I needed to include the whole certificate chain.\nThanks for your help though, happy to close this.\nRob\n. ",
    "phact": "I see this too sporadically. I run:\nboot2docker stop\nboot2docker delete\nboot2docker init\nboot2docker start\nand it goes away. But keeps coming back...\n. ",
    "meenarc": "Yes, that's exactly what I have noticed too. Going over the stop/delete/init/start cycle fixes the issues but sooner or later the same issue shows up\n. ",
    "zachaller": "I also have this same issue, the second the vm restarts i get the issue so\nboot2docker init\nboot2docker up\neverything works fine now\nboot2docker restart\nnow it just throws this error with only way to fix is to delete vm\nFATA[0000] An error occurred trying to connect: Get https://192.168.59.107:2376/v1.18/containers/json?all=1: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.107\nthis is with the newest boot2docker\n. +1 the fix also worked for me\n. +1 the fix also worked for me\n. ",
    "housebolt": "+1\n. @mmikulicic I ran the following after a reset via boot2docker delete/init/up\nsudo openssl x509 -text -in /var/lib/boot2docker/tls/server.pem | grep DNS\nDNS:boot2docker, IP Address:127.0.0.1, IP Address:10.0.2.15, IP Address:192.168.59.107\nThe output was correct, with all three IP addresses.\nHowever after I run boot2docker restart and try again I get this:\nsudo openssl x509 -text -in /var/lib/boot2docker/tls/server.pem\nDNS:boot2docker, IP Address:127.0.0.1, IP Address:10.0.2.15\nThe third IP is gone!\nWhen I exit out of boot2docker and run docker version\ndocker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): darwin/amd64\nAn error occurred trying to connect: Get https://192.168.59.107:2376/v1.19/version: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.107\n. @lrafagnin I can confirm your comments on the pid file and /etc/init.d/docker start, I ran into this yesterday while trying to debug\n. See #824, possible duplicate\n. See #824 as well\n. ",
    "mkmik": "I had a similar problem after doing boot2docker update to version 1.7.0.\nI solved the issue by removing the server cert and key files and restarted /etc/init.d/docker.\nIt regenerated the server certificate with the address 192.168.59.103 now bound to the eth1 interface. It might be that the interface wasn't correctly brought up when the certificate has been regenerated during boot2docker update.\nsh\n$ rm /var/lib/boot2docker/tls/server*.pem\n. @jmshelby, when you ssh on your boot2docker instance and issue ifconfig, on which interface is the incriminated ip?\n(i.e. if the message is  x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.107 the ip I'm talking about would be 192.168.59.107).\nThe /etc/init.d/docker file lists the interfaces whose ips it will add to the generated certificate:\n: ${CERT_INTERFACES:='docker0 eth0 eth1'}\nWhen the certificate is missing, it will regenerate and then reuse the same cert at subsequent boots.\nYou can see the ips contained in the existing certificate with:\n$ sudo openssl x509 -text -in /var/lib/boot2docker/tls/server.pem | grep DNS\n  DNS:boot2docker, IP Address:127.0.0.1, IP Address:172.17.42.1, IP Address:10.0.2.15, IP Address:192.168.59.103\nIf the certificate is ok, then perhaps you have a different problem than what I had.\n. ",
    "rafi": "Deleting boot2docker's ssh keys and re-initialization boot2docker worked, thanks @mmikulicic \n. ",
    "pdzilla": "+1, in the same boat as @jmshelby \n. ",
    "scifisamurai": "I'm having the same issue as many above on a fresh install of boot2docker & docker I did just today (haven't used docker or boot2docker before on this computer).  I can reproduce the error a similar fashion as the others above.\n1 boot2docker stop\n2 boot2docker delete\n3 boot2docker init\n4 boot2docker start\nWaiting for VM and Docker daemon to start...\n.........................oooooooooooooooooo\nStarted.\nWriting /Users/< user here >/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/< user here >/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/< user here >/.boot2docker/certs/boot2docker-vm/key.pem\nTo connect the Docker client to the Docker daemon, please set:\n    export DOCKER_HOST=tcp://192.168.59.103:2376\n    export DOCKER_CERT_PATH=/Users//.boot2docker/certs/boot2docker-vm\n    export DOCKER_TLS_VERIFY=1\n5 $(boot2docker shellinit)\nWriting /Users/<user here>/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/<user here>/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/<user here>/.boot2docker/certs/boot2docker-vm/key.pem\n6 docker run hello-world\n```\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from hello-world\na8219747be10: Pull complete \n91c95931e552: Already exists \nhello-world:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.\nDigest: sha256:aa03e5d0d5553b4c3473e89c8619cf79df368babd18681cf5daeb82aab55838d\nStatus: Downloaded newer image for hello-world:latest\nHello from Docker.\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (Assuming it was not already locally available.)\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\nFor more examples and ideas, visit:\n http://docs.docker.com/userguide/\n```\n7 boot2docker stop\n8 boot2docker start\nWaiting for VM and Docker daemon to start...\n......................ooooo\nStarted.\nWriting /Users/<user here>/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/<user here>/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/<user here>/.boot2docker/certs/boot2docker-vm/key.pem\nYour environment variables are already set correctly.\n9 docker run hello-world\nAn error occurred trying to connect: Post https://192.168.59.103:2376/v1.19/containers/create: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\n10 boot2docker ssh\n11 docker@boot2docker:~$ sudo openssl x509 -text -in /var/lib/boot2docker/tls/server.pem | grep DNS\n                DNS:boot2docker, IP Address:127.0.0.1, IP Address:10.0.2.15\n12 docker@boot2docker:~$ cat /etc/init.d/docker |grep -i cert_inte\n: ${CERT_INTERFACES:='eth0 eth1'}\n        for interface in ${CERT_INTERFACES}; do\n13 docker@boot2docker:~$ ifconfig eth1|grep -i inet\\ addr\n          inet addr:192.168.59.103  Bcast:192.168.59.255  Mask:255.255.255.0\nHence the ip should be being brought up but it's not...\nI tried deleting the server*.pem files & restarting docker while inside the ssh session, exiting and then doing 'boot2docker shellinit. and got the same error in run: Error requesting socket: exit status 1 \n14 boot2docker -v up\n```\nBoot2Docker-cli version: v1.6.2\nGit commit: cb2c3bc\n2015/06/20 23:23:23 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/06/20 23:23:23 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\n2015/06/20 23:23:23 executing: VBoxManage showvminfo boot2docker-vm --machinereadable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0)2015/06/20 23:23:23 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users//.ssh/id_boot2docker docker@localhost ip addr show dev eth1\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:83:97:50 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe83:9750/64 scope link \n       valid_lft forever preferred_lft forever\nEND SSH\nVM Host-only IP address: 192.168.59.103\nWaiting for Docker daemon to start...\no2015/06/20 23:23:24 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/dharris/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\no2015/06/20 23:23:24 executing: /usr/bin/ssh ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i /Users/dharris/.ssh/id_boot2docker docker@localhost grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\ncat: can't open '/var/run/docker.pid': No such file or directory\nError requesting socket: exit status 1\n```\nso something very weird is going on.... \n. ",
    "lrafagnin": "Something weird happening on boot2docker start\n\"/etc/init.d/docker status\" returns \"Docker daemon is not running\" even though docker is running\n\"sudo /etc/init.d/docker restart\" doesn't work because it uses the method above to check is process is running, ends up removing the pid file and all goes pear shape\n\"sudo /etc/init.d/docker stop && sudo /etc/init.d/docker start\" works though\nboot2docker ssh\nsudo /etc/init.d/docker stop && sudo /etc/init.d/docker start\nexit\n. ",
    "dremonkey": "@gesellix Only solution that worked for me too. Thanks!\n. ",
    "warden": "Just upgraded to 1.7.0 and this problem surfaced. \nThe @garthk suggestion worked although the boot2docker up command hung. After forcing Virtualbox poweroff and starting up again all seemed to work fine. MacOS.\n. Actually I am experiencing a lot of weird issues after upgrade. I needed to re-init completely. Then when I was pulling a number of images simultaneously suddenly docker stopped responding and I got:\nUnable to find image 'splitbrain/phpfarm:latest' locally\nPulling repository splitbrain/phpfarm\n481879dcb8b8: Pulling dependent layers \n511136ea3c5a: Download complete \n5a7d9470be44: Downloading 10.81 MB\nunexpected EOF\nInterestingly, on another console I got:\n7ea97d9d84da: Download complete \n7ea97d9d84da: Error pulling image (latest) from oberthur/jenkins-slave-maven, endpoint: https://registry-1.docker.io/v1/, Image e118faab2e16f9d858fcec0d86c9148e9b0fa021697239745f3253f367941dcc already exist7ea97d9d84da: Error pulling image (latest) from oberthur/jenkins-slave-maven, Image e118faab2e16f9d858fcec0d86c9148e9b0fa021697239745f3253f367941dcc already exists \nError pulling image (latest) from oberthur/jenkins-slave-maven, Image e118faab2e16f9d858fcec0d86c9148e9b0fa021697239745f3253f367941dcc already exists\nMaybe that's a docker bug?\ndocker ps then complained again:\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/containers/json: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\nI can confirm that (for now), without the patch, this fixes things:\nboot2docker ssh sudo /etc/init.d/docker restart\nWith the patch, starting boot2docker took for me reeeeeealllly long and mostly it did not finish with expected results.\n. Actually I am experiencing a lot of weird issues after upgrade. I needed to re-init completely. Then when I was pulling a number of images simultaneously suddenly docker stopped responding and I got:\nUnable to find image 'splitbrain/phpfarm:latest' locally\nPulling repository splitbrain/phpfarm\n481879dcb8b8: Pulling dependent layers \n511136ea3c5a: Download complete \n5a7d9470be44: Downloading 10.81 MB\nunexpected EOF\nInterestingly, on another console I got:\n7ea97d9d84da: Download complete \n7ea97d9d84da: Error pulling image (latest) from oberthur/jenkins-slave-maven, endpoint: https://registry-1.docker.io/v1/, Image e118faab2e16f9d858fcec0d86c9148e9b0fa021697239745f3253f367941dcc already exist7ea97d9d84da: Error pulling image (latest) from oberthur/jenkins-slave-maven, Image e118faab2e16f9d858fcec0d86c9148e9b0fa021697239745f3253f367941dcc already exists \nError pulling image (latest) from oberthur/jenkins-slave-maven, Image e118faab2e16f9d858fcec0d86c9148e9b0fa021697239745f3253f367941dcc already exists\nMaybe that's a docker bug?\ndocker ps then complained again:\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/containers/json: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\nI can confirm that (for now), without the patch, this fixes things:\nboot2docker ssh sudo /etc/init.d/docker restart\nWith the patch, starting boot2docker took for me reeeeeealllly long and mostly it did not finish with expected results.\n. Well, probably not, because this is fixing it ad hoc. But I prefer to start boot2docker quicker (and I rarely actually stop it at all) and restarting, than waiting ages for it to get up.\n. Well, probably not, because this is fixing it ad hoc. But I prefer to start boot2docker quicker (and I rarely actually stop it at all) and restarting, than waiting ages for it to get up.\n. ",
    "hbto": "Hello everyone,\nI come with the same problem and I have been able to solve with the solution propuse here:\nhttps://github.com/docker/machine/issues/531\nboot2docker ssh\nsudo su\ncd /var/lib/boot2docker/\ntouch profile\nvim profile\nwait4eth1() {\n        CNT=0\n        until ip a show eth1 | grep -q UP\n        do\n                [ $((CNT++)) -gt 60 ] && break || sleep 1\n        done\n        sleep 1\n}\nwait4eth1\nsave and close ( :wq )\nexit \nexit\nboot2docker stop && boot2docker start && docker images\nShould no longer complain with certs.\nBest Regards.\n. Hello everyone,\nI come with the same problem and I have been able to solve with the solution propuse here:\nhttps://github.com/docker/machine/issues/531\nboot2docker ssh\nsudo su\ncd /var/lib/boot2docker/\ntouch profile\nvim profile\nwait4eth1() {\n        CNT=0\n        until ip a show eth1 | grep -q UP\n        do\n                [ $((CNT++)) -gt 60 ] && break || sleep 1\n        done\n        sleep 1\n}\nwait4eth1\nsave and close ( :wq )\nexit \nexit\nboot2docker stop && boot2docker start && docker images\nShould no longer complain with certs.\nBest Regards.\n. ",
    "jessefulton": "@warden's comment describes exactly what happened to me and how I fixed it https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113993742\nFWIW, I was trying to upgrade an old homebrew install. Decided to totally start fresh using the official installer, and still had these issues. (It looks like I may have had old files in ~/.boot2docker and a few other places...)\n. @warden's comment describes exactly what happened to me and how I fixed it https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113993742\nFWIW, I was trying to upgrade an old homebrew install. Decided to totally start fresh using the official installer, and still had these issues. (It looks like I may have had old files in ~/.boot2docker and a few other places...)\n. ",
    "mklatsky": "+1 for fix working \n. +1 for fix working \n. ",
    "wingy3181": "+1 worked for me too\n. +1 worked for me too\n. ",
    "topiaruss": "@warden's fix works for me.\nSummary:\n- No profile script\n- each time there is an issue:\n        $ boot2docker ssh sudo /etc/init.d/docker restart \n. ",
    "m0ppers": "came across this after doing an upgrade 1.5 => 1.7. @garthk's  gist worked for me :)\njust wanted to note that manually restarting does NOT seem to be a proper fix for this issue. it is really annoying :S\n. ",
    "camilonova": "Got the same problem as well after doing an upgrade to 1.7\n. ",
    "eddiejaoude": "Same issue here after the upgrade :( \n. ",
    "zhshqzyc": "Thanks @warden \nboot2docker ssh sudo /etc/init.d/docker restart\nI got an error: \nsh: syntax error:  unexpected \"(\"\nerror in run: exit status 2\n. ",
    "luzzbob": "+1 same issue\n. ",
    "cristian-smocot": "@hbto \nFix worked for me on Windows with the latest Docker version 1.7.0.\n\nHello everyone,\nI come with the same problem and I have been able to solve with the solution propuse here:\ndocker/machine#531\nboot2docker ssh\nsudo su\ncd /var/lib/boot2docker/\ntouch profile\nvim profile\nwait4eth1() {\nCNT=0\nuntil ip a show eth1 | grep -q UP\ndo\n[ $((CNT++)) -gt 60 ] && break || sleep 1\ndone\nsleep 1\n}\nwait4eth1\nsave and close ( :wq )\nexit \nexit\nboot2docker stop && boot2docker start && docker images\nShould no longer complain with certs.\nBest Regards.\n\nIssue824\n. @timhtheos\nprofile is not  a folder.\nIs actually a file. Maybe I'm reading your message wrong, and your problem is that you have no var or lib or boot2docker  folders.\nBut if you think that profile is a folder, well you are on the wrong path.\nThe path is /var/lib/boot2docker and the file to edit is profile.\nHope this helps.\n. @timhtheos\nprofile is not  a folder.\nIs actually a file. Maybe I'm reading your message wrong, and your problem is that you have no var or lib or boot2docker  folders.\nBut if you think that profile is a folder, well you are on the wrong path.\nThe path is /var/lib/boot2docker and the file to edit is profile.\nHope this helps.\n. ",
    "joebalt": "This profile workaround worked for me on Windows 7 x64:\n=>docker -v\nDocker version 1.7.0, build 0baf609\n. ",
    "indrayam": "Thanks @gesellix Was just getting started with docker on mac for the first time and was finding this whole issue a bummer. Thanks to your inputs here:\nhttps://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164\nI am back in business :+1: \n. Thanks @gesellix Was just getting started with docker on mac for the first time and was finding this whole issue a bummer. Thanks to your inputs here:\nhttps://github.com/boot2docker/boot2docker/issues/824#issuecomment-113904164\nI am back in business :+1: \n. ",
    "timhtheos": "+1 my outstanding issue now.  Now, I can only get away with this error by docker delete and init again. Subscribing.\n. +1 my outstanding issue now.  Now, I can only get away with this error by docker delete and init again. Subscribing.\n. @gesellix Yep, figured that out through @garthk's comment.  Thanks. Testing now.\n@cristian-smocot yes I know it is not a folder, what I meant was I can't find such a path (the directory /var/lib/boot2docker/) much less that file (/var/lib/boot2docker/profile).\n. @gesellix running boot2docker up is taking very long, until now, it's still running.  Is this normal or what? (based on your experience after what you did what you suggested)\n. ",
    "zdrummond": "@timhtheos the first boot after the fix has a good chance of not completing. Power off the VM from VBox, then try again. \n. ",
    "vishal-biyani": "I had same issue with boot2docker on Windows 7 and Workaround/Fix mentioned by @hbto worked for me.\nhttps://github.com/boot2docker/boot2docker/issues/824#issuecomment-114173742\n. ",
    "g-g-n": "Same with fresh install first time. \n. ",
    "cjquinon": "@garthk, thanks for the solution.  Worked like a charm!\n. ",
    "maerten": "SvenDowiteit's solution worked for me:\nboot2docker ssh sudo /etc/init.d/docker restart\n. ",
    "rupakg": "Solution stated by @garthk WORKS! Thanks to @fayep for PR #411 and @gesellix.\n. ",
    "dennybritz": "boot2docker ssh sudo /etc/init.d/docker restart\nWorked for me.\n. Fix in 1.7.1 worked for me.\n. ",
    "loulin": "@phact's solution temporarily worked.\n. ",
    "liusongsen": "\u6211\u662f\u8fd9\u6837\u89e3\u51b3\u95ee\u9898\u7684\uff1a\nboot2docker ssh sudo /etc/init.d/docker restart\n\u975e\u5e38\u611f\u8c22dennybritz\n. ",
    "mariowise": "I've got version 1.7.1 and the issue remains :( I try the wait4eth1() and nothing :S\n. Well it was important to get this to work in OSX 10.9, I reboot the Mac, reinstall and then use the this, and then it worked fine.\nThanks! (I'm on OSX 10.9.5 + boot2docker 1.7.1)\n. ",
    "blazarecki": "+1\n. ",
    "tuzonghua": "@chiedojohn Good start, but running into ownership mismatch. As you can see, in Docker, the /Users directory has my local directory with ownership 501:20. When I run the same command on my local machine, the same directory has ownership mdoo:staff. Fine. However, id -u inside Docker gives 1000. Since the UIDs don't match, I'm running into various permissions issues.\n```\nBoot2Docker version 1.6.0, build master : a270c71 - Thu Apr 16 19:50:36 UTC 2015\nDocker version 1.6.0, build 4749651\ndocker@boot2docker:~$ df\nFilesystem                Size      Used Available Use% Mounted on\nrootfs                    1.8G     87.6M      1.7G   5% /\ntmpfs                     1.8G     87.6M      1.7G   5% /\ntmpfs                  1003.9M    200.0K   1003.7M   0% /dev/shm\n/dev/sda1                18.2G      2.0G     15.2G  12% /mnt/sda1\ncgroup                 1003.9M         0   1003.9M   0% /sys/fs/cgroup\n/dev/sda1                18.2G      2.0G     15.2G  12% /mnt/sda1/var/lib/docker/aufs\n192.168.59.3:/Users     280.3G     46.7G    233.4G  17% /Users\nnone                     18.2G      2.0G     15.2G  12% /mnt/sda1/var/lib/docker/aufs/mnt/ef01c009006dc4ac59b8b5abaa42708e90f059484efcee0482f9e99c428825ad\nnone                     18.2G      2.0G     15.2G  12% /mnt/sda1/var/lib/docker/aufs/mnt/d1b00fe339b4f0399338ceb4dfa167e36b0ad8d3c3309a01e5ce192e9114eb13\nnone                     18.2G      2.0G     15.2G  12% /mnt/sda1/var/lib/docker/aufs/mnt/3f67b0d43682b1fe74034d39e41dbb939c497278f055087c1290b3fed3564bc3\ndocker@boot2docker:~$ ls -l /Users\ntotal 8\ndrwxrwxrwt    5 root     root           170 Mar 13 20:09 Shared/\ndrwxr-xr-x   66 501      20            2244 Apr 21 16:55 mdoo/\ndocker@boot2docker:~$ id -u\n1000\ndocker@boot2docker:~$ id -g\n50\ndocker@boot2docker:~$ exit\nls -l /Users\ntotal 0\ndrwxrwxrwt   5 root  wheel   170 Mar 13 16:09 Shared\ndrwxr-xr-x+ 66 mdoo  staff  2244 Apr 21 12:56 mdoo\n``\n. @chiedojohn Thanks! Worked perfectly. I had previously tried-mapall=mdoo:staffand-mapall=1000:1000` to no avail.\n. ",
    "ereOn": "@thaJeztah That's great news indeed.\nIs a new release of boot2docker planned as well for today ? It seems that the latest docker client version is not compatible with the one in boot2docker (1.17 <> 1.19).\n. ",
    "mausch": "The latest releases already include the Windows docker CLI, so I guess this issue can be closed now?\n. ",
    "onlydole": "Thank you so much @tianon! \n. ",
    "rtucek": "What System are you using?\nHow did you installed boot2docker and docker on your computer (Docker Installer, Homebrew, ...?).\nJust updating the Linux image doesn't mean updating the binaries on your host.\nI won't be surprised if your boot2docker version returns:\n$ boot2docker version\nBoot2Docker-cli version: v1.3.1\nGit commit: 57ccdb8\nIf your boot2docker binaries would be up to date you should get that output:\n$ boot2docker version\nBoot2Docker-cli version: v1.6.0\nGit commit: 9894ae9\n. Basically you could...\n- visit http://boot2docker.io/ and grep the latest installer\n- compile it on your own (I mean GitHub was build for this reason)\n- use a package manager like Homebrew (which I prefer on my Mac).\n- ...\nNeedless to say that you should uninstall your outdated version first.\n. ",
    "kennethlimcp": "I'm on Mac OSx\nIndeed.. boot2docker version is giving me: \nBoot2Docker-cli version: v1.3.1\nGit commit: 57ccdb8\nI think i used the Docker installer. How can i go about updating everything properly? :)\n. @SvenDowideit , thanks for getting back to me.\nJust did that:\nKENMBP:~ kennethlimcp$ boot2docker upgrade\nLatest release for boot2docker/boot2docker is v1.6.0\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.6.0/boot2docker.iso\n    to /Users/kennethlimcp/.boot2docker/boot2docker.iso\nDoes boot2docker actually upgrade the docker cli? Or do i have to upgrade it manually?\nKENMBP:~ kennethlimcp$ docker version\nClient version: 1.3.1\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): 4e9bbfa\nOS/Arch (client): darwin/amd64\n. @SvenDowideit that did the trick! Thanks for the help :)\n. @SvenDowideit that did the trick! Thanks for the help :)\n. ",
    "CIPowell": "It doesn't persist properly on 2015 MBPs. The partition either isn't created or is lost.\nFor some reason after upgrading to VirtualBox 4.3.26 (to fix a kernel panic) you have to remove spaces from the VirtualBox vm directory. \nWould be good to have a note about this on your install instructions or have it fixed in the next release.\nThanks\nSent from my iPhone\n\nOn 28 Apr 2015, at 01:54, Sven Dowideit notifications@github.com wrote:\nThe boot2docker init process will create a persistence partition for the vm in which the images should be saved.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "IdanAdar": "I can confirm that this is indeed happening on Mac. After saving the image and re-starting the VM, it will work. However after restarting the Mac, it's all gone from the VM.\n. There is no fix yet, but there's a workaround: http://stackoverflow.com/questions/30497123/is-there-an-alternative-workaround-for-boot2docker-save\n. ",
    "alienxt": "This is a bug?The official fix it yet\uff1f\n. Thanks!\n. ",
    "lxe": "The workaround is a bit hacky IMHO. Anyone knows the root cause of the images not persisting? \n. ",
    "orrery": "It happens in windows 7 as well.\n. ",
    "brlo": "$ boot2docker ssh\n$ syslogd -n\nworking\n. $ boot2docker ssh\n$ syslogd -n\nworking\n. ",
    "acroca": "It would be nicer if boot2docker supports it out of the box.\n. It would be nicer if boot2docker supports it out of the box.\n. ",
    "n1t1nv3rma": "+1\n. ",
    "mikesherov": "Thanks @tianon this will be a tremendous help for us!\n. Sorry for that @tianon \n. Sorry for that!\n. ",
    "whosyourdev": "BTW, first time user of docker and boot2docker\u2014thanks to all those who worked on this!\nI just downloaded the installer, and it ran, but running boot2docker results in: \"boot2docker fails to create creates a $HOME/.boot2docker directory\"\nSo, I looked at the permissions for my $HOME directory, and saw that they were 555, not 755\u2014is this a new security setting in OS X Yosemite?\nChanging the permissions on my home directory and running boot2docker for the first time worked great. I then changed 'em back and it's still running.\n. ",
    "RamonBoza": "wow thanks you!!!\nWe have the limitation of needing a mac system, docker is based on top of\nlinux so we get that working using vagrant + vboxmanage as well.\nBut thanks!!!\nOn Wed, Jun 3, 2015 at 9:55 PM, Jonas Bj\u00f6rk notifications@github.com\nwrote:\n\nHave a look at #707\nhttps://github.com/boot2docker/boot2docker/issues/707 and see if that\nhelps.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/843#issuecomment-108595963\n.\n. wow thanks you!!!\n\nWe have the limitation of needing a mac system, docker is based on top of\nlinux so we get that working using vagrant + vboxmanage as well.\nBut thanks!!!\nOn Wed, Jun 3, 2015 at 9:55 PM, Jonas Bj\u00f6rk notifications@github.com\nwrote:\n\nHave a look at #707\nhttps://github.com/boot2docker/boot2docker/issues/707 and see if that\nhelps.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/843#issuecomment-108595963\n.\n. yes\n. \n",
    "errordeveloper": "Fixed with docker/machine@v0.2.0.\n. ",
    "provegard": "+1\nAlthough this may be a VirtualBox problem - I have had this problem with VirtualBox VMs in general.\nAs a workaround - is it possible to restart networking inside boot2docker in some way?\n. ",
    "imwithye": "I have the same problem. I guess the root directory / does not actually exist in the Git bash environment. Insead, it refers to the Git Home directory which has usr, etc and bin so on. So if any path start with the root path /, it will be translated to the relative path to the Git Home.\nBut still have no idea how to fix it.\n. That's ture. I can also use boot2docker ssh to login the VM and then mount the disk to docker. But, eh, I  also like to just be able to -v /c/path:/someplace.\nIt seems it is a bug of Git Bash. Does anyone tried boot2docker under cygwin? Is that possible to mount the disk? Git Bash will translate all / path to it's installation path so that all unix tool can be used inside the env. Eh, but it is really...not that good.\n. That's ture. I can also use boot2docker ssh to login the VM and then mount the disk to docker. But, eh, I  also like to just be able to -v /c/path:/someplace.\nIt seems it is a bug of Git Bash. Does anyone tried boot2docker under cygwin? Is that possible to mount the disk? Git Bash will translate all / path to it's installation path so that all unix tool can be used inside the env. Eh, but it is really...not that good.\n. @mpas Nice! it also works with docker run -v /$(pwd):/data\n. ",
    "kdemarest": "The current work-around seems to be to create a docker volume, and then share that between docker and your native OS. Here is where I found that solution:\nhttps://github.com/boot2docker/boot2docker/blob/master/README.md\nHaving said that, I'd really like to just be able to -v /c/path:/someplace\n. The current work-around seems to be to create a docker volume, and then share that between docker and your native OS. Here is where I found that solution:\nhttps://github.com/boot2docker/boot2docker/blob/master/README.md\nHaving said that, I'd really like to just be able to -v /c/path:/someplace\n. ",
    "mpas": "I was pointed out to a work around in issue https://github.com/docker/docker/issues/12590 using a double slash seems to work. I checked it locally and it works.\ndocker run -d -v //c/Users/marco/Desktop/data:/data <image name>\nUsing the double slash the host volume is mounted correctly\n. ",
    "exhuma": "This does not seem to work for an interactive session (using winpty). Any ideas?\n. ",
    "danielo515": "Hello @thaJeztah \nI'm not sure I understand what you mean. So, only subdirectories of C:\\Users are shared with boot2docker? Despite what you specify using -v? For example, if I run:\nbash\ndocker run -v //h:/data -w /data --rm -it node bash\nI can only see directories under the path from where I have launched that command, and no files inside it. This means that, inside the docker container I can navigate to /data/some/folder if I have launched the command from /h/some/folder.  Is that the intended behavior?\nRegards\n. Hello @thaJeztah \nThank you very much for your promt and detailed response \nIt sounds a bit twisted, but hey, every workaround is. From your description I understand that theorically I could use virtual box addons to make another folder visible to the virtual machine and be able to mount them. But I'm not sure if that will work with the -v parameter. \n. ",
    "yuval-mntr": "https://forums.docker.com/t/volume-mounts-in-windows-does-not-work/10693/71\n. ",
    "tknerr": "@dave-tucker sure the docker deamon is really started?\nsudo /etc/init.d/docker status says \"Docker daemon is not running\" when I get this...\nProbably a duplicate of #938 \n. @dave-tucker sorry I was wrong. With latest 1.7.1 release I now get the same error message, but \"Docker daemon is running\"\n. ",
    "sravan-bala": "I have the same error. Anybody able to pass through this one? \n. Found this somewhere, all we have to do is disable TLS in boot2docker profile. It worked for me!\nhttps://coderwall.com/p/siqnjg/disable-tls-on-boot2docker\n. ",
    "ashish450001": "@sravan-bala  I tried the suggestion given on https://coderwall.com/p/siqnjg/disable-tls-on-boot2docker but unfortunately it is not helping me. Below is profile and status : \n```\nroot@default:~# cat /var/lib/boot2docker/profile\nEXTRA_ARGS='\n--label provider=virtualbox\n'\nCACERT=/var/lib/boot2docker/ca.pem\nDOCKER_HOST='-H tcp://0.0.0.0:2376'\nDOCKER_STORAGE=aufs\nDOCKER_TLS=no\nSERVERKEY=/var/lib/boot2docker/server-key.pem\nSERVERCERT=/var/lib/boot2docker/server.pem\nEXTRA_ARGS=\"--insecure-registry 10.128.2.3:5000\"\nroot@default:~# /etc/init.d/docker start\nroot@default:~# /etc/init.d/docker status\nDocker daemon is not running\n```\nI am using windows 7 (i know it is not ideal ). docker-machine and docker versions are as below. \nroot@default:~# docker version\nClient:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:49:29 UTC 2015\n OS/Arch:      linux/amd64\nCannot connect to the Docker daemon. Is 'docker -d' running on this host?\ndocker-machine.exe version 0.4.1 (e2c88d6)\n. @sravan-bala  I tried the suggestion given on https://coderwall.com/p/siqnjg/disable-tls-on-boot2docker but unfortunately it is not helping me. Below is profile and status : \n```\nroot@default:~# cat /var/lib/boot2docker/profile\nEXTRA_ARGS='\n--label provider=virtualbox\n'\nCACERT=/var/lib/boot2docker/ca.pem\nDOCKER_HOST='-H tcp://0.0.0.0:2376'\nDOCKER_STORAGE=aufs\nDOCKER_TLS=no\nSERVERKEY=/var/lib/boot2docker/server-key.pem\nSERVERCERT=/var/lib/boot2docker/server.pem\nEXTRA_ARGS=\"--insecure-registry 10.128.2.3:5000\"\nroot@default:~# /etc/init.d/docker start\nroot@default:~# /etc/init.d/docker status\nDocker daemon is not running\n```\nI am using windows 7 (i know it is not ideal ). docker-machine and docker versions are as below. \nroot@default:~# docker version\nClient:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:49:29 UTC 2015\n OS/Arch:      linux/amd64\nCannot connect to the Docker daemon. Is 'docker -d' running on this host?\ndocker-machine.exe version 0.4.1 (e2c88d6)\n. ",
    "aukjan": "@ashish450001   You added the EXTRA_ARGS, overriding the already existing EXTRA_ARGS. Now docker does not have the 'label' provider. Put the '--insecure-registry' in the already existing EXTRA_ARGS. \n. @ashish450001   You added the EXTRA_ARGS, overriding the already existing EXTRA_ARGS. Now docker does not have the 'label' provider. Put the '--insecure-registry' in the already existing EXTRA_ARGS. \n. ",
    "programmerq": "Okay, here are the issues I've found with it so far:\nI downloaded the iso and dropped it in as ~/.boot2docker/boot2docker.iso. I ran boot2docker halt and boot2docker up. I was able to ssh in and see the 64-bit identifier, and all seemed well. Unfortunately, I get the following:\n$ docker version\nClient version: 1.5.0\nClient API version: 1.17\nGo version (client): go1.4.1\nGit commit (client): a8a31ef\nOS/Arch (client): darwin/amd64\nFATA[0000] An error occurred trying to connect: Get https://192.168.59.103:2376/v1.17/version: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\nI decided to fire up another vm with docker-machine:\njefferya@pax:~$ docker-machine create -d virtualbox  --virtualbox-boot2docker-url https://github.com/SvenDowideit/boot2docker/releases/download/x64pr1/boot2docker.iso 64bit-yay\nINFO[0000] Creating SSH key...\nINFO[0000] Downloading boot2docker.iso from https://github.com/SvenDowideit/boot2docker/releases/download/x64pr1/boot2docker.iso...\nINFO[0010] Creating VirtualBox VM...\nINFO[0016] Starting VirtualBox VM...\nINFO[0016] Waiting for VM to start...\nsh: ip: not found\nERRO[0047] Error creating machine: exit status 127\nWARN[0047] You will want to check the provider to make sure the machine and associated resources were properly removed.\nFATA[0047] Error creating machine\njefferya@pax:~$ docker-machine ls\nNAME        ACTIVE   DRIVER       STATE     URL                         SWARM\n64bit-yay            virtualbox   Running   tcp://192.168.99.100:2376\njefferya@pax:~$ docker-machine active 64bit-yay\njefferya@pax:~$ docker-machine env\nFATA[0000] open /Users/jefferya/.docker/machine/machines/64bit-yay/ca.pem: no such file or directory\njefferya@pax:~$ docker-machine ssh\n...\nBoot2Docker version 1.6.0, build tcl6-64-bit-userspace : 8fc908a - Wed Apr 29 04:34:24 UTC 2015\nDocker version 1.6.0, build 4749651\ndocker@64bit-yay:~$ which ip\n/usr/local/sbin/ip\n. Okay, here are the issues I've found with it so far:\nI downloaded the iso and dropped it in as ~/.boot2docker/boot2docker.iso. I ran boot2docker halt and boot2docker up. I was able to ssh in and see the 64-bit identifier, and all seemed well. Unfortunately, I get the following:\n$ docker version\nClient version: 1.5.0\nClient API version: 1.17\nGo version (client): go1.4.1\nGit commit (client): a8a31ef\nOS/Arch (client): darwin/amd64\nFATA[0000] An error occurred trying to connect: Get https://192.168.59.103:2376/v1.17/version: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\nI decided to fire up another vm with docker-machine:\njefferya@pax:~$ docker-machine create -d virtualbox  --virtualbox-boot2docker-url https://github.com/SvenDowideit/boot2docker/releases/download/x64pr1/boot2docker.iso 64bit-yay\nINFO[0000] Creating SSH key...\nINFO[0000] Downloading boot2docker.iso from https://github.com/SvenDowideit/boot2docker/releases/download/x64pr1/boot2docker.iso...\nINFO[0010] Creating VirtualBox VM...\nINFO[0016] Starting VirtualBox VM...\nINFO[0016] Waiting for VM to start...\nsh: ip: not found\nERRO[0047] Error creating machine: exit status 127\nWARN[0047] You will want to check the provider to make sure the machine and associated resources were properly removed.\nFATA[0047] Error creating machine\njefferya@pax:~$ docker-machine ls\nNAME        ACTIVE   DRIVER       STATE     URL                         SWARM\n64bit-yay            virtualbox   Running   tcp://192.168.99.100:2376\njefferya@pax:~$ docker-machine active 64bit-yay\njefferya@pax:~$ docker-machine env\nFATA[0000] open /Users/jefferya/.docker/machine/machines/64bit-yay/ca.pem: no such file or directory\njefferya@pax:~$ docker-machine ssh\n...\nBoot2Docker version 1.6.0, build tcl6-64-bit-userspace : 8fc908a - Wed Apr 29 04:34:24 UTC 2015\nDocker version 1.6.0, build 4749651\ndocker@64bit-yay:~$ which ip\n/usr/local/sbin/ip\n. ",
    "cgcgbcbc": "So when will this pr be released?\n. Depressed that I didn't find that issue even after a long searching... Thank you very much!\n. ",
    "sisao": "Of course I know this doc, but what I wanted, was to create a iso with some images in the registry.\nI got this now, the only disadvantage is the grown initrd.img...\n. ",
    "Mansuro": "Did you set your proxy username and password?\n. ",
    "PavelVanecek": "It might be another issue then. To get the profile settings ready, is it enough to do sudo /etc/init.d/docker restart or it is necessary to run boot2docker restart?\nUpdate:\nThe error message says (after a timeout):\nFATA[0060] Error response from daemon: Get https://index.docker.io/v1/search?q=ubuntu: http: error connecting to proxy http://proxy.mycorporate.com:8080: dial tcp: lookup proxy.mycorporate.com on 8.8.8.4:53: read udp 8.8.8.4:53: i/o timeout\nSo I guess the proxy is set, but is not found in DNS for a reason? I will investigate more.\nUpdate2:\nSetting the proxy to IP address fixes the issue.\n. It might be another issue then. To get the profile settings ready, is it enough to do sudo /etc/init.d/docker restart or it is necessary to run boot2docker restart?\nUpdate:\nThe error message says (after a timeout):\nFATA[0060] Error response from daemon: Get https://index.docker.io/v1/search?q=ubuntu: http: error connecting to proxy http://proxy.mycorporate.com:8080: dial tcp: lookup proxy.mycorporate.com on 8.8.8.4:53: read udp 8.8.8.4:53: i/o timeout\nSo I guess the proxy is set, but is not found in DNS for a reason? I will investigate more.\nUpdate2:\nSetting the proxy to IP address fixes the issue.\n. ",
    "AlexZeitler": "Boot2Docker-cli version: v1.6.0\nGit commit: 9894ae9\n. -d is an unknown flag. Tried -v instead:\nBoot2Docker-cli version: v1.6.2\nGit commit: cb2c3bc\n2015/05/20 09:53:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\nexecuting: C:\\Program Files (x86)\\Git\\bin\\ssh-keygen.exe ssh-keygen -t rsa -N  -f C:\\Users\\Alexander\\.ssh\\id_boot2docker\nGenerating public/private rsa key pair.\nYour identification has been saved in C:\\Users\\Alexander\\.ssh\\id_boot2docker.\nYour public key has been saved in C:\\Users\\Alexander\\.ssh\\id_boot2docker.pub.\nThe key fingerprint is:\n2f:45:b2:da:3d:7d:08:00:b1:29:a6:bb:0f:fc:33:06 Alexander@WIN-J47086P86Q2\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|      o.         |\n|       +         |\n|    o o o .      |\n|   o .   =       |\n|  .     S o      |\n| .E.   o + o .   |\n|  +.  . o + o .  |\n|   ++    . . .   |\n|  .ooo           |\n+-----------------+\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 426d6698-1ffe-4af7-8fa9-3824cee628a4\nSettings file: 'C:\\Users\\Alexander\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/Enable\nHVP 1\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofa\ndein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype\nLinux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu of\nf --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart\n1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio\n --cableconnected1 on\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,20\n22,,22\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...\nProgress state: E_FAIL\nVBoxManage.exe: error: Failed to create the host-only adapter\nVBoxManage.exe: error: Code E_FAIL (0x80004005) - Unspecified error (extended info not available)\nVBoxManage.exe: error: Context: \"int __cdecl handleCreate(struct HandlerArg *,int,int *)\" at line 66 of file VBoxManageHostonly.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. -d is an unknown flag. Tried -v instead:\nBoot2Docker-cli version: v1.6.2\nGit commit: cb2c3bc\n2015/05/20 09:53:51 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\nexecuting: C:\\Program Files (x86)\\Git\\bin\\ssh-keygen.exe ssh-keygen -t rsa -N  -f C:\\Users\\Alexander\\.ssh\\id_boot2docker\nGenerating public/private rsa key pair.\nYour identification has been saved in C:\\Users\\Alexander\\.ssh\\id_boot2docker.\nYour public key has been saved in C:\\Users\\Alexander\\.ssh\\id_boot2docker.pub.\nThe key fingerprint is:\n2f:45:b2:da:3d:7d:08:00:b1:29:a6:bb:0f:fc:33:06 Alexander@WIN-J47086P86Q2\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|      o.         |\n|       +         |\n|    o o o .      |\n|   o .   =       |\n|  .     S o      |\n| .E.   o + o .   |\n|  +.  . o + o .  |\n|   ++    . . .   |\n|  .ooo           |\n+-----------------+\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: 426d6698-1ffe-4af7-8fa9-3824cee628a4\nSettings file: 'C:\\Users\\Alexander\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/Enable\nHVP 1\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofa\ndein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype\nLinux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --synthcpu of\nf --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart\n1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio\n --cableconnected1 on\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe controlvm boot2docker-vm natpf1 ssh,tcp,127.0.0.1,20\n22,,22\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2015/05/20 09:53:53 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...\nProgress state: E_FAIL\nVBoxManage.exe: error: Failed to create the host-only adapter\nVBoxManage.exe: error: Code E_FAIL (0x80004005) - Unspecified error (extended info not available)\nVBoxManage.exe: error: Context: \"int __cdecl handleCreate(struct HandlerArg *,int,int *)\" at line 66 of file VBoxManageHostonly.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. I think the issue is caused by the fact that I'm trying to run boot2docker on Windows 10 (which BTW itselfs runs inside a VMware Workstation / Fusion VM) and VirtualBox is not compatible with Windows 10 right now.\n. ",
    "jsheth7": "Hi,\nI tried doing the following, but are these steps correct?\nboot2docker ssh\nsudo mkdir /var/lib/boot2docker/certs/\ncurl http://curl.haxx.se/ca/cacert.pem > /tmp/cacert.pem\nsudo mv /tmp/cacert.pem /var/lib/boot2docker/certs/cacert.pem\nexit\nboot2docker restart\nThis did not work. Am I doing something wrong?\nI am using boot2docker 1.7.0.\n. ",
    "frol": "@tianon I'm not sure where I should look for information about backports, so I don't know whether it was backported or not. The commit in 4.0 was https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=d6e0b7fa11862433773d986b5f995ffdf47ce672\n. @tianon kernels <4.0 are affected to the bug when you set memory.kmem.limit_in_bytes. Docker does not support this feature yet, so it doesn't affect Docker users directly, but my application uses cgroups directly and does set memory.kmem.limit_in_bytes as a workaround to prevent fork-bombs. There is another feature that would be great to upgrade to; it is pid subsystem in cgroup, which is on its way to the kernel.\nIt seems that they have renamed their branch too. So it is now aufs4-standalone: https://github.com/sfjro/aufs4-standalone/tree/aufs4.0\nDoes it seem right?\n. @tianon You are awesome! Thanks!\n. FYI there is also PR #1372, which partially overlaps with the listed modules.. > How much testing has this had?\nI have combined the kernel options from this and #1372 PRs and built an image which successfully run on my VMware ESXi server and detected the persistent hard drive (thus, my issue #1368 will be resolved with this PR) and also successfully passed my automatic stress-testing suite (it uses quite a few of Docker features and some extra Cgroup capabilities).\n@unsignedint To build boot2docker.iso, run these two commands:\ndocker built -t boot2docker .\ndocker run --rm boot2docker > boot2docker.iso\nHere is the image I have built: https://drive.google.com/file/d/1uIeMp5UE6xswZdoU4Xn7nOAvsJ-cefix/view?usp=sharing. FYI there is also PR #1370, which partially overlaps with the listed modules.. ",
    "phuslu": "Hi @SvenDowideit , Thank you for your comments.\nTo \"kick the kernel sync\", I use partprobe to implement. It is included in parted package and the size is about 180KB.\nDo you think it is acceptable?\n. Hi @tianon, This is a common issue of linux fdisk.\nSome fdisks (util-linux) do sync, and some fdisks (busybox) do not.\nHere is a related RedHat KB https://access.redhat.com/solutions/57542\nHi @SvenDowideit, I've changed sleep to parted with commit --amend in this pull request. Or do you prefer me to keep the commit history?\nCould you have a look? Also would be good if you have other solution for this problem.\n. Hi @tianon, This is a common issue of linux fdisk.\nSome fdisks (util-linux) do sync, and some fdisks (busybox) do not.\nHere is a related RedHat KB https://access.redhat.com/solutions/57542\nHi @SvenDowideit, I've changed sleep to parted with commit --amend in this pull request. Or do you prefer me to keep the commit history?\nCould you have a look? Also would be good if you have other solution for this problem.\n. Thank you @SvenDowideit . I've rebased it. :)\n. @tianon Thanks, we've started the testing as you pointed. +1\n. ",
    "irom77": "right, I uploaded iso to datastore and now it boots correctly;) But I was confused with static address not surviving reboot until I used /var/lib/boot2docker/bootlocal.sh instead /opt/bootlocal.sh for setup, thnx\n. ",
    "arohter": "Confirmed :(\n. ",
    "stvnwrgs": "Wrong Tab => New Ticket -.- #814 \n. Found the isssue:\nMy local .ssh/config had an issue. localhost was rewritten to localhost.xxx.xxx\nBecause of -o LogLevel=quiet when getting the ip there was no output here. I suggest to remove the quit at loglevel create a check if localhost is resolvable.\n. ",
    "rubbish": "873 will fix this as well.\n. @tianon Updated.\n. ",
    "courajs": "Sorry, this belongs in boot2docker-cli\n. ",
    "kuc": "Fixed after running:\nVBoxManage modifyvm \"boot2docker-vm\" --natdnshostresolver1 on\n. ",
    "going1000": "ok\uff0cthanks\n. ",
    "deAtog": "This is a bug in the Virtual Box Guest Additions for Linux. A patch has recently been accepted to correct this issue for Linux kernels > 2.6.30. For more information see bugs: #819, #17053, #9069, #12597, and #14920. With any luck the fix for this issue should be in the Virtual Box 5.2.1 release. Relevant change set is here: #69165\nCurrent workaround is to mount the folders from Windows via CIFS or NFS if using MacOS as stated here: Virtualbox shared folders broken.. This is a bug in the Virtual Box Guest Additions for Linux. A patch has recently been accepted to correct this issue for Linux kernels > 2.6.30. For more information see bugs: #819, #17053, #9069, #12597, and #14920. With any luck the fix for this issue should be in the Virtual Box 5.2.1 release. Relevant change set is here: #69165\nCurrent workaround is to mount the folders from Windows via CIFS or NFS if using MacOS as stated here: Virtualbox shared folders broken.. This is a bug in the Virtual Box Guest Additions for Linux. A patch has recently been accepted to correct this issue for Linux kernels > 2.6.30. For more information see bugs: #819, #17053, #9069, #12597, and #14920. With any luck the fix for this issue should be in the Virtual Box 5.2.1 release. Relevant change set is here: #69165. This is a bug in the Virtual Box Guest Additions for Linux. A patch has recently been accepted to correct this issue for Linux kernels > 2.6.30. For more information see bugs: #819, #17053, #9069, #12597, and #14920. With any luck the fix for this issue should be in the Virtual Box 5.2.1 release. Relevant change set is here: #69165. @tianon This issue is fixed in VirtualBox Guest Additions 5.2.2. Please update accordingly. Thanks.. @tianon This issue is fixed in VirtualBox Guest Additions 5.2.2. Please update accordingly. Thanks.. ",
    "niloc132": "This causes issue in any docker wiring that is set up to share timezone correctly with containers.\n```\n[colin@trymon boot2docker-xhyve (master)]$ docker run -v /etc/localtime:/etc/localtime:ro -it --rm mongo bash\nUnable to find image 'mongo:latest' locally\nlatest: Pulling from library/mongo\nb1d080d9151f: Pull complete \n59a090c1706e: Pull complete \nf53919fe149a: Pull complete \nc269a0ead17c: Pull complete \n26dcb1a49c4a: Pull complete \nb9d2e7e8c9ff: Pull complete \n43acddfebe5b: Pull complete \n510a7c497746: Pull complete \nfefaf29784b7: Pull complete \n2d187f187955: Pull complete \nfe0d7236a147: Pull complete \nbf4514e79915: Pull complete \nd939f57bf29c: Pull complete \n5f9d083f5bfb: Pull complete \n2c273afa05c0: Pull complete \n958ba566c40a: Pull complete \n5e53867deb23: Pull complete \nlibrary/mongo:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.\nDigest: sha256:76fdd96ebcdece6a38b4caffc6e2fabf4e1934e944c792269b497f3edfeaa376\nStatus: Downloaded newer image for mongo:latest\nError response from daemon: Cannot start container 7c052ef5cd148dc94a16a4ae86af79b5bd03fff1a0a45881edddadd773976b01: [8] System error: not a directory\n[colin@trymon boot2docker-xhyve (master)]$ \n```\nSame workaround applies:\ndocker@boot2docker:~$ sudo rm -rf /etc/localtime/\ndocker@boot2docker:~$ sudo touch /etc/localtime\ndocker@boot2docker:~$ ^D\n[colin@trymon boot2docker-xhyve (master)]$ docker run -v /etc/localtime:/etc/localtime:ro -it --rm mongo bash\nroot@3bab6adb227a:/#\n. ",
    "scarolan": "Changing the virtualbox forwarded port to 2376 gives a different error:\n\u279c  ~  export DOCKER_HOST=tcp://localhost:2376\n\u279c  ~  docker ps\n2015/05/27 10:34:46 malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\nbut docker commands work fine inside the boot2docker VM\ndocker@boot2docker:~$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAME\n. ",
    "polishdeveloper": "Up, have same issue, from time to time I get Couldn't connect to Docker daemon at https://192.168.59.103:2376 - is it running? then I have to re-run command few times.\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\nSystem: Yosemite 10.10.4\nI mostly happens inside a docker container (we're using docker development container aka docker inception) \n. ",
    "giodegas": "I need to build the VirtualBox Guest Additions (VBA) in order to have X apps use the underline graphics card at the best. \nAn alternative would be to have the VBA installed at the boot2docker level.\n( I read last year discussions about VBA in boot2docker to have shared folders, but did not found any discussion about VBA to optimize X with OpenGL).\nHaving the possibility to build VBA inside the docker image would be nice.\n. ",
    "ivotron": "\nI wonder if we should be adding source & header snapshots to the releases\n\n@SvenDowideit that would be awesome. Currently, I'm doing:\nbash\ndocker-machine ssh dev \\\n  \"sudo sh -c 'wget https://gist.githubusercontent.com/ivotron/131629dc8b144f015397/raw/48e4743a384a135c896a26dbffe28801e42a3faa/install-headers.sh -O - | sh'\"\nThe gist is loosely based on the Dockerfile (I don't mess with AUFS stuff). I also use an image with all the build dependencies for building. Then, for containers needing the headers:\nbash\ndocker run --rm -ti \\\n  -v /usr/src:/usr/src \\\n  -v /lib/modules:/lib/modules \\\n  -v /linux-kernel:/linux-kernel \\\n  debian:jessie\nwith the caveat that I need to do make -C /linux-kernel/ scripts sometimes (e.g. when switching from alpine to debian-based distros), not sure why. Also, every time I reboot the boot2docker VM, the /linux-kernel folder goes away.\n. ",
    "roylee0704": "The reason that I closed this is because it's not an error, I've figured that I have not install virtualbox yet.  Problem is solved after I've installed that.\n. ",
    "mark-veenstra": "Did you find any solution for debugging in chrome://inspect#devices?. ",
    "cgocmenoglu": "I have the same problem. I have Turkish characters in my user folder name (such as \"\u011f\") and can't start boot2docker on Windows 8.\n. I have the same problem. I have Turkish characters in my user folder name (such as \"\u011f\") and can't start boot2docker on Windows 8.\n. ",
    "DogPawHat": "I mangaed to find a workaround by using Git Bash on windows instead Powershell:\n$ boot2docker up\n$ eval $(boot2docker shellinit)\nApparently PS translateds parameters to ascii before piping them into .exe\nhttp://blogs.msdn.com/b/powershell/archive/2006/12/11/outputencoding-to-the-rescue.aspx\n. \nHere this should have everything you need\n. This is what my users folder looks like at the moment\n\nSame folder in both Ciar\u00e1n and Ciar?n\n\n\n. I deleted Ciar?n entirely, ran boot2docker delete and boot2docker init again, Ciar?n popped up again with the same spilt.\n. ",
    "saulshanabrook": "I am on a VPN currently. However I did try doing boot2docker stop; boot2docker up after connecting to the VPN and I still have the same problem.\n. OK weird, i just restarted my machine and tried it again and it is working.\n. ",
    "rmg": "According to this blog post, elastic search was turned into an \"official\" repo at the beginning of the year.\nBased on the elasticsearch page on docker hub, you should be able to do docker pull elasticsearch.\n@arpras does that get you up and running?\nedit: based on a quick look at the article referenced, you'll also want to do docker pull redis since it is also now an official repo.\n. According to this blog post, elastic search was turned into an \"official\" repo at the beginning of the year.\nBased on the elasticsearch page on docker hub, you should be able to do docker pull elasticsearch.\n@arpras does that get you up and running?\nedit: based on a quick look at the article referenced, you'll also want to do docker pull redis since it is also now an official repo.\n. Doesn't this also change how those scripts can affect variables, since they would no longer run in a separate process/environment but would instead run in the caller's environment?\n. Doesn't this also change how those scripts can affect variables, since they would no longer run in a separate process/environment but would instead run in the caller's environment?\n. On a more constructive note changing the . to sh or /bin/sh would preserve the current behaviour but let it work without the execute bit.\n. On a more constructive note changing the . to sh or /bin/sh would preserve the current behaviour but let it work without the execute bit.\n. LGTM :shipit:\n(said without any authority whatsoever)\n. @tianon the current check is for file existence, not executability, so if the file exists and isn't executable it would currently produce an error (and possibly exit, depending on shell options).\n. ",
    "arpras": "Thanks.  I also tracked similar issue on \nhttps://github.com/dockerfile/elasticsearch/issues/44\nThanks again. Closing\n. ",
    "sboily": "Hello, i'm also interested, not for desktop, but i need audio for my telecom dev plateform. I'm running linphone on docker but this is impossible with docker-machine.\n. ",
    "malex984": "AFAIK the standard boot2docker is missing a big chunk of VirtualBox Guest Additions and too many kernel modules. Therefore one has to devise his own image for desktop use. \nps: It seems that hyper_v.patch is missing in your PR... \n. ",
    "cdenneen": "Has anyone gotten this to work with OSX? Using this or even the new docker for mac\n. Has anyone gotten this to work with OSX? Using this or even the new docker for mac\n. ",
    "xiaomingplus": "sorry,the chrome not download all file\n. ",
    "zchee": ":tada:\n. @legal90 awesome!\n. @tianon Thanks reply :)\nI do not yet build 1.10.1, checked version is 1.10.0.\nResult,\n``` bash\n\nls -l boot2docker.iso\n-rw-r--r-- 1 zchee staff 33554432 Feb  5 05:51 boot2docker.iso\n~\nls -l boot2docker-virt9p.iso\n-rw-r--r-- 1 zchee staff 33554432 Feb 11 00:12 boot2docker-virt9p.iso\nstat boot2docker.iso\ndevice  16777223\ninode   18445056\nmode    33188\nnlink   1\nuid     501\ngid     20\nrdev    0\nsize    33554432\natime   1455317480\nmtime   1454619117\nctime   1455317438\nblksize 4096\nblocks  65536\nlink\nstat boot2docker-virt9p.iso\ndevice  16777223\ninode   18445033\nmode    33188\nnlink   1\nuid     501\ngid     20\nrdev    0\nsize    33554432\natime   1455317467\nmtime   1455117166\nctime   1455317408\nblksize 4096\nblocks  65536\nlink\n```\n\nIt seems completely unchanged the size.(I'm surprised...)\nand, Here is patched iso download link.\nhttps://github.com/zchee/boot2docker-legacy/releases/tag/v1.10.0-virtio-9p\n. @tianon Thanks fast response!!\n:tada: \nI'm looking forward to next release version :)\n. ",
    "adambiggs": "Great stuff! I've been working with @frapposelli's iso today and haven't had any issues so far. :beers: \n. ",
    "rexdf": "It's true. Where can I download a single docker.exe?\nbash\n$docker version\nClient version: 1.6.0\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 4749651\nOS/Arch (client): windows/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.2\nGit commit (server): 7c8fca2\nOS/Arch (server): linux/amd64\n. ",
    "FeeiCN": "OK\n. ",
    "tinchou": "As a total beginner that just wants to set up a dev environment in its Windows machine, I'd love to see docker-compose included by default. And even better if something like boot2docker compose was available from CMD or PS.\n. As a total beginner that just wants to set up a dev environment in its Windows machine, I'd love to see docker-compose included by default. And even better if something like boot2docker compose was available from CMD or PS.\n. ",
    "ghahramani": "@dduportal Hi, now docker-compose supports all operating system, so I think it's good time to add it to boot2docker\nyou can check it here\nhttps://docs.docker.com/compose/install/\n. @dduportal Hi, now docker-compose supports all operating system, so I think it's good time to add it to boot2docker\nyou can check it here\nhttps://docs.docker.com/compose/install/\n. ",
    "kumavis": "Boot2Docker-cli version: v1.6.2\nGit commit: cb2c3bc\ndocker@boot2docker:~$ docker -v\nDocker version 1.6.2, build 7c8fca2\n. Dockerfile:\n```\nFROM node:0.12\nreplace this with your application's default port\nEXPOSE 7001\n```\n. resolved via this\n. ",
    "freeznet": "same problem\n. same problem\n. ",
    "cameronbrunner": "As another workaround, compiling rsync on a boot2docker instance is trivial.  I was able to build a rsync 3.1.1 tcz without any problems by installing the TCL build environment packages and following their instructions http://wiki.tinycorelinux.net/wiki:creating_extensions.\nI have my files and a build here if you are interested:\nhttps://github.com/cameronbrunner/tinycorelinux-extensions/releases/tag/rsync-0.0.1\n. FYI - They took my rsync contribution and uploaded it today.  Expect to see it in all of the mirrors shortly. \nhttp://www.tinycorelinux.net/6.x/x86_64/tcz/updates/updatelist.txt\nOnce replicated to all mirrors this issue should go away.\n. @jakirkham Good catch :)  The tcl guys just published the new rsync.tcz.dep 21 hours ago.\n. ",
    "efosao": "Deleting the boot2docker image with boot2docker delete and creating a new one with boot2docker init resolved the issue for me.\nIt doesn't change the fact that the upgrade from 1.6 -> 1.7 is broken, but at least you can get past it. \n. You will also need to update your environment variable in .bash_profile too, because the DOCKER_HOST  ip/port may have changed.\n. ",
    "GeertVL": "+1 for me. .bash_profile is not present when you freshly install boot2docker.\n. ",
    "yonigoldberg": "+1 having the same problem\n. ",
    "mingfang": "+1\nIt's seems everyone at my office is suffering from this.\n. ",
    "zhoutaoo": "+ 1\nI have same problem\n\u279c  ~  boot2docker version \nBoot2Docker-cli version: v1.7.0\nGit commit: 7d89508\n\u279c  ~  docker  version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): darwin/amd64\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/version: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\n. ",
    "mrw": "I'm seeing this as well but it's on a from-scratch install of the latest version, not an upgrade.\n. ",
    "eschizoid": "Thanks @sylvinus your post work for me! \n. ",
    "samkelleher": "The fix in #824 seems to be a partial fix since it hangs the VMbox and only works one time. In my case I'm using Google Cloud CLI gcloud commands to manage their hosted VMs and it ceases to function since it can't establish a connection to docker.\nERROR: Failed to connect to Docker Daemon due to: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:581)\nERROR: (gcloud.preview.app.deploy) Couldn't connect to the docker daemon.\nPlease check if the environment variables DOCKER_HOST, DOCKER_CERT_PATH and DOCKER_TLS_VERIFY are set correctly. If you are using boot2docker, you can set them up by executing the commands that are shown by:\nboot2docker shellinit\n. The fix in #824 seems to be a partial fix since it hangs the VMbox and only works one time. In my case I'm using Google Cloud CLI gcloud commands to manage their hosted VMs and it ceases to function since it can't establish a connection to docker.\nERROR: Failed to connect to Docker Daemon due to: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:581)\nERROR: (gcloud.preview.app.deploy) Couldn't connect to the docker daemon.\nPlease check if the environment variables DOCKER_HOST, DOCKER_CERT_PATH and DOCKER_TLS_VERIFY are set correctly. If you are using boot2docker, you can set them up by executing the commands that are shown by:\nboot2docker shellinit\n. @gesellix After many boot2docker delete && boot2docker init && boot2docker start, then ssh'ing the patch, then running eval \"$(boot2docker shellinit)\" to set the env variables, gcloud still won't connect (although the VM seems accessible to boot2docker commands). The variables (like DOCKER_HOST) are the same ones that init outputs. Indeed, shellinit shows the message that the vars are already set.\n. @gesellix After many boot2docker delete && boot2docker init && boot2docker start, then ssh'ing the patch, then running eval \"$(boot2docker shellinit)\" to set the env variables, gcloud still won't connect (although the VM seems accessible to boot2docker commands). The variables (like DOCKER_HOST) are the same ones that init outputs. Indeed, shellinit shows the message that the vars are already set.\n. ",
    "holmesjr": "On installing 1.7.0 I had the this issue on Yosemite. I've resorted to https://coderwall.com/p/siqnjg/disable-tls-on-boot2docker.\n. ",
    "warp-x": "Thank you @zh-lab! \n. ",
    "brianbianco": "I too have run into this issue.  @buckett solution worked for me, but I also have the follow up problem of it breaking on a restart.\n. ",
    "amancevice": "@brianbianco and I were able to work around this, as he said above. But the restart problem will be fairly oppressive going forward.\n. ",
    "mboersma": "+1 for a fix to this. I haven't found a workaround that persists after boot2docker restart. \n. ",
    "BlueHotDog": ":+1: same here!!\nplease help.\n. ",
    "murphstein": "Docker noob and hit this on OS X 10.9.5 with a new install of b2d from the Docker \"Get Started\" page (ouch), which uses a pre-existing install of VirtualBox.  After switching from WiFi+VPN to directly cabled to a switch in the office, started seeing the x509 cert errors.  The b2d delete/init sequence recovered it.  \n$ boot2docker version\nBoot2Docker-cli version: v1.7.0\nGit commit: 7d89508\n$ docker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): darwin/amd64\nServer version: 1.7.0\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 0baf609\nOS/Arch (server): linux/amd64\n. Docker noob and hit this on OS X 10.9.5 with a new install of b2d from the Docker \"Get Started\" page (ouch), which uses a pre-existing install of VirtualBox.  After switching from WiFi+VPN to directly cabled to a switch in the office, started seeing the x509 cert errors.  The b2d delete/init sequence recovered it.  \n$ boot2docker version\nBoot2Docker-cli version: v1.7.0\nGit commit: 7d89508\n$ docker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): darwin/amd64\nServer version: 1.7.0\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 0baf609\nOS/Arch (server): linux/amd64\n. ",
    "aidanlister": "running boot2docker ssh 'sudo /etc/init.d/docker restart' fixes the problem for me, but needs to be re-run each time boot2docker is restarted which is annoying.\n. ",
    "leftdevel": "For the record, @aidanlister's workaround worked for me. Using v1.7 on osx Yosemite. Sadly it's not a proper fix as he mentions.\n. For the record, @aidanlister's workaround worked for me. Using v1.7 on osx Yosemite. Sadly it's not a proper fix as he mentions.\n. ",
    "vielmetti": "Just echoing others experience with this and the problems previously reported. I'll second the request for a better test setup for OS X so that broken releases don't make it through QA without problems like this being noted. (On the other hand it's a .0 release so i should expect something to go wrong?)\n. @jdemaris Have you tried\nboot2docker ssh sudo /etc/init.d/docker restart\nrather than delete and init? It's a lot faster. (Still a hack but at least an easier to manage hack)\n. Well, @charford - #960 should help this out, but there is a race condition between eth1 coming up and the cert being generated. If your DHCP server is unnaturally slow the race condition will probably still be triggered.\n. Thanks @charford I plan to try the fix when it comes out in the 1.7.1 & will report back then! \n. @neilellis and @scawa1952 - if you follow the path of restarting docker inside the VM instead of delete and init, you can save a lot of time. https://github.com/boot2docker/boot2docker/issues/938#issuecomment-118123208 is the relevant comment.\n. ",
    "isuftin": ":heavy_plus_sign: :one: \nWhile $ boot2docker delete && boot2docker init && boot2docker up && $(boot2docker shellinit) solves the issue, all of the images and data I previously had is now gone.\nUsing --tlsverify=false works but is not a long term solution and does not lend itself well to any higher level bash scripts I may be using to orchestrate some docker stuff.\nboot2docker ssh 'sudo /etc/init.d/docker restart' works as well when I am seeing the x509 certificate issue but this will happen any time I change IPs T_T\n. @jpirkey Nope, didn't try that. I will do so the next time I run into this issue. I assume this is probably something we want to add to /var/lib/boot2docker/profile immediately after boot2docker init.\n. @jpirkey Sounds good. Following @ https://github.com/boot2docker/boot2docker/pull/411 and hoping it makes it into the next rls\n. ",
    "jpirkey": "Modifying one file seems like a minor inconvenience. You don't have to recreate the entire VM.  @isuftin did you try that fix?  It worked for me and seems to have a number of other people.\n. @isuftin You can do it anytime.  You'll just need to reboot the vm after you do.  I waited until it happened again (after host machine reboot), then did applied the fix (mostly because I wanted to see if it was reproducible).\n. ",
    "robertoandrade": "Perhaps the upgrade process of boot2docker should do that automatically once it's done? :)\n. The other thing I noticed is that once I stopped the first user VM and started the second one (via boot2docker up) both had different host-only network interfaces associated with each other but using the same IP/DHCP configuration, creating a conflict in connecting from the second user account to the appropriate VM (shouldn't it be using a different subnet?)\n. ",
    "sfcoy": "boot2docker ssh 'sudo /etc/init.d/docker restart' may be working for some people but it certainly did not work for me. This was following 1.6.1(?) -> 1.7.0 upgrade. I am using the previously mentioned patchy-hack from the issue #824 comment.\n. ",
    "zevmo": "+1\nbecoming super annoying\n. ",
    "jdemaris": "+1 I've had to delete and init four times in the past 24 hours and re-downloading the cache is murdering me\n. Thanks @vielmetti. Just saw that on @SvenDowideit's comment and it does indeed make this a bit faster to recover\n. ",
    "nguoianphu": "Thanks @zh-lab for this.\nboot2docker ssh 'sudo /etc/init.d/docker restart'\n. ",
    "rtuin": "Thanks for fixing this in the upcoming 1.7.1!\n. ",
    "pigletfly": "@zh-lab's fix works for me \n. ",
    "ruslanmalogulko": "I experienced the same problem, until i added the file\ncat ~/.dockercfg\n{\n    \"https://index.docker.io/v1/\": {\n        \"auth\": \"somestring\",\n        \"email\": \"my@email\"\n    }\n}\nbecause before config was placed at ~/.docker/config.json insead. may be this could help for someone else\n. ",
    "rockaja": "Running boot2docker upgrade - fixed this for me.\n. ",
    "laguiz": "Fixed with @zh-lab command : boot2docker ssh 'sudo /etc/init.d/docker restart'\n. ",
    "synotna": "On Windows,\n- fresh install of boot2docker\n- run boot2docker upgrade (says up to date, but downloads the ISO again anyway?)\n$ docker run hello-world\nAn error occurred trying to connect: Post https://192.168.59.103:2376/v1.19/cont\nainers/create: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.\n59.103\n- boot2docker delete then init\n$ docker run hello-world\nAn error occurred trying to connect: Post https://192.168.59.103:2376/v1.19/cont\nainers/create: dial tcp 192.168.59.103:2376: ConnectEx tcp: A connection attempt\n failed because the connected party did not properly respond after a period of t\nime, or established connection failed because connected host has failed to respo\nnd.\n- exiting minigw and re-opening boot2docker works\n. ",
    "shaunc": "+1 ... above noted that release to fix 0.7.1 is waiting for docker 0.7.1 -- but we've had docker 0.7.1rc1 for almost a week now. Why not boot2docker 0.7.1rc1? (or just 0.7.1?)\n. ",
    "devries": "I think it would be best not to have to depend on docker making an update for boot2docker to be able to make an update. I would encourage you to add a field to the versioning just for boot2docker to use the way debian packages have version numbers added by the package maintainers. This would allow for an easier mid-cycle release for bug fixes or even to address security vulnerabilities.\n. ",
    "Hokutosei": "+1 oh please fix this soon. cant push to gcloud docker\n. ",
    "maguowei": "+1 I have the same problem!\n. I have the same problem\n. ",
    "neilellis": "+1 please, please slow down development and increase testing - I'm very grateful for all your hardwork it just get's spoilt by this: https://www.dropbox.com/s/1zsqfgm91puk58h/Screenshot%202015-07-10%2014.09.52.png?dl=0\n. @vielmetti thanks, I did that first time round :)\n. ",
    "scawa1952": "This \"bug\" is 22 days old.  It would seem that they would have fixed it by now.  This is a MAJOR annoyance.  Each time I reboot my work laptop, I have to docker delete and init and lose all the base images I have downloaded.  Very aggravating.\n. @vielmetti  Thanks.....  however, he still gets the error\nupdate:\nAh did not see the following post where he did a\n\nboot2docker ssh 'sudo /etc/init.d/docker restart'\n\nthis works and I'll put it as an alias in my bash_profile.\n. ",
    "chevdor": "I got the same issue upgrading from an ancient version.\nI deleted the VM and things worked again. However, today the issue occurs again!\nThe solution of doing a boot2docker stop && boot2docker delete && boot2docker init fixed the issue. \n. I prefer the option from @timlesallen to the others as the others wipe out whatever images/containers you had.\n. ",
    "jamime": "Same experience here on 1.7 (I did not upgrade, fresh install) on Windows.\n. My boot2docker virtual machine was set to the wrong host-only adapter. This article helped me narrow it down: https://x86x64.wordpress.com/2015/05/03/docker-on-windows-fata0021-an-error-occurred-trying-to-connect/\nI simply removed all host-only adapters, destroyed the boot2docker vm and started again but I'm sure there are less drastic measures you can take.\n. ",
    "mkobit": "This is the bash alias I have been using:\nalias b2dinit=\"boot2docker up \\\n     && \\$(boot2docker shellinit) \\\n     && boot2docker ssh 'sudo /etc/init.d/docker restart'\"\n. ",
    "marvinosswald": "+1 fixed it for me too\n. ",
    "vivekjuneja": "+1 fixed for me as well\n. ",
    "thenikso": "+1\n. ",
    "MiguelPeralvo": "I had the same issue, installed 1.7.1 and the problem is now gone. Thanks b2d team!\n. ",
    "dmoore247": "Hit this problem too, happy to see there is a fix. It installed, but failed the same way as above. The reported client version was 1.7.1 so the newever version was installed. I banged around for 20 minutes to fully un-install boot2docker and verify that VBOX was up to date. After a full un-install and install of boot2docker, it worked!\nPlease note, the https://docs.docker.com/mac/step_one/ page should be updated to point to the 1.7.1 release download: https://github.com/boot2docker/osx-installer/releases/download/v1.7.1/Boot2Docker-1.7.1.pkg\n. ",
    "aluenkinglee": "\nboot2docker ssh 'sudo /etc/init.d/docker restart'\n\nthanks @zh-lab \n. > boot2docker ssh 'sudo /etc/init.d/docker restart'\nthanks @zh-lab \n. ",
    "lordkada": "Hmmm... maybe I'm wrong but I think I hit this problem again... (or at least I thought I shouldn't use again  boot2docker ssh 'sudo /etc/init.d/docker restart' with b2d 1.7.1).\nI cleaned up and reinstalled b2d from scratch, but after restarting I encountered the problem again:\n``\nCarlos-MacBook-Pro:bin lordkada$ boot2docker init\nInitialization of virtual machine \"boot2docker-vm\" complete.\nUseboot2docker up` to start it.\nCarlos-MacBook-Pro:bin lordkada$ boot2docker up\nWaiting for VM and Docker daemon to start...\n.........................ooooooooooooooooooooo\nStarted.\nWriting /Users/lordkada/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/lordkada/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/lordkada/.boot2docker/certs/boot2docker-vm/key.pem\nYour environment variables are already set correctly.\nCarlos-MacBook-Pro:bin lordkada$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nCarlos-MacBook-Pro:bin lordkada$ boot2docker stop\nCarlos-MacBook-Pro:bin lordkada$ boot2docker up\nWaiting for VM and Docker daemon to start...\n..............oooo\nStarted.\nWriting /Users/lordkada/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/lordkada/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/lordkada/.boot2docker/certs/boot2docker-vm/key.pem\nYour environment variables are already set correctly.\nCarlos-MacBook-Pro:bin lordkada$ docker ps\nAn error occurred trying to connect: Get https://192.168.59.103:2376/v1.19/containers/json: x509: certificate is valid for 127.0.0.1, 10.0.2.15, not 192.168.59.103\n```\nI'm running boot2docker v1.7.1:\nCarlos-MacBook-Pro:bin lordkada$ boot2docker version\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\nWhat I'm missing?\n. @nathanleclaire & @chiefy - thanks for your support. Yes, the .iso was still old and I forced an upgrade with boot2docker upgrade. Now it works!\nI'm not 100% sure, but when I uninstalled boot2docker (I use brew cask) I forgot to wipe the .bootdocker folder (or at least the .iso)... now I presume that, for safety, the .iso is not overwritten by a fresh install...\nThanks again! \n. ",
    "chiefy": "@lordkada try this:\nbash\n$ docker --version && boot2docker ssh docker --version\nYou should get the same info twice:\nDocker version 1.7.1, build 786b29d\nDocker version 1.7.1, build 786b29d\nIf not, then yeah: you may be having issues. Try boot2docker delete && boot2docker up but it says you re-installed? That's odd.\n. ",
    "edoardoc": "boot2docker upgrade did it for me:\n``` bash\n~ boot2docker upgrade\ndocker is up to date (1.7.1), skipping upgrade...\nboot2docker is up to date (v1.7.1), skipping upgrade...\nLatest release for github.com/boot2docker/boot2docker is v1.7.1\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.7.1/boot2docker.iso\n    to /Users/eddy/.boot2docker/boot2docker.iso\nWaiting for VM and Docker daemon to start...\n...............oooooooooo\nStarted.\nWriting /Users/eddy/.boot2docker/certs/boot2docker-vm/ca.pem\nWriting /Users/eddy/.boot2docker/certs/boot2docker-vm/cert.pem\nWriting /Users/eddy/.boot2docker/certs/boot2docker-vm/key.pem\nYour environment variables are already set correctly.\n```\n. ",
    "mhawila": "boot2docker delete && boot2docker init && boot2docker start \nfixed the problem for me. \n. boot2docker delete && boot2docker init && boot2docker start \nfixed the problem for me. \n. ",
    "zysam": "fix the problem for me\ndocker \u5b89\u88c5\u51c6\u5907\nenv: win10 64bit\ndependencies: \n    docker: 1.8.0\n    boot2docker.iso: 1.8.0\n    boot2docker-cli: 1.7.1\n    virtuaBox: 5.0.1(\u6d4b\u8bd5\u7248)\n    git: 1.9.5.msysgit.1\ndocker \u542f\u52a8\n\u547d\u4ee4\u884c\u4e0b\uff1a\n//\u521d\u59cb\u5316\nboot2docker init\n//\u542f\u52a8\nboot2docker up(\u62a5\u9519, ssh\u8ba4\u8bc1\u65e0\u6548)\n//\u8865\u4e0a, \u6210\u529f\nboot2docker ssh\n\u56e0\u4e3a\uff1a\nssh docker@192.168.59.103 \u8fd0\u884c\u53c2\u6570\u4e3a\n2015/08/13 11:47:27 executing: E:\\Program Files\\Git\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\sysam\\.ssh\\id_boot2docker docker@localhost tar c /home/docker/.docker/*.pem\nboot2docker ssh \u8fd0\u884c\u53c2\u6570\u4e3a\n2015/08/13 11:47:33 executing: E:\\Program Files\\Git\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\sysam\\.ssh\\id_boot2docker docker@localhost\n\u591a\u4e86 tar c /home/docker/.docker/*.pem\n. ",
    "mooreniemi": "hmm i did boot2docker upgrade and i didnt see that work.\n. ",
    "josiah14": "+1.  I'm experiencing this issue on Mavricks and the latest version of boot2docker.\n. ",
    "lypanov": "+1\n. ",
    "smithwinston": "+1\nVirtualBox 5 was released today.\n. ",
    "soberstadt": "+1\n. ",
    "movie4": "Vagrant debug info\nStdout:\n INFO interface: Machine: error-exit [\n\"VagrantPlugins::DockerProvider::Errors::ExecuteError\",\n\"A Docker command executed by Vagrant didn't complete successfully!\\nThe command run along with the output from the command is shown\\nbelow.\\n\\nCo\nmmand: \\\"docker\\\" \\\"build\\\" \\\"--tag=itcase/myproject\\\" \\\"/mnt/docker_build_3e689d\n65f93ff0d2e6b09568619ba4e3\\\"\\n\\nStderr: Sending build context to Docker daemon 5\n24.4 kB\\rSending build context to Docker daemon 1.079 MB\\rSending build context\nto Docker daemon 1.632 MB\\rSending build context to Docker daemon  2.17 MB\\rSend\ning build context to Docker daemon 2.705 MB\\rSending build context to Docker dae\nmon 3.262 MB\\rSending build context to Docker daemon  3.82 MB\\rSending build con\ntext to Docker daemon 4.377 MB\\rSending build context to Docker daemon 4.934 MB\\\nrSending build context to Docker daemon 5.491 MB\\rSending build context to Docke\nr daemon 6.048 MB\\rSending build context to Docker daemon 6.605 MB\\rSending buil\nd context to Docker daemon 7.162 MB\\rSending build context to Docker daemon 7.71\n9 MB\\rSending build context to Docker daemon 8.276 MB\\rSending build context to\nDocker daemon 8.801 MB\\rSending build context to Docker daemon 9.336 MB\\rSending\n build context to Docker daemon 9.884 MB\\rSending build context to Docker daemon\n 10.35 MB\\r\\r\\nSending build context to Docker daemon \\r\\n2015/06/22 12:46:29 Er\nror: unexpected EOF\\n\\nStdout: \"]\n. Issue copy on https://github.com/mitchellh/vagrant/issues/5854\n. ",
    "darend": "Also seeing the issue with 1.7.0. Happy to provide anything that would assist in diagnosing.\n. ",
    "pgkelley4": "I don't believe this is fixed. I am still seeing this on the latest boot2docker (1.7.1).\nboot2docker restart fixes the issue, but is required every time your network connectivity changes!\n. ",
    "jingles": "if you use virtualbox, you can pause the machine and resume it and it will attempt to restore outbound network connections.\n\n. if you use virtualbox, you can pause the machine and resume it and it will attempt to restore outbound network connections.\n\n. ",
    "ripperdoc": "I have the same problem, it applies to my Swedish language file names as well. Please check this!\n. I have the same problem, it applies to my Swedish language file names as well. Please check this!\n. ",
    "tduchateau": "Looks like downgrading VirtualBox from 4.3.28 to 4.3.26 fixed this. However, even after having installed the Boot2docker v1.7.0 exe, boot2docker version returns well:\n$ boot2docker version\nBoot2Docker-cli version: v1.7.0\nGit commit: 7d89508\nBut:\n$ boot2docker ssh\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.6.0, build master : a270c71 - Thu Apr 16 19:50:36 UTC 2015\nDocker version 1.6.0, build 4749651\nAny idea?\n. $ boot2docker upgrade\nboot2docker is up to date (v1.7.0), skipping upgrade... <=========== WEIRD\nLatest release for github.com/boot2docker/boot2docker is v1.7.0\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.7.0/boot2docker.iso\n        to C:\\Users\\thibz\\.boot2docker\\boot2docker.iso\nWaiting for VM and Docker daemon to start...\n.............ooo\nStarted.\nBut now:\n$ boot2docker ssh\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.7.0, build master : 7960f90 - Thu Jun 18 18:31:45 UTC 2015\nDocker version 1.7.0, build 0baf609\nI don't really understand what happened, but now it's working. thanks!\n. $ boot2docker upgrade\nboot2docker is up to date (v1.7.0), skipping upgrade... <=========== WEIRD\nLatest release for github.com/boot2docker/boot2docker is v1.7.0\nDownloading boot2docker ISO image...\nSuccess: downloaded https://github.com/boot2docker/boot2docker/releases/download/v1.7.0/boot2docker.iso\n        to C:\\Users\\thibz\\.boot2docker\\boot2docker.iso\nWaiting for VM and Docker daemon to start...\n.............ooo\nStarted.\nBut now:\n$ boot2docker ssh\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.7.0, build master : 7960f90 - Thu Jun 18 18:31:45 UTC 2015\nDocker version 1.7.0, build 0baf609\nI don't really understand what happened, but now it's working. thanks!\n. ",
    "thieman": "The best time to plant a tree is 20 years ago. The second best time is today.\nBasically, I'm asking that this be done going forward, with the next released version being 2.0 and adding a warning to the 1.7 release page (if that's possible) saying that it's effectively a major version bump.\n. I've been working with @jsingle on investigating this problem. We're seeing really significant network performance gains after moving our NICs to PCnet-FAST III, including about an order of magnitude improvement on NFS performance.\nIt'd be great if other people could try this out and see if they're noticing the same improvements. If this bug is widespread, which we believe it is, we should look into changing the defaults to PCnet-FAST III.\nTo re-state the issue: there is a known VBox bug where having multiple virtual CPUs and using Paravirtualized networking (virtio) results in network performance degradation. Both conditions need to hold for the bug to present itself, virtio with only 1 CPU works just fine, as does multiple CPUs with a different network interface. Since multiple CPUs is necessary for compute performance, we prefer moving the network interface to PCnet-FAST III as a solution.\n. Some additional information regarding Docker Machine since the two projects are linked: the default Docker Machine setup does not seem to exhibit this problem. Starting a new box with the VirtualBox driver in Machine gives you 1 CPU and one of the Intel NIC drivers, so it should be sidestepping the problem entirely.\n. Pinging @steeve who merged the original PR moving to virtio: https://github.com/boot2docker/boot2docker/pull/71\nDo you recall the performance tests you ran to reach your conclusion in that PR? Do you remember if b2d was defaulting to multiple CPUs at the time? I'm curious whether you see improvements now from moving to a different adapter.\n. ",
    "clns": "Doesn't look like (boot2docker-vm is currently running):\nPowerShell\nD:\\> docker --tlsverify=false version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): windows/amd64\nAn error occurred trying to connect: Get https://127.0.0.1:2375/v1.19/version: dial tcp 127.0.0.1:2375: ConnectEx tcp: N\no connection could be made because the target machine actively refused it.\nI'm able to ssh into the VM though, after I hit ENTER for passphrase and type tcuser for pwd:\nPowerShell\nD:\\> boot2docker.exe ssh\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.7.0, build master : 7960f90 - Thu Jun 18 18:31:45 UTC 2015\nDocker version 1.7.0, build 0baf609\ndocker@boot2docker:~$\n. Doesn't look like (boot2docker-vm is currently running):\nPowerShell\nD:\\> docker --tlsverify=false version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): windows/amd64\nAn error occurred trying to connect: Get https://127.0.0.1:2375/v1.19/version: dial tcp 127.0.0.1:2375: ConnectEx tcp: N\no connection could be made because the target machine actively refused it.\nI'm able to ssh into the VM though, after I hit ENTER for passphrase and type tcuser for pwd:\nPowerShell\nD:\\> boot2docker.exe ssh\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\n                        ##         .\n                  ## ## ##        ==\n               ## ## ## ## ##    ===\n           /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===\n      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~\n           \\______ o           __/\n             \\    \\         __/\n              \\____\\_______/\n _                 _   ____     _            _\n| |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __\n| '_ \\ / _ \\ / _ \\| __| __) / _` |/ _ \\ / __| |/ / _ \\ '__|\n| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   <  __/ |\n|_.__/ \\___/ \\___/ \\__|_____\\__,_|\\___/ \\___|_|\\_\\___|_|\nBoot2Docker version 1.7.0, build master : 7960f90 - Thu Jun 18 18:31:45 UTC 2015\nDocker version 1.7.0, build 0baf609\ndocker@boot2docker:~$\n. This is very weird, I set those vars as mentioned and absolutely no change:\nPowerShell\nD:\\> echo $env:DOCKER_HOST $env:DOCKER_CERT_PATH $env:DOCKER_TLS_VERIFY\ntcp://192.168.59.103:2376\nC:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\n1\nD:\\> boot2docker.exe shellinit\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nWriting C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\\ca.pem\nWriting C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\\cert.pem\nWriting C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\\key.pem\nYour environment variables are already set correctly.\nAlso I tried boot2docker -v stop|start, I get the exact same output as in the original comment.\n. This is very weird, I set those vars as mentioned and absolutely no change:\nPowerShell\nD:\\> echo $env:DOCKER_HOST $env:DOCKER_CERT_PATH $env:DOCKER_TLS_VERIFY\ntcp://192.168.59.103:2376\nC:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\n1\nD:\\> boot2docker.exe shellinit\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nEnter passphrase for key 'C:\\Users\\Calin\\.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nWriting C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\\ca.pem\nWriting C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\\cert.pem\nWriting C:\\Users\\Calin\\.boot2docker\\certs\\boot2docker-vm\\key.pem\nYour environment variables are already set correctly.\nAlso I tried boot2docker -v stop|start, I get the exact same output as in the original comment.\n. Thanks, the last try worked :smile: , and also this fix you pointed to. Now docker works correctly. I had to manually stop the VM from the VirtualBox GUI, then start it as usual from cli.\nHowever it still asks me about 4 times for a passphrase and password, but at least it works. Thanks so much!\n``` PowerShell\nD:> boot2docker.exe -v up\nBoot2Docker-cli version: v1.7.0\nGit commit: 7d89508\n2015/06/24 17:08:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machineread\nable\n2015/06/24 17:08:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestproperty set boot2docker-vm /Virtu\nalBox/GuestAdd/SharedFolders/MountPrefix /\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestproperty set boot2docker-vm /Virtu\nalBox/GuestAdd/SharedFolders/MountDir /\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe sharedfolder add boot2docker-vm --name\nc/Users --hostpath C:\\Users --automount\nVBoxManage.exe: error: Shared folder named 'c/Users' already exists\nVBoxManage.exe: error: Details: code VBOX_E_OBJECT_IN_USE (0x80bb000c), component SessionMachine, interface IMachine, ca\nllee IUnknown\nVBoxManage.exe: error: Context: \"CreateSharedFolder(Bstr(name).raw(), Bstr(hostpath).raw(), fWritable, fAutoMount)\" at l\nine 1015 of file VBoxManageMisc.cpp\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInterna\nl2/SharedFoldersEnableSymlinksCreate/c/Users 1\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2015/06/24 17:08:31 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machineread\nable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://loc\nalhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://loc\nalhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://loc\nalhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)\n2015/06/24 17:08:45 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChec\nking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhost\n ip addr show dev eth1\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:01:1a:f5 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe01:1af5/64 scope link\n       valid_lft forever preferred_lft forever\nEND SSH\nVM Host-only IP address: 192.168.59.103\nWaiting for Docker daemon to start...\no2015/06/24 17:08:49 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChe\ncking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nSSH returned: tcp://0.0.0.0:2376\nEND SSH\n2015/06/24 17:08:53 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChec\nking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhost\n ip addr show dev eth1\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:01:1a:f5 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe01:1af5/64 scope link\n       valid_lft forever preferred_lft forever\nEND SSH\nStarted.\n2015/06/24 17:08:56 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChec\nking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhost\n tar c /home/docker/.docker/*.pem\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\ntar: removing leading '/' from member names\nWriting C:\\Users\\Calin.boot2docker\\certs\\boot2docker-vm\\ca.pem\nWriting C:\\Users\\Calin.boot2docker\\certs\\boot2docker-vm\\cert.pem\nWriting C:\\Users\\Calin.boot2docker\\certs\\boot2docker-vm\\key.pem\nYour environment variables are already set correctly.\nD:> docker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): windows/amd64\nServer version: 1.7.0\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 0baf609\nOS/Arch (server): linux/amd64\n``\n. Thanks, the last try worked :smile: , and also [this fix](https://github.com/boot2docker/boot2docker/issues/824#issuecomment-113970908) you pointed to. Nowdocker` works correctly. I had to manually stop the VM from the VirtualBox GUI, then start it as usual from cli.\nHowever it still asks me about 4 times for a passphrase and password, but at least it works. Thanks so much!\n``` PowerShell\nD:> boot2docker.exe -v up\nBoot2Docker-cli version: v1.7.0\nGit commit: 7d89508\n2015/06/24 17:08:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machineread\nable\n2015/06/24 17:08:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestproperty set boot2docker-vm /Virtu\nalBox/GuestAdd/SharedFolders/MountPrefix /\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestproperty set boot2docker-vm /Virtu\nalBox/GuestAdd/SharedFolders/MountDir /\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe sharedfolder add boot2docker-vm --name\nc/Users --hostpath C:\\Users --automount\nVBoxManage.exe: error: Shared folder named 'c/Users' already exists\nVBoxManage.exe: error: Details: code VBOX_E_OBJECT_IN_USE (0x80bb000c), component SessionMachine, interface IMachine, ca\nllee IUnknown\nVBoxManage.exe: error: Context: \"CreateSharedFolder(Bstr(name).raw(), Bstr(hostpath).raw(), fWritable, fAutoMount)\" at l\nine 1015 of file VBoxManageMisc.cpp\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInterna\nl2/SharedFoldersEnableSymlinksCreate/c/Users 1\n2015/06/24 17:08:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe startvm boot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\n2015/06/24 17:08:31 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machineread\nable\nWaiting for VM and Docker daemon to start...\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://loc\nalhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://loc\nalhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)\n.Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://loc\nalhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0).Connecting to tcp://localhost:2022 (attempt #0)\n2015/06/24 17:08:45 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChec\nking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhost\n ip addr show dev eth1\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:01:1a:f5 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe01:1af5/64 scope link\n       valid_lft forever preferred_lft forever\nEND SSH\nVM Host-only IP address: 192.168.59.103\nWaiting for Docker daemon to start...\no2015/06/24 17:08:49 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChe\ncking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhos\nt grep tcp:// /proc/$(cat /var/run/docker.pid)/cmdline\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nSSH returned: tcp://0.0.0.0:2376\nEND SSH\n2015/06/24 17:08:53 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChec\nking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhost\n ip addr show dev eth1\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\nSSH returned: 4: eth1:  mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:01:1a:f5 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.59.103/24 brd 192.168.59.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe01:1af5/64 scope link\n       valid_lft forever preferred_lft forever\nEND SSH\nStarted.\n2015/06/24 17:08:56 executing: C:\\Program Files (x86)\\OpenSSH\\bin\\ssh.exe ssh -o IdentitiesOnly=yes -o StrictHostKeyChec\nking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -p 2022 -i C:\\Users\\Calin.ssh\\id_boot2docker docker@localhost\n tar c /home/docker/.docker/*.pem\nEnter passphrase for key 'C:\\Users\\Calin.ssh\\id_boot2docker':\ndocker@localhost's password: [typed tcuser]\ntar: removing leading '/' from member names\nWriting C:\\Users\\Calin.boot2docker\\certs\\boot2docker-vm\\ca.pem\nWriting C:\\Users\\Calin.boot2docker\\certs\\boot2docker-vm\\cert.pem\nWriting C:\\Users\\Calin.boot2docker\\certs\\boot2docker-vm\\key.pem\nYour environment variables are already set correctly.\nD:> docker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): windows/amd64\nServer version: 1.7.0\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 0baf609\nOS/Arch (server): linux/amd64\n```\n. ",
    "aburnett": "Duplicate of #824 \nFix in PR #411 \n. Duplicate of #824 \nFix in PR #411 \n. ",
    "legal90": "@SvenDowideit Thanks! I've just rebased our branch and also updated the link to Parallels Tools artifact.\nNow it can be merged.\n. @tianon I fixed things you've mentioned. Is there a chance to merge it before 1.7.1 release? :)\n. @tianon Sure, feel free to mention me on GitHub issues :wink: \n. @GrantGochnauer Yes, it is available boot2docker.iso starting since v1.7.1, however it can only be used with Docker Machine after docker/machine#939 is merged and Parallels Desktop 11 is released (in Q3 2015).\nBut you can try it with Vagrant, if it is OK for you: https://github.com/Parallels/boot2docker-vagrant-box\nP.s. If you mean boot2docker CLI, then it supports only VirtualBox. It will be deprecated in favor of Docker Machine soon.\n. @tianon Unfortunately, there are no any packages with Parallels Tools. \nOur tarball which is used here, contains the following:\n- compiled binaries prl_nettool, prltoolsd, prlvmcheck. \n- sources & Makefiles for kernel modules (drivers): prl_fs, prl_eth, prl_tg\n. @tianon What should we do to provide a Parallels Tools support in \"ng\" branch? Is deb package building an only option?\n. @tianon Yes, this tarball should be enough at the beginning. It has \"boot2docker\" in the URL only because we have prepared it for this project, but it should works fine on other distros as well. Let's try it. \nIn fact it is a cut version of our common \"Parallels Tools for Linux\", which is bundled with Parallels Desktop.\nP.s. @tianon Could I contact you via some chat, IRC or e-mail ?\n. @tianon Thanks a lot! :trophy: \n. Yes. #954 is merged, so this one could be closed.\n. @tianon Does VBoxService works fine in parallel with ntpd running in the VM? \nWe are thinking about enabling internal time-sync mechanism in parallels driver for Docker Machine (https://github.com/Parallels/docker-machine-parallels/issues/26), but we think that it could cause some time jitter, when both of hypervisor feature and ntpd are trying to synchronize time. \nHave anybody noticed/reported such problems?\n. @tianon On the Parallels Tools side we don't have any concerns about Linux kernel 4.1\nI've just checked this PR with the latest build of Parallels tools (https://github.com/boot2docker/boot2docker/pull/1051) and it works fine.\nSo, upgrade to 4.1 is OK for us :+1: \nHowever, we've found that Parallels Tools could not be built  on Linux kernel 4.2. :disappointed: \nWe are working on it and it should be fixed in Parallels Tools in October-November 2015. \nPlease, delay the upgrade to 4.2 for now if possible.\n. @tianon On the Parallels Tools side we don't have any concerns about Linux kernel 4.1\nI've just checked this PR with the latest build of Parallels tools (https://github.com/boot2docker/boot2docker/pull/1051) and it works fine.\nSo, upgrade to 4.1 is OK for us :+1: \nHowever, we've found that Parallels Tools could not be built  on Linux kernel 4.2. :disappointed: \nWe are working on it and it should be fixed in Parallels Tools in October-November 2015. \nPlease, delay the upgrade to 4.2 for now if possible.\n. @tianon Sure! I will let you know.\n. @tianon By the way, I've noticed that AUFS for 4.2 is not ready yet:\nhttps://github.com/sfjro/aufs4-standalone/tree/aufs4.x-rcN\nhttp://sourceforge.net/p/aufs/support-requests/6/\nIs that a show-stopper for boot2docker?\n. @tianon Thanks! Is there some estimation for the next release date?\n. Yep )\n. It would be great to get it in the scope of v1.9.1 release \n. Hi @nathanleclaire,\nSorry for so late response. Is that issue still exist in master ?\n. @tianon I've verified it with Parallels Tools 11.1.0 - everything works fine. LGTM\n. @tianon I've verified it with Parallels Tools 11.1.0 - everything works fine. LGTM\n. Ping @romankulikov. Do we need a problem report being sent to Parallels? I've reproduced the similar issue just by listing files in shared folder:\n``` bash\n[osx] $ docker-machine create -d parallels prl-test\n...\n[osx] $ docker-machine ssh prl-test\n[b2d] $ find /Users\n...\n```\nThe allocated memory is never freed.\n. Ping @romankulikov. Do we need a problem report being sent to Parallels? I've reproduced the similar issue just by listing files in shared folder:\n``` bash\n[osx] $ docker-machine create -d parallels prl-test\n...\n[osx] $ docker-machine ssh prl-test\n[b2d] $ find /Users\n...\n```\nThe allocated memory is never freed.\n. @kane-c Could you please provide some scenario (for example, Dockerfile) how to reproduce this issue in Docker use case? It would really help us to fix it.\nMy case with find mentioned above seems to be not relevant.\n. I've rebased this branch onto v18.03.0-ce tag. . @romankulikov Thanks! I've appended the commit reverting #1294.\n@tianon Please, merge it. Looking forward for the next release now :). > Is this file not executable as-is? \nAh, sorry. It's executable, but this is a script with a #!/bin/bash \"shebang\" in the first line, which is not available in the boot2docker. However, it works fine under /bin/sh interpreter. I think, we should fix that in the next release of Parallels Tools.\n\nif I run this daemon on VMware or VirtualBox, will the daemon stay resident, or will it terminate appropriately?\n\nThis daemon will terminate appropriately, so it works only under Parallels virtualization system. As I know, @SvenDowideit has already verified that scenario with VirtualBox. If you want to test it too, please contact me at e-mail and we'll provide you an access to Parallels Desktop 11 pre-release.\n. :anguished: Sure, will fix that ASAP.\n. ",
    "djpable": "It happens to mee too on Windows 8.1 Pro.\nI see also that somethimes output is written in reverse order, overwriting output written before in the shell.\n. ",
    "cliffom": "Same issue on Windows 10 Pro - trying to authenticate with docker login prompts me for the username but the terminal freezes, prompting a CTRL+C.\n. Same issue on Windows 10 Pro - trying to authenticate with docker login prompts me for the username but the terminal freezes, prompting a CTRL+C.\n. ",
    "matschaffer": "Using a private network as mentioned in https://github.com/boot2docker/boot2docker-cli/issues/100#issuecomment-42121092 could possibly avoid some sticky tape.\nSince the IP address would be known in advance of the VM coming online.\n. @jakirkham Seems likely, but I'd probably want to test it to say for sure.\n. ",
    "fantastao": "Upgrade to 1.7.1 fix it for me,thanks!\n. ",
    "bdurepo1": "The website need to be updated. It still points to 1.7.0 \nHere is a direct link to 1.7.1\nhttps://github.com/boot2docker/osx-installer/releases/download/v1.7.1/Boot2Docker-1.7.1.pkg\n. The website need to be updated. It still points to 1.7.0 \nHere is a direct link to 1.7.1\nhttps://github.com/boot2docker/osx-installer/releases/download/v1.7.1/Boot2Docker-1.7.1.pkg\n. ",
    "aaronsturm": "Thanks @Tenzer, I figured I was missing it somewhere.\n. @triagmas Thanks for the settings. I created a new network with those settings in Virtualbox and was able to finally get boot2docker init to work, but I still have an issue with boot2docker up. What version of Virtualbox are you using?\nHere is the output:\n$ boot2docker up -v\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\n2015/07/30 10:30:17 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminf\no boot2docker-vm --machinereadable\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestprop\nerty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestprop\nerty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe sharedfol\nder add boot2docker-vm --name c/Users --hostpath C:\\Users --automount\nVBoxManage.exe: error: Shared folder named 'c/Users' already exists\nVBoxManage.exe: error: Details: code VBOX_E_OBJECT_IN_USE (0x80bb000c), component SessionM\nachine, interface IMachine, callee IUnknown\nVBoxManage.exe: error: Context: \"CreateSharedFolder(Bstr(name).raw(), Bstr(hostpath).raw()\n, fWritable, fAutoMount)\" at line 1020 of file VBoxManageMisc.cpp\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextrad\nata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/c/Users 1\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe startvm b\noot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\nThanks!\n. @triagmas Thanks for the settings. I created a new network with those settings in Virtualbox and was able to finally get boot2docker init to work, but I still have an issue with boot2docker up. What version of Virtualbox are you using?\nHere is the output:\n$ boot2docker up -v\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\n2015/07/30 10:30:17 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminf\no boot2docker-vm --machinereadable\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestprop\nerty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountPrefix /\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe guestprop\nerty set boot2docker-vm /VirtualBox/GuestAdd/SharedFolders/MountDir /\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe sharedfol\nder add boot2docker-vm --name c/Users --hostpath C:\\Users --automount\nVBoxManage.exe: error: Shared folder named 'c/Users' already exists\nVBoxManage.exe: error: Details: code VBOX_E_OBJECT_IN_USE (0x80bb000c), component SessionM\nachine, interface IMachine, callee IUnknown\nVBoxManage.exe: error: Context: \"CreateSharedFolder(Bstr(name).raw(), Bstr(hostpath).raw()\n, fWritable, fAutoMount)\" at line 1020 of file VBoxManageMisc.cpp\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextrad\nata boot2docker-vm VBoxInternal2/SharedFoldersEnableSymlinksCreate/c/Users 1\n2015/07/30 10:30:18 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe startvm b\noot2docker-vm --type headless\nWaiting for VM \"boot2docker-vm\" to power on...\nVM \"boot2docker-vm\" has been successfully started.\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\nThanks!\n. @jakirkham I'm using version 5.0. I'm also using Boot2Docker 1.7.1. I don't have any VMs created, I deleted them all when I reinstalled.\n. @jakirkham I'm using version 5.0. I'm also using Boot2Docker 1.7.1. I don't have any VMs created, I deleted them all when I reinstalled.\n. @jakirkham I started with Version 4.3.28 and only upgraded after I started having issues.\n. @jakirkham I started with Version 4.3.28 and only upgraded after I started having issues.\n. I came across this after more in-depth searching: https://www.virtualbox.org/ticket/14040\n. I came across this after more in-depth searching: https://www.virtualbox.org/ticket/14040\n. @jakirkham Yea, but it's not released yet in a compiled form.\n. @jakirkham Yea, but it's not released yet in a compiled form.\n. Following this thread: https://github.com/mitchellh/vagrant/issues/6059\nLooks like we need to Tweet them to put the pressure on...\n. Following this thread: https://github.com/mitchellh/vagrant/issues/6059\nLooks like we need to Tweet them to put the pressure on...\n. Here is a link to the test build: https://www.virtualbox.org/download/testcase/VirtualBox-5.0.1-101902-Win.exe\nYou can refer to the main ticket for more information: https://www.virtualbox.org/ticket/14040\n. ",
    "tuanmh": "For me somehow, this line in docker-compose.xml caused the error: dns: 8.8.8.8\n. ",
    "bitliner": "+1\n. +1\n. ",
    "keithdwilliams": "Just put quotes around the string dns: \"8.8.8.8\"\n. ",
    "larskanis": "This is a duplication of https://github.com/boot2docker/boot2docker/issues/824 . It will be fixed in boot2docker-1.7.1.\n. boot2docker will usually be released together with docker. And docker just entered another rc cycle: https://github.com/docker/docker/releases \n. ",
    "garrettdreyfus": "I would also like to know when it is expected as well.\n. ",
    "fmsouza": "I'm also having this issue in my Macbook Pro mid 2012, OSX 10.10.4. It never happened before the last month. Eveytime I finished working, I used to turn off the VM through boot2docker down and then turn it up again when beggining to work again with boot2docker up, and then decided to just suspend the VM instead of turn off using boot2docker suspend.\n. ",
    "pfortuna": "I did a clean install of 1.7.1 and after a boot2docker stop/start, I'm getting the invalid certificate error message. A clean install fixes this, but the problem seems to come back. Any ideas ?\n. @jakirkham not sure it should be closed. 1.7.1 didn't work for me.\n. ",
    "MoOx": "This update just worked for me on an existing image.\n. ",
    "timmles": "I vote this be closed as well. I was on boot2docker 1.5.0, I used homebrew upgrade boot2docker to upgrade. Using boot2docker -v it showed version 1.7.1, and the problem still remained. But I later found that the iso had not been updated, and once I ran boot2docker download the problem was resolved.\nI can now run the following without errors:\nboot2docker destroy\nboot2docker init\nboot2docker start\ndocker ps\nboot2docker stop\nboot2docker start\ndocker ps\n. I vote this be closed as well. I was on boot2docker 1.5.0, I used homebrew upgrade boot2docker to upgrade. Using boot2docker -v it showed version 1.7.1, and the problem still remained. But I later found that the iso had not been updated, and once I ran boot2docker download the problem was resolved.\nI can now run the following without errors:\nboot2docker destroy\nboot2docker init\nboot2docker start\ndocker ps\nboot2docker stop\nboot2docker start\ndocker ps\n. ",
    "MatthewRDodds": "This ended up being caused by my trying to set the DOCKER_CERT_PATH variable from ~/.boot2docker/profile\n. After implementing solution 2 following this process the problems went away temporarily, but have just returned:\n\nDisk free:\n```\n$ boot2docker ssh \"sudo df -h\"\nFilesystem                Size      Used Available Use% Mounted on\ntmpfs                     5.2G     99.3M      5.1G   2% /\ntmpfs                     2.9G      1.8M      2.9G   0% /dev/shm\n/dev/sda1                70.9G     42.0G     25.3G  62% /mnt/sda1\ncgroup                    2.9G         0      2.9G   0% /sys/fs/cgroup\nnone                    232.6G    153.6G     79.0G  66% /Users\n/dev/sda1                70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/bce8a966b5c4f3b420a2ac39adc9a5353754d4c1f8cdab9d51465aa30241e471\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/8394ef7fff5a7be84b94bdc4482d28dc18c881c2b0c62a64ac61532a8c221b8b\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/c94f7edff69d688cfedddd67f8e7f236ca5e45fab0d373ba8fbaf94d05692d4b\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/e1b02975cf68b7b1636fa86bb734f110cdf0588eadb80f5b1a9e0bc412f88ae1\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/e2a01a2dfaba9dad53cde6523d8e5dcaa98cde42dbe1822610c6ef1fc4779932\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/679b968f87209a6afaa224d1766a0ddfcf23f2111c70b330324f6c5592d9954d\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/28a068f6c45560c441013ee99b07488d8fc5b19f8e8e3df1465dd9017a895d61\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/4e9a73c355db49d161d1ee66e90623f1878af0264d493c4493dbdf5434397307\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/74b0d36163baca2e71fbbd8c7fbff82977dbc05b557b5f1f2bbb5ff8467560f9\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/69cde9149211272b8710e8784220111351aaf5c0bd7744bc6ac09bf550437aec\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/622218731e0f977bf87b0a4a4ccdb80b8a13cf923c15a4e72b127643990f95fd\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/37977a6a494c551804f04820b6a265294e974f1fe38506d12e8800f781b10875\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/b866f026951a9d774d8a1e7639d38bd57e6bfe4677a6d23734547645f60beea4\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/dbd77637b49d75596623995f56dd7925961ef096755d2cee3321b0ddc25b0578\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/37abb6e841c7b81564c71a230f231d5abd2052f629887f7d2911e7cb8ae25ec6\nnone                     70.9G     42.0G     25.3G  62% /mnt/sda1/var/lib/docker/aufs/mnt/16cc386d7417759788e9807fe8a8fab06a6404f665f1ed2cf6f49e3fd8467aaf\n$ boot2docker -v\nBoot2Docker-cli version: v1.6.2\n```\n. This was probably an issue with my local environment, haven't encountered it in a very long time, closing for now.\n. ",
    "rodlogic": "Same issue here:\nVBoxManage: error: Unknown option: --synthcpu\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. ",
    "pengux": "Is there any workaround for this issue until the fix is merged?\n. ",
    "trinitronx": "@pengux: Current workaround that works for me is to not use boot2docker and instead use the latest unreleased HEAD for docker-machine via Homebrew:\nbash\n$ brew install --HEAD docker-machine\n$ docker-machine  -v\ndocker-machine version 0.4.0-dev (HEAD)\n$ docker-machine create -d virtualbox boot2docker\n$ eval $( docker-machine env boot2docker )\n$ docker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): darwin/amd64\nServer version: 1.7.0\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 0baf609\nOS/Arch (server): linux/amd64\n. @nikolay:  Try brew uninstall docker-machine;  brew update;  brew install --HEAD docker-machine\nIf that still doesn't work... brew uninstall docker-machine;  rm -rf /usr/local/Cellar/docker-machine; rm /usr/local/Library/Formula/docker-machine.rb;  brew update;   brew install --HEAD docker-machine\n. ",
    "micheleorsi": "thanks @trinitronx, this workaround works for me!\n. ",
    "nikolay": "Yeah, time to abandon ship!\n. @trinitronx Actually, even with --HEAD, I still get version v0.3, not v0.4. I uninstalled it and then installed on clean slate, but it still installs v0.3.\n. @Antillean Yes, I did brew update, but I still get the old version even if it says it's HEAD.\n. @trinitronx Nothing helps! I've done brew cleanup -s before, uninstalled and deleted everything left over, it still installs v0.3, and that's it.\n. @trinitronx The only thing that actually helped is removing everything related to docker-machine in /Library/Caches/Homebrew!\n. ",
    "antillean": "@trinitronx, works for me!\n@nikolay, maybe try a brew update first?\n. ",
    "denisinla": "Make sure you remember how you installed boot2docker, either package binary or via homebrew.\nWhen updating boot2docker this will matter when you see that your boot2docker version is not\nup to date.\n. ",
    "guybluebat": "Hi guys, thanks for all the replies. I seem to have fixed this by updating to the latest b2d version (currently v1.7.1). So far I haven't experienced any more of the issues in this ticket.\n. Hi guys, thanks for all the replies. I seem to have fixed this by updating to the latest b2d version (currently v1.7.1). So far I haven't experienced any more of the issues in this ticket.\n. ",
    "nlf": "with a slow disk, partprobe is sometimes not enough. when booting with xhyve, for example, the partition doesn't become available immediately after the partprobe and this loop is necessary.\n. ",
    "dhiltgen": "I see the same problem using the KVM hypervisor.  On a heavily loaded system, sometimes it'll fail to partition and mount the disks properly.\n. closes https://github.com/docker/docker/issues/19454\n. @cpuguy83 I would really prefer to stick with the standard path, since other tools/automation are likely to be built around that default path assumption.\n. Thanks all!\n. Sounds like this is no longer needed.  Thanks!\n. ",
    "cyberkurumin": "Exactly the same for me. For some more informations, I've got this error just after upgrading my virtualbox to its new version 5.0. I'm using the boot2docker version 1.7.\nBoot2docker seems to try to create a new vm in virtualbox, and it creates it in fact, but when the system tries to boot we can see the following message on the boot2docker virtual machine terminal:\niPXE (http://ipxe.org) C8:00 E200 PCI2.10 E200FATAL: Could not read from the boot medium! System halted.\nHope this help, and I'm sure that soon we'll have a solution.\nAnd guys, keep boot2docker on, this is amazing project which allows to easily use the great docker project in any machine!!! Thanks\n. ",
    "rossipedia": "Running into the same thing here, VBox 5 on Windows.\nI think it's due to changes in the VBoxManage tool / API. Running boot2docker -v init gets me:\nVBoxManage.exe: error: Unknown option: --synthcpu\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. ",
    "marksutt": "Same Problem here with VBox 5 on Yosemite:  \n\nboot2docker -v init\n\nVBoxManage.exe: error: Unknown option: --synthcpu\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. See Issue: https://github.com/boot2docker/boot2docker/issues/979\n. ",
    "edtorba": "+1, running win10\n. ",
    "einfoman": "+1 windows 10\n. ",
    "sleepiejohn": "+1 Windows 10\n. ",
    "OpethiaN73": "Found a video on how to fix that problem. I'm using Windows 10, Virtualbox 5 and latest boot2docker. The guy is french but you'll be able to follow: https://www.youtube.com/watch?v=woRAqYzdV3I\nSorry my english sucks but i'm french too. Basically the problem is related to Virtualbox and not boot2docker. Virtualbox is not able to add the virtual ethernet adapter from the script. so you have to:\n1. Delete all boot2docker VM into Virtualbox (boot2docker delete)\n2. Go into File > Preferences > Network > Host-only Networks\n3. Delete all adapters in the list\n4. Add a new one (that's there the problem occur) it will output an error msg but will add it anyway. Just get out of the menu by clicking OK and go back in the menu right after, you'll see the new Ethernet Adapter in the list.\n5. Set the IPV4 address and network mask mentioned in the video\n6. Enable the DHCP server and enter all 4 addresses mentioned in the video.\n7. Click OK \n8. Double click on the Boot2Docker Start icon to reinitialize everything.\nIt worked #1 for me.\nIt's an old VirtualBox bug.... thanks Oracle for not fixing your stuff.\n. Found a video on how to fix that problem. I'm using Windows 10, Virtualbox 5 and latest boot2docker. The guy is french but you'll be able to follow: https://www.youtube.com/watch?v=woRAqYzdV3I\nSorry my english sucks but i'm french too. Basically the problem is related to Virtualbox and not boot2docker. Virtualbox is not able to add the virtual ethernet adapter from the script. so you have to:\n1. Delete all boot2docker VM into Virtualbox (boot2docker delete)\n2. Go into File > Preferences > Network > Host-only Networks\n3. Delete all adapters in the list\n4. Add a new one (that's there the problem occur) it will output an error msg but will add it anyway. Just get out of the menu by clicking OK and go back in the menu right after, you'll see the new Ethernet Adapter in the list.\n5. Set the IPV4 address and network mask mentioned in the video\n6. Enable the DHCP server and enter all 4 addresses mentioned in the video.\n7. Click OK \n8. Double click on the Boot2Docker Start icon to reinitialize everything.\nIt worked #1 for me.\nIt's an old VirtualBox bug.... thanks Oracle for not fixing your stuff.\n. ",
    "timur-han": "Thank you for your solution, it worked on my Windows 10 x64 @OpethiaN73 \nSome hints: \n2) This step is executed on Virtual Box GUI \n5) You can copy and paste during setting the IPv4 address\nIPV4 Address: 192.168.59.3\nIPV4 Mask: 255.255.255.0\n6) You can copy and paste the following after enabling the DHCP\nServer Address: 192.168.59.99\nServer Mask: 255.255.255.0\nLower address bound: 192.168.59.103\nUpper address bound: 192.168.59.254\n. ",
    "James-Matthew-Watson": "I tried the what OpethiaN73 proposed but after deleting the adapters, I cannot add them.  I get the error, hit OK and come back and no adapter.  I tried repairing the VB install and that failed.  I removed VB and got an error about the VB install failing.  Reinstalled but now there are no adapters to delete and I still can't add any.\n. ",
    "seaneking": "+1 same issue here on Yosemite (Unknown option: --synthcpu in -v output). If this is an upstream issue with Vbox 5 we should at least add a note to the docs.\n. Looks like v1.7.1 fixes the Unknown option: --synthcpu issue (https://github.com/boot2docker/boot2docker/issues/525), vbox 5+ changed some VBoxManage options.\n. ",
    "shayanb": "+1\nSame issue on osx 10.9.5\nBoot2Docker-cli version: v1.6.2 (and now on 1.7.1)\n. ",
    "aysark": "Windows 7\n``` cmd\ninitializing...\nVirtual machine boot2docker-vm already exists\nstarting...\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\n```\nWorked a month ago, haven't touched it since.\n. Windows 7\n``` cmd\ninitializing...\nVirtual machine boot2docker-vm already exists\nstarting...\nerror in run: Failed to start machine \"boot2docker-vm\": exit status 1\n```\nWorked a month ago, haven't touched it since.\n. ",
    "albert3010": "Exactly the same for me.\n$ boot2docker init\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\nSolution : your boot2docker has been deprecated. So I moved to docker-machine.\nInstall it and start working.It works for me.\nhttps://docs.docker.com/engine/installation/mac/\n. ",
    "Fridus": "@SvenDowideit Today, It works after the update !\nboot2docker version\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\n. ",
    "pm-vitaly-fedyunin": "Sorry, reproducible outside of boot2docker environment. Please close.\n. ",
    "vaskrist": "It took me some googling, but it seems the problem was fixed in boot2docker 1.7.1. and when I let \"boot2docker delete\" the image and recreated it by boot2docker -v init\" it got created fine.\nBtw. I had to use latest VirtualBox 5.0.1 since it fixes networking on Windows 10.\n. ",
    "jaux": "I have the same issue, have you found any solution?\n. Removing sendfile on from my nginx.conf solved this issue. https://github.com/boot2docker/osx-installer/issues/100\n. ",
    "micnigh": "This looks very similar to the docker machine issue below - though I'm not sure how to apply the same workaround to boot2docker\nhttps://github.com/docker/machine/issues/1521\n. ",
    "bweston92": "Ok, I really wanted to get going with Docker but this is holding me up, any ideas?\n. @sakai135 how values do you want me to use? :confused: \n. ",
    "sakai135": "See if setting the values in the boot2docker configuration works.\n. See if setting the values in the boot2docker configuration works.\n. ",
    "jaredpetersen": "Boot2Docker Owners/Maintainers:\nI have experienced the same problem (and unknowingly created a duplicate issue). Please check out #1010 if you would like more information.\n. Interesting, I wiped everything (minus Git) as well as part of my troubleshooting, but wasn't able to achieve the same results.\n. I've downloaded many, many copies of the installer without luck but I may have to try removing Git as well. That seems like a really weird thing to have to do though.\n. I've downloaded many, many copies of the installer without luck but I may have to try removing Git as well. That seems like a really weird thing to have to do though.\n. Uninstalled, removed .boot2docker directory, and reinstalled. No luck. I'm not going to uninstall git to get this to work because it'll take too long to get the access to reinstall it on my work laptop.\n. Uninstalled, removed .boot2docker directory, and reinstalled. No luck. I'm not going to uninstall git to get this to work because it'll take too long to get the access to reinstall it on my work laptop.\n. No, I haven't tried anything since. I ended up having to move on to something else entirely, so I never went back to deal with this. Short of uninstalling Git, I'm out of options anyways.\n. Please let me know if you would like me to post the log file from VirtualBox.\n. @jakirkham Sorry, I didn't see yours earlier when looking around. I'll close this and comment on your issue so that the repository owners have a little more information to work off of.\n. ",
    "martinvelez": "I never found a way to work around this.  It seems to be by design.  Name pipes are not preserved as such in the VM fired up by boot2docker.\n. ",
    "komocode": "Happened again. 5 weeks up and running and then it hangs.\n. Happened again. 5 weeks up and running and then it hangs.\n. I have a Mac Pro running 10.10 with VM Ware running a 10.9 image with b2d 1.7.1. I'm going to upgrade b2d to 1.8.1.\n. I have a Mac Pro running 10.10 with VM Ware running a 10.9 image with b2d 1.7.1. I'm going to upgrade b2d to 1.8.1.\n. ",
    "harrydb": "Pull request: https://github.com/boot2docker/boot2docker/pull/1012\n. I thought about that, but I can't think of a real reason why it should be safer and it does limit the amount of ports available.\n. I thought about that, but I can't think of a real reason why it should be safer and it does limit the amount of ports available.\n. ",
    "fabiokung": ":+1:, merge please\n. ",
    "danp": "Thanks!\n. ",
    "jacobtomlinson": "Just my two cents, I had this error when trying to mount a volume with a typo in the path. Fixed the typo and the error went away.\n. Just my two cents, I had this error when trying to mount a volume with a typo in the path. Fixed the typo and the error went away.\n. ",
    "fischerman": "I faced the same issue on Docker Machine. If you run from Windows make sure that all shell scripts have the correct line endings (Unix). Git checks out files Windows-style on Windows. If you try to run scripts with the wrong line ending, you see something like this:\nbash: /entrypoint.sh: /bin/bash^M: bad interpreter: No such file or directory\nIf your ENTRYPOINT points to such a script, you get the error:\nError response from daemon: Cannot start container 102a9cbf68a19177ed378d37f1963a454eba4d17fcef3f5e7bcae0503cc25a19: [8] System error: no such file or directory\n. I faced the same issue on Docker Machine. If you run from Windows make sure that all shell scripts have the correct line endings (Unix). Git checks out files Windows-style on Windows. If you try to run scripts with the wrong line ending, you see something like this:\nbash: /entrypoint.sh: /bin/bash^M: bad interpreter: No such file or directory\nIf your ENTRYPOINT points to such a script, you get the error:\nError response from daemon: Cannot start container 102a9cbf68a19177ed378d37f1963a454eba4d17fcef3f5e7bcae0503cc25a19: [8] System error: no such file or directory\n. ",
    "Johnnei": "@tianon Over at KB-929851 the change of defaults on Windows have been listed.\n. @tianon Over at KB-929851 the change of defaults on Windows have been listed.\n. ",
    "mr47": "Follow instructions on https://www.virtualbox.org/ticket/14040#comment:36\n. Follow instructions on https://www.virtualbox.org/ticket/14040#comment:36\n. If you get same problem try this, https://www.virtualbox.org/ticket/14040#comment:36\n. If you get same problem try this, https://www.virtualbox.org/ticket/14040#comment:36\n. @pericazivkovic its less than 100kb and its tested by me and others in that thead. You can easy check it with metascan.\n. ",
    "cmoad": "I tried this series of commands and I am getting the same error. Windows 10 + Virtualbox 5\nC:\\Users\\Charlie> boot2docker.exe -v init\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: e183196d-6727-4da9-9b21-caccd1964ca9\nSettings file: 'C:\\Users\\Charlie\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bi oslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 4 --memo ry 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --hpet on --hwvirtex on --triplefaultreset off --nes tedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/07/30 11:42:27 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconne cted1 on\n2015/07/30 11:42:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/07/30 11:42:28 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2015/07/30 11:42:29 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2015/07/30 11:42:29 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...\nProgress state: E_FAIL\nVBoxManage.exe: error: Failed to create the host-only adapter\nVBoxManage.exe: error: Code E_FAIL (0x80004005) - Unspecified error (extended info not available)\nVBoxManage.exe: error: Context: \"enum RTEXITCODE __cdecl handleCreate(struct HandlerArg *)\" at line 70 of file VBoxManageHostonly.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\n. ",
    "raghunandy": "I don't recommend this fix. Good hackers vs Bad Hackers. Waiting for the actual fix. Till then I am using Docker inside Ubuntu Virtually in Virtualmachine itself :)\n. @pericazivkovic  :+1:\nI switched to Virtual box ubuntu <- docker util this is been fixed. We can run an anonymous person's executable file in admin mode. How foolish this could be .. rather I would wish, if he made it as open source..\n. ",
    "pericazivkovic": "Same problem here.... tried various versions of VirtualBox and still no luck....\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: e24aa885-c6ae-4f9c-9cab-56b2076b431d\nSettings file: 'C:\\Users\\Pero\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2015/08/01 20:35:35 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2015/08/01 20:35:35 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...\nProgress state: E_FAIL\nVBoxManage.exe: error: Failed to create the host-only adapter\nVBoxManage.exe: error: Code E_FAIL (0x80004005) - Unspecified error (extended info not available)\nVBoxManage.exe: error: Context: \"enum RTEXITCODE __cdecl handleCreate(struct HandlerArg *)\" at line 70 of file VBoxManageHostonly.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\nIf you open VM created you see that it does not have storage and that is not very usable. \n. Same problem here.... tried various versions of VirtualBox and still no luck....\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list vms\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe createvm --name boot2docker-vm --register\nVirtual machine 'boot2docker-vm' is created and registered.\nUUID: e24aa885-c6ae-4f9c-9cab-56b2076b431d\nSettings file: 'C:\\Users\\Pero\\VirtualBox VMs\\boot2docker-vm\\boot2docker-vm.vbox'\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe setextradata boot2docker-vm VBoxInternal/CPUM/EnableHVP 1\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --firmware bios --bioslogofadein off --bioslogofadeout off --bioslogodisplaytime 0 --biosbootmenu disabled --natdnshostresolver1 off --natdnsproxy1 off --ostype Linux26_64 --cpus 8 --memory 2048 --vram 8 --acpi on --ioapic on --rtcuseutc on --cpuhotplug off --pae on --longmode on --hpet on --hwvirtex on --triplefaultreset off --nestedpaging on --largepages on --vtxvpid on --vtxux off --accelerate3d off --uart1 0x3F8 4 --uartmode1 server \\\\.\\pipe\\boot2docker-vm --boot1 dvd\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe showvminfo boot2docker-vm --machinereadable\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --nic1 nat --nictype1 virtio --cableconnected1 on\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe modifyvm boot2docker-vm --natpf1 ssh,tcp,127.0.0.1,2022,,22\n2015/08/01 20:35:34 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list hostonlyifs\n2015/08/01 20:35:35 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe list dhcpservers\n2015/08/01 20:35:35 executing: C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe hostonlyif create\n0%...\nProgress state: E_FAIL\nVBoxManage.exe: error: Failed to create the host-only adapter\nVBoxManage.exe: error: Code E_FAIL (0x80004005) - Unspecified error (extended info not available)\nVBoxManage.exe: error: Context: \"enum RTEXITCODE __cdecl handleCreate(struct HandlerArg *)\" at line 70 of file VBoxManageHostonly.cpp\nerror in run: Failed to initialize machine \"boot2docker-vm\": exit status 1\nIf you open VM created you see that it does not have storage and that is not very usable. \n. @mr47 bad idea to run executables from total strangers with elevated permissions on your hardware....\n. @mr47 bad idea to run executables from total strangers with elevated permissions on your hardware....\n. @mr47 Let's not go into discussions how small a piece of malware can be :-) Thanks for the tip :+1:  but I will stick with Linux until this is officially fixed\n. ",
    "KeisukeSatomi": "i came to same problem with boot2docker1.7.1 + window10 + VitrualBox5.0.1.\nwhen boot2docker create \"boot2docker-vm\", it can't construct networking correctly.\ndocker-machine became same.\nso i changed to VMWare Player + Docker( not boot2docker ) manually.\n. ",
    "davidwesst": "Looking at a blog post from @agileramblings there is a solution out from the docker/toolbox repository.\nYou can find the test build here and how to configure manually if you already have it installed.\nIf you're still having issues, refer to the section of the above blog post discussing having Hyper-V enabled with Virtualbox, and how to disable Hyper-V without having to install it.\nI confirmed that it works. Hopefully this helps someone else out there!\n. ",
    "ybian": "I am seeing a similar issue even after upgrading to the latest 1.8.3, but in my case PID is changed after restart. The issue is that /var/run/docker.pid is gone.\n. More details:\nI'm on OS X 10.10.5. I installed boot2docker through Docker Toolbox for Mac and I did the \"restart\" operation with:\n$ docker-machine ssh default\n$ sudo /etc/init.d/docker restart\nAfter that /var/run/docker.pid is gone but ps -ef | grep docker can show the restarted process with a different PID.\nNot sure whether it relates to id and file/dir permission, here is the info:\ndocker@default:/var/run$ id\nuid=1000(docker) gid=50(staff) groups=50(staff),100(docker)\ndocker@default:/var/run$ id root\nuid=0(root) gid=0(root) groups=0(root)\ndocker@default:/var/run$ ls -ld /var/run\ndrwxrwxr-x    3 root     staff          260 Oct 13 07:45 /var/run/\ndocker@default:/var/run$ ls -l /var/run\ntotal 32\n-rw-r--r--    1 root     root             4 Oct 13 06:04 acpid.pid\nsrw-rw-rw-    1 root     root             0 Oct 13 06:04 acpid.socket\n-rw-r--r--    1 root     root             4 Oct 13 06:04 crond.pid\ndrwx------    4 root     root            80 Oct 13 06:04 docker/\n-rw-r--r--    1 root     root             4 Oct 13 07:45 docker.pid\nsrw-rw----    1 root     docker           0 Oct 13 07:45 docker.sock\n-rw-r--r--    1 root     root             5 Oct 13 07:00 ntpd.pid\n-rw-r--r--    1 root     root             4 Oct 13 06:04 sshd.pid\n-rw-r--r--    1 root     root             4 Oct 13 06:04 udhcpc.eth0.pid\n-rw-r--r--    1 root     root             5 Oct 13 06:04 udhcpc.eth1.pid\n-rw-rw-r--    1 root     staff          768 Oct 13 06:05 utmp\n. ",
    "krainboltgreene": "For note I've also tried:\nVOLUME $SOURCE\nVOLUME /Users/krainboltgreene/Code/krainboltgreene/blankrails:$SOURCE\nThese also didn't work.\n. Talked with a docker core maintainer (the person who worked on volumes), and apparently this is how it's \"intended\". -v and VOLUME don't have the same behavior sadly.\n. ",
    "bastnic": "@jsingle nice catch! On my team we have three last generation of macbook pro with last version of everything on it. On our current Symfony2 dev project, using \"PCnet-FAST |||\" instead of \"Paravirtualized\", our homepage on \"app_dev.php\" environment just go from ~220ms to ~95ms.\nFYI, our settings now:\n\n. @jsingle nice catch! On my team we have three last generation of macbook pro with last version of everything on it. On our current Symfony2 dev project, using \"PCnet-FAST |||\" instead of \"Paravirtualized\", our homepage on \"app_dev.php\" environment just go from ~220ms to ~95ms.\nFYI, our settings now:\n\n. You can just configure in your .boot2docker/profile these two lines and you will never again change of ip address:\n```\navoid change of boot2docker ip\nLowerIP = \"192.168.59.103\"\nUpperIP = \"192.168.59.103\"\n``\n. You can just configure in your.boot2docker/profile` these two lines and you will never again change of ip address:\n```\navoid change of boot2docker ip\nLowerIP = \"192.168.59.103\"\nUpperIP = \"192.168.59.103\"\n```\n. I've set theses parameters since quite some times, never ever had this error again, despite having stop / start / reboot / destroy / init a lot of times.\n. I've set theses parameters since quite some times, never ever had this error again, despite having stop / start / reboot / destroy / init a lot of times.\n. \u2026 reboot and retry ? I've already seen mac os x lost routes to virtualbox. Afterwards, i've never got it again with the configuration I gave you.\n. ",
    "willdady": "Just want to chime in to confirm that I've seen significant performance gain by switching Adapter 2 from the default Intel PRO/1000 MT Desktop to PCnet-FAST III on OSX. VM is set to 4 cpus + 8GB RAM. I've enabled nfs by using docker-machine-nfs.\nMy particular use-case is I'm trying to run prospector (code analysis tool for Python). Before the switch it took a ridiculous 11 minutes to complete vs 3.5 minutes after changing adapter. When running directly on the host it takes 74 seconds.\n. ",
    "acknapp": "Looks like the work around is to reboot the boot2docker vm (kind of annoying, but at least that seems to work).\n. ",
    "yqian1991": "Actually I tried this solution, but the problem is that, if we halt it and start it again, boot2docker can not detect the ip to use. the only way is to destroy the vm again and recreate a new one\n. Actually I tried this solution, but the problem is that, if we halt it and start it again, boot2docker can not detect the ip to use. the only way is to destroy the vm again and recreate a new one\n. ok, thanks, I gonna to test it again to see if I can reproduce the problem I have.\n. ok, thanks, I gonna to test it again to see if I can reproduce the problem I have.\n. Well, it's still not working, I am running it on Mac OS Yosemite 10.10.3\n\nAny ideas @bastnic \n. Well, it's still not working, I am running it on Mac OS Yosemite 10.10.3\n\nAny ideas @bastnic \n. ",
    "ulc": "Same issue here. Let us know if a solution is found.\n. ",
    "plamola": "Seeing the same problem\nbash\n$> boot2docker -v download\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\nLatest release for github.com/boot2docker/boot2docker is v1.7.1\nDownloading boot2docker ISO image...\nerror in run: Failed to download ISO image: read tcp 54.231.64.128:443: connection reset by peer\n. Seeing the same problem\nbash\n$> boot2docker -v download\nBoot2Docker-cli version: v1.7.1\nGit commit: 8fdc6f5\nLatest release for github.com/boot2docker/boot2docker is v1.7.1\nDownloading boot2docker ISO image...\nerror in run: Failed to download ISO image: read tcp 54.231.64.128:443: connection reset by peer\n. Indeed. \nNow Amazon reports the error rates are dropping, I was able to download the image.\n. Indeed. \nNow Amazon reports the error rates are dropping, I was able to download the image.\n. ",
    "gregory90": "It's probably due to S3 Outage in US Standard region:\nhttps://news.ycombinator.com/item?id=10033172\nAlso: https://status.github.com/messages\n. It's probably due to S3 Outage in US Standard region:\nhttps://news.ycombinator.com/item?id=10033172\nAlso: https://status.github.com/messages\n. ",
    "BarryDahlberg": "Same behaviour here but using docker toolbox 1.8.1a on Windows 8.1. Possibly a VirtualBox issue?\n. ",
    "nordicdyno": "It would be great! Thanks\n:+1: \n. ",
    "rtfpessoa": "Nobody has this issue?\n. Nobody has this issue?\n. @dweinstein , I am not building the boot2docker.iso. I am using the one available as release on GitHub.\nThe problem is when I am creating a docker image using the usual setup on OS X.\nThis is just the beginning of weird problems I experience regularly on my mac.\nI think this is related to the strict permissions we use to run the dockers, like the --cap-drop=all or the user we create when building the docker images so we do not run with root.\n. @dweinstein , I am not building the boot2docker.iso. I am using the one available as release on GitHub.\nThe problem is when I am creating a docker image using the usual setup on OS X.\nThis is just the beginning of weird problems I experience regularly on my mac.\nI think this is related to the strict permissions we use to run the dockers, like the --cap-drop=all or the user we create when building the docker images so we do not run with root.\n. ",
    "niw": "Just bump up for the patch CC: @tianon\n. ",
    "puco": "+1\n. ",
    "prbond": "no comments so everything is alright ! No ?\n. Why i switch to backticks because i don't like and understand regex, each their own lol.\nI re test, and add -A fix the problem. \nHow i change the pull request ?\n[ -f /var/run/docker.pid ] && ps -A -o pid | grep \"^\\s*$(cat /var/run/docker.pid)$\" > /dev/null 2>&1\n. @tianon it's good now\n. ",
    "cgudrian": "I'm facing the same problem and I'm on Windows 7.\n. ",
    "communityportal": "Same issue here. Ran docker many times on Oracle Virtualbox and created default machine many times successfully. After single try to recreate it with disk size of 30GB I've started to get that issue.\nAfter machine startup, the 'docker' daemon is not working in such state (even in VM shell).\nTried different things with host-only adapter settings (with/without DHCP) but without success.\nThe machine only starts by manual docker-machine create command.\nRunning by Docker Quickstart when machine not exists causes:\nCreating Machine default...\nRunning pre-create checks...\nCreating machine...\nError creating machine: Error in driver during machine creation: Maximum number of retries (5) exceeded\nLooks like something went wrong... Press any key to continue...\nThe Kitematic was able to create machine but end up in error (unfortunatelly I did not grabbed it), and clicking button to remove and set up machine again fixed the problem, But stil I need to create VM by myself (proxy setting in docker-machine create) so I cannot use machine created by Kitematic.\nIt looks like Kitematic creates Host-only adapter WITH DHCP enabled and this can be the fix.\nBut even when I create VM manually and select it to use Host-only adapter with DHCP enabled, the error still occurs and docker daemon don't start up.\nTo sum up:\n- cannot even start quickstart console, it cannot create VM\n- Kitematic can create boot2docker VM but I need proxy setting (I will try to add to /var/lib/boot2docker/profile maually)\n- manually invoking docker-machine create can create a machine but error still occurs at startup and docker daemon is not running\n. It looks like using Host-only adapter with DHCP enabled BREAKS starting docker daemon after second VM startup. Disabling DHCP solved the problem.\n. ",
    "skygragon": "I have exactly the same error in boot2docker.log when I tried to use docker-machine to create a new vm in vsphere. The created vm has no ipv4 address assigned on eth0 thus failed to ssh-ed.\n@communityportal I have no idea about the \"disabling DHCP\" thing, could you help elaborate it more?. I have exactly the same error in boot2docker.log when I tried to use docker-machine to create a new vm in vsphere. The created vm has no ipv4 address assigned on eth0 thus failed to ssh-ed.\n@communityportal I have no idea about the \"disabling DHCP\" thing, could you help elaborate it more?. ",
    "rivaros": "@md5, could you clarify some very general things for me?\nDocker 1.8.1 for Windows comes with a new product (Docker Toolbox) which replaces older Boot2Docker GUI. Inside the install folder I see boot2docker.iso - probably one of your releases but not the latest one.\nWhat happens when you create a new virtualbox machine - it just creates a blank machine, connects iso to it as cd-drive, connects  hdd, and starts. Is it right?\nSo boot2docker.iso contains everth including the guest additions ? And hard disk initially is just blank, or it still contains some configuration? I need to understand from where the things actually come.\nThank you in advance. Learning Packer now...\n. @md5, could you clarify some very general things for me?\nDocker 1.8.1 for Windows comes with a new product (Docker Toolbox) which replaces older Boot2Docker GUI. Inside the install folder I see boot2docker.iso - probably one of your releases but not the latest one.\nWhat happens when you create a new virtualbox machine - it just creates a blank machine, connects iso to it as cd-drive, connects  hdd, and starts. Is it right?\nSo boot2docker.iso contains everth including the guest additions ? And hard disk initially is just blank, or it still contains some configuration? I need to understand from where the things actually come.\nThank you in advance. Learning Packer now...\n. @md5, Thank you, I know how to make customized iso. But there are 2 approcahes with tcz modules:\n1. Burn them to iso\n2. Download and put them to persistant location like /var/lib/boot2docker/tce, then in bootsync.sh run\n   sudo su -c \"tce-load -i /var/lib/boot2docker/tce/*.tcz\" docker\nIn that case they would be automatically installed on each boot. Approach 1 is faster as packages are already squashed to fs. But:\n- ISO size grows significantly - in my case to 60Mb\n- I am not sure how updates will work in both cases\nAlso, I need to have pip and some python packages. These are installed with \"python get-pip.py\".\nI don't know if it's possible to burn them somehow to iso as well.\nIn general, is it good to make iso grow in size?\n. @md5, Thank you, I know how to make customized iso. But there are 2 approcahes with tcz modules:\n1. Burn them to iso\n2. Download and put them to persistant location like /var/lib/boot2docker/tce, then in bootsync.sh run\n   sudo su -c \"tce-load -i /var/lib/boot2docker/tce/*.tcz\" docker\nIn that case they would be automatically installed on each boot. Approach 1 is faster as packages are already squashed to fs. But:\n- ISO size grows significantly - in my case to 60Mb\n- I am not sure how updates will work in both cases\nAlso, I need to have pip and some python packages. These are installed with \"python get-pip.py\".\nI don't know if it's possible to burn them somehow to iso as well.\nIn general, is it good to make iso grow in size?\n. Ok, so if I choose modifying iso:\n1. Unsquashing tcz's I know how to\n2. What about python packages - should I put all python wheels to /var/lib/boot2docker and then install them on each boot, or there is a better method?\n. Ok, so if I choose modifying iso:\n1. Unsquashing tcz's I know how to\n2. What about python packages - should I put all python wheels to /var/lib/boot2docker and then install them on each boot, or there is a better method?\n. Hi @michbil, Just yesterday got the same error as you.\nThis is a probably a bug with recent Tiny Core repository latest updates (2 days ago it was working :))\nCould anybody of the boot2docker team test this:\n1. Launch new docker-machine\n2. Run tce-load -w -i python.tcz gmp-dev.tcz python-dev.tcz compiletc.tcz\n3. Run\n   wget https://bootstrap.pypa.io/get-pip.py\n   sudo python get-pip.py\nYou will get the ImportError: cannot import name HTTPSHandler\nI was speaking with TinyCore maintainer in #tinycorelinux irc channel yesterday but he tells that this is problem of boot2docker.\n. Hi @michbil, Just yesterday got the same error as you.\nThis is a probably a bug with recent Tiny Core repository latest updates (2 days ago it was working :))\nCould anybody of the boot2docker team test this:\n1. Launch new docker-machine\n2. Run tce-load -w -i python.tcz gmp-dev.tcz python-dev.tcz compiletc.tcz\n3. Run\n   wget https://bootstrap.pypa.io/get-pip.py\n   sudo python get-pip.py\nYou will get the ImportError: cannot import name HTTPSHandler\nI was speaking with TinyCore maintainer in #tinycorelinux irc channel yesterday but he tells that this is problem of boot2docker.\n. @SvenDowideit , your solution with docker-compose is really smart (by mapping docker.sock as a volume inside the container), but what about the actual issue from @michbil ?\nIt's not about docker-compose in particular but some bug with installing pip on boot2docker. Do you know how this may be solved?\n. @SvenDowideit , your solution with docker-compose is really smart (by mapping docker.sock as a volume inside the container), but what about the actual issue from @michbil ?\nIt's not about docker-compose in particular but some bug with installing pip on boot2docker. Do you know how this may be solved?\n. ",
    "michbil": "I've asked TinyCore guys, they said that they don't offer any support TinyCore respins.\nAfter that i've downloaded and installed vanilla tinycorex64 on VirtualBox. pip install succeed.\nSo problem after recent changes only on boot2docker OS.\n. @SvenDowideit this method was taken from http://stackoverflow.com/questions/29289785/how-to-install-docker-compose-on-windows and it worked quite well before recent changes.\n. ",
    "Baggerone": "This is an issue for me and my colleagues as well.  Same symptoms.\n. This is an issue for me and my colleagues as well.  Same symptoms.\n. ",
    "casertap": "Sorry havn't try since. I decided to use a vagrant to startup a linux VM that will run docker inside.\n. ",
    "jmelis": "Can anyone confirm that this is an error of the PR per se? or is there another cause? It looks like this is the problem:\n```\n\u001b[91mE\u001b[0mFetched 118 MB in 6s (18.8 MB/s)\n\u001b[91m: \u001b[0m\u001b[91mFailed to fetch http://httpredir.debian.org/debian/pool/main/liba/libarchive-extract-perl/libarchive-extract-perl_0.72-1_all.deb  Error reading from server. Remote end closed connection [IP: 128.31.0.66 80]\nE: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?\n\u001b[0mThe command '/bin/sh -c apt-get update && apt-get -y install  unzip                         xz-utils                         curl                         bc                         git                         build-essential                         golang                         cpio                         gcc libc6 libc6-dev                         kmod                         squashfs-tools                         genisoimage                         xorriso                         syslinux                         isolinux                         automake                         pkg-config                         p7zip-full' returned a non-zero code: 100\ntravis_time:end:10585dc7:start=1443200046099539261,finish=1443200072841985316,duration=26742446055\n\u001b[0K\n\u001b[31;1mThe command \"docker build -t boot2docker/boot2docker .\" exited with 1.\u001b[0m\n```\nMaybe it's just a spurious error...\nEDIT:\nIt's actually the same error as with https://travis-ci.org/boot2docker/boot2docker/builds/80849660\n. Hi, any comments?\n. We are planning on adding support to the new boot2docker appliance as well, but for the time being I don't think it would be problematic having support for OpenNebula in this version of boot2docker. We could add a disclaimer noting your above comment for OpenNebula users, so this appliance is not used in production.\n. ",
    "trigun539": "Does anybody know a workaround for this? Have to perform that command every time I change a file.\n. ",
    "mxab87ucgjf46heo": "I'm encountering a similar bug, although it could be related to the sendfile #887 bug referenced above. The problem is that even if I disable sendfile in my NGINX config that if I modify a file from the host that it still serves old content.\nIf I exec a shell in my container running NGINX and modify a file then changes don't show either.\nHowever, if I modify the file using a different container then the changes work. Before disabling sendfile, even modifying a file in a container would not show the changes.\nI'm still convinced that the issue is with VirtualBox or CONFIG_FSCACHE, because the container I'm running with NGINX is removed after stopping it. If I run the container again using the same options it still shows the old content.\nUsing your suggestion echo 3 > /proc/sys/vm/drop_caches causes changes from my host and NGINX container to show after restarting my NGINX container.\nWhat is the status of rebuilding the ISO and disabling CONFIG_FSCACHE? \n. Thank you for helping out. You're definitely not alone in this issue as I've found multiple reports referencing the same issues.\n. Similar issue using an Alpine Linux image which is what I'm using for my NGINX container (specifically jekyll/jekyll:pages):\nhttps://github.com/gliderlabs/docker-alpine/issues/84\n. ",
    "princemaple": ":+1: \n. :+1: \n. ",
    "TRPB": "I'm trying to solve this exact problem (Not using boot2docker but it seems to be a larger issue) I'm getting this in any Linux OS when:\n1) On the guest, try to open a file which doesn't exist yet: stat non-existant.file\n2) Create the file on the host\n3) Now try to open the file on the guest: cat non-existant.file it says \"no such file or directory\" and the permissions/date all come up as ?????\nIf you write the file on the host before reading it on the guest it works correctly. Similarly, clearing the cache using drop_caches makes the files accessible, but this has to be run each time a file is affected. \nI've recompiled an Arch Kernel with various options for CONFIG_FSCACHE and the problem remains. I'd love to know what you did if you have managed to solve the problem.\nI've posted a bug on the VirtualBox bug tracker here: https://www.virtualbox.org/ticket/14746 please update it if you have any more information that could help fix it.\nedit: It seems this project is also affected. I don't use docker but just booted into the iso using virtualbox, the follow steps show the same issue:\nGuest:\nmkdir share\nmount -t vboxsf my_share ./share\ncd share\ncat file-that-doesnt-exist.ext\nHost: create file-that-doesnt-exist.ext\nGuest: \nls -e\nOutput shows:\nls: ./file-that-doesnt-exist.ext: No such file or directory\nAnd doesn't list the file.\nThen running:\necho 3 > /proc/sys/vm/drop_caches\nls -e\nNow shows the file with a correct timestamp and permissions, and without the error.\n. I worked out the problem, the kernel version used has this problem. Upgrading the kernel solves it.\n. I believe it was 3.18 that had the problem. Upgrading fixed it, however that's from memory. That said, it was a year ago so any kernel less than a year old will have the problem resolved. Earlier kernels also worked for me, it was a small window of 2-3 kernel versions.\nAnd to clarify it's the guest's kernel not the host's. \n. ",
    "zoidbergwill": "@rdsubhas Awesome, that seems to have fixed it.\n. ",
    "sylus": "Really happy to have found this issue, and exactly as above if I run the following command, then the files work but I would have to run the command after every change.\nsh\necho 3 > /proc/sys/vm/drop_caches\n. This issue is more then 6 months old and it does seem like there is a serious regression in Boot2Docker.\nIs this something still being actively pursued or should I go straight to docker for mac / docker for windows to not need boot2docker?\nI should mention am on boot2docker 1.12.3 and problem still persists on that newest version\n. So just to clarify I guess boot2docker would have to update its Linux Kernel version? I know you were on Arch Linux, but what kernel version worked for you?\n. ",
    "mcatalin1": "This issue is still present in Boot2Docker version 1.12.3 which comes installed with the latest version of docker-toolbox\nSystem:\nboot2docker:\n    Boot2Docker version 1.12.3, build HEAD : 7fc7575 - Thu Oct 27 17:23:17 UTC 2016\n    Docker version 1.12.3, build 6b644ec\n    Linux default 4.4.27-boot2docker #1 SMP Tue Oct 25 19:51:49 UTC 2016 x86_64 GNU/Linux\nVirtualBox:\n    Version 5.0.20 r106931\nHost System:\n    OS X El Capitan - 10.11.6\nAffected container: \n    Alpine:3.4\nHow to replicate the issue\n\nrun docker quick start terminal\n\nexecute: \n    docker run -dt --name testfs -v $HOME:/data alpine:latest sh\n    docker exec -ti testfs sh\n    cd /data\nthis will start a new Alpine container and mount your home directory as /data\n\n\non your host system create a text file in the home dir:\n    cd\n    echo \"line1\" > test_file.txt\n\n\nin the container terminal:\n    cat test_file.txt\nResult:\nline1   \n\n\non your host system create a text file in the home dir:\n    echo \"line2\" >> test_file.txt\n\n\nin the container terminal:\n    cat test_file.txt\nResult:\nline1\nthe result should be:\nline1\nline2   \nas we just added another line to the file.\n. so the problem is not boot2docker but vboxsf (virtualbox shared folders) filesystem. \nto avoid this problem I'm mounting the home directory with NFS on mac and Samba (SMB) on windows. \n\n\nfor mac use https://github.com/adlogix/docker-machine-nfs\nyou'll get faster speeds and reliability\nfor Windows\n1. share the folder on the host \n2. mount it with something like this:\nmount -t cifs -o username=USERNAME,password=PASSWD //192.168.1.88/shares /mnt/share\nmore info here:  https://askubuntu.com/questions/101029/how-do-i-mount-a-cifs-share\nto make this permanent add it to /var/lib/boot2docker/bootlocal.sh\n. ",
    "oraoto": "It seems fixed in boot2docker v17.06.0-ce.\nEnvironment:\n\nboot2docker v17.06.0-ce\nWindows 10 1703\nVirtualBox 5.1.22\n\n\n. It seems fixed in boot2docker v17.06.0-ce.\nEnvironment:\n\nboot2docker v17.06.0-ce\nWindows 10 1703\nVirtualBox 5.1.22\n\n\n. ",
    "pyotr777": "@boxofrox \nThank you for the detailed answer! \nCustom boot2docker won't work for me, cause I'm thinking of a tool that anyone could use, not only myself. \n. Great news! Thank you!\n. ",
    "ovidiubuligan": "I also want to intall du utility  but tcz packages are confusing , I don't know if du even exists.\nThe reason behind it is because I want to find out disk usage of acontainer:\nwith du -d 2 -h /var/lib/docker/devicemapper | grepdocker inspect -f \"{{.Id}}\" `\nSee second answear from: http://stackoverflow.com/questions/26753087/docker-how-to-analyze-a-containers-disk-usage.\nDoesdu` utility exist for tinycore ?\nEDIT:\nIn the same stackoverflow page there was an answer a bit more to the bottom : docker ps -s\nSo no need for du anumore.\n. ",
    "philicious": "bump\n. yes, CONFIG_CRYPTO_FIPS it is\n. @tianon its been a while... have you thought about this ?\nimho it should go somehwere in https://github.com/boot2docker/boot2docker/blob/master/kernel_config#L4601 ? if so, I can try it out and possibly make a PR\n. Note: CONFIG_CRYPTO_FIPS might have dependencies on other CONFIG_XXX, see http://unix.stackexchange.com/questions/261112/kernel-configs-and-dependencies\n. ",
    "robertwe": "Im on Fusion 8.0.1 and got exactly same issue.\n. Im on Fusion 8.0.1 and got exactly same issue.\n. ",
    "mixja": "@frapposelli - confirming that using latest docker-machine v0.5.0-rc4 release fixes this issue\n. ",
    "mkorthuis": "Confirming the latest docker toolbox works.  (docker-machine v0.5.0 and bootdocker 1.9.0b)\n. Confirming the latest docker toolbox works.  (docker-machine v0.5.0 and bootdocker 1.9.0b)\n. ",
    "glinton": "There are no side effects or edge cases that I am aware of and both Ubuntu 14.04 and Debian 8 have them turned on by default.\n. There are no side effects or edge cases that I am aware of and both Ubuntu 14.04 and Debian 8 have them turned on by default.\n. ",
    "sebicas": "/var/lib/boot2docker/profile doesn't exist on my computer, I just created it but nothing happens.\nI am using:\ndocker-machine version 0.4.1 (e2c88d6)\nBoot2Docker version 1.8.2, build master : aba6192 - Thu Sep 10 20:58:17 UTC 2015\nDocker version 1.8.2, build 0a8c2e3\n. It works perfectly! Thanks!\n. ",
    "brandontamm": "@md5 - did you ever determine if bootlocal.sh or bootsync.sh would be better to save these changes to vs. the profile?\n. @md5 - did you ever determine if bootlocal.sh or bootsync.sh would be better to save these changes to vs. the profile?\n. ",
    "arianitu": "How do I disable this when running on Docker native? I can't ssh to the VM to change these settings.\n. How do I disable this when running on Docker native? I can't ssh to the VM to change these settings.\n. You can actually do this with a privileged container in Docker native. You can do it like this:\ndocker run -ti --privileged ubuntu /bin/bash\necho never | tee /sys/kernel/mm/transparent_hugepage/enabled\necho never | tee /sys/kernel/mm/transparent_hugepage/defrag\nI ended up creating an image for this and made redis/mariadb include it under depends_on in my docker-compose.yml file\nFROM ubuntu:latest\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nwhere docker-entrypoint.sh has:\n```\n!/bin/bash\nset -e\necho never | tee /sys/kernel/mm/transparent_hugepage/enabled\necho never | tee /sys/kernel/mm/transparent_hugepage/defrag\n```\n. You can actually do this with a privileged container in Docker native. You can do it like this:\ndocker run -ti --privileged ubuntu /bin/bash\necho never | tee /sys/kernel/mm/transparent_hugepage/enabled\necho never | tee /sys/kernel/mm/transparent_hugepage/defrag\nI ended up creating an image for this and made redis/mariadb include it under depends_on in my docker-compose.yml file\nFROM ubuntu:latest\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nwhere docker-entrypoint.sh has:\n```\n!/bin/bash\nset -e\necho never | tee /sys/kernel/mm/transparent_hugepage/enabled\necho never | tee /sys/kernel/mm/transparent_hugepage/defrag\n```\n. ",
    "atomi": "Any way #1086 can make the 1.10 release? /cc @tianon \n. @dschep I ended up forking, merging this PR and building the iso myself. It works fine using --virtualbox-boot2docker-url with docker-machine  https://github.com/atomi/boot2docker\n. This PR has not been merged. I just tested Linux shares on Linux Mint 17.3 using the new docker-machine v0.6.0 and the new boot2docker v1.10.0. - So you'll have to build your own boot2docker images to get Linux shares working which is a shame because they are very useful if you're testing configuration files quickly on a local setup.\n. I'm tracking this repo with this PR merged over at https://github.com/atomi/boot2docker/releases for anyone interested.\n. Could this be related to my issue? https://github.com/docker/machine/issues/3092\n. ",
    "dschep": "In similar vein to @atomi's comment, will #1086 ever be merged? It's a pretty annoying bug. I have to use this everytime I create a new VM.\n. ",
    "nmgeek": "It's cruel and unusual punishment to leave this issue unresolved.  Open source developers generally expect code to work first/best on Linux.\n. ",
    "pirog": "This works reliably on Debian 8, Ubuntu 14.04 and Fedora 23\n. ",
    "tbfangel": "I just tested this on Ubuntu 15.10 with the very latest boot2docker RC image v1.10.0-rc3 and docker-machine v0.6.0-rc3 and it's working in that setup.\n. ",
    "u-foka": "@tianon: I think the problem with --only-automount is that it will not do the uid/gid mapping for us :/\n. I've only tested it on osx.\nIt should work with the default windows share name: \"c/Users\", and now I've tested that it can even mount totally fu**ed up share names like c:\\Users if the user requests it using virtualbox-share-folder from https://github.com/docker/machine/pull/2100\n. Related PR in docker/machine is now: https://github.com/docker/machine/pull/3798\n. Related PR in docker/machine is now: https://github.com/docker/machine/pull/3798\n. VBoxControl only lists the names of the shared folders not the full path on the host os.\nAlso it does not seem to support spaces in the share names.\nExample output of the above VBoxControl command:\nroot@test:~# VBoxControl --nologo sharedfolder list -automount\nAuto-mounted Shared Folder mappings (2):\n01 - Users\n02 - test_foldeer\n. ",
    "djmaze": "Can confirm this works as expected on Linux: When creating a shared folder named /home/user, that folder is automatically mounted at /home/user in the VM.\n. ",
    "SergeC": "Can it be merged into upcoming v1.13.0?\n. ",
    "daghack": "LGTM\n. Ignoring, for the moment, whether or not this change is necessary, it is incorrect without also changing the preceding instructions (line 8).\n. ",
    "afbjorklund": "This is definitely possible to do, at least with localkube :\nhttps://github.com/afbjorklund/docker-machine-minikube-install. Boot2Docker is based on Tiny Core Linux, so you can use tce-load ?\nBut adding the whole Xfce desktop is out of scope for Boot2Docker...\nYou can add X11 and a more basic window manager (flwm) though.\nSee PR #1289 for more details, and an even ISO URL ready to go.. Most likely, the same change should go into Minikube (even though it doesn't use Boot2Docker by default)\nhttps://github.com/kubernetes/minikube/blob/master/pkg/minikube/machine/client.go#L113\ngo\n            EngineOptions: &engine.Options{\n                StorageDriver: \"aufs\",\n                TLSVerify:     true,\n            },. This was changed in Minishift already, although they went from \"devicemapper\" to \"overlay2\":\n(it seems like the fallback code with the btrfs vs the aufs storage driver is never used anymore ?)\nhttps://github.com/minishift/minishift/pull/1961\nMostly because devicemapper falls back to \"loopback\" unless drives are partioned correctly...\nBut that's another story, anyway it (minishift) is now also using \"overlay2\" for the boot2docker.iso\nhttps://github.com/minishift/minishift-centos-iso\ncentos-7.template:# update docker-storage to use overlay2 as default storage driver\ncentos-7.template:echo 'DOCKER_STORAGE_OPTIONS=\"--storage-driver overlay2\"' > /etc/sysconfig/docker-storage\n. ",
    "iBobik": "I read it could be caused by bug in kernel. And boot2docker does not have the newest kernet. Is there some \"command\" how to upgrade kernel, so I can try if it was not solved in newer releases?\n. Yes it could - Java program crashes and becomes zombie.\nJan Pobo\u0159il\n2016-01-07 14:52 GMT+01:00 Sebastiaan van Stijn notifications@github.com:\n\nCould be related to #1099\nhttps://github.com/boot2docker/boot2docker/issues/1099 and\ndocker/docker#18180 https://github.com/docker/docker/issues/18180 ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/boot2docker/boot2docker/issues/1094#issuecomment-169669284\n.\n. \n",
    "up4": "Hello, I can see that the boot script has the proper initialization order, but I'm still getting no luck with dnsmasq.\nI also set changed the host name with the \"host\" kernel boot param and in /var/lib/boot2docker/etc/hostname.\nThe hostname command returns the correct name.\nIs there a way my dhcp server can receive the hostname as part of the dhcp request? Thanks. . Hello, I can see that the boot script has the proper initialization order, but I'm still getting no luck with dnsmasq.\nI also set changed the host name with the \"host\" kernel boot param and in /var/lib/boot2docker/etc/hostname.\nThe hostname command returns the correct name.\nIs there a way my dhcp server can receive the hostname as part of the dhcp request? Thanks. . Hi thanks for the reply. I will see if on the TCL side if people are complaining about that and will be back here if I ever find something. Thanks again.. Hi thanks for the reply. I will see if on the TCL side if people are complaining about that and will be back here if I ever find something. Thanks again.. ",
    "tpbrown": "@metcalfc FYI -- actually even starting the network later won't suffice.  You can do that with nodhcp boot arg in isolinux.cfg, and DHCP will start from bootscript.sh -- but the hostname will still be 'boot2docker'.\nAt least for use with docker-machine the issue is that the final hostname isn't set in the initial boot process.  After the VM is created docker-machine reaches inside & configures it. \nA docker-machine stop/start d\n. ",
    "krishna81m": "@bjaglin , what is the equivalent for windows docker-machine upgrade?\n```\n$ VIRTUALBOX_BOOT2DOCKER_URL=https://github.com/boot2docker/boot2docker/releases/download/v1.9.0/boot2docker.iso\n$ docker-machine upgrade boot2docker-vm\nCould not load host \"boot2docker-vm\": Loading host from store failed: Host does not exist: \"boot2docker-vm\"\n$ docker-machine upgrade default\nStopping machine to do the upgrade...\nUpgrading machine default...\nLatest release for github.com/boot2docker/boot2docker is v1.9.1\nDownloading https://github.com/boot2docker/boot2docker/releases/download/v1.9.1/boot2docker.iso to C:\\Users.docker\\machine\\cache\\boot2docker.iso...\nStarting machine back up...\n```\nFigured it out by downloading the iso file from \nhttps://github.com/boot2docker/boot2docker/releases\ninto C:\\Users....docker\\machine\\machines\\default\nWhat a waste of time using 1.9.1.\n. ",
    "Nickology": "Nope, sorry @tianon. Just ran into this with Docker 1.10.3 on Ubuntu 14.04.3.\n. Nope, sorry @tianon. Just ran into this with Docker 1.10.3 on Ubuntu 14.04.3.\n. ",
    "clintkitson": "FYI,\nI wanted to update the thread to include some work that we have done in regards to creating a VirtualBox volume driver for Docker.  This enables you to leverage VB as the underlying storage platform for creating/removing/attaching/detaching volumes. \nhttps://github.com/emccode/rexray/pull/209\nThis leverages Go bindings for the VirtualBox SOAP API from this package that was updated.\nhttps://github.com/appropriate/go-virtualboxclient/pull/1\nSeems like a great way to bring persistence to containers under boot2docker.  Currently it is targeted at VB v4, but we are working towards the v5 changes that are needed.\n. Tested, and merged by @tianon.  Thank you!\n. LGTM @AkihiroSuda.  Tested end to end, and it fixed my problem.  External volumes now work with boot2docker and the virtualbox rexray driver.\n. ",
    "dvorakluk": "Nice! Hope I'm not too off topic here, but if you need bidirectional sync, have a look at my unison image. Works across multiple platforms too (although windows binaries of unison are not easy to find).\n. ",
    "sevikkk": "Issue is exactly the same as with VBox, b2d does not properly use vmware-tools/vboxservice - so shared folders are not properly mounted by them.\nAnd this feature was explicitly mentioned in Docker's \"release notes\" blog post:\nhttps://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/\nSo this commit just adds absolutely identical hackish handling for /Users for vmware as for vbox in commit 1bf1671c0f5c103ac4e2229b96a21a04b6d99043\n. /Users can't exist on boot of b2d, as / is tmpfs created by boot scripts :)\nAnd docker-machine has explicit check that directory does not exist before mount. So if b2d will do it on boot, docker-machine will not do that.\n. ",
    "mxplusb": "I think the init file should definitely be added to core, I think a startup and shutdown init that restarts DHCP would be good too, that way it will read static IPs as well.\n. ",
    "klodoma": "@AkihiroSuda Maybe this seems like a very stupid question, but how can I install this on Ubuntu 14? \n. @AkihiroSuda thanks a lot! :) some things are confusing. I'll give it a try.\n. @AkihiroSuda me again. Is there any guide how to run docker under Ubuntu, but not native, but in a VirtualBox? I think this could solve the issue with your ISO file, without the need to upgrade the local host. Right? \n. ",
    "ches": "Apologies if this is a poor place to ask or if the release policy is explained somewhere I've overlooked, but\u2014given the amount of interest in docker/docker#18180\u2014are ISO releases of boot2docker ever made between Docker releases? If I could advise people that docker-machine upgrade is all that's needed to fix and move on with their day, that'd be swell!\nThanks everyone and especially @AkihiroSuda for your work.\n. ",
    "ChristianKniep": "I see... that make sense... :) I looked at it but somehow got it wrong.\n. ",
    "graingert": "This readme uses SSL and TLS interchangeably. This PR updates the readme to be consistent\n. also SSL is deprecated\n. ",
    "toxmc": "thank you AkihiroSuda for help. i use tce command.\nhttp://distro.ibiblio.org/tinycorelinux/download_howto.html\n. ",
    "JeNeSuisPasDave": "Also reported here: https://github.com/docker/machine/issues/2934\n. Closing because this seems to be an issue on the docker-machine side ... not an issue with the boot2docker image.\n. ",
    "Kbungo": "You might find this comment from an issue in docker-library helpful.\nThe gist of it, is that because you're running through docker-machine (a VM), the files are owned by docker (uid 1000). If you are not editing them as uid 1000 inside your container, you don't have the proper permissions to modify those files. \nThey talk about some solutions there, you can try. Personally, once i began mounting files i simply used VirtualBox to run an ubuntu desktop image and worked inside there (minus docker-machine).\n. You can't. You need a 64bit OS to install on.\n. ",
    "valentinbud": "347 is related but it doesn't clarify the above. I would like the Root CA to be inserted at build inside the boot2docker.iso and at startup to be automatically inserted by install-ca-certs.\n. For other boot2docker-ers out there I will post here a hack to achieve the above. In fact I will post my custom Dockerfile.\n```\nFROM boot2docker/boot2docker\nCOPY docker/ $ROOTFS/etc/docker/\nCOPY ca-certificates $ROOTFS/opt/ca-certificates\nCOPY custom-ca-certificates $ROOTFS/opt/\nRUN chmod +x $ROOTFS/opt/custom-ca-certificates \\\n    && echo \"/opt/custom-ca-certificates\" >> $ROOTFS/opt/bootlocal.sh \\\n    && echo \"# Custom Root CA Certificates\" >> $ROOTFS/opt/bootscript.sh \\\n    && echo \"if [ -e /opt/bootlocal.sh ]; then\" >> $ROOTFS/opt/bootscript.sh \\\n    && echo \"    /bin/sh /opt/bootlocal.sh > /var/log/bootlocal.log 2>&1 &\" >> $ROOTFS/opt/bootscript.sh \\\n    && echo '    echo \"------------------- ran /var/lib/boot2docker/bootlocal.sh\"' >> $ROOTFS/opt/bootscript.sh \\\n    && echo \"fi\" >> $ROOTFS/opt/bootscript.sh\nRUN /make_iso.sh\nCMD [\"cat\", \"boot2docker.iso\"]\n```\ncustom-ca-certificates is a shell script which content can be found at the following gist:  https://gist.github.com/irgeek/afb2e05775fff532f960. I have changed BOOT2DOCKER_CERTS_DIR=/var/lib/boot2docker/certs to BOOT2DOCKER_CERTS_DIR=/opt/ca-certificates.\nHappy hacking :).\n. ",
    "IvanChen118": "Hi AkihiroSuda, thanks for your suggestion, I will try! :D\n. ",
    "huguesb": "@AkihiroSuda done\n. @tianon Done\n30s seems like a reasonable timeout given that I've seen the daemon take 10-15s to stop.\n. ",
    "tiptronic": "Same thing here: the add/change/remove buttons are missing and there seems to be no way to add a directory/share/volume on the Mac. (As a side-note: this functionality does exist on my Synology NAS as well)\n. ",
    "alexandrev": "We are solving the issue from Kitematic as you can see https://github.com/docker/kitematic/pull/1202 but I think it should be taken care of from Boot2Docker as well. Please, take a look! \n. We are solving the issue from Kitematic as you can see https://github.com/docker/kitematic/pull/1202 but I think it should be taken care of from Boot2Docker as well. Please, take a look! \n. ",
    "igormelnick": "I would like to describe the problem in another words.\nWhen user adds a shared folder in virtualbox it doesn't automatically mount within boot2docker machine. Instead, manual mount is required. This definitely happens on OSX, I'm not sure about other OS'es\nIs this the intended behaviour or a bug?\nThanks\nCC: @SvenDowideit @tianon \n. ",
    "darrellenns": "See the excerpt below from /etc/rc.d/vbox. It only mounts the /Users or /c/Users folders. The note regarding VBoxService not working doesn't appear to apply anymore. I was able to get it to automount virtualbox shared folders as follows:\n- create vboxsf user and group (it seems like VBoxService is hardcoded to mount as this user/group)\n- add docker user to vboxsf group (so it has permissions to access the mounts)\n- run VBoxService --only-automount\nExcerpt from /etc/rc.d/vbox:\n\n# bfirsh gets all the credit for this hacky workaround :)\n    try_mount_share /Users 'Users' \\\n            || try_mount_share /Users \\\n            || try_mount_share /c/Users 'c/Users' \\\n            || try_mount_share /c/Users \\\n            || try_mount_share /c/Users 'c:/Users' \\\n            || true\n    # TODO replace this whole hacky bit with VBoxService --only-automount\n    # (the problem with that being that we can't run VBoxService because the\n    #  32bit VBoxService won't work with the 64bit kernel modules, but the 64bit\n    #  VBoxService won't work with our 32bit userspace; good times)\n. See the excerpt below from /etc/rc.d/vbox. It only mounts the /Users or /c/Users folders. The note regarding VBoxService not working doesn't appear to apply anymore. I was able to get it to automount virtualbox shared folders as follows:\n- create vboxsf user and group (it seems like VBoxService is hardcoded to mount as this user/group)\n- add docker user to vboxsf group (so it has permissions to access the mounts)\n- run VBoxService --only-automount\n\nExcerpt from /etc/rc.d/vbox:\n\n# bfirsh gets all the credit for this hacky workaround :)\n    try_mount_share /Users 'Users' \\\n            || try_mount_share /Users \\\n            || try_mount_share /c/Users 'c/Users' \\\n            || try_mount_share /c/Users \\\n            || try_mount_share /c/Users 'c:/Users' \\\n            || true\n    # TODO replace this whole hacky bit with VBoxService --only-automount\n    # (the problem with that being that we can't run VBoxService because the\n    #  32bit VBoxService won't work with the 64bit kernel modules, but the 64bit\n    #  VBoxService won't work with our 32bit userspace; good times)\n. \n",
    "disenchant": "I'm having the exact same problem on boot2docker v1.10.1 and at least on the Docker IRC nobody seemed to have a solution yet.\nping @diogomonica: I think this is a pretty important issue if we would like more users to try out the new user namespaces feature in Docker. So maybe you know the right person to have a look at this :innocent: \n. ",
    "estesp": "For distros and/or environments that don't support the full tools I assume we will need to add some manual instructions on setup.  Also, if there is a way to make the use of adduser and addgroup more accomodating/graceful in failure, that is probably good as well.\nThe shadow-utils pkg is supposed to carry support for creating ranges in /etc/sub{u,g}id if I remember correctly, and distros are in various states of supporting that properly.  Ubuntu works out of the box; for some reason on recent Fedora you have to touch the files first, and then it all magically works...so :)\nHappy to help make this all more robust when we aren't on a full distro/using busybox, although some of that may only be \"here's the manual path\" docs\n. Probably the most seminal discussion on this is the LXC 1.0 release blog that discusses the settings in /etc/sub{u,g}id: https://www.stgraber.org/2014/01/17/lxc-1-0-unprivileged-containers/\nThat has the most commonly seen default for the first user to be assigned a range in /etc/sub*id files:\nusername:100000:65536\nIn your case, I assume you can pre-create the user and group dockremap, and then pre-create the /etc/subuid and /etc/subgid files with exactly the same contents as above, with username replaced with dockremap.\nSpecific details on those files are here: http://man7.org/linux/man-pages/man5/subuid.5.html\nand http://man7.org/linux/man-pages/man5/subgid.5.html\n. ",
    "crdil": "My containers won't show up after I have started docker with the following command:\n/usr/bin/docker daemon -H fd:// -g /home/docker --userns-remap=default\nI tried to set the /home/docker directory to user and group dockremap, but it didn't help. Is it suppose to work this way so I have to create new containers, that only dockremap user/group has access to?\n. ",
    "dhawal55": "Ok, i ended up creating /etc/subuid and /etc/subguid with following text dockuser:100000:65536. Started docker daemon as docker daemon --userns-remap:dockuser. Now i get error when starting any container:\n```\ndocker run nordstrom/helloworld\nTimestamp: 2016-06-16 17:05:00.309899208 +0000 UTC\nCode: System error\nMessage: operation not permitted\nFrames:\n0: setupRootfs\nPackage: github.com/opencontainers/runc/libcontainer\nFile: rootfs_linux.go@40\n\n1: Init\nPackage: github.com/opencontainers/runc/libcontainer.(*linuxStandardInit)\nFile: standard_init_linux.go@57\n\n2: StartInitialization\nPackage: github.com/opencontainers/runc/libcontainer.(*LinuxFactory)\nFile: factory_linux.go@240\n\n3: initializer\nPackage: github.com/docker/docker/daemon/execdriver/native\nFile: init.go@35\n\n4: Init\nPackage: github.com/docker/docker/pkg/reexec\nFile: reexec.go@26\n\n5: main\nPackage: main\nFile: docker.go@18\n\n6: main\nPackage: runtime\nFile: proc.go@111\n\n7: goexit\nPackage: runtime\nFile: asm_amd64.s@1721\ndocker: Error response from daemon: Cannot start container 0531588983fdeb0bf074f0c0cd0092632bcead707cbc1721d76cb767a6adbd21: [9] System error: operation not permitted.\n```\nUPDATE: I'm running this on a CoreOS VM.\nUPDATE: https://github.com/docker/docker/issues/20798 sheds more lights on this and this maybe fixed in docker v1.11 whereas CoreOS is on docker 1.10.3\n. ",
    "jjqq2013": "Hello, it seems --userns-remap OK now (boot2docker 1.11.2 in docker-machine version 0.7.0, build a650a40, Mac OS X),\nbut boot2docker lose my customized setting files after restart, that is another problem.\nThis is how i do the --userns-remap, most are same as what the issue poster did.\nDifferences are:\n--userns-remap=default -> --userns-remap=osx_tailee:osx_staff\nand add /etc/subuid /etc/subgid  (See this )\n$ docker-machine ssh rethink   # rethink is my vm name, please change it to yours.\n...\ndocker@rethink:~$ sudo vi /var/lib/boot2docker/profile \n...\nEXTRA_ARGS='\n--label provider=virtualbox\n--userns-remap=osx_tailee:osx_staff            #####this is what i add#####\n'\n...\nthen restart, cause same error Maximum number of retries (10) exceeded, docker daemon is not started,\nthen,\n```\ndocker@rethink:~$ sudo addgroup -g 20 osx_staff\ndocker@rethink:~$ sudo adduser -G osx_staff -SDHu 501 osx_tailee\n```\nthen prepare uid/gid range for container\n```\ndocker@rethink:~$ sudo vi /etc/subuid\nosx_tailee:100000:65536\ndocker@rethink:~$ sudo vi /etc/subgid\nosx_staff:200000:65536\n```\nthen start docker daemon\n```\ndocker@rethink:~$ sudo /usr/local/bin/docker daemon -D -g \"/var/lib/docker\" -H unix:// -H tcp://0.0.0.0:2376 --label provider=virtualbox \\\n--userns-remap=osx_tailee:osx_staff --tlsverify --tlscacert=/var/lib/boot2docker/ca.pem --tlscert=/var/lib/boot2docker/server.pem --tlskey=/var/lib/boot2docker/server-key.pem -s aufs\n...\nDEBU[0000] docker group found. gid: 100               \n...\nINFO[0000] API listen on [::]:2376                    \nINFO[0000] API listen on /var/run/docker.sock         \n```\nThen i run docker container. There are strange thing here: previously used docker image will be treated as \"not exist\", get downloaded again.\n$ docker run -it -v /bin:/xxx busybox\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\n8ddc19f16526: Pull complete \nDigest: sha256:a59906e33509d14c036c8678d687bd4eec81ed7c4b8ce907b888c607f6a1e0e6\nStatus: Downloaded newer image for busybox:latest\n/ # id\nuid=0(root) gid=0(root) groups=10(wheel)\n/ # ls /xxx\nVBoxClient     cat            dd             echo           gunzip         ln             mount          printenv       ...\n...\n/ # echo hi > /xxx/a\nsh: can't create /xxx/a: Permission denied\nSo far it works as expected. \nBut when i restart boot2docker, it lost the two users created by me, and /etc/subuid, /etc/subgid, \nI think the reason is because this VM is configured to start from boot2docker.iso which does not save my modification.\n. +1\n. ",
    "zavalit": "yes, i also do it that way, go and change that kernel option manually, but my problem is, that i ship the whole emacs building routine in a single repo. and it kinda not very clean solution to encourage people to go a hack a vm kernel. \nand for sure, it's still possible to provide an optional bash script that go into vm over ssh and tries to overwrite kernel. \n. ",
    "iam-peekay": "@AkihiroSuda what did you mean by outside the container? The commands I wrote above are executed in my Dockerfile. \nSorry if I misunderstood you.\n. @AkihiroSuda thank you. I got the error \nmodprobe: can't load module kvm_intel (kernel/arch/x86/kvm/kvm-intel.ko): Operation not supported\n. @AkihiroSuda  I ran the command on Vmware Fusion docker machine as well, and I get the same error. \n. @AkihiroSuda  I ran the command on Vmware Fusion docker machine as well, and I get the same error. \n. Yup. Even though I've configured the options:\nvhv.enable = TRUE\nvcpu.hotadd = FALSE\nI still get the error.\n\n. Yup. Even though I've configured the options:\nvhv.enable = TRUE\nvcpu.hotadd = FALSE\nI still get the error.\n\n. @AkihiroSuda  I was able to run sudo madprobe kvm_intel after checking the box next to  \"Virtualize Intel VT-x/EPT\" in vm settings\nHowever, when I run my container with the emulator, I still get the error that KVM is not installed and the docker container exits/stops:\n\n. @AkihiroSuda  I was able to run sudo madprobe kvm_intel after checking the box next to  \"Virtualize Intel VT-x/EPT\" in vm settings\nHowever, when I run my container with the emulator, I still get the error that KVM is not installed and the docker container exits/stops:\n\n. thank you so much! that helped solve the issue with it saying that the KVM is not installed. Now I get error saying that the /dev/kvm is missing \n\n. thank you so much! that helped solve the issue with it saying that the KVM is not installed. Now I get error saying that the /dev/kvm is missing \n\n. @AkihiroSuda it might have to do with KVM (vmx) being disabled by the BIOS. Haven't yet figured out how to enter the BIOS setup and enable Virtualization Technology (VT)\n. @AkihiroSuda it might have to do with KVM (vmx) being disabled by the BIOS. Haven't yet figured out how to enter the BIOS setup and enable Virtualization Technology (VT)\n. thank you! I've done #1, #2, # 3 outside the container.\nFor #4, #5, #6, I am not able to get inside the container because it exits immediately after I run the container due to the KVM error message from above. \n. thank you! I've done #1, #2, # 3 outside the container.\nFor #4, #5, #6, I am not able to get inside the container because it exits immediately after I run the container due to the KVM error message from above. \n. Thank you! After shutting off and restarting the vm, and then running docker run -it --privileged IMAGE_NAME I no longer have that error about the kvm. \nmy only issue now is that I'm not able to connect to the emulator running inside the container at IP address 172.17.0.2 on port 5902 (which is what I set the VNC display port to).. I'll figure out what's happening.\nThank you so much for all the help! Really appreciated. \n\n. Thank you! After shutting off and restarting the vm, and then running docker run -it --privileged IMAGE_NAME I no longer have that error about the kvm. \nmy only issue now is that I'm not able to connect to the emulator running inside the container at IP address 172.17.0.2 on port 5902 (which is what I set the VNC display port to).. I'll figure out what's happening.\nThank you so much for all the help! Really appreciated. \n\n. ",
    "servel333": "Workaround works\n. ",
    "fwhite-wsm": "Thank you so much for fixing this :). ",
    "protsenkovi": "I apologize for this. Didn't even mention that created it.\n. ",
    "davidmnoriega": "You can configure the timesync threshold of VirtualBox to address this \nhttp://stackoverflow.com/a/19492466\n. ",
    "vivekmenezes": "Thanks. I'm closing this issue for now.\n. ",
    "heuvel": "I have the same problem with boot2docker on a Mac with the following versions:\n- OS X El Capitan 10.11.5\n- VirtualBox 5.1.0 r108711\n- docker-machine version 0.8.0-rc2, build 4ca1b85\n- Boot2Docker 1.12.0.rc5\n- 3rd network adapter: bridged, PC-Net Fast III\nRemoving and re-adding the gateway fixes the problem.\n. I have the same problem with boot2docker on a Mac with the following versions:\n- OS X El Capitan 10.11.5\n- VirtualBox 5.1.0 r108711\n- docker-machine version 0.8.0-rc2, build 4ca1b85\n- Boot2Docker 1.12.0.rc5\n- 3rd network adapter: bridged, PC-Net Fast III\nRemoving and re-adding the gateway fixes the problem.\n. ",
    "pmario": "it seems b2d iso has been changed and docker-machine is rc3 now. atm it works :)\n. it seems b2d iso has been changed and docker-machine is rc3 now. atm it works :)\n. ",
    "SchwarzM": "Linking libtirpc.so.1 to libtirpc.so.3.0.0 and running ldconfig works for me.\n. Linking libtirpc.so.1 to libtirpc.so.3.0.0 and running ldconfig works for me.\n. ",
    "kaosagnt": "Yup your correct. If I build an iso with the following\n```\nTCL 7 doesn't ship with libtirpc.so.1 Dummy it up so the\nVMWare tools work again.\nRUN cd $ROOTFS/usr/local/lib; \\\n    ln -s libtirpc.so.3.0.0 libtirpc.so.1; \\\n    ldconfig\n```\nthen things work correctly again. Previously the ISO would take ages to boot and not shutdown correctly as well as not mount volumes via the vmware tools. No all the tools are running it boots in normal time and shutdown down correctly as well.\n. Yup your correct. If I build an iso with the following\n```\nTCL 7 doesn't ship with libtirpc.so.1 Dummy it up so the\nVMWare tools work again.\nRUN cd $ROOTFS/usr/local/lib; \\\n    ln -s libtirpc.so.3.0.0 libtirpc.so.1; \\\n    ldconfig\n```\nthen things work correctly again. Previously the ISO would take ages to boot and not shutdown correctly as well as not mount volumes via the vmware tools. No all the tools are running it boots in normal time and shutdown down correctly as well.\n. Any update on this issue?\n. Any update on this issue?\n. Kernel change https://lkml.org/lkml/2018/4/12/711\nThe crng_init variable has three states:\n0: The CRNG is not initialized at all\n1: The CRNG has a small amount of entropy, hopefully good enough for\n   early-boot, non-cryptographical use cases\n2: The CRNG is fully initialized and we are sure it is safe for\n   cryptographic use cases.\nThe crng_ready() function should only return true once we are in the\nlast state.\n\nJust Everything requiring crypto and strong entropy during boot.\nBehaviour exhibited running on Virtualbox and VMWare Fusion also.\nThe addition of rng-tools fixes this.\nThe 4.9.x branch was changed here as well (4.4.96)\nhttps://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?h=linux-4.9.y&id=4dfb3442bb7e1fb80515df4a199ca5a7a8edf900\nSo all Linux kernels after April 12th 2018 once back ported will exhibit the behaviour.\n. Some interesting discussion: \nhttps://news.ycombinator.com/item?id=16972827\nhttps://fedoraproject.org/wiki/Common_F28_bugs#Boot_process_is_very_slow_or_appears_to_hang_with_kernel_4.16.4_onwards\nBuilt a new image with this change:\n```\nianm-centos7:~/development/docker/images/iso/boot2docker>cat rootfs/rootfs/opt/gen-entropy.sh \n!/bin/sh\nCOUNTER=0\nwhile [  ${COUNTER} -lt 1000 ]; do\n    find / -name \"*.sh\" -xdev > /dev/null 2>&1\n    let COUNTER=COUNTER+1\ndone\nianm-centos7:~/development/docker/images/iso/boot2docker>head rootfs/rootfs/opt/bootscript.sh \n!/bin/sh\nTry and generate entropy...crude...\n/opt/gen-entropy.sh &\n```\n\nSo generating activity while the boot process is happening seems to work. The VM didn't block as long when Docker started and no docker-machine timeout \"detecting the provisioner\". Only lightly tested under Virtualbox 5.2.16 and I'm running  Kernel 4.14.55-boot2docker, Boot2Docker version 18.06.0-ce, DockerToolbox-18.06.0-ce on windows.\nAs far as I can tell other hypervisors don't have the equivalent of a virtio-rng-pci device. I'll keep digging.. From what I can tell from reading various articles, if we see /dev/hwrng we launch rngd from rng-tools and use it to feed entropy from the /dev/hwrng device. Current kernel config options i'm using.\nCONFIG_HW_RANDOM=y\nCONFIG_HW_RANDOM_TIMERIOMEM=m\nCONFIG_HW_RANDOM_INTEL=m\nCONFIG_HW_RANDOM_AMD=m\nCONFIG_HW_RANDOM_VIA=m\nCONFIG_HW_RANDOM_VIRTIO=m\nSo whether it's Virtio or and intel / AMD / Via HW random device they all show up as /dev/hwrng\nrngd --list shows this under Virtualbox windows 7 host Intel CPU\nEntropy sources that are available but disabled\n4: NIST Network Entropy Beacon\nAvailable and enabled entropy sources:\n2: Intel RDRAND Instruction RNG\nand we have a \nroot@kernel-414:/home/docker# ls -al /dev/hwrng\ncrw-------    1 root     root       10, 183 Aug  1 01:16 /dev/hwrng\nand things work.\nUnder VMWare fusion macOS X 10.13.x host Intel CPU\nmy Centos 7 guest also see\n[ianm@ianm-centos7 ianm]# ls -al /dev/hwrng\ncrw------- 1 root root 10, 183 Aug  1 09:23 /dev/hwrng\nI think installling rng-tools at this point is the way to move forward and evaluate other options as we discover them.. Anybody wanting to play with what I'm working on it's here\nhttps://github.com/kaosagnt/boot2docker/tree/kernel-4.14\nKernel 4.14.60, aufs4.14.56+, Virtualbox 5.2.16, VMWare tools stable-10.3.0, rng-tools v6.3.1, Parallels 13.3.2-43368, Xen v7.10.0, qemu tools, Docker v18.06.0-ce. Any body interested in TCL 9.x or XFS filesystem support can find it apart of\nhttps://github.com/kaosagnt/boot2docker/tree/kernel-4.14\n. So far changing /var/lib/boot2docker/profile to overlay2\nNo issues loading an image and attaching a container.\nQuestion. How does /var/lib/boot2docker/profile get created in a newly created vm. Does that come from docker-machine?\ndocker@kernel-414:~$ docker info\nContainers: 1\n Running: 0\n Paused: 0\n Stopped: 1\nImages: 1\nServer Version: 18.06.0-ce\nStorage Driver: overlay2\n Backing Filesystem: extfs\n Supports d_type: true\n Native Overlay Diff: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host macvlan null overlay\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nInit Binary: docker-init\ncontainerd version: d64c661f1d51c48782c9cec8fda7604785f93587\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\ninit version: fec3683\nSecurity Options:\n seccomp\n  Profile: default\nKernel Version: 4.14.60-boot2docker\nOperating System: Boot2Docker 18.06.0-ce (TCL 8.2.1); kernel-4.14 : 1f40eb2 - Tu\ne Aug  7 02:00:59 UTC 2018\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 3.852GiB\nName: kernel-414\nID: LBJH:X7CI:XDRR:TFEL:55RA:FAER:FM3Y:EJS3:DMNB:JSO6:CPS2:I3CZ\nDocker Root Dir: /mnt/sda1/var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=virtualbox\nExperimental: false\nInsecure Registries:\n 127.0.0.0/8. docker@default:~$ cat /var/lib/boot2docker/profile\nEXTRA_ARGS='\n--label provider=virtualbox\n'\nCACERT=/var/lib/boot2docker/ca.pem\nDOCKER_HOST='-H tcp://0.0.0.0:2376'\nDOCKER_STORAGE=aufs\nDOCKER_TLS=auto\nSERVERKEY=/var/lib/boot2docker/server-key.pem\nSERVERCERT=/var/lib/boot2docker/server.pem\n. https://github.com/docker/machine/blob/master/libmachine/provision/boot2docker.go\nif provisioner.EngineOptions.StorageDriver == \"\" {\n        provisioner.EngineOptions.StorageDriver = \"aufs\"\n    }\nThis default will need changing.. If your looking to run something at boot time, create\n/var/lib/boot2docker/bootlocal.sh\nand it will be run during the boot process.\n. Maybe something like this? This is just off the top of my head, not tested.\ncreate /var/lib/boot2docker/bootlocal.sh\n```\n!/bin/sh\npkill ntpd\nNTP_SERVER=someserver /etc/rc.d/ntpd &\n```\n/var/lib/boot2docker/bootlocal.sh is run if it exists at boot time after ntpd is run.\n. Your only option is to modify /etc/init.d/tc-config directly and copy it into a new build.\nThe boot system is not upstart or systemd.....\n```\nFROM boot2docker/boot2docker:latest\nADD files/etc/init.d/tc-config $ROOTFS/etc/init.d/\nRUN /tmp/make_iso.sh\nCMD [\"cat\", \"boot2docker.iso\"]\n```\nfiles/etc/init.d/tc-config is your modified version.. See https://github.com/boot2docker/boot2docker/issues/1315\nas it is probably related.\nUsing the vmware driver fixed my issues.\nhttps://github.com/machine-drivers/docker-machine-driver-vmware\ngo get -u github.com/machine-drivers/docker-machine-driver-vmware\n. See https://github.com/boot2docker/boot2docker/issues/1315\nas it is probably related.\nUsing the vmware driver fixed my issues.\nhttps://github.com/machine-drivers/docker-machine-driver-vmware\ngo get -u github.com/machine-drivers/docker-machine-driver-vmware\n. I diffed the generated Kernel config with my working one. This stands out for VMWare folk.\n-# CONFIG_VMWARE_VMCI is not set\n+CONFIG_VMWARE_VMCI=m\n+CONFIG_VMWARE_BALLOON=m\n-# CONFIG_OPENVSWITCH is not set\n-# CONFIG_VSOCKETS is not set\n-# CONFIG_NETLINK_DIAG is not set\n-# CONFIG_MPLS is not set\n+CONFIG_OPENVSWITCH=m\n+CONFIG_OPENVSWITCH_VXLAN=m\n+CONFIG_VSOCKETS=m\n+CONFIG_VMWARE_VMCI_VSOCKETS=m\n+CONFIG_VIRTIO_VSOCKETS=m\n+CONFIG_VIRTIO_VSOCKETS_COMMON=m\n+CONFIG_HYPERV_VSOCKETS=m\nThere is probably others I have missed. I'll keep digging.\n. @StefanScherer you can try my fork here.\nhttps://github.com/kaosagnt/boot2docker-xfs-ng/releases/tag/18.09.0-v1.0.0\nNote: it is slightly different from the official boot2docker. Uses TCL 9.x, and XFS filesystems as the default but you can use it to see what may be missing in the Kernel config.. ",
    "kane-c": "I have switched to Dinghy for now - it uses boot2docker but NFS rather than Parallels shared folders. It's been running perfectly.\nAs an added bonus I get reliable filesystem events for live reloading features in Django and gulp/webpack inside Docker containers.\n. I have switched to Dinghy for now - it uses boot2docker but NFS rather than Parallels shared folders. It's been running perfectly.\nAs an added bonus I get reliable filesystem events for live reloading features in Django and gulp/webpack inside Docker containers.\n. @thaJeztah yep, I've got the beta but haven't tried it yet :) I'll give it a go, thanks!\n. @thaJeztah yep, I've got the beta but haven't tried it yet :) I'll give it a go, thanks!\n. I haven't tested this following #1217 but I am now using dinghy which works perfectly.. I haven't tested this following #1217 but I am now using dinghy which works perfectly.. ",
    "nnutter": "Ah, interesting.  I thought to check different version of bash but not broad enough. =)\n. Ah, interesting.  I thought to check different version of bash but not broad enough. =)\n. ",
    "basil-conto": "The discrepancy spotted is not between the code and comment in question, nor between different versions of bash. Rather, it is between the options supported by the ulimit shell builtin in bash and dash , respectively. Notice that the script in question uses the latter shell. See http://askubuntu.com/a/251600 for a helpful explanation and suggestions.. The discrepancy spotted is not between the code and comment in question, nor between different versions of bash. Rather, it is between the options supported by the ulimit shell builtin in bash and dash , respectively. Notice that the script in question uses the latter shell. See http://askubuntu.com/a/251600 for a helpful explanation and suggestions.. ",
    "bbodenmiller": "While the new method of /etc/docker/certs.d is good I don't think you can remove the old method as many are using it so I think it is worth merging this. Also updating README.md to state that .pem and .crt are allowed.\nI've also opened a PR at https://github.com/boot2docker/boot2docker/pull/1195 to document the new method of /etc/docker/certs.d.\n. Addressed your comments. I believe technically default can be dropped from the docker-machine commands but it still demonstrates how you can target certain machines.\n. ",
    "ailispaw": "It seems a VirtualBox Guest Additions issue.\nhttps://www.virtualbox.org/ticket/14746\nThere is a workaround.\n. I guess you need iocharset=utf8 as an additional mount option for non-latin filenames.\nhttps://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/etc/rc.d/vbox#L11\nhttps://github.com/boot2docker/boot2docker/pull/1044\n. I guess you need iocharset=utf8 as an additional mount option for non-latin filenames.\nhttps://github.com/boot2docker/boot2docker/blob/master/rootfs/rootfs/etc/rc.d/vbox#L11\nhttps://github.com/boot2docker/boot2docker/pull/1044\n. ",
    "jd-daniels": "Changed to '=m'. Modules make sense for this.\n. Tested the new iso via rancher and now boot2docker works fine with cattle networking out of the box. Thanks! :+1: \n. ",
    "Shah-Milan": "I am able to make it work. The issue was with the IP of the machine.\nfollowed this link.\nhttps://support.zenoss.com/hc/en-us/articles/203582809-How-to-Change-the-Default-Docker-Subnet\n. ",
    "kjkunte": "Hi, \nThanks for the update I have put a pull request for the same after the commit.\n. Hi, \nThanks for the update I have put a pull request for the same after the commit.\n. Are the two sockets seen by a different Linux VM, maybe Debian, Ubuntu, or CentOS?\nI can test this theory and see if a linux VM can recognize the 2 sockets. Though, It would be great to know if there is kernel_config entry for this. \n. Hi,\nI checked it on a Ubuntu16.04 VM, and it did not recognize the multiple sockets. Here is the output,\n\nAll I am concerned is, if it cannot recognize multiple sockets, will it affect the performance, if I extend the use of processors for my simulation from more than 6? As there will be 6 cores per socket, with 2 threads per core. \n. Hi,\nI checked it on a Ubuntu16.04 VM, and it did not recognize the multiple sockets. Here is the output,\n\nAll I am concerned is, if it cannot recognize multiple sockets, will it affect the performance, if I extend the use of processors for my simulation from more than 6? As there will be 6 cores per socket, with 2 threads per core. \n. ",
    "philkunz": "I confused something, sorry!\n. I confused something, sorry!\n. ",
    "necrose99": "ok np , was more trying to build a tinderbox/Gentoo type  chroot..  for testing package builds.. \nie pentoo iso > squashfs > rootfs.tarball  > docker\nnew ebuild emerge (not brick my real root)  etc.. \ngetting arm64 emu/qemu also would be high on my list.. . ",
    "ajeetraina": "I am too looking forward for ipvs support on boot2docker.sio.\n. I am too looking forward for ipvs support on boot2docker.sio.\n. ",
    "anandnevase": "Closing duplicate of https://github.com/boot2docker/boot2docker/issues/1187\n. ",
    "educatedwarrior": "Good question.   My version of boot2docker came installed with some Trojan Horse pulling crap down from sektori.org.    It was automatically creating and destroying containers and wreaking havoc on my wan and lan.. ",
    "jhagege": "I think it would make sense for other users as well since it is a feature supported out of the box when Docker host is running in a Unix VM.\nWhat should be in the PR then ? Just changing the line \n# CONFIG_AUTOFS4_FS is not set to\nCONFIG_AUTOFS4_FS=y?\nThen regarding the new release, should it be part of the pull request? \nThanks for your fast answer.\n. I think it would make sense for other users as well since it is a feature supported out of the box when Docker host is running in a Unix VM.\nWhat should be in the PR then ? Just changing the line \n# CONFIG_AUTOFS4_FS is not set to\nCONFIG_AUTOFS4_FS=y?\nThen regarding the new release, should it be part of the pull request? \nThanks for your fast answer.\n. ",
    "chirkin": "The reason is missing getent command. Don't have ideas yet.\n. ",
    "AlbanMontaigu": "Another way is to install getent on tinycore boot2docker iso by building your own. The missing tiny core package is glibc-apps. Installing it shloud provide getent command and let virtualbox work with vagrant even if version is 1.8.5.\nRegards.\n. ",
    "nagarajasr": "@kk580kk it works for me.. on windows 7 64 bit. what OS are you using? are you able to run other VMs using virtualbox (just to rule out any problems in vbox installation)\n. @kk580kk could you verify the shasum of the boot2docker.iso against this: https://github.com/boot2docker/boot2docker/releases/tag/v1.12.1\n. ",
    "Akk3d1s": "I had to uninstall and install again. This solved my problem.\n. ",
    "kk580kk": "@nagarajasr My os is windows 10 home edition, xiaomi air 14 notebook computer.\nBut I cannot get the same problem in any other computer. Maybe the image I downloaded is Broken.\n. ",
    "bogdanRada": "any updates on this? I have same problem . any updates on this? I have same problem . ",
    "nsams": "Yes, you are right - sorry for the confusion. I updated the path in the first message.\n. ",
    "colrack": "As you may know SCTP is a transport level protocol like TCP and UDP.\nAll major distributions have SCTP enabled.\nI use SCTP everyday during development, coding both in C and Erlang.\nTo use SCTP I need the host to have SCTP enabled in kernel.\nThis is my specific need, and since I use boot2docker I would see this harmless change to go mainstream and forget about building my boot2docker iso every time there is a release or use another vm (with another distro) as docker host.\nThese are related and enable SCTP in official erlang image:\nhttps://github.com/c0b/docker-erlang-otp/pull/16\nhttps://github.com/docker-library/official-images/pull/1943\n. As you may know SCTP is a transport level protocol like TCP and UDP.\nAll major distributions have SCTP enabled.\nI use SCTP everyday during development, coding both in C and Erlang.\nTo use SCTP I need the host to have SCTP enabled in kernel.\nThis is my specific need, and since I use boot2docker I would see this harmless change to go mainstream and forget about building my boot2docker iso every time there is a release or use another vm (with another distro) as docker host.\nThese are related and enable SCTP in official erlang image:\nhttps://github.com/c0b/docker-erlang-otp/pull/16\nhttps://github.com/docker-library/official-images/pull/1943\n. ",
    "chen-xin": "Thank you @ailispaw , it worked!\n. Thank you @ailispaw , it worked!\n. ",
    "iaguis": "I can prepare a PR if there's interest.\n. I can prepare a PR if there's interest.\n. ",
    "JoThomsen": "Thanks for the quick reply,\ni use AUFS, trying to switch to overlay\n. Thanks for the quick reply,\ni use AUFS, trying to switch to overlay\n. I changed the storage-driver in my boot2docker machine, \nnow I'm able to unzip Files which I get with the ADD command in the DockerFile or via wget in the container. \nGreat Thanks to the Team!\n. I used VirtualBox(Version 5.1.8) and the latest B2D (1.12.3 version and tried it with 1.12.2) \nThe Kernel Version is 4.4.24-boot2docker.\nI can ping this IP. \nI also can download Baseimages and run them.\nMy DNS is working i tried it with some different adresses...\nI will ask the question at stack overflow too. \n. For e.g.\nFROM ubuntu:14.04\nRUN apt-get clean\nRUN apt-get update -y\nRUN apt-get install -y mercurial\nRUN apt-get install -y git\nRUN apt-get install -y python\nThe Error will happen at the apt-get update. ",
    "cbergau": "I am not 100% sure if it is the same issue or related to boot2docker at all. If it is not related, then ignore my comment. I just updated my boot2docker vm and i get similiar issues:\nMy Dockerfile:\n```\nFROM php:7-apache\nXDebug\nRUN yes | pecl install xdebug \\\n    && echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_enable=on\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.profiler_enable=0\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.profiler_enable_trigger=1\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.profiler_output_dir=/var/www/html\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_autostart=off\" >> /usr/local/etc/php/conf.d/xdebug.ini\n```\nThe error i am getting:\nERROR: unable to unpack /tmp/pear/download/xdebug-2.4.1.tgz\nLast week, before i did the update, it worked perfectly fine.\nMy docker info output:\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 3\nServer Version: 1.12.2\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 14\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: null host bridge overlay\nKernel Version: 4.4.24-boot2docker\nOperating System: Boot2Docker 1.12.2 (TCL 7.2); HEAD : 9d8e41b - Tue Oct 11 23:40:08 UTC 2016\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 995.9 MiB\nName: default\nID: 3DP6:Q3DQ:BCQO:VUO2:AUV3:G2YH:54TP:TGGR:4KVQ:2ETY:QG3X:74XU\nDocker Root Dir: /mnt/sda1/var/lib/docker\nDebug mode (client): false\nDebug mode (server): true\n File Descriptors: 13\n Goroutines: 24\n System Time: 2016-10-24T08:45:56.041742829Z\n EventsListeners: 0\nUsername: cbergau\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=virtualbox\n. ",
    "jonathanperret": "Hi @nathanleclaire, I'm afraid this kind of breaks the functionality of being able to use serial ports as a console. I just tested that with getty set to be started only once, one can get a to a shell by connecting to the serial port, but once that shell exits, nothing listens on the port anymore (getty does not hang around). Is that intentional?\n. The problematic restarts do not occur because nothing is connected to the serial port \u2014 getty is perfectly happy listening on an unconnected serial port.\nThe problem exists because those serial ports do not even exist in the VM! Just enabling them in the VM config would be enough to make getty happy, but for some reason machine configures the VM to not have serial ports enabled.. Yes, getty opens the serial port, waits for a connection, handles it and then exits. It's init's job to restart it (which is why once doesn't cut it).\nNote that the presence or absence of a specific serial port is highly unlikely to change while the VM is started (VirtualBox does not let you enable serial ports while a VM is running), so that's not really a scenario that you need to worry about. Sleeping indefinitely would probably work. But that looks like a complicated workaround when docker-machine could simply enable the serial ports instead\u2026. :+1:. ",
    "Rots": "apt-get update missing?. ",
    "marius311": "I found the following workaround to install tcpdump, or any other package that depends on netfiler (of which there are many...)\n\nInstall netfilter by hand, e.g. tce-load -i netfilter-4.2.9-tinycore64.tcz\nGo to the /tmp/tce/optional/ folder and make a copy or link the netfilter-4.2.9-tinycore64.tcz[.md5.txt] files to netfilter-4.4.39-boot2docker.tcz[.md5.txt]\nGo back and install tcpdump or whatever you were trying to in the first place and it should work. \n\nSeems to work well enough to allow tcpdump and openvpn to work, although I haven't tested anything else. Anyway, would be great to get this fixed in boot2docker. . ",
    "Shabirmean": "@marius311 : You're workaround works.\nSeems like the file \"netfilter-4.4.39-boot2docker.tcz\" (or \"netfilter-4.4.43-boot2docker.tcz\" in my case) is not available in http://repo.tinycorelinux.net/7.x/x86/tcz/. @marius311 : You're workaround works.\nSeems like the file \"netfilter-4.4.39-boot2docker.tcz\" (or \"netfilter-4.4.43-boot2docker.tcz\" in my case) is not available in http://repo.tinycorelinux.net/7.x/x86/tcz/. ",
    "awltux": "@marius311 : good solution. I include a more explanatory version for anyone interested:\n```# Attempt to install tcpdump.\ntce-load -w -i tcptump.tcz\ntcpdump.tcz.dep contains \"netfilter-KERNEL\" but this package doesnt exist in the repo\nTake a note of the missing netfilter file e.g. netfilter-4.4.84-boot2docker.tcz.md5.txt\nIdentify the version of netfilter already installed\ntce-status -i | grep netfilter\ne.g. netfilter-4.8.17-tinycore\nGet a copy of the install package files for the currently installed net filter and rename it to the version that tcpdump requires\nwget -O /tmp/tce/optional/netfilter-4.4.84-boot2docker.tcz http://distro.ibiblio.org/tinycorelinux/8.x/x86/tcz/netfilter-4.8.17-tinycore.tcz\nwget -O /tmp/tce/optional/netfilter-4.4.84-boot2docker.tcz.md5.txt http://distro.ibiblio.org/tinycorelinux/8.x/x86/tcz/netfilter-4.8.17-tinycore.tcz.md5.txt\nThis should allow tcpdump to be loaded\ntce-load -w -i tcptump.tcz\n```\n. @marius311 : good solution. I include a more explanatory version for anyone interested:\n```# Attempt to install tcpdump.\ntce-load -w -i tcptump.tcz\ntcpdump.tcz.dep contains \"netfilter-KERNEL\" but this package doesnt exist in the repo\nTake a note of the missing netfilter file e.g. netfilter-4.4.84-boot2docker.tcz.md5.txt\nIdentify the version of netfilter already installed\ntce-status -i | grep netfilter\ne.g. netfilter-4.8.17-tinycore\nGet a copy of the install package files for the currently installed net filter and rename it to the version that tcpdump requires\nwget -O /tmp/tce/optional/netfilter-4.4.84-boot2docker.tcz http://distro.ibiblio.org/tinycorelinux/8.x/x86/tcz/netfilter-4.8.17-tinycore.tcz\nwget -O /tmp/tce/optional/netfilter-4.4.84-boot2docker.tcz.md5.txt http://distro.ibiblio.org/tinycorelinux/8.x/x86/tcz/netfilter-4.8.17-tinycore.tcz.md5.txt\nThis should allow tcpdump to be loaded\ntce-load -w -i tcptump.tcz\n```\n. ",
    "purplesrl": "+1\nThis is happening with more essential packages like net-bridging or netfilter because of the \"boot2docker\" versioning which, in my opinion at least, has no real value, keeping it to \"tinycore64\" or altering tce-load would make all these problems go away\nThe workaround is very complex, and you would need to be familiar with tinycore to know how to apply it correctly, here you have an example for 8.x, but some may be using 7.x; you also need to know where the tcz files are.. +1\nThis is happening with more essential packages like net-bridging or netfilter because of the \"boot2docker\" versioning which, in my opinion at least, has no real value, keeping it to \"tinycore64\" or altering tce-load would make all these problems go away\nThe workaround is very complex, and you would need to be familiar with tinycore to know how to apply it correctly, here you have an example for 8.x, but some may be using 7.x; you also need to know where the tcz files are.. Update:\nActually I found an easier way to install most packages. You need to modify the tce-load script and replace the following line:\nKERNELVER=$(uname -r)\nWith\nKERNELVER=\"4.2.9-tinycore64\"\nThis will work for version TCE version 7.x. For 8.x it would be:\nKERNELVER=\"4.8.17-tinycore64\". Update:\nActually I found an easier way to install most packages. You need to modify the tce-load script and replace the following line:\nKERNELVER=$(uname -r)\nWith\nKERNELVER=\"4.2.9-tinycore64\"\nThis will work for version TCE version 7.x. For 8.x it would be:\nKERNELVER=\"4.8.17-tinycore64\". +1. +1. ",
    "daniel347x": "@purplesrl's insight worked immediately for me and is significantly easier than marius311's good method, but accomplishes the identical goal.. ",
    "omerlh": "I can try reproduce this with more logging, if you can instrument me what to check.... I can try reproduce this with more logging, if you can instrument me what to check.... ",
    "Pugio": "Never mind. S3 is down. sigh. Never mind. S3 is down. sigh. ",
    "worsco": "Determined problem is with my own shell commands in Git Bash, unrelated to the new version.. Determined problem is with my own shell commands in Git Bash, unrelated to the new version.. ",
    "nanomad": "I was able to reproduce it with the latest boot2docker ISO and docker binaries\nSeems not to be related to the switch type as I can reproduce with ext network, internal and nat.\nConfiguration:\n\nboot2docker v17.05.0-ce\nDocker version 17.03.1-ce, build c6d412e\ndocker-machine.exe version 0.10.0, build 76ed2a6. I was able to reproduce it with the latest boot2docker ISO and docker binaries\n\nSeems not to be related to the switch type as I can reproduce with ext network, internal and nat.\nConfiguration:\n\nboot2docker v17.05.0-ce\nDocker version 17.03.1-ce, build c6d412e\ndocker-machine.exe version 0.10.0, build 76ed2a6. (Copying my reply from the minishift issue for the sake of reference)\n\nThe network is properly configured: it's bridged to the Ethernet network adapter where DHCP is available.\nTruth be told, I don't think this is a network-related issue.\nI was able to boot properly on a different machine with the same configuration steps but with different, older, hardware.\nI have a feeling this may be just hardware incompatibility with my workstation setup. Ryzen CPUs are supported by newer kernels than the one shipping with boot2docker/minishift image and the telling sign is that the boot process hangs at the hardware detection/configuration stage.. (Copying my reply from the minishift issue for the sake of reference)\nThe network is properly configured: it's bridged to the Ethernet network adapter where DHCP is available.\nTruth be told, I don't think this is a network-related issue.\nI was able to boot properly on a different machine with the same configuration steps but with different, older, hardware.\nI have a feeling this may be just hardware incompatibility with my workstation setup. Ryzen CPUs are supported by newer kernels than the one shipping with boot2docker/minishift image and the telling sign is that the boot process hangs at the hardware detection/configuration stage.. More tests:\n- Tried a vanilla TCL 7,2 and it booted fine.\nhttp://distro.ibiblio.org/tinycorelinux/7.x/x86_64/release/CorePure64-7.2.iso\nIt may be some kind of customization done by boot2docker on top of TCL but I have no idea how to turn on any kind of verbose logging of udev (assuming it's udev). More tests:\n- Tried a vanilla TCL 7,2 and it booted fine.\nhttp://distro.ibiblio.org/tinycorelinux/7.x/x86_64/release/CorePure64-7.2.iso\nIt may be some kind of customization done by boot2docker on top of TCL but I have no idea how to turn on any kind of verbose logging of udev (assuming it's udev). More manual bisecting on boot2docker.\n\nLatest working version: v1.11.0 32ee7e9eef424d2fb137746fb9778fee3f9067ac\nFirst broken version: v1.11.1-rc1 903a35267e902a1322d2fddd73530d815a4c841b\n\nI'll try to build all the commits in between using this:\nhttps://github.com/boot2docker/boot2docker/compare/v1.11.0...v1.11.1-rc1\nMy guess is either the kernel version bump or the make oldconfig one. More manual bisecting on boot2docker.\n\nLatest working version: v1.11.0 32ee7e9eef424d2fb137746fb9778fee3f9067ac\nFirst broken version: v1.11.1-rc1 903a35267e902a1322d2fddd73530d815a4c841b\n\nI'll try to build all the commits in between using this:\nhttps://github.com/boot2docker/boot2docker/compare/v1.11.0...v1.11.1-rc1\nMy guess is either the kernel version bump or the make oldconfig one. According to git bisect 7d3984daabec39e3b3c35dea9f3e5173fa6e19a6 is the first bad commit\n\ncommit 7d3984daabec39e3b3c35dea9f3e5173fa6e19a6\nAuthor: Tianon Gravi admwiggin@gmail.com\nDate:   Mon Apr 18 16:01:18 2016 -0700\nUpdate kernel to 4.4.7\n\nSee also https://github.com/docker/machine/issues/3327#issuecomment-211606359 (and following discussion). According to git bisect 7d3984daabec39e3b3c35dea9f3e5173fa6e19a6 is the first bad commit\n\ncommit 7d3984daabec39e3b3c35dea9f3e5173fa6e19a6\nAuthor: Tianon Gravi admwiggin@gmail.com\nDate:   Mon Apr 18 16:01:18 2016 -0700\nUpdate kernel to 4.4.7\n\nSee also https://github.com/docker/machine/issues/3327#issuecomment-211606359 (and following discussion). Still broken in https://github.com/boot2docker/boot2docker/releases/tag/v17.06.1-ce\n\n\n@tianon You seem to be the most active on the repo. Is there anything I can do to help to fix this issue? . Still broken in https://github.com/boot2docker/boot2docker/releases/tag/v17.06.1-ce\n@tianon You seem to be the most active on the repo. Is there anything I can do to help to fix this issue? . ",
    "gbraad": "You need to have an external network with DHCP for HyperV to work (Hyper-V does not provide a DHCP server on the virtual switches).. You need to have an external network with DHCP for HyperV to work (Hyper-V does not provide a DHCP server on the virtual switches).. @nanomad can you also change the title, as this is unrelated to the IP address. @nanomad can you also change the title, as this is unrelated to the IP address. Can you close this issue, as this does not seem to be a use-case that boot2docker will support... and it seems you have solved it with a fork.. Can you close this issue, as this does not seem to be a use-case that boot2docker will support... and it seems you have solved it with a fork.. You have two options that get triggered from the bootscript.sh\nBefore \"Launch Docker\"\nhttps://github.com/boot2docker/boot2docker/blob/8c3082d16a1491e85c794e5e4a1fa37db3f1fc83/rootfs/rootfs/opt/bootscript.sh#L69\nAfter \"Launch Docker\"\nhttps://github.com/boot2docker/boot2docker/blob/8c3082d16a1491e85c794e5e4a1fa37db3f1fc83/rootfs/rootfs/opt/bootscript.sh#L78. You have two options that get triggered from the bootscript.sh\nBefore \"Launch Docker\"\nhttps://github.com/boot2docker/boot2docker/blob/8c3082d16a1491e85c794e5e4a1fa37db3f1fc83/rootfs/rootfs/opt/bootscript.sh#L69\nAfter \"Launch Docker\"\nhttps://github.com/boot2docker/boot2docker/blob/8c3082d16a1491e85c794e5e4a1fa37db3f1fc83/rootfs/rootfs/opt/bootscript.sh#L78. ",
    "ncoop23": "So my prior thread was marked closed and pointed to this. Does this issue have a solution or is it just stating an issue without a solution?  My external network had a DHCP server. . So my prior thread was marked closed and pointed to this. Does this issue have a solution or is it just stating an issue without a solution?  My external network had a DHCP server. . So my motherboard has 2 Ethernet ports.  Plugging my router from Ethernet 2 to Ethernet fixed this along with the latest windows update. . So my motherboard has 2 Ethernet ports.  Plugging my router from Ethernet 2 to Ethernet fixed this along with the latest windows update. . ",
    "TomKeur": "It's working!\nI was building my own iso, but this is much faster! \nThanks! . Np! Glad you fixed it this quick \ud83e\udd47 . ",
    "OscarAkaElvis": "I can close it but it is not working at all... It's almost working... but was unsuccessful in the end.\n Any help or suggestion?. ",
    "JBalanza": "Same problem here. I'd like to know if boot2docker does support already wireless capabilities with host USB interfaces?. ",
    "jolz": "same problem here. \nfile has ~5.5G after few month.\nlogrotate would be fine. . ",
    "philippe-granet": "Workaround:\nCreate a persisted script /var/lib/boot2docker/bootsync.sh:\nsed -i 's/dockerd -D /dockerd /' /usr/local/etc/init.d/docker\nhttps://github.com/boot2docker/boot2docker/blob/master/doc/FAQ.md#local-customisation-with-persistent-partition\nFrom Boot2Docker version 1.6.0, you can also specify steps that are run before the Docker daemon is started, using /var/lib/boot2docker/bootsync.sh.\nAllow local bootsync.sh customisation run before docker started\n. ",
    "zhaojunlike": "\u8bf7\u67e5\u770b\u5173\u4e8equick start\u6267\u884c\u7684run.sh\u811a\u672c\uff0c\u8be6\u7ec6\u4e86\u89e3docker-machine \u548cdocker\u5728windows\u4e0b\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u5982\u679c\u7cfb\u7edf\u4e0d\u5305\u542bdefault\u8fd9\u4e2a\u865a\u62df\u673a\u7684\u8bdd\uff0cdocker\u4f1a\u9ed8\u8ba4\u5f97\u53bb\u521b\u5efa\u4e00\u4e2a\u53ebdefault\u7684\u865a\u62df\u673a\u5668\uff0c\u5982\u679c\u4f60\u4e0d\u5e0c\u671b\u8fd9\u6837\uff0c\u6211\u5efa\u8bae\u4f60\u53ef\u4ee5\u4e0d\u4f7f\u7528quick start \u56fe\u6807\u8fdb\u884c\u542f\u52a8\uff0c\u4f7f\u7528git-bash \u6216\u8005power shell\u540c\u6837\u53ef\u4ee5\u4f7f\u7528docker-machine\u3002\nPS\uff1aPlease use English to communicate. ",
    "rethink-neil": "Can confirm this. Compare and contrast my docker host...\n[luser@machine:~]$ showmount -e  192.168.33.27\nExport list for 192.168.33.27:\n/export/thing host-one,host-two,host-three\n...with my docker container:\n```\n[luser@machine:~]$ docker run --privileged --rm -it ubuntu sh <<EOF\n\nset -euvx\napt-get -y update\napt-get -y --no-install-recommends install nfs-common\nshowmount -e 192.168.33.27\nEOF\n\n...\nshowmount -e 192.168.33.27\n+ showmount -e 192.168.33.27\nclnt_create: RPC: Unknown host\n```\nHere's my particulars:\n```\n[luser@machine:~]$ docker version\nClient:\n Version:      17.09.0-ce\n API version:  1.32\n Go version:   go1.8.3\n Git commit:   afdb6d4\n Built:        Tue Sep 26 22:42:38 2017\n OS/Arch:      linux/amd64\nServer:\n Version:      17.09.0-ce\n API version:  1.32 (minimum version 1.12)\n Go version:   go1.8.3\n Git commit:   afdb6d4\n Built:        Tue Sep 26 22:41:20 2017\n OS/Arch:      linux/amd64\n Experimental: false\n. Can confirm this. Compare and contrast my docker host...\n[luser@machine:~]$ showmount -e  192.168.33.27\nExport list for 192.168.33.27:\n/export/thing host-one,host-two,host-three\n...with my docker container:\n[luser@machine:~]$ docker run --privileged --rm -it ubuntu sh <<EOF\n\nset -euvx\napt-get -y update\napt-get -y --no-install-recommends install nfs-common\nshowmount -e 192.168.33.27\nEOF\n\n...\nshowmount -e 192.168.33.27\n+ showmount -e 192.168.33.27\nclnt_create: RPC: Unknown host\n```\nHere's my particulars:\n```\n[luser@machine:~]$ docker version\nClient:\n Version:      17.09.0-ce\n API version:  1.32\n Go version:   go1.8.3\n Git commit:   afdb6d4\n Built:        Tue Sep 26 22:42:38 2017\n OS/Arch:      linux/amd64\nServer:\n Version:      17.09.0-ce\n API version:  1.32 (minimum version 1.12)\n Go version:   go1.8.3\n Git commit:   afdb6d4\n Built:        Tue Sep 26 22:41:20 2017\n OS/Arch:      linux/amd64\n Experimental: false\n```\n. ",
    "boonkerz": "same issue here. same issue here. ",
    "cdaniel44": "same :(. ",
    "amitdevgan": "Same issue \n. ",
    "GaoleMeng": "same issue . ",
    "EmteZogaf": "Using strace inside a ubuntu:18.04 container i saw it looks for the file /etc/services which is missing and is part of the netbase package. After installing this package apt install netbase the command showmount -e SERVER works for me.. ",
    "newbie-gk": "I'm also having this issue, https://github.com/boot2docker/boot2docker/releases/download/v17.06.0-ce/boot2docker.iso\nI tried the link directly and got \"github-production-release-asset-2e65be.s3.amazonaws.com\u2019s server DNS address could not be found.\". I'm also having this issue, https://github.com/boot2docker/boot2docker/releases/download/v17.06.0-ce/boot2docker.iso\nI tried the link directly and got \"github-production-release-asset-2e65be.s3.amazonaws.com\u2019s server DNS address could not be found.\". @yosifkit, could be... seems on twitter that it's fixed, but I'm still having the same problem? Any suggestions?. @yosifkit, could be... seems on twitter that it's fixed, but I'm still having the same problem? Any suggestions?. ",
    "hgati": "\nI'm trying to change the virtual box memory each time the dockerfile is built using the following commands in the dockerfile:\ndocker-machine stop\nVBoxManage modifyvm default --cpus 2\nVBoxManage modifyvm default --memory 4096\ndocker-machine start\ndocker-machine command is not recognized. How do I go about doing this on windows environment?\n\nYou're great ~. > I'm trying to change the virtual box memory each time the dockerfile is built using the following commands in the dockerfile:\n\ndocker-machine stop\nVBoxManage modifyvm default --cpus 2\nVBoxManage modifyvm default --memory 4096\ndocker-machine start\ndocker-machine command is not recognized. How do I go about doing this on windows environment?\n\nYou're great ~. ",
    "kishor-gujar": "The easiest way.\nopen VirtualBox stop default  VM\nSelect default and click on settings \nMake changes As you want.\nLaunch your Docker Quickstart Terminal.. ",
    "luislavena": "Hello!\nIt appears to be working! I've removed the machine/cache ISO and then performed the upgrade:\nNo default Boot2Docker ISO found locally, downloading the latest release...\nLatest release for github.com/boot2docker/boot2docker is v17.06.0-ce\nThank you! \u2764\ufe0f \u2764\ufe0f \u2764\ufe0f . Hello!\nIt appears to be working! I've removed the machine/cache ISO and then performed the upgrade:\nNo default Boot2Docker ISO found locally, downloading the latest release...\nLatest release for github.com/boot2docker/boot2docker is v17.06.0-ce\nThank you! \u2764\ufe0f \u2764\ufe0f \u2764\ufe0f . ",
    "zawislakdawidj": "It seems to be fixed. It was probably an AWS regional issue. . ",
    "blop": "Got it working by forking boot2docker and enabling these modules in kernel_config : \nCONFIG_VSOCKETS=m\nCONFIG_VMWARE_VMCI_VSOCKETS=m\nWould be nice if this can be included as default ;). ",
    "anonymez": "Is there any reason why this suggestion was not applied to the kernel_config in the master branch?\nThanks.. Is there any reason why this suggestion was not applied to the kernel_config in the master branch?\nThanks.. ",
    "carlosgalvezp": "Thank you!. Thank you!. Great!\nI agree, the Debian configuration looks good and works for us. As you mention, they probably have good reasons to do it that way.\nRegarding CONFIG_CAN_VCAN vs CONFIG_CAN_GW, my guess is that the target application is more likely to use real CAN hardware instead of a virtualized one. For our application we don't really need VCAN since we use the hardware, so I guess we could leave it disabled until someone else needs it.\nI'll update the pull request with the Debian configuration.. ",
    "ifeengwd2012": "\u4e34\u65f6\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u53bb\u6389tls\uff0c\u5177\u4f53\u505a\u6cd5\uff1a\n```\n1\u3001docker-machine start test1\n2\u3001docker-machine ssh test1\n3\u3001sudo cp /var/lib/boot2docekr/profile /var/lib/boot2docker/profile-bak\n4\u3001sudo vi /var/lib/boot2docker/profile\n5\u3001profile\u6587\u4ef6\u6539\u4e3a\uff1a\nEXTRA_ARGS='\n--registry-mirror=inkem9x5.mirror.aliyuncs.com\n--label provider=virtualbox\n'\nDOCKER_HOST='-H tcp://0.0.0.0:2376'\nDOCKER_STORAGE=aufs\nDOCKER_TLS=no                 //auto\u6539\u4e3ano\n\u5e76\u4e14\u5220\u9664\u4e86\u548ctls\u76f8\u5173\u76843\u884c\u914d\u7f6e\n6\u3001sudo /etc/init.d/docker start       //success\n```\n\u671f\u5f85\u66f4\u597d\u7684\u89e3\u51b3\u529e\u6cd5\n. \u4e34\u65f6\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u53bb\u6389tls\uff0c\u5177\u4f53\u505a\u6cd5\uff1a\n```\n1\u3001docker-machine start test1\n2\u3001docker-machine ssh test1\n3\u3001sudo cp /var/lib/boot2docekr/profile /var/lib/boot2docker/profile-bak\n4\u3001sudo vi /var/lib/boot2docker/profile\n5\u3001profile\u6587\u4ef6\u6539\u4e3a\uff1a\nEXTRA_ARGS='\n--registry-mirror=inkem9x5.mirror.aliyuncs.com\n--label provider=virtualbox\n'\nDOCKER_HOST='-H tcp://0.0.0.0:2376'\nDOCKER_STORAGE=aufs\nDOCKER_TLS=no                 //auto\u6539\u4e3ano\n\u5e76\u4e14\u5220\u9664\u4e86\u548ctls\u76f8\u5173\u76843\u884c\u914d\u7f6e\n6\u3001sudo /etc/init.d/docker start       //success\n```\n\u671f\u5f85\u66f4\u597d\u7684\u89e3\u51b3\u529e\u6cd5\n. ",
    "Raboo": "Ok, but I've already fixed the automated_script function via PR #1277 . Ok, but I've already fixed the automated_script function via PR #1277 . ",
    "smoebody": "@tianon, then this might not be an issue with the boot2docker-image. ",
    "zhwugi": "\u4e0b\u8f7d\u7684\u6700\u65b0\u7248DockerToolbox.exe\uff0c\u81ea\u5e26\u7684boot2docker.iso\u5c45\u7136\u90fd\u4e0d\u884c. \u4e0b\u8f7d\u7684\u6700\u65b0\u7248DockerToolbox.exe\uff0c\u81ea\u5e26\u7684boot2docker.iso\u5c45\u7136\u90fd\u4e0d\u884c. ",
    "vk496": "Hello.\nI rebuild the config more clean. I downloaded the proper version and use menuconfig instead of direct changes.\nTested and still working the MIPv6.\nSalu2. Hello.\nI rebuild the config more clean. I downloaded the proper version and use menuconfig instead of direct changes.\nTested and still working the MIPv6.\nSalu2. ",
    "jhberthemet": "I found /opt/bootscript.sh and hostname command is called before dhcp.sh, so the order is correct but result is not.. I found /opt/bootscript.sh and hostname command is called before dhcp.sh, so the order is correct but result is not.. I managed to connect before hostname was executed and hostname was 'box' whereas it was boot2docker in DNS, so hostname was changed but I don't get where this name comes from.. I managed to connect before hostname was executed and hostname was 'box' whereas it was boot2docker in DNS, so hostname was changed but I don't get where this name comes from.. Thanks for the suggestion, I'll try that when I'll have some time.\nIt would be great to have this change made by default in boot2docker.. ",
    "tarekch": "What i noticed is that it tries first with boot2docker or box and then after it figures out its username, it is not trying again. probably cuz it assumes that it has an IP already so why bother. Either check the dhcp.sh file to see if there is something stopping it or do what i did, add this line to the end of ur bootscript.sh file: /sbin/udhcpc -F $(/bin/cat /etc/hostname) -i eth1\n. What i noticed is that it tries first with boot2docker or box and then after it figures out its username, it is not trying again. probably cuz it assumes that it has an IP already so why bother. Either check the dhcp.sh file to see if there is something stopping it or do what i did, add this line to the end of ur bootscript.sh file: /sbin/udhcpc -F $(/bin/cat /etc/hostname) -i eth1\n. Thank you for your valuable input. I did see the & but was surprised that time kept drifting. I should note that i also added /etc/ntpd.conf and add my ntp server ip there instead. \nIf you believe this is still not related. any ideas why ntpd wasnt working before and now it does? I have read about this issue in many places before without a clear solution.\nI would also argue that ntpd should be demonized and the log file is set in the config. I am simply questioning whether u should sacrifice demonizing for a log.\nHave a nice day :)\n. Thank you for your valuable input. I did see the & but was surprised that time kept drifting. I should note that i also added /etc/ntpd.conf and add my ntp server ip there instead. \nIf you believe this is still not related. any ideas why ntpd wasnt working before and now it does? I have read about this issue in many places before without a clear solution.\nI would also argue that ntpd should be demonized and the log file is set in the config. I am simply questioning whether u should sacrifice demonizing for a log.\nHave a nice day :)\n. Hello,\nJust reporting back that I have no issues with ntpd so far. I 100% agree with you that there is no difference between the two commands. However, \nWhat happens if the non-demonized ntpd crashes (for any reason)?\nIn the case of the demonized ntpd, isnt it the behaviour that it will auto-restart if it crashed? If yes, then demonizing would be the better option here. . Also to set the logfile, a \ufefflogfile /var/lib/boot2docker/log/ntpd.log can be added to an /etc/ntp.conf\nthe servers can be set in the ntp.conf file. as server entries.\nI just can't find a justification for the entire /rc.d/ntpd script; just starting the daemon with three lines in a config file would have sufficed.. I gave it a try and unfortunately no :(\nntpd: skipping /etc/ntp.conf:2: unimplemented command 'logfile'. ",
    "Bacto": "Here is an example to fully support Open vSwitch GRE tunnels :)\n```\ngit clone https://github.com/boot2docker/boot2docker.git\ncd boot2docker\ngit checkout tags/v17.10.0-ce\necho CONFIG_OPENVSWITCH_GRE=m >> kernel_config\necho CONFIG_NET_IPGRE=m >> kernel_config\necho CONFIG_NET_IPGRE_BROADCAST=y >> kernel_config\ndocker build -t boot2docker .\ndocker run --rm boot2docker > boot2docker.iso\n```\n. Here is an example to fully support Open vSwitch GRE tunnels :)\n```\ngit clone https://github.com/boot2docker/boot2docker.git\ncd boot2docker\ngit checkout tags/v17.10.0-ce\necho CONFIG_OPENVSWITCH_GRE=m >> kernel_config\necho CONFIG_NET_IPGRE=m >> kernel_config\necho CONFIG_NET_IPGRE_BROADCAST=y >> kernel_config\ndocker build -t boot2docker .\ndocker run --rm boot2docker > boot2docker.iso\n```\n. ",
    "lazysa": "thanks , I don't known this is or not a bug .\nI copy old release(boot2docker.iso) to C:\\Users\\work\\.docker\\machine\\machines\\default\\\nlooks runing well.\n\nroot@default:/c/Users/work/docker/ansible/dockfile# docker version\nClient:\n Version:       17.12.0-ce\n API version:   1.35\n Go version:    go1.9.2\n Git commit:    c97c6d6\n Built: Wed Dec 27 20:05:38 2017\n OS/Arch:       linux/amd64\nServer:\n Engine:\n  Version:      17.12.0-ce\n  API version:  1.35 (minimum version 1.12)\n  Go version:   go1.9.2\n  Git commit:   c97c6d6\n  Built:        Wed Dec 27 20:12:29 2017\n  OS/Arch:      linux/amd64\n  Experimental: false\nroot@default:/c/Users/work/docker/ansible/dockfile# docker build -t ansible/test:v1 .\nSending build context to Docker daemon  3.584kB\nStep 1/2 : FROM ansible/centos7-ansible:latest\n ---> 688353a31fde\nStep 2/2 : RUN baseApps='openssh-server net-tools lsof vim'     && yum install -y $baseApps     ; sed -i.bak 's/^#PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config     ; echo 'set encoding=utf-8' > /root/.vimrc     ; echo \"alias ad='ansible-playbook -i /mnt/ansible/hosts /mnt/ansible/deploy/site.yml'\" >> /root/.bashrc     && echo 'export PATH=$PATH:/opt/ansible/ansible/bin' >> /root/.bash_profile\n ---> Running in c5e8c5acadfb\ncgroups: cannot found cgroup mount destination: unknown\n\nroot@default:/c/Users/work/docker/ansible/dockfile# docker version\nClient:\n Version:      17.09.1-ce\n API version:  1.32\n Go version:   go1.8.3\n Git commit:   19e2cf6\n Built:        Thu Dec  7 22:21:47 2017\n OS/Arch:      linux/amd64\nServer:\n Version:      17.09.1-ce\n API version:  1.32 (minimum version 1.12)\n Go version:   go1.8.3\n Git commit:   19e2cf6\n Built:        Thu Dec  7 22:28:28 2017\n OS/Arch:      linux/amd64\n Experimental: false\nroot@default:/c/Users/work/docker/ansible/dockfile# docker build -t ansible/test:v1 .\n...\nComplete!\n ---> f3e00045e69c\nRemoving intermediate container c67d1c4c2f25\nSuccessfully built f3e00045e69c\nSuccessfully tagged ansible/test:v1. ",
    "johnharris85": "Thanks @tianon. Do we need to make a note somewhere as while the impact is low, it does change default behaviour?. ",
    "Forestsoft-de": "same here \nmysql_1          | 2018-01-30T17:24:08.018686Z 0 [ERROR] InnoDB: Operating system error number 22 in a file operation.\nmysql_1          | 2018-01-30T17:24:08.018720Z 0 [ERROR] InnoDB: Error number 22 means 'Invalid argument'\nmysql_1          | 2018-01-30T17:24:08.018728Z 0 [ERROR] InnoDB: File ./ib_logfile101: 'aio write' returned OS error 122. Cannot continue operation\nmysql_1          | 2018-01-30T17:24:08.018732Z 0 [ERROR] InnoDB: Cannot continue operation.\n``\nWith the latest mysql image\n. Its work if you create an folder in the boot2docker VM outside the mapped virtualbox drive \nmkdir /mysqldata/ \n docker run --name some-mysql -v /mysqldata/:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql\n. ",
    "leocavalcante": "I had to detach the volume that maps to the host directory. Luckily it is only development and migrations+seed brings me up a new database again, but I hope this could be solved soon.. This issue forced me to start using Volumes. Maybe you should have a look.. ",
    "liushoukun": "+1. ",
    "hontvari": "\"Me too\":  On a Windows 10 home machine, with a MySQL 5.5 derived image, where /var/lib/mysql is mounted to a host dir and initialized by downloading a database within the entrypoint script of the container.. ",
    "cljk": "For me working with madiadb:10.1 - but not for 10.2. > For me, using Docker Toolbox on Windows 7, just adding the \"disable AIO\" config command to the MySQL service solved it all:\n\ncommand: \"--innodb_use_native_aio=0\"\n\nDid you already fill the database with some data?\nI first thought the same until I tried to import data. ",
    "nguyencongkrb": "I have fixed it. Disable AIO\nhttps://stackoverflow.com/questions/48239668/fails-to-initialize-mysql-database-on-windows-10. ",
    "alex-barbu": "For me, using Docker Toolbox on Windows 7, just adding the \"disable AIO\" config command to the MySQL service solved it all:\ncommand: \"--innodb_use_native_aio=0\". @cljk to be honest, my db is still empty - was following a tutorial on Symfony and doing stuff there when the time allows, probably you are right ... @cljk to be honest, my db is still empty - was following a tutorial on Symfony and doing stuff there when the time allows, probably you are right ... ",
    "strarsis": "@alex-barbu, @cljk: Related: https://github.com/docker-library/mariadb/issues/38#issuecomment-385845282. ",
    "rarebu": "i am using coreos now as base distro. thanks. ",
    "KamilKopaczyk": "Good to know that there is a working solution, thanks!\nHave you looked at the link i included at the end of my report? Maybe this issue can be fixed by installing newer open-vm-tools? (newest version is 10.2.5-8068406 vs currently used v10.0.0-3000743 from August 2015)\nIf there is some easy way for me to check it, please let me know. There's no manual on how to do it, but i guess that .iso file can be built, by running Dockerfile?. ",
    "mraligorithm": "I have had the same issue but I was able to resolve it by regenerating the certs for my docker-machine that failed in the creation process. docker-machine regenerate-certs [NAME OF THE FAILED Docker Machine], I am running it on 2015 Mac OS Mojave hope this helps.. ",
    "koksin": "my problem seem to resolve after regenerate-certs as what mraligorithm stated.  Please see this link\nhttps://github.com/sparkfabrik/sparkdock/issues/14. @jgangemi I may not know the really problem, but it seems like the regenerate-certs did the job...\n. Ok noted.\nSent from Mail for Windows 10\nFrom: Tianon Gravi\nSent: Thursday, November 22, 2018 9:35 AM\nTo: boot2docker/boot2docker\nCc: koksin; Mention\nSubject: Re: [boot2docker/boot2docker] Can't create machine with'vmwarefusion' driver (#1315)\nClosing since this is really a bug in docker-machine's built-in vmwarefusion driver, not boot2docker.\n(See #1340 and #1350 for a more recent VMware-related issue that will be fixed in the next ISO release.)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "MarcinLachowicz": "Hello,\nI agree with you, it is more like bypassing the problem instead of solving it e.g. by using Debian or Ubuntu. Unfortunately, some people still have to use boot2docker and corporate proxy. That is why we created such feature. I will keep it in our fork. \nBest regards!. ",
    "lnxbil": "\nSorry, but I'm still not convinced -- I can see some value in QEMU Agent, but I don't see what relevance that has to boot2docker, [...]\n\nSorry, but why did you allow xen, vmware and virtualbox agents to be installed and refuse to add support for another hypervisor?\nAs I pointed out before, the qemu agent is is capable of a lot of things, yet I wanted only the integration that @prologic also wants: IP retrieval. \nI looked it up and here are the features you want from an agent and they're all present in the API documentation:\n- guest time synchronization, timezone support\n- file transfer capabilities\n- network performance metrics including ip, hostname.\n- filesystem info\n- passwort change capability\n- online memory, cpu, disk, network changes\n- remote command execution\n. Maybe a little off topic, but there is currently no official bare-metal provisioning tool available for Docker that is not in maintenance mode from Docker Inc.?. ",
    "wasiher": "Maybe an hour I think. I can retest in needed environment if it is needed.\nI also launched in qemu. And it worked fine.\nAnd I noticed 1 strange thing. Not sure if it is important.\nWhile I was using qemu \"Loading /boot/initrd.img\" line was loading for some time.\nAnd when I was using bochs it was instant.. Not sure if it is important too.\nI ran bochs in debian virtualbox in mac.\nAnd configured bochs with: ./configure --enable-x86-64 --with-term --with-nogui\nWhile bochs stuck it uses around 100% of cpu in virtualbox.. Looks similar. But never finishes loading.\n\n. Maybe I am doing something wrong too. Thx for response. I will write if I'll get any info more.. I lied, everything works. Thank you.\n\n. ",
    "TheDeadCode": "On this version (v18.09.0), using docker-machine and vmware-vsphere driver, the network interface does not connect to DHCP, effectively making it stuck to \"Waiting for VMWare tools\". ",
    "jonl-percsolutions-com": "this is the output from /var/log/docker.log\ntime=\"2018-09-27T02:44:19.195632734Z\" level=error msg=\"Handler for POST /v1.38/plugins/centos-nfs/enable returned error: dial unix /run/docker/plugins/8889e175106885871b347f6ac614d2bb04cd1942e74cc1948487789b99783bc1/osmounted.sock: connect: no such file or directory\". ",
    "DieterRogiest": "Yes, the previous version works in my vbox-test.\nfrom vm vbox-test (v18.06.1-ce):\ncat resolv_vboxtest.conf \nsearch mycompany.be\nnameserver 10.0.2.3\ncat output_ip_address_vboxtest.txt \n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: dummy0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether a6:0b:0c:3a:4f:ef brd ff:ff:ff:ff:ff:ff\n3: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:72:cb:6c brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe72:cb6c/64 scope link \n       valid_lft forever preferred_lft forever\n4: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:bd:94:21 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.99.100/24 brd 192.168.99.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:febd:9421/64 scope link \n       valid_lft forever preferred_lft forever\n5: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:de:b4:f4:8f brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:deff:feb4:f48f/64 scope link \n       valid_lft forever preferred_lft forever\n7: veth7befac3@if6: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master docker0 state UP group default \n    link/ether 4e:0f:47:30:40:b9 brd ff:ff:ff:ff:ff:ff\n    inet6 fe80::4c0f:47ff:fe30:40b9/64 scope link \n       valid_lft forever preferred_lft forever\ncat output_nslookup_google.com_1.1.1.1_vboxtest.txt \nServer:    1.1.1.1\nAddress 1: 1.1.1.1 one.one.one.one\nName:      google.com\nAddress 1: 216.58.212.206 ams16s21-in-f206.1e100.net\nAddress 2: 2a00:1450:400e:802::200e ams16s21-in-x0e.1e100.net\nI then start vbox-test2:\n```\ndocker-machine ls\nNAME         ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER    ERRORS\nvbox-test    -        virtualbox   Stopped                                       Unknown \nvbox-test2   -        virtualbox   Running   tcp://192.168.99.101:2376           Unknown   Unable to query docker version: Get https://192.168.99.101:2376/v1.15/version: x509: certificate is valid for 192.168.99.100, not 192.168.99.101\ndocker-machine regenerate-certs vbox-test2\ndocker-machine ls\nNAME         ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER           ERRORS\nvbox-test    -        virtualbox   Stopped                                       Unknown        \nvbox-test2   -        virtualbox   Running   tcp://192.168.99.101:2376           v18.09.0-beta3\n```\nI then reboot vbox-test2\nhm, today I do now have access to internet on vbox-test2! Would this be because of the regenerate-certs I did 2 minutes earlier? I did not check its internet access before the regenerate-certs.\nSo my apologies, I can't reproduce my issue :)\nfrom vm vbox-test2 (v18.09.0-beta3):\ncat resolv_vboxtest2.conf \nsearch mycompany.be\nnameserver 10.0.2.3\ncat output_ip_address_vboxtest2.txt \n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:e2:3d:e1 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fee2:3de1/64 scope link \n       valid_lft forever preferred_lft forever\n3: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:5d:66:10 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.99.101/24 brd 192.168.99.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe5d:6610/64 scope link \n       valid_lft forever preferred_lft forever\n4: sit0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN group default qlen 1000\n    link/sit 0.0.0.0 brd 0.0.0.0\n5: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:04:78:dc:53 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\ncat output_nslookup_google.com_1.1.1.1_vboxtest2.txt \nServer:    1.1.1.1\nAddress 1: 1.1.1.1 one.one.one.one\nName:      google.com\nAddress 1: 216.58.212.206 ams16s21-in-f206.1e100.net\nAddress 2: 2a00:1450:400e:802::200e ams16s21-in-x0e.1e100.net\non vbox-test2:\ntce-load -wi kvm-4.8.17-tinycore64\nit gets downloaded and\nkvm-4.8.17-tinycore64.tcz: OK\nbut then gives error\nmount: mounting /dev/loop on /tmp/tcloop/kvm-4.8.17-tinycore64 failed: No such device\nanyway I can't modprobe kvm_intel on this vm because it has no hardware virtualization (vmx in /proc/cpuinfo).\nMy physical macbook cpu seems to have vmx but I don't know how to access the macbook's BIOS (or whatever it 'and enable the vmx in it.\nAnd the virtualbox settings of vbox-test2 show at System>Acceleration>Hardware Virtualization:Enable Nested Paging enabled\nWhen I run in vobx-test from https://github.com/butomo1989/docker-android/blob/master/README_VMWARE.md the command\ndocker run --privileged -d -p 6080:6080 -p 5554:5554 -p 5555:5555 -e DEVICE=\"Samsung Galaxy S6\" --name android-container butomo1989/docker-android-x86-8.1\nthen, I can access from OS X http://ipaddress:6080/vnc.html but it only shows an empty vnc screen, no android emulation screen because emulator64-x86 requires hardware virtualization.\nI tried first to run that docker run command in Docker for Mac but I don't know how to access the vnc url on OS X.. Yes, the previous version works in my vbox-test.\nfrom vm vbox-test (v18.06.1-ce):\ncat resolv_vboxtest.conf \nsearch mycompany.be\nnameserver 10.0.2.3\ncat output_ip_address_vboxtest.txt \n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: dummy0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default qlen 1000\n    link/ether a6:0b:0c:3a:4f:ef brd ff:ff:ff:ff:ff:ff\n3: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:72:cb:6c brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe72:cb6c/64 scope link \n       valid_lft forever preferred_lft forever\n4: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:bd:94:21 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.99.100/24 brd 192.168.99.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:febd:9421/64 scope link \n       valid_lft forever preferred_lft forever\n5: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:de:b4:f4:8f brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:deff:feb4:f48f/64 scope link \n       valid_lft forever preferred_lft forever\n7: veth7befac3@if6: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master docker0 state UP group default \n    link/ether 4e:0f:47:30:40:b9 brd ff:ff:ff:ff:ff:ff\n    inet6 fe80::4c0f:47ff:fe30:40b9/64 scope link \n       valid_lft forever preferred_lft forever\ncat output_nslookup_google.com_1.1.1.1_vboxtest.txt \nServer:    1.1.1.1\nAddress 1: 1.1.1.1 one.one.one.one\nName:      google.com\nAddress 1: 216.58.212.206 ams16s21-in-f206.1e100.net\nAddress 2: 2a00:1450:400e:802::200e ams16s21-in-x0e.1e100.net\nI then start vbox-test2:\n```\ndocker-machine ls\nNAME         ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER    ERRORS\nvbox-test    -        virtualbox   Stopped                                       Unknown \nvbox-test2   -        virtualbox   Running   tcp://192.168.99.101:2376           Unknown   Unable to query docker version: Get https://192.168.99.101:2376/v1.15/version: x509: certificate is valid for 192.168.99.100, not 192.168.99.101\ndocker-machine regenerate-certs vbox-test2\ndocker-machine ls\nNAME         ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER           ERRORS\nvbox-test    -        virtualbox   Stopped                                       Unknown        \nvbox-test2   -        virtualbox   Running   tcp://192.168.99.101:2376           v18.09.0-beta3\n```\nI then reboot vbox-test2\nhm, today I do now have access to internet on vbox-test2! Would this be because of the regenerate-certs I did 2 minutes earlier? I did not check its internet access before the regenerate-certs.\nSo my apologies, I can't reproduce my issue :)\nfrom vm vbox-test2 (v18.09.0-beta3):\ncat resolv_vboxtest2.conf \nsearch mycompany.be\nnameserver 10.0.2.3\ncat output_ip_address_vboxtest2.txt \n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:e2:3d:e1 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fee2:3de1/64 scope link \n       valid_lft forever preferred_lft forever\n3: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:5d:66:10 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.99.101/24 brd 192.168.99.255 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe5d:6610/64 scope link \n       valid_lft forever preferred_lft forever\n4: sit0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN group default qlen 1000\n    link/sit 0.0.0.0 brd 0.0.0.0\n5: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:04:78:dc:53 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\ncat output_nslookup_google.com_1.1.1.1_vboxtest2.txt \nServer:    1.1.1.1\nAddress 1: 1.1.1.1 one.one.one.one\nName:      google.com\nAddress 1: 216.58.212.206 ams16s21-in-f206.1e100.net\nAddress 2: 2a00:1450:400e:802::200e ams16s21-in-x0e.1e100.net\non vbox-test2:\ntce-load -wi kvm-4.8.17-tinycore64\nit gets downloaded and\nkvm-4.8.17-tinycore64.tcz: OK\nbut then gives error\nmount: mounting /dev/loop on /tmp/tcloop/kvm-4.8.17-tinycore64 failed: No such device\nanyway I can't modprobe kvm_intel on this vm because it has no hardware virtualization (vmx in /proc/cpuinfo).\nMy physical macbook cpu seems to have vmx but I don't know how to access the macbook's BIOS (or whatever it 'and enable the vmx in it.\nAnd the virtualbox settings of vbox-test2 show at System>Acceleration>Hardware Virtualization:Enable Nested Paging enabled\nWhen I run in vobx-test from https://github.com/butomo1989/docker-android/blob/master/README_VMWARE.md the command\ndocker run --privileged -d -p 6080:6080 -p 5554:5554 -p 5555:5555 -e DEVICE=\"Samsung Galaxy S6\" --name android-container butomo1989/docker-android-x86-8.1\nthen, I can access from OS X http://ipaddress:6080/vnc.html but it only shows an empty vnc screen, no android emulation screen because emulator64-x86 requires hardware virtualization.\nI tried first to run that docker run command in Docker for Mac but I don't know how to access the vnc url on OS X.. well, I got internet access working in my vmwarefusion boot2docker vm (see below) but after that I had to give up as my \"docker run\" command got killed before it could finish downloading butomo1989/docker-android-x86-8.1 and I don't know why.\nIn The boot2docker VM created with virtualbox I coud run the \"docker run ... butomo1989/docker-android-x86-8.1\" command and I was able from to access the vnc url in osx that showed me an empty openbox screen without an android emulator running because virtualbox has no support for nested virtualization (CPU acceleration).\nSo googling \"vmware fusion dhcp not working\" I found https://communities.vmware.com/thread/578090?start=15&tstart=0 :\nNo internet in guest, not using NAT or Bridged, despite trying all the manual suggestions in this thread.\nVMWare support removed my only network adapter:\nShut down guest, Settings > Network Adapter > Advanced options > Remove Network Adapter.\nAnd added a new adapter, Settings > Add Device > Network Adapter. Changed from NAT to Bridged. Start guest\nSo I did that:\nI copied from existing network adapter the MAC address, I unticked the \"Connnect Network Adapter\", and added a new device Network Adapter with that MAC address (so I did not generate one)\nI set it to Internet Sharing:Share with my Mac (NAT),\nbooted the vm,\nand in it ifconfig showed now an eth0 with ipv4 address.\nAnd \"curl http://www.google.com\" then worked!\nAnd  /var/db/vmware/vmnet-dhcpd-vmnet8.leases finally showed an entry for this vm.\nMacs-MacBook-Pro:cache mac$ docker-machine ls\nNAME          ACTIVE   DRIVER         STATE     URL   SWARM   DOCKER    ERRORS\nvmware-dev    *        vmwarefusion   Running                 Unknown   couldn't find MAC address in VMX file /Users/mac/.docker/machine/machines/vmware-dev/vmware-dev.vmx\nI could not figure out that error \"couldn't find MAC address in VMX\".\n. well, I got internet access working in my vmwarefusion boot2docker vm (see below) but after that I had to give up as my \"docker run\" command got killed before it could finish downloading butomo1989/docker-android-x86-8.1 and I don't know why.\nIn The boot2docker VM created with virtualbox I coud run the \"docker run ... butomo1989/docker-android-x86-8.1\" command and I was able from to access the vnc url in osx that showed me an empty openbox screen without an android emulator running because virtualbox has no support for nested virtualization (CPU acceleration).\nSo googling \"vmware fusion dhcp not working\" I found https://communities.vmware.com/thread/578090?start=15&tstart=0 :\nNo internet in guest, not using NAT or Bridged, despite trying all the manual suggestions in this thread.\nVMWare support removed my only network adapter:\nShut down guest, Settings > Network Adapter > Advanced options > Remove Network Adapter.\nAnd added a new adapter, Settings > Add Device > Network Adapter. Changed from NAT to Bridged. Start guest\nSo I did that:\nI copied from existing network adapter the MAC address, I unticked the \"Connnect Network Adapter\", and added a new device Network Adapter with that MAC address (so I did not generate one)\nI set it to Internet Sharing:Share with my Mac (NAT),\nbooted the vm,\nand in it ifconfig showed now an eth0 with ipv4 address.\nAnd \"curl http://www.google.com\" then worked!\nAnd  /var/db/vmware/vmnet-dhcpd-vmnet8.leases finally showed an entry for this vm.\nMacs-MacBook-Pro:cache mac$ docker-machine ls\nNAME          ACTIVE   DRIVER         STATE     URL   SWARM   DOCKER    ERRORS\nvmware-dev    *        vmwarefusion   Running                 Unknown   couldn't find MAC address in VMX file /Users/mac/.docker/machine/machines/vmware-dev/vmware-dev.vmx\nI could not figure out that error \"couldn't find MAC address in VMX\".\n. nope, I had also tried the vmware driver instead of the vmwarefusion (as I had written before). nope, I had also tried the vmware driver instead of the vmwarefusion (as I had written before). ",
    "MartinSGill": "I'm encountering the same issue with VMWare Workstation Pro 15.\nIf I log into the VM directly I can see that eth0 doesn't exist.\n\nWhen I instead tried to use the boot2docker.iso in packer, I discovered that I need to set \"ethernet0.virtualDev\": \"e1000\" for the eth0 to show up.\nThis suggests to me that boot2docker is not able to recognise the network card that vmxnet3 emulates. But it does still recognise the more primitive software base NIC emulator.\n. MIght be the same issue as #1345 . Tested it in Worksation Pro 15, on Win 10\nvmware driver\ndm create -d vmware --vmware-boot2docker-url=https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso vmware\nRunning pre-create checks...\n(vmware) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\nCreating machine...\n(vmware) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\n(vmware) Downloading C:\\Users\\mgill\\.docker\\machine\\cache\\boot2docker.iso from https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso...\n(vmware) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%\n(vmware) Creating SSH key...\n(vmware) Creating VM...\n(vmware) Starting vmware...\n(vmware) Waiting for VM to come online...\nWaiting for machine to be running, this may take a few minutes...\nDetecting operating system of created instance...\nWaiting for SSH to be available...\nDetecting the provisioner...\nProvisioning with boot2docker...\nError creating machine: Error running provisioning: Unable to verify the Docker daemon is listening: Maximum number of retries (10) exceeded\nvmwareworkstation driver\ndm create -d vmwareworkstation --vmwareworkstation-boot2docker-url=https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso vmwarews\nRunning pre-create checks...\n(vmwarews) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\nCreating machine...\n(vmwarews) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\n(vmwarews) Downloading C:\\Users\\mgill\\.docker\\machine\\cache\\boot2docker.iso from https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso...\n(vmwarews) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%\n(vmwarews) Creating SSH key...\n(vmwarews) Creating VM...\n(vmwarews) Creating disk 'C:\\Users\\mgill\\.docker\\machine\\machines\\vmwarews\\vmwarews.vmdk'\n(vmwarews) Virtual disk creation successful.\n(vmwarews) Starting vmwarews...\n(vmwarews) Waiting for VM to come online...\nWaiting for machine to be running, this may take a few minutes...\nDetecting operating system of created instance...\nWaiting for SSH to be available...\nDetecting the provisioner...\nProvisioning with boot2docker...\nError creating machine: Error running provisioning: Unable to verify the Docker daemon is listening: Maximum number of retries (10) exceeded\nNotes\nLogging into the VM directly I see that eth0 is present and has the expected IP.\nDocker appears to be running\nJust as Stefan I can ssh to the machine:\n```\ndm ssh vmwarews\n   ( '>')   ( '>')\n  /) TC (\\   Core is distributed with ABSOLUTELY NO WARRANTY.\n (/----)           www.tinycorelinux.net\ndocker@vmwarews:~$ docker system info\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 18.09.0\nStorage Driver: overlay2\n Backing Filesystem: tmpfs\n Supports d_type: true\n Native Overlay Diff: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host macvlan null overlay\n Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nInit Binary: docker-init\ncontainerd version: 468a545b9edcd5932818eb9de8e72413e616e86e\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\ninit version: fec3683\nSecurity Options:\n seccomp\n  Profile: default\nKernel Version: 4.14.79-boot2docker\nOperating System: Boot2Docker 18.09.0 (TCL 8.2.1)\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 989.3MiB\nName: vmwarews\nID: M7A7:EE7A:TD5T:AS7V:VZ6F:XNG7:U2GS:XDR5:XP4R:2INP:SRP4:YCOS\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nLabels:\nExperimental: false\nInsecure Registries:\n 127.0.0.0/8\nLive Restore Enabled: false\nProduct License: Community Engine\n```\n. ",
    "StefanScherer": "I've built the boot2docker.iso \nhttps://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\nSHA256 checksum is f48a4ef3641123f26308444b22bea70ac438d714b52dc1fd1fa025f949786412.\nIf someone wants to try it. I've added my first findings in #1350 and will try it with an older VMware Fusion version tomorrow.\n. @tekook Thanks!. I can see the same problem with the vmwarefusion driver on macOS. The vmxnet3 NIC driver isn't loaded, there is no log message in dmesg.\nMaybe it's related to the change to use TCL open-vm-tools 10.2.0.1608 instead of compiling open-vm-tools from stable-10.2.5 (or newer releases).\nA vmtoolsd -v shows 10.2.0.1608 in the 18.09.0 b2d VM and it shows 10.2.5.3619 in the 18.06.1-ce b2d VM.\n. @tianon I've tried to build it locally, but I get the same error as Travis https://travis-ci.org/boot2docker/boot2docker/builds/454166287#L1431. I've built a boot2docker.iso with that vmxnet3 kernel module and tried it with VMware Fusion 11.0.1 with docker-machine 0.15.0 from Docker for Mac 18.06.1.\n$ docker-machine create -d vmwarefusion --vmwarefusion-boot2docker-url=./boot2docker.iso test\nRunning pre-create checks...\n(test) Boot2Docker URL was explicitly set to \"./boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\nCreating machine...\n(test) Boot2Docker URL was explicitly set to \"./boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\n(test) Downloading /Users/stefan/.docker/machine/cache/boot2docker.iso from ./boot2docker.iso...\n(test) Creating SSH key...\n(test) Creating VM...\n(test) Creating disk '/Users/stefan/.docker/machine/machines/test/test.vmdk'\n(test) Virtual disk creation successful.\n(test) Starting test...\n(test) Waiting for VM to come online...\nError creating machine: Error in driver during machine creation: exit status 255\nand with the debug output:\ndocker-machine -D create -d vmwarefusion --vmwarefusion-boot2docker-url=./boot2docker.iso test2\n...\n(test2) DBG | Trying to find IP address in leases file: /var/db/vmware/vmnet-dhcpd-vmnet1.leases\n(test2) DBG | Trying to find IP address in leases file: /var/db/vmware/vmnet-dhcpd-vmnet2.leases\n(test2) DBG | Trying to find IP address in leases file: /var/db/vmware/vmnet-dhcpd-vmnet3.leases\n(test2) DBG | Trying to find IP address in leases file: /var/db/vmware/vmnet-dhcpd-vmnet8.leases\n(test2) DBG | IP found in DHCP lease table: 192.168.65.132\n(test2) DBG | Got an ip: 192.168.65.132\n(test2) DBG | Creating Tar key bundle...\n(test2) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser directoryExistsInGuest /Users/stefan/.docker/machine/machines/test2/test2.vmx /var/lib/boot2docker\n(test2) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser CopyFileFromHostToGuest /Users/stefan/.docker/machine/machines/test2/test2.vmx /Users/stefan/.docker/machine/machines/test2/userdata.tar /home/docker/userdata.tar\n(test2) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser runScriptInGuest /Users/stefan/.docker/machine/machines/test2/test2.vmx /bin/sh sudo sh -c \"tar xvf /home/docker/userdata.tar -C /home/docker > /var/log/userdata.log 2>&1 && chown -R docker:staff /home/docker\"\n(test2) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser runScriptInGuest /Users/stefan/.docker/machine/machines/test2/test2.vmx /bin/sh sudo /bin/mv /home/docker/userdata.tar /var/lib/boot2docker/userdata.tar\n(test2) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser enableSharedFolders /Users/stefan/.docker/machine/machines/test2/test2.vmx\nError creating machine: Error in driver during machine creation: exit status 255\nnotifying bugsnag: [Error creating machine: Error in driver during machine creation: exit status 255]\nI can ssh into the docker machine\n```\n$ docker-machine ssh test2\n   ( '>')\n  /) TC (\\   Core is distributed with ABSOLUTELY NO WARRANTY.\n (/----)           www.tinycorelinux.net\ndocker@boot2docker:~$ lsmod\nModule                  Size  Used by    Tainted: G\nipt_MASQUERADE         16384  1 \nnf_nat_masquerade_ipv4    16384  1 ipt_MASQUERADE\nxfrm_user              32768  1 \niptable_nat            16384  1 \nnf_nat_ipv4            16384  1 iptable_nat\nxt_addrtype            16384  2 \niptable_filter         16384  1 \nxt_conntrack           16384  1 \nnf_nat                 24576  2 nf_nat_masquerade_ipv4,nf_nat_ipv4\nbr_netfilter           20480  0 \nbridge                106496  1 br_netfilter\nstp                    16384  1 bridge\nllc                    16384  2 bridge,stp\noverlay                61440  0 \nvmxnet3                45056  0 \ndocker@boot2docker:~$ df -h\nFilesystem                Size      Used Available Use% Mounted on\ntmpfs                   890.4M    225.4M    665.0M  25% /\ntmpfs                   494.7M         0    494.7M   0% /dev/shm\ncgroup                  494.7M         0    494.7M   0% /sys/fs/cgroup\ntmpfs                   890.4M    225.4M    665.0M  25% /var/lib/docker\n```\nInside the docker machine I can pull and run images, but VMware shared folder doesn't seem to work.\nI have also tried to build a 18.06.1 docker machine and have slight problems at least with shared volumes as well. I'll try the 18.09.0 boot2docker.iso tomorrow on another Mac with VMware Fusion 10.x.x and see if it works there.\n. @tianon I've built the boot2docker.iso with both kernel modules, but I still see a problem creating a machine.\n$ docker-machine -D create -d vmwarefusion --vmwarefusion-boot2docker-url=./boot2docker.iso test\n...\n(test) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser enableSharedFolders /Users/stefan/.docker/machine/machines/test/test.vmx\nError creating machine: Error in driver during machine creation: exit status 255\nnotifying bugsnag: [Error creating machine: Error in driver during machine creation: exit status 255]\nThen I have cross-checked with the boot2docker.iso 18.06.1 and I also get this error. I also used the community driven vmware driver from https://github.com/machine-drivers/docker-machine-driver-vmware repo and I can create a machine with 18.06.1, but shared folders are still missing. See https://github.com/machine-drivers/docker-machine-driver-vmware/issues/15 for details and my gists, but I think this is a general issue when using VMware Fusion 11. I'll test with another Mac that still is on VMware Fusion 10 later on. It's hard to fight two problems at the same time \ud83d\ude05 \n. @tianon I've built the boot2docker.iso with both kernel modules, but I still see a problem creating a machine.\n$ docker-machine -D create -d vmwarefusion --vmwarefusion-boot2docker-url=./boot2docker.iso test\n...\n(test) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser enableSharedFolders /Users/stefan/.docker/machine/machines/test/test.vmx\nError creating machine: Error in driver during machine creation: exit status 255\nnotifying bugsnag: [Error creating machine: Error in driver during machine creation: exit status 255]\nThen I have cross-checked with the boot2docker.iso 18.06.1 and I also get this error. I also used the community driven vmware driver from https://github.com/machine-drivers/docker-machine-driver-vmware repo and I can create a machine with 18.06.1, but shared folders are still missing. See https://github.com/machine-drivers/docker-machine-driver-vmware/issues/15 for details and my gists, but I think this is a general issue when using VMware Fusion 11. I'll test with another Mac that still is on VMware Fusion 10 later on. It's hard to fight two problems at the same time \ud83d\ude05 \n. After dozens of tries with different versions of macOS, Fusion, docker-machine binaries, boot2docker.iso's I got following news.\n\nThe docker-machine 0.13.0 binary for macOS seems the last one that works for the vmwarefusion driver. I can create docker machines up to 18.06.1 with it on nearly any macOS (10.12, 10.13.2, 10.14.1, only 10.14 didn't work) I got, and VMware Fusion 8.5.8, 10.1.4, 11.0.1. See successful gist.\nFrom docker-machine 0.14.0 on (also tested with 0.15.0, 0.16.0) I get errors at the vmrun enableSharedFolders call with the same 18.06.1 iso file that I used with 0.13.0. See errornous gist\n\nThe modified boot2docker.iso of this PR with vmxnet3 and the vmci modules can enable the shared folders without an error, but there is still no /Users folder mounted from the host in the VM.\nAnd then there is another error where the docker-machine 0.13.0 binary aborts after 10 retries in a netstat -tln loop looking for the Docker engine port 2376. The full debug output is in this gist.\nThe lines 152-154 of the gist may be of interest.\nA quick check of the docker machine for the shared folder can be done with\n$ docker-machine ssh test ls /Users\n. After dozens of tries with different versions of macOS, Fusion, docker-machine binaries, boot2docker.iso's I got following news.\n\nThe docker-machine 0.13.0 binary for macOS seems the last one that works for the vmwarefusion driver. I can create docker machines up to 18.06.1 with it on nearly any macOS (10.12, 10.13.2, 10.14.1, only 10.14 didn't work) I got, and VMware Fusion 8.5.8, 10.1.4, 11.0.1. See successful gist.\nFrom docker-machine 0.14.0 on (also tested with 0.15.0, 0.16.0) I get errors at the vmrun enableSharedFolders call with the same 18.06.1 iso file that I used with 0.13.0. See errornous gist\n\nThe modified boot2docker.iso of this PR with vmxnet3 and the vmci modules can enable the shared folders without an error, but there is still no /Users folder mounted from the host in the VM.\nAnd then there is another error where the docker-machine 0.13.0 binary aborts after 10 retries in a netstat -tln loop looking for the Docker engine port 2376. The full debug output is in this gist.\nThe lines 152-154 of the gist may be of interest.\nA quick check of the docker machine for the shared folder can be done with\n$ docker-machine ssh test ls /Users\n. Thanks @lunetics this seems the same problem. Before docker-machine inserts the TLS certs it expects the Docker engine running and listening on port 2376.\nThe docker-machine provisioner checks up to 10 times with WaitForDocker and checkDaemonUp if port 2376 is listening. For boot2docker running in VMware this is not the case and docker-machine then gives up.\nFor some reason using the virtualbox driver there are TLS certs even in the 18.09.0 ISO and docker starts listening on port 2376.\nFor vmwarefusion the tls folder keeps empty and therefore the checkDaemonUp never succeeds.\nPrevious versions of boot2docker.iso automatically created some certs so Docker engine was always (vmwarefusion and virtualbox) running and listening on port 2376 so the provisioning was continued.\nI currently struggle at the point that newer docker-machine binaries abort at vmrun enableSharedFolders where the version 0.13.0 worked without an error. I can't see where the difference is.\n(test2) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser enableSharedFolders /Users/stefan/.docker/machine/machines/test2/test2.vmx\nError creating machine: Error in driver during machine creation: exit status 255\nnotifying bugsnag: [Error creating machine: Error in driver during machine creation: exit status 255]\nThe docker-machine binary inserts a userdata.tar file to /var/lib/boot2docker but with only the SSH key pair and not already the TLS certs. Maybe this behaviour is different to the virtualbox driver?\n$ tar tvf userdata.tar \n----------  0 0      0          36 Jan  1  1970 boot2docker, this is vmware speaking\ndrwx------  0 0      0           0 Jan  1  1970 .ssh\n-rw-r--r--  0 0      0         381 Jan  1  1970 .ssh/authorized_keys\n-rw-r--r--  0 0      0         381 Jan  1  1970 .ssh/authorized_keys2\n. Thanks @lunetics this seems the same problem. Before docker-machine inserts the TLS certs it expects the Docker engine running and listening on port 2376.\nThe docker-machine provisioner checks up to 10 times with WaitForDocker and checkDaemonUp if port 2376 is listening. For boot2docker running in VMware this is not the case and docker-machine then gives up.\nFor some reason using the virtualbox driver there are TLS certs even in the 18.09.0 ISO and docker starts listening on port 2376.\nFor vmwarefusion the tls folder keeps empty and therefore the checkDaemonUp never succeeds.\nPrevious versions of boot2docker.iso automatically created some certs so Docker engine was always (vmwarefusion and virtualbox) running and listening on port 2376 so the provisioning was continued.\nI currently struggle at the point that newer docker-machine binaries abort at vmrun enableSharedFolders where the version 0.13.0 worked without an error. I can't see where the difference is.\n(test2) DBG | executing: /Applications/VMware Fusion.app/Contents/Public/vmrun -gu docker -gp tcuser enableSharedFolders /Users/stefan/.docker/machine/machines/test2/test2.vmx\nError creating machine: Error in driver during machine creation: exit status 255\nnotifying bugsnag: [Error creating machine: Error in driver during machine creation: exit status 255]\nThe docker-machine binary inserts a userdata.tar file to /var/lib/boot2docker but with only the SSH key pair and not already the TLS certs. Maybe this behaviour is different to the virtualbox driver?\n$ tar tvf userdata.tar \n----------  0 0      0          36 Jan  1  1970 boot2docker, this is vmware speaking\ndrwx------  0 0      0           0 Jan  1  1970 .ssh\n-rw-r--r--  0 0      0         381 Jan  1  1970 .ssh/authorized_keys\n-rw-r--r--  0 0      0         381 Jan  1  1970 .ssh/authorized_keys2\n. OK, learn a bit from reading the source. docker-machine 0.13.0 just didn't check the return code of vmrun enableSharedFolders, so with the 18.09.0 ISO it does not abort here, but no shared folder is mounted. We have to check how to make the vmtools work and talk with VMware hypervisor.\nAnd there is a timing issue with the userdata.tar file when it gets copied into the VM and when the /etc/init.d/docker script checks for it to create some dummy certs to start docker listening on 2376 for further provisioning.. OK, learn a bit from reading the source. docker-machine 0.13.0 just didn't check the return code of vmrun enableSharedFolders, so with the 18.09.0 ISO it does not abort here, but no shared folder is mounted. We have to check how to make the vmtools work and talk with VMware hypervisor.\nAnd there is a timing issue with the userdata.tar file when it gets copied into the VM and when the /etc/init.d/docker script checks for it to create some dummy certs to start docker listening on 2376 for further provisioning.. On macOS running the mount command manually shows me that the first two always complain an error, that's why docker-machine 0.14.0 aborts here.\n$ vmrun -gu docker -gp tcuser enableSharedFolders /Users/stefan/Virtual\\ Machines.localized/b2d-18.06.1.vmwarevm/b2d-18.06.1.vmx \nError: There was an error mounting the Shared Folders file system inside the guest operating system\n~/code/docker-windows-box/docker-machine-fusion on master\n$ vmrun -gu docker -gp tcuser addSharedFolder /Users/stefan/Virtual\\ Machines.localized/b2d-18.06.1.vmwarevm/b2d-18.06.1.vmx Users /Users\nError: There was an error mounting the Shared Folders file system inside the guest operating system\nThe third command succeeds and the shared folder is mounted in the vm when running the boot2docker version 18.06.1.\n$ vmrun -gu docker -gp tcuser runScriptInGuest /Users/stefan/Virtual\\ Machines.localized/b2d-18.06.1.vmwarevm/b2d-18.06.1.vmx '/bin/sh' '[ ! -d /Users ]&& sudo mkdir /Users; sudo mount --bind /mnt/hgfs//Users /Users || [ -f /usr/local/bin/vmhgfs-fuse ]&& sudo /usr/local/bin/vmhgfs-fuse -o allow_other .host:/Users /Users || sudo mount -t vmhgfs -o uid=$(id -u),gid=$(id -g) .host:/Users /Users'\nHere VMware Fusion 11.0.1 seems to behave differently to VMware Workstation 15.0.1, I could create 18.06.1 docker machines with any docker-machine.exe version. Strange.\nWhat I can see in VMware Fusion is that the share has been added to the .vmx file, so maybe we just can skip the error checks of the first two commands (again). \ud83d\ude05 \nRunning the third command with the boot2docker 18.09.0 + patches ISO I get an error:\n$ vmrun -gu docker -gp tcuser runScriptInGuest /Users/stefan/Virtual\\ Machines.localized/b2d-18.09.0-patch.vmwarevm/b2d-18.09.0-patch.vmx '/bin/sh' '[ ! -d /Users ]&& sudo mkdir /Users; sudo mount --bind /mnt/hgfs//Users /Users || [ -f /usr/local/bin/vmhgfs-fuse ]&& sudo /usr/local/bin/vmhgfs-fuse -o allow_other .host:/Users /Users || sudo mount -t vmhgfs -o uid=$(id -u),gid=$(id -g) .host:/Users /Users'\nGuest program exited with non-zero exit code: 1\nWhen I run the commands manually in the 18.09.0 + patches VM here is a difference to the 18.06.1 VM:\n```\n$ sudo mkdir /Users\n$ sudo mount --bind /mnt/hgfs//Users /Users\nError: cannot mount filesystem: No such device\n$ sudo /usr/local/bin/vmhgfs-fuse -o allow_other .host:/Users\nfuse: device not found, try 'modprobe fuse' first\n```\n. On macOS running the mount command manually shows me that the first two always complain an error, that's why docker-machine 0.14.0 aborts here.\n$ vmrun -gu docker -gp tcuser enableSharedFolders /Users/stefan/Virtual\\ Machines.localized/b2d-18.06.1.vmwarevm/b2d-18.06.1.vmx \nError: There was an error mounting the Shared Folders file system inside the guest operating system\n~/code/docker-windows-box/docker-machine-fusion on master\n$ vmrun -gu docker -gp tcuser addSharedFolder /Users/stefan/Virtual\\ Machines.localized/b2d-18.06.1.vmwarevm/b2d-18.06.1.vmx Users /Users\nError: There was an error mounting the Shared Folders file system inside the guest operating system\nThe third command succeeds and the shared folder is mounted in the vm when running the boot2docker version 18.06.1.\n$ vmrun -gu docker -gp tcuser runScriptInGuest /Users/stefan/Virtual\\ Machines.localized/b2d-18.06.1.vmwarevm/b2d-18.06.1.vmx '/bin/sh' '[ ! -d /Users ]&& sudo mkdir /Users; sudo mount --bind /mnt/hgfs//Users /Users || [ -f /usr/local/bin/vmhgfs-fuse ]&& sudo /usr/local/bin/vmhgfs-fuse -o allow_other .host:/Users /Users || sudo mount -t vmhgfs -o uid=$(id -u),gid=$(id -g) .host:/Users /Users'\nHere VMware Fusion 11.0.1 seems to behave differently to VMware Workstation 15.0.1, I could create 18.06.1 docker machines with any docker-machine.exe version. Strange.\nWhat I can see in VMware Fusion is that the share has been added to the .vmx file, so maybe we just can skip the error checks of the first two commands (again). \ud83d\ude05 \nRunning the third command with the boot2docker 18.09.0 + patches ISO I get an error:\n$ vmrun -gu docker -gp tcuser runScriptInGuest /Users/stefan/Virtual\\ Machines.localized/b2d-18.09.0-patch.vmwarevm/b2d-18.09.0-patch.vmx '/bin/sh' '[ ! -d /Users ]&& sudo mkdir /Users; sudo mount --bind /mnt/hgfs//Users /Users || [ -f /usr/local/bin/vmhgfs-fuse ]&& sudo /usr/local/bin/vmhgfs-fuse -o allow_other .host:/Users /Users || sudo mount -t vmhgfs -o uid=$(id -u),gid=$(id -g) .host:/Users /Users'\nGuest program exited with non-zero exit code: 1\nWhen I run the commands manually in the 18.09.0 + patches VM here is a difference to the 18.06.1 VM:\n```\n$ sudo mkdir /Users\n$ sudo mount --bind /mnt/hgfs//Users /Users\nError: cannot mount filesystem: No such device\n$ sudo /usr/local/bin/vmhgfs-fuse -o allow_other .host:/Users\nfuse: device not found, try 'modprobe fuse' first\n``\n. Thanks @tianon I can reproduce your results. \ud83c\udf89 \n- With docker-machine 0.16.0 and the built-invmwarefusiondriver it still aborts due to the error checks at vmrun enableSharedFolders.\n- With docker-machine 0.16.0 and the additionalvmwaredriver 0.1.0 I can create a Docker machine and the shared folder mounted at/hosthomeinstead of/Users.\n. Thanks @tianon I can reproduce your results. \ud83c\udf89 \n- With docker-machine 0.16.0 and the built-invmwarefusiondriver it still aborts due to the error checks at vmrun enableSharedFolders.\n- With docker-machine 0.16.0 and the additionalvmwaredriver 0.1.0 I can create a Docker machine and the shared folder mounted at/hosthomeinstead of/Users`.\n. ",
    "tekook": "@StefanScherer \n\nI've built the boot2docker.iso\nhttps://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\nSHA256 checksum is f48a4ef3641123f26308444b22bea70ac438d714b52dc1fd1fa025f949786412.\nIf someone wants to try it. I've added my first findings in #1350 and will try it with an older VMware Fusion version tomorrow.\n\ncan confirm this iso is working fine with vmwareworkstation-driver.\nVMware Workstion Pro 15. @StefanScherer \nResponded to early. Fails at provisioning docker. Same as in #1350 and (https://github.com/boot2docker/boot2docker/pull/1350#issuecomment-438181741)\ndocker-machine create --driver=vmwareworkstation --vmwareworkstation-boot2docker-url=https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso default\nRunning pre-create checks...\n(default) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\nCreating machine...\n(default) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\n(default) Downloading C:\\Users\\jute\\.docker\\machine\\cache\\boot2docker.iso from https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3/boot2docker.iso...\n(default) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%\n(default) Creating SSH key...\n(default) Creating VM...\n(default) Creating disk 'C:\\Users\\jute\\.docker\\machine\\machines\\default\\default.vmdk'\n(default) Virtual disk creation successful.\n(default) Starting default...\n(default) Waiting for VM to come online...\nWaiting for machine to be running, this may take a few minutes...\nDetecting operating system of created instance...\nWaiting for SSH to be available...\nDetecting the provisioner...\nProvisioning with boot2docker...\nError creating machine: Error running provisioning: Unable to verify the Docker daemon is listening: Maximum number of retries (10) exceeded. ",
    "abdusco": "Thanks @tianon, I can confirm that using the last release fixes this issue. ",
    "CallMarl": "I reboot my computer and it's working now I dont understand why. I suppose it's because when I create de Demo switch I haven't reboot the VM but I'm not sure.. I reboot my computer and it's working now I dont understand why. I suppose it's because when I create de Demo switch I haven't reboot the VM but I'm not sure.. ",
    "luo12yan": "@tianon thanks. ",
    "smeinecke": "yep, same here :(. yep, same here :(. ",
    "daniel-shimon": "Had to edit add it with HexEditor \ud83e\udd23 \nJust adding \"-v18.09.0\" to offset 0x8032 solves it of course \ud83d\udc4d . ",
    "seriousme": "@daniel-shimon is right, its very easy to patch if you know what you are looking for. Bit sad IMHO to let users try to download over and over when its so easy to fix. Took me less than 2 minutes using \nhttps://hexed.it/ once I knew what the issue was.\n. ",
    "kickbotowski": "I used\nhttps://github.com/boot2docker/boot2docker/releases/tag/v18.09.1-beta2 \nAlthough Did not find prefix \"-v\" not display anymore,  but it still download (default) Default Boot2Docker ISO is out-of-date and re download(Window 7). Is any ideas?. ",
    "chanjamin": "\nHad to edit add it with HexEditor \ud83e\udd23\nJust adding \"-v18.09.0\" to offset 0x8032 solves it of course \ud83d\udc4d\nhow to?. \n",
    "BrickCar": "@daniel-shimon   how to insert  \"-v18.09.0\" ??. ",
    "vincentX3": "\n@daniel-shimon how to insert \"-v18.09.0\" ??\n\nthanks a lot, it worked. Both of u save my whole day puzzle. @seriousme @peterlloydcc \nto insert it, u can open the .iso by in the url here find the position of 0x8032, then paste -v18.09.0. remember choose replace it(not add it). then just export the new iso and restart ur docker.. ",
    "141801": "sh-3.2# docker-machine  create --driver virtualbox  default \"-v18.09.0\"\nInvalid command line. Found extra arguments [-v18.09.0]. ",
    "debragail": "\nThe fix will be in the next release of boot2docker.\n\nis it fixed?. ",
    "vchebotarev": "@tianon nope\nhttps://github.com/boot2docker/boot2docker/issues/1347#issuecomment-447812960 this is still the only way to fix it\ni've tried every iso from mentioned releases before \"hex editing\" finally helped me. @pavanssetty https://github.com/boot2docker/boot2docker/issues/1347#issuecomment-447812960\nthis is the only way. ",
    "nguyenngoctranvu": "I got same problem.. ",
    "sampeson": "I can also confirm. ",
    "supermanHub": "Because of docker 18.09.0 stable for mac is not release yet, so i am not sure whether is it a bug of docker or not! \nBTW, I test it on docker edge version(should be 18.09.0)for mac, the issue is exist too!\n\u53d1\u81ea\u6211\u7684 iPhone\n\n\u5728 2018\u5e7411\u670811\u65e5\uff0c\u4e0a\u53487:52\uff0cTianon Gravi notifications@github.com \u5199\u9053\uff1a\nPlease use the \"thumbs up\" reaction feature instead of spamming the issue with additional comments.\nIs this a known issue in Docker 18.09.0 or is this definitely a bug in boot2docker? (that's the first place to start to narrow down where the fix for this might belong)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Please use the \"thumbs up\" reaction feature instead of spamming the issue with additional comments.\n\nfor upon, I am not sure what I have todo, could you please give me some guidelines or demo? Thanks \nSend from Jackie\u2019s iPhone\n\n\u5728 2018\u5e7411\u670811\u65e5\uff0c\u4e0a\u53487:52\uff0cTianon Gravi notifications@github.com \u5199\u9053\uff1a\nPlease use the \"thumbs up\" reaction feature instead of spamming the issue with additional comments.\nIs this a known issue in Docker 18.09.0 or is this definitely a bug in boot2docker? (that's the first place to start to narrow down where the fix for this might belong)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @schoeppe \nDo you have more information about this upstream issue?\nAny link would be appreciated, thank you!\n\nSorry, i don't have enough time to get much more information about this upstream issue, i have some urgent to do at the moment. I will inspect it when I am free. ~_~\n. Good news. Thanks for your confirmation.\nI believe we can close the issue now.\n\nOn Dec 11, 2018, at 13:47, Yuchang Wu notifications@github.com wrote:\ndocker swarm init --advertise-addr 192.168.99.100 && docker stack deploy -c docker-compose.yml firstlab again, then access \"192.168.99.100\" via the chrome. It's work right now.\n\n. ",
    "alexivkin": "Actually it has to do with the boot2docker missing the REDIRECT module in the kernel.\nSo the check needs to be done for CONFIG_IP_NF_TARGET_REDIRECT=m\nI found the same \"No chain/target/match by that name\" error in the swarm on docker-machines with the latest boot2docker. Actually it has to do with the boot2docker missing the REDIRECT module in the kernel.\nSo the check needs to be done for CONFIG_IP_NF_TARGET_REDIRECT=m\nI found the same \"No chain/target/match by that name\" error in the swarm on docker-machines with the latest boot2docker. you might want to throw \nCONFIG_IP_NF_TARGET_REDIRECT=m\nin there too. you might want to throw \nCONFIG_IP_NF_TARGET_REDIRECT=m\nin there too. What release are you eyeing for this fix? . What release are you eyeing for this fix? . ",
    "lunetics": "I'm using the vmwarevsphere driver and get the same error as  @MartinSGill \nWith the patched vmxnet3 version from @StefanScherer it'll go to the provision step, before it froze at Waiting for VMware Tools to come online...\nRunning pre-create checks...\nCreating machine...\n(testdockermachine) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3-vmci/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\n(testdockermachine) Downloading /root/.docker/machine/cache/boot2docker.iso from https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3-vmci/boot2docker.iso...\n(testdockermachine) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%\n(testdockermachine) Generating SSH Keypair...\n(testdockermachine) Creating VM...\n(testdockermachine) Uploading Boot2docker ISO ...\n(testdockermachine) adding network: VM Network\n(testdockermachine) Reconfiguring VM\n(testdockermachine) Waiting for VMware Tools to come online...\n(testdockermachine) Provisioning certs and ssh keys...\nWaiting for machine to be running, this may take a few minutes...\nDetecting operating system of created instance...\nWaiting for SSH to be available...\nDetecting the provisioner...\nProvisioning with boot2docker...\nError creating machine: Error running provisioning: Unable to verify the Docker daemon is listening: Maximum number of retries (10) exceeded\neval \"$(docker-machine env testdockermachine)\"\nError checking TLS connection: Error checking and/or regenerating the certs: There was an error validating certificates for host \"10.0.23.57:2376\": dial tcp 10.0.23.57:2376: connect: connection refused\nYou can attempt to regenerate them using 'docker-machine regenerate-certs [name]'.\nBe advised that this will trigger a Docker daemon restart which might stop running containers.\n. I'm using the vmwarevsphere driver and get the same error as  @MartinSGill \nWith the patched vmxnet3 version from @StefanScherer it'll go to the provision step, before it froze at Waiting for VMware Tools to come online...\nRunning pre-create checks...\nCreating machine...\n(testdockermachine) Boot2Docker URL was explicitly set to \"https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3-vmci/boot2docker.iso\" at create time, so Docker Machine cannot upgrade this machine to the latest version.\n(testdockermachine) Downloading /root/.docker/machine/cache/boot2docker.iso from https://github.com/StefanScherer/boot2docker/releases/download/v18.09.0-vmxnet3-vmci/boot2docker.iso...\n(testdockermachine) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%\n(testdockermachine) Generating SSH Keypair...\n(testdockermachine) Creating VM...\n(testdockermachine) Uploading Boot2docker ISO ...\n(testdockermachine) adding network: VM Network\n(testdockermachine) Reconfiguring VM\n(testdockermachine) Waiting for VMware Tools to come online...\n(testdockermachine) Provisioning certs and ssh keys...\nWaiting for machine to be running, this may take a few minutes...\nDetecting operating system of created instance...\nWaiting for SSH to be available...\nDetecting the provisioner...\nProvisioning with boot2docker...\nError creating machine: Error running provisioning: Unable to verify the Docker daemon is listening: Maximum number of retries (10) exceeded\neval \"$(docker-machine env testdockermachine)\"\nError checking TLS connection: Error checking and/or regenerating the certs: There was an error validating certificates for host \"10.0.23.57:2376\": dial tcp 10.0.23.57:2376: connect: connection refused\nYou can attempt to regenerate them using 'docker-machine regenerate-certs [name]'.\nBe advised that this will trigger a Docker daemon restart which might stop running containers.\n. Addition. Testing with boot2docker v18.06.1-ce worked fine so far, netstat -tln gives the correct output with the docker ports:\nnetstat -tln\nSSH cmd err, output: <nil>: Active Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      \ntcp        0      0 :::2376                 :::*                    LISTEN      \ntcp        0      0 :::22                   :::*                    LISTEN. Addition. Testing with boot2docker v18.06.1-ce worked fine so far, netstat -tln gives the correct output with the docker ports:\nnetstat -tln\nSSH cmd err, output: <nil>: Active Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      \ntcp        0      0 :::2376                 :::*                    LISTEN      \ntcp        0      0 :::22                   :::*                    LISTEN. @StefanScherer should we open another ticket on the wrong / missing netstat output (to detect if docker is running?). @StefanScherer should we open another ticket on the wrong / missing netstat output (to detect if docker is running?). ",
    "VasilRomanovich": "Hm, it looks like this problem is actually caused by latest debian stretch release. For more info see this issue.\nSorry, closing.. Hm, it looks like this problem is actually caused by latest debian stretch release. For more info see this issue.\nSorry, closing.. ",
    "domtes": "+1. ",
    "crassaert": "Thanks tianon, so you can make it work with this command :\ndocker-machine --debug create -d xhyve --xhyve-boot2docker-url https://github.com/boot2docker/boot2docker/releases/download/v18.09.1-rc1/boot2docker.iso default. ",
    "sven-carstens": "I managed to swap it out but had to change /var/lib/boot2docker/profile the overlay filesystem from aufs to overlay2.. ",
    "chandrugopalanece89": "Thanks for prompt response . I am trying to create one virtual network naming dut using libvirt , qemu-kvm \nWhen i run container in non-privileged mode libvirt-sock is created succesfully but KVM is not initialized .I googled and observed that to intialize kvm inside container running privileged mode is necessary \nI dont know what is blocking to create libvirt-sock when i do sudo service libvirt-bin start . Can you please suggest solution to fix this \nNon privileged mode :\nchandru@chandru-OptiPlex-790:/var/run/libvirt$ sudo docker run -it cucumber bash\n+ '[' -v INTERFACES ']'\n+ '[' -v JOB_NAME ']'\n+ bash\nroot@6742d524b511:/# kvm\nCould not access KVM kernel module: No such file or directory\nfailed to initialize KVM: No such file or directory\nroot@6742d524b511:/# \nroot@6742d524b511:/# \nroot@6742d524b511:/# \nroot@6742d524b511:/# sudo service libvirt-bin start\n * Starting libvirt management daemon libvirtd                                                                                                 /var/run/libvirt/libvirt-sock ready.\n                                                                                                                                        [ OK ]\nroot@6742d524b511:/# cd /var/run/libvirt\nroot@6742d524b511:/var/run/libvirt# ls\nlibvirt-sock  libvirt-sock-ro  network  qemu  uml-guest\nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# ls -lrt\ntotal 12\ndrwxrwxrwx 1 root root     4096 Nov 12 18:12 uml-guest\ndrwxrwxrwx 1 root root     4096 Nov 12 18:12 qemu\nsrwxrwxrwx 1 root libvirtd    0 Nov 21 14:57 libvirt-sock-ro\nsrwxrwx--- 1 root libvirtd    0 Nov 21 14:57 libvirt-sock\ndrwxrwxrwx 1 root root     4096 Nov 21 14:57 network\nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# sudo virsh list\n Id    Name                           State\n\nroot@6742d524b511:/var/run/libvirt# sudo virsh net-list --all\n Name                 State      Autostart     Persistent\n\ndefault              inactive   yes           yes\nPrivileged mode :\nchandru@chandru-OptiPlex-790:/var/run/libvirt$ sudo docker run --privileged -ti cucumber bash\n+ '[' -v INTERFACES ']'\n+ '[' -v JOB_NAME ']'\n+ bash\nroot@9adcf711c019:/# kvm\nCould not initialize SDL(No available video device) - exiting\nroot@9adcf711c019:/# \nroot@9adcf711c019:/# \nroot@9adcf711c019:/# \nroot@9adcf711c019:/# kvm-ok\nINFO: /dev/kvm exists\nKVM acceleration can be used\nroot@9adcf711c019:/# ls -l /dev/kvm\ncrw-rw---- 1 root 132 10, 232 Nov 21 15:00 /dev/kvm\nroot@9adcf711c019:/# \nroot@9adcf711c019:/# \nroot@9adcf711c019:/# sudo service libvirt-bin start\n * Starting libvirt management daemon libvirtd                                                                                                 /var/run/libvirt/libvirt-sock ready.\n                                                                                                                                        [ OK ]\nroot@9adcf711c019:/# cd /var/run/libvirt/\nroot@9adcf711c019:/var/run/libvirt# ls\nnetwork  qemu  uml-guest\nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# ls -lrt\ntotal 12\ndrwxrwxrwx 1 root root 4096 Nov 12 18:12 uml-guest\ndrwxrwxrwx 1 root root 4096 Nov 12 18:12 qemu\ndrwxrwxrwx 1 root root 4096 Nov 15 10:19 network\nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# sudo virsh list\nerror: failed to connect to the hypervisor\nerror: no valid connection\nerror: Failed to connect socket to '/var/run/libvirt/libvirt-sock': No such file or directory\nroot@9adcf711c019:/var/run/libvirt# \n. Thanks for prompt response . I am trying to create one virtual network naming dut using libvirt , qemu-kvm \nWhen i run container in non-privileged mode libvirt-sock is created succesfully but KVM is not initialized .I googled and observed that to intialize kvm inside container running privileged mode is necessary \nI dont know what is blocking to create libvirt-sock when i do sudo service libvirt-bin start . Can you please suggest solution to fix this \nNon privileged mode :\nchandru@chandru-OptiPlex-790:/var/run/libvirt$ sudo docker run -it cucumber bash\n+ '[' -v INTERFACES ']'\n+ '[' -v JOB_NAME ']'\n+ bash\nroot@6742d524b511:/# kvm\nCould not access KVM kernel module: No such file or directory\nfailed to initialize KVM: No such file or directory\nroot@6742d524b511:/# \nroot@6742d524b511:/# \nroot@6742d524b511:/# \nroot@6742d524b511:/# sudo service libvirt-bin start\n * Starting libvirt management daemon libvirtd                                                                                                 /var/run/libvirt/libvirt-sock ready.\n                                                                                                                                        [ OK ]\nroot@6742d524b511:/# cd /var/run/libvirt\nroot@6742d524b511:/var/run/libvirt# ls\nlibvirt-sock  libvirt-sock-ro  network  qemu  uml-guest\nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# ls -lrt\ntotal 12\ndrwxrwxrwx 1 root root     4096 Nov 12 18:12 uml-guest\ndrwxrwxrwx 1 root root     4096 Nov 12 18:12 qemu\nsrwxrwxrwx 1 root libvirtd    0 Nov 21 14:57 libvirt-sock-ro\nsrwxrwx--- 1 root libvirtd    0 Nov 21 14:57 libvirt-sock\ndrwxrwxrwx 1 root root     4096 Nov 21 14:57 network\nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# \nroot@6742d524b511:/var/run/libvirt# sudo virsh list\n Id    Name                           State\n\nroot@6742d524b511:/var/run/libvirt# sudo virsh net-list --all\n Name                 State      Autostart     Persistent\n\ndefault              inactive   yes           yes\nPrivileged mode :\nchandru@chandru-OptiPlex-790:/var/run/libvirt$ sudo docker run --privileged -ti cucumber bash\n+ '[' -v INTERFACES ']'\n+ '[' -v JOB_NAME ']'\n+ bash\nroot@9adcf711c019:/# kvm\nCould not initialize SDL(No available video device) - exiting\nroot@9adcf711c019:/# \nroot@9adcf711c019:/# \nroot@9adcf711c019:/# \nroot@9adcf711c019:/# kvm-ok\nINFO: /dev/kvm exists\nKVM acceleration can be used\nroot@9adcf711c019:/# ls -l /dev/kvm\ncrw-rw---- 1 root 132 10, 232 Nov 21 15:00 /dev/kvm\nroot@9adcf711c019:/# \nroot@9adcf711c019:/# \nroot@9adcf711c019:/# sudo service libvirt-bin start\n * Starting libvirt management daemon libvirtd                                                                                                 /var/run/libvirt/libvirt-sock ready.\n                                                                                                                                        [ OK ]\nroot@9adcf711c019:/# cd /var/run/libvirt/\nroot@9adcf711c019:/var/run/libvirt# ls\nnetwork  qemu  uml-guest\nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# ls -lrt\ntotal 12\ndrwxrwxrwx 1 root root 4096 Nov 12 18:12 uml-guest\ndrwxrwxrwx 1 root root 4096 Nov 12 18:12 qemu\ndrwxrwxrwx 1 root root 4096 Nov 15 10:19 network\nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# \nroot@9adcf711c019:/var/run/libvirt# sudo virsh list\nerror: failed to connect to the hypervisor\nerror: no valid connection\nerror: Failed to connect socket to '/var/run/libvirt/libvirt-sock': No such file or directory\nroot@9adcf711c019:/var/run/libvirt# \n. ",
    "sheezyontrack": "I am experiencing similar issues, however I have noticed additional issues. When I plug a USB device to the machine and map/add it to the Docker machine using the filter, I start the docker-machine up successfully but I can't list the attached serial devices similar to the issue with @StefanD986 .   In addition to this, when I unplug the device  and run the command $ docker-machine status  on another terminal, it says \n\nRunning\n\nbut if I plug the USB device back to the system and repeat the  command $ docker-machine status command. I get the message \n\nerror getting state for host default: signal: segmentation fault.\n\nMoreover, when I use a  USBasp AVR programmer, the situation is completely different.  It's either that:-\n(a)The docker-machine gets stucked at \n\nWaiting for an IP... \n\nor it diisplays \n\nWaiting for an IP...\nMaximum number of retries (5) exceeded\n\nI have tried both the Serial Ports and the USB options for mapping the USB to UART on the VirtualBox for this and they both have similar issues\nSystem info: \nOperating System: OSX Mojave 10.14.3\n$  docker --version\nDocker version 18.09.3, build 774a1f4\n$  docker-machine --version\ndocker-machine version 0.16.1, build cce350d7\n. ",
    "alipig": "set the system variable VIRTUALBOX_BOOT2DOCKER_URL to redirect the download url.\nyou can use the http file server just as hfs.exe on http://www.rejetto.com/hfs/ to serve the iso image\ngood job\n. ",
    "jiange17": "\nset the system variable VIRTUALBOX_BOOT2DOCKER_URL to redirect the download url.\nyou can use the http file server just as hfs.exe on http://www.rejetto.com/hfs/ to serve the iso image\ngood job\n\nI am sorry, I did not explain in advance that I am using an Apple computer. In addition, my problem is that I successfully downloaded the iso image, but still \"Unable to get the local Boot2Docker ISO version: Did not find prefix \"-v\" in version string\", so it goes to get the latest version again. . When it is downloaded successfully, it will repeat the operation just now. In fact, I have downloaded the latest version. Maybe your answer is correct, but I don't understand it.. ",
    "StefanD986": "Hmm, not quite. I only was able to do a really quick check, but also with the new ISO the device file is not created.\nOne thing that I noticed is that the old 18.06 version also has a kernel module usbserial which is loaded, whereas the in 18.09 (and also in the ISO linked above) the usbserial module seems to be missing.\nlsmod from new ISO:\ndocker@test:~$ lsmod\nModule                  Size  Used by    Tainted: G  \nipt_MASQUERADE         16384  1 \nnf_nat_masquerade_ipv4    16384  1 ipt_MASQUERADE\nxfrm_user              32768  1 \niptable_nat            16384  1 \nnf_nat_ipv4            16384  1 iptable_nat\nxt_addrtype            16384  2 \niptable_filter         16384  1 \nxt_conntrack           16384  1 \nnf_nat                 24576  2 nf_nat_masquerade_ipv4,nf_nat_ipv4\nbr_netfilter           20480  0 \nbridge                106496  1 br_netfilter\nstp                    16384  1 bridge\nllc                    16384  2 bridge,stp\noverlay                61440  0 \nvboxsf                 36864  1 \next4                  536576  1 \nmbcache                16384  1 ext4\njbd2                   86016  1 ext4\nsquashfs               32768  3 \nvboxguest             212992  2 vboxsf\nlsmod from v18.06\ndocker@default1806:~$ lsmod\nModule                  Size  Used by    Tainted: G  \nipt_MASQUERADE         16384  1 \nnf_nat_masquerade_ipv4    16384  1 ipt_MASQUERADE\nnf_conntrack_netlink    28672  0 \niptable_nat            16384  1 \nnf_conntrack_ipv4      16384  2 \nnf_defrag_ipv4         16384  1 nf_conntrack_ipv4\nnf_nat_ipv4            16384  1 iptable_nat\nxt_addrtype            16384  2 \nxt_conntrack           16384  1 \nnf_nat                 20480  2 nf_nat_masquerade_ipv4,nf_nat_ipv4\nnf_conntrack           69632  6 nf_nat_masquerade_ipv4,nf_conntrack_netlink,nf_conntrack_ipv4,nf_nat_ipv4,xt_conntrack,nf_nat\nbr_netfilter           20480  0 \nbridge                 86016  1 br_netfilter\nstp                    16384  1 bridge\nllc                    16384  2 bridge,stp\nipv6                  286720 15 bridge,[permanent]\nvboxsf                 32768  1 \njoydev                 20480  0 \ncpufreq_conservative    16384  0 \ncpufreq_userspace      16384  0 \ncpufreq_powersave      16384  0 \nftdi_sio               45056  0 \nusbserial              24576  1 ftdi_sio\nsquashfs               32768  0 \npcspkr                 16384  0 \nvideo                  32768  0 \nbacklight              16384  1 video\nbattery                16384  0 \nac                     16384  0 \nloop                   24576  0 \nintel_agp              16384  0 \nintel_gtt              20480  1 intel_agp\nagpgart                32768  2 intel_agp,intel_gtt\ni2c_piix4              16384  0 \nvboxguest             184320  2 vboxsf\ne1000                  94208  0. Yes, this fixes it for me with my FTDI adapter.\nNow the usbserial and ftdi_sio module are automatically loaded.\nThanks a lot!\nP.S. would be nice to have an official release with that fix implemented soon.. @tianon stumbled upon a problem again with a USB serial adapter which requires the module cdc_acm. Can this be added to the config?. AFAIK, it is actually included in Debian, however it is not part of theCONFIG_USB_SERIAL_* group. (I can only speculate, but I guess this is for historical reasons? The cdc_acm module documentation says its for usb modems, but its seems nowadays it is also used by some USB to serial adapters)\nThe relevant lines I can find in the debian config are:\nhttps://salsa.debian.org/kernel-team/linux/blob/master/debian/config/config#L4967\nand\nhttps://salsa.debian.org/kernel-team/linux/blob/master/debian/config/config#L4930\n. ",
    "bearzyj": "\nI'm frankly puzzled a little by this -- can you elaborate on \"Try to ping container(172.17.0.2) from macOS(192.168.99.1) with adding a route\", specifically \"adding a route\"? What kind of route did you add? I honestly can't imagine how I'd make that work without some real complex networking configuration, so just saying \"adding a route\" seems like there's more buried here (since if this works just by \"adding a route\", we've got a much larger security issue).\n\nHi @tianon ,\nAdd a route like this: sudo route add 172.17.0.0/16 $(docker-machine ip tryIt)\nI use docker in this way, just because I want to ssh to container from macOS directly.\nI am not an expert on network security area, since I have the access to macOS, to docker machine(here is \"tryIt\"), to the container, what is the security issue if I want to access container directly from macOS?. Thanks @tianon \nActually, without any change, value of  net.ipv4.ip_forward is already 1 by default in v18.09.0.\nThe crux is about the changes of iptables you mentioned. \nCheck \"sudo iptables  -L\" in v18.09.0, it shows Chain FORWARD (policy DROP)\nAfter executing sudo iptables -P FORWARD ACCEPT, I can ping the container from macOS.\n. ",
    "TeeJayD": "The latest beta with #1367 applied fixes the issue.. ",
    "stefangweichinger": "\n\nHow much testing has this had?\n\nI have combined the kernel options from this and #1372 PRs and built an image which successfully run on my VMware ESXi server and detected the persistent hard drive (thus, my issue #1368 will be resolved with this PR) and also successfully passed my automatic stress-testing suite (it uses quite a few of Docker features and some extra Cgroup capabilities).\n@unsignedint To build boot2docker.iso, run these two commands:\ndocker built -t boot2docker .\ndocker run --rm boot2docker > boot2docker.iso\nHere is the image I have built: https://drive.google.com/file/d/1uIeMp5UE6xswZdoU4Xn7nOAvsJ-cefix/view?usp=sharing\n\nbuilt the image as well, thanks for documenting ... but how do I tell docker-machine to use my image instead of downloading as usual? Do I have to provide my own image via http really? pls advise, thanks.\nEDIT: solved by providing local image ... thanks. ",
    "jkldgoefgkljefogeg": "What is the difference between value m and y?\nVMWARE_VMCI_VSOCKETS depends on: CONFIG_VSOCKETS && CONFIG_VMWARE_VMCI\nhttps://cateee.net/lkddb/web-lkddb/VMWARE_VMCI_VSOCKETS.html. ",
    "hexfred": "I've missed it. Thanks for the fix.. ",
    "AnselmD": "Thank you for your help, @tianon \nI have trouble with this in a given environment. I try to breakdown the problem to a hand made example. \nI am running this example in a boot2docker 18.06.01 and a 18.09.01 environment with dockertoolbox.exe and will describe the differences:\nScreenshot of the Oracle VM Virtual Box Manager: SAS Controller with a 8 GB Disk:\n\n\nIn the following screenshot i am using fdisk -l to list all known disks. As you can see, /dev/sdb is known, but at the moment does not have a partition. this is okay.\n\nNow i exchanged the boot2docker image to 18.09.01, as you can see fdisk -l does not list the SAS drive:\n\nAnd now using parted with print devices:\n\nIs this the information you expected?\n. Yes,\n1. result, lsmod:\n```\nModule                  Size  Used by    Tainted: G\nipt_MASQUERADE         16384  1 \nnf_nat_masquerade_ipv4    16384  1 ipt_MASQUERADE\nnf_conntrack_netlink    28672  0 \niptable_nat            16384  1 \nnf_conntrack_ipv4      16384  2 \nnf_defrag_ipv4         16384  1 nf_conntrack_ipv4\nnf_nat_ipv4            16384  1 iptable_nat\nxt_addrtype            16384  2 \nxt_conntrack           16384  1 \nnf_nat                 20480  2 nf_nat_masquerade_ipv4,nf_nat_ipv4\nnf_conntrack           69632  6 nf_nat_masquerade_ipv4,nf_conntrack_netlink,nf_conntrack_ipv4,nf_nat_ipv4,xt_conntrack,nf_nat\nbr_netfilter           20480  0 \nbridge                 86016  1 br_netfilter\nstp                    16384  1 bridge\nllc                    16384  2 bridge,stp\nipv6                  286720 15 bridge,[permanent]\nvboxsf                 32768  2 \njoydev                 20480  0 \ncpufreq_conservative    16384  0 \ncpufreq_userspace      16384  0 \ncpufreq_powersave      16384  0 \nsquashfs               32768  0 \npcspkr                 16384  0 \nvideo                  32768  0 \nbacklight              16384  1 video\nac                     16384  0 \nmptsas                 49152  0 \nmptscsih               28672  1 mptsas\nmptbase                73728  2 mptsas,mptscsih\nscsi_transport_sas     28672  1 mptsas\nloop                   24576  0 \nintel_agp              16384  0 \nintel_gtt              20480  1 intel_agp\nagpgart                32768  2 intel_agp,intel_gtt\ni2c_piix4              16384  0 \nvboxguest             184320  2 vboxsf\ne1000                  94208  0 \n. 2nd result, docker run -it --rm alpine:3.8 lspci -k:\n00:00.0 Class 0600: 8086:1237\n00:03.0 Class 0200: 8086:100e e1000\n00:02.0 Class 0300: 80ee:beef\n00:05.0 Class 0401: 8086:2415\n00:08.0 Class 0200: 8086:100e e1000\n00:0d.0 Class 0106: 8086:2829 ahci\n00:01.0 Class 0601: 8086:7000\n00:04.0 Class 0880: 80ee:cafe vboxguest\n00:16.0 Class 0100: 1000:0054 mptsas\n00:07.0 Class 0680: 8086:7113 piix4_smbus\n```\nThank you! :-) :smiley:. @tianon Great, now i am able to see the SAS disk (i used --virtualbox-boot2docker-url with docker-machine and add the SAS disk afterwards in the oracle vm box). But when i starts the virtual machine a second time (even without adding a SAS controller), i am getting a warning:\n\nCan i ignore this?\n. > \n\nYeah, that's expected -- the VM is trying to be more aggressive about ensuring you have adequate entropy available. \n\n:+1:  :smile: (i dislike to have too less entropy, this can make a lot of trouble)\nBut I do not mean the havged. I mean the \n'aufs' is not a supported storage driver...\n\nThe disk is still working after a reboot?\n\nI think so, but i will again check it tomorrow and give you feedback.\n. ",
    "DanielRuf": "It seems the update of VirtualBox to the latest version solved it.. ",
    "unihon": "\nWhen we refactored how the ISO gets built to improve the long-term maintainability, preserving cosmetic details like this whale wasn't a high priority.\nI agree that the whale was cute, but I'm still inclined to not add the maintenance of bringing it back unless there's a good concrete problem not having it causes? (Besides nostalgia \ud83d\ude05)\n\nOh,This means that the \"whale\" has been removed in the new version. I have thought about it before, but I am not sure. (I think that the \"b2d\" without the \"whale\" is soulless.\ud83e\udd23)\nThank you\uff01\ud83d\ude04. > See https://github.com/docker/machine/blob/61ef47dc5d6b1658e3d6636f9382d50507c8c7e1/libmachine/mcnutils/b2d.go#L485-L542 for how docker-machine creates it. Essentially, it involves pre-populating a disk device with the magic string boot2docker expects followed by a tarball of data that gets extracted into the home directory of the primary boot2docker user.\nThank you very much \ud83d\ude00.. ",
    "Collisio-Adolebitque": "Added #4677 in the Docker / Machine project.. ",
    "Gr33nbl00d": "Absolutly ok with your proposal :) I can update it on monday. ",
    "maelp": "This fails when I run boot2docker up (says there is an error on the sed command, and does not add the line to /etc/hosts, probably because of permission)\n. ",
    "jetdillo": "errf..no. Fixed. \nBetter ?\n. ",
    "bjaglin": "I'd rather use debian:7.6, since debian:wheezy is also a rolling tag (that should not make breaking changes, granted, but still...)\n. ",
    "fdawg4l": "I'm assuming you mean http://ftp.debian.org.  Will do.\n. Awesome!  Thanks for the clarification.  Yes, it's actually much faster here too.\n. ",
    "greenimpala": "+1 for this PR. Causing pain for a few people at the moment. Slightly odd to put a comment though here as a step - how about:\nshell\necho 'EXTRA_ARGS=\"--insecure-registry <YOUR INSECURE HOST>\"' | sudo tee -a /var/lib/boot2docker/profile\n. Also, not sure you need to delete the old image, that trashes all your local images so its not ideal. Just appending to /var/lib/boot2docker/profile and restarting the daemon works for me.\n. ",
    "gcbartlett": "If you take out the CERTDIR default setting, what directory is used below for CACERT, SERVERCERT and SERVERKEY, if these are not all set in /var/lib/boot2docker/profile?\n. @onejli, yes I was thinking that /var/lib/boot2docker would be the appropriate default value.  (I was especially thinking of the case where boot2docker is deployed manually without docker-machine.)\n. "
}