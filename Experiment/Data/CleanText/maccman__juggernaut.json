{
    "mrbrdo": "The error seems to come from lib/juggernaut/publish.js line 10:\n  this.client.subscribeTo(\"juggernaut\", function(_, data) {\n    sys.log(\"Received: \" + data);\nChannel.publish(Message.fromJSON(data));\n});\nIf I comment this out, I don't get the error. Hope it helps.\n. You are correct, it works with this version. Thank you.\n. correction: it does work in IE8, but not in FF3 (latest) or Chrome (latest).\nIE8:\n19 Sep 22:21:52 - Initializing client with transport \"htmlfile\"\n19 Sep 22:21:52 - Client 3853234841953963 connected\nBut in the browser the connect event doesn't trigger and also the channel i subscribe to doesn't get any of the broadcasts... So even here it doesn't work...\n. maccman no it's not connecting, it only shows that it got the application.js... can you msg me on FreeNode (irc), nick mrbrdo\n. ok so I guess this will be fixed soon but for now the temp. fix is to put WebSocketMain.swf from juggernaut's public dir to the root of your site (like www.mysite.com/WebSocketMain.swf).\n. Is it possible to force flashsocket though?\nBtw when you say for flash it needs to open a restricted port, which port are you talking about? Is it outgoing or incoming?\n. I don't know about encryption in Javascript... But what you are suggesting indeed is something in need.\nI solved it in my project by using a random generated string in my Rails app. Then I output this string in a meta tag in the HTML so javascript generates the channel name (like /channelname/secret_string). It is not the best solution but is pretty ok security wise if the string length is appropriate. May affect network performance a bit though (more data to send with each message).\n. Yes I know it's not the proper way, just dirty fix. I hope in the future it will be possible in Juggernaut. Do you have any ideas how you would implement it in Juggernaut? Without encryption... The problem is usually you will have to connect the http web request (to rails app) with socket connection (session id). What do you think the best way would be to do that? IP is not good because a user can open more than 1 browser or have LAN computers... I think some kind of ID or token generated by Rails (like I wrote above anyway) should be a pretty ok solution. Then you can authenticate the user based on this ID. Of course this kind of way is still susceptible to sniffing attack, but I don't think that's important here.\n. ",
    "maccman": "Somebody else had the same problem. It's actually a UTF8 problem with Node. Using this branch of Node should fix it:\nhttp://github.com/ry/node/tree/v0.2\n. mferrier - this is an error with the latest node. I'm looking into it.\n. Yes, fixed. Follow the new Juggernaut readme.\n. Really? I'm afraid I can't reproduce it. You get no stack trace?\n. ah ok - you need to use the redis client I've fixed. Follow the Juggernaut readme.\n. Yes, that bit of the readme needs to be updated - the requirements are vendorized now.\n. Michael,\nYes, the Bayeux protocol was written before WebSockets, and is fairly complicated (due to complexities with comet). I haven't really looked at at Faye, but from the example docs it looks good. Also got a fairly simple interface to Juggernaut. I guess the difference is Faye probably has some more advanced features, such as authentication, and Juggernaut is much more simple. I wrote Juggernaut in a weekend, so there's not much code - should be pretty obvious how everything works. I guess, in terms of hackibility, Juggernaut should shine. Let me know how you find it.\nAlex\n. Hmm, this is an odd one. Can you try using both the Socket.IO master and the Socket.IO-node master. (Remember to run rake build). \n. Did you get any further with this?\n. Thanks!\n. No, for scaling reasons. However, there is an undocumented 'event' stream feature - Juggernaut publish subscribe/unsubscribe messages to redis which you can subscribe to. You can use that to create a realtime roster of online clients, which I do in Holla. http://cl.ly/2PNL\nTake a look at juggernaut.rb to see how to subscribe to the events.\n. Take a look at https://github.com/maccman/holla/blob/master/app/models/roster.rb\n. Odd, it's not using websockets with Chrome?\n. I've updated the README - the fix can't go in juggernaut.js unfortunately. \n. is the new websocket protocol that's at fault (776) - doing that won't help\n. Not sure if this one is still valid, anybody else seeing disconnections? \n. Fixed, thanks.\n. Fixed, thanks!\n. Thanks, fixed.\n. Thanks, fixed.\n. Nope, just subscribe the client to a channel like this:\n\"/clients/3j234l5kj3453lk5\"\nAnd publish to that channel. Take a look at the private chat example.\n. Yes, we had this feature in the previous Juggernut server (http auth callbacks) - I haven't included it yet in this one as we had performance issues - I aiming to keep Rails and the Node server totally asynchronous. At the moment I think you should just use security through obscurity - just have a unique random id as a channel name.  \nAlternatively - there are callbacks when clients connect/disconnect, and you can pass meta data with those callbacks. Using that, you can detect when somebody has attached to a channel they weren't meant to (hopefully a very rare event) and stop broadcasting to that channel. I know it's not ideal.\nI'll look into PlasticLizard's suggestion, a signed shared secret might be a good way to do it.\n. Although if you have two windows open, they'll have the same session, both\nbeen logged in, and the same channel token.\nI use a similar method, but with the users ID - this is a GUID so it isn't\nguessable.\nOn Tue, Apr 26, 2011 at 9:45 PM, fwoeck \nreply@reply.github.comwrote:\n\nAas the channel token is newly generated on every login, only the last\nopened window will get updates. We thought about this and decided that this\nis rather a feature than a flaw ;)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/14#comment_1062970\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Is redis running?\n. Follow the README instructions again - I've just updated them. \n. Mike, ping me when you're next available - we'll debug it over chat. \n. michelson , manavid, did you install node using brew?\n. Ok, can you swap out sys with util in your repo to see if it works. If they have the same interface, it should be fairly simple to work with both.\n. jntn, can you elaborate? What's the fix?\n. Ok, all fixed. I've patched redis-client and node-static. I've also vendored them in submodules - so you don't need npm.\nHave a look at the updated README.\n. Thanks, fix committed. \n. I think I've tackled this in the google group - it's a COR header issue. \nI've fixed it in my own version of Socket.IO-Node:\nnpm install http://cl.ly/2dgx/content\n. Ah ok. Maybe worth checking whether Opera has COR support?\n. Yes, just use the flash transport with Opera.\n. Done\n. Done, thanks.\n. It's compressed. If you put semicolons in the right place, it shouldn't cause browser errors.\nrun rake to re-compress. re-open this if you keep on getting errors.\n. Yes, you might want to look at juggernaut.js before raising a ticket ;)\nvar jug = new Juggernaut;\njug.on(\"connect\", function(){\n // connected callback\n});\n. Yes, guess it's a bug - you need to change the path to .vendor to be calculated from the juggernaut.js file.\n. Can we not just make readdirSync(\"./vendor\") absolute? \n. This is fixed in the latest release.\n. Interesting, can you try and pull from latest master and update the submodules to see if it's still happening?\n. Yes, looks like a socket.io issue - I'd raise a ticket with them. \nCheers! Alex\n. Have you checked out the submodules?\ngit clone git://github.com/maccman/juggernaut.git --recursive\n. Will do, I'll add this when I get some time.\n. I don't think .listen() takes a host?\nserver.js line 50\n. Once SSL is turned on, you'll only be able to curl/wget ssl resources. Are you requesting the SSL version of application.js?\nAlso, make sure SSL is turned on when you instantiate Juggernaut on the client side.\nnew Juggernaut({secure:true)};\n. Ok, I have a feeling that this is a node ssl issue. Have you open-ssl installed? Did you compile it yourself? When you run ./configure does it say SSL is enabled?\n. I've just updated socket.io - is this still an issue?\n. I'm fairly sure that socket.io doesn't fire a disconnect every time it polls, only when the poll timeouts.\nSure, PM me the issues.\nAlex\n. I'll look into this. \n. Fixed\n. Thanks!\n. Ask on the mailing list\n. Ah that's weird, I'm pretty sure wildcards used to work with subscribe, but from the docs it looks like you're correct. The reason for the wild card, rather than the explicit :subscribe or :unsubscribe, is custom events (see events.js). Maybe it would be better to just use psubscribe with the wildcard? \n. Are you sure this is an  issue? Just tried it and it works fine. What version of Redis and redis.rb are you using?\n. Ok, thanks for raising this - committed :)\n. Hey,\nThanks for raising this. I've fixed it by catching the whole thing. At the moment clients can't publish, only raise custom events.\nCheers,\nAlex\n. You tried running the server as root, like the prompt says: :)\n\n|               WARNING! DANGER!               |\n|                                              |\n| The flash websocket transport will not work  |\n| unless you run your node instance with root  |\n| privileges.                                  |\n|                                              |\n| A flash XML policy file has to be served on  |\n| port 843 (privileged) for it to work.        |\n|                                              |\n| You can run socket.io without this trasnport |\n| to make this message go (refer to README).   |\n|                                              |\n===============================================|\n. You using an old version of Redis.\nTry doing 'which redis' to make sure it's the right binary you're executing.\n. This is fixed in the latest version.\n. It's already there, just include json.js, socket_io.js and juggernaut.js instead of application.js\n. Just prevent them from accessing your Redis server - put it behind a firewall or something.\n. Great stuff, committed. \nThanks!\n. Cheers - all committed! \n. You need to update to the latest node.\n. This is fixed in the latest version.\n. Sounds like you've got something else running on that port\nps aux | grep 8080\nYou can change the port with the ENV variable 'port'.\n. It's in the Socket.io source - https://github.com/LearnBoost/Socket.IO/tree/master/lib/vendor/web-socket-js/flash-src\n. fwoeck: Does that mean I should update the socket.io submodule?\nhttps://github.com/maccman/Socket.IO-node\n. Updated socket.io - this issue should be fixed in the latest version of Juggernaut.\n. Excellent! I'm planning on making juggernaut into a npm module, so I'll merge this when that happens. \n. Cheers, all done!\n. That's to do with the node-static version. It has been fixed in the latest\nversion of Juggernaut.\nFollow the new installations instruction using npm.\nThanks,\nAlex\nOn Fri, Mar 25, 2011 at 5:46 PM, perfecto \nreply@reply.github.comwrote:\n\nI'm using Ubuntu 10.04 on my developer machine and Debian Lenny on server.\nI have node 0.4.3, npm, redis 2.2.2. And in both places I am encountering\nthis error.\nWhen i do\n\ngit clone https://github.com/maccman/juggernaut.git --recursive\ncd juggernaut\nnode server.js\n\nEverything works fine.\nBut, when I try to run juggernaut with RunIt as daemon\n   \"exec /usr/local/bin/node /opt/juggernaut/derver.js\"\njuggernaut is running and I get 404 errors\n   25 Mar 07:36:46 - socket.io ready - accepting connections\n\nError serving / - Not Found\nError serving /favicon.ico - Not Found\nError serving / - Not Found\nError serving /favicon.ico - Not Found\n\napplication.js is also unreachable\n\nError serving /application.js - Not Found\n\nAnd when I simply install juggernaut with npm, and run\n\njuggernaut\nError serving / - Not Found\nError serving /favicon.ico - Not Found\n\n..I also get this strange 404 errors.\nTried with latest node 0.5 pre -- and the same thing.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/51\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. If you submit the patch to node-static, and a new version is released, than\nit'll be automatically fixed with Juggernaut.\nOn Sun, Mar 27, 2011 at 6:47 PM, perfecto \nreply@reply.github.comwrote:\n\nYep! It works with christianhager's monkey patch. How to fix it in the\nrepository?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/51#comment_922013\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Should be fixed now - update via npm and give it another shot.\nCheers!\nAlex\nOn Wed, Mar 30, 2011 at 7:18 AM, prabgupt \nreply@reply.github.comwrote:\n\nok.. I got it working now without modifying any code, by just executing\n\"sudo juggernaut\" from inside\n/usr/local/lib/node/.npm/juggernaut/2.0.2/package/. I wonder why\nchristianhager's hack didn't work for it. Nevertheless, thanks for pointing\nus in the right direction :)\nAlex,\nNot sure if this is an issue with node-static or in juggernaut itself. In\nserver.js, a relative path is passed to node-static and I think that is why\neither running the command from inside juggernaut or passing an absolute\nlocation is solving this problem. Anyways it would be better to include this\nin ReadMe Doc meanwhile this issue gets fixed.\nThanks\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/51#comment_932278\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. This should have been resolved in the latest version of Juggernaut (note the\nnew install instructions found in the README).\nLet me know if this is still a problem.\nCheers,\nAlex\nOn Sat, Mar 26, 2011 at 7:42 PM, lolomarx \nreply@reply.github.comwrote:\n\nI try the juddernaut chat demo and it work fine on Firefox ,but not well on\nIE. The _iframe can't create and client can't show the message from the\nchannel.  Any suggestion ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/52\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. All publishing needs to go through the backend (Rails/Python/Node) - the\nmain reason for this is authentication. In other words you can't write over\nthe socket.io connection.\nOn Mon, Mar 28, 2011 at 10:00 AM, ljackson \nreply@reply.github.comwrote:\n\nI am looking at using juggernaut/socket.io for some eventing chat and\nother items, I must be missing it but why doesn't the juggernaut.js\njavascript client have a publish method. I see the write method but that\ndoesn't get a message to a redis channel via node.js.\nThanks,\nLeif\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/53\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Something like this:\nvar message     = new Juggernaut.Message;\nmessage.type    = \"event\";\nmessage.data    = \"some data\"\njug.write(message);\nOn 30 Mar 2011, at 14:07, ljackson wrote:\n\nFair enough, kinda worked through the use case were I wanted the publish from the client. I agree it makes sense to not write. What about the mention of custom events in another post, how do you cause custom events from the client without an action in you MVC framework?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/53#comment_934172\n. Nope, custom event goes to subscribers. Clients can't publish, only subscribe for security reasons.\n. They're custom 'server events' - they fire events server side. \n. Ah yes, how embarrassing. All fixed now - update npm. \n\nCheers,\nAlex\n. Messages aren't persisted in the first place - it's pubsub, Juggernaut\ndoesn't keep any messages. Socket.io may keep some in memory, but it should\nclear those up (and timeout clients).\nCheers,\nAlex\nOn Fri, Apr 1, 2011 at 1:02 AM, mix-mix \nreply@reply.github.comwrote:\n\nIf there's no people having been subscribed to a channel for much time,\nthere might collect a lot of garbage (the server might think there're some\nclients online because of connection loss). So it may be a good idea to add\nan ability to delete old messages from channels (e.g. after 30 minutes they\nhaven't been sent). Aren't I right?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/55\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Are you using an up to date version of Redis?\n. Which Redis version?\n. Yup... not quite an up to date version ;)\nInstall http://redis.io/ at least 2.2.1\nOn Fri, Apr 8, 2011 at 11:31 PM, vwilliam \nreply@reply.github.comwrote:\n\n1.3.15\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/56#comment_973288\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Fixed, cheers\n. Thanks for your work, but the reason I haven't added this in the past is due to authorization - as it stands with your patch, any client can publish to any channel. This is a bit of a security flaw, and the reason all published messages currently go through a server. \n. Sorry, this isn't something I'm planning on committing yet until we have a good and simple auth solution. \n. See server-events in the README\n. Great stuff. Did you delete your Juggernaut repo? I can just apply the patch manually if needed.\n. No worries, I'll commit it directly and reference you in the commit msg. \n. Cheers!\n. It's in the API, check out juggernaut.js:\nJuggernaut.fn.unsubscribe = function(channel) {\n  if ( !channel ) throw \"Must provide a channel\";\nvar message     = new Juggernaut.Message;\n  message.type    = \"unsubscribe\";\n  message.channel = channel;\nthis.write(message);\n};\nOn Thu, Apr 28, 2011 at 2:07 PM, exploid \nreply@reply.github.comwrote:\n\nI searched around a bit but couldn't find anything. Is there a way to\nunsubscribe from the client side (javascript)?\nvar jug = new Juggernaut;\n   jug.subscribe( \"channel\", callback);\n// I tried this:\n   jug = undefined;\n   jug = new Juggernaut;\n   jug.subscribe( \"newchannel\", callback);\n   // but I'm still receiving events for both subscriptions\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/62\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. I think it might have something to do with serving up the flash policy file.\nI've updated juggernaut with the latest socket.io - can you pull from git\nand see if your problem's been resolved.\nThanks,\nAlex\nOn Fri, Apr 29, 2011 at 5:39 AM, goncalossilva \nreply@reply.github.comwrote:\n\nHello,\nTested on:\nFirefox 3.6 (Windows)\nEpiphany (Ubuntu)\nFirefox 4.0 (Ubuntu)\nFirefox 3.6 (Mac)\nAll these browsers are supposed to use \"flashsocket\". They did, the first\ntime I've opened the page but soon all started to fall back to\n\"xhr-multipart\". Sometimes I'm able to get them using \"flashsocket\" again\n(clearing cookies, rebooting services and browsers, etc), but it's never\npermanent... they'll just fall back to \"xhr-multipart\" again.\nI thought this problem was application-specific so I've built a minimal\nscaffold for testing and the behavior is the same. I can also reproduce this\nwith juggernaut's example page (though it works more consistently).\nMight this be a bug with Socket.IO? I've tried debugging this but I'm not\nreally sure what's going on.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/63\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Ah nicholas, interesting - I'll look into that.\n. hmm, I'm hoping the upgrade to the latest Socket.IO will solve these issues.\nOn Tue, Jun 28, 2011 at 2:33 PM, inspire22 \nreply@reply.github.comwrote:\n\nAlso if I comment out all but websocket + flashsocket, it frequently cant'\nconnect at all.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/63#issuecomment-1458804\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Hmm, this isn't the expected behavior - I thought the redis node lib would\nautomatically reconnect (i.e. retry) it. I'll look into it.\nCheers,\nAlex\nOn Sat, Apr 30, 2011 at 7:17 AM, fuzzmonkey \nreply@reply.github.comwrote:\n\nHey,\nI've been playing around with juggernaut over the last few days. One thing\ni've noticed is that it doesn't seem to gracefully handle redis connection\nproblems. For example:\nRedis dies\nRuby client publishes some updates\nJuggernaut logs connection errors\nRedis is started again\nRuby client publishes more messages but juggernaut doesn't pick them up\nI'm not sure if that happens when the redis connection times out too.\nJuggernaut doesn't seem to 'resubscribe' when the connection dies, if i fire\nup a redis-cli and publish manually i get a 0 response, meaning nothing is\nsubscribed (as far as i'm aware)?\nAny ideas?\nGeorge\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/64\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. I'm not quite sure what the solution to this is - ideally the redis lib should retry connections after a timeout - which is what I think the library is meant to do, so I'm not to sure why it isn't working in this case. \n. Hi lexer, this should probably be asked on the mailing list rather than opening an issue. \nAs to your question, no, Juggernaut won't work behind nginx. You need a tcp load balancer for Juggernaut. \n. For Holla, I'm not using a TCP load balancer - there's only one Juggernaut\ninstance. If I was to use one though, I'd probably use Amazon ELB.\nCheers,\nAlex\nOn Thu, May 5, 2011 at 12:07 AM, lexer \nreply@reply.github.comwrote:\n\nOk. I haven't found link to google group that is why put my question here.\nBy the way. You can create question label and use issues for questions too.\nLook at underscore git: https://github.com/documentcloud/underscore/issues\nWhat tcp load balancer you are using with holla?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/65#comment_1104832\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Yes, make sure npms 'bin' folder is in the path. \n. @philrosentein - how did you solve it?\n. Fixed, thanks\n. I've committed this, but in a different way. There's still an issue with 'connect' callbacks though I think. \n. Are you using npm?\nOn Mon, May 9, 2011 at 8:54 AM, aribeiro \nreply@reply.github.comwrote:\n\nwhen I install juggernaut from bundle I have no juggernaut executable, and\ncan't start the server\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/69\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. It looks like npm's bin isn't in your path:\nhttp://shapeshed.com/journal/setting-up-nodejs-and-npm-on-mac-osx/\nOn Mon, May 9, 2011 at 9:49 AM, aribeiro \nreply@reply.github.comwrote:\n\nyes, I followed the steps on README:\nbrew install node\n(already have redis)\nnpm install juggernaut\nand\ngem install juggernaut\nAfter that I try to start with \"juggernaut\" but looks like the executable\nis not there.\nThanks\nThere is other way to start the server?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/69#comment_1125785\n\n\nAlex MacCaw\n(415) 513-0975\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. I'm wondering if this is to do with additional COR requests that Firefox makes when accessing cross domain endpoints?\nFirefox should be using FlashSockets before using xhr-multipart, I'll look into why that's not working.\n. You shouldn't be using the cdn version of socket.io, or actually requiring the socket.io lib directly. This is because you're using the wrong version of socketio.js for the client. \nRequire application.js, rather than juggernaut.js, the correct version of socket.io is bundled.\ni.e. change:\n<script src=\"/static/js/lib/juggernaut.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\nto :\n<script src=\"/static/js/lib/juggernaut_application.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\nand remove:\n<script src=\"http://cdn.socket.io/stable/socket.io.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n. Can you elaborate? Sorry, not sure I get it yet. \n. No option at the moment, but pull requests are welcome :)\n. Thanks, committed! I didn't merge this, as there was another change I wanted to make. \n. Try doing npm install juggernaut -g\n. I've never had an issue  - so I'm trying to work out why this is happening.\nIf you uninstall the package, and then install it again with the -g flag,\ndoes it work?\nWhat OS are you on?\nOn Sat, Jul 2, 2011 at 4:58 PM, mdarby \nreply@reply.github.comwrote:\n\nThe readme should be updated with this info. It tripped me up for 10\nminutes too.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/74#issuecomment-1490840\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Ah ok, I've updated it. \n. Thanks, that's a much better implementation. \n. Hi RKelln,\nAtm, to use SSL and Juggernaut, you need to clone the repo locally, create a\nfolder called keys, and create some keys there as specified in the readme.\nI realize, this isn't optimal, and we plan to allow users to specify a keys\nfolder via the command line soon.\nThanks,\nAlex\nOn Wed, Jun 22, 2011 at 2:47 PM, RKelln \nreply@reply.github.comwrote:\n\nI'm having trouble getting lib/juggernaut/server.js to find our SSL\ncertificates. The code in question:\nhttps://github.com/maccman/juggernaut/blob/master/lib/juggernaut/server.js#L11\njavascript\nif (path.existsSync(\"keys/privatekey.pem\")) {\n var privateKey = fs.readFileSync(\"keys/privatekey.pem\", \"utf8\");\n var certificate = fs.readFileSync(\"keys/certificate.pem\", \"utf8\");\n credentials = {key: privateKey, cert: certificate};\n}\nI've tried juggernaut/lib/juggernaut/keys and juggernaut/keys but neither\nworks. Using absolute paths does work:\njavascript\nvar keysPath = __dirname + \"/keys\";\nif (path.existsSync(keysPath+\"/privatekey.pem\") &&\npath.existsSync(keysPath+\"/certificate.pem\")) {\n var privateKey = fs.readFileSync(keysPath+\"/privatekey.pem\", \"utf8\");\n var certificate = fs.readFileSync(keysPath+\"/certificate.pem\", \"utf8\");\n credentials = {key: privateKey, cert: certificate};\n}\nAre SSL certs being loaded for anyone? What am I doing wrong?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/79\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Looking into the security pull request - probably do a release after that's merged.\n. It's simple, do something like this:\n```\nvar redis   = require(\"redis\");\nvar client = redis.createClient();\nclient.on(\"message\", function(channel, msg){\n  msg = JSON.stringify(msg);\n});\nclient.psubscribe(\"juggernaut:*\");\n```\n. You need to use psubscribe - the subscription events are send to\njuggernaut:subscribe and unsubscription to juggernaut:unsubscribe.\nOn Thu, Jun 23, 2011 at 8:32 AM, JeremyRylan \nreply@reply.github.comwrote:\n\nThanks for the reply, Alex -- I actually had tried very similar code before\nposting this issue. Would the code you posted need to be on the same Node.js\ninstance or could it be two difference instances of Node.js utilizing the\nsame Redis instance?\nI tried putting your sample into a separate instance and I do not get\nnotified when a client connects or disconnects. Though I have successfully\nused the following code on a separate instance to notify each time a message\nwas published:\n```\nvar client = redis.createClient();\nvar client2 = redis.createClient();\nclient.on(\"message\", function (channel, message) {\n   console.log(channel + \": \" + message);\n});\nclient.on(\"ready\", function () {\n   client.subscribe(\"juggernaut\");\n});\nsetInterval(function(){\n       client2.publish(\"juggernaut\", JSON.stringify(msg));\n}, 5000);\n```\nDo the client connect/disconnect events get published to redis?\nI was thinking perhaps my best bet is to use my own custom version of\njuggernaut/lib/juggernaut/server.js and listen to the socket.io connection\nevents and work from there. Is that correct, or am I still missing\nsomething?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/80#issuecomment-1425628\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Ah, from the node-redis docs, the pmessage callback gets three parameters:\n\"pmessage\" (pattern, channel, message)\nOn Thu, Jun 23, 2011 at 10:32 AM, JeremyRylan \nreply@reply.github.comwrote:\n\nThanks again, Alex! Using this code I can at least see when someone\nsubscribed/unsubscribed, but I have no idea who it is or what channel they\nsubscribed/unsubscribed from.\n```\nvar client = redis.createClient();\nclient.on(\"message\", function(channel, msg){\n       console.log(channel + ': ' + msg);\n});\nclient.psubscribe(\"juggernaut:*\");\nclient.on('pmessage', function(channel, msg){\n       console.log('PMESSAGE:' + channel);\n       console.log(msg);\n});\n```\nLooking in the console log I get:\nPMESSAGE:juggernaut:*\njuggernaut:subscribe\nHow do I detect the data associated with that request? Can I get the\nchannel and client meta out of it?\nAlso, unrelated -- but is there a way to donate to support the efforts of\nthis project? After spending 3 days pulling teeth trying to get XMPP to do\nwhat I needed it to do, I'll gladly chip in part of the profit from my\napplications deployed using Juggernaut to ensure it keeps going.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/80#issuecomment-1426507\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Ah no worries about donations - I do OS for the love of it. Best donations\nare pull requests :)\nOn Thu, Jun 23, 2011 at 12:07 PM, JeremyRylan \nreply@reply.github.comwrote:\n\nI just saw that at the exact moment that you replied. It's working\nbrilliantly now, thank you so much, Alex. Any word on donations? I'd really\nlike to support this project.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/80#issuecomment-1427183\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Yes, we're planning on updating within the next 2 weeks. Pull requests are always welcome. \n. Yes, I believe you can pass a list of transports you want to use to\nSocket.IO.\nOn Thu, Jun 23, 2011 at 11:50 AM, inspire22 \nreply@reply.github.comwrote:\n\nany way to disable jsonp-polling in the meanwhile?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/81#issuecomment-1427061\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Maybe the solution is to solve the memory leaks? Any idea where\nthey're occurring?\nOn Thu, Jun 23, 2011 at 11:52 AM, inspire22 \nreply@reply.github.comwrote:\n\nI'm wanting to monitor juggernatu and restart it fairly frequently because\nof the memory leaks (~60MB after 5 hours, ~100MB after 12 hours).  I haven't\nyet tried the latest git version to see if it's better... I'd still like to\nbe able to monitor the pid though.\nIs there any way to have it write a pid file for it's demonized process\nsaved somewhere?  I poked around in the source but aren't familiar with\nnode.js enough to know where it would go.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/82\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. I'd use upstart -\nhttp://kevin.vanzonneveld.net/techblog/article/run_nodejs_as_a_service_on_ubuntu_karmic/\nOn Tue, Jun 28, 2011 at 8:47 PM, inspire22 \nreply@reply.github.comwrote:\n\nI've been using  nohup node juggernaut/server.js &  but that kinda sucks.\nAlso --silent isn't being silent...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/83\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Your using the npm or Github version? If not the latter - can you try it. It\nhas SocketIO 0.7 support.\nThanks,\nAlex\nOn Mon, Jul 11, 2011 at 6:08 PM, inspire22 \nreply@reply.github.comwrote:\n\nI see this in the logs:\nI'm on a local network with ip-address while testing this.\nIt takes forever to connect.  Chrome/Firefox work fine - just IE8 is having\nthis problem.\n11 Jul 16:02:56 - Initializing client with transport \"jsonp-polling\"\n11 Jul 16:02:56 - Client 395031118998304 connected\n11 Jul 16:02:56 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:56 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:56 - Initializing client with transport \"xhr-polling\"\n11 Jul 16:02:56 - Client 8955525632482022 connected\n11 Jul 16:02:56 - Received:\n{\"type\":\"subscribe\",\"channel\":\"allpoetry_reads\"}\n11 Jul 16:02:56 - Client subscribing to: allpoetry_reads\n11 Jul 16:02:56 - Received:\n{\"type\":\"subscribe\",\"channel\":\"166a9c1adac3dc8f51d8ce3d22a5d7a6\"}\n11 Jul 16:02:56 - Client subscribing to: 166a9c1adac3dc8f51d8ce3d22a5d7a6\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:04 - Client 7418751909863204 disconnected\n11 Jul 16:03:16 - Client 5521897536236793 disconnected\n11 Jul 16:03:46 - Initializing client with transport \"jsonp-polling\"\n11 Jul 16:03:46 - Client 3793639016803354 connected\n11 Jul 16:03:46 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:46 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/86\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Npm dependencies?\ngit clone git://github.com/maccman/juggernaut.git\ncd juggernaut\nnpm install .\nOn Mon, Jul 11, 2011 at 6:38 PM, inspire22 \nreply@reply.github.comwrote:\n\nHow do I install the npm submodules again?\nCiao,\nKevin Watt\nOn Jul 11, 2011, at 4:12 PM, maccman wrote:\n\nYour using the npm or Github version? If not the latter - can you try it.\nIt\nhas SocketIO 0.7 support.\nThanks,\nAlex\nOn Mon, Jul 11, 2011 at 6:08 PM, inspire22 \nreply@reply.github.comwrote:\n\nI see this in the logs:\nI'm on a local network with ip-address while testing this.\nIt takes forever to connect.  Chrome/Firefox work fine - just IE8 is\nhaving\nthis problem.\n11 Jul 16:02:56 - Initializing client with transport \"jsonp-polling\"\n11 Jul 16:02:56 - Client 395031118998304 connected\n11 Jul 16:02:56 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:56 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:56 - Initializing client with transport \"xhr-polling\"\n11 Jul 16:02:56 - Client 8955525632482022 connected\n11 Jul 16:02:56 - Received:\n{\"type\":\"subscribe\",\"channel\":\"allpoetry_reads\"}\n11 Jul 16:02:56 - Client subscribing to: allpoetry_reads\n11 Jul 16:02:56 - Received:\n{\"type\":\"subscribe\",\"channel\":\"166a9c1adac3dc8f51d8ce3d22a5d7a6\"}\n11 Jul 16:02:56 - Client subscribing to:\n166a9c1adac3dc8f51d8ce3d22a5d7a6\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:04 - Client 7418751909863204 disconnected\n11 Jul 16:03:16 - Client 5521897536236793 disconnected\n11 Jul 16:03:46 - Initializing client with transport \"jsonp-polling\"\n11 Jul 16:03:46 - Client 3793639016803354 connected\n11 Jul 16:03:46 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:46 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/86\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com |\nhttp://socialmod.com\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/86#issuecomment-1550831\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/86#issuecomment-1550952\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Don't set WEB_SOCKET_SWF_LOCATION - you don't need to anymore.\nYup, --silent needs to be implemented.\nYes, jug.state isn't needed either - event handlers should do all you need.\nOn Mon, Jul 11, 2011 at 7:03 PM, inspire22 \nreply@reply.github.comwrote:\n\nSeems to be working really well.\nI've still never seen firefox or IE connect with flash sockets, but\nxhr-polling seems to be working fine for them.  I'm setting\nwindow.WEB_SOCKET_SWF_LOCATION = \"/images/WebSocketMain.swf\" in my document\nhead before I load juggernaut's application.js.\n--silent still doesn't disable log output\nThanks!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/86#issuecomment-1551031\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Which browser are you using?\nAlso, can you try and download/install juggernaut from GitHub - I've upgraded it to Socket IO 0.7\n. Heroku doesn't have support for websockets - although it should be falling\nback cleanly.\nIn any case, you can fix the issue by explicitly specifying transports:\n<script type=\"text/javascript\">\n                   var jug = new Juggernaut({\n                                   secure: false,\n                                   host: 'myapp.herokuapp.com',\n                                   port: 80,\n                                   transports: ['xhr-polling',\n'jsonp-polling']\n                       });\nOn Tue, Jul 12, 2011 at 10:17 AM, seanrucker \nreply@reply.github.comwrote:\n\nTried, Safari and Chrome browsers. Same error.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/87#issuecomment-1554993\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Trouble is, we're having loads of issues with the lastest version of\nsocket.io - perhaps you can help test it?\nOn Wed, Aug 3, 2011 at 11:09 AM, goncalossilva \nreply@reply.github.comwrote:\n\nHello,\nAfter having juggernaut running for 10 days straight, I've noticed I have\nhundreds of established connections.... but I'm sure there aren't hundreds\nof users with their browsers opened on my website :)\nPlease publish the latest version to npm (assuming the most recent version\nof socket.io fixes this error).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/89\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. https://groups.google.com/forum/#!topic/juggernaut-for-rails/gcgar7kOhO0\nOn Wed, Aug 3, 2011 at 11:30 AM, goncalossilva \nreply@reply.github.comwrote:\n\nYes, of course!\nWhat kind of issues?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/89#issuecomment-1719412\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n. Awesome stuff - committed! \n. Thanks!\n. Yes, I'm trying to keep things simple and I personally think including some sort of token in the channel name is enough. \n. You need to upgrade Redis.\n. Upgrade to Redis 3.3.12.\n. Yes, sorry, that's the one I mean - that'll work. Anything newer than 1.2.0 ;)\n. What issue is that?\n. Been trying to update it, but am having trouble running master - can you guys test master.\n. npm install .\n. Ok, seems to be working fine now. Not sure what the issue was before. Thanks guys! Released.\n. Can you try with master?\n. Pull master from github, then run: npm install -g .\n. That is because you're not writing valid JavaScript. The subscription variable needs to be assigned before you use it, or you need to use a named function.\n. Better place to ask this would be on the mailing list. Anyway, the simple answer is just to put the user's id in the channel name, and have two channels for the two users.\n. Yes, this is an issue with the latest node. I'm onto it. \n. Yes, I'm in the middle of replacing node-static with express or strata. node-static has stopped working with the latest version of Node.\n. Yes, planning to move to Strata or Express - just haven't had the time yet. Would be awesome if someone could help with this.\n. Pull requests always welcome.\n. Juggernaut is deprecated. Use Server Sent events [1]. If you want a high\nabstraction I've written a Sinatra pubsub extension. [2]\n[1] - http://blog.alexmaccaw.com/killing-a-library\n[2] - https://github.com/maccman/sinatra-pubsub\nOn Sun, Jul 21, 2013 at 1:46 PM, Josh notifications@github.com wrote:\n\nsame here\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/maccman/juggernaut/issues/135#issuecomment-21316731\n.\n. \n",
    "datapimp": "It works for me as well.\nBut now I'm running into another error with redis-client:\nTypeError: Cannot read property 'length' of undefined\n/usr/local/lib/node/.npm/redis-client/0.3.5/package/lib/redis-client.js:394\n    var callback = originalCommand[originalCommand.length - 1];\n. ",
    "mferrier": "+1 to \"cannot read property length of undefined\" issue\n. cool, thanks for the quick feedback. \n. thanks for the fix. works great for me.\nfor anyone who checked this out before the requirements were vendorized, you try blowing away your juggernaut repo and reclone with --recursive\n. ",
    "welaika": "are there any news on the \"cannot read property length of undefined\" thing?\n. ",
    "PanosJee": "I am using Redis 2.0.2, latest juggernaut and Node 0.2.4 but still have this error.\n. Hi Alex, that s quick response!\nThe full stack trace is:\n29 Oct 16:29:48 - socket.io ready - accepting connections\n/Users/panosjee/.node_libraries/.npm/redis-client/0.3.5/package/lib/redis-client.js:394\n    var callback = originalCommand[originalCommand.length - 1];\n                                                  ^\nTypeError: Cannot read property 'length' of undefined\n    at Client.onReply_ (/Users/panosjee/.node_libraries/.npm/redis-client/0.3.5/package/lib/redis-client.js:394:51)\n    at /Users/panosjee/.node_libraries/.npm/redis-client/0.3.5/package/lib/redis-client.js:136:34\n    at ReplyParser.feed (/Users/panosjee/.node_libraries/.npm/redis-client/0.3.5/package/lib/redis-client.js:169:21)\n    at Stream. (/Users/panosjee/.node_libraries/.npm/redis-client/0.3.5/package/lib/redis-client.js:337:28)\n    at Stream.emit (events:27:15)\n    at IOWatcher.callback (net:489:16)\n    at node.js:772:9\nBtw the redis-clients is the one of technoweenie\nThanx a lot!\n. Thanx awesome, it works like a charm! I think the Readme does not include your fork of redis client. You only refer to:\nnode.js requirements:\n- socket.io\n- node-static\n- redis-client\n. http://github.com/maccman/redis-node-client\n. That was my fault, i was running unstable\n. @perfecto Did you have any success with that?\n. I confirm this one\n. No clear. There is a new example index.html give it a look it seems application.js is deprecated.\n. https://github.com/maccman/juggernaut/blob/master/public/index.html\n. Use latest juggernaut and do not include application.js as in the past. You should include seperately socket.io and juggernaut.js\nI do:\n        \n",
    "licx": "How can I get the updated version of the redis client? I have node 0.2.4 (juggernaut doesn't seem to work with node 3 unstable) and redis server 2.0.3. I still get this error:\nTypeError: Cannot read property 'length' of undefined\n. ",
    "leepa": "I have tried the maccman/redis-node-client and I just get hangs instead of the error.\n. ",
    "wm": "I noticed that this only happens when I do not run node as root. So the Flash socket fails over and it relies on xhr. \nThis may be a Socket.IO-client issue and not a Jugg issue.\n. Hi,\nSorry for the delay. I just tried it with the latest version of Socket.IO-node and I no longer get the error.\nThanks\n. ",
    "Kaseano": "I can't seem to figure this 1 out, I was wondering if you had an example of how to subscribe to juggernaut's published messages to redis?\n. ",
    "santoshw": "Hey I have same problem. how to solve this problem?\n. ",
    "rauchg": "Plus, flashsocket can't do proxy traversal at all in the client, unless the proxy user/pass is passed directly to its constructor.\n. Please upgrade to 0.8. Should upgrade cleanly without issues.\n. ",
    "PlasticLizard": "This appears to be exactly how PusherApp works, so I bet it's possible and reliable and I agree, this would be a very nice feature, secure, private messaging is a must for a wide variety of apps.\n. What pusher does is pretty much what you suggest - the JS library makes an AJAX call to your server via some well known URL. Your server uses session info to authenticate you like it would authenticate you for any other request, except that it also has the channel name and the socket_id passed in as params. Then it uses your API key as a shared secret and signs some kind of token, which the JS library simply relays to the websocket server. The websocket server can decrypt the signed token and knows who you are. I think this works pretty well.\nhttp://pusherapp.com/docs/private_channels\n. ",
    "Sephi-Chan": "This solution is more obfuscation than security but i think i'll use it for my needs : it's really simple and I don't need to be really confident, it's just a webgame. :)\n. I can patch to use this behavior, @duncanbeevers. It's a good idea : subscribe only if it's a new callback.\nI would be glad to have @maccman's opinion on this.\n. Thanks, it is good! :)\n. ",
    "crispinheneise": "What about using Rails' authenticity token? \n. I had all of the problems listed above. Make sure you: \n- run node-v.2.x - v3.x may not work\n- clone juggernaut with recursive. If you don't, it probably won't work. \n. ",
    "aaronshaf": "Some sort of ability to use tokens for authentication (without the need for using Ruby) would be great. Even crucial. Obscurity isn't a good solution when you don't want a logged-out user still able to subscribe to a channel he or she has the random channel name from a previous session.\n. ",
    "bemurphy": "If callbacks are not performant, what about middle ground?   Say, a randomized signature token (using HMAC, or SHA1 with shared secret)  good for 60 seconds, set in an X-Header, that's used in the subscribe chain.  If the token passes, proceed with the subscription, otherwise, don't add the subscription.\nedit: ahem, sorry, I just ready the code and realized it's just a socket by that point so the x-header would be out.  But a shared secret could still work.  I might implement it on my own and let you know of my experience.  Thanks.\n. @ryanb Funny you should ask, I shoehorned it in to a local juggernaut over the weekend and got it working, then read your project readme a little later.  Yeah, pretty much what you've got with data-signature is what I was thinking.\n. My node-fu is pretty weak, but I took a rough stab at this by adding subscription tokens.  My commit is at https://github.com/bemurphy/juggernaut/commit/f4838d91f3075c60de7b05543d369db3b5782879 so you can see if I'm on a worthwhile track.\nThe client passes a token that is sha1(sharedSecret:channelName:timestamp) to the server.  The server verifies the signature is proper and recent enough, as well as tracks used signatures in redis for a short time to prevent reuse.  Also, I'll probably want to go back and fix up the client subscription to allow for subscriptions sans tokens.\nPersonally I'd prefer a token approach over unique channel names per user.  Thinking about a group chatroom where everybody is on a different channel name seems unintuitive to me.\nEDIT:  just dawned on me btw, that limiting a signature to a single use could be dangerous.  I have a hunch it would break reconnects, gotta go sift through that code...\n. @goncalossilva Quick dirty fix on that:  find your juggernaut directory, and chmod 000 public/index.html\n. ",
    "ryanb": "@bemurphy, is my new private_pub project along the lines of what you were thinking?\nCurrently this only works with Faye, but I've been considering making a Juggernaut adapter. Check out this example project to see it in action.\n. Why not factor the current time into the private token which will make each one unique? It will then not be dependent upon the user's current session and allows multiple browser windows open. It also allows you to auto-expire it after a certain amount of time. This is what I do in the private_pub library (it looks like links with underscores currently aren't working here so you'll have to fix the URL).\n. @fwoeck, correct, each subscribe call passes in a signature which is unique to that specific request/channel. This needs to be authorized on the server side, but is done through a Faye extension so it all happens behind the scenes and the Rails app isn't involved.\nI see now both approaches have their pros and cons. The user token is simpler up front but leaves the app to manage the which users should receive which messages. The unique signature approach requires an extra check up-front, but the app then doesn't need to be concerned about authorizing which messages go to which user.\nAlso good point about banning clients. If a user logs-out it's still possible to listen to messages if they have the signature and it hasn't yet expired.\n. ",
    "jagthedrummer": "Just curious if there's been any progress on creating true private channels in Juggernaut.  I'm about to have to start looking into getting something to work and I don't want to reinvent the wheel if someone has already made some progress down this path.  I'd rather help contribute to a solution that will be good for everyone.\nThanks,\nJeremy\n. ",
    "fwoeck": "As an aside: were using jugg2 in our new project in connection with a rails3 instance. Every user gets a private \"channel-token\" for every session that is governed by the rails-server. This is the channel the user subscribes to and it is not distributed to others. In combination with SSL, we regard this as secure enough. All client-side initiated communication goes via ajax directly to the server, and pushes from the server to the client go through jugg2.\n--Frank\n. Hi snleson,\n\ndo you never have two users listening to the same channel then?\nyup, every user get his own \"private\" channel that is created new on each session start. This is a kind of abuse of the pubsub system, but it works.\npublishing to multiple channels ala Juggernaut.publish(['user-token1','user-token2'] \nexactly - performance wise, this isn't even a problem when you push to a thousand channels at once\n\n--Frank\n. Aas the channel token is newly generated on every login, only the last opened window will get updates. We thought about this and decided that this is rather a feature than a flaw ;) \n. Yes, it depends on the actual application I think. We produce a collaboration tool, were group members see other members as avatars and these users are hold in the browser as backbonejs object including their backend ids. So this information is not private anymore and not usable as token in our case.\nThe other problem with multiple open windows is, that you have to synchronize user triggered actions to every active window of a user, which takes probably more effort than just reacting on a user interaction locally and propagating screen updates to the related users.\n. @ryanb when I get it right, the private token in private_pub requires to be checked by the server - like e.g. the csrf-token in a rails form, right? The method of user-exclusive pubsub-channels is attractive, because it doesn't require adittional checks. If you avoid the channels beeing sniffed by others (ssl) it require only to stop sending on that channel if a server wants a specific client to be banned. The client would have to re-authorize via standard login to get a new channel token.\n. @pselden4 afaik it's not possible to enforce a disconnection from within ruby - you would have to stop sending to that channel.\n. ctrl-z suspends a job and puts it to background. it is actually still there but doesn't get any cpu cycles. you can reactivate by saying \"fg\".\n. please use the latest Socket.IO-node version from https://github.com/LearnBoost/Socket.IO-node . That fixed it for me\n. @maccman - yes, I didn't test it thoroughly, but it works in my envirmonment with jugg2ernaut.\n. cool, thank you!\n. +1 an upgrade would be great!\n. Hi, can you try starting the juggernaut server with\nenv NODE_ENV=production /path/to/juggernaut\nI added a config snippet to the server in this pull request that enables FlashSockets in prod-mode.\nCan you retry Chrome dev with it?\n--Frank\n. The new 0.8.2 version solves an issue with Firefox 6.\nWebsockets didn't work anymore because Mozilla renamed the interface from WebSocket to MozWebSocket.\n--Frank\n. @0.8.2: the client for 0.8.2 actually doesn't work with ff6, see https://github.com/LearnBoost/socket.io-client/issues/287\nBut this can easily fixed by replacing line 2249 in socket_io.js by\nreturn window.MozWebSocket || window.WebSocket;\n--Frank\n. another patch is necessary - see https://github.com/LearnBoost/socket.io-client/issues/287\n. @iros: I'll update my fork frequently because we use juggernaut2 in our project. There's only two things I changed really:\ni) the dependency node-static-maccman was replaced by node-static to make it updatable. I think, the reason for Alex to modify the original module in the first place was to be able to deliver the FlashSocket swf file separately, which is obsolete in the latest socket.io-version.\nii) I added a small production environment configuration to silence the logs and make FlashSockets work, see my comment from august 17.\n--Frank\n. ",
    "snelson": "Frank, do you never have two users listening to the same channel then? I suppose it depends on your needs, but what do you need to broadcast to multiple users? Are you just doing multiple Juggernaut.publish for each user in rails?\n. Didn't consider publishing to multiple channels ala Juggernaut.publish(['user-token1','user-token2'] ... is that what you're doing Frank?\n. I like it ... what happens when they have multiple sessions (like two browsers open)?\n. ",
    "pselden": "I need to add some validation on the Rails side when a user subscribes to a channel, and disconnect the user from the channel if the auth fails. Is this possible with the juggernaut gem? Looking through the examples/code, I see that you can check when the user subscribes/unsubscribes, but can you actually do anything with it other than track it?\n. ",
    "josem": "Hello, \nfirst time I write here :), I'm working with juggernaut and I have the same question about security, how we can control the people who subscribe to the channels.\nI've read/seen 3 ways: \n-   Obscurity. The name of the channel is the combination of timestamp, secret pass and the public name of the user. The problem with this is anyone could subscribe if he knows the name and we can't control if someone has logged out (well, we can, but we can't kick him out). The good thing about this: it's really easy to implement.\n-   Multiple channels. One per user, I see this a little counterintuitive, but maybe is the only choice without forking juggernaut.\n-    Signatures.  When someone subscribes to a channel we check that a signature is right, if not we should be able to kick him out, but again, that's not possible afaik (like @fwoeck said). In Faye, for instance, what @ryanb did (thanks Ryan for your great screencasts) is to extend the behaviour of Faye, so when someone subscribes the method checks that, but I don't see how we can do that with Juggernaut.\nTo sum up, I've already implemented the first way but I don't see how I can do it better and make the channels truly private, has someone figured out a better way?\nThanks in advance.\n. ",
    "FewKinG": "I ran into the same issue but didn't want to switch to faye and private_pub, because I already had all the juggernaut stuff up and running nicely. Therefore I made a bunch of changes to the juggernaut code to allow for an easy authentication mechanism and some additional new features. If you are interested, check out this commit:\nhttps://github.com/FewKinG/juggernaut/commit/f6efd8fa0b0e1bcdceebf6537750f05b6225f9ce\nand read the corresponding readme chapter (at the very bottom):\nhttps://github.com/FewKinG/juggernaut/blob/master/README.md\n. ",
    "michelson": "yes there is a redis daemon running\nthanks\n. i reinstalled all again , in a new machine, now i get this error: http://pastie.org/1194676\nshould i install socket.io with sudo ? in the documentation it recomend to not use sudo \nregards\n. Hi Macman, \ni installed node from source and i have the node v0.3.0-pre version\nthanks\n. c0d3x42, you are right , works with 0.2.2 , thanks\n. Hi, i installed the Redis 2.0.3 and now it works\ncase closed\n. ",
    "manavid": "I'm having the same problem, I'm using git version of juggernut with redis-2.0.2.\nRedis is running. \n. Hi,\nI did run \"npm install http://cl.ly/2dgx/content\", still getting:\nnode.js:50\n    throw e;\n    ^\nTypeError: Object\n. I macman,\nI installed the node on my os x from source. I also did a separate installation on a linux box and having same problem.\nThanks\n. ",
    "mperham": "Alex, I'm seeing the same error.\n```\n(M=c1a184) ~/git/juggernaut> node server.js \nnode.js:63\n    throw e;\n    ^\nError: Cannot find module 'redis-client'\n```\n. ",
    "c0d3x42": "Hi there,\nI've been struggling with this error all morning too. i was using node-0.2.3, downgrading to 0.2.2 seems to work:\nroot@rails:/home/vince/juggernaut# node server.js\n10 Oct 13:03:47 - socket.io ready - accepting connections\n10 Oct 13:04:24 - Received: {\"channels\":[\"channel1\"],\"data\":\"Yo yo yo\"}\n10 Oct 13:04:24 - Publishing to channels: channel1 : Yo yo yo\n. ",
    "romanenko": "MacBook-Pro-Michael-Romanenko:juggernaut michaelromanenko$ node server.js\nThe 'sys' module is now called 'util'. It should have a similar interface.\nnode.js:50\n    throw e; // process.nextTick error, or 'error' event on first tick\n    ^\nError: Cannot find module 'utils'\n    at loadModule (node.js:229:13)\n    at require (node.js:262:14)\n    at Object. (/Users/michaelromanenko/code/juggernaut/lib/juggernaut/channel.js:2:13)\n    at Module._compile (node.js:316:23)\n    at Object..js (node.js:324:12)\n    at Module.load (node.js:250:25)\n    at loadModule (node.js:237:12)\n    at require (node.js:262:14)\n    at Object. (/Users/michaelromanenko/code/juggernaut/lib/juggernaut/publish.js:4:15)\n    at Module._compile (node.js:316:23)\nOn my OSX, nodejs 0.3.0pre, followed your instructions in README\n. I tried to change the paths, but dependencies in \"vendor\" folder also uses wrong paths.\n. Yes, I installed juggernaut using rpm.\njuggernaut 2.0.2\nAnd still the same problem. Even tried to reinstall now.\n. Yep! It works with christianhager's monkey patch. How to fix it in the repository?\n. It works! Thank you!\n. ",
    "jntn": "I got the same error as perfecto. But it got nothing to do with sys changing name to util, it's the utils package in channel.js that is the culprit.\n. ",
    "muthiafi": "i still got the same problem\nnode.js:50\n    throw e; // process.nextTick error, or 'error' event on first tick\n    ^\nTypeError: Object\nand i follow the latest installation readme.\nstill no solution?\n. ",
    "variousred": "Following the latest instructions, I'm getting the error\nCannot find module 'redis-client'\nwhen running node server.js\ni tried node-0.2.4, as well as node-0.2.2\n. ",
    "yuvadm": "Same here.\nI'm getting Error: Cannot find module 'redis-client'\non a clean Ubuntu 10.10 image with node v0.2.5\n. ",
    "gipnokote": "Followed readme instructuions on Ubuntu 10.10, node v. 0.3.1:\n```\nroot@ubuntu:~/rails/juggernaut# node server.js \nnode.js:58\nthrow e; // process.nextTick error, or 'error' event on first tick\n^\nError: Cannot find module 'utils'\nat resolveModuleFilename (node.js:251:13)\nat loadModule (node.js:213:20)\nat require (node.js:277:14)\nat Object. (/home/andy/rails/juggernaut/lib/juggernaut/channel.js:2:13)\nat Module._compile (node.js:332:30)\nat Object..js (node.js:340:12)\nat Module.load (node.js:265:25)\nat loadModule (node.js:237:12)\nat require (node.js:277:14)\nat Object. (/home/andy/rails/juggernaut/lib/juggernaut/publish.js:4:15)\n```\ncommented out the second line in channel.js - no more errors:\nroot@ubuntu:~/rails/juggernaut# node server.js \n2 Dec 01:15:58 - socket.io ready - accepting connections\nwonder if 'utils' is really needed..\n. ",
    "babake2000": "Hey Alex, it still doesn't work for me on opera. Earlier today, I removed Socket.IO-Node install that I had, did the npm install http://cl.ly/2dgx/content and tried on opera, but it still came up with the error (IE and Chrome fine, just Opera). If I go to the sample on 8080, it's fine in all browsers, but with my web server on port 3000, it still came back with the error above. \n. I found this in a forum about CORS support:\nComment by oyvindkinsey \u2014 May 26, 2010 \nRight,\nThose browsers are IE8+, FF3.5+, Saf4, and Chrome. No Opera yet.\nSo, does this place a limitation on how much support one can provide for using the Juggernaut 2 with rails, or do you know any alternative approach that could avoid the CORS situation.\n. ",
    "ghost": "Its not working for me.. please update read me file ith proper use case.\n. Have the same error!\n. closed\n. ",
    "STRd6": "Have you tried adding this line to your Gemfile:\ngem 'juggernaut', :git => \"git://github.com/maccman/juggernaut.git\"\n. ",
    "somebee": "Will this be fixed? Running into the same problems.\n. ",
    "shuhei": "Hi, I ran into the same problem with the following article and found a solution.\nhttp://kevin.vanzonneveld.net/techblog/article/run_nodejs_as_a_service_on_ubuntu_karmic\nIn the upstart configuration file, I put 'chdir /path/to/juggernaut' instead of 'export HOME=\"/root\"' and it worked. Also, I'm using root instead of www-data. It seems that the relative paths are not correctly resolved when running as a daemon.\n. flashsocket seems not to work without this patch.\n. ",
    "ecoment": "I found an another solution: \n1. open the file JUGGERNAUT_INSTALL_DIRECTORY/index.js\n2. create a new variable path = \"your-path-to-juggernaut\"\n3. Replace the index.js with the following:\npath = \"your-path-to-juggernaut\"\nrequire(\"fs\").readdirSync(path + \"vendor\").forEach(function(name){\n  require.paths.unshift(path + \"vendor/\" + name + \"/lib\");..\n});                                                                                                                                                 \nrequire.paths.unshift(path + \"lib\");\nmodule.exports = require(path + \"lib/juggernaut\");  \nWorks fine for me. My startup-command is a debian init script. \nMartin\n. Hm,\nI don't think so. I tried it before, but got always the same error as described in the first post. Since I replaced all with an absolute path everything worked fine.\n. Ok, here is another problem and my solution: node-static has a problem with absolute paths. So you have to use the node-static fork of mlangenberg: https://github.com/mlangenberg/node-static\nHe has fixed the problem with absolute paths. After you installed node-static of mlangenberg open the files in the juggernaut directory \"server.js\" and \"index.js\" and set the absolute path where you have installed juggernaut.\nAfter that open the file \"JUGGERNAUT_DIR/lib/juggernaut/server.js\" and find the line\nvar fileServer = new nstatic.Server(\"./public\").\nReplace the line with the following:\nvar fileServer = new nstatic.Server(\"absolute_path_to_public_dir\").\nSave all files and you can run juggernaut outside of the juggernaut directory. I did this for our community and used a debian init script to start/stop the chat server. Works fine for me.\nRegards\nMartin\n. ",
    "gorman": "I should mention that I'm running Ubuntu 10.04 and ulimit appears to be set to \"unlimited\" (some of my Googling returned suggestions of increasing the ulimit, but I don't think I need to?)\n. Oops, I thought I had the latest deployed on the server -- evidently not :)\nHowever, once I upgraded to the latest, I got this as soon as I tried to publish to Juggernaut:\nbuffer:67\n      return this.utf8Write(string, offset);\n                  ^\nTypeError: Argument must be a string\n    at Buffer.write (buffer:67:19)\n    at [object Object]. (vendor/node-static/lib/node-static.js:239:24)\n    at [object Object].emit (events:27:15)\n    at [object Object]._emitData (fs:735:10)\n    at afterRead (fs:717:10)\n    at node.js:757:9\nI was able to get this working by changing:\nbuffer.write(chunk, offset, 0);\nto:\nchunk.copy (buffer, offset, 0);\nI did this in vendor/node-static/lib/node-static.js. I copied that line from an old version of node-static.js and now everything is working fine. I'm not sure why I had to make that hack and I know it's not ideal, so I'm open to suggestions on that. I haven't had it running for long enough to see if the original problem is fixed though, but hopefully it is :) I'll report back.\nThanks for your help, I really appreciate all of the effort you put into Juggernaut and the community!\n. Evidently node.js just needed to be updated too. Oops :) All is well.\n. Thanks for the quick reply! I am trying to wget the SSL version of application.js. I have also set secure:true, but I think things are failing before it even gets that far (since application.js won't load). It's really strange. As soon as I remove the keys directory (and it stops trying to use SSL), everything works fine again.\n. Weird, I just reinstalled OpenSSL and regenerated the keys. Now all is well. Sorry for the continued false alarms :)\n. Hrm, looks like this may not be fixed. The behavior seems fairly random. I've tested this on a variety of computers and sometimes it works right away. Other times, I have to reload a bunch of times -- eventually the JS file loads and gets cached. After that, it works fine.\nI found this node-static ticket: https://github.com/cloudhead/node-static/issues/#issue/14\nThat describes the problem exactly, but it doesn't look like there are any solutions yet. I've also tried this running locally on my machine (OS X) using the SSL instructions word-for-word on the Juggernaut README and encountered the same issue. The inconsistency of this is baffling :)\n. Has anyone had any luck figuring this out?\n. ",
    "brendon": "Thanks Alex :) After thinking about it a bit more yesterday I decided to do just that :) Hopefully it gains some traction because I have no idea where to start with a bug like that :D\n. I was a bit reluctant at first, but the switch to Faye really was quite easy. The Railscast of Faye is still quite current, and the hardest part was writing a utility method that posted messages to the Faye server from (in my case) a Rails controller. It'd be wise to implement the incoming message security mentioned in the Railscast also.\n. ",
    "xoa-zorn": "server.listen(port, [hostname], [callback])\nSee http://nodejs.org/docs/v0.4.8/api/http.html#server.listen\n. ",
    "jmonster": "How do you \"request the SSL version of application.js\" ?\nI'm in the same position (almost a year later) with an error on: GET http://localhost:8080/application.js\nEverything works fine when SSL isn't enabled.\nFWIW, I'm messing with Holla...\n. ",
    "mvilrokx": "I have this exact same problem, but I don't have to restart the server, it is the \"default\" behavior in FF 3.6 for me.  It works fine in Chrome and IE9 (I can't get it to connect at all in IE8 but I will look into that later).  It seems to be part of the fallback mechanism, if it can't establish a WebSocket connection, it falls back to flash sockets, then to XHR long pollingetc.  In your example, it looks as if first time around it uses the flash fallback, and it behaves ok.  When you restart, it skips straight to XHR, this seems to be similar as what is happening to me in FF 3.6 (it should use flash but it falls back even further too XHR, maybe I didn't setup flash correctly although I did follow the instructions in the readme).\nI am wondering if this connect-disconnect is the default behavior for XMLHttpRequest long polling, i.e. it actually IS connecting, then disconnecting, then connecting again etc. and you should really be displaying these messages every time you connect/disconnect.  Maybe the author can weigh in (cause I sure am no expert)?\nWhen you send a message from the server, does it ever arrive at your client that is in this connect/disconnect loop?  (in other words, is it actually still working and if you refrain from displaying the the connect/disconnect message, it behaves totally fine)?\n. Well, that fixed it for me, thanks!\nCan't test IE8 right now, will try that later.\nAlso, I didn't open the issue so can't close it :-)\nOne more thing, were my comments correct about XHR polling?  (that it is normally to see it \"connecting\" and \"disconnecting\" cause that is what it is indeed doing)\nCan I also PM you some installation issues I had that you might want to add to the README.\nCheers!\n. ok, I actually got it to work by shutting down my Apache server, so something is trying to attach itself to port 80 when I do node server.js, which obviously my Apache server is already occupying.  So how do I run my Apache server (which I need to serve my website) and Juggernaut to run together on my server?\n. I dropped apache all together and went with nginx + passenger, problem solved.  Not sure why, but it'll do\n. never mind ... was an issue on EC2 in my Security Group (I opened Port 8080 but only for my IP address) DOH!\n. ",
    "jgradim": "I've got the same problem on the latest version of the juggernaut server (2.0.4) :(\nUsing chrome w/ websockets\n. ",
    "hariis": "Thanks for the reply, I have requested to join the mailing list but haven't gotten the approval. It's been almost 24 hrs. \n. ",
    "mikedemers": "Ah, good point.  It looks like the custom events are all contained under the \"juggernaut:custom\" key so you could just add that to the subscribe call alongside \"juggernaut:subscribe\" and \"juggernaut:unsubscribe\".\nThe pattern-based calls will also work but they do have a different callback signature.  I believe they use 3 params rather than 2 (they include the pattern that matched first followed by the same 2 other params).\nThanks!\n. I just tried to subscribe with both the original and the modified versions and I can confirm that I'm definitely seeing the issue here.\nI'm using very recent builds of redis and redis-rb:\n```\n$ redis-server --version\nRedis server version 2.0.4\n$ gem list | grep redis\nredis (2.1.1)\n$ ruby -v\nruby 1.8.7 (2009-06-12 patchlevel 174) [universal-darwin10.0]\n$ uname -v\nDarwin Kernel Version 10.5.0: Fri Nov  5 23:20:39 PDT 2010; root:xnu-1504.9.17~1/RELEASE_I386\n```\n. ",
    "patricklucas": "Pwaha - I read that in the beginning but tuned it out since it didn't apply to me at the time... Please ignore the intrusion. :p\n. ",
    "mvaled": "Yep. The redis version on the Ubuntu repo is certainly old. I compiled it, and now I can publish with the juggernaut gem.\nThanks.\n. ",
    "wtm": "I'm seeing it in IE7 as well.\n. I am experiencing this in secure mode too.\nPanosJee: what new example of index.html are you referring to?\n. I've found when using SSL, Firefox uses XHR instead of Flashsocket. It's not technically cross-domain (it is cross-subdomain though, but I don't think that should matter). As soon as I turn off SSL, it begins using Flashsocket properly. I am requiring juggernaut_application.js as you suggest.\n. ",
    "michaelhood": "I'm seeing this, also.\nAre those of you experiencing this running juggernaut in secure (https) mode? I am, and I'm seeing some other issues, too. Just trying to narrow down.\n. thanks for the quick reply. yeah, I switched over.. still happening on occasion along with some other issues I'm noticing. I'm kind of at a loss on how to proceed.\nThere's at least 4 versions of WebSocketMain.swf floating around, too, between varying socket.io / socket.io-node / juggernaut commits, and it seems that at some point the AS<->JS interface within the SWF changed. So if you're experiencing this make sure you're careful not to mix these up. (most people are probably using the files as bundled, but since node-static doesn't work properly with https some of us are forced into hosting the files otherwise)\n. ",
    "jsierles": "Having a similar issue here. Juggernaut connects to localhost, even with a REDISTOGO_URL set. I'm actually using this just to connect to somewhere other than localhost.\n. ",
    "erichurst": "+1\nFailing to connect properly with RedisToGo on Heroku.\n. ",
    "mbyczkowski": "Initially, I had the same problem with redis running on a separate server. It occurred that my upstart script was broken. It works fine for me now with Jugerrnaut 2.1.0. \nMaybe, it would be better to a add a '--redis' option to juggernaut rather than to rely on env variables?\n. It looks like Opera doesn't allow for JSONP polling and/or xhr-polling (http://caniuse.com/cors).\nAlso, Opera ( < 12) doesn't have websockets enabled by default, which means that the only way you could support Opera is through flashsockets.\n. You said that you have upgraded your redis server, but the output says you are running Redis 1.2.0.\nJuggernaut uses Redis for communicating using SUBSCRIBE command, which is available since Redis 1.3.8. Make sure that you are using your new version of Redis.\n. @maccman I thought the latest stable Redis was 2.4.4?\n. ",
    "dooto": "I've got the same problem but the solution (the update of node) didnt't work for me. I tried it on Mac OSX and Ubuntu 10.10 => same Error\nAny other solutions?\n. ",
    "agustinvinao": "Hi, i have OSX 10.6.4, NodeJS 0.4.3, npm 0.2.13-3 and the same error.\n~/builds/node-v0.4.3% node -v\nv0.4.3\n~/builds/node-v0.4.3% ./configure --prefix=$HOME/local/node\nChecking for program g++ or c++          : /usr/bin/g++ \nChecking for program cpp                 : /usr/bin/cpp \nChecking for program ar                  : /usr/bin/ar \nChecking for program ranlib              : /usr/bin/ranlib \nChecking for g++                         : ok\nChecking for program gcc or cc           : /usr/bin/gcc \nChecking for gcc                         : ok\nChecking for library dl                  : yes \nChecking for openssl                     : yes \nChecking for library util                : yes \nChecking for library rt                  : not found \n--- libeio ---\nChecking for library pthread             : yes \nChecking for function pthread_create     : yes \nChecking for function pthread_atfork     : yes \nChecking for futimes(2)                  : yes \nChecking for readahead(2)                : no \nChecking for fdatasync(2)                : yes \nChecking for pread(2) and pwrite(2)      : yes \nChecking for sendfile(2)                 : yes \nChecking for sync_file_range(2)          : no \n--- libev ---\nChecking for header sys/inotify.h        : not found \nChecking for header sys/epoll.h          : not found \nChecking for header port.h               : not found \nChecking for header poll.h               : yes \nChecking for function poll               : yes \nChecking for header sys/event.h          : yes \nChecking for header sys/queue.h          : yes \nChecking for function kqueue             : yes \nChecking for header sys/select.h         : yes \nChecking for function select             : yes \nChecking for header sys/eventfd.h        : not found \nChecking for SYS_clock_gettime           : no \nChecking for library rt                  : not found \nChecking for function nanosleep          : yes \nChecking for function ceil               : yes \nChecking for fdatasync(2) with c++       : no \n'configure' finished successfully (6.842s)\n. my mistake, had updated the version but the executable is kept the previous version. It works OK.\n. ",
    "czihong": "Same Eroor on REHL4, but it works on ubuntu10.10.\n. ",
    "felix123": "Thanks.when i running this ps aux there is no process displaying.which version is working for node ,redis and juggernaut?\n. while i am installing  node-v0.2.5 the following three things are not found\nChecking for header port.h               : not found \nChecking for header sys/event.h          : not found\nChecking for function kqueue             : not found \n. ",
    "iRonin": "Thank you!\n. ",
    "saimonmoore": "ok I'm going to try that and let you know...\n. Yes that solved it. @maccman I've forked juggernaut (to add our own authentication layer on top) and replaced your socket-io fork with learnboost's and it's now working like a charm.\n. Thanks a lot...\nOn Thu, Mar 24, 2011 at 7:01 AM, fwoeck\nreply@reply.github.com\nwrote:\n\ncool, thank you!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/49#comment_911191\n\n\nSaimon Moore\nWeb Developer @ Teambox.com\n(http://teambox.com)\nSkype: saimonmoore\nYahoo IM: saimonmoore\nGoogle IM: saimonmoore\n. ",
    "christianhager": "I hacked this by giving node-static the absolute path to the public folder in server.js\nvar fileServer = new nstatic.Server(\"/usr/local/lib/node/.npm/juggernaut/2.0.2/package/public\");\n. ",
    "prabgupt": "I too am facing the same issue after installing latest juggernaut using npm. I also tried christianhager's hack but unfortunately it's not working for me. I'm getting following error after applying the hack and accessing localhost:8080. Even node server gets crashed afterwards:\n\nError serving /application.js - undefined\n\nhttp.js:832\n  var statusLine = 'HTTP/1.1 ' + statusCode.toString() + ' ' +\n                                            ^\nTypeError: Cannot call method 'toString' of null\n    at ServerResponse.writeHead (http.js:832:45)\n    at /usr/local/lib/node/.npm/juggernaut/2.0.2/package/lib/juggernaut/server.js:29:22\n    at [object Object].finish (/usr/local/lib/node/.npm/node-static/0.5.3/package/lib/node-static.js:103:13)\n    at /usr/local/lib/node/.npm/node-static/0.5.3/package/lib/node-static.js:165:14\n    at /usr/local/lib/node/.npm/node-static/0.5.3/package/lib/node-static.js:215:33\n    at [object Object]. (/usr/local/lib/node/.npm/node-static/0.5.3/package/lib/node-static.js:245:17)\n    at [object Object].emit (events.js:64:17)\n    at fs.js:809:12\n. ok.. I got it working now without modifying any code, by just executing \"sudo juggernaut\" from inside /usr/local/lib/node/.npm/juggernaut/2.0.2/package/. I wonder why christianhager's hack didn't work for it. Nevertheless, thanks for pointing us in the right direction :)\nAlex,\nNot sure if this is an issue with node-static or in juggernaut itself. In server.js, a relative path is passed to node-static and I think that is why either running the command from inside juggernaut or passing an absolute location is solving this problem. Anyways it would be better to include this in ReadMe Doc meanwhile this issue gets fixed.\nThanks\n. ",
    "ljackson": "Fair enough, kinda worked through the use case were I wanted the publish from the client. I agree it makes sense to not write. What about the mention of custom events in another post, how do you cause custom events from the client without an action in you MVC framework?\n. ",
    "baxang": "Does the custom event suppose to be published to subscribers? I tried it to notify some datas but didn't work. I can see a log message below but the server doesn't publish it.\n10 Nov 15:07:25 - Received: {\"type\":\"event\",\"data\":\"some data\"}\n. Thanks for the answer. Then what is the purpose of the custom event? I looked into the source code for an hour but no luck.\n. ",
    "woto": "Hi, sorry for bad English. It was to hard to find this, also tried\n  #Juggernaut.publish(random, '123')\n  #jug.publish(random, '123')\niI think this technic must be in README.\n. ",
    "Knack": "Version 2.0.3 is packaged with a custom version of node-static, called \"node-static-maccman\". \nhttps://github.com/maccman/juggernaut/commit/49bba93926f3f9a005a923c86d924d3d28732c7b\nSo, I think that the only change that's missing is the one indicated in my previous comment. It's clearly a bug, that is hidden if you already have installed node-static\n. ",
    "williamvivier": "yes\n. 1.3.15\n. ",
    "grsahil20": "I am having same issue, my version is 2.2.12\n. ",
    "kamal": "That's true. Would implementing BOSH solve the security issue? The @superfeedr guys have been hard at work extracting BOSH from strophe.js, IIRC.\nBTW, this patch also bypasses Redis, so non-Socket.io clients like the Juggernaut Ruby client will not get pushed data pushed by front-end clients.\n. ",
    "siong1987": "Argh. I just deleted it. I was wondering why there is a fork under my name. Now, I know why it is called \"Edit and Fork\".\n. cool. : )\n. ",
    "vroy": "Awesome! Wasn't really sure where to look (was only looking at the issues and documentation). Thanks!\n. ",
    "goncalossilva": "Hello,\nUnfortunately the issue is still present. I've tried following the code and everything seems fine: it selects the \"flashsocket\" transport and tries to connect. The problem is that it times out and moves to xhr-multipart (https://github.com/maccman/juggernaut/blob/master/public/socket_io.js#L852). Juggernaut is running as root and the policy file is available on port 843.\nI'm not really sure of what to do next... :|\n. I guess it's npm's fault. The latest version (1.X) doesn't install the executable, where 0.3.X did.\n. I installed with \"-g\" and it ended up in my /usr/local/bin/ folder.\n. Yes, of course!\nWhat kind of issues?\n. +1 on @duncanbeevers's comment that this should be the default behavior. If @maccman wants to keep the current subscription model, +1 on this PR.\n. ",
    "nicholas": "I too ran into this issue with Firefox 3.6. I recalled fighting this battle before about a month ago and ended up figuring out that my WebSocketMain.swf wasn't in sync with the one Juggernaut provided -- updated that file and everything worked swimmingly. \nWhen I saw this issue creep up again today, I was a bit confused; WebSocketMain.swf was matching up with what juggernaut had in the vaults. On a hunch, I checked out socket.io's swf file to verify that they were the same. They were not. I copied in the latest from socket.io and still had the same issue (d77379ced07157771fd4e3ed290572ff3184b7cf). On another hunch, I decided to revert one version prior (d0189b0dc0e23b5fff98664066119cab1cd99bc3). It now appears to be functioning properly.\nI'm not sure why the swf file was different to begin with, so I won't call this a \"fix\" of any sort, but I thought I'd share it in case it sheds any light on why things were broken.\n*Note: The hashes in this post auto-link to Juggernaut, but were intended for Socket.io\nhttps://github.com/LearnBoost/Socket.IO/commits/master/lib/vendor/web-socket-js/WebSocketMain.swf\n. ",
    "inspire22": "I've been struggling with this too.  It'll use websockets every once and awhile, but then degrade and not try again for awhile.  Super mysterious.\nI disabled remember_transport and it tries it again more often, but still frequently degrades to json_p, when I'm only using browsers either websocket or flash socket capable.\n. Also if I comment out all but websocket + flashsocket, it frequently cant' connect at all.\n. After working on this for awhile, I decided I wasn't a huge fan of the io-socket library.  I've since switched to Faye, which has been working really well.\n. Awesome project.  It's working quite well so far on my site with about 700 connections at a time, constantly connecting/disconnecting ( as a chatterbox / live notifier ) on every page.\nCode could use a few more comments :P  Elegant though :)  Trying to figure out how to control when polling is used vs. websockets, etc, as it seems to switch between them often. Even on a single browser that stays open for a few hours.  Pretty seamless.\n--silent doesn't work\nDo I need to do any maintenance on the redis server?  Will it fill up with history, or does it delete after publishing?\n. Hah!  I was just going to report this too.  Definitely a bug.\n. any way to disable jsonp-polling in the meanwhile?\n. I tried updating to the latest version, but they're still there.  I'm not fam. with node.js's garbage collection enough to try to track it down, but it seems roughly linear with the # messages sent, so perhaps it's not cleaning them for some reason.\n. Yeah i was just realizing my npm upgrade hadn't gotten the latest, as the included socketio is behind still.  I'll give it a shot in a minute.\n. How do I install the npm submodules again?\nCiao,\nKevin Watt\nOn Jul 11, 2011, at 4:12 PM, maccman wrote:\n\nYour using the npm or Github version? If not the latter - can you try it. It\nhas SocketIO 0.7 support.\nThanks,\nAlex\nOn Mon, Jul 11, 2011 at 6:08 PM, inspire22 \nreply@reply.github.comwrote:\n\nI see this in the logs:\nI'm on a local network with ip-address while testing this.\nIt takes forever to connect.  Chrome/Firefox work fine - just IE8 is having\nthis problem.\n11 Jul 16:02:56 - Initializing client with transport \"jsonp-polling\"\n11 Jul 16:02:56 - Client 395031118998304 connected\n11 Jul 16:02:56 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:56 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:56 - Initializing client with transport \"xhr-polling\"\n11 Jul 16:02:56 - Client 8955525632482022 connected\n11 Jul 16:02:56 - Received:\n{\"type\":\"subscribe\",\"channel\":\"allpoetry_reads\"}\n11 Jul 16:02:56 - Client subscribing to: allpoetry_reads\n11 Jul 16:02:56 - Received:\n{\"type\":\"subscribe\",\"channel\":\"166a9c1adac3dc8f51d8ce3d22a5d7a6\"}\n11 Jul 16:02:56 - Client subscribing to: 166a9c1adac3dc8f51d8ce3d22a5d7a6\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:02:57 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:04 - Client 7418751909863204 disconnected\n11 Jul 16:03:16 - Client 5521897536236793 disconnected\n11 Jul 16:03:46 - Initializing client with transport \"jsonp-polling\"\n11 Jul 16:03:46 - Client 3793639016803354 connected\n11 Jul 16:03:46 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:46 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n11 Jul 16:03:49 - Couldnt find client with session id \"6642279957886785\"\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/86\n\n\nAlex MacCaw\n+12147175129\n@maccman\nhttp://alexmaccaw.co.uk | http://www.leadthinking.com | http://socialmod.com\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/86#issuecomment-1550831\n. Seems to be working really well.  \n\nI've still never seen firefox or IE connect with flash sockets, but xhr-polling seems to be working fine for them.  I'm setting window.WEB_SOCKET_SWF_LOCATION = \"/images/WebSocketMain.swf\" in my document head before I load juggernaut's application.js.\n--silent still doesn't disable log output\nThanks!\n. also jug.state doesn't seem to be set anymore, but I can approximate it I think with jug.io.socket.connected & connecting\n. It was working great with websocket @ chrome, but sometimes that falls through still (websocket sucks?)  Then I get these errors:\nIt seems to send 'Welcome to socket.io.' @ each connection - seems like a waste of bandwidth, and gives this error:\nResource interpreted as Script but transferred with MIME type text/plain.\n0:1Uncaught SyntaxError: Unexpected identifier\nThen it fails & doesn't try anything else (like jsonP polling).  Looks like jug.socket.options has \"reconnect: false\" - maybe thats why it doesn't try the next transport method?\nI've also gotten this a few times @ chrome\nXMLHttpRequest cannot load http://site.com:8080/socket.io/xhr-polling//1310517530166. Origin http://site.com is not allowed by Access-Control-Allow-Origin.\nXHR-polling is working fine on firefox despite the port difference\n. ",
    "dshorthouse": "I had exactly the same problem...couldn't get flashsocket to work. The suggestion here to make sure the front-end uses a WebSocketMain.swf FROM the socket.io-client (am using npm) was a critical piece of information. Apparently, not all WebSocketMain.swf are alike.\n. ",
    "dmitry": "Still not work. Tried to set corrent link to the WebSocketMain.swf, and nothing happens. Still uses xhr-multipart.\n. Good idea. :+1:\n. @thoughtpunch sorry, I'm not using this project too. I suggest you to use different redis databases for splitting on a kind of namespaces.\n. ",
    "jblackman": "Same applies if you start Juggernaut without redis, then start redis\n. The redis client emits \"connect\" when it connects. Would wrapping the this.client.subscribe() call in publish.js be along the right lines? It works on my test instance, admittedly without much testing.\nvar me = this;\n  this.client.on( \"connect\", function() {\n    me.client.subscribe(\"juggernaut\");\n  });\nNot sure if the me.client.subscribe will leak memory - can't imagine much.\n. ",
    "lexer": "Ok. I haven't found link to google group that is why put my question here.\nBy the way. You can create question label and use issues for questions too. Look at underscore git: https://github.com/documentcloud/underscore/issues\nWhat tcp load balancer you are using with holla?\n. Currently Im trying to add support for it in my https://github.com/lexer/node-pubsub experiment. \n. ",
    "philrosenstein": "Same here after installing on OSX.. might want to add this step to instructions?\n. @maccman I created a symbolic link so it would be found in my path:  ln -s /path/to/node_modules/juggernaut/server.js /usr/bin/juggernaut\n. ",
    "aribeiro": "yes, I followed the steps on README:\nbrew install node\n(already have redis)\nnpm install juggernaut\nand\ngem install juggernaut\nAfter that I try to start with \"juggernaut\" but looks like the executable is not there.\nThere is other way to start the server?\nThanks\n. ",
    "ianmurrays": "I ended up running it using node server.js from the source.\n. ",
    "mdarby": "The readme should be updated with this info. It tripped me up for 10 minutes too.\n. Oh yeah, the issue is simply that the readme doesn't explicitly show the -g flag. Us Node newbies might not know that we need to pass that flag in order to install the package globally.\n. OSX 10.6.8 if you'd still like to know, btw :)\n. ",
    "RKelln": "Thanks Alex, but our keys are working, but only when I specify the directory using absolute paths. \nI installed using the regular npm method, but globally using sudo npm install juggernaut -g, such that the server.js file containing the certificate reading code is in: /usr/local/lib/node_modules/juggernaut/lib/juggernaut/ As you can see there are two juggernaut directories that the readme instructions could refer to - is it the base juggernaut directory or the one under lib? \nIn any case neither locations work for us unless I specify paths absolutely, which I find very strange.\n. Patched submitted and merged (thanks Alex for the 1 hour turn around time :D )\nhttps://github.com/maccman/juggernaut/pull/99\nAny ideas when this might be packaged up (hopefully with socket.io 0.8.5?)\n. ",
    "mattchan": "I was running into this problem too, but I couldn't figure it out. It was never consistent for me why SSL would sometimes work and sometimes not. Once I saw this issue, I realized that running the juggernaut server from its installation directory would work, but trying to call it from elsewhere wouldn't.\n. ",
    "alexandre-mbm": "diff\nvar keysPath = __dirname + \"/keys\";\n-if (path.existsSync(keysPath+\"/privatekey.pem\") && path.existsSync(keysPath+\"/certificate.pem\")) {\n+if (fs.existsSync(keysPath+\"/privatekey.pem\") && fs.existsSync(keysPath+\"/certificate.pem\")) {\n  var privateKey = fs.readFileSync(keysPath+\"/privatekey.pem\", \"utf8\");\n  var certificate = fs.readFileSync(keysPath+\"/certificate.pem\", \"utf8\");\n  credentials = {key: privateKey, cert: certificate};\n}\nThese and other things that needed for it work today on Heroku I will put in pull request.\n\nRefs.:\n1. Check synchronously if file/directory exists in Node.js - Stack Overflow\n2. Node.js v0.8.5 Manual & Documentation\n3. Node.js v0.12.0 Manual & Documentation\n. :+1: I was seeing exactly this here...\n. See at npmjs.com: \"0.5.3 is the latest release\".\n. I found that I needed specify an old version for the node. And that I must use engines instead engine.\n. ",
    "jayrylan": "Thanks for the reply, Alex -- I actually had tried very similar code before posting this issue. Would the code you posted need to be on the same Node.js instance or could it be two difference instances of Node.js utilizing the same Redis instance? \nI tried putting your sample into a separate instance and I do not get notified when a client connects or disconnects. Though I have successfully used the following code on a separate instance to notify each time a message was published:\n```\nvar client = redis.createClient();\nvar client2 = redis.createClient();\nclient.on(\"message\", function (channel, message) {\n    console.log(channel + \": \" + message);\n});\nclient.on(\"ready\", function () {\n    client.subscribe(\"juggernaut\");\n});\nsetInterval(function(){\n    client2.publish(\"juggernaut\", JSON.stringify(msg));\n}, 5000);\n```\nDo the client connect/disconnect events get published to redis?\nI was thinking perhaps my best bet is to use my own custom version of juggernaut/lib/juggernaut/server.js and listen to the socket.io connection events and work from there. Is that correct, or am I still missing something?\n. Thanks again, Alex! Using this code I can at least see when someone subscribed/unsubscribed, but I have no idea who it is or what channel they subscribed/unsubscribed from.\n```\nvar client = redis.createClient();\nclient.on(\"message\", function(channel, msg){\n    console.log(channel + ': ' + msg);\n});\nclient.psubscribe(\"juggernaut:*\");\nclient.on('pmessage', function(channel, msg){\n    console.log('PMESSAGE:' + channel);\n    console.log(msg);\n});\n```\nLooking in the console log I get:\nPMESSAGE:juggernaut:*\njuggernaut:subscribe\nHow do I detect the data associated with that request? Can I get the channel and client meta out of it?\nAlso, unrelated -- but is there a way to donate to support the efforts of this project? After spending 3 days pulling teeth trying to get XMPP to do what I needed it to do, I'll gladly chip in part of the profit from my applications deployed using Juggernaut to ensure it keeps going.\n. I just saw that at the exact moment that you replied. It's working brilliantly now, thank you so much, Alex. Any word on donations? I'd really like to support this project.\n. Thank you so much, Alex. Once I get deeper into my project and work more and more with Juggernaut, I'll definitely be contributing wherever possible. This is such a lifesaver compared to attempting to deploy and customize XMPP.\n. One last question about general best practices. I have my roster working completely (decr/incr when each open/close of a session, just like the Ruby example). Now I'm wondering best practice for scaling. Should I not have the pmessage subscribe events running on the same node.js instance as my main application? Should I run the pmessage subscriptions in it's own instance and only one server?\nI'm thinking if I were to add a cluster of node.js instances all with the same code, it would lead to a bunch of duplicate status updates, since multiple servers would be getting the same online/offline notifications from the pmessage subscriptions.\nGenerally, I need to be able to serve about 7,000 active connections at any given moment and over SSL. Would best practice be to have a cluster of servers for the socket connections and publishing messages, and only one server subscribing to the pmessage notification and publishing the roster update messages?\n. ",
    "AntoineJ": "Hi!\nI'm new to all of this so this is a beginner question, I just don't know where to put this code : \n```\n  var redis   = require(\"redis\");\n  var client = redis.createClient();\nclient.on(\"message\", function(channel, msg){\n        msg = JSON.stringify(msg);\n  });\nclient.psubscribe(\"juggernaut:*\");\n```\nif i put it in a file server.js, what do I have to do with this file after? How can I run juggernaut with this file ?\nI'm aware that my questions are stupids but i don't understand the mechanism of juggernautt with redis and node.js and I didn't find any ressources on the web that explain how those things works.\n. ",
    "jer0m": "+1 for this update too!\nThanks!\n. ",
    "duncanbeevers": "Does it make sense to include Socket.IO as a submodule?\n. The idea here is to be able to load in the client-side Juggernaut code without having to make an additional http request directly to the juggernaut server for it.\n. When does it make sense to have multiple subscriptions to a single channel? I think this should be the default behavior, not a special path.\n. Or is the use case adding multiple subscriptions to a single channel, each with a different handler for the data?\nI think the identity of the handler should be sufficient, and in this case you shouldn't be subscribing with anonymous handlers.\nFor example, I think it's reasonable for Juggernaut to detect and thwart duplicating messages to a handler added like this:\n``` javascript\nfunction followHandler(feedEntry) {\n  console.log(\"Got new feed entry: \" + feedEntry);\n}\n$(\".user a.follow\").live(\"click\", function(event){\n  $.post(this.href, function(data, status, xhr){\n    var channel = \"users/\" + data.user.id + \"/feed\";\n    juggernaut.subscribe(channel, gotFeedEntry);\n  });\n});\n```\nHowever, when passing an anonymous handler like in the initial example, it is perfectly reasonable to add each \"new\" handler.\n. ",
    "saizai": "Here ya go. Drop this into bash.\n```\n  curl http://npmjs.org/install.sh | sh # install Node.js package manager\n  npm install -g juggernaut\n  gem install juggernaut\n  adduser --system --disabled-login --disabled-password --home /var/lib/juggernaut  --group juggernaut\n  cat > /etc/init/juggernaut.conf << EOF\ndescription \"juggernaut2\"\nused to be: start on startup\nuntil we found some mounts weren't ready yet while booting:\nstart on started mountall\nstop on shutdown\nAutomatically Respawn:\nrespawn\nrespawn limit 99 5\nscript\n    # Not sure why $HOME is needed, but we found that it is:\n    export HOME=\"/var/lib/juggernaut\"\nexec /usr/bin/node /usr/lib/node_modules/juggernaut/server.js >> /var/log/juggernaut.log 2>&1\n\nend script\npost-start script\n   # Optionally put a script here that will notifiy you node has (re)started\n   # /root/bin/hoptoad.sh \"node.js has started!\"\nend script\nEOF\n   chmod +x /etc/init/juggernaut.conf\n   start jugggernaut\n```\n. ",
    "yawor": "You can use supervisord to manage juggernaut. It provides a console (supervisorctl) where you can check and control state of any application you want to run as a daemon. It also manages logs for the apps it manages as it intercepts stdout and stderr from the app (inside supervisord application should be run normally, not as a daemon; log rotation is also supported and recommended). Supervisord can also be configured to restart app if it goes down for some reason.\nHere is an example of configuration for juggernaut:\n[program:someproject-juggernaut]\ncommand=/usr/bin/juggernaut\nprocess_name=%(program_name)s\nnumprocs=1\ndirectory=/home/yawor/projects/someproject/\numask=022\npriority=10\nautostart=true\nautorestart=true\nstartretries=3\nuser=yawor\nredirect_stderr=false\nstdout_logfile=/home/yawor/projects/someproject/logs/juggernaut.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=10\nstdout_capture_maxbytes=1MB\nstderr_logfile=/home/yawor/projects/someproject/logs/juggernaut_err.log\nstderr_logfile_maxbytes=1MB\nstderr_logfile_backups=10\nstderr_capture_maxbytes=1MB\nTo restart juggernaut you can use supervisorctl console and issue restart someproject-juggernaut command. You can also do it directly from shell:\nsupervisorctl restart someproject-juggernaut\n. ",
    "avitus": "I'm using Juggernaut 2 (2.0.3 I think) with Node 0.49, socket.io 0.73.\nIt appears that websockets is working on Chrome 12. It's a bit difficult to tell ... I see a lot of websocket upgrade handshakes and 101's (always of type 'pending') but I don't see any 'socket_io/1/xhr-polling' type requests.\nFirefox 6 seems to be all XHR-polling in Firebug. Same on IE9.\nAm I doing something wrong or is that the current state of affairs?\n. ",
    "seanrucker": "I am seeing this error in the JS console on line 790 of application.js\nSYNTAX_ERR: DOM Exception 12: An invalid or illegal string was specified.\n. Upgraded to latest version of Juggernaut. I now get a different error. \nUnexpected response code:503        :5000\nYou can see the error is being reported on port 5000 which is where I'm running my test HTML file locally. It seems somewhere Juggernaut is trying to load something from my local server rather than the host/port I specified.\n. Tried, Safari and Chrome browsers. Same error.\n. Thank you, this worked like a charm. Sorry for the late reply, was on holidays.\n. ",
    "mreinsch": "getting the same error when a client disconnects. Seems pretty reproducible.\n. updating to socket.io master fixes this issue, so it should be fixed once 0.7.8 is out.\n. ",
    "dvdplm": "Upgrading to Socket.IO@0.7.9 fixes the \"blows up on client disconnect\" issue for me, but Chrome v15.0.854.0 (dev) still can't establish a WebSocket (and no fallback transport is activated).\n. Tried, but no luck. Setting it to xhr-polling for now, sucks but works in all the browsers I'm using. Weirdly enough I got the same error using Chrome v14. Thanks for the suggestion!\nDavid\n. +1 on including this.\n. ",
    "iros": "This fixed the crash issue for me as well. Any chance this could be pulled? I'm running from fwoeck's branch...\n. dvdplm, the chrome dev version is an actual socket.io issue. You can keep an eye on it here: https://github.com/LearnBoost/socket.io/issues/429\n. @fwoeck - thanks for the hard work. I've been forking off of your fork while waiting for this to get pulled in to juggernaut proper.\n. Solved with the Socket.io upgrade 0.7.9 in this pull request. \nhttps://github.com/maccman/juggernaut/pull/90\n. ",
    "gtournie": "Ok, got it! =)\nSeems that in socket.io (/usr/local/lib/node_modules/juggernaut/node_modules/socket.io/lib/manager.js)\nvar defaultTransports didn't include 'flashsocket'...\nI added it and it finally works..!\n. ",
    "ncavig": "I'm having the same issue as well. Seems like a full update of all socketio code still produces poor results with chrome. I've got it working with Safari. Anyone else have  any insight?\n. ",
    "MichaelWhi": "Hi, I don't know if it is related or a new bug... I also experienced errors with Chrome, making Juggernaut crash completely during connecting a WebSocket in Chrome.\nHowever, I found the same error in the socket.io Tracker at https://github.com/LearnBoost/socket.io/issues/602, which they fixed in Version 0.8.7.\nSo - I am running Juggernaut on Heroku - I just had to change the line 18 in  package.json to:\n{ \"socket.io\" : \"=0.8.7\"\nI did not run your tests, but the app performs well in every browser, so this really seemed to fix it. I'd recommend you to update the package.json in this repo accordingly.\nAnd: Thanks a lot for this awesome piece of software!\n. I'd say yes - that's the change I proposed and I've been running juggernaut with socket.io 087 since then (end november or so) without problems on our production system.\n. ",
    "kevzettler": "I am having this same problem. I believe this was fixed in this merge:\nhttps://github.com/maccman/juggernaut/pull/113\nam I safe to say that upgrading juggernaut should fix this now?\n. +1 for the version bump. Same issues as @conanbatt . This is an important hotfix\n. If I clone master how can I install the dependencies? does NPM have something to read a local package.json? or do I have to manually install them?\n. Thanks @maccman \nI just cloned it and started it up in production. Fixes the issue for me. Looks good.\nI ran it through node using a relative path to server.js and not the global juggernaut executable. If thats a test case concern.\n. ",
    "raid5": "No problem :)\n. ",
    "andruby": "Using signatures is a great way to solve channel subscription authorization.\nI will try this patch out soon.\n@maccman: do you have any reasons or objections for not merging this into master?\n. ",
    "thoughtpunch": "@gottfrois / @dmitry any update here? We still use Juggernaut in production, so it would be great to hear what your solves were!\n. ",
    "gottfrois": "I'm not using juggetnaut anymore, can't help you much on the subject :-/\n. ",
    "martijn": "You could try connecting using the following command from a shell\nopenssl s_client -connect host:port\nThis might show you the exact problem (look for the return code near the bottom).\n. ",
    "dacow": "i have the same error (win xp, installed juggernaut using npm)\nC:\\msysgit\\msysgit\\redis\\msvs\\Release>juggernaut\nThe \"sys\" module is now called \"util\". It should have a similar interface.\n   info  - socket.io started\n\nError serving / - Forbidden\nError serving /favicon.ico - Forbidden\nError serving /favicon.ico - Forbidden\n. \n",
    "davetheninja": "Anyone got a resolution to this?\n. ",
    "conanbatt": "Im not sure if i have this issue also. Opera DOES connect to juggernaut, i can see the connections.  But i dont get any information from the publishing, and its absolutely silent: it doesnt say it connects or that it doesnt connect.\nAnyone experienced this?\n. Yeah i am forced right now to tell my users to user websockets, because it doesnt default to anything else that works. Not so elegant.\n. I'd appreciate a version bump. The latest socket.io update includes a pretty important fix (https://github.com/LearnBoost/socket.io/issues/602) that right now is killing my production server.\n. Yeah, same as @kevzettler . Im not familiar at all with juggernaut's internals. Would like to help more than be a nuisance, maybe there's a TODO here for some documentation on helping with the project. \n. ",
    "Frozen": "It's not a problem of juggernaut, it's problem in socket.io\nI'm using sockjs instead. \n. ",
    "VinothiniBalakrishnan": "I downloaded redis from http://redis.io/download. After extraction of redis-2.4.4.tar.gz I am getting redis-2.4.4. After that I did the following \nspritle@ubuntu:~$ cd Desktop/redis-2.4.4/\nspritle@ubuntu:~/Desktop/redis-2.4.4$ make\ncd src && make all\nmake[1]: Entering directory `/home/spritle/Desktop/redis-2.4.4/src'\nMAKE hiredis\n.....\n....\n....\nThen next step\nspritle@ubuntu:~/Desktop/redis-2.4.4$ cd src\nspritle@ubuntu:~/Desktop/redis-2.4.4/src$ redis-server \nStill i m getting the \n16 Dec 11:29:27 * Warning: no config file specified, using the default config. In order to specify a config file use 'redis-server /path/to/redis.conf'\n16 Dec 11:29:27 - Server started, Redis version 1.2.0\n16 Dec 11:29:27 * WARNING overcommit_memory is set to 0! Background save may fail under low condition memory. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n16 Dec 11:29:27 - The server is now ready to accept connections on port 6379\n16 Dec 11:29:27 . 0 clients connected (0 slaves), 412114 bytes in use, 0 shared objects\nMay i did anything wrong\n. Hi I followed https://redistogo.com/documentation/introduction_to_redis. Download redis-2.0.0 and start the redis server \nspritle@ubuntu:~/redis-2.0.0-rc1$ redis-server\n[5312] 16 Dec 11:44:18 # Warning: no config file specified, using the default config. In order to specify a config file use 'redis-server /path/to/redis.conf'\n[5312] 16 Dec 11:44:18 * Server started, Redis version 1.3.14\n[5312] 16 Dec 11:44:18 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n[5312] 16 Dec 11:44:18 * The server is now ready to accept connections on port 6379\n[5312] 16 Dec 11:44:18 - 0 clients connected (0 slaves), 533436 bytes in use\n[5312] 16 Dec 11:44:23 - 0 clients connected (0 slaves), 533436 bytes in use\n[5312] 16 Dec 11:44:28 - 0 clients connected (0 slaves), 533436 bytes in use\nAnd start the juggernaut \nspritle@ubuntu:/usr/local/lib/node_modules/juggernaut$ juggernaut server.js \nThe \"sys\" module is now called \"util\". It should have a similar interface.\n   info  - socket.io started\n   debug - client authorized\n   info  - handshake authorized 1132868371198808267\n   debug - setting request GET /socket.io/1/xhr-polling/1132868371198808267?t=1324016234129\n   debug - setting poll timeout\n   debug - client authorized for \n   debug - clearing poll timeout\n   debug - xhr-polling writing 1::\n   debug - set close timeout for client 1132868371198808267\n   debug - xhr-polling received data packet 3:::{\"type\":\"subscribe\",\"channel\":\"/observer\"}\nNow i can able to connect juggernaut server. \nThank you so much for your guidelines. \n. ",
    "kevinelliott": "I'd be very interested in this as well since I am deploying a Juggernaut-based app to Heroku as well and will need to scale soon.\n. ",
    "yankov": "You can probably setup your own load balancer (haproxy) outside of the heroku and point it to your heroku dynos\n. ",
    "kof": "I have opened an issue, which is about why socket.io doesn't support balancer without sticky sessions. Probably someone  would like to help to solve it.\nhttps://github.com/LearnBoost/socket.io/issues/939\n. ",
    "jskulski": "This was just merged in which fixed a problem with chrome 16. Upgrades to the latest socket.io. Update and try again?\nhttps://github.com/maccman/juggernaut/pull/113\n. I am using node.js as the backend if that wasn't clear. Thanks!\n. ",
    "dinjas": "Seemed to be this one: https://github.com/maccman/juggernaut/issues/94\nTo elaborate a little, Chrome has been unable to make a websocket connection for me and keeps reverting to an XHR connection. Works fine in all other browsers that I've tested. \n. ",
    "simplyb": "I'm using Rails 3 and I configure the redis server to connect to with this code in an initializer:\n```Juggernaut.options={:host => config['host'], :port => config['port']}\n```\nThen in JavaScript I configure which juggernaut server to connect to:\n```\nvar options = {\n        host: host,\n        secure: secure,\n        port: port\n};\nMyApp.juggernaut = new Juggernaut(options);\n\n. ",
    "maxcountryman": "Is it possible to pull from master with npm? (You'll have to excuse my lack of knowledge in regards to Node and such... :)\n. ",
    "felipecsl": "Hi @kevzettler, I am running into the same scenario right now and here are my findings so far: \nFor specs, we run redis in a non-default port (9736) so that it does not conflict with development redis.\nFor Juggernaut, you have 2 concerns: First is you have to start the server after you started redis. Second is it isnt possible yet to override the port that Juggernaut uses to connect to redis, so basically you are restricted to the default one (6379). this pull request adds this ability, but apparently has been sitting there for a while. In my case, my only option would be to change the test redis port to the default one, since there is no way to override that when starting juggernaut (so far). Haven't considered stubbing since we're talking about integration tests. \nHope this helps someone...\n. +1 I need this to run juggernaut in rails test environment, which connects to redis in a different port\n:thumbsup:\n. ",
    "snovotny": "+1 this patch works well for connecting to a different host redis is running on\n. ",
    "redterror": "+1\n. ",
    "kebot": "+1\n. ",
    "barttenbrinke": "+1\n. ",
    "Narnach": "+1\n. ",
    "codenamev": "+1\n. ",
    "stevenh512": "Older browsers like IE7 don't support JSON natively. If you want to support those browsers, there is a JSON parser written in Javascript here: https://github.com/douglascrockford/JSON-js\nJust make sure you include that in your page before you include the Juggernaut js file or anything else that might require JSON.\n. I would use json2.js from that repo instead of json.js, and probably just the script tag without the conditional comments.\n<script type=\"text/javascript\" src=\"json2.js\"></script>\nThat way you support every browser that doesn't support JSON natively and not just IE7. If your browser already supports JSON, the code in json2.js gets out of the way and lets the browser handle it, so in a modern browser it won't hurt anything.\nIn fact, if you're using anything that concatenates and minifies your javascript and css assets for you, just add it like any other javascript asset. For example, in Jammit you would add it to your assets.yml and in Rails 3.1+ you would drop it in vendor/assets/javascripts and add an include in your application.js (before or after jquery, shouldn't matter, but definitely before everything else).\n. ",
    "ashokrkm": "thank you for the feedback. can you please tell what is the recommended way of doing this? is something like this a good idea:\n<!--[if IE 7]>\n<script type=\"text/javascript\" src=\"json.js\"></script>\n<![endif]-->\n. ",
    "liluo": "@stevenh512 Cool,  bugfix for IE6&IE7, thx~\n. ",
    "primary0": "I got around it by compiling node after downloading from the website, instead of cloning and compiling from the git repo. Thanks!\n. ",
    "nir0": "subscribing :)\n. try to write a function like\nfunction unsubscribe_and_go_to(url){\n  unsubscribe\n  location.url ...\n}\n. =link_to_function \"Profile\", \"unsubscribe_and_go_to(#{profile_url})\"\n. or, as an option, u can also try:\n$('a').click(function(){unsubscribe;return false})\nnot sure if it will work...\n. Profile, given here, is just a random text used as an example name for a link\n. yeah, try to bind through $('a').click()\n2012/4/25 Shi Yan <\nreply@reply.github.com\n\n@nir0 ya.i got u.but the links could be any link in this page.so i need ad\na function to every link.its too tough,dot u think?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/maccman/juggernaut/issues/126#issuecomment-5329784\n\n\n\u00fe\u00c5\u00d2\u00c5\u00cd\u00d5\u00c8\u00c9\u00ce \u00ec\u00c5\u00d7 \u00f7\u00d1\u00de\u00c5\u00d3\u00cc\u00c1\u00d7\u00cf\u00d7\u00c9\u00de\n. roster code is outdated due to supermodel (Rails 3.2):\n1.9.3p125 :001 > Roster\nNoMethodError: undefined method `class_inheritable_array' for Roster:Class\n    from /home/nir0/.rvm/gems/ruby-1.9.3-p125@tyu_development/bundler/gems/supermodel-d5c06b867111/lib/supermodel/base.rb:118:in `method_missing'\n    from /home/nir0/.rvm/gems/ruby-1.9.3-p125@tyu_development/bundler/gems/supermodel-d5c06b867111/lib/supermodel/redis.rb:6:in `block in extended'\n    from /home/nir0/.rvm/gems/ruby-1.9.3-p125@tyu_development/bundler/gems/supermodel-d5c06b867111/lib/supermodel/redis.rb:5:in `class_eval'\n    from /home/nir0/.rvm/gems/ruby-1.9.3-p125@tyu_development/bundler/gems/supermodel-d5c06b867111/lib/supermodel/redis.rb:5:in `extended'\n    from /home/nir0/.rvm/gems/ruby-1.9.3-p125@tyu_development/bundler/gems/supermodel-d5c06b867111/lib/supermodel/redis.rb:163:in `extend'\n    from /home/nir0/.rvm/gems/ruby-1.9.3-p125@tyu_development/bundler/gems/supermodel-d5c06b867111/lib/supermodel/redis.rb:163:in `included'\n    from /home/nir0/projects/tyuru-dev/app/models/roster.rb:2:in `include'\n. sry, i didn't look at juggernaut as at just transport protocol\n. ",
    "jpellerin": "Is there a recommended workaround?\n. ",
    "teejayvanslyke": "Confirmed here, too.\n. ",
    "kyamaguchi": "I got the same error and the output of $ npm -g was the same.\nI have another environment that I created before and I got no error on that environment.\nI took diff and the result was\n\u251c\u2500\u252c juggernaut@2.1.1 \n-\u2502 \u251c\u2500\u2500 node-static-maccman@0.5.3 \n+\u2502 \u251c\u2500\u2500 node-static-maccman@0.5.4 \n \u2502 \u251c\u2500\u252c optimist@0.2.8 \n \u2502 \u2502 \u2514\u2500\u2500 wordwrap@0.0.2 \n \u2502 \u251c\u2500\u2500 redis@0.6.6\nI replaced node-static-maccman@0.5.4 in the failed environment with node-static-maccman@0.5.3 then it worked.\n. ",
    "oskarblom": "Any updates to this?\n. I'll have a look.\n. ",
    "dortzur": "I've replaced node-static-maccman with node-static and that's what got it working\ncan someone validate this as well?\n. ",
    "hlcfan": "@nir0 ya.thx.but when to callback this function?\n. @nir0  hi,thx.what is Profile ? \n. @nir0 ya.i got u.but the links could be any link in this page.so i need ad a function to every link.its too tough,dot u think?\n. @nir0  hi,man.i dont think of it a flexible solution....so do u think?in case that there're 1000 links in a page.so it's tough.\n. ",
    "mienaikoe": "Tie it to the unload event:\n$( window ).unload(function() {\n  //unsubscribe\n});\n. ",
    "ssh123": "sys.js:1\nthrow new Error(\n      ^\nError: The \"sys\" module is now called \"util\".\n    at sys.js:1:69\n    at NativeModule.compile (node.js:585:5)\n    at Function.require (node.js:553:18)\n    at Function._load (module.js:297:25)\n    at Module.require (module.js:362:17)\n    at require (module.js:378:17)\n    at Object. (/usr/local/lib/node_modules/juggernaut/node_modules/redis/lib/util.js:5:20)\n    at Module._compile (module.js:449:26)\n    at Object..js (module.js:467:10)\n    at Module.load (module.js:356:32)\nsame question!\n. ",
    "comboy": "77\n. ",
    "marshallbu": "I did a fork to start playing around with updating stuff like socket.io and making some changes (that I can find) so that node v0.8 behaves.  I'm not an expert yet, so I don't know if any of it is in contributable\n. ",
    "kokkalis": "Answering my own question, this was the right path on my ubuntu:\n/usr/local/lib/node_modules/juggernaut/lib/juggernaut/keys\nAnd yes, the port is still 8080 for https.\n. ",
    "brianweiner": "See if this link is helpful\nhttp://stackoverflow.com/questions/7431692/how-to-run-redis-server-and-juggernaut-server-in-production-mode\nAlso, you could look into http://ss64.com/bash/nohup.html\n. ",
    "ajtrichards": "Yep that's worked - thanks Brian\n. ",
    "xedp3x": "Do you get any messages from juggernaut on connecting?\nCane you please post the output form the command \"netstat -pan | grep node\" and \"netstat -pan | grep 8080\" if the Server are running?\n. ",
    "metzlar": "I installed socket.io to fool around with it. This did not solve the problem with juggernaut but I am getting more output now:\n$ juggernaut\n    path.existsSync is now called `fs.existsSync`.\n       info  - socket.io started\n       debug - client authorized\n       info  - handshake authorized 847919531562013476\n       debug - client authorized\n       info  - handshake authorized 1946779245526333349\n       etc...\nThe output from netstat is:\n```\n$ netstat -anp tcp | grep node\n    no output...\n$ netstat -an | grep node\n    Address          Type   Recv-Q Send-Q            Inode  etc...\n$ netstat -an | grep 8080\n    tcp4       0      0  .8080                 .*                    LISTEN\n``\n. Actually the outputclient authorizedandhandshake authorized` were from a javascript I wrote earlier and still had open in my browser. I guess juggernaut seems to be connectable by a socket from socket.io but somehow I still can not connect to http://localhost:8080/application.js or any url at localhost:8080.\n. ",
    "malagant": "I have exactly the same problem. I get the same output and get a timeout after certain minutes.\nAny progress on this issue?\n. ",
    "analla": "Same here\n. ",
    "zengjing": "same... plz\n. ",
    "s-block": "same here\n. ",
    "fuzzmonkey": "If anyone else has this problem, install an older version of node. You can use https://github.com/creationix/nvm, juggernaut seems to be working on node v0.6.21-pre.\n. @hgosalia i'd suggest switching to maintained project. You should check out http://faye.jcoglan.com.\n. ",
    "noahgibbs": "@maccman One problem with that \"high abstraction\", not only your implementation but all of them, is that Rack doesn't really support it.  So in Sinatra, Rails and everything else I've seen, there's no way to do it that's portable across app servers.\nFor instance, yours supports \"Evented\" servers -- I'm assuming that's Thin and Puma.  But no Unicorn, Racer, WEBrick, etc., nor most JRuby servers.\nThat's a common problem with all the SSE stuff.  Again, Rails has basically the same problem.  You can support non-evented servers, sort of, but the same code doesn't work.  Rails also makes development mode very painful for SSE because of threading/reloading problems -- MRI doesn't support thread-safe code reloading, so Rails won't do multiple threads with code reloading, and SSE requires multiple threads currently (and forever?).\nWith that said, we now have websocket support in basically all the latest browsers.  So they're not a bad choice any more.  Better than SSE, probably, at this point -- less browser support, but much less painful framework support.\n. ",
    "hgosalia": "@fuzzmonkey - Thanks, that worked for me. I was on node v0.10.21 ... after installing v0.6.21 through nvm, I launched http://localhost:8080 and saw the Juggernaut Hello World page instantly. Thanks again!\n. ",
    "pedromtavares": "I found this one: https://github.com/rubenv/node-broadcast-hub, but couldn't get it working with ember-cli, didn't try much though.\nI wish I had time to fork and update Juggernaut, it is by far the easiest way to get real time stuff done. Too bad the author abandoned it for the argument of SSE, but the server support for those is not that reliable, especially when dealing with hundreds of simultaneous connections (a few of the caveats are mentioned here https://www.youtube.com/watch?v=hJXtPoTlkt0).\nThe redis pubsub proxy approach through websockets used by this lib and the one I pasted is still the most reliable and scalable solution regarding this subject, even more so now that the browser support for websockets is basically 100%\nCome back, @maccman! :) (unless you're working for Pusher, which would totally make sense hahaha)\n. "
}