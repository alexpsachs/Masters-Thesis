{
    "gorangajic": "Do you use babel-loader? \n. I have added last night transformed version in /lib and it's on npm. Just need to update docs\n. @prescottprue that is also fixed in the new version I was using stateless function components so it was needed to React be global, now it's ussing classes\n. https://github.com/gorangajic/react-icons/commit/321f37b2e4ac112eb4c7230a8aaa6e90ee15aaae\n. Sure http://gorangajic.github.io/react-icons/go.html\nhttps://github.com/gorangajic/react-icons/commit/33d6bd00adc68ad977dc7efb2e59384c493360d1\n. Thank you.\nhttps://i.imgur.com/SMYdBup.png\n. can you try now I have updated `\"main\"to point to lib/icons and added\"jsnext:main\"`` to point to es6 module\nby default babel ignore node_modules so if you don't want to change that settings you will need to use files from the ./lib\ndist folder is removed I have been testing something and it was published by accident\n. they are scaled maybe that is the problem I will try to fix it by using larger viewBox\n. I have resized them so they all have the same size for react-svg-morph but apparently they got deformed in the process. Will try to find some time tomorrow and fix it\n. sorry @jsierles forget about this. Are only Font Awesome icons deformed or just that one? I have update them so can you check now? \nnpm install react-icons@0.3.0\nprocess for this goes something like this \n- used svg-caster to export svg from the webfont\nsvg-caster --svg-font fontawesome-webfont.svg --svg-font-css ../css/font-awesome.css --out-svg ./svg --pretty\n- use svg-scale to scale icon to 40x40 \n- copy exported and scaled svg icons to react-icons/icons/fa/\n- run npm run build\n. svg-scaler deformed icons by rounding path\nhttps://github.com/morlay/svg-scaler/blob/master/lib/SVGTranslator.js#L125\n. https://github.com/gorangajic/react-icons/commit/494eac504afa6fe7ccf5af4fd1c1512b2b5b315f\n. Thank you for help\n. some icons in font awesome have more than one, thats why we had broken old icons that were duplicated.\nfor example\nrepeat => rotate-right\nundo => rotate-left\ngear => cog\nNow they are removed https://github.com/gorangajic/react-icons/commit/2a3f1bfae88f3e35e24c665ccea8a22d80626f63\n. it's not all automated, it's look like it took first icon that come in alphabetical order. \nAt first I was using svg-caster to get svg icons from the font file, now I use https://icomoon.io/ because I thought that svg-caster was broken  #6 \n. :+1: \n. I have scaled them because react-svg-morph so they are animated nicely, maybe we can keep the same height and ignore width ?\n. btw I am currently busy so can't start on this right now, if you want to work on this and have questions just ask\n. closing because it's not related to react-icons, it's probably something wrong with jspm\n. Thank you, they are added now\n. Thank you \n. thanks\n. Sorry guys was busy with some stuff and I wanted to solve #11 before adding new icon set, so everything can be more automated. \nIf no one else tackle this I will try to do it over the weekend\n. They are added now\n. maybe it's some other lib because we are not accessing offsetWidth anywhere\n. I think that you can pass className for example <Icon className=\"react-icon\" />\n. I have just merged https://github.com/gorangajic/react-icon-base/pull/6 you can use context to style icons\n. Thank you\n. sorry published, had some problems with babel not building project\n. Sorry, but some icons have aliases and some icons are named by their alias instead of their real name\nthat icon in react-icons is called close\n. can you try now?\n. I have added them back in 2.0.0\n. Thank you, it's fixed now in v2.0.1 \n. sorry guys my bad this is now fixed in v2.0.1 06f5476\n. did you try 2.0.1? There was a bug in 2.0.0\n. icon folder does not exist, we can solve this quickly but imo we should make updates automatic using scripts\n. Some icons have aliases, it's the same icon just different name\ntimes => close\nlink => chain\ngear => cog\nundo => rotate-left\n. You should include every icon separately. This module is created with that in mind so user of your app only gets what is needed\n. Thank you, can you also add in readme your code snippet from the pull request?\n. Thank you\n. I am a bit busy and currently do not use project that much myself, if someone want to help I am more than happy to give access\n. If someone want to take over I will be more than happy to give access \n. you can do it\n. fa-times is alias to fa-close so you can use fa/close\n. I think that you need this babel plugin http://babeljs.io/docs/plugins/transform-export-extensions/\non my project it works with current setup\n.babelrc\njson\n{\n    \"presets\": [\"react\", \"stage-0\", \"es2015\"]\n}\n. npm install babel-preset-react babel-preset-stage-0 babel-preset-es2015 --save-dev\n. you can use css transform with css animation\nhttp://stackoverflow.com/questions/16771225/css3-rotate-animation\n. Use of context is broken in react-svg-morph see issue -> https://github.com/gorangajic/react-svg-morph/issues/2 and because react-icons now uses context they do not work anymore. Sorry for that but you can always use svg directly\n. Until context bug is fixed react-icons will not work with react-svg-morph for now, you can manually copy the path or use older version.\nYou should not provide viewBox to MorphReplaceResize it should work without that. \nNot sure what you want to do but I have created something similar http://www.webpackbin.com/VyThQMOo-\n. great then I will close this issue\n. version ? just tested and everything is working fine\n. react-native is not supported try something like https://github.com/oblador/react-native-vector-icons/\n. It would be difficult because svg elements are treated as View components not Text. And you can't insert View component into Text. So it will be impossible to do something like\njsx\nconst Awesome = () => (\n    <View style={{ flex: 1 }}>\n        <Text>I like to drink <FaBeer /></Text>\n    </View>\n);\nreact-native-vector-icons handle that case already\n. anyway it's going through babel so not sure why it will not work\n. import MdRefresh from 'react-icons/lib/md/refresh'. thanks. Currently no, but if someone wants to tackle that I can guide and help him. I was planning to create that but didn't have time . It's not that easy because build process is broken. Will take into this right now. I am open for PR, if you want to maintain this project I can give you full access. Do you use babel-loader? \n. I have added last night transformed version in /lib and it's on npm. Just need to update docs\n. @prescottprue that is also fixed in the new version I was using stateless function components so it was needed to React be global, now it's ussing classes\n. https://github.com/gorangajic/react-icons/commit/321f37b2e4ac112eb4c7230a8aaa6e90ee15aaae\n. Sure http://gorangajic.github.io/react-icons/go.html\nhttps://github.com/gorangajic/react-icons/commit/33d6bd00adc68ad977dc7efb2e59384c493360d1\n. Thank you.\nhttps://i.imgur.com/SMYdBup.png\n. can you try now I have updated `\"main\"to point to lib/icons and added\"jsnext:main\"`` to point to es6 module\nby default babel ignore node_modules so if you don't want to change that settings you will need to use files from the ./lib\ndist folder is removed I have been testing something and it was published by accident\n. they are scaled maybe that is the problem I will try to fix it by using larger viewBox\n. I have resized them so they all have the same size for react-svg-morph but apparently they got deformed in the process. Will try to find some time tomorrow and fix it\n. sorry @jsierles forget about this. Are only Font Awesome icons deformed or just that one? I have update them so can you check now? \nnpm install react-icons@0.3.0\nprocess for this goes something like this \n- used svg-caster to export svg from the webfont\nsvg-caster --svg-font fontawesome-webfont.svg --svg-font-css ../css/font-awesome.css --out-svg ./svg --pretty\n- use svg-scale to scale icon to 40x40 \n- copy exported and scaled svg icons to react-icons/icons/fa/\n- run npm run build\n. svg-scaler deformed icons by rounding path\nhttps://github.com/morlay/svg-scaler/blob/master/lib/SVGTranslator.js#L125\n. https://github.com/gorangajic/react-icons/commit/494eac504afa6fe7ccf5af4fd1c1512b2b5b315f\n. Thank you for help\n. some icons in font awesome have more than one, thats why we had broken old icons that were duplicated.\nfor example\nrepeat => rotate-right\nundo => rotate-left\ngear => cog\nNow they are removed https://github.com/gorangajic/react-icons/commit/2a3f1bfae88f3e35e24c665ccea8a22d80626f63\n. it's not all automated, it's look like it took first icon that come in alphabetical order. \nAt first I was using svg-caster to get svg icons from the font file, now I use https://icomoon.io/ because I thought that svg-caster was broken  #6 \n. :+1: \n. I have scaled them because react-svg-morph so they are animated nicely, maybe we can keep the same height and ignore width ?\n. btw I am currently busy so can't start on this right now, if you want to work on this and have questions just ask\n. closing because it's not related to react-icons, it's probably something wrong with jspm\n. Thank you, they are added now\n. Thank you \n. thanks\n. Sorry guys was busy with some stuff and I wanted to solve #11 before adding new icon set, so everything can be more automated. \nIf no one else tackle this I will try to do it over the weekend\n. They are added now\n. maybe it's some other lib because we are not accessing offsetWidth anywhere\n. I think that you can pass className for example <Icon className=\"react-icon\" />\n. I have just merged https://github.com/gorangajic/react-icon-base/pull/6 you can use context to style icons\n. Thank you\n. sorry published, had some problems with babel not building project\n. Sorry, but some icons have aliases and some icons are named by their alias instead of their real name\nthat icon in react-icons is called close\n. can you try now?\n. I have added them back in 2.0.0\n. Thank you, it's fixed now in v2.0.1 \n. sorry guys my bad this is now fixed in v2.0.1 06f5476\n. did you try 2.0.1? There was a bug in 2.0.0\n. icon folder does not exist, we can solve this quickly but imo we should make updates automatic using scripts\n. Some icons have aliases, it's the same icon just different name\ntimes => close\nlink => chain\ngear => cog\nundo => rotate-left\n. You should include every icon separately. This module is created with that in mind so user of your app only gets what is needed\n. Thank you, can you also add in readme your code snippet from the pull request?\n. Thank you\n. I am a bit busy and currently do not use project that much myself, if someone want to help I am more than happy to give access\n. If someone want to take over I will be more than happy to give access \n. you can do it\n. fa-times is alias to fa-close so you can use fa/close\n. I think that you need this babel plugin http://babeljs.io/docs/plugins/transform-export-extensions/\non my project it works with current setup\n.babelrc\njson\n{\n    \"presets\": [\"react\", \"stage-0\", \"es2015\"]\n}\n. npm install babel-preset-react babel-preset-stage-0 babel-preset-es2015 --save-dev\n. you can use css transform with css animation\nhttp://stackoverflow.com/questions/16771225/css3-rotate-animation\n. Use of context is broken in react-svg-morph see issue -> https://github.com/gorangajic/react-svg-morph/issues/2 and because react-icons now uses context they do not work anymore. Sorry for that but you can always use svg directly\n. Until context bug is fixed react-icons will not work with react-svg-morph for now, you can manually copy the path or use older version.\nYou should not provide viewBox to MorphReplaceResize it should work without that. \nNot sure what you want to do but I have created something similar http://www.webpackbin.com/VyThQMOo-\n. great then I will close this issue\n. version ? just tested and everything is working fine\n. react-native is not supported try something like https://github.com/oblador/react-native-vector-icons/\n. It would be difficult because svg elements are treated as View components not Text. And you can't insert View component into Text. So it will be impossible to do something like\njsx\nconst Awesome = () => (\n    <View style={{ flex: 1 }}>\n        <Text>I like to drink <FaBeer /></Text>\n    </View>\n);\nreact-native-vector-icons handle that case already\n. anyway it's going through babel so not sure why it will not work\n. import MdRefresh from 'react-icons/lib/md/refresh'. thanks. Currently no, but if someone wants to tackle that I can guide and help him. I was planning to create that but didn't have time . It's not that easy because build process is broken. Will take into this right now. I am open for PR, if you want to maintain this project I can give you full access. ",
    "prescottprue": "I actually do have it in the project that is throwing that error, but I usually exclude node_modules with loaders. Did I miss that being a requirement somewhere in the docs or is it not in there?\nIs there a plan for including a pre-babeled version so that loaders will not have to be included for this? It is pretty slow to have babel-loader scan whole node_modules folder.\nUsing the following loader I am able to get webpack to build completely, but then I recieve an error about React not being defined:\n{\n      test: /react-icons\\/(.)*(.js)$/,\n      loaders: 'babel'\n},\nNew Error:\n\nSeems like it might be due to the regex I am using not covering the node_modules folder within the module.\n. Awesome, thanks for fixing it so fast!\n. I actually do have it in the project that is throwing that error, but I usually exclude node_modules with loaders. Did I miss that being a requirement somewhere in the docs or is it not in there?\nIs there a plan for including a pre-babeled version so that loaders will not have to be included for this? It is pretty slow to have babel-loader scan whole node_modules folder.\nUsing the following loader I am able to get webpack to build completely, but then I recieve an error about React not being defined:\n{\n      test: /react-icons\\/(.)*(.js)$/,\n      loaders: 'babel'\n},\nNew Error:\n\nSeems like it might be due to the regex I am using not covering the node_modules folder within the module.\n. Awesome, thanks for fixing it so fast!\n. ",
    "KyleAMathews": ":+1: to a pre-transpiled version\n. :+1: to a pre-transpiled version\n. ",
    "bsr203": "thanks.. it works.. to import one icon from lib, the following works\nimport Mail from 'react-icons/lib/md/mail' or `import MdMail from 'react-icons'\n. @Prinzhorn cool.. didn't know that it is that easy.. thanks.\n. see https://github.com/gorangajic/react-icon-base/issues/13\nbut no activity :-(\n. this is solved in react-icon-base v 2.0.4. It would be great if the dep of this lib is updated, and make a release. \ncc @gorangajic @bentatum . thanks.. it works.. to import one icon from lib, the following works\nimport Mail from 'react-icons/lib/md/mail' or `import MdMail from 'react-icons'\n. @Prinzhorn cool.. didn't know that it is that easy.. thanks.\n. see https://github.com/gorangajic/react-icon-base/issues/13\nbut no activity :-(\n. this is solved in react-icon-base v 2.0.4. It would be great if the dep of this lib is updated, and make a release. \ncc @gorangajic @bentatum . ",
    "randichilyon": "can you tell me how to fix this? i don't really understand what to do to fix this. Thank you.. can you tell me how to fix this? i don't really understand what to do to fix this. Thank you.. ",
    "dmoli": "@christchron you must call the lib folder to import.\nLook at:\nuse this import Mail from 'react-icons/lib/fa/mail' instead import Mail from 'react-icons/fa/mail'. \n. Update please!. @christchron you must call the lib folder to import.\nLook at:\nuse this import Mail from 'react-icons/lib/fa/mail' instead import Mail from 'react-icons/fa/mail'. \n. Update please!. ",
    "jsierles": "I'm just using the 'size' property. Is that what you mean by 'scaled'?\n. Cool. thanks for the update!\n. Can I help with this issue?\n. I also see this load time. Probably because there are lots of small files that all need to be transformed when you require a full icon set?\n. I'm just using the 'size' property. Is that what you mean by 'scaled'?\n. Cool. thanks for the update!\n. Can I help with this issue?\n. I also see this load time. Probably because there are lots of small files that all need to be transformed when you require a full icon set?\n. ",
    "Prinzhorn": "my pull request just landed https://github.com/gorangajic/react-icon-base/pull/1 so this should soon work with react-icons as well\n. With the latest version they simply use the same color as the text. So if you have a color: declaration for the wrapper element (like <button> or <span>) or any parent then the icon uses the same color as the text.\nYou can still overwrite this using the fill prop\n. This commit broke it https://github.com/gorangajic/react-icons/commit/9ee354c2461d9986191f885a82ff3d27e599b370\n. Check out 0.3.1 to see how its supposed to work\n. Kind of. What you don't get is icons which scale to the size of the text, you need to set the size prop to 1em manually if you want that. But you get the color thing.\n. What would the benefit be? Don't you want the buttons to match the design of the rest of the app? Your app likely already has a button component.\nI personally think it's out of scope for react-icons, because it does one thing and does it well, which is inlining SVG icons as unopinionated as possible.\n. > as the default browser element didn't work very well with it\nNow I'm curious (because react-icons should just work). I've set up a demo project with this simple code (no CSS at all)\n``` js\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar FaBeer = require('react-icons/lib/fa/beer');\nReactDOM.render(\n    \n Hey you, beer me. Beer us together, naturally.\n    ,\n    document.getElementById('example')\n);\n```\nHere are Screenshots of Chromium and Firefox (on Ubuntu, but I assume native buttons on other platforms work equally well).\n\n\n. Thank you! Works great again.\n. I see. How did you decide which ones to keep? E.g. undo is the official name and rotate-left the alias, but you kept rotate-left. http://fontawesome.io/icon/undo/\nIs your whole process automated? If so, can't we support aliases? Like module.exports = require('./undo.js'); inside the rotate-left.js (or whatever the equivalent es6 is)?\n. But now 1.0.3 is a breaking change, because some people (including me) already use fa icons which are now removed. We should keep them and automate everything. Discussion here: #11\n. Also: the icons shouldn't be squares but keep the size of the original font. Given fa-bolt as an example (http://fontawesome.io/icon/bolt/) this is how it looks like as a font\n\nIf it would be square (with space on the left/right) it would look different next to text.\nI'll take a look at how we could do that (e.g. wrap the path in a <g> and apply some transformation?). This means there would be no need for something like svg-scaler because we don't touch the path.\n. I didn't know about react-svg-morph and that's really unfortunate. Does it require the same width/height/viewBox for both svgs? If so, then that's not compatible with my plans. But in order for react-icons to be a replacement for icon fonts we need the correct sizes.\n\nmaybe we can keep the same height and ignore width ?\n\nThat could work. Looks like with icon fonts they always have the same height but different widths. Compare fa-bolt from above with fa-money, which has a larger width than height. They both render with a height of 280\n\n\nbtw I am currently busy so can't start on this right now, if you want to work on this and have questions just ask\n\nI want to at least put a basic proof-of-concept PR together which we can use for discussion.\n. First of all: not touching the svg (e.g. scaling the path) works. Also in combination with only setting the height. The browser scales it just fine.\nExample (fa-rotate-left) http://jsbin.com/gusowuxiye/edit?html,output\nhtml\n<button type=\"button\" style=\"line-height:1;\">\n  <svg height=\"1em\" viewBox=\"0 0 1536 1896.0833\" style=\"display:inline-block;vertical-align:middle;\" >\n    <g><path d=\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"/></g>\n  </svg>\n  <span>Bacon</span>\n</button>\nThis means we basically just need to drop width from react-icon-base.\nI created a pull-icons script which I ran before create.js. It's currently fa only, but it makes it fully automated.\n``` bash\n!/bin/bash\nset -e\nTMP_FOLDER=/tmp/react-icons\nmkdir -p $TMP_FOLDER\nFont-Awesome:\necho \"Downloading Font-Awesome font and css\"\ncurl -o $TMP_FOLDER/fontawesome-webfont.svg https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/fonts/fontawesome-webfont.svg\ncurl -o $TMP_FOLDER/font-awesome.css https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/css/font-awesome.css\necho \"Cleaning up the Font-Awesome target directory\"\nrm -rf icons/fa\nmkdir -p icons/fa\necho \"Converting Font-Awesome font into separate SVGs\"\nsvg-caster --svg-font $TMP_FOLDER/fontawesome-webfont.svg --font-css $TMP_FOLDER/font-awesome.css --font-css-prefix \"fa-\" --out-svg icons/fa\nCleanup\nrm -rf $TMP_FOLDER\n```\nNow the only question is: will this work with react-svg-morph if the viewBox is different?\n. Can you share some code? Did you try changing fill and well as color? Not sure to which element radium adds the style. If it's the parent of the <svg> then color is the correct property. When manipulating the <svg> directly then fill needs to be changed.\n. @mvaivre require are resolved at compile time (e.g. when you run browserify/webpack, not when the code is run in the browser). They can't be dynamic as far as I know (electron is a different story).\n. @mvaivre create a icons.js which exports all icons you know you will need\njs\nmodules.exports = {\n    \"foo\": require(\"react-icons/lib/md/foo\"),\n    \"bar\": require(\"react-icons/lib/md/bar\"),\n    \"baz\": require(\"react-icons/lib/md/baz\")\n};\nand in your component\n``` js\nvar iconsByName = require(\"./icons.js\")\n//...later....\nIcon = iconsByName[props.icon];\n``\n. This happened before in #9. I think this process needs to be automated to prevent this in the future.\n. Thanks! Hm, yeah. We had that discussion before. Butchainis an alias forlink`. Not the other way round. Also I still think react-icons should alias them as well then (because as you said, they're an alias but then they're not, because react-icons only has one of them). Otherwise it's a guessing game and it will come up over and over again.\nhttps://github.com/gorangajic/react-icons/issues/10\nhttps://github.com/gorangajic/react-icons/issues/26\n. It is present under its alias fa-group. Only the (alphabetical) first name of each icon is available. See discussion https://github.com/gorangajic/react-icons/issues/33\n. It is present under its alias fa-group. Only the (alphabetical) first name of each icon is available. See discussion https://github.com/gorangajic/react-icons/issues/33\n. style prop\njs\nclass Question extends React.Component {\n    render() {\n        return <h3> Lets go for a <FaBeer style={{verticalAlign: 'baseline'}} />? </h3>\n    }\n}\n. my pull request just landed https://github.com/gorangajic/react-icon-base/pull/1 so this should soon work with react-icons as well\n. With the latest version they simply use the same color as the text. So if you have a color: declaration for the wrapper element (like <button> or <span>) or any parent then the icon uses the same color as the text.\nYou can still overwrite this using the fill prop\n. This commit broke it https://github.com/gorangajic/react-icons/commit/9ee354c2461d9986191f885a82ff3d27e599b370\n. Check out 0.3.1 to see how its supposed to work\n. Kind of. What you don't get is icons which scale to the size of the text, you need to set the size prop to 1em manually if you want that. But you get the color thing.\n. What would the benefit be? Don't you want the buttons to match the design of the rest of the app? Your app likely already has a button component.\nI personally think it's out of scope for react-icons, because it does one thing and does it well, which is inlining SVG icons as unopinionated as possible.\n. > as the default browser element didn't work very well with it\nNow I'm curious (because react-icons should just work). I've set up a demo project with this simple code (no CSS at all)\n``` js\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar FaBeer = require('react-icons/lib/fa/beer');\nReactDOM.render(\n    \n Hey you, beer me. Beer us together, naturally.\n    ,\n    document.getElementById('example')\n);\n```\nHere are Screenshots of Chromium and Firefox (on Ubuntu, but I assume native buttons on other platforms work equally well).\n\n\n. Thank you! Works great again.\n. I see. How did you decide which ones to keep? E.g. undo is the official name and rotate-left the alias, but you kept rotate-left. http://fontawesome.io/icon/undo/\nIs your whole process automated? If so, can't we support aliases? Like module.exports = require('./undo.js'); inside the rotate-left.js (or whatever the equivalent es6 is)?\n. But now 1.0.3 is a breaking change, because some people (including me) already use fa icons which are now removed. We should keep them and automate everything. Discussion here: #11\n. Also: the icons shouldn't be squares but keep the size of the original font. Given fa-bolt as an example (http://fontawesome.io/icon/bolt/) this is how it looks like as a font\n\nIf it would be square (with space on the left/right) it would look different next to text.\nI'll take a look at how we could do that (e.g. wrap the path in a <g> and apply some transformation?). This means there would be no need for something like svg-scaler because we don't touch the path.\n. I didn't know about react-svg-morph and that's really unfortunate. Does it require the same width/height/viewBox for both svgs? If so, then that's not compatible with my plans. But in order for react-icons to be a replacement for icon fonts we need the correct sizes.\n\nmaybe we can keep the same height and ignore width ?\n\nThat could work. Looks like with icon fonts they always have the same height but different widths. Compare fa-bolt from above with fa-money, which has a larger width than height. They both render with a height of 280\n\n\nbtw I am currently busy so can't start on this right now, if you want to work on this and have questions just ask\n\nI want to at least put a basic proof-of-concept PR together which we can use for discussion.\n. First of all: not touching the svg (e.g. scaling the path) works. Also in combination with only setting the height. The browser scales it just fine.\nExample (fa-rotate-left) http://jsbin.com/gusowuxiye/edit?html,output\nhtml\n<button type=\"button\" style=\"line-height:1;\">\n  <svg height=\"1em\" viewBox=\"0 0 1536 1896.0833\" style=\"display:inline-block;vertical-align:middle;\" >\n    <g><path d=\"M1536 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z\"/></g>\n  </svg>\n  <span>Bacon</span>\n</button>\nThis means we basically just need to drop width from react-icon-base.\nI created a pull-icons script which I ran before create.js. It's currently fa only, but it makes it fully automated.\n``` bash\n!/bin/bash\nset -e\nTMP_FOLDER=/tmp/react-icons\nmkdir -p $TMP_FOLDER\nFont-Awesome:\necho \"Downloading Font-Awesome font and css\"\ncurl -o $TMP_FOLDER/fontawesome-webfont.svg https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/fonts/fontawesome-webfont.svg\ncurl -o $TMP_FOLDER/font-awesome.css https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/css/font-awesome.css\necho \"Cleaning up the Font-Awesome target directory\"\nrm -rf icons/fa\nmkdir -p icons/fa\necho \"Converting Font-Awesome font into separate SVGs\"\nsvg-caster --svg-font $TMP_FOLDER/fontawesome-webfont.svg --font-css $TMP_FOLDER/font-awesome.css --font-css-prefix \"fa-\" --out-svg icons/fa\nCleanup\nrm -rf $TMP_FOLDER\n```\nNow the only question is: will this work with react-svg-morph if the viewBox is different?\n. Can you share some code? Did you try changing fill and well as color? Not sure to which element radium adds the style. If it's the parent of the <svg> then color is the correct property. When manipulating the <svg> directly then fill needs to be changed.\n. @mvaivre require are resolved at compile time (e.g. when you run browserify/webpack, not when the code is run in the browser). They can't be dynamic as far as I know (electron is a different story).\n. @mvaivre create a icons.js which exports all icons you know you will need\njs\nmodules.exports = {\n    \"foo\": require(\"react-icons/lib/md/foo\"),\n    \"bar\": require(\"react-icons/lib/md/bar\"),\n    \"baz\": require(\"react-icons/lib/md/baz\")\n};\nand in your component\n``` js\nvar iconsByName = require(\"./icons.js\")\n//...later....\nIcon = iconsByName[props.icon];\n``\n. This happened before in #9. I think this process needs to be automated to prevent this in the future.\n. Thanks! Hm, yeah. We had that discussion before. Butchainis an alias forlink`. Not the other way round. Also I still think react-icons should alias them as well then (because as you said, they're an alias but then they're not, because react-icons only has one of them). Otherwise it's a guessing game and it will come up over and over again.\nhttps://github.com/gorangajic/react-icons/issues/10\nhttps://github.com/gorangajic/react-icons/issues/26\n. It is present under its alias fa-group. Only the (alphabetical) first name of each icon is available. See discussion https://github.com/gorangajic/react-icons/issues/33\n. It is present under its alias fa-group. Only the (alphabetical) first name of each icon is available. See discussion https://github.com/gorangajic/react-icons/issues/33\n. style prop\njs\nclass Question extends React.Component {\n    render() {\n        return <h3> Lets go for a <FaBeer style={{verticalAlign: 'baseline'}} />? </h3>\n    }\n}\n. ",
    "tnrich": "@Prinzhorn would you mind giving a bit more of a description of what exactly needs to be done to style the icons with a given color?\n. hmm neither of those are quite working for me.. Could I be on an older version?\n. Oh, interesting. So for the time being I can go back a few versions until it's fixed? Thanks for the help too btw :+1: \n. Sounds good, I was mostly looking for already built buttons that work well with your svg set as the default browser  element didn't work very well with it. One I found is this: https://github.com/zippyui/react-button. You could potentially link to it, or just having this issue would probably be enough to point others toward those buttons. I'd still be interested in seeing other button sets people know of that work well with this library. \nAnd thanks for the nice library too btw :)\n. For me it was when I tried to make a circular button using border-radius: '50%' that things got a little wonky. \nBut that probably could have been solved without going to another library. But using another lib worked so I went with that.\n. :+1: \n. Thanks!\nOn Fri, Dec 4, 2015 at 2:42 AM Alexander Prinzhorn notifications@github.com\nwrote:\n\nThank you! Works great again.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gorangajic/react-icons/issues/9#issuecomment-161934475\n.\n. There still seems to be some missing icons in 2.0\n\nSpecifically I'm not able to find:\nlib/go/input-checked\nThanks!\n. @Prinzhorn would you mind giving a bit more of a description of what exactly needs to be done to style the icons with a given color?\n. hmm neither of those are quite working for me.. Could I be on an older version?\n. Oh, interesting. So for the time being I can go back a few versions until it's fixed? Thanks for the help too btw :+1: \n. Sounds good, I was mostly looking for already built buttons that work well with your svg set as the default browser  element didn't work very well with it. One I found is this: https://github.com/zippyui/react-button. You could potentially link to it, or just having this issue would probably be enough to point others toward those buttons. I'd still be interested in seeing other button sets people know of that work well with this library. \nAnd thanks for the nice library too btw :)\n. For me it was when I tried to make a circular button using border-radius: '50%' that things got a little wonky. \nBut that probably could have been solved without going to another library. But using another lib worked so I went with that.\n. :+1: \n. Thanks!\nOn Fri, Dec 4, 2015 at 2:42 AM Alexander Prinzhorn notifications@github.com\nwrote:\n\nThank you! Works great again.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gorangajic/react-icons/issues/9#issuecomment-161934475\n.\n. There still seems to be some missing icons in 2.0\n\nSpecifically I'm not able to find:\nlib/go/input-checked\nThanks!\n. ",
    "jadedevin13": "I realize this is issue is not about the package react-icons but npm as the package manager.\nBTW\nI just came back to solve it on my own by a handful of commands.\nulimit -n\nThis didn't solve the issue. I have to edit the /etc/security/limits.conf file and add the following\n@user    hard    nofile           65535\n@user    soft    nofile           65535\n. I realize this is issue is not about the package react-icons but npm as the package manager.\nBTW\nI just came back to solve it on my own by a handful of commands.\nulimit -n\nThis didn't solve the issue. I have to edit the /etc/security/limits.conf file and add the following\n@user    hard    nofile           65535\n@user    soft    nofile           65535\n. ",
    "nikgraf": "my pleasure, can you also publish a new version on npm? the old .babelrc inside this repo prevents us from upgrading to babel6\n. my pleasure, can you also publish a new version on npm? the old .babelrc inside this repo prevents us from upgrading to babel6\n. ",
    "maxekman": "I would also like to see this merged.\n. I would also like to see this merged.\n. ",
    "Secretmapper": "+1\n. +1\n. ",
    "tgoldenberg": "Ended up refactoring the button to a separate component with a hover state that modifies the color, but wondering if there's any easier way to do this...\n. okay, I got it to work with a hover state, but I'll give it a try this way too. Thanks\n. Ended up refactoring the button to a separate component with a hover state that modifies the color, but wondering if there's any easier way to do this...\n. okay, I got it to work with a hover state, but I'll give it a try this way too. Thanks\n. ",
    "mrberggg": "@gorangajic Ok but wouldn't it be nice to have project-wide styles? E.g. setting a default icon color?\n. @gorangajic Ok but wouldn't it be nice to have project-wide styles? E.g. setting a default icon color?\n. ",
    "ezekg": "I would go for a <span> if you do implement this, because a <div> can't be nested under <p> tags. To solve this issue, I usually just create an <Icon /> component that is essentially just wrapping the icon in a <span> so that I can apply the classes I need, just as a reference to what @gorangajic is talking about.\n``` cjsx\nReact = require \"react\"\nmodule.exports =\nclass Icon extends React.Component\n  @defaultProps = {\n    set: \"md\"\n  }\n  @propTypes = {\n    set: React.PropTypes.string\n    symbol: React.PropTypes.string.isRequired\n  }\nconstructor: ->\n    @state = {}\nrender: ->\n    icon = try\n             @icon = require \"react-icons/lib/#{@props.set}/#{@props.symbol}\"\n             <@icon />\n<span className=\"icon\">\n  {icon}\n</span>\n\n```\nUse like,\n``` cjsx\n # Default set is \"md\"\nOr specify a different set...\n\n``\n. I'm not entirely sure. I'm doing that in an Electron app, so maybe Node behaves differently inside of it.\n. I would go for aif you do implement this, because acan't be nested undertags. To solve this issue, I usually just create ancomponent that is essentially just wrapping the icon in a` so that I can apply the classes I need, just as a reference to what @gorangajic is talking about.\n``` cjsx\nReact = require \"react\"\nmodule.exports =\nclass Icon extends React.Component\n  @defaultProps = {\n    set: \"md\"\n  }\n  @propTypes = {\n    set: React.PropTypes.string\n    symbol: React.PropTypes.string.isRequired\n  }\nconstructor: ->\n    @state = {}\nrender: ->\n    icon = try\n             @icon = require \"react-icons/lib/#{@props.set}/#{@props.symbol}\"\n             <@icon />\n<span className=\"icon\">\n  {icon}\n</span>\n\n```\nUse like,\n``` cjsx\n # Default set is \"md\"\nOr specify a different set...\n\n```\n. I'm not entirely sure. I'm doing that in an Electron app, so maybe Node behaves differently inside of it.\n. ",
    "mvaivre": "@ezekg I try to do exactly the same as you, and I've a crazy error. Here is my code. \n``` coffeescript\nReact = require 'react'\n@IconButton = ( props ) ->\n  icon = try\n    Icon = require(\"react-icons/lib/md/#{props.icon}\")\n    \n  catch error\n    console.log(error)\n\n    {icon}\n  \nIconButton.propTypes =\n  icon: React.PropTypes.string # Name of md icon\n  fill: React.PropTypes.string\n  onClick: React.PropTypes.func\n```\nString interpolation with the icon name gives me Cannot find module 'react-icons/lib/md/save'\nIf I hardcode the path react-icons/lib/md/save without string interpolation, it works.\nDid you get this kind of problem before?\n. @ezekg: Ah, you're using electron! @Prinzhorn Right, of course. Thank you both for your answers.\nSo, it's seems hard to create a component like mine, that only takes the icon name to \"dynamically\" render an icon? Or do you have another solution to achieve that? \n. @Prinzhorn Alright, this needs a bit more work than expected, but that works! Thanks for your reactivity!\n. @ezekg I try to do exactly the same as you, and I've a crazy error. Here is my code. \n``` coffeescript\nReact = require 'react'\n@IconButton = ( props ) ->\n  icon = try\n    Icon = require(\"react-icons/lib/md/#{props.icon}\")\n    \n  catch error\n    console.log(error)\n\n    {icon}\n  \nIconButton.propTypes =\n  icon: React.PropTypes.string # Name of md icon\n  fill: React.PropTypes.string\n  onClick: React.PropTypes.func\n```\nString interpolation with the icon name gives me Cannot find module 'react-icons/lib/md/save'\nIf I hardcode the path react-icons/lib/md/save without string interpolation, it works.\nDid you get this kind of problem before?\n. @ezekg: Ah, you're using electron! @Prinzhorn Right, of course. Thank you both for your answers.\nSo, it's seems hard to create a component like mine, that only takes the icon name to \"dynamically\" render an icon? Or do you have another solution to achieve that? \n. @Prinzhorn Alright, this needs a bit more work than expected, but that works! Thanks for your reactivity!\n. ",
    "nasushkov": "I see that Babel 6 already supported. The problem was in caching of the previous version, maybe because the version number didn't change after the commit.\n. I see that Babel 6 already supported. The problem was in caching of the previous version, maybe because the version number didn't change after the commit.\n. ",
    "NogsMPLS": "i know its only been a day, but can we got a version cut/npm release? Had to take out react-icons temporarily because the current npm version doesn't have react 15 peerDependency and it's making some of my projects fail\n. i know its only been a day, but can we got a version cut/npm release? Had to take out react-icons temporarily because the current npm version doesn't have react 15 peerDependency and it's making some of my projects fail\n. ",
    "felipeleusin": "Ah thanks! My bad!\n. Ah thanks! My bad!\n. ",
    "andreypopp": "Awesome, thanks!\n. Awesome, thanks!\n. ",
    "abhishiv": "Hey @gorangajic\ndo you mind merging this?\n. Hey @gorangajic\ndo you mind merging this?\n. ",
    "bentatum": "@tehkaiyu I'm reviewing your changes.\nHere's the error I get when I run npm run build on a fresh install of your branch. Am I missing something?\n```\nfs.js:634\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\n                 ^\nError: ENOENT: no such file or directory, open '/Users/benjamintatum/Source/gorangajic/react-icons/di/alarm.js'\n    at Error (native)\n    at Object.fs.openSync (fs.js:634:18)\n    at Object.fs.writeFileSync (fs.js:1327:33)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:60:12\n    at Array.forEach (native)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:26:11\n    at f (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/once/once.js:25:25)\n    at Glob. (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/glob/glob.js:146:7)\n    at emitOne (events.js:96:13)\n    at Glob.emit (events.js:188:7)\n```\n. @sadorlovsky @gorangajic this happens when I run build:\n```\nfs.js:634\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\n                 ^\nError: ENOENT: no such file or directory, open '/Users/benjamintatum/Source/gorangajic/react-icons/di/android.js'\n    at Error (native)\n    at Object.fs.openSync (fs.js:634:18)\n    at Object.fs.writeFileSync (fs.js:1327:33)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:60:12\n    at Array.forEach (native)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:26:11\n    at f (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/once/once.js:25:25)\n    at Glob. (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/glob/glob.js:146:7)\n    at emitOne (events.js:96:13)\n    at Glob.emit (events.js:188:7)\n```\nam I doing something wrong?\n. Yes, will do.\n. @christophehurpeau been meaning to get to this. thanks.\n. this should be fixed via v2.2.0\n. @gorangajic I'd be happy to help.\n. @gorangajic see pull requests https://github.com/gorangajic/react-icons/pull/32, https://github.com/gorangajic/react-icons/pull/35 & https://github.com/gorangajic/react-icons/pull/63\n. I'd like give the docs an update. Looks like it's missing at least one icon set and I'd like to make it searchable. @gorangajic cool with you if I take that on?\n. I'll look into this asap.\n. @ammichael @alex-wilmer Is this still a problem? I can't seem to reproduce on my end.. Just seeing this. I'll publish soon.. This should be fixed as of v2.2.2.. Sorry to hear that. Can you show me how you're importing the icon?. Ok, so it works for you using react-icons/fa/beer but not react-icons/lib/fa/beer.. No worries. So, it works using react-icons/lib/fa/beer?. Ok, cool. Importing from the /lib/ path is actually the recommended way to import right now.\nPs. You're welcome! I use react-icons probably more than anyone!. Interesting, I see what you're saying. Thanks for pointing this out. I'm going to look into changing this.. We can totally discuss doing this, but for now you should be able to accomplish whatever you need to do using composition.\n<div class=\"ri ri-fa-star\">\n  <svg />\n</div>. @gorangajic thoughts on this?. I see what you mean. We'll keep it on the list.\nFor now, you could also create a component that does the wrapping once for you.\n// CustomIcon.js\nimport Icon from 'react-icons/lib/io/arrow'\nexport default ({ className, ...props }) =>\n  <div className={className}>\n    <Icon {...props} />\n  </div>\nand then use it like this:\n// App.js\nimport Icon from './CustomIcon'\nexport default () => <Icon className='ri ri-fa-star' />. I'm going to close this for now. Feel free to submit a PR to propose any desired functionality you may have and we'll consider it!. Working on finding ways to automatically update out-of-date icons. Let us know if you have any ideas, otherwise feel free to submit a PR. Thanks.. The size prop only accepts pixels as an integer value. The color prop should work, is it not for you?. We definitely do care. The update for this is in master. https://github.com/gorangajic/react-icons/blob/master/bin/create.js#L49\nI'll publish a new version soon.\n. No problem @jdeniau! Thanks for contributing. The update should be in v2.2.2.. Sorry about that. You should be all set now!. I just published the initial pass at this last night.\nhttp://react-icons.benjamintatum.com\nLet me know what you think of the search feature and if you have any additional ideas.\n. Good idea! I'll add that to the list.. this should work:\nimport * as FontAwesome from 'react-icons/lib/fa'. Ah, I see what you mean. Just console.log(FontAwesome) and it will show you all of the names of the icons. You should be able to use it in a tag like this: <FontAwesome.FaAlignCenter />.\nThe reason we import directly from the lib/icon source is because it reduces bundle size. If you import all from FontAwesome, you're importing hundreds of icons at once which is probably not ideal.. I'd like to find a way to automate the process of keeping these libs up to date. Let me know if you have any ideas. Otherwise, feel free to submit a pull request. Thanks.. Not sure what you changed here.. Oh, I see what you're doing. I caught the built files up to speed in the latest version (2.2.3). Closing this for now.. I think that's reasonable. Do you mind submitting a pull request?. \ud83d\ude0e  Cool, thanks! I'll give it a spin this afternoon and publish a new version if all checks out.. 2.2.3 resolves this. thanks again!. Looks good. Thanks.. Thanks for pointing this out. I was unaware of PureComponent. I think we should replace the base package and change the create script to use this as well.. thanks @mbrookes probably better we avoid the additional dependency.\n+1 for recompose though. love that lib.. shouldComponentUpdate? Never!. PureComponent would be better.. are you using the size attribute on these?\n<Icon size={15} />\n<Icon size={14} />. Which browser are you using? Do you have a codepen or some kind of live example I can take a look at?. I don't know if we have a programmatic way of updating libs, do we? @gorangajic . @benhollander interested in helping us write the scripts to update libs?. @tehkaiyu I'm reviewing your changes.\nHere's the error I get when I run npm run build on a fresh install of your branch. Am I missing something?\n```\nfs.js:634\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\n                 ^\nError: ENOENT: no such file or directory, open '/Users/benjamintatum/Source/gorangajic/react-icons/di/alarm.js'\n    at Error (native)\n    at Object.fs.openSync (fs.js:634:18)\n    at Object.fs.writeFileSync (fs.js:1327:33)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:60:12\n    at Array.forEach (native)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:26:11\n    at f (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/once/once.js:25:25)\n    at Glob. (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/glob/glob.js:146:7)\n    at emitOne (events.js:96:13)\n    at Glob.emit (events.js:188:7)\n```\n. @sadorlovsky @gorangajic this happens when I run build:\n```\nfs.js:634\n  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);\n                 ^\nError: ENOENT: no such file or directory, open '/Users/benjamintatum/Source/gorangajic/react-icons/di/android.js'\n    at Error (native)\n    at Object.fs.openSync (fs.js:634:18)\n    at Object.fs.writeFileSync (fs.js:1327:33)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:60:12\n    at Array.forEach (native)\n    at /Users/benjamintatum/Source/gorangajic/react-icons/bin/create.js:26:11\n    at f (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/once/once.js:25:25)\n    at Glob. (/Users/benjamintatum/Source/gorangajic/react-icons/node_modules/glob/glob.js:146:7)\n    at emitOne (events.js:96:13)\n    at Glob.emit (events.js:188:7)\n```\nam I doing something wrong?\n. Yes, will do.\n. @christophehurpeau been meaning to get to this. thanks.\n. this should be fixed via v2.2.0\n. @gorangajic I'd be happy to help.\n. @gorangajic see pull requests https://github.com/gorangajic/react-icons/pull/32, https://github.com/gorangajic/react-icons/pull/35 & https://github.com/gorangajic/react-icons/pull/63\n. I'd like give the docs an update. Looks like it's missing at least one icon set and I'd like to make it searchable. @gorangajic cool with you if I take that on?\n. I'll look into this asap.\n. @ammichael @alex-wilmer Is this still a problem? I can't seem to reproduce on my end.. Just seeing this. I'll publish soon.. This should be fixed as of v2.2.2.. Sorry to hear that. Can you show me how you're importing the icon?. Ok, so it works for you using react-icons/fa/beer but not react-icons/lib/fa/beer.. No worries. So, it works using react-icons/lib/fa/beer?. Ok, cool. Importing from the /lib/ path is actually the recommended way to import right now.\nPs. You're welcome! I use react-icons probably more than anyone!. Interesting, I see what you're saying. Thanks for pointing this out. I'm going to look into changing this.. We can totally discuss doing this, but for now you should be able to accomplish whatever you need to do using composition.\n<div class=\"ri ri-fa-star\">\n  <svg />\n</div>. @gorangajic thoughts on this?. I see what you mean. We'll keep it on the list.\nFor now, you could also create a component that does the wrapping once for you.\n// CustomIcon.js\nimport Icon from 'react-icons/lib/io/arrow'\nexport default ({ className, ...props }) =>\n  <div className={className}>\n    <Icon {...props} />\n  </div>\nand then use it like this:\n// App.js\nimport Icon from './CustomIcon'\nexport default () => <Icon className='ri ri-fa-star' />. I'm going to close this for now. Feel free to submit a PR to propose any desired functionality you may have and we'll consider it!. Working on finding ways to automatically update out-of-date icons. Let us know if you have any ideas, otherwise feel free to submit a PR. Thanks.. The size prop only accepts pixels as an integer value. The color prop should work, is it not for you?. We definitely do care. The update for this is in master. https://github.com/gorangajic/react-icons/blob/master/bin/create.js#L49\nI'll publish a new version soon.\n. No problem @jdeniau! Thanks for contributing. The update should be in v2.2.2.. Sorry about that. You should be all set now!. I just published the initial pass at this last night.\nhttp://react-icons.benjamintatum.com\nLet me know what you think of the search feature and if you have any additional ideas.\n. Good idea! I'll add that to the list.. this should work:\nimport * as FontAwesome from 'react-icons/lib/fa'. Ah, I see what you mean. Just console.log(FontAwesome) and it will show you all of the names of the icons. You should be able to use it in a tag like this: <FontAwesome.FaAlignCenter />.\nThe reason we import directly from the lib/icon source is because it reduces bundle size. If you import all from FontAwesome, you're importing hundreds of icons at once which is probably not ideal.. I'd like to find a way to automate the process of keeping these libs up to date. Let me know if you have any ideas. Otherwise, feel free to submit a pull request. Thanks.. Not sure what you changed here.. Oh, I see what you're doing. I caught the built files up to speed in the latest version (2.2.3). Closing this for now.. I think that's reasonable. Do you mind submitting a pull request?. \ud83d\ude0e  Cool, thanks! I'll give it a spin this afternoon and publish a new version if all checks out.. 2.2.3 resolves this. thanks again!. Looks good. Thanks.. Thanks for pointing this out. I was unaware of PureComponent. I think we should replace the base package and change the create script to use this as well.. thanks @mbrookes probably better we avoid the additional dependency.\n+1 for recompose though. love that lib.. shouldComponentUpdate? Never!. PureComponent would be better.. are you using the size attribute on these?\n<Icon size={15} />\n<Icon size={14} />. Which browser are you using? Do you have a codepen or some kind of live example I can take a look at?. I don't know if we have a programmatic way of updating libs, do we? @gorangajic . @benhollander interested in helping us write the scripts to update libs?. ",
    "olegyanchinskiy": "I'm using the webpack configuration above but getting a module error\nModule parse failed: /Users/oyachinskiy/Documents/ichnaea-root/web-      reporting/public/map/node_modules/react-icons/fa/beer.js Unexpected token (8:12)\nYou may need an appropriate loader to handle this file type.\nHere is the main portion of my webpack file \n```\nvar config = {\n    iconPath: 'node_modules/react-icons'\n};\nmodule.exports = {\nentry: './main.js',\noutput: {path: __dirname, filename: 'bundle.js'},\nmodule: {\n    loaders: [\n        {\n            test: /.jsx?$/,\n            loader: 'babel-loader',\n            exclude: /node_modules/,\n            query: {\n                presets: ['es2015', 'react']\n            }\n        },\n        {\n            test: /react-icons\\/(.)*(.js)$/,\n            loader: 'babel',\n            include: config.iconPath\n        },\n        {\n            test: /.scss/,\n            loader: 'style!css!sass'\n        }\n    ]\n   }\n};\n```\nIn the actual component I'm importing exactly as stated in the documentation.\nimport FaBeer from 'react-icons/fa/beer';\nAny idea what could be causing this? \n. Thanks guys! @supr-d @osmonus \n. @loicginoux Yes I was able to find a solution for this. I mostly followed what @osmonus provided above. \nHere is the relevant part of the loader: \n{\n            test: /.jsx?$/,\n            loader: 'babel-loader',\n            exclude: /node_modules/,\n            query: {\n                presets: ['es2015', 'react']\n            }\n        },\n        {\n            test: /(\\.js|\\.jsx)$/,\n            loader: 'babel',\n            include: [path.resolve(__dirname, './node_modules/react-icons/fa'), path.resolve(__dirname, './node_modules/react-icons/go')],\n            query: {\n                presets: ['es2015', 'react']\n            }\n        }\nSeparating all the paths seemed to fix the problem but there's probably a more elegant solution. Let me know if you have any more questions.\n. I'm using the webpack configuration above but getting a module error\nModule parse failed: /Users/oyachinskiy/Documents/ichnaea-root/web-      reporting/public/map/node_modules/react-icons/fa/beer.js Unexpected token (8:12)\nYou may need an appropriate loader to handle this file type.\nHere is the main portion of my webpack file \n```\nvar config = {\n    iconPath: 'node_modules/react-icons'\n};\nmodule.exports = {\nentry: './main.js',\noutput: {path: __dirname, filename: 'bundle.js'},\nmodule: {\n    loaders: [\n        {\n            test: /.jsx?$/,\n            loader: 'babel-loader',\n            exclude: /node_modules/,\n            query: {\n                presets: ['es2015', 'react']\n            }\n        },\n        {\n            test: /react-icons\\/(.)*(.js)$/,\n            loader: 'babel',\n            include: config.iconPath\n        },\n        {\n            test: /.scss/,\n            loader: 'style!css!sass'\n        }\n    ]\n   }\n};\n```\nIn the actual component I'm importing exactly as stated in the documentation.\nimport FaBeer from 'react-icons/fa/beer';\nAny idea what could be causing this? \n. Thanks guys! @supr-d @osmonus \n. @loicginoux Yes I was able to find a solution for this. I mostly followed what @osmonus provided above. \nHere is the relevant part of the loader: \n{\n            test: /.jsx?$/,\n            loader: 'babel-loader',\n            exclude: /node_modules/,\n            query: {\n                presets: ['es2015', 'react']\n            }\n        },\n        {\n            test: /(\\.js|\\.jsx)$/,\n            loader: 'babel',\n            include: [path.resolve(__dirname, './node_modules/react-icons/fa'), path.resolve(__dirname, './node_modules/react-icons/go')],\n            query: {\n                presets: ['es2015', 'react']\n            }\n        }\nSeparating all the paths seemed to fix the problem but there's probably a more elegant solution. Let me know if you have any more questions.\n. ",
    "eosmont": "@olegyanchinskiy \nMaybe not the more elegant solution, but it works if you include each path explicitly:\n{\n        test: /(\\.js|\\.jsx)$/,\n        loader: 'babel',\n        include: [path.resolve(__dirname, './node_modules/react-icons/fa'), path.resolve(__dirname, './node_modules/react-icons/go')],\n        query: { presets: ['es2015', 'stage-0', 'react'] }\n      }\n. @olegyanchinskiy \nMaybe not the more elegant solution, but it works if you include each path explicitly:\n{\n        test: /(\\.js|\\.jsx)$/,\n        loader: 'babel',\n        include: [path.resolve(__dirname, './node_modules/react-icons/fa'), path.resolve(__dirname, './node_modules/react-icons/go')],\n        query: { presets: ['es2015', 'stage-0', 'react'] }\n      }\n. ",
    "supr-d": "@olegyanchinskiy \nMaybe it wil help:\nnpm i --save-dev babel-plugin-transform-export-extensions\n. @olegyanchinskiy \nMaybe it wil help:\nnpm i --save-dev babel-plugin-transform-export-extensions\n. ",
    "tianjianchn": "I'd like to say that we should publish a package with es5-compatible(babel it first), so that no extra babel-ify for this package\n. I'd like to say that we should publish a package with es5-compatible(babel it first), so that no extra babel-ify for this package\n. ",
    "loicginoux": "@olegyanchinskiy I have the same issue with webpack, did you find a solution ?\n@supr-d solution does not work for me and I cannot include each path explicitly.\n. @olegyanchinskiy I have the same issue with webpack, did you find a solution ?\n@supr-d solution does not work for me and I cannot include each path explicitly.\n. ",
    "oldo": "I was able to resolve this issue by including the following loader in my webpack config:\n{\n    test: /react-icons\\/(.)*(.js)$/,\n    loader: 'babel',\n    query: {\n      presets: ['es2015', 'react']\n    }\n}. Thanks @cristyansv \nGood to know.. I was able to resolve this issue by including the following loader in my webpack config:\n{\n    test: /react-icons\\/(.)*(.js)$/,\n    loader: 'babel',\n    query: {\n      presets: ['es2015', 'react']\n    }\n}. Thanks @cristyansv \nGood to know.. ",
    "CerratoA": "To resume best solution is by @olegyanchinskiy \nBut take in consideration this:\nI was just copy pasting his code, but he is using fa and go.\nUpdate the code to resolve your needs, mine were material design = md\nso I used :\n{\n        test: /(\\.js|\\.jsx)$/,\n        loader: 'babel',\n        include: [path.resolve(__dirname, './node_modules/react-icons/md'), path.resolve(__dirname, './node_modules/react-icons/fa'))],\n        query: {\n            presets: ['es2015', 'react']\n        }\n      },. To resume best solution is by @olegyanchinskiy \nBut take in consideration this:\nI was just copy pasting his code, but he is using fa and go.\nUpdate the code to resolve your needs, mine were material design = md\nso I used :\n{\n        test: /(\\.js|\\.jsx)$/,\n        loader: 'babel',\n        include: [path.resolve(__dirname, './node_modules/react-icons/md'), path.resolve(__dirname, './node_modules/react-icons/fa'))],\n        query: {\n            presets: ['es2015', 'react']\n        }\n      },. ",
    "cristyansv": "In the new versions of webpack it is necessary to put the suffix -loader @oldo \n{\n    test: /react-icons\\/(.)*(.js)$/,\n    loader: 'babel-loader',\n    query: {\n      presets: ['es2015', 'react']\n    }\n}\n. In the new versions of webpack it is necessary to put the suffix -loader @oldo \n{\n    test: /react-icons\\/(.)*(.js)$/,\n    loader: 'babel-loader',\n    query: {\n      presets: ['es2015', 'react']\n    }\n}\n. ",
    "bkniffler": "I'd love to see a es5 compatible version of this, just like react-router!. I'd love to see a es5 compatible version of this, just like react-router!. ",
    "DaveyEdwards": "When dynamically loading icons like this is it inevitable to see long  compile times? \n\nI am using the babel-loader\n{\n      test: /react-icons\\/(.)*(.js)$/,\n      loader: 'babel-loader',\n      query: {\n        presets: ['es2015', 'react']\n      }\n    }. When dynamically loading icons like this is it inevitable to see long  compile times? \n\nI am using the babel-loader\n{\n      test: /react-icons\\/(.)*(.js)$/,\n      loader: 'babel-loader',\n      query: {\n        presets: ['es2015', 'react']\n      }\n    }. ",
    "zaygraveyard": "@gorangajic I too would be happy to help, but I can't actively maintain this project.\nSo if anyone needs help, let me know.\nPS: Sorry for the late reply.\n. @gorangajic I too would be happy to help, but I can't actively maintain this project.\nSo if anyone needs help, let me know.\nPS: Sorry for the late reply.\n. ",
    "i8wu": "Looks like there are some pretty old pull requests, is there still a need for more maintainers? o_o...\n. thanks @bentatum and @gorangajic for the hard work!\n. Looks like there are some pretty old pull requests, is there still a need for more maintainers? o_o...\n. thanks @bentatum and @gorangajic for the hard work!\n. ",
    "brillout": "\ud83d\udc4d @gorangajic would be awesome if you add collaborators, I love this lib\n. Just found it under fa-chain, didn't see that it had an alias\n. It's actually what I'm doing right now but wrapping each icon individually is a bit cumbersome.\nIt seems to me that there are more important tickets though, e.g. https://github.com/gorangajic/react-icons/issues/66\nThanks @bentatum for your work on this, I like this library a lot. Wow nice!\nAnd if you add a \"All Icons\" selection then it would be perfect for me.\nThanks so much!. just used your new interface to find react-icons/lib/io/ios-world-outline, thanks! Wouldn't have find it otherwise.. (using it again :)). and using it again:) any reason why it's not on http://gorangajic.github.io/react-icons/?. \ud83d\udc4d @gorangajic would be awesome if you add collaborators, I love this lib\n. Just found it under fa-chain, didn't see that it had an alias\n. It's actually what I'm doing right now but wrapping each icon individually is a bit cumbersome.\nIt seems to me that there are more important tickets though, e.g. https://github.com/gorangajic/react-icons/issues/66\nThanks @bentatum for your work on this, I like this library a lot. Wow nice!\nAnd if you add a \"All Icons\" selection then it would be perfect for me.\nThanks so much!. just used your new interface to find react-icons/lib/io/ios-world-outline, thanks! Wouldn't have find it otherwise.. (using it again :)). and using it again:) any reason why it's not on http://gorangajic.github.io/react-icons/?. ",
    "bryan": "Still active? . Still active? . ",
    "nwwells": "@gorangajic I'd be happy to help! Please add me as a Collaborator!. Yes you can, but from react-icons/lib/md. Superseded by #116, which has an associated PR. This should be closed.. Merged #117 . @gorangajic will you publish v2.2.6, please?. published as 2.2.6. @gorangajic I'd be happy to help! Please add me as a Collaborator!. Yes you can, but from react-icons/lib/md. Superseded by #116, which has an associated PR. This should be closed.. Merged #117 . @gorangajic will you publish v2.2.6, please?. published as 2.2.6. ",
    "suhaotian": ":+1: \n. :+1: \n. ",
    "planttheidea": "React 15.2 throws this warning now on all non-standard props that are passed to standard html elements (not ReactClasses). This appears to be an issue with react-icon-base, where fit is being passed to the svg as a boolean prop. I can't find anything online that says fit is a valid property for an svg element, is there a reason it is needed?\n. React 15.2 throws this warning now on all non-standard props that are passed to standard html elements (not ReactClasses). This appears to be an issue with react-icon-base, where fit is being passed to the svg as a boolean prop. I can't find anything online that says fit is a valid property for an svg element, is there a reason it is needed?\n. ",
    "ryan-hamblin": "Yes, an example explaining how to use props to adjust the size of icons would be great. +1 here. Yes, an example explaining how to use props to adjust the size of icons would be great. +1 here. ",
    "gromchen": "thank you\n. thank you\n. ",
    "Borisboky": "I'm getting Couldn't find preset \"stage-0\" relative to directory error. \nMy babelrc looks like : \n{\n  \"presets\": [\"react\", \"stage-0\", \"es2015\"],\n  \"plugins\": [\"transform-object-rest-spread\"]\n}\n. Ok. babel-preset-stage-0 wasn't installed. I installed it, and now I'm not getting the error, but the icons still not showing.\n. I'm getting Couldn't find preset \"stage-0\" relative to directory error. \nMy babelrc looks like : \n{\n  \"presets\": [\"react\", \"stage-0\", \"es2015\"],\n  \"plugins\": [\"transform-object-rest-spread\"]\n}\n. Ok. babel-preset-stage-0 wasn't installed. I installed it, and now I'm not getting the error, but the icons still not showing.\n. ",
    "MichaelIT": "maybe u miss size props. like:\n<IconHome size={30} />. maybe u miss size props. like:\n<IconHome size={30} />. ",
    "jaunesarmiento": "@kennetpostigo it's already in the library but not yet on the docs, it seems. Check out https://github.com/gorangajic/react-icons/tree/master/io\n. @kennetpostigo it's already in the library but not yet on the docs, it seems. Check out https://github.com/gorangajic/react-icons/tree/master/io\n. ",
    "alex-wilmer": "\"react-icons\": \"^2.2.1\",\n. \"react-icons\": \"^2.2.1\",\n. ",
    "ammichael": "I also have this problem. Sad to know it's been opened one month ago and still no answer =(\n. I also have this problem. Sad to know it's been opened one month ago and still no answer =(\n. ",
    "sandoche": "Hi ! I have the same problem, is there a way to fix it ? @ammichael @alex-wilmer . Hi @bentatum I found the issue:\nI had to remove \"react-icons\" from dependencies and add it to the devDependencies.\nSo for the webpack user the good solution is to do \nnpm install react-icons --save-dev. Hi ! I have the same problem, is there a way to fix it ? @ammichael @alex-wilmer . Hi @bentatum I found the issue:\nI had to remove \"react-icons\" from dependencies and add it to the devDependencies.\nSo for the webpack user the good solution is to do \nnpm install react-icons --save-dev. ",
    "owcc": "I have the same problem ... It looks no solution so far \ud83d\ude1e . I have the same problem ... It looks no solution so far \ud83d\ude1e . ",
    "mmahalwy": "I get this in production:\nindex.js:13 Uncaught TypeError: Cannot read property 'string' of undefined\n    at Object../node_modules/react-icon-base/lib/index.js (index.js:13)\n    at Q (es6.string.from-code-point.js:4)\n    at Object../node_modules/react-icons/lib/ti/plus.js (index.js:13)\n    at Q (es6.string.from-code-point.js:4)\n    at Object../app/containers/Tasks/index.js (index.js:66). I get this in production:\nindex.js:13 Uncaught TypeError: Cannot read property 'string' of undefined\n    at Object../node_modules/react-icon-base/lib/index.js (index.js:13)\n    at Q (es6.string.from-code-point.js:4)\n    at Object../node_modules/react-icons/lib/ti/plus.js (index.js:13)\n    at Q (es6.string.from-code-point.js:4)\n    at Object../app/containers/Tasks/index.js (index.js:66). ",
    "vinhlh": "damn it, it's react-icons/io/ios-locatoutline\n. damn it, it's react-icons/io/ios-locatoutline\n. ",
    "ericclemmons": "Font Awesome supports fa-spin:\n\nhttp://fontawesome.io/examples/\n\nDoes this still need to be done via custom CSS, or can className=\"fa-spin\" work?. Font Awesome supports fa-spin:\n\nhttp://fontawesome.io/examples/\n\nDoes this still need to be done via custom CSS, or can className=\"fa-spin\" work?. ",
    "martinratinaud": "I ended up using\n```\n.icon-spin {\n  -webkit-animation: icon-spin 2s infinite linear;\n          animation: icon-spin 2s infinite linear;\n}\n@-webkit-keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n@keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n```\nand used it through className. I ended up using\n```\n.icon-spin {\n  -webkit-animation: icon-spin 2s infinite linear;\n          animation: icon-spin 2s infinite linear;\n}\n@-webkit-keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n@keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n```\nand used it through className. ",
    "szjanos": "Thank you for you fast response!\nI've very new to SVG and I've spent hours to resize the google's clouduploud icon to 100px. Finally I ended up with this:\nexport default class CloudUpload extends Component {\n    render() {\n        return (\n            <svg width=\"100\" height=\"100\" viewBox=\"0 7 40 25\">\n               <g> <path d=\"m23.4 21.6h5l-8.4-8.2-8.4 8.2h5v6.8h6.8v-6.8z m8.9-4.9c4.3 0.3 7.7 3.9 7.7 8.3 0 4.6-3.7 8.4-8.4 8.4h-21.6c-5.5 0-10-4.5-10-10 0-5.2 3.9-9.4 8.9-10 2.1-3.9 6.3-6.8 11.1-6.8 6.1 0 11.1 4.3 12.3 10.1z\" />\n            </g></svg>\n        )\n    }\n}\n(If you have any better solution please tell me)\nAnd now when I am attaching it to the MorphReplace it drops all the attributes svg what I set... :(\nI have also tried it with the MorphReplaceResize but it will ignore the viewBox=\"0 7 40 25\" property so the cloud image is not at the middle of the viewport.\n<MorphReplaceResize width={100} height={100} viewBox={\"0 7 40 25\"}>\n        {this.increment % 2 === 1 ? <Hashtag  /> : <CloudUpload />}\n</MorphReplaceResize>\nCould you please help me out a little bit, cause I am kind a stucked...\nI also wanted to ask if there is a better way to get the icons from the react-icons or do I have to always copy the path and create a new React class?\n. The problem is that the Hashtag has a different size than CloudUpload, that's why I cannot use the same viewport.\nMy Hashtag class looks like this:\nexport default class Hashtag extends Component {\n    render() {\n        return (\n            <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n                <path d=\"m 72.4,3.5 c -2,0 -3.9,0 -5.9,0 -4.5,0 -7,3.4 -7.5,7.5 -0.9,7.3 -1.8,14.6 -2.7,21.9 2.5,-2.5 5,-5 7.5,-7.5 -7.8,-0.2 -15.6,-0.3 -23.3,-0.5 2.5,2.5 5,5 7.5,7.5 0.9,-7.1 1.8,-14.3 2.7,-21.4 0.5,-4.1 -3.8,-7.5 -7.5,-7.5 -2,0 -3.9,0 -5.8,0 -4.5,0 -7,3.4 -7.5,7.5 -0.9,7.1 -1.8,14.2 -2.7,21.3 2.5,-2.5 5,-5 7.5,-7.5 -7.1,-0.2 -14.3,-0.3 -21.4,-0.5 -3,-0.1 -6.8,2.3 -7.2,5.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 -0.7,4.8 1.9,9.4 7.2,9.5 7.2,0.2 14.4,0.3 21.5,0.5 -2.5,-2.5 -5,-5 -7.5,-7.5 -1,7.7 -1.9,15.4 -2.9,23.2 2.5,-2.5 5,-5 7.5,-7.5 -7.3,-0.2 -14.7,-0.3 -22,-0.5 -3,-0.1 -6.8,2.3 -7.2,5.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 -0.7,4.8 1.9,9.4 7.2,9.5 7.4,0.2 14.8,0.3 22.2,0.5 -2.5,-2.5 -5,-5 -7.5,-7.5 -0.9,7.3 -1.8,14.7 -2.8,22 -0.5,4.1 3.8,7.5 7.5,7.5 1.9,0 3.9,0 5.8,0 4.5,0 7,-3.4 7.5,-7.5 0.9,-7.3 1.8,-14.6 2.7,-21.9 -2.5,2.5 -5,5 -7.5,7.5 7.8,0.2 15.6,0.3 23.3,0.5 -2.5,-2.5 -5,-5 -7.5,-7.5 -0.9,7.1 -1.8,14.3 -2.7,21.4 -0.5,4.1 3.8,7.5 7.5,7.5 2,0 3.9,0 5.8,0 4.5,0 7,-3.4 7.5,-7.5 0.9,-7.1 1.8,-14.2 2.7,-21.3 -2.5,2.5 -5,5 -7.5,7.5 7.1,0.2 14.3,0.3 21.4,0.5 3,0.1 6.8,-2.3 7.2,-5.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 C 95.4,59.7 92.8,55.1 87.5,55 80.3,54.8 73.1,54.7 66,54.5 c 2.5,2.5 5,5 7.5,7.5 1,-7.7 1.9,-15.4 2.9,-23.2 -2.5,2.5 -5,5 -7.5,7.5 7.3,0.2 14.7,0.3 22,0.5 3,0.1 6.8,-2.3 7.2,-5.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 C 99.6,30.7 97,26.1 91.7,26 84.3,25.8 76.9,25.7 69.5,25.5 c 2.5,2.5 5,5 7.5,7.5 0.9,-7.3 1.8,-14.7 2.8,-22 0.6,-4.1 -3.7,-7.5 -7.4,-7.5 -4.5,0 -7,3.4 -7.5,7.5 -0.9,7.3 -1.8,14.7 -2.8,22 -0.5,4.1 3.8,7.4 7.5,7.5 7.4,0.2 14.8,0.3 22.2,0.5 -2.4,-3.2 -4.8,-6.3 -7.2,-9.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 2.4,-1.8 4.8,-3.7 7.2,-5.5 -7.3,-0.2 -14.7,-0.3 -22,-0.5 -4.5,-0.1 -7,3.5 -7.5,7.5 -1,7.7 -1.9,15.4 -2.9,23.2 -0.5,4.1 3.8,7.4 7.5,7.5 7.2,0.2 14.4,0.3 21.5,0.5 -2.4,-3.2 -4.8,-6.3 -7.2,-9.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 2.4,-1.8 4.8,-3.7 7.2,-5.5 -7.1,-0.2 -14.3,-0.3 -21.4,-0.5 -4.5,-0.1 -7,3.5 -7.5,7.5 -0.9,7.1 -1.8,14.2 -2.7,21.3 2.5,-2.5 5,-5 7.5,-7.5 -2,0 -3.9,0 -5.8,0 2.5,2.5 5,5 7.5,7.5 C 65.3,82 66.2,74.8 67.1,67.7 67.6,63.6 63.3,60.3 59.6,60.2 51.8,60 44,59.9 36.3,59.7 c -4.5,-0.1 -7,3.5 -7.5,7.5 -0.9,7.3 -1.8,14.6 -2.7,21.9 2.5,-2.5 5,-5 7.5,-7.5 -1.9,0 -3.9,0 -5.8,0 2.5,2.5 5,5 7.5,7.5 0.9,-7.3 1.8,-14.7 2.8,-22 0.5,-4.1 -3.8,-7.4 -7.5,-7.5 -7.4,-0.2 -14.8,-0.3 -22.2,-0.5 2.4,3.2 4.8,6.3 7.2,9.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 -2.4,1.8 -4.8,3.7 -7.2,5.5 7.3,0.2 14.7,0.3 22,0.5 4.5,0.1 7,-3.5 7.5,-7.5 1,-7.7 1.9,-15.4 2.9,-23.2 0.5,-4.1 -3.8,-7.4 -7.5,-7.5 -7.2,-0.2 -14.4,-0.3 -21.5,-0.5 2.4,3.2 4.8,6.3 7.2,9.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 -2.4,1.8 -4.8,3.7 -7.2,5.5 7.1,0.2 14.3,0.3 21.4,0.5 4.5,0.1 7,-3.5 7.5,-7.5 0.9,-7.1 1.8,-14.2 2.7,-21.3 -2.5,2.5 -5,5 -7.5,7.5 2,0 3.9,0 5.8,0 -2.5,-2.5 -5,-5 -7.5,-7.5 -0.9,7.1 -1.8,14.3 -2.7,21.4 -0.5,4.1 3.8,7.4 7.5,7.5 7.8,0.2 15.6,0.3 23.3,0.5 4.5,0.1 7,-3.5 7.5,-7.5 0.9,-7.3 1.8,-14.6 2.7,-21.9 -2.5,2.5 -5,5 -7.5,7.5 2,0 3.9,0 5.9,0 9.6,0 9.6,-15 -0.1,-15 z\" />\n            </svg>\n        )\n    }\n}\nMorphTransitionResize would do the thing but it ignores the first to property of the svg's viewbox so this way my cloud won't be in the middle.\nSo from the viewBox={\"0 7 40 25\"} the 7 number is ignored which would pull my icon to the middle of the viewBox.\nEDIT: I think I've found the solution. The viewbox and width/height has to be always in synchrone and I have to let the library resize the stuff for me. This means for me that I can't resize via viewbox or if I resize via viewbox I can't set the position of the path so it won't be in the middle of the SVG.\n. Thank you for you fast response!\nI've very new to SVG and I've spent hours to resize the google's clouduploud icon to 100px. Finally I ended up with this:\nexport default class CloudUpload extends Component {\n    render() {\n        return (\n            <svg width=\"100\" height=\"100\" viewBox=\"0 7 40 25\">\n               <g> <path d=\"m23.4 21.6h5l-8.4-8.2-8.4 8.2h5v6.8h6.8v-6.8z m8.9-4.9c4.3 0.3 7.7 3.9 7.7 8.3 0 4.6-3.7 8.4-8.4 8.4h-21.6c-5.5 0-10-4.5-10-10 0-5.2 3.9-9.4 8.9-10 2.1-3.9 6.3-6.8 11.1-6.8 6.1 0 11.1 4.3 12.3 10.1z\" />\n            </g></svg>\n        )\n    }\n}\n(If you have any better solution please tell me)\nAnd now when I am attaching it to the MorphReplace it drops all the attributes svg what I set... :(\nI have also tried it with the MorphReplaceResize but it will ignore the viewBox=\"0 7 40 25\" property so the cloud image is not at the middle of the viewport.\n<MorphReplaceResize width={100} height={100} viewBox={\"0 7 40 25\"}>\n        {this.increment % 2 === 1 ? <Hashtag  /> : <CloudUpload />}\n</MorphReplaceResize>\nCould you please help me out a little bit, cause I am kind a stucked...\nI also wanted to ask if there is a better way to get the icons from the react-icons or do I have to always copy the path and create a new React class?\n. The problem is that the Hashtag has a different size than CloudUpload, that's why I cannot use the same viewport.\nMy Hashtag class looks like this:\nexport default class Hashtag extends Component {\n    render() {\n        return (\n            <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n                <path d=\"m 72.4,3.5 c -2,0 -3.9,0 -5.9,0 -4.5,0 -7,3.4 -7.5,7.5 -0.9,7.3 -1.8,14.6 -2.7,21.9 2.5,-2.5 5,-5 7.5,-7.5 -7.8,-0.2 -15.6,-0.3 -23.3,-0.5 2.5,2.5 5,5 7.5,7.5 0.9,-7.1 1.8,-14.3 2.7,-21.4 0.5,-4.1 -3.8,-7.5 -7.5,-7.5 -2,0 -3.9,0 -5.8,0 -4.5,0 -7,3.4 -7.5,7.5 -0.9,7.1 -1.8,14.2 -2.7,21.3 2.5,-2.5 5,-5 7.5,-7.5 -7.1,-0.2 -14.3,-0.3 -21.4,-0.5 -3,-0.1 -6.8,2.3 -7.2,5.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 -0.7,4.8 1.9,9.4 7.2,9.5 7.2,0.2 14.4,0.3 21.5,0.5 -2.5,-2.5 -5,-5 -7.5,-7.5 -1,7.7 -1.9,15.4 -2.9,23.2 2.5,-2.5 5,-5 7.5,-7.5 -7.3,-0.2 -14.7,-0.3 -22,-0.5 -3,-0.1 -6.8,2.3 -7.2,5.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 -0.7,4.8 1.9,9.4 7.2,9.5 7.4,0.2 14.8,0.3 22.2,0.5 -2.5,-2.5 -5,-5 -7.5,-7.5 -0.9,7.3 -1.8,14.7 -2.8,22 -0.5,4.1 3.8,7.5 7.5,7.5 1.9,0 3.9,0 5.8,0 4.5,0 7,-3.4 7.5,-7.5 0.9,-7.3 1.8,-14.6 2.7,-21.9 -2.5,2.5 -5,5 -7.5,7.5 7.8,0.2 15.6,0.3 23.3,0.5 -2.5,-2.5 -5,-5 -7.5,-7.5 -0.9,7.1 -1.8,14.3 -2.7,21.4 -0.5,4.1 3.8,7.5 7.5,7.5 2,0 3.9,0 5.8,0 4.5,0 7,-3.4 7.5,-7.5 0.9,-7.1 1.8,-14.2 2.7,-21.3 -2.5,2.5 -5,5 -7.5,7.5 7.1,0.2 14.3,0.3 21.4,0.5 3,0.1 6.8,-2.3 7.2,-5.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 C 95.4,59.7 92.8,55.1 87.5,55 80.3,54.8 73.1,54.7 66,54.5 c 2.5,2.5 5,5 7.5,7.5 1,-7.7 1.9,-15.4 2.9,-23.2 -2.5,2.5 -5,5 -7.5,7.5 7.3,0.2 14.7,0.3 22,0.5 3,0.1 6.8,-2.3 7.2,-5.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 C 99.6,30.7 97,26.1 91.7,26 84.3,25.8 76.9,25.7 69.5,25.5 c 2.5,2.5 5,5 7.5,7.5 0.9,-7.3 1.8,-14.7 2.8,-22 0.6,-4.1 -3.7,-7.5 -7.4,-7.5 -4.5,0 -7,3.4 -7.5,7.5 -0.9,7.3 -1.8,14.7 -2.8,22 -0.5,4.1 3.8,7.4 7.5,7.5 7.4,0.2 14.8,0.3 22.2,0.5 -2.4,-3.2 -4.8,-6.3 -7.2,-9.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 2.4,-1.8 4.8,-3.7 7.2,-5.5 -7.3,-0.2 -14.7,-0.3 -22,-0.5 -4.5,-0.1 -7,3.5 -7.5,7.5 -1,7.7 -1.9,15.4 -2.9,23.2 -0.5,4.1 3.8,7.4 7.5,7.5 7.2,0.2 14.4,0.3 21.5,0.5 -2.4,-3.2 -4.8,-6.3 -7.2,-9.5 -0.3,1.9 -0.6,3.9 -0.8,5.8 2.4,-1.8 4.8,-3.7 7.2,-5.5 -7.1,-0.2 -14.3,-0.3 -21.4,-0.5 -4.5,-0.1 -7,3.5 -7.5,7.5 -0.9,7.1 -1.8,14.2 -2.7,21.3 2.5,-2.5 5,-5 7.5,-7.5 -2,0 -3.9,0 -5.8,0 2.5,2.5 5,5 7.5,7.5 C 65.3,82 66.2,74.8 67.1,67.7 67.6,63.6 63.3,60.3 59.6,60.2 51.8,60 44,59.9 36.3,59.7 c -4.5,-0.1 -7,3.5 -7.5,7.5 -0.9,7.3 -1.8,14.6 -2.7,21.9 2.5,-2.5 5,-5 7.5,-7.5 -1.9,0 -3.9,0 -5.8,0 2.5,2.5 5,5 7.5,7.5 0.9,-7.3 1.8,-14.7 2.8,-22 0.5,-4.1 -3.8,-7.4 -7.5,-7.5 -7.4,-0.2 -14.8,-0.3 -22.2,-0.5 2.4,3.2 4.8,6.3 7.2,9.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 -2.4,1.8 -4.8,3.7 -7.2,5.5 7.3,0.2 14.7,0.3 22,0.5 4.5,0.1 7,-3.5 7.5,-7.5 1,-7.7 1.9,-15.4 2.9,-23.2 0.5,-4.1 -3.8,-7.4 -7.5,-7.5 -7.2,-0.2 -14.4,-0.3 -21.5,-0.5 2.4,3.2 4.8,6.3 7.2,9.5 0.3,-1.9 0.6,-3.9 0.8,-5.8 -2.4,1.8 -4.8,3.7 -7.2,5.5 7.1,0.2 14.3,0.3 21.4,0.5 4.5,0.1 7,-3.5 7.5,-7.5 0.9,-7.1 1.8,-14.2 2.7,-21.3 -2.5,2.5 -5,5 -7.5,7.5 2,0 3.9,0 5.8,0 -2.5,-2.5 -5,-5 -7.5,-7.5 -0.9,7.1 -1.8,14.3 -2.7,21.4 -0.5,4.1 3.8,7.4 7.5,7.5 7.8,0.2 15.6,0.3 23.3,0.5 4.5,0.1 7,-3.5 7.5,-7.5 0.9,-7.3 1.8,-14.6 2.7,-21.9 -2.5,2.5 -5,5 -7.5,7.5 2,0 3.9,0 5.9,0 9.6,0 9.6,-15 -0.1,-15 z\" />\n            </svg>\n        )\n    }\n}\nMorphTransitionResize would do the thing but it ignores the first to property of the svg's viewbox so this way my cloud won't be in the middle.\nSo from the viewBox={\"0 7 40 25\"} the 7 number is ignored which would pull my icon to the middle of the viewBox.\nEDIT: I think I've found the solution. The viewbox and width/height has to be always in synchrone and I have to let the library resize the stuff for me. This means for me that I can't resize via viewbox or if I resize via viewbox I can't set the position of the path so it won't be in the middle of the SVG.\n. ",
    "0rvar": "Cool, thanks\n. Cool, thanks\n. ",
    "Ndpnt": "Same problem here\n. I temporary fixed it by removing the \"jsnext:main\": \"index.js\", from the package.json of react-icons-base.\n. For those who use webpack (as https://github.com/mxstbr/react-boilerplate), an other way to fix it it's by changing the order in mainFields, like this: \nmainFields: [\n      'browser',\n      'main',\n      'jsnext:main',\n],\nBut even if this fix will make it works, it should be temporary as it'll lose you tree shaking support for ES6 modules.\n. Same problem here\n. I temporary fixed it by removing the \"jsnext:main\": \"index.js\", from the package.json of react-icons-base.\n. For those who use webpack (as https://github.com/mxstbr/react-boilerplate), an other way to fix it it's by changing the order in mainFields, like this: \nmainFields: [\n      'browser',\n      'main',\n      'jsnext:main',\n],\nBut even if this fix will make it works, it should be temporary as it'll lose you tree shaking support for ES6 modules.\n. ",
    "josephcc": "Same problem here with react-icons 2.2.1, babel-core 6.7.2, and react 0.14.7\n. Same problem here with react-icons 2.2.1, babel-core 6.7.2, and react 0.14.7\n. ",
    "elwhitman": "@bsr203 @bentatum @gorangajic please update the react-icon-base to v 2.0.4, the import is not working and i can't deploy without shrinkwrapping but im using yarn now. @bsr203 @bentatum @gorangajic please update the react-icon-base to v 2.0.4, the import is not working and i can't deploy without shrinkwrapping but im using yarn now. ",
    "JonnyBoggon": "I am still getting the error 'Module parse failed: .../node_modules/react-icons/fa/beer.js Unexpected token (6:4) You may need an appropriate loader to handle this file type.' when using v2.2.2.\n. import FaBeer from 'react-icons/fa/beer';\nJust having that at the top of my page returns this error in my console:\nERROR in ./~/react-icons/fa/beer.js\nModule parse failed: [site-dir]/node_modules/react-icons/fa/beer.js Unexpected token (6:4)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected token (6:4)\n    at Parser.pp$4.raise ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:2221:15)\n    at Parser.pp.unexpected ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:603:10)\n    at Parser.pp$3.parseExprAtom ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1822:12)\n    at Parser.pp$3.parseExprSubscripts ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1715:21)\n    at Parser.pp$3.parseMaybeUnary ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1692:19)\n    at Parser.pp$3.parseExprOps ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1637:21)\n    at Parser.pp$3.parseMaybeConditional ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1620:21)\n    at Parser.pp$3.parseMaybeAssign ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1597:21)\n    at Parser.pp$3.parseFunctionBody ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:2098:24)\n    at Parser.pp$3.parseArrowExpression ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:2087:10)\n @ ./client/components/Main.js 39:12-42\nEdit: I have got it working by using import FaBeer from 'react-icons/lib/fa/beer';. Sorry, I have edited my comment above. It works using lib. . That is correct. I have it set up with multiple icons using the lib folder.\nThank you for your good work!. I am still getting the error 'Module parse failed: .../node_modules/react-icons/fa/beer.js Unexpected token (6:4) You may need an appropriate loader to handle this file type.' when using v2.2.2.\n. import FaBeer from 'react-icons/fa/beer';\nJust having that at the top of my page returns this error in my console:\nERROR in ./~/react-icons/fa/beer.js\nModule parse failed: [site-dir]/node_modules/react-icons/fa/beer.js Unexpected token (6:4)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected token (6:4)\n    at Parser.pp$4.raise ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:2221:15)\n    at Parser.pp.unexpected ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:603:10)\n    at Parser.pp$3.parseExprAtom ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1822:12)\n    at Parser.pp$3.parseExprSubscripts ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1715:21)\n    at Parser.pp$3.parseMaybeUnary ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1692:19)\n    at Parser.pp$3.parseExprOps ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1637:21)\n    at Parser.pp$3.parseMaybeConditional ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1620:21)\n    at Parser.pp$3.parseMaybeAssign ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:1597:21)\n    at Parser.pp$3.parseFunctionBody ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:2098:24)\n    at Parser.pp$3.parseArrowExpression ([site-dir]/node_modules/webpack/node_modules/acorn/dist/acorn.js:2087:10)\n @ ./client/components/Main.js 39:12-42\nEdit: I have got it working by using import FaBeer from 'react-icons/lib/fa/beer';. Sorry, I have edited my comment above. It works using lib. . That is correct. I have it set up with multiple icons using the lib folder.\nThank you for your good work!. ",
    "leeroybrun": "Added in #59 :) just waiting the merge & build.\n. Added in #59 :) just waiting the merge & build.\n. ",
    "rjjakes": "I needed simple line icons for my project. I checked out the slLiIcons branch in your repo and it failed to npm install (the root li directory and .js files were missing). \nThe sl-li branch worked fine though. Is this pull request correct?. I needed simple line icons for my project. I checked out the slLiIcons branch in your repo and it failed to npm install (the root li directory and .js files were missing). \nThe sl-li branch worked fine though. Is this pull request correct?. ",
    "kumarharsh": "Yes, I'm doing it myself.\ncss\n.icon {\n  color: blue;\n}\n.icon:hover {\n  color: red;\n}\njsx\nrender() {\n  ...\n  return (\n    <div>\n      <div className={css.icon}>  {/* using css-modules */}\n        <FaStar />\n      </div>\n      <div className=\"icon\">  {/* using simple css */}\n        <FaStar />\n      </div>\n    </div>\n  )\n}. Hey, I wanted to suggest that the default verticalAlign be left to baseline.\nUsecase\nWhen using with text, it's almost always the case that the icon should align with the baseline instead of the text-middle. And when putting inside buttons as a standalone icon, the button's css would already take case of alignment.\nCurrent Issues\nAnother issue with the putting default inline styles is that when using approaches different than CSS-in-JS, such as css-modules, I have to always write <IconEye style={{...}} />.\n. The icons are really beautiful. Would love to see this included in react-icons. Seems like the icons already have an svg source.. To add 'animated' icons, just add a css class on the JSX: <IconSpinner className=\"spin\" />\nIn my case, I'm adding custom icons by making the svg in Illustrator/Affinity, compressing it via SVGOMG, and then creating my own icon file, say 'Bulb.js', with the following content:\n```\nimport React from 'react';\nimport Icon from 'react-icon-base';\nconst IconBulb = (props) => (\n    \n        {my icon svg}\n    \n);\nexport default IconBulb;\n```. I think the new icons from v4.7 have not been added to this project.. http://exploringjs.com/es6/ch_modules.html#sec_importing-exporting-details. Yes, I'm doing it myself.\ncss\n.icon {\n  color: blue;\n}\n.icon:hover {\n  color: red;\n}\njsx\nrender() {\n  ...\n  return (\n    <div>\n      <div className={css.icon}>  {/* using css-modules */}\n        <FaStar />\n      </div>\n      <div className=\"icon\">  {/* using simple css */}\n        <FaStar />\n      </div>\n    </div>\n  )\n}. Hey, I wanted to suggest that the default verticalAlign be left to baseline.\nUsecase\nWhen using with text, it's almost always the case that the icon should align with the baseline instead of the text-middle. And when putting inside buttons as a standalone icon, the button's css would already take case of alignment.\nCurrent Issues\nAnother issue with the putting default inline styles is that when using approaches different than CSS-in-JS, such as css-modules, I have to always write <IconEye style={{...}} />.\n. The icons are really beautiful. Would love to see this included in react-icons. Seems like the icons already have an svg source.. To add 'animated' icons, just add a css class on the JSX: <IconSpinner className=\"spin\" />\nIn my case, I'm adding custom icons by making the svg in Illustrator/Affinity, compressing it via SVGOMG, and then creating my own icon file, say 'Bulb.js', with the following content:\n```\nimport React from 'react';\nimport Icon from 'react-icon-base';\nconst IconBulb = (props) => (\n    \n        {my icon svg}\n    \n);\nexport default IconBulb;\n```. I think the new icons from v4.7 have not been added to this project.. http://exploringjs.com/es6/ch_modules.html#sec_importing-exporting-details. ",
    "yi": "~~I met the exact same problem.~~ ~~spent hours update babel and modifying webpack config. no help.~~ \n~~I wonder why use require keywords rather then the standard import.~~\nIt seems to be a bug in the doc. the correct import statement should be:\nimport FaChevronLeft from 'react-icons/lib/fa/chevron-left'\n. ~~I met the exact same problem.~~ ~~spent hours update babel and modifying webpack config. no help.~~ \n~~I wonder why use require keywords rather then the standard import.~~\nIt seems to be a bug in the doc. the correct import statement should be:\nimport FaChevronLeft from 'react-icons/lib/fa/chevron-left'\n. ",
    "ravinggenius": "That's what I was trying, and I still get the error.\nMy issue is that the pre-built code inside ./lib is requiring 'react-icon-base', but it should be requiring 'react-icon-base/lib' instead. See https://gist.github.com/ravinggenius/6fd6776ed174c83a4d26912d2507fe42#file-500px-js-L20.\nA possible work-around is configuring WebPack to build ./node_modules, but that negates pre-building the icons in the first place and is slow.\n. That's what I was trying, and I still get the error.\nMy issue is that the pre-built code inside ./lib is requiring 'react-icon-base', but it should be requiring 'react-icon-base/lib' instead. See https://gist.github.com/ravinggenius/6fd6776ed174c83a4d26912d2507fe42#file-500px-js-L20.\nA possible work-around is configuring WebPack to build ./node_modules, but that negates pre-building the icons in the first place and is slow.\n. ",
    "jkomusin": "This change seems to break tools looking for a function name. Specifically for us, enzyme uses the function's name attribute to facilitate easier lookup of components rendered in a tree. \nWould you all be in support of the following instead:\n``\n        var component =\nimport React from 'react'\nimport Icon from 'react-icon-base'\nconst ${name} = props => (\n    \n${iconSvg}\n\n)\nexport default ${name}\n`\n```\nSo that the export is a named function? I'm more than happy to create a PR.. This change seems to break tools looking for a function name. Specifically for us, enzyme uses the function's name attribute to facilitate easier lookup of components rendered in a tree. \nWould you all be in support of the following instead:\n``\n        var component =\nimport React from 'react'\nimport Icon from 'react-icon-base'\nconst ${name} = props => (\n    \n${iconSvg}\n\n)\nexport default ${name}\n`\n```\nSo that the export is a named function? I'm more than happy to create a PR.. ",
    "nguyenmanh1507": "convert em to pixel and set color for parent el. ex:\nparent element font-size = 16px => 2em = 32px\n<div style={{color: 'blue'}}>\n  <MdStar size={32} />\n</div>. convert em to pixel and set color for parent el. ex:\nparent element font-size = 16px => 2em = 32px\n<div style={{color: 'blue'}}>\n  <MdStar size={32} />\n</div>. ",
    "NgKhanh": "Thanks, I did it. Thanks, I did it. ",
    "Kikobeats": "Thanks!\n. Thanks!\n. ",
    "jdeniau": "Oh OK I did not see that, I just looked in the Icon folder. Will test it\nwhen it's released.\nThank you for your project by the way\nLe 13 d\u00e9c. 2016 00:11, \"Benjamin Tatum\" notifications@github.com a \u00e9crit :\n\nWe definitely do care. The update for this is in master.\nhttps://github.com/gorangajic/react-icons/blob/master/bin/create.js#L49\nI'll publish a new version soon.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/gorangajic/react-icons/issues/69#issuecomment-266583565,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABVWxWZJwzx6rCK8kz_tuiu01_0JhwgTks5rHdSZgaJpZM4LLHUp\n.\n. Oh OK I did not see that, I just looked in the Icon folder. Will test it\nwhen it's released.\n\nThank you for your project by the way\nLe 13 d\u00e9c. 2016 00:11, \"Benjamin Tatum\" notifications@github.com a \u00e9crit :\n\nWe definitely do care. The update for this is in master.\nhttps://github.com/gorangajic/react-icons/blob/master/bin/create.js#L49\nI'll publish a new version soon.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/gorangajic/react-icons/issues/69#issuecomment-266583565,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABVWxWZJwzx6rCK8kz_tuiu01_0JhwgTks5rHdSZgaJpZM4LLHUp\n.\n. \n",
    "kjanoudi": "Just used http://react-icons.benjamintatum.com/all this is so cool!!. Just used http://react-icons.benjamintatum.com/all this is so cool!!. ",
    "EddyTheDove": "Sorry that is how to import... I know how to import. \nI want to use it.\nYou don't show any example to use it in a tag.. Thank you very much. That's indeed what I was looking for. Thanks. Sorry that is how to import... I know how to import. \nI want to use it.\nYou don't show any example to use it in a tag.. Thank you very much. That's indeed what I was looking for. Thanks. ",
    "anmlkh": "I have an error when tries to import an Icon in following ways\nimport { FaBeer } from 'react-icons/fa/';\nimport * as FontAwesome from 'react-icons/fa/';\n\nI think there should be something like export { default as Fa500px } from './500px';\n. I have an error when tries to import an Icon in following ways\nimport { FaBeer } from 'react-icons/fa/';\nimport * as FontAwesome from 'react-icons/fa/';\n\nI think there should be something like export { default as Fa500px } from './500px';\n. ",
    "metasean": "@andrii-m - I think the documentation is just problematic and needs to be corrected.  The following ways should work:\nnpm install react-icons --save then\nTo import all icons, and use a specific one:\n```\n// inside component's file\n// !!! note that the path differs from react-icons documentation !!!\nimport * as FontAwesome from 'react-icons/lib/fa'\n// inside the component's render function\n// note that you use dot notation within the JSX to pick the appropriate icon\n\n```\nTo import and use a single icon:\n```\n// inside component's file\nimport FaBeer from 'react-icons/lib/fa/beer'\n// inside the component's render function\n\n```. @andrii-m - I think the documentation is just problematic and needs to be corrected.  The following ways should work:\nnpm install react-icons --save then\nTo import all icons, and use a specific one:\n```\n// inside component's file\n// !!! note that the path differs from react-icons documentation !!!\nimport * as FontAwesome from 'react-icons/lib/fa'\n// inside the component's render function\n// note that you use dot notation within the JSX to pick the appropriate icon\n\n```\nTo import and use a single icon:\n```\n// inside component's file\nimport FaBeer from 'react-icons/lib/fa/beer'\n// inside the component's render function\n\n```. ",
    "carlodicelico": "Done!. Done!. ",
    "mbrookes": "@bentatum If you wish to maintains these as SFCs, but gain the benefit of pure rendering, you can wrap them with recompose/pure as we do for Material-UI svg-icons: https://github.com/callemall/material-ui/blob/master/src/svg-icons/action/accessibility.js. I\"m tempted to submit a PR to recompose to use PureComponent under the covers just for badness. :smiling_imp: . @bentatum If you wish to maintains these as SFCs, but gain the benefit of pure rendering, you can wrap them with recompose/pure as we do for Material-UI svg-icons: https://github.com/callemall/material-ui/blob/master/src/svg-icons/action/accessibility.js. I\"m tempted to submit a PR to recompose to use PureComponent under the covers just for badness. :smiling_imp: . ",
    "tracker1": "@bentatum I'm wondering if PureComponent vs. shouldComponent = () => false would be better...\n\nApparently PureComponent does more than just the shallow state/prop check, so may in fact be faster.. @bentatum yeah, was just looking into it, and updated my prior comment.. @bentatum I'm wondering if PureComponent vs. shouldComponent = () => false would be better...\n\nApparently PureComponent does more than just the shallow state/prop check, so may in fact be faster.. @bentatum yeah, was just looking into it, and updated my prior comment.. ",
    "oreqizer": "functional components will have a performance advantage over any class in the future, I would keep them that way. functional components will have a performance advantage over any class in the future, I would keep them that way. ",
    "gutenye": "Can use babel-transfrom-imports https://bitbucket.org/amctheatres/babel-transform-imports/commits/47089e91b767d4762b0d1f67551407e6d0c4e387. @zhenyulin I created a small library for it, please check https://github.com/gutenye/transform-imports-react-icons . Can use babel-transfrom-imports https://bitbucket.org/amctheatres/babel-transform-imports/commits/47089e91b767d4762b0d1f67551407e6d0c4e387. @zhenyulin I created a small library for it, please check https://github.com/gutenye/transform-imports-react-icons . ",
    "zhenyulin": "@gutenye How do you actually config the plugin for this library? I found it a bit tricky as it involves sub-module in the path, e.g. the md. @gutenye How do you actually config the plugin for this library? I found it a bit tricky as it involves sub-module in the path, e.g. the md. ",
    "noosxe": "I'm trying to use library without Create React App, using babel-loader in webpack2 config and it does not work anyway!\nInteresting to know what can be the cause.. Here are 2 examples from my use case, same icon with 2 different sizes applied:\nnormal quality - 14px\nbad quality - 15px. Exactly, I use that, normal quality appears to be only when using 14 size, everything else is a total mess. Same issue on chrome and firefox, don't have ready to send example, but will make one!. Not only that, some useful icons are definitely missing!. I'm trying to use library without Create React App, using babel-loader in webpack2 config and it does not work anyway!\nInteresting to know what can be the cause.. Here are 2 examples from my use case, same icon with 2 different sizes applied:\nnormal quality - 14px\nbad quality - 15px. Exactly, I use that, normal quality appears to be only when using 14 size, everything else is a total mess. Same issue on chrome and firefox, don't have ready to send example, but will make one!. Not only that, some useful icons are definitely missing!. ",
    "mergebandit": "For those of you who end up here and hadn't scrolled to the bottom of the readme, change your import to import FaPlus from 'react-icons/lib/fa/plus and it will work with CRA.\nThis issue can be closed. For those of you who end up here and hadn't scrolled to the bottom of the readme, change your import to import FaPlus from 'react-icons/lib/fa/plus and it will work with CRA.\nThis issue can be closed. ",
    "paniclater": "Confirmed this works with create react app as documented. Thank you for an amazing project!. Confirmed this works with create react app as documented. Thank you for an amazing project!. ",
    "nimaiwalsh": "Do you have to import each individual icon required using the above method in CRA?\nYou can't use import {MdCancel, MdChat, MdCheck} from 'react-icons/md'; as an example?\nBig kudos to all the project work by the way :). Do you have to import each individual icon required using the above method in CRA?\nYou can't use import {MdCancel, MdChat, MdCheck} from 'react-icons/md'; as an example?\nBig kudos to all the project work by the way :). ",
    "emilbruckner": "Normal behaviour here\nMore info?. That would be great!\n@benhollander What exactly do you mean by staying consistent? Shouldn't all icons be updated to their newest versions?\nThanks in advance. I don't really know a lot about that \u2026\nNot involved into this repo too much. Normal behaviour here\nMore info?. That would be great!\n@benhollander What exactly do you mean by staying consistent? Shouldn't all icons be updated to their newest versions?\nThanks in advance. I don't really know a lot about that \u2026\nNot involved into this repo too much. ",
    "dardub": "The material icons documentation recommends specific sizes for their icons. I've noticed the same issue before with the hamburger icon when using material icons on their own.\nSee here: http://google.github.io/material-design-icons/#sizing. The material icons documentation recommends specific sizes for their icons. I've noticed the same issue before with the hamburger icon when using material icons on their own.\nSee here: http://google.github.io/material-design-icons/#sizing. ",
    "ronaldroe": "fa-pencil-square-o\nIt's probably going to end up being the reason I'll have to switch back to using FA directly.. That is likely because you are importing every single icon in the FA stack. I'm a bit surprised that it's only 500k. It should be fine for development, but for production, you should only be importing the icons you are actually using.. fa-pencil-square-o\nIt's probably going to end up being the reason I'll have to switch back to using FA directly.. That is likely because you are importing every single icon in the FA stack. I'm a bit surprised that it's only 500k. It should be fine for development, but for production, you should only be importing the icons you are actually using.. ",
    "rasmusmilz": "fa-envelope-opened missing as well - is anyone going to update this ? . fa-envelope-opened missing as well - is anyone going to update this ? . ",
    "benhollander": "@gorangajic / @emilbruckner I can potentially help out with this.\nIs there a preferred method for generating the svg files? I want to make sure any that I create are consistent with what was there before as much as possible.. I mean consistency in the svg files/objects. I've tried generating svgs from the fontawesome font files, with slightly different results depending on how they're generated and which library was used.. There are a few options.\nThe easiest might be to use font-blast or something like it. I'll see if I can find some time in the next couple of weeks or so.. @gorangajic / @emilbruckner I can potentially help out with this.\nIs there a preferred method for generating the svg files? I want to make sure any that I create are consistent with what was there before as much as possible.. I mean consistency in the svg files/objects. I've tried generating svgs from the fontawesome font files, with slightly different results depending on how they're generated and which library was used.. There are a few options.\nThe easiest might be to use font-blast or something like it. I'll see if I can find some time in the next couple of weeks or so.. ",
    "mshibl": "try import {ICON_NAME} from \"react-icons/lib/md\"\nreplace md with any of the available libraries, this worked for me. try import {ICON_NAME} from \"react-icons/lib/md\"\nreplace md with any of the available libraries, this worked for me. ",
    "bsurai": "@mshibl  I can't use this approach with typescript :(. @mshibl  I can't use this approach with typescript :(. ",
    "jallier": "@bsurai and anyone else using typescript who is stuck, you can fix this if you declare your own .d.ts file. \nFor example using the /md/search icon:\nicons.d.ts\ndeclare module 'react-icons/lib/md' {\n  import * as React from 'react';\n  import { IconBaseProps } from 'react-icon-base';\n  export class MdSearch extends React.Component<IconBaseProps> { }\n}\nSave the file wherever the custom types go, then import in the component page using:\nimport { MdSearch } from 'react-icons/lib/md';\n This will only work for the specific icons, but if you wanted everything I guess you could just copy the definitions given from @types/react-icons and rename them to include /lib. \nNo idea if this is the correct way to approach it, but it seems to work for me. . @bsurai and anyone else using typescript who is stuck, you can fix this if you declare your own .d.ts file. \nFor example using the /md/search icon:\nicons.d.ts\ndeclare module 'react-icons/lib/md' {\n  import * as React from 'react';\n  import { IconBaseProps } from 'react-icon-base';\n  export class MdSearch extends React.Component<IconBaseProps> { }\n}\nSave the file wherever the custom types go, then import in the component page using:\nimport { MdSearch } from 'react-icons/lib/md';\n This will only work for the specific icons, but if you wanted everything I guess you could just copy the definitions given from @types/react-icons and rename them to include /lib. \nNo idea if this is the correct way to approach it, but it seems to work for me. . ",
    "dyst5422": "I GOTCHU FAM!\nicons-type-shim.d.ts\nts\ndeclare module 'react-icons/lib/md' {\n  export * from 'react-icons/md';\n}\ndeclare module 'react-icons/lib/fa' {\n  export * from 'react-icons/fa';\n}\ndeclare module 'react-icons/lib/ti' {\n  export * from 'react-icons/ti';\n}\ndeclare module 'react-icons/lib/go' {\n  export * from 'react-icons/go';\n}. I GOTCHU FAM!\nicons-type-shim.d.ts\nts\ndeclare module 'react-icons/lib/md' {\n  export * from 'react-icons/md';\n}\ndeclare module 'react-icons/lib/fa' {\n  export * from 'react-icons/fa';\n}\ndeclare module 'react-icons/lib/ti' {\n  export * from 'react-icons/ti';\n}\ndeclare module 'react-icons/lib/go' {\n  export * from 'react-icons/go';\n}. ",
    "sebastienbarre": "This was fixed last week in react-icon-base, which I believe is the framework react-icons leverages; unfortunately react-icons still uses 2.0.4.. This was fixed last week in react-icon-base, which I believe is the framework react-icons leverages; unfortunately react-icons still uses 2.0.4.. ",
    "DrYSG": "is this on the list of things to fix yet? Seems straightforward.. is this on the list of things to fix yet? Seems straightforward.. ",
    "tomkel": "@gorangajic can you merge this?. @gorangajic can you merge this?. ",
    "dalkir": "Any news about the merge of this?. Any news about the merge of this?. ",
    "mac-s-g": "please merge this!. is anyone else still seeing the error for production builds?\nI'm using react-icons 2.2.5 and still getting an error message.. please merge this!. is anyone else still seeing the error for production builds?\nI'm using react-icons 2.2.5 and still getting an error message.. ",
    "tayiorbeii": "Apologies, I meant this for our fork! \u262e\ufe0f . Apologies, I meant this for our fork! \u262e\ufe0f . ",
    "otorrillas": "Closing it, as it is already present in the Usage section. Closing it, as it is already present in the Usage section. ",
    "pgnewell": "This is corrected by adding lib/ to the import (and the selection does not work):\nimport MdIcon from 'react-icons/lib/md/edit';\n. This is corrected by adding lib/ to the import (and the selection does not work):\nimport MdIcon from 'react-icons/lib/md/edit';\n. ",
    "vjwilson": "Adding lib/ to the import string fixed this issue for us locally, but now, when our project builds on our Jenkins server, webpack can't find the code in lib/\nvar _plus = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"react-icons/lib/fa/plus\\\"\");\nbut if I use our webpack prod config to build locally, it does still find it:\nvar _plus = __webpack_require__(1364);\nIs there some setting we need to change either in our webpack config, or on the Jenkins server, so that yarn install on Jenkins will also install the lib/ folder?. Adding lib/ to the import string fixed this issue for us locally, but now, when our project builds on our Jenkins server, webpack can't find the code in lib/\nvar _plus = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"react-icons/lib/fa/plus\\\"\");\nbut if I use our webpack prod config to build locally, it does still find it:\nvar _plus = __webpack_require__(1364);\nIs there some setting we need to change either in our webpack config, or on the Jenkins server, so that yarn install on Jenkins will also install the lib/ folder?. ",
    "hmontes": "<FaCircleONotch className=\"spin\" />\nDon't work :(. <FaCircleONotch className=\"spin\" />\nDon't work :(. ",
    "marcellodesales": "I'm also looking for the spin or bounce of icons.\nEdit\n@hmontes \n\nI downloaded the css from found http://l-lin.github.io/font-awesome-animation/\nI could get any animation from the URL above working!\n\n<GoMicroscope size=\"25\" color=\"red\" className=\"ui right floated image faa-shake animated\" />. I'm also looking for the spin or bounce of icons.\nEdit\n@hmontes \n\nI downloaded the css from found http://l-lin.github.io/font-awesome-animation/\nI could get any animation from the URL above working!\n\n<GoMicroscope size=\"25\" color=\"red\" className=\"ui right floated image faa-shake animated\" />. ",
    "silvenon": "Yeah, this would be awesome.. Yeah, this would be awesome.. ",
    "mryechkin": "Agreed, it would be great to see this added.\nThe project I'm working on now requires AODA compliance, and this feature is one thing we're having some trouble with for actionable icons. Using a separate label with aria-hidden=\"true\" doesn't work as nicely with iOS voice assistance. Agreed, it would be great to see this added.\nThe project I'm working on now requires AODA compliance, and this feature is one thing we're having some trouble with for actionable icons. Using a separate label with aria-hidden=\"true\" doesn't work as nicely with iOS voice assistance. ",
    "iDVB": "I've got this ready to PR, other then I'm trying to figure out the proper unit tests to write for it.\n@gorangajic any suggestions on this PR? https://github.com/gorangajic/react-icon-base/pull/25\n. I've got this ready to PR, other then I'm trying to figure out the proper unit tests to write for it.\n@gorangajic any suggestions on this PR? https://github.com/gorangajic/react-icon-base/pull/25\n. ",
    "senycorp": "Hi,\ni had same problem with my own implementation and wanted to test this library. Same here. I did some hacks. First one was to wrap the icon by FontAwesomes . This was good but not really perfect. Then i figured out that the main problem was the viewBox value of the svg element. in asterisk.js. Setting it to '0 -2 40 40' solves it totally.\nI am not a svg expert and modifying library code is ugly but.... it solves the problem. Hi,\ni had same problem with my own implementation and wanted to test this library. Same here. I did some hacks. First one was to wrap the icon by FontAwesomes . This was good but not really perfect. Then i figured out that the main problem was the viewBox value of the svg element. in asterisk.js. Setting it to '0 -2 40 40' solves it totally.\nI am not a svg expert and modifying library code is ugly but.... it solves the problem. ",
    "duro": "I have tested this, and all works well under react 16, just need to clear up the peer dep warnings. I have tested this, and all works well under react 16, just need to clear up the peer dep warnings. ",
    "mshwery": "This would be great \u2013\u00a0I cannot upgrade to react@^16.0.0 until react-icons peerDependencies supports this as well.. Will be closed by https://github.com/gorangajic/react-icons/pull/117. Would be great to get this published on npm.. This would be great \u2013\u00a0I cannot upgrade to react@^16.0.0 until react-icons peerDependencies supports this as well.. Will be closed by https://github.com/gorangajic/react-icons/pull/117. Would be great to get this published on npm.. ",
    "Coobaha": "@aodinok you have replaced 15 with 16 version instead of adding it to the list.. @aodinok you have replaced 15 with 16 version instead of adding it to the list.. ",
    "aodinok": "16.0.0 now added to the list.\nP.S. Why do we need to specify exact versions of React in peer dependencies list at all?. 16.0.0 now added to the list.\nP.S. Why do we need to specify exact versions of React in peer dependencies list at all?. ",
    "mobbarley": "/node_modules/ was being ignored by default. Adding/lib to the import path solved the issue.. /node_modules/ was being ignored by default. Adding/lib to the import path solved the issue.. "
}