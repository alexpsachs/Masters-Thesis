{
    "rhysd": "I used them with global installing but local installing may be better.  Thanks.\n. Looks good.  Run scripts are more general than rake.  Thanks!\n. Thank for your report.\nHmm... \nIt seems a bug of Chromium on rendering GL enhanced canvas.  I'm not familiar with Chromium.  (The bug may be Electron specific.)\nAnyway, I want to confirm your Electron version.\n- 1. Start NyaoVim in debug mode\n$ NODE_ENV=debug nyaovim\n- 2. Show versions in console on DevTools\njavascript\nconsole.log(process.versions)\nNote: I'm also using OS X 10.11.1 and tried latest nyaovim package but it worked.\n. The output looks the same as mine.\nIs there any other error output in console?\n. Thank you for your analysis.  Very helpful :)\nI want to reproduce this because it is hard to fix a bug without reproducing.  If you can, could you show me your init.vim? (Of course after your work ;) )\n. Hi @gnujeremie,\nSorry for late response.\nI tried your config and somehow I could start your nvim (Note that this plugin seems to have been removed.)\nAlthough I don't install powerline yet,  at least all except for it is working well.\n\nAnd I have one question.\nDo you use 'patched' font for powerline?  Powerline requires a patched font for fancy line, I think.\nIf you're using such a font,  could you set other font to ~/.config/nyaovim/nyaovimrc.html as below?\nhtml\n    <neovim-editor id=\"nyaovim-editor\" argv$=\"[[argv]]\" font=\"Courier,monospace\" ></neovim-editor>\nPelase note that Courier can be other font.  Please try not-patched font.\n. Hi,\nNo problem.  I'm not in a hurry.\nThank you for your cooperation!\n. Thank you for your check.\nHmm... then I think this is a bug of Chromium (or Electron) side...\nFinally could you try disabling WebGL by modifying NyaoVim/main/main.js as below in your node_modules?\ndiff\n--- old.js  2015-12-29 01:11:18.000000000 +0900\n+++ main.js 2015-12-29 01:11:38.000000000 +0900\n@@ -52,6 +52,9 @@\n         width: 800,\n         height: 600,\n         useContentSize: true,\n+        webPreferences: {\n+            webgl: false\n+        }\n     });\n     win.once('closed', function () {\n         win = null;\nIt should disable GL in canvas.\n. Thank you for your check.\nIt must be a bug of Electron or Chromium, I think.  But I don't know which the bug is derived from... :confused:\n\nDo you think I should open a bug on Electron ?\n\nIt's very helpful for me.  If you do that,  could you please let me know the issue URL?\n. I posted a question in Atom forum.\nhttps://discuss.atom.io/t/gl-error-in-canvas/24058\n. @doenietzomoeilijk @adelarsq \nThank you for report.\nHmm... no one seems not to know resolution of this problem in forum and Google Search also could not help (Only old bug report was found).\nI think I should open an issue in atom/electron repository (probably today).\n. @marcj \nThanks.  Forum also seems not able to help this issue.  I'll report this to Electron repository.  Could you tell me what your app's Electron version is?\nAs @marcj said, this may depend on Chromium version.  I want to confirm the latest Electron (0.37.8) causes this error yet.\nCould anyone confirm this now?\n. @gnujeremie \nThank you!\n. I added a workaround for this and bumped up version to 0.0.18, which was suggested in https://github.com/atom/electron/issues/4594 .\nCould you create ~/.config/nyaovim/browser-config.json as below and start NyaoVim?  (Please ensure that NyaoVim version is 0.0.18.)\njson\n{\n  \"enable_canvas_workaround\": true\n}\n. @gnujeremie @adelarsq \nThank you for your confirmation.  Then I'll revert the workaround :sob:\nI have no idea for this issue...\n. @GnorTech \nThat's good news.  Thank you.  Do you know which Chromium version NW.js 0.14.0 is based on?\n. @GnorTech Thank you.  I confirmed that Electron v0.37.5 is based on Chromium 49.0.2623.75.  So I'll ping to this issue when Electron is based on Chromium 50.\n. Yes, latest Electron (v1.1.0) seems to use Chrome 50 :tada:\nI'll update tonight.\n. I updated Electron version in local environment and found behavior of KeyboardEvent.key seemed to be changed.  (I think this is the difference of Chrome 49 and Chrome 50).\nI need to update and fix neovim-component at first.\n. I fixed KeyboardEvent.key issue which prevented Electron dependency updating to v1.2.7 in neovim-component package.  Now neovim-component v0.6.0 is compatible with Electron v1.2.7 and I'll try to update NyaoVim's Electron dependency.  Sorry for making you wait so long.\n. @adelarsq I updated NyaoVim to v0.0.20 (Electron v1.2.7).  Could you try it?\n. @adelarsq \nPlease do not use sudo for npm install.  It tries to give unnecessarily strong permission to executable and causes an error.  Please use $ npm install -g nyaovim for installation on OS X.  I think unsafe-perm is not recommended in terms of security.\n. @adelarsq \n\nI did reinstall with npm install nyaovim.\n\nYou forgot adding -g :smiley: .  Please add -g ($ npm install -g nyaovim) for global installation.  In previous error you kindly reported,\n\n\u2570\u2500\u03bb sudo npm install -g nyaovim                                     0 < 21:58:03\n\nsudo is a problem causing the error, I guess.\n. @adelarsq \nHmm... that looks a problem depending on your environment... I recommend to install Node.js via Homebrew or Node.js version manager like nvm, nodebrew, and so on.\nAnyway, this issue was resolved :tada:\nThank you all who gave me information about this issue :smile:\n. Thanks!\n. \u5831\u544a\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\n\u78ba\u304b\u306b\u8d77\u52d5\u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u308b\u5834\u5408\u306f\u3046\u307e\u304f\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u306a\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u4ed6\u306e\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u304c\u3069\u3046\u3084\u3063\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u308b\u306e\u304b\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u306d\u2026\n. ref: https://github.com/neovim/neovim/issues/3901\n. I'll close this because\n- NyaoVim now disables swapfile by adding -n to command line option here.\n- And now g:nyaovim_version is defined by --cmd option hence users can see the variable instead of gui_running currently.\nTrue fix would come with change of UI handling in Neovim 0.2.\n. Thank you for your review :smile: \n. I implemented this in da6e731aaef73977db1b103d2b500eaef2f7c125 and confirmed with nyaovim-mini-browser plugin.  (I should add tests...)\n. I tried this on Ubuntu15.10 on VirtualBox on OS X 10.11.3, but I couldn't reproduce this.  If anyone know some information for this issue, please let me know it.\n. 0.0.10 fixed this\n. Thank you for your report.\nYes, in some case, I also confirmed that background color of scroll region was wrong.  I need to analyze notifications from Neovim while scrolling.\n(Because of end of year,  this may take some time to fix...)\n. I think this bug was fixed on neovim-component@0.2.5.\nCould you reinstall nyaovim package and confirm the fix?  (Please ensure neovim-component version is 0.2.5 in dependencies).\n. I knew Neo2 keyboard layout at first time... Looks nice!\nCould you tell me how you input special keys such as ~, :, ??  From your link, the keyboard layout seems to have some states and such special keys can be input on one of them.\nI guess they require some modifier key.  \nNyaoVim currently handles inputs which include modifier key (e.g. <C-l>) via keydown event and other non-modifier inputs (e.g. a, A, and so on) via input event of <input> element.  (source code)\nLet me explain with : input for example.\nIn normal keyboard, : requires shift + ; input.  It is not caught on keydown event because no modifier key (ctrl, alt) is pushed.  Then the input : is caught on input event and NyaoVim sends sequence : to Neovim process.\nBut if your keyboard includes modifier key on inputting :, NyaoVim wrongly catches it on keydown event.\nI think it is very helpful to show me the KeyboardEvent instance on keydown event when you input : on Chrome (or Chromium).\n. Thank you for description.\n\nSure, for example ? is inputted by holding CAPSLOCK + h or # + h (on an qwertz keyboard). Capslock or # function as an additional modifier keys, similar to LSHIFT and RSHIFT but enabling another layer (not capital letters, but special symbols). There is one more set of modifier keys: < and RIGHT_CMD enable numlock and cursor keys.\n\nHmm... CAPSLOCK and other keys used as modifier may cause this issue.  I want to know what they  send to browser.\n\nI am a backend developer, I am not familiar with debugging inside chrome. If you tell me how to get this data, I will provide it.\n\nOK, let me explain.\n1. Write below HTML as index.html\nhtml\n<body>\n<body>\n<script>\n  window.addEventListener('keydown', function (e) { console.log(e); });\n</script>\n2. Start http server\nsh\npython -m SimpleHTTPServer 1234\n3. Open http://localhost:1234 in Chrome and DevTools (Cmd + option + i or from tool bar menu).\n4. Send the key from keyboard\n5.Please show me the result in console of DevTools as below\n\n. Sorry for late response and thank you very much for these screenshots.  They're very helpful.\nIt seems that your keyboard sends altKey: true on those keys.  <neovim-editor> recognizes it as you sent modifier key.\nFor example, H sends altKey: true and key code 191 (char: \"\u00bf\") hence <neovim-editor> recognizes it as <A-\u00bf>.\nThis problem currently can't be solved because we can't know which keyboard is used.\nHowever,  there may still be possibility to fix this problem.  As new member of KeyboardEvent,  code will be added.  (MDN document)  If code is added, we can use it in stead of key code and no longer need to convert key code.  It means that hopefully any input can be caught in spite of keyboard layouts.\nUnfortunately KeyboardEvent.code is not implemented to Chromium 47 (latest Electron) yet, but Chrome 48 beta already seemed to implement it.  After Electron introducing Chromium 48,  we can try KeyboardEvent.code.\nSo I'll open this issue for that.\n. Thank you for the comment!  I already added the implementation which handles key input with KeyboardEvent.key.  I forgot notifying it in this issue..\n. No any other problem about Neo2 was reported for 1 week.  I think latest version already solved this issue.  (I can't confirm it because of not having the keyboard.)\nI'll close this window.  If anyone notice a problem about this issue, please ping me in this issue.  And then I'll reopen this issue.\n. @SirVer \nThank you for checking.  I'll investigate.\n. @SirVer \nI want to confirm more.  Could you tell me your environment (OS X? Linux? if Linux, which distribution? etc)?\n. Ah, sorry for duplicate question.  I missed the description.  And thank you for the answer, I got it.\n. I added new property disable-alt-key to <neovim-editor> component in ~/.config/nyaovim/nyaovimrc.html.  If this property is on, NyaoVim ignores alt key input so that keyboard which uses alt key as special modifier is available.  Please note that <A-x> mapping will be unavailable.\ne.g.\n``` html\n<neovim-editor\n  id=\"nyaovim-editor\"\n  argv$=\"[[argv]]\"\n  font=\"Monaco,monospace\"\n  font-size=\"14\"\n  line-height=\"1.5\"\n  disable-alt-key\n\n\n```\n\nTo use this, please reinstall nyaovim package and ensure version ofneovim-component package is 0.4.4.  (NyaoVim depends on it)\nI added this workaround because NyaoVim can't know which alt key or modifier key is pressed from altKey in KeyboardEvent.\n. Ah, thanks...\n. I fixed filling scroll region on scroll down. (Scrolling window down means scrolling buffer up, it's confusing a bit.)\nIn my environment, this is fixed in neovim-component@0.2.7.\nCould you check this after re-installing nyaovim?\n. What is the node version in your environment?\nNode.js grows rapidly.  Node.js packaged for Debian may be too old.  FYI, I'm using nvim to use latest node.js in Ubuntu.\n. If the npm error is resolved by newer node.js binary,  I think previous node version was too old.  Although I'm not sure, many node packages specify node.js version dependency.\n\nthe nyaovim command doesn't work anymore.\n\nI can say nothing from just 'doesn't work'.  Could you describe more detail?\n. Did you install nyaovim again?  npm is bundled with node.js.  So when you change the version of node.js,  you need to install package again.  You can check current installed package by npm -g list.\n. Thank you for confirmation!\n. How did you install node.js?\nThe reason why global install failed is that bin path for node packages is not in $PATH.  It seems that you installed node.js to /usr/local, but I think that sudo doesn't use /usr/local and uses old node binary (you can check the version with sudo node --version).  So sudo can't be used.\nIf you omit -g on install, npm installs package locally and $PATH doesn't work for it.  Please see npm manual.\n. @wsdjeg \nFrom your screenshot:\n\nsh:  1: node: not found\n\nDid you ensure node command exists?  Binary name of Node.js on Ubuntu may be nodejs because  it is too old.  You need to install latest Node.js in other way.\n. :smiley:\n. Thank you for your report.\nI added missing special keys at neovim-component@0.2.6.  I already checked function keys as below.\nvim\nnnoremap <F8> :<C-u>echo 'hello, function key'<CR>\nBut I don't have a keyboard which can send <Insert>, <PageUp> and <PageDown> now.  Could you check it after reinstalling nyaovim package?  Please be sure that neovim-component dependency is 0.2.6.\n. Thank you for confirming.\n. Could you show me screenshot?  \nAt least in my environment (OS X 10.11.1), NyaoVim in fullscreen window works well.\n. Thank you for screenshot.  It is very helpful.\nHmm... I think resizing on start up doesn't work.  NyaoVim should resize on resize event of window but it may not be able to catch the event...  I'll investigate more.  (I may need to install tiling window manager using vagrant.)\n. Yes, I noticed that.  But it has a reason.\nNeovim screen is rendered on <canvas> but cursor is a simple <div> DOM element.  Its width is changed following current mode of Neovim.  It means that the cursor element can't know the charactor under cursor.\nBut there may be good way to handle it and I could improve cursor (at least blinking cursor might be implemented).  So I remain this issue open.  If anyone has an idea for this, it is helpful.\n. > Just only setting the left border on the  would be better until a better solution is found imo.\nI think it is better to let users know which mode they are in.\n\nActually, if you could add a class for each different mode, rather than modifying directly the cursor style, it would allow for a better user control.\n\nThat sounds better and it's easy to add .normal-mode class.  But <neovim-editor> is a Web Componet.  It means that it is not possible to apply CSS directory outside the component.  I think CSS variable should be one of solutions.  I'll consider it.\n. Oh, ::shadow looks helpful (TR).  Thank you for your help.  Then it is easy to add .normal-mode class on normal mode and .insert-mode class on insert mode.  I'll implement it to <neovim-editor>!\n. @flyingfisch \nThank you for the suggestion.\nThe reason I selected <div> element for cursor because it is easy to move on screen.  If we render a cursor on <canvas> directly, it is necessary to remove current cursor before rendering it at next position to move it.  We need to restore the screen under the cursor.  The situation of screen under cursor depends on background color, font color and Neovim's mode (shape of cursor).\nHowever, it is not impossible and it is worth to try.\n. @romgrk @flyingfisch \nConsidering rendering information from Neovim, it is easier to use <div> than rendering on another <canvas>.  However, as @flyingfisch said, we can't get the character under the cursor because we already rendered the character in <canvas> and we can't extract it.\nAs @flyingfisch suggested, we can get the character under the cursor as an image data.  And we can invert the color of the image and paste it to another <canvas>.\nIt may require additional resource, but I think it doesn't affect application performance because cursor is tiny.\nAnyway, we should try and look the result :smile:\n. I'm going to try that in this weekend.\n. I tried first implementation for this in new-cursor branch of neovim-component :smile:\n\nIt looks working well.\nAt first, there was a little performance problem because cursor is actually moving throughout the screen at full throttle for rendering.  So I added 10ms delay before rendering cursor, and if cursor moves to next place while the delay, I made NyaoVim cancel previous cursor rendering.\nAfter adding some tests, I'd merge the branch into master.\nEDIT:\nIf you want to change the delay, cursor-draw-delay property is available. (0 means no delay).\n. Actual invert.  I want to reflect bg/fg colors but currently it is not implemented.\n. I'm implementing cursor blinking now.\n. @flyingfisch \nI tried guessing and swapping bg/fg colors under the cursor but it looks not good because of anti-aliased font rendering.\n. I introduced new cursor on NyaoVim 0.0.19 although it is not an actual fg/bg colors swapping.  But it is much better than previous.\nIf there is a good way to detect and swap fg/bg colors under the cursor, please ping me that (e.g. comment in this issue).  Then I'll reopen this issue and try it.\n. I think it is a problem of Neovim.  I'm not using Neovim in Windows and I don't know how to handle the error.  Could you ask this in Neovim community? (e.g. gitter)\n. Please note that :terminal works in Linux or OS X.  It may be Windows specific problem\n. Hmm... it may be performance issue.  I think there're too many rendering events from nvim and they're stacked.\n. @khalidchawtany \nSorry, I missed your comment because this issue has 'enhancement' tag :bow:\nHmm...,  could you check <C-d> causes the same issue?  Input with modifier and input without modifier are not handled in the same place.  (the former is handled with keydown event and the latter is handled with input event.)  I want to isolate the problem.\n. Scrolling screen causes redraw of entire window (e.g. <C-e>, <C-y>).  All rendering events are passed from Neovim via msgpack-rpc.  And it seems that the RPC is slow as long as I profiled in previous.  So we might improve msgpack5rpc package.\n. Could anyone confirm that <C-e> and <C-y> cause this issue?\nI think this is because the difference of processing key input.\nIf input is with modifier key, it is processed in keydown event (e.g. <C-e>).  But if input is without modifier key, it is processed in input event of <input> element (e.g. j).\nThis is because we can't catch compositionstart/compositionend events on keydown event.  I want to confirm this issue is derived from the difference.\n. @justinmk @tarruda \nThank you for the notice.  Although I'm not familiar with Node.js native extension (e.g. overhead on calling C from Node),  it looks very helpful.\nBTW, I wonder why msgpack-c was not adopted.\n. @justinmk \nThank you very much for the detailed information.  I understood :smiley:\n. @khalidchawtany\n\nc-y and c-e work perfectly. It is only hjkl keys that has to be released and pressed to repeat the key.\n\nThank you for your confirming!  I understood.\nI'm going to go to U.S. this week on business trip.  So the fix will come in the end of this week or beginning of next week.\n\nWhen I press and hold L I see a pop up suggesting another letter as shown in the screenshot below.\n\nHmm, are you installing some UI plugins? If not, I think it is derived from text field in <input> element  (e.g. Input Method).\n. Thank you for the comments.  I think the problem is that input without modifier (e.g. j, k) is caught at <input> text field.  And inputting to text field has some side effects.  They may make NyaoVim slow.\nI'm going to go to U.S. this week on business trip.  So let me check your comments more and try to fix this problem at this week-end or beginning of next week.\n. It should be set such as `:set lines=36' but currently can't.  This is because Neovim GUI frontend is started after Neovim is initialized.\nWe're discussing in https://github.com/neovim/neovim/issues/3901 and new frontend architecture will hopefully solve this issue in Neovim 0.2.\nAs a workaround, I think you can specify lines by calcurating it from height and font-size.\nhtml\n<!-- lines = 900 / 15 = 60 -->\n<neovim-editor height=\"900\" font-size=\"15\"></neovim-editor>\n\nThanks for this great app. :+1:\n\nTHank you very much :relaxed:.   I'm glad to hear that.\n. Sorry, I misunderstood line-heigt for 'height of lines'...\nCurrently we can't specify line-height, but we're discussing about it in https://github.com/rhysd/neovim-component/issues/13.\n. NyaoVim 0.0.11 supports line-height.  Please try it :)\nhttps://github.com/rhysd/NyaoVim#configure-gui-options\n. Hmm,  nyaovim-plugin directory includes Web Component HTML file.  It provides an abstracted component and users can put it to nyaovimrc.html freely with CSS.\nYou're supposing a plugin which contains only JavaScript code (it means no UI)?\n\nnpm install electron\n\nYeah, it's confusing.  But package name seemed to be already reserved...\n. > I ask the question because I find myself jumping back and forth through nyaovim, neovim-component,~/.config/nvim/nyaovim-plugin and ~/.config/nyaovim whenever I need to make some modification or configure some option.\nHmm, what are you writing to files in ~/.config/nvim/nyaovim-plugin directory?  I suppose nyaovim-plugin is for UI plugins, not for user configuration.  I'm thinking it's the best to make users edit ~/.config/nyaovim/nyaovimrc.html,  although currently it is not realized as you said in #22.\n\nI also find myself directly editing nyaovim and neovim-component files rather than writing my own separate config files.\n\nI think that's because NyaoVim lacks (many) configuration points yet.  I want to add more ability to configure NyaoVim.  If you have some requests/suggestions,  please write it as issue.  It's helpful :smile:\n\nOne last point, what about a runtime path for nyaovim?\n\nExactly the load path (require for Node.js, HTML and CSS) is not written in documentation.  I'll add them to documentation and notify you in this issue.\n. > I am perfectly aware of that, but it feels way cleaner to have all my nvim files in the same place, although I know it is not intended for that\u2026\nI can agree that.  But ~/.config/nvim is not available because it is used for Neovim and we can't put our config file there.  \n\nI do not like having an .html file as an entry point. I'd be much more comfortable with a .js.\n\nrequire() your JavaScript file is available via runtime API.  You can put your JS file at favorite place and load it from init.vim as below.\nvim\ncall nyaovim#require_javascript_file('/path/to/your/javascript_file.js')\nPlease note that I don't intend that JavaScript is used for configuration.\n. Additionally, you can use <script> tag in nyaovimrc.html.\nBecause there is no limit (e.g. CORS) unlike web application,  you can simply load any JavaScript file using <script>, I think.\nhtml\n<script src=\"file:///path/to/your/javascript_file.js\"></script>\nOf course relative path is also available.\nhtml\n<script src=\"javascript_file.js\"></script>\n. I'm glad to hear that!  I'll add new tip about <script>.\n. @romgrk \nCan we close this issue?\n. Thanks!\n. Could you tell me output of below command?\nsh\necho $XDG_CONFIG_HOME\nAnd if you can, could you tell me appData directory? How to try is:\n1. Open NyaoVim\n2. Open DevTools from menu item\n3. Select 'Console' tab\n4. Eval require('electron').remote.app.getPath('appData') in console\n. > Are you able to reproduce the behaviour?\nNo, I can't reproduce this yet.  I tried setting export XDG_CONFIG_HOME=~/.config, but the path to config directory was correctly ~/.config/nyaovim.  This may be because I don't have Linux environment temporarily and I tried it in OS X.\nThank you for your cooperation.\n\n\"/home/user/~/.config\"\n\nThis is weird... It should be \"/home/user/.config\", I think.  Are you setting $XDG_CONFIG_HOME in your shell config file?  If so, changing it as below may resolve this issue.\nsh\nexport $XDG_CONFIG_HOME=$HOME/.config\nIf changing to above config resolves this issue,  I think this is a bug of Electron's getPath() API  (~ is not considered).\n. I found the reason.  Please read XDG base directory spec below.\nhttp://standards.freedesktop.org/basedir-spec/latest/ar01s02.html\n\nAll paths set in these environment variables must be absolute.\n\nSo ~/.config is invalid for $XDG_CONFIG_HOME.  You should use $HOME/.config.\n. Sorry, I closed issue wrongly.\n\nNyaovim opens always as it does not read the config file\n\nHmm... you mean nyaovimrc.html is not loaded?\n. OK, thanks.\n\nNyaovim opens always as it does not read the config file.\n\nBTW, nvim/init.vim or nyaovimrc.html, which the 'config file' meant? (if you remember :smiley:)\n. Thank you for your suggestion :smile:  Yeah, I'm also considering this.\n\nfor width and height, maybe use localStorage? Therefore window dimension could be preserved through sessions.\n\nI think LocalStorage is not suitable because LocalStorage only can be referred from renderer process.  BrowserWindow is created in main process.  So, if we decided to use LocalStorage, the sequence would be\n1. Create browser window with show: false\n2. Set config values from renderer process via ipc\n3. Show window\nIt may makes start up slow.  In addition, we must prepare user interface to set config values to LocalStorage.\nI thought JSON config file might be suitable,  but it is also not good to add new another config file.  So I deferred to implement this feature until good idea comes...\n. Yes, I want to make configuration as easy as possible.  However,  it is a Electron app structure problem that window configuration can't be put in local storage or nyaovimrc.html.\nI thought about this and currently have 2 ideas.\n1. Add ~/.config/nyaovim/guiconf.json and users can write window configurations to it.  It can also include properties of <neovim-editor>.  So users can write all neovim editor config values to the JSON file.  But this increases the number of config files...\n2. Wait Neovim 0.2.  At 0.2, Neovim frontend architecture will be changed.  (The detail is https://github.com/equalsraf/neovim-qt/issues/50 .)  Although I don't know the architecture yet (because it's being implemented), I think below sequence will be available and users (hopefully) can write GUI configurations to init.vim directly as Vim script settings.  But I can't guess when Neovim 0.2 is released...\n   1.  nvim starts\n   2. nvim loads init.vim config\n   3. nvim spawns nyaovim frontend binary\n   4. nyaovim loads config from nvim process via rpc\n   5. nyaovim opens a window with the config\nAs you said, because NyaoVim is under development, it may be good to start implementation of 1. without waiting 2. (if 2. is added we can simply discard the JSON file loading architecture and shift to 2. idea).\n. I added this as browser-config.json feature.\n. I fixed some rendering problems at v0.0.12.  Could you update version to v0.0.12 or later and try again?\n. I misunderstood this issue.\nNyaoVim looks devicePixelRatio at start up and doesn't consider the case when device pixel ratio is changed.  In your case, devicePixelRatio is 1 at start-up, then it will be 2 when moved to Retina display.\n. It's expected behavior for now.  The same as other many command line tools, nyaovim is executed in foreground.  And & is available to execute NyaoVim in background.\nHowever, as you wondered,  we might detach the spawned Electron process as open -a.  In that case, error log may be lost.  But it is better to detach the process as default behavior and add --no-detach option.\n. Both gVim in Linux and MacVim in OS X detach an editor process.  And I think it is better for GUI apps to detach its process.  So I'll implement this and then close this issue.\n. In my environment, key repeat works well.  It may occur in specific environment.\nThank you @mikew for the help.\nAnd although this is just information, if you're using nyaovim in tmux, you need to use reattach-to-user-namespace.  Without it, Electron application causes a problem on keyboard input.\n. FocusGain has the same issue.  Neovim frontend should care them.\n. I shipped neovim-component 0.4.3 with fix for this issue.  Could you reinstall 'nyaovim' package with npm install -g nyaovim?\n. Hmm...  This looks similar to #10.  You're using OS X, aren't you?  Please describe your environment (OS, NyaoVim version).\n\nit results in some variation of the character \"\u00fc\".\n\nInput \"\u00fc\" is derived from OS X's keyboard feature.  Alt key is mapped to option key in OS X and option+{char} inputs the special characters.  But I added workaround for this issue.\nCould you please cooperate with me for debugging?\n1. Start NyaoVim with $ NODE_ENV=debug nyaovim.  (Chrome DevTools will also start.)\n2. Open 'console' tab of DevTools.\n3. Enter the input which causes this issue.\n4. Log includes 'Keydown event:' output and it shows keydown event for your input.  Could you take a screenshot of the event value?\n. Thank you for the screenshot, very helpful.\nHmm..., if the input <A-{> is correct, NyaoVim sends correct input to nvim.  Doesn't this problem occur in console nvim editor?\n. Let me ask a question about azerty layout.\nYou entered the + = } key with alt key in this picture and you intended to input } to Neovim, right?\n. > I haven't tested it with a normal azerty keyboard so i can't say if that works. I have to press to insert a curly bracket.\nYea, it's no problem.  What I want to solve is the problem you reported:wink:.  So please tell me about your environment because I don't have any azerty keyboard.\n- Which keys did you enter in your picture?\n- What input did you expect to Neovim?  (What is input to screen if it were in console nvim?) \n. OK, I understood this problem.\nInput to neovim must be { but actually it was <A-{>.\nCurrently I don't know how to fix this (similar to #10) because browser can't know the keyboard layout.  In case of console nvim, modifier key is handled correctly by terminal and nvim receives correct input {.\nI can add a config for workaround.  If the config is set to 'on', NyaoVim simply ignores Alt key.  But I don't know it is useful.\n. Thank you for the comment.\nOK, I'll try adding workaround option to solve this issue and #10.  If enabling the workaround, NyaoVim simply ignores alt key and keyboard can use it as their modifier key and <A-x> key mappings won't work.\n. I added new property disable-alt-key to <neovim-editor> component in ~/.config/nyaovim/nyaovimrc.html.  If this property is on, NyaoVim ignores alt key input so that keyboard which uses alt key as special modifier is available.  Please note that <A-x> mapping will be unavailable.\ne.g.\n``` html\n<neovim-editor\n  id=\"nyaovim-editor\"\n  argv$=\"[[argv]]\"\n  font=\"Monaco,monospace\"\n  font-size=\"14\"\n  line-height=\"1.5\"\n  disable-alt-key\n\n\n```\n\nTo use this, please reinstall nyaovim package and ensure version ofneovim-component package is 0.4.4.  (NyaoVim depends on it)\n. Yes, thank you for your confirmation!\n. I can't reproduce this.\n\nCould you describe the accurate sequence to reproduce?  Screenshot of the broken buffer is also helpful.\n. I could not still reproduce this.\n\nCould you tell me accurate input sequence for your screenshot?\nIf possible, please try it without your neovim configuration.\n$ nyaovim -u NONE -U NONE\n. And could you tell me the version of Neovim?  I'm using 0.1.2.\n. I could reproduce this issue only in my Linux environment (Ubuntu 14.04).\n\n. I investigated this.  As the result, Neovim's scroll region seems to be wrong. Let me describe.\nThis is a screenshot while investigation.\n\nAnd the event log while above is:\n\nI tried O under the text aaaaa after vertical split.  The red region is a scrolled area.  There was two scrolling events.\nAt first, only current buffer was scrolled.  This was correct because O only scrolls current buffer.\nAt second, entire window was scrolled.  This was incorrect, I think.  And no drawing event for window separater was sent and cursor position didn't match after the wrong scrolling.\nAs described above, OS X didn't reproduce this.  I watched the log in OS X and confirmed that the wrong second scrolling was not sent in OS X as below.\n\n. I tried this and it worked fine with below config.\nvim\nnnoremap <C-End> :echo 'C-End!!'<CR>\nI also checked the input log and it was correct:\n\nCould you tell me the version of NyaoVim and neovim-component packages?\n. Could you npm uninstall and npm install nyaovim again?\nIf it doesn't solve this issue,  please show me the debug log because I can't reproduce this.\n1. Start NyaoVim with $ NODE_ENV=debug nyaovim. (Chrome DevTools will also start.)\n2. Open 'console' tab of DevTools.\n3. Enter the input which causes this issue.\n4. Log includes 'Keydown event:' output and 'Input to neovim:' it shows keydown event for your input. Could you take a screenshot of the event value?\n. Thanks.\n\"Unidentified\" key is input as keydown event.  Browser (Electron is based on Chromium) seems to fail to identify Home/End/Insert keys.  I can't fix this...\nCould you tell me your OS?  I may be able to try.\n. Could you show the contents of KeyboardEvent?\n. Ah, sorry I missed it because of one line.\n. I saw the log.\nIt said charCode was 0 and which was 17 (17 means \"ctrl key only\").  So browser totally failed to catch the key combination and NyaoVim can't know which key was pressed, sorry.\nI think this is a bug of Chromium.  (I guess Chrome browser also fails to catch C-End in your environment.)\n. How did you install nyaovim? And please tell me Node.js version.\n. OK, I'll check on Ubuntu on VirtualBox.\nIt may not be good to install node modules to /usr/lib because of permission.  Could you check $ sudo nyaovim?\n. Hmm...\nThis problem looks derived from 'electron-prebuilt' package.  It creates path.txt file to its directory to notify the place of electron.  Is there path.txt in /usr/lib/node_modules/nyaovim/node_modules/electron-prebuilt?\n. In my environment (Ubuntu 14.04), installing locally and globally (/usr/local) didn't occur this problem.\n. > electron-tmp-download-26649-1456445817894\nAh, it looks to fail to download Electron binary.  Could you install nyaovim again?\n. Sorry for late response.  I tried this.\nJust after installing vim-airline, it worked.\n\nThen I installed vim-airline-theme.  I'm using lucius color scheme.  So I think lucius theme was detected by vim-airline-theme.\nAfter restarting NyaoVim, this issue was reproduced.\n\nBut when I specified :AirlineTheme base16_asches, it worked. So I think there is some color-specific problem.\n\nWe need to investigate further.\n. Some themes work but some other themes don't work.\n. vim-airline theme for gruvbox does not exist yet.  What vim-airline theme are you using? (:AirlineTheme tells you that.)\n. Oh, I see.\n. Note: it seems to fail to specify background color at status line at some colors\n. I looked into more.\n\nHere, the NORMAL is a text in status line with 'lucius' theme with vim-airline.\nNeovim sends 'change fg/bg color' event and then sends 'render text' event.  As described in above log, the 'change fg/bg color' event indicates #d7d7d7 as foreground color and #303030 as background color.  Neovim looks sending wrong fg/bg colors for status line.\n. Thank you for the information.\nThere is one more color-related issue in NyaoVim: #71 \nIt seems that Neovim lacks some color names: Issue. When the color is specified by the lacked color names, it may not reflect to UI.\n. Thank you for the investigation.\nBut I can say nothing before reproducing it because underlines are rendered correctly in my environment.  Could you tell me the Neovim configuration which can reproduce this issue?\n. @stsievert \nThank you for investigation :smile: \n. Let me ask a question.  Both <C-Space> and <C-@> don't work?  I want to know which part doesn't work properly.\n. NyaoVim seems to fail handling <C-@> and <C-Space>.  I'm investigating.\n. I fixed this in https://github.com/rhysd/NyaoVim/issues/35.  Please reinstall nyaovim to update neovim-component module.\n. I confirmed both <C-Space> and <C-@> seem to work in my environment with the latest version (neovim-component v0.6.1).\nIf you notice the bug is still there, please ping me here to reopen this issue.\n. please read CONTRIBUTING.md and use issue template\n. This is a keydown event instance on Ctrl+c.\n\nIt seems that key is wrong although keyCode is correct.\n. I didn't know that KeyboardEvent.key is unstable (Chrome49 doesn't still enable it).  We might use KeyboardEvent.code instead but it's painful a bit...\nOK, I'll add workaround\n. @maverick2000 \nI added a workaround at neovim-component@0.5.2.  Please uninstall nyaovim and install nyaovim again.\n. I can't reproduce this in my environment.\n\nCould you check below?\n- Can you reproduce this with nvim in terminal?\n- Could you try :set paste before pasting it with p?\n. @maverick2000 \nHm, could you show me exact sequence?  I need to reproduce it to fix.\n. @Iazel \nThank you for the report.  Yes, changing 1.2 to 1 looks good in your environment. But with other font, it doesn't work.\nThis is an example after your modification with a 'Monaco' font (OS X standard monospace font).\n\nCharacters drop in bottom.  And actually bottom of 'g' is under the line and garbage will remain after the 'g' is removed.\nSo I think you should adjust line height.  The best value of line-height is up to the font and NyaoVim can't determine.  I think you can use 1.5 for line-height.\nhtml\n    <neovim-editor\n      id=\"nyaovim-editor\"\n      argv$=\"[[argv]]\"\n      line-height=\"1.5\"\n    ></neovim-editor>\nCould you try this?\n. Hmm... OK, I need to check this in Ubuntu.\n. I stopped hiding menu automatically.  It prevents handling Alt key, I think.  And I also add show_menubar config to browser_config.json in order to hide menubar (not auto-hide).\n. Could you show me the output of $ nyaovim --version?  I also check released nyaovim package but it works well for me.\n. Ah... OK, I need to investigate further.  For reproducing, please let me know your node and npm version.\n. Yes, I also noticed this.  However, this is an restriction of Electron when using electron-prebuilt to launch an app.\nWe can change app icon in dock at runtime but can't change caption.  To change the caption,  we need to package NyaoVim.app rather than distributing as an npm package.\n. @haifengkao \nPlease add caption 'THIS IS NOT AN OFFICIAL RELEASE' to your release note in order to avoid confusion.\nIt's not possible to reduce size.  Please check electron-prebuilt release size.  We cannot reduce size less than it.\n. I closed this because it can't be fixed.\n. OK, I'll release next version, please be patient.  Please note that this application is on pre-alpha stage until 0.1.0 is released.\n. I need to add undercurl fix and some cleanup before release.\n. I'm not a native speaker.  So, I'm not sure that the changes in this PR are valid or not without any description.  Please help me by describing why the change was added.  Line comments in the diff is most helpful.  For example, you changed ===== title to # section header at line 1, but they are essentially the same and I didn't know why the change was added.\n. @sbdchd Thank you.  I understood :smile:\n. \ud83d\ude38 \n. As @idoo said, you can specify font face by attribute :)\n. <neovim-editor> renders screen using <canvas> so we can't specify font face with CSS.  Instead, attribute is available.\n. It looks a problem related to specific window manager.  The window looks to ignore the top toolbar.  #39 is another problem related to rendered font.\n. Hmm... It looks installing electron-prebuilt failed.  Could you check node_modules/electron-prebuilt/dist directory?  Does electron binary exist?\n. nyaovim package already moves to electron package because electron-prebuilt was deprecated. Could you please paste the log of npm install -g nyaovim? Installing electron downloads Electron binary at postinstall hook. If the hook failed, electron package would be broken. In the case, please remove cache (~/.npm) and reinstall nyaovim.. The error looks to occur here:\nhttps://github.com/rhysd/promised-neovim-client/blob/03ede48e03ae4505290512acbbad4252dc591e19/index.js#L93\nI'll try this on Windows8 machine (I don't have Windows10 machine).\n. I reproduced this although the error message is not the same:\nnvim.uiAttach is not a function\n. I noticed nvim in my Windows environment is too old.  After updating nvim to 0.1.5-dev, it looks to be working well.\n\nI don't know this is Windows10 related issue or already this issue had gone because I can't reproduce.\n. @argentum47 \nPlease upadte Neovim.  Currently nvim v0.1.5 is supported.\n. @fsworld009 \nCorrect.  NyaoVim now works well with nvim HEAD. Please update nvim.  This is because nvim v0.1.6 has some msgpack UI RPC API updates.  NyaoVim doesn't support nvim v0.1.5 because NyaoVim considers that clean code is more important than backward compatibility until nvim v1.0 is released.  \nIf you have some reason not to use nvim HEAD, please continue to use NyaoVim v0.0.20 until nvim v0.1.6 stable is released.\n. @htfy96 \nyeah, NyaoVim 0.0.21 does not support nvim v0.1.6.  It's expected behavior.\n. Could you see the console in DevTools?\nAnd your output says Electron version is 1.4.0.  I'm specifying v1.3.5 in package.json.  Did you install 'electron' or 'electron-prebuilt' package by your hand?\n. @fsworld009 \nOh, I need to specify ~1.3.5 but actually ^1.3.5...  Thanks.\n@szsdk \n1. Please open DevTools window with 'Menu' -> 'View' -> 'Open Developer Tools'\n2. Find 'console' tab and click it, then the message log will be shown in the pane.\n. I still can't reproduce this with MacBook Pro or iMac or MacBook Air...\nCan anyone help with below command?\n$ NODE_ENV=debug nyaovim -u NONE --no-detach\nIt does reproduce this?  If so, is anything output in shell, in console in DevTools or in dialog?\n. @jordwalke I'm sorry, I mistook the issue number... It was for #57.\n. @raacker I guess you're using nvim v0.1.5.  NyaoVim 0.0.21 supports nvim v0.1.6 only.  Please update nvim.  As you said, API was changed while v0.1.5 -> v0.1.6.\n. @raacker \nHmm... when did you build nvim?  It seems that API changes were added after version bumping.  \nI updated my nvim with brew install --HEAD neovim --with-release today and it works. Could you check with the latest nvim?  My nvim --version says:\n```\nNVIM v0.1.6-104-g22dfe69\nBuild type: Release\nCompilation: /usr/local/Homebrew/Library/Homebrew/shims/super/clang -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DNDEBUG -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -I/tmp/neovim-20160928-3886-13no3u/build/config -I/tmp/neovim-20160928-3886-13no3u/src -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/usr/local/opt/gettext/include -I/usr/include -I/usr/include -I/tmp/neovim-20160928-3886-13no3u/build/src/nvim/auto -I/tmp/neovim-20160928-3886-13no3u/build/include\nCompiled by rhysd\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui    \nFor differences from Vim, see :help vim-differences\n  \u30b7\u30b9\u30c6\u30e0 vimrc: \"$VIM/sysinit.vim\"\n   \u7701\u7565\u6642\u306e $VIM: \"/usr/local/Cellar/neovim/HEAD-22dfe69/share/nvim\"\n\n``\n. @jordwalke I also tried with the same version of NyaoVim, Electron andnvimon iMac (non-Retina) and MacBook Pro (Retina), then I still can't reproduce this issue...\n. @jordwalke Yes, as I commented in above, mynvim --versionandnyaovim --versionare\n-nvim --version`\n```\nNVIM v0.1.6-104-g22dfe69\nBuild type: Release\nCompilation: /usr/local/Homebrew/Library/Homebrew/shims/super/clang -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DNDEBUG -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -I/tmp/neovim-20160928-3886-13no3u/build/config -I/tmp/neovim-20160928-3886-13no3u/src -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/tmp/neovim-20160928-3886-13no3u/deps-build/usr/include -I/usr/local/opt/gettext/include -I/usr/include -I/usr/include -I/tmp/neovim-20160928-3886-13no3u/build/src/nvim/auto -I/tmp/neovim-20160928-3886-13no3u/build/include\nCompiled by rhysd\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui    \nFor differences from Vim, see :help vim-differences\n  \u30b7\u30b9\u30c6\u30e0 vimrc: \"$VIM/sysinit.vim\"\n   \u7701\u7565\u6642\u306e $VIM: \"/usr/local/Cellar/neovim/HEAD-22dfe69/share/nvim\"\n\n``\n-nyaovim --version`\nNyaoVim version 0.0.21\n  electron : 1.4.1\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\n. Let me organize 'white screen' issue here.  There are two kinds of error in this issue.\n- Renderer process does not work\n  - DevTools can't be launched because renderer is not running\n  - This is a main issue of this issue (@jordwalke and others reported)\n- Cannot read property 'prototype' error\n  - DevTools reports an error in console\n  - It occurs because of Neovim's msgpack UI API\n  - @raacker reported\nSo, @raacker, if you can reproduce the 'Cannot read property' error even if updating the latest version (v0.1.6-104-g22dfe69), could you create a new issue for it?\n. I took a screencast gif.  As below, it works in my environment...\n\n. @raacker Thank you so much for your confirmation.  So some v0.1.6 doesn't work and need to be updated to the latest... I understood :smile:\n. Oh, I didn't get the log.  It may be the root cause.  Could you please try below?\n1. $ rm -r ~/Library/Application\\ Support/Nyaovim\n2. Start NyaoVim\n. > It did not get rid of the white screen problem though.\nThank you for your try.  Hmm... $ELECTRON_ENABLE_LOGGIN may be helpful.  Could you try below?\n$ ELECTRON_ENABLE_LOGGIN=yes NODE_ENV=debug nyaovim -u NONE\nIt may dump many logs to stderr.\n\nHow do I try a different version of Electron to see if it works?\n\nI guess:\n1. $ rm -r ~/Library/Application\\ Support/Nyaovim and ensure that nayovim is uninstalled.\n2. $ npm install -g electron-prebuilt@x.y.z (x.y.z is a version number you want to use)\n3. $ npm install -g nyaovim\n. > ELECTRON_ENABLE_LOGGIN=yes NODE_ENV=debug nyaovim -u NONE did not help either.\nYou mean no log is output to stderr?\n\nI will try to install electro 3.5.1\n\nMaybe 1.3.5? :smiley:\n. @jordwalke \nThank you for confirmation. Hmm... So it's not dependent on Electron version. Anyway, we need to solve this for Electron v1.4.1 because we can't stay in v1.3 to catch up the latest Electron updates.\n@sinkuu \nThank you for confirmation.\n\nIsn't the correct env var is ELECTRON_ENABLE_LOGGING?\n\nOh, you're absolutely right.\n$ ELECTRON_ENABLE_LOGGING=yes NODE_ENV=debug nyaovim -u NONE --no-detach\nis correct to gather all debug information for now.\nWhen ELECTRON_ENABLE_LOGGING=yes is specified and renderer process correctly runs, console logs in renderer process are dumped to stderr of main process.  So silent output means that renderer process doesn't start properly...\n. @sinkuu \nNice! Thank you so much for your debug.\nI also could reproduce this when removing browser-config.json.\nI'll fix this issue and release nyaovim v0.0.22 tonight!\n. > It still flashes a white screen\nYou mean that white screen at first, then it shows the screen after enter key?  If so, I guess some messages are echoed by nvim (please check :message).  Because of Neovim's UI architecture, it's not possible to get messages echoed before process attaching to UI API.\n. I think it's just a loading time.  Electron is a customized Chromium browser.  So it takes a bit to start up renderer process. In addition, NyaoVim spawn nvim process and attaches to the process for msgpack API.  After all UI events are sent from nvim, NyaoVim finally paints UI to the screen.\n. NyaoVim's entry point is a HTML file (~/.config/nyaovim/nyaovimrc.html).  So at least we can change its background color with CSS before nvim process starts (although JavaScript is needed to obtain fg/bg colors of screen).\n. I fixed this bug and published new version of NyaoVim.  Please update and confirm the fix.\nThank you so much for reporting, confirming and debugging :smile:\n. > Pressing F12 or ctrl-shift-i has no visible effect.\nYes, they are sent to Neovim and not handled in Electron app.\nIf you can't access to menu, easiest way is to launch this app with debug mode.\n$ NODE_ENV=debug nyaovim\nIt opens DevTools at start.  I'm not sure but adding :ToggleDevTools command to NyaoVim's runtime may be handy.\n. @ukch @htfy96 \nI fixed this in neovim-component v0.6.2.\nplease reinstall nyaovim package to reflect the fix.\n\n. In Linux, how to show icon is depending on desktop environment (e.g. in you environment, it looks GNOME).  So, it's hard to setup an app icon in all environments because I don't know how to do that.\n. Nice! I'll add icon to window.\n. I tried this and confirmed that NyaoVim sends <C-Left> and <C-Right> to nvim properly.  And cursor goes forward/backward by word properly in my environment.  From 0.0.19, some improvements were added related to key input handling.  So this issue may have gone.\nI'll close this because I could not reproduce it.  But if there is still this issue, please ping me by commenting here or creating new issue.  Thank you for your report.\n. Nice catch.  I didn't notice this because it depends on desktop environment.\n. This fix will be included in v0.0.21\n. I already merged you PR and published new version package.  Reinstalling nyaovim should fix this.  At least in my OS X environment it works well.  Thank you for your report and PR.\n. Sorry for confusing.  'Copy' or 'Cut' or something in app menu does not cooperate with Neovim itself.  We need to use Neovim's copy/paste mappings such as y for copying or p for pasting.\n. @haifengkao Thank you for the patch! I'll review.\n. This change will be included in next release.\n. Oh, current Polymer no more needs $= for data biinding.\nhttps://www.polymer-project.org/1.0/docs/devguide/data-binding\nI didn't know that.\nThanks :smile:\n. Thank you for the contributions!  I'll review.\n. @haifengkao \nCould you use client.evel() rather than client.commandOutput() like client.eval('mode()') ?  It's more suitable for evaluating Vim script expression because it can receive the value directly and does not need trim().\n. > client.eval('mode()') doesn't work for visual block mode.\nI think it's because the returned value is not \"^V\" string in Vim script.  It's actual ^V (ctrl + 'v') one character so we need to check it via ch.charCodeAt({the char code for Ctrl+v}).\n. According to :echo char2nr(\"\\<C-v>\"), we can detect ^V by below code:\njavascript\nif (ch.charCodeAt(0) === 22) {\n  // When visual block mode...\n}\n. Nice work! Thank you \ud83d\ude04 \n. You're right.  Currently we ignore the undercurl font attribute from Neovim.\nhttps://github.com/rhysd/neovim-component/blob/92df80862d42e7fe1062b39f1c2b81e22d3a622f/src/neovim/screen.ts#L214\nWe need to fix this (I need to know how to draw undercurl line on <canvas/>).\n. \nI fixed this in https://github.com/rhysd/neovim-component/commit/f6160ee7f40328db3a3e2e9c510b71776107e887.\n. I think it's normal behavior for Vim but it's also fact that it's inconvenient.  OK, I'll introduce your implementation here.  Thank you.\n. Could you tell me which font you're using.  And please ensure that both 'Expected Behavior' case and 'Actual Behavior' case introduce the same font.  It looks that the appearance of * is different in the cases.\n. Thank you for your report.  I'll investigate.\n. Nice catch!  Fix for this issue may also fix #33.\n. @haifengkao Could you tell me your colorscheme name?\n. I investigated this.  But actually this looks bug of neovim.\nFrom neovim, all colors are sent with 0xrrggbb format number.  So all color names should be converted into RGB format number before sending via RPC.  But actually it is not refrected.  Below is a log when sending \"//\" on filetype=javascript after set Comment highlight to seagreen3.\nInput to neovim: \"/\"\nindex.js:2365 COLOR: undefined\nindex.js:2365 COLOR: undefined\nindex.js:2365 COLOR: undefined\nindex.js:2461 Highlight is updated:  Object {fg: \"#ffffff\", bg: \"#333333\", sp: \"#ffffff\", bold: undefined, italic: undefined\u2026}\nindex.js:1544 Cursor is moved to (0, 0)\nindex.js:2365 COLOR: undefined\nindex.js:2365 COLOR: undefined\nindex.js:2365 COLOR: undefined\nindex.js:2461 Highlight is updated:  Object {fg: \"#ffffff\", bg: \"#333333\", sp: \"#ffffff\", bold: undefined, italic: undefined\u2026}\nindex.js:2309 drawText(): (0, 0) 2 Object {line: 0, col: 0}\nindex.js:1544 Cursor is moved to (16.802734375, 0)\nindex.js:2365 COLOR: undefined\nindex.js:2365 COLOR: undefined\nindex.js:2365 COLOR: undefined\nInput to neovim: \"/\" is a second / for comment.  Just after the input, highlight is not set to seagreen3 but set to gray color.\n. @haifengkao Thank you for the report.\n. \u5909\u63db\u4e2d\u306e\u6587\u5b57\u3068\u304a\u3063\u3057\u3083\u3063\u3066\u3044\u308b\u306e\u306f\u5909\u63db\u5f85\u3061\u306e\u3072\u3089\u304c\u306a\u5165\u529b\u306e\u3053\u3068\u3067\u3059\u3088\u306d\uff1f\n\u5909\u63db\u5f85\u3061\u306e\u5165\u529b\u306f JavaScript \u304b\u3089\u53d6\u308c\u306a\u3044\u305f\u3081\u63cf\u753b\u3059\u308b\u624b\u6bb5\u304c\u306a\u3044\u306e\u304c\u73fe\u72b6\u3067\u3059\uff0e\u3053\u308c\u306f NyaoVim \u304c\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2\u3067\u306f\u306a\u304f canvas \u4e0a\u306b\u63cf\u753b\u3057\u3066\u3044\u308b\u306e\u304c\u539f\u56e0\u3067\u3057\u3066\uff0ccanvas \u306b\u63cf\u753b\u3059\u308b\u306e\u3092\u3084\u3081\u308b\u306a\u3069\u306e\u5927\u898f\u6a21\u306a\u5909\u66f4\u3092\u52a0\u3048\u306a\u3044\u304b\u304e\u308a\u4fee\u6b63\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3067\u3059\uff0e\n. \u4e86\u89e3\u3067\u3059\uff0e\u3054\u5831\u544a\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff0e\n. If anyone knows how to fix this, please ping me by comment here.\n. Looks much better than previous.  Thank you :smile:\n. It's because remote msgpack API was updated.  Please update nvim to 0.1.5.\n. Thank you for catching this bug.  I could confirm :smile:\n. I also could confirm this.  It seems that <C-c> is sent to Neovim properly, but Neovim looks not to handle it as 'Ctrl + C'.\nI confirmed it with executing below code in DevTools:\njs\ndocument.getElementById('nyaovim-editor').editor.getClient().input('<C-c>')\nI need to investigate further.\n. thank you so much for investigation.. \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e0.1.6 \u306f\u307e\u3060\u8a66\u305b\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\u3053\u3061\u3089\u3067\u3082\u898b\u3066\u307f\u307e\u3059\uff0e\n. \u624b\u5143\u3067\u306f\u518d\u73fe\u3057\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u7cfb\u306e\u30a8\u30e9\u30fc\u3067\u3042\u308c\u3070 Electron \u672c\u4f53\u306e\u30d0\u30b0\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3059\u304c\uff0c nyaovim --version \u3059\u308b\u3068 Electron \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4f55\u306b\u306a\u3063\u3066\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\n. @BaronTommy \u305d\u3061\u3089\u306f\u75c7\u72b6\u304c\u9055\u3046\u3088\u3046\u3067\u3059\uff0eENOENT \u306a\u306e\u3067\u30ed\u30b0\u304b\u3089\u5bdf\u3059\u308b\u306b nvim \u304c $PATH \u306b\u542b\u307e\u308c\u3066\u3044\u306a\u304f\u3066\u30b3\u30de\u30f3\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u306e\u3067\u3059\u304c\uff0c\u4e00\u5fdc\u3054\u78ba\u8a8d\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\n. \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\u65b0\u3057\u3044 issue \u3092\u7acb\u3066\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\uff0e\u65e5\u672c\u8a9e\u3067\u5927\u4e08\u592b\u3067\u3059\uff0e\n. @ytac8 \n\u30a8\u30e9\u30fc\u3092\u898b\u308b\u306b\u30b0\u30e9\u30d5\u30a3\u30af\u30b9\u5468\u308a\u3067\u3059\u306e\u3067\uff0c\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u4f9d\u5b58\u306e\u554f\u984c\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u304a\u4f7f\u3044\u306e Mac \u306b\u3064\u3044\u3066\u3082\u3046\u5c11\u3057\u8a73\u7d30\u3092\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u304b\uff1f (e.g. iMac (27-inch, Late 2013))\n. \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\u3061\u3087\u3046\u3069\u305d\u306e\u6a5f\u7a2e\u3092\u6240\u6709\u3057\u3066\u304a\u308a\u307e\u3059\u306e\u3067\uff0c\u660e\u65e5\u8a66\u305b\u305d\u3046\u3067\u3059\uff0e\n. @ytac8 \n\u9045\u304f\u306a\u308a\u307e\u3057\u305f\uff0e\u540c\u3058\u74b0\u5883\u3067\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\uff0c\u79c1\u306e\u624b\u5143\u3067\u306f\u518d\u73fe\u3057\u307e\u305b\u3093\u3067\u3057\u305f\uff08#80 \u306f\u8d77\u304d\u307e\u3057\u305f\uff09\u3002\u304a\u624b\u6570\u3067\u3059\u304c\uff0c\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u306e\u3067\uff0cDevTools \u3067\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3067\u3057\u3087\u3046\u304b\uff0e$ NODE_ENV=debug nyaovim \u3067 DevTools \u304c\u8d77\u52d5\u6642\u306b\u7acb\u3061\u4e0a\u304c\u308b\u306f\u305a\u3067\u3059\uff0e\n. \u3054\u78ba\u8a8d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\u3069\u3046\u3084\u3089\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u3066\u3044\u305f\u30a8\u30e9\u30fc\u306f\u76f4\u63a5\u95a2\u4fc2\u306a\u304f\uff0c#80 \u3068\u540c\u69d8\u306e\u30d0\u30b0\u307f\u305f\u3044\u3067\u3059\u306d\uff0e\n. @ytac8 \nv0.0.21 \u3067\u76f4\u3063\u305f\u306f\u305a\u3067\u3059\uff0e\n\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\uff0e\n. \u3054\u78ba\u8a8d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0eDevTools \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u307b\u3046\u306b\u306f\u76f8\u5909\u308f\u3089\u305a 'prototype is not defined...' \u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u307e\u307e\u304b\u3069\u3046\u304b\u3054\u78ba\u8a8d\u9858\u3048\u307e\u305b\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\u3054\u5831\u544a\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u63cf\u753b\u5468\u308a\u306e\u30d0\u30b0\u306b\u3088\u308b\u3082\u306e\u306a\u306e\u304b\u30ec\u30f3\u30c0\u30e9\u30d7\u30ed\u30bb\u30b9\u5074\u306e JS \u306e\u554f\u984c\u306a\u306e\u304b\u5207\u308a\u5206\u3051\u3067\u304d\u3066\u306a\u3044\u72b6\u614b\u3067\u3059\uff0e\n. \u30e1\u30cb\u30e5\u30fc\u30a2\u30a4\u30c6\u30e0\u306e\u4e2d\u306e 'View' \u2192 'Open Developper Tools' \u304b\u3089\u3082\u958b\u3051\u308b\u306e\u3067\u3059\u304c\uff0c\u8a66\u3057\u3066\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3067\u3057\u3087\u3046\u304b\n. \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\u3046\u30fc\u3080\uff0c\u30ec\u30f3\u30c0\u30e9\u30d7\u30ed\u30bb\u30b9\u304c\b\u610f\u56f3\u305b\u305a\u6b7b\u3093\u3067\u3044\u308b\u3088\u3046\u3067\u3059\u306d\u2026 Electron \u306e\u30d0\u30b0\u306e\u53ef\u80fd\u6027\u304c\u304b\u306a\u308a\u9ad8\u305d\u3046\u3067\u3059\n. \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\u3046\u30fc\u3093\uff0cElectron 1.4.0 \u306a\u306e\u304c\u8b0e\u306a\u3093\u3067\u3059\u3088\u306d\u2026 package.json \u3067\u306f 1.3 \u3092\u6307\u5b9a\u3057\u3066\u308b\u306f\u305a\u306a\u3093\u3067\u3059\u304c\u2026 \u3068\u308a\u3042\u3048\u305a\u50d5\u3082 1.4 \u3067\u898b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\nChromium \u306e GPU \u5468\u308a\u306f\u3069\u3046\u3084\u3089\u3061\u3087\u3063\u3068 buggy \u3063\u307d\u3044\u306e\u3067\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u3067\u3059\u306d\u2026\u624b\u5143\u3067\u518d\u73fe\u3059\u308c\u3070\u4f55\u304b\u624b\u304c\u6253\u3066\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n. \u3042\u30fc\uff0c\u3044\u3048\uff0c~1.3.5 \u304c\u6b63\u3057\u3044\u3067\u3059\u306d\uff0e\u6307\u6458\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\u4fee\u6b63\u3057\u3066\u304a\u304d\u307e\u3059\uff0e1.4 \u3067\u52d5\u304b\u306a\u3044\u306e\u306f\u5f15\u304d\u7d9a\u304d\u8abf\u3079\u3066\u307f\u307e\u3059\uff0e\n. v0.0.22 \u3067\u76f4\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u306e\u3067\uff0c\u4e00\u65e6\u9589\u3058\u307e\u3059\uff0e\u3082\u3057\u4e07\u4e00\u76f4\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u3053\u306e issue \u3067\u30e1\u30f3\u30b7\u30e7\u30f3\u3092\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n. Cmd + v is sent to Neovim as <D-v> by default because Neovim can handle Cmd key.  You can use Cmd key for menu access from NyaoVim 0.0.21.  I'll ping you after releasing 0.0.21 here :smile:\n. DevTools \u3067\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u51fa\u529b\u3092\u78ba\u8a8d\u3044\u305f\u3060\u3051\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\nprocess.env.PATH\nnvim \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3057\u3066\u30b3\u30de\u30f3\u30c9\u304c\u7121\u304f\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u306e\u3067\uff0cnyaovim \u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089 $PATH \u304c\u6b63\u3057\u304f\u898b\u3048\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3067\u3059\uff0e\n. @BaronTommy \u3054\u78ba\u8a8d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\u52a9\u304b\u308a\u307e\u3059\uff0e\ncannot read property \u306e\u4ef6\u3067\u3059\u304c\uff0c\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\uff0e\u305d\u3057\u3066\uff0c\u50d5\u306e\u624b\u5143\u3067\u3082\u518d\u73fe\u3057\u307e\u3057\u305f\uff0e\n\u3069\u3046\u3084\u3089 nvim 0.1.6 \u3067\u5909\u66f4\u304c\u3042\u3063\u305f\u3089\u3057\u304f\uff0cNeovim \u306e Node.js client \u3082\u540c\u3058\u7406\u7531\u3067\u58ca\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0ev0.1.6 \u306f\uff0c\u3061\u3087\u3063\u3068\u69d8\u5b50\u3092\u898b\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3067\u3059\uff0e\nhttps://travis-ci.org/neovim/node-client/jobs/157336767\n. v0.0.21 \u3067\u76f4\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u306e\u3067\uff0cclose \u3057\u307e\u3059\uff0e\u3082\u3057\u76f4\u3063\u3066\u306a\u3044\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\uff0c\u3053\u306e issue \u3067\u79c1\u306b\u30e1\u30f3\u30b7\u30e7\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n. I found that passing two or more paths breaks PRC communication between nvim and frontend.  I sent PR and the problem will be fixed when it merged.\nhttps://github.com/neovim/neovim/pull/5481\n. As far as I confirmed, fixed version nvim does not reproduce this issue.\n. The patch was merged and nvim HEAD now works without this problem.  Thank you for reporting this.\n. NyaoVim currently does not save a log to any file.  I think you need to execute NyaoVim with NODE_ENV=debug, or keeping NyaoVim process attached by nyaovim --no-detach may dump an critial error log to stdout.\n. Hmm..., C++ level errors may be a bug of Electron. Could you try below and it also reproduce this error?\n$ npm install -g electron\n$ electron\n. > but it at least still shows something in the window.\nHmm... Could you try below and see the console log in DevTools?\n$ NODE_ENV=debug nyaovim\n. Does 'Open Devloper Tools' menu item work?  If not, this may be the same as #53.\n. #53 was fixed.  I guess this issue also can be closed.  If anyone finds this issue still be there, please ping me here.\n. Is this the same as #53 ?\n. Yes, it's possible via msgpack RPC and JavaScript.  I'll show you the config.\n. We can access window state with Electron API from JavaScript.\nhttps://github.com/electron/electron/blob/master/docs/api/browser-window.md\nTo access to JavaScript environment from Vim script, we currently should use nyaovim#call_javascript_function(func_name, args).\n1. Write below JavaScript code to ~/.config/nyaovim/nyaovimrc.html.\nhtml\n<script>\nwindow.toggleWindowFullScreen = function() {\n  const win = require('electron').remote.getCurrentWindow();\n  win.setFullScreen(!win.isFullScreen());\n};\n</script>\n2. Call the runtime function from Vim script\nvim\n:call nyaovim#call_javascript_function('toggleWindowFullScreen', [])\n\nI think this is a bit too hacky.  So I'm considering to add a new runtime function nyaovim#execute_javascript(code) in next version.  It can run JavaScript directly from Vim script.\n. > I feel using nyaovim#execute_javascript() is too specialized\nI'm not thinking it's specialized, but it's not good idea to expose JavaScript layer to Vim script, it's too generic, I agree.\nHowever, I won't implement fullscreen specific RPC function because there're many GUI related APIs and rendering process related APIs.  I don't want to re-implement them as RPC functions.\nSo, I want to suggest below API\nnyaovim#browser_window(method, args)\nmethod is a name of method of BrowserWindow which I showed the link above.  And args is arguments for the method.  So toggling window can be implemented with it as following:\nvim\nif nyaovim#browser_window('isFullScreen')\n  nyaovim#browser_window('setFullScreen', [v:false])\nelse\n  nyaovim#browser_window('setFullScreen', [v:true])\nendif\nPlease note that NyaoVim doesn't intend that so many things're not done in Vim script.  You can always use JavaScript from nyaovimrc.html for GUI configuration with CSS or attribute of <neovim-editor> element.\n. Hmm... but my concern is that something can be done in Vim script only.  For example, mapping something to key sequence can be done in Vim script (without calling msgpack RPC API).  So, if we want to toggle fullscreen with some key mappings, it can be implemented with only JavaScript (although it can with RPC).\nAt least, I think fullscreen option should be reflected (it should be notified via UI RPC API).\n. Ah, I noticed that 'fullscreen' option is only for MacVim, hence it's not possible to use the option in NyaoVim or other GUI frontend.  We need to provide our original API to control window state...\n. I checked this.\nNyaoVim looks to send <C-^> properly.\n\nCould you check below points?\n- Is this can be reproduced on nvim in terminal?  If so, it may be a problem of Neovim.\n- Please check the sending key sequence in DevTools log with NODE_ENV=debug nyaovim.\n. Thank you for additional description.  I think I could understand. \n\nI found that even Ctrl+6 send Ctrl+^ even in JIS keyboard (an alternative key of 6 is &) in my environment. If this is true, probably neovim-component should send an fixed alternative key of individual Ctrl+{digit} I guess.\n\nThat's good news.  Let me confirm the behavior before implementing that (is it true that frontend should consider that? etc...).  If neovim-qt is also handling it, it's strong proof of it :)\n. Yeah, the behavior should be implemented anywhere, it's correct.  What I need to know is whether it should be done in frontend.  If it should be handled in Vim or Neovim core, it's simply Neovim issue.  I want to clarify it.\n. @lambdalisue \nThank you so much for the investigation.  It's very helpful.  So we need to handle @, ^ and - in frontend level.  I'll fix them in neovim-component package tonight!\n. This should be fixed in neovim-component v0.8.1. I'll close this. If the problem is till there, please notify me by creating a new issue or pinging me.\n. @justinmk \nThank you for the info.  I'll investigate this after #87 done.\n. As @justinmk said, Vim is not good at handling large files.  Please try nvim in terminal to clarify the problem derives from backend (Vim) or frontend (NyaoVim).\n. @haifengkao Thank you for confirmation. :smiley:\n. @shitfSign Please do not remove default issue template.\n. neovim-component v0.8.2 should solve this (at least in my environment it works again).  Could you update and try the package?\n. Good point! Thank you for your patch.  Please check the review comments.\n. Thank you. It looks acceptable. I may add more refactoring later.\n. Nice catch! Thank you for your report.\n. Difference between Electron v1.4 and v1.3 is the version of Chrome. I confirmed this with Japanese IME also.\nI found that the timing of input event of <input> element and keydown event of elements were changed.\n. Ah, nice catch. Thanks.\n. Thank you for contribution. I added a change request. Please check it.. Looks good. Thank you.. Hmm, I guess :execute 'normal!' \"\\<C-o>\\\"+gp\" is correct, right?. Yeah, it's intentional. NyaoVim uses flux with Polymer. And some APIs of flux require React. It's because flux adds React as peer dependency. However, NyaoVim doesn't use the APIs. So NyaoVim doesn't need to meet the peer dependency.. Thank you. I'm sorry for leaving this PR open.. has() is a built-in function. So we can't change it's behavior. Instead, we can check if g:nyaovim_version variable exists or not.\nvim\nif exists('g:nyaovim_version')\n  \" Code for NyaoVim\nendif\nThe variable is set in command line argument: https://github.com/rhysd/NyaoVim/blob/master/renderer/nyaovim-app.ts#L253. Hmm... I don't have any idea why the variable does not exist.\nYou don't need to set the command line argument manually. It is automatically set by NyaoVim.. Thank you for your information and offer. But I need to try to reproduce at first with the latest neovim.. I confirmed this works. Thank you.. I think Electron 1.6.10 causes this problem. It contains official type definitions and they are different from ines in DefinitelyTyped. We need to fix version to 1.6.9 for now.. I addressed this in 748c2aa. Please git pull in cloned NyaoVim repo and npm install again.. I fixed compilation error problems due to new official type definitions in 59e2199f14e8350a42bf3761e7c4a7630c9321e0 and now compilable with Electron 1.7. I'll close this.. I'm not releasing OS X package with this command yet, but it looks good. Thank you for the update and I apologize late response.. @haifengkao Could you merge the upstream master branch? I think CI will pass by it.. Hm, I don't know why CI fails... Installing 'neovim' package via PPA does not work.. I missed important point.\nTo include the file from SublimeText, we need to clarify it's ok in terms of license of Sublime text. This PR does not contain any license description. And Sublime text is a proprietary software. I want to ensure that including the file from Sublime text does not cause any problem.. um, I agree that this feature is awesome, but it's not acceptable to include a file whose license is unclear. How about Atom or VS Code?. I think we can use Atom's plist file instead because Atom is licensed with MIT license. We can copy the file, and write the license description (copyright notice) as comment in it.. Thank you.\nI confirmed CI is also broken in master branch.\nhttps://travis-ci.org/rhysd/NyaoVim/builds/263804261\nI'll merge this PR and then will fix CI job.. yeah, it's reproducible in my environment also. Chromium version update seems to cause this issue. So 1.4 and 1.6.8 does not seem to cause this error.\nReported: https://github.com/rhysd/neovim-component/issues/44. I don't know the difference between from the dock and from a command line. So I can't say nothing. But setting command NODE_ENV=production nyaovim to doc icon may solve this problem.\nAnd please do not ignore issue template next time.. Could you try out disable-meta-key attribute of <neovim-editor> element? This is a problem who handles key input.\n\nApplication window (for handling OS native shortcut like Cmd+v)\nNeovim\n\nBy default, NyaoVim passes all inputs to Neovim (selecting 2.). By specifying the attribute, NyaoVim will choose 1. as its behavior.\nhttps://github.com/rhysd/neovim-component#neovim-editor-properties. It's already supported.\nPlease make browser-config.json in ~/.config/nyaovim with below contents\njson\n{\n  \"window_options\": {\n    \"fullscreen\": true\n  }\n}\nDoc: https://github.com/rhysd/NyaoVim/blob/master/docs/browser-config.md. You need sudo because your node_modules directory requires root privilege to access. electron-prebuilt package makes a directory and downloads Electron binary into it.. hm... ok.\nThis is a problem of 'electron' package ('electron-prebuilt' is a former name). Could you try following? Does it work?\n$ sudo npm i -g electron. ahh... It's 'electron' package issue. Please file it at electron repo's issues page and mention this issue.. NyaoVim renders screen on <canvas>. I guess we can do it with passing antialias: false to second argument of getContext()\nI think I can add a new option for this. But currently unable to specify it from outside.. ah, antialias option is only for webgl renderer. So we need to investigate other way to make font not-smoothing.... Oh, I also understood the root cause.  \nI think 'close' event is more suitable to save window state (document).  close event is emitted before window is unloaded.  If we use resize event, every window resize will save window state.\n. Hmm... Document says 'close' event\n\nEmitted when the window is going to be closed. It's emitted before the beforeunload and unload event of the DOM. \n\nunlike 'closed' event.  So, it may be a bug of Electron if 'Object has been destroyed' error occurs before window is unloaded.  OK, I'll introduce 'resize' event as you said.  Thank you for explanation :smile:\n. I think client.eval('mode()') should also work and prefers to commandOutput() for this purpose.\n. That's a spec of Vim command.  All vim commands' outputs start with \\n.  For example, :echo blah outputs \\nblah (unlike other popular scripts, Vim adds newline to the head of output.)\n. Please use early return.\n``` javascript\nif (value.length === 0) {\n    return;\n}\n...\n``\n. I think default copy behavior (this else clause) is not needed because it's confusing.  Please simply ignore if Vim can't yank some text.\n. I think below is simpler rather than thisif` statement.\njavascript\nconst command = ch === 'n' ? 'ggVG' : '<Esc>ggVG';\nclient.input(command);\n. Please always use === for comparison in JavaScript.  == has many pitfalls.\n. As the same as above,  I think this default behavior is confusing.  Simply ignoring would be better.\n. Could you reduce the repeat of client.input(command); here?\n``` javascript\nlet command;\nif (ch === 'v') {\n    command = ...;\n} else if (...) {\n    ...\n} else ...\nif (command) {\n    client.input(command);\n}\n``\n.+` is also available in insert mode.  Should we also use it in the mode?\njavascript\n} else if (ch === 'c' || ch === 'i') {\n    command = '<c-r>+';\n}\n. Nice catch!  But it looks not related to this PR directly.  Could you create another PR for this to manage history of development better?\n. I think neovim is better than vim because Neovim is a different software from Vim.\n. Please do not move electron-prebuilt from dependency to dev dependency.  npm package won't work if Electron binary is in dev dependency.\n. Please use let or const instead of var consistently.\n. I think it's better to execute npm uninstall --save electron-prebuilt before running builder then git checkout package.json after.  Although just a workaround.\n. Hmm... OK, so let's include this in this PR.\n. Why packaging with asar is disabled?\n. :)\n. I think types for callback parameters don't need:\ntypescript\napp.once('open-file', (e, p) => {\n. Why is 'will-finish-launching' callback hooked? Simply app.once('open-file', ...) on toplevel does not work?\n. Does this work in other platforms such as Linux or Windows?\n. Hmm... I can't accept a code which only works on specific platform because NyaoVim should work cross platform.  We need to check this on other platforms.\n. Yeah, of course.  But it may break NyaoVim on other platforms\n. I think inserting a code to check platform is acceptable\nif (process.platform === 'darwin' && remote.process.argv.length > 1 && ...) ...\n. Oh, I only saw the open-file event document. Thanks.\n. We can use isDevToolsFocused for this purpose.\ntypescript\nif (win.webContents.isDevToolsFocused()) {\n  // send to nvim\n} else {\n  // default behavior\n}\nhttps://github.com/electron/electron/blob/master/docs/api/web-contents.md#contentsisdevtoolsfocused. Oh, I didn't consider <webview>. You're correct.\nWell, I think win.webContents.isFocused() is available rather than comparing WebContents instance.\nhttps://github.com/electron/electron/blob/master/docs/api/web-contents.md#contentsisfocused. Oh, it must be a bug of type definitions. I'll send a PR for it.\nAnd you can add workaround as below:\ntypescript\n(win.webContents as any).isFocused()\nThe workaround can be removed after type definition is fixed. So could you add the workaround for now?. Looks <C-o> is removed. Does this work in inert mode? (I only check this diff in GitHub. So if you specify ^o directly in the code, I may miss it...). Ah, I overlooked. Thanks.. Should 'sublime-*' remain?. ",
    "gnujeremie": "You're welcome :)\nHere's the result of \njavascript\nconsole.log(process.versions)\njavascript\nares: \"1.10.1-DEV\"\natom-shell: \"0.36.1\"\nchrome: \"47.0.2526.73\"\nelectron: \"0.36.1\"\nhttp_parser: \"2.6.0\"\nmodules: \"47\"\nnode: \"5.1.1\"\nopenssl: \"1.0.2e\"\nuv: \"1.7.5\"\nv8: \"4.7.80.23\"\nzlib: \"1.2.8\"\n. No, it's seems to be okay, but i'll try to dig deeper (I'm currently at work).\nI have powerline installed for my terminal and my vim statusbar. I thought it could be the problem, but as I told you, even when I remove all my vim/neovim config, the font still does not render.\n. You're welcome ^^\nYou can find my full .vim here : https://github.com/gnujeremie/dotvim (I symlink to .config/nvim and init.vim after).\nI just have these lines specifically on my work station at the end of the .vimrc\n\" Powerline\npython from powerline.vim import setup as powerline_setup\npython powerline_setup()\npython del powerline_setup\n. Hi,\nSorry for the delay (christmas...).\nI do use patched font for powerline, I will try tomorrow to disable it and I'll let you know :)\nThanks.\n. Ok so I changed the line as you said, the problem is still there.\n. Still no differences. \nDo you think I should open a bug on Electron ?\n. Ok thanks :)\n. I updated nyaovim (v 0.0.17), electron is version 0.36.8, the issue is still here.\n. I followed your instructions, no luck.\nnyaovim --version\nNyaoVim version 0.0.18\n  electron : 0.36.9\n  chrome : 47.0.2526.110\n  node : 5.1.1\n  v8 : 4.7.80.27\n. Don't give up, sooner or later we'll find a fix :)\n. Same as @p0009231 , setting the language to English fixed the problem.\n. ",
    "doenietzomoeilijk": "By way of \"me-too\": I have the same issue. OS X 10.10.5 (14F1021)\nOutput in the terminal:\n% NODE_ENV=debug nyaovim                                                                                        !4645\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(6888)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUniform1i: wrong uniform function for type\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(6914)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUniform4fv: unknown location\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[7451:0104/105951:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7fc6d9453de0]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\nVersions:\nares: \"1.10.1-DEV\"\natom-shell: \"0.36.2\"\nchrome: \"47.0.2526.73\"\nelectron: \"0.36.2\"\nhttp_parser: \"2.6.0\"\nmodules: \"47\"\nnode: \"5.1.1\"\nopenssl: \"1.0.2e\"\nuv: \"1.7.5\"\nv8: \"4.7.80.23\"\nzlib: \"1.2.8\"\nSetting Courier as default font doesn't help, nor does adding the webgl: false in main.js (assuming that worked \u2014\u00a0is there any way to check that from within the debugger console?\n. ",
    "adelarsq": "Same issue for me on OS X El Capitan. Many lines like this are shown:\n[844:0104/230115:ERROR:gles2_cmd_decoder.cc(7333)]\n [.Offscreen-MainThread-0x7fe702562e60]GL ERROR :GL_INVALID_OPERATION :\n glUseProgram: program not linked\n...\n. It's a Chromium bug. On this old page  there are a similar bug (GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked).\nOn my Windows 7 I did notice the same problem :confused:\n[UPDATE] On Windows works fine now, maybe something wrong with remote connections, I don't know.\n. Cool. I will try to use tonight and give you a feedback.\n. Didn't work for me too (same version as @gnujeremie):\nadelar@MacBook-Pro ~> nyaovim\nadelar@MacBook-Pro ~> [844:0229/211948:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[844:0229/211948:ERROR:gles2_cmd_decoder.cc(6888)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUniform1i: wrong uniform function for type\n[844:0229/211948:ERROR:gles2_cmd_decoder.cc(6914)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUniform4fv: unknown location\n[844:0229/211948:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[844:0229/211949:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[844:0229/211949:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[844:0229/211949:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n[844:0229/211950:ERROR:gles2_cmd_decoder.cc(7333)] [.Offscreen-MainThread-0x7ffdbb657390]GL ERROR :GL_INVALID_OPERATION : glUseProgram: program not linked\n. Maybe that webgl isn't enabled on the chrome that comes with nyaovim. Also we can try others options for the --use-gl flag. The flag used before (egl) still was using opengl, that is why the problem remains.\n. The problem may be related to this issue.\n. @ohle with 0.37.4 did work?\n. @rhysd What about update Electron for the latest version?\n. Hi @rhysd, any update on this issue? Actually this is the only reason because I still don't use NyaoVim, that is why I'm so obsessed about :grin: \n. @rhysd Yeah! Nice! Did work! \ud83c\udf86 \n\nBefore I got this error on OS X:\n```\n\u2570\u2500\u03bb sudo npm install -g nyaovim                                     0 < 21:58:03\nPassword:\n/usr/local/bin/nyaovim -> /usr/local/lib/node_modules/nyaovim/bin/cli.js\n\nelectron-prebuilt@1.2.7 postinstall /usr/local/lib/node_modules/nyaovim/node_modules/electron-prebuilt\nnode install.js\n\nDownloading electron-v1.2.7-darwin-x64.zip\n[============================================>] 100.0% of 42.74 MB (165.33 kB/s)\n/usr/local/lib/node_modules/nyaovim/node_modules/electron-prebuilt/install.js:22\n  throw err\n  ^\nError: EACCES: permission denied, rename '/usr/local/lib/node_modules/nyaovim/node_modules/electron-prebuilt/electron-tmp-download-860-1468889916574/electron-v1.2.7-darwin-x64.zip' -> '/Users/adelar/.electron/electron-v1.2.7-darwin-x64.zip'\n    at Error (native)\n/usr/local/lib\n\u2514\u2500\u2500 (empty)\nnpm ERR! Darwin 15.5.0\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\" \"-g\" \"nyaovim\"\nnpm ERR! node v6.1.0\nnpm ERR! npm  v3.8.6\nnpm ERR! code ELIFECYCLE\nnpm ERR! electron-prebuilt@1.2.7 postinstall: node install.js\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the electron-prebuilt@1.2.7 postinstall script 'node install.js'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the electron-prebuilt package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node install.js\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs electron-prebuilt\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls electron-prebuilt\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/adelar/npm-debug.log\nnpm ERR! code 1\n```\nBut was able to solve using (https://github.com/Microsoft/BashOnWindows/issues/14):\nnpm config set unsafe-perm true\nAnd trying to install again.\n. @rhysd Thanks. I did reinstall with npm install nyaovim.\nFor some reason there is no link for the app and show this messages:\nnpm WARN enoent ENOENT: no such file or directory, open '/Users/adelar/package.json'\nnpm WARN adelar No description\nnpm WARN adelar No repository field.\nnpm WARN adelar No README data\nnpm WARN adelar No license field.\nTomorrow I will see whats is this. \ud83d\ude34\ud83d\udca4 \n. @rhysd the command only works with sudo:\n\u2570\u2500\u03bb npm install nyaovim -g                                          0 < 20:12:08\nError: EPERM, Operation not permitted\n    at /usr/local/lib/node_modules/npm/node_modules/uid-number/uid-number.js:49:16\n    at ChildProcess.exithandler (child_process.js:193:7)\n    at emitTwo (events.js:106:13)\n    at ChildProcess.emit (events.js:191:7)\n    at maybeClose (internal/child_process.js:852:16)\n    at Socket.<anonymous> (internal/child_process.js:323:11)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:188:7)\n    at Pipe._handle.close [as _onclose] (net.js:492:12)\nI don't understand the error. With some time I will try to figure out what is wrong.\n. It's some weird problem on my OS X. But the main problem is solved. Thanks @rhysd :clap: :clap: \nNext step will be make 145 plugins and 6K lines from macvim config compatible with neovim :smile: \n. Got it. I will request there.\n. Yeap. It's a NeoVim problem. I will close this issue.\n. ",
    "marcj": "We are having also this issue with our app using https://github.com/atom/electron and font rendering in canvas elements at OSX, so I guess it's a bug with their chromium version. I couldn't find yet an issue reported there about this font render error, but I don't think this is directly related to NyaoVim.\n. ",
    "a3li": "Another custom Electron app user here:\nWe had the same issue, we went back to electron 0.35.5 which did not suffer from it; I updated to 0.37.2 today and that seems to work as well. Maybe up/downgrading electron (aka avoid 0.36.*) can fix that for you as well.\n. ",
    "ohle": "I tried this today and can confirm that 0.35.6 solves this problem for me. Unfortunately, 0.37.2 doesn't. Also, I had to comment out the (app.dock as any).setIcon line from main.ts for the old version - no idea what else would be affected.\n. ",
    "GnorTech": "Latest NW.js 0.14.0 fixed the same issue. NyaoVim could consider migration.\n. @rhysd latest Chromium stable 50.0.2661.75 . The same issue reported is https://github.com/nwjs/nw.js/issues/4618\n. ",
    "p0009231": "Probably related? Setting OS language to English solved that problem for me.\n\n. ",
    "kuglee": "Nice find @p0009231. If opening from command line one can always set \ue0b0LANG=\"en_EN.UTF-8\" then open nyaovim. This way the OS language doesn't have to be changed. \n. ",
    "planaria": "C:\\Users[\u30e6\u30fc\u30b6\u540d]\\AppData\\Local\\nvim\\swap \u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u3068\u3001\n\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3057\u3066\u3082\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\n\u30a6\u30a3\u30f3\u30c9\u30a6\u30ba\u306e\u9589\u3058\u308b\u30dc\u30bf\u30f3\u3067\u7d42\u4e86\u3059\u308b\u3068\u3053\u3053\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u3088\u3046\u3067\u3059\u3002\na\u30ad\u30fc\u3092\u62bc\u3059\u3068\u7d42\u4e86\u3059\u308b\u306e\u306f\u3001\u88cf\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\uff08\u753b\u50cf\u306f\u3001:e \u3067\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3053\u3046\u3068\u3057\u305f\u72b6\u614b\uff09\n\n. ",
    "dmeehl": "What needs to change here? nyaovim is useless as a daily editor to me without backup/swap, so i'd like to start poking around.\nCould you also point me to some direction on how to change and recompile nyaovim source? I am unfamiliar with the npm/electron environment.. @babba22 I ran into the same problem and implemented some changes. I used some css derived from what was commented here earlier, and I also implemented a watch for mode changes to add a css class to the cursor (which seems no longer working). Mine is set up to blink only in insert mode.\n@keyframes blink { \n        0% {\n          opacity: 1.0;\n          animation-timing-function: ease-in;\n        }\n        50% {\n          opacity: 0.0;\n          animation-timing-function: ease-in-out;\n        }\n        100% {\n          opacity: 1.0;\n        }\n    }\n    neovim-editor::shadow .neovim-editor.neovim-cursor.style-scope {\n      opacity: 0.9;\n    }\n    neovim-editor::shadow .neovim-editor.neovim-cursor.style-scope.mode-insert {\n      animation-name: blink;\n      animation-duration: 1s;\n      animation-iteration-count: infinite;\n      transition: all \n      transition: 0.15s \n      transition: cubic-bezier(0.38, 0.75, 0.43, 0.88);\n    }\n```\nwindow.onload = function(){\n    var nyaovimEditor = document.getElementById('nyaovim-editor');\n// watch for mode changes; attach css class to cursor\nnyaovimEditor.editor.store.on('mode', function(){\n  nyaovimEditor.$$(\".neovim-cursor\").className = \"neovim-cursor style-scope neovim-editor\";\n  nyaovimEditor.$$(\".neovim-cursor\").className += \" mode-\" + nyaovimEditor.editor.store.mode;\n});\n\n}\n```\nOn an unrelated topic, I have a few other things implemented that people may be interested in. These were must-haves for me to use neovim/nyaovim on a daily basis.  Where would one post code snippets like this?\n- save window size & position on a per file basis\n- set window title to filename\n- check & warn about unsaved buffer before exiting. ",
    "justinmk": ":+1:  ESC is what I use for a similar purpose in VsVim and Vrapper.\n. If msgpack decoding is the bottleneck (https://github.com/rhysd/neovim-component/issues/2), then https://github.com/tarruda/libmpack may help, once it is ready. cc @tarruda\n. > BTW, I wonder why msgpack-c was not adopted.\nWe are using msgpack-c already, but libmpack is intended to be easy to embed in non-C hosts such as node.js. So instead of using nodejs's mspack library, NyaoVim could ship with libmpack. \n@tarruda gave a good explanation of the motivation for libmpack in gitter which I'll paste here:\n\nlibmpack is meant to hold most logic of a neovim client in a cross-language way(as long as a language can bind to C)\n\nZyX-I:\n\nWhat\u2019s the problem with currently used msgpack implementation except that it could be more memory-efficient (and, likely, faster) in some cases?\nCan you describe in libmpack README why this project exists and how it compares to msgpack-c?\n\ntarruda: \n\nThese are the main reasons:\n- It is not trivial to simply include its files into another project(eg: a lua C module) since it relies too much on C99 features and compilation with -Wconversion issues a bunch of warnings. You need to build the library and link against it, which IMO is cumbersome for a simple serialization library that is being embedded into other projects(lua or node.js modules for example).\n- It couples msgpack serialization format with a set of predefined C typedefs. This means the user almost always has to recursively convert the allocated structures into some other application-specific format, especially if binding to another language.\n- It doesn't work without allocating memory. For example, you can't send/receive simple primitives without a msgpack_sbuffer_t(which is then dynamically extended by msgpack internal functions).\n- msgpack-rpc lacks a proper C implementation. I actually haven't found a sane msgpack-rpc implementation even in other languages such as ruby, they are all very complicated(Eg: separate server and client APIs, have hard dependencies platform-specific on event loop libraries).\nAs I said, I want to use it as the base of a C neovim client that can be easily bound to any language, but I also wanted it to be flexible enough to use in any C project\nFor example, it has no system dependencies so it can be used in kernel development(eg: communicate with userspace using msgpack-rpc via netlink sockets)\nIt also has an extra bonus that is not immediately visible: If you use -O3 and limit its API usage to a single file and use the amalgamation(and define MPACK_API as static) it will not emit any symbols, the whole thing will be inlined into a single loop in your function(even user-provided callbacks are inlined)\n. the wording changes in this PR are obfuscated by the numerous whitespace changes.\n. Sending <S-Space> to nvim should work, the GUI just needs to capture it. Verified by:\n\nvim\n:nnoremap <S-Space> :echo 'sspc'<CR>\n:call nvim_input('<S-Space>')\n. That's a Vim problem, nyaovim cannot help it.\n. See also https://github.com/neovim/neovim/issues/5448\n. See https://github.com/neovim/neovim/issues/5448\n. nvr provides this. Also, starting with NVIM_LISTEN_ADDRESS environment variable, should work.. ",
    "johnhamelink": "Yes this is fixed now, thanks! :)\n. Yep, works well now, thanks :+1: \n. Just only setting the left border on the <div> would be better until a better solution is found imo.\n. @khalidchawtany that looks like its coming from OSX\n@rhysd you might be able to stop that from happening using autocomplete=\"off\" when not in insert mode.\n. ",
    "SirVer": "\nCould you tell me how you input special keys such as ~, :, ?? \n\nSure, for example ? is inputted by holding CAPSLOCK + h or # + h (on an qwertz keyboard). Capslock or # function as an additional modifier keys, similar to LSHIFT and RSHIFT but enabling another layer (not capital letters, but special symbols). There is one more set of modifier keys: < and RIGHT_CMD enable numlock and cursor keys.\n\nI think it is very helpful to show me the KeyboardEvent instance on keydown event when you input : on Chrome (or Chromium).\n\nI am a backend developer, I am not familiar with debugging inside chrome. If you tell me how to get this data, I will provide it.\n. I inserted ? which is Mod3 + h. I did it once with the left Mod3 which is CAPSLOCK and once with the right mod3 which is #. Note that under Mac OS X Mod3 == ALT. \nLeft one: it send two events, once for pressing (and holding CAPSLOCK) and one for the h key:\nCAPSLOCK:\n\nthen H:\n\nNow the right side, first pressing #:\n\nand pressing h:\n\n. sounds promising. Thank you.\n. Sorry, late to the party.\nI just retried that and Neo2 is not working for me properly. The Shift and Mod4 modifiers are working, but Mod3 modifiers are not generating the correct symbols. For example, the above mentioned Mod3 + h now inserts Mod3 + h a \u00bf  instead of ?.\nnyaovim --version                                            \nNyaoVim version 0.0.12\n  electron : 0.36.5\n  chrome : 47.0.2526.110\n  node : 5.1.1\n  v8 : 4.7.80.27\n. @rhysd this is on OS X, still same setup (see above, I posted the debug out some time back).\n. ",
    "aepsil0n": "maybe this helps you narrow down the issue: I am using Neo2 as well and just tried NyaoVim. I have not experienced any of the aforementioned problems using NyaoVim's AUR package for Arch Linux.\n. Ah, cool. Thank you for improving my first impression of NyaoVim then!\n. ",
    "tex": "I see it too.\n. fixed, thanks :-)\n. \n. I'm on Linux with i3 window manager. It does not happen always. Something lige once each 5 starts.\n. NyaoVim version 0.0.17\n  electron : 0.36.9\n  chrome : 47.0.2526.110\n  node : 5.1.1\n  v8 : 4.7.80.27\nAlso Shift-Insert in insert mode does not insert content of clipoard but it insterts string ''.\n. I did the reinstalation.\nAfter pressing Ctrl-End:\nindex.js:1587 Keydown event: KeyboardEvent {isTrusted: true}\nindex.js:1587 Keydown event: KeyboardEvent {isTrusted: true}\nindex.js:1613 Invalid key input on 'keydown':  Unidentified\nindex.js:2234 Focus changed: false\nKeydown event: KeyboardEvent {isTrusted: true}altKey: falsebubbles: truecancelBubble: falsecancelable: truecharCode: 0ctrlKey: truecurrentTarget: nulldefaultPrevented: falsedetail: 0eventPhase: 0isTrusted: trueisTrusted: truekey: \"Control\"keyCode: 17keyIdentifier: \"Control\"keyLocation: 2location: 2metaKey: falsepath: Array[9]repeat: falsereturnValue: trueshiftKey: falsesourceCapabilities: InputDeviceCapabilitiessrcElement: input.neovim-input.style-scope.neovim-editortarget: input.neovim-input.style-scope.neovim-editortimeStamp: 1456605176397type: \"keydown\"view: Windowwhich: 17__proto__: KeyboardEvent\nindex.js:1587 Keydown event: KeyboardEvent {isTrusted: true}altKey: falsebubbles: truecancelBubble: falsecancelable: truecharCode: 0ctrlKey: truecurrentTarget: nulldefaultPrevented: falsedetail: 0eventPhase: 0isTrusted: trueisTrusted: truekey: \"Unidentified\"keyCode: 35keyIdentifier: \"End\"keyLocation: 0location: 0metaKey: falsepath: Array[9]repeat: falsereturnValue: trueshiftKey: falsesourceCapabilities: InputDeviceCapabilitiessrcElement: input.neovim-input.style-scope.neovim-editortarget: input.neovim-input.style-scope.neovim-editortimeStamp: 1456605176807type: \"keydown\"view: Windowwhich: 35__proto__: KeyboardEvent\nindex.js:1613 Invalid key input on 'keydown':  Unidentified\n. After Shift-Insert:\nKeydown event: KeyboardEvent {isTrusted: true}\nindex.js:1587 Keydown event: KeyboardEvent {isTrusted: true}\nindex.js:1629 Input event: Event {isTrusted: true}\nindex.js:1622 Input to neovim: \":\"\nindex.js:1393 Cursor is moved to (0, 840)\nindex.js:2228 Highlight is updated:  Object {fg: \"#c0c0c0\", bg: \"#000040\", bold: undefined, italic: undefined, underline: undefined\u2026}\nindex.js:2083 drawText(): (0, 840) 1 Object {line: 35, col: 0}\nindex.js:1393 Cursor is moved to (11, 840)\nindex.js:1587 Keydown event: KeyboardEvent {isTrusted: true}\nindex.js:1622 Input to neovim: \"<S-Insert>\"\nindex.js:2083 drawText(): (11, 840) 10 Object {line: 35, col: 1}\nindex.js:1393 Cursor is moved to (121, 840)\nindex.js:2234 Focus changed: false\n. Arch Linux, 64bits\n. It is shown in my answer begining with \"I did reinstallation\".\n. ",
    "jorge-jbs": "It says v0.10.25. I don't know if I should upgrade.\n. I installed the latest version of node and io.js with nvm and now I can install nyaovim fine and run it. But when I close the terminal and open another one, the nyaovim command doesn't work anymore.\n. I run nyaovim and it says:\nzsh: command not found: nyaovim\nBut when I run npm list it shows as it's installed and the configurations files in .config/nyaovim/ are all there.\n. I reinstalled it like four times. When I get home I will send you more information.\n. It's a pleasure! I love what you are doing to Neovim so I hope I can help :)\nWhen I install it just by running npm install -g nyaovim I get this:\n```\nnpm http GET https://registry.npmjs.org/nyaovim\nnpm http 304 https://registry.npmjs.org/nyaovim\nnpm ERR! Error: EACCES, mkdir '/usr/local/lib/node_modules/nyaovim'\nnpm ERR!  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/nyaovim']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '/usr/local/lib/node_modules/nyaovim',\nnpm ERR!   fstream_type: 'Directory',\nnpm ERR!   fstream_path: '/usr/local/lib/node_modules/nyaovim',\nnpm ERR!   fstream_class: 'DirWriter',\nnpm ERR!   fstream_stack: \nnpm ERR!    [ '/usr/lib/nodejs/fstream/lib/dir-writer.js:36:23',\nnpm ERR!      '/usr/lib/nodejs/mkdirp/index.js:37:53',\nnpm ERR!      'Object.oncomplete (fs.js:107:15)' ] }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\nnpm ERR! System Linux 3.19.0-32-generic\nnpm ERR! command \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"install\" \"-g\" \"nyaovim\"\nnpm ERR! cwd /home/jorge\nnpm ERR! node -v v0.10.25\nnpm ERR! npm -v 1.3.10\nnpm ERR! path /usr/local/lib/node_modules/nyaovim\nnpm ERR! fstream_path /usr/local/lib/node_modules/nyaovim\nnpm ERR! fstream_type Directory\nnpm ERR! fstream_class DirWriter\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, mkdir '/usr/local/lib/node_modules/nyaovim'\nnpm ERR! fstream_stack /usr/lib/nodejs/fstream/lib/dir-writer.js:36:23\nnpm ERR! fstream_stack /usr/lib/nodejs/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:107:15)\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/jorge/npm-debug.log\nnpm ERR! not ok code 0\n```\nIt says that I could try running it as root, so I do it. sudo npm install -g nyaovim:\n```\n[a lot of \"npm http GET\" and an url like the ones below]\nnpm http 304 https://registry.npmjs.org/jsonpointer/2.0.0\nnpm http GET https://registry.npmjs.org/is-property\nnpm http 304 https://registry.npmjs.org/ansi-regex\nnpm http 304 https://registry.npmjs.org/is-property\n\nelectron-prebuilt@0.36.2 postinstall /usr/local/lib/node_modules/nyaovim/node_modules/electron-prebuilt\nnode install.js\n\nnpm WARN This failure might be due to the use of legacy binary \"node\"\nnpm WARN For further explanations, please read\n/usr/share/doc/nodejs/README.Debian\nnpm ERR! weird error 1\nnpm ERR! not ok code 0\n```\nSo here is when I freak out, because I updated node and it's not working.\nThen I think that maybe it has something to do with installing it globally, so I install without the -g tag. npm install nyaovim:\nThe log is exactly the same as the last one with sudo.\nAnd here is what I discovered: when I run nvm install node and right after (it only works if I do it in the same terminal) I run npm install -g nyaovim, it installs perfectly fine. And then I can run nyaovim perfectly too. I don't know if this the way it's supposed to work, or if I am simply a noob xD, but this is what happens.\nOK, so now I have nyaovim installed, perfect. I close the terminal and open another one and running nyaovim doesn't work. It says:\n\nzsh: command not found: nyaovim\n\nI just don't know what to say xD\nI think the first problem installing is a problem of nvm. The second I don't really know because it's too weird for me.\nI hope all of this helps :)\n. I was installing with nvm. But apparently it doesn't work. Now searched for a ppa or something like that and I found this. Now everything is working.\nSorry for making this a nodejs issue instead of a nyaovim issue and thanks for helping.\n. ",
    "wsdjeg": "I also failed to install this proj,here is my install info my os is ubuntu 15.10\n\n. now most time I use neovim in terminal ,but I will try more with this project,thanks for you reply\n. ",
    "bimlas": "Same issue here: Node is installed, but node binary doesn't exists, just nodejs. ln -s /usr/bin/nodejs /usr/bin/node solved the install.. Same issue here: on Linux it's exists, while on Windows it isn't.\nLinux (Ubuntu 16.04 LTS \"Xenial Xerus\" x64)\n Neovim 0.2.1-dev\n NyaoVim 0.0.22\n* Node 4.2.6\nWindows 7 x64\n Neovim 0.2.1.190\n NyaoVim 0.0.22\n* Node 6.9.5. ",
    "romgrk": "Actually, if you could add a class for each different mode, rather than modifying directly the cursor style, it would allow for a better user control.\n(e.g. add .normal-mode class on cursor when normal mode is entered)\nAlthough there already is a mode-switch event if I recall correctly?\n. As for the reversed cursor, you'll be happy to see this:  https://webkit.org/blog/3632/introducing-backdrop-filters/\nStill in nightly but you could write a filler for now. Or I could. I'll check if I can send a patch later today.\n. What's up with ::shadow? Here I sure can modify that ugly cursor.\n\n(look the cursor; IT SHINES)\n(gist with the shiny cursor: https://gist.github.com/romgrk/92d3e7cb4d81d026f6ec)\n. I wonder if it wouldn't be faster to have the <div> element containing the character below it, and just setting it's color/background-color. @rhysd, any idea of the ressource consumption of having an additional canvas? Is it faster to let electron render stuff in general?\n. I know Nyao is still under development, but have you had time to think more thoroughly of file loading and user configuration?\nI ask the question because I find myself jumping back and forth through nyaovim, neovim-component,~/.config/nvim/nyaovim-plugin and ~/.config/nyaovim whenever I need to make some modification or configure some option. I also find myself directly editing nyaovim and neovim-component files rather than writing my own separate config files. \nOne last point, what about a runtime path for nyaovim? I have various html/css/bower_components/node_modules that are shared amongst various apps that I'd be happy to import.\n. Ok thanks! I've seen some commits on RuntimeApi but I haven't had time to look into that, although it looked like the kind of things I'd love to have!\nAbout the ~/.config/nvim/nyaovim-plugin directory:\nI am perfectly aware of that, but it feels way cleaner to have all my nvim files in the same place, although I know it is not intended for that\u2026\n. Another point I\u00b4d like to insist on, despite having already mentioned it:\nI do not like having an .html file as an entry point. I'd be much more comfortable with a .js.\nIt is akin to the node-webkit vs electron divergence. Node-webkit enters on .html files, while electron enters on .js files. HTML is \u00absupposed\u00bb to be for UI rendering, while JS is for code. But I won't insist more on this point, if you choose to go with nyaovimrc.html I\u00b4ll go with that.\n. Yeah, I had done some experiments with <script> tags, actually it's efficient enough, and placing them at the end of the nyaovimrc.html ensures they are loaded after everything.\n(Oh and btw, I haven't said yet but the whole neovim-component/nyaovim is really a great work!)\n. Yep, sure\n. Yeah, I was thinking more of something like a cache file for preserving window state through sessions. I haven't played that much with electron & al but something if there is some equivalent for applications it would be good. (I know every electron-opened application creates and stores files in my ~/.cache automatically)\n. Yes I saw, thanks!\n. Nyaovim catches the events during the bubble phase of the events. Use the capture phase (e.g. document.addEventListener('keydown', callback, true)).\nSee here https://javascript.info/tutorial/bubbling-and-capturing\nThough be careful to not stopPropagation() yourself.\n. This is due to space key being of length == 1 and a special key. Sent a PR over neovim-component repo.\n. ",
    "flyingfisch": "Just out of curiosity, why can't the cursor be rendered in the canvas element?\nEDIT:\nAlso, an rgba background color instead of a shadow would prevent the glow around the cursor, unless the glow is a desired effect?\nEDIT2:\nIf it's possible to change the cursor from a div to a canvas, you could load the content of the main canvas, cut out the section covered by the cursor, then invert the pixels in canvas.\nHere is some info on how to copy one canvas to another: http://stackoverflow.com/questions/4405336/how-to-copy-contents-of-one-canvas-to-another-canvas-locally\n. I think the cursor-as-a-separate canvas solution would be the best of both worlds -- it would still be easier than rendering the cursor directly on the main canvas, and yet also allow you to invert it easily.\n. A div would be more performant, but @rhysd said there is no way for the cursor to know what character is under it. Unless this isn't strictly true?\n. Sounds great, looking forward to trying it!\nOn Wed, Mar 2, 2016, 8:47 PM Linda_pp notifications@github.com wrote:\n\nI'm going to try that in this weekend.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rhysd/NyaoVim/issues/16#issuecomment-191534843.\n. Very nice, are you doing an actual invert, or are you doing a background/foreground color swap like the terminal version does?\n. This was the way I installed nyaovim:\n\n$ sudo npm install -g nyaovim\nAnd this is my node version:\n$ node -v\nv5.6.0\n. sudo nyaovim gives me the same problem.\n. This is what I have:\nmark@mark-ThinkPad-X1-Carbon-3rd:/usr/lib/node_modules/nyaovim/node_modules/electron-prebuilt$ ls\ncli.js  CONTRIBUTING.md  electron-tmp-download-26649-1456445817894  index.js  install.js  LICENSE  package.json  README.md  test\n. That fixed it, thanks!\n. I'll try that when I get home, thanks :)\nOn Wed, Mar 16, 2016, 7:05 PM Bruno notifications@github.com wrote:\n\nI've had a similar issue with airline a couple weeks ago, the solution was\nto update airline and add the new airline-theme repository.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/rhysd/NyaoVim/issues/33#issuecomment-197595951\n. Installed those, still having issues. Here is my init.vim: https://github.com/flyingfisch/dotfiles/blob/master/nvim/init.vim\n. I'm using gruvbox, in case that helps.\n\nOn Wed, Mar 16, 2016, 10:07 PM Linda_pp notifications@github.com wrote:\n\nSome themes work but some other themes don't work.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/rhysd/NyaoVim/issues/33#issuecomment-197652904\n. It says gruvbox...\n. Ah, ok. Gruvbox has a bundled airline theme: https://github.com/morhetz/gruvbox#airline-theme\n. OK, just got it working. You have to make sure true color mode is enabled in your init.vim. Maybe true color mode should be enabled by default in nyaovim?\n. Also, on a side note, how do I install the newest version of nyaovim? I have tried npm install nyaovim but I still have the hollow cursor instead of the new inverted one.\n. Just realized I forgot the -g flag. I've got the latest version now.\n. Wow, I didn't realize I forgot to reply to this issue. I fixed it, for me at least, by adding the following to my init.vim:\n\nlet $NVIM_TUI_ENABLE_TRUE_COLOR=1\nReally sorry for not updating the thread, I got busy with other things and completely forgot. @rhysd should I close this?\n. ",
    "babba22": "Hi! Sorry for commenting on this old issue, but I'm not sure if the problem I'm facing is just mine or not.\nNew cursor works well in visual and normal mode, but it doesn't in insert mode:\n\n\nAm I missing something?. ",
    "khalidchawtany": "I have a similar issue. My issue is, I cannot press and hold HJKL to move around. I have to press and release time else nothing happens.\nI will investigate to detect the source of the problem if it is a config option.\nUPDATE:\nIt is not a config option as I just try nyaovim with a blank init.vim.\n. Sorry, I was out of Internet coverage for the past two weeks and will be for many upcoming days too (hopefully).\nI forgot to mention that pressing ctrl-d and ctrl-f work as expected. However, HJKL has this issue. Excuse me, If I will not be able to answer any question you may have, as I will be offline :)\n. @rhysd c-y and c-e work perfectly. It is only hjkl keys that has to be released and pressed to repeat the key.\nWhen I press and hold L I see a pop up suggesting another letter as shown in the screenshot below.\n\n. @johnhamelink you were right it is coming from OS X. Disabling press and hold solves the problem for me.\ndefaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false\n. Thanks, feel free to close this issue as I will try to follow the conversation over there :)\n. Lovely :) \nMany thanks :+1: \n. ",
    "RobertAudi": "I can confirm that <C-d> / <C-u> work as expected. I would like to add that I experience lag anytime the \"screen\" moves (i.e.: scrolloff) even if I don't hold down the movement keys.\n. Thanks for the clarification. Should I close this issue then? Or should we add the \"feature\" label?\n. Works perfectly! Thanks :+1: \n. ",
    "tarruda": "@rhysd / @justinmk For sequential 1-line scrolling, I find it unlikely that the bottleneck is node-msgpack5. In this case neovim sends ui_scroll notifications followed by line redraws of the invalidated area, which is a short payload and wouldn't result in noticeable deserialization overhead even if the msgpack implementation is very inefficient. \nThe best way to handle ui_scroll notifications is to use a coordinate transformation function from the UI's native toolkit. Here is how the python gtk UI does it, which results in smooth scrolling even though the high level UI logic is implemented in python.\nFor page scrolling, more lines need to be redrawn, so a slow msgpack implementation could cause the bottleneck, and in this case libmpack would solve the problem. But this is not the only possible bottleneck: Since the UI must maintain the entire screen state in memory, it can be slow to handle burst updates resulted from both scrolling and region redraws. For this we also need to have a C client for Neovim, which will be built on top of libmpack.\nAfter this C client is released(a relatively small layer on top of libmpack), most Neovim UIs built on top of it will get a significant performance boost.\n. ",
    "metalelf0": "Wow! This is great! Awesome work! :) :) :+1: \n. ",
    "learningjs": "Are you able to reproduce the behaviour?\n\necho $XDG_CONFIG_HOME\n~/.config\nrequire('electron').remote.app.getPath('appData')\n\"/home/user/~/.config\"\n\nI forgot to specify that I use i3wm, if that matters.\n. Thank you\n\nexport $XDG_CONFIG_HOME=$HOME/.config\n\nsolved the issue on Arch (I had it set to ~/.config). I will test more, but for what I see everything is working as expected now.\nPretty interesting... on Ubuntu looks like everything is fine from installation to launch (no weird recursive folders, creates regular folder in ~/.config, etc), but Nyaovim opens always as it does not read the config file. Further investigation coming :)\n. >  you mean nyaovimrc.html is not loaded?\nseems that is what happens, but I did not further investigated the issue\n. I mean looks like nyaovimrc.html is not loaded. I remember that I have changed the font size and on Arch did worked, but not on Ubuntu .\nNot sure about nvim/init.vim . I guess this is loaded, but I do not have the Ubuntu box to hand right now. \nAnd thank you for the XDG hint.\n. ",
    "mikew": "To get around this on OS X, you can run this in a terminal:\nbash\ndefaults write -g ApplePressAndHoldEnabled -bool false\nNote that this will disable built-in the accent picker.\n. ",
    "pdoak": "@rhysd Thank you for the suggestion. I am reluctant to break functionality elsewhere to get this working as at some point in the future I may want the accent picker functionality back and will have forgotten that I disabled it. It should be able to work without resorting to disabling the accent picker.\n@mikew Thank you for the suggestion - I already use reattach-to-user-namespace.\n. ",
    "fevin86": "The fix works. Thanks for your effort! :+1: \n. ",
    "JodusNodus": "I am using Os X 10.11 on a macbook pro with an azerty keyboard. The nyaovim version is 0.0.17.\nPressing the alt key in combination with another key results in the event with the right keycode and the \"Input to neovim\" also results in the right key.\n\n. I use neovim daily in iterm2 and all the key-maps work perfectly.\n. Well, Not exactly. The macbook's have a different variation on the azerty keyboard. Picture\nI haven't tested it with a normal azerty keyboard so i can't say if that works. I have to press   to insert a curly bracket.\n. In terminal neovim, or any other application i have to press <Alt-(> to insert {.\nI have a lot of neovim plugins installed but that doesn't seem to be the problem because a clean neovim install + nyaovim has the same problem.\n. That makes sense, if i have some free time i will give it a shot. But for now i'll just use terminal neovim.\n. I just tried nvim-qt and the same problem occurs there.\n. Thanks a lot :+1: \nThe workaround does the job for me. Should we close the issue?\n. ",
    "AitorATuin": "Sending a small screencast.\n\nAs you can see the problem is when doing O after doing :vsplit\n. Yes, i'm using linux here.\nneovim: \nNVIM v0.1.3-61-gf03ab69\nBuild type: Debug\nI am running it from the git repository and the bug happens also if avoid the nvim config at all.\n. ",
    "hayd": "I see this problem with node 6.3.0 on OSX.\nFirst I had to install electron (initially there was no electron-prebuilt directory), npm install -g electron, but still there is no path.txt.\n$ ls /usr/local/lib/node_modules/nyaovim/node_modules/electron-prebuilt\nCONTRIBUTING.md   LICENSE           README.md         cli.js            index.js          install.js        issue_template.md package.json      test\nEDIT: Fixed by nuking all my npm modules and starting afresh.\n. ",
    "bpinto": "I've had a similar issue with airline a couple weeks ago, the solution was to update airline and add the new airline-theme repository.\n. ",
    "jordwalke": "This could be related to this: https://github.com/vim-airline/vim-airline/issues/1244\nI believe that's an issue with airline and any of the latest vim builds (neovim, vim)\n. I followed the instructions (and I have nvim 0.1.6) and after installing I got:\nNyaoVim version 0.0.21\n  electron : 1.4.1\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\nWhich doesn't work (same white screen error). Could you please update the README with instructions about specific combinations that work? I think it's okay to move forward and not worry about backwards compat, as long as the specific versions are documented.\nAnd if you need version 1.3.5, it should be specified as such in the package.json right?\n. Did that diff fix the issue? On Mac?\n. I tried HEAD nvim yesterday, and npm install nyaovim and it still doesn't work on Mac. Could it be the electron version?\nNyaoVim version 0.0.21\n  electron : 1.4.1\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\nNVIM 0.1.6-dev\nI followed the instructions and it doesn't work. I'm eagerly waiting to try this app.\n. Tried again by installing the release version of 0.1.6 nvim and it still didn't work :(\nNVIM v0.1.6-144-g22dfe69\nBuild type: Release\nWhat version of electron do you have? 1.4.1? \n. @rhysd  Yeah, I have the exact same nvim version as you v0.1.6-144-g22dfe69 release, and same electron, nyaovim version too. Another interesting thing, when I open up nyaovim, I see an error message in the Chrome log that I did not see reported here:\nFailed to clear temp storage: It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources. SecurityError\n. That got rid of that message, thanks. It did not get rid of the white screen problem though.\n. How do I try a different version of Electron to see if it works?\n. ELECTRON_ENABLE_LOGGIN=yes NODE_ENV=debug nyaovim -u NONE did not help either. I will try to install electro 3.5.1\n. Tried with 1.3.5 and it did not work. Btw: You can't just globally install prebuilt electron, and then install nyaovim, expecting it to use your globally installed version. I had to go into the nyaovim node_modules directory and install 1.3.5 manually. Still did not work. I'm really frustrated because I want to use NyaoVim :D\n. Hey, with my setup above (latest everything including nvim, electron, nyaovim) the browser-config.json fix worked! It still flashes a white screen, but it automatically goes away and loads my colorscheme. Should I file an issue for nyaovim to avoid the ugly white screen (so you can customize the loading color instead of white to match your colorscheme? (even if hardcoded in browser-config.json)\n. > You mean that white screen at first, then it shows the screen after enter key? \nI don't even have to press enter. I just wait a second and the white screen goes away.\n. Yeah, I'm not super bothered by it. But it would be nice to be able to customize the color of the screen eventually (you could even read the bg color of the colorscheme at last application-quit time, and use that for the bg color at startup time while waiting for Chromium to load). Chances are, it's the color you want to see there (not 100% of the time, but most of the time).\n. FWIW, I can open nvim without any problems.\n. And even if I comment out my vimrc, which disables all my vim plugins, I still get a white screen:\n```\nnyaovim --version\nNyaoVim version 0.0.21\n  electron : 1.4.1\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\n```\n. Yes, leaving my comments there - will close this one.\n. ",
    "coddingtonbear": "I, too, encountered this problem and solved it by adding --\nvimscript\nset termguicolors\nto my ~/.config/nvim/init.vim.\nAlso note that if you're seeing > rather than \u25b6, you're probably missing this setting there, too:\nvimscript\nlet g:airline_powerline_fonts = 1\ng:airline_powerline_fonts is what tells Airline to swap the > symbols with \u25b6 (among other symbols); if you're using a Powerline-compatible font, the \u25b6 symbols are prettier.. ",
    "stsievert": "I've tested this further: if I run hi SpellBad gui=underline after opening NyaoVim, it underlines correctly. If I include the same command in the last line of ~/.config/nvim/init.vim, NyaoVim doesn't pick up on it but terminal neovim does.\n. Turns out it's not an issue with NeoVim, it's an issue with my vim config. Opening a file with neovim <file> doesn't work but neovim then selecting from vim-startify highlights correctly. I'm closing this issue; I have to clean up my vim config.\n. ",
    "zhranklin": "I have reinstall nyaovim but the problem is still there. @rhysd \n. The same problem on my mac!\nNow I would like to set\nimap <c-v> <esc>\"+pi\nand use ctrl-v for pasting\n. ",
    "inspectahstack": "works now, thanks\n. The difference is I was pasting with ctrl-v which preserves the formatting in nvim but doesn't in nyaovim.  Using p works in nyaovim.  So the real issue is pasting does not preserve formatting using ctrl-v\n. Sure\n1. go to browser and copy the snippet using cmd-c\n2. open nyaovim\n3. enter insert mode\n4. paste using cmd-v\nIf I paste using p it works fine\n. ",
    "Iazel": "I've experimented a bit, and changing this line:\nhttps://github.com/rhysd/neovim-component/blob/master/src/neovim/screen.ts#L245\nts\nconst margin = font_size * (this.store.line_height - 1.2) / 2;\nTo\nts\nconst margin = font_size * (this.store.line_height - 1) / 2;\nWill correctly vertical align the text:\n\nCan someone give a feedback on this edit on other environments?\n. Here a screen with the default settings + line-height 1.5 (monospace 12px/1.5):\n\nAnd this is a screen with Ubuntu Mono 16px/1.5:\n\nAs you can see, it's still render the chars too much to the top, except for characters like g that are rendered in the middle. I think the correct behavior for g is to end at the bottom, such as the taller letters like d that start at the top.\nChanging 1.2 to 1 gives the correct behavior for me; this is quite the tricky problem!\n. ",
    "pcaneill": "Have you tried cloning the repository and hit \"npm start\"?\nI had issue with a -g installation.\nBut it worked via the repository.\n. On my other computer, Debian & Gnome NyaoVim works perfectly fine.\n. ",
    "kraxli": "Hi I have the same problem on Windows 7 and Ubunut 16.06 (both 64bit).\nOutput on Ubuntu:\n```\nsudo npm install -g nyaovim\n/usr/local/bin/nyaovim -> /usr/local/lib/node_modules/nyaovim/bin/cli.js\n\nelectron-prebuilt@0.36.12 postinstall /usr/local/lib/node_modules/nyaovim/node_modules/electron-prebuilt\nnode install.js\n\nsh: 1: node: not found\n/usr/local/lib\n\u2514\u2500\u2500 (empty)\nnpm ERR! Linux 4.4.0-22-generic\nnpm ERR! argv \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"install\" \"-g\" \"nyaovim\"\nnpm ERR! node v4.2.6\nnpm ERR! npm  v3.5.2\nnpm ERR! file sh\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno ENOENT\nnpm ERR! syscall spawn\nnpm ERR! electron-prebuilt@0.36.12 postinstall: node install.js\nnpm ERR! spawn ENOENT\nnpm ERR! \nnpm ERR! Failed at the electron-prebuilt@0.36.12 postinstall script 'node install.js'.\n```\nand with cloning it:\n```\n~/NyaoVim$ npm start\n\nnyaovim@0.0.19 start /home/myHomeDir/NyaoVim\nnpm run dep && npm run build && npm run app\nnyaovim@0.0.19 dep /home/myHomeDir/NyaoVim\nnpm install && bower install && typings install\nelectron-prebuilt@0.36.12 postinstall /home/myHomeDir/NyaoVim/node_modules/electron-prebuilt\nnode install.js\n\nsh: 1: node: not found\nnyaovim@0.0.19 /home/myHomeDir/NyaoVim\n\u251c\u2500\u252c about-window@1.3.1 \n\u2502 \u2514\u2500\u2500 object-assign@4.1.0 \n\u251c\u2500\u2500 bower@1.7.9 \n\u251c\u2500\u2500 deep-extend@0.4.1 \n\u251c\u2500\u252c electron-window-state@2.1.0 \n\u2502 \u251c\u2500\u2500 deep-equal@1.0.1 \n\u2502 \u2514\u2500\u2500 jsonfile@2.3.1 \n\u251c\u2500\u252c mkdirp@0.5.1 \n\u2502 \u2514\u2500\u2500 minimist@0.0.8 \n\u251c\u2500\u252c neovim-component@0.5.2 \n\u2502 \u251c\u2500\u252c flux@2.1.1 \n\u2502 \u2502 \u251c\u2500\u252c fbemitter@2.0.2 \n\u2502 \u2502 \u2502 \u2514\u2500\u252c fbjs@0.7.2 \n\u2502 \u2502 \u2502   \u251c\u2500\u252c isomorphic-fetch@2.2.1 \n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c node-fetch@1.5.3 \n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c encoding@0.1.12 \n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 iconv-lite@0.4.13 \n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 whatwg-fetch@1.0.0 \n\u2502 \u2502 \u2502   \u2514\u2500\u2500 ua-parser-js@0.7.10 \n\u2502 \u2502 \u251c\u2500\u252c fbjs@0.1.0-alpha.7 \n\u2502 \u2502 \u2502 \u251c\u2500\u2500 core-js@1.2.6 \n\u2502 \u2502 \u2502 \u251c\u2500\u252c promise@7.1.1 \n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 asap@2.0.4 \n\u2502 \u2502 \u2502 \u2514\u2500\u2500 whatwg-fetch@0.9.0 \n\u2502 \u2502 \u2514\u2500\u2500 immutable@3.8.1 \n\u2502 \u2514\u2500\u2500 loglevel@1.4.1 \n\u251c\u2500\u252c promised-neovim-client@1.0.1 \n\u2502 \u251c\u2500\u2500 es6-promise@3.2.1 \n\u2502 \u251c\u2500\u2500 lodash@3.10.1 \n\u2502 \u251c\u2500\u252c msgpack5rpc@1.0.2 \n\u2502 \u2502 \u2514\u2500\u252c msgpack5@3.3.0 \n\u2502 \u2502   \u251c\u2500\u252c bl@1.1.2 \n\u2502 \u2502   \u2502 \u2514\u2500\u252c readable-stream@2.0.6 \n\u2502 \u2502   \u2502   \u2514\u2500\u2500 isarray@1.0.0 \n\u2502 \u2502   \u251c\u2500\u2500 inherits@2.0.1 \n\u2502 \u2502   \u2514\u2500\u252c readable-stream@2.1.4 \n\u2502 \u2502     \u251c\u2500\u2500 buffer-shims@1.0.0 \n\u2502 \u2502     \u251c\u2500\u2500 core-util-is@1.0.2 \n\u2502 \u2502     \u251c\u2500\u2500 isarray@1.0.0 \n\u2502 \u2502     \u251c\u2500\u2500 process-nextick-args@1.0.7 \n\u2502 \u2502     \u251c\u2500\u2500 string_decoder@0.10.31 \n\u2502 \u2502     \u2514\u2500\u2500 util-deprecate@1.0.2 \n\u2502 \u2514\u2500\u2500 traverse@0.6.6 \n\u251c\u2500\u2500 typescript@1.8.10 \n\u2514\u2500\u252c typings@0.6.10 \n  \u251c\u2500\u2500 any-promise@1.3.0 \n  \u251c\u2500\u2500 archy@1.0.0 \n  \u251c\u2500\u2500 array-uniq@1.0.2 \n  \u251c\u2500\u2500 bluebird@3.4.0 \n  \u251c\u2500\u252c chalk@1.1.3 \n  \u2502 \u251c\u2500\u2500 ansi-styles@2.2.1 \n  \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.5 \n  \u2502 \u251c\u2500\u2500 has-ansi@2.0.0 \n  \u2502 \u251c\u2500\u2500 strip-ansi@3.0.1 \n  \u2502 \u2514\u2500\u2500 supports-color@2.0.0 \n  \u251c\u2500\u252c columnify@1.5.4 \n  \u2502 \u2514\u2500\u252c wcwidth@1.0.1 \n  \u2502   \u2514\u2500\u252c defaults@1.0.3 \n  \u2502     \u2514\u2500\u2500 clone@1.0.2 \n  \u251c\u2500\u252c debug@2.2.0 \n  \u2502 \u2514\u2500\u2500 ms@0.7.1 \n  \u251c\u2500\u252c detect-indent@4.0.0 \n  \u2502 \u2514\u2500\u252c repeating@2.0.1 \n  \u2502   \u2514\u2500\u252c is-finite@1.0.1 \n  \u2502     \u2514\u2500\u2500 number-is-nan@1.0.0 \n  \u251c\u2500\u2500 elegant-spinner@1.0.1 \n  \u251c\u2500\u2500 graceful-fs@4.1.4 \n  \u251c\u2500\u252c has@1.0.1 \n  \u2502 \u2514\u2500\u2500 function-bind@1.1.0 \n  \u251c\u2500\u252c inquirer@0.12.0 \n  \u2502 \u251c\u2500\u2500 ansi-escapes@1.4.0 \n  \u2502 \u251c\u2500\u2500 ansi-regex@2.0.0 \n  \u2502 \u251c\u2500\u252c cli-cursor@1.0.2 \n  \u2502 \u2502 \u2514\u2500\u252c restore-cursor@1.0.1 \n  \u2502 \u2502   \u251c\u2500\u2500 exit-hook@1.1.1 \n  \u2502 \u2502   \u2514\u2500\u2500 onetime@1.1.0 \n  \u2502 \u251c\u2500\u2500 cli-width@2.1.0 \n  \u2502 \u251c\u2500\u2500 figures@1.7.0 \n  \u2502 \u251c\u2500\u2500 lodash@4.13.1 \n  \u2502 \u251c\u2500\u252c readline2@1.0.1 \n  \u2502 \u2502 \u251c\u2500\u2500 code-point-at@1.0.0 \n  \u2502 \u2502 \u251c\u2500\u2500 is-fullwidth-code-point@1.0.0 \n  \u2502 \u2502 \u2514\u2500\u2500 mute-stream@0.0.5 \n  \u2502 \u251c\u2500\u252c run-async@0.1.0 \n  \u2502 \u2502 \u2514\u2500\u252c once@1.3.3 \n  \u2502 \u2502   \u2514\u2500\u2500 wrappy@1.0.2 \n  \u2502 \u251c\u2500\u2500 rx-lite@3.1.2 \n  \u2502 \u251c\u2500\u2500 string-width@1.0.1 \n  \u2502 \u2514\u2500\u2500 through@2.3.8 \n  \u251c\u2500\u252c insight@0.7.0 \n  \u2502 \u251c\u2500\u2500 async@1.5.2 \n  \u2502 \u251c\u2500\u252c configstore@1.4.0 \n  \u2502 \u2502 \u251c\u2500\u2500 os-tmpdir@1.0.1 \n  \u2502 \u2502 \u251c\u2500\u252c osenv@0.1.3 \n  \u2502 \u2502 \u2502 \u2514\u2500\u2500 os-homedir@1.0.1 \n  \u2502 \u2502 \u251c\u2500\u2500 uuid@2.0.2 \n  \u2502 \u2502 \u251c\u2500\u252c write-file-atomic@1.1.4 \n  \u2502 \u2502 \u2502 \u251c\u2500\u2500 imurmurhash@0.1.4 \n  \u2502 \u2502 \u2502 \u2514\u2500\u2500 slide@1.1.6 \n  \u2502 \u2502 \u2514\u2500\u2500 xdg-basedir@2.0.0 \n  \u2502 \u251c\u2500\u252c inquirer@0.10.1 \n  \u2502 \u2502 \u2514\u2500\u2500 cli-width@1.1.1 \n  \u2502 \u251c\u2500\u252c lodash.debounce@3.1.1 \n  \u2502 \u2502 \u2514\u2500\u2500 lodash._getnative@3.9.1 \n  \u2502 \u251c\u2500\u252c os-name@1.0.3 \n  \u2502 \u2502 \u251c\u2500\u2500 osx-release@1.1.0 \n  \u2502 \u2502 \u2514\u2500\u2500 win-release@1.1.1 \n  \u2502 \u251c\u2500\u252c request@2.72.0 \n  \u2502 \u2502 \u251c\u2500\u2500 aws-sign2@0.6.0 \n  \u2502 \u2502 \u251c\u2500\u2500 aws4@1.4.1 \n  \u2502 \u2502 \u251c\u2500\u2500 caseless@0.11.0 \n  \u2502 \u2502 \u251c\u2500\u252c combined-stream@1.0.5 \n  \u2502 \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@1.0.0 \n  \u2502 \u2502 \u251c\u2500\u2500 extend@3.0.0 \n  \u2502 \u2502 \u251c\u2500\u2500 forever-agent@0.6.1 \n  \u2502 \u2502 \u251c\u2500\u2500 form-data@1.0.0-rc4 \n  \u2502 \u2502 \u251c\u2500\u252c har-validator@2.0.6 \n  \u2502 \u2502 \u2502 \u251c\u2500\u252c commander@2.9.0 \n  \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1 \n  \u2502 \u2502 \u2502 \u251c\u2500\u252c is-my-json-valid@2.13.1 \n  \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 generate-function@2.0.0 \n  \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c generate-object-property@1.2.0 \n  \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 is-property@1.0.2 \n  \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 jsonpointer@2.0.0 \n  \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.1 \n  \u2502 \u2502 \u2502 \u2514\u2500\u252c pinkie-promise@2.0.1 \n  \u2502 \u2502 \u2502   \u2514\u2500\u2500 pinkie@2.0.4 \n  \u2502 \u2502 \u251c\u2500\u252c hawk@3.1.3 \n  \u2502 \u2502 \u2502 \u251c\u2500\u2500 boom@2.10.1 \n  \u2502 \u2502 \u2502 \u251c\u2500\u2500 cryptiles@2.0.5 \n  \u2502 \u2502 \u2502 \u251c\u2500\u2500 hoek@2.16.3 \n  \u2502 \u2502 \u2502 \u2514\u2500\u2500 sntp@1.0.9 \n  \u2502 \u2502 \u251c\u2500\u252c http-signature@1.1.1 \n  \u2502 \u2502 \u2502 \u251c\u2500\u2500 assert-plus@0.2.0 \n  \u2502 \u2502 \u2502 \u251c\u2500\u252c jsprim@1.2.2 \n  \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 extsprintf@1.0.2 \n  \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 json-schema@0.2.2 \n  \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 verror@1.3.6 \n  \u2502 \u2502 \u2502 \u2514\u2500\u252c sshpk@1.8.3 \n  \u2502 \u2502 \u2502   \u251c\u2500\u2500 asn1@0.2.3 \n  \u2502 \u2502 \u2502   \u251c\u2500\u2500 assert-plus@1.0.0 \n  \u2502 \u2502 \u2502   \u251c\u2500\u252c dashdash@1.14.0 \n  \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 assert-plus@1.0.0 \n  \u2502 \u2502 \u2502   \u251c\u2500\u2500 ecc-jsbn@0.1.1 \n  \u2502 \u2502 \u2502   \u251c\u2500\u252c getpass@0.1.6 \n  \u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 assert-plus@1.0.0 \n  \u2502 \u2502 \u2502   \u251c\u2500\u2500 jodid25519@1.0.2 \n  \u2502 \u2502 \u2502   \u251c\u2500\u2500 jsbn@0.1.0 \n  \u2502 \u2502 \u2502   \u2514\u2500\u2500 tweetnacl@0.13.3 \n  \u2502 \u2502 \u251c\u2500\u2500 is-typedarray@1.0.0 \n  \u2502 \u2502 \u251c\u2500\u2500 isstream@0.1.2 \n  \u2502 \u2502 \u251c\u2500\u2500 json-stringify-safe@5.0.1 \n  \u2502 \u2502 \u251c\u2500\u252c mime-types@2.1.11 \n  \u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.23.0 \n  \u2502 \u2502 \u251c\u2500\u2500 node-uuid@1.4.7 \n  \u2502 \u2502 \u251c\u2500\u2500 oauth-sign@0.8.2 \n  \u2502 \u2502 \u251c\u2500\u2500 qs@6.1.0 \n  \u2502 \u2502 \u251c\u2500\u2500 stringstream@0.0.5 \n  \u2502 \u2502 \u2514\u2500\u2500 tunnel-agent@0.4.3 \n  \u2502 \u2514\u2500\u2500 tough-cookie@2.2.2 \n  \u251c\u2500\u252c invariant@2.2.1 \n  \u2502 \u2514\u2500\u252c loose-envify@1.2.0 \n  \u2502   \u2514\u2500\u2500 js-tokens@1.0.3 \n  \u251c\u2500\u252c is-absolute@0.2.5 \n  \u2502 \u251c\u2500\u252c is-relative@0.2.1 \n  \u2502 \u2502 \u2514\u2500\u252c is-unc-path@0.1.1 \n  \u2502 \u2502   \u2514\u2500\u2500 unc-path-regex@0.1.2 \n  \u2502 \u2514\u2500\u2500 is-windows@0.1.1 \n  \u251c\u2500\u2500 listify@1.0.0 \n  \u251c\u2500\u2500 lockfile@1.0.1 \n  \u251c\u2500\u2500 log-update@1.0.2 \n  \u251c\u2500\u252c make-error-cause@1.1.0 \n  \u2502 \u2514\u2500\u2500 make-error@1.1.1 \n  \u251c\u2500\u2500 minimist@1.2.0 \n  \u251c\u2500\u252c object.pick@1.1.2 \n  \u2502 \u2514\u2500\u252c isobject@2.1.0 \n  \u2502   \u2514\u2500\u2500 isarray@1.0.0 \n  \u251c\u2500\u252c parse-json@2.2.0 \n  \u2502 \u2514\u2500\u252c error-ex@1.3.0 \n  \u2502   \u2514\u2500\u2500 is-arrayish@0.2.1 \n  \u251c\u2500\u252c popsicle@4.0.0 \n  \u2502 \u251c\u2500\u2500 arrify@1.0.1 \n  \u2502 \u251c\u2500\u252c concat-stream@1.5.0 \n  \u2502 \u2502 \u251c\u2500\u252c readable-stream@2.0.6 \n  \u2502 \u2502 \u2502 \u2514\u2500\u2500 isarray@1.0.0 \n  \u2502 \u2502 \u2514\u2500\u2500 typedarray@0.0.6 \n  \u2502 \u251c\u2500\u252c form-data@0.2.0 \n  \u2502 \u2502 \u251c\u2500\u2500 async@0.9.2 \n  \u2502 \u2502 \u251c\u2500\u252c combined-stream@0.0.7 \n  \u2502 \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@0.0.5 \n  \u2502 \u2502 \u2514\u2500\u252c mime-types@2.0.14 \n  \u2502 \u2502   \u2514\u2500\u2500 mime-db@1.12.0 \n  \u2502 \u251c\u2500\u2500 methods@1.1.2 \n  \u2502 \u2514\u2500\u2500 xtend@4.0.1 \n  \u251c\u2500\u252c popsicle-proxy-agent@1.0.0 \n  \u2502 \u251c\u2500\u252c http-proxy-agent@1.0.0 \n  \u2502 \u2502 \u2514\u2500\u252c agent-base@2.0.1 \n  \u2502 \u2502   \u2514\u2500\u2500 semver@5.0.3 \n  \u2502 \u2514\u2500\u2500 https-proxy-agent@1.0.0 \n  \u251c\u2500\u2500 popsicle-retry@1.0.1 \n  \u251c\u2500\u2500 popsicle-status@1.0.2 \n  \u251c\u2500\u2500 promise-finally@2.2.0 \n  \u251c\u2500\u252c rc@1.1.6 \n  \u2502 \u251c\u2500\u2500 ini@1.3.4 \n  \u2502 \u2514\u2500\u2500 strip-json-comments@1.0.4 \n  \u251c\u2500\u252c rimraf@2.5.2 \n  \u2502 \u2514\u2500\u252c glob@7.0.3 \n  \u2502   \u251c\u2500\u2500 inflight@1.0.5 \n  \u2502   \u251c\u2500\u252c minimatch@3.0.0 \n  \u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.4 \n  \u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.4.1 \n  \u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1 \n  \u2502   \u2514\u2500\u2500 path-is-absolute@1.0.0 \n  \u251c\u2500\u252c sort-keys@1.1.2 \n  \u2502 \u2514\u2500\u2500 is-plain-obj@1.1.0 \n  \u251c\u2500\u2500 string-template@1.0.0 \n  \u251c\u2500\u252c strip-bom@2.0.0 \n  \u2502 \u2514\u2500\u2500 is-utf8@0.2.1 \n  \u251c\u2500\u2500 thenify@3.2.0 \n  \u251c\u2500\u252c touch@1.0.0 \n  \u2502 \u2514\u2500\u252c nopt@1.0.10 \n  \u2502   \u2514\u2500\u2500 abbrev@1.0.7 \n  \u251c\u2500\u2500 typescript@1.8.7 \n  \u251c\u2500\u252c update-notifier@0.6.3 \n  \u2502 \u251c\u2500\u252c boxen@0.3.1 \n  \u2502 \u2502 \u251c\u2500\u2500 filled-array@1.1.0 \n  \u2502 \u2502 \u2514\u2500\u2500 widest-line@1.0.0 \n  \u2502 \u251c\u2500\u252c configstore@2.0.0 \n  \u2502 \u2502 \u2514\u2500\u252c dot-prop@2.4.0 \n  \u2502 \u2502   \u2514\u2500\u2500 is-obj@1.0.1 \n  \u2502 \u251c\u2500\u2500 is-npm@1.0.0 \n  \u2502 \u251c\u2500\u252c latest-version@2.0.0 \n  \u2502 \u2502 \u2514\u2500\u252c package-json@2.3.2 \n  \u2502 \u2502   \u251c\u2500\u252c got@5.6.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u252c create-error-class@3.0.2 \n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 capture-stack-trace@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u252c duplexer2@0.1.4 \n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@2.1.4 \n  \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 isarray@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-redirect@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-retry-allowed@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-stream@1.1.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 lowercase-keys@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 node-status-codes@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u252c read-all-stream@3.1.0 \n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c readable-stream@2.1.4 \n  \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 isarray@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u252c readable-stream@2.1.4 \n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 isarray@1.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 timed-out@2.0.0 \n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 unzip-response@1.0.0 \n  \u2502 \u2502   \u2502 \u2514\u2500\u252c url-parse-lax@1.0.0 \n  \u2502 \u2502   \u2502   \u2514\u2500\u2500 prepend-http@1.0.4 \n  \u2502 \u2502   \u2514\u2500\u2500 registry-url@3.1.0 \n  \u2502 \u2514\u2500\u252c semver-diff@2.1.0 \n  \u2502   \u2514\u2500\u2500 semver@5.1.0 \n  \u251c\u2500\u2500 wordwrap@1.0.0 \n  \u251c\u2500\u2500 xtend@4.0.1 \n  \u2514\u2500\u2500 zip-object@0.1.0 \nnpm ERR! Linux 4.4.0-22-generic\nnpm ERR! argv \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"install\"\nnpm ERR! node v4.2.6\nnpm ERR! npm  v3.5.2\nnpm ERR! file sh\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno ENOENT\nnpm ERR! syscall spawn\nnpm ERR! electron-prebuilt@0.36.12 postinstall: node install.js\nnpm ERR! spawn ENOENT\nnpm ERR! \nnpm ERR! Failed at the electron-prebuilt@0.36.12 postinstall script 'node install.js'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the electron-prebuilt package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node install.js\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs electron-prebuilt\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls electron-prebuilt\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/myHomeDir/NyaoVim/npm-debug.log\nnpm ERR! Linux 4.4.0-22-generic\nnpm ERR! argv \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"run\" \"dep\"\nnpm ERR! node v4.2.6\nnpm ERR! npm  v3.5.2\nnpm ERR! code ELIFECYCLE\nnpm ERR! nyaovim@0.0.19 dep: npm install && bower install && typings install\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the nyaovim@0.0.19 dep script 'npm install && bower install && typings install'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the nyaovim package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     npm install && bower install && typings install\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs nyaovim\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls nyaovim\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/myHomeDir/NyaoVim/npm-debug.log\nnpm ERR! Linux 4.4.0-22-generic\nnpm ERR! argv \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"start\"\nnpm ERR! node v4.2.6\nnpm ERR! npm  v3.5.2\nnpm ERR! code ELIFECYCLE\nnpm ERR! nyaovim@0.0.19 start: npm run dep && npm run build && npm run app\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the nyaovim@0.0.19 start script 'npm run dep && npm run build && npm run app'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the nyaovim package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     npm run dep && npm run build && npm run app\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs nyaovim\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls nyaovim\nnpm ERR! There is likely additional logging output above\n```\nDoes anybody has a clue what is going on and how to solve this? \nMany thanks, Dave\n. sorry \"node\" was missing on Ubuntu. With node I was able to install. But starting nyaovim I get a blank window and I cannot do anything ...\n. ",
    "cookiengineer": "@Moeryn When installing it locally via npm install, the binaries are totally fucked up and don't work.\nThat means I get the same problem as @kraxli with a blank window with literally zero content and zero error messages in bash process.\nbash\nnyaovim-dummy/node_modules$ node nyaovim/bin/cli.js\nWhen trying to start nyaovim/main/main.js directly, electron node module can't be found.\nWhy is nyaovim not bundled as a zip file and served on npm anyways? This literally is kicking me off the project as a first-time user if there's no bundled zip download to download, extract & run available. Too many possible failures.\n. ",
    "ghost": "I don't get this error when I git clone this repository and type npm start, but I do get it from the npm package\n. nyaovim --version outputs this:\nApp threw an error when running [TypeError: Cannot read property 'getName' of undefined]\nAnd displays this dialog:\n\n. $ node -v\nv5.8.0\n$ npm -v\n3.7.3\n. Just updated.\n$ node -v\nv5.10.0\n$ npm -v \n3.8.3\nI also updated NyaoVim, but I'm still getting the same error.\n. I'm getting a similar issue on Manjaro with Colemak, except that, rather than treating, say,  as y as with @Moeryn's issue, I'm getting , which is what it would've been if I were using QWERTY. This happens for all keys pressed with Ctrl.\n. Sorry for the delay. I just checked it and I have the same warning.. ",
    "htzh": "I have the same problem. What I found is that it only happens when the echoed string contains newlines (\"\\n\"). Multiple echoes in a loop does not cause a problem.. ",
    "haifengkao": "I made an nyaovim.app.\nYou may check it out.\nThe release size after zipped is 51MB. Is it possible to reduce its size? (MacVim is only 7MB)\n. @rhysd I was hoping that you are going to release it. \nI can upload the app to homebrew if you like.\n. Event: 'closed'\nEmitted when the window is closed. After you have received this event you should remove the reference to the window and avoid using it any more.\nhttps://github.com/electron/electron/blob/master/docs/api/browser-window.md\n. You are right. they are different  indeed\n. superseded by https://github.com/rhysd/NyaoVim/pull/67\n. Done. Please check it out.\n. done. you are right about charCodeAt\n. This pull request will have troubles printing control characters.\nThe better way is to use ctrl-r \".\nSo I made a new commit :) \n. <c-r>\" in insert mode will break the format\nSame behavior for neovim and macvim.\n\n. Sharp! My font of actual behavior is Menlo for Powerline. The font of expected behavior is consolas. \nThis issue is indeed related to the font.\n. @rhysd thanks. I will tell neovim team\n. superceded by https://github.com/rhysd/NyaoVim/pull/95\n. This issue is really annoying. I can reproduce this issue with yyp as well. \nneovim doesn't have this issue.\nCan you give me a hint about where to look at?\n. If I execute nyaovim with npm start command, the unicode characters can be copied correctly.\nIf I use npm run pack:osx to create a standalone app and run it, the unicode cannot be copied or pasted.\n** Updated:\nIf I open the standalone app in terminal with open /Applications/Nyaovim.app, the unicode is handled correctly.\nIf I double-click to open the app, the unicode char cannot be copied or pasted.. I am pretty sure that this issue is from neovim.. You are right. Because I opened the file with nyaovim first,  nvim can open the same file in few secs. If I open the file with nvim first, nvim is very slow as well.\n. @rhysd I am sorry. I was wrong again. nvim can open the same big file in few secs. \nBut it didn't display the file content until I press ctrl-c. \nThe ctrl-c stuff is related to the plugins.\nIf I open the file with nvim -u NORC result.json, \nthe file will be displayed instantly.\n. If the plugins are removed, nyaovim can open the same big file in few seconds.\nIf the plugins are added, nyaovim can also open the file in few seconds if users press ctrl-c. \nIn my experiments, nvim and nyaovim can open a 200MB file in seconds without any problem.\n. thanks\n. Yes, it works with disable-meta-key.\nThanks :100: \n. I have added the OSX check for arguments\n. I think @rhysd should make the behavior default.\n. same here\n. Your fix doesn't work. I have to set Electron to 1.6.8 and fix every module versions in package.json to make npm start run without any errors.\nI think it is better to add package-lock.json to avoid any similar issues in the future. \nPlease refer to https://github.com/rhysd/NyaoVim/pull/119. Fixed in 59e2199. in favor of https://github.com/rhysd/NyaoVim/pull/121. I did. Hope that it will pass the CI. I guess it's fine to remove sublime related extension. hmm...\nI don't think this file is protected by the copyright law. The law only protects the content that shows creativeness. This file is a standard form required by apple. I can write my own form, but the result is pretty much the same.. atom's file is here https://github.com/atom/atom/blob/master/resources/mac/atom-Info.plist\nThey looks pretty much the same. \nI guess I need to teach githubbers the correct copyright knowledge. \n. Copyrightability of Tables, Charts, and Graphs  can give you some info about copyright laws.\n. as you requested. . I guess it's very hard to change people's mind with the facts.. Electron 1.6.8 doesn't have this issue. Yes, but if you access the window state in 'close' event, you will receive Object has been destroyed message because the window state have been destroyed in 'close' event.\nIf you don't like to save the window size for each 'resize' event, you can cache the window state in 'resize' event and save it in the 'close' event. This method requires some internal API change and I will leave the decision to you.\n. client.eval('mode()') doesn't work for visual block mode. \n. True. But this issue only happens when a user double-clicks a document to open NyaoVim. It cannot be reproduced for an npm module.\n. agree\n. This is a big issue. electron-builder asks me to move electron-prebuilt to dev dependency. Maybe we need a two different package.json?\n. ok\n. easier for me to debug the code XD\n. It will certainly work, but the doc says put it inside will-finish-launching. So I did as it says.\n\n. I don't use Linux or Windows :(\n. Working on OSX is better than not working at all :)\n. You may ask some beta testers to test it :)\n. Yes, but it will break if there are other types of webContents in the future (I know there are only nyaovim and the dev tool at this moment). . I can get the isFocused() in the dev tool by require('electron').remote.getCurrentWindow().webContents.isFocused().\nHowever, tsc reports isFocused doesn't exist. \n\nCan you tell me what's wrong?\n. done. <C-o> is an insert mode command, so it won't work for normal!. ",
    "munyari": "Hey @rhysd :smile: Is there anything holding this PR from being merged? The README could do with some updating in its language\n. Cool, I might submit another PR\n. I just opened another PR, #73 \n. ",
    "sbdchd": "I think by making significant formatting changes, along with grammar / spelling, this pull request is unreadable & not very useful.\nFor that reason, I think it is better to close.\n. ",
    "amagee": "Same issue here with Dvorak layout; issue goes away immediately if I change the layout to QWERTY -- so looks like it's a general issue with non-QWERTY layouts?. Did a bit of digging. Turns out that in the 'keydown' handler NeovimInput.prototype.onInputNonText, event.key is already wrong. This seems relevant: https://github.com/atom/atom-keymap/issues/37. Yep, I was able to fix the problem by editing the NyaoVim's package.json file, replacing the electron-prebuilt version to \"*\" and doing an npm upgrade.. ",
    "denysvitali": "I'm having a similar problem with Atom installed via AUR. The Z / Y keys are inverted (I use a QWERTZ keyboard). When I type \"z\" in Atom the character is displayed correctly (a \"z\" apperas), but when I use a shortcut it is inverted.\nEdit: Switching back to Atom downloaded from atom.io solves the issue. Will check, thanks @Reylak !. ",
    "RMKD": "It seems this can be traced to using a later version of Electron: https://github.com/atom/atom/issues/13170 - I am seeing the Ctrl + dvorak error on Manjaro with electron 1.4.12-1 installed. \nI solved by uninstalling the community edition and installing atom-editor-bin from AUR (which bundles the correct version of electron) https://bugs.archlinux.org/task/50357. ",
    "Reylak": "Just to say that update 1.4.12-2 of electron solved the problem of wrong keymap for Ctrl+<> bindings. This was discussed about in this ArchLinux bug report.\nFor ArchLinux users, this is now the version available from official community repo for (compiled on 17/12/2016).. ",
    "idoo": "@trusktr \nhttps://github.com/rhysd/NyaoVim#configure-editor-options\nvim ~/.config/nyaovim/nyaovimrc.html\n\n\n```\n Component tags here \n<neovim-editor\n  id=\"nyaovim-editor\"\n  argv$=\"[[argv]]\"\n  font-size=\"13\"\n  font=\"Menlo-bold\"\n  line-height=\"1.4\"\n\n\n\n```\n\n\n\n\n. ",
    "rakshazi": "@rhysd do you have any ideas?\n. ",
    "talhaanees": "@rhysd electron-prebulit failed for me and dist directory doesn't exist. ",
    "thebetterjort": "Error is a result of compiling failure from your FROM: alpine image.. Switch to node:7.10.1+ full image to get it working.. ",
    "gosukiwi": "Same here. Using Windows 10 14352 insider build.\n. Personally, the issue I had was related to my .vimrc. It was not compatible with neovim, it seems. It would be great to get an error message instead of just a blank screen though.\n. ",
    "gwerbin": "Same problem here, too... except did you switch \"expected\" and \"actual\" behavior?\nI'm on OS X 10.11.5\nNyaoVim version 0.0.19\n  electron : 0.36.12\n  chrome : 47.0.2526.110\n  node : 5.1.1\n  v8 : 4.7.80.27\n```\nNVIM v0.1.5-800-gecbc9db\nBuild type: Release\nCompilation: /usr/local/Library/ENV/4.3/clang -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DNDEBUG -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -I/tmp/neovim-20160529-87005-2rt9sk/build/config -I/tmp/neovim-20160529-87005-2rt9sk/src -I/tmp/neovim-20160529-87005-2rt9sk/deps-build/usr/include -I/tmp/neovim-20160529-87005-2rt9sk/deps-build/usr/include -I/tmp/neovim-20160529-87005-2rt9sk/deps-build/usr/include -I/tmp/neovim-20160529-87005-2rt9sk/deps-build/usr/include -I/tmp/neovim-20160529-87005-2rt9sk/deps-build/usr/include -I/tmp/neovim-20160529-87005-2rt9sk/deps-build/usr/include -I/usr/local/opt/gettext/include -I/usr/include -I/usr/include -I/tmp/neovim-20160529-87005-2rt9sk/build/src/nvim/auto -I/tmp/neovim-20160529-87005-2rt9sk/build/include\nCompiled by greg@greg-macbook.local\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui\nFor differences from Vim, see :help vim-differences\nsystem vimrc file: \"$VIM/sysinit.vim\"\n  fall-back for $VIM: \"/usr/local/Cellar/neovim/HEAD/share/nvim\"\n```\n. FWIW I see this error in the devloper console (and nothing else):\nUncaught TypeError: Cannot read property 'prototype' of undefined\n. Any updates on this?\n. @gosukiwi I tried renaming/disabling both my .vimrc and nvim/init.vim files, still got a blank white window.\n. Is this related to #53?\n. I'm not sure what other changes were made in https://github.com/neovim/node-client/commit/31d085e279d852ba5e4cbeafdce56b87766e11e9, but my PR seems to fix the startup crash: https://github.com/rhysd/promised-neovim-client/pull/1\n. I think the main issue right now is that the nyaovimrc options are not documented.\n. ",
    "deto": "Yeah. Whoops.  Hope it's obvious from context \n. ",
    "tjdevries": "I have the same problem, with the same error as noted by @gwerbin.\nHas anyone found a solution to this? Maybe reverting to an older version of Neovim?\n. ",
    "jonsmithers": "I'm getting this issue in Ubuntu. I was able to print a stacktrace:\nTypeError: Cannot read property 'prototype' of undefined\n    at generateWrappers (/home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/promised-neovim-client/index.js:75:13)\n    at /home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/promised-neovim-client/index.js:189:13\n    at Session._parse_message (/home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/msgpack5rpc/index.js:96:5)\n    at Decoder.<anonymous> (/home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/msgpack5rpc/index.js:42:11)\n    at emitOne (events.js:77:13)\n    at Decoder.emit (events.js:169:7)\n    at readableAddChunk (/home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/msgpack5/node_modules/readable-stream/lib/_stream_readable.js:210:18)\n    at Decoder.Readable.push (/home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/msgpack5/node_modules/readable-stream/lib/_stream_readable.js:169:10)\n    at Decoder.Transform.push (/home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/msgpack5/node_modules/readable-stream/lib/_stream_transform.js:123:32)\n    at Decoder._transform (/home/smithers/.npm-global/lib/node_modules/nyaovim/node_modules/msgpack5/lib/streams.js:65:10)\nRenaming .vimrc didn't help.\n. ",
    "ikouchiha47": "I am having the same problem on Debian Jessie, using nvim 0.1.1 .\n. ",
    "htfy96": "Confirmed on my Arch Linux x64 with Gnome.\nNyaoVim version 0.0.20\n  electron : 1.3.4\n  chrome : 52.0.2743.82\n  node : 6.3.0\n  v8 : 5.2.361.43\n```\n\u279c  ~ nvim -v\nNVIM v0.1.6-27-g0b5a7e4\nBuild type: Dev\nCompilation: /usr/bin/cc -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -g -fvar-tracking-assignments -Wconversion -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -D_GNU_SOURCE -I/tmp/yaourt-tmp-lz/aur-neovim-git/src/neovim-git/build/config -I/tmp/yaourt-tmp-lz/aur-neovim-git/src/neovim-git/src -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/tmp/yaourt-tmp-lz/aur-neovim-git/src/neovim-git/build/src/nvim/auto -I/tmp/yaourt-tmp-lz/aur-neovim-git/src/neovim-git/build/include\nCompiled by lz@lzPC\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui    \nFor differences from Vim, see :help vim-differences\n System vimrc : \"$VIM/sysinit.vim\"\n     $VIM preset: \"/usr/share/nvim\"\n\n```\nRun it with gdb --args node /usr/bin/nyaovim --no-detach -u NONE and pause it with C-Z, then bt outputs as follow:\n```\n(gdb) info threads \n  Id   Target Id         Frame \n* 1    Thread 0x7ffff7fb0740 (LWP 12617) \"node\" 0x00007ffff5707f19 in syscall () from /usr/lib/libc.so.6\n  2    Thread 0x7ffff7ff7700 (LWP 12621) \"node\" 0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n  3    Thread 0x7ffff398f700 (LWP 12622) \"V8 WorkerThread\" 0x00007ffff77aa330 in ?? () from /usr/lib/libuv.so.1\n  4    Thread 0x7ffff318e700 (LWP 12623) \"V8 WorkerThread\" 0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n  5    Thread 0x7ffff298d700 (LWP 12624) \"V8 WorkerThread\" 0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n  6    Thread 0x7ffff218c700 (LWP 12625) \"V8 WorkerThread\" 0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n(gdb) thread apply all bt\nThread 6 (Thread 0x7ffff218c700 (LWP 12625)):\n0  0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n1  0x00007ffff73825a4 in __new_sem_wait_slow.constprop.0 () from /usr/lib/libpthread.so.0\n2  0x0000000000e77b08 in v8::base::Semaphore::Wait() ()\n3  0x0000000000de1339 in v8::platform::TaskQueue::GetNext() ()\n4  0x0000000000de169c in v8::platform::WorkerThread::Run() ()\n5  0x0000000000e78e20 in ?? ()\n6  0x00007ffff737a454 in start_thread () from /usr/lib/libpthread.so.0\n7  0x00007ffff570c7df in clone () from /usr/lib/libc.so.6\nThread 5 (Thread 0x7ffff298d700 (LWP 12624)):\n0  0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n1  0x00007ffff73825a4 in __new_sem_wait_slow.constprop.0 () from /usr/lib/libpthread.so.0\n2  0x0000000000e77b08 in v8::base::Semaphore::Wait() ()\n3  0x0000000000de1339 in v8::platform::TaskQueue::GetNext() ()\n4  0x0000000000de169c in v8::platform::WorkerThread::Run() ()\n5  0x0000000000e78e20 in ?? ()\n6  0x00007ffff737a454 in start_thread () from /usr/lib/libpthread.so.0\n7  0x00007ffff570c7df in clone () from /usr/lib/libc.so.6\nThread 4 (Thread 0x7ffff318e700 (LWP 12623)):\n0  0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n1  0x00007ffff73825a4 in __new_sem_wait_slow.constprop.0 () from /usr/lib/libpthread.so.0\n2  0x0000000000e77b08 in v8::base::Semaphore::Wait() ()\n3  0x0000000000de1339 in v8::platform::TaskQueue::GetNext() ()\n4  0x0000000000de169c in v8::platform::WorkerThread::Run() ()\n5  0x0000000000e78e20 in ?? ()\n6  0x00007ffff737a454 in start_thread () from /usr/lib/libpthread.so.0\n7  0x00007ffff570c7df in clone () from /usr/lib/libc.so.6\nThread 3 (Thread 0x7ffff398f700 (LWP 12622)):\n0  0x00007ffff77aa330 in ?? () from /usr/lib/libuv.so.1\n1  \n2  0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n3  0x00007ffff73825a4 in __new_sem_wait_slow.constprop.0 () from /usr/lib/libpthread.so.0\n4  0x0000000000e77b08 in v8::base::Semaphore::Wait() ()\n5  0x0000000000de1339 in v8::platform::TaskQueue::GetNext() ()\n6  0x0000000000de169c in v8::platform::WorkerThread::Run() ()\n7  0x0000000000e78e20 in ?? ()\n8  0x00007ffff737a454 in start_thread () from /usr/lib/libpthread.so.0\n9  0x00007ffff570c7df in clone () from /usr/lib/libc.so.6\n---Type  to continue, or q  to quit---\nThread 2 (Thread 0x7ffff7ff7700 (LWP 12621)):\n0  0x00007ffff73824f7 in do_futex_wait.constprop () from /usr/lib/libpthread.so.0\n1  0x00007ffff73825a4 in __new_sem_wait_slow.constprop.0 () from /usr/lib/libpthread.so.0\n2  0x00007ffff77ae032 in uv_sem_wait () from /usr/lib/libuv.so.1\n3  0x0000000000d721a2 in node::DebugSignalThreadMain(void*) ()\n4  0x00007ffff737a454 in start_thread () from /usr/lib/libpthread.so.0\n5  0x00007ffff570c7df in clone () from /usr/lib/libc.so.6\nThread 1 (Thread 0x7ffff7fb0740 (LWP 12617)):\n0  0x00007ffff5707f19 in syscall () from /usr/lib/libc.so.6\n1  0x00007ffff77b2e0a in ?? () from /usr/lib/libuv.so.1\n2  0x00007ffff77b113d in ?? () from /usr/lib/libuv.so.1\n3  0x00007ffff77a2c44 in uv_run () from /usr/lib/libuv.so.1\n4  0x0000000000d71a70 in node::Start(int, char**) ()\n5  0x00007ffff5644291 in __libc_start_main () from /usr/lib/libc.so.6\n6  0x00000000006c7d3a in _start ()\n```\nIt seems that this bug is probably caused by deadlock.\nSingle step result: \ndebug.log.zip\n. Fixed after upgrading nyaovim from 0.0.20 to 0.0.21.\nIt seems that only 0.0.20 + nvim0.1.5 & 0.0.21 + nvim 0.1.6 work fine.\n. Confirmed on my ArchLinux with nvim 0.1.5 and Gnome 3.20.3.\n\n. ",
    "Ginden": "I have the same issue.\n```\nginden@ginden:~/Projects/node$ nvim -v\nNVIM 0.1.6-dev\nBuild type: RelWithDebInfo\nCompilation: /usr/bin/x86_64-linux-gnu-gcc -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -O2 -g -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -D_GNU_SOURCE -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/build/config -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/src -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/.deps/usr/include -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/.deps/usr/include -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/.deps/usr/include -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/.deps/usr/include -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/.deps/usr/include -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/.deps/usr/include -I/usr/include -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/build/src/nvim/auto -I/build/neovim-cFoKmP/neovim-0.1.5ubuntu1+git201608291835+2734+21~ubuntu16.04.1/build/include\nCompiled by buildd@lgw01-41\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui    \nFor differences from Vim, see :help vim-differences\nsystem vimrc file: \"$VIM/sysinit.vim\"\n  fall-back for $VIM: \"/usr/share/nvim\"\n```\nNyaovim package.json:\n\"_id\": \"nyaovim@0.0.20\",\n  \"_resolved\": \"https://registry.npmjs.org/nyaovim/-/nyaovim-0.0.20.tgz\",\nSystem info:\n`\n                          ./+o+-       ginden@ginden\n                  yyyyy- -yyyyyy+      OS: Ubuntu 16.04 xenial\n               ://+//////-yyyyyyo      Kernel: x86_64 Linux 4.4.0-34-generic\n           .++ .:/++++++/-.+sss/`      Uptime: 14m\n         .:++o:  /++++++++/:--:/-      Packages: 1950\n        o:+o+:++.`..```.-/oo+++++/     Shell: bash 4.3.46\n       .:+o:+o/.          `+sssoo+/    Resolution: 1920x1200\n  .++/+:+oo+o:`             /sssooo.   DE: Unity 7.4.0\n /+++//+:`oo+o               /::--:.   WM: Compiz\n \\+/+o+++`o++o               ++////.   WM Theme: Ambiance\n  .++.o+++oo+:`             /dddhhh.   GTK Theme: Ambiance [GTK2/3]\n       .+.o+oo:.          `oddhhhh+    Icon Theme: ubuntu-mono-dark\n        \\+.++o+o``-````.:ohdhhhhh+     Font: Ubuntu 11\n         `:o+++ `ohhhhhhhhyo++os:      CPU: Intel Core i5-6600 CPU @ 3.9GHz\n           .o:`.syhhhhhhh/.oo++o`      GPU: GeForce GTX 960\n               /osyyyyyyo++ooo+++/     RAM: 1765MiB / 16000MiB +oo+++o\\:  \n                          `oo++.      \n``````\nIssue persist with nyaovim 0.0.18, 0.0.16, 0.0.14.\n. ",
    "israelg99": "Same issue with Kubuntu 16.04.\nAny solutions yet? I'll try to investigate further.\nMore details:\n- I'm using nvm to manage Node versions\n- I have NeoVim 1.6-dev, Vim and gVim. \n- NyaoVim never worked for me, showed white blank screen since install.\n- My nvim files are in ~/.config/nvim/(sl to .vim) and config file is ~/.config/nvim/init.vim (sl to .vimrc)\n- My vim files are in ~/.vim/ and config file is ~/.vim/.vimrc\nI try to provide as many details as possible that may be the cause of the bug, perhaps you guys can notice any patterns? maybe nvm, anyone with this issue uses nvm?\n. ",
    "crazymanjinn": "Seeing the same behavior. It's also interesting that if I launch nyaovim with NODE_ENV=debug, the devtools window doesn't pop-up. If I roll-back to nyaovim 0.0.20, the devtools do pop-up although the blank window behavior is the exact same.\n```\nnvim --version\nNVIM v0.1.6-93-g7eb4d2f\nBuild type: Release\nCompilation: /usr/local/Library/Homebrew/shims/super/clang -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DNDEBUG -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -I/tmp/neovim-20160913-59962-1yxmdyt/build/config -I/tmp/neovim-20160913-59962-1yxmdyt/src -I/tmp/neovim-20160913-59962-1yxmdyt/deps-build/usr/include -I/tmp/neovim-20160913-59962-1yxmdyt/deps-build/usr/include -I/tmp/neovim-20160913-59962-1yxmdyt/deps-build/usr/include -I/tmp/neovim-20160913-59962-1yxmdyt/deps-build/usr/include -I/tmp/neovim-20160913-59962-1yxmdyt/deps-build/usr/include -I/tmp/neovim-20160913-59962-1yxmdyt/deps-build/usr/include -I/usr/local/opt/gettext/include -I/usr/include -I/usr/include -I/tmp/neovim-20160913-59962-1yxmdyt/build/src/nvim/auto -I/tmp/neovim-20160913-59962-1yxmdyt/build/include\nCompiled by daniel.samplin@DSamplinerDUR-MBP.local\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui\nFor differences from Vim, see :help vim-differences\nsystem vimrc file: \"$VIM/sysinit.vim\"\n  fall-back for $VIM: \"/usr/local/Cellar/neovim/HEAD-7eb4d2f/share/nvim\"\nnyaovim --version\nNyaoVim version 0.0.21\n  electron : 1.3.5\n  chrome : 52.0.2743.82\n  node : 6.3.0\n  v8 : 5.2.361.43\n```\n. ",
    "fsworld009": "Same issue with nvim 0.1.6 and nyaovim 0.0.21 under Windows 7 x64\nI also tried leaving init.vim as blank but it didn't help.\nneovim-qt works in my environment, so I believe nvim is installed correctly.\n```\nC:>nvim -v\nNVIM v0.1.6-833-g35f67ee\nBuild type: Release\nCompilation: C:/msys64/mingw64/bin/gcc.exe -Wconversion -O2 -DNDEBUG -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -D__USE_MINGW_ANSI_STDIO -D_WIN32_WINNT=0x0600 -Wvla -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -IC:/projects/neovim/build/config -IC:/projects/neovim/src -IC:/projects/neovim/.deps/usr/include -IC:/projects/neovim/.deps/usr/include -IC:/projects/neovim/.deps/usr/include -IC:/projects/neovim/.deps/usr/include -IC:/msys64/mingw64/include -IC:/msys64/mingw64/include -IC:/projects/neovim/build/src/nvim/auto -IC:/projects/neovim/build/include\nCompiled by appvyr-winppveyor@APPVYR-WIN\nOptional features included (+) or not (-): -acl   +iconv    -jemalloc -tui\nFor differences from Vim, see :help vim-differences\nsystem vimrc file: \"$VIM\\sysinit.vim\"\n  fall-back for $VIM: \"C:/Program Files (x86)/nvim/share/nvim\"\n```\n```\nC:>nyaovim --version\nNyaoVim version 0.0.21\n  electron : 1.4.0\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\n```\n. Same issue with Mac OSX 10.11.6 + neovim 0.1.5\nRemoving init.vim didn't help, either.\n```\n$  nvim -v\nNVIM 0.1.5\nBuild type: RelWithDebInfo\nCompilation: /usr/local/Library/Homebrew/shims/super/clang -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/build/config -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/src -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/deps-build/usr/include -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/deps-build/usr/include -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/deps-build/usr/include -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/deps-build/usr/include -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/deps-build/usr/include -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/deps-build/usr/include -I/usr/local/opt/gettext/include -I/usr/include -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/build/src/nvim/auto -I/tmp/neovim-20160916-38433-p43n66/neovim-0.1.5/build/include\nCompiled by fsworld009@fsworld009-MacBook-Pro.local\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui    \nFor differences from Vim, see :help vim-differences\nsystem vimrc file: \"$VIM/sysinit.vim\"\n  fall-back for $VIM: \"/usr/local/Cellar/neovim/0.1.5/share/nvim\"\n```\n$  nyaovim --version\nNyaoVim version 0.0.21\n  electron : 1.4.0\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\n. Reverting nyaovim to 0.0.20, both Windows 7 and Mac environment work now.\nFor anyone who wants to revert, do\nnpm uninstall -g nyaovim\nnpm install -g nyaovim@0.0.20\n. According to package.json doc, \"^1.3.5\" means  \"Compatible with version 1.3.5\". Not sure how this condition is checked but I think v1.4.0 is counted as compatible here. So if the application depends on 1.3.5 only you might want to change your package.json to\n\n\"electron-prebuilt\": \"1.3.5\"\n\nto force v1.3.5.\n. ",
    "szsdk": "Still have problem with 0.021 + nvim 0.1.6\nNyaoVim version 0.0.21\n  electron : 1.4.0\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\nNVIM 0.1.6-dev\n. @rhysd Sorry, I don't know how to use the DevTools. I'm totally newbie here. Maybe I can learn it latter.\nI didn't install it by hand. I use your command\nsudo npm install -g nyaovim\nAnd my system is Ubuntu 14.04.\n. @rhysd \nIt shows \nDevTools was disconnected from the page.\nAnd there is nothing showed in console.\n. It works on\nNyaoVim version 0.0.22\n  electron : 1.4.1\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\n. ",
    "deathmaz": "sh\n$ nyaovim --version\nNyaoVim version 0.0.21\n  electron : 1.4.1\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\nAfter this command:\n$ NODE_ENV=debug nyaovim -u NONE --no-detach\nWhite screen in NyaoVim,\nno output in console,\nDevTools was disconnected from the page. when i switch to DevTools,\nempty DevTools console.\n. Confirmed, it works on Linux NVIM v0.1.6-175-g7246750\nThank you!\n. ",
    "raacker": "@rhysd I tried on \n$ NODE_ENV=debug nyaovim -u NONE --no-detach\nand \nUncaught TypeError : Cannot read property 'prototype' of undefined occurred! as I saw above.\nI'm using Linux-mint and tried to roll-back to 0.0.20\nNyaoVim version 0.0.20\n  electron : 1.4.1\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\nand also I tried on 0.0.21, It produced DevTools was disconnected from the page.\nI think there's problem in using APIs\n. Nope... unfortunately, I'm using nvim 0.1.6... \nNVIM v0.1.6-143-g68bcb32\n. I cloned neovim and built it. \n```\nNVIM v0.1.6-143-g68bcb32\nBuild type: Debug\nCompilation: /usr/bin/cc -Wconversion -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector --param ssp-buffer-size=4 -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -D_GNU_SOURCE -I/home/haven/neovim/build/config -I/home/haven/neovim/src -I/home/haven/neovim/.deps/usr/include -I/home/haven/neovim/.deps/usr/include -I/home/haven/neovim/.deps/usr/include -I/home/haven/neovim/.deps/usr/include -I/home/haven/neovim/.deps/usr/include -I/home/haven/neovim/.deps/usr/include -I/usr/include -I/home/haven/neovim/build/src/nvim/auto -I/home/haven/neovim/build/include\nCompiled by root@Havenmachine\nOptional features included (+) or not (-): +acl   +iconv    +jemalloc +tui    \nFor differences from Vim, see :help vim-differences\nsystem vimrc file: \"$VIM/sysinit.vim\"\n  fall-back for $VIM: \"/usr/local/share/nvim\"\n```\nDo I have to use brew instead of build it myself?\n. Ah... maybe it is not for Release type... :) I'll try on release version! Thanks !\n. I think there's an issue between 0.1.6-104 to 0.1.6-14x. That's only different\n. Okay! I'l work on it today and if it still has that issue, I'll create one :) Thank you!\n. Wow... It really works! Thanks you for everyone in here :p \n. I was about to make an issue! I'm facing same problem.\n- OS: Linux-mint\n- NyaoVim version: just installed\n- nvim version: just installed\n- Keyboard layout: Korean\nTried to update all components like npm or nodejs or anything, it still doens't work. \nAny idea?\n. Oh Yes I guess. Looks same problem! I'll check out #53 comments. \n. ",
    "sinkuu": "I'm experiencing this problem, but DevTools can be launched and no errors at all in its console.\nUsing nvim v0.1.6-175-g7246750 and nyaovim 0.0.21 with electron 1.4.1.\n\nThank you for your try. Hmm... $ELECTRON_ENABLE_LOGGIN may be helpful. Could you try below?\n$ ELECTRON_ENABLE_LOGGIN=yes NODE_ENV=debug nyaovim -u NONE\n\nIsn't the correct env var ELECTRON_ENABLE_LOGGING? https://github.com/electron/electron/blob/master/docs/api/environment-variables.md\nStill no helpful logs on my mechine though.\nbash\n$ ELECTRON_ENABLE_LOGGING=true NODE_ENV=debug nyaovim --no-detach\n[7500:0929/113819:ERROR:browser_main_loop.cc(239)] GTK theme error: Unable to locate theme engine in module_path: \"murrine\",\n(This error message seems unrelated - installing murrine theme resolves it and getting a blank window anyway)\n. I inserted console.log here and there, and found that the nyaovim stalled at this line:\ntypescript\nif (browser_config.loaded_config.show_menubar === false) { // <===\n        win.setMenuBarVisibility(false);\n}\nSo the problem (on my machine, probably) is the configuration not loaded or something. I created browser-config.json\nbash\n$ echo '{}' > ~/.config/nyaovim/browser-config.json\nand NyaoVim worked :smile:\n. ",
    "ukch": "I have realised I can press 'alt' to toggle the menu on and off. Perhaps it would be helpful to mention this in the readme, for those of us who are not so familiar with Electron?\n. Hi, according to electron-userland/electron-packager#128 this can be done by passing the icon argument to BrowserWindow, e.g.:\njs\nnew BrowserWindow({icon: NativeImage.createFromPath(\"/path/to/icon.png\")})\n. ",
    "Delapouite": "Pressing alt to reveal hidden menus is not specific to Electron. Similiar behavior can be triggered on other apps like Firefox for instance. But yes some clarification is always better.\n. ",
    "Kudzuyu": "\u7d20\u65e9\u3044\u304a\u8fd4\u4e8b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u4ed6\u306b\u4e0d\u6e80\u306f\u306a\u3044\u306e\u3067\u3001\u65e5\u672c\u8a9e\u3092\u6253\u3064\u6642\u3060\u3051\u5225\u306e\u30a8\u30c7\u30a3\u30bf\u3092\u4f7f\u3046\u306a\u3069\u3057\u3066\u5bfe\u5fdc\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n. ",
    "nwaywood": "Yes updating to 0.1.5 fixed the issue, thank you.\n. ",
    "ytac8": "electron\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.3.4\u3067\u3057\u305f\n\u3053\u3061\u3089\u304cnyaovim --version \u3057\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\nNyaoVim version 0.0.20\n  electron : 1.3.4\n  chrome : 52.0.2743.82\n  node : 6.3.0\n  v8 : 5.2.361.43\n. \n\n\u3053\u306e\u8fba\u308a\u306e\u60c5\u5831\u3067\u5927\u4e08\u592b\u3067\u3057\u3087\u3046\u304b\uff1f\n. \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff0e\ndevtools\u3092\u898b\u305f\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u69d8\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3044\u307e\u3057\u305f\uff0e\n\n. \u304a\u8fd4\u4e8b\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\uff0e\n\u4eca\u65e5\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\uff0c\u4e00\u756a\u6700\u521d\u306e\u72b6\u614b\u3068\u5909\u308f\u3089\u305a\u8d77\u52d5\u3057\u305f\u5f8c\u3082\u767d\u3044\u753b\u9762\u306e\u307e\u307e\u3067\u3057\u305f\uff0e\n/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-9.1.12/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 3\n\u3053\u3061\u3089\u306e\u30a8\u30e9\u30fc\u3082\u6b8b\u3063\u3066\u304a\u308a\u307e\u3059\uff0e\nnyaovim --version\u3057\u305f\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\nNyaoVim version 0.0.21\n  electron : 1.4.0\n  chrome : 53.0.2785.113\n  node : 6.5.0\n  v8 : 5.3.332.45\n$ NODE_ENV=debug nyaovim\u3082\u3084\u3063\u3066\u307f\u305f\u306e\u3067\u3059\u304c\uff0c\u753b\u9762\u304c\u767d\u3044\u307e\u307e\u3067\u4f55\u3082\u51fa\u3066\u3053\u306a\u304b\u3063\u305f\u3067\u3059\uff0e\n. \u539f\u56e0\u304c\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3059\u304c\uff0c\nNODE_ENV=debug nyaovim\n\u3092\u5b9f\u884c\u3057\u3066\u3082console\u304c\u51fa\u3066\u3053\u306a\u3044\u72b6\u614b\u3067\u3059\u2026\n. \u8a66\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u3088\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\uff0e\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3082\u898b\u3066\u307f\u307e\u3057\u305f\u304c\u4f55\u3082\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u3067\u3059\u2026\n\n\n. \u306a\u308b\u307b\u3069\u2026\u4e00\u5ea6\u30a8\u30ec\u30af\u30c8\u30ed\u30f3\u3092\u5165\u308c\u76f4\u3057\u3066\u307f\u307e\u3059\uff01\n. @rhysd\n\u6cbb\u3063\u3066\u3044\u307e\u3057\u305f.\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-9.1.12/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 3\n\u306f\u4f9d\u7136\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u8d77\u52d5\u3067\u304d\u307e\u3057\u305f\uff01\n\u305f\u3060nyaovim\u306e\u554f\u984c\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3059\u304c\uff0cmac\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u4e0a\u3067\u306f\u8868\u793a\u306f\u7279\u306b\u554f\u984c\u306f\u306a\u3044\u306e\u3067\u3059\u304c\uff0c\u5916\u90e8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u4e0a\u306b\u6301\u3063\u3066\u3044\u304f\u3068nyaovim\u5185\u306e\u6587\u5b57\u304c\u3068\u3066\u3082\u5c0f\u3055\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u554f\u984c\u304c\u51fa\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3057\u305f\uff0e\nMac\u306eRetina\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u4e0a\u3067nyaovim\u3092\u958b\u3044\u305f\u3068\u304d\n\nnyaovim\u3092\u5916\u90e8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u4e0a\u306b\u6301\u3063\u3066\u3044\u3063\u305f\u3068\u304d\n\n\u898b\u3065\u3089\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u4e0a\u8a18\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u6587\u5b57\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\u307e\u305f\u633f\u5165\u30e2\u30fc\u30c9\u306e\u633f\u5165\u3068\u3044\u3046\u6587\u5b57\u304c\u6f70\u308c\u3066\u3057\u307e\u3046\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u2026\n\u4ee5\u524d\u306f\u7279\u306b\u3053\u3046\u3044\u3063\u305f\u3053\u3068\u306f\u306a\u304b\u3063\u305f\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u306e\u3067\u3059\u304c\uff0c\u3053\u3046\u3044\u3063\u305f\u3053\u3068\u304c\u8d77\u304d\u308b\u306e\u306f\u50d5\u3060\u3051\u3067\u3057\u3087\u3046\u304b\uff1f\n. ",
    "lambdalisue": "\u672c\u65e5\u4e45\u3057\u3076\u308a\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3068\u3053\u308d\u3001\u540c\u69d8\u306e\u75c7\u72b6\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u306a\u304a\u3001electron \u306a\u3069\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u5168\u304f\u540c\u3058\u3067 devtools \u304c\u6a5f\u80fd\u3057\u3066\u3044\u306a\u3044\u70b9\u3082\u540c\u69d8\u3067\u3059\u3002\u3054\u5831\u544a\u307e\u3067\n. ^ \u304c\u3064\u3044\u3066\u3044\u307e\u3059\u304c \"electron-prebuilt\": \"1.3.5\", \u306e\u9593\u9055\u3044\u3067\u306f\uff1f\nhttp://qiita.com/sotarok/items/4ebd4cfedab186355867#%E3%82%AD%E3%83%A3%E3%83%AC%E3%83%83%E3%83%88%E8%A1%A8%E8%A8%98-\n. \u304a\u306d\u304c\u3044\u3057\u307e\u3059 :-)\n. \u6cbb\u3063\u3066\u307e\u3057\u305f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002:tada:\n. Hum... I feel using nyaovim#execute_javascript() is too specialized while that function also require javascript code. Why don't you let users to send a message with rpcnotify? (or am I misunderstood the architecture?)\nMy willing is something like:\nvim\ncall rpcnotify(0, 'Fullscreen', 1) \" Enable fullscreen\ncall rpcnotify(0, 'Fullscreen', 0) \" Disable fullscreen\ncall rpcnotify(0, 'Fullscreen', -1) \" Toggle fullscreen\n\" Additional\ncall rpcnotify(0, 'GuiFont', 'Ricty:h10')\ncall rpcnotify(0, 'Menu', 0)\n\" or whatever...\n. > Please note that NyaoVim doesn't intend that so many things're not done in Vim script. You can always use JavaScript from nyaovimrc.html for GUI configuration with CSS or attribute of  element.\nI see. It makes sense.\nThanks!\n. > At least, I think fullscreen option should be reflected (it should be notified via UI RPC API).\nThen the world becomes more helpful ;-)\n. It seems my explanation was not enough sorry \ud83d\ude1e \nI also confirm that hitting Ctrl+Shift+6 send Ctrl+^ in NyaoVim but I ment that hitting Ctrl+6 should send Ctrl+^ instead of Ctrl+6.\nThis behavior is confirmed in vim/nvim/GVim/MacVim\nhttp://vim-jp.org/vimdoc-ja/editing.html#CTRL-^\nNote:\nI found that even Ctrl+6 send Ctrl+^ even in JIS keyboard (an alternative key of 6 is &) in my environment. If this is true, probably neovim-component should send an fixed alternative key of individual Ctrl+{digit} I guess.\n. >  If neovim-qt is also handling it, it's strong proof of it :)\nI think you should follow GVim/MacVim and Vim's help rather than neovim-qt while neovim-qt is under development and it has a bug for some mappings\nI think the proof is the following sentence on http://vimdoc.sourceforge.net/htmldoc/editing.html#CTRL-^\n\nMostly the ^ character is positioned on the 6 key,\npressing CTRL and 6 then gets you what we call CTRL-^.\n. Memo: https://github.com/vim/vim/blob/d58b0f982ad758c59abe47627216a15497e9c3c1/src/gui_w32.c#L1956-L1989 \n. @mattn gave me a direction. I would like to express my gratitude :-)\n. \n",
    "MikaAK": "Awesome thanks! When you mean menu access does that mean it's not forwarding it to neovim properly? I was having some issues getting my command key bindings to work as well though they worked with the alt key instead, I'm coming right out MacVim \ud83d\ude1c it could of been a config issue on my end though \n. ",
    "baronTommy": "\u6065\u3092\u3055\u3089\u3057\u3066\u3044\u308b\u3060\u3051\u3057\u305f\u3002\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\uff61\nprocess.env.PATH\u5b9f\u884c\u7d50\u679c\u3067\u3059\n/usr/bin:/bin:/usr/sbin:/sbin\n\u4fee\u6b63\u3057\u307e\u3057\u305f\n``` html\n   Component tags here \n  <neovim-editor\n    id=\"nyaovim-editor\"\n    argv=\"[[argv]]\"\n    nvim-cmd=\"/usr/local/bin/nvim\"\n\n\n```\n\nDevTools\u306e\u4e0b\u8a18\u51fa\u529b\u306f\u7121\u304f\u306a\u308a\u307e\u3057\u305f\nevents.js:141 Uncaught Error: write EPIPE\nevents.js:141 Uncaught Error: spawn nvim ENOENT\n. \u3053\u3061\u3089\u306e\u5185\u5bb9\u306b\u8fd1\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhttps://github.com/rhysd/NyaoVim/issues/53\n\u53c2\u8003\u306b\u306a\u308c\u3070\u3054\u5229\u7528\u304f\u3060\u3055\u3044\nissues\u306eClose\u306f\u304a\u4efb\u305b\u3057\u307e\u3059\n\u8d77\u52d5\u6642\u306eDevTools\u306e\u30ed\u30b0\u3067\u3059\n```\nevents.js:141 Uncaught TypeError: Cannot read property 'prototype' of undefined\ngenerateWrappers    @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/index.js:75\n(anonymous function)    @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/index.js:183\nSession._parse_message  @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:96\n(anonymous function)    @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:42\nemitOne @   events.js:77\nemit    @   events.js:169\nreadableAddChunk    @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:195\nReadable.push   @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:162\nTransform.push  @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:145\ndecodeWithoutHeader @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:80\nTransform._read @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:184\nTransform._write    @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:172\ndoWrite @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:279\nwriteOrBuffer   @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:266\nWritable.write  @   /Applications/NyaoVim.app/Contents/Resources/app.asar/node_modules/promised-neovim-client/node_modu\u2026:211\nondata  @   _stream_readable.js:528\nemitOne @   events.js:77\nemit    @   events.js:169\nreadableAddChunk    @   _stream_readable.js:146\nReadable.push   @   _stream_readable.js:110\nonread  @   net.js:523\n```\n. @rhysd \n\u8abf\u67fb\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u69d8\u5b50\u898b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\nissues\u306eClose\u306f\u304a\u4efb\u305b\u3057\u307e\u3059\n. \u5bfe\u5fdc\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\n@rhysd \n. ",
    "city41": "I see that neovim-editor's input is calling stopPropagation(), which is what causes this.\nI am entering  in order to invoke my nyaovim-search plugin, but I want it invoked no matter what has focus. I am going to experiment with removing my vim mapping for invoking the search, and removing the stopPropagation, and see how that works.\nWhy is stopPropagation() called? At least from my naive viewpoint, it seems ok to both let neovim and plugins get a chance at the key input.\n. ",
    "Tehnix": "You are totally right! It seems electron complains about the same, but it at least still shows something in the window.\nStrangely when searching the issues nothing came up, but it seems related to #78 (maybe?) which I unfortunately can't read much of since it's in Japanese :x \nIt might be that the AVD_loader error is not really the problem. In any regard I'm getting a completely blank screen, and opening dev tools along with reloading shows no data at all.\n\n. ",
    "philk": "I get the same error on Yosemite 10.11.6. No additional output with NODE_ENV=debug nyaovim\n. ",
    "curiojeff": "New to Electron, trying to learn it. Mac OS Sierra 10.12.3. When I run my app from the console I get this error:\n\n/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-10.1.5/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 4 \n/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-10.1.5/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 5 \n/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-10.1.5/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 6 \n/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-10.1.5/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 7 \nMy Electron windows open and work, but the console hangs up until I control-C to get out of it. Help?! Besides this old thread, can't find any ref. to this problem anywhere online.. ",
    "threewordphrase": "Also for paste (cmd-v), and every other one I've tried. Seems like a bug or some modifier should be added to target nyao or system. This kind of OS integration is one of the bigger reasons I've looking for a vim GUI wrapper.\n. @gwerbin actually just stumbled on the solution in https://github.com/rhysd/neovim-component/issues/32, enjoy!\n. ",
    "bigeast": "same here, except that it doesn't need to be full screen. Just type some and nyaovim will render the characters very small.. ",
    "mdxprograms": "ahh gotcha. That stinks that it's so tightly coupled but I guess since that's what it was initially created for it defaults. Closing since it still works as expected! Thanks for the explanation. \ud83d\udc4d . ",
    "xelra": "It is unclear to me how nvr is going to do this for NyaoVim. From what I read on the project page, nvr is a tool for controlling Neovim from cli and scripts.\nI understand the NVIM_LISTEN_ADDRESS approach though. Thanks. \nI'll simply create a nvim process on the server and bind it to a specific unix socket. Then I will run NyaoVim on my local machine and also bind it to a specific unix socket with NVIM_LISTEN_ADDRESS. Then I use ssh -L local_socket:remote_socket to connect both sockets.. After spending the evening on getting this to work with NVIM_LISTEN_ADDRESS, I can say it doesn't work.\nI can create the listening server process and the ssh socket forward, but the only way I can connect from my local machine is with nvim-qt --server user@1.2.3.4.\nConnecting to the server was not possible with either NVIM_LISTEN_ADDRESS=/tmp/nvim.socket nvim or NVIM_LISTEN_ADDRESS=/tmp/nvim.socket nyaovim.\nSo as far as I can see, the --server option seems to be a necessity.. ",
    "Nymphium": "I've just created a plugin to do.\nhttps://github.com/Nymphium/nyaovim-dynfont. ",
    "frmh0313": "I don't know about details, but I may have the same problem. When I try to install by 'sudo npm install -g nyaovim', I come to have warning that \"npm WARN flux@3.1.2 requires a peer of react@^15.0.2 but none was installed.\" even I have newest version of react. Please check it. . ",
    "techhazard": "That would work. Sadly it doesn't for me. :echo exists('g:nyaovim_version') returns 0 :-(\nI do not have to use that command line argument manually, right?. Anything I can do to debug the issue?\nNyaoVim version 0.0.22\n  electron : 1.4.13\n  chrome : 53.0.2785.143\n  node : 6.5.0\n  v8 : 5.3.332.47\n```\nNVIM 0.1.7\nBuild type: Release\nCompilation: /nix/store/yxg0zzcyjndcp6ilixv8wc50sg89b5r3-clang-wrapper-4.0.0/bin/clang -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -O2 -DNDEBUG -DDISABLE_LOG -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -DHAVE_CONFIG_H -I/private/var/tmp/nix-build-neovim-0.1.7.drv-0/neovim-v0.1.7-src/build/config -I/private/var/tmp/nix-build-neovim-0.1.7.drv-0/neovim-v0.1.7-src/src -I/nix/store/lgprhs9d1bi8s9y06ccfmg1nksn4wbdm-libuv-1.11.0/include -I/nix/store/iinrspsbs43lwrcjgs52wgsjw10vxclv-libmsgpack-2.0.0/include -I/nix/store/8gjpvb1my8iczkinsqd7zmbidf0w0xn9-unibilium-1.2.0/include -I/nix/store/7skb10mc11rclwzni6798agb00d0rxsi-libtermkey-0.19/include -I/nix/store/xj64af8sfrlyggvl63z0byj2b7ng17d3-neovim-libvterm-2016-10-07/include -I/nix/store/i6smd9fqcp1wk4ihgypp3zflqqicvkfb-jemalloc-4.5.0/include -I/nix/store/410ya8c9f25n9vpqhb4n05891hq9nr1d-gettext-0.19.8/include -I/private/var/tmp/nix-build-neovim-0.1.7.drv-0/neovim-v0.1.7-src/build/src/nvim/auto -I/private/var/tmp/nix-build-neovim-0.1.7.drv-0/neovim-v0.1.7-src/build/include\nCompiled by nixbld4\nOptional features included (+) or not (-): +acl   -iconv    +jemalloc +tui\nFor differences from Vim, see :help vim-differences\nsystem vimrc file: \"$VIM/sysinit.vim\"\n  fall-back for $VIM: \"\n/nix/store/aznha3w0mdsv46mg42kn4zz04ifh0aiw-neovim-0.1.7/share/nvim\"\n```. ",
    "akatrevorjay": "Can we merge this? The project's been broken in npm and from git for nearly a month now.. ",
    "skjorrface": "Thanks @rhysd, that actually fixed the problem. Sorry, I (erroneously) thought it would be excessive to follow that accurate template for such a simple problem, I didn't mean to upset you. Anyways another thing I noticed is that a lot of shortcuts such Shift+Ctrl+I, Ctrl+I and so forth are totally ignored. I think electron has serious problems with gnome desktop environment lol. Have you tried with ?. ",
    "zhujinxuan": "I tried.  But it does not work\nOn Wed, Sep 6, 2017 at 11:58 AM skjorrface notifications@github.com wrote:\n\nHave you tried with ?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/rhysd/NyaoVim/issues/125#issuecomment-327530330, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAtir0kZECl6lNTSn33991i8bl_VNLEOks5sfsEKgaJpZM4PJtBN\n.\n. It works.  Thank you.. \n",
    "latel": "@rhysd thank you for reply, but I was already using sudo sudo npm i -g nyaovim. @rhysd \n```\nsudo tnpm i -g electron\n/usr/local/bin/electron -> /usr/local/lib/node_modules/electron/cli.js\n\nelectron@1.7.9 postinstall /usr/local/lib/node_modules/electron\nnode install.js\n\n/usr/local/lib/node_modules/electron/install.js:48\n  throw err\n  ^\nError: EACCES: permission denied, mkdir '/usr/local/lib/node_modules/electron/.electron'\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! electron@1.7.9 postinstall: node install.js\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the electron@1.7.9 postinstall script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n```\nfailed again  \ud83d\ude02. ",
    "alexxmde": "sudo npm install -g nyaovim --unsafe-perm=true --allow-root\ndid it for me . ",
    "neochar": "Try to run command $ node. If you get command not found then run sudo apt install nodejs-legacy. https://github.com/rhysd/NyaoVim/issues/127#issuecomment-392573556. https://github.com/rhysd/NyaoVim/issues/127#issuecomment-392573556. ",
    "quenode": "Thank you so much :) @rhysd . ",
    "burgealex": "Sorry for the confusion.  I just realized it DOES work when in a buffer.  It does not work when in a :e [DIRECTORY] view.  Closing 'As Designed.'  Sorry about that.. ",
    "JeanOlivier": "I'd add that, even with set mouse=a, I can't select text with the mouse. In a terminal it'd go into -- (insert) VISUAL -- mode. So there might be room to improve the mouse support, or maybe there's something we're doing wrong.. ",
    "amireldor": "Not sure if similar, but I had to npm i or yarn inside ./node_modules/nyaovim. This made things work. I've done the following steps both with npm and yarn:\nmkdir nyaovim\ncd nyaovim\nyarn add nyaovim\nnpx nyaovim     <-- oops! not working\ncd node_modules/nyaovim\nyarn\ncd ../..\nnpx nyaovim     --> yap, works!\n\nI'm not familiar with npm packaging but maybe there's some flag missing doing this same thing?\n. ",
    "jimpsson": "I'm using Yarn also and had exactly the same type of problems launching Nyaovim. At first I thought it had to do with the fact that I was executing Nyaovim from Zsh and that it possibly did not reattach to user namespace like it is described in the FAQ, it seemed like a likely scenario.\nThen after some debugging I was able to locate the problem, here is a short shell snippet to assert wether you have same problems as me:\nls \"$(yarn global dir)/node_modules/nyaovim/node_modules\" | wc -l\nIf the command results with 0 (lines), then Nyaovim was not installed fully, meaning its dependencies like electron and such is non existent within Nyaovim own node_modules directory.\nTry resolve it by following command:\ncd \"$(yarn global dir)/node_modules/nyaovim\" && yarn install\nHope it helps!. ",
    "r00m00n": "Could you try solution mentioned in https://github.com/rhysd/NyaoVim/issues/127 ?. ",
    "qazip": "What solution? There is no solution in that issue. If you mean sudo npm i -g electron, then no, it doesnt work:\n```\n/usr/bin/electron -> /usr/lib/node_modules/electron/cli.js\n\nelectron@1.8.4 postinstall /usr/lib/node_modules/electron\nnode install.js\n\n/usr/lib/node_modules/electron/install.js:47\n  throw err\n  ^\nError: EACCES: permission denied, mkdir '/usr/lib/node_modules/electron/.electron'\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! electron@1.8.4 postinstall: node install.js\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the electron@1.8.4 postinstall script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n```. ",
    "Gsmalhotra1": "@qazip : I have same kind of problem , I have changed node js version to 6.9.3 , then install again, it works.. ",
    "BernardMarieOnzo": "me, i have try this sudo npm install -g nyaovim --unsafe-perm=true --allow-root but it's still not work too\n. ",
    "gnumoksha": "I'm going to close this because I do not have the environment to test.. ",
    "ndaman": "I am having the same issue. This causes problems with Startify as well, as instead of loading Startify (like I had set up in my init.vim), it loads the netrw directory.. I've done a little digging and comparing nvim to nyaovim, it appears that nyaovim is adding its base directory to argv, you can get around this by editing your init.vim (or vimrc) to drop that file.\nCurrently, the file you wanted to open IS open, just in a hidden buffer behind the directory that nyaovim has added. I made a little hack that does the trick for me (opens Startify when no options are passed, opens files passed otherwise), this is in near the end of my init.vim\n\" workaround for nyaovim's weird argv issue\nif exists('g:nyaovim_version')\n\" delete first arg\n    execute '1argd'\n\" close current buffer\n    execute 'bd'\nendif. "
}