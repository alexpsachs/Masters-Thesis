{
    "ai": "How you mean bundle will be work? Just all JS\u2019s in one? Or JS with load dufferent scripts (like your cool jQuery loader)?\n. Anyway, I don\u2019t like fallback. Visibility.js is a nice additional feature, not base of site logic. So without Page Visibility API there isn\u2019t any problems. By the way, common fallback have own problems (with unfocused browser window) and mozvisibility are not neccessary with current FF build.\n. I don't add mozvisibility because now FF10 support Page Visibility API out of box.\nI don't add visibility.bundle, because I think visibility.fallback is not necessary:\n1. Page Visibility API just increase usability, you don't create business logic on this API.\n2. All major browser support Page Visibilty API out of box (webkit, FF10, IE10).\n3. Fallback have issue, because when browser loose focus, fallback think, that page is hidden.\nSo I don't want to promote fallback :).\n. Can you repull request with merged commits in one commit? Just delete branch, revert 2 commits (git reset HEAD^^) and push commit to new GitHub branch (GitHub pull request is linked to branch name, not to specify commits, so if you update branch, GitHub automatically update pull request).\n. Nyan ^_^\n. Thanks. I will release new version tomorrow or after tomorrow.\n. Done. Can you check my English? 67d83f6257a1a2c109d3fef492e51272e0c7615c https://github.com/ai/visibility.js/commit/9690aefa4e629200581683dd130cd6a370fed665\n. File visibility.min.js doesn\u00b4t contain fallback, because I think, that it is bad:\n- All modern browsers support Page Visibility API natively (Chrome, Mozilla, Opera, even IE).\n- Fallback doesn\u00b4t work correctly. When window loose focus (but still visibile) fallback think, that page is hidden.\nAny way, this is hack, and I think, that user must use them, only when thay understand what will goes on, not by default.\nIn your case I recommend you to use any assets manager, to pack your JS files, visibility core, timers and fallback and any others library in one file. This is a best way (I add link to separated file only for special needs, it is not recommended). I reccoment Assets Pipeline for Rails or Grunt for others.\n. When you change focus to another window, browser may be still visible (if your windows wasn't fullscreen), so by idea, API work correct ;-) . Also, focus hack doesn't understand, that page is prerendering. I understand you and aslo mad, that Page Visibility API doesn't check really visibility (for example, it also doesn't check system lock-in), but focus hack isn't better - they both have issues.\nBut if you need focus hack, try to find special library, Visibility.js has a lot of code for Page Visibility API, that isn't useful for you.\n. Maybe ou know, how I can detect it?\n. Is this issue is critical for you?\nI think, that this user case is very rare (and compability mode is like a hack) and this special hack will be bad for library code climate.\nMaybe we can find some another decision?\n. I try to add bower.json later :).\nWhy you may need npm package?\n. Done f92255827570e91f25e4478ecdf2a751e218b540\n. Yeap, I use it to test callback :D.\nThe problem is:\n1. You set timeout ti udate clock, that every second change time.\n2. In background tab, clock will not be update.\n3. When you open this tab, for first second time will be outdated\n. What is your user case and what is exactly problem in your case?\n. With hiddenInterval in one second we willn\u2019t have any benefits from Page Visibility API.\nI can suggest with API:\n- We set visibile interval for 1 sec;\n- We set no hidden interval;\n- When background tab will open, callback will be triggered only if tab was closed more that visible interval.\nSo I will trigger events after activate tab, but guarantee, that it will not be more often that in visible interval.\nOK?\n. Yeap, after fix, API will not be changed.\nBut, maybe you could wait about a several weeks for fix :(.\n. But I try ot be fast. Maybe I can write this fix in airplane tomorrow.\n. Done 2811b756e0d1884d72ac722d4ebd680f678a665c\nI will release this fix in few days.\n. \u041c\u043e\u0436\u0435\u0448\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u043a\u043e\u0439-\u043d\u0438\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440 \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438?\n\u0423 Visibility.js \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b \u2014 \u043c\u043e\u0436\u0435\u0448\u044c \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0430 \u043d\u0438\u0445.\n. OK, I try to add it today.\n. @Fauntleroy Done. Can you test require from git master and if everything will be OK, I release npm package too.\n. @Fauntleroy no ideas :(.\nDo you have open source project with this issue, I need to repeat this issue.\n. Ha-ha, I create test env, but npmjs.org goes down :D\n. @Fauntleroy fixed 34a9bc5e7ae75d407706e072e7eb885d78c50b1e\nPlease try again.\n. @Fauntleroy in this case you should use require('visibilityjs/lib/visibility.core'), instead of full version with timers.\nMaybe I should rename it to visibilityjs/lib/core?\n. Visibility.js contains two packages: core, timers, fallback.\nWhen you load bundle visibility.js you load only two modules: core and timers.\nSo you anyway have no fallback right now. But it is good:\n1. Most of current browsers support Page Visibility API.\n2. Fallback is based on hacks. You should prefer graceful degradation, rather than hacks.\nSo, if you will load only core module, you wiil have no difference.\n. Released in 1.2.0.\n. @Fauntleroy seems like search cache still updating\nDirect npm URL: https://www.npmjs.org/package/visibilityjs\n. Ups, thanks :). Do you need to fix release?\n. Released in 1.2.1 \u201cDiscoverer 6, again\u201d (it was 6 American try to launch spy satelite, it\u2019s unbelivible but this spies uses film camera and when it used all frames, it sent them back to Earth in capsule for development).\n. I release it today :).\n. Version names is taken from history of satelite launches :).\n. It is part of current Page Visibility realization in browsers, because you can view other unfocuced window if windows are not at full screen.\n. Thanks :)\n. @stodge it is how Page Visibility API works. By some reason browsers check only tabs. Even if you lock screen, they didn\u2019y fire a hidden state :(.\n. Thanks. But why you remove install method?\n. This method is used in non-Rails Sprokets environments.\nCan you fix PR and keep it? \ud83d\ude00\n. Released in 1.2.2\n. Thanks for awesome work. What do you think about using install() method in Railties?\n. Yeap, let\u2019s move << to install method and use it in Railties :). Can you update PR?\n. I will release it after few hours.\n. Released in 1.2.3.\n. I update Releases.\n. PR to CDNJS was sent https://github.com/cdnjs/cdnjs/pull/7302\n. 1.2.3 was deployed to CDNJS\n. Sorry, have no idea.\n. Released in 1.2.4\n. Awesome! Thanks. I will try to release it om this week (sorry, have flight tomorrow)\n. Sorry, I must first put new version to CDNJS before release :(. But I hope I will release it on this week (I will make PR to CDNJS tomorrow)\n. I sent PR to CDNJS https://github.com/cdnjs/cdnjs/pull/8899\n. Ask browsers about their implementation of Visibility API ;). This library is just a syntax sugar of top of this API.. Hi. Yeap, it is nice idea. Thanks. Seems like we need to wait few moments for GitHub build process.. I removed the link https://github.com/ai/visibilityjs/commit/a0e82a60e6dd9e4a0be2ce03d6ac93e58880a6d1. Honestly, right now without vendor prefixes it is better to use standard browser API directly without any syntax sugar.. > windows, programs or minimize the current window\nBTW, Page Visibility API works only with browser tab switching. Changing window focus on even lock OS will not trigger hide.. Sorry, it is the question for Electron. This library is just wrap on top of Page Visibility API. So you should ask Electron to support Page Visibility API better.. Thanks for the contribution. I will try to release it in next few hours.\n(To be honest, think about using Page Visibility API directly, this library is no really maintained anymore).. Released in 1.2.5. Congrats on going to first Release Notes :). Thanks. Do we need to release it?. Released in 1.2.6. Send PR \ud83d\ude0a. Released in 1.2.7. Thanks. I will release it on next week (sorry, preparing for conference).. Thanks. Released in 1.2.8.. Thanks :). Thanks. Released in 1.2.8.. Nope, it is latest version on npm https://i.imgur.com/4VCwu4t.png. (Don\u2019t worry, there is no JS code changes in 2.0. I just removed Bower and Component supports).. I didn't unpublished it. Sorry. Have no idea.\nBut 1.2.7 is equal to 2.0.0. You could use 1.2.7.. I will release it a little later. Released in 2.0.1. As I know it should work without document and other browser-specific API. It will just think that the page is always visible.\nIf you will have any problems, please report. I will try to fix it quickly.. It only increases library size :(\nDo you have another reason for PR?. Found https://github.com/ai/visibilityjs/issues/43. Released in 2.0.2. How did you started it?. Sorry, have no idea. This project is not really alive :D. If you will send PR, I will release it. But spend most of my open source investigation time on other projects.. Mostly because PostCSS and Autoprefixer are more popular. Logux and Size Limit could make Web better.. Also, we don\u2019t need polyfill right now, so using so big library just for every sugar is overkill.. Or just try to implement by yourself, it is very simple stuff. > I am a user for years hahaha\nThanks :D. If I will add AMD I will increase library size for every user, so I can't do it, since AMD is not really popular.\nCan you use webpack just to repack this dependency for AMD? Or maybe you can use Parcel bundler because it will be just one CLI command without any config.. What is a reason why do you use AMD instead of CommonJS or globals?. > AMD allows us to do development without any build toolchains. \nYeap, I understand how it is good to make you build process simplier.\nBut how do you do minification (a + b > a+b), cache invalidation (main.js > main.fa6e89.js) without bundler?. @chrisknoll seems like you have a builder. You just use own custom builder and losing many techniques for optimization.\nFor instance:\n1. A user opens your page. The browser receives HTML and found app.js. It requests app.js and waits for round-trip time (500ms) until server will receive request and answer will be received by the user.\n2. Then the browser finds lib-a.js in app.js, makes another request and again waits for 500ms for the round-trip.\n3. lib-a.js uses lib-b.js and again browser will wait for 500ms even if lib-b.js is extremely small.\nAs result, you lost 1 second. If you will use smarter builder you will build the single bundle.js which will be downloaded only by one round-trip.\n\nNot sure what you mean by cache invalidation\n\nThe best practice is to set Cache-Control: max-age: year header. With this header browser will request file only once. But you need a way for cache invalidation. This is why you add a hash of file content to the end of the file name app.fe54754.js. When you will update the file content, the name will be changed (app.4ht5l6.js).\n\nI was hoping we could stay focused on the merits of this PR for inclusion\n\nI think AMD if a bad practice, which slows down your website since it is not compatible with new performance techniques.\nIf I will approve your PR, I will add this 28 bytes to any user. I can do it for good reason (for instance, to promote good practices). But you need AMD for bad practices. This is why I prefer to not add AMD to force any AMD user to migrate to good builders with the latest practices.\n\nWe'd rather not have to just maintain a fork over the AMD compatibility, but if that's what we need to do, that's what we need to do.\n\nI can suggest you a better solution.\nTry Parcel. It is a zero-config builder with the best development experience. If you will migrate to it you will get:\n\nYou will remove the whole build/*.js directory. Parcel can do it out of the box.\nParcel will build your website faster because it has a good cache system.\nWith the latest performance techniques, your website will work faster.\nParcel has hot reload and many other development features, which will make easy the development process for your team.\nYou will be able to use any libraries from npm.. Sorry, I spend all my open source for this week on Autoprefixer release.. \n",
    "kossnocorp": "I mean why not put mozvisibility file to visibilityjs gem? I won't download it separately. I'm to lazy for this shit :-).\nIn my opinion in assets/javascrtips should be 4 files: visibility.js, visibility.fallback.js, visibility.fallback.js and visibility.bundle.js which join it all (in proper order).\n. OMG. Page Visibility API is not supported. Sorry.\n. ",
    "mcfedr": "I have released since sending that it means you have to check using === true to see if the callback was called immediately, would be good to mention this in the Readme\n. ",
    "ghost": "Yes, I did that. I used Grunt to concatenate all files.\nBut, the sad news is that I can no longer use Page Visibility API because it does not \"work\" when I use Alt+Tab to switch to some other window. That is, the Page visibility API only changes that states whenthe browser is minimized not when I alt-tab to some other window and the browser window is still maximized (but not visible) (I am using Windows 7).\n. ",
    "DarkFisk": "(only for IE) maybe you should add checking of browser version?\n. ",
    "auchenberg": "Bower is just fine. :smiley: \n. ",
    "alexzaporozhets": "I need refresh the dashboard data every 6 minutes.\nIt is unexpected behaviour when you fire the event immediately after tab activation.\nAt least, we need have special option for control it.\nAccording to your scenario, \"hiddenInterval\" should be set to one second. \n. No, wait. I need to refresh the data every 6 minutes. And I do not need refresh the data when user activate tab.\n. Or you saying, that you will make a fix. That will trigger events only if non-active time > visibile interval.\nSo I do not need make any changes in codes, correct?\n. First line - good\nSecond line - not so good :-)\n. \u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u043e\u0441\u0442\u0430\u043b\u0430\u0441\u044c \u0432 \u0432\u0435\u0440\u0441\u0438\u0438 1.1 \n\u041f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u0439 \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438/\u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 \u0442\u0430\u0431\u0430 event \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442, \u0430 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u0445 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e.\n. ",
    "Fauntleroy": "I'll take a look at this tonight (about 7 hours) and get back to you. Thanks!\n. I'm not sure what's going on; I added master to my package.json and installed it, then switched over to require('visibilityjs') but it doesn't seem to be working. I'm not getting any errors, but my Visibility.change callback doesn't fire. Any idea on what's up? \n. Looks like it's working now! Just for reference, this is where/how I'm using it: https://github.com/Fauntleroy/tandem.io/blob/browserify-visibility/assets/scripts/models/title.js#L3\n. If I use core, I'll lose the fallbacks, right? Would I then need to include core and the fallbacks separately?\n. Thanks for the tip! When do you think this will be released on npm?\n. I'm not seeing this on npm... https://www.npmjs.org/search?q=visibilityjs\n. Looks like you're right! Everything seems to be in order.\n. ",
    "Govinda-Fichtner": "Timothy Kempf notifications@github.com schrieb:\n\nLooks like it's working now! Just for reference, this is where/how I'm using it: https://github.com/Fauntleroy/tandem.io/blob/browserify-visibility/assets/scripts/models/title.js#L3\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n. \n",
    "mponizil": "Ah, I believe so: https://github.com/ai/visibilityjs/pull/14\n. ",
    "mastef": "but does this actually mean that the tab in the unfocused window is visible?\n. ",
    "stodge": "Ok - thanks. :)\n. ",
    "NeXTs": "@stodge http://codepen.io/jonathan/pen/sxgJl\n. ",
    "waseems": "I just found it unnecessary, but perhaps I misunderstood its use case?\n--\u00a0\nWaseem Sadiq\nOn 22 Feb 2016 at 14:15:51, Andrey Sitnik (notifications@github.com) wrote:\nThanks. But why you remove install method?\n\u2014\nReply to this email directly or view it on GitHub.\n. Updated the PR\n. ",
    "dmeremyanin": "The common (and more simple) way to append a new path to assets is config.assets.paths << path. But we can change it to use the install method, like this: config.assets.configure { |env| VisibilityJs.install(env) }. Do you think we should change it or leave it as is?\n. Sure, will change it today.\n. @ai done!\n. Thanks :+1:\n. ",
    "mrienstra": "Awesome thanks!\n. ",
    "ajhsu": "Great! I'm going to work on this. Thanks for your supporting!. Looks awesome, yay!. ",
    "danieldocki": "Guys, the demo page is not working.. ",
    "marayfirth": "Same error here with typescript 2.6.1. As per https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#arbitrary-expressions-are-forbidden-in-export-assignments-in-ambient-contexts, it might be fixed with #34 . Currently, I referenced my fork in npm. But probably more and more people will need it, so it would be appreciated anyway I think.. ",
    "dpoetzsch": "thanks, much appreciated :). ",
    "klimashkin": "Right, but when I do\nnpm view visibilityjs\nIt gives\njavascript\n{ name: 'visibilityjs',\n  description: 'Wrapper for the Page Visibility API',\n  'dist-tags': { latest: '1.2.7' },\n  versions:\n   [ '1.2.0',\n     '1.2.1',\n     '1.2.2',\n     '1.2.3',\n     '1.2.4',\n     '1.2.5',\n     '1.2.6',\n     '1.2.7' ],\n  maintainers: [ 'ai <andrey@sitnik.ru>' ],\n  time:\n   { modified: '2018-02-27T20:34:40.596Z',\n     created: '2014-03-01T10:46:18.498Z',\n     '1.2.0': '2014-03-01T10:46:20.101Z',\n     '1.2.1': '2014-03-10T20:47:04.082Z',\n     '1.2.2': '2016-02-22T17:07:03.709Z',\n     '1.2.3': '2016-03-04T08:09:26.603Z',\n     '1.2.4': '2016-09-04T10:07:18.095Z',\n     '1.2.5': '2017-10-11T21:36:30.472Z',\n     '1.2.6': '2017-11-14T21:54:27.753Z',\n     '1.2.7': '2018-02-27T20:34:39.001Z' },\n  readmeFilename: 'README.md',\n  keywords: [ 'page visibility api', 'visibility', 'polyfill', 'timer' ],\n  repository:\n   { type: 'git',\n     url: 'git+https://github.com/ai/visibilityjs.git' },\n  author: 'Andrey Sitnik <andrey@sitnik.ru>',\n  bugs: { url: 'https://github.com/ai/visibilityjs/issues' },\n  license: 'MIT',\n  users: { denji: true, paraself: true, tincho: true },\n  homepage: 'https://github.com/ai/visibilityjs#readme',\n  version: '1.2.7',\n  devDependencies:\n   { chai: '4.1.2',\n     'coffee-script': '^1.12.7',\n     'fs-extra': '5.0.0',\n     mocha: '5.0.1',\n     sinon: '4.4.2',\n     'sinon-chai': '2.14.0',\n     'size-limit': '^0.15.1',\n     'uglify-js': '^3.3.12' },\n  'size-limit': [ { path: 'index.js', limit: '780 B' } ],\n  scripts: { test: 'mocha && size-limit' },\n  gitHead: 'ebd12c9f3d0a33e6b960205f6a8a8440aea481bb',\n  dist:\n   { integrity: 'sha512-+5bhYUd8JtXVkUiWDSatVMqo+Zw1dnn+5BU6UaifKfy88Q1bfKTi4x2OdW/n0TBGHdK7ol25/p+7qwbsljbWwQ==',\n     shasum: '821551d003809b9e1f979144ce82dc7d5a96dd1e',\n     tarball: 'https://registry.npmjs.org/visibilityjs/-/visibilityjs-1.2.7.tgz',\n     fileCount: 10,\n     unpackedSize: 28965 },\n  directories: {} }\nSo npm i visibilityjs gives 1.2.7 as the latest\nnpm i visibilityjs@2.0.0 throws error\nnpm ERR! code ETARGET\nnpm ERR! notarget No matching version found for visibilityjs@2.0.0\nnpm ERR! notarget In most cases you or one of your dependencies are requesting\nnpm ERR! notarget a package version that doesn't exist.. .npmrc points to registry = https://registry.npmjs.org\nIs it some kind of problem at npm registry then?. ",
    "zorkind": "Sorry i forgot to add that.\n$rootScope.hdRTimerId = Visibility.every(5 * 1000, $scope.UpdateRight);. Oh i had no idea D: why is it not alive?. This is the only timer component i have ever used. :-\\ I am a user for years hahaha\nFirst time i am having an issue. you think i should rollback to setTimeOut?. I think the first time i used this was back in 2014, i made a huge graphic screen with this. The visibility thing is very important for me, since i am used to digest huge amounts of data from the network, and i need to do that only when needed, when people switch screens to use another \"report\" i want to stop the previous one and all that jazz.\nNot the main reason why i am using it now, but back then, it was a very important thing.\nThis time i am really just using it because i trust it :). First time i am using it with Angular tho, so i am guessing the $scope thing have something to do with my issue. I will try to figure it out :). Ohhh i think i know what's going on.\nIt is probably reloading the JS when i am switching pages, making all counters go back to zero.\nSo it has nothing to stop.\nBut the SetInterval is still alive in the LIMBO :-(. ",
    "chrisknoll": "I'll submit a PR with the change we made locally to make it work in AMD. Btw: it was literally 2 lines of code.  I don't think 50 bytes is too much of a hardship, but you decide!\n. AMD allows us to do development without any build toolchains.  Only the modules that are needed for a specific use case are downloaded (it's asynchronous) making development nice and streamlined.  When we're ready for production deployment, we do a build that optimizes the individual modules into an optimized-for-download bundle, but none of those steps get in the way of our dev cycle.\nMost libraries out there support a UMD wrapper. Hopefully you will find that the 2 added lines of code isn't too much of a hardship to include in your library.\n. Feel free to check out our application here: https://github.com/OHDSI/Atlas.  You can see how our package.json sets up the build scripts.  Not sure what you mean by cache invalidation, but, I was hoping we could stay focused on the merits of this PR for inclusion. We'd rather not have to just maintain a fork over the AMD compatibility, but if that's what we need to do, that's what we need to do.\n. Sounds simple! Would you be able to provide a PR for that change?\n. "
}