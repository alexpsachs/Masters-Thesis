{
    "rubytester": "Yep, I see the bug. We'll need generate step to modify the FROM line with the proper VERSION requested when running make.\n. We used to run 4 nodes per one VM and our issue ended up being a CPU maxing out, not memory. I have since dialed down a VM with 2 cpu to run 1 node but I increased to 2 browser sessions per node. We get about 80% max cpu utilization.  I start a node wit JAVA_OPTS=-Xmx4G since the VM has 6 G RAM. this seems a nice box to build grids. My standard grid is a hub on 1 VM and 20 nodes on 20 VM machines. Works for us.\n. This is an issue for me, I am solving this with 'Freezing' the image in time, Basically I build an image with Chrome:43 and tag the image node-chrome:43 and never build this tag again unless I know the current active \"chrome\" version has not advanced yet. \nThe con of this is that I need to use this as a base for other downstream images and I can't recreate the image if I wanted to after Chrome releses 44.\n. We use Firefox without flash. Firefox complains that flash plugin is not installed but this has not caused any functional testing issues for us.  I would recommend adding flash in a downstream container.\n. I assume there is no more tracktion on this pull request and I want to close it and defer plugin installation in a downstream container based on node-firefox. Opinions?\n. spoiled milk at this point, reopen or start a new conversation\n. Since we have now separate debug images I think i can close this. Please reopen if I misunderstood. Thanks.\n. please see #47 \n. Could you add an example of how you need to use it? I usually add a proxy to browser sessions I start. Maybe I am not understanding this issue. example would help\n. Hi @ipreachable I would like to merge this: \nMy request: \n- please rebase on master to pickup Standalone images added since original PR. \n- Add JAVA_OPTS to Standalone\n- Addition to README on usage would be nice.\nThanks.\n. I'll work on this today. Just realized I need this to experiment with -Xmx1024m value on a large grid so JAVA_OPTS would be quite useful. \nI'll rebase and add JAVA_OPTS to standalone. \n. tests fixed in pull request #67 \nplease rebase to master\nsee tests are isolated now, they only call one browser at a time. initial TEST_CMD is a  string, tests add a smoke test command.\n. Well, that's a problem. Thanks.\n. We see this same issue on CentOS 6.6. Which version of CentOS do you run? \n. Still an issue? I have moved all tests to run on CentOS 7.1 and using docker 1.6.2 and since then I have not see issues.\nPlease reopen if this continues to plague you. \n. HI, Just started looking at this and I'd like to merge it but I have not personally ever needed to deal with this issue. Any concerns? Missing Tests? Readme addition?\n. Hello @charford . Some housekeeping. \nHave you signed the CLA as described in CONTRIBUTING.md?\nPlease indicate here. Thanks\n. Rebased, pulled in CircleCi change into the branch. Awaiting happy green check marks and I will merge this enhancement\n. you are correct, I just realized that docker hub image does not just magically do it and action... \n. see pull request #53 \n. pull request #53 was merged but I think docker images were not built. I need to find out what to do next to ensure they are available on https://registry.hub.docker.com/repos/selenium/\n. standalone-firefox-debug and standalone-chrome-debug are here now https://registry.hub.docker.com/repos/selenium/\n. I'll have some time this weekend to get this in. Need to complete the previous pull request work on docker hub.\n. Thanks @elgalu \n. I am trying to understand your use case. \nYou can run those containers however you wish. This project builds containers and shows you examples of how you can run a hub and how you can link a node to the hub.\nIf you no longer need to run a node you can stop it and remove it with docker cli. \nContainers run until you want them stoppped, removed, nuked etc... \n. correction: it was for pull request #53 \n. Hi, I would prefer to go with explicit JAVA_OPTS shell var as see in pull request #47 . This way you can add -e JAVA_OPTS=\"stuff\" to docker run explicitly when building a command to run docker containers. \n. Hi @mathieu-pousse \nI merged this feature as presented in pull request #47 which allows to be set by explicit JAVA_OPTS env variable. \nThank you for contributing\n. I am prepping the branch naming and docker hub build tags for 2.46.0\n. Some housekeeping @kayabendroth-epages Have you signed the CLA as described in CONTRIBUTING.md?\nPlease indicate here. Thanks.\n. Ooops. I missed it. fixed\n- General setup: I setup all Automated Build on docker hub to build on branch names so as we move forward we advance the branch: master branch builds latest and 2.46.0 branch builds 2.46.0 image.\n- The Issue: I am finding with docker hub Automated Build triggers they don't run in predictable sequence as we need them: First build base, then (hub and node-base) then (node firefox and chrome) and so on. (this produces errors like this)\n  - I am not sure if there is a 'sequence' trigger builder I can apply so we always build 'base' first and then it should trigger downstream builds.\n. I would appreciate some feedback on this proposed fix. Thanks.\nI see the failure in https://circleci.com/gh/SeleniumHQ/docker-selenium/26 is this:\nhttp://selenium-release.storage.googleapis.com/2.46/selenium-server-standalone-2.46.0.jar:\n2015-06-09 23:09:19 ERROR 503: Service Unavailable.\n. I can add a generate_all target that will change all Dockerfiles apart from generate_x being called before each docker build. This will just change Dockerfiles and you don't have to run docker build on your local machine for all 11 images. \none more commit then. \nok, one more commmit with this: \ngenerate_all\n. Ha, I think I found the trick: https://docs.docker.com/docker-hub/builds/#repository-links\n. I think I have found the source of my misery.  The repos were already linked except the standalone debug images. I turned off the 'active' from the Automated Build on repos that have Repo link on them that points to the dependency.. All should be fixed now. \nI feel so stupid not noticing it before.\n. Thank you.\n. Just for my own sanity and because I am a bid pedantic I verified the sequence order of 11 builds on docker hub and all is well...no onto next issues to fix\ncreate_date                     last_update                image\n2015-06-11 12:23:15 2015-06-11 12:26:26  base\n2015-06-11 12:27:27 2015-06-11 12:30:40  hub\n2015-06-11 12:27:27 2015-06-11 12:33:58  node-base\n2015-06-11 12:34:31 2015-06-11 12:41:38  node-firefox\n2015-06-11 12:34:31 2015-06-11 12:46:38  node-chrome\n2015-06-11 12:42:19 2015-06-11 12:47:54  standalone-firefox\n2015-06-11 12:42:19 2015-06-11 12:54:22  node-firefox-debug\n2015-06-11 12:47:15 2015-06-11 12:52:37  standalone-chrome\n2015-06-11 12:47:38 2015-06-11 12:58:35  node-chrome-debug\n2015-06-11 12:47:42 2015-06-11 12:59:14  standalone-firefox-debug\n2015-06-11 12:53:16 2015-06-11 13:05:54  standalone-chrome-debug\n. the NodeBase has TZ set which means it will propagate to all the Nodes (however Hub doesn't get TZ set so booo... we can fix it by moving TZ setting to Base image). \nA case could be made to chagne TZ to be Zulu and operate on UTC for all. \nAnd yes, when you docker run add the TZ you need with -e TZ=\"<your tz>\"\nSo I vote on 2 things:\n1.  move TZ to Base Docker file so Hub gets it\n2. set TZ to utc timezone as universal\nthoughts? \n. Additional info: I realize that a node has a config.json but as I see the cli arguments win over those setup in json file so a default port 5555 declared in a file is a secondary source if -port xxxx is used in cli. \nSurvey Question: I would really like to find out how you start those docker containers. Do you have a specia entry_point.sh or do you dynamically generate a config.json... Anybody care to share? \nThanks. \n. Closing this issue. I can use REMOTE_HOST. I incorrectly reasoned about the port mapping. I overlooked an obvious solution and it's fixed. \nThe 'docker' puppet module usage could be like this: \n```\ndocker::run { 'selenium-node-1':\n      image           => \"$image\",\n      env             => [\"REMOT_HOST=http://$fqdn:5556\", \"HUB_PORT_4444_TCP_ADDR=$hub_addr\", \"HUB_PORT_4444_TCP_PORT=$hub_port\"],\n      ports           => ['5556:5555'],\n      pull_on_start   => true\n    }\ndocker::run { 'selenium-node-2':\n      image           => \"$image\",\n      env             => [\"REMOTE_HOST=http://$fqdn:5557 \", \"HUB_PORT_4444_TCP_ADDR=$hub_addr\", \"HUB_PORT_4444_TCP_PORT=$hub_port\"],\n      ports           => ['5557:5555'],\n      pull_on_start   => true\n    }\n```\nNow I have two docker containers running on one VM as services on ports 5556 and 5557. This pattern allows me to have multiple containers per vm.\n. Before I merge this. Does anybody have any issues with Chrome 43 and Chromedriver 2.16?\n. I should be blamed for this probably when I first started and didn't configure the docker hub automated build correctly. \nI don't recommend using 2.45.0 and sorry for the mess\n. boot2docker is flaky sometimes. several times a day I reclycle boot2docker with boot2docker down && boo2docker up especially after my mac sleeps. \nI use version 1.7.0 (and I keep boot2docker up-to-date weekly). \nFor selenium-standalone try this command:\n```\ndocker run -d -p 5900:5900 -p 4444:4444 selenium/standalone-chrome-debug\nand vnc with\nopen vnc://:secret@$(boot2docker ip):5900\nand start a browser from here\nopen http://$(boot2docker ip):4444/wd/hub\n```\n. I lied. I used boot2docker 1.6.2 but when I upgraded to 1.7.0 all fell apart due to this issue: https://github.com/boot2docker/boot2docker/issues/824 (lots of comments as of last 2 weeks)\nI have switched to docker-machine (5 days ago) which uses boot2docker parts behind the scene. no issues yet. Mabye becase I created a new vm.\nAnyway: Give docker-machine a try. \nwith brew: \nbrew cask install virtualbox\nbrew install docker\nbrew install docker-machine\nFollowed by setup\ndocker-machine create --driver virtualbox dev\ndocker-machine start\neval \"$(docker-machine env dev)\"\nAnd now your ip is docker-machine ip dev.\nStick the eval \"$(docker-machine env dev)\" in ~/.bash_profile or equivalent.\nI also made me a quick shortcut helper file ~/bin/docker-helper.sh\n``` shell\nsource this in your ~/.bash_profile\nfor mac os x\nalias d=docker\nalias dm=docker-machine\n#########  DOCKER MACHINE vm and it's env\nexport DOCKER_MACHINE_NAME=dev\ncreate vm and set up shell env\nfunction d-machine-create(){\n  docker-machine create --driver virtualbox $DOCKER_MACHINE_NAME\n  d-env\n}\nshell env for machine\nfunction d-env(){\n  echo \"DOCKER_MACHINE_NAME=$DOCKER_MACHINE_NAME\"\n  eval \"$(docker-machine env $DOCKER_MACHINE_NAME)\"\n  docker info\n  echo \"*** ALL RUNNING CONTAINERS\"\n  docker ps  -s\n}\nup machine\nfunction d-up(){\n  docker-machine start $DOCKER_MACHINE_NAME\n  d-sh\n}\ndown machine\nfunction d-down(){\n  docker-machine stop $DOCKER_MACHINE_NAME\n}\nfunction d-ssh(){\n  docker-machine ssh $DOCKER_MACHINE_NAME\n}\n######### CONTAINERS AND IMAGES\nremove stopped container and untagged images\nfunction d-clean(){\n  docker ps -qa --filter status=exited | xargs -L1 docker rm\n  docker images --filter dangling=true -q | xargs -L1 docker rmi\n}\nstop all running containers\nfunction d-stop(){\n  docker ps -q | xargs -L1 docker stop\n}\nremove all images\nfunction d-nuke(){\n  docker images -aq | xargs -L1 docker rmi -f\n}\n```\nhope this helps you get started.\n. shell function sehub to start selenium grid on your local machine ... Starts hub and 2 nodes\n``` shell\nshell function to start mvp one hub, one chrome, one firefox\nsehub() {\nlocal hub=selenium/hub\n  local chrome=selenium/node-chrome\n  local firefox=selenium/node-firefox\ncase \"$1\" in\n    start)\n      echo \"starting\"\n      docker run -d --name hub -P $hub\n      docker run -d --link hub:hub -P --name chrome $chrome\n      docker run -d --link hub:hub -P --name firefox $firefox\n      ;;\n    pull)\n      echo \"WARNING: this will pull the latest images from docker hub\"\n      read -r -p \"!!! QUESTION: Are you sure you want to update images? [y/n]\" response\n      if [[ $response =~ ^(yes|y| ) ]]; then\n        docker pull $hub\n        docker pull $chrome\n        docker pull $firefox\n      else\n        echo \"Update Aborted\"\n      fi\n      ;;\n    stop)\n      echo \"stopping containers\"\n      docker stop chrome firefox hub\n      echo \"and removing containers\"\n      docker rm chrome firefox hub\n      ;;\n    *)\n      echo \"Docker Selenium Grid MVP on local machine. Hub and 2 nodes (Chrome and Firefox)\"\n      echo \"\"\n      echo \"Usage: sehub {start|stop|pull}\"\n      echo \"\"\n      echo \"start         starts containers downloaded by last pull operation\"\n      echo \"stop          stops and removes containers so you can start fresh again\"\n      echo \"pull          pull latest defined containers from docker hub\"\n      ;;\n  esac\n}\n```\n. Thank you. Would you kindly review and see if there are other typos or inaccuracies, it would be nice to have another pair of eyes to review for clarity, completeness and any out of dateness stuff. \n. Thank you so much. \nSorry for the delay responding. I wonder why the tests failed. This is not a code change. \n. Could you also squash the commits to make it one logical commit to be merged? \nSomething like git rebase -i master and then rework the first commit with all comments and squash the rest into it.  \nI hope I am not being too unreasonable and pedantic on this. \n. Some housekeeping: Have you signed the CLA as described in CONTRIBUTING.md?\nPlease indicate here. Thanks and we'll merge it.\n. Strange indeed. \nI just did a test with the docker image ( selenium/standalone-chrome-debug with id be801ca81579 ) and I get this on starting docker container\n09/07/2015 13:18:47 passing arg to libvncserver: -rfbport\n09/07/2015 13:18:47 passing arg to libvncserver: 5900\n09/07/2015 13:18:47 -usepw: found /root/.vnc/passwd\n09/07/2015 13:18:47 x11vnc version: 0.9.13 lastmod: 2011-08-10  pid: 43\n09/07/2015 13:18:47 Using X display :99.0\nRetracing my steps on mac os x as this: \nshell\n$ cid=$(docker run -d -P selenium/standalone-chrome-debug)\n$ docker logs $cid\nAnd finally connecting as client:\n``` shell\n$ docker port $cid\n5900/tcp -> 0.0.0.0:32770\n4444/tcp -> 0.0.0.0:32771\n$ docker-machine ip dev\n192.168.99.100\n$ open vnc://:secret@192.168.99.100:32770\n```\nand the logs show client connected. \nAt this point I can start a session on standalone at \nhttp://192.168.99.100:32771/wd/hub/static/resource/hub.html\n. Sorry if this is a stupid question but do you build the images locally? If you do can you rebuild with --no-cache option. I use the officially built from docker. Please pull the latest from hub and try. \nI have tried on my locally built image and all if fine. I tested on Mac OS X with docker-machine in virtualbox . Maybe there is another setup that's messed up?\nI am perplexed.\n. I have seen this crashing also on chrome 39 and I wonder if java HeapSize has anything to do with this. \nWild guess, our hub crashed when it's running regular java with default heapsize\nseluser@0ceb856ad2df:/$ java -XX:+PrintFlagsFinal -version | grep HeapSize\n    uintx ErgoHeapSizeLimit                         = 0               {product}\n    uintx HeapSizePerGCThread                       = 87241520        {product}\n    uintx InitialHeapSize                          := 95158400        {product}\n    uintx LargePageHeapSizeThreshold                = 134217728       {product}\n    uintx MaxHeapSize                              := 1524629504      {product}\nHowever when I start hub with java -Xmx1024m we didn't see hub crashing when having about 60 requests awaiting in the queue. I wonder why this is. (I am not a javatester, I am a rubytester so I don't really understand jvm tweaking).\nI'll try running a Chrome node with java -Xmx512m . I am maybe naively assuming this will not eat up too much memory and things won't crash (of course my logic of this may be flawed and I welcome lashings and beatings from the java experts).\n. and we are also running on OpenJDK. Should we be running on official Oracle runtime? \n. Thanks for the field report. We'll try a test today with hub on a VM with Xmx1024m and another VM hosting 4 docker contaieners, each container serving 2 chrome sessions (chrome 39). We have 40 nodes attached to the hub. We'll see how running parallel 100 browser sessions affects this. \nYesterday the hub crashed and by limiting the Xmx1024m it did not and kept session requests in the queue just fine.  (NotAJavaGuy(tm))\n. Thanks all you guys for poking around and finding the solution. Major win for all.\nAnd thanks @kkochubey1 for the -v /dev/shm:/dev/shm solution. That was the next thing I was thinking about... I'll be glad to test it in my grids setups and I'll report how this works in a larger grid setups\n. That is strange. It shows chromedriver 2.12 and we are on 2.16.\nAlso selenium 2.44 and we are on 2.46.0 on latest. \n. maybe a typo or the mozilla grid also has the 30 second timeout but they have 180 seconds for hanging browserTimeout. \nhttps://github.com/mozilla/moz-grid-config/blob/master/hub_configuration.json#L2\nI am curious why? 30 seconds idle kills your session while they wait 180 seconds after browser becomes dead.\n. This could be an issue of visibility of containers one to another. If you run tests in a container you may need to link to hub or node. I am not familiar withi this way of doing things. \nHowever we do something like this when we run tests and link to a standalone-chrome-node for example using --link switch in docker run so my tests can see the ip and port of a container that servers the browser. \n. The recommendation for 2.47.1 is now to be on java 8. Should we bump it too?\nhttps://raw.githubusercontent.com/SeleniumHQ/selenium/master/java/CHANGELOG\n. Thanks @kayabendroth \nSome housekeeping: Have you signed the CLA as described in CONTRIBUTING.md?\nPlease indicate here. Thanks and we'll merge it.\n. Each image in docker hub https://registry.hub.docker.com/repos/selenium/\nnow has a tag 2.47.1 pulling from the branch 2.47.1\nmaster branch tag is latest. Both master and 2.47.1 branches point to the same sha1.\nThanks\n. You can disable it by default in using the configuration of your webdriver launcher code. Add FirefoxProfile to have a setting false for reader.parse-on-load.enabled. \nSorry, this project does not have browser launcher code for configuring how to start drivers.\n. I am really curious what popup do you get. \nI tested on a standalone-firefox-debug and I can start a browser session and got a page has a reader iew but I didn't see any pop. youtube click here https://www.youtube.com/watch?v=HTz1Ad2FmAA\n. Wow, sorry I just discovered I've had images turned OFF for github (using this http://singleclickapps.com/images-on-off/).... Ok, I see now\nI presume since this was a new feature in Firefox 38 the popup showed up. Now I don't see it in Firefox 40 any more. here is a youtube clip of driving browser to a page with selenium cli. no more popup. \nhttps://www.youtube.com/watch?v=nUMjrdxiVOc\n. Thanks @kayabendroth \nSo we are off LTS and going to 15.04 with Java 8.  \nHas anyone had any performance side-effects? \n. and let's up the chromedriver to 2.18 to support chrome 44\n. I don't know what your request is here.\nYou can use mobileEmulation settings in chromeOptions for chrome browser. https://sites.google.com/a/chromium.org/chromedriver/mobile-emulation\n. No idea. can you set size (5,5) just for fun?\nAlso if you are running chrome you can set chromeOptions args to  have --window-size=340,600 on startup.\n. This could be the issue with Chrome crashing per #79 . Start chrome with -v /dev/shm:/dev/shm as pointed to workaround. \nAre you using the standalone image?\n. see #87 \n. With Chrome 44 and Chrome 45 (with chromedriver 2.18) I see lots of timeouts when running on CentOS 7.1 with Docker 1.7.1 \nOn Ubuntu hosts with docker 1.8.2 the same chrome images run without any timeouts for me. \nI use /dev/shm mount for both test scenarios.\n. with docker you can -p 4445:4444. Basically internally hub starts on port 4444 but on the outside it's visible on port 4445. Is that your issue?\n. I see you run a debug node attached to the hub. Maybe there are timing issues in spinning up a hub and then adding a node... \nA better way may be to start a standalone-chrome-debug image if you are running a remote driver on demand. That way you bypass the entire grid. I assume you only need one browser session. \nThe hub plus nodes is a good setup when you need to spin 20 nodes for example because you need to run parallel tests.\n. I would hold of merging this yet. Here are some thoughts.\nThis falls under node capacity configuration, a practical need to decorate the node the way you want based on how you run your node with how much CPU power and RAM you have on the machine running a node and I would leave that to the user to provide their own config.json when starting a node.\nWe could even remove the maxSessions from the hub (I think it will be 5 by default anyway) and we should let the Node dictate maxInstances and maxSessions. I would separate the hub's config from node's config. currently the PR increases maxSessions and maxInstances on arbitrary default value in the hub and if the user increased maxSessions in the hub that hub's setting will not override the node's property value. So number 5 is arbitrary in this situation. \nI think If you would like to decorate the node in a different manner I would suggest using the node as base in your own Dockerfile that consumes this base and then you can provide your own config.json. \nThis is actually what I am doing on my project\nFor example current Firefox is 40. I have created a Dockerfile\nFROM selenium/node-firefox\nUSER root\nADD config.json /opt/selenium/config.json\nUSER seluser\nand supplied the desired config.json based on my VM's used to build the gird.\njson\n{\n  capabilities: [\n    {\n      browserName: \"firefox\",\n      version: \"40\",\n      maxInstances: 2,\n      seleniumProtocol: \"WebDriver\"\n    }\n  ],\n  configuration: {\n    proxy: \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n    maxSession: 2,\n    register: true,\n    registerCycle: 5000\n  }\n}\nBasically I decide how to decorate the given docker images in my project's environment based on my capacity.\nOf course when Firefox 41 comes I will change your config.json and now decorate it as Firefox 41.\nI would hold of merging this until getting some feedback. How do people configure the nodes? hub? \nThoughts?\n. Hi @cyrille-leclerc \nHave you signed the CLA as described in CONTRIBUTING.md?\nPlease indicate here. Thanks and we'll merge it.\n. The host machine where you run your docker images needs to have dns setup to resolve to the outside world. Sorry, but that's beyond the scope of this project.\n. Hello @sethuster \nSome housekeeping: Have you signed the CLA as described in CONTRIBUTING.md?\nPlease indicate here. Thanks and we'll merge it.\n. Can you change the commit message to \"added chromedriver 2.19\".\nI know at some point @elgalu said he just installs the latest chromedriver instead of specifying the version.\nI was on the cautious side but I think now that we can change the code to just download the latest chromedriver. \nWhat do others think please? \n. Thanks for feedback. \nYeah, the issue I keep having is the grid gives me timeouts on Chrome 44 and Chrome 45. It could be that I am on chromedriver 2.18 or the fact that I run on CentOS 7.1 machines with docker 1.7.1\nOn docker 1.8.2 on ubuntu VMs I don't have that problem. I will upgrade to Chromedriver 2.19 and we'll see if that helps me with timeouts.\n. Sorry, we don't have IE dockerized. You will need to use Windows machines and somehow provision them with your tool of choice (maybe https://chocolatey.org/) or 'manually' (ouch)\nThanks for the feedback on the SeConf talk. \nCurrent Docker Images are based on Ubuntu Vivid 15.04. You can run them on RedHat Hosts if you want. I run them on CentOS 7.1 \n. Thank you\n. Hi, how could I reproduce this issue? not sure if I understand\n. Thanks.\n. Is this on the host machine? if so then please use --link if hub and nodes are managed by the same docker service on the same host machine....\nif hub runs on separate host and node on a diff machine you need to provide the public IP visible from the outside. The 172.21.x.x range looks like an internal subnet.\ncan you describe how you run those machines?\n. For Node I would recommend you make your own config.json file and build a new image based on base image. The node config.json is a minimalistic config.\nFor Hub the ENV values are used to generate the config.json for the hub (with 8 parameters using values from env var)\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/Hub/generate_config\nWhat is your usecase? \n. About Circle CI: I don't think I have access to that setup... and they had some issues  with builds http://status.circleci.com/\nAbout moving the JAVA_OPTS. This came from PR #47. My understanding was that we could use it to pass some flags to the selenium, e.g \"-debug\" so it would start selenium in debug mode.\nif we move the JAVA_OPTS before the -jar do we lose that option? \n. ok, we can split the two. I am curious what usecases people have and what would work for you\n. Back to splitting the jvm and selenium opts into 2 vars. JAVA_OPTS moves before jarfile and we should introduce a new env var: Any name suggestions? Usage examples? \nJAR_OPTS ? \nSE_OPTS ? \n@mikewrighton would you be willing to add that to this PR ?\n. I apologize to all. When PR #47 arrived I assumed that adding the opts at the end is fine and position did not matter as long as the args were on the line, in that I was ignorant. Time to fix it then. Thanks for the eduction on this.\nI suggest the usage of SE_OPTS then as a secondary env so you can add -debug if you wanted to or modify default options already assigned for the hub and the node).\nI will add some code to this PR for review. \n. add SE_OPTS on top of this PR https://github.com/SeleniumHQ/docker-selenium/commit/0ecdabde7d3d1b01501b59b09c2c3ec69023f4f7\nWould this be ok?\n. something with Circle CI got borked... digging now.\n. Circle CI was failing on permission denied for a public key. Is it possible someone removed the keys by mistake? Not sure, I reauthorized CircleCi with my github creds. Circle CI builds are running now for PR #124 \nShould there be a special deploy key added? I am ok with my key being there but I would want to prevent this issue from happening. I don't fully grasp how Circle CI is hooked up with non user specific keys. \n. hi @mikewrighton \nDid you/could you sign the CLA please according to this doc: https://github.com/SeleniumHQ/docker-selenium/blob/master/CONTRIBUTING.md to accept your patch. \nPlease indicate here.\nThanks.\n. Additional work done on PR #124 \n. The Chrome may have crashed. Try using the /dev/shm mount solution to the issue.  https://github.com/SeleniumHQ/docker-selenium#running-the-images\n. HI, can you rebase please and resolve conflicts and we'll merge. Thanks.\n. I have never run into this before so I can't really provide any good feedback on this. Is the reason for the change because we drop some values? Anybody else please?\n. Thanks for the explanation. 2 things.\n1. Can you rebase this on master and resolve conflicts (not ready to merge yet)\n2. Have you signed the CLA please according to this https://github.com/SeleniumHQ/docker-selenium/blob/master/CONTRIBUTING.md ?  Please indicate here. Thanks.\n. Aha, I did not see the second commit. Can you squash both of them into one logical change commit please? \n. Up to now there were two ways to run selenium grid configurations with hub and nodes.\nYou either 1) --link the node to hub given giving the hub link name hub or you 2) tell the node 2 pieces of vital info to connect to the hub, hub address and hub port in the form of environment variables HUB_PORT_4444_TCP_ADDR and HUB_PORT_4444_TCP_PORT\nCase 1 --link named hub\nWhy such names for env variables? The selenium node container consumes the env variables that get created in that container when --link to hub named hub is used. The link has to be named hub for convention to work.\nFor example:\nshell\ndocker run -d -p 4444:4444 --name selenium-hub selenium/hub\ndocker run -d --link selenium-hub:hub selenium/node-chrome\nThe node is a recipient of env variables because port 4444 has been exposed in the hub. The hub has Dockerfile entry EXPOSE 4444.\nThere are several env variables created in the recipient (node) to provide information about that port in the target container (hub)\nThe node receives information about the target of the link with this format <name_of_link>_PORT_<exposed_port_number>. The variables created are:\nHUB_PORT\nHUB_PORT_4444_TCP\nHUB_PORT_4444_TCP_ADDR\nHUB_PORT_4444_TCP_PORT\nHUB_PORT_4444_TCP_PROTO\nWe use this convention and consume the two env variables that get created to register the node to the hub.\n(fyi: I made a youtube video on this a while back trying to explain links in a lighting talk: https://www.youtube.com/watch?v=nRZ9aYizUEo)\nCase 2: hub and node on separate machines\nIn the case where a simple --link worked when you are on the same machine not the same is true when your hub and node sit on different machines and they don't know about each other's existence. You simply can't connect the node to the hub with a --link. Because of this we tell the node what the address and port is for the hub by running the node with something like this. The env variables don't get created with the link. We have to create them as env vars when starting a node.\ndocker run -d -e HUB_PORT_4444_TCP_ADDR=<hub-ip-address> -e HUB_PORT_4444_TCP_PORT=<4444-usually> selenium/node-chrome\nAnd the entry_point.sh gets the info to register the node to the hub. There is an extra problem here that is solved with -e REMOTE_HOST=<outside-ip-of-your-node-vm> So really 3 piece of info are needed. \nCase 3: networking instead of link\nNow we have docker-compose and networking. Basically how do we deprecated Case 1 but still make Case 2 work.\nThoughts? Do we want to abandon --link now and move to --net ? I would not want to add new env vars unless needed. (PR #136 add new var to bypass a guard when address is not set). \nI have not tested running containers with networing.  I use Case 2 and some marathon mesos.\n. I have played a bit with the network instead of a link and in this case I can see we just use the existing env variables (and perhaps we can make them more human readable like HUB_HOST and HUB_PORT)\nBasically the example provided by @SpencerMalone shows how docker network is used instead of --link. The node knows how to register with the hub becuase the hub name is entered in node's /etc/hosts file, I can see it there twice with  and gain as  .\nUsing example like this:\nshell\ndocker network create grid\ndocker run -d -P --net=grid --name hub selenium/hub\ndocker run -d --net=grid -e HUB_PORT_4444_TCP_ADDR=hub -e HUB_PORT_4444_TCP_PORT=4444 selenium/node-chrome\nUsign docker-compose.yml it may look like this: \n``` yml\nhub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\n  container_name: hub\nnode:\n  image: selenium/node-chrome\n  environment:\n    - HUB_PORT_4444_TCP_ADDR=hub\n    - HUB_PORT_4444_TCP_PORT=4444\n```\nWhere I run it as docker-compose --x-networking -d -p grid up -d it will create a network named grid and stick to a static container name hub for the hub so we can refer to it in the env var for the node\nThe above command starts a selenium grid with experimental networking instead of using --link\n``` shell\n$ docker-compose ps\n   Name               Command           State           Ports\n\ngrid_node_1   /opt/bin/entry_point.sh   Up\nhub           /opt/bin/entry_point.sh   Up      0.0.0.0:4444->4444/tcp\n```\nNotice above I have force the project name to be grid but it does not have to be. it will by default become a name of a folder your docker-compose.yml is located in.\nI would hold off right now on PR #136 in its present form. \nFor those of you using docker-compose can you please provide your usage examples in your projects? I would like to see the use case scenarios that work or don't work for you?\nThanks.\n. I would hold off on this. Can we gather some more feedback per #133 discussion please? It may be that in light of new docker network we should expose env variable that were previously hidden by the --link and yes, a bit ugly.  We can go with HUB_HOST and HUB_HOST_PORT instead of those cryptic ones auto assigned by --link.\n. I do see a need to add to README the bits about configuring the grid on multi host machines. Basically Case 1 is covered, now Case 2 and Case 3 scenario can be either added to README or we can start adding pages in wiki section.\n. Hi, do we want 2.49.1 or do we skip it and go directly for 2.50? \n. Yes, so I decided to merge and keep building images for both 2.49.1 and for 2.50.0\n. Forgot to ask to: Please rebase and git commit append so it's just one commit to merge. \nPlease kindly sign the the CLA as described here\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/CONTRIBUTING.md\n. This is related to the case 2 in Issue #133 \nTo clarify: HUB_PORT_4444_TCP_ADDR has to be a hostname or an IP address - example:  hub.example.com or 192.168.1.22 or some values.\n. I think in SE_OPTS you may not use = signs. \nSE_OPTS=\"-timeout 86400 -browserTimeout 86400\"\nYou can also provide your own config.json override for your particular customization.\n. @slugics by default node listens on port 5555 (unless you override it). so to connect your node to hub try this\ndocker run -d -p 5555:5555 -e REMOTE_HOST=\"http://YOURIP:5555\" -e HUB_PORT_4444_TCP_ADDR=HUBIP -e HUB_PORT_4444_TCP_PORT=4444 selenium/node-chrome\n. Is the original issue fixed for you@ @stenver ?  I see other comments that are valid but unrelated to the actual issue topic\n. We got 2.49.1 and 2.50.0 images going. \nDo you still need 2.49.0 ? If not please close. Thanks.\n. We send values to  jvm with JAVA_OPTS env variable. And we send values to selenium jar wth SE_OPTS\nhttps://github.com/SeleniumHQ/docker-selenium#java_opts-java-environment-options\nhttps://github.com/SeleniumHQ/docker-selenium#se_opts-selenium-configuration-options\nexample:\n$ docker run -d -p 4444:4444 -e JAVA_OPTS=\"-Xmx4G\" -e SE_OPTS=\"-DPOOL_MAX=512\" selenium/hub\nWe append SE_OPTS args at the end.\nWould this work for you? Please let us know. \n. Zobacz #133\nIf you make your own network using docker-compose you can see this example: \nhttps://github.com/SeleniumHQ/docker-selenium/issues/133#issuecomment-165249099\nhttps://github.com/SeleniumHQ/docker-selenium/issues/133#issuecomment-165280799\n. You may not want to give the whole world access to your private intranet. \nyou run docker container and asking it to execute SE_OPTS program\nPlease review docker information on how docker run invocation sequence works. Docker website has lots of examples on how to start docker images as containers. \n. I setup that build chain in docker hub, and yes, it does require that manual step to know that when master branch builds latest image you need the branch name.... That is crappy, sorry for leaving you in a bad state. (quick note on that process https://github.com/SeleniumHQ/docker-selenium/wiki/Docker-hub-automated-builds)\nWith the way Dockerfile is produced which constructs FROM stanza with version number (based on branch) perhaps we should not build on master branch automatically but only build on branch name. \nThat way when you merge  into master the trigger will not fire on docker hub, instead when you advance the branch to the desired sha the docker will trigger the build. (this is still a manual process of someone merging master into branch and pushing to github)\nOR change the FROM stanza to have 'latest' instead of a version number. Then builds will trigger on every master advance automatically. (but now some manual process may be needed to tag it with version number if needed)\nSorry but I have not worked with these images much, my job has moved to something else in the last few months. \n. I use global ~/.gitignore for all projects so I don't have to add .gitignore to each repo I work on. \nTo be pedantic I would gladly remove .gitignore file from this repo if most people use core.excludesfile directive. \nWhat say you people ?\n. ",
    "neural-wetware": "How about we just expose the X server domain socket in a volume like this:\nhttp://stackoverflow.com/a/25168483\n. ",
    "elgalu": "\nIt grants the container full access to the xserver on the host\n. I agree is now incompatible as of now.\n\nI confirmed the x11 redirect works ~1yr ago on version v2.46.0-x11 while playing with Xephyr to redirect X to the docker host and passing -v /tmp/.X11-unix/X${XE_DISP_NUM}:/tmp/.X11-unix/X${XE_DISP_NUM} among other things.\nBut drop it after because didn't really want to support this use case back then but if someone wants to implement it for real and become officially supported that might help.\n. By the time I put those sleep I was lazy and simply used whatever worked for my current setup by then however we all know that's going to vary depending on the infrastructure you have.\nRather than trusting in a fixed wait time we should figure out an active wait mechanism and do this properly.\n. Thanks for your comments @mtscout6 , LGTM @miyajan can you squash those 3 commits into 1 && git push --force into your PR branch so it becomes 1 single commit with this cool active wait?\nHowto: https://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/\n. @miyajan did you sign the CLA ?\n. Worked ok, merging. Thanks!\n. Agree, this is particularly relevant now: https://code.google.com/p/selenium/issues/detail?id=8390\n. Agree @mtscout6 and the problem with that is that apt-cache will change eventually.\nAnother option is to trust Firefox ftp archive where Firefox 34.0.5 is found but it requires to take care of the installation separately and need to disable automatic updates too.\n. Can you please try to recreate with this standalone version: https://github.com/elgalu/docker-selenium#non-privileged  ? That would help to narrow the problem.\nAlso please check if this is the error \"UnknownError: session deleted because of page crash from tab crashed\"  https://github.com/elgalu/docker-selenium/issues/20\n. Thanks! Have you signed the CLA yet?\n. Hi! thanks! did you sight the CLA ?\n. CentOS is the host operating system or you modified the Dockerfile?\nCan you recreate with elgalu/docker-selenium ? i.e.\nsh\ndocker run -p 4444:4444 -p 5900:5900 -e SCREEN_WIDTH=1550 -e SCREEN_HEIGHT=1110 -e VNC_PASSWORD=secret elgalu/selenium:v2.45.0-berlin5\n. So privileged fixes the issue on this repo too? Idk how to troubleshoot this issue unless you provide a public GitHub minimum selenium project that reproduces it.\n. Cool!!\n. @rubytester you can also just fetch the latest available chromedriver instead of simply setting the number, this is working ok for me: https://github.com/elgalu/docker-selenium/blob/58f0971df/Dockerfile#L142\n. Closing as duplicate of https://github.com/SeleniumHQ/docker-selenium/pull/65\n. No problem ;)\n. Works for me, no new issues. https://github.com/elgalu/docker-selenium/blob/master/CHANGELOG.md#v2460-base1-2015-06-09\n. I know some folks in OSX dropped boot2docker usage because of the flakiness and switched to installing some Linux Vagrant / VirtualBox image instead. So they ssh into the virtual machine and use docker from there.\n. It says 7:31:10 waiting for builds to finish but no logs, maybe TravisCI works better?\n. That magento/taf project dates 2013, what version of selenium client is using?\n. I mean the version of selenium client php bindings, not the server.\n. Exactly, I would first try to upgrade 1.2.6 to latest 1.4.2 see https://github.com/giorgiosironi/phpunit-selenium/releases\n. You may need to switch to the first tab using selenium API in your tests. I don't think this issue belongs to docker-selenium.\n. Yes... more info here https://github.com/elgalu/docker-selenium/issues/20\nBut I think this is a bug in Chrome Browser, not in docker seleniums, not in chromedriver because is the browser that crashes.\n. elgalu repo is mine, not official. yeah @rubytester is aware, not sure if we can solve this on our end, as I said is Chrome crashing, Firefox does not so maybe Google guys needs some help reproducing the bug  to take a look, so far none seem to be involved.\nWould be great that someone publish a git repo that recreates this bug consistently by a simple docker run command) and put the link in the chromedriver issue that you posted ;)\n. I'm running with -Xmx6312m and also tried OpenJDK 7, 8 and Oracle jre 8\nand can reproduce in all cases; Chrome crashes so maybe it depends on the\nUI you're testing.\nMy case is an angular.js app with many UI based tests including drag and\ndrop, image resizing and so on. Don't see how this is related to the jvm\nbut I'm not a Java guy.\nOn Wed, Jul 29, 2015 at 3:46 AM, rubytester notifications@github.com\nwrote:\n\nand we are also running on OpenJDK. Should we be running on official\nOracle runtime?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/79#issuecomment-125802388\n.\n. Tried with exactly Xmx1024m chrome tab crashed consistently, just 1 browser and can see the Aw, Snap! blue window in Chrome :'(\n\nSo in my case don't need to overload it to recreate but maybe we are talking about 2 different issues, let's see how the load tests goes :)\n. So @issuj figured this out, I just tried below code and Chrome no longer crashes:\nEasiest option is sharing shm via docker run ... -v /dev/shm:/dev/shm\nOther option is to use the new docker run option --shm-size=1g\nFinally you can do it yourself inside the container:\n1. Started in privileged mode: docker run --privileged\n2. Fix small /dev/shm size\nsh\ndocker exec $id sudo umount /dev/shm\ndocker exec $id sudo mount -t tmpfs -o rw,nosuid,nodev,noexec,relatime,size=512M tmpfs /dev/shm\nHowever it would be nice to avoid privileged mode.\nOther refs:\nhttps://github.com/docker/docker/pull/3505#issue-25240859\nhttps://github.com/docker/docker/pull/4981#issuecomment-56052500\nhttps://github.com/docker/docker/issues/2606#issuecomment-95350288\n. Welcome @sloppylopez , my comment was a bit outdated so I updated with this:\nEasiest option is sharing shm via docker run ... -v /dev/shm:/dev/shm\nOther option is to use the new docker run option --shm-size=1g\n. Yeah looks like a typo.\n. This issue looks like a duplicate of https://github.com/SeleniumHQ/docker-selenium/issues/14#issuecomment-125685468\n. Actually should be 2.47.1 a fix was sent right after 2.47.0\n. I think is ok to upgrade to java 8 @rubytester, has being working ok for me for some time now: https://github.com/elgalu/docker-selenium/blob/99ebf86eb7bf6a155c12bb24a5bfa95676c87049/Dockerfile#L125\n. Yes, I would work on a separate PR to upgrade Java\n. You you guys try installing dbus-x11 and see if that helps?\n. Crazy fix indeed, so the DBUS_SESSION_BUS_ADDRESS=/dev/null magic fix works, would be nice to know what are we doing exactly, if anyone can enlighten us that would be great. I see this in chromedriver logs:\nsh\n(google-chrome-base:544): LIBDBUSMENU-GLIB-WARNING **: Unable to get session bus: Address element '/dev/null' does not contain a colon (:)\n. I'll try a new alternative, if anyone has an input please let me know\nsh\nsudo mkdir -p /var/run/dbus\nsudo service dbus start\n. It seems I also need to -v /var/run/dbus:/var/run/dbus during docker run. Does anybody knows what are the implications of doing that?\n. Cool news about Windows @alexkogon  it will be awesome to have IE in docker-selenium at some point!\nRegarding dbus, I found a way without having to share /var/run/dbus, we are testing it and seems stable so far, the hack DBUS_SESSION_BUS_ADDRESS=/dev/null is removed and doing this instead:\n``` sh\nDockerfile\nsudo apt-get -qyy install dbus-x11\nentry.sh\nsudo rm -f /var/lib/dbus/machine-id\nsudo mkdir -p /var/run/dbus\nsudo service dbus restart\nservice dbus status\nexport $(dbus-launch)\nexport NSS_USE_SHARED_DB=ENABLED\necho \"-- INFO: DBUS_SESSION_BUS_ADDRESS=${DBUS_SESSION_BUS_ADDRESS}\"\n=> e.g. DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-APZO4BE4TJ,guid=6e9c098d053d3038cb0756ae57ecc885\necho \"-- INFO: DBUS_SESSION_BUS_PID=${DBUS_SESSION_BUS_PID}\"\n=> e.g. DBUS_SESSION_BUS_PID=44\n```\n. It was hanging, in the output we could only see was:\nsh\nStarting chromedriver on port {{some_port}} Only local connections are allowed.\nBut then nothing.\nAfter implementing the above dbus solution it works consistently (so far).\n. I personally use maxInstances: 1 and maxSession: 1 because some of the tests we run that relies on jQuery :focus fail when 2 browsers are on the same virtual desktop or real desktop, they start competing for the focus.\nWhat works best for me is always running a new selenium container for each test and then dispose the container after that test is done. Bullet proof but maybe overkill, sharing...\nIf you look at Sauce Labs or BrowserStack you can see they do the same, they always provide 1 VM for each test session even for the same user running it's automated tests. But the reason for that might probably be video recording at desktop level.\nSo yes I disagree with this PR, sorry @JeffHall \n. Docker 1.0.1 :/ ?\nCurrent version is 1.8.2\nOn Sep 19, 2015 8:13 AM, \"Aleksey Derkach\" notifications@github.com wrote:\n\nAccording to \"Building the images\" section in README I've trying to build\nimages.\n1. Run docker pull ubuntu:15.04. Image downloaded successfully.\n2. Run VERSION=local make build inside 'docker-selenium' cloned\nrepository. And got an error:\nStep 5 : RUN sudo useradd seluser --shell /bin/bash --create-home  && sudo usermod -a -G sudo seluser  && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers  && echo 'seluser:secret' | chpasswd\n ---> Running in 0fa0c872d5b9\nchpasswd: (user seluser) pam_chauthtok() failed, error:\nSystem error\nchpasswd: (line 1, user seluser) password not changed\n2015/09/19 09:11:28 The command [/bin/sh -c sudo useradd seluser --shell /bin/bash --create-home  && sudo usermod -a -G sudo seluser  && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers  && echo 'seluser:secret' | chpasswd] returned a non-zero code: 1\ndocker version:\nClient version: 1.0.1\nClient API version: 1.12\nGo version (client): go1.2.1\nGit commit (client): 990021a\nServer version: 1.0.1\nServer API version: 1.12\nGo version (server): go1.2.1\nGit commit (server): 990021a\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/98.\n. I rolled back to specifying the exact version as I agree with @kayabendroth. I think the ideal solution is to be able to request at docker run time which version we want, e.g.\n\ndocker run selenium -e CHROMEDRIVER=2.19\nOr via some json config. And having the last N versions in the image ready to pick one, but that's another ticket...\n. Interesting @NickAb, but by reading the current docs I see no way to run different versions of IE on each windows-docker container so we will be able to only run the one latest version provided by Win 2016.\n. LGTM\nAt Zalando we use https://github.com/zalando-stups/senza but the tool right now is more oriented to deploy applications rather than testing infrastructure. To use senza you need a whole setup (private docker registry, oauth2 server and more).\n. You're welcome :)\n. Ok, I guess you can close this issue maybe?\n. You mean through xrdp ? Is there any advantage over VNC? like better performance or increased security? or is just to avoid installing a VNC client on Windows?\n. The arguments summarized at codinghorror blog post only apply when the remote desktop server is on Windows.\n. I guess someone needs to give it a try to the RDP linux server, perhaps by installing xrdp and see how it goes in a Dockerfile , do some performance comparison vs VNC so a decision can be made.\n. Cool @alexkogon! how much space does RDP-in-docker adds to the image? I read is 500mb.\nRegarding IE inside docker, your experience is very useful, the kernel hard dependency might be something acceptable for users that really want this. How much time does it take for the IE browser to start from the moment do you docker run .. ie .. until is able to accept tests the first time? I see the difference is that with Chrome & Firefox you don't need to boot the OS but with VBox inside docker I'm guessing Windows needs to boot, or is it able to preserve the state in hibernation mode somehow?. Thanks @alexkogon indeed that part was missing -p 5900:5900\n. You probably exposed your selenium to the world, maybe you put it in AWS and left selenium port open to everyone.\n. Thanks for pointing to MP4Box @dtinth I successfully implemented it and seems to have fixed my bad-ending-time video issues on Zalenium. Should we keep this issue open @ddavison ? I think if we agree to leave video recording out of the scope of this project we can close this one.\nUsers can still get video recording by using Zalenium\n@diemol has even implemented per-test video recording so you can pass the capability recordVideo: 'true' which is even compatible with Sauce Labs and enable/disable videos per tests:\n```js\ncapabilities: {\n    browserName: 'chrome',\n    screenResolution: '1680x1050',\n// Record video in Zalenium?\nrecordVideo: 'true'\n\n}\n```\n. With github is now possible to +1 via \"reactions\" please avoid polluting issues with +1 comments, see:\n\n. The problem is that you should be testing your AngularJS page not selenium page, check your baseUrl and remember that localhost inside the docker container is not the same as your Mac localhost where your app is probably running in development mode.\n. You need to browser.get('yourAngularJSpageURL!'); before starting your expectations.\nThis is not a docker-selenium issue, if you have problems using Protractor please consider opening those issues in https://github.com/angular/protractor/issues/\n. the example in the readme works, just change --rm with -d then you can stop the container later on docker stop $CH you can also use named containers e.g. docker run -d --name=build-99 and later on do docker stop build-99 and eventually 99 could come from an env var like $BUILD_NUMBER in Jenkins ;)\n. In Jenkins add a Post build action or task that executes Always, there either put the script to docker stop buid-$BUILD_NUMBER || true and also docker rm buid-$BUILD_NUMBER || true or trigger another job and call it cleanup that should do the docker stop; docker rm part but then you need to pass it the parameter of the container name.\n. Nice docker-compose approach @vbyjsue \n. quoting http://localhost:4444/ws/hub is wd not ws\n. please paste the whole log from test start to bottom error, if too large put it on a gist.github.com\n. try to change localhost with the result of boot2docker ip or docker-machine ip default in http://localhost:4444/wd/hub\n. cool, so works with localhost if you are on Linux, when I saw your logs figured out you were on OSX and in that case docker uses a Linux VM to run docker so is a different IP\n. This looks wrong, taking it away from the entry_point.sh will prevent users to change the config at run time.\n. Sorry, took a slight look and seems I wrote some none-sense.\n. Is this no longer valid @davehunt and now is enough to install geckodriver ?\n. @aakashgupta96 : https://github.com/leonid-shevtsov/headless is incompatible with docker-selenium, please open that issue in leonid-shevtsov/headless repo or drop it altogether, i.e. drop Headless class and gem and connect to the selenium grid of docker-selenium.. @crazyh \n1. do you have your host machine kernel patched?\n2. what linux distro and kernel version is running?\n3. what's your docker --version? \n4. what's the full docker run command and the output?\n5. do you have the same issue if using https://github.com/elgalu/docker-selenium#run ?\n``` sh\ndocker pull elgalu/selenium:2.53.0h\ndocker run --rm -ti --name=grid -p 4444:24444 -p 5900:25900 \\\n    -v /dev/shm:/dev/shm -e VNC_PASSWORD=hola elgalu/selenium:2.53.0h\n```\n. Sorry I just saw you already put some info on the previous comment, please only answer what's missing\n. What about adding some automated tests? That prove:\n\nLaunch Selenium tests that required mp4 video playback\n\nNote I included your change in the other docker-selenium project, see here and nothing broke ;)\n. Yes that one is a different project, in this project the proper place would be the firefox images only. Idk how to add the html5 video tests without doing some research which I'm gladly leaving that to you ;)\n. Idk really, better ask @kayabendroth \n. Sorry for keep promoting Zalenium here but so you know with Zalenium you can set the screen desktop resolution per test via the capatilibies, e.g.\njs\ncapabilities: {\n    browserName: 'chrome',\n    screenResolution: '1680x1050',\n    recordVideo: 'false'\n}\n. Good question, so far is based on the maintainers free time to manually (via commits) trigger the builds and test them in order to keep them up to date. It would be nice to have this automated somehow, see issue https://github.com/elgalu/docker-selenium/issues/81 on the side project.\n. Welcome @matthewb531. So in the side project, by looking at the releases tags I see it requires me 1 release every 7 days, more or less, meaning there is at least a new version of either Chrome or FF or Selenium every week but as I said, checking and doing this manually.\n. Correct, I tried in the other project and it fails: https://github.com/elgalu/docker-selenium/issues/102\n. So you just dropped a binary HubPrioritizer/GridPlugin-0.0.1.jar here :p Where is the source code?\n. Hehe, perhaps it would be better to leave the mvn project in another repo and clone it here, putting a binary implies security concerns.\n. I don't how this can work for installing old versions of chrome, right now we are on Chrome 56 (stable) and if I try to install Chrome 53 the package is not listed anymore:\nsh\nE: Version '53.0.2785.101-1' for 'google-chrome-stable' was not found\nWhat am I missing?. I think the \"use -plus- +\" comment was removed but just to leave it clear; it doesn't seem to be supported by docker.\nRegarding 3.x.x-x or 2.x.x-x maybe is the correct way but so many x (more than 2) reads awkward. I don't have a strong opinion on the subject though.\n. I like v4, looks more like the official docker approach to tags, e.g. https://hub.docker.com/_/python/\n. @porsuv you could try to figure out with Ubuntu package needs to be installed, see for example how this was done for japanese/chinese fonts: https://github.com/elgalu/docker-selenium/pull/153/files\nOnce you do that make sure to report here how much disk space it takes.\n. What is this libosmesa6 @mauriceteunissen ?\nDoes it improve xvfb performance? does it replace it? how?\n. AFAIK this is still true:\n\nwhat it's missing to achieve such thing is to have a Windows feature enabling to install the GUI within a windows container\n\nhttps://github.com/Microsoft/Virtualization-Documentation/issues/214\n. Try active wait:\n```sh\nWait for a chrome node\nwhile ! (curl -sSL \"http://localhost:4444/grid/console\" | grep -i chrome) >/dev/null 2>&1; do echo -n \".\"; sleep 0.2; done\nWait for a firefox node\nwhile ! (curl -sSL \"http://localhost:4444/grid/console\" | grep -i firefox) >/dev/null 2>&1; do echo -n \".\"; sleep 0.2; done\n``\n. Note installingfonts-noto-cjk` will add 126.7 MB to the docker image, perhaps is better generating a separate image in this case.. thanks @pigiuz !\nBy reading your comment on nvidia-docker it seems it might work on Linux machines with docker native.. Nice. Though I'm not actively trying this out I'm very interested in seeing\nany conclusions.\nA bit related, chrome --headless seems to have been shipped already with\nChrome 57 (dev channel). I'm now also curious how this Headless Chromium\nwill improve our tests performance, or not.\nhttps://chromium.googlesource.com/chromium/src/+/master/headless/README.md\n. But how?. probably related to #339. @Menthalion very interesting issue. Out of curiosity, have you tried Chrome headless ? Is still in the DEV channel but wondering how does it handle your 200+ parallel tests.\nsh\ngoogle-chrome-unstable --headless --disable-gpu --remote-debugging-port=9222 https://testmysite.thinkwithgoogle.com. Great detailed report @Menthalion thank you so much.\nHave you tried this scenario with Zalenium ? @diemol and I have created this auto vertical scaling docker-selenium solution, you can quickly try it out with the one-liner installer:\nsh\ncurl -sSL https://raw.githubusercontent.com/dosel/t/i/p | bash -s 3 start\nMy guess is it won't handle that many tests in a 16GB 8 cores machine but if you have a moment to try it I'm a bit curious also.\n. No. And I think it won't as that would kill the video recording functionality, the live preview feature, etc..\nBut it may be included in docker-selenium for the non-debug images in the future I guess.\n. I think the problem:\n\ncannot parse capability: pageLoadStrategy\n\nIs because that capability is Firefox specific but you are testing in Chrome. Can you try upgrading selenium java library to latest?\nAdded to that there is another issue, the change log shows:\n\nChanged capability name from pageLoadingStrategy to pageLoadStrategy\n\nSo the wiki seems to need an updated but I don't have perms to edit it.\n. @wheleph I managed to solved the Failed to move to new namespace issue by using --no-sandbox. Guys there is already a +1 Github's built-in functionality so there is no need to pollute the comments with +1.\nRegarding this issue, I've seen a similar errors for a while with no impact in my tests execution, for example using Firefox 52.0.2, Selenium 3.3.1 and without docker-compose:\nfirefox_driver.log:[Child 668] ###!!! ABORT: Aborting on channel error.: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/glue/MessageChannel.cpp, line 2143\nalso:\nfirefox_driver.log:###!!! [Child][MessageChannel] Error: (msgtype=0xE40003,name=PTexture::Msg_Destroy) Channel error: cannot send/recv\nIs indeed annoying to see this without knowing why is happening however I believe this issue belongs to geckodriver, not docker-selenium, see for example:\nhttps://github.com/mozilla/geckodriver/issues/210\n@sourcerer-mike could you move this issue to geckodriver ?. Indeed, I managed even to set the Chrome browser window size but once I removed Xvfb from docker-selenium I was also bitten by @SpencerMalone error:\nFailed: unknown error: an X display is required for keycode conversions, consider using Xvfb\n  (Session info: headless chrome=58.0.3029.81)\n  (Driver info: chromedriver=2.29.461571 (8a88bbe0775e2a23afda0ceaf2ef7ee74e822cc5),platform=Linux 4.4.0-72-generic x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 22 milliseconds\nBuild info: version: '3.3.1', revision: '5234b32', time: '2017-03-10 09:04:52 -0800'\nSystem info: host: 'ccd8e5f77172', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-72-generic', java.version: '1.8.0_121'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461571 (8a88bbe0775e2a23afda0ceaf2ef7ee74e822cc5), userDataDir=/tmp/.org.chromium.Chromium.u1tWQG}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=58.0.3029.81, platform=LINUX, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]\nSession ID: a7bc6bb38644f13e7a9c9b2c33fbcd61. Correct, this works already:\ncapabilities: {\n    browserName: 'chrome',\n    chromeOptions: {\n        args: ['headless', 'window-size=1920x1080']\n    }\n}. @lasotaartur you mention you are using docker in docker, did you try to `-v /dev/shm:/dev/shm` in the parent image? so the shm is shared properly downstream.. Yes, given you run docker inside docker I think this also need to be done in the container that runs docker-compose up, so you need to do it in both sides else you will just be shared an already small `shm`. :+1: . :+1:  on my side, I run a couple of tests in my OSX host and also in my Linux host, using chrome and firefox standalone images built from Diego's fork.. Do you also have his issue also when running selenium jar? i.e. selenium without docker?. I see, thanks for trying, if it happens with selenium jar then is not a docker-selenium issue therefore doesn't belong to this repo\n\nPerhaps you can open the issue at Selenium and reference it here to keep the discussion there.\n. You can pass it through the capabilities, see:\nhttps://github.com/elgalu/docker-selenium#chrome-not-reachable-or-timeout-after-60-secs. @LusciousPear  can you try docker run --cap-add=SYS_ADMIN ? as suggested here:\nhttps://github.com/jessfraz/dockerfiles/issues/17#issuecomment-99330284\nOthers are sharing -v /dev/dri:/dev/dri but doesn't seem to solve the problem, though you could also try if --cap-add=SYS_ADMIN doesn't work.\nAlso here is suggested CAP_NET_ADMIN\nFinally you could also try privileged via docker run --privileged\n. Hi @lluisteamcmp thanks for reporting this.\nDo you think you can also provide a solution? and even better via a pull request?. I agree. I will close but if you figure this out please post the link or the solution here so we can all learn from it ;). You could also try posting your question in stackoverflow @arvinder06 and put the link here so we can keep track of it.. Hi @tnguyen14 could you rephrase the issue description and make it deterministic?\n\n\n\"something like moveToElement\" -- so do you use moveToElement or what exactly? please be very specific.\n\n\n\"element hidden normally is present\" -- what is \"normally\" can this be rephrased with concrete reproducible steps?\n\n\ncan you provide a complete test case in https://gist.github.com/ for example? that would be awesome.\n. Thanks for the great bug report @tnguyen14 !!!\n\n\nI'm able to reproduce your issue but I'm surprised that is passing on firefox-debug as this seems to be a Firefox issue, independent of the debug image, or if using Zalenium for example.\nSee selenium logs from Zalenium \n\nAnd I can see the error:\njava\n13:53:04.457 WARN - Exception thrown\norg.openqa.selenium.UnsupportedCommandException: mouseMoveTo\nI think this might be more related to https://github.com/SeleniumHQ/selenium/issues/3808\n. Is it possible that is passing for you in the debug image because you have an older image? older Selenium or Firefox in there? I believe this issue is independent of VNC as the error message says org.openqa.selenium.UnsupportedCommandException: mouseMoveTo can't imagine how VNC can be related to that error. Can you double check your versions?. I think we can agree this is not a docker-selenium issue but upstream Selenium one so would be valid to close it here, what do you think?. Does someone knows which was the last version of Firefox & Selenium that this worked?\nI guess Selenium 2 & FF 47. And is also strange that the logs says Chrome crashed but this is reported as a Firefox issue.. ",
    "BrennanRoberts": "Just to clarify, is the current usage of xvfb incompatible with the approach of mounting the host's X socket in, say, a StandaloneChrome container?\n. Correct me if I'm wrong, but I believe the answer to ^ is \"yes\". xvfb sets up it's own X server, which is diametrically opposed to passing the socket from the host's X server in. Unwrapping the java ... -jar /opt/selenium/selenium-server-standalone.jar from xvfb-run, and passing DISPLAY/mounting /tmp/.X11-unix at docker run time works as desired. \nWould an option to bypass the xvfb-run segment of each entrypoint be an acceptable solution? Something conceptually like:\nbash\nif [ ! -z \"$NO_XVFB\" ]; then\n  java ${JAVA_OPTS} -jar /opt/selenium/selenium-server-standalone.jar \\\n    ${SE_OPTS} &\nelse\n  xvfb-run -n $SERVERNUM --server-args=\"-screen 0 $GEOMETRY -ac +extension RANDR\" \\\n    java ${JAVA_OPTS} -jar /opt/selenium/selenium-server-standalone.jar \\\n    ${SE_OPTS} &\nfi\n. Pushed #346 and looking for feedback.. This patch is intended to address #2. . Hi @ddavison, we use the standalone containers for our tests using the workflow:\n1. Start a standalone selenium container\n1. Start a test container and point it to the selenium container\nCurrently, in order to view the browser when running these tests locally, we need to change the standalone image to the \"-debug\" variant, and then start a VNC viewer and connect. This patch would allow us to, instead, start the standalone container with X forwarding, and the browser would render on the host automatically without the need to change the image or start a VNC viewer.\nIs there another way to achieve this result?. Looking for more feedback on other use cases this should support.. @HackToday I'm not sure this patch will make it any easier for you to view the browser when the selenium container is running on a different host. The case it does improve is where you want to run a standalone container locally using the 'remote' driver, and want to see it without using VNC.. >  If that case, does it mean I still need to make sure the local host need have GUI environment. \nI believe you could use remote X forwarding for this case.. This package provides xset. It's already on the Chrome images as a dependency, this just adds it to the other ones.. ",
    "diemol": "Hi all, \nIs this still relevant? This issue and the PR have been stale for ~1.5 years. . Closing issue since it is completely stale (also the related PR).. Hi,\nIs there an interest to merge this PR? If so, what is the main motivation to do so? I mean, is there some performance gaining when using TightVNC? Some numbers to support that are appreciated. \nIf not, let us know and we can close the PR.. Thanks for replying @phensley, and apologies for not reacting to this earlier. . Hi @devinrsmith,\nI am now going through old issues to find ways to solve them and close them. I was reading the docs about --icc=false here, and the most relevant part of it is this one:\n\nIf you choose the most secure setting of --icc=false, then how can containers communicate in those cases where you want them to provide each other services? The answer is the --link=CONTAINER_NAME_or_ID:ALIAS\n\nBut this puts me in a loop because in a different part of the documentation, docker recommends to avoid using --link\n\nWarning: >The --link flag is a legacy feature of Docker. It may eventually be removed. Unless you absolutely need to continue using it, we recommend that you use user-defined networks to facilitate communication between two containers instead of using --link. One feature that user-defined networks do not support that you can do with --link is sharing environmental variables between containers. However, you can use other mechanisms such as volumes to share environment variables between containers in a more controlled way.\n\nSo I am not sure how to proceed here... what I see if that the icc=false topic has only been touched in this issue and nowhere else in this repo, which might point that it is not a common case/concern. My first thought would be to close this issue since it didn't get too much activity from the community, but we are open to any suggestions or changes if they make sense.\nI'll leave the issue open for a few days to wait for feedback. . Thanks for the quick answer @devinrsmith!\nI'll close it then. . We already have the debug images is the main reason for this issue.\nI'll close it since it is not relevant anymore.. This should not be an issue anymore due to the changes and improvements in the images since this was created, please report back and feel free to reopen in case this is still an issue.. @smccarthy is right, that commit addressed this issue. Can someone close it?. @ahirreddy \nI've document a way to do it, please check\nhttps://gist.github.com/diemol/53ad9065686f4c330596725a8147aad5\nIf this is not needed anymore, please close this issue.. @azakordonets that is not really an error, is the normal output when the debug images are starting their VNC.\nYes, maybe it is annoying, but this is the normal behaviour. \n@snowe2010 If the tests crash, please post the related errors to them.. This can be done today by either rebuilding the image following these instructions, or just by passing the http_proxy as an env var when doing docker run.\nPlease note that the configuration value \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\", has a complete different purpose, which is to allow the possibility of overwriting the node's behaviour when handling sessions, not related at all to http proxies.\n. Closing this PR due to inactivity. . Closing this issue as it got solved in the SO link provided above.. Closing this issue since we didn't get any feedback from the original poster.. The appium-docker project already exists.\nI think this issue can be closed.. @vv-p @peterstory please see this comment. @vv-p But why is it terrible bad? I just want to understand how this affects the tests executed in the container.\nIf it is bad as in we are having errors in the logs but at the end the browser is working properly for the test, the question is, would it be ok to live with that?\nOr is it bad as in the tests cannot be executed because Chrome does not work at all? If so, would be cool to have a way to reproduce it and then we can install dbus just how @elgalu did it for his image. We need to be aware that then one more process would run inside the container and I am not sure how the performance can be affected by that.\nI mean, at the end, there is a way to find a solution. In my opinion we should try to find one that is practical and maintainable. . HI @PS1Online,\nI am not sure how this could apply to your context. This env var was necessary many releases ago for the docker-selenium images. You seem to be running in a complete different environment (Excel VBA).\nPerhaps the most simple way is for you to join https://seleniumhq.herokuapp.com, there are lots of people there that can potentially help you. . Closing this issue since we didn't get any feedback from the original poster.. Closing this issue since it has been solved in the referenced one and also with the help of the community. . As today, it is still not possible to run IE/EGDE in docker. There was a in issue created about it but didn't get a positive answer.\nClosing this issue since it is more a question than a real issue, feel free to mail the Selenium Users Group to continue the thread. . Closing this issue since we didn't get any feedback from the original poster.. Hi @vikramvi !\nI checked and the link is correct now, can you please close the issue? \nThanks!. Hi @vikramvi!\nIs this still an issue? If so, can you please provide some environment details and code to reproduce it?\nThanks!. I'll close this issue since we didn't get feedback from the OP. Feel free to reopen when more accurate info is provided.. Hi @vikramvi,\nRight now it is possible to do that with the env vars present in the Dockerfile. \nYou just need to pass them in the docker run command, adding (e.g.) -e GRID_MAX_SESSION=10. \n. @tlkx \nI tried to reproduce that with the current images, and it didn't happen. Perhaps it was an issue back in that moment.\nCould you please try again with the current images and report back?\nThanks,. Closing this since #518 addresses this same issue and it is solved. Please have a look to that one.\n. @bitliner is this still an issue for you? If so, can you please provide some log output, environment used, and docker images used?\nIf not, please close the issue.\nThanks!. @mikewrighton It is set to 0 since it is just the default in Selenium Grid. The parameter is there so it can be overwritten when the container is started.\nFrom the Selenium jar:\n\n-browserTimeout\n   <Integer> in seconds : number of seconds a browser session is allowed to\n   hang while a WebDriver command is running (example: driver.get(url)). If the\n   timeout is reached while a WebDriver command is still processing, the session\n   will quit. Minimum value is 60. An unspecified, zero, or negative value means\n   wait indefinitely.\n   Default: 0\n\n\nIf this answers you question, could you please close the issue?\nThanks!. @gilo that is the nature of Chrome in docker, you need to share that to get Chrome to work properly in docker-selenium.\nAs the issue seems to be solved, could you please close it?\nThanks!. Hi all,\nIn https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.8.1-chlorine we have introduced HUB_HOST and HUB_PORT, in addition the README has been updated on its usage. Therefore now you can also use docker networking.\nPlease give it a try, any feedback is appreciated. \nI'll close this issue since the PR sent for it was reused to produce the current release.. Is this issue still present with the most recent images? . I'll close this one since most of its content is covered by #640. I am not sure why this one didn't came through, but anyway thanks to @SpencerMalone and @rubytester for providing most of the content used in #640. . Hi @vikramvi, is this still an issue?\nPerhaps sharing the host memory would help? . I'll close this issue since we didn't get feedback from the OP. Feel free to reopen when more accurate info is provided.. Hi @vikramvi,\nI didn't really understand what you want to achieve... Could you please elaborate a bit more? . I'll close this issue since we didn't get feedback from the OP. Feel free to reopen when more accurate info is provided.. Thanks all for the great info!\nI'll close this issue since the original request has been already solved by the community.. @niksy if you are using the standalone image, you need to go to http://192.168.99.100:4444/wd/hub/static/resource/hub.html (localhost in case you are using a more recent version of docker).. Hi @strowi,\nI think this is not needed because, if I am not wrong, the Grid will detect this and it is part of the capabilities.\nE.g.: (check the capabilities part).\n\n . I'll close this one since the last two comments show the proper way to setup the timeouts in docker-selenium, which addresses the initial issue.. Hi all, \nI just checked the packages for Chromium and Firefox, e.g.:\nChromium:\n- https://pkgs.alpinelinux.org/package/v3.7/community/x86_64/chromium\n- Latest release is 61.0.3163.100-r0, almost more than one month ago and the current Chrome version is >=63\nFirefox:\n- https://pkgs.alpinelinux.org/package/edge/testing/x86_64/firefox\n- Is a bit more up to date, latest release 57.0.1 (current release is 57.0.2)\nEven if the other dependencies are solved (like x11vnc), looks like the browser releases are way behind the releases from the browser vendor channels. We could be potentially blocked to use new browser versions since the new version package is not there yet for Alpine.\nI would love to have smaller images, of course. But for me it seems that the all the effort plus having browsers not up to date is not really compensating the benefit of having smaller images.\nWhat do you all think?. Right, forgot to mention that as well @ddavison, you are totally right.\nI'll close this issue based on the feedback gotten here and on #224  . @slugics you can now also do it by passing the variables when you start the container, see https://github.com/SeleniumHQ/docker-selenium/blob/master/Hub/Dockerfile#L15\nYou can pass them, for example, as -e GRID_MAX_SESSION=30.. Closing this issue as it should be solved based on the comment above. . Hi @tnguyen14, were you successful?\nI think that thanks to @vbyjsue suggestion we can close this issue, don't you think?. Hi @ShaunDychko,\nThanks for the PR.  And sorry for the super late review.\nThis documentation is only valid for Linux, would you care to document it also for Mac and Windows? I think it will be easier if you add this as a Wiki entry https://github.com/SeleniumHQ/docker-selenium/wiki\nI'll close the PR and hopefully you still have the enthusiasm to create a Wiki entry.. Hi @caioquirino,\nWhen the test completes, do you use driver.quit()?\nOtherwise the browser will not close. . @caioquirino, I am not seeing this message in the latest debug images, could you please check again? . Hi @fzakaria,\nCould you please explain a bit more? What are you trying to achieve? . @bobbotron this seems to be included in the most recent versions.\n\nLooks like the issue can be closed, right?. Hi @iGitScor, how did it go with the seleniumhq images? Did it work?\nIf you didn't use them, I think we can close this issue. . This was solved with #459, which was merged and released, this issue can be closed. . @jmakov, is this still happening with the most recent image version? . I'll close this issue since we didn't get feedback from the OP. Feel free to reopen when more accurate info is provided.. This was solved with #459, which was merged and released, this issue can be closed. . I think this was already accomplished by @ddavisona while ago, right? This issue should be closed then. . @bitliner @GrayedFox is this still an issue for you guys? It would be nice if you can check it again with the latest releases.. Closing as we didn't get any feedback. \nPlease reopen in case the issue is still present.. @dgangwar are you still having this issue after trying @tommywo's suggestion with the latest images? . Closing this issue as we didn't get feedback from the OP.. Closing this issue as since the doubts were solved by the community. If something is missing from the documentation, please send us a PR and become a contributor :). The way to make it work is shown in this comment, nevertheless keep in mind that the --net=host only works currently in Linux machines where docker runs natively.\nThis is not working so far for Mac/Windows, but there is a workaround I explained in this comment.\nClosing this issue.. Closing as this was answered by the community. . This was fixed with #469 \n@ddavison I think this issue can be closed.. I just checked the packages for Chromium and Firefox, e.g.:\nChromium:\n- https://pkgs.alpinelinux.org/package/v3.7/community/x86_64/chromium\n- Latest release is 61.0.3163.100-r0, almost more than one month ago and the current Chrome version is >=63\nFirefox:\n- https://pkgs.alpinelinux.org/package/edge/testing/x86_64/firefox\n- Is a bit more up to date, latest release 57.0.1 (current release is 57.0.2)\nEven if the other dependencies are solved (like x11vnc), looks like the browser releases are way behind the releases from the browser vendor channels. We could be potentially blocked to use new browser versions since the new version package is not there yet for Alpine.\nI would love to have smaller images, of course. But for me it seems that the all the effort plus having browsers not up to date is not really compensating the benefit of having smaller images.\nWhat do you all think?. I'll close this PR based on the feedback gotten here and on #161 \n@andrerom it is not a bad idea to base it in a different image as long as the current features still work and we also save space. It would be cool if someone gives us a hand with that. For now I think we should work on improve the images to support other languages and find out if we really need the debug and normal images (perhaps we can merge them if the performance and CPU/memory usage are very similar).. @sandeep540's command's error says:\ndocker: Error response from daemon: Could not get container for selenium-hub-P\nDid you start the hub?\ndocker run -d -p 4446:4444 -name selenium-hub -P selenium/hub\n. Hi @tarunlalwani,\nI am sorry that you didn't get feedback before for this PR. Anyway, #640 is covering what this PR conceptually tried to achieve.\nClosing this one. . Hi, the downloads should be found in the /home/seluser/Downloads folder, please check #461 for more details.\nClosing this one.. Hi all,\nIn https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.8.1-chlorine we have introduced HUB_HOST and HUB_PORT, in addition the README has been updated on its usage.\nPlease give it a try, any feedback is appreciated. \n. @sqavenky @saifsysim \nThis usually happens when you are behind a proxy or have some network problems.\nCan you please double check your network config and report back?. OK, thanks for reporting back.\n. Closing this issue since we didn't get any feedback from the original poster.. @amitgaikwad85, are you still having this issue? The container should pick the same DNS config as the host VM.. Thanks for reporting back, closing this issue.. I was googling a bit about it, and most of my findings point to what you suggest @jmbowman, even documented in some test suite.\nIf you feel like, you can help us and add the info into the Wiki section of this repo.\nI'll close this issue since it was solved by the previous comment.. @go2guy, if you were using Firefox and this is actually related to #313, the most recent image already has Firefox 53 that allows use insecure certificates. \nCould you please try again to use the additional capability and report back to see how it went? . Closing this since we didn't get feedback and this issue was addressed in #518 . @sixinli @kaplich @Chaoste, the most recent image already has Firefox 53. \nCould you please try again to use the additional capability and report back to see how it went? . Hi @zuernBernhard,\nSorry for replying so late to this issue. \nIn the most recent release, we moved the locale setting part to the base node and we changed it slightly to use env vars, so now it is possible to pass these values and you could build a customised image. Please check https://github.com/SeleniumHQ/docker-selenium/blob/3.11.0-californium/NodeBase/Dockerfile.txt#L14\nThe following link shows how you could build your own image:\nhttps://github.com/SeleniumHQ/docker-selenium/wiki/Building-your-own-images\nIf you are still looking for this change, please give it a try and give us feedback by writing a comment here.\nI'll close this issue since the locale generation is not hardcoded anymore and an env var is used. If any issue is found, please don't doubt to comment or reopen.. @niQo The NodeDebug images are created based on the NodeBase images, therefore those env vars are included by default.. @porsuv which language?. This should be solved in the latest release\nhttps://github.com/SeleniumHQ/docker-selenium/releases/tag/3.11.0-bismuth\nFeel free to reopen in case the issue persists.. This issue was fixed in #459 \n@ddavison this issue can be closed.. @tazle did you move to Selenium 3? The issue was solved for new image versions, and I think it won't get fixed in the image version you were using.\nPerhaps you can try the new image versions?. Ah ok. Anyway, this issue with the spaces was solved in the recent releases by escaping the variables better.\nMaybe you can try it or perhaps close the issue if it is not a problem anymore?. Aside from the logging, it seems that Firefox was having an issue where dumps were being created on every session. Some improvements were done there by the Firefox/GeckoDriver people, so this should not be an issue anymore.\nFor the ones who have commented in this issue? What is the status you see now with the most recent release?. This is actually a good idea @shankarkc, perhaps you can consider to submit a PR with a proposed change? . A proof of concept shows that tini is already included in docker since 1.13 and working properly:\nWithout --init (process ID 1 is the entry point):\n```\ndocker run -d -p 4444:4444 --name selenium-hub selenium/hub:3.12.0-americium\ndocker exec -ti selenium-hub bash\nseluser@b2e764c4f3a4:/$ ps aux | cat\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nseluser      1  0.1  0.0  18036  2932 ?        Ss   09:59   0:00 /bin/bash /opt/bin/entry_point.sh\nseluser     10  6.0  0.8 5154544 69404 ?       Sl   09:59   0:01 java -jar /opt/selenium/selenium-server-standalone.jar -role hub -hubConfig /opt/selenium/config.json\nseluser     35  0.1  0.0  18236  3216 pts/0    Ss   10:00   0:00 bash\nseluser     44  0.0  0.0  34420  2804 pts/0    R+   10:00   0:00 ps aux\nseluser     45  0.0  0.0   4528   664 pts/0    S+   10:00   0:00 cat\n``` \nUsing --init (process ID 1 is /dev/init):\n```\ndocker run -d --init -p 4444:4444 --name selenium-hub selenium/hub:3.12.0-americium\ndocker exec -ti selenium-hub bash\nseluser@bcf8700349bb:/$ ps aux | cat\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nseluser      1  0.0  0.0   1044     4 ?        Ss   09:52   0:00 /dev/init -- /opt/bin/entry_point.sh\nseluser      7  0.0  0.0  18036  2848 ?        S    09:52   0:00 /bin/bash /opt/bin/entry_point.sh\nseluser     11  0.7  0.8 5154544 68828 ?       Sl   09:52   0:02 java -jar /opt/selenium/selenium-server-standalone.jar -role hub -hubConfig /opt/selenium/config.json\nseluser     36  0.0  0.0  18236  3276 pts/0    Ss   09:52   0:00 bash\nseluser     46  0.0  0.0  34420  2804 pts/0    R+   09:57   0:00 ps aux\nseluser     47  0.0  0.0  18236   480 pts/0    R+   09:57   0:00 bash\n```\nConsidering that this issue has been almost completely stale over several months and the tini part is documented by docker and tini itself, I think we don't need to do more here. If more interest comes to this, I think we could basically add the previous example in the README.. Hi @testphreak,\nI was checking both issues, and I was wondering if we need to keep both opened...\nI see there was an answer on https://github.com/SeleniumHQ/selenium/issues/3071 but no more activity happened in none of the issues.\nDo you know if there is anything pending? Perhaps we can close them.\n. @finspin That variable is now configurable. \nCan you check it again please?. This was solved with #459, which was merged and released, this issue can be closed. . Someone sent a PR to https://github.com/elgalu/docker-selenium/pull/153, with the same purpose. \nThe main difference is that the installed packages only need 30MB more. Maybe this is an alternative? . Closing this one since we merged #676. I guess that after @pigiuz comment, we can close this issue, right @philjones88 ?. @philjones88 @pgatplumbee I understand, but I am not sure if supporting this is in the scope of the docker-selenium project. \nTo my understanding, the idea of this project is to provide a general solution that fits lots of people. \nSpecial cases, like hardware acceleration or video recording, need special conditions (special AWS instances, different configs, more packages and processes running). These cases, seem to be not the common case, and that's why there are fork/parallel solutions for those needs (like @pigiuz for HW acceleration or @elgalu for video recording).\nI'm not the one deciding, but that's my opinion. What do you guys thing? @ddavison @elgalu  \n. I will close this issue since there was no more activity in it, and this feature won't be supported in this repo. For anyone interested in hardware acceleration, please check @pigiuz @pgatplumbee solution.. The main reason for the high logging in the node containers (also the standalone ones) is that all the output from xvfb and x11vnc is mixed with the node output. We are in the process of adding supervisor to handle processes differently, and therefore each process will have its own logging. With that this issue will be solved.\n793 should fix this issue, will close after merging and releasing.\n. Fixed on this release https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.14.0-francium\nAny other logging configuration can be tuned through the JAVA_OPTS env var.. @shankarkc could you please try with the most recent release? 3.4.0-Chromium\nLet us know how it went.. Closing this issue as we didn't get feedback from the OP. Please re-open if more information is available.. @FNRG, did you try the recommendation from @chiluap? \n@Janki2, it should be able to connect, did you try? Just check your networking configuration.   . Closing PR since no one replied in the related #2 issue.\n. @mulyoved could you please try with the most recent release? 3.4.0-Chromium\nLet us know how it went.. Closing this issue as we didn't get feedback from the OP. Please re-open if more information is available.. @nekulin can you please show how the graphics card could be put to the container? \nOtherwise, I think we should just close this issue.. No feedback from original poster, closing issue.. @ipai84 can you please try again with the latest release? Many improvements have been done both in Selenium and docker-selenium since you created this issue.. Closing this issue as we didn't get feedback from the OP. Please re-open if more information is available.. How can we reproduce it with the latest images @Sovetnikov?\nCan you please provide a script that we can use? . If I do this: docker run --rm selenium/standalone-chrome:3.4.0-dysprosium sudo -E -i -u seluser env, I get this:\nHOSTNAME=a301e6f6de32\nTERM=unknown\nSHELL=/bin/bash\nUSER=seluser\nSUDO_USER=seluser\nSUDO_UID=1000\nUSERNAME=seluser\nMAIL=/var/mail/seluser\nPATH=/home/seluser/bin:/home/seluser/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\nPWD=/home/seluser\nTZ=UTC\nSHLVL=1\nSUDO_COMMAND=/bin/bash -c env\nHOME=/home/seluser\nLOGNAME=seluser\nSUDO_GID=1000\nDISPLAY=:99.0\n_=/usr/bin/env\nBut if I do this: docker run --rm selenium/standalone-chrome:3.4.0-dysprosium env (without the sudo and so on...), I get this:\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=aec3922e49f2\nDEBIAN_FRONTEND=noninteractive\nDEBCONF_NONINTERACTIVE_SEEN=true\nTZ=UTC\nSCREEN_WIDTH=1360\nSCREEN_HEIGHT=1020\nSCREEN_DEPTH=24\nDISPLAY=:99.0\nNODE_MAX_INSTANCES=1\nNODE_MAX_SESSION=1\nNODE_PORT=5555\nNODE_REGISTER_CYCLE=5000\nNODE_POLLING=5000\nNODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000\nNODE_DOWN_POLLING_LIMIT=2\nNODE_APPLICATION_NAME=\nDBUS_SESSION_BUS_ADDRESS=/dev/null\nHOME=/home/seluser\nThe processes in the container are not running as root anymore, everything is running with seluser, maybe that's why you don't see the value with your command?\n. The DBUS_SESSION_BUS_ADDRESS is set in the base node image under the seluser user. That is why I can just do env in the container and then see it.\nWhen I do sudo -E -i -u seluser env, I don't see it. My question is, why do you need to use that command to check the env vars? I was checking and we are not running any of the commands in the container with sudo.\nWhat I see for all containers is that the DBUS_SESSION_BUS_ADDRESS  is set and present in the seluser. A few people also tested it and we didn't hit the issue again.\nThat is why I was asking for a script (Selenium code running a test), that I could execute and reproduce the issue of getting timeouts when asking for a new session. Perhaps we need to improve something else.\n. I think I found the problem, but please help me check...\nTry the same command you tried in the previous command, but using the tag 3.4.0-dysprosium.\nI think we made a mistake when we put the tag to the most recent images. That is why you might see something different, I created #508. @Sovetnikov, for that, I wrote this comment.\nSo, maybe you can help us to reproduce the issue as I mentioned in the last part of the comment?\n\nThat is why I was asking for a script (Selenium code running a test), that I could execute and reproduce the issue of getting timeouts when asking for a new session. Perhaps we need to improve something else.\n\n. I wrote a gist with some useful info about this. I think @rnemeth1980 was able to use a custom profile at the end.\n@jkowalczyk please check it and let us know, @rnemeth1980 also shared how he did it in the gist.. Hey @ddavison, \nI merged my gist and @rnemeth1980's comment into a wiki page here:\nhttps://github.com/SeleniumHQ/docker-selenium/wiki/How-to-use-a-Firefox-custom-profile\nAfter this, I think this issue could be closed, right?. @sourcerer-mike, the most recent release should have this fixed, can you please try again?. @sourcerer-mike no problem, let us know how it went.. Please feel free to reopen in case the issue is still present.. @avrelio could you tell us which image version were/are you using? I would like to reproduce the error.. Closing this issue as we didn't get feedback from the OP. Please re-open if more information is available.. @MegaUkrainian I think this is not in the highest priority, but I was wondering if you want to submit a PR with the proposed change?. Hi @MikeShysh,\nThis is already possible, I just tried this:\nVERSION=local BUILD_ARGS=\"--build-arg FIREFOX_VERSION=57.0 --build-arg GECKODRIVER_VERSION=0.19.0\" make firefox firefox_debug standalone_firefox \nAnd this message is not seen anymore:\nOne or more build-args [FIREFOX_VERSION GECKODRIVER_VERSION] were not consumed, failing build, this was a docker issue addressed here.\nYou might see the following message though:\nOne or more build-args [FIREFOX_VERSION GECKODRIVER_VERSION] were not consumed, but this is normal since not all the images built will consume the parameters.\nIn the end, you'll have an image with those parameters.\nPlease give it a try and reopen if any problem is found.. This was fixed in #459, this issue can be closed. . @ddavison can you please close this issue?. This should be solved in the latest release\nhttps://github.com/SeleniumHQ/docker-selenium/releases/tag/3.11.0-bismuth\nSomehow fonts were only being installed in the debug images, now they are available for both types of images.\nPlease reopen or comment if the issue persists.. @abhisheksreepal when I check the logs on the right bottom screen, I see:\nCleaning up stale test sessions on the unregistered node http://10.0.0.2:5555\nThis means that, for some reason, the node was unregistered from the hub. When the node notices that, it tries to register itself again, that is why you see again:\nRegistered a node http://10.0.0.2:5555\nBut it is not a duplicated IP address, it is the same node trying to register again and again. Check your setup, there is something making the node to get unregistered. \n. Hey @abhisheksreepal,\nWere you able to check your setup? Did it work?\nLet us know, otherwise we can close this issue. . OK, let us know if how it went. \nClosing the issue for now then, please feel free to reopen if you find any more info.. As much as I want to promote Zalenium (since we developed it with @elgalu), I think it is not the right tool for your scenario since we run each test in a new container created on demand. \nI guess this would slow down your current execution times. \nNevertheless, perhaps you can try it in a different scenario and give us some feedback if you want :). @loganrenz true, seems that there was an issue with the version handling in that tag. \nNevertheless, is this a big issue for you, or did you already move to Selenium 3? To be honest, I think that efforts should be put in newer versions instead of this little mistake :). Closing it since it was just a little mistake that does not affect functionality at the end.. Thanks for your comments @pascalheraud @daald!\nWe didn't have so much time to check this so your help is super appreciated.\nSeems that it could be the solution for this issue then, I'll keep the issue open for a few days in case more feedback is provided. If everything looks fine, I'll close it. . Closing this one, feel free to reopen in case problems still happen.. @VarunEnishetty Is this still an issue? Have you tried with the latest 3.3.1 images?\nCould you please provide some text formatted logs instead of screenshots?. Closing the issue since we never got feedback from the OP.. This DBUS_SESSION_BUS_ADDRESS=/dev/null option was added to the 3.3.1-cesium release, check Chrome and Firefox.\nIt should work now @thyagab @tate-e , perhaps you can try again with this latest release?. @thyagab\nOh really? Wow.\nIs it possible for you to provide:\n* How you start the docker containers? E.g. docker-compose or docker commands.\nEdited my comment, it should not be a Selenium issue but more a docker one, I am curious to check it though\n. @thyagab I tried to indent your docker-compose file and this is what I got:\nversion: '2'\nservices:\n  chrome-dev:\n    image: selenium/node-chrome:3.3.1-cesium\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-dev\n      HUB_PORT_4444_TCP_PORT: '4444'\n      JAVA_OPTS: -Xmx4G\n      LOGSPOUT: ignore\n      shm_size: 512MB\n      DBUS_SESSION_BUS_ADDRESS: /dev/null\n    volumes:\n      - /dev/shm:/dev/shm\n    labels:\n      io.rancher.container.start_once: 'true'\n  chrome-qa:\n    privileged: true\n    image: selenium/node-chrome-debug:3.3.1-cesium\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-qa\n      HUB_PORT_4444_TCP_PORT: '4444'\n      stdin_open: true\n    volumes:\n      - /dev/shm:/dev/shm\n    tty: true\n    links:\n      - selenium-qa:selenium-qa\n      - selenium-qa:selenium-qa\n    ports:\n      - XXXX:5900/tcp\n    labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.start_once: 'true'\n  selenium-qa:\n    image: selenium/hub:3.3.1-cesium\n    environment:\n      GRID_BROWSER_TIMEOUT: '180000'\n      GRID_MAX_SESSION: '6'\n      GRID_TIMEOUT: '180000'\n    volumes:\n      - /dev/shm:/dev/shm\n    labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.start_once: 'true'      \n  selenium-dev:\n    image: selenium/hub:3.3.1-cesium\n    environment:\n      GRID_BROWSER_TIMEOUT: '180000'\n      GRID_MAX_SESSION: '10'\n      LOGSPOUT: ignore\n      GRID_TIMEOUT: '180000'\n    labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.start_once: 'true'\nI replaced - XXXX:5900/tcp with - 5900:5900/tcp locally to start it and I got:\nERROR: The Compose file './docker-compose.yml' is invalid because:\nservices.chrome-qa.links value ['selenium-qa:selenium-qa', 'selenium-qa:selenium-qa'] has non-unique elements\nservices.chrome-qa.environment.stdin_open contains true, which is an invalid type, it should be a string, number, or a null\nI commented those lines and then I could start it, but it is still confusing because you start two grids, but the none of the 4444 get mapped to anything on the localhost, so how do you run the tests? Maybe you can try first with just one grid and see how it goes?\nAnyway, without checking further, I would increase shm_size: 512MB to shm_size: 1024MB, we start the Chrome containers like that (sometimes with 2GB), and then we don't get the error anymore. I think it is related to how \"heavy\" the web app is, therefore Chrome needs more resources to render it properly.. This issue might have the same root cause as #465, DBUS_SESSION_BUS_ADDRESS related.. @thyagab can you please try with the latest release? 3.4.0-chromium\nThe issue with DBUS_SESSION_BUS_ADDRESS was fixed.. Yeah, the /dev/shm is needed for both Chrome and Firefox containers to prevent that.\nI'll close the issue since in several others it was reported that the issue was solved. Nevertheless, please re-open if it is still not working for you (with a way to reproduce the issue as well).. @pavelpp I have seen this error before in some of my tests, where some quote is missing and then the whole thing breaks apart.\nBut this is a Selenium issue (the stack-trace tells you that), not a docker-selenium issue, I would close this issue here and open one over there. Hi @pavelpp, were you successful?  . This is now a duplicate of #559, please follow up in that issue. \nI'll close this one.. Hi all,\nThis issue should not be happening anymore with the latest releases, right? Does anyone still have the issue?\n@amirplanet, check here a workaround for the shm thing in k8s, you would need to mount the volume to achieve that.  . Hi all,\nWe didn't get more feedback on this, so I'll close the issue. Seems that things are more stable in the recent releases.\nIf someone still has this same issue with the latest release, please comment with enough info so we can reproduce it and find a way to solve it. Thanks!. @saifsysim I think this issue is the same one as #423, hopefully your setup should work when #459 gets merged (or you could just check the commits and adapt them to your image). \n. This is fixed by #459, this issue can be closed. . @ddavison can you please close this issue?. @manoj9788, since you created this tutorial for docker-selenium in k8s... Did you experience this issue? . @IvanVasilko \nI was trying the images in our plain Vanilla Kubernetes and I didn't see this issue, could you please share your manifests? . I'll close this issue due to inactivity, if the problem still persists and more info is provided please feel free to reopen it.. @gael-wogenstahl I tried to reproduce the issue based on your commands and I was not able to see the error.\nMaybe the images were updated for 3.1.0 after you posted this? Could you try again with 3.3.1? . I'll close this issue since we didn't get feedback from the OP. Feel free to reopen when more accurate info is provided.. The release is done in Travis now through the Makefile present in the root folder, the build in the docker hub is obsolete now.\n@ddavison I think we just need to deactivate the option in the docker hub, right?\nAfter that, I think, this issue and #419 can be closed.. I just reviewed the configuration in the docker hub and there were still some repos linked between them, which was triggering the builds over there. I removed them and now the builds are done only in Travis.. @paul-nelson-baker I just tried your docker-compose file with the following info:\n\ndocker version info:\n```\nClient:\n Version:      17.03.1-ce\n API version:  1.27\n Go version:   go1.7.5\n Git commit:   c6d412e\n Built:        Tue Mar 28 00:40:02 2017\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      17.03.1-ce\n API version:  1.27 (minimum version 1.12)\n Go version:   go1.7.5\n Git commit:   c6d412e\n Built:        Fri Mar 24 00:00:50 2017\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\ndocker-selenium images (these come from the latest release 3.3.1-Cesium):\n\nREPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE\nselenium/node-chrome-debug   latest              08799a1d9bf4        4 days ago          858 MB\nselenium/hub                 latest              8b117008694b        4 days ago          312 MB \n\nOS Version:\n\nmacOS Sierra 10.12.4 (16E195)\nand it worked right away for me. Could you please pull the latest images and check again? It should work with your current docker version.. This was fixed by #459, it can be closed. . @ddavison, can you please close this one? . Hi all,\nIs this still an issue? I mean, are there many scenarios where people are testing with a Firefox version lower than 52? \n. Hi all,\nWe didn't get more feedback on this, so I'll close the issue. If something related pops up, please comment so we can check it and reopen (please provide enough information).. I'll close this PR since there was no reaction after the 2nd comment. Even though this could be helpful, this would add more packages to an already big image, and not many users would use it.. Hi all,\nI agree with @BeyondEvil's last comment, but the main question for me is if this was still an issue... \nI am not sure how many people are still testing with a Firefox version lower than 52. I am sure there are, but I guess this is not the common case. \nWhat do you think?\n. I'll close this PR since we didn't get more feedback. We can take a look at it in case it makes sense to treat this case in the images.. @ersuniljoshi but this is needed, even if the base image has an entry_point.sh, those Dockerfiles overwrite it because the debug one has VNC running.\nThis change does not apply. I'll close this PR.. Just summited a new PR #459 to fix this again, since @METAJIJI's change sadly got overwritten. I just added the same change for the Firefox and Standalone debug versions since it was missing there.\n@finspin, you could add the options like this - SE_OPTS=-host XX.YY.XX.YY -port 5555 (without quotations), and it should work. . I see the issue with the 3.3.0 images, but with the 3.3.1-Cesium images it works for me.\nI remember there was an issue with the Selenium 3.3.0 release, one or more status URLs were broken and that was one of the reasons why they needed to release a quick hot-fix. I am assuming that if you check now with the 3.3.1 image it should work as usual.. @taraa62, \nWhich image exactly? What do you mean by Appium? Is there a docker-selenium image for Appium?. @Zechtitus, that is what I was thinking, better always make sure to have the latest by doing a docker pull again.\nLooks like this one can be closed, right? . I think this is not a docker-selenium issue, Selenium version 3.3.0 has the status endpoint broken.\nSee https://github.com/SeleniumHQ/selenium/issues/3618\nBetter move to 3.3.1. I think there won't be need to remove them, or even create a new image, you just need to pass some specific capabilities to Chrome, I think @elgalu showed them to me yesterday, can you share them?. @graingert, is it possible already to run Chrome headless without xvfb?  . @graingert I was asking because if this https://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-296379624\nDo you have an example of an image running Chrome headless without xvfb?. Hi, \nAfter reading all the thread again it looks like this should work already, right? Has someone achieved it and wants to send a PR?\n. Does anyone know if this is the current status for headless?\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=775911\nI checked around and I didn't find any more updates. If this stays like that, it wouldn't make so much sense to have headless as default. . Hi all, \nWe just made a change in the images and introduces the env var START_XVFB, you can set it to false(or anything different to true when starting the container, and then Xvfb won't be started. \ndocker network create grid\ndocker run -d -p 4444:4444 --net grid --name selenium-hub selenium/hub\ndocker run -d --net grid -e HUB_HOST=selenium-hub -e START_XVFB=false -v /dev/shm:/dev/shm selenium/node-chrome\ndocker run -d --net grid -e HUB_HOST=selenium-hub -e START_XVFB=false -v /dev/shm:/dev/shm selenium/node-firefox\nIf you do that, and check the running processes in the container, you'll see:\nseluser@6c5028fb1dad:~$ ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nseluser      1  0.2  0.1  58660 18484 ?        Ss   20:30   0:00 /usr/bin/python /usr/bin/supervisord --configuration /etc/supervisord.conf\nseluser     13  0.0  0.0  20988  3364 ?        S    20:30   0:00 /bin/bash /opt/bin/start-selenium-node.sh\nseluser     26  5.1  1.2 7244440 129376 ?      Sl   20:30   0:03 java -jar /opt/selenium/selenium-server-standalone.jar -role node -hub http://selenium-hub:4444/grid/register -nodeConfig /opt/selenium/config.json\nseluser     55  0.0  0.0  21188  3792 pts/0    Ss   20:31   0:00 bash\nseluser    774  0.0  0.0  37360  3244 pts/0    R+   20:32   0:00 ps aux\nSo Xvfb won't run and you'll need to run tests with the headless flag set to true, e.g. in Java:\n@Test()\n    public void firefoxTest() throws Exception {\n        FirefoxOptions firefoxOptions = new FirefoxOptions();\n        firefoxOptions.setHeadless(true);\n        WebDriver driver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), firefoxOptions);\n        driver.get(\"http://the-internet.herokuapp.com\");\n        Assert.assertEquals(driver.getTitle(), \"The Internet\");\n        driver.quit();\n    }\nand for Chrome:\n@Test()\n    public void chromeProfile() throws Exception {\n        ChromeOptions chromeOptions = new ChromeOptions();\n        chromeOptions.setHeadless(true);\n        WebDriver driver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), chromeOptions);\n        driver.get(\"http://the-internet.herokuapp.com\");\n        Assert.assertEquals(driver.getTitle(), \"The Internet\");\n        driver.quit();\n    }\nTherefore you can now run the images without Xvfb. I will comment again when the images with this change are released and pushed to Docker Hub.. Released https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.14.0-francium. @lasotaartur, perhaps check this issue that resolved what you reported: \nhttps://github.com/elgalu/docker-selenium/issues/20\nTry to set in the environment something like --shm-size=1g, as @elgalu says. @lasotaartur do you have any feedback about our comments and using the additional options? \nPerhaps with the recent fixes it is working now for you.. Sounds good, so you are now sharing the shm memory with the first container you start? (Asking about the docker in docker thing, https://github.com/SeleniumHQ/docker-selenium/issues/431#issuecomment-290932674). \nIf things seem to work now, perhaps you could close the issue. . Can you please post, step by step, how you start the hub and then each one of the nodes?\nIt is not so easy to understand what you wrote without all the commands.. Ah OK, that was were I got lost, didn't know how the hub was started :) \nI will check it and see if it works for me.. The first thing I saw is that you should try to use a version in the hub equal or bigger than the nodes, you were starting the hub with version 3.0.1 and using nodes with version 3.2.0. This is not actually the problem, but it is a good practice to have a bigger or equal version at the hub.\nSo, I started the hub with this command:\nsh\njava -jar selenium-server-standalone-3.3.1.jar -role hub -maxSession 20 \nMy machine currently has the IP 192.168.2.103, so the hub is at http://192.168.2.103:4444/grid/console.\nWhen I start the node with:\nsh\ndocker run -d --name node101 -p 5595:5555 -e HUB_PORT_4444_TCP_ADDR=192.168.2.103 -e HUB_PORT_4444_TCP_PORT=4444 -e SE_OPTS=\"-host 192.168.2.103 -port 5595\" selenium/node-chrome:3.3.1\nIt won't work, because the node is running inside the container with the port 5595, but the mapped one internally is 5555. This means that the hub will try to reach http://192.168.2.103:5595, and 5595 is mapped to 5555 inside the container, but there is nothing running on 5555 inside the container.\nSo, just start the node mapping the ports 5595:5595, no need to use the NODE_PORT parameter.\nsh\ndocker run -d --name node101 -p 5595:5595 -e HUB_PORT_4444_TCP_ADDR=192.168.2.103 -e HUB_PORT_4444_TCP_PORT=4444 -e SE_OPTS=\"-host 192.168.2.103 -port 5595\" selenium/node-chrome:3.3.1\nI think it is not possible to use a unique port inside the container and different ports outside it because the node will register itself with the port that is using inside the container. Therefore the hub will try to reach the node through the port used for the registration, but it won't reach it since the mapped one is different.\n. @tparikka when you pass -port 5595 in the SE_OPTS you are telling the Selenium node to use that port to listen to incoming requests. But the mapped port internally is 5555, therefore it will never be reached.\nThis part:\n\nto direct the Hub to connect back to a specific port exposed by Docker which would then be forwarded back to 5555 internally on the node container\n\nis basically port forwarding, and to my knowledge, this is usually done with a proxy like nginx. In my opinion, setting up something like that in docker-selenium is out of the scope. . Since I have seen a some issues that talk about the same topic (REMOTE_HOST, reporting a different IP/Port in different network topologies, etc...), here is what I have found:\n@tparikka, so what you wanted to achieve is actually possible, and no port forwarding is needed. The REMOTE_HOST parameter support was removed from the nodeConfig.json, but you could still use it in the parameters when starting a node. Summarising, you can:\nStart hub:\ndocker run -p 4444:4444 --name selenium-hub selenium/hub:3.7.1-beryllium \nStart node:\ndocker run --name node101 -p 5595:5555 \\\n    -e HUB_PORT_4444_TCP_ADDR=192.168.1.7 \\\n    -e HUB_PORT_4444_TCP_PORT=4444 \\\n    -e SE_OPTS=\"-remoteHost http://192.168.1.7:5595\" \\\n    selenium/node-chrome:3.7.1-beryllium\nSo you have inside the container port 5555, externally 5595, and the hub will reach node like that.. As mentioned in https://github.com/Codeception/Codeception/issues/4104#issuecomment-291508538, it is a problem related to the Firefox driver, not related to docker-selenium.\n@bscheshirwork can you please close this issue?. @vgoklani \nThat is the correct output for that url.\nIf you want to see the grid console, go to http://127.0.0.1:4444/grid/console\n. @NiGhTTraX,\nI used a slightly modified version of your docker-compose file, see here, to check this issue.\nI also see in the log when I enable the debug option this:\nselenium_1            | 15:00:04.951 DEBUG - Connection request: [route: {}->http://172.18.0.3:5555][total kept alive: 1; route allocated: 1 of 2000; total allocated: 2 of 2000]\nselenium_1            | 15:00:04.952 DEBUG - Connection leased: [id: 1][route: {}->http://172.18.0.3:5555][total kept alive: 0; route allocated: 1 of 2000; total allocated: 2 of 2000]\nselenium_1            | 15:00:04.953 DEBUG - Stale connection check\nselenium_1            | 15:00:04.963 DEBUG - http-outgoing-1 << \"[read] I/O error: Read timed out\"\nselenium_1            | 15:00:04.963 DEBUG - http-outgoing-1: set socket timeout to 0\nselenium_1            | 15:00:04.964 DEBUG - Executing request POST /wd/hub/session/a4ea0f4d-4e2e-46b3-86d1-1ef8cf98f637/url HTTP/1.1\nselenium_1            | 15:00:04.964 DEBUG - Target auth state: UNCHALLENGED\nselenium_1            | 15:00:04.964 DEBUG - Proxy auth state: UNCHALLENGED\nselenium_1            | 15:00:04.965 DEBUG - http-outgoing-1 >> POST /wd/hub/session/a4ea0f4d-4e2e-46b3-86d1-1ef8cf98f637/url HTTP/1.1\nselenium_1            | 15:00:04.965 DEBUG - http-outgoing-1 >> Connection: keep-alive\nSee this Stale connection check part, I think this is an internal handling from the HttpClient provided by th Apache libraries and used in Selenium, I think here. \nI googled and this seems to be normal. What I imagine is that in a newer version of the HttpClient, those \"read time out\" messages were included and that is why you see them now in the debug log.\nSo I think that this is not a docker-selenium, and neither a Selenium issue, it is just the handling of connection pooling by the HttpClient in the Apache libraries.\nI would suggest to close this issue since it is not related to docker-selenium.\n. @NiGhTTraX \nI see, so it is affecting your tests then? \nTo be honest, this sounds more like a Selenium issue than a docker-selenium one. I would post it over there and they could give us more insights, I would be interested as well if this is affecting your tests.. Hi @NiGhTTraX,\nJust to follow up on this, what do you mean by \"my Selenium init times out\". Can you please explain?\n. I was trying to find ways to reproduce as well and I was not successful. \nI am not sure if the situation improved with the latest release for you @NiGhTTraX, did you find a way to reproduce it? . Cool, let us know if you find something again. Thanks for the quick reply.. I'll close this issue since we didn't get feedback from the OP. Feel free to reopen when more accurate info is provided.. @peterebden that is a bug in Selenium 3.3.0, which was fixed in Selenium 3.3.1.. @testphreak you could try using the debug image and see through VNC what happens when the browser hangs. Maybe it is not necessarily something related to the docker-selenium image but more to a newer Selenium, Chrome or Chromedriver version?. @testphreak \nI'll check it during the weekend, would it be possible for you to provide a test case to reproduce it?. Hi @derinbay,\nI saw your comment. I would like to try to reproduce the error you get with the latest release, can you please help me with some test code you are using to get the error? Also the docker commands would be helpful. . How cool @derinbay, I'm glad it is working \ud83d\udc4d \nCan you please close the issue? . True, when the network is the host this wouldn't work. Maybe you would like to submit a PR @apakhomov ?. After leaving this open for a while, no one showed interest or the need for this feature. Therefore I'll close it.\nIn case someone wants to contribute, feel free to comment and we'll reopen it to discuss it. . I've built the images several times and I have not seen that error... \ud83e\udd14 \nCan you please give us some info about your OS and the commands you used to build the image (and which image)? Perhaps I can reproduce it.\n. Hi @tnguyen14,\nI left a comment for you in #480 \nPlease let us know if you want to keep the PR open.\n. @tnguyen14, I'll close this issue and we'll continue in #480 when you are ready.. @ddavison, maybe we can enable this setting in the repo to avoid having these type of issues with PRs? (Getting stuff overwritten).\n\n . @peterstory, \nAs this is not a docker-selenium issue, could you please close it?. Hi @kariasbolster,\nHow are you starting the containers in the EC2 instance?  Could you share the exact command you are using?. I was able to reproduce it with the Chrome images from the 3.4.0-bismuth release. Summarising, under this use case (open and closing Chrome many times, at least 50):\n\nnode-chrome -> Does not work\nnode-chrome-debug -> Works\nstandalone-chrome -> Does not work\nstandalone-chrome-debug -> Does not work\n\nI am building locally the Dockerfiles now with some changes to see if it works. I'll keep you updated.. @testphreak Firefox images seem to work fine. By fine I mean that the test does not hang, it either fails or passes (I am just clarifying it because I am not 100% sure if the latest version of Geckodriver - 0.16 and Firefox 53 are working well, so nothing related to the DBUS_SESSION_BUS_ADDRESS).. @testphreak, I just created a PR for this. Please check it, any help with checking it with your local tests would be great.. It also works for me, but I can imagine that we are running different types of tests to check this. @testphreak it would be cool if you can provide some code snippet to reproduce it.. Good point @ddavison,\nI'll remove the package and test it first, to see if there are any differences. I'll let you know soon.. @ddavison I removed the dbus package and executed the tests in the repo and two times this test agains the locally generated containers. So it looks like it works also without the package.\nHere are the commands I used to start the containers:\n Generated the local images with:\nVERSION=\"local\" make build\n docker-compose (for normal and debug, remove the comments where it applies)\nversion: '2'\nservices:\n  selenium-dev:\n    image: selenium/hub:3.4.0-local\n    ports:\n      - 4444:4444/tcp\n    environment:\n      GRID_BROWSER_TIMEOUT: '180000'\n      GRID_MAX_SESSION: '10'\n      GRID_TIMEOUT: '180000'\n  chrome-dev:\n    image: selenium/node-chrome:3.4.0-local\n    #image: selenium/node-chrome-debug:3.4.0-local\n    #ports:\n    #  - 5900:5900/tcp\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-dev\n      HUB_PORT_4444_TCP_PORT: '4444'\n      JAVA_OPTS: -Xmx4G\n      shm_size: 1024MB\n    volumes:\n      - /dev/shm:/dev/shm\n* Standalone images\ndocker run --rm -p 4444:4444 -v /dev/shm:/dev/shm --shm-size=1g selenium/standalone-chrome:3.4.0-local\ndocker run --rm -p 4444:4444 -p 5900:5900 -v /dev/shm:/dev/shm --shm-size=1g selenium/standalone-chrome-debug:3.4.0-local\nAny help testing this is appreciated.. @testphreak the dbus package is installed since 3.3.1-cesium, and it is still there for the latest release (3.4.0-bismuth). It attempted to solve the dbus issues, but as we know, they are still there. \nWhat I did in the last commit was to remove the package and see if it was enough to set DBUS_SESSION_BUS_ADDRESS=/dev/null. It seems it is enough, but I would be cool that someone else tests that as well.\nI was talking about this with @elgalu, and in my opinion we could try first to just set the value as shown above, since it should solve the issue. \nIf after doing that, some people still report the issue (with a reproducible test case), we could install dbus and use it like @elgalu did in his image, see this comment. This would create an extra process in the container though. . Cool @testphreak, thanks for the feedback! . Hi @smccarthy,\nI am sorry that time passed and we didn't give you feedback.\nIn general, it is a good idea to have the nightly FF as an option. Nevertheless it is not optimal to add one image more to maintain. \nDo you think that it is possible to make this work with the current Dockerfile for FF? Perhaps to have it working in the same way as the one for Chrome, where one can just specify the version as a parameter (such as google-chrome-beta) and then the image gets built. \nLet me know your thoughts,. Hi @radams-sgy, I checked it, and if everything goes well, #477 should solve it. . #477 was already merged and released, therefore I'll close this one.. Implemented via #579 . @tnguyen14 \nGoogling for a while, I realised that the proxy attributes are not the same for Chrome and Firefox (at least now). Check https://github.com/mozilla/geckodriver#proxy-object for the correct ones. \nFor example, in Chrome you pass httpProxy: 'proxy.corp.com:8080', but it seems that in Firefox you need to pass: {httpProxy: \"proxy.corp.com\", httpProxyPort: 8080}.\n. @tnguyen14 my suggestion was more to check how Geckodriver expects the proxy info in the capabilities, did yo check that?. @tnguyen14 exactly, so I think you need to reflect that in your code. Basically Firefox profiles have different properties. It is not an issue of docker-selenium I think.. Perhaps you can post that problem here and reference this issue? https://github.com/mozilla/geckodriver \nSince it seems clearly related to the Firefox options.. Not really, I have never used Firefox profiles in that way. I just noticed that the settings are different from Chrome profiles.\nMaybe it is better to ask them directly\u2753 . @tnguyen14 that should get fixed when #477 gets solved.\nAside from that, it seems that the noProxy thing is being handled in the issue you raised at the w3c project. \nSince this is not a docker-selenium issue, could you please close this issue?\nThanks!. @ddavison is working on having better tests so #477 can be merged together. That is a very important task and good tests take time sometimes, so we just need to have some patience :) . I'll close this issue since the latest Geckodriver is in the most recent release and we didn't get feedback from the OP.. OK, then I'll reopen it and double check.. I just re-read the whole thread again, and if I understand correctly:\n- The specification was changed so 'noProxy' was supported via https://github.com/w3c/webdriver/issues/913\n- Geckodriver and Marionette implemented it via https://github.com/mozilla/geckodriver/issues/725\n- @tnguyen14 tested it and found that the Java bindings used handle it as a string but the spec details it as a list, which is being handled in https://github.com/SeleniumHQ/selenium/issues/5004\nFrom my point of view, seems that we can close this issue here and just follow up on the last issue I linked above.\nWhat do you think @tnguyen14?\nPS: @tnguyen14 good job by going all the way and triggering the change in the spec! . @tnguyen14 I am confused, is the whole desiredCapabilities not working with Firefox? Or is it just the proxy part of it? Isn't that being tracked on SeleniumHQ/selenium#5004? . That looks like Nightwatch cannot connect to the url where Selenium Grid is.\nBut we are drifting away from the original issue...\nTo get back to it, I created this small test. It shows that setting a proxy works, but there is still the issue of noProxy (which is being handled here SeleniumHQ/selenium#5004).\nIf you want to run the test, checkout the repo, go into the folder and run: \ndocker-compose -f docker-compose.yaml up --abort-on-container-exit --build\nFirst go to https://api.ipify.org, and check your IP, then go into the container via VNC and check that the IP shown is different from yours. You can try it with a different proxy if you want (I got that one from https://free-proxy-list.net/). \nThis shows that setting the proxy options works, except noProxy (again, which is being handled here SeleniumHQ/selenium#5004). Therefore, I think this is not a docker-selenium issue anymore.\n. @tnguyen14 no, it does not work (in Java at least), that is what I meant by saying that the noProxy issue is being handled in SeleniumHQ/selenium#5004. Please subscribe to that issue for updates.. I think it has to do with how the containers are being linked.\nAre you using a docker-compose file?  How do you start them?. Hi @tnguyen14,\nI have time now to check this, could you please update your fork and submit the changes again? . Well, this PR was open because the build didn't work in a given environment, but it has been abandoned. I think I'll close it and perhaps it can be submitted again in the future, if it makes sense.. Yeah, you would need a proxy on top of that to do some port forwarding...\n@desertaxle, if it is possible for you, you could set both ports to be the same ones (exposed and internally mapped one).\n@McSnowflake, is there a way for you to know the port that the orchestration tool assigned before starting the container? Perhaps an env var that you can pass?  . Hi, I've spent some time checking this, and here is what I found:\nThe images deprecated the use of REMOTE_HOST because it was used in the JSON config for the node, and that value is not supported in the JSON node config anymore, but it is supported as a flag in the command line.\nBottom line is that you can still use -remoteHost, but via SE_OPTS. Here is an example, where I start a hub normally and a node that uses the port 5555 internally but maps to the external 5595. The -remoteHost passes the url the hub will use to reach the node, and it just works the way it worked before when it was an env var.\nStart hub:\ndocker run -p 4444:4444 --name selenium-hub selenium/hub:3.7.1-beryllium \nStart node:\ndocker run --name node101 -p 5595:5555 \\\n    -e HUB_PORT_4444_TCP_ADDR=192.168.1.7 \\\n    -e HUB_PORT_4444_TCP_PORT=4444 \\\n    -e SE_OPTS=\"-remoteHost http://192.168.1.7:5595\" \\\n    selenium/node-chrome:3.7.1-beryllium\nPlease give it a try and report back if the problem was solved, so we can close this issue. \n. Hi @McSnowflake,\nCan you show me the exact command you used? You can change the IP you used of course :). Oh, I thought you were using the docker containers. Anyway, if it works for you now with the latest release I am happy :)\nI am not sure about the recent history of the parameter since I don't use it, I just saw that it is working after checking the latest version and reading what the params do.\n@desertaxle @discobean @aairey @tparikka \nPlease try again based on the latest comments and let us know if it worked for you. If you find any problems still, please feel free to reopen this issue.. Do you know if there is a docker image already with it? I didn't find anything.. I was checking this again, and if I understood correctly, servo is a browser engine and not really a browser that people use. \nConsidering that Selenium is going in the direction of supporting only real browsers (e.g. PhantomJS  is in a deprecated status since Selenium version 3.6.0), it would not make sense to include this one.\nTherefore, I'll close this issue. But feel free to reopen if I am mistaken, or if there are stronger arguments from the community for this.. Hi @eino-makitalo,\nIn the template you mention, I don't see that the containers are started with the host's shared memory mounted (-v /dev/shm:/dev/shm, this is now needed for Firefox as well), see here \nAre you trying that when you start the docker-selenium?. Closing as we didn't get feedback from the OP.. Hi @baozhida,\nI am guessing that you want to access the grid from other host, and you are using docker with virtual box in Windows 7. If that is correct, this should help you https://stackoverflow.com/questions/33814696/how-to-connect-to-a-docker-container-from-outside-the-host-same-network-windo\nElse, I would suggest you to research that, it mostly sounds like a docker configuration that needs to be adjusted on your host. Not really a docker-selenium issue.\n. Closing this issue since we didn't get feedback from the OP.. Hi @khalistan,\nCan you please post the docker run instruction to see how you start docker-selenium? Also, which image are you using?\n. @khalistan thanks for the info.\nBut it seems that you are using a complete different image, from your docker run:\ndocker run -d --name jenkins-slave ...\nAlso from your docker-file:\nFROM jenkinsci/jenkins\nI think you are not using this project, am I right? Perhaps you need to post the issue in the correct project.. I would recommend to read first the README of the project and also check the wiki to get started.\nIn general, the images provided should be ready for you to use.\nAfter going through that, if you still have problems, please create an issue with the specific problem and a way to reproduce it.. @LusciousPear @mfoksinski did you try the workaround suggested in the previous comment?\nWe haven't heard any feedback in a while. Therefore, I will close this issue, but feel free to reopen it in case the issue is still present and more feedback is provided. . @dmitrygusev, the error you mention:\n/opt/bin/entry_point.sh: line 26: : command not found\nshould be gone when #477 gets merged.  . @dmitrygusev, #477 was merged and released some days ago. Could you please try again?. Closing as we didn't get feedback. Feel free to reopen if the issue is still present.. Hi @gokulganthtm,\nI googled the error and the first two results are issues created in the docker-selenium and selenium projects respectively, did you check the solutions provided there?\nhttps://github.com/seleniumhq/selenium/issues/1158\nhttps://github.com/SeleniumHQ/docker-selenium/issues/198\nIf the solutions mentioned there don't work, please provide more information about your environment, exact image versions, binding versions and a piece of code to reproduce the issue. Otherwise we need to start wondering and guessing many things.. Hi @arvinder06,\nAre you running docker natively on Windows? If so, I think you can go directly to localhost instead of 192.168.99.100.\nIf you still have a problem, please provide more information:\n- Exact image version you are using.\n- Commands used to start the docker images\n . @arvinder06 Which Windows version are you using?. If you are using docker toolbox then I guess that localhost doesn't work.\nTry with your docker-machine ip instead of localhost.\nhttps://docs.docker.com/machine/reference/ip/. > I have installed Docker toolbox for Windows from docker's official site. I am running this in office (behind corporate proxy).\n\nAlso, using VNC, I can see the chrome browser is opening in Node but google.com or any other website is not opening. Therefore, instead of successful setup, I believe there is still a gap somewhere which I need to fix.\n\nI couldn't get a Windows machine to try your setup. Nevertheless, after reading your comments above, it looks like an issue with your network configuration. Perhaps you can ask directly to the network guys in your company?\nYou can also try to the basic docker container with nginx tutorial https://docs.docker.com/kitematic/nginx-web-server/\nIf you can connect to the app being built there, you should follow the same idea to connect to the docker-selenium containers. \nAlso, try to use the default ports (4444 instead of 5000).\n. It really looks like your docker setup is not correct. It is hard for us to help when docker is not working properly, sorry.\nI would suggest that you research on your own a bit those errors and fix your docker environment, for example the first google result for that message is https://github.com/docker/kitematic/issues/1633\nWhen you are able to run docker properly, try docker-selenium again please. If you have still problems you should open another issue with the specific docker-selenium problem.\nFor now, this is not really a docker-selenium issue. I suggest it to be closed.\n. Hi @pmryhlotskyi,\nCan you provide more information please?\n\nExact image version you are using.\nCommands used to start the docker images\nA piece of code to help us reproduce the issue. Hi @pmryhlotskyi,\n\nSorry for the late reply.\nThanks for providing the link to the bug description, I read the whole thread, and if I understood correctly, this happens when some pages use flash and then Firefox crashes. \nAt the end, what I got from that bug report is that this is related entirely to Firefox, right? I don't know what should be done in docker-selenium to fix the situation, other than wait until the Firefox guys hopefully fix it.\nWhat do you think @pmryhlotskyi? . I checked the thread again, and it seems that it should be solved.\nI'll close this issue since it is related to Firefox and not docker-selenium. \nPlease feel free to reopen in case you have new findings.. Hi, I am going to close this issue since PhantomJS will not be supported anymore in Selenium and docker-selenium (starting from 3.8), and we won't fix previous releases. See #583 \nHopefully you are already using Chrome or Firefox headless to replace PhantomJS :). @ycwdaaaa,\nA few questions:\n What is this chrome_test image you are using? Did you build it yourself? Maybe you can try with the official images?\n You are using the selenium/hub:3.2.0 image, can you try to upgrade? Many improvements to the images have been done since that release.\n* How do you limit each node to use 4 browsers? Besides I see 4 Chrome nodes, but you mention slowness when running 20 browsers, can you please elaborate more so we can help?\n. Closing as we didn't get feedback from the OP.. I was able to reproduce it both using the standalone container and also using the Selenium jar file directly, and therefore it is not a docker-selenium issue. \nThat's why I created an issue in the Selenium repo: https://github.com/SeleniumHQ/selenium/issues/4221\n@phtrivier, please follow that issue, I will close this one. . I just created #507. I'll close the issue when it gets merged.. Just merged #507, closing this issue then.. Thanks @tparikka for checking it! \nClosing it as it is not a docker-selenium issue.. Hi @tnguyen14,\nTo run multiple tests in parallel, if you use standalone containers you would run into the issue of figuring out the url you need to pass establish the initial connection since each container would have a different IP. Besides that, I don't understand why you mention that it could bring problems over time.\nThe second approach is more suitable to run tests in parallel, the hub would handle the requests and distribute them over the nodes in the grid. The mounting of /dev/shm would need to be done on each node container.\nTo run it in a CI environment, try both approaches, and check what works better for you. I've met people using both scenarios and it works for them. \nSince this is not really an issue but more a question, I'd recommend you to post it on the Selenium User Group or join the Selenium Slack Channel. You will get faster feedback for questions over there.. I'll close this issue since it was just a question which was answered.. Closes #503 . Also happening on:\nhttps://hub.docker.com/r/selenium/node-phantomjs/tags/\nhttps://hub.docker.com/r/selenium/base/tags/\nhttps://hub.docker.com/r/selenium/standalone-firefox-debug/tags/\n. Yeah, I checked and the tag is well placed in all the images. Thanks!. Closing as the OP reported the issue solved.. Sorry to jump in so late. I ran into the same issue recently, and I am asking about it here https://github.com/moby/moby/issues/22753\nI am assuming that it is entirely an issue related to Chrome. But we need to check if we need to adjust something in the config for Chrome, somehow I guess it is not getting this DNS entry. . Hi @alxlu, \nAfter Googling for a while and checking different links, this issue explains it briefly: https://github.com/docker/for-mac/issues/1837\nSo, it is an issue between docker and Chrome, since Chrome is not going to resolve the hostname.\nAs a workaround, I suggest to use the IP 192.168.65.1 instead of the docker.for.mac.localhost.  Also to follow up on the issue to see how it ends up.\nHopefully docker will change the name, since localhost should be only for local traffic.\nI'll close this issue since it is not related to docker-selenium.\n. Thanks for spotting the typo!. This comment sums it all. It is not recommended to have nodes running for a long time, just take advantage of the docker performance by spinning new containers as needed.\nOn a side note, and following this comment, you can check that type of solutions, here are two examples more:\nNote: These projects are not official Selenium projects, and any support related to them should be addressed in their respective repos.\n- https://github.com/zalando/zalenium Enriched grid with several additional features\n  - Disclosure: I have contributed to this project and it is developed where I work. \n- https://github.com/aerokube/selenoid New approach for Grids, good performance\nHopefully one some of this info can be helpful for you.\nClosing as there is no direct action we can take.. Hi @vijayrcse,\nAre you exposing your Selenium Grid publicly on AWS? I guess you need to double check your networking rules and everything related to the exposed ports...\nBut more importantly, if you are exposing the Grid, it wouldn't be a good idea, check these two issues:\nhttps://github.com/SeleniumHQ/selenium/issues/2076 and #147 . @Geekays @metareven \nAs @tparikka and @smccarthy mention, it is not possible to have EDGE nor IE in docker for now, the issue was handled here. We depend on Microsoft for this, if they don't provide a version of Windows in docker with a GUI enabled, it is not possible to have EDGE/IE in docker. Hopefully Microsoft changes their mind in the future.\nOn the other hand, if you want to test with Chrome and Firefox, you can run the docker-selenium containers in docker for Windows. It should work properly. \nYou can also ask questions in the Selenium Users Group or at the Selenium Slack Channel.\nClosing this issue as there is no action item for this.. Hi,\nI'll answer it without knowing the context or what you want to achieve.\nIn general you can use something like: http://HOST:PORT/wd/hub/status\nFor nodes and standalone you get a JSON with a field that says something like: status=success. For the grid it says something like status=13, when it is working fine.\nYou just need to parse that response to check if the node is up.\nSince this is not really an issue but more a question, I'd recommend you to post it on the Selenium User Group or join the Selenium Slack Channel. You will get faster feedback for questions over there.\n. I think he means this one (since he refers to the Hub) https://github.com/SeleniumHQ/docker-selenium/blob/master/Hub/Dockerfile.txt. I just tried the commands shown in this comment, with the current selenium/standalone-chrome-debug:3.6.0-bromine release, and they work.\nOne main difference with the previous version, is that the wrapper to launch Google Chrome was changed (it was pretty old). That could explain why all these options didn't work before.\nCould you please try again and report back?. Great! Closing the issue then.. Hi @jaredchu,\nI see you add the selenium-html-runner jar file, but how can anyone use it? Can you please document that? It could be a Wiki entry in this repo.\nPlease solve the conflicts and rebase.\n. Closing since we didn't get feedback.. The images were running as root before but we switched that to \"seluser\" for better practices. Seems that you were also able to switch to the user and use the VNC thing properly as well.\nFrom my understanding this issue is not longer relevant, so I'll go ahead and close it. If a problem shows up, please feel free to reopen and provide enough info.. @bdshibly @mikkiweesenaar \nDo you still have issues with the deployment or have you already found appropriate values for request and limit in the manifests?\n. I meant the yaml files used to create the deployment, sorry if I was confusing :). I'll close this one since we didn't get more feedback from the OP. Please feel free to reopen if any related problems show up.. Hi, thanks for providing a script to reproduce the issue.\nI created this test based on your script, and executed it with this docker-compose file. I was not able to reproduce it, since I can open the saved screenshot on my machine afterwards. \nCould it be that you are not sharing enough resources with the docker daemon? I am running on OSX and I am sharing all CPUs and RAM with it (as seen in the image).\n\nPlease check the settings for your OS and docker daemon, let us know how it went.. I'll close this issue because we didn't get more feedback. If this is still happening, feel free to reopen and please provide a similar example as the one above, plus environment information (RAM, CPU available for the docker daemon, etc...).. @heisenbugger,\nCould you please show us how your Kubernetes manifests/configuration files look like? . Please reopen if the issue is still present.. Hi @gael-wogenstahl, @luispabon,\nI just tried with the most recent release, and here is the output:\n```\ndocker run -it selenium/hub:3.6.0-americium /opt/bin/entry_point.sh\nUnable to find image 'selenium/hub:3.6.0-americium' locally\n3.6.0-americium: Pulling from selenium/hub\nDigest: sha256:838358c2e069a76aaee2e50961c42218c4d98abb77ec27c05022b89b350529c1\nStatus: Downloaded newer image for selenium/hub:3.6.0-americium\nstarting selenium hub with configuration:\n{\n  \"host\": null,\n  \"port\": 4444,\n  \"role\": \"hub\",\n  \"maxSession\": 5,\n  \"newSessionWaitTimeout\": -1,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": true,\n  \"jettyMaxThreads\": -1,\n  \"cleanUpCycle\": 5000,\n  \"browserTimeout\": 0,\n  \"timeout\": 30,\n  \"debug\": false\n}\n19:44:28.163 INFO - Selenium build info: version: '3.6.0', revision: '6fbf3ec767'\n19:44:28.164 INFO - Launching Selenium Grid hub\n2017-10-03 19:44:28.911:INFO::main: Logging initialized @1264ms to org.seleniumhq.jetty9.util.log.StdErrLog\n19:44:28.957 INFO - Will listen on 4444\n2017-10-03 19:44:29.089:INFO:osjs.Server:main: jetty-9.4.5.v20170502\n2017-10-03 19:44:29.165:INFO:osjs.session:main: DefaultSessionIdManager workerName=node0\n2017-10-03 19:44:29.165:INFO:osjs.session:main: No SessionScavenger set, using defaults\n2017-10-03 19:44:29.172:INFO:osjs.session:main: Scavenging every 600000ms\n2017-10-03 19:44:29.198:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@525f1e4e{/,null,AVAILABLE}\n2017-10-03 19:44:29.241:INFO:osjs.AbstractConnector:main: Started ServerConnector@12d3a4e9{HTTP/1.1,[http/1.1]}{0.0.0.0:4444}\n2017-10-03 19:44:29.246:INFO:osjs.Server:main: Started @1597ms\n19:44:29.260 INFO - Nodes should register to http://172.17.0.2:4444/grid/register/\n19:44:29.260 INFO - Selenium Grid hub is up and running\n```\nMaybe something got fixed in the meantime? Could you please try again?. Closing this issue due to inactivity, please reopen if the issue still exists.. Right now it is possible to build the image with Firefox Nightly, if you want to, please send us a PR enhancing this logic: https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeFirefox/Dockerfile.txt#L7\nadding Firefox Developer Edition, so anyone could build the image on their own.. Hi @tnguyen14,\nCan you please share the docker command you are using to start the images?\nHow are you able to see that those env vars are not respected? . I tried the same as @AndreSteenbergen and got the same results.\n@tnguyen14 please reopen if you have more information about it.. Reopening to investigate, also since there is a long standing PR that should solve this. #699 . OK, so I started a hub and a Chrome node with the following docker-compose file (without any proxy config):\n```\nversion: '2'\nservices:\n  chrome:\n    image: selenium/node-chrome-debug:3.14.0-arsenic\n    volumes:\n      - /dev/shm:/dev/shm\n    ports:\n      - \"5900:5900\"\n    depends_on:\n      - hub\n    environment:\n      HUB_HOST: hub\nhub:\n    image: selenium/hub:3.14.0-arsenic\n    ports:\n      - \"4444:4444\"\n```\nand then I checked my IP and I got (as expected):\n\nThen, I went to https://free-proxy-list.net/ to get a random proxy to use in my test:\n\nand I started a hub and a Chrome node with proxy configuration:\n```\nversion: '2'\nservices:\n  chrome:\n    image: selenium/node-chrome-debug:3.14.0-arsenic\n    volumes:\n      - /dev/shm:/dev/shm\n    ports:\n      - \"5900:5900\"\n    depends_on:\n      - hub\n    environment:\n      HUB_HOST: hub\n      HTTP_PROXY: \"http://167.114.56.169:80\"\n      HTTPS_PROXY: \"https://167.114.56.169:80\"\n      NO_PROXY: \"localhost,127.0.0.1,localaddress,.localdomain.com\"\nhub:\n    image: selenium/hub:3.14.0-arsenic\n    ports:\n      - \"4444:4444\"\n```\nand I checked my IP again:\n\nThis shows that Chrome is not ignoring the proxy environment variables.\nIn any case that Chrome is actually not doing it, please open a new issue with complete information on how to reproduce the issue. \nClosing this issue again then. \n. Hi @driverpt,\nThe builds are not done in the docker hub since a while ago, they are done in Travis whenever there is a release. We are keeping it that way so we can track any possible issues more easily.\nWe are now releasing more often, so the images are having the latest versions usually. \nTherefore, I'll close this issue since there is no need for that right now.. @McSnowflake as mentioned in the linked issue, REMOTE_HOST was a parameter used in docker-selenium, it is now deprecated in favour of SE_OPTS=\\\"-host <host> -port <port>\\\".\nCould you please elaborate more your use case to understand what you need to achieve?. Extra comment for precision, REMOTE_HOST support in the JSON config file was dropped in Selenium 3, that is why you might be wondering @McSnowflake. And since it was dropped, the images moved to use -host and -port. . @McSnowflake, to summarise, the REMOTE_HOST cannot be passed as a environment variable, but it can be used via the SE_OPTS. Here is an example:\nStart hub:\ndocker run -p 4444:4444 --name selenium-hub selenium/hub:3.7.1-beryllium \nStart node:\ndocker run --name node101 -p 5595:5555 \\\n    -e HUB_PORT_4444_TCP_ADDR=192.168.1.7 \\\n    -e HUB_PORT_4444_TCP_PORT=4444 \\\n    -e SE_OPTS=\"-remoteHost http://192.168.1.7:5595\" \\\n    selenium/node-chrome:3.7.1-beryllium\nLike this, the hub will use the address reported in -remoteHost to reach the node. \nThe images deprecated the use of REMOTE_HOST because it was used in the JSON config for the node, and based on my findings, that value is not supported in the JSON anymore, but it is supported as a flag in the command line.\nPlease give it a try and give us feedback based on your results. If you encounter any problems, please feel free to reopen this issue.. For Firefox see #575,\nWe'll investigate for Chrome. . I've confirmed that this is a duplicate of #559, I'll close this issue and please follow that one. . I'll check that tomorrow morning, and if everything's ok, I'll build a new release.. Hi @piscisferro,\nThere was a bug introduced in 3.4.0-francium related to env vars and default values. This was fixed in 3.5.3-boron. Could you please try again and let us know if it works again?\nIf not, please help us by providing enough information (docker commands, logs, test script, etc...) for us to reproduce the problem and find a way to fix it.. Sorry for replying so late. \nI was trying this, and I got confused. Before trying something else, can you please check via VNC the container and see what is happening when you click on the download button? You should be able to understand there why the download does not happen.\nIt also seems that the behaviour in Chrome changed, see:\nhttps://stackoverflow.com/questions/45717426/how-to-disable-chrome-pdf-viewer-in-selenium-and-it-should-auto-download-in-the\nhttps://stackoverflow.com/questions/31672897/how-to-download-a-pdf-file-in-chrome-using-selenium-webdriver\nCan you please also share your docker-compose file, to see how the folder is mounted? Maybe you can share a link (with a button to download a PDF) where I can reproduce the issue.. @piscisferro, @wlaoh, @renanwilliam \nI am a bit confused here, is the issue that you cannot download files because you get a download prompt or is it that the file is downloaded but you cannot see it in the folder?\nI would really appreciate if someone can provide the docker run commands or the docker-compose file used to start the containers. Also a complete test script with a reproducible case, otherwise it is kind of hard to help to find a solution.. Hi @piscisferro, @renanwilliam\nSorry for the delay.\nI tried to reproduce the issue, and for that, I started a standalone Chrome debug container with the following command:\ndocker run -d -p 5900:5900 -p 4444:4444 \\ \n    -v /dev/shm:/dev/shm \\\n    -v /tmp/downloads:/tmp/downloads \\\n    selenium/standalone-chrome-debug:3.7.1-beryllium\nand then I executed this test\nI was able to download the file and verify that it was downloaded in the mounted volume.\nIf you are still having the issue, could you also please provide (like I just did), a test script that helps us reproduce the issue? A docker command is useful as well (or docker-compose).\n. @renanwilliam \nWell, yes, there is a docker-compose file and a set of manual steps in your comment, but I'd prefer some script I can execute and debug. Additionally, the issue is about Chrome and I see Firefox in the screenshot. Moreover, you see the prompt to download the file because I think you need to set some browser options before starting it so the file is downloaded straight away.\nI ran the script above in OSX and I did not have any permission issues. \nAgain, if there is an issue with one of your tests, please help us by providing a script that we can run to reproduce the issue and fix it, because with the current information, we cannot really reproduce it. . Hi @piscisferro, \nI updated the script I am using to reproduce the issue based on your input.\nI created this docker-compose file similar to yours, and the selenium-test-alpine-java comes from this Dockerfile. The Java test is already checking that the file is present in the file here.\nI executed the test with this command:\ndocker-compose -f docker-compose.yaml up --abort-on-container-exit --build\nThe bottomline is that the test is passing, the image is being downloaded.\nCould you please have a look at the scripts I modified and perhaps compare them with yours? Please note that I am using the latest release of the image 3.7.1-beryllium.\n. Ah ok, so in the end this was more related to folder permissions, which is more clear when running the images in Ubuntu (this does not affect usually OSX nor Windows).\nThe images were changed to use the seluser for all the processes, this was done to follow best practices and also because the services don't need root to run. This makes the images more usable in different environments, like hosting services that restrict the use of privileged users.\nSorry if this caused any inconvenience, but just changing the folder permissions fixes it, as @ralfthewise mentions.  . @piscisferro, I'll go ahead and close this issue since we found the root cause and a solution to it, (as mentioned in the comment above).\nIf there are still any related problems, please feel free to reopen.. Thanks @Zechtitus for the complete answer!\nI think that is about the normal requirements to run the containers, and to get an optimal usage state takes time since this mostly should adapt to your own environment.\nI'll close this issue since there is an answer provided. You could also send the same question to the Selenium Users Google Group, you should get a few answers there as well.. Hi @mtsmfm,\nCan you please update your fork with the latest changes from master? The we can review the PR.\n. Hi @mtsmfm,\nI am sorry, I didn't realise that this PR was conflicting with #578. But the good news is that after releasing 3.6.0-bromine (which includes #578), now both commands work:\n```\ndocker run --rm --cap-add SYS_ADMIN selenium/standalone-chrome-debug:3.6.0-bromine /opt/google/chrome/chrome --no-sandbox --headless --disable-gpu --dump-dom http://example.com\ndocker run --rm --cap-add SYS_ADMIN selenium/standalone-chrome-debug:3.6.0-bromine google-chrome --no-sandbox --headless --disable-gpu --dump-dom http://example.com\n```\nTherefore this PR is not needed anymore, I'll close it.\nIf you find something else that needs to be improved in this project, please don't doubt to submit a new PR. Thanks!. I'll close this issue since the community provided the answer for it.\nThanks for helping @AribaOpensource and @shankarkc! . Hi @anjunatl,\nI think the problem is here:\n$test_dir/bin/wait-for-it.sh hub:4444 --timeout=200\nBecause you are just checking that the hub is up and listening on the port 4444, but this does not mean that the Chrome container has already registered and is ready to receive requests.\nMaybe you can check for the hub status at http://hub:4444/wd/hub/status, and you will see that the json will have a ready key which is true when the hub has already a node registered. That is what we do with the tests we run in this project via python, you could take that approach and adapt it.\n. I'll close this issue since we didn't get feedback from the OP.. Exactly, this is not a bug anymore since the 3.5.3-boron release. Closing this issue.. Hi @william5065,\nI think this is the same as #577, please check this specific comment, maybe you can give us feedback a report where exactly this command is being triggered.  . OK, so I will close this issue for now, but please don't doubt to reopen if you need help to identify the problem and if you have detailed information on how that command is triggered.. @suryavir this is a Protractor issue, it is trying to hit an endpoint that does not exist the error pops up. Please check the related comment, and also please raise the issue with Protractor (or check if it is already created and see its status).\nIt is not a docker-selenium neither a Selenium issue.. For Firefox see #575,\nWe'll investigate for Chrome. . I checked and this started failing since the 60.0.3112.78 release (as seen in the linked bug report), and this does not seem related to the commits included docker-selenium releases after 3.4.0-einsteinium.\nI also tried with the current beta version, and it does not work either. It all seems related to the fact that there is no window manager in the node-chrome and node-firefox containers, as mentioned in this SO answer.\nThe workaround for now is to set the window size as @shankarkc says, or use the debug containers (I did a very small test using the headless and the debug container, the resource usage looks very similar).\nPlease follow the bug report for updates.. Yes, that is what I also saw when debugging this. The good news is that the debug images already have fluxbox installed. So you could use those ones.\nI'll start digging soon into the performance differences between the normal and debug images, hopefully to find out that there are not significant ones, and if so, the idea is to merge them.. Hi @Zechtitus,\nHere is my docker compose file:\n```\n  version: '2'\n  services:\n    firefox:\n      image: selenium/node-firefox-debug:3.6\n      depends_on:\n        - hub  \n      shm_size: 2G\n      environment:\n        JAVA_OPTS: -Xmx512m\n        HUB_PORT_4444_TCP_ADDR: hub\n        HUB_PORT_4444_TCP_PORT: 4444\n        no_proxy: localhost\n        GRID_BROWSER_TIMEOUT: 300000\n        GRID_TIMEOUT: 300000\n        SE_OPTS: -host firefox -port 5001\n        SCREEN_WIDTH: 1600\n        SCREEN_HEIGHT: 1200\n      ports:\n        - \"13101:5900\"\n        - \"5001:5001\"\n      links:\n        - hub\nhub:\n  image: selenium/hub:latest\n  ports:\n    - \"4444:4444\"\n  environment:\n    PORT: 4444\n    GRID_BROWSER_TIMEOUT: 300000\n    GRID_TIMEOUT: 300000\n    GRID_CLEAN_UP_CYCLE: 300000\n    GRID_UNREGISTER_IF_STILL_DOWN_AFTER: 300000\n    SE_OPTS: -browserTimeout 86400 -timeout 100\n\n``` \nAnd I can reproduce what you say when removing the env vars.\nNevertheless, if I set the env vars like this (which are the default values):\nSCREEN_WIDTH: 1360\n        SCREEN_HEIGHT: 1020\nThe issue still happens, so it is not related to passing the vars or not. It seems that it is related to Firefox (since it works well with Chrome), maybe it needs a bigger viewport to work properly. I'll try the next week with FF 57 beta to see if it is solved. \n. @Zechtitus What I meant is that it is not about setting the environment variables or not. (1320x1020 are the default values).\nWhat seems to be is that this behaviour happens when the screen resolution when the viewport is not big enough. I tried it with 1320x1020, 800x600 and so on... Cannot say exactly what \"big enough\" is.\nI have built locally a firefox-node-debug image with Firefox 57 beta, which should be released in November, and this does not happen anymore. \nAs this does not seem critical, I would say we just need to wait until Firefox 57 is released.\n. Hi @Zechtitus,\nCan you please check with the latest release?\nhttps://github.com/SeleniumHQ/docker-selenium/releases/tag/3.7.1-beryllium\nFirefox 57.0 is there, I tried it and it works. Please give it a try.. @Zechtitus I'll close this one since other people have confirmed that it works, when you have time please try the latest release, and if you find any new problems, please feel free to reopen this issue.\n. Hi @testphreak,\nSeems something is wrong with the tests, were you able to run the build script locally?  . Hi, I'll check this PR between today's evening and tomorrow. \nI'll make a new release including it, I was getting details on the release process. \nBasically after the release, I'll close this PR since #545 already implemented it.. Hi @DmtryJS,\nWhy are you using that docker registry URL and not https://index.docker.io/v1/? \nI just tried the pull and it works, the image is still there. I guess it is a network issue on your side.. Closing due to the lack of feedback. Feel free to reopen when more detailed information is provided.. This was already released with 3.5.3-boron, as mentioned in #560.\nFeel free to reopen in case the issue was not solved. . Hi all, \nWe just made a change in the images and introduces the env var START_XVFB, you can set it to false(or anything different to true when starting the container, and then Xvfb won't be started. \ndocker network create grid\ndocker run -d -p 4444:4444 --net grid --name selenium-hub selenium/hub\ndocker run -d --net grid -e HUB_HOST=selenium-hub -e START_XVFB=false -v /dev/shm:/dev/shm selenium/node-chrome\ndocker run -d --net grid -e HUB_HOST=selenium-hub -e START_XVFB=false -v /dev/shm:/dev/shm selenium/node-firefox\nIf you do that, and check the running processes in the container, you'll see:\nseluser@6c5028fb1dad:~$ ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nseluser      1  0.2  0.1  58660 18484 ?        Ss   20:30   0:00 /usr/bin/python /usr/bin/supervisord --configuration /etc/supervisord.conf\nseluser     13  0.0  0.0  20988  3364 ?        S    20:30   0:00 /bin/bash /opt/bin/start-selenium-node.sh\nseluser     26  5.1  1.2 7244440 129376 ?      Sl   20:30   0:03 java -jar /opt/selenium/selenium-server-standalone.jar -role node -hub http://selenium-hub:4444/grid/register -nodeConfig /opt/selenium/config.json\nseluser     55  0.0  0.0  21188  3792 pts/0    Ss   20:31   0:00 bash\nseluser    774  0.0  0.0  37360  3244 pts/0    R+   20:32   0:00 ps aux\nSo Xvfb won't run and you'll need to run tests with the headless flag set to true, e.g. in Java:\n@Test()\n    public void firefoxTest() throws Exception {\n        FirefoxOptions firefoxOptions = new FirefoxOptions();\n        firefoxOptions.setHeadless(true);\n        WebDriver driver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), firefoxOptions);\n        driver.get(\"http://the-internet.herokuapp.com\");\n        Assert.assertEquals(driver.getTitle(), \"The Internet\");\n        driver.quit();\n    }\nand for Chrome:\n@Test()\n    public void chromeProfile() throws Exception {\n        ChromeOptions chromeOptions = new ChromeOptions();\n        chromeOptions.setHeadless(true);\n        WebDriver driver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), chromeOptions);\n        driver.get(\"http://the-internet.herokuapp.com\");\n        Assert.assertEquals(driver.getTitle(), \"The Internet\");\n        driver.quit();\n    }\nTherefore you can now run the images without Xvfb. I will comment again when the images with this change are released and pushed to Docker Hub.. Released https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.14.0-francium. Hi @gbataille \nThe images are not built in the docker hub anymore, they are built in and pushed from Travis in every release. \nPlease check https://hub.docker.com/r/selenium/base/tags/, the last one was pushed 7 days ago (3.5.3-boron). The other images are based on this one.\nIf you have an issue related to any given behaviour in Selenium, feel free to open an issue with the images you used, the docker command, and a test script to reproduce the issue. . I would compare the ids of the images in your cluster and the ones locally to start. Also in the stacktrace of the error you can check the selenium version being executed. \n. @pasha0070 \nCan you please provide additional information?\n- Which images are you using\n- What docker command do you execute to start the containers?\n- A test script to reproduce the error.\n. Closing since we didn't get feedback. Please feel free to reopen when enough info is provided.. Hi @renereichenbach,\nSE_OPTS are Selenium Configuration Options, so they will only alter how the Hub/Node will start, it won't have any effect in Chrome.\nTo achieve what you want, use the \"--disable-infobars\" flag in the ChromeOptions, I found this good post that shows you how to do it. . Nice! I'll close this issue then.. Hi @testphreak \nI was able to reproduce it, initially I thought it was only with Java, so I tried it with JavaScript (also maximising the window), and the browser just hangs. \nAfter that I executed the same test in a for loop, and it also got stuck in the debug image.\nI cannot see right away the reason for it. We need to investigate a bit. . I tried a local build (master has Geckodriver 0.19), but it did not make any difference. We need to investigate deeper. . I started to go backwards in releases and I can see that the last version where this worked properly is node-firefox:3.4.0-einsteinium, after that this problem is present.\nNow we need to start checking the commits after that release to understand where the problem comes from.. https://github.com/SeleniumHQ/docker-selenium/commit/89d048cf53ebad48d0be64d7b18c01c065414616\nThis version upgrade started to make things weird, I'll start debugging from there.. Here are the things I've tried so far:\n\nI took the commit from node-firefox:3.4.0-einsteinium (last known working version), and started upgrading Geckodriver, Firefox and Selenium until latest versions, and the problem is still there. Which means that the issue is related to either Geckodriver or FF. (It works in the debug versions, just as a reminder).\nI tried upgrading Firefox to beta 56, which will be released tomorrow (28.09.2017), still no luck.\nI tried then with Firefox 57 beta, which should be released in November, and it works again.\n\nNext thing I will try downgrading Firefox and Geckodriver versions separately to identify what is the trigger for the error.\nAlso check why it works in the debug images, perhaps fluxbox or x11vnc make the difference.\nBased on that, we can create an issue in Geckodriver/FF and then just wait until it gets resolved or FF 57 is released.. I checked all the combinations, the only one working was Geckodriver 0.17.0 and and FF 54.0.1.\nAfter that, maximising the window does not work anymore. Which should be solved in FF 57 (based on my previous comment).\nWhy does it work in the debug image?\nI installed and configured fluxbox manually in a running container, and after that, maximising kind of works. Opening, maximising and closing the browser works a few times, but if you do it more than 5-10 times, it hangs again (this also happens in the debug container).\nWhat we can do for now is leave this issue open and create an issue in Mozilla and hopefully a fix gets released for the current 56 version.\n. I think we just need to wait for a new FF release, I actually checked the container logs and it just hangs when the maximise instruction is received. \nIn the debug container, when that happens, if I maximise myself the browser when it is hanging, then the test continues. . I created this report https://bugzilla.mozilla.org/show_bug.cgi?id=1405454. Hi @testphreak,\nCan you please check with the latest release?\nhttps://github.com/SeleniumHQ/docker-selenium/releases/tag/3.7.1-beryllium\nFirefox 57.0 is there, I tried it and it works. I also added a test maximising the window to our CI to keep track of this. . @buttesharad \nI started the images like this:\n```\ndocker run -d -p 4444:4444 --name selenium-hub selenium/hub:3.5.3-boron\ndocker run -d --link selenium-hub:hub selenium/node-firefox:3.5.3-boron\n```\nAnd then I tried to reproduce it with a simple Protractor test, but I could not.\nThis is the code I used: https://github.com/diemol/frontend_testing/tree/docker-selenium-tests/issue-577\nWe need more details, the package.json file and an actual test to reproduce the issue, otherwise  it is really hard to identify where the problem is.. @buttesharad,\nYes, I tried it with Firefox, I just pasted the wrong command (now corrected).\nSorry, but I cannot reproduce it if you don't provide enough information. Just pasting the Cucumber specification is not enough. \nPlease help us by providing a link to a Github repo with a reproducible test case.. @buttesharad \nI think @lmtierney is right, the error seems to be related to POST /session/d79372fe-2c43-442a-bec6-63543688fa0f/timeouts/async_script. Since there is no /timeouts/async_script in the WebDriver specification for timeouts. Please check with your frameworks to see if they are sending this command and report the issue over there.\nIf you need help to identify the problem, please provide a detailed report, like this one.\nFeel free to reopen when a detailed report is present.\n. Hi @deiwin,\nCan you please update your fork with the latest changes from master? Please only change the Dockerfile.txt files.\n. I just tried it myself and I bumped into the issue when trying to use Chrome Beta.\nI briefly reviewed and it looks good, I will test it and review it more in detail between today and tomorrow, and hopefully we can merge soon.\n@ddavison, do you want to take a look? . Thanks for the PR @deiwin, I used it to build a custom image with Chrome Beta and it works fine. I'll merge it and make a release. . Found some python issues when trying to run the tests in Travis. \nI'll start debugging, when we merge this, let's merge it as a single commit to remove all the debug commits from the commit history.. Now the build looks good! :). Hi @JoepWeijers,\nAfter releasing 3.6.0-americium, the latest tags are back to normal.\n@ddavison I checked the Travis build and the tagging looked fine to me, not sure why it happened. Unless you have something else to add, I guess we can close this issue.. Commit in the main project removing PhantomJS here.\nWill remove the images and related scripts for the next release.. Closed via #623 . Closing this one as not enough information is provided, the title is not understandable. Feel free to reopen in case more information is provided. . Hi @mitchellmaler @Lgalan90,\nWere you using tag 3.6.0-bromine? The wrapper to launch Chrome changed in this version (we were using a very old one). Also we have Chromedriver 2.33 in that release.\nIf you used a previous release, could you please try again? . Great! Closing the issue then.. @vamshiangala \nCan you share the docker command you use to start the containers?. This is a know thing.\nLooks like you are not sharing the /dev/shm volume. Check: https://github.com/SeleniumHQ/docker-selenium#running-the-images. @vamshiangala \nI am not sure how it works in that specific environment, but I would double check and make sure that the running container /dev/shm size is at least 2GB (the default size is 64MB). Is there a way for you to do that? Go inside the container and check it, I am sure the EC2 instance has it but I am not sure if the container is actually using it.. Closing this issue due to inactivity from original OP, feel free to reopen in case more info is provided.. Hi @yuklia,\nIf you found any issues in old images, it is very probable that they are fixed in the new ones. We improve them constantly, so please try the newest versions of the images.\nIn addition, we don't maintain old versions of the images, we make the needed fixes and improvements in the current versions and release again.\nPlease give a try with the current images and create a new issue in case a problem is found.\nI'll close this issue since it refers to an old image not maintained anymore.. Hi @gkiszczak,\nThanks for this PR, let us review it and we'll get back to you. . Looks fine, just tried it locally and all works well.\nThanks @gkiszczak \nAlso, if you want to be shown in the contributors, please note that the email used in the commit is not associated with your Github user. Just update it in case you want to be show in the contributors list.\n\nI'll merge the PR now.. Hi @khalistan,\nCan you please provide more information? docker-image used, docker command, a script to reproduce the test case? It is not so easy for us to help without enough information.\nPS: Why did you delete the issue template? :). Hi again @khalistan,\nI just followed your instructions with the recent release 3.6.0-darmstadtium, like this:\n\ndocker run -d -p 4444:4444 -p 5900:5900 selenium/standalone-chrome-debug:3.6.0-darmstadtium\nWent inside the container via VNC\nOpened Chrome\nWent to www.google.com in the browser, opened the DevTools\nTyped window.print() on the console, and the print page opened and stayed there. It did not close.\n\nI am not sure if this was broken in an earlier version of Chrome, but I am pretty sure that version 3.5.3 had a give version of Chrome installed, and in your machine there was a different version installed.\nSo, please try it again with the most recent release and let us know how it went.\n . Oh sorry, when I tried it the first time I forgot to add the /dev/shm part. Without that it won't work as you say.\nPlease try it with it, like this:\ndocker run -d -p 4444:4444 -p 5900:5900 -v /dev/shm:/dev/shm selenium/standalone-chrome-debug:3.6.0-darmstadtium\nand then it works, even with the page you mention.. Thanks for the feedback @khalistan . Hi @straris,\nIs this issue present only in the headless image? Did you try with the node-chrome-debug image? . thanks for the feedback @straris! . Hi @jessicamarshall,\nI don't have experience with vpshere, but I would say it is just a matter of having the proper IPs need to have a grid working. \nWhen you start the containers, without running any tests, can you please check first the logs and see if the nodes are properly registered? Also visible in the hub console? . Closing this issue due to inactivity, please reopen if more information is provided.. Hi @jackTheRipper, \nYes, the approach you are using does not work with the way the images are built currently. The way I see it, the current way to build the images is like that because we have many images and we try to avoid duplicating configuration and Dockerfiles as much as possible.\nThe workaround would be, as you mention, a custom repo for that approach, which I understand might be not so nice. \nWe are open to receive PRs with a new and improved ways to build the images.\nIf that's ok, I'll close this issue since there no action item to do.\n. Hi @jwhitlock,\nThanks for this PR. Let us review it and we'll get back to you soon. . Thanks @jwhitlock, I'll merge this and we'll probably release soon. . In addition to that, there is already an issue with that information, please check #186. Hi @eitany,\nGood catch, I was able to reproduce it. I made some comments to your PR #600, please solve them and we can merge.\nThanks!  . #600 was merged, so closing this issue.\nThanks @eitany . Hi @eitany,\nThanks for this PR, good catch! . Hi @eitany,\nHow can I reproduce that? I just tried to run a container with the command:\ndocker run -d -p 4444:4444 -p 5900:5900 selenium/standalone-chrome-debug:local\nafter building the image with the changes you submitted in #600 and I don't get the error. \nPS: I built the image with VERSION=local make standalone_chrome_debug. Please see my comments on #601 . Hi @AndreSteenbergen,\nI guess you are mounting -v /dev/shm:/dev/shm? This should reduce the amount of crashing pages and \"lost\" Chrome processes.\nAnd even if you are sharing it, I don't discard that the page is too heavy and after a while working on it Chrome crashes as well. \nThe thing is the containers are thought to be short lived, that is why they don't have any recovery/cleaning logic in them. In a normal (non-container) grid, you have normally those problems with zombie processes. The usual approach in docker-selenium, is just to throw away that container and start a new one.\nNevertheless, if you have any suggestions or an idea how to improve this, we can discuss them and perhaps we would be happy if that ends up with a PR.\n. Cool! That is nice to know. \nShould we keep this issue open?\nPS: Thanks for your interest in commenting and contributing to other issues.. Hi @idan72,\nThe short answer is; you would need to use the IP address of the instance that contains the hub here HUB_PORT_4444_TCP_ADDR, and also SE_OPTS like this when starting the node: \nSE_OPTS=\"-host yourNodeIP -port yourNodePort\"\nCheck the docs\nLong answer; when you start the hub, then you need to create the node and give the IP address of the hub, (so you are telling the node where to find the hub), and in the case of your network, you need to tell the hub where to reach the node (this is done with the SE_OPTS). \nThis is because the node will be able to reach the hub, but the hub also needs to reach the node to check its health status.\nSomething like:\n```\nHUB\ndocker run -d -p 4444:4444 \\\n    -e HUB_PORT_4444_TCP_ADDR=<ip_of_your_hub_instance> \\\n    -e HUB_PORT_4444_TCP_PORT=<opened_port_of_your_hub_instance> \\ \n    --name selenium-hub selenium/hub:3.7.1-argon\n\nNODE\ndocker run -d -p 4444:4444 \\\n    -e HUB_PORT_4444_TCP_ADDR=<ip_of_your_hub_instance> \\\n    -e HUB_PORT_4444_TCP_PORT=<opened_port_of_your_hub_instance> \\ \n    -e SE_OPTS=\"-host <your_node_instance_ip> -port <your_node_instance_open_port\" \\\n    --name selenium-chrome selenium/node-chrome:3.7.1-argon\n\n```. Closing this one as this was more a question than an issue. Feel free to reopen if any issue shows up.. Hi @simplyviks,\nCan you please share the docker run command?\nFrom the error, it just seems that you have already another service or docker container using the port 5902. \n . @simplyviks\nCan you please share the docker-compose file as well?. Sorry, but if we cannot see how you are starting the containers with the full docker-compose file, or a similar one to reproduce the issue, how could we help?. Closing this one as the OP didn't give us enough info to help. Feel free to reopen when more information is provided.. Hi @barahate90,\nCurrently there is no support for windows images in docker, there was an request here, but it was declined.\nI'd recommend that you ask questions like this one in the Selenium Users Group or in the IRC/Slack channel for Selenium. \nIt is not really intended to have this space as a forum or a generic space to exchange ideas, but rather to report specific bugs or provide concrete improvements to the project. Thus, I'll close this issue.. Hi @pabloFuente,\nThanks for the PR. A few questions:\n- Can you please describe the use case? How would a test use this added package?\n- I see you only want to change the StandaloneFirefoxDebug, what about the StandaloneFirefox, NodeFirefox and NodeFirefoxDebug? It would be nice to have the change in all of them. \nKeep in mind to change only the Dockerfile.txt files please.\n . Hi @pabloFuente,\nThanks for submitting the PR again, also thank you for the clear explanation for it. \nDid you check how much does the image grow by installing the package? I guess not so much, would be nice to know that.\nFrom my point of view, it looks good. I don't see why we could not merge it.\n@ddavison, what do you think?  . Thanks for the changes!\nFrom my point of view it looks good. The extra 50MB is not ideal but I don't think there is a big issue about it. The Chrome container is already 848MB for example. We should look into that later.\nI'll just wait for @ddavison's opinion, after that, it should be ok to merge. . Hi @barahate90,\nYou can start Firefox manually by opening a shell and typing firefox.\n\n\n. Glad it worked! Thanks for the feedback.. Hi @phuongnd08,\nCan you please share the command you used to start the containers? . Oh, I was looking for something more specific, to see the docker run... command being used.\nAlso, taking the comment from #619\n\nI already did this. Though I would like to think having such change will make it easier for people to report and diagnose the issue (which can come in a variety of forms)\n\nI understand that you created an image based on the Standalone and modified it to look like:\nsh\nxvfb-run -e /dev/stdout -n $SERVERNUM --server-args=\"-screen 0 $GEOMETRY -ac +extension RANDR\" \\\n    java ${JAVA_OPTS} -jar /opt/selenium/selenium-server-standalone.jar \\           java ${JAVA_OPTS} -jar /opt/selenium/selenium-server-standalone.jar \\\n    ${SE_OPTS} &            ${SE_OPTS} &\nDid you get enough output that helps to find the cause why the Xvfb failed to start happens?. I think the flag -e should give you the information you need. But keep in mind that the output is sent to a file, not to console. Check http://manpages.ubuntu.com/manpages/xenial/man1/xvfb-run.1.html\nMost of the time, that error means that the display was not available. But in the end we can only know it when you analyse the output in the error file after adding -e.\nI have never used CircleCI 2.0, so I cannot really advise there. . I'll close this issue since there is not really an action item to do. If you still have problems, feel free to reopen and please provide more detailed information so we can help to solve them.. Hi @phuongnd08,\nI suggest that you create an image with these changes first and see what output this brings in the environment you are using it. Then perhaps the root cause will be seen and an improved PR can be sent.\nOtherwise, we would be the bottleneck in your pipeline, since we would need to merge, release and then this would not really guarantee that it works. \nI'll close this PR and we can follow up on #618 based on your findings.\n. Hi @barahate90,\nI tried to reproduce it but it was not possible, here are the steps I went through: \n\nI removed all the images from my laptop\n\n\n\nI executed this command:\n\nVERSION=local BUILD_ARGS=\"--build-arg CHROME_VERSION=google-chrome-beta\" make standalone_chrome_debug\n\nAnd that command created the following images:\n\n\n\nSo I went to use the standalone-chrome-debug image that was just created with the command:\n\ndocker run -d -p 4444:4444 -p 5900:5900 -v /dev/shm:/dev/shm selenium/standalone-chrome-debug:local\n\n\nI am on OSX, so I executed vncviewer localhost:5900\n\n\nAnd then I went inside the container and opened Chrome, beta is installed:\n\n\n\nPlease double check the commands you used, and let us know how it went.. Cool, thanks for the feedback @barahate90.\n. Hi @dezoito,\nThe file is placed there before the image is built, since we use a Makefile to build all the images, you can see how it is generated here. \nSo, if you do VERSION=your_local_version make standalone_firefox_debug, you will get an image build on your machine. \nI'll close this one since it was more a question than a real issue. If you find any problems, feel free to reopen the issue (please provide enough information to reproduce it if you need to reopen).. Hi @danish-monu,\nI think I might know what the issue is, but just to be sure, can you please paste here the commands you are using to start the containers?\n . Thanks for replying @danish-monu, I'll check this. It will probably involve some work that will lead to a release, it'll take some weeks. . Hi @danish-monu,\nSo we released a while ago some changes, and I tried locally your desired setup and I think it should work now. Here is what I tried:\n\nI am using a Ubuntu\nI have a proxy running locally, let's say at http://localhost:8888 \nI start the hub like this\ndocker run --network host -d -p 4444:4444 --name selenium-hub selenium/hub:3.8.1-dubnium\n\nI start the Chrome node like this:\ndocker run --network host -e HUB_HOST=localhost -v /dev/shm:/dev/shm selenium/node-chrome:3.8.1-dubnium\nNotice that I use -e HUB_HOST=localhost, since the hub is actually running on the host network\n\n\nAnd finally I used in the test capabilities.setCapability(CapabilityType.PROXY, proxy), and it worked.\n\n\nPlease give it a try and let us know how it worked.. @danish-monu I'll close this issue since I saw it working properly, if something didn't work, please feel free to reopen it and we can check it again.. Hi @alistair23,\nThanks for sending us a PR. Could you please tell us what is the need to install Python in the images? . Well, yes, it would benefit users who have tests in python. But this would leave out users who use ruby, java, etc...\nBottomline, the images try to be a generic as possible, and this would go against that concept. That's why I think we cannot accept this PR, sorry.. Not really, at least not officially. You could use this one https://github.com/elgalu/docker-selenium, which already has Python installed (but it is a heavier image).\nI'll close the PR :). Hm, maybe, I am not sure about the benefit. But you could send the PR and then we discuss it also with @ddavison . Hi @alistair23,\nThe images will grow 8MB, which is not really an issue. \nI researched a bit, and I don't know if it makes sense to include this. From the Dockerfile RUN best practices:  \n\nYou should avoid RUN apt-get upgrade or dist-upgrade, as many of the \u201cessential\u201d packages from the parent images won\u2019t upgrade inside an unprivileged container. If a package contained in the parent image is out-of-date, you should contact its maintainers. If you know there\u2019s a particular package, foo, that needs to be updated, use apt-get install -y foo to update automatically.\n\nSo this suggests that we should only update packages when we know that it is needed. In addition, the base image is ubuntu:16.04 and they tend to release once or twice a month with improvements and security updates, and since we release several times per month, we are getting those updates implicitly. \nInitially I thought this was a good idea, but after reading docs and docker forum's entries, I understand that it does not make sense.\nIf you are still eager to contribute, please help us by checking the open issues and tacking one of them. We could point you how to get started in any case. Another good point is to update the documentation in the README.\nI'll close the PR for the reasons mentioned above.  \n. Hi @breilly2,\nThat's weird, what version of the bindings are you using? \nAnyway, I tried to reproduce your issue based on your code and I could not, I created this small example project. You can use this docker-compose file to run it, check it out and let us know if it worked.  . Oh wow, 2.35.0! I am amazed that it was still working until 3.7.1\nSelenium 2 not supported anymore, and people are encouraged to move to Selenium 3. \nAnd no, the same test works in 3.7.1, that's why I was wondering what the problem was.\nI'll close the issue then, thanks for reporting back.. Hi @rajaraman-mahalingam,\nIt is really hard to say what the cause might be. I'd suggest two things, go back in your CI to the latest 3.7.1 and on a separate machine try 3.8.1 to debug where the test fails and understand why. Second, use always a fixed tag in your CI, so you can control when the version is upgraded to avoid surprises.\nI'll keep this open for a couple of days to see if you find an issue on the image, then please report back. Otherwise, we'll proceed to close it.\n. Thanks for debugging @dvarrazzo!\nDo you know which tag specifically from 3.7.1 works? Is the issue with the hub or the node images? The original post was with the standalone image... . @rajaraman-mahalingam when you mean \"locally\", you mean running the tests and having the docker-images running in your laptop?\nCould someone please provide a script that reproduces the issue? This means, a small script that works on the 3.7.1 images and doesn't work on the 3.8.1 images. Please also point out the version of the bindings you are using.. Hi @rajaraman-mahalingam @dvarrazzo \nIs it working for you now?\nI tried to reproduce the issue in Java but I could not. I started a container like this:\ndocker run -d -p 4444:4444 -p 5900:5900 -v /dev/shm:/dev/shm selenium/standalone-chrome-debug:3.8.1-bohrium\nand executed this test... and it works for me.\nPlease note that I am using the 3.8.1 Java bindings, and the latest 3.8.1 image for Chrome.\nIt would be very helpful if you could post the docker commands used to start the images and a test script so we can reproduce the issue, otherwise it is kind of difficult to help.. @ajohnsen is it possible for you to post a code example that can help us reproduce the issue? It is quite hard to check if there is a problem or not without ways to reproduce it.. Hi all,\nI will close this issue since we have not gotten feedback that can help us reproduce the issue and therefore act on it.\nIf someone has a way to provide the complete docker commands and a test script to reproduce the issue, feel free to post it here and we will happily reopen the issue to start investigating it.. Ah, I see that you are using caps['chromeOptions'] = {'args': ['--window-size=1280,1024']}\nPlease try to add the prefix goog:, like this:\ncaps['goog:chromeOptions'] = {'args': ['--window-size=1280,1024']}\nThis comes from the W3C, browser capabilities are now prefixed.. I am sorry if something broke due to changes in the project. We basically put the grid in containers so it is also a good idea to keep an eye on the changelog for Selenium releases.\nAbout the DesiredCapabilities.CHROME, it should actually do it. For example I use Java and the capability looks like that, so I don't need to handle any extra layer. Please double check that the most recent version of the bindings you are using also do the same. And if not, it'd be great if you can report that as a bug to the main project. \nIn general, one should try to use the same version of the bindings on the client side as on the server side, so compatibility is maintained. But yes, maybe it could be a bug. . Hi @tnguyen14,\nYes, the image should work without the need of --privileged, I had no clue that it was needed in SELinux (since you need to mount /dev/shm).\nLet me ask two questions:\n- Is the test environment too sensitive that you cannot use --privileged? \n- What happens if you set the shm size instead of mounting it? E.g. docker run ... --shm-size=2g. Good! The effect should be the same one.\nI think we can close this issue then, right?. I updated the README to highlight the importance of using either /dev/shm or --shm-size.\nBoth work and have the same effect, I guess that there are cases like the one you mention where only one works.\nI'll close the issue since we documented it better.. Hi @danbo,\nI know it is helpful to have something like that, but so far we have seen it is not a common use case and the need is supplied with VNC clients. Overall, what we try to do is to keep the images as generic as possible.\nIf you really need this feature, why don't you try this image: https://github.com/elgalu/docker-selenium, it has the feature you are looking for.\n. PS: Thanks for the link in your comment, looks interesting and I didn't know those images.. Hi @mr-raptor, if you check inside the container, does it look like what is mentioned in #329?  . @mr-raptor could you please give us a script that we can run and then reproduce the issue? Thanks!. Thanks @barancev! . I'll close this one since it will be released in 3.9 and we release the images shortly afterwards.. Hi @referup-tarantegui,\nWe don't make changes to old releases but rather improve the current one and make a new release. I'd suggest you try to upgrade to Selenium 3 since Selenium 2 is not really supported anymore.\nIf this is not an option for you now, you could update the dockerfiles and build them up with the versions for your use case.\nClosing this issue since those images are not supported anymore.\n. Hi @Jiff21,\nTo have a workaround for that issue, to increase the shm is the only option. Which can be done by sharing the /dev/shm/ or setting --shm-size=2g at the docker run command.\nAre those options not possible in gitlab runner?. Seems that you can mount a volume, right? https://docs.gitlab.com/runner/configuration/advanced-configuration.html#example-2-mount-a-host-directory-as-a-data-volume, but I am not 100% sure if the effect is the expected one since I've never used GitLab runner.\nMounting the shared memory is a workaround to the situation where the default shm value in docker is 64MB (many other images need the same workaround). Chrome and Firefox need more than that to run properly, we clarify this a bit in the README.\n. Closing this issue since the OP didn't report any more activity.. @JalilArfaoui it is really needed to share the shm with the container, otherwise Chrome/Firefox won't run properly. More info at https://github.com/SeleniumHQ/docker-selenium#running-the-images. Hi @barahate90,\nCan you please show us you are starting the docker-selenium images? Also how the test script looks like? . Closing this one since we didn't get more information from the OP. \nIf the problem persists, please post the docker commands used and a script that can help us reproduce the issue. Thanks.. We should squash and merge the PR when the review is complete, the commit history is a bit messy.. Cool, thanks for reviewing @ddavison!\nI'll merge tomorrow and prepare a release. . Hi @cherrym0856,\nI think you are not using any of the docker-selenium images from this repo.\nFor example, you are using Chrome=63.0.3239.84 with ChromeDriver=2.29.461591 on Windows NT 10.0.15063 x86_64. And we don't have an image like that.\nIf you are having any issues with the docker images, feel free to open an issue providing enough information for us to help with it.. Closing due to lack of feedback from OP. If there is more information available, feel free to reopen.. Hi @zuernBernhard,\nYou are facing this issue: https://github.com/SeleniumHQ/docker-selenium/issues/511\nAnything with localhost Chrome will resolve it locally, try to change that entry to something different.. Glad it worked out!. Hi @ViljarVoidula,\nCould you please help us by providing:\n The docker command used to start the containers\n A reduced sample code that we can use to reproduce the issue? It would be nice to have a little setup with Nightwatch.\n. Hi @ViljarVoidula,\nI used your project and I bumped into the same error. So I tried to figure out if there was some option making that error happen and in short, I was not able to figure it out.\nSo I decided to create my own small Nightwatch project, with the smallest config, to see if it still happens, and yes, the error also shows up:\n```\nError retrieving a new session from the selenium server\nConnection refused! Is selenium server started?\n{ value:\n   { sessionId: '4f0b9151-0cef-4077-abc4-23c37e6a157b',\n     capabilities:\n      { 'moz:profile': '/tmp/rust_mozprofile.747gDtpG7DQP',\n        rotatable: false,\n        timeouts: [Object],\n        pageLoadStrategy: 'normal',\n        'moz:headless': false,\n        'moz:accessibilityChecks': false,\n        acceptInsecureCerts: false,\n        browserVersion: '57.0.4',\n        platformVersion: '4.9.60-linuxkit-aufs',\n        'moz:processID': 100,\n        browserName: 'firefox',\n        platformName: 'linux',\n        'moz:webdriverClick': false } } }\n```\nAfter that, I tried with a small setup for WebDriverIO, and no error happened.\nThese are the couple of projects https://github.com/diemol/docker-selenium-issues/tree/master/issue-646\nI also tried to start a local grid without docker, by doing:\njava -jar selenium-server-standalone-3.8.1.jar -role hub\njava -jar selenium-server-standalone-3.8.1.jar -role node\n(I have FF 57.0.4 and GeckoDriver 0.19.1 locally installed).\nand the same error happened when running the Nightwatch test.\nSo I suspect that the problem is actually related to Nightwatch, and I'd recommend that you create an issue in their repo because it looks like those bindings are having some issue with the latest Selenium version.\nSince this is not a docker-selenium issue, I'll go ahead and close this issue. \n. Hi @sahil1610,\nCan you share with us the docker command you are using to start the container?\nI can actually see in the log you posted that the parameter is being received:\nappending selenium options: -enablePassThrough false\nWhy do say that it was not set? . Hi @sahil1610,\nI tried with this docker-compose file:\n```\nTo execute this docker-compose yml file use docker-compose -f  up\nAdd the \"-d\" flag at the end for deattached execution\nversion: '2'\nservices:\n  firefox:\n    image: selenium/node-firefox:3.8.1-dubnium\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    environment:\n      - HUB_HOST=hub\n      - no_proxy=localhost\n      - TZ=Europe/London\nchrome:\n    image: selenium/node-chrome:3.8.1-dubnium\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    environment:\n      - HUB_HOST=hub\n      - no_proxy=localhost\n      - TZ=Europe/London\nhub:\n    image: selenium/hub:3.8.1-dubnium\n    ports:\n      - \"4444:4444\"\n    environment:\n      - SE_OPTS=-enablePassThrough false\n``` \nand the value enablePassThrough is set to false in the hub.\nIf you were referring to the nodes, it seems that no matter what you set, the value will be shown as true. But according to my checks, the important value is the one set in the hub.\nAdditionally, I also found out that this flag will be removed in the next Selenium release, which means that \"enablePassThrough=true\" always.\n. Hi @sahil1610,\nYesterday I found out that even if in the node it shows enablePassThrough=true when you pass SE_OPTS=-enablePassThrough false, the setting works. So please try it like that:\n```\nTo execute this docker-compose yml file use docker-compose -f  up\nAdd the \"-d\" flag at the end for deattached execution\nversion: '2'\nservices:\n  firefox:\n    image: selenium/node-firefox:3.8.1-dubnium\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    environment:\n      - HUB_HOST=hub\n      - no_proxy=localhost\n      - TZ=Europe/London\n      - SE_OPTS=-enablePassThrough false\nchrome:\n    image: selenium/node-chrome:3.8.1-dubnium\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    environment:\n      - HUB_HOST=hub\n      - no_proxy=localhost\n      - TZ=Europe/London\n      - SE_OPTS=-enablePassThrough false\nhub:\n    image: selenium/hub:3.8.1-dubnium\n    ports:\n      - \"4444:4444\"\n    environment:\n      - SE_OPTS=-enablePassThrough false\n``` \nI also saw your comment in https://github.com/SeleniumHQ/selenium/issues/4665, so if after trying again, you still have the issue. I'd recommend open an issue in the main Selenium repo with a clear way to reproduce the problem.\nRegarding docker-selenium, I think it is clear that it is not an issue of the images. I'll leave this issue open for a couple of days in case you have more feedback, and after that I'll go ahead and close it.\n. Hi @grafa,\nWhen using the docker-selenium images, the ideal approach is to benefit from the immutable infrastructure concept that docker offers. \nThis means that it is preferred to have short-lived containers running the grid, and when you are done with your tests, throw them away. \nIf you keep them running for a long time, you can end up with similar problems as a non-docker grid (spawned threads in memory caused by some crashed processes that were not cleaned).\nI'd suggest you to try that approach, and if you still have questions, you can post them in the Selenium Google Group and also join the community chat on IRC/Slack.\nI'll close the issue, and we can continue the conversation in one of those channels.. Hi @AlinaIo,\nCan you please post the script directly on the GitHub issue? Attachments per email don't work.\nPlease also show us how you are starting the containers (docker run... commands).  . I haven't tried the code, but after checking the docker-compose file, I think the /dev/shm:/dev/shm mount is missing.\nCan you please check this docker-compose sample, add the mount in yours and try again?\nhttps://github.com/SeleniumHQ/docker-selenium#via-docker-compose. Cool, I am glad it works for you!. Hi @liyuanzao,\nDo you know if this also happens with the latest images (3.8.1-erbium)? \nAnd does this happen always or does one need to execute the script several times?  . Hi @liyuanzao and @xMutaGenx,\nI tried to reproduce the issue by creating a script, see https://github.com/diemol/docker-selenium-issues/tree/master/issue-651 (using docker since I don't want to install php on my laptop).\nand I reached the point where I get an error that says:\nFatal error: Class 'Tests\\TestCase' not found in /wd/src/SimpleTest.php on line 10\nI have no clue on how to run tests with php, could you please help me out so I can reproduce the issue and see what's going on?\n. As an additional comment, I was trying something with a different Framework (Serenity), and I got the error of UnknownServerException: Session [(null externalkey)] not available and is not among the last 1000 terminated sessions. when I used Firefox, with Chrome it worked well.\nThen I tried with the Java and JavaScript bindings, and things worked out with both browsers.\nWhich makes me think, that the issue might be with the PHP bindings. \n@liyuanzao @xMutaGenx did you also post the issue in the PHP bindings repo?. Yeah @xMutaGenx, that is what thought because I was not able to reproduce with any of the other bindings. \nSince we see that it is an issue with the PHP bindings, I think we can close the issue here, right?. Someone helped us an created an issue already https://github.com/facebook/php-webdriver/issues/523. Hi @liyuanzao, @xMutaGenx \nSeems it gets solved by passing the flag -enablePassThrough false to hub and nodes. Check\nhttps://github.com/facebook/php-webdriver/issues/523#issuecomment-360299646 \nSo it was identified that it is an issue with the bindings, so I'll close this one.. Good point, I'll link your comment to the binding's repo @barancev . Hi @varp,\nHow does your test look like? Probably the urls used in it should use the app name as well, right? . Sorry we didn't have time to check it, but glad it works @varp :). Hi @olexandrd,\nI think the issue is that the hub is not ready to receive any test requests when you are running the tests.\nIn the docker-compose file, all containers start at the same time. So probably the tests start running when the Selenium standalone is still starting up. You can check this link from docker that gives some advice on how to make sure the services are ready before using them. To start debugging, maybe you can add a sleep before your tests start and see if that is the root cause, if so, maybe implement one of the options mentioned in the link.\nI'll leave this issue open for a few days in case you have some feedback.. Hi @madjam002,\nI think you are right, this behaviour is not related to the amount of available resources. This is more the consequence of a couple of things:\n- In the docker-compose file, I see only one node that is able to hold 5 sessions. If you queue 200 tests, only 5 will be processed at the same time. Adding more nodes to the set up will help the hub to handle the long queue and have more resources to serve the web console.\n- When the hub receives a new test, it puts the new test in a queue. Then it starts going through the queue, trying to find a free node to send the test. In this case, the hub is going over the 200 test queue and looking for a slot where to run the test, with only 5 slots in one node. So it spends most of it resources doing that, and serving the web console starts to fail.\nSo I'd recommend to add more nodes to the setup, and tune the infrastructure in order to distribute evenly the load you have planned for it. Basically, that's the main idea of the grid.\nTo be honest, I think there is nothing that can be changed in the docker images to improve that. Some changes are being done in the grid to improve things, but these changes should be visible in future releases. In the end, this situation I think is more about the setup for your tests than the hub itself.\nI'll leave this issue open for a few days in case you have some feedback.. Closing since we didn't get more feedback from the OP.. Hi @psmod2,\nI see that the sent capability is named chromeOptions, could you please try again with goog: chromeOptions?. Hi @individual-it,\nYou are right. I don't know why the Dockerfiles are like that but it makes sense to change them so the LANG is set properly.\nWe are evaluating to merge both normal and debug images, depending if there is a performance impact or not. That would solve several issues that come from slightly different configurations.\nWe'll figure it out in the following weeks, for now please use the debug image. I'll leave this issue open until we decide about merging the images.. I just moved the config to the normal images from the debug images, since this is causing different behaviours which should not be the case.\nIt will be released soon.. Hi @bscheshirwork,\nSorry, I have not used  Codeception so I don't know how to reproduce this issue.\nIs it possible for you to provide an environment where we can run your test and reproduce the issue? Therefore we can find the root cause and work it out. A Dockerfile with php and additional dependencies would be great.\nPS: Have you tried to do the same in a different language? Just to isolate the issue and identify if it happens always with the docker images or if it only happens with the PHP bindings.. Thanks for creating the issue in the Codeception repo, I was going to ask just that :)\nI've seen a few of small errors and it is mostly related to 3rd party bindings. . That's great, happy it works for you.. Hi @ematta,\nIf I understand correctly, the the behaviour of browser.close()in WebDriverIO, according to their docs is:\n\nClose current window (and focus on an other window). If no window handle is given it automatically switches back to the first handle.\n\nWhich I understand as just closing the window but not quitting/ending the browser process. \nI think WebDriverIO quits the browser when the test finishes, no need to actually declare it.\nCan you please double check that?. Closing due to inactivity.. Well, I am not sure how to proceed here, because installing ffmpeg in the images just opens the door to enabling video recording, and that is another layer of complexity that I am not sure if we want to support for now. We try to keep the images as generic as possible and I don't know how common this use case is :)\nIn addition, the image size would increase and I'm not so sure about doing that...\nMy suggestion for now would be to use elgalu/selenium image, which already contains the packages you need.\nWhat do you think?\n. @ViljarVoidula, sorry for coming back so late to this issue.\nWe really prefer to keep it out of the images, for example we added a package for (perhaps) a similar purpose, see #614... And it seems this broke in FF 58, but we cannot do anything about it plus we need to maintain it. Additionally, no one reported the issue since it seems no one is using it.\nThat is why we encourage users to extend these images and make them fit their needs for their use cases. Therefore, the more things we add, potentially we could break use cases created by extending these images.\nI think your suggestion is a good idea, perhaps adding a small notes section at the end with those type of comments is helpful. If you feel like adding it, we could happily receive a PR for that.\nAgain, sorry for the long wait, and we hope you understand. \nClosing the issue...\n. Thanks for your contribution @niQo! . Hi @shames0, \nPlease try to use the goog: prefix in 'chromeOptions' => {.\nLike this goog:'chromeOptions' => {.\nI am not sure if the Ruby bindings provide something like this natively.. Nice, I am glad it helped :). Hi @ad-m,\nBuilds are not done in Docker Cloud since a while ago, we use Travis for building and pushing releases.\nCheck https://travis-ci.org/SeleniumHQ/docker-selenium to see logs and more.\nI'll close the issue since this is not really an error or an action item for us to work on :). Hi @izbatt,\nI have seen in the recent weeks similar issues with Firefox related to Behat, PHP bindings and Serenity. So in general with bindings that need to adjust something to work with the new firefox changes.\nYou could also #653, maybe it is related.\nIf not, could you please create an issue in the Behat repo and link it here, so we can follow the issue there.. I was just reading the related issue in the Behat repo, so it seems they just pointed our the PHP bindings in a different repo :)\nHave you had any luck there @izbatt? \n. Hi @diamantn,\nThe way Grid works, you actually need to tell the node where the Hub is, we are now providing an example on the README with docker-compose.\nBefore, we were assuming of the environment variables that get created when containers are linked. These environment variables work in docker-compose files with version lower than 2, but since that version it they don't created anymore. Besides that, docker mentions in their docs that linking is a deprecated functionality, that's why we are trying to move away from it.\nThe workaround you mention is actually the way to do it :)\nI'll close this issue since there is no action item for us.. That's actually a good point, I just updated all the docs in Docker Hub, they now point to this repo.. Thanks @barancev, the idea is to release both, just in case. . @ebennett98 the Grid knows how to handle it, you just need to check that your Java bindings version is fairly recent. . Hi @bscheshirwork,\nThis is an issue with the PHP bindings, seems that it is not able to work properly with the most recent Selenium versions. Here are some issues that explain the same issue, hopefully they can work it out so users are able to move to more recent versions of Selenium.\nhttps://github.com/Codeception/Codeception/issues/4780\nhttps://github.com/SeleniumHQ/docker-selenium/issues/651\nhttps://github.com/facebook/php-webdriver/issues/525\nhttps://github.com/facebook/php-webdriver/issues/462\nI'll close this issue since there is not an action item for us to work on. . Hi @bscheshirwork,\nI understand that from your perspective it looks like an error in Selenium. What I can see from the output and the related issues is that while the bindings used stay on the same version, the Selenium version is increased, and in short, this difference in versions between client and server are causing the errors.\nSelenium and the drivers(ChromeDriver in this case) on the server side is iterating on every release to adjust more to the W3C standard, and if you check the official bindings, they also iterating to adjust to the W3C specifications. Nevertheless, in some cases 3rd party bindings (like PHP) are not adjusting as fast as the official ones.\nSo basically, the client version of the bindings used there is not ready to use the current Selenium version on the server side. Of course, I can be wrong, therefore If you still think that this should be working, please create an issue on the main Selenium repo with a reproducible test case. \nIn the end, the docker-selenium project just put the Selenium jar and browsers in images for public use.\n. Hi @omz-one,\nThanks for this PR! Did you check how much bigger the image gets? . Hi @omz-one,\nCould you check my comment? In addition, why is the change made on the Base dockerfile? Shouldn't it be done on the NodeBase dockerfile?. OK, so the images grow around ~25MB, which is ok I think, considering that a bigger user base will be able to render websites that use this character set.\nWe'll merge it but then move the two fonts to the NodeBase dockerfile.. Before:\n\nAfter:\n\n. Hi @chris-tn,\nThanks for referencing the other issues, and yes, hopefully this gets fixed soon in Nightwatch and the payload is sent properly (the PHP bindings have currently the same issue).\nI'm closing this issue since there is no action item for us to work on.. Hi @ReneHerrero,\nYes, that should be possible because in the end it is just about placing the file in the right place, either by mounting a volume or creating a new image based on these ones.\nSince this is more a question rather than an issue, please send it to the Selenium User Group.. Hi @l0b0,\nThanks for this PR!\nNevertheless, we would not push a new image with Firefox Developer Edition to Docker Hub. The current images try to be as generic as possible, and this is not a common use case. The idea is that it should work in the same way as the Nightly or Chrome Beta, in the sense that if anyone needs that image, s/he should build it on her/his own.\nHaving said that, this is the part that we would accept. Could you please modify the PR so it only includes that? Thanks!\n. Ah cool, I triggered again the build last night and it worked. Let's merge.\nThanks @l0b0 . It is not exactly that. The idea is to build images only with Chrome+ChromeDriver and Firefox+GeckoDriver, which would be one of the base images for the other Grid images. With the reorganisation done by introducing Supervisor, this is now easier to implement.. @benjaminapetersen I started to work on this, and after a few moments, I realised that there is no need to create new images, all that we need from docker-selenium is already there. In addition, creating new images just increases the complexity of the project and makes it harder to maintain.\nSo, basically, I followed your initial idea, create a Dockerfile having one of the docker-selenium images as base, install node, and run tests. So here it is:\n```Dockerfile\nFROM selenium/standalone-firefox-debug:3.141.0-actinium\nRUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - \\\n  && sudo apt-get install -y nodejs \\\n  && node -v \\\n  && npm -v\nCOPY package.json \\\n  package-lock.json \\\n  test.js \\\n  start-virtual-desktop.sh \\\n  /home/seluser/\nWORKDIR /home/seluser\nRUN sudo chmod +x start-virtual-desktop.sh \\\n  && sudo npm install\nCMD [\"./start-virtual-desktop.sh\", \"node_modules/mocha/bin/mocha\", \"-t\", \"20000\", \"test.js\"]\n```\nAll the files can be found here.\nWhen running this image, it will just execute the sample test provided, but the idea can be followed to run your tests.\nTherefore, I will close this issue since it is already possible to use the docker-selenium images for other use cases, one just needs to shape the Dockerfile properly.. @benjaminapetersen I just saw that you want to run tests with WebDriverIO, and I did the example with WebDriverJS. So you would need to start the Standalone Server as well by adding /opt/bin/start-selenium-standalone.sh to the start-virtual-desktop.sh file (this needs to be done after the /opt/bin/start-xvfb.sh one).. Hi @travisghansen,\nNot really, the idea of the images is to provide a general tool that people can use and extend to suit their needs. In this case, it would be an specific use case, that perhaps fits some users but certainly not all of them. This add-ons make the images heavier and harder to maintain (in this case plugins need to be updated and tested properly before releasing).\nIf feel like giving ir a try, I recommend to take these images as base and then build up on them, you can check this Wiki for further instructions https://github.com/SeleniumHQ/docker-selenium/wiki/Building-your-own-images.\nI'll close this issue since there is not an action item for us to work on.  . Hi @MrTheodor,\nWe are installing openjdk-8-jre-headless in the image, which does not have support for GUI Java apps, that could be the reason why you saw that error. In addition, the idea of the images is to provide a general tool that people can use and extend to suit their needs. If you want to spin more processes inside the container, I recommend to take these images as base and then build up on them, you can check this Wiki for further instructions https://github.com/SeleniumHQ/docker-selenium/wiki/Building-your-own-images\nI'll close this issue since there is not an action item for us to work on.. Besides this not being a Selenium issue... The latest images have ChromeDriver 2.35 and Chrome 64. So it is completely unrelated to the docker-selenium images.\n. Yes, that is a good option to notify that things are up and ready, in addition is one of ways docker recommends to check that everything is up https://docs.docker.com/compose/startup-order/\nHopefully we can add this to the master branch and release it in the next weeks.. Hi all,\nI spent a couple of days in the process of adding a health check to the images, sadly it turned out to be a bad idea because the values for the parameters cannot be configured via environment variables (which was my idea), and to add a health check with default values is not a good idea since we have no clue of what values could work for all environments.\nHappily, docker allows you to specify a health check through the docker run command, so I have documented that in the README through PR #773, and also added a simple script that helps to check if the Grid is up before the tests start.\nThis will be merged to master soon and released afterwards so you guys can use it. . Hi @eyalzek, @loghen41 \nWould it be possible to have a script and the test runner configuration so we can try to reply this? Is this also happening with the latest releases? (3.11.0)? . Would it be possible to have some test scripts as well? I mean, otherwise I need to try to build from scratch the same environment you guys already have there, and this can already oversee the issue that might be causing the final problem. \nThe ideal scenario would be to have a GitHub repo where we can reproduce the issue and do something about it.\nI hope you can understand that we would like to help, but without that information it is very hard to do something efficiently. . I would try to things:\n- First, use a plain grid, without docker. Just to see if the error is directly in Selenium or if there is something we need to improve in the images for this case.\n- Second, I see that both reports have in common the use of 3rd party bindings (WebDriverIO and Protractor), I would also check in their repos and forums for similar problems. Just to isolate the issue and see if it is on the client side (bindings).\nNow about the tests, perhaps the overall test structure can be put in a public GitHub repo. Like the package.json, configuration files, and then a set of simple tests like searching in Google or something like that. If the issue is in Selenium, I would expect that it can be reproducible with this type of configuration.. Hi @eyalzek @loghen41,\nThanks for your effort in debugging the issue! Have you guys found anything related to the images? Seems that it is more related to the available resources, right?\nPlease let us know if there is something specific that can be improved, or a reproducible issue.\nI'll leave this issue open for a few days more in case there are more findings that can help the community. . Hi all,\nApologies for the late reply.\nAfter reading the whole issue again, it just looks like two different things. \nWhat @eyalzek reports is related to the browserTimeout parameter, which was broken for a while and it was fixed in the upstream project recently.\n@loghen41 shows a different issue, where sessions are lost when something fails in a given feature file. I tried to reproduce this with Java/TestNG (which is what I normally use) and I could not. I am not that good in Protactor, I would not know if that happens entirely due to the framework. \nIf this is still an issue, would it be possible to recreate it with plain Selenium code? Without any framework managing or reusing sessions?. Closing as issue become stale.. Hi @pokaalinkanssayohon,\nCould you please provide more information? I just tried it by starting the hub, the node-chrome-debug and doing webDriver.manage().window().maximize(); from the Java bindings and it works.\nIt would be great if you can provide a script and detailed steps on how to reproduce this.. OK, I understand. Nevertheless, we really need more information to have a reproducible case, otherwise we cannot really work on it.\nMy guess is that it could be related to the Robot framework then, but I cannot really assure it. I would check in their user panel or repository if someone has a similar case.\nI'll close this issue since there is no way to reproduce the issue, if more information is provided, please don't doubt to reopen it so we can act on it.. Hi @bscheshirwork,\nPlease check my comment in the referenced issue.\nShortly quoting the comment:\n\nOf course, I can be wrong, therefore If you still think that this should be working, please create an issue on the main Selenium repo with a reproducible test case.\nIn the end, the docker-selenium project just put the Selenium jar and browsers in images for public use.. Hi @ageekymonk,\n\nThanks for submitting this PR. Nevertheless, could you please provide more context? Isn't it just necessary to add the -e proxy_host=proxy.example.com -e proxy_port=8080 -e no_proxy=localhost,*.dev.example.com to the docker run... command? Why is it necessary to change the Chrome start command?. I understand the issue with proxies used in companies, I just would like to understand why the flags -e proxy_host=proxy.example.com -e proxy_port=8080 -e no_proxy=localhost,*.dev.example.com are not enough. . I checked again and I can see that Chrome using the proxy env var, please follow this comment.. Hi @giorgiosironi,\nIf you are looking to build your image with these additional packages, you can either do a new Dockerfile and taking as base one of the docker-selenium images. Another option would be to clone the repo and follow this generic instructions from the Wiki to do if that way.\nAbout merging upstream, so far it looks like not many people are using the containers to test sound or to do something related to sound. That is why, for now, we are suggesting that people take these ones as base and extend them. We are trying to provide a very generic image that can be used for common purposes, and adding specific packages makes thing harder (one person might want a different package for the same purpose, or it could cause conflicts for users who are already extending the image, and it makes the images harder to maintain).\nI'll leave this issue open for a few days in case you'd like to report more findings that can be relevant for some people.. Hi @schmunk42,\nThat actually could be helpful for users, if you already built a custom Dockerfile, why don't you submit that change and we could merge it upstream? \nMaybe it can be either to disable the password or to set a different password.. Thanks @testphreak! . Hi @Larry19b,\nThe folder is created when something is downloaded, not before. \nPlease check and let us know. . Hi @Larry19b,\nI tried to reproduce what you describe, executing it on Mac OSX but with the latest release (3.11.0-bismuth), and the downloaded file was there.\nYou can check the code I used here: https://github.com/diemol/docker-selenium-issues/tree/master/issue-628, you could clone the repo and try to run it via the docker-compose file.\nIf it does not work, feel free to comment or reopen this issue.. Hi @schmunk42,\nAfter reading the link, I am not sure how to proceed, is this a common case?  . This seems to be the same thing that happens in environments like OpenShift, therefore, in theory #787 would fix this issue.. #787 was merged and released already, was this solved for you?. I'll close this one and in case you see any issues, please feel free to reopen.. Hi @schmunk42,\nThanks for the PR! We'll do a review during the weekend to merge and then release. . Hi @ankitrathi85,\nAs you can see in the image, the node reports itself with the internal IP that it has in the docker VM (176.18.0.2). But the IP, as you mention, that should be used to access the node is 192.168.99.100.\nWhen having this non-typical configurations, it is necessary to tell the hub where to find the node as well. For that, please check the section https://github.com/SeleniumHQ/docker-selenium#selenium-hub-and-node-configuration-options, where the remoteHost option is explained.\nI'll close this one since this was a question rather than an issue. For questions, you can post them in the Selenium Google Group and also join the community chat on IRC/Slack.. Hi @testphreak,\nThanks for the PR! We'll do a review during the weekend to merge and then release with the new FF version 59.0.2. Just tested it and it works! Thanks @testphreak . Hi @Larry19b,\nYou mention that you are running docker on a Mac OSX, and somehow you need to execute every docker command with sudo. This seems like a misconfiguration in your mac, the first result from Google points to https://stackoverflow.com/questions/40325352/why-am-i-forced-to-run-docker-with-sudo-on-os-x.\nBesides helping a bit with the link above, there is not much in our area that we can do. I'll close this issue since there is no action for us here.. Hi @Shinoby1992,\nWhat is happening with that approach is that CMD [ \"python\", \"-u\", \"pythonscript.py\" ] is replacing entry_point.sh, so it never gets executed.\nOne approach would be to edit the entry_point.sh and invoke the Python script at the end of it (but making sure that Selenium has started properly).\nSince this is more a question than an issue, I'll go ahead and close it since there is no action for us here.\nFor questions, you can post them in the Selenium Google Group and also join the community chat on IRC/Slack.. Hi @AumCoin,\nI understand the frustration that can be caused by having something working and after a while or updating it, it does not work as expected anymore. Selenium and the drivers are going through a series of changes towards the proposed W3C WebDriver standard, and these changes brought some issues to Firefox, most of them should be by now in theory fixed.\nHowever, I would appreciate that we keep a friendly tone when reporting issues, this just makes things easier and more pleasant.\nNow, we are here to help and improve things in any way we can. To help you, we would actually need more specific information about the issue(s) you are running into (which is the purpose of the issue template). So, whenever you can, please let us know what docker commands were used to start the image, what Selenium bindings are you using, and if possible a small test to reproduce the issue.\nI also invite you to contribute, whenever you see an issue or something that can be improved (documentation or code), don't doubt to create an issue here or send a pull request. You can also join us in the Selenium IRC/Slack Channel, where lots of people are present and can help in different ways.\n. I'll close this issue since we didn't get more information about it. Feel free to reopen if more details are provided.. Hi @kvetko,\nThis is a duplicate of #615, please check the solution there. . I'll close this issue based on the comments mentioning that things have improved in recent versions. Nevertheless, if someone still sees the issue happening, feel free to comment, or better to open a new issue.. Thanks @DamolAAkinleye for the hint!\nBasically, what happens is that there seems to be a bug in docker-compose that is producing this. The whole workaround can be implemented like this:\nThis is the docker-compose file:\n```\nversion: '3'\nservices:\n  firefox:\n    image: selenium/node-firefox:3.12.0-cobalt\n    volumes:\n      - /dev/shm:/dev/shm\n    shm_size: '2gb'\n    depends_on:\n      - hub\n    environment:\n     HUB_HOST: hub\nchrome:\n    image: selenium/node-chrome:3.12.0-cobalt\n    volumes:\n      - /dev/shm:/dev/shm\n    shm_size: '2gb'\n    depends_on:\n      - hub\n    environment:\n      HUB_HOST: hub\nhub:\n    image: selenium/hub:3.12.0-cobalt\n    ports:\n      - \"4444:4444\"\n```\nSo, before doing docker-compose up, set the env var set COMPOSE_CONVERT_WINDOWS_PATHS=1, and then docker-compose up.\nRelated issue: https://github.com/docker/for-win/issues/1829. Hi @vikassahnimca,\nCould you please fill the information requested in the issue template? For example, in this case, we don't know which tag of the images is being used, how the docker command to start the images look like, and so on... With more information it is easier to understand your scenario and see how we can help. . Closing since we didn't get more feedback from the OP.. @ZainabSalameh thanks for the PR, have you checked that the build fails? The tests are not passing. Could you have a look?\n(I did not comment before since I was waiting for you to check the build).. Looks good now @ZainabSalameh, thanks for the contribution . @MacCracken please reference the variables HUB_HOST and HUB_PORT instead of HUB_PORT_4444_TCP_ADDR and HUB_PORT_4444_TCP_PORT. Looks good, thanks @MacCracken! . Hi @bartonhammond,\nYes, some packages are installed with root and only a few with seluser, so for your use case probably you need the root user. . CI worked with new versions.. Hi,\nCould you please confirm if this is the same issue you are experiencing?\nhttps://github.com/SeleniumHQ/selenium/issues/5908\nBecause it does look as an issue in the Grid itself, and what docker-selenium does is just to put the Grid in a container. . Yes, let's follow that one since we cannot really do something there.\nThanks for being active and poking us about it, otherwise this issue would be still stale.\nI'll close this one in favor of the linked issue.. Hi @gabe-connolly,\nSorry for the late reply, I can see in the sent capabilities this:\n\nCapabilities {browser: \nfirefox, browserName: chrome, browserVersion: 9, deviceOrientation: portrait, deviceType: tablet, ignoreZoomSetting: false, name: Behat feature suite, selenium-version: 2.31.0, tags: [lcdockertest, PHP 7.2.4], version: 9} (Behat\\Mink\\Exception\\DriverException)\n\nAnd it is not possible for docker-selenium to fulfil a capability request with two browsers and a version so old.\nPlease double check the configuration for the tests you are running.\nFeel free to reopen if there is a bug related to the docker containers. . Hi @benpetsch,\nCould you please clarify what running via \"flask app\" means? Perhaps describe the scenario more so we can find a way to help.. Closing since we didn't get more info from the OP.. Hi @vv-p,\nWould you like to send a PR for this? It theory it is just to change the apt command for apt-get . Closed via https://github.com/SeleniumHQ/docker-selenium/commit/c3263940d5d2956b85e1d9ba8e0457fe95050344. Thanks @vv-p! . Oh, it seems that the user associated with the commit won't be shown in the contributors of the project. If you care about that, you can associate the email address to your GitHub account.. Never mind, with the squash it should do it.. Hi @lcnja,\nThanks for contributing! Nevertheless, two things:\n The build fails now, please have a look.\n More importantly, thanks to this comment we know that tini is already included in docker. The pending task is to document how to use it with the docker-selenium images.. @lcnja \nTo be more clear, according to the documentation, there is no need to install Tini. If you want, you could contribute with a PR documenting how to use it with the docker-selenium images. . Thanks for your contribution @kmala! . Hi @mlagran1,\nI suppose that the matcher can not find a match for \"version\": \"*\", you should avoid it or either specify the exact version of the browser you need. . Thanks @lmtierney for pointing that out!\n@mlagran1 I will close this issue in favour of the one in the minkphp repo, since needs to be solved first to allow you to use the docker-selenium images (and Grid) properly.. Also to point out that the difference between 3.12.0-americium and 3.12.0-boron in Chrome related terms is the Chrome version (from 66 to 67) and the ChromeDriver version (from 2.38 to 2.39).\nI think the issue could be related to one of those upgrades.. Hi @Perlence,\nIt seems this was a bug introduced by ChromeDriver 2.39, which was fixed in their 2.40 release, see release notes here.\nWe recently released a version of the docker-selenium images where ChromeDriver 2.40 is present.\nhttps://github.com/SeleniumHQ/docker-selenium/releases/tag/3.12.0-cobalt\nI will close this issue since this was a bug in ChromeDriver and not related to the docker-selenium images.. Hi all,\nYes, this was a change in the upstream project where all the downstream projects had to adjust. The reasons why the change was done are out of my reach, but in the end it was done and here in docker-selenium we had to adjust the \"host\" parameter in the hub as well.\nThe original issue was the port being used when starting the hub, and the Jenkins project as a downstream project needs to adapt as well.\nThe other posts are related to nodes which are not related to the original issue. Would it be possible to have separate issues that mention only those ones with clear ways to reproduce them? For that, it will be ideal if you create a new issue with the template completely filled.. Closing as we didn't get replies to the last comment. \nFor the comments related to nodes, feel free to open a new issue with all the needed details to reproduce any potential problem.. Hi @schoolboytom,\nTo build the images yourself, please follow\nhttps://github.com/SeleniumHQ/docker-selenium#building-the-images\nand \nhttps://github.com/SeleniumHQ/docker-selenium/wiki/Building-your-own-images\nif any issue is found after following those instructions, please feel free to open a new issue. . Thanks @jsa34!\nCould you please double check that you have signed the Contributor License Agreement? I ask since the checkbox is not marked.\n. Hm, tests are not passing. Clearly it is not related to your commit, but something on the Grid might have changed and we need to update the way it is started. \n@jsa34 I can have a look in 2-3 days, but if you feel like debugging a bit, you can build the images locally and start the containers one by one and see what the problem might be.. @jsa34 I think that was not the real error. I think that empty string in the GeckoDriver we got in the previous run was due to the GitHub Api being over the quota, and then the curl returns nothing when the releases were queried.\nI just ran the build again and we got the same errors as the first time, so the tests are failing. I will do some debugging and will let you know.. Hi @mikebski,\nCould you please post a more complete docker-compose file? I tried it and I just got a bunch of errors. In addition, we miss all the information about the OS and how the stack is started.\nBasically, please fill the template to create issues so we can check if there is something wrong. . Closing as we didn't get an answer. If there is still an issue, feel free to comment and reopen with a clear way to reproduce the issue.. Right, if the variable is already quoted I imagine it will fail. It just happens that for the 3.13 release the validation of parameters needs the value to be quoted.\nWill fix it and release soon.\nThanks for reporting it @triesz . The previous comment was based on the snippet you pasted on the commit comment, I will try to reproduce and then I'll report back.. I just tried with this docker-compose file:\n```\nversion: '2'\nservices:\n  chrome:\n    image: selenium/node-chrome:3.13.0\n    links:\n      - selenium-hub:hub\n    ports:\n      - 5900:5900\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - selenium-hub\n    environment:\n      HUB_HOST: hub\n      HUB_PORT: 4444\n      SE_OPTS: -timeout 65 -browserTimeout 60 -browser browserName=chrome,maxInstances=1,platform=LINUX,applicationName=chrome-1\n      REMOTE_HOST: http://chrome:5555      \nselenium-hub:\n    image: selenium/hub:3.13.0\n    ports:\n      - \"4444:4444\"\n```\nand I got the following output:\nCreating network \"issue-755_default\" with the default driver\nCreating issue-755_selenium-hub_1 ... done\nCreating issue-755_chrome_1       ... done\nAttaching to issue-755_selenium-hub_1, issue-755_chrome_1\nselenium-hub_1  | starting selenium hub with configuration:\nselenium-hub_1  | {\nselenium-hub_1  |   \"host\": \"0.0.0.0\",\nselenium-hub_1  |   \"port\": 4444,\nselenium-hub_1  |   \"role\": \"hub\",\nselenium-hub_1  |   \"maxSession\": 5,\nselenium-hub_1  |   \"newSessionWaitTimeout\": -1,\nselenium-hub_1  |   \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\nselenium-hub_1  |   \"throwOnCapabilityNotPresent\": true,\nselenium-hub_1  |   \"jettyMaxThreads\": -1,\nselenium-hub_1  |   \"cleanUpCycle\": 5000,\nselenium-hub_1  |   \"browserTimeout\": 0,\nselenium-hub_1  |   \"timeout\": 30,\nselenium-hub_1  |   \"debug\": false\nselenium-hub_1  | }\nselenium-hub_1  | 21:08:35.083 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.13.0', revision: '2f0d292'\nselenium-hub_1  | 21:08:35.086 INFO [GridLauncherV3$2.launch] - Launching Selenium Grid hub on port 4444\nchrome_1        | Connecting to the Hub using the host hub and port 4444\nchrome_1        | REMOTE_HOST variable is set, appending -remoteHost\nchrome_1        | appending selenium options: -timeout 65 -browserTimeout 60 -browser browserName=chrome,maxInstances=1,platform=LINUX,applicationName=chrome-1\nselenium-hub_1  | 2018-07-31 21:08:35.534:INFO::main: Logging initialized @951ms to org.seleniumhq.jetty9.util.log.StdErrLog\nselenium-hub_1  | 21:08:35.745 INFO [Hub.start] - Selenium Grid hub is up and running\nselenium-hub_1  | 21:08:35.747 INFO [Hub.start] - Nodes should register to http://172.18.0.2:4444/grid/register/\nselenium-hub_1  | 21:08:35.747 INFO [Hub.start] - Clients should connect to http://172.18.0.2:4444/wd/hub\nchrome_1        | 21:08:35.999 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.13.0', revision: '2f0d292'\nchrome_1        | 21:08:36.005 INFO [GridLauncherV3$3.launch] - Launching a Selenium Grid node on port 5555\nchrome_1        | 2018-07-31 21:08:36.178:INFO::main: Logging initialized @675ms to org.seleniumhq.jetty9.util.log.StdErrLog\nchrome_1        | 21:08:36.380 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555\nchrome_1        | 21:08:36.380 INFO [GridLauncherV3$3.launch] - Selenium Grid node is up and ready to register to the hub\nchrome_1        | 21:08:36.445 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms.\nchrome_1        | 21:08:36.446 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://hub:4444/grid/register\nselenium-hub_1  | 21:08:36.875 INFO [DefaultGridRegistry.add] - Registered a node http://chrome:5555\nchrome_1        | 21:08:36.997 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use\nThe difference I see is that I specify the docker-compose file version. Could that be the issue?. Hi @venkatasykam,\nSome docs have been added to clarify this https://github.com/SeleniumHQ/docker-selenium#increasing-the-number-of-browser-instancesslots\nThere is also a docker-compose file that can be used as an example here: https://github.com/diemol/docker-selenium-issues/blob/master/issue-757/docker-compose.yml . @jerrylizilong \nPlease check the ChromeDriver versions used in the docker images you are using, then try to reproduce the issue locally directly with Chrome using the ChromeDriver versions you found, if it is failing there, report the issue (if it does not exist) to the ChromeDriver project.\nIf it did not fail, please try to reproduce using the plain Selenium Grid jar (no docker) and the versions of ChromeDriver. If it fails there, please report to the upstream Selenium project filling the complete template. . Thanks for replying @jerrylizilong, then I would suggest to report it to the Chrome team if the issue does not exist yet.\nClosing. . Thanks for the PR @jsa34! . Hi @wck821829906,\nPlease open a new issue and filling up the template. The information provided here is not enough. Also, please provide a script to reproduce the issue.. Hi @toolowner,\nThe issue lays down to the fact that using --net=host and using HUB_HOST=selenium-hub won't work, as the Chrome container will try to register to the name selenium-hub, which does not exist in the \"host\" network, and would only exist in the network that docker-compose creates.\nTo have this working, just set HUB_HOST=localhost or add selenium-hub pointing to localhost in your /etc/hosts.. @wck821829906 \nCan you please provide the exact docker run commands you used for step 1, and a script or GitHub repository with instructions for step 2. We are not robot framework users, so we don't know how to reproduce the issue.. @wck821829906 \nI just tried the repository you mentioned and all the steps to run the test, I didn't get that error, but I got this log:\n```\n pybot .                                                                                                                                                                                                               \ue0b2 \u2714 \ue0b2 10050 \ue0b2 22:20:56\n==============================================================================\nTestProject-master\n==============================================================================\n[ ERROR ] Error in file '/Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestSuite.txt': Importing test library 'ZAPublicLibrary' failed: ImportError: No module named ZAPublicLibrary\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/bin\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python27.zip\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/plat-darwin\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/plat-mac\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/plat-mac/lib-scriptpackages\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/lib-tk\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/lib-old\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/lib-dynload\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/site-packages\n[ ERROR ] Error in file '/Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/resource.txt': Importing test library 'ZAPublicLibrary' failed: ImportError: No module named ZAPublicLibrary\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/bin\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python27.zip\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/plat-darwin\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/plat-mac\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/plat-mac/lib-scriptpackages\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/lib-tk\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/lib-old\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/lib-dynload\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac\n  /usr/local/Cellar/python/2.7.14_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages\n  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/TestProject/lib/python2.7/site-packages\nTestProject-master.TestSuite\n==============================================================================\nTestCase                                                              | PASS |\n\nTestProject-master.TestSuite                                          | PASS |\n1 critical test, 1 passed, 0 failed\n1 test total, 1 passed, 0 failed\n==============================================================================\nTestProject-master                                                    | PASS |\n1 critical test, 1 passed, 0 failed\n1 test total, 1 passed, 0 failed\n==============================================================================\nOutput:  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/output.xml\nLog:     /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/log.html\nReport:  /Users/diemol/Projects/github.com/diemol/docker-selenium-issues/issue-763/TestProject-master/report.html\n```\nI started the hub and the node with the following docker-compose file:\n```\nversion: '2'\nservices:\n  chrome:\n    image: selenium/node-chrome-debug:3.14.0-arsenic\n    volumes:\n      - /dev/shm:/dev/shm\n    ports:\n      - \"5900:5900\"\n    depends_on:\n      - hub\n    environment:\n      HUB_HOST: hub\nhub:\n    image: selenium/hub:3.14.0-arsenic\n    ports:\n      - \"4444:4444\"\n```\nAnyway, I could not reproduce what you mention at all. If you want, please provide the logs of the docker containers and a clear way to reproduce the issue, otherwise it is a bit complicated for us to help.. Thanks @nicolaiparlog !. Hi @ybizeul, is there something we could do to help? I mean, my first impression is that this is not a docker-selenium issue but more one related to the environment where the containers are running.\nJust let us know. . @ybizeul does it happen also with Firefox? . Hi @ybizeul \nWhat are the next steps here? Could you provide detailed instructions on how to reproduce this issue? So we can help to get it solved? Right now we have only a set of assumptions.. @ybizeul that does not really answer the question, in order to help a bit, it would be nice to have detailed instructions showing how to reproduce the issue.. How are the containers started? Or how do you start the services?\nAdditional question, have you tried to write a file into the container when the volume is mounted? Do you get an error?. Hi @jmurphy87,\nHow can we reproduce the issue? Could you please provide a required steps to do that? . Closing as we didn't get an answer from the OP.. Oh, did I read it right?\n@anshuman00329 are you trying to run Firefox on the Chrome node?. @anshuman00329 we'll close this one since no reply was posted, and then it is better if you can open a new issue with the complete template filled. Thanks!. Hi @abhishkk,\nThanks for pointing that out, we just updated the wiki by adding a note.\nhttps://github.com/SeleniumHQ/docker-selenium/wiki/Getting-Started-with-Hub-and-Nodes#a-note-about-using---link-in-the-examples\n . Good catch, thanks @remcorakers! . Hi @jmurphy87,\nWould it be possible for you to provide a script we could use to replicate the issue? We just don't want to make any assumptions.. @jmurphy87 when you provide the test project, please also include the exact docker commands you use to start the containers.. When you said\n\nbut it does work with my own firefox install and selenium server\n\nWhat versions of Firefox and Selenium server were you using? How did you start the Selenium server?. Hi @anto-ac,\nIs it possible for you to provide have a test that can help us to replicate the issue? Even if it only happens every now and then, we can just run it several times and wait until it happens.. Yeah, but in theory that was resolved.\nSo, yes, a project that help us replicate it would be really helpful, thanks.. No, it is not...\nI tried to reproduce the issue within a new VM with Jenkins and using the repo you provided (by the way, thanks for that, I wish all issues provided something like that)... But I could not, I ran the Jenkins job over 50 times and I could not see the error.\nNevertheless, maybe there is some context missing? Are there more jobs running at the same time with the same images? \nI did some googling and I saw reports of the same issue for Firefox even without docker, always with display :99. So maybe we need to research more in that direction.. No worries :). @praveen4463 can you please try with the node-chrome-debug image instead?. Depending on the browser, sometimes the window maximise fails using the \"normal\" images because they don't have fluxbox, which is a window manager that is installed only in debug images (together with VNC). \nEventually we will merge both images to avoid this type of issues and to simplify maintenance. \nAbout the :99 error, I have also seen it but I haven't found the root cause, nevertheless, this is not affecting any test execution.\nI'll close this issue since it has been solved.. Hi @anshuman00329,\nPlease complete the full template and provide us a well formatted script so we can reproduce the issue.. @anshuman00329 You did not provide any steps to reproduce the issue, nor the commands used to start the container, and a test script/code snipped. All this is part of the template. . The problem lays down in the Java code, you are using public static WebDriver driver;.\nHaving it as a public static variable means that all tests running will reuse the same variable, which ends up in one test using a session created by another test. That is why it always works sequentially but not in parallel.\nPlease double check your code and ensure that the driver creation part is thread safe.. Hi @presidenten,\nCould you please check the instructions added here and see if the issue is still happening? . Actually thanks to @ay0o, who contributed with that example.. Hi @M3ssman,\nI also tried the instructions again, and even if the profile is correctly set, it seems that the Grid is not picking it when the property -Dwebdriver.firefox.profile=selenium is set. I think the issue happens because in the Grid the GeckoDriverService does not retrieve that property when GeckoDriver is started. Perhaps @barancev can confirm this?\nI will leave this issue open while we find a way to fix it in the upstream project.. @barancev well, this, and other properties, are present in the FirefoxDriver (which is legacy), so I am not sure if we expect to provide the same features now that the default driver is GeckoDriver.. Hi @M3ssman,\nI updated the guide showing how to use a custom profile with GeckoDriver. Sadly, there is currently an issue in GeckoDriver that renders the guide partially obsolete, because a profile specified in a folder causes GeckoDriver to not be able to connect to Marionette. The same issue mentions a workaround, but you would need to build your own image for that.\nThe current alternative is to send the a Base64-encoded ZIP of a profile directory through the capabilities.\nTherefore there is nothing we can do in the docker-selenium project for now, we just need to wait until a new GeckoDriver release includes a fix for the mentioned issue. Will close this issue in favour of the GeckoDriver issue.. Thanks @anto-ac! I added some comments to it. . Hi @yippeykeiyay,\nWell, as you say, this is quite vague, and it is even more since the major changes between 3.14.0-arsenic and 3.14.0-dubnium are not related to Selenium at all, check https://github.com/SeleniumHQ/docker-selenium/releases. The changes are related to a Chrome update (upgraded to 69) and a change how Xvfb is handled. \nWe would really appreciate if more details are provided, logs, and ideally a way to reproduce this.. @yippeykeiyay I cannot really say what the issue could be without having more data.\nTo be honest, I haven't seen anything similar yet, so I will close this issue. But if you find more detailed information and a way to reproduce it, please don't doubt to create a new issue or reopen this one. Thanks.. This is a question rather than an issue. Please send questions to the selenium user group. This is a duplicate of https://github.com/SeleniumHQ/selenium/issues/5908, which was fixed in the upstream project and will be available in the next release.. Hi @anto-ac,\nJust to keep digging into the issue, is this only happening in Debian 3.16.43-2? What if you try a different OS?. Yes, to discard that it is something related to that environment, to have a different OS for the host, not the images.. Is it possible to reproduce the issue by running the tests without Jenkins?\nE.g. running the test suite from the command line two or more times concurrently?. That is a good sign, I was afraid it was something related to Jenkins.\nWhat command did you use to execute builds in parallel? . That's interesting... I cannot say why it does not work in the version of Centos you were trying. But happy to know it has not failed in Ubuntu 18.04.\nShould we keep this issue open?. Right, I read Debian and I wrote CentOS, sorry! \nOK, I will close it and in any case we can reopen as you mention. Thank you for the feedback.. I'll close this PR since we saw that this does not fix the issue in your environment. We need to find out what is happening to the displays when it runs on Ubuntu.. I think this makes sense, we had to do something similar to have things working in OpenShift for some users of it.. Thanks for your contribution @torstenwalter! . Hi @osvald0,\nCould you please fill up the issue template? Without it we don't have enough information on how to reproduce and find out if it is an issue or not. Otherwise this looks more like an question rather than an issue.. @osvald0 \nHow did you create the profile? I just created one following the instructions they mention here:\nhttp://chromedriver.chromium.org/capabilities\n\nYou can create your own custom profile by just running Chrome (on the command-line or through ChromeDriver) with the user-data-dir switch set to some new directory.\n\nFor example, I am using OSX:\n/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --user-data-dir=/tmp/chrome_profiles\nthen I changed some things in the profile, like setting a home page, and the directory looks like this:\ndiemol@Diegos-MBP \ue0b0 /tmp/chrome_profiles \ue0b0 ll                                                                                                                                                                                                                                                        \ue0b2 \u2714 \ue0b2 10199 \ue0b2 14:54:36\ntotal 16512\n-rw-------@  1 diemol  wheel   8.0M Sep 23 14:52 BrowserMetrics-spare.pma\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 CertificateRevocation\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 CertificateTransparency\n-rw-r--r--@  1 diemol  wheel    36B Sep 23 14:51 Consent To Send Stats\ndrwx------@ 53 diemol  wheel   1.7K Sep 23 14:54 Default\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 FileTypePolicies\n-rw-r--r--@  1 diemol  wheel     0B Sep 23 14:51 First Run\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 InterventionPolicyDatabase\n-rw-------@  1 diemol  wheel    58K Sep 23 14:54 Local State\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 MEIPreload\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 NativeMessagingHosts\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 OriginTrials\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 PepperFlash\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 SSLErrorAssistant\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 Safe Browsing\ndrwx------@  3 diemol  wheel    96B Sep 23 14:51 ShaderCache\ndrwx------@  3 diemol  wheel    96B Sep 23 14:51 Subresource Filter\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 WidevineCdm\ndrwx------@  2 diemol  wheel    64B Sep 23 14:51 pnacl\nAfterwards, I started the containers with this docker-compose file:\n```\nTo execute this docker-compose yml file use docker-compose -f <file_name> up\nAdd the -d flag at the end for detached execution\nversion: '2'\nservices:\n  chrome:\n    image: selenium/node-chrome-debug:latest\n    volumes:\n      - /dev/shm:/dev/shm\n      - /tmp/chrome_profiles:/tmp/chrome_profiles\n    ports:\n      - \"5900:5900\"\n    depends_on:\n      - hub\n    environment:\n      HUB_HOST: hub\nhub:\n    image: selenium/hub:latest\n    ports:\n      - \"4444:4444\"\n```\nexecuted a simple test:\n```\n    @Test\n    public void chromeProfile() throws Exception {\n        ChromeOptions chromeOptions = new ChromeOptions();\n        chromeOptions.addArguments(\"user-data-dir=/tmp/chrome_profiles\");\n    WebDriver driver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), chromeOptions);\n\n    // 10 seconds to see the default page loading\n    Thread.sleep(1000 * 10);\n\n    driver.get(\"http://the-internet.herokuapp.com\");\n\n    Assert.assertEquals(driver.getTitle(), \"The Internet\");\n\n    driver.quit();\n}\n\n```\nand it worked as expected.\nPlease check that your profile is the only one in that directory and that it is the default one.\nI'll close this issue since there is no problem with docker-selenium and Chrome profiles, in case that there is an error, feel free to reopen and provide detailed steps showing how to reproduce the error.. Technically it is not the profile path what needs to be passed, it is the user data directory, which contains the profile.\nIf you check my comment above, /tmp/chrome_profiles is what contains the whole user data directory, and Profile is contained in it.. Hi @jsa34, thanks for the PR.\nCurrently the build is failing:\ncd ./NodeOpera && ./generate.sh master selenium SeleniumHQ\n/bin/sh: 1: ./generate.sh: Permission denied\nmake: *** [generate_opera] Error 126\nBut more than that, I think we will not merge this PR since Opera has a low usage and it will increase maintenance of this project considerably. \nIt occurs to me that you could maintain the Opera images in your fork and we could add in the main README a note pointing users that, so if someone needs Opera, they could refer to your fork.\nWhat do you think @ddavison?\n. Well, I also left this one open for a while to see if people popped in and supported this addition. But no one has expressed any interest or a \ud83d\udc4dto support it. \nI really appreciate the effort put into this @jsa34, but I don't see much benefit from it, and it would increase the project maintenance. Unless there are strong arguments in favor of adding it, I will close this PR in the next days.   . @ddavison, want to have a look? Maybe you spot something that can be improved :) . Merging and releasing soon.. Hi @wildloop, thanks for sending a PR.\nSince this seems quite specific, please add it to the Wiki, we will further build a better docs page.  . Hi @dlgiang \nHow do you start the stack? I just used docker-compose up and it worked fine. I am using OSX. Does it only happen in Centos 7? It works well with the previous release?. @ay0o why do you need to use entrypoint?\nCan't you just pass the SE_OPTS env var?\n. @dlgiang Did this work for you in previous versions or is it the first time you try this?. @ay0o just to see if I understand, is the HOSTNAME env var generated after the container is started? How does that work?. Fixed in the referenced commit and will be released soon.. Hi @reegnz,\nThanks for the PR. Could you please confirm that you have signed the Contributor License Agreement by marking the checkbox above?. \ud83d\udc4d thanks!. Later today we will release new images with an entry point that wraps this line https://github.com/SeleniumHQ/docker-selenium/blob/master/Base/Dockerfile#L89. Fixed in the referenced commit and will be released soon.. Fixed in the referenced commit and will be released soon.. Credits to @ay0o for pointing the solution.. Fixed in the referenced commit and will be released soon.. This is unexpected, we tried to run Supervisor as a non root user to respect the same concept the previous scripts were using, but it seems that to drop privileges Supervisor must be started as root, and seluser can be specified in the configuration file.\nWe will do those changes, and release during the week. Thanks for testing and reporting this. . @RGregulla do you have a sample yaml that I can try? I have some changes locally and I am testing them in the OpenShift free tier, and it seems to work, but I would like to try your config to be sure before releasing again.. Just tried it and seems to work fine, I'll merge to master and release soon.. Fix has landed to master, will be released soon.. Hi @ay0o,\nThanks for the PR. Could you also please add instructions showing to to start Docker Swarm? . Thanks for your contribution!. Hi @aberonni, good catch! We will push a fix soon. Thanks for reporting this. . Fix has landed to master, will be released soon.. Duplicate of #802 . Duplicate of #802. Hi @ochanig33,\nYou are not mapping the VNC ports to your host. You need to do something like - 5900:5900.\nAnyway, this is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well.. Hi @Reedler01,\nWhat is the exact tag of the image you are using? . Is it 3.14.0-helium? Can you please paste the docker image id?. Not really, what is the output of this command?\ndocker images selenium/hub. The output of that command should be something similar to:\ndocker images selenium/hub                                                                                \nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nselenium/hub        latest              5dbe41cbcbfd        2 days ago          321MB\nCan you please post that? Also, what is the command being used to start the images?. OK, so it is the latest image\nHow does the command to start the images look like?. @Reedler01, yes, I met them during SeleniumConf.\nGoing back to the topic, the images were built so they work in any sudo-less environment, but that also depends of course on the host environment configuration. It is hard for me to say why it is not working on that environment, but somehow it seems that your docker-compose file was changed before to use root for some reason.\nIn the end, if you are fine using the root user, you can set it up with it.  . Hi @TBurda,\nCan you please post the output of:\ndocker images selenium/standalone-chrome?\nAlso, what command do you use to start the container? . Could you please start the container with the recommended command?\ndocker run -d -p 4444:4444 -v /dev/shm:/dev/shm selenium/standalone-chrome:3.14.0-helium\nI just tried it a few times and I was not able to reproduce.. @TBurda I didn't get that, so did it work for you the following command?\ndocker run -d -p 4444:4444 -v /dev/shm:/dev/shm selenium/standalone-chrome:3.14.0-helium. Closing as we didn't get more info from the OP.. Hi @testphreak,\nSure, will release later today. . https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.14.0-iron. Hi @uuf6429,\nI checked the docker-compose file placed in the Git repo linked above, and it is missing the /dev/shm / --shm-size= part, which is something that I don't really know how to do in the gitlab-runner, I believe there is an issue created in the repo/issue tracker. (That's why it works without it).\nPlease check their docs and forums to see if there is a way to configure that part. It is not really a docker-selenium issue.\n. You are right, somehow I saw it but I missed that. Let me run that docker-compose file and report back.\n. Things work locally fine, are you sure that the volume really gets mounted?\nWhat is the output of the log for the selenium_1 container?\nCan you take a screenshot when your test fails?. Sorry, I don't use gitlab-runner.\nI think the log is pretty clear:\nselenium_1   | 2018-10-20T20:18:01.050108016Z 20:18:01.045 DEBUG [Passthrough.handle] - To downstream: {\"sessionId\":\"ef2e0d544c1e7df56212cc6311e880f0\",\"status\":13,\"value\":{\"message\":\"unknown error: session deleted because of page crash\\nfrom unknown error: cannot determine loading status\\nfrom tab crashed\\n  (Session info: chrome=69.0.3497.100)\\n  (Driver info: chromedriver=2.42.591071 (0b695ff80972cc1a65a5cd643186d2ae582cd4ac),platform=Linux 4.14.48-coreos-r2 x86_64)\"}}\nWhich is the same issue as #589,  #431, #636, https://bugs.chromium.org/p/chromedriver/issues/detail?id=2283. \nA browser screenshot would just show the crashed tab, (you can always take a screenshot on test failure, the session is closed by the test framework, not by Selenium).\nI am not sure how to proceed, since the error shows the issue with the shm memory.\nPS: \nSeems you cannot mount volumes there https://gitlab.com/gitlab-org/gitlab-runner/issues/1234, but I might be wrong.\nLooks like you need to set --shm_size https://gitlab.com/gitlab-org/gitlab-runner/issues/1913 https://docs.gitlab.com/runner/configuration/advanced-configuration.html. For Chrome not so much, a change in the configuration would be needed to see that output, if you want to help us a PR would be appreciated :) \nBut the message provided by the debug log is enough in this case, it is a known message when running Chrome in containers.. Cool, thanks for the desire to contribute! You could have a look on how Firefox does it, in theory it should be something similar to this. \nBest way is to try it locally with the plan Java jar and when it is working, then just add it to the containers.\nIf you have any questions, feel free to join us in the IRC/Slack channel where we can build more on it.\nGoing back to the initial issue, I think there is not much to do here, (besides the potential PR, that would be handled in a separate place). I would say this issue can be closed since it is more related to the GitLab runner. What do you say?. Hi @frosty00 and @yippeykeiyay,\nAs mentioned in #781, the only difference is the browser version. In a while, we are releasing the image with Chrome 70, which you can try after the release. \nThe current version (and future ones, only output logs related to the Selenium and ChromeDriver/GeckoDriver activity). \nIn the end, besides releasing the image with Chrome 70 (and tomorrow with Firefox 63), if we don't have a way to reproduce the issue, we cannot do anything about it, sorry.\nI'll close this issue and please have a look in a few hours with the new release. If the issue is reproducible, please create an issue and fill the template completely.. Hi @Patabugen,\nI just tried to do a simple manual check, to see if the screen resolution is actually being set:\n\nAre you sure that the Chrome options are properly passed? What does the container log say? If the options are not properly passed, then the screenshot will have the size of the current viewport.\n . OK, so I think I get the issue, divided in two parts.\nIf it works in the Standalone because it is a different path in the code, which is something we are going to change in the near future with the development of the new Grid. Most of the people are using the combination of Hub + Nodes.\nNow, it does not work in the Node, because the bindings you are using somehow are not prefixing the chromeOptions properly. Instead of chromeOptions it should be goog:chromeOptions.\n. Closing this issue as we didn't get more information about it, and the logs also show how the bindings are not sending the options properly.. @Patabugen \nWhat I meant is the following:\nYour test framework is sending this:\njson\n\"browserName\": \"chrome\",\n\"chromeOptions\": {\n    \"binary\": \"\",\n    \"args\": [\n    \"--disable-gpu\",\n    \"--headless\",\n    \"--window-size=1920,1080\"\n    ]\n},\nand it should be (with \"goog:chromeOptions\")\njson\n\"browserName\": \"chrome\",\n\"goog:chromeOptions\": {\n    \"binary\": \"\",\n    \"args\": [\n    \"--disable-gpu\",\n    \"--headless\",\n    \"--window-size=1920,1080\"\n    ]\n},\nLike that, both node and standalone will get the options correctly.. @bpapez if you have a concise reproducible test case, that includes the page required to execute the scenario (a sample page or a public site), please comment or open a new issue with that info.. This is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well.. Thanks for the PD @wildloop!\nWould be nice to have some comments about the env var in the README file, with that other users would know that it is there. . Sorry, I forgot to mention... there is a template when the PR is created. Could you please mark the checkbox after you have signed the agreement?. Well, probably because you deleted the template. \nWhen you create a PR it should look like this:\n\n\n. Thanks for your contribution @wildloop! . Hi @AlbertShamsiyan,\nIf it works locally and it does not work in Jenkins, it must be something in the Jenkins config.\nYou could try to create a freestyle project in Jenkins and enter the bash commands to run it, if it works, it is probably the Jenkinsfile.\nIn addition, with the information provided, there is no simple way to reproduce and verify if it is an issue.. Closing as we didn't get more info.. Hi @frosty00,\nThe rule of thumb is 1GB and 1 CPU per browser, this might vary on the application under test. Take into account to leave some RAM and CPU for the normal operating system processes. \nThis is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well.. Hi @bluepenfc, \nYou report Windows 7 as operating system, but docker 18.06.1-ce needs Windows 10 to run.\nAre you sure that you have the right components installed?\nCould you also provide the logs from the docker container?\n. @bluepenfc\nI think you missed my point, if you check the docker requirements, it is not possible to install version 18.03.0-ce on Windows 7. So the docker container must be running in a different machine.\nIn addition, the docker logs do not show any error, they just show how successfully the container started.\nMy assumption is that the container is running in a different machine, otherwise you would see more activity in the docker logs (e.g. showing how the session is requested and so on...).. Duplicate of #826 \nThis is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well.. Duplicate of #5418 . Right, this applies to browserTimeout, let me check this and I'll report back.. @FzmTYustas, I just confirmed that it is broken in 3.14.0, and fixed in 3.141.0.\nSince we have not released the docker-selenium images with 3.141.0 yet, I'll move this issue to this repo in the meantime.. https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.141.0-actinium was just released. Hi @epnelsonq,\nI updated the instructions since there was something missing. \nCould you please try again, and if something goes wrong, could you please post the full log of the docker build ... command? . @epnelsonq ok, I guess that is not clear in the Wiki, so I added another note.\nThe version used in the Google example is just to show how the version can be passed. When the example was built, that version was available for Chrome beta. But right now I think it is 71 or so. You need to check what versions are available from Google before running the script. Sadly, Google does not maintain a resource where old Chrome versions can be found.\nSo, if you try:\nbash\ndocker build -t my-chrome-image --build-arg CHROME_DRIVER_VERSION=2.23 --build-arg CHROME_VERSION=google-chrome-beta NodeChrome\nIt will work.\n. Glad it works now!. Hi @louyu65,\nSorry, that is not enough information for us to help or do some activities in order to solve the issue. I will close this issue, please open another one and fill out the template completely.. Hi @jdiprizio,\nYes, there is a regression there. This will be fixed when we merge https://github.com/SeleniumHQ/selenium/pull/6627 and release.\n. It was released a moment ago, we will be releasing new images through the day.. Hi, the release has been done https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.141.59-antimony\nand the images are currently being built and pushed\nhttps://travis-ci.org/SeleniumHQ/docker-selenium/builds/455164406. Hi @wildloop,\nNot sure, maybe it is a good idea. But before deciding:\n- Do you know how much space are the images using by adding those packages?\n- What are the use cases for this packages? So we understand if it makes sense to add them in the images or if it is better just to add guidelines on how to add them in case people want to use them.\nIn addition, this is (I think) the first time this is suggested, so not sure if this is a common use case. In general, we prefer to have the images as simple as possible, without packages that are not needed for normal test execution (as people mostly use the images in CI pipelines where those tools would not make a difference). Maybe a good WiKi showing how to do this is better.\nWhat do you think?\n. I don't mean to be annoying or something like that, but we would like to understand better the need of including these packages...\n\nWhat are the use cases for this packages? So we understand if it makes sense to add them in the images or if it is better just to add guidelines on how to add them in case people want to use them.\n\nIn addition, if after checking your reply, we add the package, we also need docs explaining why the package is there, its use cases and examples. Would be cool to have those in the PR as well.. Can't you do the same with docker cp?\nIf you want to go inside the container, you can also just do docker exec -it <containerName> bash, right?. Hi @stephenarifin,\nThis has been released https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.141.5-astatine\nand it is being currently pushed to Docker Hub https://travis-ci.org/SeleniumHQ/docker-selenium/builds/452029448, \nPlease check in a few moments.. Looks great, thanks @BeyondEvil! . Hi @aban20,\nCould you please show us the script used to run the test? Please provide a concise reproducible test case, that includes the page required to execute the scenario (a sample page or a public site). . Closing this issue as we didn't get a reply from the original poster. \nIf someone is facing this issue, feel free to comment and provide a concise reproducible test case, that includes the page required to execute the scenario (a sample page or a public site).. Hi @arijitb1710, \nI just checked the repo you linked above, I am not very familiar with NightWatch, but I don't see in your configuration file how you use the Grid running in the docker containers.\nHave you been able to use it before? Or is this the first time you try to use a Grid with those tests? . @aban20 but in the repo you provided, that configuration is not present. You are using the jar locally.. @aban20 there is no firefox profile in that file. Could you please set the repo properly so we can try to reproduce the issue? \nAlso, have you checked in the NightWatch issue tracker? I suspect this is an issue with that framework.. @aban20 the file is not a valid json, I could not get it to run.\nBut 5 minutes of googling the same error, lead me to #677, which is your error. This will take you to https://github.com/nightwatchjs/nightwatch/issues/1628, where it says that it should be solved in v1.0.14. \nClosing as this is a NightWatch issue and not a docker-selenium one.. Hi @loic-lopez,\nHow does the test script look like? Can you post the capabilities please? Does it only crash with Firefox or also with Chrome?\nAdditionally, are you waiting for the Grid to be ready? . @loic-lopez I see in the logs that your framework is sending enablePassThrough: false, which is not supported anymore in the recent versions of Selenium. Overall, there are a few things that PHP WebDriver needs to do in order to work with recent versions. \nFor more information, see https://github.com/facebook/php-webdriver/issues/469\nI'll close this issue since it is not related to the docker-selenium images but to the framework being used for the tests.. Hi @Yivan,\nYou can report it here. Please add as many details as possible and if possible also please help us by adding a solution to it.. Hi @louyu65,\nThat normally means that the page you want to visit is taking too long to load, like right now, the page does not even load for me in Chrome (without using Docker).\nTry to tweak the waiting time with pageLoadTimeout so ChromeDriver waits a bit longer for it. But moreover, check that the page is actually working. Also try to use the latest versions of bindings, and images.\nSince this is not an issue with docker-selenium, I invite you to join us in the IRC/Slack channel where the community can help you as well, and give you tips on how to improve your test script.. Hi @parky128,\nA quick Google search shows this https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach\nMoreover, this is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well. . Hi @osvald0,\nThe issue in #790 was that the profile was not well created. In the end, we never got an answer to the question \"how did you create the profile?\". . Sorry for the late reply, I just went and tried the steps I mentioned here and it worked for me. It is not so easy to figure out what is going on in your side without all the proper information. From my point of view, this is more a question on how to get this working instead of if it works or not. I think a better approach for this would be if you join us in the IRC/Slack channel where lots of people are present and we can interact sooner. Another option is to send your question to the selenium user group.\nSee you in the IRC/Slack channel.. Duplicate of #839. Duplicate of #839. Sorry we didn't reply earlier, what were your findings?. Hi @vinoopraj,\nIt just seems that the job preparation and teardown in Jenkins are not preparing or leaving a clean environment.\nMoreover, this is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well. . But according to this, the bug was already fixed in docker-compose for Windows.. Thanks for your contribution @oleg-filiutsich! . Hi @quldude,\nIt won't work because the SE_OPTS is made to pass Grid options, not to pass a command like the one you want to pass.\nYou would need to create your own image, by adding the custom jar to it and customising the command to start the node https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeBase/start-selenium-node.sh#L39\nMoreover, this is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well. . Hi @avinash10993,\nPlease create new issue and fill out the complete template, in this one it is not possible to understand what is going on, what you are trying and there are no steps to reproduce it.. Hi @DevinPenny,\nI am sorry, but there is no way to realise if something is going wrong after reading the issue. Could you please create a new issue and fill out the complete template? (Which requires all env information and a script to reproduce the issue).  . Thanks for your effort @ThomasMeschke! Would be cool to have this. . Thanks for this PR @ThomasMeschke, I'll review it and give feedback soon. . Looks good, thank you for your contribution @ThomasMeschke! . Hi @quldude \nCould you please fill out the complete template? It is not possible to give any feedback with the information provided.. What is the full log of the node?\nWhat happens if you remove the -m 512m --cpus 0.5 options? \nHow do you start the hub? Can you provide complete information please? Otherwise we need to fill out the gaps and probably won't be able to verify if it is an issue or not.\n. The [SEVERE]: bind() failed: Cannot assign requested address (99) is thrown by ChromeDriver but so far it does not affect the tests. \nAre tests failing in your case? . Of course the any non-standard Grid won't work in these docker images right away, in your case you want to use some custom servlets, therefore you would need to customise the image to hook them when the node is starting, that is completely expected.\nSo, please help me to understand, what is the issue?. Right, as I mentioned before, we have seen ChromeDriver throwing that message, but so far it does not affect the tests. We have done some checks and tried to avoid it, but we haven't been able to do that, and since it does not affect, we haven't taken any more actions on it. \nNevertheless, are you having any tests failing due to that message thrown by ChromeDriver?. OK, so there is no issue with the tests and it seems that it is more a question.\nAbout using variables in docker-compose files, you can check https://docs.docker.com/compose/environment-variables/ and https://docs.docker.com/compose/compose-file/#variable-substitution\nClosing as this is not really an issue. . Hi @quyennt44 \nThis is a question rather than an issue. Please send questions to the selenium user group, or join us in the IRC/Slack channel where the community can help you as well.\n. Hi @djpasch,\nAs you mention\n\nMy guess is, the issue is caused by chromedrivers version 2.45 and 2.46.\n\nis most clearly the reason.\nTherefore I'd suggest to report the bug to as a ChromeDriver issue to the Chromium project: https://bugs.chromium.org/p/chromedriver. It is very important that you provide a script to reproduce the issue.. Thanks for your contribution @tnguyen14! . That was the same thought I had, is it possible to run Edge in docker already @flynet? I think it is not possible yet. . @flynet cool, that sounds interesting! Will follow that project and try to play with it, thanks for sharing!. Thanks for your contribution @tnguyen14! . I think it is valid and it does not hurt to have that. Thanks @tnguyen14! . Not really, it all depends to the ChromeDriver releases. If it is a ChromeDriver bug, \nthen please submit ChromeDriver issues to the Chromium team:\nhttps://bugs.chromium.org/p/chromedriver. Hi @rbonghi,\nThanks for the effort! I would like to understand what is the benefit of having Chromium vs. already having Chrome? What would this add to the project? \nJust wondering since people can already use Chrome, and I don't know how many people actually use Chromium as their daily browser, which would make the case for testing.. Ok, I get it.\nMaybe you can keep the project in your repo and we add a link in the README here in case someone wants to use Chromium for the reasons you give, so we can let people know that there is something they can use until Chrome is released for ARM.\nWhat do you think?\n. >My idea was to make this repo official in short time and pull directly from the source the right version of selenium\nWhat do you exactly mean? To add Chromium images to the already existing Firefox and Chrome images? If so, I don't think it makes sense because the idea of this images is to provide a broad, common use case tools for users. Chromium is not broadly used for testing so it would not really belong here. \nAdditionally, adding a browser that potentially will be removed when Chrome is released with ARM support, just increases maintenance and would confuse users. \n\nIf you are agree I will push on docker hub the ARM32 and ARM64 with chromium.\n\nWhere would you push it?\n\nWe can keep some features from this branch and start a new pull request to move this repo to be official, eg: fix java and ubuntu version for generic architecture.\n\nSure, do you know what needs to be done?\n. OK, so there are a few things here:\n\n\nYes, so if I understood, it would be great if you host the repo on your user and push the images to your user space in Docker Hub, we would happiliy add a link to it in the README that belongs to this project.\n\n\nHaving this set of images as offical, there was an effort to do that earlier https://github.com/SeleniumHQ/docker-selenium/milestone/1?closed=1, but I don't know how that ended. Additionally, I am not sure what added value it would bring.\n\n\nSo in terms of this PR, I think there is nothing to do here. @rbonghi if you want to, send us a PR with the link to your GitHub repo where the code for the Chromium images is.\nBesides that, I think we can close this PR. What do you think?. Hi @McGriddle,\nSince you have spent some time in it, have you seen the fluxbox logs to find out why it stops? . Yes https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeDebug/selenium-debug.conf#L15. Thanks for your contribution @McGriddle! . Closing this issue as we didn't get enough information to work on or reproduce the issue.\nIf someone is facing this issue, feel free to comment and provide a concise reproducible test case, that includes the page required to execute the scenario (a sample page or a public site).. Hey @philippmoeller,\nThanks for diagnosing it, would you like to send us a PR for that? . Hi @philippmoeller,\nThanks for your contribution, can you please confirm that you have signed the Contributor License Agreement?. @philippmoeller it is up to you. If your are doing this PR on behalf of your company then I'd say you need to check with them, if you are doing this on your free time and just to contribute to open source, then in theory it should be ok.\nJust let me know.. \ud83d\ude1e \nI'll make a PR and give you credit in the commit then. Thanks for your attention to detail @chenrui333! . Hi @mkrei,\nSounds good, would you like to send a PR? . The Selenium related files are placed in a seluser home subfolder, called /home/seluser/selenium/, so the seluser is owner by default.. Running all commands as seluser, so the ENV vars a present for this user always.. Building the StandaloneDebug images based on the NodeDebug images, makes the build faster.. Leaving these ENV vars in the NodeBase image, they were duplicated in other docker files. \nExporting them with seluser, so they are present by default in the entry points.. This was a workaround to export the ENV vars present in the root user and not present in the seluser. Since all ENV vars are now exported with the seluser, this is not needed anymore.. File added to handle the entry_point.sh in the same way it is done for the StandaloneDebug images. Things get changed here and the file is copied to the appropriate folders.. All these ENV vars are now exported in the NodeBase image.. This file was in the repo, but not used anywhere. The Dockerfile comes from the NodeDebug folder.. This was a workaround to export the ENV vars present in the root user and not present in the seluser. Since all ENV vars are now exported with the seluser, this is not needed anymore.. Removing this TODO since  the browserSideLog (which the URL refers to), should not be used anymore according to the Selenium Grid code. Why do you need to change the Dockerfile? Besides, please read the note on top and only change the .txt file.. Why do you need to change the Dockerfile? Besides, please read the note on top and only change the .txt file.. I think you just need to replace standalone_chrome with chrome_debug, instead of adding it. \nCould you please change that?\nI also noted that the standalone_firefox_debug has the same issue, if you want to, make that change as well.. I'll merge it like that and then make the additional change. Thanks again!. Did you check this comment?\nPlease modify that file first.. I wonder if it is better to install the package when the user is root and avoid using sudo... If you install it when the user is root, are the results the same @pabloFuente? \nIf so, I think it would be better to install it with root. . No, no... There are only 3 variables: HUB_HOST, HUB_PORT and HUB_PORT_PARAM.\nWhat I tried to do is to check first if HUB_HOST was set, if so then use HUB_PORT_PARAM as a placeholder for port 4444 (assuming that the user started the hub with port 4444). \nTherefore they only will need to set HUB_HOST and the default port will be 4444. And in case they started the hub with a different port, then HUB_PORT would be set and HUB_PORT_PARAM takes its value.\nIt could be simplified by doing something like:\nsh\nif [ ! -z \"$HUB_HOST\" ] && [ ! -z \"$HUB_PORT\" ]; then\n  echo \"Connecting to the Hub using the host ${HUB_HOST} and port ${HUB_PORT}\"\n  HUB_PORT_4444_TCP_ADDR=${HUB_HOST}\n  HUB_PORT_4444_TCP_PORT=${HUB_PORT}\nfi\nSo the user will need to set both variables always. I just thought it could be nicer when the user only needs to set HUB_HOST since in most of the cases people will use 4444 for hub.\nWhat do you think?\n. Good idea, I was just copying and pasting from other script. Just made the changes and I will push them now. Thanks @tnguyen14 . Thanks @cgoldberg . There is no need to update this file, please revert the changes ->\n```\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\nNOTE: DO NOT EDIT THIS FILE.  IT IS GENERATED.\nPLEASE UPDATE Dockerfile.txt INSTEAD OF THIS FILE\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n```. We should remove this file as well, also from the Makefile.. Could we add an \"echo\" here, mentioning that the DISPLAY env var was not found?. Could we add an \"echo\" here, mentioning that the DISPLAY env var was not found?. Debug in the images means that people can use VNC to see what is happening inside. Some people actually use this images for normal test runs. Please do not set this env var to true for the debug images (in the near future we will merge the images anyway).. ",
    "mtscout6": "Should be satisfied by b7cd0e124ea09087f1edb32a45b3f1610f1323fd\n. I agree, and work is in progress to do so. Check out the change-base-image branch. It is still a work in progress, so a second pair of eyes with feedback would be great. You can build the image yourself and test it out, it is working, however I have not figured out a debugging solution yet which is why I haven't pushed it to master and published to hub.docker.com yet. This is all part of the \"Get Docker Official Repository Signoff\" Milestone.\nShould be resolved with #3\n. Be warned that I am aware that there seems to be a problem with the SIGTERM hook that is preventing those images from shutting down in a timely manner. Should you find a solution for that I'd really like to hear it.\n. Closed by #12\n. @androa I understand your dismay about the CLA, however this is a requirement of the SFC who is the trademark owner of the Selenium project. It's no different then submitting a pull request to a Facebook, Google, Yahoo, etc. OSS project.\n. @androa I exposed configuration of the nodes through the config.json files, but I have not done so with the hub yet, which would help here. Looking over the Selenium docs on the grid configuration timeout you'll see a link for the default hub configuration which is where you'll see the timeout set at 300000 milliseconds, which is where you get your five minutes.\nI'd rather stick with the defaults already outlined by the core Selenium team, @lukeis do you have any thoughts here. @androa I do agree with you though that five minutes feels a bit excessive.\nThe reasoning behind one instance per node is more of a Docker philosophy about one process per container. @psftw What are your thoughts here, would we be violating good Docker principles by allowing more than one browser per node? My original intension here was to spin up as many node containers as I needed, the benefit there is that if a node is on the frits you can kill it know that you'll only affect one test, as opposed to potentially multiple tests.\n@androa As it stands now though, you can easily override the node configuration by defining your own dockerfile that replaces the config.json with the configuration of your choice. For example:\nFROM selenium/node-chrome:2.44.0\nCOPY config.json /opt/selenium/config.json\n. @androa I believe that these changes should address your concerns. We are doing some analysis on RAM usage and how that plays a factor with running more than one browser per node #15. Further discussion about more browser instances per node should happen there.\n. Can you provide more detail please? Perhaps either logs, a stack trace, screen shot. What do you mean by popping on selenium grid?\n. Instead of overriding the config.json, have you you tried running multiple node-chrome and node-firefox containers. The docker philosophy is one process per container. So, ideally if you want to run more tests in parallel you'd want to run multiple containers. Note, this is really cheap to do with docker. Do you still run into the same problem when you do that?\n. Also, when your node does not register immediately and sometimes taking 40 minutes is this the output you see:\n09:00:36.034 INFO - Java: Oracle Corporation 24.65-b04\n09:00:36.035 INFO - OS: Linux 3.16.4-tinycore64 amd64\n09:00:36.039 INFO - v2.44.0, with Core v2.44.0. Built from revision 76d78cf\n09:00:36.091 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match with current platform: LINUX\n09:00:36.118 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:5555/wd/hub\n09:00:36.119 INFO - Version Jetty/5.1.x\n09:00:36.121 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]\n09:00:36.122 INFO - Started HttpContext[/selenium-server,/selenium-server]\n09:00:36.122 INFO - Started HttpContext[/,/]\nIf so this is something I've been seeing as well, I'm still trying to figure out the cause.\n. @c0nstructer Interesting thought about RAM, I had not considered that. I seem to recall something about running jar files and restricting RAM consumption. I wonder, since we are only running at most one test session per node would limiting the RAM consumed by the JVM be reasonable here?\n. You are seeing the same thing I am. I'm talking with some core Selenium contribs on IRC and it looks like this is a known issue in a Java core lib. I has something to do with a bad random number generator. So, it's not a Selenium or Docker specific problem. I'll see if I can find a published issue about it and post the link here.\n. Let's move the RAM discussion to a new issue see #15\n. When if finally does register the following log entry is that the ServletHandler was finally started. Which is right where @WhereIsMySpoon mentioned in the #Selenium IRC channel (log)\n09:02:25.204 INFO - Started HttpContext[/,/]\n09:05:58.688 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@1c664c4f\n09:05:58.689 INFO - Started HttpContext[/wd,/wd]\n09:05:58.694 INFO - Started SocketListener on 0.0.0.0:5555\n09:05:58.694 INFO - Started org.openqa.jetty.jetty.Server@d0adc0c\n. @c0nstructer were you able to figure out the registration problem?\n. Can you re-open this issue, I renamed it. The registration delay is still a problem. The RAM discussion though is a separate issue to discuss in #15.\n. Nevermind I didn't have the re-open button at first... Odd.\n. Related to: https://code.google.com/p/selenium/issues/detail?id=8237\n. register it on github? What are you asking? I was asking you to re-open the issue since you closed it, but it's good now.\n. This is not a RAM issue, this is an issue with selenium core when generating a random session seed. When debug logging is turned up this is the line that causes the hangup:\n15:13:00.159 DEBUG - New random session seed\n. @eugene-dounar Ya, that sounds really obvious :stuck_out_tongue_winking_eye: \nDid you install this into your docker host or into the selenium/node-* image itself? If so, how did you do it? I'm not too keen on the idea of running another service to manage this within the container.\nDoing some further reading I stumbled on a blog post which really explains this problem in better detail than I can. Also, there is a Stack Overflow question that suggesting running with docker run -v /dev/urandom:/dev/random ... which I have found to work for me. Unfortunately there are trade-offs to this solution as stated the the blog post I linked earlier.\n. The question I have is whether or not that is an acceptable solution for the broader community.\ncc @lukeis @elgalu @psftw @shs96c @barancev @jimevans\nPlease CC anyone else that could weigh in on this better than I can.\n. @psftw thoughts?\n. I have created a stress test that runs multiple nodes with many tests with one hub. The test will log the memory.stat file every second for each Node. Tomorrow I will plan to review memory usage with one browser instance vs. many per Node. Do either of you see anything wrong with the way that I'm gathering those memory usage stats?\n. # Docker Selenium Memory Usage Test Results\n| Test | Hub Count | Node Count | Sessions Per Node | Test Count | Average Node Mem | Average Swap Node Mem | Test Duration |\n| :-- | --: | --: | --: | --: | --: | --: | --: |\n| stress-chrome-1 | 1 | 10 | 1 | 200 | 179.56 Mb | 0 Mb | 00:04:09 |\n| stress-firefox-1 | 1 | 10 | 1 | 200 | 229.97 Mb | 0 Mb | 00:05:10 |\n| stress-chrome-2 | 1 | 10 | 2 | 250 | 207.10 Mb | 0 Mb | 00:03:48 |\n| stress-firefox-2 | 1 | 10 | 2 | 250 | 280.38 Mb | 0 Mb | 00:04:32 |\n| stress-chrome-2.5 | 1 | 5 | 2 | 200 | 187.46 Mb | 0 Mb | 00:09:20 |\n| stress-firefox-2.5 | 1 | 5 | 2 | 200 | 219.87 Mb | 0 Mb | 00:04:06 |\n| stress-chrome-5 | 1 | 3 | 5 | 200 | 323.77 Mb | 0 Mb | 00:02:57 |\n| stress-firefox-5 | 1 | 3 | 5 | 200 | 316.01 Mb | 0 Mb | 00:04:36 |\nThe metrics collected reflect the memory usage for the container named.\nFull logs can be found here\nIf we bumped the allowable sessions up to 2 we'd only get a win of 30-100Mb for Chrome, and 50Mb with Firefox. I don't know if that's really enough of a bump to justify increasing the session count. Thoughts? \nPS. I do know that the metrics tests I used are incredibly simple and I don't know how it would come out with a larger test.\n. See the docker documentation on docker run -P\n\nWhen using -P, Docker will bind the exposed ports to a random port on the host between 49153 and 65535. To find the mapping between the host ports and the exposed ports, use docker port.\n. That has been on my mind as well. I see no real reason to tie the version of these images to the version of Selenium, with the exception of the base and hub images since they would change with Selenium. I have also considered the idea that we may need to break up this repo so we don't get a new base image built on docker hub when a change to the respective node images is made.\n. Have you signed the CLA yet?\n. Thanks!\n. Thanks, I'll plan to take a look at this on Friday.\n. @phensley Bump\n. I don't have time to dig into this today, but it may be because the Node communicates on port 5555. When icc=true which is the default for now everything works fine. It may be as simple as exposing that port on the Node and possibly the Hub. I'll have some time Friday to look into it, unless you beat me to the punch with a pull request.\n. Have you had any luck with adding port export?\n. I'm not currently exposing port 5555 in the node images. Likewise it wouldn't make sense to bind them to 5555 on the host since that would limit you to one node per docker host.\n\nRegarding the timeout when the node fails to connect to it, can you post some logs?\nDo they look something like this:\n09:00:36.034 INFO - Java: Oracle Corporation 24.65-b04\n09:00:36.035 INFO - OS: Linux 3.16.4-tinycore64 amd64\n09:00:36.039 INFO - v2.44.0, with Core v2.44.0. Built from revision 76d78cf\n09:00:36.091 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match with current platform: LINUX\n09:00:36.118 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:5555/wd/hub\n09:00:36.119 INFO - Version Jetty/5.1.x\n09:00:36.121 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]\n09:00:36.122 INFO - Started HttpContext[/selenium-server,/selenium-server]\n09:00:36.122 INFO - Started HttpContext[/,/]\n. @ericfrancis I don't see anything alarming here that is specific to the docker images. It looks like it has something with selenium executing that By.selector call. Have you tried firing up the selenium/node-firefox-debug image with a VNC connection to see what's going on with the browser? \n. I can't say that I entirely understand all the waits related to selenium in a selenium grid scenario. This may be a non-docker related issue for the core selenium community.\n. So, does this issue need to remain open for any reason?\n. Yes there is a case for it, which is why Xvfb is installed in the selenium/node-base image. I'd be more than happy to take a pull request adding images for other browsers/testing environments.\n. I would love to see something like that, I take pull requests.\n. Could you add some tests for this?\n. I have never used flash so I don't know off the top of my head. \nAlthough now that I've had the night to sleep on this I'm wondering if this should be applied in a downstream image. What I don't want to see is image bloat for all the various plugins that are available for the individual browsers. Especially since they tend to serve more finite purposes that tend to be tailored to specific types of applications. While at the same time I understand that some of these plugins will be more popular than others, such as Flash support.\nSince this is a popular plugin though I do see value in supporting it. What I propose is that we add a selenium/node-firefox-plugins:2.44.0 image that installs all the available plugins that we will support. Then we could provide selenium/node-firefox-plugins:2.44.0-onbuild which could be used to pick and choose the plugins you wish to apply to your individual use case. This would imply that you could have a Dockerfile with a single config file in the same directory to choose what you want.\nDockerfile:\nFROM selenium/node-firefox-plugins:2.44.0-onbuild\nplugin.config\nflash\nother-plugin\njoes-plugin\n...\nThe structure of the plugin image definition could be:\nDockerfile\n```\nFROM selenium/node-firefox:2.44.0\nCOPY ./plugins \nONBUILD RUN /install.sh\n```\ninstall.sh\n```\n!/bin/bash\nIf config at /plugins.config exists then only install the plugins selected\n...\nElse install all the plugins\n...\n```\n./plugins/flash.sh\n```\n!/bin/bash\nInstall Flash\n...\n```\n./plugins/other-plugin.sh\n```\n!/bin/bash\nInstall Other Plugin\n...\n```\n./plugins/joes-plugin.sh\n```\n!/bin/bash\nInstall Joe's Plugin\n...\n```\nThe only question I have about this approach is whether there is sufficient means to define the node's capabilities? So, you can run a grid with a mixture of nodes with differing plugins installed.\nI think that this solution would open the door for supporting multiple plugins, while keeping the base node image slim.\ncc: @psftw, @lukeis\n. That's fair\n. Thanks, I'll look through this tomorrow morning. At first glance though I don't see any tests added. You can do something similar to what the existing test.sh script is doing at the root of the repo. \nHave you signed the CLA yet?\n. The test.sh spins up selenium then spins up a test project that actually runs a simple test. That test gets the home page from github and verifies the title. Basically can we launch the browser and do some basic commands?\nIt's a test that runs a test....\n. Looks great, Thanks! I'll get the dockerhub build going shortly.\n. And they are up on dockerhub now. Enjoy!\n. Thanks @miyajan. I just got a new laptop so I'm going through the joy of re-installing everything, so I won't be able to do anything about this for a few days. @elgalu, could you review this and pull it in?\n. Awesome, Thanks!\n. :+1: \nDoes anyone else see a concern with this?\ncc @krosenvold, @psftw, @eugene-dounar\n. Yes, that's long enough. I should have some time on Friday to bring it in, it's on my radar I haven't forgotten about it yet.\n. @willroden Thanks for submitting this!\n. I did this manually!\n. The bigger question is why you would want to sleep your browser for 45 seconds :wink:\nThe short answer is that you can override the existing config.json with your own, by creating your own derived image that applies your own custom config. Or you can have the config on your docker host and volume mount it in, thus overriding the default with docker run -v <path-to-config-on-host>:/opt/selenium/config.json selenium/hub:2.44.0\n. @crocket Does that satisfy your need?\n. Closing, #35 should help you out.\n. If you are running docker run c6970094431e /usr/bin/firefox where that hash is the image id of selenium/node-firefox then I'm not surprised. Docker containers are inherently headless so there's no X11 support to display any gui application. This is why we wrap the selenium process with xvfb-run. See: https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeBase/entry_point.sh#L21-L25.\nSince you are trying to explicitly launch firefox without xvfb running, there would be no display device for it to work.\n. For a sanity check, can you run the test.sh script from this repo and tell me if you are still getting the issue? You will need to clone the repo to do so.\nAlso, have you tried removing the selenium/node-firefox image and re-pulling it from docker hub?\n. I was thinking the same thing, but I have pulled the images fresh from hub.docker.com today and they are working. They were last built before the latest release of firefox. Have you built them yourself locally?\n. The thing that's confusing is that's exactly what this line is for: https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeBase/entry_point.sh#L21\n. Have you tried setting ENV DISPLAY :99.0 to :1 which is the same number display you mentioned above?\n. I don't have a linux machine to test with at the moment. So if you guys create a pull request with a fix I will test that it isn't broken on Mac and we'll go from there.\n. This is a duplicate of a core selenium bug I reported already. As far as I can tell it is not specific to the docker images themselves.\n. I like this idea, I'll plan to review it on Friday.\ncc @psftw\n. Sorry I have no experience with Vagrant, but there should be some kind of vagrant vm which is your dockerhost, once you find that then dockerhost:49155 should work. As for linux the localhost option should have worked, although I haven't used these on a linux box yet.\n. Is the only difference here the base image set to the standalone chrome image?\n. I like this! Just need that minor cleanup issue taken care of.\n. Actually, could you also update the README to explain to others how to use this?\n. @phensley One last housekeeping issue, Have you signed the CLA yet?\n. Closed by commit 778659f, I rebased your changes.\n. Near as I can tell there's only two versions available for ubuntu. Unless I'm missing something.\nroot@4660bdde9f6d:/# apt-cache madison firefox\n   firefox | 35.0+build3-0ubuntu0.14.04.2 | http://archive.ubuntu.com/ubuntu/ trusty-updates/main amd64 Packages\n   firefox | 28.0+build2-0ubuntu2 | http://archive.ubuntu.com/ubuntu/ trusty/main amd64 Packages\nSince I'm hearing that 35.0 is not working right with Selenium 2.44.0, I'll go with 28.0 of firefox for now. Does anyone care or know of something else I should take into account?\n/cc @SeleniumHQ/owners \n. That sounds more involved, but preferred since it opens the doors to more versions of firefox. Hmm, I'll have to think about this one for a bit.\n. That doesn't look any more difficult to maintain than chrome driver, I like it!\n. Ah yes, the auto-update, I need to re-read issue threads again before commenting.\n. It's still a work in progress. Other priorities at work have not allowed me to tackle this right away. Feel free to jump in if you think you can get a pull request that addresses all the concerns mentioned here.\n. Submit a pull request\n. @elgalu @mgingras Looks like this broke the build: https://registry.hub.docker.com/u/selenium/node-base/builds_history/85907/\n. The problem is that the tags have not been updated on dockerhub. I'm fixing it right now.\n. I updated all of them :wink: \n. Can you add some kind of test that exercises this new image?\n. :+1: :+1: :+1: Thanks!\n. Some folks on IRC are asking about this, was node-firefox missed: https://registry.hub.docker.com/u/selenium/node-firefox/tags/manage/\n. So the idea is that when it's time for a version bump you will regenerate all the Docerfiles and commit them? Sounds good to me, that will play well with the docker builds!\n. Sounds reasonable to me.\n. Ah, that makes sense I forgot about those as well since I originally set them up.\n. @kayabendroth is correct, there was a parting of ways for a number of the Node core maintainers that was recently reconciled. Part of the reconciliation meant that the master branch from iojs was the winning codebase. On the projects I've been working on I haven't seen any major problems with the newer version. The main difference is the update to the backing V8 JavaScript runtime and the addition of a lot of the newer ECMAScript 2015 standards.\nThis pull request looks good to me.\n. My understanding was that @rubytester had taken over. I made a request to the @SeleniumHQ/selenium-committers dev mailing list to add @kayabendroth as another maintainer, but I don't think that actually happened. I'll do some follow up this week to figure out who is maintaining this now. I had to step away due to other work obligations, though I still see immense value in this project and do hope to see it's success. My goal for any OSS project I work on is to have multiple maintainers from multiple companies so as to avoid bottlenecks. I apologize for the delay.\n. I believe the timezone setting was an artifact from @elgalu's original work at the beginning of this project. I'd imagine removing it should be just fine and just use UTC.\n. Is there a reason you chose to derive from base and not node-base? For example both the Chrome and Firefox nodes derive from node-base: https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeChrome/Dockerfile#L1\n. That base image takes care of about half of this dockerfile\n. Do you really need to install curl? wget is already installed in the base image There should be no reason to install two different tools for downloading internet content.\n. If you let WebDriver launch this than you should avoid your cookie problem since the process would regularly be restarted. You should include a config.json similar to the Chrome and Firefox images to accomplish this: https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeChrome/config.json\n. You may find this useful :smile: : http://stackoverflow.com/questions/7335420/global-git-ignore\n. I don't think this will hurt anything to have there, I mainly put that there as a note so he doesn't have to add to many repos.\n. ",
    "lrhazi": "Cool. Thanks a lot. I'll try out.\nOn Wed, Nov 19, 2014 at 9:56 AM, Matt Smith notifications@github.com\nwrote:\n\nI agree, and work is in progress to do so. Check out the change-base-image\nhttps://github.com/SeleniumHQ/docker-selenium/tree/change-base-image\nbranch. It is still a work in progress, so a second pair of eyes with\nfeedback would be great. You can build the image yourself and test it out,\nit is working, however I have not figured out a debugging solution yet\nwhich is why I haven't pushed it to master and published to hub.docker.com\nyet. This is all part of the \"Get Docker Official Repository Signoff\"\nMilestone\nhttps://github.com/SeleniumHQ/docker-selenium/milestones/Get%20Docker%20Official%20Repository%20Signoff\n.\nShould be resolved with #3\nhttps://github.com/SeleniumHQ/docker-selenium/issues/3\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/9#issuecomment-63651550\n.\n. \n",
    "androa": "A solution for allowing both \"solutions\" would be to expose the number of browser instances and the timeout as environment variables that can be overridden when running the containers.\n. Yeah, this seems like a very nice fix. We will set up a small testing cluster in mesosphere and I can test running some nodes with just one browser and some with several browsers and see if I find any pros or cons with either approach.\nAs I agree with the single process per container philosophy, I'm not quite sure if it is applicable in this case, I think it is more a matter of \"one concern per container\". For example Apache will still run several childs to accomplish its work, which in my opinion is very similar to allowing Selenium to use several browser instances to fulfil its work.\nBut with a 30 sec timeout and with how easy it is to spin up new nodes, it is not in any way a big problem.\nThanks for the fixes :)\n. ",
    "psftw": "As you know, Selenium can run in both single-browser-per-node and multiple-browser-per-node configurations.  In the context of Docker, I agree that the single-browser-per-node model makes the most sense, but users are always free to customize the configuration and run whatever works for them.  I plan to setup up a modern Jenkins/Docker/Selenium test automation rig and see how that goes before I jump in and comment further on how to do it the \"Right Way\".  :-)\n. From another comment I just made:\n\nIn the context of Docker, I agree that the single-browser-per-node model makes the most sense, but users are always free to customize the configuration and run whatever works for them.\n\nTo be clear, I'm not the official litmus tester of Docker Best Practices, but my take is that both ways are OK.  I think we should recommend the single-browser-per-node model, but also mention it's drawbacks (resource consumption)?  Seeing some numbers with a good test case could be enlightening.\n. FWIW @mtscout6, I'm more concerned about the xvfb-run wrapper than what the Selenium server orchestrates on the backend.\n. No objections here.  I can't think of a scenario where it would matter within the context of running selenium.\n. ",
    "lukeis": "@mtscout6 the defaults could be considered a random number, feel free to set it as appropriate in this project.\n@androa updated that wiki page to reflect the 300s default value, thanks for pointing that out.\n. :+1: to that idea Matt, I wouldn't want to see plugins like that in the base image, especially since there are many applications that don't require it and it would add significant bloat.\n. selendroid seems possible or maybe just the android aspect of appium.  But appium for iOS is a non-starter here until docker supports OSX containers.\n. They were added-\nhttps://github.com/orgs/SeleniumHQ/teams/docker-owners\n. Open source, volunteer, yadda yadda... No need to apologize @mtscout6 :)\n. ",
    "c0nstructer": "Yes of course. But first i must describe following situtation. At first, i used your standard hub and node-chrome, node firefox images. I spawned 1 request at time, worked fine. I spawned 5 requests, worked fine, i spawned 10 request, i got timeout. After that, i also tried only single request, i got also timeout. I wanted more parallel request, so I've overriden config.json in node chome and firefox to maxInstances 25, max Session 25.\nI spawned 10 request to chrome, 10 request to firefox. Also crashed.\nAlso I am reporting slow register time, even with your default images, sometimes it takes 1 minutes to node to register on hub, sometimes 40 minutes.\nHere is docker log on creating a request.\n15:47:54.768 INFO - Trying to create a new session on test slot {platform=LINUX, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=25}\n15:47:54.775 INFO - Available nodes: [host :http://172.17.0.71:5555, host :http://172.17.0.70:5555]\n15:47:54.775 INFO - Trying to create a new session on node host :http://172.17.0.71:5555\n15:47:54.776 INFO - Trying to create a new session on test slot {platform=LINUX, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=25}\n15:48:40.204 WARN - IOException thrown while closing Closeable.\norg.seleniumhq.jetty7.io.EofException\n        at org.seleniumhq.jetty7.http.HttpGenerator.flushBuffer(HttpGenerator.java:939)\n        at org.seleniumhq.jetty7.server.AbstractHttpConnection.flushResponse(AbstractHttpConnection.java:612)\n        at org.seleniumhq.jetty7.server.AbstractHttpConnection$Output.close(AbstractHttpConnection.java:1001)\n        at com.google.common.io.Closeables.close(Closeables.java:79)\n        at org.openqa.selenium.io.IOUtils.closeQuietly(IOUtils.java:45)\n        at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:440)\n        at org.openqa.grid.internal.TestSession.forward(TestSession.java:266)\n        at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:88)\n        at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:111)\n        at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)\n        at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n        at org.seleniumhq.jetty7.servlet.ServletHolder.handle(ServletHolder.java:565)\n        at org.seleniumhq.jetty7.servlet.ServletHandler.doHandle(ServletHandler.java:479)\n        at org.seleniumhq.jetty7.server.session.SessionHandler.doHandle(SessionHandler.java:225)\n        at org.seleniumhq.jetty7.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)\n        at org.seleniumhq.jetty7.servlet.ServletHandler.doScope(ServletHandler.java:406)\n        at org.seleniumhq.jetty7.server.session.SessionHandler.doScope(SessionHandler.java:186)\n        at org.seleniumhq.jetty7.server.handler.ContextHandler.doScope(ContextHandler.java:965)\n        at org.seleniumhq.jetty7.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n        at org.seleniumhq.jetty7.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)\n        at org.seleniumhq.jetty7.server.Server.handle(Server.java:349)\n        at org.seleniumhq.jetty7.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:452)\n        at org.seleniumhq.jetty7.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)\n        at org.seleniumhq.jetty7.server.AbstractHttpConnection.content(AbstractHttpConnection.java:894)\n        at org.seleniumhq.jetty7.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:948)\n        at org.seleniumhq.jetty7.http.HttpParser.parseNext(HttpParser.java:857)\n        at org.seleniumhq.jetty7.http.HttpParser.parseAvailable(HttpParser.java:230)\n        at org.seleniumhq.jetty7.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)\n        at org.seleniumhq.jetty7.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)\n        at org.seleniumhq.jetty7.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)\n        at org.seleniumhq.jetty7.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: java.net.SocketException: Broken pipe\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:159)\n        at org.seleniumhq.jetty7.io.ByteArrayBuffer.writeTo(ByteArrayBuffer.java:354)\n        at org.seleniumhq.jetty7.io.bio.StreamEndPoint.flush(StreamEndPoint.java:159)\n        at org.seleniumhq.jetty7.io.bio.StreamEndPoint.flush(StreamEndPoint.java:177)\n        at org.seleniumhq.jetty7.http.HttpGenerator.flushBuffer(HttpGenerator.java:863)\n        ... 33 more\nOn my side of script i get \n```\nRuntimeError: RuntimeError\n     (UnknownError:13) An unknown server-side error occurred while processing th\ne command.\n     Problem: Process timed out after waiting for 45000 ms.\u2190[1;30m\n Callstack:\n -> init()\n\n```\nSomethimes i get error (only spawning firefox e.g 2 requests)\n```\nRuntimeError: RuntimeError\n     (UnknownError:13) An unknown server-side error occurred while processing th\ne command.\n     Problem: Unable to bind to locking port 7054 within 45000 ms\nBuild info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:02:37'\nSystem info: host: '7baa98c0e9ff', ip: '172.17.0.70', os.name: 'Linux', os.arch:\n 'amd64', os.version: '3.13.0-37-generic', java.version: '1.7.0_65'\nDriver info: driver.version: FirefoxDriver\u2190[1;30m\n Callstack:\n -> init()\n\n```\nNote that chrome is performing fine under 5 requests even instance and session are 25.\nnode firefox shows:\nBuild info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:02:37'\nSystem info: host: '7baa98c0e9ff', ip: '172.17.0.70', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-37-generic', java.version: '1.7.0_65'\nDriver info: driver.version: FirefoxDriver\n15:48:40.185 WARN - Exception thrown\njava.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException\nBuild info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:02:37'\nSystem info: host: '7baa98c0e9ff', ip: '172.17.0.70', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-37-generic', java.version: '1.7.0_65'\nDriver info: driver.version: unknown\n        at java.util.concurrent.FutureTask.report(FutureTask.java:122)\n        at java.util.concurrent.FutureTask.get(FutureTask.java:188)\n        at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:175)\n        at org.openqa.selenium.remote.server.DefaultSession.<init>(DefaultSession.java:111)\n        at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:88)\n        at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:108)\n        at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:57)\n        at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)\n        at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:112)\n        at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:172)\n        at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:201)\n        at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:163)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)\n        at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:129)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n        at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)\n        at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler.java:680)\n        at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.java:571)\n        at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)\n        at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)\n        at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)\n        at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)\n        at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:986)\n        at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)\n        at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)\n        at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)\n        at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537)\n. I will do that, although ram memory is a bit more consumed when generating nodes.\nI will report my findings, i must wait a bit longer for register cycle on nodes, its not instant.\n. Ok,\nIve pulled clean images hub, chrome and firefox\nThis is log of chrome\n16:36:04.336 INFO - Launching a selenium grid node\n16:36:05.250 INFO - Java: Oracle Corporation 24.65-b04\n16:36:05.250 INFO - OS: Linux 3.13.0-37-generic amd64\n16:36:05.262 INFO - v2.44.0, with Core v2.44.0. Built from revision 76d78cf\n16:36:05.351 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match with current platform: LINUX\n16:36:05.381 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:5555/wd/hub\n16:36:05.382 INFO - Version Jetty/5.1.x\n16:36:05.383 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]\n16:36:05.384 INFO - Started HttpContext[/selenium-server,/selenium-server]\n16:36:05.384 INFO - Started HttpContext[/,/]\nAlso same as firefox\n. Well my idea  was that if one node is runned under 20 sessions it consumes ram for one node and to run chrome. If i spawn 1 node for 1 process, it will take ram for node and for browser, and that consumes alot of ram.\nSo basicly my idea was 1 node 25 chome, second node 25 firefox browsers, and less ram consumptions.\n. They registered, i spawned 1 request per node working ok. I will spawn 20, 30 nodes and try 20, 30 request, will report to you whats happening\n. @mtscout6 Do you want me to register it on github?\n. I closed it by mistake, sorry :)\nI was thinking on open issue on github about node to hub registration.\n. I am also again reporting, 30 minutes, and nothing, even builded images from this git repo.\n. Hello,\nI found the real problem, and workaround solution. As @krosenvold mentioned its not selenium's fault its java's fault.\nProblem is that selenium cannot even open sockets, and connect to hub, looking thats something wrong.\nI've used following commands (without docker, regular selenium)\n$apt-get install rng-tools\n$rngd -r /dev/./random\nStarted selenium hub and node instantly connected, even started standalone selenium, worked like a charm!!!\nI hope that this solution will help you guys.\n. @mtscout6 I spawn hub, 4 nodes, it bloats up to 1 gigs of rams. My solution was 1 node parallel spawns.\n. @psftw Is it possible that you make one image of xvfb?And node-crhome/firefox to use one container of xvfb, and not instantiate it everytime? As I understood, xvfb runs like a server, it manages video buffer, and every application that uses gui goes thru xvfb. No need for multiple instantiations.\n. Hey, sorry for not responding so long.\nI didn't get a chance to test it out like you did, but, when you spawn 1 node, works like a charm. I tried to spawn on 1 node 5 sessions,  so it might have something with memory. I am now spawning 1 hub, and 5 nodes per hub, hoping that will solve my memory issues. Also there is an error if you spawn more nodes on one hub, even you write in your hub config file 20 sessions (not node). I hope i will resolve this by spawning multiple hubs, and on 1 hub one node.\n. ",
    "jaredm4": "Happening to me as well. Over 6 minutes! Hoping Selenium team can help with a fix for this soon. Really wanted to Fig the Selenium instances. :)\nfirefox_1 | 00:22:44.580 INFO - Started HttpContext[/,/]\nfirefox_1 | 00:28:57.556 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@5b3dbee4\n. I don't think it's acceptable personally, very kludgy. But it may give Docker some hints on how to solve this with the daemon itself?\n. ",
    "eugene-dounar": "Also affected.\nnode-chrome connects to the hub instantly on my laptop with 8Gb RAM, however when launched on DigitalOcean 1Gb droplet it takes 4 minutes.\nLogs https://gist.github.com/eugene-dounar/52a302f52dcdf61e5e1a\n. Ok, it seems that I've been able to fix that. @mtscout6 hint should have been obvious that selenium just blocks until kernel have enough entropy to generate this random seed. \nSo just try installing haveged. For Ubuntu:\napt-get install haveged\nservice haveged start\nupdate-rc.d haveged defaults\n. I just installed haveged on the docker host itself. It works since all docker containers use host's kernel and same /dev/random. So adding entropy on the host will resolve the problem inside containers.\nI use Linux on both laptop and hosting so not sure about how to fix it in boot2docker on OSX :\\\n. I think it's a Selenium issue. Using /dev/random makes no sense here.\n. ",
    "WillAbides": "Thanks, @eugene-dounar for finding the random issue.  I was pulling my hair out over this last night and was dreading more troubleshooting.  Your comment changed the trajectory of my day.\n. I may have a pull request for you in a couple of days depending on work load\n. I signed the CLA a few minutes ago.\nAs for tests, I was unclear on what test.sh is doing.  I'll work my way through that and amend this pr.\n. Added standalone tests in sa-test.sh and updated Makefile to include it.  I had to refactor the Test image a bit to make it work with standalone tests.\n. This is a week old now.  Is that long enough to wait on input?\n. Additionally, when #35 get's merged, you can run docker run -e \"GRID_TIMEOUT=120000\" -e \"GRID_BROWSER_TIMEOUT=120000\" selenium/hub:2.44.0\n. I like the environment variable idea.  My plan was to create a script that would start the container, then immediately run start_vnc.sh.\n. I like this.  The fewer hardcoded values the better.\n. How would the tags work for this?  I'm thinking something like this:\nselenium/node-firefox:2.45.0_firefox37.0.2  points to firefox version 37.0.2.\nselenium/node-firefox:2.45.0 points to stable firefox at build time.\n. @ipreachable, Have you signed the CLA as described in CONTRIBUTING.md?  If not, please sign it so that we can merge this.\nAlso, it would be helpful to add some documentation about where to specify JAVA_OPTS.\n. This will be a big help.\n. This is addressed in #58 \n. Thanks.  In addition to fixing the typo, the timing of this also verified that circleci will automatically test pull requests.\nNot surprisingly, it appears that changing README.md doesn't break the build. \n. ",
    "krosenvold": "This is really a core java issue. Java uses /dev/random for lots of stuff and is not something that can be fixed within selenium. File a bug report with oracle, find enough entropy or live with the waits. \n. ",
    "nirvdrum": "We ran into this with JRuby, too.  You can tell the JVM to seed from /dev/urandom instead, which is non-blocking, by way of a system property.  You could also use something other than Linux, since no other OS seems to exhibit this behavior.  Caveat emptor:\nhttps://github.com/jruby/jruby/issues/1405#issue-25619889\n. @mekhami The issue is induced by the number of times random data is read (e.g., SecureRandom) and the rate at which /dev/random is being drained on a given machine.  It may very well be that your selenium-server just isn't as active or isn't contending with as much.  Unfortunately, it's a thorny issue.\n. FWIW, I agree with @pm-kedar-jedhe here. Requiring a Selenium Server instance per browser is a very heavy requirement and something we moved away from in the Selenium Grid 1.x -> 2.x upgrade.\nI get the docker philosophy, but really we're just moving the goal post. By running the Selenium Server and a single browser, you've already violated the single process ideal. To be pure, what you'd probably want is that container to spawn a new container for each browser, which should be doable, but requires a lot of setup (sudo-less docker run, shared mounted docker socket, linked containers so the wire protocol can be spoken).  At that point, you'd need to relax the 1 browser restriction in the config anyway.\n. Apologies if I wasn't clear, but this isn't about having the Ubuntu install. This is about the requirement of needing to run a new Java server (the node) for each browser, which is antithetical to the grid design.\nI think what you're suggesting could work. But normally the node manages the browser session lifecycle. In my experience, trying to keep a browser hot by managing it outside creates all sorts of headaches. And I think the true value in docker here is being able to completely toss away the browser session state via the container lifecycle, which if I understand from your proposal, is compromised by keeping a static set of browser containers around.\nWhile not the simplest thing in the world, the more I think about it, the more I think the node should spin up browsers in their own containers. The docker part is reasonably straightforward, if not tedious. But the browser launcher commands would need to be updated to handle spinning up the containers.\nThe other aspect to this that we haven't addressed is the node is responsible for resource management. It's expected a node can advertise more browsers than it can actually process. E.g., a node can advertise 5 Firefox, 5 Firefox ESR, and 5 Chrome, but also only 5 slots in total. This allows the hub to schedule any combination of 5 browser sessions on that node. By limiting the node to a single registered browser and running multiple nodes on the same machine, resource management would need to be done via a custom grid plugin.\nAcknowledging all of this is rather messy, since there's two execution models with not-exactly-compatible designs, I'd be okay just allowing for multiple browsers running per session, but defaulting to 1. In that case, if someone needs to clear state, they could just restart the single node container.\n. ",
    "zxqfox": "In case you have enterprise standard app servers without privileges to change your binaries you can add a JVM flag to overwrite wich random generator should be used. E.g.:\n-Djava.security.egd=file:/dev/./urandom\nThat way you don't have to change any system settings.\n. ",
    "ghost": "I had this issue when spinning up my grid earlier. This fix solved it, but I was wondering if I need to open an issue elsewhere to see about getting this resolved, because in selenium-standalone-server-2.45 it's not. \n. FYI, I just fixed an issue with a selenium docker container hanging during startup by setting the container environment variable JAVA_OPTS to \"-Djava.security.egd=file:/dev/./urandom\", which the container entrypoint script respects.\n. I tried this pull request and it did not work for me, the container does not start up. Any one else have better luck?\n. Thanks @ecirtap, you saved me a lot of time. . yes, which would be super useful as we're hitting the resource limits on our aws instances using the standard selenium images. Headless should help there.. Hi Diemol,\nIt was an error on my part. I forgot to run the 'export DOCKER_HOST=docker'. It works now.. @dylanlive thanks for the advice. I did go through it and successfully added the group but when I wanted to add my user (i.e. the mac user) to the group, using\nsudo usermod -aG docker $USER\nI got this:\nusermod: user '[myUsername]' does not exist\n. ",
    "dhruvbhatia": "I'm experiencing the same issue running docker-selenium on AWS EC2 instances (tested both Amazon Linux AMI 2015.03 (HVM) using Amazon's Docker release and Ubuntu Server 14.04 LTS (HVM) using Docker 1.7).\nThe docker run -v /dev/urandom:/dev/random ... solution helps a little (selenium progresses further in my queue), but things still eventually freeze up given enough time. What's weird is the entropy of the host system appears fine whenever the freeze occurs.\nHas anybody experienced the same thing? For reference my grid is running 20 Chrome instances and my queue freezes after about ~1500 sessions.\n. @jjYBdx4IL :+1:\nJust tried the DBUS_SESSION_BUS_ADDRESS=/dev/null solution and it appears to be working for me!\nI've been battling with this for months, so it's great to finally have a workaround (though I may be counting my chickens early; still have yet to test extensively).\nAlso, I'm confident this is an underlying selenium or docker issue rather than a chromedriver issue, as I had previously tried replacing Chrome with Firefox and inevitably ran into the same thing (random hangs whilst creating a new session).\n. ",
    "lucacri": "I spent the last 48 hours trying to fix this problem too!\n@eugene-dounar 's suggestion to install haveged worked wonderfully. THANK YOU!\n. ",
    "ddavison": "You are able to build your own images with specific Firefox and Chrome versions.\nI do not plan on releasing different tags with different browser versions considering the maintenance cost of this.  I will bundle all tags with copacetic versions of the browser with the Selenium version.\nPlease see the wiki page Building your own images to see how to do this.\n. are you still having this issue @techjacker ?\n. alrighty - well i'll close this out.  feel free to reopen if you ever run into it again, or validate that you still can't\n\ud83d\ude03 . no response for years. closing.. this is definitely something I would like to do.  would you mind submitting a pull request?  if not, i'll get to it myself eventually\n. oh perfect!  thanks - i'll close this in favor of #38 \n. this seems functionally invalid.. at the very least, i'd expect your dockerfile to download the htmlunitdriver, but it doesn't. \n. agreed, @rubytester, both points. making those changes now.  . also wrote a quick'n'simple wiki to using it: https://github.com/SeleniumHQ/docker-selenium/wiki/Setting-a-Timezone. I'm going to close this as you were using (what now is) deprecated technology.  Docker has deprecated boot2docker in favor of the Docker Toolkit which works wonderfully.\n. it might be worth trying to update.  a lot has changed since 2.46.  we can reopen if this is still valid. I'm sure this doesn't happen anymore.  Closing.\n. are you still having this issue @nirav1911 ?  \nthere's really not much i can go on to help you out. maybe share the way that you are running the containers\n. check DNS as rubytester had mentioned, @rogoit. . closing as no response given for quite some time. thanks @unickq.  closing.  REMOTE_HOST might still be relevant for their version, but no activity for a while. it would technically work without mounting a volume, but we completely recommend mounting a volume because FF is a \"hungry\" browser like chrome is. That's correct.  most (if not all) necessary parameters are added to the Dockerfile's, both for nodes and the hub.. @alexkogon is correct, this is typical behavior of the hub, usually due to misconfigured timeouts.  i'd recommend toying around with them if default settings don't work.. no response for a week, closing.. closing. assuming this is issue is not present using the latest docker version and image versions.  if this is an incorrect assumption, we can reopen.. @rajatjindal83 are you using the details provided in https://github.com/SeleniumHQ/docker-selenium#running-the-images?\nspecifically, the /dev/shm bit?. that's f\u00f6r both firefox and chrome. closing this.  VNC will stay.  using something like RDP is windows specific.  VNC at least keeps it generic.. closing. feel free to reopen if this is still an issue.. correct, we won't be putting video recording in these images. I'll work on creating a wiki page entry for this, instead of the README.md.  i'll link it from the readme as well.. not to mention, @diemol, Chromium != Google Chrome.   Users of Selenium might find that alarming if they want to test \"Google Chrome\" and get \"Chromium\".\nAs far as i know, it's still impossible to install Google Chrome from the package manager in Alpine Linux. @slugics also, since you want to pass to individual nodes, this proves a difficult situation since docker containers are spun up in clusters.   \nIf all you are editing is the timeout, then you should have different clusters spun up with different timeouts and not worry about node-individuality. . closing in favor of #224 \n. closing as this is assumed no longer an issue.  if it is we can reopen.. weird.. ^  I'll look into the failure.  worked fine for me earlier.\n. looks like an issue with circleci, and not able to write to /opt/selenium properly ?  I have a completely identical repository:\n$ docker pull ddavison/docker-selenium-ephemeral which just contains the changes above, and works just fine locally.\n\n. docker committers, could somebody help me with this? :sweat_smile: \n. poke, docker committers. if you need to talk to me in #selenium irc, i'm sircapsalot\n. line 22 chowns the whole directory to seluser, so users will be able to change the config at run time\n. i wouldn't mind merging this guys, but i wasn't involved with the circleci stuff.  it looks like our CI is broken for this project\n. looking into it\n. @iGitScor , do you mean another docker image entirely? if you no longer use the seleniumhq images, we can close this issue.. closing - reopen if this is present in the official docker-selenium images @iGitScor \ud83d\udc4d . you're looking at it \ud83d\ude03   https://github.com/seleniumhq/docker-selenium . so you still have this issue using these images?. ultimately it would depend on what sort of resources you are devoting to the docker machine from the host.  that being said,  there is no \"clear distinction\" where the thresholds are.\nIf you find it, let me know and we can create a wiki page on it!\n\nIs there documentation of how master handles tests between agents?\n\nIf you mean executing the same test against different containers, then you are already going against the whole point of docker containers.  It'd be bad test logic if your tests are dependent on something like \"let's make sure it finishes here, before moving on\". yes, this has to do with how small docker containers are. they are designed to be extremely minimal.  running browsers (especially chrome) is a hefty task.  unfortunately - as far as i know, there is nothing we can do on these containers regarding this.  the best thing to do is to share the hosts memory.  considering this, i will be closing this issue.  if there are solutions that are offered in the README.md files specific to the nodes, pull requests are gladly accepted!\n. I will have this covered with the changes i've been working on.   i will update this issue with details (and hopefully a wiki page for maintainers for docker-selenium)\n. if there is an improvement you can make to the documentation - please! submit a pull request so all can benefit! :). thanks @zypherman , please also make sure you've signed the CLA, and for future pull requests, make sure that your git config --global --list is up to date. looks like your user.email could be incorrect?\n. @ashutoshmittal2309 is correct.  you need to specify proxy information within your selenium DesiredCapabilities.. I think for the 3.0.0 release, I will be, instead of variants, making the base alpine to start with, and get away from ubuntu.  that way we don't have to manage different base images\n. so, i've been working on converting us to alpine; here are my findings...\n1. x11vnc is not available to install from main or community with apk add. \n2. All alpine executables are compiled by the Alpine community and provided.  Both Chrome and ChromeDriver are proprietary, and follow a different versioning system.  This means that we can't specify ARG CHROME_DRIVER_VERSION=2.24.  it would have follow their schemes which could be very confusing.\n3. Alpine provides \"chromium.\"  This is the base chromium browser - not Google Chrome, therefore I don't believe we will be able to use Google Chrome in the alpine images.\nNow, #1 and #2 are solvable.   1)  we can manually copy a x11vnc.apk package into the containers.  2) we could use their source to build, but could take a while to even build the docker images, and not sure about that.\n. I appreciate you tuning in @SUNx2YCH and giving your findings.  I don't know what to say.. I think we may have to keep ubuntu as base and just take the \"+100MB more\" of disk space for using ubuntu versus Alpine.\nUnless other people can tune in?\nI'll leave this issue open for discussion.\n. we are up to 47.0.1 now\n. since this is on Docker's side, closing.  once an update comes out for docker, we can ensure that this is indeed fixed.\n. edited the wiki page with this info\n. as the new maintainer of the project, i've been making sure that all browser versions are copacetic with the Selenium version released.\nas far as the browser versions being updated, I will update them when they need it.  For example, 3.0.0 is coming out, and it rules out RC.  I will bump the FF version to 49, since Selenium 3.0.0 requires geckodriver. \nall this being said, if you need to specify your own versions, I recommend that you build your own images.\nIf you wanted to build a docker container with Firefox version 48, you can do that.\npull our code down, then you can utilize our Makefile, or just use plain-ol-docker.\nbash\n$ docker build -t my-firefox-image --build-arg FIREFOX_VERSION=48.0.1 NodeFirefox\n$ docker build -t my-firefox-image --build-arg FIREFOX_VERSION=48.0.1 NodeFirefoxDebug\n$ docker build -t my-firefox-image --build-arg FIREFOX_VERSION=48.0.1 StandaloneFirefox\n$ docker build -t my-firefox-image --build-arg FIREFOX_VERSION=48.0.1 StandaloneFirefoxDebug\nor using our Makefile\nbash\n$ BUILD_ARGS=\"--build-arg FIREFOX_VERSION=48.0.1\" make firefox firefox_debug standalone_firefox standalone_firefox_debug\n. committed as e116033037e7f9b91bea81a2ffbe723572d079dd.  thanks!  also, have you signed the CLA?\n. not sure i like the idea of having something like this in our repo.. if this is put in, then other \"grid enhancement\" libraries will be put in.  as far as i can tell, this is just allowing people to prioritize tests.  I think i'd prefer leaving this out.  that being said - it's easy to create and push your own docker images to hub.docker.com !\nsorry, @roydekleijn.  for any future pull requests you may submit, could you please fix your git config --global user.name and git config --global user.email?  your commits are showing up as an unknown author.  also verify that you've signed the CLA\n. we can't necessarily assume that it's the docker containers that are causing this, unless you can prove it.. i'd move this up the ladder and bring it up with protractor\n. I'm not able to reproduce.. using the latest node-chrome and node-firefox containers,\ndocker-compose.yml\n``` yaml\nhub:\n  image: selenium/hub\n  ports:\n    - 4444:4444\nfirefox:\n  image: selenium/node-firefox\n  links:\n    - hub\n  environment:\n    SCREEN_WIDTH: 1200\n    SCREEN_HEIGHT: 768\nchrome:\n  image: selenium/node-chrome\n  links:\n    - hub\n  environment:\n    SCREEN_WIDTH: 1200\n    SCREEN_HEIGHT: 768\n```\nUsing these parameters, I got: \nChrome: #<struct Selenium::WebDriver::Dimension width=1050, height=748>\nFirefox: #<struct Selenium::WebDriver::Dimension width=1080, height=691>\nWhen I specified\nyaml\n  ...\n  environment:\n    SCREEN_WIDTH: 800\n    SCREEN_HEIGHT: 600\nfor both nodes, I got\nChrome: #<struct Selenium::WebDriver::Dimension width=780, height=580>\nFirefox: #<struct Selenium::WebDriver::Dimension width=720, height=540>\nbesides the disparity of the browsers and their toolbars (the viewport is smaller in firefox because of the toolbars and address bar), everything looks normal.\n. this also is related to #250.  we may need to close this one as another duplicate.\n. this was fixed in c338b611e5df5a314ad18d32fab38b5aaa4d4a79\n. closing in preference of #250 \n. if i understand this correctly, @mateuyabar you are trying to download a file from the browser into the docker container?  why are you doing this instead of putting the downloaded file on the host machine?\n. there you go ^.  mounting directories is the best way to accomplish this.  by mounting, then you will have the directory on your machine.\n. apologies for nobody getting to you @juliangamble, unfortunately this case is extremely difficult to reproduce, and i'm not sure anybody else has the same issue you have so there's really no way to validate what you are saying.\nwould you mind if i just add this pull request as a new wiki page instead, with a disclaimer?\n. https://github.com/SeleniumHQ/docker-selenium/wiki/Corporate-Proxies\n. it definitely should be an arg, and specified by docker build -t my-firefox-image --build-arg CHROME_DRIVER_VERSION=2.23 for example.  I've already updated it and released it in 2.53.1-americium.\n@F2X has a pull request that was just merged and will fix the same functionality with  Firefox.  This functionality will be released as 2.53.1-beryllium\n@adamlievrouw,\nto fix this, you will need to build your own docker image. (these images were designed that way, anyway.)  you can build your own image with the chromedriver version you want by the following:\nbash\n$ BUILD_ARGS=\"--build-arg CHROME_DRIVER_VERSION=<version_desired>\" make build\nor by manually invoking docker build\n. see my note in your issue.\n. this is only Mac specific, and can be easily circumvented by specifying some options.\n\nIn the meantime, you can override the no_proxy variable by adding it yourself in docker run -e no_proxy=\"\"\nThe value you are seeing is picked up from OSX as it seems to be added automatically to some connections. We had a bug in Beta 13 that caused this value to get passed through to Docker for Mac even if you hadn't specified a HTTP Proxy. This was fixed in Beta 13.1. If you are running Beta 13.1, a reset to factory defaults may remove the bad state for the no_proxy variable.\nSource\n. try and specify the no_proxy stuff in addition to your OTHER_VARIABLE_I_NEED.  the \"No Such file or directory\" right there, is coming from that issue\n. ok, seems also that this is a little out of date.. could you rebase please and push back up?  hard to tell what's actually changing here \ud83d\udc4d \n. merged in! working on releasing 3.2.0-actinium as we speak. this was fixed\n. this has been updated.  2.53.1 has FF 47\n. for your hub_ip, try prepending \"http://\" to it.\n\njava -jar selenium-server-standalone-2.53.0.jar -role node -hub http://hub_ip:4444/grid/register -browser browserName=firefox\n. glad you figured it out! \ud83d\udc4d \n. could you please rebase your branch?  then i'll merge it in\n. yea - i've been fiddling around with it trying to get it to work to no avail.. i'm very tempted to wipe it out and try something with travis\n. good news! i've got travis integration working.  i'll be working on implementing this, then working on getting this in\n. do me a favor @gurukiran007 and push another commit.. your build should pass when run through travis.  (gotta invoke it first with a commit)\n. one more test, then this puppy is going in. give me a little\n. @gurukiran007 , are you able to successfully run your NodeChromeDebug container?  i see that it's done waiting for xvfb, but fails on Xserver stuff, ultimately killing the container\ndj@Daniels-MBP:~/workspace/docker-selenium|0472fd3\n\u21d2  docker run 02a38ad73b5b\n/opt/bin/entry_point.sh: line 5: /opt/bin/clear_x_locks.sh: No such file or directory\nWaiting xvfb...\n-bash: 169.254/16: No such file or directory\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\ndj@Daniels-MBP:~/workspace/docker-selenium|0472fd3\n\u21d2\n. were you able to find out the issue?  the chrome-debug image is still unstable for some reason.. i haven't been able to narrow it down just yet\n. i found the issue - it's due to this issue in docker that i was unable to build successfully.\n. sorry i couldn't give your commit credit there.. i did pull pieces of yours in to use, but i'm trying to organize everything in the repository.. merging it in from github would've been uncomfortable as it is right now.. it'll be stable shortly, where i can accept PR's from github \ud83d\ude0a \n. wait, @gurukiran007 - what were we thinking.. the entry_point.sh is called by root, NOT seluser.  the xvfb-run command is executed by seluser, not root.  and the x11vnc command is run by root, not seluser.\na lot of people said this works for them, but it makes no sense why it does.  i just took a look at https://github.com/SeleniumHQ/docker-selenium/issues/291 and this happens when .vnc/ is in /home/seluser, but passes when in /root/.vnc.\n. well, i have #292 working right now, so i think i'll merge that in.  I don't believe it matters who is running x11vnc\n. i believe your assumption is incorrect.  xvfb-run runs as seluser, sure, but x11vnc running as root really doesn't matter vs running as seluser. \n\n. closing in preference of #234 \n. very cool!  this looks promising.  I can't imagine going away from the Makefile just yet, but I will definitely keep this in mind for the future.\nThanks for the recommendation!\n. if that is your docker-compose.yml file, then they will be running on the same docker host, and that should run just fine.\ni just created a  docker-compose.yml with the following contents\n``` yaml\nhub:\n  image: selenium/hub:2.53.1\n  ports:\n    - \"4444:4444\"\nnodeone:\n  image: selenium/node-chrome:2.53.1\n  links:\n    - hub\nnodetwo:\n  image: selenium/node-chrome:2.53.1\n  links:\n    - hub \n```\nand worked just fine.  if your hub is on a different server entirely, and not being run the docker-compose file, then you are able to specify the hub by specifying a couple env variables\n``` yaml\nnodeone:\n  image: selenium/node-chrome:2.53.1\n  env:\n    - HUB_PORT_4444_TCP_ADDR=10.0.0.x\n    - HUB_PORT_4444_TCP_PORT=4444\nnodetwo:\n  image: selenium/node-chrome:2.53.1\n    env:\n    - HUB_PORT_4444_TCP_ADDR=10.0.0.x\n    - HUB_PORT_4444_TCP_PORT=4444\n``\n. tryenvironment:instead ofenv:` @saifsysim \n. This is a bug fixed in #288, i am in the middle of releasing right now\nwill close this issue when done, and you can pull latest (or 2.53.1)\n. do you still get this error with the newest version?\n. to be clear here, you're asking for a CHROME_VERSION?  right now, there is CHROME_DRIVER_VERSION but no way to explicitly install a different version of chrome.  Is this what you're asking?\n. take a look at the referenced commit. this is what you want. give me some time, I'll merge it in. \n. sure thing, @davehunt\n. @elgalu:\nsh\nBUILD_ARGS=\"--build-arg CHROME_DRIVER_VERSION=2.23 --build-arg CHROME_VERSION=google-chrome-beta=53.0.2785.92-1\" make chrome chrome_debug standalone_chrome. just ran this against the latest selenium/standalone-chrome image with the following ruby script, and it works for me\nbash\n$ docker run -p 4444:4444 selenium/standalone-chrome\n``` ruby\n!/usr/bin/env ruby\nrequire 'selenium-webdriver'\ndriver = Selenium::WebDriver.for(:remote, :url => 'http://localhost:4444/wd/hub', :desired_capabilities => :chrome)\ndriver.get 'https://the-internet.herokuapp.com/javascript_alerts'\ndriver.find_element(:css, \"button[onclick='jsConfirm()']\").click\ndriver.switch_to.alert.accept\ndriver.switch_to.default_content\nputs driver.title\ndriver.quit\n```\n. what command exactly are you running so we can try it from our end.  at first glance, it looks like it could be some sort of limitation on your corporate network?\n. closed with mutual respect.  \ud83d\ude09 \n. not necessary just that commit @HackToday .\nI've pushed up a 3.0.0-beta4 and 3.0.0-beta3 tag. both beta versions have firefox 49.0.1\n. both the issues you speak of, @eXorus  have been pushed today\n. this image was published today\n. i'm not sure this has anything to do with Selenium or these containers.  this has to do with a lack of understanding of docker networking.  i'd recommend researching a little more on how to let your containers talk to eachother.  if i'm wrong, please let me know and i'll reopen\n. @eXorus that issue was actually fixed this past weekend, and newer versions have been released.  2.53.1 is stable now.  @mjgorman could you let me know if this still exists with the newest version?\n. could you share your commands that you are using to run the hub and nodes?\n. i wonder if this is related to https://github.com/docker/compose/issues/3106 ?\n. alright. let me try some things from my side. will advise.\n. so - i hate to say it but i think that's just the idiocy of the selenium grid :)  I played around with some variables, and i still get the same thing.  it eventually comes up, but I'm sure it's not the docker side of things\n. in other words, if you were to manually have the selenium-standalone-2.53.1 jar, and run \n-role hub\nand have 6 -role node -hub http://localhost:4444... \nand do a Ctrl+C on all but one of them, it would render the same result.\n. my best judgement is to close this one out.. i really don't believe this is any of this repositories fault.  (see my comment above about general grid instability)\n. committed in c338b611e5df5a314ad18d32fab38b5aaa4d4a79.  thanks!\n. this is being triaged as we speak.  the latest version should be stable \"soon\" (currently waiting on the thing to be built on docker hub.)\n. I'm still in the process of getting myself involved in docker-selenium, and I would love to spend some time with @kayabendroth so he could show me around.\nI wouldn't mind doing this once i understand everything :wink:\n. in fact, let's leave this discussion open.  @kayabendroth - let's talk.  shoot me an email (found on my github profile) and let's set up a time where you can give me a knowledge transfer of the docker stuff so i could help maintain this repository\n. ref: https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeChrome/Dockerfile.txt#L15\n. i believe the reason that we have it set up that way, is because of hot-fixes.  if we need to release something to 2.52.0 we can just push to the branch and have it updated.  as far as the Chrome part, you are able to specify that now (take a look at the ref in my comment above.)  if you need to specify a version, you will be able to.\nthere is definitely room for discussion on tagging, but i'm still not sure how to best tackle it right now.  \non the contrary however, I think it would be useful to \"not\" have branches and purely use tags.  i'll definitely keep this in mind.\n. ASAP!  hopefully tomorrow\n. Released 3.0.0-beta3 and 3.0.0-beta4 tonight\n. as the author of this change - i'm looking into this.  already have a pull request ( #284 ) that fixes this.  i'll merge when ready.  however - I still don't have the ability to push to docker hub just yet.\n. this is fixed\n. hi @vikramvi, the 2.53.0 versions are unstable at the moment.  I'm in the process right now of pushing up 2.53.1.  maybe try those versions?  later i will work on getting 2.53.0 stable again\nedit: actually, this looks like it might be related to #256 \n. hi @MegaUkrainian thanks for reporting this.. this change actually directly goes against @gurukiran007 's change in #256 , so i'd like to make sure that he has some input on this.\n. it does work as root, and i'm going to leave it that way, really doesn't matter who is running the vnc server.  i've pushed up a new version of the 2.53.1, 3.0.0-beta3 and 3.0.0-beta4 versions, and they are currently building.  they will push when done (and of course, if tests pass.) will close this issue when they are released\n. well it matters since whoever runs x11vnc -usepw..., the -usepw param will look for ~/.vnc.  if root is running the command, then it will look at ~root/.vnc.  if seluser runs that command, it will look for ~seluser/.vnc.  \ni will say, that running the x11vnc command from seluser with the ~seluser/.vnc command would probably work, but since the entry_point.sh is already running as root, might as well keep it that way, and put the passwd file in ~root/.vnc \ud83d\udc4d \n. pushed all versions\n. there definitely is room for discussion, but the docker containers themselves are most of use when you build them yourselves.\nin the StandaloneFirefox container, you are able to specify your own FIREFOX_VERSION and build it yourself.  \nregarding the \"touching publicly published images\", there were many discrepancies found between the 2.53.1 and .0 release, and some images from .0 did not work at all, so they were fixed and pushed up.  it might've been a lack of foresight of updating the firefox version, but again - can be alleviated by building/using your own images pertinent to what your organization needs.\none recommendation i was issued, was to have seperate containers for seperate versions.  2.53.0_firefox47 2.53.0_firefox42 which opens up a whole plethora of maintenance costs, and it's hard to justify when again - you are able to build the images yourselves.\n. i will work on pushing that change to fix this firefox issue though - it is reproducible.  i'm not so versed in the firefox world, and i was organizing everything, and this version slipped through the cracks of testing.\n. confirmed - switching back to 45.0.2 works with 2.53.0.  my apologies for this: you can monitor the build here.  if the tests pass (which before, they didn't. and again - was an oversight on my part.) then the 2.53.0 version will be rebuilt with that version of FF.  \nkeep in mind that again - you may build your own.  I will close this issue after it is pushed up.\n. ok, it's all pushed up.   well - like i said about firefox; i'm not too well-versed in the firefox world. i do most of my personal testing in chrome.  there are all kinds of incompatibilities with firefox and webdriver, especially now with geckodriver coming out only working on versions 49+ or whatever.. (see i don't even know what version it started :P)\nit's hard to keep track of those.  i'll do a better job at asking the other committers on IRC if specific versions are compatible with the versions i release.\n. if you need to adjust the size to your liking, you need to build the image yourself \ud83d\udc4d \ud83d\ude03\n. this is way too big.  i can't even see it on my retina display.  i could on the 27\" imac, but not on my laptop.  sorry - this is not going into the master branch. if you need to build an image yourself with those display settings, you may do that!\n. see change note in the release: https://github.com/SeleniumHQ/docker-selenium/releases/tag/2.53.1-americium\nalso, this is one of the dangers of using the latest tag.  by using the latest tag, you have the danger of pulling in something that is less than ideal like this situation :)  \ninstead of mapping your own json file, just use the built-in functionality.\ndocker-compose.yml\n``` yaml\nselhub:\n  image: selenium/hub\n  ports:\n    - 4444:4444\nfirefox:\n  image: selenium/node-firefox\n  privileged: true\n  ports:\n    - 5900\n  environment:\n    NODE_MAX_INSTANCES: 3\n    NODE_MAX_SESSION: 3\n  links:\n    - selhub:hub\n```\n. yes, because versions less than Selenium 3.0 should allow the possibility of having both RC and WebDriver.  Selenium 3.0 has just the WebDriver protocol because we eliminated the RC code entirely from our code base.\nI'll close this now \ud83d\udc4d \n. really no information for me to help you out.. what version are you using?  what images are you using? \n. ok cool, glad you figured it out!\n. are your nodes docker containers as well?\n. ok, this is most likely because you are running 10 maxinstances.. the performance of the nodes is very dependent on performance.  every time you launch a chrome browser, it takes memory.  the docker containers are very minimal, and are usually only stable for 1 max instance.\nHave you tried the step in the README.md file where it says you should mount shared memory?\n. any way that i can try and reproduce this on my end?  or can this issue be closed\n. thanks for this!  i did notice i forgot to put that in for firefox.  i'll merge it in shortly\n. out of curiosity, have you signed the CLA?\n. this functionality was released with 2.53.1-americium. \nyou can specify a node to run multiple browsers by passing in an environment variable to node-chrome or node-firefox.\nExamples:\n``` bash\n$ docker run -d --link selenium-hub:hub -e NODE_MAX_INSTANCES=10 -e NODE_MAX_SESSION=5 selenium/node-chrome:2.53.1-americium\n=> runs a chrome node that can run 10 instances of chrome, with a max parallelization of 5\n$ docker run -d --link selenium-hub:hub -e NODE_MAX_INSTANCES=2 -e NODE_MAX_SESSION=2 selenium/node-firefox:2.53.1-americium\n=> runs a firefox node that can run 2 instances total at a time.\n```\nbear in mind that the docker images are supposed to be minimal.  I haven't thoroughly tested the results in having a lot of browsers at the same time running in the same machine.  you might have to play with it.\n. regarding the comments of make generate_all; regarding the standalone images, it doesn't need to be redone.  you making this change, will deploy this change also to StandaloneChrome and StandaloneFirefox, which fixes this.\nThanks for this!\n. fyi - i am holding off on putting this in until 3.0.0 stable gets out (should be very soon, and will be released in 3.0.0-actinium)\n. this really has nothing to do with this docker-selenium project, so I will close this issue.  That being said - you'll need to research CentOS systemd system units in order to accomplish this.\n. what docker image versions are you using?\n. no, you are pulling selenium/node-chrome and selenium/hub.  what versions of THOSE images are you using?\n2.53.1?  2.53.1-beryllium?  latest?\n. there's really not much for me to go on here.. you say \"DNS entry\" in your description, but don't provide, and you didn't specify the command you are using to run the docker containers, so i'm operating under the assumption right now that the DNS entry isn't being specified appropriately\n. perhaps related to #258 ?\n. i believe this might be related to #238 \n. that might be because you are using the latest.  if you are using Latest, you need to abide by Selenium 3.0.  \nTry using selenium/hub and node-chrome using version 2.53.1-beryllium with that option.\n. @testphreak  see #307 \n. @fingermark same to you.   since this appears to be your issue also, I am closing this.\nPlease see the comments in #307.\nREMOTE_HOST has been removed.  Please use SE_OPTS=\"-hubHost <host> -hubPort <port> instead of -remoteHost.\n. remoteHost = host + port  therefore there isn't any reason for configuring it.\nhttps://github.com/SeleniumHQ/selenium/blob/master/java/server/src/org/openqa/grid/internal/utils/configuration/GridNodeConfiguration.java#L69\nYou'll notice that the @Parameter is not configurable for this particular String.\n. glad to hear it @testphreak, YES.  you can specify the host and port in the SE_OPTS variable\n-e SE_OPTS=\"-host myhost -port 5556\"\nand it will connect to the hub with that host and port.\n. this looks like it's not specific to the docker containers. this option also isn't available in the generally downloaded selenium-server-standalone-3.0.0.jar file.  i'm investigating.\n. ok, so REMOTE_HOST should actually not be used at all.  All it is, is an amalgam of the -hubHost and -hubPort variables.  Use these instead.  I'll update the dockerfile's to not be able to specify this parameter. \n. yes.\nyaml\n...\nenvironment:\n  SE_OPTS: \"-hubHost <host> -hubPort <port>\"\nalternatively, you can specify -hub.\nyaml\n...\nenvironment:\n  SE_OPTS: \"-hub <http://hub:4444/grid/register>\"\n. For Nodes...\nYou don't specify  -host and -port. only -hubHost and -hubPort\nFor the Grid...\nYou can specify -host and -port but not -hubHost and -hubPort\n. sorry, @chris-smith-zocdoc you're right. I was confused by the question. You can specify -host <host> -port <port> in the SE_OPTS environment variable to start the node on a specific ip/host and port.\nThis worked for me in a docker-compose.yml\n``` yaml\nhub:\n  image: selenium/hub:3.0.0-dubnium\n  ports:\n    - 4444:4444\nchrome:\n  image: selenium/node-chrome:3.0.0-dubnium\n  links:\n    - hub\n  environment:\n    SE_OPTS: \"-host something -port 5556\"  # connected to grid as http://something:5556\n```\n. closing as duplicate of #227 \n. perhaps related to #313 ?\n. > is there an explanation of what -dubnium means anywhere?\n\nNot sure, but there should be. @ddavison?\n\ndubnium is a chemical element.  I've created a wiki page to explain the tagging convention of this repository.\n\nit's not semver at all, I'd clone the docker way of doing things\n\nThe only accurate \"semver\" part is the Selenium verison.  The docker tag represents what version of selenium is going to be pulled.  not necessarily the version of this docker image.  That's why i use a -<chemical element> suffix to show our version.\nI've been bitten in the past updating \"recent\" tags like this.  I definitely like the idea, but force pushing tags back up you run into the problem of breaking something that somebody else expects to work.\n. the more i think about it, the more i do like it.  if it did break for somebody, they could always specify the 3.0.0- version to make it remain unchanged.\n3 and 3.0 would be good versions to push to docker tag as latest.. i do like this convention.\n. @graingert the next release i'll work on it\n. forgot to update you guys on this, this is FIXED!. so it looks like Firefox 52 and 53 have this enabled?  am i correct by what i read from that bugzilla issue, @davehunt ?\nif so, you guys can build your own images with those versions, until we get the official images updated. great news!  closing. @joaoluizjoaquim no specific command to run to fix this.. it's just using the correct version.  if you use latest, you're certainly covered.  the commit was introduced in 3.4.0-bismuth.   therefore,\nversions >= 3.4.0-bismuth will work.. try the latest image (dysprosium). this is a step in the right direction.  I still had to run my node-chrome-debug using -e no_proxy=\"\" -e HUB_ENV_no_proxy=\"\", but that's just because of the Docker issue on OSX\n. just like the way youare doing, by specifying ports:.  the format you should be using is:\nyaml\nports:\n  - \"<container_port>:<host_port>\"\nthat will publish <container_port> on the host's <host_port> port.\n. that's the way docker works, you are trying to expose 5901 several times.  what you need, is\nyaml\nports:\n  - \"5900\"\nthen docker will select a random available port to publish that on.  it will give you something like:\n24354 then you can VNC to that port\n. have you seen https://github.com/SeleniumHQ/docker-selenium#running-the-images ?\n. > Still don't totally understand the issue\nThe issue is, is that these docker containers (as are all docker containerS) are meant to by tiny. they can be bigger, but yes - you have to share the resources from the host.\n. > I couldn't find any information on this.\nThat's because it's \"best guess\" at this point \ud83d\ude1c   there really isn't any statistics or benchmarks that are recorded yet for performance. i will be perfectly happy creating a wiki page dedicated to the benchmarks of these containers, but i think i'd need help from the community aggregating all that info\n. not sure why, but you've removed the pull request template that was given to you.  there was a checkbox you were to check if you've signed the CLA\n. yes, you can use these docker images in windows. \n. ok... i had spent several minutes last year replying to this message, and i never submitted it.\n@smccarthy is right, for now.  I am monitoring the ability to run windows in a docker container.  for right now, this is not possible.  Just the same as Safari as we cannot run Safari without Mac.\n(That's only paraphrasing what i actually said. i'm quite upset that i didn't click comment.). closing, as assuming complete. we can reopen if need be!. You might also need to specify NODE_MAX_SESSION as well as NODE_MAX_INSTANCES.\n. i believe this could be something to do with the /tmp directory, and the profiles being created, but not cleaned up.  I agree this is something that should be covered.\n. > Another factor to consider is that we should update the docs to advise mounting the /tmp directory to tmpfs or /tmp for those who don't have autoscaling solutions. \nthat's definitely a good idea, too.  we already do -v /dev/shm:/dev/shm perhaps we could recommend -v /tmp:/tmp\n. super idea \ud83d\udc4d   since no progress has been made on this, i'll go ahead and start with the change. note:  \n\nNOTE: If you are using Docker 1.13 or greater, Tini is included in Docker itself. This includes all versions of Docker CE. To enable Tini, just pass the --init flag to docker run.\n\nsource\nthat's nice!  let's make sure to document that. error forwarding the new session. sounds like at least one of the nodes cannot connect to the grid.  the max session and max instances stuff was implemented with really no benchmarking - so we really don't know how they react.  when you connect to the hub, are you able to see that it can support chrome and firefox?\n. have two steps:\n1. Launch Hub / Nodes\n2. Launch tests\njust as you said, sounds like you ahve the steps bundled:\n1. launch hub /nodes; launch tests\ni'd recommend separating them somehow.\nor, having a middle-layer script that waits until the hub / nodes are running\n. that's very likely.  there's a delay, but a very minimal one between when the hub gets up and the nodes connect.  i don't believe there's anything we can do to this repository to fix this though \ud83d\ude15 \n. closing as this is assumed complete.  can reopen if needed.. thanks! \ud83d\udc4d \n. out of curiosity, instead of specifying an array, have you also tried just an object?\n```yaml\n...\nenvironment:\n    JAVA_OPTS: '-Xmx512m'\n    NODE_MAX_INSTANCES: 2\n    NODE_MAX_SESSION: 2\n    SE_OPTS: '-host 1.2.3.4 -port 5555'\n    HUB_PORT_4444_TCP_ADDR: 5.6.7.8\n    HUB_PORT_4444_TCP_PORT: 4444\n. can this issue be closed @alexgibson ? firefox version 50 is live in barium. oh oh oh.. i see.  gotcha.  i'll pull a release sometime soon.  I guess it isn't live in barium :). released in 3.0.1 carbon..sh\n$ docker pull selenium/hub; docker pull selenium/node-chrome; docker pull selenium/node-firefox\n$ docker run -d -p 4444:4444 --name selenium-hub selenium/hub\n$ docker run -d --link selenium-hub:hub selenium/node-firefox\n$ docker run -d --link selenium-hub:hub selenium/node-chrome\n```\n```java\npublic class Test338 {\n  @Test\n  public void test338() {\n    doit();\n  }\n@Test\n  public void test338_1() {\n    doit();\n  }\nprivate void doit() {\n    WebDriver chromeDriver = new ChromeDriver();\n    WebDriver firefoxDriver = new FirefoxDriver();\nchromeDriver.get(\"http://google.com\");\nfirefoxDriver.get(\"http://google.com\");\n\nSystem.out.println(chromeDriver.getTitle());\nSystem.out.println(firefoxDriver.getTitle());\n\n}\n}\n```\nCouldn't reproduce.  Ran this test class several times, and was able to open firefox numerous times.\nPlease update with more detail, maybe something else is going on.. i'm going to keep this PR open just for reference, but i've assigned a milestone that i would like to achieve with these containers, and that is internationalization.. regarding your comment, @diemol, i tried a before-after using these packages:\n\nfonts-ipafont-gothic\nfonts-wqy-zenhei\n\nBefore and after had the same result - and the result looked like this:\n\n. you are able to specify:\n\nSCREEN_WIDTH\nSCREEN_HEIGHT\nSCREEN_DEPTH\n\n\nI understand that I can't use dynamically ? only one value for a single container ?\n\nI'm really not sure what you are asking here.  you can change any of these values, and it will change the respective screen scale.  If by dynamic you mean changing the screen size after your node is running, then no, you cannot.  that would be how vnc is designed.. well, no.  the hub has no screen, only the node-chrome-debug and node-firefox-debug images have a screen.\nbut yes, that's pretty how much how you'd specify it. \nIf i were you, i'd wrap -e with quotes though.\n-e \"SCREEN_WIDTH=1024 SCREEN_HEIGHT=780\". extensions are added before your driver.get method.\nexample:\njava\nChromeOptions options = new ChromeOptions();\noptions.addExtensions(new File(\"/path/to/extension.crx\"));\nChromeDriver driver = new ChromeDriver(options);\n(source)\nThis means, that in theory, adding extensions is possible.  (i have not personally done this as i have no need for extensions in my tests.)\nYou might be able to solve it by mounting a volume from the host to the container whereas the host has the .crx file, and point it to that crx file.\n. nope, by mounting a volume, i mean just specifying \n-v /dev/shm:/dev/shm\nsee the readme.. well that location is just an example of how to mount shared memory. you can mount any directory.\nSay on your host machine, you have:\n/opt/selenium-shared/some-extension.xpi\nyou could mount by doing:\n-v /opt/selenium-shared:/opt/selenium-shared\nthen in your test, add\noptions.addExtension('/opt/selenium-shared/some-extension.xpi').\nsince that folder is mounted, you could add as many as you'd like, or even update them.. i'm not sure - i've never used behat or mink.  it looks as if though, that we has traversed out of the realm of Selenium Docker, so i will close this issue.\nMy recommendation to you, is to take this issue up with one of those projects, and link this issue.\nSearch around and see if there is a \"behat mink google chrome extension xpi\" answer somewhere.  otherwise, ask one of those projects.\nsorry i couldn't help you more!. @shankarkc what image versions are you using?. HUB_PORT_4444_TCP_ADDR should not contain the \"/grid/register\" bit.\nthat URL is calculated at runtime by this formula: \n-hub http://$HUB_PORT_4444_TCP_ADDR:$HUB_PORT_4444_TCP_PORT/grid/register\ntherefore, you should specify:\nyaml\n- HUB_PORT_4444_TCP_ADDR=test.kpnnl.local\n- HUB_PORT_4444_TCP_PORT=80\nIf port 80 doesn't work, try 4444.\nLet me know if this works, and we can close it out!\n. one of two things is happening: \n\nyour grid is not actually up, or misconfigured.\nyour node doesn't have appropriate access to the hub.  I'd try curling that url from the nodes.  attach a terminal to one of the nodes, and attempt to curl that hub url.. marking this as closed. no response for a month - assuming fixed. we can reopen if necessary :+1: . i'm not sure you intended to change the standalone containers.  these standalone containers don't/won't need VNC. that's only the node-debug containers. i don't have a problem moving this in. parameterizing things just makes our images more versatile. next time, please don't touch \"Dockerfile\" files though - only edit the Dockerfile.txt files. thanks for this! \ud83d\udc4d . the thing to think about, is that in order to support these browsers, they need their respective operating systems.\n\nthe problem is - Windows and MacOSX would need to be containerized first in order to run their respective browsers.  I believe Microsoft is in the process of this, but who knows if Apple would ever do this.\nSo - @pfluegs and @asethi15; at this juncture it is impossible, however I will have my eye out to see if they release those containers.. that's correct, @madhavajay.  i've had the grid working with over 100 active sessions at once.  it all depends on the underlying hardware.. merged in, thanks!  great addition. maybe a proxy issue?  i think this is on your side.  our images are built by me manually, and by our Travis CI both with no issues.. that functionality was released first in 2.53.1-americium.  when releasing americium, we didn't have the fleshed out release process, so the image version you have \"2.53.1\" doesn't have that functionality to add \"NODE_MAX_INSTANCES\" and such.  You can get this functionality by using the version 2.53.1-americium or 2.53.1-beryllium whichever you wish.. @Sovetnikov if you want, try your hand at a pull request and we'll review!. that's correct - at this time, there is no way to use a custom profile. this definitely is within the scope of this project, and will eventually be done.. actually - you know what?  I believe this is possible right now with no change.\nthis is all theory, but i think would work -\nbash\n$ docker run ... -v /some/local/profilesdir:/opt/selenium/profiles\nthen in your script, specify the directory in your test.\nnote this is pseudo-code\njava\n...\nChromeOptions options = new ChromeOptions();\noptions.addArguments(\"user-data-dir=/opt/selenium/profiles/profile\");\nlet me know how that works.\n. If this works @diemol, feel free to add a wiki page regarding this. sweet!. can you share the command you are using to build the image?  I'm not getting this error, nor is our CI.\nin addition, yes, there is a \"google-chrome\" executable file, but we are replacing that executable with that shell file, so when google-chrome is executed, it actually executes the shell file. i'm really just not sure what to do here.  you're clearly using your own changes to our images, so there are too many variables i cannot account for.  since this isn't a problem with our repository, i can't really do anything.\nif you find that this is truly an issue with the selenium images, then i will happily reopen, but since we have these images being built and tested in a continuous integration server, i can clearly see that  this isn't a problem with our production images. perhaps related to #227 . check that issue out  . thanks!  don't worry about the failing CI.  1 in every 10 builds or so it fails for silly reasons.. thank you VERY much for your thoroughly detailed report - i'll be investigating this.. I see that you are using fermium.  fermium was released late last night (eastern time.)  was this an issue in earlier versions as well?. @traffisco \n\nWhat advantage doest Docker provide over just opening those browsers on the machine?\n\n\nPortability\nSmall\nCross-platform\nIdempotency\nScalable. yea - it's a botched release i tried to publish yesterday.  i'll try to spend some time on it today. fixed. these are our makefiles, and we are going to leave our name on them.  the beauty of what we have here, is that it's open source, so you can keep \"your\" makefile and use it for your customers when building your own images; but this PR is not going in.  sorry!. you can  fork this repository and maintain these images yourself for your customers as well! :+1: . Wow! hey!  Thanks for this!  Give me a while to merge this in, as work is very busy right now, and i'd like to see exactly how this works before I merge it in.\n\nIt looks very promising, and looks like you have covered everything.\nThanks again! :+1: . i noticed that there wasn't a test written for this - could/would you try your hand at writing a test for this new node?. yea, sometimes it can be flaky. for the most part, it's stable. i'll run the tests from my computer. ok, let's get this guy merged for 3.1.0.  could you by chance fix the conflicts, then i'll merge this in?. thanks for this!. i appreciate the effort, but we're going to leave this at 1.\nsince it's an env, it's also \"very\" easy to specify upon creation.\nsh\n$ docker run -d ... -e NODE_MAX_INSTANCES=5 ...\nalso you didn't check the box notifying that you have signed the CLA.. please make sure that you do that if you make another pull request :smiley:\nThanks again for the effort!. i figured :) no problem!  we encourage submissions, as long as it's relevant :) maybe try your hand at updating documentation or something \ud83d\udc4d . i'm assuming this was an accident?. thanks for this! will merge a bit later when i have my personal laptop. same comment as https://github.com/SeleniumHQ/docker-selenium/pull/375.\n. is this succeeded by #386 ?  can we close this one in favor of that?. hey @romsper, new images have been pushed - please let me know if this fixes your issue. I believe this has been fixed, please try the new version and see if the problem persists.. pushed the tag to our CI.  if the tests pass, it will be put into docker hub immediately.  thanks for this.\nAlso, please next time, only update the Dockerfile.txt files, and not the Dockerfiles :)  thanks.. thanks for reminding me!. forgot to tell you, @a-k-g ... next pull request, please don't edit the Dockerfiles directly. (see the note at the top of the Dockerfile.\nPlease edit only the Dockerfile.txt files \ud83d\udc4d . yes, i took over this project at 2.53.1.  it's possible that i screwed up the 2.53.0 version from my testing. we'll need a little more information before we can see what exactly is going wrong here.  can you provide a little more information on your image versions you're using, your docker-compose.yml file, and possibly the relevant section of your test you are using to create the sessions\ne.g.: FirefoxDriver driver = new FirefoxDriver()... those reactions \"are\" the +1 \ud83d\udc4d . good catch, would you want to try your hand at a pull request?. > Setting the environment variables in the Dockerfile:\n\nENV SCREEN_HEIGHT=1920 SCREEN_WIDTH=1080 SCREEN_DEPTH=32\n\nAre you actually setting these variables like this?  if so, the Dockerfile is not intended to be used like that. You do not edit the \"Dockerfile\" to see changes, the Dockerfile is purely for building the images.\nyou need to set those environment variables in order for the docker images to see them.  you can set them like this:\ndocker run -d --link selenium-hub:hub -e SCREEN_WIDTH=1920 -e SCREEN_HEIGHT=1080 -e SCREEN_DEPTH=32 selenium/node-chrome:3.0.1-fermium. good to know!. (I've edited their YAML with the indentation they intended.). sounds like this is a geckodriver issue?. i've denied a change like this in the past since these are our instances, and you are very well able to create your own.\nthat being said - i'm very open minded.  why did you choose to make this change? what is your reasoning? \nAlso, you deleted the template that came with the pull request.  please tell me whether you have signed the CLA. cla was in the template that you deleted \ud83e\udd10 \nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/.github/PULL_REQUEST_TEMPLATE.md\nalright, let me do some investigation to see if this is a standard practice. if it is, i wouldn't mind putting this in. thanks for the justification. ok, i'd like to give this PR another chance to get put in. \nsome things need to happen before it's merged:\n\nWe have to make sure \"all\" nodes are covered with this change.  (there is a phantomjs node now which will need to be covered)\nit turns out MAINTAINER is deprecated. Instead, we should try using LABEL maintainer \"...\" . this was put in with 9e2d61099c51aff0c89335ce0b198d821080a16d. you are using the image: \"seleniumchrome:54.0.2\"  which image is this? this is not ours.  did you build this yourself?. @IvanVasilko, which image versions are you using?. we have a wiki page that details how you can build your own images, but that is building using our make file.\n\nif you want to build yourself using docker build, you are able to just convert the commands found in the wiki page above into bare docker build parameters.. will close, let me know if we need to reopen \ud83d\udc4d . we need to see your run commands in order to help you out, here.\n\nTrying to run a new container\n\nhow are you trying to run these?. thanks for this!. CHROME_VERSION is a build argument, not an environment variable.  Here is the main difference:\n\nDocker Build Argument - (Specified by ARG); Cannot specify these arguments at runtime like environment variables. They are used as arguments to build the actual docker containers.\nDocker Environment Variables - (Specified by ENV); Runtime environment variables.  Allowed to be set during running of the docker containers.\n\nThe problem you are having, @finspin is that you are trying to use a build argument like an environment variable, therefore it doesn't work.  Take a look at ARG CHROME_VERSION and ENV NODE_MAX_SESSION\nNotice CHROME_VERSION is an arg, and NODE_MAX_SESSION is an env variable.\nSo - in order to use the google chrome version that you wish, you need to build your own image.. hi @MacCracken thanks for the change; could you close / recreate another pull request and edit the .txt files instead?  Take a look at the header in each of the Dockerfiles.  \n```\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n# NOTE: DO NOT EDIT THIS FILE.  IT IS GENERATED.\n # PLEASE UPDATE Dockerfile.txt INSTEAD OF THIS FILE\n # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n```. thanks!. I appreciate the effort, but this goes against the release versioning i've setup for this.  However, i \"do\" like the idea about adding the build ARG's to specify the version!  nice job.\nI won't be merging this however, again - as it goes against the versioning.  but don't let that deter you from more pr's!  could you by chance recreate this PR with just the FF changes?. possibly related to #418 . we have a wiki page that is dedicated to building images :). i would hate to add this to all of the base images for the simple fact that most people probably won't be using this, yet we would make everybody install it (so it takes their time) even if they are not using it.\nI really have to find out a better to way to manage this sort of stuff.  if I merged this in, it would probably be 1 of 2 cases.\n1) In the dockerfile, we have some sort of conditional, where if they want it it will install (this could be used for many things.\n2) I release completely new images with this in it.  For example: selenium/node-chrome-debug-encrypted, selenium/node-firefox-debug-encrypted.\nnumber (1) is certainly preferred, as there are already a lot of images that are there.. will updating the version to 52 fix this?  if so, then we're all good now. well, can't do much until the conflicts have been resolved :)  but i'd like some other people's opinion on the matter.  \n@beyondevil ?\n@tparikka ?. what's the reason for this change?  this piece is needed.  additionally - in the line below the one you took out, there would be a failure since you can't chmod a file that doesn't exist ;). hey! good call - let me take a closer look. i'll need to release 3.2 and 3.3.0 before we release 3.3.1.   will get to this.. yea - i've got some catching up to do.  was dealing with some personal stuff recently :) will release it today. this was merged in a while back. i've tried and tried to reproduce this issue, and i cannot reproduce.. my best guess is that you might have some networking conflicts on your end.  it looks as if your node either cannot reach your hub, or your hub cannot retain a connection.  have you tried the most recent version?\nIt's building / publishing as I write this message, so will hopefully be available when you read this message.\nYou can monitor it here: https://travis-ci.org/SeleniumHQ/docker-selenium/builds/216183912\nIt is building 3.3.1-arsenic.  Try once again with that image, and if it persists, we can reopen this issue.. @tparikka think you'd be able to help out and fix that circle ci thing :D \ud83d\ude3a . this dockerfile is automatically generated.  If you look at the top of the file you've changed, you have a header that states:\n```\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\nNOTE: DO NOT EDIT THIS FILE.  IT IS GENERATED.\nPLEASE UPDATE Dockerfile.txt INSTEAD OF THIS FILE\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n```\nThe file you should be changing, is NodeDebug/Dockerfile.txt\n\ud83d\udc4d . thanks @tparikka :). no, users use the physical browser.  Xvfb allows the rendering of said physical browsers.. i guess i'm not familiar with chrome's headless mode.. tell me more, @graingert . I think the biggest benefit that users find with the debug, is that you can VNC into it.  You're saying that this could be eliminated?  If that's the case, ok then.  sign me up - apologies for the abrupt closing.  An issue file with a very small description is dangerous as it leaves everything up to speculation :)  \nI wasn't familiar with chrome --headless (hence why i asked you to elaborate)\nIf this is possible, then yes.. we'll go this route.  I'll keep this issue open and i'll mark as investigating. . they aren't because the build is botched.  gotta figure out what's going on.  while at the conference - i'll be figure out what the heck happened. . fixed in 3.3.1-cesium \ud83d\udc4d . it's also possible the app you are automating has some sort of javascript that is killing the page.  Also, @lasotaartur next time you open an issue here, please keep the template that you were given when you clicked \"New Issue\", that'helps with the diagnostics :)  thanks!. Watir is just a wrapper around Selenium, and we support everything Selenium does.\nYou didn't follow the format of the GitHub Issue Template so i can't tell from this issue what the actual error is. \nMore likely than not - you probably don't have any nodes connected to the hub. @titusfortner (for your edification). should be fixed with 3.3.1-cesium (if it's not, we'll reopen). thanks for doing this!  i hate to be fastidious, but i don't think the master should be there either.  the master branch never builds successfully as it relies on images that are built already.\nI'd prefer the badge taken out entirely. \nas far as the gitter?  Instead of the gitter, let's point to our slack channel / IRC:\nSlack:\nhttps://seleniumhq.herokuapp.com\nIRC\nselenium on freenode. Yes absolutely.  i'd definitely like if it were to be pointing to https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md. fixed from #440 . duplicate of #430 . you're absolutely right @tparikka , would definitely appreciate a PR!  thanks \ud83d\udc4d . fixed now. updated in 3.3.1-cesium. this PR was not available when i pushed the new tag up. working on fixing it now. merged in and fixed in 3.3.1-cesium \ud83d\udc4d . can I see the command you're using to run the containers?. you're setting GRID_BROWSER_TIMEOUT, is it possible that it's hitting that timeout?  we default this to \"0\" (indefinite). when this starts happening, is it just a few tests, then it breaks? or... the port that the container uses shouldn't matter.\nyou can forward the port to any port you want.  for example:\nsh\n$ docker run -d -P --net=something --link selenium-hub:hub selenium/node-chrome\nabcd1234\nwhen you specify -P, docker will take any exposed ports from the container, and assign them a random port to the host.  . done :). this error doesn't appear to be on our side.  either your docker containers aren't networked correctly, or the VM can't access whatever it needs to.  either way - this does not look like a problem with these containers. ok, we can reopen this issue if this is indeed our issue and you've confirmed it :)  thanks @Sean-Brown . if this truly fixes these issues (I thought I had fixed the dbus issue..)\nthen this probably needs to be reverted:\nhttps://github.com/SeleniumHQ/docker-selenium/commit/69707f0ac9ae50d9f810d3a98b5569b3b4e9440b#diff-1454090f007c02ce89531779aca07244R13\nI added the \"dbus\" package. the next release of the containers should fix this.  i'll try and release today. should be fixed in 3.4.0-chromium. much cleaner, thanks for this!. i'd like to merge this in at the same time as i get the new testing in place.  working on it as we speak, so hopefully soon we'll get this in :). the only thing that concerns me with these changes, are programs that have their own arbitrary user for security purposes, e.g.: OpenShift.  We can fix these on an adhoc basis, but we can probably expect to see some issues being created regarding this.. does the latest push release fix this?  3.5.3. not sure we need apt-get clean. \nthe rm -fr command is plenty.\nIn the link you shared, @alistair23 - even says:\n\nBelow is a well-formed RUN instruction that demonstrates all the apt-get recommendations.\n\nDockerfile\nRUN apt-get update && apt-get install -y \\\n    aufs-tools \\\n    automake \\\n    build-essential \\\n    curl \\\n    dpkg-sig \\\n    libcap-dev \\\n    libsqlite3-dev \\\n    mercurial \\\n    reprepro \\\n    ruby1.9.1 \\\n    ruby1.9.1-dev \\\n    s3cmd=1.1.* \\\n && rm -rf /var/lib/apt/lists/*\nThey recommend rm -fr'ing the apt lists directory, which we are already doing.\nPerhaps we could just revert the change made over a year ago. I'm not sure when / why you'd be seeing this.  I'm certainly not getting this.  When running docker run -it -p 5900:5900 --link selenium-hub:hub selenium/node-firefox-debug, i get this output. try sharing your invocation with us so we can see if something else is going on here.. apologies it took so long to merge this... closing this issue, as it does not pertain to our images.. if this is a valid issue, then it's most likely an issue with SeleniumHQ/selenium - i'll await your response @lluisteamcmp . have you tried with the latest versions?  since you are using version 2 of selenium, version 3 should be a pretty easy migration (shouldn't have to modify tests at all).\nthis waiting xvfb... was fixed since 3.1 i believe.  . that's a true statement, yes.  RC has been deprecated and is no longer supported by the team.  i've never used the -firefoxProfileTemplate option personally.\nIf this was in Selenium 2 and now is not in Selenium 3, it must have been deprecated as well, or favored as another option.  perhaps since you have a general idea of what is going on, feel free to open a PR. definitely like this solution over sudo.   had problems in the past when using openshift because of the security.. please update your PR and \"just\" change Dockerfile.txt, thanks!. thanks!. hey @testphreak , you neglected to provide the template that was in there by default.\nhave you signed the CLA?. must be, yea.  If you signed the CLA, then i'm good with it :). thanks for this!. this is indeed an interesting issue - will have to investigate.. thanks!  \ud83d\udc4d . ok a few questions here:\n\"run 20 browsers\"  how exactly are you running 20 browsers?\n20 selenium/node-chrome's connecting to 1 hub?\n1 selenium/node-chrome with NODE_MAX_INSTANCES set to 20 connected to 1 hub?\nplease share your invocation code with us so we can help. yep!  i'm good with this.  please do me favor though, and take out your Dockerfile changes?  please only change the Dockerfile.txt.  In the header of Dockerfile, it kindly specifies not to edit it.  This is because this file is generated.\nI'll merge this in as soon as that is fixed!  thanks @Remi-p !  nice work.. don't worry about squashing.  thanks @Remi-p !. oops, thanks for reminding me!. was thinking the same.   the documentation is fairly lacking right now.  I'll be in Seattle for the next two weeks in office and very busy so if somebody else could try their hand at it, that'd be awesome!\n. correct.\nthe commit to change the firefox version was merged in after dysprosium was released.  the next release will have it :+1: . ah yes. thanks.  i'm in seattle for work right now, so not able to contribute right now :zipper_mouth_face: . this should be fixed from https://github.com/SeleniumHQ/docker-selenium/releases/tag/3.4.0-einsteinium.\nlet's wait and see. we'll leave this issue open until validated.. Could you share the Dockerfile/docker command that you are using to launch the container(s)?\nFYI, for the future - instead of pastebin, you can more easily paste inside of the github issue (that way we don't have to rely on an external link that could expire)\n\nStack trace\nThis is the stack trace paste\n\n\nI gave the above with this code:\n<details>\n<summary>Stack trace</summary>\nThis is the stack trace paste\n</details>. could we see the command you are using / script that you're using to run against that uri?. i'm not a javascript guy, but could it be the use of the grave?\nin most languages,\n'' != \"\"\n\"\" != ``\nhave you tried with single/double quotes?\nEDIT\nthe screenshots have your URL pointing to 8000, not 8080 as you previous stated.. could this be the problem?  URL actually has 8000 as the port?. hrm.. ah no problem :)  just trying to eliminate the obvious!\n\nsince it can't navigate there even if you VNC in and manually enter the address.\n\nI'm under the assumption based on your issue, you meant\n\nsince it CAN navigate there even if you VNC in and manually enter the address.\n\nif this is the case, then i cannot imagine what's going wrong here.  i'll be flying home tomorrow, so probably won't be able to get back to this issue in a while; hopefully @diemol can chime in here.\n. out of curiosity, why are you keeping instances open for that long?  docker containers are meant to be cheap and short-lived :)\nreally not sure what we can do about this, as this is very hard to replicate.   I'm assuming that the underlying problem is not docker - but chrome itself.  . well, the ideal setup would be to spin up a container whenever you're running a test.\nTest Startup -> Node Startup -> Node running test -> Node report result -> Node shutdown.\nIf that is unattainable right now, the best way would be to just use something like docker-compose for a quick win.\nHave docker-compose spin up n amount of nodes, then shut them down, and spin up n amount of nodes after some specific time frame.  that'd be a quick-win. for high throughput, use the selenium/hub in conjunction with selenium/node-chrome and selenium/node-firefox and avoid the \"debug\" instances since those introduce superfluous programs like VNC. see https://github.com/SeleniumHQ/docker-selenium/issues/332#issuecomment-259264846. if you noticed the subsequent comments i linked, it was grep for chrome/firefox - that's how you can check for node presence. the difference between passing PHANTOMJS_OPTS and the other browsers, is phantomjs is the dedicated server and you may pass specific variables to it whereas in chrome and firefox the standalone-server is the dedicated server, and you cannot specify browser-specific options to the standalone jar. they'd have to be parsed at the browser invocation time.\n@lmtierney is correct, this belongs in the driver instantiation (in your test scripts.) however... if you'd like to try your hand at a PR to put these in, we would be happy to review!. could this have already been fixed by https://github.com/SeleniumHQ/docker-selenium/commit/45304b7867098725c5e68b362ad126c21a89ef20 ?  note this commit was not released yet.. ah yes.  that shouldnt be there.  @devent would you like to contribute and try your hand at a pr?  if not, we'll take care of that sudo call. are you perhaps using my ddavison/selenium-openshift-templates?   if so, those should work just fine \ud83e\udd10 . those images are actually pretty old, and for OpenShift enterprise, however sans a couple new environment variables we're able to pass, they should still be fine to use.  \nyea several issues like this have been rectified, but i see more to come.   \nDid you want to try your hand at a Pull Request to fix this? or would you like us to take care of it @devent ?\n. @devent , i think a few people are waiting on this change.   i offer you this warning, only for the sake of you being able to contribute to selenium.  if you are going to fix this, please create a pull request by friday.  if not, then i'll go ahead and put it in.  i'm going to push a new release tomorrow, so if it's not in by then, i'll do it \ud83d\ude1c . @rakeshnambiar try with the most recent release of 3.5.3-boron. the simplest answer, however not easiest.. would be to have dedicated nodes and not use docker at all.   \nyou could still use docker to control your hub, and linux firefox/chrome nodes, but you'd have to have dedicated nodes running your desired operating systems, and you can just connect to the same hub run by docker.. exactly right.  have your own nodes with your required OS's and browsers installed, then have those nodes connect right to the hub that you have hosted with docker.. the password is set here: https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeFirefoxDebug/Dockerfile#L59\n. @bdshibly this problem is certainly erring on configuration.  even if this issue brings up a legitimate bug, we won't do a legacy release so i'd recommend updating from 2.53.1.  it's been a long time since 2.53 and you shouldn't have to modify your tests much to accommodate for Selenium 3.. whoops, looks like this was already implemented by @MacCracken in #525.\n(read the header of the Dockerfile, you'll see that this file is automatically generated from Dockerfile.txt)\nThanks for the contribution though!. closing as no response given. thanks! \ud83d\udc4d . glad you figured it out :+1:. if we are able to duplicate the same functionality that the chrome containers use then this would definitely be doable.  \nmight also be related to #470 \n. @YancyGo does this happen with the most recent version(s)?  we are up to 3.14.0.  if so, at @diemol 's consent, we can reopen. hey @niQo , thanks for this!\nThree favors:\n\nWould you squash your commits so i can cherry pick them?\nWould you rename argon to astatine?  (we just used argon in 3.5.0)\nWould you perhaps update your user email and username in your local git configuration?  your commits are showing up as an unknown user.\n\n\n. fixed in b955fcc  will close issue when released to docker hub. yea - sometimes upon a release, the tests fail.  all that needed to be done is a re-push of the release.  done, and fixed.  . i like the idea, and a good implementation!\nI think i'll wait to merge this with advice from the community / team though, since there are potential drawbacks to something like this.\nAs with any dependency, you shouldn't always fetch latest because of compatibility issues.  I'd hate to run into an issue where people are downloading 3.5.1 (later in the future) and they can't run it without building their own containers because the version is fetching latest.\nThere's always potential drawbacks to doing something like this.\nOn the other hand, we already do this for things like google-chrome.  we use an apt-get -qqy install \\\n    ${CHROME_VERSION:-google-chrome-stable} which basically does the same thing.\n. thanks! \ud83d\udc4d . i pushed a release yesterday 3.5.3-boron.  let me know if this can be closed, now?. yep, i'll get to it ;). disregard..\nI had mixed up JAVA_OPTS and SE_OPTS. this was merged in yesterday which should fix that. let me push another release for 3.5.3 and that should fix the issue ;). chromedriver downloads latest automatically now.  try newest version. closing as dupe of #561   thanks though, @JevgeniD !  there's bound to be something else you can find and create a PR for! \ud83d\udc4d \ud83d\ude03 . thanks! \ud83d\udc4d . looks good so far! \ud83d\udc4d . thanks for reporting this. confirmed that this is an issue - investigating. . yea.. some weird anomaly.   if it happens again, we'll re-release said image. We follow the versioning of selenium, and make small \"patch\" updates by updating the -<element> of the specific selenium version we are going against.\nSelenium follows semver, and the docker-selenium does its best with what we have.  if you have a better alternative, feel free to file a PR.  if not, then this process is not going to change unless you provide some sort of valid explanation / reasoning / alternative.. could've sworn i had put this in.  guess not!  thanks @gkiszczak . i guess i'm just confused of the practicality of this change.  i appreciate the deep explanation, @pabloFuente but i guess i'm still just confused of the practicality.  If we installed this in the containers...\n\nhow often would this be used?\nby whom?  (other than yourselves)\nIn a selenium test, do many people test this sort of audio transmission?  seems like Selenium wouldn't be the best software for something like that.\n\nI noticed you had only changed the NodeFirefox image.  Does this already \"passively\" exist in the NodeChrome images?  If this is the case, then I have no problem with it whatsoever.  If doing an \"apt-get google-chrome-stable...\" automatically installs pulseaudio, then we're green for this PR.. your comments are very welcome, @bonigarcia!  thanks \ud83d\udc4d \nthanks for also greater clarification.  perhaps it's my ignorance on WebRTC.  \n\nRegarding your first and second questions, it is required by people testing WebRTC applications and using the latest versions of Firefox by means of Docker.\n\nOk, so this is a Firefox specific thing.  perfect.\n\nRegarding your third question, I disagree with your comment. Selenium is perfectly capable of that\n\nWell, i didn't say it wasn't capable, i just said it probably wasn't the \"best\" option.  again, this may stem from my lack of knowledge of WebRTC.\nAs a summation, i've done a little more research, and these testers that need this - are testing sites that use WebRTC.  This includes, perhaps sites that use the computer peripherals (camera, mic, etc).\nI think it's perfectly reasonable to include this.\n@pabloFuente , looks like your branch is out of date.  I still don't trust the \"Update branch\" button in \nGitHub so I'm going to ask you to update your branch with the latest changes and ensure there are no conflicts.. I'm willing to bet all of these issues are stemming from latest tagging issues.  \nAll, don't use the latest tag if you can help it. issues like this will pop up very frequently if you do so.\nInstead, you can use a fixed tag:  :3.7.1 and update it when ready.  You can even use a specific version tag:  :3.7.1-cadmium.   if no script that can reproduce this issue can be provided, i'm going to close this issue. ref: https://github.com/seleniumhq/selenium/commit/827bbd8177651a9316a574c9622f7d1226221173. if this is ready to merge @diemol and you're comfortable with it, i'm comfortable with it.  you can pull the trigger. glad you got it working!  . can we see your Dockerfile and the selenium script you are using?  I have an eager suspicion that you aren't using \"selenium\", but rather a third party binding.. hey @AlinaIo thanks for your report.\nCould you do us a favor and provide a script that we can run, as well as your docker run command or docker-compose file.  \nThis will help us immensely, and we can figure this out.\nThanks! \ud83d\udc4d . > Expected Behavior -\nVideo playback in Firefox nodes\nDidn't know we ever had that SLA \ud83d\ude05 \nwhen you are playing your videos, @ViljarVoidula - how are you validating that they are playing back?  Selenium doesn't do this natively, unless you are just checking an \"autoplay\" attribute\n. thanks!. this should be able to be eluded by using explicit waits. also, by default we pull latest.  the good news is, if people do see this issue - they can specify the CHROME_DRIVER_VERSION as 2.33 \nBUILD_ARGS=\"--build-arg CHROME_DRIVER_VERSION=2.33\" VERSION=temp make chrome chrome_debug\nI'm not sure i want to change the default version from pulling latest as it makes our release process much simpler.\nI'm closing this for now. This goes along with the W3C specification for Protocol Extensions\nExcerpt:\n\nRemote ends may also introduce extension capabilities that are extra capabilities used to provide configuration or fulfill other vendor-specific needs. Extension capabilities\u2019 key must contain a \":\" (colon) character, denoting an implementation specific namespace. The value can be arbitrary JSON types.\nAs with extension commands, it is suggested that the key used to denote the extension capability namespace is based on the vendor keywords listed in [CSS21] and precedes the first \":\" character in the string.. LGTM \ud83d\udc4d . how about something like this:\n\n```sh\nVERSION=devedition-3.9.1 make BUILD_ARGS='--build-arg FIREFOX_VERSION=devedition' firefox\nthis would produce\nselenium/node-firefox:devedition-3.9.1\n```\nright now, the Makefile doesn't allow the customization of the image name.  you could always fall back to a raw docker build command :)\n. To start the node with a different maxSessions or maxInstances, you need only to specify the variables!\nsh\ndocker run -d -e NODE_MAX_SESSION=10 -e NODE_MAX_INSTANCES=10 --link selenium-hub:hub -v /dev/shm:/dev/shm selenium/node-chrome:latest. thanks for the report, @JGladykowski-modus !\nwe actually don't use Docker Hub to build our images anymore.  we automatically build them from our CI side which then publishes to Docker Hub.\nyou can see that it indeed does have the latest version here:\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/Hub/Dockerfile#L5\nI'm inclined to believe that that \"Dockerfile\"  tab only shows the last Dockerfile built from Docker Hub's side.. check out https://github.com/seleniumhq/docker-selenium/tree/wait-for-it. nightwatch combined with the wercker chromium node are both not created by the selenium community.  it's likely that you'll run into issues when using third-party software like this.  unfortunately however, there's nothing we can do in this issue since it doesn't seem to be coming from Selenium.\nsorry!. LGTM! \ud83d\udc4d . we already do this for Chrome, so makes sense we have this for FF.  \ud83d\udc4d . this doesn't look like a docker-compose file. what type of file is this?. it could also be that you are using strings rather than integers.   try unwrapping the integer (remove the single quotes). and according to your issue, even if you put '700' it still goes to 200?. good to hear!  glad you figured it out! \ud83c\udf89 . how are you running your containers? could you share your run command?  (docker-compose file, docker run command). if you're running these images on windows, it's likely that you have enough resources available to not try to mount \"shared memory.\"  \nyou should be able to run the images without that volume just fine. this is a nice doc update!  have you made sure that this docker compose works?. I've answered my own question - it \"does\" work. \none more requested change, @MacCracken - could you add the yaml highlighting to the code block you've specified?  Right now it will only render as preformatted text with no highlighting\nref: https://github.com/MacCracken/docker-selenium/blob/4872c71e9c8acd6c35b3612a02db639ac7a53255/README.md#version-3. Hi @asifbhat222 , your issue looks like it doesn't have anything to do with our docker-selenium repository.\nYou may have better luck on StackOverflow.  Closing as everything included here has nothing to do with Selenium or Docker-Selenium.. probably the most well-written issue the selenium repository has ever seen.  thanks for this! :tada: \nregarding your issue - just some thinker questions... what's the purpose of re-using a user-data-dir?. what command did you use to run?\nalso, do me a favor and paste the result of the following command (preferably as the root user):\n$ netstat -tulpn | grep 4444. i'm tempted to close this as i can't reproduce this.  this looks like it's a setup issue on your end @alinpa , not necessarily an issue with our images. hi @ShibiKP 3 things.\n\nPlease follow the template that is provided by GitHub.  \nYou have not provided any details on how you ran.  Nothing in your stacktrace mentions using Docker at all, so it looks like you needed to open this in SeleniumHQ/selenium. Not the docker-selenium repository.\nI'm closing this issue as it looks like it's not an issue with selenium.  It's an issue of your personal setup.\n\nPlease consult the selenium-users google group for general help.. hey @tarjintor ,\nthanks for the issue - however i am going to defer this issue to either the selenium-users google group, or our Slack since this repository follows the same suit as the Selenium project.\nWe reserve issues in GitHub to issues with the software.  not necessarily environment-specific issues that people are having.  If you need general help using the software, please refer to the above links.\nclosing.. hi @vishalgupta305 , if you notice from that linked issue - this should've been fixed since 3.11.0-bismuth.  \nif you upgrade and realize this is still an issue - we'll reopen.. if this is reproducible on the selenium side - please migrate this issue there to the overarching project https://github.com/seleniumhq/selenium .  \nclosing this one.  please feel free to reference this issue when that issue has been created.. the Travis.CI failure is irrelevant to your change.  thanks @hazmeister !!. it's quite likely that this isn't coming from selenium but from robot or your tests.  . using selenium jar vs selenium i don't believe is going to make a difference here.   as i stated in my previous comment, it's likely that it's coming from robot.  not selenium.  this means that robot could be out of date, or not compatible with the selenium version / chromedriver version you are attempting.. i couldn't imagine it being an NFS problem with Chrome since Chrome will just abide by the system.  (but i suppose i can't completely discount it)\ni'm confused though - did you get this resolved?  if this is indeed a problem with Chrome, then we should bring this up with the Chrome team.. @anshuman00329 - thanks for filing an issue!  would you please go through your MR and crunch through it and perhaps apply the original template?\nit's very difficult for me to make sense of what error you're getting and what exactly is happening.  therefore - hard to determine what and why something is failing.\nit's likely we'll just migrate this to Selenium Issues.. have you seen https://github.com/SeleniumHQ/docker-selenium/wiki/How-to-use-a-Firefox-custom-profile  ?. instead of generating a random server number, can we just use --auto-servernum ?\n\nTry to get a free server number, starting at 99, or the argument to --server-num.\n\nthis would save us from maintaining another shell file that gets copied into all containers.. oh i see, yes.  @anto-ac i'm not opposed to this change. i guess we have to be cognizant of if we can use -a in tandem with -n <num>.\nwill there be an issue with xvfb generating one, and trying to assign one?. related:\n\nhttps://github.com/SeleniumHQ/docker-selenium/pull/602\nhttps://github.com/SeleniumHQ/docker-selenium/pull/502\nhttps://github.com/SeleniumHQ/docker-selenium/pull/477\nhttps://github.com/SeleniumHQ/docker-selenium/pull/185\n\n@torstenwalter , were these changes mentioned in the four PR's above not enough for OpenShift?  It's been an ongoing battle \ud83d\ude1c . i use Opera as my day to day browser.  i believe i started working on a PR to add it, but stopped for some reason.  IIRC, it was because it's a waste of space to have Opera as it's still Chromium.. I believe there was no added benefit to have Opera when a person could just use Chrome.\nthat being said - i'm not super opposed to having this.  less work for me to finish my PR \ud83c\udf89 . @diemol perhaps we can add a wiki page regarding Opera.  advising to use Chrome. sorry @diemol , was driving from my previous home to my new home accross the country at that time :)\nSupervisord to manage?  i'm ALL for it.  \ud83d\udc4d \ud83c\udf89  \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d . the issue is closed now, but i wonder if it's worth mentioning the bit that's in https://github.com/SeleniumHQ/docker-selenium/issues/721.\nIn order to mount /dev/shm on a windows machine is to specify set COMPOSE_CONVERT_WINDOWS_PATHS=1\nthat being said though, i like the change :tada: :100:. fantastic.  thanks @diemol, @oleg-filiutsich !. so no matter what time of node you are using, firefox will be in /usr/bin/firefox?  say i'm using NodeChrome, /usr/bin/firefox will exist?\n. i'm aware that it's a no-op if you, of course, do not specify FIREFOX_VERSION, but still interested to hear your reasoning :)\n. would it make more sense to just put this piece in NodeFirefox and NodeFirefoxDebug, StandaloneFirefox and StandaloneFirefoxDebug?\n. that's ok :)  that's how they're meant to be used.  since this is an environment variable passed to the container, you can set it to whatever you need it to be.  it would be hard for this default value to match \"everybody's\" standards.. $NODE_IP isn't added to NodeBase/Dockerfile therefore there is no way to access this variable.\nAlso why are you removing the default proxy. If this is a fork, change the maintainer in your own fork. we would not be changing the mantainer from SeleniumHQ. A lot of superfluous dependencies with no justification. $HUB_ADDR isn't valid as it's not added in NodeBase/Dockerfile. NodeBase doesn't have a generate_config this would fail, no?. Would these lines replace the RUN /opt/bin/generate_config > /opt/selenium/config.json lines? or would they be supplemental. confused about a couple of things, why do you check \n\"if $HUB_HOST isn't empty, set port to 4444\"\nalso, i see 4 variables...\nHUB_HOST, HUB_PORT, HUB_HOST_PARAM, HUB_PORT_PARAM.\nwhat's the differences between these? can';t we consolidate? make things a little simpler?. ",
    "danggrianto": "i just did. thx\n. ",
    "phensley": "Hey @mtscout6, thanks for the feedback, I'm just getting back to this now. I'll rework this a bit and push another commit.\n. @diemol I no longer have interest in merging.. Ok I've updated the commit with the needed traps and added a note in the hub's README\n. @mtscout6 Yep I signed the CLA before submitting this PR! :+1: \n. ",
    "kayabendroth-epages": "@phensley Doesn't merge w/o conflicts any more.\n. +1\n. :-)\n. +1\n. ",
    "devinrsmith": "I tried briefly, but we've had larger issues getting the drivers to work at all (even with icc=true on a dev box). I'm currently trying to debug our issues internally... I'm not sure if there is a disconnect between our code and what the API offers, hardware issues, or something with docker. As soon as those things get sorted out, I'll be sure to try and get stuff working with icc=false.\n. Ok. I've figured out our api issue, back to trying to figure out icc=false.\nI've tried w/ -p 5555:5555 on the node side of things, still getting a timeout when the hub tries to connect to it. And this is what I would expect... really, the port mapping is for mapping local ports to docker container ports, not for mapping docker container ports to docker container ports.\n. Shell\n$ docker logs distracted_mccarthy \n17:34:21.240 INFO - Launching a selenium grid node\n17:34:22.097 INFO - Java: Oracle Corporation 24.65-b04\n17:34:22.098 INFO - OS: Linux 3.15.4-x86_64-linode45 amd64\n17:34:22.105 INFO - v2.44.0, with Core v2.44.0. Built from revision 76d78cf\n17:34:22.184 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match with current platform: LINUX\n17:34:22.232 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:5555/wd/hub\n17:34:22.233 INFO - Version Jetty/5.1.x\n17:34:22.235 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]\n17:34:22.237 INFO - Started HttpContext[/selenium-server,/selenium-server]\n17:34:22.237 INFO - Started HttpContext[/,/]\n17:34:22.248 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@17a56999\n17:34:22.248 INFO - Started HttpContext[/wd,/wd]\n17:34:22.254 INFO - Started SocketListener on 0.0.0.0:5555\n17:34:22.255 INFO - Started org.openqa.jetty.jetty.Server@7c6bdb4d\n17:34:22.295 INFO - using the json request : {\"class\":\"org.openqa.grid.common.RegistrationRequest\",\"configuration\":{\"nodeConfig\":\"/opt/selenium/config.json\",\"register\":true,\"port\":5555,\"host\":\"172.17.0.160\",\"proxy\":\"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\"maxSession\":1,\"role\":\"node\",\"hubHost\":\"172.17.0.159\",\"registerCycle\":5000,\"hub\":\"http://172.17.0.159:4444/grid/register\",\"hubPort\":4444,\"url\":\"http://172.17.0.160:5555\",\"remoteHost\":\"http://172.17.0.160:5555\"},\"capabilities\":[{\"platform\":\"LINUX\",\"seleniumProtocol\":\"Selenium\",\"browserName\":\"*googlechrome\",\"maxInstances\":1},{\"platform\":\"LINUX\",\"seleniumProtocol\":\"WebDriver\",\"browserName\":\"chrome\",\"maxInstances\":1}]}\n17:34:22.297 INFO - Starting auto register thread. Will try to register every 5000 ms.\n17:34:22.297 INFO - Registering the node to hub :http://172.17.0.159:4444/grid/register\n17:40:37.876 INFO - Registering the node to hub :http://172.17.0.159:4444/grid/register\n17:46:53.337 INFO - Registering the node to hub :http://172.17.0.159:4444/grid/register\n...\n. From the hub:\nShell\n$ docker logs selenium-hub \n17:31:24.352 INFO - Launching a selenium grid server\n2014-12-11 17:31:25.335:INFO:osjs.Server:jetty-7.x.y-SNAPSHOT\n2014-12-11 17:31:25.386:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler{/,null}\n2014-12-11 17:31:25.424:INFO:osjs.AbstractConnector:Started SocketConnector@0.0.0.0:4444\n17:36:27.505 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:38:32.606 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:38:32.606 WARN - Marking the node as down. Cannot reach the node for 2 tries.\n17:40:37.705 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:40:37.705 WARN - Unregistering the node. It's been down for 125099 milliseconds.\n17:40:37.705 WARN - Proxy 'host :http://172.17.0.160:5555' was previously registered.  Cleaning up any stale test sessions.\n17:42:42.958 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:44:48.062 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:44:48.062 WARN - Marking the node as down. Cannot reach the node for 2 tries.\n17:46:53.159 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:46:53.159 WARN - Unregistering the node. It's been down for 125097 milliseconds.\n17:46:53.159 WARN - Proxy 'host :http://172.17.0.160:5555' was previously registered.  Cleaning up any stale test sessions.\n17:48:58.444 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:51:03.529 WARN - Failed to check status of node: Connect to 172.17.0.160:5555 [/172.17.0.160] failed: connect timed out\n17:51:03.530 WARN - Marking the node as down. Cannot reach the node for 2 tries.\n...\n. Hi @diemol . It's been a while since I've used selenium or Docker. At the time I believe I would have used --link, but I can't remember specifically. Other than that, I don't think I can provide any useful feedback. Feel free to continue with this ticket or close! Thanks.. ",
    "saifsysim": "0\ndown vote\nfavorite\nI am trying to run docker Selenium on diff hosts\nusing these commands on Hub\n\ndocker run -d -p 4444:4444 --name hub selenium-hub:1.0.0\n\nNode\n\ndocker run -d -p 5556:5556 -e REMOTE_HOST=\"http://nodeip:5556\" -e HUB_PORT_4444_TCP_ADDR=hubip -e HUB_PORT_4444_TCP_PORT=4444 --name chrome-node3 selenium-chrome-node:1.0.0\n\nHow ever,I see the that the node is registered , but when i fire a test the request says pending\nHere are the Hub logs\n\n14:50:29.078 WARN - Cleaning up stale test sessions on the unregistered node http://10.205.87.185:5557\n14:50:29.107 INFO - Registered a node http://10.205.87.185:5557\n14:50:29.473 INFO - Marking the node http://10.205.87.185:5556 as down: cannot reach the node for 2 tries\n14:50:39.121 INFO - Marking the node http://10.205.87.185:5557 as down: cannot reach the node for 2 tries\n14:50:59.489 INFO - Unregistering the node http://10.205.87.185:5556 because it's been down for 30016 milliseconds\n14:50:59.489 WARN - Cleaning up stale test sessions on the unregistered node http://10.205.87.185:5556\n14:50:59.516 INFO - Registered a node http://10.205.87.185:5556\n14:51:09.192 INFO - Unregistering the node http://10.205.87.185:5557 because it's been down for 30071 milliseconds\n14:51:09.192 WARN - Cleaning up stale test sessions on the unregistered node http://10.205.87.185:5557\n14:51:09.541 INFO - Marking the node http://10.205.87.185:5556 as down: cannot reach the node for 2 tries\n\nThe Node seems to be up and running. Not sure what can be the issue\n. Where is the Cache stored in any chrome docker containers? i want to clear the cache and cookie after every test and rerun the test only after cleaning up the cache and cookies\ncurrently using /selenium-chrome-node:54.0.0 container\nI am looking for cache /opt/google/chrome , dont see anything in the directory?\n . what I am trying to do is run a test on a chrome node (access my internal web app) which caches some content in the chrome node.\nI would like to delete the cache and cookie and use the same container to run the same test at a later time , Do not want the cache to be present in the next run\nhowever when i run the above command \n\n[root@ip-10-205-73-250 ec2-user]# sudo docker exec -i -t 7ad01eb90a24 sh -c 'find / -iname cache | fgrep -i google'\nfind: '/etc/polkit-1/localauthority': Permission denied\nfind: '/etc/ssl/private': Permission denied\nfind: '/proc/tty/driver': Permission denied\nfind: '/proc/55/task/55/fd': Permission denied\nfind: '/proc/55/task/55/fdinfo': Permission denied\nfind: '/proc/55/task/55/ns': Permission denied\nfind: '/proc/55/fd': Permission denied\nfind: '/proc/55/map_files': Permission denied\nfind: '/proc/55/fdinfo': Permission denied\nfind: '/proc/55/ns': Permission denied\nfind: '/proc/56/task/56/fd': Permission denied\nfind: '/proc/56/task/56/fdinfo': Permission denied\nfind: '/proc/56/task/56/ns': Permission denied\nfind: '/proc/56/fd': Permission denied\nfind: '/proc/56/map_files': Permission denied\nfind: '/proc/56/fdinfo': Permission denied\nfind: '/proc/56/ns': Permission denied\nfind: '/proc/57/task/57/fd': Permission denied\nfind: '/proc/57/task/57/fdinfo': Permission denied\nfind: '/proc/57/task/57/ns': Permission denied\nfind: '/proc/57/fd': Permission denied\nfind: '/proc/57/map_files': Permission denied\nfind: '/proc/57/fdinfo': Permission denied\nfind: '/proc/57/ns': Permission denied\nfind: '/root': Permission denied\nfind: '/var/cache/ldconfig': Permission denied\nfind: '/var/lib/apt/lists/partial': Permission denied\nfind: '/var/lib/polkit-1': Permission denied. @VAdamec Does this work with the Se3 hub. Hi Davison, \n\ni tried the above but getting an error \nERROR: The Compose file './docker-compose.yml' is invalid because:\nUnsupported config option for chrome: 'env'\nUnsupported config option for firefox: 'env'\u00a0\n. I tried this approach, the Node seems to start but when i look the hub logs this is what I see\n14:08:17.659 INFO - Retrying request to {}->http://172.17.0.6:5555\n14:08:17.715 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.3:5555: No route to host\n14:08:17.715 INFO - Retrying request to {}->http://172.17.0.3:5555\n14:08:19.709 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.4:5555: No route to host\n14:08:19.709 INFO - Retrying request to {}->http://172.17.0.4:5555\n14:08:20.665 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.6:5555: No route to host\n14:08:20.665 INFO - Retrying request to {}->http://172.17.0.6:5555\n14:08:20.721 INFO - Unregistering the node http://172.17.0.3:5555 because it's been down for 66072 milliseconds\n14:08:20.721 WARN - Cleaning up stale test sessions on the unregistered node http://172.17.0.3:5555\n14:08:22.591 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.5:5555: No route to host\n14:08:22.591 INFO - Retrying request to {}->http://172.17.0.5:5555\n14:08:22.715 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.4:5555: No route to host\n14:08:22.715 INFO - Retrying request to {}->http://172.17.0.4:5555\n14:08:23.671 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.6:5555: No route to host\n14:08:23.671 INFO - Retrying request to {}->http://172.17.0.6:5555\n14:08:25.596 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.5:5555: No route to host\n14:08:25.597 INFO - Retrying request to {}->http://172.17.0.5:5555\n14:08:25.691 INFO - Registered a node http://172.17.0.3:5555\n14:08:25.721 INFO - Unregistering the node http://172.17.0.4:5555 because it's been down for 66072 milliseconds\n14:08:25.721 WARN - Cleaning up stale test sessions on the unregistered node http://172.17.0.4:5555\n14:08:26.677 INFO - Unregistering the node http://172.17.0.6:5555 because it's been down for 66072 milliseconds\n14:08:26.677 WARN - Cleaning up stale test sessions on the unregistered node http://172.17.0.6:5555\n14:08:28.603 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.5:5555: No route to host\n14:08:28.603 INFO - Retrying request to {}->http://172.17.0.5:5555\n14:08:30.696 INFO - Registered a node http://172.17.0.4:5555\n14:08:31.609 INFO - Unregistering the node http://172.17.0.5:5555 because it's been down for 66072 milliseconds\n14:08:31.609 WARN - Cleaning up stale test sessions on the unregistered node http://172.17.0.5:5555\n14:08:31.644 INFO - Registered a node http://172.17.0.6:5555\n14:08:36.579 INFO - Registered a node http://172.17.0.5:5555\n14:08:38.699 INFO - I/O exception (java.net.NoRouteToHostException) caught when processing request to {}->http://172.17.0.3:5555: No route to host\n14:08:38.699 INFO - Retrying request to {}->http://172.17.0.3:5555\n. Hi ,\nWhere cn I find the cache that's stored in chrome node.\nMy use case is to delete cache after every test. I am trying to find cache\nin /opt/google/chrome in the chrome node but don't see anything there\nWhere exactly is the cache and cookie stored in the chrome node\nThankssyed\nOn Thursday, November 10, 2016, Dj notifications@github.com wrote:\n\ntry environment: instead of env: @saifsysim https://github.com/saifsysim\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/263#issuecomment-259533798,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AV4HM1ebQeAektUgsTLh7sowAi8kSBZ_ks5q8j1AgaJpZM4JwtuK\n.\n. I am encountering the same issue , was there a resolution for this??? @sqavenky @ddavison . Hi @ddavison , how would I get this working on 2 Ec2 instances , 1 being the Hub and the other that had 50 Chrome Nodes \n\nUsed to use this command to connect to a hub on a diff ec2 machine \n\ndocker run -d -p 901:5555 -e REMOTE_HOST=xx.xx.xx.xxx:901 -e HUB_PORT_4444_TCP_ADDR=xx.xx.xx.xx -e HUB_PORT_4444_TCP_PORT=4444 --name chrome901 seleniumchrome:54.0.2\n\nREMOTE_HOST variable is *DEPRECATED* in these docker containers.  Please use SE_OPTS=\"-host <host> -port <port>\" instead!\nThen I tried with SE_OPTS\n\ndocker run -d -p 103:5555 -e SE_OPTS=\"-host 10.205.74.185 -port 102\" -e HUB_PORT_4444_TCP_ADDR=10.205.75.212 -e HUB_PORT_4444_TCP_PORT=4444 --name chrome103 seleniumchrome:54.0.2\n\n```\n\nappending selenium options: -host 10.205.74.185 -port 102\nWaiting xvfb...\n-bash: 10.205.74.185: command not found\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n/opt/bin/entry_point.sh: line 62: fluxbox: command not found\n/opt/bin/entry_point.sh: line 64: x11vnc: command not found\n```\n\nnot sure how i can introduce the SE_OPTS variable , any help would be appreciated\n . @ddavison @chris-smith-zocdoc any suggestions????. I am facing the same issue using Hub 3.0.2 and Firefox 50.0.0.. This is an Image we we built ourselves, its just the same thing as yours. we tried \n\nsudo docker run -d  -p 5555:5555 -e HUB_PORT_4444_TCP_ADDR=<your_grid_ip> -e HUB_PORT_4444_TCP_PORT=4444 -e SE_OPTS='-hub $HOSTNAME -port 5555' --name chrome55node1 selenium-chrome:55.0.0 /bin/bash /opt/bin/entry_point.sh\nappending selenium options: -host 10.xXX.xx.xx -port 5555\nWaiting xvfb...\n-bash: 10.xxx.xx.xx: command not found\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n. \n",
    "ericfrancis": "@mtscout6 I will check with VNC connection right now and reply back with results.\n. The thing is though, there is a wait attached to this selector. So it should timeout after 5 seconds and throw exception. Do you know if there is an upper limit to the timeout?\n. Completely agree :/\n. @VolkerK Can you explain why your solution would help?\n. Right on. My issue ended up being something that is most likely internal. I\nwas able to get the nodes to stop hanging by using my own config.json and\nsetting browser timeout to 45 seconds.\nOn Wed Jan 07 2015 at 3:39:50 AM Volker K notifications@github.com wrote:\n\nI think the problem is that firefox and/or selenium and/or chrome uses\n/dev/random.\nInside docker containers this could be a problem, see this stackoverflow\nquestion Not enough entropy to support /dev/random in docker containers\nhttp://stackoverflow.com/questions/26021181/not-enough-entropy-to-support-dev-random-in-docker-containers-running-in-boot2d\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/21#issuecomment-68998634\n.\n. I vote no. With overriding config.json and the /dev/random solution, I\nthink we are good.\n\nOn Wed Jan 07 2015 at 9:34:36 AM Matt Smith notifications@github.com\nwrote:\n\nSo, does this issue need to remain open for any reason?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/21#issuecomment-69038326\n.\n. Did you try 0.0.0.0:49155?\nAlso, if you are using boot2docker on either mac or windows, you will need access to boot2docker ports.\n. This is my Dockerfile with 33: https://github.com/ericfrancis/docker-selenium/blob/master/NodeFirefox33/Dockerfile \n. I'll look into ways to make this a little more dynamic. @elgalu brings up a good point regarding auto-updates being enabled by default. Searching briefly, there is a -safe-mode option that starts FF with extensions disabled as well as a pref.js file: https://developer.mozilla.org/en-US/docs/Mozilla/Preferences/A_brief_guide_to_Mozilla_preferences \n. \n",
    "VolkerK": "I had the same Problems. But when applying you're -v /dev/urandom:/dev/random solution everything works like a charme!\nGreat!\n. I think the problem is that firefox and/or selenium and/or chrome uses /dev/random.\nInside docker containers this could be a problem, see this stackoverflow question Not enough entropy to support /dev/random in docker containers\n. When using docker-compose 1.6 the network is automatically created and linking is not needed.\nStill you need to specify the linking environment variables, since they are used in the entrypoint.sh\nMy docker-compse.yml (version 2) looks like this:\n```\nversion: '2'\nservices:\n  hub:\n    image: selenium/hub:${SEL_VERSION}\n    ports:\n      - \"4444:4444\"\nfirefox:\n    image: selenium/node-firefox:${SEL_VERSION}\n    volumes:\n      - /dev/urandom:/dev/random\n    depends_on:\n      - hub\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\nchrome:\n    image: selenium/node-chrome:${SEL_VERSION}\n    volumes:\n      - /dev/urandom:/dev/random\n    depends_on:\n      - hub\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\n```\nI can then start my grid and scale it with docker-compose very handy.\ndocker-compose up -d\ndocker-compose scale firefox=4 chrome=2\nWhich will start a grid with four firefox nodes and two chrome nodes.\n. @alexkogon I only use compose and not swarm, so everything runs on one host.\nBut I think in newer versions you have something called multi-host networks. Then it should be possible to start nodes on multiple hosts and they act like they are in the same network. So every node should be able to see the hub.\nBut you need a key-value store and a swarm cluster for that (see above link)\n. ",
    "flowhamster": "Mounting /dev/random only seems to work in boot2docker. On a debain installation I'm seeing this message when I try to mount /dev/urandom\ncannot mount volume over existing file, file exists /var/lib/docker/aufs/mnt/b41c7b07be67d286e558958a32d891b7f432d0c0e3268a778a05c9dd8cfa3d75/dev/random\n. Fixed this issue by updating docker-compose to 1.4 on the Debian install.\n. Tried using this workaround and am still experiencing this issue. I'm not seeing a crash in the logs similar to #87.\n. I started running into this issue as well using the node-chrome docker image.\n. ",
    "gabriel-sagula-hs": "Thanks @VolkerK \nselenium docker stopped hanging with -v /dev/urandom:/dev/random \n. Any update on this. Selenium hangs on Jenkins slaves (ubuntu), but never hangs on boot2docker. Thoughts?\nselenium v. 2.52\nchrome driver v. 2.21 (same happens with 2.20)\nHere is my configuration:\nselenium:\n  image:  selenium/node-chrome-debug:2.52.0\n  ports:\n    - \"4444:4444\"\n    - \"5900:5900\"\n  expose:\n    - \"5900\"\n    - \"4444\"\n  environment:\n    - JAVA_OPTS=-Xmx1024M\n    - SCREEN_WIDTH=1152\n    - SCREEN_HEIGHT=864\n    - SCREEN_DEPTH=16\n  volumes:\n    - /dev/urandom/:/dev/random\n    - /dev/shm:/dev/shm\n  privileged: true\n. @pwaller Thanks Peter, you nailed. Works now!\n. ",
    "cpanato": "I can use the container for tests once and when try to re-run the tests the hub looks like hangs\n. ",
    "doomsbuster": "I am trying to run a Firefox node on docker containers with selenium-server-2.47.1 and firefox-45.7.0 on RHEL 7. My tests run fine for 70% of the time. 30% of the time, the node gets hung up on trying to execute the get command and my test script times out.\nI installed rng-tools and increased the entropy on the container, but it still reproduces 30% failures.\nWhen i look up the Node Logs there arent any errors but it gets hung up on the get command\n19:56:04.266 INFO - The node is registered to the hub and ready to use\n19:56:12.890 INFO - Executing: [new session: Capabilities [{browserName=firefox, version=, platform=ANY}]])\n19:56:12.898 INFO - Creating a new session for Capabilities [{browserName=firefox, version=, platform=ANY}]\n19:56:14.719 INFO - Done: [new session: Capabilities [{browserName=firefox, version=, platform=ANY}]]\n19:56:14.771 INFO - Executing: [get: http://myurl]). ",
    "echernyavskiy": "@mtscout6 to be honest, I'm not entirely sure how to test this. Do you have any insights on how to determine whether a flash file has been successfully loaded and \"interpreted\"?\n. ",
    "miyajan": "@elgalu I fixed to use active wait mechanism for waiting xvfb running.\n. @elgalu I squashed. Thanks.\n. @elgalu Yes, of course.\n. ",
    "crocket": "I think #35 can close the issue.\n. ",
    "alvassin": "@mtscout6 thanks a lot for your response!\ni tried to run docker run -d --link selenium-hub:hub selenium/node-firefox:2.44.0 but i have same problem... \n. @mtscout6 ok, thanks for information.. Should i close this issue then?\n. ",
    "mgingras": "Hey @mtscout6, I am seeing this issue as well. I have tried removing the selenium/node-firefox and the selenium/hub images and re-pulling them.\nI have also run the test.sh script and got the following:\n```\nBuilding test container image\nSending build context to Docker daemon 8.704 kB\nSending build context to Docker daemon\nStep 0 : FROM node:0.10-onbuild\nExecuting 3 build triggers\nStep onbuild-0 : COPY package.json /usr/src/app/\n ---> Using cache\n ---> 2dcab1257e1b\nStep onbuild-1 : RUN npm install\n ---> Using cache\n ---> f17c27aaaab9\nStep onbuild-2 : COPY . /usr/src/app\n ---> Using cache\n ---> 8c8c35bf7bec\n ---> 8c8c35bf7bec\nStep 1 : MAINTAINER Selenium selenium-developers@googlegroups.com\n ---> Using cache\n ---> 16ad05d0d985\nStep 2 : ENV TEST_CMD node smoke-chrome.js && node smoke-firefox.js\n ---> Using cache\n ---> 12ef8b3bf9a4\nSuccessfully built 12ef8b3bf9a4\nStarting Selenium Container\nstarting selenium hub with configuration:\n{\n  \"host\": null,\n  \"port\": 4444,\n  \"prioritizer\": null,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": true,\n  \"newSessionWaitTimeout\": -1,\n  \"jettyMaxThreads\": -1,\n  \"nodePolling\": 5000,\n  \"cleanUpCycle\": 5000,\n  \"timeout\": 30000,\n  \"browserTimeout\": 0,\n  \"maxSession\": 5,\n  \"unregisterIfStillDownAfter\": 30000\n}\n18:55:58.765 INFO - Launching a selenium grid server\n2015-02-04 18:55:59.755:INFO:osjs.Server:jetty-7.x.y-SNAPSHOT\n2015-02-04 18:55:59.810:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler{/,null}\n2015-02-04 18:55:59.823:INFO:osjs.AbstractConnector:Started SocketConnector@0.0.0.0:4444\n18:56:01.135 INFO - Launching a selenium grid node\n18:56:01.324 INFO - Launching a selenium grid node\n18:56:02.328 INFO - Java: Oracle Corporation 24.65-b04\n18:56:02.329 INFO - OS: Linux 3.13.0-24-generic amd64\n18:56:02.338 INFO - v2.44.0, with Core v2.44.0. Built from revision 76d78cf\n18:56:02.375 INFO - Java: Oracle Corporation 24.65-b04\n18:56:02.376 INFO - OS: Linux 3.13.0-24-generic amd64\n18:56:02.384 INFO - v2.44.0, with Core v2.44.0. Built from revision 76d78cf\n18:56:02.437 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match with current platform: LINUX\n18:56:02.445 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match with current platform: LINUX\n18:56:02.501 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:5555/wd/hub\n18:56:02.502 INFO - Version Jetty/5.1.x\n18:56:02.504 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]\n18:56:02.505 INFO - Started HttpContext[/selenium-server,/selenium-server]\n18:56:02.506 INFO - Started HttpContext[/,/]\n18:56:02.509 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@5dd4a708\n18:56:02.509 INFO - Started HttpContext[/wd,/wd]\n18:56:02.518 INFO - Started SocketListener on 0.0.0.0:5555\n18:56:02.518 INFO - Started org.openqa.jetty.jetty.Server@4c011fe\n18:56:02.548 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:5555/wd/hub\n18:56:02.550 INFO - Version Jetty/5.1.x\n18:56:02.552 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]\n18:56:02.553 INFO - Started HttpContext[/selenium-server,/selenium-server]\n18:56:02.554 INFO - Started HttpContext[/,/]\n18:56:02.558 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@23ea181b\n18:56:02.558 INFO - Started HttpContext[/wd,/wd]\n18:56:02.563 INFO - using the json request : {\"class\":\"org.openqa.grid.common.RegistrationRequest\",\"configuration\":{\"nodeConfig\":\"/opt/selenium/config.json\",\"register\":true,\"port\":5555,\"host\":\"172.17.2.25\",\"proxy\":\"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\"maxSession\":1,\"role\":\"node\",\"hubHost\":\"172.17.2.24\",\"registerCycle\":5000,\"hub\":\"http://172.17.2.24:4444/grid/register\",\"hubPort\":4444,\"url\":\"http://172.17.2.25:5555\",\"remoteHost\":\"http://172.17.2.25:5555\"},\"capabilities\":[{\"platform\":\"LINUX\",\"seleniumProtocol\":\"Selenium\",\"browserName\":\"googlechrome\",\"maxInstances\":1},{\"platform\":\"LINUX\",\"seleniumProtocol\":\"WebDriver\",\"browserName\":\"chrome\",\"maxInstances\":1}]}\n18:56:02.565 INFO - Started SocketListener on 0.0.0.0:5555\n18:56:02.565 INFO - Started org.openqa.jetty.jetty.Server@4c011fe\n18:56:02.566 INFO - Starting auto register thread. Will try to register every 5000 ms.\n18:56:02.566 INFO - Registering the node to hub :http://172.17.2.24:4444/grid/register\n18:56:02.626 INFO - using the json request : {\"class\":\"org.openqa.grid.common.RegistrationRequest\",\"configuration\":{\"nodeConfig\":\"/opt/selenium/config.json\",\"register\":true,\"port\":5555,\"host\":\"172.17.2.26\",\"proxy\":\"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\"maxSession\":1,\"role\":\"node\",\"hubHost\":\"172.17.2.24\",\"registerCycle\":5000,\"hub\":\"http://172.17.2.24:4444/grid/register\",\"hubPort\":4444,\"url\":\"http://172.17.2.26:5555\",\"remoteHost\":\"http://172.17.2.26:5555\"},\"capabilities\":[{\"platform\":\"LINUX\",\"seleniumProtocol\":\"Selenium\",\"browserName\":\"firefox\",\"maxInstances\":1},{\"platform\":\"LINUX\",\"seleniumProtocol\":\"WebDriver\",\"browserName\":\"firefox\",\"maxInstances\":1}]}\n18:56:02.627 INFO - Starting auto register thread. Will try to register every 5000 ms.\n18:56:02.627 INFO - Registering the node to hub :http://172.17.2.24:4444/grid/register\nRunning test container...\n\ndocker-selenium-tests@0.0.0 start /usr/src/app\n$TEST_CMD\n\n[chrome]  > CALL init({\"browserName\":\"chrome\"})\n[chrome]  > POST /session {\"desiredCapabilities\":{\"browserName\":\"chrome\",\"version\":\"\",\"javascriptEnabled\":true,\"platform\":\"ANY\"}}\n18:56:04.241 INFO - Got a request to create a new session: Capabilities [{platform=ANY, javascriptEnabled=true, browserName=chrome, version=}]\n       18:56:04.244 INFO - Available nodes: [host :http://172.17.2.25:5555, host :http://172.17.2.26:5555]\n                                                                                                          18:56:04.244 INFO - Trying to create a new session on node host :http://172.17.2.25:5555\n                                                           18:56:04.245 INFO - Trying to create a new session on test slot {platform=LINUX, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=1}\n                                                                    18:56:04.577 INFO - Executing: [new session: Capabilities [{platform=ANY, javascriptEnabled=true, browserName=chrome, version=}]])\n                                                               18:56:04.594 INFO - Creating a new session for Capabilities [{platform=ANY, javascriptEnabled=true, browserName=chrome, version=}]\n                                                          Starting ChromeDriver 2.14.313457 (3d645c400edf2e2c500566c9aa096063e707c9cf) on port 3455\n            Only local connections are allowed.\n                                               [0.518][WARNING]: PAC support disabled because there is no system implementation\n                                                                                                                               [0.519][SEVERE]: Failed to create /.pki/nssdb directory.\n                                                18:56:05.729 INFO - Done: [new session: Capabilities [{platform=ANY, javascriptEnabled=true, browserName=chrome, version=}]]\n                                     [chrome]\nDriving the web on session: df657939-ed46-478d-a5db-91b709afc1c2\n[chrome]  > RESPONSE init({\"browserName\":\"chrome\"}) \"df657939-ed46-478d-a5db-91b709afc1c2\",{\"platform\":\"LINUX\",\"acceptSslCerts\":true,\"javascriptEnabled\":true,\"browserName\":\"chrome\",\"chrome\":{\"userDataDir\":\"/tmp/.com.google.Chrome.K2RfGd\"},\"rotatable\":false,\"locationContextEnabled\":true,\"mobileEmulationEnabled\":false,\"webdriver.remote.sessionid\":\"df657939-ed46-478d-a5db-91b709afc1c2\",\"version\":\"40.0.2214.93\",\"takesHeapSnapshot\":true,\"cssSelectorsEnabled\":true,\"databaseEnabled\":false,\"handlesAlerts\":true,\"browserConnectionEnabled\":false,\"nativeEvents\":true,\"webStorageEnabled\":true,\"applicationCacheEnabled\":false,\"takesScreenshot\":true}\n[chrome]  > CALL get(\"https://github.com\")\n[chrome]  > POST /session/:sessionID/url {\"url\":\"https://github.com\"}\n18:56:05.867 INFO - Executing: [get: https://github.com])\n                                                         18:56:09.520 INFO - Done: [get: https://github.com]\n                                                                                                            [chrome]  > RESPONSE get(\"https://github.com\")\n[chrome]  > CALL title()\n[chrome]  > GET /session/:sessionID/title\n18:56:09.535 INFO - Executing: [get title])\n                                           18:56:09.566 INFO - Done: [get title]\n                                                                                [chrome]  > RESPONSE title() \"GitHub \u00b7 Build software better, together.\"\n[chrome]  > CALL quit()\n[chrome]  > DELETE /session/:sessionID\n18:56:09.582 INFO - Executing: [delete session: df657939-ed46-478d-a5db-91b709afc1c2])\n                                                                                      18:56:10.148 INFO - Done: [delete session: df657939-ed46-478d-a5db-91b709afc1c2]\n                               [chrome]\nEnding your web drivage..\n[chrome]  > RESPONSE quit()\nTearing down Selenium Chrome Node container\nb1847c870734d47131f2cafd0411bc9858aeb108834c16f002c1d8243d90b598\nb1847c870734d47131f2cafd0411bc9858aeb108834c16f002c1d8243d90b598\nTearing down Selenium Firefox Node container\n3123d216386593d3967232cfcb1cc6af8979099414fbdbc5c2f58852de1d86ce\n3123d216386593d3967232cfcb1cc6af8979099414fbdbc5c2f58852de1d86ce\nTearing down Selenium Hub container\nshutting down hub..\nshutdown complete\nbf10f9a83bdf508d4870baa15d04f20712b9fc2de7cf7f217e51e784443e5a49\nbf10f9a83bdf508d4870baa15d04f20712b9fc2de7cf7f217e51e784443e5a49\nDone\n```\nI have tried against the standalone-firefox image and got the same errors. Any debug steps/ideas would be appreciated.\n. May be related to #36 . In particular https://code.google.com/p/selenium/issues/detail?id=8390 .\n. Hmm, odd. I pulled them down today and get Mozilla Firefox 35.0.1 if I run firefox -v against any of the images. I have tried building them locally and am playing with curling down a lower version of Firefox.\n. So I am still seeing the error running against firefox 33 :-1: \n. Yep\nMartin\n\nOn Mar 2, 2015, at 1:04 PM, Leo Gallucci notifications@github.com wrote:\nHi! thanks! did you sight the CLA ?\n\u2014\nReply to this email directly or view it on GitHub.\n. @mtscout6 Won't the other builds need the tags updated as well?\n. :raised_hands: One step ahead. Thank you.\n. \n",
    "bmannix": "I only see this issue on my Ubuntu host.  If I use boot2docker, I can run the exact same containers without any issues.\n. @dpauli - let's be specific.  boo2docker is based on tiny core linux (thanks @wadedude), so it's not a linux issue, per se.  I suspect that it's only an issue on Ubuntu, which would be disappointing.  I'll test on a Centos based system today and report back.\n. I can reproduce this issue.  My first run was actually clean, but it hung on the 41st attempt during my second run.\n. ",
    "dpauli": "We inspect this error over two days and wondered about\n\nError: cannot open display: :99.0\n\nThis error does happen because there is no display in the node-firefox environment.\nHow to fix it:\n- After docker start and before setting environment as node create a virtual monitor:\n\nXvfb :1 -screen 0 1024x768x16 &\nexport DISPLAY=:1\n\nIts important to enter a & after the screen creation to set the Xvfb process in background and don't close it in next command.\n. The script was perfectly works in Windows / Mac (boot2Docker), but not in Linux. Perhaps some linux machine delete the virtual monitor after creating it.\nBut its fact, that there is no virtual monitor existing using this Dockerfile and scripts with linux hosts.\n. We changed display with\n\nexport DISPLAY=:1\n\nwithout creating this display before.\nThen the error is\n\nError: cannot open display: :1.0\n. \n",
    "jmewes": "We could reproduce it with Ubuntu and CentOS as well.\n. A colleague of mine setup a Docker Grid on Debian 8 without any of such problems.\n. Might be a duplicate of https://github.com/SeleniumHQ/docker-selenium/issues/31\n. We experienced this issue with CentOS 6.6, too.\n. CentOS was the host operating system. We were using the standard Selenium Docker project without a modified Dockerfile. \nSorry, I cannot just try to recreate. We evaluated Selenium Docker in a Hackathon project and are not using it in production yet. I'll talk with my collegues later this afternoon if we can manage to try your suggestion.\n. No it is not an issue anymore. My collegue reported that with Selenium-Docker running on Debian 8 everything went on alright.\n. ",
    "bprosnitz": "I can also reproduce this on Ubuntu. I will try to check on mac when I have a chance.\n. ",
    "caarlos0": "I created a docker-compose.yml like this:\nyaml\nhub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\nnode:\n  image: selenium/node-firefox\n  links:\n    - hub\nThen I put it up with docker-compose up -d and scale it with docker-compose scale node=30.\nI'm also getting those type of errors... \nIt's running in an Ubuntu server 14.04.\n. @snowe2010 http://carlosbecker.com/posts/selenium-grid-docker-compose/\n. ",
    "snowe2010": "Does anyone have a setup that does work? I understand that there are a lot of things that don't work, but really most people just care about a working setup. I'm coming across the same errors with Ubuntu, and I'm even seeing it with boot2docker, so a solution rather than all of these problems would be nice. \n. any more information on this? I'm also seeing this problem. My nodes are actually crashing (because of the errors I think)\n. @diemol I haven't touched selenium in 2 years now, so I won't be able to reproduce. Go ahead and close if you need to. . ",
    "adiherzog": "I have the same problem when running sudo docker run -p=4444:4444 selenium/standalone-firefox on Ubuntu 14.04.\n. Seems that the problem lies actually in the following lines:\nprocess 734: D-Bus library appears to be incorrectly set up; failed to read machine uuid: Failed to open \"/etc/machine-id\": No such file or directory\nSee the manual page for dbus-uuidgen to correct this issue.\nSee: http://stackoverflow.com/a/22503523\nMaybe apt-get install dbus-x11 could be the solution.\n. ",
    "axelwass": "installing dbus-x11 on the ubuntu host machine worked for me!\napt-get install dbus-x11\nThanks a lot @adiherzog \n. ",
    "jimbrowne": "If the additional image size is not a concern, it'd be nice to be able to start vnc in the standard image if an environment variable is set; we have environments where we'd like vnc to be running persistently rather than on-demand.\nJust a note you might already know, you can reduce your PoC image size by including \nrm -rf /var/lib/apt/lists/* in your apt-get RUN line.\n. ",
    "techjacker": "Thanks for the quick response.\nI tried 0.0.0.0:49155 too but no luck.\nI'm not using boot2docker, I'm using vagrant on mac and docker.io on linux.\n. I forwarded the relevant ports from the Vagrant linux guest to the mac host so connecting to vnc://127.0.0.1:49155 from safari should work.\nI tried with ssvnc and remmina vnc clients on my linux box which is running mint 16.\nIt doesn't look like I'm going to be able to solve this issue but thanks for your replies.\n. I managed to get it working on vagrant by creating a standalone debug image.\nThen I was able to connect to 0.0.0.0:49154 with VNCReal viewer.\n. Yes and I also removed all the selenium grid stuff from the boostrap script\n. Not tried it again since I posted that last commit two years ago. ",
    "ivanm376": "\nRemmina vnc  \n\nFor Remmina you must change Color depth to True color (24 bit) first. ",
    "wysow": "Hello,\nIs this in WIP or should we try something about it?\nAnd btw thanks a lot for this images guys!\n. ",
    "smccarthy": "I think this is taken care of with https://github.com/SeleniumHQ/docker-selenium/commit/670c94785b466139512c0e3d3db9f8ffa6dd812b ?\n. Should it be a static amount or should it be a parameter we can change dynamically? I like using 1 browser instance per container.\n. I don't have docker setup on this machine yet, but what happens when you don't give the SCREEN_WIDTH or SCREEN_HEIGHT? Does it default to 1360x1020?\nMaybe the maximize isn't working correctly in the docker container?\n. @MartinNuc Thanks. Updated to 2.23.\n. This is a duplicate of https://github.com/SeleniumHQ/docker-selenium/pull/234 I think\n. Looks to be closed as wont fix.. This is not something the docker selenium project can add I believe.. +1 . I'd like to see this one too. @diemol I like that idea. That was actually the feedback I got on Slack when I first opened this PR, but I haven't had the time to update the PR. Maybe this week.. You can't. There are no GUI applications inside of windows containers yet.. @flynet Are you creating a docker-selenium Edge node (a windows container with selenium server + Edge) ?. @diemol I thought it was MAYBE possible with Microsoft's \"new\" containers https://hub.docker.com/_/microsoft-windows-insider that they released last June/July ?. I noticed this in there. Is this needed if we get Firefox from Mozilla directly ?. Can I delete this tag if I call docker build with -t on line 59?. ",
    "proteus-aholt": "Note:  When running tests on PhantomJS using selenium grid, always clear out all cookies between tests, before starting a test, or as part of test cleanup.  This is due to a known issue with PhantomJS https://github.com/detro/ghostdriver/issues/170\nExample:  As part of my wrapped \"close driver\" method for test cleanup, I simply added this line before calling the quit() method on the driver:  getBaseDriver().manage().deleteAllCookies();\n. Bring up more than one chrome container and register them to your hub.\nThe test framework we use runs 10 containers of each browser type without issue.\n. I submitted a pull request for this issue when I created the issue:  #38 \n. Phantomjs (as far as I know) still is not fully integrated into WebDriver.  It is, however, integrated with Ghostdriver, which allows it to register itself as a node to a selenium grid hub.\nYou could try telling webdriver to launch phantomjs with a config, but it wouldn't work.\nhttps://groups.google.com/forum/#!topic/webdriver/HA5C9Jnpr7g\n. A large chunk of this dockerfile is similar to the node-base dockerfile, save for one difference.\nI chose to derive from base rather than node-base because neither VNC nor Xvfb are needed by a phantomjs node.  It is already headless, so there would really be no graphical view or reason to VNC into that node.\nAlso:  As a result, the PhantomJS node image is much smaller than the node-chrome or node-firefox images are.\n. Fixing now.  Will push update when complete.\nUpdate:  fixed and pushed.\n. ",
    "LouTerrailloune": "@aholtventuretech Why do you use v1.9.8 and not 2.0 ? Lack of precompiled binaries ?\n. Maybe you can also handle the case when there is no hub defined, run it as standalone.\n. ",
    "schugh01": "I have the same issue with chrome debug also. Any help on this issue is really appreciated\n. ",
    "schmunk42": "Now, yes.\n. Similar issue with Codeception 2.2.5 and chrome-debug-2.53.1\n```\n[...]\n I wait for element not visible \"#login-form\",8\n[Facebook\\WebDriver\\Exception\\UnknownServerException]                                                                                                                              \n  no such session                                                                                                                                                                    \n    (Driver info: chromedriver=2.24.417424 (c5c5ea873213ee72e3d0929b47482681555340c3),platform=Linux 4.4.20-moby x86_64) (WARNING: The server did not provide any stacktrace informat\n  ion)                                                                                                                                                                               \n  Command duration or timeout: 3 milliseconds                                                                                                                                        \n  Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03'                                                                                                    \n  System info: host: '87c78f9fcef9', ip: '172.21.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.20-moby', java.version: '1.8.0_91'                                       \n  Driver info: org.openqa.selenium.chrome.ChromeDriver                                                                                                                               \n  Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.24.417424 (c5c5ea873213e\n  e72e3d0929b47482681555340c3), userDataDir=/tmp/.org.chromium.Chromium.seyXIb}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouch\n  Screen=false, version=53.0.2785.143, platform=LINUX, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, b\n  rowserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]                                                                                        \n  Session ID: 1959b2c27e58ca79b7dc9ad970984199                                                                                                                                       \n```\n. @Greg36 I can't really remember, sorry.\nMy best guesses are\n- try Codeception >=2.2.6\n- try Chrome 2.53.0 or 3.x\n- try mounting /dev/shm in Chrome, see https://github.com/c0b/chrome-in-docker/issues/1 (there are some other issues about this)\n- verify against Firefox. Ping...\n. @gurukiran007 From the logs it looks to me like test.sh is not building selenium/test:local for some reason.\nI'd also expect to see the echo output from https://github.com/gurukiran007/docker-selenium/blob/89a6026d5191bab02c1e254bff44c251724c373e/test.sh#L22 in the logs?!\n. I meant the part of the README :)\nBut if that is a change you\u2019re willing to accept I can create a PR.. Hard to tell if it's common, but IMO containers should not be affected by this setting.\nSelenium was the only one I saw with this issue.. I've never tried again with the above option.... ",
    "cristian-smocot": "When you create the docker container, you should set the environment variables http_proxy, https_proxy. \nThat way no need to pass any proxy configuration to Chrome, it should use the environment variables.\nI use Javascript (node.js) and the library dockerode to create and start my containers.\nSo I always set the proxies as environment variables in Javascript, when creating the container.\nYou could create the container manually with docker create.\nThis command accepts a parameter --env[] where you could set the proxy information.\nInvestigate more with: docker create --help\nAnother options could be to create another Docker image, and in the Dockerfile, set the proxies as environment variables.\nSomething like this:\n```\nFROM selenium/node-chrome:latest\nMAINTAINER Your-Email-HERE\nset proxy information to environment\nENV http_proxy=http://user:password@proxy.corp:8080 \\\n    https_proxy=http://user:password@proxy.corp:8080 \\\n    HTTP_PROXY=http://user:password@proxy.corp:8080 \\\n    HTTPS_PROXY=http://user:password@proxy.corp:8080\n```\nHope this helps people that might not know how to set the proxy information.\n. I'm using boot2docker v.1.6.1 on Windows, with docker v.1.61. \nAnd in my case Crome picks up the proxy information from the system environment variables.\nThe image I use, is selenium/node-chrome:latest (as of 22/06/2015 latest = v.2.46.0).\n. I take back my previous comments. \nIn Docker v.1.7.1 it doesn't work anymore.\nSome changes or what not, I do not know, in Docker or in this Chrome Node, made Chrome browser not read the environment variables.\nTo see how I fixed this Chrome proxy issue, see my answer to my own issue here https://github.com/SeleniumHQ/docker-selenium/issues/78#issuecomment-122645755\n. In case anyone is interested for a fix or workaround this, here is what I did:\n- I Installed these extensions on Chrome\n  - Proxy Auto Auth\n  - Give Me CRX\nGive me CRX is only used in your local browser (not the Docker Node Chrome) to obtain the .crx file of the first extension, Proxy Auto Auth. \nI installed on my local browser the extension Proxy Auto Auth, only to play with it and see what is the URL for the options of this extension.\nAnyway, it seems, that the options object that you pass to Selenium, for Chrome, can take the following structure:\n``` javascript\n var options = {\nhost                         : '127.1.2.3',\nport                         : 4444,\n\ndesiredCapabilities          : {\n    seleniumProtocol         : 'WebDriver',\n    platform                 : 'any',\n    browserName              : 'chrome',\n    acceptSslCerts           : true,\n    cssSelectorsEnabled      : true,\n    handlesAlerts            : true,\n    unexpectedAlertBEhaviour : 'accept',\n\n    proxy                    : {\n        proxyType            : 'MANUAL',\n        httpProxy            : 'proxycorp.com:8080'\n\n//or you can put here user:password@proxycorp.com:8080, but not every proxy is recognized by Chrome,\n//when I used my corporate proxy, Chrome is asking for the user and password and ignore what I put here\n            sslProxy             : 'proxycorp.com:8080',\n            ftpProxy             : 'proxyCorp.com:8080'\n        },\n    chromeOptions            : {\n        extensions           : [\n\n'This string must be a BASE64 encoded string of the file content of the .crx Chrome extension',\n 'This string is yet another BASE64 encoded string of the file content of the yet another .crx Chrome extension',\n                                    ]\n        }\n    }\n};\n```\nTake notice of:\n-  options.desiredCapabilities.proxy\n- options.desiredCapabilities.chromeOptions.extensions\nSo, what I did was:\n- I obtained the .crx file of the extension ProxyAutoAuth\n- I read this file with \n``` javascript\nvar Q  = require('q'),\n    fs = require('fs');\nvar readCrxExtension = function (file) {\nvar deferred = Q.defer();\n\nfs.readFile(file, function (error, data) {\n    error\n        ? deferred.reject(error)\n        : deferred.resolve(data.toString('base64'));\n});\n\nreturn deferred.promise;\n\n};\nreadCrxExtension('extension_file.crx')\n    .then(function (base64String) {\n        options.desiredCapatilities.chromeOptions.extensions.push(base64String);\n    });\n``\n- I  set the BASE64 encoded string in the  **options.desiredCapabilities.chromeOptions.extensions`** with  \njavascript\noptions.desiredCapabilities.chromeOptions.extensions.push(base64String);\n- before any kind of automation test, In chrome, in the Docker container, I instruct Webdriver to:\n  - go to the url of the extension, which is\n  - chrome-extension://ggmdpepbjljkkkdaklfihhngmmgmpggp/options.html\n  - set the user and password of the propx and save\njavascript\nclient\n    .url('chrome-extension://ggmdpepbjljkkkdaklfihhngmmgmpggp/options.html')\n    .setValue('//*[@id=\"login\"]', 'user001')\n    .setValue('//*[@id=\"password\"]', 'pass123#')\n    .click('//*[@id=\"save\"]');\nThe above code is using Webdriver.io library.\nWhat the above code does, is:\n- navigates to the options page of the extension\n- sets the user and password\n- clicks on SAVE button\nThis will ensure that if Chrome needs to authenticate  with the proxy, the extension will automatically apply the proxy auth data to Chrome.\nCredits: http://stackoverflow.com/a/27278322/4999637\n. ",
    "sushanco": "@cristian-smocot I spent quite a lot of time trying to use environment variables on VM and application level. Chrome doesn't pick up http_proxy environment variable. Also till now doesn't have way to pick up environment variables as such (uses --proxy-server but doesn't take credentials), take a look at this url. \nhttps://www.chromium.org/developers/design-documents/network-settings\nConsidering time I had to spend on it, I had two options either to create browser profiles (which is against automation & also not very maintainable) or to white-list certain requests. I went for the latter one. \n. @charford I have run into same issue, I have run node using same -remoteHost flag, node can register to hub and hub can check node's status. However when I run a test, Chrome crashes (unknown error: Chrome failed to start: crashed). In log I saw it is still trying to use docker's internal IP\nSystem info: host: '72e88d29e6b4', ip: '172.17.0.13', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-229.1.2.el7.x86_64', java.version: '1.7.0_75'\nHow can I override this?\nI even tried, customising node's config.json by adding \"host\":\"192.168.33.10\", I get the same error, and log again shows it is still using docker's internal ip?\nAny idea why it is still tying to use docker ip instead host ip?\n. @charford, works fine, my issue was related to iptables. This commit should be merged. \nNote this change can be made on config.json as well. But I prefer this approach since it is  unmaintainable to update config.json for each container and it is also against automation principle to change config for each container. \n. ",
    "alexellis": "+1 for ENV http_proxy - this works for a non-authenticating proxy.\n. @apakhomov thanks for this, it did work very well. Do you have a link for increasing /dev/shm for the container?\n. ",
    "ashutoshmittal2309": "I was having same exact issue and was able to resolve by using below script -\nhttps://github.com/sjitech/proxy-login-automator\nThis can be inserted as part of your docker setup where the browser is running.  After that, the selenium Desired Capabilities or protractor config file has to point to this proxy which authenticates with actual proxy.\n. Proxy server can be set for your browser using Desired capabilities object in the code when trying to launch the browser using selenium in the code.  Look at this link on how to provide proxy details - \nhttps://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#proxy-json-object\n. ",
    "detailyang": "@aholtventuretech  thx guy.\n. ",
    "m15o": "I have signed CLA.\n. ",
    "rasmusbergpalm": "Any news on this?\n. ",
    "eedgar": "mtscout6 I can try but I am not sure what the testing framework here is doing yet.  I just started looking at this project the other day.\n. Mtscout6,  I took a look at the tests in this package and it appears they are already broken.  Eg it looks like the firefox tests are always skipped and Adding my htmlunit test wont run either because the last node command in the Docker file is what is run.\n. mtscout6, I figured out the issue Docker wasn't passing && correctly in the env variables.  I have created a test for this feature now.\n. ",
    "kowalcj0": "Hi Guys, \nAny updates on this ticket?\nCheers\n. ",
    "onlywade": "Note that this issue can mask major problems, such as in Issue #31 -- running test.sh on Ubuntu currently passes, even though node-firefox doesn't work there.\n. Here's a bit more detail about what I see happening on the system when the launch hangs.\nThe last line from the selenium-server stdout just says that it's launching a new Chrome session:\n\u279c ~ docker logs 9251a | tail -n 4\n12:26:19.769 INFO - Executing: [new session: Capabilities [{platform=ANY, javascriptEnabled=true, browserName=chrome, version=}]])\n12:26:19.771 INFO - Creating a new session for Capabilities [{platform=ANY, javascriptEnabled=true, browserName=chrome, version=}]\nStarting ChromeDriver 2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961) on port 17315\nOnly local connections are allowed.\nInside of the container, I see that some Chrome processes are in fact running:\nroot@9251a325813b:/# ps auxww\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nseluser      1  0.1  0.1  17968  2796 ?        Ss   12:25   0:00 /bin/bash /opt/bin/entry_point.sh\nseluser      5  0.0  0.0   4448  1640 ?        S    12:25   0:00 /bin/sh /usr/bin/xvfb-run --server-args=:99.0 -screen 0 1360x1020x24 -ac +extension RANDR java -jar /opt/selenium/selenium-server-standalone.jar\nseluser     16  0.6  1.2 207472 26296 ?        Sl   12:25   0:00 Xvfb :99 :99.0 -screen 0 1360x1020x24 -ac +extension RANDR -nolisten tcp -auth /tmp/xvfb-run.qPOeDR/Xauthority\nseluser     27 17.2  5.6 3042680 116716 ?      Sl   12:25   0:09 java -jar /opt/selenium/selenium-server-standalone.jar\nroot       241  0.1  0.1  18144  3376 ?        Ss   12:26   0:00 bash\nseluser    811  0.3  0.5 381852 11012 ?        Sl   12:26   0:00 /opt/selenium/chromedriver-2.16 --port=17315\nseluser    816  0.8  3.8 555444 79020 ?        Sl   12:26   0:00 /opt/google/chrome/chrome --no-sandbox --disable-background-networking --disable-client-side-phishing-detection --disable-component-update --disable-default-apps --disable-hang-monitor --disable-prompt-on-repost --disable-sync --disable-web-resources --enable-logging --ignore-certificate-errors --load-extension=/tmp/.com.google.Chrome.HFdqNc/internal --log-level=0 --metrics-recording-only --no-first-run --password-store=basic --remote-debugging-port=12545 --safebrowsing-disable-auto-update --safebrowsing-disable-download-protection --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.com.google.Chrome.XIexPl  data:,       \nseluser    824  0.0  0.0   4368   660 ?        S    12:26   0:00 cat\nseluser    825  0.0  0.0   4368   656 ?        S    12:26   0:00 cat\nseluser    827  0.0  1.9 347672 40388 ?        S    12:26   0:00 /opt/google/chrome/chrome --type=zygote --enable-logging --log-level=0 --no-sandbox --user-data-dir=/tmp/.com.google.Chrome.XIexPl\nseluser    828  0.0  0.3  87176  6432 ?        S    12:26   0:00 /opt/google/chrome/nacl_helper --no-sandbox\nseluser    845  0.1  2.2 441212 46220 ?        Sl   12:26   0:00 /opt/google/chrome/chrome --type=gpu-process --channel=816.0.1041773465 --enable-logging --log-level=0 --no-sandbox --user-data-dir=/tmp/.com.google.Chrome.XIexPl --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd --supports-dual-gpus=false --gpu-driver-bug-workarounds=2,45,57 --disable-accelerated-video-decode --gpu-vendor-id=0x0000 --gpu-device-id=0x0000 --gpu-driver-vendor --gpu-driver-version --user-data-dir=/tmp/.com.google.Chrome.XIexPl --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd --enable-logging --log-level=0\nseluser    874  0.0  0.0      0     0 ?        Z    12:26   0:00 [chrome] <defunct>\nseluser    879  3.7  0.7 555444 15400 ?        S    12:26   0:01 /opt/google/chrome/chrome --no-sandbox --disable-background-networking --disable-client-side-phishing-detection --disable-component-update --disable-default-apps --disable-hang-monitor --disable-prompt-on-repost --disable-sync --disable-web-resources --enable-logging --ignore-certificate-errors --load-extension=/tmp/.com.google.Chrome.HFdqNc/internal --log-level=0 --metrics-recording-only --no-first-run --password-store=basic --remote-debugging-port=12545 --safebrowsing-disable-auto-update --safebrowsing-disable-download-protection --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.com.google.Chrome.XIexPl  data:,\nI am a bit suspicious of the defunct proc there, but it doesn't seem to consistently appear along with the problem, so I'm not sure that it's related to the hang at all.\nFor what it's worth, I don't see anything out of the ordinary in the Chrome debug log:\nroot@9251a325813b:/# cat /tmp/.com.google.Chrome.XIexPl/chrome_debug.log \n[816:816:0814/122620:ERROR:browser_main_loop.cc(185)] Running without the SUID sandbox! See https://code.google.com/p/chromium/wiki/LinuxSUIDSandboxDevelopment for more information on developing with the sandbox on.\n[816:816:0814/122620:INFO:audio_manager_pulse.cc(258)] Failed to connect to the context.  Error: Connection refused\n[845:845:0814/122620:ERROR:sandbox_linux.cc(345)] InitializeSandbox() called with multiple threads in process gpu-process\n[816:816:0814/122620:WARNING:password_store_factory.cc(346)] Using basic (unencrypted) store for password storage. See http://code.google.com/p/chromium/wiki/LinuxPasswordStorage for more information about password storage options.\n[874:874:0814/122620:ERROR:renderer_main.cc(200)] Running without renderer sandbox\n[874:874:0814/122635:INFO:child_thread_impl.cc(666)] ChildThreadImpl::EnsureConnected()\n(Those errors appear even when the session launch succeeds.)\nAs a sort of control I've executed the same test (repeatedly launch/quit Chrome sessions) against an Ubuntu 14.04 VM that is set up just like the Docker images -- the same Chrome and chromedriver versions, using xvfb with the same screen geometry, etc... The session launches are successful there 100% of the time, as far as I can tell, so the problem does appear to be specific to running chromedriver within a container.\n. ",
    "charford": "Implemented with PR: https://github.com/SeleniumHQ/docker-selenium/pull/52\n. @viveksoundarrajan it looks like your docker run command is routing the port 5558 to 5555(inside container), with the -p 5558:5555 parameter. This means your REMOTE_HOST parameter should be using the the same port (5558). This parameter tells the hub how it can reach the node over network, so it should be configured to match the IP of the docker host running your node, and the port 5558. Also, in your run parameter it looks like you're using the IP of your hub for the REMOTE_HOST. The remote host is not your hub, that is the node itself, and is sent to the hub to let it know how to reach the node. The REMOTE_HOST parameter should include the IP that your node is running on.\n. @testphreak I haven't had a chance to try this in the latest (3.0) version. But the SE_OPTS solution mentioned in #307 looks promising.\n. This also allows us to change the port that node is running on (default is 5555). Example:\ndocker run -d -p 5556:5555 -e REMOTE_HOST=\"http://1.2.3.4:5556\" -e HUB_PORT_4444_TCP_ADDR=\"1.2.3.4\" -e HUB_PORT_4444_TCP_PORT=\"4444\" --name firefox-node selenium/node-firefox\n. @sushanghimire I'm assuming you are trying this on the master branch (this has not been merged) ? This pull request would resolve the issue you are describing. Basically, you would add an parameter to the docker run command for the node.\n-e REMOTE_HOST=\"http://1.2.3.4:5555\"\nThe way you are describing it, it sounds like whatever value is being put in remoteHost, is invalid, or blank. If you're doing this on your own branch, make sure you are using the format above(including port) for your -remoteHost parameter.\nIf there is no remoteHost specified(default behavior), selenium node will randomly choose an interface(from my experience, it's usually the first one listed using ifconfig cmd).\n. Still using this setup with a few different servers running nodes, all pointing to a central hub, and have not ran into any issues.\n. @rubytester I signed that last week.\n. Seeing this issue as well.\n. @SaiPawan your issue sounds unrelated. This issue has to do with the chromedriver hanging when trying to create a new session. With your issue, is the browser starting and at least performing part of your test? With this particular issue, the console log will show: \nOnly local connections are allowed.\nWith no console output afterwards, it just hangs.\nI've been running configs with the ENV variable suggested and have not had issue since. We could always make that a preset ENV variable in the node base image, assuming there are no ill side effects associated with that.\n. Fixes #200 \n. ",
    "austo": "Great PR - I hope this gets pulled in!\n. ",
    "jcostello84": "+1 for merging. I tested it out locally and it works great.\n. ",
    "viveksoundarrajan": "I am trying to connect the \"docker selenium remote node\" to \"remote docker hub\", But it's not connecting, It shows the connection refused exception, Even I can connect my \"remote node\" to \"docker hub\". please help me. and my commands are here.\nHub:\n   docker run -d -p 4444:4444 --name my_hub selenium/hub:2.47.1\nNode:\n      docker run -d -p 5558:5555 -e REMOTE_HOST=\"http://172.21.113.202:4444\" -e HUB_PORT_4444_TCP_ADDR=\"172.21.113.202\" -e HUB_PORT_4444_TCP_PORT=\"4444\" --name firefox selenium/node-firefox:2.47.1\nThe following screen shot explains the clear exception\n\n. Hi @rubytester \nThe both machines are in local network, so that I put internal subnet ranged ip address,It can accessed from internal network, And I just exported the hub port & remote node ip addresses. It shows the node is connected to the hub, but the automation is not execute in those nodes which is remotely connected from the host. but I could run the same by using this https://github.com/elgalu/docker-selenium , why can't I run in https://github.com/SeleniumHQ/docker-selenium ?\n. ",
    "testphreak": "Hi @charford, it looks like the -remoteHost parameter no longer works on Docker images with Selenium Grid v3.0.0 (selenium-server-standalone.jar). See #306 and #307 for exact error. Any idea what might have changed between 2.53.1 and 3.0.0?\nI wonder if it has anything to do with the command line argument parser change that was made for v3. https://github.com/SeleniumHQ/selenium/issues/2566\nAs far as I can see, the remoteHost parameter continues to be supported - https://github.com/SeleniumHQ/selenium/blob/master/java/server/src/org/openqa/grid/internal/utils/configuration/GridNodeConfiguration.java\n. @charford figured it out finally :).\nSE_OPTS=\"-host $HOSTNAME\"\n. @smccarthy would be great to see this update merged. Contains several fixes.\n. @smmcarthy I noticed you had filed the pull request #234 . Any idea when the change will be official? I still see the container uses v2.21.\nseluser@29e3519b95b0:/opt/selenium$ ls\nchromedriver-2.21  config.json  selenium-server-standalone.jar\n. @elgalu @kayabendroth would be great if the chrome Docker images can be updated with the latest ChromeDriver version.\n. Yeah, I tried the same thing and didn't work for me either. Trying to have node chrome use v2.22.\n. I'm sorry but I didn't understand the solutions proposed or the eventual commit by @ddavison. Perhaps I am missing the point. @pm-kedar-jedhe there is already a solution in place. I have been able to run more than 1 browser instance per container for a while now, by doing this -\nMy config.json\njson\n{\n  \"capabilities\":\n  [\n    {\n      \"browserName\": \"firefox\",\n      \"maxInstances\": 3,\n      \"seleniumProtocol\": \"WebDriver\"\n    }\n  ],\n  \"configuration\":\n  {\n    \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n    \"maxSession\": 3,\n    \"port\": 5555,\n    \"register\": true,\n    \"registerCycle\": 5000,\n    \"hub\": \"http://localhost:4444\"\n  }\n}\nIn the Compose file, I mount config.json -\n``` yml\nselhub:\n  image: selenium/hub\n  ports:\n    - 4444:4444\nfirefox:\n  image: selenium/node-firefox\n  privileged: true\n  volumes:\n    - ./firefoxConfig.json:/opt/selenium/config.json\n  ports:\n    - 5900\n  links:\n    - selhub:hub\n```\nSo each node-firefox container in this case runs 3 instances of the browser.\nAlso @ddavison, what is Americium? See a bunch of files changed.\n. Hi @jalmansor, have you been able to setup Selenium Grid in Swarm mode using Docker Engine v1.12.2 and any Selenium image tagged 3.0.0? Your approach above worked with 2.53.1-x, but doesn't seem to work with 3.0.0-x.\n. Finally got it working! Works for Chrome and Firefox with 2.53.1-x and 3.0.0-x images.\nGot the grid up and running by passing in the -host parameter into the nodes service creation command above and dynamically looking up the host name of the running container and passing it to entry_point.sh as SE_OPTS.\nbash -c 'SE_OPTS=\"-host $HOSTNAME\" /opt/bin/entry_point.sh'\n. @c4wrd sorry it took long to reply. I was at a conference last week. In my case the test client is in the same network as the Swarm. Hence I haven't run into the issue you're seeing. See if you can have your test client run tests in the same network. You might see better results.. Thanks @ddavison. I will modify my project to take these variables into consideration. Any reason why \"seleniumProtocol\" was left out and doesn't have it's own environment variable in the Dockerfile? That way, I can be specific about the type of protocol my project supports i.e. either \"WebDriver\" or \"Selenium\" in my compose file. \n. The IP of the host running the containers seems to be missing -\ndriver = new RemoteWebDriver(new URL(\"http://:4444/wd/hub\"),capabilities);\n. The solution suggested here https://github.com/SeleniumHQ/docker-selenium/issues/255#issuecomment-238645738 though not ideal, works.\n. Hi @ddavison, I am unable to setup a selenium grid either using swarm mode using 3.0.0-x. The approach I linked above works only with 2.53.1 images.\nSo what is the approach we need to abide by as you mentioned above? Do you have any suggestions for setting up a Selenium Grid in Swarm mode with 3.0.0?\nAdding log from a node container -\nREMOTE_HOST variable is set, appending -remoteHost\nException in thread \"main\" com.beust.jcommander.ParameterException: Unknown option: -remoteHost\n    at com.beust.jcommander.JCommander.parseValues(JCommander.java:742)\n    at com.beust.jcommander.JCommander.parse(JCommander.java:282)\n    at com.beust.jcommander.JCommander.parse(JCommander.java:265)\n    at com.beust.jcommander.JCommander.<init>(JCommander.java:210)\n    at org.openqa.grid.selenium.GridLauncherV3$3.setConfiguration(GridLauncherV3.java:257)\n    at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:147)\n    at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:73)\n. @ddavison please review my follow up comments in #307. I am not sure if remoteHost has been removed with v3. I still see it under configuration. Appreciate the help.\n\n. @ddavison finally got it working! Thank you for the feedback and updates to the project. Tested with both Chrome and Firefox on 3.0.0-cerium.\nGot the grid up and running by passing in the -host parameter into the nodes service creation command above and dynamically looking up the host name of the running container and passing it to entry_point.sh as SE_OPTS.\nbash -c 'SE_OPTS=\"-host $HOSTNAME\" /opt/bin/entry_point.sh'\n. Hi @rosariomgomez, please provide more details regarding your implementation such as your environment, OS, Docker version and the commands you are running? That will help me troubleshoot the issue you're seeing.. @chris-smith-zocdoc  @ddavison still can't get it to work. Tried setting SE_OPTS in a couple of ways.\nAttempt 1: \ndocker network create -d overlay gridnet\ndocker service create --network gridnet --name hub -p 4444:4444 -e JAVA_OPTS='-Xmx512m -DPOOL_MAX=512' -e GRID_TIMEOUT=600000 \\\n            -e GRID_BROWSER_TIMEOUT=600000 selenium/hub:3.0.0-cerium\ndocker service create --network gridnet --endpoint-mode dnsrr --name nodes \\\n            --mount type=bind,source=/dev/shm,target=/dev/shm \\\n            -e HUB_PORT_4444_TCP_ADDR=hub -e HUB_PORT_4444_TCP_PORT=4444 -e NODE_MAX_INSTANCES=5 -e NODE_MAX_SESSION=5 \\\n            -e SE_OPTS=\"-hubHost $HOSTNAME\" \\\n            --replicas 2 selenium/node-chrome:3.0.0-cerium\nAttempt 2: \ndocker network create -d overlay gridnet\ndocker service create --network gridnet --name hub -p 4444:4444 -e JAVA_OPTS='-Xmx512m -DPOOL_MAX=512' -e GRID_TIMEOUT=600000 \\\n            -e GRID_BROWSER_TIMEOUT=600000 selenium/hub:3.0.0-cerium\ndocker service create --network gridnet --endpoint-mode dnsrr --name nodes \\\n            --mount type=bind,source=/dev/shm,target=/dev/shm \\\n            -e HUB_PORT_4444_TCP_ADDR=hub -e HUB_PORT_4444_TCP_PORT=4444 -e NODE_MAX_INSTANCES=5 -e NODE_MAX_SESSION=5 \\\n            --replicas 2 selenium/node-chrome:3.0.0-cerium bash -c 'HOSTIP=$(ip -4 addr show eth0 | grep -Po \"inet \\K[\\d.]+\") SE_OPTS=\"-hubHost $HOSTIP\" /opt/bin/entry_point.sh'\n. @ddavison This is how it looks like on the console page after setting up the grid in the 2 ways I specified above. See the connection refused error. The node should be connecting to 10.x.x.x (host ip address) instead of 172.x.x.x.\n\n. Thanks @elgalu. It's unfortunate that there's been no movement on that topic since June.\n. @ddavison, @elgalu, @kayabendroth could you provide some information regarding the timeouts above and if they are in seconds or milliseconds? \nMy confusion stems from the fact that the hub dockerfile sets the GRID_TIMEOUT to 30000 where as the official wiki page for example sets the -timeout variable which I think this docker env variable maps to as 300 seconds.\nI have asked a related question here - https://github.com/SeleniumHQ/selenium/issues/3071\n. Hi @diemol, sure I'll close this one.. @elgalu I guess there's no +1 feature yet with GitHub (at least not that I am aware of). But yes, people should use reactions such as thumps up, thumbs down etc to vote on the issue or a comment instead of adding new +1 comments.. CI is still failing. Explains why 3.3.1-arsenic is not available to pull. Also, the build status icon still points to Circle CI on the home page under README.md instead of Travis CI.\n\nCan that be updated as well?\nLooking forward to the images being published soon.. @cmosher01, yes it does. You always want your unit and integration tests to pass before you deploy a service for general consumption.. I like the idea but please do not remove the current node-chrome and node-chrome-debug images when creating the headless images. I still like the idea of using real browsers inside containers.. @ddavison are the images for 3.3.1-arsenic not on Docker Hub yet?. Sounds good @ddavison. @NiGhTTraX I am seeing the issue as well for 3.3.1 where upon turning on debug I see http-outgoing-3 << \"[read] I/O error: Read timed out\"\nI don't see the error with 3.0.1.. @ddavison I am seeing this issue as well, where after a few tests the run just hangs. I don't see this issue with 3.0.1. My meta information is is exactly the same as @derinbay . Please ignore me linking 447 above. Probably unrelated.. @diemol thanks for the suggestion. I find that my tests don't hang when running with node-chrome-debug. The test run hangs every time I use node-chrome. When I enable debugging for node-chrome container I see several errors related to http-outgoing-129 << \"[read] I/O error: Read timed out\". I don't see anything else that might point to an issue.\nI don't see any issues with my tests when using node-chrome 3.0.1. So it appears to be an issue with 3.3.1-cesium. Do let me know if more information is needed.. @diemol the read timeout issue is probably a red herring. But my tests continue to hang with node-chrome 3.4.0-actinium. Tests run fine on node-chrome-debug.. @diemol I just realized this issue has nothing to do with the hang issues I was seeing with node-chrome. Opened a separate issue https://github.com/SeleniumHQ/docker-selenium/issues/465.. Not sure if this issue has anything to do with issue #423 . This issue appears resolved with 3.4.0-actinium.. Upgraded to 3.4.0-actinium and I am able to setup a grid and run tests with node-chrome-debug using docker service. Thanks @diemol and @ddavison for the fixes!. Awesome! Thanks @diemol! Could this issue affect Firefox images as well? I see this line in the dockerfile for NodeFirefox as well.. @diemol, your change looks good. Verified your change locally. Thanks for reverting the change back to #182.. @manoj9788 sure will close this. Unfortunately Firefox keeps crashing inside the containers #468, which makes the new image unusable.. @manoj9788, @diemol figured out the problem. By default GRID_BROWSER_TIMEOUT on the hub is set to 0 seconds. Increased the browser and grid timeouts value and all my tests ran successfully.. @timonag what does the no_proxy=localhost do? Otherwise looks fine to me. Let me know if you'd like me to keep issue open or you can create a new one.. @diemol, not sure I follow. @ddavison in his commit 12 days ago for 3.3.1-cesium, added dbus package to resolve the dbus issues. With the 3.4.0-bismuth, dbus package is no longer needed?. @diemol, build locally with your changes and ran a subset of my tests. Looks good to me.. @ddavison please merge if it looks good.. Hi @ddavison, I did sign the CLA last time with a previous commit. I used GitHub Desktop to create the pull request this time instead of the GitHub Web, perhaps that's the reason why I didn't get the CLA.. thanks for the merge @ddavison!. @DP19 the way to maximize window for Chrome is to use the --start-maximized option. Do not use WebDriver to maximize.\njava\n      DesiredCapabilities cap = DesiredCapabilities.chrome();\n      ChromeOptions options = new ChromeOptions();\n      options.addArguments(\"--start-maximized\");\n      cap.setCapability(ChromeOptions.CAPABILITY, options);\n      webDriver = new RemoteWebDriver(hubUrl, cap);. @niQo @ddavison Since the release of 3.4.0-francium only a single browser instance is being created per node/container. To confirm, I tried 3.4.0-einsteinium and I am able to setup multiple multiple browser instances per node/container. It appears to me that the environment variables aren't being applied correctly.\nWith any version greater than 3.4.0-francium -\n\nWith 3.4.0-einsteinium (I can see all browser instances) -\n\n. @niQo @Remi-p I believe #529 change has already been merged and released as 3.5.3-astatine on Docker Hub. Correct me if I am wrong @ddavison. I still see the same issue with not being able to set number of browser instances with this latest image.. @scoderp what arguments are you passing when running the node containers? If you see my screenshot for 3.5.3 in my comment above I can only create one browser instance in each node container and I am passing in NODE_MAX_INSTANCES=5. The same command if you see my other screenshot in the same comment works with 3.4.0-einsteinium.\nAlso I'd love to know from @Remi-p what drove this change? Can someone point me to the issue that caused this change? This issue is prevents us from testing against the latest Chrome version/Firefox versions.. @niQo which branch are you referring to? If it's master, I build the images locally from master and it still doesn't set the number of instances correctly. I have a fix for the issue #563 pending review. Added you to it.. @niQo thanks. I confirmed after doing a fetch/rebase that passing of environment variables to the node containers works when building locally. Looking forward to the next release with the fix.. @ddavison noticed the new release last evening. Thanks for the release! Environment variables passed at runtime works for me now. Would be best for the OP to comment before closing the issue.. @slugics please close the issue.. Hi @Remi-p, @ddavison, @diemol, @niQo - please review this change and merge if it looks good. \nUnsure why CI has been failing since build 315. Was able to build and test my change locally.. Hi @diemol, yes, I was able to run the build script locally. There appears to be something else wrong that maybe specific to the CI environment.. Didn't realize that there was already a fix to the environment variables issue and was awaiting a new release of the images. Closing this PR.. Hi @diemol and @ddavison could we get #561 merged so we can fix the build and release new images to fix passing environment variables at runtime?. Not sure I completely follow what you are trying to do. Are you unable to stand up a Selenium Grid by following the steps here?. @diemol, @ddavison please review. Changelog here.\n. @lmtierney thanks. I am still unable to set -enablePassThrough false on the node. Always defaults to true. Works with the hub.\nCommand\ndocker run -d -e NODE_MAX_INSTANCES=5 -e NODE_MAX_SESSION=5 -e SE_OPTS=\"-debug -enablePassThrough false\" -v /dev/shm:/dev/shm --link selenium-hub:hub selenium/node-chrome:3.5.3\nScreenshot\n\n. @lmtierney the debug log on both hub and node appears to confirm what you said. enablePassThrough is true\n17:11:56.351 DEBUG - http-outgoing-0 >> \"{\"class\":\"org.openqa.grid.common.RegistrationRequest\",\"name\":null,\"description\":null,\"configuration\":{\"hubHost\":\"172.17.0.2\",\"hubPort\":4444,\"id\":\"http://172.17.0.3:5555\",\"capabilities\":[{\"seleniumProtocol\":\"WebDriver\",\"browserName\":\"firefox\",\"maxInstances\":5,\"version\":\"55.0.3\",\"applicationName\":\"\",\"platform\":\"LINUX\"}],\"downPollingLimit\":2,\"hub\":\"http://172.17.0.2:4444/grid/register\",\"nodePolling\":5000,\"nodeStatusCheckTimeout\":5000,\"proxy\":\"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\"register\":true,\"registerCycle\":5000,\"unregisterIfStillDownAfter\":60000,\"cleanUpCycle\":null,\"custom\":{},\"host\":\"172.17.0.3\",\"maxSession\":5,\"servlets\":[],\"withoutServlets\":[],\"browserTimeout\":0,\"debug\":false,\"jettyMaxThreads\":null,\"log\":null,\"port\":5555,\"role\":\"node\",\"timeout\":30,\"**enablePassThrough\":true**}}\"\nFor the hub config in the UI, I see that it's set to false -\nConfig for the hub :\nbrowserTimeout : 600\ndebug : true\nhelp : false\njettyMaxThreads : 512\nport : 4444\nrole : hub\ntimeout : 300\nenablePassThrough : false\ncleanUpCycle : 300000\nhost : 10.255.0.3\nmaxSession : 5\nhubConfig : /opt/selenium/config.json\ncapabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher\nnewSessionWaitTimeout : -1\nthrowOnCapabilityNotPresent : true. @diemol, @elgalu any thoughts why this might be happening? Can you try running some tests as well? Can I provide more information in terms of logs that might help understanding the issue?. Debugged this issue some more, and interestingly the Firefox launches and works as expected if I don't maximize the window.\ndriver.manage().window().maximize();\nStill not sure what the root cause is, since I found nothing of interest with the hub and node debug logs or the Docker daemon log. As stated above, I don't see the issue with node-firefox-debug but only with node-firefox image.. That was the first thing I tried. Did not help. Oddly there doesn't seem to be anything in the logs that might point to the issue. Maximizing works with 3.4.0 node-firefox image. So i doubt that this is a FF/geckodriver issue.. Comparing https://github.com/SeleniumHQ/docker-selenium/compare/3.4.0-einsteinium...3.4.0-francium:\nA couple of changes in 3.4.0-francium that could make the container behave a little differently are:\n\n\nhttps://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-francium/NodeFirefox/Dockerfile.txt#L39-L40\n\n\nAlso, this was deleted in 3.4.0-francium: https://github.com/SeleniumHQ/docker-selenium/blob/3.4.0-einsteinium/NodeBase/entry_point.sh#L4\n\n\nOtherwise, every other change in the diff appears to be related to upgrading versions.. @diemol thank you for sharing your findings. Since November is just a little more than a month away, maybe we can wait till Firefox 57 released? \nFor Firefox 55 and 56, we may be able to find useful information in Firefox browser log to see the error it is throwing on window maximize. We maybe able to set that with FirefoxProfile and ssh into the running container to view the log file once the test has run to see if there's any useful information there.. Hi @diemol, thank you for following up. \nTested with driver.manage().window().maximize(); with image selenium/node-firefox:3.7.1 (latest image with FF 57.0) and I don't see the issue any more.\nAnother fix in FF 57 that will benefit users, is you can now upload local files to remote browser without having to add firefoxOptions.addPreference(\"dom.file.createInChild\", true);\nThanks again for updating to the latest versions!. Might not help but try out 3.5.3-boron. Also providing a code snippet of the action you are trying to perform would help debugging.. I have run into the issue as well, trying to check playback state using JS for a mp4 video in Firefox running inside a container. Works on Firefox/Mac. Would be awesome if we could install the necessary codecs.. @diemol @ddavison please merge and build new image if change looks good.. I like this change, if I can simply VNC into the running container without having to type in the password.. Adding a minor change, so whenever a new image is created with a new version of Selenium, whatever the latest stable Firefox is at that time, gets downloaded by default as part of the build, just as we do today with Chrome. Hopefully if this change is accepted, we will not need new pull requests for new versions of stable Firefox.. @diemol, @ddavison can we get this merged?. Thanks @diemol. I made a minor change to not add an else if condition to an already long line. The downside to that is folks who were previously specifying just devedition or nightly, now need to add devedition-latest or nightly-latest.. @peterstory not sure if you have resolved your issue since it's been more than a month since the last comment, but upgrading to docker-selenium image v3.11.0-bismuth or greater, should help resolve the issue. 3.6.0-americium uses geckodriver v0.19.0 which has the issue of hung FF processes. 0.20.0 fixes the issue and 0.20.1 improves on the solution.. Thank you for deploying new images @diemol!. ",
    "yatheeshAtzenq": "I am trying to run docker Selenium on diff hosts (2 Linux machines)\nusing these commands on Hub and on node\n\ndocker run -p 4444:4444 -d -P --name selenium-hub selenium/hub\ndocker run -d -p 5558:5556 -e SE_OPTS=\"-host 10.20.50.53 -port 5558\" -e HUB_PORT_4444_TCP_ADDR=\"10.20.50.92\" -e HUB_PORT_4444_TCP_PORT=\"4444\" --name firefox selenium/node-firefox\n\nHow ever,I see the that the node is registered , but when i fire a test the request says pending\nHere are the Hub logs and screenshot \n\n12:26:43.302 INFO - Unregistering the node http://10.20.50.53:5558 because it's been down for 60014 milliseconds\n 12:26:43.302 WARN - Cleaning up stale test sessions on the unregistered node http://10.20.50.53:5558\n 12:26:43.389 INFO - Registered a node http://10.20.50.53:5558\n 12:27:03.395 INFO - Marking the node http://10.20.50.53:5558 as down: cannot reach the node for 2 tries\n\n\nThe Node seems to be up and running. Not sure what can be the issue\nCould any one please help me on this.. ",
    "aapande": "@lukeis This is happening on selenium standalone version3.3.1 . Nodes are continuously getting reconnected to hub.\nCan some one please take look at it?. ",
    "McSnowflake": "@yatheeshAtzenq This is happaning because the SE_OPTS option does not exactly the same as the good old REMOTE_HOST option did. Instead it overwrites the nodes port and ip setting.\nSo while your port mapping thinks the node uses 5556, the node itsself uses 5558. And that's why the hub can't reach it.\n--> #481 . After the removal of the REMOTE_HOST param, is it somehow possible to have selenium docker nodes with different internal and exposed node ports?\nBecause I use Rancher to expose the (default) 5555 to a random free port, to be able to run severall selenium nodes on the same host and let them connect to a (non-docker) selenium hub. I used REMOTE_HOST to tell the node to give the exposed port to the hub, not the internal (5555).\n. @diemol @tparikka \nThis is exactly what the REMOTE_HOST param has been for. It told the node to tell the hub a specific url to connect to without touching the nodes actual configuration and this way allowing portmapping to be part of the setup.. I use a selenium docker grid, with the hub being not a docker container for various reasons. I needed the -remoteHost param to tell the node which port to tell to the hub when registering. Because the exposed port is not the same as the port used inside the container (default 5555).\nTo use the -port param as supstitute, I would have to make sure that exposed and internal port are the same, which I cannot because the exposed port is randomly chosen by the orchestration tool.\nDoes somebody know away around this?\nAnd why has the -remoteHost param been removed in the first place?. @diemol As I said: the orcestration tool (rancher) randomly chooses the externel (ie exposed) port in the moment before the container is created. I know of no possiblilty of passing that into the container.\n@BruceDone Thx for the Hint. I have to use\nports:\n  - \"5556\"\nin order to make rancher assign a random port. Does the SE_OPT-NODE_PORT-option the same as -remoteHost did, ie telling the node to give the exposed port to the hub when registering, instead of the internal (5556)?. Hi there,\nare there any updates available on the remoteHost topic?\nI will try to rephrase the problem:\nSE_OPTS is not an adequat substitute for the REMOTE_HOST because:\n\n\nSE_OPTS overwrites the node port settings. Whereas \n\n\nREMOTE_HOST allowed different internal and external ports. (ie selenium starts on 5555; portmapping that to 34567; node tells hub to use the latter)\n\n\nGreetings. @braindonor Are you using docker version 3?\nBecause I thought REMOTE_HOST param has been removed?\nAnd when I try it REMOTE_HOST is ignored.. Selenium bug report created:  #4501. When I passed REMOTE_HOST into the container, I can't find it afterwards:\nIn entry_point.sh I do: export REMOTE_HOST=\"http://$NODE_HOST_IP:$EXT_NODE_PORT\"\nInside the containers shell via env, I can't find that environment variable, which propably means that it get's cleared.... @braindonor Hi, thx for the reply. You are using the same internal and external port, which is exactly the restriction, that I'm struggeling with.. Hi @diemol ,\nthanks for your afforts.\nI tried what you suggested, but unfortunately it didn't work.\nSelenium is reporting this:\nException in thread \"main\" com.beust.jcommander.ParameterException: Unknown option: -remoteHost\nat com.beust.jcommander.JCommander.parseValues(JCommander.java:742)\nat com.beust.jcommander.JCommander.parse(JCommander.java:282)\nat com.beust.jcommander.JCommander.parse(JCommander.java:265)\nat com.beust.jcommander.JCommander.<init>(JCommander.java:210)\nat org.openqa.grid.selenium.GridLauncherV3$3.setConfiguration(GridLauncherV3.java:267)\nat org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:155)\nat org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:75).  Hi again @diemol ,\nthis is the command I used:\njava  -cp \"selenium-server-standalone.jar:another.jar\" org.openqa.grid.selenium.GridLauncherV3 -role node -nodeConfig /opt/selenium/config.json -remoteHost http://ip:port -proxy anotherAccessProxy\nI upgraded to selenium 3.7.1 and I don't see the error mentioned above anymore. So I guess, support for remoteHost param moved back in along the way?\n. @diemol,\nI am actually running that in docker, but have to attach the remoteHost param in the entrypoint-script because only after starting the container is the actual portmapping available.\nI use rancher to spawn selenium nodes and rancher maps its ports to a random exposed port, which is only known after the container started. So I tweaked the original selenium docker images to get the exposed port after starting and pass it to selenium with the command I posted above. \nBut this broke after upgrading to selenium 3. \nThanks again for looking into it and\nHave a great weekend,\nMcSnowflake . @barancev I created this ticket at selenium intentionally, because the REMOTE_HOST param is not special for the docker images, but was a basic selenium feature. At least that's what I understood.. ",
    "unusorin": "ETA for this getting merged ? \n. ",
    "mattjbray": "FYI, on a linux host, you can get visual debugging using the existing standalone images:\ndocker run -it --rm \\\n           -e DISPLAY=$DISPLAY \\\n           -v /tmp/.X11-unix:/tmp/.X11-unix \\\n           selenium/standalone-firefox \\\n           java -jar /opt/selenium/selenium-server-standalone.jar\nI think you'd still need the VNC solution on a Mac though.\n. ",
    "pataquets": "Making them also available as Docker Hub images would be great.\n. Thank you!\n. I also cannot configure a proxy server for the Firefox neither setting proxy options via standard Linux environment vars nor passing the above JVM options.\nHowever, even for standalone, non-Dockerized Selenium, proxy navigation has been  always a headache because of lack of docs on doing it via command-line (all docs are for test's code). Some docs mention Ffx profiles that I don't know if can be done inside Docker.\nPerhaps some documenting to the image would be in order, after knowing if/how is it done.\n. The problem for me is not being able to set a proxy from outside the code of the Selenium tests, when deploying/running the tests as Ops. For instance, if you don't have the code available or don't know/want to modify it.\nAssuming an HTTP proxy at 172.17.0.1 port 8123, the following env vars in a Docker Compose manifest worked, so far (however, since I'm not sure which one is the correct, I set them all):\nall_proxy=http://172.17.0.1:8123\n    http_proxy=http://172.17.0.1:8123\n    https_proxy=http://172.17.0.1:8123\n    ALL_PROXY=http://172.17.0.1:8123\n    HTTP_PROXY=http://172.17.0.1:8123\n    HTTPS_PROXY=http://172.17.0.1:8123\n    SE_OPTS=-Dhttp.proxyHost=172.17.0.1 -Dhttp.proxyPort=8123. Thank you, @bbaassssiiee !. ",
    "selvakn": "@smoll : do you mind sharing how you fixed this problem?\n. Figured out that this can be controlled by JAVA_OPTS -Dselenium.LOGGER.level=<LEVEL>\n. ",
    "smoll": "Hi @selvakn, sorry but I no longer work for the company where I posed this initial question or use this image for any of my current projects, so I can't be of much assistance here.\n. ",
    "phlegx": "I also tried the standalone chrome Docker image, but same error their appeared also. I also updated the Chromedriver to 2.15 in the \"selenium/node-chrome\" image. But same problem still.\nIt works however with this image: https://github.com/elgalu/docker-selenium\n. @elgalu Maybe you have a clue what is wong? thanks!\n. Getting a timeout also with https://github.com/elgalu/docker-selenium when I remove the privileged tag. I will now test also \"selenium/node-chrome\" in privileged mode and report you guys back.\n. Unortunately I have only time to test this repo next week again. I'm not sure if I can provide such a minimal project here. The thing is locally on my private machine all works fine, however on server side (digitalocean, Docker 1.4.1, ubuntu precise) the problem occurs and only 'privileged' can solve it.\n. ",
    "Joel-fogue": "If anyone still has an issue with this error please check my proposed solution at this link: http://stackoverflow.com/questions/21001652/chrome-driver-error-using-selenium-unable-to-discover-open-pages/38700776#38700776\nLook for the answer by pelican, hope that helps out someone!\n. ",
    "jbulchergist": "The problem appears to be with the use of the -p switch; without it the container starts up OK. I confirmed it is not an issue with selenium by attempting to run the ubuntu image with the -p switch, and it also failed to start.\nStill, if anyone has any idea about why this is happening, I'd appreciate hearing from you!\n. ",
    "coodoo": "Yep, figured it out yesterday and thanks for answering.\n. ",
    "gongo": ":+1: \n. ",
    "chris-orchard": "Sorry I searched for '2.46' not '2.46.0' so the existing issue didn't come up\n. ",
    "timmipetit": "I found out that I could fix this by doing docker run -e TZ=\"Europe/Amsterdam\". Maybe this should be added to the docs? Because it seems a non-standard way of setting timezone for a container.\n. ",
    "manoj9788": "Recently I ran into this issue  and used the docker run -e TZ=\"< >\" as well. \nWhat sort of help is required to fix this ?\n. Long back, got this fixed and added it to Leo's repo and not here. Should have added here too.\nhttps://github.com/elgalu/docker-selenium/commit/767bdd644ab3cd07e4f59a4b62528bd8e817f35c. @elgalu  Could you please merge this. \n. Thank you!\n. Never late to join :) I haven't seen this issue before.. @pavelpp 3.2 was just released 4 days ago, so I assume we will have to wait for few more days.. This can be closed. Closes issue #466 . I just used the docker-compose.yml  above and tried a sample test and VNC'd into it - it works. Maybe let's wait for someone else to reproduce this error.. Can you please try the same test in FF with the conventional setup of Grid with the jar file and put your findings here?. LGTM\n. ",
    "g13013": "\ud83d\udc4d\n. I guess yes, thank you ;)\n. ",
    "kayabendroth": "Can be closed?\n. @elgalu I'll change it then. Thanks.\n. @rubytester +1 for using JRE 8.\nI signed the CLA just now.\n. I upgraded the Ubuntu version we use as a base image to 14.10, as 14.04 doesn't have native Java 8 packages. I also tried 15.04, but ran into a timeout problem during make test, which I didn't want to investigate right now. We can upgrade to 15.04 later on.\n. Just saw that Utopic reached it's \"end of support\"-date already (by the end of July). I'll look into the timeout problem with Vivid. Maybe this PR can be merged anyway?\n. Java update removed from PR as it involves upgrading Ubuntu as well and the upgrade to Vivid doesn't work out-of-the-box, at least not for me testing this on my local machine.\n. +1\n. +1\n. I would stick to specifying the version we want to use. That way we are in control what a build does and we can expect two builds produce the same thing. A new driver version, at some point, might introduce problems.\n. The last version before 4.0.0 was 0.12.7. Apparently Node.js merged with io.js and they decided to bump the version like this (https://medium.com/node-js-javascript/4-0-is-the-new-1-0-386597a3436d).\nThe PR helps keeping the Node dependency up-to-date, but it is not \"necessary.\"\n. @rubytester Can you check the deploy key settings in CircleCI? There was a \"Permission denied\" error.\n. +1\n. +1 for having two OPTS variables. Makes sense.\n. @rubytester You can create a deploy key in CircleCI via Project Settings >> Permissions >> Checkout SSH keys. I think after you click on Create and add  deploy key a read-only deploy key will be generated and stored. This key can be used for reading, but not for writing to the repository, but this should be enough here.\nIf you check the settings for this project, you should see a deploy key entry named \"SeleniumHQ/docker-selenium deploy key.\"\n. @alexkogon Can you update your commit message to include something like\nFixes #143\nat the end? That way your issue will be closed when merging your PR in the default branch. For more info: https://help.github.com/articles/closing-issues-via-commit-messages/.\n. @alexkogon Thanks. Can you rebase your branch again and squash those three commits into one? Due to the version bump your changed lines were touched as well.\n. @alexkogon Thank you.\n. @alexkogon I've done the rebase and merge-conflict-solving. I've put your commit onto the last version upgrade PR (for 2.50.1), which should be fine as it should be merged \"as is.\"\nThis PR can be closed now, because it's superseded by https://github.com/SeleniumHQ/docker-selenium/pull/159.\n. @alexkogon You're welcome.\n. @bbarke Good idea as the issue seems to be a regression introduced in 2.49.0.\n. @rubytester Let's wait for 2.49.1 before merging.\n. @davehunt, @rubytester I'd suggest to wait a few days to see, if there are regressions in 2.50.\n. @sethuster Sorry for the delay.\n. @dylanlive Some tags are missing. Will look into it tomorrow.\n. @rubytester The images in the Docker Registry (https://hub.docker.com/r/selenium) do not have the latest tags (2.50.1 and 2.52.0). Does someone need to add those somewhere?\nWhen looking at one of the failing build pages (https://hub.docker.com/r/selenium/hub/builds/bffcvg7bqgeuh8ndh7rvjfq/) it says: Build failed: Tag 2.52.0 not found in repository docker.io/selenium/base.\n. Superseded by and fixed with https://github.com/SeleniumHQ/docker-selenium/pull/194.\n. Superseded by https://github.com/SeleniumHQ/docker-selenium/pull/168.\n. @Vanuan Can you add this for all of our images and add it to this Pull Request?\n. Change should be added to https://github.com/SeleniumHQ/docker-selenium/pull/170.\n. Fixed with 2.52.0 and 2.53.0.\n. @dcosson This was not intentional. Fixed with https://github.com/SeleniumHQ/docker-selenium/pull/199.\n. Superseded by https://github.com/SeleniumHQ/docker-selenium/pull/180.\n. Was busy during the last weeks.\n. Superseded by (and merged with) https://github.com/SeleniumHQ/docker-selenium/pull/194.\n. Superseded by https://github.com/SeleniumHQ/docker-selenium/pull/206. @double16 Please check my enhancements on top of your commit. Will merge the other PR, if you agree.\n. I would try to stay away from updating the tags, unless we really need it.\nIf a new Selenium version requires a new Firefox version, we just need to make sure that with the upgrade of Selenium the Firefox version will be changed as well.\n. @davehunt Thanks.\n. @davehunt Please rebase.\n. Fixed with https://github.com/SeleniumHQ/docker-selenium/pull/194.\n. @jeffjk-me :+1: \n. @stenver No need to update README, b/c https://github.com/SeleniumHQ/docker-selenium/pull/182 has been merged.\n. Please close, if you agree.\n. Thanks.\n. @karel1980 You're right. And while already touching those lines, I used the content of $TZ in the echo call.\n. I checked the 2.53.0 tagged images and did not get the error. But can reproduce with latest\n. Please check, if this is fixed for you with the images from today.\nLatest changes from master have been merged into 2.53.0 branch, thus triggering a rebuild of 2.53.0 and latest images.\n. @4alldigital The node*debug images are build off of their node counterparts, which are based on node-base. And node-base already has /opt/bin/functions.sh. Have a look at https://hub.docker.com/r/selenium/node-firefox-debug/builds/bauzaguyjczuwpkscy3yarb/.\n. @dgangwar Which images are you using? The ones tagged with latest? Can you post an image id?\n. Likely a duplicate of https://github.com/SeleniumHQ/docker-selenium/issues/208.\n. @davehunt already suggested to have latest images derived from the latest base images.\n. @rajaashutosh Did this fix it for you?\n. @shouze Regarding the TZ setting: I don't know. But I would like to have this TZ change, if we want to do it, in another PR.\n. @shouze I like the idea to have an Alpine variant, not interfering with the Ubuntu based images. On the other hand: all those images. What do the others think?\nAlpine used to have issue with DNS resolution (https://github.com/smebberson/docker-alpine/issues/24, https://support.tutum.co/support/discussions/topics/5000048360).\n. New Fx version may require a Selenium upgrade.\n. Will merge this now even though other PRs include updates as well, but this one also contains a long overdue clean-up of generated files.\n. The list of packages to install is sorted alphabetically to minimize the risk of merge conflicts.\n. Please switch back to the version tag for now.\n. Before the call to rm: Add a line for deinstalling the packaged version of Firefox.\napt-get -y purge firefox\n. Please switch back to the version tag for now.\n. We'll merge it into master and after that into the 2.53.0 branch. Not using a specific tag here, will likely cause trouble later on.\n. Please add gstreamer1.0-libav to line 11 and break it up like this:\n&& apt-get -qqy --no-install-recommends install \\\n     gstreamer1.0-libav \\\n     firefox \\\n&& ...\nThis saves another layer and a call to apt-get update.\n. This line has to go away. You download two versions of Selenium.\n. Why do you move this line below?\n. Why do you install multiple versions of Fx? Do we want that?\n. Same questions as above.\n. If we want to have that, then all of the versions should be defined in an ENV variable, e.g., FIREFOX_LATEST, FIREFOX_MINUS_ONE, FIREFOX_MINUS_TWO. And installing these three versions should be done in a for-loop to make the Dockerfile more readable.\n. ",
    "meeroslaph": "Sure! That is something I was thinking about. I will enhance some references with appropriate URLs and review overall readability. Will keep you updated on this.\n. I have updated README.md file (preview rendered version with the updates) with styling and readability improvements. Also license references inside each folder with dockerfiles were updated to have a link to the LICENSE.md file (for example README.md file inside Hub folder) instead of the old links referencing the file located in Google Code.\nHope this was helpful!\n. @rubytester Your point is absolutely reasonable. This is done! Thank you for rebase + squash usage suggestion.\np.s.: The reason of failed tests on my previous commits is unclear for me as well. Luckily, with the only one commit everything has worked out. Thanks again!\n. I have just made myself familiar with this document and signed the CLA. Thanks for pointing this out.\n. ",
    "jjmurre": "I tried it again and get the same problem. However, when I use the Dockerfile below, vnc  works.\nReally strange, because that is exactly what happens in the 'StandaloneDebugChrome' Dockerfile.\nFROM ubuntu\nRUN apt-get update && apt-get install -y x11vnc xvfb \nRUN mkdir ~/.vnc\nRUN x11vnc -storepasswd 1234 ~/.vnc/passwd\nEXPOSE 5900\nCMD    [\"x11vnc\", \"-forever\", \"-usepw\", \"-create\"]\n. I used the image from the hub. I tried it now with latest (c0de4f4abc1d) and get the same result.\nI also rebuilt the image locally, same problem.\nHowever, when I tried it with latest on another machine (Ubuntu 14:04 server), vnc works ok.\nMy local laptop is also Ubuntu 14:04 (desktop).\n. ",
    "rkerr": "I ran into the same issue today with selenium/standalone-firefox-debug:latest from the hub.\nGoing through the x11vnc code it seems that if x11vnc can't find the password file for -usepw it will try to create it by calling x11vnc -storepasswd - that will try to prompt for a password on stdin which is in turn generating the stty/fgets errors.\nWhat I'm not sure of is why x11vnc isn't finding the password file or why it apparently works for some people and not others...\n. Seems to be related to the setting of $HOME in containers. It appears that behaviour in docker changed at some point: https://github.com/docker/docker/issues/2968\nFor recent versions of docker $HOME gets set to /root and that's where the VNC password file ends up in the published image. If you're using an older version of docker $HOME gets set to / which stops the password file being found.\nThe -debug images could be made compatible with both versions of docker by symlinking /.vnc to /root/.vnc\n. ",
    "PeteMrCoder": "I am running https://github.com/magento/taf\nIt in turn uses \"PHPUnit_Extensions_SeleniumTestCase\"\nThanks!\n. I am using Selenium 2.46 (standalone-chrome-debug). I personally don't think the bug is in magento/taf thou since it is Selenium that opens the tab in chrome, making its running tab deactive, causing the slow down?\n. Is this what you mean?\n$ apt-cache show phpunit-selenium\nPackage: phpunit-selenium\n...\nVersion: 1.2.6-3\n$ /usr/bin/phpunit --version\nPHPUnit 3.7.28 by Sebastian Bergmann.\n. Ok, so I have upgraded to PHPUnit 4.7.7 (Comes with latest Selenium classes) and amended some code that was not working in the latest version.\nhttps://github.com/PeteZero1/taf/commit/74552c4c022a46b405cddf6e79b019f0b62ffc3a\nThe issue still persists.\n. Confirmed it is using phpunit-selenium 1.4.2 in the latest \"phpunit.phar\" file...\nabstract class PHPUnit_Extensions_Selenium2TestCase extends PHPUnit_Framework_TestCase\n{\n    const VERSION = '1.4.2';\n    .....\nThanks\n. Just to add more information that may be useful.\nThe tab URL...\nhttp://www.mydomain.co.uk/selenium-server/core/RemoteRunner.html?sessionId=19c313e5cd9f42229e497a97e2fcb212&multiWindow=true&baseUrl=http%3A%2F%2Fwww.mydomain.co.uk%2Fadmin%2F&debugMode=false\nOpens the following new tab...\nhttp://www.mydomain.co.uk/admin/\nThe \"selenium-server\" tab then becomes inactive and this causes the javascript running in that tab to become limited. Clicking the first tab making it active (Via VNC) immediately restores the expected test speeds.\n. Thanks for all the help but that sounds like a very hacky solution to the issue?\nIf the issue does not belong in docker-selenium where would I be better raising it?\n. ",
    "ddeath": "Hey do not know how much relevant is this and if it works (did not any tests) but if you run the tests in separate windows(not tabs) it should not throttle according to this blog post\n. ",
    "bbaassssiiee": "This issue has been closed without a fix.. This docker-compose.yml file works\n```\nversion: '2.2'\ndocker-compose --force-recreate\nservices:\n  firefox:\n    image: selenium/standalone-firefox:2.53.0\n    ports:\n      - 4444:4444\n    volumes:\n      - /dev/shm:/dev/shm\n    environment:\n      - TZ=CET      - no_proxy=127.0.0.1,localhost,.test,schiphol.nl\n      - http_proxy=http://172.17.0.1:8128\n      - https_proxy=http://172.17.0.1:8128\n      - SE_OPTS=-Dhttp.proxyHost=172.17.0.1 -Dhttp.proxyPort=8128\n```. Let\u2019s let the solution be the last and stop comment.. ",
    "bbhenry": "so is elgalu repository part of the Selenium official one? I know there is already a ticket in yours, but I thought people who worked on the official repository should also know.\n. Thank you all for finding the solution. I will close this ticket once my test went through.\nIf you are using docker-compose add the volume under your Chrome image setting in docker-compose.yml\nhub:\n  image: selenium/hub\n  ports:\n    - \"4444\"\nfirefox:\n  image: selenium/node-firefox-debug\n  links:\n    - hub\n  ports:\n    - \"5900\"\nchrome:\n  image: selenium/node-chrome-debug\n  volumes:\n    - /dev/shm:/dev/shm\n  links:\n    - hub\n  ports:\n    - \"5900\"\n. ",
    "kkochubey1": "Chrome 42 - 44 crashes when manually open http://www.google.com/adwords\nIs there issue already opened for Chrome browser in docker. Should I submit a new one for Chromium? \nWe are running into similar issue with our application same as with http://www.google.com/adwords\nWe use own docker configuration similar to selenium/node-chrome-debug\nSteps to reproduce manually on public selenium image:\ndocker run -d -p 4444:4444 --name selenium-hub selenium/hub\ndocker run -it -p 5900:5900 --link selenium-hub:hub selenium/node-chrome-debug\nstart vnc viewver on default docker IP 127.0.0.1:5900\nor for boot2docker IP at 192.168.69.103:5900\n(default password is 'secret')\nRight mouse click. Open Applications\\Terminal Emulators\\XTerm\nrun following commands\n\nsudo su - seluser\ngoogle-chrome\n\nIn google chrome window type\nhttp://www.google.com/adwords\nIt loads page and then shows: Aw, Snap!\nIt is reproducible in all Chrome browsers starting 42 (till latest 44)\nCurrently on Chrome/44.0.2403.155\nIt is not reproducible on the our old docker-selenium image with older Chrome/41.0.2272.89\nPlease refer correct duplicate or let me know where I can submit this issue? \nI can provide additional details, logs if needed?\n. Submitted https://code.google.com/p/chromium/issues/detail?id=519952\n. It also works if use -v /dev/shm:/dev/shm option to share host /dev/shm \nIn this case you do not need  --privileged mode.\n. ",
    "dirathea": "Hi all..\nActually I experience the same. I'm new in docker, and I found this issue is occur on my Windows Machine.\nI've tried the -v /c/Users/<users>/some/path:/dev/shm and it's still not working, even I see some files added to the path.\nPlease help with this error..\nThanks\n. ",
    "sloppylopez": "Thanks for he workaround, @elgalu solution worked for me, big time and straight away \n. ",
    "jeffreylail": "@pleerock did you ever figure this out? i'm having the same problem.. ",
    "pleerock": "I remember this issue but I don't remember how I fixed it or did I fix it at all. And I do remember how painful it was to run selenium in docker. ",
    "aksharpanchal": "+1\n. +1\n. ",
    "nirav1911": "It is not the similar issue as in my case, nodes are started and I can see\nthe grid. It is not able to open firefox.\nOn Wed, Jul 29, 2015 at 3:14 AM, Leo Gallucci notifications@github.com\nwrote:\n\nThis issue looks like a duplicate of #14 (comment)\nhttps://github.com/SeleniumHQ/docker-selenium/issues/14#issuecomment-125685468\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/82#issuecomment-125866686\n.\n\n\nThanks,\nNirav Shah\n(C) (610) 306-9617\n. ",
    "zoechi": "@rubytester thanks a lot! \nGot it working google/webdriver.dart#98\n. See the screenshot in my first comment. I didn't get this message today but I didn't try with the same url. I just wanted to figure out how to modify Firefox config once and for all. \n. Great, thanks for checking!  I'm just glad I finally figured out how to modify the Firefox profile using the Dart WebDriver package which isn't yet as full featured as the APIs for other languages like Java,  Python and a few others, but getting there. I needed this a few times already but wasn't able to make it work previously. \n. ",
    "vbanthia": "Well, In case someone needs appium image, they can check here. I have created a base image which comes with appium and its dependencies installed.\nIn case docker-selenium community want to support appium too, then I would be happy to make a PR.\n. ",
    "yotamshapira": "Happens to me on an Ubuntu 14.04 VM (not in a container):\nchrome_debug.log:\n[2854:2854:0825/123047:ERROR:nss_util.cc(97)] Failed to create /.pki/nssdb directory.\n[2891:2891:0825/123047:ERROR:sandbox_linux.cc(345)] InitializeSandbox() called with multiple threads in process gpu-process\n[2854:2854:0825/123047:WARNING:password_store_factory.cc(346)] Using basic (unencrypted) store for password storage. See http://code.google.com/p/chromium/wiki/LinuxPasswordStorage for more information about password storage options.\n[1:1:0825/123102:INFO:child_thread_impl.cc(666)] ChildThreadImpl::EnsureConnected()\nChrome process list:\nselenium  1347     1  0 12:04 ?        00:00:11 /usr/bin/java -jar /usr/local/selenium/server/selenium-server-standalone.jar -role node -nodeConfig /usr/local/selenium/config/selenium_node.json -Dwebdriver.chrome.driver=/usr/local/selenium/drivers/chromedriver/chromedriver\nselenium  2848  1347  0 12:30 ?        00:00:00 /usr/local/selenium/drivers/chromedriver_linux64-2.18/chromedriver --port=22923\nselenium  2854  2848  0 12:30 ?        00:00:00 /opt/google/chrome/chrome --disable-background-networking --disable-client-side-phishing-detection --disable-component-update --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --disable-web-resources --enable-logging --ignore-certificate-errors --load-extension=/tmp/.com.google.Chrome.oy5xLY/internal --log-level=0 --metrics-recording-only --no-first-run --password-store=basic --remote-debugging-port=12573 --safebrowsing-disable-auto-update --safebrowsing-disable-download-protection --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.com.google.Chrome.nwXnbU data:,\nselenium  2869  2854  0 12:30 ?        00:00:00 /opt/google/chrome/chrome --type=zygote --enable-logging --log-level=0 --user-data-dir=/tmp/.com.google.Chrome.nwXnbU\nselenium  2870  2869  0 12:30 ?        00:00:00 /opt/google/chrome/nacl_helper\nselenium  2873  2869  0 12:30 ?        00:00:00 /opt/google/chrome/chrome --type=zygote --enable-logging --log-level=0 --user-data-dir=/tmp/.com.google.Chrome.nwXnbU\nselenium  2891  2854  0 12:30 ?        00:00:00 /opt/google/chrome/chrome --type=gpu-process --channel=2854.0.384655797 --enable-logging --log-level=0 --user-data-dir=/tmp/.com.google.Chrome.nwXnbU --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd --supports-dual-gpus=false --gpu-driver-bug-workarounds=2,45,57 --disable-accelerated-video-decode --gpu-vendor-id=0x15ad --gpu-device-id=0x0405 --gpu-driver-vendor --gpu-driver-version --user-data-dir=/tmp/.com.google.Chrome.nwXnbU --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd --enable-logging --log-level=0\nselenium  2916  2873  0 12:30 ?        00:00:00 [chrome] <defunct>\nselenium  2923  2854  0 12:30 ?        00:00:05 /opt/google/chrome/chrome --disable-background-networking --disable-client-side-phishing-detection --disable-component-update --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --disable-web-resources --enable-logging --ignore-certificate-errors --load-extension=/tmp/.com.google.Chrome.oy5xLY/internal --log-level=0 --metrics-recording-only --no-first-run --password-store=basic --remote-debugging-port=12573 --safebrowsing-disable-auto-update --safebrowsing-disable-download-protection --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.com.google.Chrome.nwXnbU data:,\n. ",
    "ArchmageInc": "I have also experienced this and trying to discover the cause has not been very successful. If I switch our tests to run using firefox, I do not experience this issue. When using the selenium-node-chrome-debug, I can see the browser open and running tests. During a hang, however, the browser is only open on the task bar and not able to be interacted with.\n. ",
    "fbarbat": "I am also having this issue. This will prevent me to use docker-selenium. I need it to be stable so I can have continuous integration and monitoring over it. And I can't use firefox since I am using some chromeOptions.\n. ",
    "SebastianLees": "Checking in to report I am also seeing this issue. Google search led me here...\n. ",
    "n8whnp": "I am having these issues as well, I found that decreasing the memory available to docker reduced how frequently this happens.\n. ",
    "peterbollen": "Seeing this as well\n. ",
    "Compufreak345": "Any progress here? I had this issues on rare occasions in previous releases, but after updating it occures so often that I can't run my tests anymore, no matter how often I try.\n. ",
    "mbrock": "I am having similar issues that I haven't investigated closely yet.\nIs there any reason to believe that the container should be running an init process? Lack of proper zombie killing is one reason containers can behave strangely, right?\nI think I'll try to build a Chrome WebDriver container that uses Yelp's dumb_init (http://engineeringblog.yelp.com/2016/01/dumb-init-an-init-for-docker.html) and see if that helps. Otherwise I'll have to make a timeout on a higher level to force delete and recreate the containers.\n. ",
    "pwaller": "This has definitely gotten worse in the last month or two. I can't run our tests at all now.\n. Yes, I have /dev/shm bind mounted.\n. Anecdotally, setting DBUS_SESSION_BUS_ADDRESS=/dev/null appears to have made my selenium environment reliable. Very very excited to see progress on this!\n. @adeslade: You need to set it on the selenium/node-chrome (or selenium/node-chrome-debug) container. So my selenium docker-compose.yml now looks like this. Or if you're running it with straight docker: docker run --env DBUS_SESSION_BUS_ADDRESS=/dev/null ... selenium/node-chrome-debugd\n. @sterago it's the thing under which the chromedriver runs, as I understand it.\n. @jjYBdx4IL can you link your report?\n. > But for some reason it was changed\nLooks like to make sudo work was the reason, because that happens to read /etc/environment: https://github.com/SeleniumHQ/docker-selenium/issues/358\nIt seems like the correct answer to make sudo work correctly would be to instead add the following to sudoers, or to invoke sudo with --preserve-env (aka -E), and to use ENV in the Dockerfile as before 88584de.\nDefaults env_keep += \"DBUS_SESSION_BUS_ADDRESS\"\n/cc @a-k-g and @Sovetnikov from #358.. I'm also having this problem as @kingkevin. Also using -v /dev/shm:/dev/shm. No defunct processes. Just gets stuck.\n. This may be a duplicate of #87. There is a preliminary workaround of setting DBUS_SESSION_BUS_ADDRESS=/dev/null on the chrome container.\n. I've just hit this, I happened to notice it started when I upgraded to docker 1.8.1 from docker 1.7.1.\n. Okay, after a bit of fun trying to reproduce and bisect, I've discovered why it's happening. It's actually my docker-compose upgrade that did it, not docker's upgrade. I can reproduce it on both 1.7 and 1.8.\nThe difference is with docker compose 1.4, if you don't use --force-recreate, then sometimes it will get stuck saying Waiting xvfb....\nNow that I know this, I'm able to reproduce it without docker-compose.\nIn one window, run this:\n$ docker run -ti --rm --name hub selenium/hub\nThen in another:\n$ docker run -ti --name chrome --link hub selenium/node-chrome-debug\n[...snipped usual output...]\n<press CTRL-C>\n$ docker start -ai chrome\nWaiting xvfb...\nxvfb-run: error: Xvfb failed to start\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n^C/opt/bin/entry_point.sh: line 15: kill: (5) - No such process\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n^C/opt/bin/entry_point.sh: line 15: kill: (5) - No such process\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n. @xlc nice observation. To the developers: what is that code trying to do? I interpret that it's passing the root environment through, but just for variables which are set in the seluser environment. Why? and why given that -E is being passed? The intent there is lost and the code makes it very hard to read and determine what will happen. Presumably it's possible to achieve the intended effect with less code and in a less error-prone way. I would have sent a patch if I could determine what the purpose is.\n. I have just hit this. A firefox tab crashes, then this appears on the console. The crash is 100% reproducible on my side, but unfortunately I can't easily provide a minimal reproducer.\nI'm using the selenium/node-firefox-debug:3.4.0 image.\nfirefox_1    | [Parent 2149] WARNING: pipe error (52): Connection reset by peer: file /home/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 346\nfirefox_1    | [Parent 2149] WARNING: pipe error (45): Connection reset by peer: file /home/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 346\nfirefox_1    | \nfirefox_1    | ###!!! [Parent][MessageChannel] Error: (msgtype=0x2C0085,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv\nfirefox_1    | \nfirefox_1    | 22/06/2017 14:32:13 cursor_noshape_updates_clients: 0\nfirefox_1    | 22/06/2017 14:32:19 XDAMAGE is not working well... misses: 220/227\nfirefox_1    | 22/06/2017 14:32:19 Maybe an OpenGL app like Beryl or Compiz is the problem?\nfirefox_1    | 22/06/2017 14:32:19 Use x11vnc -noxdamage or disable the Beryl/Compiz app.\nfirefox_1    | 22/06/2017 14:32:19 To disable this check and warning specify -xdamage twice.\nfirefox_1    | 22/06/2017 14:32:31 cursor_noshape_updates_clients: 0\nfirefox_1    | 22/06/2017 14:32:31 cursor_noshape_updates_clients: 0\nfirefox_1    | 22/06/2017 14:32:40 XDAMAGE is not working well... misses: 213/217\nfirefox_1    | 22/06/2017 14:32:40 Maybe an OpenGL app like Beryl or Compiz is the problem?. I have resolved the issue, it turned out to be an issue of shm-size, see https://github.com/SeleniumHQ/docker-selenium/pull/485 and related issues. Increasing it to 1G and haven't encountered the crash since.. ",
    "borick": "Have you guys seen the instructions in https://github.com/SeleniumHQ/docker-selenium#running-the-images?\nit says to make sure you mount /dev/shm on the container. It has already improved robustness for me greatly.\n. ",
    "sterago": "My team has been seeing these issues as well and we're not using docker, just a regular grid setup based on Ubuntu 14.04, so perhaps this is not specifically related to docker?\nTo reproduce, we wrote a simple selenium script that repeatedly opens Chrome, visits a generic web page and quits the browser. After about 50 iterations the script hangs trying to start a new Chrome session. This only happens using a RemoteWebDriver, though. Using a local Chrome instance we haven't seen it hanging. HTH\n. @Vanuan \nThe script fails when using a browser handle obtained by contacting a selenium hub. Hub and node are running on the same machine.\n. @Vanuan Yes, and considering that when using a local ChromeDriver instance on that same machine it never hung during our tests, one could assume that the chromedriver <-> chrome part of the chain can be excluded as, at least in isolation, it seems not to trigger the issue. Perhaps there is some kind of deadlock happening during the communication between node and chromedriver? The result of some quick tests we did strace'ing all the parts involved seemed to suggest something along those lines, but I wouldn't bet on it.\n. @Vanuan Is that using Docker? What's the OS? Our test script is using the Python selenium bindings, yours as well?\n. @jjYBdx4IL how exactly did you configure the DBUS_SESSION_BUS_ADDRESS environment variable? Is it configured for the environment where the selenium node process runs or somewhere else?\n. @elgalu Thanks for the tip - in our case, it's already installed on the machine running the selenium node\n. thanks @pwaller - I would like to try this and see if it helps also in a non-docker environment but as I am not familiar with docker I am not sure I understand for which process this environment variable should be set. Should it be for the java process running the selenium node jar perhaps? Or for the chromedriver executable?\n. thanks. I'll try it out and report back\n. We added DBUS_SESSION_BUS_ADDRESS=/dev/null to the to the list of system-wide environment variables (/etc/environment). Hopefully this is not too invasive causing problems in other parts of the system, but so far it seems it did help with the problem of chrome randomly hanging at launch in a non-docker environment as well. Thanks for all the pointers - hopefully there will be an official fix for this issue soon, but I guess it wouldn't be from this very project (selenium-docker) but rather the main selenium project, as far as I understand?\n. @charansethi unless you explicitly installed a port of DBUS for Windows, by default there is no DBUS system there, so I am afraid that this work around is not applicable in this case\n. ",
    "Vanuan": "@sterago \n\nwrote a simple selenium script that repeatedly opens Chrome\n\nIs it with or without selenium grid? Probably simple node would work?\n. So it's anywhere in this chain\nhub -> node -> chromedriver -> chrome\n                                  |\nhub <- node <- chromedriver <-----\nAccording to the log:\n04:44:24.140 INFO - Creating a new session for Capabilities [{rotatable=false, nativeEvents=false, browserName=chrome, takesScreenshot=false, javascriptEnabled=false, version=, platform=ANY, cssSelectorsEnabled=false}]\nStarting ChromeDriver 2.20.353124 (035391233162d32c80f1dce587c8154a13830c3b) on port 20575\nOnly local connections are allowed.\nthe hub reaches the node, but the node is unable to reach chromedriver because this message isn't printed:\n04:44:24.450 INFO - Done: [new session: Capabilities [{rotatable=false, nativeEvents=false, browserName=chrome, takesScreenshot=false, javascriptEnabled=false, version=, platform=ANY, cssSelectorsEnabled=false}]]\n. I've just reproduced it by directly connecting to the node (without a hub).\n. No, mine is using ruby bindings. Yes. It's a docker node. Here's a run command:\ndocker run -d \\\n  -p 5555:5555 \\\n  -e HUB_PORT_4444_TCP_ADDR=${HUB_HOST} \\\n  -e HUB_PORT_4444_TCP_PORT=4444 \\\n  -e REMOTE_HOST=${CURRENT_HOST}:5555 \\\n  -v /dev/shm:/dev/shm \\\n  --name=chrome \\\n  selenium/node-chrome:2.52.0\nAnd I reproduce the timeout by connecting directly to ${CURRENT_HOST}:5555\nIt happens less frequently though. Client, hub and node are all separate machines.\n. This does look strange:\n```\n07:44:44.661 INFO - Creating a new session for Capabilities [{rotatable=false, nativeEvents=false, browserName=chrome, takesScreenshot=false, javascriptEnabled=false, version=, platform=ANY, cssSelectorsEnabled=false}]\nStarting ChromeDriver 2.20.353124 (035346203162d32c80f1dce587c8154a1efa0c3b) on port 1317\nOnly local connections are allowed.\n...\n08:37:00.129 INFO - Command failed to close cleanly. Destroying forcefully (v2). [/opt/selenium/chromedriver-2.20, --port=20521][ {}]\n08:37:01.137 ERROR - Unable to kill process with PID 1563\n08:37:01.138 WARN - Exception thrown\n...\nCaused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException\nDriver info: driver.version: unknown\n    at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:113)\n...\njava.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException\nBuild info: version: '2.52.0', ...\n...\nDriver info: driver.version: ChromeDriver\n    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)\n    at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)\n    at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)\n    at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144)\n    at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:170)\n    at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:138)\n    ... 14 more\nCaused by: org.openqa.selenium.WebDriverException: java.net.SocketTimeoutException: Read timed out\n...\nDriver info: driver.version: ChromeDriver\n    at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:91)\n...\nCaused by: java.net.SocketTimeoutException: Read timed out\n    at java.net.SocketInputStream.socketRead0(Native Method)\n...\n    at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)\n    at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)\n    at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)\n```\nchromedriver is running there though:\ndocker exec chrome ps aux|grep chromedriver\nseluser   3931  0.0  0.1 391412  9292 ?        Sl   07:44   0:00 /opt/selenium/chromedriver-2.20 --port=1317\nseluser   4689  0.0  0.0 391412  7432 ?        Sl   08:23   0:00 /opt/selenium/chromedriver-2.20 --port=30084\nAnd it's listening:\n```\nnetstat -tl\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State    \ntcp        0      0 localhost:12698         :                     LISTEN   \ntcp        0      0 localhost:30084         :                     LISTEN   \ntcp        0      0 localhost:1317          :                     LISTEN   \ntcp        0      0 localhost:12106         :                     LISTEN   \ntcp        0      0 localhost:12050         :                     LISTEN   \ntcp        0      0 :5555                  :*                     LISTEN    \n```\n. Reproduced again. Port used by chromedriver: 1081\n```\nActive Internet connections (w/o servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\nSelenium-standalone.jar talking to chromedriver:\ntcp        0      0 localhost:1081          localhost:41303         ESTABLISHED 14332/chromedriver-\ntcp        0      0 localhost:41303         localhost:1081          ESTABLISHED 21/java         \nChrome talking to chromedriver\ntcp        0      0 localhost:12544         localhost:38406         ESTABLISHED 14337/internal --lo\ntcp        0      0 localhost:38406         localhost:12544         ESTABLISHED 14332/chromedriver-\nSelenium-standalone.jar talking to selenium hub\ntcp        0      0 b2962a5d73da:49516      $SELENIUM_HUB:4444 ESTABLISHED 21/java       \ntcp        1      0 b2962a5d73da:49506      $SELENIUM_HUB:4444 CLOSE_WAIT  21/java     \nSelenium-standalone.jar talking to itself?\ntcp        0      0 b2962a5d73da:5555       $CONTAINER_IP:33263      ESTABLISHED 21/java  \nClient (tests) talking to Selenium-standalone.jar server\ntcp        0      0 b2962a5d73da:5555       $DRIVER_CLIENT:60783      ESTABLISHED 21/java         \nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\nchromedriver\ntcp        0      0 localhost:1081          :                     LISTEN      14332/chromedriver-\nchrome extension that communicates with chromedriver\ntcp        0      0 localhost:12544         :                     LISTEN      14337/internal --lo\nselenium node that communicates with chromedriver and exposes a port\ntcp        0      0 :5555                  :*                     LISTEN      21/java         \n```\nHow can I check where the connection times out? What's the code is responsible for writing Done: [new session:?\n. The picture explains it more clearly:\n\n. Wow, the DBUS fix looks promising!\n. Didn't have any timeout so far\n. The cause of this and why the fix works is still unknown.\n@jjYBdx4IL might explain it better\n. @alexkogon because it looks like to be a bug in chrome or chromedriver or xvfb-related or something else. We don't know the root cause.\n. @alexkogon you already have to use /dev/shm workaround. And there's no suggestion to incorporate it into an image.\n. @elgalu don't confuse docker on windows with being able to run windows binaries under docker. Docker on Windows still uses linux vm.\n. Whoa, VM inside Docker...\n. Debian initialization script does expand /etc/environment to environment variables.\nBut in Docker you have your own entrypoint, be it bash or jvm. Or in your case - env command.\nPreviously there was a correct way using ENV which is handled by Docker: https://github.com/SeleniumHQ/docker-selenium/commit/88584def77585863a226ca72bbce0f9dce561242\nBut for some reason it was changed to this unreliable way which depends on your entrypoint+command.. Could it be related to small dev/shm? https://code.google.com/p/chromium/issues/detail?id=522853\nhttps://github.com/elgalu/docker-selenium/issues/20#issuecomment-133011186\n. Windows' RDP is the like XOrg over SSH, but only for one application: http://unix.stackexchange.com/questions/1960/differences-between-vnc-and-ssh-x\nIn depends on a particular use case. If you run a browser, you'd still be sending images over TCP. So RDP seem to have no benefit. Except not having to install VNC client on windows machines of course.\n. Selenium base image is built on top of ubuntu:15.10\nLet's try to replace it with alpine:3.3 (replacing apt-get install by apk add) and see what happens.\n. Oh, this looks to be a duplicate of #161 \n. Base image consists of ubuntu (134 mb) and jre (320 mb) and selenium itself (31 mb).\nAlpine is 5 mb, so it could save ~100 mb\n. Alpine + minimal jre is 111 mb, saving us 375 mb!\n. Yeah, as I've written above, we only save 375 mb.\n. ",
    "jjYBdx4IL": "For me, this NEVER happens if I start chrome from inside an X11 session. No matter if it runs against Xvfb or not, or whether Xvfb has been started on the console. The problem appears to be X11 resource usage related to a live/real X11 user desktop session. I traced it down to DBUS. Setting DBUS_SESSION_BUS_ADDRESS=/some/nonsense in Jenkins fixed my testing there and chrome/chromium are starting up there again without any problems at all.........\n. All I can say is that I set a fake env var with random content in jenkins. I don't use a permanent selenium server, my browsers get started by chromedriver on the fly.\n. I have no clue and reported the issue to Google.\n. don't have a link sry\n. ",
    "adeslade": "Me too @pwaller. Where does one need to set this variable? For the selenium server?\n. That's great, thanks for the example.\n. ",
    "SpencerMalone": "The DBUS fix is totally working for me! I'm running 32 concurrent nodes and was running into this about 2-5 times every ten minutes, and the DBUS stuff has finally eliminated those darned startup errors.\n. Are you using ubuntu or centos? Also, try using release 2.46.0. For some reason, that works a little better for me.\n. You can actually do this at runtime already without having to rebuild your image, @eyal919. Just mount config.json as a volume with the following flag:\n-v /local/path/to/config.json:/opt/selenium/config.json\n. You can temporarily get around the condition check like this:\ndocker network create SE\ndocker run -d -p 4444:4444 --net=SE --name selenium-hub selenium/hub:2.48.2\ndocker run -d --net=SE -e HUB_PORT_4444_TCP_ADDR=selenium-hub selenium/node-firefox:2.48.2\n. Whatever we do, supporting links would be very nice. Docker decided to stop support of RHEL 6 after 1.7.1, so I'm sure there are people other than me who can't actually use the new networking stuff. I'm down to hold off on the PR. What would you think about this implementation?:\nUse the same setup that was used with linking. Assume that the hub will have a certain container name, and assume that the nodes will be on the same network as the hub. Verify that either the HUB_PORT_4444 variables are filled (by people manually entering them or by linking), or that /etc/hosts contains a host entry that fits with our predetermined container name. Not really sure why this didn't cross my mind when I whipped up that PR...\n. You just do it again with a different container name (or leave off the name flag for a random container name). If you want port 5555 exposed on the containers, just map it to a different port on the host like so: -p 5554:5555\n. PhantomJS' solo maintainer is leaving because of headless chrome. Can we reopen this discussion? (source: https://groups.google.com/forum/#!topic/phantomjs/9aI5d-LDuNE). So, I just put in some time into this. XVFB will still be required for almost all projects, sadly (unless someone finds a workaround)\nIn general it wasn't too rough to get running, but I get thrown the following when I try to use it for tests that have keyCode interactions (aka, any sendkeys stuff):\nunknown error: an X display is required for keycode conversions, consider using Xvfb\n        (Session info: content shell=)\n        (Driver info: chromedriver=2.29.461571 (8a88bbe0775e2a23afda0ceaf2ef7ee74e822cc5),platform=Linux 4.9.4-moby x86_64) (WARNING: The server did not provide any stacktrace information)\n      Command duration or timeout: 26 milliseconds\n      Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:06:42'\n      System info: host: '1d5acd9906ce', ip: '172.17.0.4', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.4-moby', java.version: '1.8.0_121'\n      Driver info: org.openqa.selenium.chrome.ChromeDriver\nEDIT: Throwing XVFB in and using that to run the SE process (like normal), it all works properly, I'm just not sure that we're gaining much if we do that.\nI haven't poked around with this repo in ages. Do y'all have a standardish way of measuring performance?. I guess the XVFB thing is a chromedriver requirement, so I opened a ticket here: https://bugs.chromium.org/p/chromedriver/issues/detail?id=1772\nIf you wanna reproduce / help out with finding a fix, you can find steps to make an easy one-off container that runs selenium locally (without a hub/node configuration) in that issue. It's easy enough to convert those steps into the docker-selenium containers, but the send key stuff still exists.. It was recently mentioned here:\nhttps://bugs.chromium.org/p/chromedriver/issues/detail?id=1772#c12 that you\nmight be able to use a different flag when chrome is compiled to fix the\nsendkeys issue, but I've yet to try it.\nOn May 29, 2017 9:53 PM, \"Jorge Delgado\" notifications@github.com wrote:\n\n@diemol https://github.com/diemol @graingert\nhttps://github.com/graingert\nI would also like to know this.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-304755902,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AIYTQMj741-drZH33CdZiQHQH3DboI-jks5r-3aFgaJpZM4MusZ3\n.\n. It's supposedly fixed if you build chrome with ozone. Currently working on pushing up an image with those build args so that we can play with it. Sadly, the chrome build process is a \ud83d\udc22. I don't have it working yet either, I was going off of reports from the chromium ticket I opened here: https://bugs.chromium.org/p/chromedriver/issues/detail?id=1772\n\nI'm still struggling with getting a fast and repeatable build for chrome in docker. Currently it takes many hours and can't even be done on a default devicemapper file system because the dang image ends up so large.. I'm at the same point. For those following along, my final dockerfile for building chrome/chromedriver w/ ozone: https://gist.github.com/SpencerMalone/6f764a101c9ffd4a86829f158eef9d41\nI must have screwed up something along the way as I cannot copy the final artifacts (chrome+chromedriver) into another image as use them. None of the libraries seem linked properly?\nRegardless, if you feel like doing the many hour build, at the end you can put chromedriver and chrome into your docker container's path and start up chromedriver+selenium (after installing selenium) with the chromedriver arguments... --headless --no-sandbox --disable-gpu. ",
    "SaiPawan": "@pwaller i have a similar issue but my configuration does not use selenium-standalone or docker...the chrome browser freezes when running tests for cucumber-jvm,selenium on Jenkins in linux ubuntu box....the tests are in sequential manner...\n. @charford In my scenario some tests do run before the browser freeze and somewhere during the execution the chrome browser freezes...if left as it is it takes lot of time to recover (sometimes about 4 hours)...but once it recovers it runs other tests good..The main issue that i have is that the total scripts execution time increases a lot...\n. ",
    "alexkogon": "I hope this is the answer, this instability is annoying!\nWhy isn't this just a default part of the Container? Or would you want to use this in some instances?\nThanks\n. @Vanuan ok might be nice to incorporate it into the container, being the best implementation of the current software and not the ideal one, such that you just have to use the container and it works rather than knowing you have to work around the bug of some of the software in the container. If we know there is a bug, let's adapt the implementation to work around that bug if we know how. A matter of philosophy I suppose though.\n. @Vanuan I already did :)\n. @Vanuan looks like it was incorporated after all, despite there being \"no suggestion\" to do so.\n@kayabendroth thanks!\n. Hi Leo you are mapping a parent OS directory to the Docker \"VM\" with the -v command. I'm not sure you have to do that though and I believe this fix to the Docker Selenium Chrome Node to workaround a bug in the Selenium ChromeDriver itself was incorporated directly into the base image, after some discussion as to whether or not that was appropriate (which I was involved in on the \"yes do it\" side?)\nBTW FYI the Windows version is coming along well; I saw the hardest part (getting a Windows VM to appear when running a Docker image) working when I was on site last week, we spent a few hours trying to get the Ansible script which installs Selenium software into windows working then discovered we had the wrong version of PowerShell installed and that's why it wasn't working. We're all busy with other stuff now but this should be there soon I let you know...\n. @elgalu being old fashioned I also don't believe code works on Firefox or Chrome for Windows or Mac OSs unless I've seen it working on those OSs, but hopefully I'm wrong :)\nAm I correct in thinking you are working on your own Docker grid to incorporate the Chrome fix here and that's why you aren't just using the standard one with it already in there, or is the image still hanging?\n. @Vanuan if you are referring to what I was talking about it is not Docker on Windows, it is running a Windows Selenium Grid Node via Docker. What we have done is embed a Windows VM inside a Docker image, so that when you run Docker (on Linux of course) the Container runs a Windows VM internally and then runs Selenium on Windows from there.\n. Hi folks,\nClosest thing now to Docker for Windows is VMWare's Linked Clones, if you happen to have that expensive piece of non-Open Source software give it a shot ;)\n. I believe that is just a bug in the Selenium Grid hub itself...usually this is when you go to its status page, and it actually still works for testing?\n. Hi folks,\nI was just about to make an issue about this but searched through them and found this.\nI wanted to connect my nodes to an existing Selenium Grid Hub, and even dug deep enough to find the HUB_PORT_4444_TCP_ADDR and HUB_PORT_4444_TCP_PORT and set them appropriately, but was not able to get that working. I was very pressed for time just before having to stop working for the end of year holidays, so tried running with the Docker hub as outlined in the normal docs, and that worked fine.\nI'll give this a shot again next couple days based on the info here and come back if I can't get it working...\n. This works fine, sorry there were networking issues on my side which I didn't realize until I researched further. Thanks for the great work folks!\n. Interesting @defender I did run multiple containers on a single machine but it seemed to figure it out maybe I wasn't looking closely enough?\nWill take a look again and let you know\n. Hi folks (and @defender)\nWhen running multiple Docker nodes on the same machine as the hub, exposing 80:4444 for the hub and giving the local IP address for HUB_PORT_4444_TCP_ADDR and 80 for HUB_PORT_4444_TCP_PORT, it works great and the internal callback mapping for 5555 (or whatever it is being loaded up on) is done auto-magically without me doing anything.\nIt does seem there is a problem with using nodes on different machines though. At the least perhaps we need to open a port with -p for Docker and tell the hub where to call them back. @elgalu do you have a solution for this? Should I create another ticket? I haven't been able to get a remote node working at all so far, but that may have been due to weird networking issues within our environment I've been trying to resolve...\n. @VolkerK thanks, that is a good idea; I've not been using Docker compose or Swarm because I prefer direct control and it doesn't really add a lot of value compared to what I'm already doing with automation to bring Docker nodes up and down.\nOne issue I had was when using Nodes on multiple hosts, the REMOTE_HOST had to be defined to callback to the Docker host on the port specified instead of the default behavior where the node tells the Hub where it is, which does not work unless the Hub is on the same machine. Does Docker Compose resolve this issue somehow on multiple machines in a Swarm or are you running it all on one host so it is not an issue?\n. @VolkerK thanks for the info. We're still wiring it all together so we take it in steps, keep it working and automate what works :)\n. @SpencerMalone don't you also have to tell the Hub that you are listening on 5554 instead of 5555?\n. Hi folks,\nI've been playing around with running nodes on and off the same container host as the hub. When running a node on the same Docker host, and specifying the Hub machine and port via \n-e HUB_PORT_4444_TCP_ADDR= -e HUB_PORT_4444_TCP_PORT=\neverything works, as the node can find the Hub and then tells the hub the IP address and port it is using INTERNALLY to the VM, which is of course accessible on the Hub host as it is running on the same machine, so mapping port 5555 on the host to the Docker image with a -p 5555:5555 is not necessary.\nHowever when running the host remotely, you not only have to expose the port on the Docker host via -p, you also need to tell the node to pass the Docker host's address and the port you are exposing via the REMOTE_HOST variable, a la:\n-e REMOTE_HOST=http://:5555 \n (assuming you mapped 5555 to 5555 with -p 5555:5555)\nThis way the hub knows where to look for the Node when calling it back; by default the hub will tell the hub the IP address of the VM it is running in and the port (which will be 5555) but this is not accessible from the Hub machine, which is exactly why you have to map a port on the Docker host to forward to the VM.\nSo, for example, assuming the Docker host for the nodes was 10.1.1.2, and the Hub was on 10.1.1.1 port 80, you would run the nodes as:\ndocker run -d -e HUB_PORT_4444_TCP_ADDR=10.1.1.1 -e HUB_PORT_4444_TCP_PORT=80 -e REMOTE_HOST=http://10.1.1.2:5555 -p 5555:5555 selenium/node-firefox\ndocker run -d -e HUB_PORT_4444_TCP_ADDR=10.1.1.1 -e HUB_PORT_4444_TCP_PORT=80 -e REMOTE_HOST=http://10.1.1.2:5556 -p 5556:5555 selenium/node-firefox\ndocker run -d -e HUB_PORT_4444_TCP_ADDR=10.1.1.1 -e HUB_PORT_4444_TCP_PORT=80 -e REMOTE_HOST=http://10.1.1.2:5557 -p 5557:5555 selenium/node-firefox\n.\n.\n.\nI found this by searching through the code base here (the entry_point.sh Docker autolaunch file) but don't see it in the README documentation.\n. According to this guy (whose posts I've read often in the past and seems to know what he is talking about), Remote Desktop is much more performant than VNC: http://blog.codinghorror.com/vnc-vs-remote-desktop/ and is the best solution for using a remote computer or VM as a workstation (I run it both for Linux and Windows often and it works great).\nThat said, it is also installed by default on Windows (and widely available for other platforms), and for many of us is in frequent use for connecting to Windows VMs or remote Windows machines, so saves the headache of having to use two different programs to connect (and remember which to use for what machine).\nI'm not saying to ditch VNC, I'm just saying it would be nice to have both options.\nThanks\n. Fair enough, I don't really know; honestly, I haven't used VNC in probably a decade, but I do connect to Linux with RDP all the time. The remaining argument is valid however. Is there any particular reason supporting both would be a bad thing?\n. I've done it long ago and it works fine, never performance tested it\nthough. Didn't seem to be much interest and like all Selenium related\ntopics the community is too much like kindergarten to bother to participate.\nBtw certainly are good RDP clients for Mac too, with Windows it is\nintegrated so easy and convenient...\nAlso btw Leo got Docker with Windows inside running fine for the grid the\nproblem is that (at least with the Virtual Box implementation we did) it\nrequires the Linux headers so is strongly bound to the Kernel and must be\nproduced for each version of the Kernel it is to be used on...I was hoping\nto create a general version and maybe it is possible with a different VM\nbut I already had one that solved my problem and haven't had the time to\ninvest yet.\nOn 17 Jan 2017 8:44 AM, \"Leo Gallucci\" notifications@github.com wrote:\n\nI guess someone needs to give it a try to the RDP linux server, perhaps by\ninstalling xrdp https://github.com/neutrinolabs/xrdp and see how it\ngoes in a Dockerfile\nhttps://github.com/SvenDowideit/dockerfiles/tree/master/xrdp#step-1-the-ms-remote-desktop-server\n, do some performance comparison vs VNC so a decision can be made.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/141#issuecomment-273043585,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHi6_DQpud6moDwjUDt4CX71V7a-rYlOks5rTHFugaJpZM4G-YTH\n.\n. Hi Leo\n\nGive me a few days and I'll get you the answers to your questions :)\nHope to see you again for some beers in a few months when the sun shines\nagain...if you are still around!\nOn 17 January 2017 at 11:43, Leo Gallucci notifications@github.com wrote:\n\nCool @alexkogon https://github.com/alexkogon! how much space does\nRDP-in-docker adds to the image? I read is 500mb.\nRegarding IE inside docker, your experience is very useful, the kernel\nhard dependency might be something acceptable for users that really want\nthis. How much time does it take for the IE browser to start from the\nmoment do you docker run .. ie .. until is able to accept tests the first\ntime? I see the difference is that with Chrome & Firefox you don't need to\nboot the OS but with VBox inside docker I'm guessing Windows needs to boot,\nor is it able to preserve the state in hibernation mode somehow?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/141#issuecomment-273102159,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHi6_AZyxOAYFUH9jnU02kNhjIJhdGXcks5rTJtRgaJpZM4G-YTH\n.\n. Yup glad it is not just me...or am I doing something wrong?\n\n[~]$ docker ps\nCONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS               NAMES\n2148b3622072        selenium/node-chrome-debug    \"/opt/bin/entry_point\"   9 minutes ago       Up 9 minutes        5900/tcp            romantic_cray\ne8cbf99532c7        selenium/node-firefox-debug   \"/opt/bin/entry_point\"   10 minutes ago      Up 10 minutes       5900/tcp            jovial_noyce\n[~]$ docker port jovial_noyce 5900\nError: No public port '5900/tcp' published for jovial_noyce\n[~]$ docker port romantic_cray 5900\nError: No public port '5900/tcp' published for romantic_cray\n. BTW as you can see from my console output this applies to both Firefox and Chrome\n. Sorry, I just figured out you have to explicitly map the port with the -p XXXX:5900 flag to docker when you launch the node\n. btw (of course) if you run multiple instances on a single machine you will need to give them each a different port #...\n. done\n. Ah I see, ok yeah I'll do it when I have some free time next couple days\nOn Jan 28, 2016 6:30 PM, \"Kay Abendroth\" notifications@github.com wrote:\n\n@alexkogon https://github.com/alexkogon Thanks. Can you rebase your\nbranch again and squash those three commits into one? Due to the version\nbump your changed lines were touched as well.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/pull/144#issuecomment-176293402\n.\n. @kayabendroth apologies I've been swamped, just digging out of everything now, would have gotten to it in the next days but thanks for doing it for me. Sorry I didn't have a chance to get it done before...thanks\n. @defender not sure what you mean, this seems to work.\n\n@rubytester I added what you asked for\n. Hi, I'm not sure I understand your question, are you asking how to bring up nodes dynamically with Jenkins? If for instance you had Docker on your Jenkins machine, and you were running jobs one at a time, you could have your Jenkins job first launch a Docker Hub, then a Docker Node, then run your tests, then kill both the Hub and the Node.\nMore scaleable might be to have a Hub running, then launch a Node in your Jenkins, and bring it down after you use it. You wouldn't be able to guarantee necessarily that the node you launched was the one you were using if it was massively parallel though that might cause some problems in killing the node after...\nAlso remember to clean them up after or your disk will soon fill up with old containers :)\n. ",
    "charansethi": "What do i need to do to use the DBUS_SESSION_BUS_ADDRESS =/dev/null. I am using selenium standalone server with hub on windows machine and trying to use chrome browser of a mac. I have 70 tests for which hub creates a session on node , test steps are fired and browser is quit. So at times randomly at times for chrome browser session is not created and the hub has to wait until timeout occurs . Thanks\n. ",
    "martin770": "Wow! Thanks!\nI set the environment variable with export DBUS_SESSION_BUS_ADDRESS=/dev/null and no longer have any hanging chromedriver processes!\nI ran one file that had an empty it statement with 12 concurrent browser sessions, and looped it 6000 times. After almost 2 hours of continuously running, there was not a single hanging process.\n[12:20:33] Protractor ran 6000 files (6000 specs) -- 6000 passed\n[12:20:33]\n[12:20:33] Finished 'protractor' after 1.92 h\n. ",
    "jsandeo": "Had this same issue and looks like adding this to my selenium /etc/init.d script did the trick:\nexport DBUS_SESSION_BUS_ADDRESS=/dev/null\nThis has been running for some days now without leaving any chromium processes open. Thanks for the tip!\n. ",
    "michaelmcmillan": "What a crazy fix. Been spinning my tests for ~30 times without a single failure. Thanks guys.\n. ",
    "adamdry": "+1 DBUS_SESSION_BUS_ADDRESS=/dev/null worked for me and our build server.\nOne other dev does still see a hang though but might be old docker containers potentially. Definitely more stable with this magic!\n. ",
    "levi-rs": "This works for me as well. I can duplicate the issue by running this on my linux box (no docker, no grid):\n```\nfrom selenium import webdriver\nfrom pyvirtualdisplay import Display\ncount = 0\nwhile True:\n    count += 1\n    print(\"Attempt: \", str(count).rjust(4))\nwith Display(visible=False, size=(500, 500)):\n    try:\n        driver = webdriver.Chrome()\n    finally:\n        driver.quit()\n\n```\nRunning export DBUS_SESSION_BUS_ADDRESS=/dev/null before running the above script prevents the hanging from happening.\n. @hutber Go to your project settings in Circle CI, click the link on the left for \"Environment Variables\", then add the key/value pair.. ",
    "tonyharold": "We're running regression tests using Selenium & Java via Go CD. The test agents are AWS with Centos. Firefox works just fine, Chrome shows the intermittent hang problem. In the Go task config we set the environment variable DBUS_SESSION_BUS_ADDRESS to /dev/null and now Chrome works just fine.. ",
    "eitzenbe": "setting to null works on ubuntu 16.04 with jenkins running chrome 64bit in a xvnc env, roughly running 70 tests, restarting chrome around 100 times. before it hanged every 2nd or 3rd run. ",
    "jdelStrother": "Likewise.   Running this in a loop would reliably fail within a couple of minutes:\nruby -e \"require 'selenium-webdriver'; Selenium::WebDriver.for(:chrome).navigate.to 'http://google.com'\"\nChanging it to the following appears to have magically fixed things \ud83c\udf89 \nDBUS_SESSION_BUS_ADDRESS=/dev/null ruby -e \"require 'selenium-webdriver'; Selenium::WebDriver.for(:chrome).navigate.to 'http://google.com'\". Anecdotal: we've been running Chrome in docker for all our Jenkins builds (with containers based on the jenkinsci/blueocean image) and it's been stable ever since I set DBUS_SESSION_BUS_ADDRESS=/dev/null in mid-January.. ",
    "zhengjunbase": "thanks @pwaller, its works for me.. ",
    "jeremiasalmeidadaitan": "This just started happening to me with the latested version of docker and the DBUS_SESSION_BUS_ADDRESS=/dev/null solved the problem.. ",
    "csabakoncz": "Hi,\nI have been facing this issue despite of using node-chrome:3.1.0, which should already be immune according to this line in the Dockerfile: \nhttps://github.com/SeleniumHQ/docker-selenium/blob/3.1.0-astatine/NodeChrome/Dockerfile#L61\nHowever, if I run docker run selenium/node-chrome:3.1.0 env|grep DBUS I see no output.\nThe environment setting is there, though:\ntest@host:~$ docker run selenium/node-chrome:3.1.0 env|grep DBUS\ntest@host:~$ docker run selenium/node-chrome:3.1.0 cat /etc/environment\nPATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games\"\nDBUS_SESSION_BUS_ADDRESS=/dev/null\ntest@host:~$\nSpecifying DBUS_SESSION_BUS_ADDRESS as a container environment variable seems to solve the problem.\nDo the variables defined in /etc/environment get into the environment as intended?\nI am running Docker 1.9.1 and docker-compose 1.8.1 on an  Ubuntu 14.04.5 with Gnome desktop.\nBest regards,\nCsaba. ",
    "matt-halliday": "I'm facing the same issue using docker compose. Trying to specify the var like so:\nselenium:\n    image: selenium/standalone-chrome-debug:latest\n    environment:\n      - DBUS_SESSION_BUS_ADDRESS=/dev/null\n    ports:\n      - 4444:4444\n      - 5900:5900\n    extra_hosts:\n      - \"app.docker:172.17.0.1\"\nGenerally fine locally but hanging in travis 1 in 2 builds. Am I missing something?. ",
    "jasonsemko": "One thing that stopped the hanging for me was adding cls.driver.close() before cls.driver.quit()\n```python\nDjango\n@classmethod\ndef tearDownClass(cls):\n    cls.driver.close()\n    super(BaseTestCase, cls).tearDownClass()\n    cls.driver.quit()\n```. ",
    "peterstory": "I'm still encountering this hanging issue with selenium/hub:3.3 and selenium/node-chrome:3.3 (and I am using the /dev/shm:/dev/shm, as instructed). \nPrevious session ends cleanly:\nch1_1           | 15:21:01.253 INFO - Executing: [close window])\nch1_1           | 15:21:01.313 INFO - Done: [close window]\nch1_1           | 15:21:01.319 INFO - Executing: [delete session: 09c90232-daa5-4742-a0fc-78266faee5cd])\nch1_1           | 15:21:01.334 INFO - Done: [delete session: 09c90232-daa5-4742-a0fc-78266faee5cd]\nNew sessions starts, but hangs for a couple minutes (note the timestamps) before doing anything:\nch1_1           | 15:21:01.253 INFO - Executing: [close window])\nch1_1           | 15:21:01.313 INFO - Done: [close window]\nch1_1           | 15:21:01.319 INFO - Executing: [delete session: 09c90232-daa5-4742-a0fc-78266faee5cd])\nch1_1           | 15:21:01.334 INFO - Done: [delete session: 09c90232-daa5-4742-a0fc-78266faee5cd]\nselenium-hub_1  | 15:21:01.339 INFO - Got a request to create a new session: Capabilities [{browserName=chrome, javascriptEnabled=true, version=, platform=ANY}]\nselenium-hub_1  | 15:21:01.340 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=chrome, maxInstances=1, version=57.0.2987.133, applicationName=, platform=LINUX}\nch1_1           | 15:21:01.343 INFO - Executing: [new session: Capabilities [{browserName=chrome, javascriptEnabled=true, version=, platform=ANY}]])\nch1_1           | 15:21:01.343 INFO - Creating a new session for Capabilities [{browserName=chrome, javascriptEnabled=true, version=, platform=ANY}]\nch1_1           | Starting ChromeDriver 2.29.461571 (8a88bbe0775e2a23afda0ceaf2ef7ee74e822cc5) on port 13298\nch1_1           | Only local connections are allowed.\nselenium-hub_1  | 15:22:17.417 INFO - Got a request to create a new session: Capabilities [{browserName=chrome, javascriptEnabled=true, version=, platform=ANY}]\nselenium-hub_1  | 15:23:15.382 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=chrome, maxInstances=1, version=57.0.2987.133, applicationName=, platform=LINUX}\nch1_1           | 15:23:15.386 INFO - Executing: [new session: Capabilities [{browserName=chrome, javascriptEnabled=true, version=, platform=ANY}]])\nch1_1           | 15:23:15.387 INFO - Creating a new session for Capabilities [{browserName=chrome, javascriptEnabled=true, version=, platform=ANY}]\nch1_1           | Starting ChromeDriver 2.29.461571 (8a88bbe0775e2a23afda0ceaf2ef7ee74e822cc5) on port 1620\nch1_1           | Only local connections are allowed.\nch1_1           | 15:23:15.796 INFO - Detected dialect: OSS\n.... @vv-p That sounds like a great discovery! Can you think of a DBUS configuration that's portable across different Linux distributions (and running on MacOS, etc.)? I'm not familiar with how DBUS works. . Does loading this URL trigger the issue for you?\nhttp://www.firsttouchgames.com/w/?page_id=1427. Cool, hopefully that will fix the issue for me as well! Still waiting on the FF v54 image to be released (currently using a custom image with a beta), but then I'll give it a shot. . I am also getting these errors. Here is my compose file, and my configuration details:\nImage(s):  selenium/node-phantomjs:3.3 and selenium/hub:3.3\nDocker Version:  17.03.1-ce-mac5 (16048)\nOS: macOS Sierra\nMy compose file:\nversion: '2'\nservices:\n  selenium-hub:\n    image: \"selenium/hub:3.3\"\n    ports:\n      - \"127.0.0.1:4444:4444\"\n    restart: always\n    environment:\n      # Reclaims resources if download code crashes\n      GRID_TIMEOUT: 30\n      # Needed in case Firefox tries to update itself...\n      GRID_BROWSER_TIMEOUT: 60\n  ff1:\n    image: \"selenium/node-firefox:3.3\"\n    links:\n      - \"selenium-hub:hub\"\n    restart: always\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-hub\n      HUB_PORT_4444_TCP_PORT: 4444\n  ff2:\n    image: \"selenium/node-firefox:3.3\"\n    links:\n      - \"selenium-hub:hub\"\n    restart: always\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-hub\n      HUB_PORT_4444_TCP_PORT: 4444\nAnd my error messages:\nselenium-hub_1  | 18:52:24.422 INFO - Got a request to create a new session: Capabilities [{marionette=true, acceptInsecureCerts=true, browserName=firefox, javascriptEnabled=true, version=, platform=ANY}]\nselenium-hub_1  | 18:52:24.423 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=firefox, maxInstances=1, version=52.0.2, applicationName=, platform=LINUX}\nff1_1           | 18:52:24.425 INFO - Executing: [new session: Capabilities [{marionette=true, acceptInsecureCerts=true, browserName=firefox, javascriptEnabled=true, version=, platform=ANY}]])\nff1_1           | 18:52:24.427 INFO - Creating a new session for Capabilities [{marionette=true, acceptInsecureCerts=true, browserName=firefox, javascriptEnabled=true, version=, platform=ANY}]\nff1_1           | 1492541544453 geckodriver INFO    Listening on 127.0.0.1:20643\nff1_1           | 1492541544518 mozprofile::profile INFO    Using profile path /tmp/rust_mozprofile.KZ7U81MsaePK\nff1_1           | 1492541544520 geckodriver::marionette INFO    Starting browser /usr/bin/firefox with args []\nff1_1           | 1492541544524 geckodriver::marionette INFO    Connecting to Marionette on localhost:39605\nff1_1           | 1492541545276 Marionette  INFO    Listening on port 39605\nff1_1           | 1492541545525 Marionette  WARN    TLS certificate errors will be ignored for this session\nff1_1           | 18:52:26.762 INFO - Detected dialect: W3C\nff1_1           | 18:52:26.764 INFO - Done: [new session: Capabilities [{marionette=true, acceptInsecureCerts=true, browserName=firefox, javascriptEnabled=true, version=, platform=ANY}]]\nff1_1           | 18:52:26.769 INFO - Executing: [page load wait: 15000])\nff1_1           | 18:52:26.774 INFO - Done: [page load wait: 15000]\nff1_1           | 18:52:26.779 INFO - Executing: [get: http://www.frojoapps.com/privacy-policy])\nff1_1           | 18:52:28.370 INFO - Done: [get: http://www.frojoapps.com/privacy-policy]\nff1_1           | 18:52:28.375 INFO - Executing: [get page source])\nff1_1           | 18:52:28.388 INFO - Done: [get page source]\nff1_1           | 18:52:28.393 INFO - Executing: [get current url])\nff1_1           | [Parent 12282] WARNING: pipe error (55): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\nff1_1           | [Parent 12282] WARNING: pipe error (48): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\nff1_1           | \nff1_1           | ###!!! [Parent][MessageChannel] Error: (msgtype=0x2C0085,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv\nff1_1           |. I had this issue, and the fix was to do the same shared-memory mapping that this project's README recommends for Chrome. The README should be updated to recommend the same practice for Firefox!\nhttps://github.com/mozilla/geckodriver/issues/285\nyaml\nservices:\n  firefox:\n    image: \"selenium/node-firefox-debug:3.3\"\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-hub\n      HUB_PORT_4444_TCP_PORT: 4444\n      HUB_ENV_no_proxy:\n    volumes:\n      - \"/dev/shm:/dev/shm\". Thanks for figuring out how to get it working! With PhantomJS seeming to be on the way out, I've actually settled on using the Firefox images (at least until Chrome headless becomes available), despite the higher memory usage. . Hmm, it must be that that file isn't accessible or being used in my containers. I added a couple extra steps before using the entry_point.sh. Assuming nobody using the stock image is encountering this same problem, my changes must have caused the problem. \nfirefox.Dockerfile\n```Dockerfile\nFROM selenium/node-firefox-debug:3.4.0-einsteinium\nWe need to modify '/etc/hosts'. We restore the appropriate user at runtime in\n'start_firefox.sh'.\nUSER root\n...\nMisc. setup code\n...\nCMD [\"/root/docker_resources/start_firefox.sh\"]\n```\nstart_firefox.sh\n```sh\n!/bin/sh\n...\nMisc. setup code\n...\nsu - seluser\nexec /opt/bin/entry_point.sh\n. Interesting. I was using `su - seluser` in a script to get back to the seluser account, and things still weren't working. So there must be some difference in behavior between `su - seluser` and a Dockerfile's `USER seluser`. . I am using Docker Swarm. Here is an excerpt from my stack file:\n  firefox-1:\n    build:\n      context: \"./privacy-policy-retrieval\"\n      dockerfile: \"dockerfiles/firefox.Dockerfile\"\n    image: mobilecommercelab/retrieval-firefox\n    depends_on:\n      - nginx-blacklist\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-hub\n      HUB_PORT_4444_TCP_PORT: 4444\n    logging: *default-logging\n    volumes:\n      # Share the host's shared memory, as described here:\n      #   https://github.com/moby/moby/issues/26714#issuecomment-346257988\n      # Needed to prevent tabs from crashing:\n      #   https://github.com/SeleniumHQ/docker-selenium/pull/485\n      - \"/dev/shm:/dev/shm\"\n```\nI have a custom Dockerfile, entrypoint, and command which blacklist certain hostnames by appending to /etc/hosts. However, my custom command ends with the following, so I think my container will (aside from the blacklisting) behave as a vanilla node container would:\n```\nsu - seluser\nThanks to:\nhttps://github.com/SeleniumHQ/docker-selenium/issues/255#issuecomment-254417125\nexport SE_OPTS=\"-host $HOSTNAME\"\nexec /opt/bin/entry_point.sh\n```. And here is my hub configuration:\nselenium-hub:\n    image: \"selenium/hub:3.6.0-americium\"\n    # To see which configuration options are available:\n    # https://github.com/SeleniumHQ/docker-selenium/blob/master/Hub/generate_config\n    # For advice on tuning these parameters:\n    # https://github.com/SeleniumHQ/selenium/wiki/Grid2#configuring-timeouts-version-221-required\n    environment:\n      # \"ensure all resources are reclaimed 30 seconds after a client crashes\"\n      GRID_TIMEOUT: 30\n      # \"the maximum time a node is willing to hang inside the browser\"\n      GRID_BROWSER_TIMEOUT: 60\n      # Amount of time requests will wait in the queue before being kicked out.\n      # Unlike the other stats, this is in milliseconds.\n      GRID_NEW_SESSION_WAIT_TIMEOUT: 75000\n    logging: *default-logging. After looking more closely at my custom image, I realized that I was using the debug image's entrypoint (which, for example, starts VNC). Since the debug image's entrypoint might contribute to the problem, I switched to the default entrypoint. Tomorrow, I will check whether the hung Firefoxes have re-appeared, or whether the problem I encountered was just caused by using the debug entrypoint. . Yes, I can confirm that this is still a problem, even after reverting to the default (non-debug) entrypoint. See attached output from ps aux.\nps_aux.nondebug.txt. Here is a graph of memory usage increasing over time in my containers. There are 8 containers in the graph. An increase in memory usage is only visible after about 1 hour. \n\n. @testphreak Thanks for the update! We resolved the problem with a hack (we created a script which checks the number of Firefox processes, and kills the container when the number gets too large), but it's good to know that the issue has been improved! After we test those improvements, hopefully we'll be able to remove our hack. . ",
    "vv-p": "We had similar issue while running highload tests with a lot of chrome instanses working parallel. \nAfter a bit of research we found that setting DBUS_SESSION_BUS_ADDRESS to /dev/null is bad idea, because chrome uses Dbus a lot. You can see it by \"busctl\" command while chrome running on systemd linux:\n:1.569                               16477 chrome          root             :1.569        docker-e7bb264286f8b53... -          -                  \n:1.570                               16476 chrome          root             :1.570        docker-e7bb264286f8b53... -          -                  \n:1.571                               16474 chrome          root             :1.571        docker-e7bb264286f8b53... -          -                  \n:1.572                               16475 chrome          root             :1.572        docker-e7bb264286f8b53... -          -                  \n:1.573                               16473 chrome          root             :1.573        docker-e7bb264286f8b53... -          -                  \n:1.574                               16489 chrome          root             :1.574        docker-e7bb264286f8b53... -          -                  \n:1.575                               16478 chrome          root             :1.575        docker-e7bb264286f8b53... -          -                  \n:1.576                               16472 chrome          root             :1.576        docker-e7bb264286f8b53... -          -                  \n:1.609                               16474 chrome          root             :1.609        docker-e7bb264286f8b53... -          -                  \n:1.610                               16478 chrome          root             :1.610        docker-e7bb264286f8b53... -          -                  \n:1.611                               16473 chrome          root             :1.611        docker-e7bb264286f8b53... -          -                  \n:1.612                               16477 chrome          root             :1.612        docker-e7bb264286f8b53... -          -                  \n:1.613                               16489 chrome          root             :1.613        docker-e7bb264286f8b53... -          -                  \n:1.614                               16475 chrome          root             :1.614        docker-e7bb264286f8b53... -          -                  \n:1.615                               16472 chrome          root             :1.615        docker-e7bb264286f8b53... -          -                  \n:1.616                               16476 chrome          root             :1.616        docker-e7bb264286f8b53... -          -                  \n:1.617                               16477 chrome          root             :1.617        docker-e7bb264286f8b53... -          -                  \n:1.618                               16474 chrome          root             :1.618        docker-e7bb264286f8b53... -          -                  \n:1.619                               16473 chrome          root             :1.619        docker-e7bb264286f8b53... -          -                  \n:1.620                               16472 chrome          root             :1.620        docker-e7bb264286f8b53... -          -                  \n:1.621                               16478 chrome          root             :1.621        docker-e7bb264286f8b53... -          -                  \n:1.622                               16476 chrome          root             :1.622        docker-e7bb264286f8b53... -          -                  \n:1.623                               16475 chrome          root             :1.623        docker-e7bb264286f8b53... -          -                  \n:1.624                               16489 chrome          root             :1.624        docker-e7bb264286f8b53... -          -\nThe DBUS_SESSION_BUS_ADDRESS variable is used for setting up dbus socket address, but you just set it to null ... So after a lot of time spending to tracing chrome instance running into a docker we found the following container setup:\ndocker run -d -v /sys/fs/cgroup:/sys/fs/cgroup:ro \\\n        -v /var/run/dbus/:/var/run/dbus/ \\\n        -v /tmp:/tmp \\\n        -v /dev/shm:/dev/shm \\\n        -e DBUS_SESSION_BUS_ADDRESS=\"unix:path=/var/run/dbus/system_bus_socket\" \\\n        --privileged \\\n        -p 4444:4444 \\\n        -p 5900:5900 \\\n        docker.io/selenium/standalone-chrome-debug:3.3.1-cesium\nIt works well with systemd distributions like CentOS 7 or Ubuntu Server 17.04 because /var/run/dbus/system_bus_socket is systemd dbus socket. On other systems (like OS X or non-systemd linux) you must use another socket address.\n. @diemol as I wrote before, setting DBUS_SESSION_BUS_ADDRESS to /dev/null is terrible bad. So yes, you need to install and run DBus inside container or link it outside to get chrome working stable.. Second one. I don't think dbus affects container perfomance.. I added a bit logging to selenium-server and It looks like hub getting browserTimeout value for web-interface metrics from nodes too early:\nStage 1: hub getting browserTimeout values to show it in a web interface\nhub_1      | 09:13:32.998 INFO [BaseRemoteProxy.<init>] - request.getConfiguration().browserTimeout = 0\nhub_1      | 09:13:32.998 INFO [BaseRemoteProxy.<init>] - request.getConfiguration().browserTimeout = 0\nStage 2: node getting browserTimeout value from the hub and setting it:\nchrome_1   | 09:13:33.038 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub\nchrome_1   | 09:13:33.160 INFO [SelfRegisteringRemote.registerToHub] - Got browserTimeout = 36000\nchrome_1   | 09:13:33.160 INFO [SelfRegisteringRemote.registerToHub] - Set registrationRequest.getConfiguration().browserTimeout = 36000. Does anybody know is there a method to get browsetTimeout value from a node directly ? . Here it is - https://github.com/SeleniumHQ/docker-selenium/pull/733\n. ",
    "ktkopone": "Also experiencing this issue in Windows 10 (no container) when using Beta Chrome release 60.0.3112.32, but only when running chrome in the new --headless mode (which chromedriver doesn't ostensibly support yet, admittedly, but for my very simple test case it seems fine when I do get chromedriver launched).\nLaunching chromedriver from python with --headless and --disable-gpu nets me the intermittent error on around 2/30 tries , with or without --no-sandbox (which I've seen suggested a lot from googling).\nAs an aside, adding --remote-debugging-port=9222 breaks it since chromedriver generates its own port to try and access devtools on, but that's on me for using chromedriver for headless chrome before it's supported, and not relevant to my use case nor probably this issue.\nWith --headless and --disable-gpu, it simply silently fails to connect as others have observed:\n[2.039][INFO]: Launching chrome: \"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\" --\ndisable-background-networking --disable-client-side-phishing-detection --disable-default-apps --\ndisable-gpu --disable-hang-monitor --disable-infobars --disable-notifications --disable-popup-blocking \n--disable-prompt-on-repost --disable-setuid-sandbox --disable-sync --disable-web-resources \n--enable-automation --enable-logging --force-fieldtrials=SiteIsolationExtensions/Control \n--headless --ignore-certificate-errors --load-component-extension=\"C:\\Users\\kkoponen\\AppData\\Local\\Temp\\scoped_dir29680_29077\\internal\" \n--log-level=0 --metrics-recording-only --no-first-run --no-sandbox --password-store=basic \n--remote-debugging-port=12215 --safebrowsing-disable-auto-update --test-type=webdriver \n--use-mock-keychain --user-data-dir=\"C:\\Users\\kkoponen\\AppData\\Local\\Temp\\scoped_dir29680_13552\" data:,\n[2.050][DEBUG]: DevTools request: http://localhost:12215/json/version\n[4.060][DEBUG]: DevTools request failed\n[4.111][DEBUG]: DevTools request: http://localhost:12215/json/version\n[4.312][DEBUG]: DevTools request failed\n[4.363][DEBUG]: DevTools request: http://localhost:12215/json/version\n[6.118][DEBUG]: DevTools request failed\n[6.168][DEBUG]: DevTools request: http://localhost:12215/json/version\n[6.368][DEBUG]: DevTools request failed\nAs I understand it that linked patch isn't relevant to windows users.\nAnyone have any ideas about preventing this in windows?. ",
    "tholewebgods": "This seems to be a duplicate of #89 which apparently has a fix.\nThough this seems to be related to docker I'd like to share my experience with a local Selenium 3.4.0 standalone server without docker.\nThe symptoms were the same: Selenium was stuck when creating a new session.\nIt turns out the issue is no longer happening using Chrome 59.\nSee my MCVE with minimal client code, setup descriptions and observations: https://github.com/tholewebgods/selenium-new-session-freeze-mcve. ",
    "m2bright": "All,\n  I may have some further insight into this behavior. I found that, when we were automating selenium to verify a google-login page, after the redirection occurred, we did a driver.get(...) to the page it was redirected to. This caused the driver to throw a TimeOutException waiting for a get to occur, when in reality, it never performed the get.  So moral of the story? Don't do that!\n. I have a solution: I stopped using selenium and went a different way.. ",
    "blablaBen": "Adding DBUS_SESSION_BUS_ADDRESS=/dev/null as an environment variable in docker-compose totally fixed the problem! Now, I feel that it is running faster than it was!. ",
    "hutber": "Now my question is, how can I set this variable in circleCI :(. ",
    "jeremyroelfs": "I don't believe this issue is strictly related to Docker and I am getting different results based on the browser driver I use. Invoking NUnit console runner from AWS Run-Command (send-command) on a remote EC2. Selenium will fail to navigate to a url for the first one or two tests (inconsistently). My workaround: I made a separate TestFixture with the order attribute of 1. Fixture contains two tests. The test: driver.navigate().gotourl(app) and then assert(pass). Then all remaining tests run fine. Sometimes geckodriver still fails. Not using Selenium Grid currently, but it is necessary to implement it.. ",
    "PS1Online": "DBUS_SESSION_BUS_ADDRESS=/dev/null\nIn Excel vba (Windows) how it works?\nWhere should I enter this code and what is the syntax in vba?\nSeleniumBasic WebDriver 2.0.9.0 (for vba) and latest Chrome Driver (2.37) (16/03/2018).\nWindows 7 64-bit.. I hope that the developers have read and are looking for a solution to solve the problem, present on both Windows and Linux at all.. ",
    "rferreira": "hey folks I'll give the work around a shot here and report back, cheers! \n. yeah using  -v /dev/shm:/dev/shm did not work for me as well. Relevant logs: \n18:41:30.744 INFO - Executing: [delete session: e47dafa5-1cca-43c7-9c07-a43d38c15ea0])\n18:41:31.317 INFO - Done: [delete session: e47dafa5-1cca-43c7-9c07-a43d38c15ea0]\n18:41:31.325 INFO - Executing: [new session: Capabilities [{browserName=chrome, chromeOptions={args=[--no-sandbox, --disable-impl-side-painting, --disable-setuid-sandbox, --disable-seccomp-filter-sandbox, --disable-breakpad, --disable-client-side-phishing-detection, --disable-cast, --disable-cast-streaming-hw-encoding, --disable-cloud-import, --disable-popup-blocking, --ignore-certificate-errors, --disable-session-crashed-bubble, --disable-ipv6, --allow-http-screen-capture], extensions=[]}, version=, platform=ANY}]])\n18:41:31.327 INFO - Creating a new session for Capabilities [{browserName=chrome, chromeOptions={args=[--no-sandbox, --disable-impl-side-painting, --disable-setuid-sandbox, --disable-seccomp-filter-sandbox, --disable-breakpad, --disable-client-side-phishing-detection, --disable-cast, --disable-cast-streaming-hw-encoding, --disable-cloud-import, --disable-popup-blocking, --ignore-certificate-errors, --disable-session-crashed-bubble, --disable-ipv6, --allow-http-screen-capture], extensions=[]}, version=, platform=ANY}]\nStarting ChromeDriver 2.18.343837 (52eb4041461e46a6b73308ebb19e85787ced4281) on port 2638\nOnly local connections are allowed.\n. ",
    "hmcgowan": "We were seeing this too. The -v /dev/shm:/dev/shm made things better but we still got hangs starting a new browser after a slave was up for some time. Testing browser.close() vs. browser.quit() locally I noticed that browser.close() closed out the chrome browser fine but left a zombie process of chromeDriver while browser.quit() cleaned everything up. After making sure we were stopping everything with a browser.quit() the issue went away. \n. Not out of the woods yet. Saw another hang starting chrome (though much less prevalent). Will let y'all know if I find anything else\n. Interesting. I'm using Amazon Linux AMI release 2014.03 with the /dev/shm mount and Docker version 1.8.2, build 0a8c2e3\n. We're using Java and decided to start the browser in a thread with a re-try if we saw it hang. Code in the gist, below. We've been using this work-around for over a month and have not seen an issue. \nhttps://gist.github.com/hmcgowan/2272e0546964417d2163\n. I'm assuming you mean that it's intermittent and you get some tests to run and then it fails with the socket error right? If you could provide a gist to the full stack trace I'm happy to take a look. We're on a totally different stack than you are but there might be a clue in there. \nOne thing we noticed  with Chrome - if you don't call driver.quit() then it leaves a chrome process running and those can pile up every time you start the browser. The other thing is that before each suite we restart the docker container since it's so fast and that seems to keep things stable. \n. ",
    "uhef": "This still seems to be an issue with the latest docker image.\nI'm getting following on selenium/standalone-chrome-debug:latest with -v /dev/shm:/dev/shm work around. Notice that in the beginning we request generation of two sessions but we receive a Done message on only one of them. At the end only the one which got created gets deleted.\nSorry for the long log dump. Interesting parts are right in the beginning and at the end.\n13:36:49.306 INFO - Executing: [new session: Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@445fb0fb, browserName=chrome, javascriptEnabled=true, handlesAlerts=true, version=, platform=ANY, requestOrigins={name=webdriverio, version=3.2.4, url=http://webdriver.io}}]])\n13:36:49.306 INFO - Executing: [new session: Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@68dee62d, browserName=chrome, javascriptEnabled=true, chromeOptions={args=[user-agent=Mozilla/5.0 (Linux; Android 4.3; Nexus 10 Build/JSS15Q) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2307.2 Mobile Safari/537.36]}, handlesAlerts=true, version=, platform=ANY, requestOrigins={name=webdriverio, version=3.2.4, url=http://webdriver.io}}]])\n13:36:49.306 INFO - Creating a new session for Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@68dee62d, browserName=chrome, javascriptEnabled=true, chromeOptions={args=[user-agent=Mozilla/5.0 (Linux; Android 4.3; Nexus 10 Build/JSS15Q) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2307.2 Mobile Safari/537.36]}, handlesAlerts=true, version=, platform=ANY, requestOrigins={name=webdriverio, version=3.2.4, url=http://webdriver.io}}]\n13:36:49.307 INFO - Creating a new session for Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@445fb0fb, browserName=chrome, javascriptEnabled=true, handlesAlerts=true, version=, platform=ANY, requestOrigins={name=webdriverio, version=3.2.4, url=http://webdriver.io}}]\nStarting ChromeDriver 2.20.353124 (035346203162d32c80f1dce587c8154a1efa0c3b) on port 13718\nOnly local connections are allowed.\nStarting ChromeDriver 2.20.353124 (035346203162d32c80f1dce587c8154a1efa0c3b) on port 15975\nOnly local connections are allowed.\n13:36:50.041 INFO - Done: [new session: Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@68dee62d, browserName=chrome, javascriptEnabled=true, chromeOptions={args=[user-agent=Mozilla/5.0 (Linux; Android 4.3; Nexus 10 Build/JSS15Q) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2307.2 Mobile Safari/537.36]}, handlesAlerts=true, version=, platform=ANY, requestOrigins={name=webdriverio, version=3.2.4, url=http://webdriver.io}}]]\n13:36:50.043 INFO - Executing: [get: http://10.96.4.162:8090/1369530?autoplay=true&embedded=false&init=true])\n13:36:50.262 INFO - Done: [get: http://10.96.4.162:8090/1369530?autoplay=true&embedded=false&init=true]\n13:36:50.270 INFO - Executing: [set script timeout: 15000])\n13:36:50.275 INFO - Done: [set script timeout: 15000]\n13:36:50.280 INFO - Executing: [execute async script: return (function waitForPausedState(state, done) {\n    setInterval(function () {\n        if (window.player && window.player.videoElementAvailable && window.player.isPaused() === state) {\n            done(state);\n        }\n    }, 100);\n}).apply(null, arguments);, [false]])\n13:36:50.393 INFO - Done: [execute async script: return (function waitForPausedState(state, done) {\n    setInterval(function () {\n        if (window.player && window.player.videoElementAvailable && window.player.isPaused() === state) {\n            done(state);\n        }\n    }, 100);\n}).apply(null, arguments);, [false]]\n13:36:50.402 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:50.415 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:50.419 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:50.430 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:50.689 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:50.705 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:50.708 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:50.719 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:50.982 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:50.988 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:50.991 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:50.998 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:51.255 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:51.265 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:51.268 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:51.273 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:51.529 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:51.534 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:51.537 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:51.543 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:51.799 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:51.805 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:51.808 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:51.814 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:52.070 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:52.076 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:52.078 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:52.084 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:52.341 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:52.346 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:52.349 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:52.354 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:52.611 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:52.617 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:52.620 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:52.627 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:52.883 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:52.890 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:52.893 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:52.898 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:53.155 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:53.163 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:53.166 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:53.171 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:53.428 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:53.434 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:53.438 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:53.445 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:53.702 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:53.711 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:53.714 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:53.720 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:53.983 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:53.988 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:53.992 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:53.996 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:54.000 INFO - Executing: [find element: By.cssSelector: video, object])\n13:36:54.013 INFO - Done: [find element: By.cssSelector: video, object]\n13:36:54.016 INFO - Executing: [click: 1 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: video, object]])\n13:36:54.041 INFO - Done: [click: 1 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: video, object]]\n13:36:54.047 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:54.052 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:54.055 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:54.062 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:54.319 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:54.327 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:54.329 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:54.334 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:54.339 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:54.348 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:54.351 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:54.360 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:54.615 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:54.621 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:54.624 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:54.631 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:54.886 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:54.894 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:54.896 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:54.901 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:55.157 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:55.165 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:55.168 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:55.172 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:55.428 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:55.434 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:55.437 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:55.443 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:55.699 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:55.705 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:55.707 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:55.715 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:55.971 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:55.976 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:55.979 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:55.984 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:56.240 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:56.245 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:56.248 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:56.253 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:56.509 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:56.514 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:56.517 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:56.522 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:56.778 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:56.783 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:56.786 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:56.794 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:57.050 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:57.057 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:57.086 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:57.093 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:57.349 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:57.356 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:57.359 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:57.364 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:57.620 INFO - Executing: [find elements: By.cssSelector: .__player-controls])\n13:36:57.628 INFO - Done: [find elements: By.cssSelector: .__player-controls]\n13:36:57.631 INFO - Executing: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]])\n13:36:57.636 INFO - Done: [is displayed: 0 [[ChromeDriver: chrome on LINUX (f36aead622658a7530d0ae8f81f7a043)] -> css selector: .__player-controls]]\n13:36:57.639 INFO - Executing: [delete session: 12e5ad61-cc37-4948-bcb1-bc30931b3675])\n13:36:58.195 INFO - Done: [delete session: 12e5ad61-cc37-4948-bcb1-bc30931b3675]\ndocker --version says Docker version 1.9.1, build a34a1d5.\nAny work arounds (or an actual fix) are highly appreciated. We are contemplating on retrying on session creation in the tests. Any thoughts on whether that's a good idea or not?\n. I managed to get sessions started up with a retry logic similar to @hmcgowan.\nHowever now I get\nUncaught Error: socket hang up\n      at createHangUpError (_http_client.js:215:15)\n      at Socket.socketCloseListener (_http_client.js:247:23)\n      at TCP.close (net.js:485:12)\nOn multiple tests (these do not occur when running the tests against selenium server running on localhost.\nWe are using Node.js (v0.12.2) to run selenium tests on mocha (2.2.5) through webdriverio (3.2.4).\nAny ideas what could be at play?\n. ",
    "Meju121093": "Hi guys,\nIn Docker cloud terminal tab of the container, I couldn't type command in shell. Can you please help me to do in running container?\n. ",
    "LudwigHoff": "Absolutely, this is completely a request based on our set up.  (It's a one of the standard \"don't want to start from here\" situations.)  Some lovely work which now locks us in: we gen docker-compose.yml on the fly - but this also restricts us somewhat.\nThanks for this very nice repo by the way.\nThe more I think about this, my request is utterly bound to what I do here.\nSorry to have bothered.\nBR\n. ",
    "alexander-lazarov": "Anyone with solution to this? I'm having the same problem standalone-firefox image:\nyaml\nselenium:\n    hostname: selenium\n    image: selenium/standalone-firefox:2.48.2\nbash\nalexander@rincewind:~$ docker-compose -v\ndocker-compose version: 1.5.1\nalexander@rincewind:~$ docker -v\nDocker version 1.9.0, build 76d6bc9\n. What I noticed is that if I change the value of DISPLAY env variable from 99:0 to something different, like 98:0, it manages to start Xvfb. Not sure if this I'm forcing a recreation of the image this way (like @oholubyev proposed), or the previous display is left open/taken for some reason and you need to use a new one to start xvfb. After all, this is a container, not a whole virtual machine and I guess it is possible that something is not being cleaned completely on the host after shutdown/restart.\n. @caioquirino: based on what @garagepoort shared, using this Dockerfile should solve the issue. Would be good if anyone can test this, because ironically, I can't reproduce the crash at the moment.\nhttps://gist.github.com/alexander-lazarov/3851614fdd9ab33a1182\n. ",
    "bkuhl": "I had the same issue as @alexander-lazarov.  I was able to get past this error using selenium/standalone-firefox-debug\n. ",
    "oholubyev": "Intermittent \"xvfb-run: error: Xvfb failed to start\" on selenium/standalone-firefox-debug\n. The solution for me was to use --force-recreate flag when launching through Docker Compose: \"docker-compose up --force-recreate\". It forces recreation of containers even if their configuration and image haven't changed.\n. @elgalu thanks! That's what it was.\n. ",
    "referup-tarantegui": "I have the same issue with selenium/standalone-firefox, I've tried with different tags and it can be reproduced in all of them. Here are the results of a docker diff on the container, I hope it helps.\nC /home\nC /home/seluser\nA /home/seluser/.cache\nA /home/seluser/.cache/mozilla\nA /home/seluser/.cache/mozilla/firefox\nA /home/seluser/.mozilla\nA /home/seluser/.mozilla/extensions\nA /home/seluser/.mozilla/firefox\nA /home/seluser/.mozilla/firefox/Crash Reports\nA /home/seluser/.mozilla/firefox/Crash Reports/InstallTime20151030083932\nA /home/seluser/.mozilla/firefox/Crash Reports/events\nA /home/seluser/Desktop\nC /tmp\nA /tmp/.X11-unix\nA /tmp/.X11-unix/X99\nA /tmp/.X99-lock\nA /tmp/hsperfdata_seluser\nC /var\nC /var/tmp\n. ",
    "kierr": "--force-recreate worked for me too, thanks @oholubyev \n. Ok it's no longer working for me, I start with 1 firefox container but when I try to scale I get the same error, and force recreate changes nothing.\n. I couldn't scale above one firefox node, on 5 different servers, because of this issue. For me, it was because of port 4444 conflicting, with all the nodes on the same IP...\n. I think this should be configurable, rather than arbitrarily upped from 1 to 5. Then that keeps us all happy - both those preferring the single browser per node configuration, and those of us who have many hundreds of concurrent tests to run where a single browser per node setup is illogical, simply based on system resources, based particularly on notoriously resource intensive Java.\n. Thank you, that's perfect.\n. ",
    "anton-kasperovich": "Same issue\nDocker: 1.10.0\nImage: selenium/node-firefox:2.46.0\n9 February 2016 22:36:41 GMT+2xvfb-run: error: Xvfb failed to start\n. ",
    "SublimeVincentHerl": "Same issue with Docker version 1.10.2\n. ",
    "caioquirino": "I've tested with 2.52 version and the error continues.\n. @garagepoort Can you make a fix in the entry-point.sh and a pull request please?\n. Hi @alexander-lazarov,\nThank you for collaborating! :D\nYour gist does not work because the Dockerfile was on image's build time.\nThe fix needs to be every time when the docker container starts (entrypoint).\nI will make the PR tomorrow.\n. I have tested @garagepoort fix and that worked well.\nWaiting for merge...\n. @kayabendroth I'm tested and works. Thanks @garagepoort \n. @lukeis and @mtscout6 \nI would like to spend some time testing, validating PR and contribute with the project. What's the correct path to contribute with the project?\n. ",
    "garagepoort": "We had the same problem with the standalone-chrome-debug image. The image executes the following file /opt/bin/entry-point.sh. It tries to start an xDisplay on port 99.0. After we restarted the image the following lock file was present /tmp/.X99-lock. Because of this file xvfb could not be started.\nWe wrapped the selenium image in our own docker image and added a script to remove this lock file on startup of the container.\nRemoving the file /tmp/.X99-lock on startup of the container fixed our problem.\n. Hi @caioquirino,\nI created the pull request with the fix.\nTo version 2.52.0\nhttps://github.com/SeleniumHQ/docker-selenium/pull/179\nTo master\nhttps://github.com/SeleniumHQ/docker-selenium/pull/180\n. My pull request has been merged and included in release 2.53.0. This issue can be resolved?\n. @aleshaczech Ok I'll create a pull request for them all.\n. Ok so I will create a new pull request. This time on the base node. I propose to load the clearing of the X lock the same as the entry_point.sh file is loaded in the very beginning. So all images will include this fix.\n. Ok so @bizmate @garcianavalon I still did not have the time to include this in all the images. So my fix currently is only applied to chrome-standalone-debug. All other images will still have this problem. But as stated in my previous comment, I propose to load the clear_lock script in the base node. If anyone has the time to implement this, please do, because I don't know when I will have the time to do it. Ones this fix is added to the base node all other images should be fixed.\n. @adamlievrouw This is inside the container. Why would the host lock the X-server? \n. Hi @kayabendroth \nHappy to help, but the tests failed. Could you shed some light on that?\n. @mtscout6 Is this project still maintained? No comments were given on my pull request\n. @mtscout6 Indeed no need to apologize :) I just pulled you because you were the top volunteer on this project. I am glad it is still maintained as it is of great value for the company I work at.\n. @caioquirino although I am glad my PR is getting so much attention, I think we wandered off from the essence of the PR. Might be good to start private conversation ;-)\n. ",
    "joemewes": "I have this on 2.53.0 firefox-debug (2.53.0 selenium-grid)\ndocker v1.10.3\nWaiting xvfb...\n-bash: b: command not found\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nrelated? same? new issue? Chrome loads fine.\nI have also tried --force-recreate flag a few times...\nignore - my issue looks to be this #208 \n. Tested and confirmed only seems to be an issue with the -debug drivers. non-debug driver for both chrome and firefox work fine.\n. Is this the file thats missing from the build && branch : https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeBase/functions.sh\nSo the Codebase containers branches master, 2.52.0 and 2.53.0 need this added and the functions.sh file so this function can be used in the debug containers? \n[edit]\nCOPY \\\n  entry_point.sh \\\n  functions.sh \\\n    /opt/bin/\nRUN chmod +x /opt/bin/entry_point.sh\nto replace in the nodeFirefoxDebug Dockerfile I would think : https://github.com/SeleniumHQ/docker-selenium/blob/2.53.0/NodeFirefoxDebug/Dockerfile#L52\nCan anyone create PRs for this repo? Am new to contributing.....\n. @kayabendroth is it not the debug versions doing this : https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeFirefoxDebug/entry_point.sh#L3\n&& the Dockerfile missing the COPY command to bring in the functions.sh file : https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeFirefoxDebug/Dockerfile#L52\nas the NodeBase Dockerfile currently does : https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeBase/Dockerfile#L28\n?\n. yeah, I was wondering if thats how it was supposed to work.. but looked like it didn't need fixing if that were the case. I'll pull and build from latest and let you know how I get on. \nThanks for the fixes.\n. @kayabendroth confirmed pulled and working locally here with :latest *-debug containers. nice work! \nthanks \n. ",
    "aleshaczech": "@garagepoort I just had the same issue with node-chrome-debug 2.53.0. For a reason I don't know the node-chrome-debug and node-firefox-debug exited and when I tried to restart them, the Waiting xvfb... messages appeared and the container exited after few seconds. I had to delete the .X99-lock file and now everything is fine.\nThis merge of yours went only to the standalone-chrome-debug? Could you also please add it to the node-*-debug images?\n. ",
    "kchudy": "@garagepoort I can reproduce the error event on selenium/standalone-chrome-debug:2.53.0. Here's the output of ./opt/bin/entry_point.sh call:\n```\nroot@1adb1d203eb4:/# ./opt/bin/entry_point.sh \nLooking for lock file: /tmp/.X??-lock\nWaiting xvfb...\n-bash: 169.254/16: No such file or directory\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nroot@1adb1d203eb4:/# Error: Couldn't connect to XServer:99.0\n26/05/2016 03:04:47 passing arg to libvncserver: -rfbport\n26/05/2016 03:04:47 passing arg to libvncserver: 5900\n26/05/2016 03:04:47 -usepw: found /root/.vnc/passwd\n26/05/2016 03:04:47 x11vnc version: 0.9.13 lastmod: 2011-08-10  pid: 169\n26/05/2016 03:04:47 XOpenDisplay(\":99.0\") failed.\n26/05/2016 03:04:47 Trying again with XAUTHLOCALHOSTNAME=localhost ...\n26/05/2016 03:04:47 ******\n26/05/2016 03:04:47  XOpenDisplay failed (:99.0)\n x11vnc was unable to open the X DISPLAY: \":99.0\", it cannot continue.\n There may be \"Xlib:\" error messages above with details about the failure.\nSome tips and guidelines:\n** An X server (the one you wish to view) must be running before x11vnc is\n   started: x11vnc does not start the X server.  (however, see the -create\n   option if that is what you really want).\n** You must use -display , -OR- set and export your $DISPLAY\n   environment variable to refer to the display of the desired X server.\n - Usually the display is simply \":0\" (in fact x11vnc uses this if you forget\n   to specify it), but in some multi-user situations it could be \":1\", \":2\",\n   or even \":137\".  Ask your administrator or a guru if you are having\n   difficulty determining what your X DISPLAY is.\n** Next, you need to have sufficient permissions (Xauthority) \n   to connect to the X DISPLAY.   Here are some Tips:\n\nOften, you just need to run x11vnc as the user logged into the X session.\n   So make sure to be that user when you type x11vnc.\nBeing root is usually not enough because the incorrect MIT-MAGIC-COOKIE\n   file may be accessed.  The cookie file contains the secret key that\n   allows x11vnc to connect to the desired X DISPLAY.\nYou can explicitly indicate which MIT-MAGIC-COOKIE file should be used\n   by the -auth option, e.g.:\n       x11vnc -auth /home/someuser/.Xauthority -display :0\n       x11vnc -auth /tmp/.gdmzndVlR -display :0\n   you must have read permission for the auth file.\n   See also '-auth guess' and '-findauth' discussed below.\n\n** If NO ONE is logged into an X session yet, but there is a greeter login\n   program like \"gdm\", \"kdm\", \"xdm\", or \"dtlogin\" running, you will need\n   to find and use the raw display manager MIT-MAGIC-COOKIE file.\n   Some examples for various display managers:\n gdm:     -auth /var/gdm/:0.Xauth\n          -auth /var/lib/gdm/:0.Xauth\n kdm:     -auth /var/lib/kdm/A:0-crWk72\n          -auth /var/run/xauth/A:0-crWk72\n xdm:     -auth /var/lib/xdm/authdir/authfiles/A:0-XQvaJk\n dtlogin: -auth /var/dt/A:0-UgaaXa\n\nSometimes the command \"ps wwwwaux | grep auth\" can reveal the file location.\nStarting with x11vnc 0.9.9 you can have it try to guess by using:\n          -auth guess\n\n(see also the x11vnc -findauth option.)\nOnly root will have read permission for the file, and so x11vnc must be run\n   as root (or copy it).  The random characters in the filenames will of course\n   change and the directory the cookie file resides in is system dependent.\nSee also: http://www.karlrunge.com/x11vnc/faq.html\n```\nMy docker version is 1.11.1, build 5604cbe. Could you please give me some hints how to make it work?\n. ",
    "xlc": "I have the same issue as @kchudy and I think it is caused by this line\n$(for E in $(grep -vxFf asseluser asroot); do echo $E=$(eval echo \\$$E); done) \\\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/StandaloneChromeDebug/entry_point.sh#L21\nroot@584a2f7bf35e:/# echo $(for E in $(grep -vxFf asseluser asroot); do echo $E=$(eval echo \\$$E); done)\nCHROME_DRIVER_VERSION=2.21 DBUS_SESSION_BUS_ADDRESS=/dev/null DEBCONF_NONINTERACTIVE_SEEN=true DEBIAN_FRONTEND=noninteractive GEOMETRY=1360x1020x24 no_proxy=*.local, 169.254/16 SCREEN_DEPTH=24 SCREEN_HEIGHT=1020 SCREEN_WIDTH=1360\nIn this case,  no_proxy=*.local, 169.254/16 breaks it and xvfb was never started.\nI am not shell export so I don't know the proper way to handle it but somebody must know a better way to transfer environment variables that contains space?\nThis is my workaround in docker-compose.yml\nhub:\n  image: selenium/standalone-chrome-debug\n  command: bash -c \"sed -e '19a\\echo no_proxy >> asseluser' /opt/bin/entry_point.sh | bash\"\n. ",
    "jarney": ":+1: \n. We've experienced this problem on \"selenium-node-firefox\" also, I believe that the issue will surface for any image which starts an instance of Xvfb.  Our team has tested this locally and found that removing the .X*-lock file resolves the problem reliably.  We have raised a pull-request for this issue here:\nhttps://github.com/SeleniumHQ/docker-selenium/pull/230\n. ",
    "garcianavalon": "Still having this issue with standalone-chrome:2.53 (latest). I can work around it by using --force-recreate as proposed\n. ",
    "bizmate": "I am also experiencing the same issue and looks like --force-recreate works\n. Hi @eroshenkoam \nthanks for the info. I might do a pull request to add these to the README.md files if I get time. I think there would be value if the outcome of the approaches used in that conversation was shown in the docs. Closing this for now\n. I am experiencing the same issue @QAutomatron since tag latest got updated to 2.53. I had to set the timeout to a really high value of 360000 to make sure selenium did not fail tests.\n. ",
    "adamlievrouw": "I'm not seeing any lock files in /tmp . This is supposed to be on the docker host, correct, not inside the container?\n. @Loki-Afro you can avoid this error like this:\nTo restart the container:\nsudo docker exec -it CONTAINER rm /tmp/.X99-lock && sudo docker restart CONTAINER\nTo stop the container:\nsudo docker exec -it CONTAINER rm /tmp/.X99-lock && sudo docker stop CONTAINER\n. Is this what you're looking for?\n[test@test ~]$ sudo docker exec -it perf-node-gce-01 sh -c 'find / -iname cache | fgrep -i google'\n/tmp/.com.google.Chrome.TqYuQs/Default/Cache\n/tmp/.com.google.Chrome.9eBUc3/Default/Cache\n/tmp/.com.google.Chrome.z3xTJ1/Default/Cache\n/tmp/.com.google.Chrome.J64esA/Default/Cache\n/tmp/.com.google.Chrome.yUOJ11/Default/Cache\n/tmp/.com.google.Chrome.A3zIeZ/Default/Cache\n/tmp/.com.google.Chrome.x9iF6C/Default/Cache\n/tmp/.com.google.Chrome.3PzCtu/Default/Cache\n/tmp/.com.google.Chrome.QdwRFC/Default/Cache\n/tmp/.com.google.Chrome.AKZhjn/Default/Cache\n/tmp/.com.google.Chrome.fZ4PpA/Default/Cache. I'm not sure if it's useful, but I use this in many of my selenium scripts to achieve what your talking about.\ndriver.manage().deleteAllCookies();. I'm confused, it's here no:\nhttps://github.com/SeleniumHQ/docker-selenium/blob/365a9831aa793f7eeec00d22b0decf3328a961dc/NodeChrome/Dockerfile\n==================\nChrome webdriver\n==================\nENV CHROME_DRIVER_VERSION 2.21\nRUN wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip \\\n  && rm -rf /opt/selenium/chromedriver \\\n  && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n  && rm /tmp/chromedriver_linux64.zip \\\n  && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n  && chmod 755 /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION \\\n  && ln -fs /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver\n. ",
    "ivycas": "Was experiencing this issue on selenium/standalone-chrome-debug and selenium/standalone-firefox-debug latest. \nCurrent workaround based on xlc's solution seems to cover both issues. Just added this to my docker-compose.\ncommand: bash -c \"rm /tmp/.X99-lock || echo 'Lock not found, continuing normal startup' && export no_proxy=*.local && /opt/bin/entry_point.sh\"\n. ",
    "go2guy": "So I deleted the container and image for selenium/standalone-chrome-debug.\nRe-ran docker run -d -P selenium/standalone-chrome-debug.\nContainer still has exited with 127.  See docker ps -a results below.  Thought this was fixed in latest \nselenium/standalone-chrome-debug?\nCONTAINER ID        IMAGE                              COMMAND                  CREATED             STATUS                       PORTS               NAMES\n5af24880c451        selenium/standalone-chrome-debug   \"/opt/bin/entry_point\"   2 minutes ago       Exited (127) 2 minutes ago                       cocky_wright\ndocker logs -f 5af24880c451\nLooking for lock file: /tmp/.X??-lock\nWaiting xvfb...\n-bash: 169.254/16: No such file or directory\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n. I suggest taking a screenshot at the time of failure and see if the element is present.  I've had issues like this before and seen that the element is not present to click when in Headless mode because of the browser rendering (instead a Hamburger Icon needed click to get to the menu element).  I was able to debug this with a screenshot to see the problem.  Also, what is the exception that is being called?  Element not found?\n. @gurukiran007 this issue is not with debug containers. \n\"selenium/standalone-chrome fails on restart command\"\n. Yeah tried that and selenium test did not work but a manual test on the container did.\n. ",
    "wywincl": "I have the same problem with @nuggit32 , I hope someone can give some advise.\nMy platform is \nOSX 10.11.6\nDocker 1.12.0\n. I use your @gurukiran007  code and then it work well. Thank you very much for fixing it.\n. ",
    "davidino": "Same error with this configuration:\n``` yaml\n  selenium-hub:\n    container_name: selenium-hub\n    image: selenium/hub:2.53.0\n    ports:\n      - \"4444:4444\"\nselenium-chrome:\n    image: selenium/node-chrome-debug:2.53.0\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    links:\n      - selenium-hub\n    ports:\n      - \"5900:5900\"\n```\nswitching to image: selenium/node-firefox:2.53.0 it works fine!\n. ",
    "gurukiran007": "https://github.com/SeleniumHQ/docker-selenium/pull/256 the pull request must fix it... make sure the VNC password is set by the seluser but the bug was, that root was setting that and seluser failed to access it and this failed.... \n. Guys the issue reported was seen on the Debug container and its due to entrypoint looking for a file created by root but as seluser when updating the password.  This pull req should solve it:\nhttps://github.com/SeleniumHQ/docker-selenium/pull/256\nIf you are using a regular chrome/FF container you should not see this issue. \n. Done can you guys see if this helps now... \n. @vikramvi does that work on master for you ?\n. @vikramvi :\nSTEP 1: build the version you want, after you have cloned the repo, run this: VERSION=2.53.1 make build\nSTEP 2: build the images you want from the docker files generated from step 1\nSTEP 3: Run the command you shared\n@ddavison can you please merge this to master. I have rebased the branch from master.\n@kayabendroth merge this please \n. @kayabendroth can you help please  i cannot understand why the build fails after i have rebased from master \n. Sounds good thanks @ddavison \n. Let me re test it locally ... that does not look right ... \n. Thanks @ddavison for closing that and sharing the docker bug.. the explains the local issue i had as well.. \ud83d\udc4d \n. @ddavison I see what you mean, \nThe fix was done before the new call/last call in the script with x11vnc is being made in entry_point.sh presently, \nThe defect it fixed was that the docker file created the password  with root: http://screencast.com/t/DIIpZvARg\nAnd tried to access it using seluser http://screencast.com/t/sj0QLXfspi \nBut as you mentioned now that we have one more call to start the x11vnc would be happy if i do that as seluser as well?\n. Ok, but i believe that fix will again not allow the VNC server to be up as xvfb-run -n $SERVERNUM --server-args=\"-screen 0 $GEOMETRY -ac +extension RANDR\" tries to look for password in seluser home directory but the password is saved in root home and hence will fail\n. https://github.com/SeleniumHQ/docker-selenium/pull/256 Solves it, issue with debug containers only\n. \ud83d\udc4d \n. ",
    "vikramvi": "Issue still happens for me Mac mini ( 10.10.5 ) with docker 1.12.1 ( build: 121333) + selenium debug version 2.53.0\n. Got this working with below command\ndocker run -d -P -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub:hub selenium/node-chrome-debug\n. https://code.google.com/p/selenium/issues/detail?id=4566\n. Hi RubyTester,\nThanks for reply. I'm trying out Docker + Grid setup per your Selenium conf tech talk\nBut facing with below issues\n1. https://github.com/SeleniumHQ/docker-selenium/issues/111\n2. How to determine how many nodes / docker containers I can have ?\nThanks in advance.\nRegards,\nVikram\n. +1\n. Sorry it was my fault , I missed to add \"-P\" option.\nClosing this issue\n. One more related note\nI found below quite confusing to understand\n( https://github.com/SeleniumHQ/docker-selenium )\ndocker run -d -P -p <port4VNC>:5900 --link selenium-hub:hub selenium/node-chrome-debug:2.53.1\ninstead liked the approach\n( https://github.com/SeleniumHQ/docker-selenium/tree/master/NodeChromeDebug )\ndocker run -d -P --link selenium-hub:hub selenium/node-chrome-debug\ndocker port <container-name|container-id> 5900\nvnc://xxx.yyy.z.aa:12345/   on safari browser\n. Closing as per earlier comment.\nThanks for clarification @rubytester \nRegards,\nVikram\n. +1 Thanks in advance.\n. I got this working with command\ndocker run -d -P -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub:hub selenium/node-chrome-debug\n. @thataustin Thanks for asking this query.\nThis proves that documentation is not clear enough for all the audiences. IMO any technical documentation should be written in as simple english as possible without \"assuming\" all are experts in networking and/or selenium usage. cc: @zypherman . @stephenrenshaw can you please clarify how to achieve 2 steps ( one for setting container size , second one for forcing browser size ) you mentioned in above comment ?. @roydekleijn Thanks for info & do you also set chrome browser size inside script as well ? \nsomething like  getDriver().manage().window().setSize(new Dimension(X, Y));. I'm having Mac mini ( 10.10.5 ) with docker 1.12.1 ( build: 121333)\nI tried below and didn't work\ndocker run -P -p 5901:5900 -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub:hub selenium/standalone-chrome-debug:2.53.0\nit hung with last message\nSetting default value\nFailed to read: session.screen0.iconbar.iconTextPadding\nSetting default value\nFailed to read: session.screen0.iconbar.usePixmap\nSetting default value\n. Got it working with below command\ndocker run -d -P -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub:hub selenium/node-chrome-debug\n. @luisxiaomai @bayandin can you please paste complete command here ? \nAs I tried docker run -P -p 5900:5900 -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub:hub selenium/node-firefox-debug:2.53.0\ndoes work for me Mac mini ( 10.10.5 ) with docker 1.12.1 ( build: 121333)\n. docker run -d -P -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub:hub selenium/node-chrome-debug\nThis worked for me. Had missed -d in earlier command.\nhttps://docs.docker.com/engine/reference/commandline/run/ , but didn't understand why missing this parameter is causing issue ?\n. @gurukiran007  I tried docker run -P -p 5901:5901 -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub:hub selenium/node-chrome-debug:2.53.1 and got error\nUnable to find image 'selenium/node-chrome-debug:2.53.1' locally\nPulling repository docker.io/selenium/node-chrome-debug\ndocker: Tag 2.53.1 not found in repository docker.io/selenium/node-chrome-debug.\nSee 'docker run --help'.\n. @gurukiran007 can you please give command which I can try , struggling with debug version since almost 1/2 day now :( thanks in advance.\n. With mac 10.12.3 + Docker 17.03.1-ce-mac5 + selenium/node-chrome-debug:3.4.0\nI've below method for maximizing browser\n```java\npublic boolean maximizeBrowserWindow(){\n    try{\n        getDriver().manage().window().maximize();\n        //Below solution not working in case of Chrome container\n        /*Toolkit toolkit = Toolkit.getDefaultToolkit();\n    Dimension screenResolution = new Dimension((int) toolkit.getScreenSize().getWidth(), (int) toolkit.getScreenSize().getHeight());\n    getDriver().manage().window().setSize(screenResolution);*/\n    return true;\n}catch(Exception e){\n    e.printStackTrace();\n    return false;\n}\n\n}\n```\nBut this always throws false and without any exception\nIs there any workaround for this ?\n. @ddavison can you please review this issue ?. ",
    "rcambrj": "This seems to happen because the /tmp/.X99-lock file exists and gets cached which prevents xvfb from starting the next time around.\nin docker-compose.yml, try:\nselenium-chrome:\n    tmpfs:\n      - /tmp\nThat should stop it from getting cached, right?\n. ",
    "Loki-Afro": "Funny thing:\ndocker run -d --name selenium_chrome  selenium/standalone-chrome \nworks just fine.\ndocker stop selenium_chrome\nand it will stop.\ndocker start selenium_chrome\nand docker logs selenium_chrome will print out Xvfb failed to start\ndocker restart selenium_chrome everything works as expected ...\n. ",
    "ecirtap": "The following bug, signaled above, occurs only on Docker4Mac (and not on Docker4Windows) even when a proxy is not specified at the Docker Engine level:\nWaiting xvfb...\n -bash: 169.254/16: No such file or directory\nThis is due to the default value of the Exclude textfield of the Advanced pane of Docker4Mac settings which is greyed out initially but nevertheless taken into account by the Docker Engine. One can see it using this simple command:\n```\n$ docker run -it --rm alpine env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=68427e1a6e8c\nTERM=xterm\nno_proxy=*.local, 169.254/16\nHOME=/root\n```\nIf this value is changed to a single space character, the no_proxy variable disappears:\n$ docker run -it --rm alpine env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=99a77bf3380e\nTERM=xterm\nHOME=/root\n=> it is a docker4mac bug\n. ",
    "punitmishra": "This is mac specific - If you run into the same error change the proxy setting on docker service on a mac change the proxy settings to \"No Proxy\" - it should fix the xvfb issue. \n\n. ",
    "djalexd": "It seems that also HUB_ENV_no_proxy needs to be empty, I was able to start debug with following command: \ndocker run -d -e HUB_ENV_no_proxy= -p5900:5900 --link selenium-hub:hub selenium/node-chrome-debug:3.3.1-cesium. ",
    "laichimirum": "@punitmishra funny thing that I don't have that radio button on mac :D. ",
    "BirdTho": "@ivycas Getting the selenium images to work in docker-compose, good. I'm stuck trying to get them working in Codeship, a bit more restrictive. Also fancy seeing one of your comments here!. @ejoebstl Actually it's codeship which uses a bridge network always.. ",
    "ejoebstl": "For those who might still face this issue: If you try to run multiple nodes with the docker networking mode set to host, you will also get the xvfb-run: error: Xvfb failed to start error. . ",
    "pandeiro": "It seems from inspecting the resulting image's container that /etc/hosts does not include the entry explicitly added by my script, above.\nIs either the selenium/standalone-chrome-debug image or docker itself possibly overwriting this /etc/hosts file?\n. Closing as this is a docker issue: see #2267\n. I would prefer HUB_HOST and HUB_PORT environment vars to one variable requiring an FQN, because it would enable more easily using and overriding defaults for either value. This would make it pretty easy to support the main docker-compose networking approaches: linking (requires specifying name of hub container as HUB_HOST), sharing network with hub container (no config necessary) or using the host network (ditto, or perhaps setting a custom HUB_PORT if 4444 would cause a conflict).\n. ",
    "chunji08": "Hi there, I had followed the same way and was able to add the extra rows in the /etc/hosts file, the question I have is, during the selenium execution time,  does it really reads the setting of the \"/etc/hosts\" file, within  this container ? . ",
    "JeffHall": "Thanks to all for the great comments!  I'm relatively new to Docker, so this PR doesn't really take into account the \"Docker mindset\" of \"1 container for 1 thing\" (quoting Mark Collin here).  \nI'll withdraw this PR and look into implementing the suggestion offered by @elgalu of starting and stopping node containers per test, which seems like a smart solution.\n. I have a similar situation where I need to run multiple Chrome and Firefox nodes, and I found that using Docker Compose was a good solution for this.  \nThe basic idea is that once you bring the services up (docker-compose up -d), you can then scale the browser-specific nodes with commands like this:\ndocker-compose scale chrome=5\ndocker-compose scale firefox=5\n...which gives you 5 nodes for each of the two browsers.\nThis has worked really well for a Selenium Grid that I'm maintaining on an Amazon EC2 instance.\nMore info here: http://www.conductor.com/nightlight/running-selenium-grid-using-docker-compose/\n(In that blog post, the author is creating his own Docker images, but I found it much easier to use the images that the good folks from the docker-selenium project have already created and shared).\n. ",
    "eyal919": "I agree with Leo about 1 container for one test and I also think this is the way to do automation. but in real life, when you having many tests and you run tests in parallel, you don't always have the resources to create one container to each test.\nI think you should give the selenium developer (and the docker user) the option to have more than one instance of browser in the same container. I also think that the developer smart enough to use it as they need.\nFor example: In my environment, i'm running more than 300 tests in parallel so one instance its just not enough.\n. +1\n. ",
    "cyrille-leclerc": "Thanks @rubytester, I have just signed the CLA.\nCyrille\n. ",
    "bitliner": "https://github.com/SeleniumHQ/selenium/issues/384\n. I experience the same with standalone-chrome:2.47.1.\nIs there any way to fix it?\nGoing to investigate soon\n. The bug was in my code. \nI was running 2 concurrent browsers for testing, and I was supposing that browser2.quit() would have been directly called by the testing framework in afterEach method, while it was not.\n. +1 - using docker image selenium/standalone-chrome:2.45.0\nBut I remember if was always working before (maybe it changed after I updated protractor that runs test against selenium)\n. +1\n. @diemol has the fix been already included in the last versions of docker-selenium? in case, which versions? . ",
    "daxia4444": "I only use one browsers instance, but  Firefox appears  memory leak sometimes. Do you have any idea?\n. ",
    "alder": "@elgalu strange...I've installed Docker from Ubuntu official repo. Try to install the latest version.\n. Issue happens with old Docker version which located in official Ubuntu repo. Closed.\n. ",
    "darkyelox": "i'm using this code for testing, when i use my host ip for load the grid console it works\npublic void test_page_load(){\n        new Browser().drive {\n            go \"http://myhostip:4444/grid/console\" // se navega a la pagina principal\n            println \"page loaded\"\n            $(\"button#details-button\").click()\n            report \"test_page_load\"\n        }\n    }\ni get this:\n\nbut if i try to use a web url like google.com or whatever i get this:\n\n. i found a solution for now, the problem is the DNS so i use the comands like this, in the hub and in the nodes:\ndocker run --dns 8.8.8.8 --dns 8.8.4.4 -d -p 4444:4444 --name selenium-hub selenium/hub:2.47.1\ndocker run --dns 8.8.8.8 --dns 8.8.4.4 -d -P --link selenium-hub:hub selenium/node-chrome-debug:2.47.1\nbut this can be a bug of docker because i use ubuntu image and i need to do the same thing with ping\n. ",
    "rogoit": "I have the same issue. Hi,\nthis here\n$ docker run -d -p 4444:4444 -v /dev/shm:/dev/shm selenium/standalone-chrome:2.53.0\nUnable to find image 'selenium/standalone-chrome:2.53.0' locally\nTrying to pull repository docker.io/selenium/standalone-chrome ...\nPulling repository docker.io/selenium/standalone-chrome\nError while pulling image: Get https://index.docker.io/v1/repositories/selenium/standalone-chrome/images: dial tcp: lookup index.docker.io on 213.203.208.212:53: no such host\ndocker: Error while pulling image: Get https://index.docker.io/v1/repositories/selenium/standalone-chrome/images: dial tcp: lookup index.docker.io on 213.203.208.212:53: no such host.\nSee '/usr/bin/docker-current run --help'.\nBut i can open the index.docker.io url with wget and get it.\n. The help command gives me a list of commands and is working fine.\n. This was my fault. It has to do with internal dns for the webserver. Sorry for that. Can be closed!!\n. ",
    "NickAb": "Microsoft and Docker announced collaboration on bringing Docker to Windows Server. Somewhere in a future it should be possible to create a dockerized environment to run Selenium tests against Internet Explorer or Edge. Currently it is in development and can be played with in Windows Server 2016 technical previews.\nhttps://azure.microsoft.com/en-us/blog/microsoft-unveils-new-container-technologies-for-the-next-generation-cloud/\nhttps://blog.docker.com/2015/08/tp-docker-engine-windows-server-2016/\nhttps://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/manage_docker\nhttps://msdn.microsoft.com/virtualization/windowscontainers/about/work_in_progress\n. @elgalu it might be so, I think that @nwlunatic was looking into this question, maybe he can shed some light on this.\n. ",
    "petermartin2002": "Thanks folks,  all good knowledge.\n. ",
    "dgangwar": "Hi @viveksoundarrajan ,\nWere you able to connect docker node image to remote hub image???\n. Hi Jeff,\nThanks for the reply.\nI have seen this post and using the docker in the same way. But i am having multiple machine and want to have node running on each machine and connected to a single hub machine. As i have high number of test case and want to reduce execution time using multi node on various machine.\nAny idea???\n. Thanks @apakhomov .\nIs there any way that we can configure this node set up on remote machine using docker compose which will connect to remote Hub automatically and scaling of the images will be easy using the compose?\n. Thanks @apakhomov \nI will try this solution.\n. This solution worked.\n. Issue solved - I was using root user for docker machine start and was not able to access docker selenium HUB. I switched to docker group user as per the docker docs and it worked.\n. Hi,\nI am again getting this issue after machine restart. I can not connect the grid url. I tried the solution above also reinstalled docker and machine but no luck. Can any one provide any help?\n. After Reinstallation few times and few reboot finally i was able to again get it working.\n. Hi,\nMy machine configuration is below mentioned. My test case execution time is 3*Normal Execution time. I am using 3 node to execute the 40 test cases which takes 35 minutes on Centos machine but on my mac i7 16 GB ram it takes 9 minutes to complete with same no of node.\nWhen i run it on try to run it on Centos machine with 10 node, no test run all get timed out.\nSystem Memory Details----------------------------------------\nMemTotal:        1884808 kB\nMemFree:           75176 kB\nMemAvailable:     158568 kB\nBuffers:               0 kB\nCached:           169076 kB\nSwapCached:       358900 kB\nActive:           681668 kB\nInactive:         847688 kB\nActive(anon):     597608 kB\nInactive(anon):   765208 kB\nActive(file):      84060 kB\nInactive(file):    82480 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nSwapTotal:       2097148 kB\nSwapFree:          84228 kB\nDirty:               248 kB\nWriteback:             0 kB\nAnonPages:       1001476 kB\nMapped:            59972 kB\nShmem:              2476 kB\nSlab:             130432 kB\nSReclaimable:      58952 kB\nSUnreclaim:        71480 kB\nKernelStack:       16848 kB\nPageTables:        54640 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:     3039552 kB\nCommitted_AS:    7059724 kB\nVmallocTotal:   34359738367 kB\nVmallocUsed:      163280 kB\nVmallocChunk:   34359543808 kB\nHardwareCorrupted:     0 kB\nAnonHugePages:     38912 kB\nHugePages_Total:       0\nHugePages_Free:        0\nHugePages_Rsvd:        0\nHugePages_Surp:        0\nHugepagesize:       2048 kB\nDirectMap4k:      124864 kB\nDirectMap2M:     1972224 kB\n\ndf -k /tmp\nFilesystem              1K-blocks     Used Available Use% Mounted on\n/dev/mapper/centos-root  49746196 12384072  37362124  25% /\nCPU Info-----------------------------------------\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 63\nmodel name      : Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz\nstepping        : 2\nmicrocode       : 0x2d\ncpu MHz         : 2294.686\ncache size      : 25600 KB\nphysical id     : 0\nsiblings        : 1\ncore id         : 0\ncpu cores       : 1\napicid          : 0\ninitial apicid  : 0\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 15\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts nopl xtopology tsc_reliable nonstop_tsc aperfmperf pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm ida arat epb pln pts dtherm tpr_shadow vnmi ept vpid fsgsbase smep\nbogomips        : 4589.37\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 40 bits physical, 48 bits virtual\n. @apakhomov \nAfter increasing the RAM to 64 GB I was still not able to get the Test cases execution time decreased. Now it takes around 28 min to execute 37 TC with 3 node where macbook i7 16 GB still execute within 10 mins.\nBut the difference between these System is that MACBook has more CPU than Linux machine.\nDo you think this can be a problem????\nMAC-------\ndgangwar$ sysctl hw\nhw.ncpu: 8\nhw.byteorder: 1234\nhw.memsize: 17179869184\nhw.activecpu: 8\nhw.physicalcpu: 4\nhw.physicalcpu_max: 4\nhw.logicalcpu: 8\nhw.logicalcpu_max: 8\nhw.cputype: 7\nhw.cpusubtype: 8\nhw.cpu64bit_capable: 1\nhw.cpufamily: 280134364\nLINUX--------------\nArchitecture:          x86_64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Little Endian\nCPU(s):                1\nOn-line CPU(s) list:   0\nThread(s) per core:    1\nCore(s) per socket:    1\nSocket(s):             1\nNUMA node(s):          1\nVendor ID:             GenuineIntel\nCPU family:            6\nModel:                 63\nModel name:            Intel(R) Xeon(R) CPU E5-2650 v3 @ 2.30GHz\nStepping:              2\nCPU MHz:               2294.686\nBogoMIPS:              4589.37\nVirtualization:        VT-x\nHypervisor vendor:     VMware\nVirtualization type:   full\nL1d cache:             32K\nL1i cache:             32K\nL2 cache:              256K\nL3 cache:              25600K\nNUMA node0 CPU(s):     0\n. @apakhomov \nWe are having only Single CPU linux machines right now. But can try for high no of cpu machine if that may be the problem.\nvmstat -a 2 ->>>>>>>>>>>>>>>>>>>>>>>\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free  inact active   si   so    bi    bo   in   cs us sy id wa st\n11  0      0 51067292 5061112 5668864    0    0   212   504 1231 1777 11  4 84  0  0\n 9  0      0 51005736 5082844 5707828    0    0     0  2826 1978 4278 52 11 36  2  0\n 0  0      0 50971608 5080904 5743480    0    0     0   266 4843 3429 64  9 27  0  0\ntop ->>>>>>>>>>>>>>>>>>\n PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND \n30310 dgangwar  20   0 1122228  94080  34600 S 29.3  0.1   0:00.91 chrome\n29279 dgangwar  20   0 1128816 162572  41604 S 21.0  0.2   0:09.25 chrome\n29887 dgangwar  20   0 1121932 153352  33788 S 15.7  0.2   0:04.82 chrome\n29084 dgangwar  20   0  586764  88268  55396 R  6.0  0.1   0:01.33 chrome\n30193 dgangwar  20   0  581132  77816  48592 S  4.3  0.1   0:00.33 chrome\n23632 vagrant   20   0 3575444  99960  42148 S  2.7  0.2   8:05.09 VBoxHeadless\n29803 dgangwar  20   0  579852  76136  48560 S  2.7  0.1   0:00.74 chrome\n29905 dgangwar  20   0  184196  44012  14148 S  2.7  0.1   0:10.30 Xvfb\n  784 root      20   0    4372    592    496 S  2.3  0.0   1:34.18 rngd\n29069 dgangwar  20   0  385696   8324   6440 S  2.0  0.0   0:00.63 chromedriver-2.\n30431 dgangwar  20   0  184196  43912  14148 S  1.3  0.1   0:07.08 Xvfb\n29797 dgangwar  20   0  385696   8272   6436 S  0.7  0.0   0:00.30 chromedriver-2.\n30509 dgangwar  20   0  184132  43952  14156 S  0.7  0.1   0:07.87 Xvfb\n   11 root      20   0       0      0      0 R  0.3  0.0   0:05.92 rcuos/0            \niostat -dx 2 ->>>>>>>>>\nLinux 3.10.0-327.3.1.el7.x86_64     23/12/15    x86_64    (1 CPU)\nDevice:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util\nsda               0.01     0.66    2.56    8.76    78.99   330.91    72.40     0.06    5.64    3.04    6.40   0.81   0.92\ndm-0              0.00     0.00    2.46    9.35    72.60   323.06    66.99     0.07    5.75    3.11    6.45   0.77   0.91\ndm-1              0.00     0.00    0.01    0.00     0.17     0.00    39.37     0.00    0.82    0.82    0.00   0.66   0.00\ndm-2              0.00     0.00    3.91    6.77   131.85   160.49    54.71     0.01    1.08    0.31    1.52   0.23   0.24\ndm-3              0.00     0.00    0.12    0.06     3.92     1.84    63.75     0.00    1.56    1.22    2.22   0.79   0.01\ndm-4              0.00     0.00    0.16    0.07     3.82     1.92    51.14     0.00    0.57    0.28    1.26   0.38   0.01\ndm-5              0.00     0.00    0.43    0.56    18.63    11.60    60.80     0.00    1.92    1.64    2.14   0.73   0.07\ndm-7              0.00     0.00    0.43    0.87    18.65    18.06    56.22     0.00    2.07    2.39    1.91   0.94   0.12\ndm-6              0.00     0.00    0.43    0.73    18.64    14.79    57.38     0.00    2.14    2.82    1.73   0.89   0.10\ndm-8              0.00     0.00    0.43    0.58    18.63    12.22    60.64     0.00    2.07    2.37    1.85   0.90   0.09\ndm-9              0.00     0.00    0.43    0.48    18.63     9.90    62.44     0.00    2.05    2.41    1.72   0.87   0.08\n. @apakhomov  I am running 3 browsers in parallel. I will try to get machine with more core and try.\nvmstat -a 10 20\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free  inact active   si   so    bi    bo   in   cs us sy id wa st\n10  0      0 47149236 6259680 8206400    0    0   169   456 1218  235 10  4 86  0  0\n 4  0      0 46928536 6256164 8430304    0    0    82  4240 2750 2615 69  5 26  0  0\n 4  0      0 46935240 6258192 8421368    0    0     0   529 2461 2307 48  3 48  0  0\n 2  0      0 46928140 6263056 8423372    0    0     0 11878 2882 3084 71  6 23  0  0\n 0  0      0 47175648 6223544 8218032    0    0     0  1231 2336 2540 62  4 34  0  0\n 0  0      0 47177992 6223344 8215560    0    0     0   705 2081 2542 49  3 48  0  0\n 0  0      0 47188460 6223668 8205020    0    0     0  8142 2625 2856 59  4 36  1  0\n 0  0      0 47189932 6225764 8202296    0    0     0  1173 2109 2615 54  4 42  0  0\n 0  0      0 47194840 6228796 8193536    0    0     0  1139 2436 2661 58  3 39  0  0\n 0  0      0 47174776 6231196 8212164    0    0     0   976 2293 2455 60  4 37  0  0\n 6  0      0 47171472 6234908 8211608    0    0     0  1656 2469 2578 63  3 33  0  0\n 1  0      0 47198740 6234960 8183636    0    0     0   200 2596 2758 59  4 37  0  0\n 6  0      0 47180492 6235400 8201684    0    0     0  1345 2156 2667 61  4 35  0  0\n 0  0      0 47174580 6235932 8206248    0    0     0   632 2454 2740 53  4 43  0  0\n 0  0      0 47195208 6235996 8186980    0    0     1   409 1577 2461 39  3 58  0  0\n 0  0      0 46981336 6272448 8361708    0    0     0  2819 2127 2634 39  5 56  0  0\n 0  0      0 46906676 6273964 8434256    0    0     0  1332 2075 2453 44  3 53  0  0\n 6  0      0 46892484 6279140 8443024    0    0     0  2850 2477 2654 54  5 41  0  0\n 0  0      0 46832508 6281572 8499820    0    0     0  8882 2627 2792 63  4 32  0  0\n 0  0      0 47134704 6241460 8240628    0    0     2   863 2370 2582 53  4 43  0  0\n. @apakhomov\nI got the CPU increase from 1 -> 2 but still do not see any improvement with the test execution. I also tried to attach a normal node to the Docker grid hub and could see that the the Test command and rendering on the non docker node is vey very slow. \n@philjones88 , Did you get a success in improving the test execution time??\n. I was able to get the timeout and browsertimeout value working for my grid setup. I tried using docker-compose file.\nhub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\n  privileged: true\n  environment:\n    - GRID_BROWSER_TIMEOUT=100000\n    - GRID_TIMEOUT=90000\nfirefox:\n  image: selenium/node-firefox\n  ports:\n    - \"5900\"\n  links:\n    - hub\nchrome-debug:\n  image: selenium/node-chrome-debug\n  links:\n    - hub\n  ports:\n    - \"5900\"\n  volumes:\n    - /dev/shm:/dev/shm\n.  Try this code. It worked for me.\nDesiredCapabilities cap = new DesiredCapabilities().firefox();\n FirefoxProfile profile = new ProfilesIni().getProfile(\"default\");\n cap.setCapability(FirefoxDriver.PROFILE, profile)               profile.setPreference(\"xpinstall.signatures.required\", false);\n. On Latest version, node registration is working Fine.\n. @davehunt is there any update about the fix #251\n. Hi @davehunt , When can we expect this pull request to be merged and available for public to use?\n. ",
    "raveeolee": "+1. Somebody knows how?\n. ",
    "rshidling": "+1\n. ",
    "carlosmmelo": "+1 \nI'm having the exact same issue as described above..... thanks @viveksoundarrajan for sharing that other repository in the meantime... will give it a shot today.\n. Alright guys I identified whats the issue, its even mentioned on the readme files however its not updated everywhere.\nThe issue is that Chrome crashes on docker version 1.10 and up, the workaround to this issue is to use the following arg/value in your nodes command: -v /dev/shm:/dev/shm\nThis is mentioned in the above repo mentioned by @viveksoundarrajan here: https://github.com/elgalu/docker-selenium#chrome-crashed\nif your tests crashes in Chrome you may need to increase shm size or simply start your container by sharing -v /dev/shm:/dev/shm\nThis is also mentioned in the original selenium docker repo as well here: https://github.com/SeleniumHQ/docker-selenium#running-the-images\n```\nWhen executing docker run for an image with chrome browser please add volume mount -v /dev/shm:/dev/shm to use the host's shared memory.\n$ docker run -d -p 4444:4444 -v /dev/shm:/dev/shm selenium/standalone-chrome:2.53.1\n```\nThe reason why most people miss this from the documentation is that the original selenium docker repo only includes this in the standalone section and it does not include this information at the nodeschrome nor nodefirefox samples.......\nIt will be good if the readme is updated in a way that this is not missed anywhere.\nso the way I'm using this with the original repo is as follow:\nHUB\ndocker run -p 4444:4444 -d -P --name selenium-hub selenium/hub\nNODES\ndocker run -d -v /dev/shm:/dev/shm --link selenium-hub:hub selenium/node-chrome\nPlease give it a try :)\n. Just faced this issue when upgraded my NodeChrome from 3.4.0 to 3.6.0.\nSo whatever was updated in the dockerfile for 3.6.0 image its introducing this issue.. https://github.com/SeleniumHQ/docker-selenium/issues/559. so this is working on node-chrome version 3.4.0-chromium\nHowever from 3.4.0-francium and above, it started to fail when you try to maximize the browser's window size. (self.driver.maximize_window())\n. ",
    "Venkat-18": "+1\n. ",
    "unickq": "There is an update, REMOTE_HOST is obsolete. SE_OPTS is the new one\ndocker run -d -p 5558:5555 -e SE_OPTS=\"-host 192.168.20.60 -port 4444\" -e HUB_PORT_4444_TCP_ADDR=\"192.168.20.60\" -e HUB_PORT_4444_TCP_PORT=\"4444\" --name firefox selenium/node-firefox. ",
    "rakeshnambiar": "Hi @ddavison .. Does it meant that the Firefox browser works without mount any volume?. Hi, @ddavison @carlosmmelo I am facing this issue in docker-compose version 3. Please check the below details and advise.\n--- Chrome\nINFO] Running Feature: Search by keyword\nJun 13, 2018 5:06:03 PM org.openqa.selenium.remote.DesiredCapabilities chrome\nINFO: Using new ChromeOptions() is preferred to DesiredCapabilities.chrome()\n    ?[31mGiven ?[0m?[31mI am Scientist?[0m                                                        ?[90m# EbiSearchScenarioSteps.i_am_Scientist()?[0m\n      ?[31mnet.serenitybdd.core.exceptions.SerenityManagedException: http could not be reached\n--- Firefox\nINFO: Using new FirefoxOptions() is preferred to DesiredCapabilities.firefox()\n    ?[31mGiven ?[0m?[31mI am Scientist?[0m                                                        ?[90m# EbiSearchScenarioSteps.i_am_Scientist()?[0m\n      ?[31mnet.serenitybdd.core.exceptions.SerenityManagedException: http could not be reached\nyaml file as follow \nversion: \"3\"\nnetworks:\n - prodnetwork\ndriver: bridge\nservices:\n   selenium-hub:\n        image: selenium/hub\n        container_name: selenium-hub\n        networks:\n          - prodnetwork\n        ports:\n          - \"4444:4444\"\n   chrome:\n        image: selenium/node-chrome\n        depends_on:\n          - selenium-hub\n        volumes:\n          - browser_vol:/usr/src/browservolume\n        networks:\n          - prodnetwork\n        environment:\n          - HUB_HOST=selenium-hub\n          - HUB_PORT=4444\n        ports:\n          - \"5910:5910\"\n   firefox:\n        image: selenium/node-firefox\n        depends_on:\n          - selenium-hub\n        volumes:\n          - browser_vol:/usr/src/browservolume\n        networks:\n          - prodnetwork\n        environment:\n          - HUB_HOST=selenium-hub\n          - HUB_PORT=4444\n        ports:\n          - \"5911:5911\"\nvolumes:\n   browser_vol:\nnetworks:\n   prodnetwork:. Hi, @rmanyala916  I am facing this issue in docker-compose version 3. Please check the below details and advise.\n--- Chrome\nINFO] Running Feature: Search by keyword\nJun 13, 2018 5:06:03 PM org.openqa.selenium.remote.DesiredCapabilities chrome\nINFO: Using new ChromeOptions() is preferred to DesiredCapabilities.chrome()\n?[31mGiven ?[0m?[31mI am Scientist?[0m ?[90m# EbiSearchScenarioSteps.i_am_Scientist()?[0m\n?[31mnet.serenitybdd.core.exceptions.SerenityManagedException: http could not be reached\n--- Firefox\nINFO: Using new FirefoxOptions() is preferred to DesiredCapabilities.firefox()\n?[31mGiven ?[0m?[31mI am Scientist?[0m ?[90m# EbiSearchScenarioSteps.i_am_Scientist()?[0m\n?[31mnet.serenitybdd.core.exceptions.SerenityManagedException: http could not be reached\nyaml file as follow\nversion: \"3\"\nservices:\nselenium-hub:\nimage: selenium/hub\ncontainer_name: selenium-hub\nports:\n- \"4444:4444\"\nchrome:\nimage: selenium/node-chrome\ndepends_on:\n- selenium-hub\nvolumes:\n- browser_vol:/usr/src/browservolume\nenvironment:\n- HUB_HOST=selenium-hub\n- HUB_PORT=4444\nports:\n- \"5910:5910\"\nfirefox:\nimage: selenium/node-firefox\ndepends_on:\n- selenium-hub\nvolumes:\n- browser_vol:/usr/src/browservolume\nenvironment:\n- HUB_HOST=selenium-hub\n- HUB_PORT=4444\nports:\n- \"5911:5911\"\nvolumes:\nbrowser_vol:\nShould I explicitly mention the networks as above?. version: \"3\"\nnetworks:\n - prodnetwork\ndriver: bridge\nservices:\n   selenium-hub:\n        image: selenium/hub\n        container_name: selenium-hub\n        networks:\n          - prodnetwork\n        ports:\n          - \"4444:4444\"\n   chrome:\n        image: selenium/node-chrome\n        depends_on:\n          - selenium-hub\n        volumes:\n          - browser_vol:/usr/src/browservolume\n        networks:\n          - prodnetwork\n        environment:\n          - HUB_HOST=selenium-hub\n          - HUB_PORT=4444\n        ports:\n          - \"5910:5910\"\n   firefox:\n        image: selenium/node-firefox\n        depends_on:\n          - selenium-hub\n        volumes:\n          - browser_vol:/usr/src/browservolume\n        networks:\n          - prodnetwork\n        environment:\n          - HUB_HOST=selenium-hub\n          - HUB_PORT=4444\n        ports:\n          - \"5911:5911\"\nvolumes:\n   browser_vol:\nnetworks:\n   prodnetwork:. @diemol ..  I am facing this issue on OpenShift. May I know which environment variable I should pass to resolve this issue?. @gael-wogenstahl .. It's working for me when I run sudo permission on docker. But in the cloud openshift I don't have sudo permission and facing the stated issue. Since it's not a pure docker installation I couldn't find the folder which you mentioned to deactivate the namespace.. @ddavison .. I have tried with the latest images available on the Docker Hub and facing the same issue in OpenShift cloud. Could you please help?. ",
    "apakhomov": "No need to rebuild image for node. You can add config.json as a volume into the containers. \n. For Chrome use certutil from libnss3-tools to prepare db with cacerts:\ncertutil -d sql:~/.pki/nssdb -A -t TC -n \"name_is_here\" -i /path_to_cert.crt\nAfter that mount nssdb as a volume into container\nAlso you can run browser in insecure mode without checkings certs at all\n. Node logs please. \n. One of the most frequent issues with chrome in docker container is small size od /dev/shm . It's easy to check with launching chrome container with /dev/shm mounted from the host. Simply add to docker-compose.yml:\nvolumes:\n- /dev/shm:/dev/shm\nIf the problem's gone, you are to increase shm size (there is a number of ways). \nIt's not good to mount host's shm due to security aspect, but for testing purposes it's the simpliest way\n. @alexellis \nI use this way (I know, \"privileged\" is not good, but it's testing environment, so security is not so important). Hope, this helps:\ncat docker-compose.yml\nnodechrome:\n  image: selenium/node-chrome\n  volumes:\n    - ./resources:/usr/lib/selenium/resources:ro\n    - ./config.json:/opt/selenium/config.json:ro\n    - ./pre_entry_point.sh:/opt/bin/pre_entry_point.sh\n  privileged: true\n  command:\n    - /opt/bin/pre_entry_point.sh\n  environment:\n    - HUB_PORT_4444_TCP_ADDR=selenium-grid\n    - HUB_PORT_4444_TCP_PORT=4444\ncat pre_entry_point.sh\n!/bin/bash\necho -e \"Re-mounting shm and tmp\\n\\n\"\nsudo umount -l /dev/shm\nsudo umount -l /tmp\nsudo mount -t tmpfs -o size=1024m tmpfs /dev/shm #use your values there\nsudo mount -t tmpfs -o size=512m tmpfs /tmp\necho -e \"\\n\\n\"\ncat /proc/mounts\necho -e \"\\n\\n\"\ndf -h\necho -e \"\\n\\nStarting node\\n\\n\"\n. /opt/bin/entry_point.sh\n. I think it'll be useful to split jvm and selenium opts into 2 vars\n. We always increase Xmx, as grid begins to complain with default settings at 500+ working browsers. Also I prefer to pass settings (timeouts, etc) to grid via cli parameters - in this way you can see startup settings in process list\n. There is no problem with launching hub and node on different machines. Simply run node with env vars, pointing to grid host and port (for ex. -e HUB_PORT_4444_TCP_ADDR=addr here HUB_PORT_4444_TCP_PORT=port). For the purpose of not using nf_conntrack in hub and node interconnection, you can use Weave network (and also its DNS). \n. @dgangwar \ndocker-compose.yml:\n  environment:\n    - HUB_PORT_4444_TCP_ADDR=selenium-grid\n    - HUB_PORT_4444_TCP_PORT=4444\n. docker version, docker storage driver, system configuration, vmstat, iostat please? There are lots of reasons causing docker+chrome+selenium perform slowly.\n. first of all, check disk load and use tmpfs for /tmp. chrome becomes significantly faster when using its cache, placed in ram\n. @dgangwar \nYou are comparing execution time on i7 / 16Gb ram with E5/ less than 2GB. Am I right?\nI can't see your swap in dynamics, but it seems to me, that you don't have enough memory..\nSwapTotal: 2097148 kB\nSwapFree: 84228 kB\nans practically no free and cached mem...\nTry to run tests and watch on swap i/o and cpu iowait time.\n. @dgangwar \nShow \"vmstat -a 2\", top/atop/htop heading with expanded cpu info, iostat -dx 2 (all during running tests).\n. Could you provide a longer vmstat's output? 3 lines is not enough. You can increase interval to 5-10 seconds and do 20-30-... measures to see cpu usage dynamics.. As I can see by 3rd line, cpu idle is only 27% and is probably increasing.. \nHow many threads/browsers do your tests use? It's likely you are to add cores..\n. Try to use this solution and please write the result. \nWe use such config and chrome in docker is significantly faster than previous solution with KVM guests\npre_entry_point.sh:\n```\n!/bin/bash\necho -e \"Re-mounting shm and tmp\\n\\n\"\nsudo umount -l /dev/shm\nsudo umount -l /tmp\nsudo mount -t tmpfs -o size=1280m tmpfs /dev/shm\nsudo mount -t tmpfs -o size=768m tmpfs /tmp\necho -e \"\\n\\n\"\ncat /proc/mounts\necho -e \"\\n\\n\"\ndf -h\necho -e \"\\n\\nStarting node\\n\\n\"\n. /opt/bin/entry_point.sh\n```\ndocker-compose.yml :\n```\nnode-chrome:\n  image: selenium/node-chrome-debug:2.48.2\n  volumes:\n    - ./pre_entry_point.sh:/opt/bin/pre_entry_point.sh\n  privileged: true\n  command:\n    - /opt/bin/pre_entry_point.sh\n  environment:\n    - HUB_PORT_4444_TCP_ADDR=selenium-grid\n    - HUB_PORT_4444_TCP_PORT=4444\n    - TZ=Europe/Moscow\n```\n. +1\n. > the port that the container uses shouldn't matter.\nIn case of net=host it matters. I don't want to use custom network, port forwarding, nat as it's overhead for my case. I use host's network stack directly and it works until I need to launch more than 1 container with vnc. This is one of the cases I need to use custom images instead of official. ",
    "serialbandicoot": "Hi @alexkogon, @ddavison, @diemol,\nI can still reproduce this issue with Selenium Grid Console v.3.12.0. Would you please be able to elaborate further on changing the timeouts?\nthanks...\n. ",
    "Niceplace": "@serialbandicoot There's a regression introduced in selenium > 3.8, should be fixed in 3.13\u00ad.\nIf you want more information on how to deal with timeouts, I encourage you to have a look at this issue (https://github.com/SeleniumHQ/selenium/issues/5908) , there is a workaround in there (using SE_OPTS) that I tested not to long ago with 3.12, it works.\n. Reproduced on 3.12, here's attached docker-compose, just start it and navigate to http://localhost:4444/grid/console/, in the node's configuration tab, timeouts are not set at 90 like they should be.\n```\nversion: \"3\"\nservices:\n  selenium-node-chrome:\n    image: selenium/node-chrome-debug:3.12\n    container_name: selenium-node-chrome-1\n    depends_on:\n      - selenium-grid\n    volumes:\n      - /dev/shm:/dev/shm\n      - /dev/urandom:/dev/random\n    environment:\n      - HUB_HOST=selenium-grid\n      - SCREEN_WIDTH=1920\n      - SCREEN_HEIGHT=1080\n      - SCREEN_DEPTH=24\n      - DBUS_SESSION_BUS_ADDRESS=\"/dev/null\"\n    networks:\n      - test-network\n    ports:\n      - 5900:5900\nselenium-grid:\n    image: selenium/hub:3.12\n    container_name: selenium-grid\n    environment:\n      - GRID_TIMEOUT=90\n      - GRID_BROWSER_TIMEOUT=90\n      - GRID_MAX_SESSION=2\n    ports:\n      - \"4444:4444\"\n    networks:\n      - test-network\n```\nIncluded screenshot of selenium grid console: \n\nThis seems like a regression from 3.8.1 (also tested, just change the version in the docker-compose file above), we would love to upgrade our selenium grid but unfortunately we cannot because of this problem. \n@diemol @ddavison @mtscout6 I understand that there maybe are some issues that are more of a priority but is there any chance this going to be fixed soon ? Your help would be much appreciated :) !. It seems to be the exact issue yes, do you suggest I follow-up in the thread itself instead ? \n\nBecause it does look as an issue in the Grid itself, and what docker-selenium does is just to put the Grid in a container.\n\nOh, my apologies ! I didn't quite think this through.. ",
    "jatinkapoor": "@apakhomov, @alexellis, @ddavison  Hi, I am facing a similar problem , I am creating an image by basing my image on chrome node debug, and I am creating a nssdb with my application certs in the image itself.\n When i am opening the application manually on the chrome node via vnc viewer it's working fine and certs are available in the chrome certificate authority but those certs are not available when I am running the browser through webdriver. I think \"seluser\" is not using the same nssdb location as root user.  \nLet me know is there is workaround on this.  \n\nFROM selenium/node-chrome-debug:2.53.1\nUSER ROOT\nRUN apt-get update -qqy \\\n  && apt-get -qqy install \\\n    curl\nRUN apt-get update -qqy \\\n  && apt-get -qqy install \\\n    libnss3-tools\nRUN curl -k https://xxxxxxxxxx/cacerts/cacerts/1.8/cacerts-1.8.jar -o /tmp/cacerts && mv /tmp/cacerts  /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security\nRUN curl http://xxxxxxxxxxRoot.crt -o xxxxxx.pem \\\n && curl http://xxxxxxxx%20CA01.crt -o xxxxxxx.pem \\\n RUN mkdir -p $HOME/.pki/nssdb\n RUN certutil -d sql:$HOME/.pki/nssdb -N --empty-password\n RUN certutil -d sql:$HOME/.pki/nssdb -A -t \"TC,C,T\" -n xxxxx.pem -i xxxxxx.pem \n//For debugging\nRUN certutil -d sql:$HOME/.pki/nssdb -L\n. ",
    "mathieu-pousse": "+1\n. this one has been fixed with the last continuous integration run\n@rubytester i think you can close this one\n. if this is a selenium option, you must now provide this value in the SE_OPTS environment variable. checkout the readme, it has been updated about that\n. @rubytester you can close this one I think\n. And voila, \nEnjoy (CLA signed)\nthx\n. Yes, I must provide the http_proxy and https_proxy in my environment and those variables are lost in \"debug mode\"\nThe way to reproduce it in a similar env is the following: \n``` bash\nstart a container with environment variable ANYTHING\n$ docker run -it -e ANYTHING=123 ubuntu:14.04 bash\nit is available\nroot@f29746d3ae3d:/# env | grep ANYTHING\nANYTHING=123\ncreate a user seluser as in docker-selenium images\nroot@f29746d3ae3d:/# adduser seluser\nAdding user 'seluser' ...\nsudo w/o any option: ANYTHING is not propagated\nroot@f29746d3ae3d:/# sudo -u seluser env | grep ANYTHING\nsudo w -E option (to preserve the current environment variables in the child bash): ANYTHING is propagated\nroot@f29746d3ae3d:/# sudo -E -u seluser env | grep ANYTHING\nANYTHING=123\nsudo w -E -i option (to preserve the current environment variables in the child bash but also run .bashrc (needed to start a browser)): ANYTHING is not propagated\nroot@f29746d3ae3d:/# sudo -E -i -u seluser env | grep ANYTHING\n```\nThe -i option drop all the env variables from the parent, regardless of other options as -E\nThe only way I found to make it work is here in my commit\nHIH\n. here we are, yes i've signed the CLA\nthx\n. Well done! Could you tell me if the CI does push the new docker images on the docker hub every time there is a commit on the master?\nThis is to know when I could rely on official images instead of using the one from our fork.\nThanks in advance for the response and for what you do with OSS !\nM.\n. And voila\n. ",
    "mikewrighton": "PR #47 seems to be about JVM options - there is a comment about adding -Xmx1024m, for example. (fwiw I think being able to control the heap is essential for this project.)\nMaybe there should be another variable for adding extra Selenium options?\nRegarding CircleCI, I've never used it before but I was playing around with my account settings and from what I can tell it's now building successfully. Although I don't see the results in here...\n. @rubytester sure, will update the PR shortly.\n. @rubytester Looks good to me.\n. @rubytester I just signed it. Thanks for your help.\n. So my guess is that a 0 value means never timeout.\nWith the GRID_UNREGISTER_IF_STILL_DOWN_AFTER variable defaulted to 30 seconds, it seems like  nodes that take longer than 30 seconds to respond (e.g. because they're accessing a slow web page) will get deregistered. That's certainly what appears to be happening in my setup.\nWouldn't it make more sense for these timeouts to be switched around so that GRID_UNREGISTER_IF_STILL_DOWN_AFTER is infinite, and GRID_BROWSER_TIMEOUT is 30 seconds? That way, if a command takes longer than 30 seconds, it fails but the node stays registered?\n. ",
    "jskjons": "oops, it looks like this is a duplicate of #119 \n. ",
    "gilo": "Thanks, I found the link u sent after writing. It did solved the problem. Though it feels like the chrome in docker is less stable (than without). Do u know a good way to track chrome crashes in containers ?\n. ",
    "pauldraper": "I see similar symptoms, though I am not using Docker.\n\nThe Chrome may have crashed.\n\nHow can I verify/debug this?\n. ",
    "tiaguiar": "Hi @mathieu-pousse thanks! it works now!\n. ",
    "philjones88": "Apologies. OSX is to blame with .local lookup problems. We added the ipv6 ip to the /etc/hosts file and it's now instant. Closing!\n. Hi,\nWe're suffering a very similar issue. A full test run on a late 2013 MBP Pro Retina, i7 with a VM Ware Fusion docker host (Ubunut 14,04.2 LTS, 2 cores + 2gb of ram) passes in around 35 mins\nHowever when we moved this to our server infrastructure, a Ubuntu 15.10 VM inside a ESXI 5.x host with 4 xeon cores and 4gb of RAM, the tests take around 1 hour 40 mins to run, not pass, a lot fail we think due to very high CPU usage and the machine struggling.\nWatching the execution using the -debug chrome image and VNC Viewer we can see it is very slow to render pages.\nOur gut instinct comparing developer machines to the server, is that chrome isn't getting any kind of GPU acceleration. However we haven't ruled out proxy issues etc but that seems less likely as everything is inside docker and networked together.\nDocker version 1.9.1\nselenium docker images are latest\n. I increased from 2 to 4 CPUs (Xeon in ESXI) and 8gb of ram. No speed increase anywhere near how my old MBP does.\nMy plan for next year is to see if it's just because it's a few year old Xeon and ESXI hardware. We are getting a brand new dual CPU Xeon server with 256gb of RAM and a few TB of storage and SSD space. I will migrate my docker host VM to this and see if it makes a difference.\nIf you look in chrome://gpu when connected to a debug chrome node on my MBP I can see GPU is enabled but lots of disabled and warnings on the Xeon server.\nI still think the tests are slower due to the DOM and other stuff having to be done on the CPU.\nIf the new server doesn't speed up execution our next step will be to attempt a server GPU or simply buy a few desktop grade computers to try.\nSent from my iPhone\n\nOn 25 Dec 2015, at 09:00, Dharmesh Gangwar notifications@github.com wrote:\n@apakhomov\nI got the CPU increase from 1 -> 2 but still do not see any improvement with the test execution. I also tried to attach a normal node to the Docker grid hub and could see that the the Test command and rendering on the non docker node is vey very slow.\n@philjones88 , Did you get a success in improving the test execution time??\n\u2014\nReply to this email directly or view it on GitHub.\n. Unfortunately not on my end. We threw brand new expensive hardware at the issue and it seems closer to what the developer MBP's get.\n\nWe get the same GPU result in Chrome even with the latest ESXI version.\nStill heavy CPU usage but the new Xeons have more power so, kind of a fix...\n. I'm on version: Version 1.11.1-beta13.1 (build: 8193) and this issue seems to happen to me. Using the debug version of node-chrome (node-chrome-debug).\n. \ud83d\udc4d  having issues suddenly with protractor and accepting alert's and the new version\n. @diemol I had a quick look but it's a fork and I was hoping this would eventually be built into this repo it's self. I wanted to avoid forks and relying on third parties.. ",
    "golonzovsky": "+1\n. @SpencerMalone thanks! Was looking for this kind of param :)\n. ",
    "kxlt": "+1 to keeping the env variables. I'm facing the same situation as @SpencerMalone, running this on RHEL6 and can't upgrade Docker beyond 1.7.1.\n. ",
    "defender": "Hi \nThere is another problem that currently is not solved in current solution. In case you want to run hub and nodes on different machines but also several nodes containers per machine.\nIt means that you should manage node external ports by yourself. In case you will run it with -p :xxx we will have connectivity problem.  Hub will not be able connect node because his port is unknown.\nMy suggestion is \n1. Mount docker to node container we will get docker inside docker.\n2. Now we can run docker inspect inside node entry_point.sh to retrieve external port and send it to hub with -port parameter \nNow you can run several nodes on same machine and hub on another one \nWDYT ?\nThanks \n. The problem still exists we don't want to work with hardcoded node port.\n. ",
    "alexgorbatchev": "May I suggest to add docker compose information to the readme? I spent a whole evening trying to get a node to connect to the hub with compose using various methods. The details in this issue resolved my issue with node not seeing the hub.\n. ",
    "wfwheele": "+1 for adding current docker-compose instructions to README. +1 to this issue overall \n. ",
    "hurrycaine": "I also set up swarm and then ran into issues connecting.\n@SpencerMalone\n\ndocker run -d --net=SE -e HUB_PORT_4444_TCP_ADDR=selenium-hub selenium/node-firefox:2.48.2\n\nThis did not work for me, it connected to the selenium-hub ok but the node checked in with its eth1 ip which was internal to docker host only. It was not using the ip that the --net was using, which for me was eth0.  \nI had to do as suggested @rubytester and add -e REMOTE_HOST=<outside-ip-of-your-node-vm>\nbut that was not quite right as the hub returned a 500 with Not a correct url to register a remote :\nI had to add http:// in front.\nSo my command looked like something like this\ndocker run -d --name safefoxy4 --net=selenswarm -e HUB_PORT_4444_TCP_ADDR=safe-selenium-hub -e REMOTE_HOST=http://safefoxy4:5555 selenium/node-firefox\nAll swarm did for me in this exercise was allow me to spin up nodes without worrying about externalizing the port, at first it did not seem worth it but it is nice to be able to spin up nodes (sometimes on same servers) and not have to worry about ports.\n. ",
    "Z3r0Sum": "@rubytester My use case is leveraging docker swarm across multiple EC2 instances.  I have a project I wrote - that mimics the essence of docker compose; however, allows me to dynamically scale the project itself.  This way each \"build\" we perform can spinup its own grid infrastructure based on its needs without manipulating a yaml file and running into the state issues that it presents.  Right now, I dynamically gather information about the hub invocation and use link.  I want to use swarm networking across multiple EC2 instances to more effectively leverage the resources I have at my disposal.  Is this actively being worked on?  It seems like Case 2 should work for now and I can test it tomorrow.  Just to verify:\nshell\ndocker run -d -e HUB_PORT_4444_TCP_ADDR=<hub-ip-address> \\\n -e HUB_PORT_4444_TCP_PORT=<4444-usually> \\\n -e REMOTE_HOST=<outside-ip-of-your-node-vm> selenium/node-chrome\n. @kayabendroth Any idea when this will be looked at?  Just trying to get an estimate.\n. Yeah, I'll make those changes tomorrow and try to write some corresponding tests.\n. @elgalu What's the best way to do this?  Adjust the smoke-test.js and add something that hits html5 video via browser.get?  I've never written any javascript before, so any pointers would be helpful.  Thanks!\nEdit: nvm, ignore the below - looks to be a separate project as you noted :)\nAlso, @elgalu after reading your changes, it seems like you added the package into the project base Dockerfile.  I'm guessing we'd prefer it there?  Chrome didn't exhibit the same behavior, so I didn't add it there...\n. @elgalu Should it be done within that JS smoke-test though?\n. ",
    "iamluc": "A little hack to use docker-compose scale and swarm multi-hosts\n```\nversion: '2'\nservices:\n    seleniumhub:\n        image: selenium/hub\nselenium:\n    image: selenium/node-firefox-debug\n    environment:\n        HUB_PORT_4444_TCP_ADDR: \"seleniumhub\"\n        HUB_PORT_4444_TCP_PORT: \"4444\"\n    entrypoint: 'bash -c \"REMOTE_HOST=\\\"http://$$HOSTNAME:5555\\\" /opt/bin/entry_point.sh\"'\n\n```\n. Using a normal Swarm (not swarm mode)\nI launch my nodes like this:\nselenium:\n        image: selenium/node-firefox-debug\n        environment:\n            HUB_PORT_4444_TCP_ADDR: \"seleniumhub\"\n            HUB_PORT_4444_TCP_PORT: \"4444\"\n        entrypoint: 'bash -c \"REMOTE_HOST=\\\"http://$$HOSTNAME:5555\\\" /opt/bin/entry_point.sh\"'\nIt fixes my problem with neworking. I hope it can help you.\n. ",
    "symehmoo": "How can i achieve running docker selenium hub on a instance and multiple other instances that are nodes communicate to my hub \nideally i want to have 1 Hub and 5 node machines (that have 50 chrome browsers & 50 firefox browsers)\nthe yaml file i use with docker compose is \nhub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\nfirefox:\n  image: selenium/node-firefox\n  links:\n    - hub\nchrome:\n  image: selenium/node-chrome\n  links:\n    - hub\nhow can i have multiple hosts\n. ",
    "VAdamec": "With new docker swarm there is problem with scaling, for proper proxy communication you need to pass port, but than there is an with exposing port and scale. This configuration works (1 replica):\n```bash\ndocker network create --driver overlay --subnet 10.0.50.0/24 --opt encrypted seleniumnet\ndocker service create --network seleniumnet --name selenium-hub -p 4444:4444 \\\n--constraint 'node.role == manager' \\\n-e JAVA_OPTS=\"-Xmx512m -DPOOL_MAX=512\" -e GRID_TIMEOUT=600000 \\\n-e GRID_BROWSER_TIMEOUT=600000 selenium/hub\ndocker service create --network seleniumnet --name selenium-node-chrome-300 \\\n--constraint 'node.role == worker' \\\n-p 5556:5556 \\\n--mount type=bind,source=/dev/shm,target=/dev/shm \\\n-e HUB_PORT_4444_TCP_ADDR=swarm.service.dc1.consul -e HUB_PORT_4444_TCP_PORT=4444 -e NODE_MAX_INSTANCES=10 -e NODE_MAX_SESSION=10 \\\n--replicas 1 selenium/node-chrome:3.0.0-cerium bash -c 'SE_OPTS=\"-host swarm.service.dc1.consul -port 5556\" /opt/bin/entry_point.sh'\ndocker service create --network seleniumnet --name selenium-node-firefox-300 \\\n--constraint 'node.role == worker' \\\n-p 5557:5557 \\\n--mount type=bind,source=/dev/shm,target=/dev/shm \\\n-e HUB_PORT_4444_TCP_ADDR=swarm.service.dc1.consul -e HUB_PORT_4444_TCP_PORT=4444 -e NODE_MAX_INSTANCES=10 -e NODE_MAX_SESSION=10 \\\n--replicas 1 selenium/node-firefox:3.0.0-cerium bash -c 'sudo systemd-machine-id-setup; SE_OPTS=\"-host swarm.service.dc1.consul -port 5557\" /opt/bin/entry_point.sh'\n```\n# swarm.service.dc1.consul  is DNS record for all servers in Swarm.\nswarm.service.dc1.consul:4444 - grid console\nswarm.service.dc1.consul:5556 - node console for chrome\nswarm.service.dc1.consul:5557 - node console for firefox\nWhen you run scale it stops responding to remote calls. Still finding where is an issue. Anybody run Selenium in new docker swarm setup ?\n. ",
    "haonumen": "@VAdamec  try this code. it worked.\ndocker service create --network seleniumnet --name selenium-node-chrome-300 \\\n--constraint 'node.role == worker' \\\n-p 5556:5556 \\\n--mount type=bind,source=/dev/shm,target=/dev/shm \\\n-e HUB_PORT_4444_TCP_ADDR=swarm.service.dc1.consul -e HUB_PORT_4444_TCP_PORT=4444 -e NODE_MAX_INSTANCES=10 -e NODE_MAX_SESSION=10 \\\n--replicas 1 selenium/node-chrome:3.0.0-cerium bash -c 'SE_OPTS=\"-host $HOSTNAME -port 5556\" /opt/bin/entry_point.sh'\n. ",
    "tparikka": "Related to this info, the use of -e REMOTE_HOST no longer seems to work as of version 17.03.1-ce, throwing the following error.\nREMOTE_HOST variable is DEPRECATED in these docker containers.  Please use SE_OPTS=\"-host  -port \" instead!. At this time, using -e REMOTE_HOST=http://:5555 as recommended in the revised readme causes the following error to be thrown in Docker-Win Version 17.03.1-ce-win5 (10743) (when using docker-compose and a v2 yml file, anyways):\nREMOTE_HOST variable is DEPRECATED in these docker containers.  Please use SE_OPTS=\"-host  -port \" instead!. I would assume it is based on how you are driving the tests. For example, if you are driving the tests with NUnit and marking your test fixtures or the entire assembly with the Parallelizable attribute, NUnit will default to running only as many concurrent tests as you have CPU cores. For NUnit you can override this in AssemblyInfo.cs for whatever assembly drives the tests by setting the LevelOfParallelism attribute.\nMoving from the test assembly side of things, you might also need to set the GRID_MAX_SESSION environment variable in your hub. In the dockerfile GRID_MAX_SESSION defaults to 5 (same as the default if you run the hub natively); using -e GRID_MAX_SESSION=20 should tell your hub server to accept up to 20 sessions concurrently.. @tate-e I was encountering the same exact behavior. Docker Version 17.03.1-ce-win5 (10743), selenium/hub:3.2.0, selenium/node-chrome:3.2.0, Win10, C#/.NET bindings. Browser instances were hanging completely in my node containers and would NEVER release, eventually choking out my entire Selenium grid. I am using docker compose, so my equivalent yml looks like this now:\n\nselenium-hub:\n  image: selenium/hub:3.2.0\n  environment:\n    - \"GRID_MAX_SESSION=15\"\n    - \"GRID_TIMEOUT=180000\"\n    - \"GRID_BROWSER_TIMEOUT=180000\"\n  ports:\n    - \"4444:4444\"\nchrome:\n  image: selenium/node-chrome:3.2.0\n  links:\n    - selenium-hub:hub\n  environment:\n- DBUS_SESSION_BUS_ADDRESS=/dev/null\nshm_size: 512MB\nvolumes:\n- /dev/shm:/dev/shm\n\nI've highlighted what seem in my experience to be the most important stabilizing factors. The environment value is the compose equivalent of what you listed in your straight docker run command, the shm_size is a recommendation I found mentioned at Chromium, and the volumes value comes from the SeleniumHQ docs.. I added logs from the Docker container from an instance where the container seems to have crashed. After the crash, docker ps produces this result:\n\nPS C:\\SeleniumGrid\\Docker> docker ps\nCONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES\n194972adff4f        selenium/node-chrome:3.2.0   \"/opt/bin/entry_po...\"   10 minutes ago      Up 10 minutes                                docker_chrome_3\nc8f8c65e8931        selenium/node-chrome:3.2.0   \"/opt/bin/entry_po...\"   10 minutes ago      Up 10 minutes                                docker_chrome_4\nbd6ed6141914        selenium/node-chrome:3.2.0   \"/opt/bin/entry_po...\"   10 minutes ago      Up 10 minutes                                docker_chrome_2\n5764ce06f6f1        selenium/node-chrome:3.2.0   \"/opt/bin/entry_po...\"   10 minutes ago      Up 10 minutes                                docker_chrome_1\nd1fb08708b24        selenium/hub:3.2.0           \"/opt/bin/entry_po...\"   10 minutes ago      Up 10 minutes       0.0.0.0:4444->4444/tcp   docker_selenium-hub_1\n\nWhile netstat -a shows this result:\n\nActive Connections\nProto  Local Address          Foreign Address        State\n  TCP    0.0.0.0:80             MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:135            MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:443            MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:445            MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1110           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1433           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1536           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1537           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1538           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1539           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1540           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1582           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:1591           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:2179           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:2701           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:3389           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:4155           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:5357           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:5985           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:8003           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:9000           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:9592           MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:16228          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:16279          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:16322          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:16863          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:44399          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:47001          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:49152          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:49153          MilwI-T560-TJP:0       LISTENING\n  TCP    0.0.0.0:49154          MilwI-T560-TJP:0       LISTENING\n  TCP    10.0.75.1:139          MilwI-T560-TJP:0       LISTENING\n  TCP    10.1.1.71:139          MilwI-T560-TJP:0       LISTENING\n\nSo it seems as though the public facing listening port dies but the docker container is still running.. This appears to be actually caused by docker/for-win#426.. @ddavison Looking at TravisCI, the build for the new 3.3.1-arsenic branch failed. I'll try it when it builds and is published to the Docker repo (unless there's a way to get it sooner?). I tried pulling selenium/hub:latest and selenium/node-chrome:latest, had the same results there as I did with americium. The issue does not occur in the 3.2.0 release.\nWhat types of networking conflicts might I have? Internally the containers are using 172.17.0.x. I have no adapters listening on an address or subnet that would conflict with anything on that private range up to 172.17.0.0/16 (though I'm assuming the containers are using a /24). Docker Networking is set up to use a subnet address of 10.0.75.0/24, no conflicts there either.. The issue also appears to be resolved for me as of 3.3.1-Cesium. @Zechtitus and @sporokh can you please try it with :latest or :3.3.1-Cesium specifically and let us know if it's worked? I'll close this issue if I don't hear back within a few days.. @Zechtitus Glad to hear it's working with the latest pull. @taraa62, I suspect you're using the Docker images provided by Appium here, yes? My understanding is that Appium uses WebDriver to automate testing of mobile applications, so what I would suggest is:\n1) Make sure to do a fresh pull with docker pull selenium/hub:3.3.1-cesium as @Zechtitus did\n2) If you still encounter issues, work with the Appium team at their project's GitHub to determine the source of the issue - it could be that their image is using an older release of Selenium, or something else entirely.\nIf the root cause is somewhere in our container we can re-open this issue but I suspect it will be somewhere within Appium's image and ecosystem. I will close this issue unless it's determined that changes need to be made on our side.. @Dhananjayulu You can do this by setting the NODE_MAX_INSTANCES environment variable. If you're using docker run you would include the arguments:\n-e NODE_MAX_INSTANCES=5 -e NODE_MAX_SESSION=5\nreplacing the number 5 with however many browser instances you want to permit. If you're using docker-compose you would include this in the compose for your node-chrome service:\nenvironment:\n - NODE_MAX_INSTANCE=5\n - NODE_MAX_SESSION=5\nYou can see these environment variables defined at the Dockerfile of standalone-chrome. There is information about how these values work on this Stackoverflow post and in the docs for Selenium Grid (they work the same, Docker just changes how you pass the parameters into the node). I also found this Stackoverflow article to be a good reference for writing startup scripts that use docker run without having to type in the entire command every time. If you have more questions reply and tag me and I'll try to answer. I'm also learning this as I go :-). You're welcome! If all your questions are answered can you please close this GitHub issue? Thanks!. @DerFlatulator If you're referring to #425 I have had great success with selenium/hub:3.2.0 and selenium/node-chrome:3.2.0 (as well as node-chrome-debug). However, depending on how heavy you are hitting your Grid you will want to be aware of docker/for-win#426, which the Docker for Windows team is working on - I've had to stop using containers for the moment because under heavy load the VPNKit component of Docker for Windows may fail and require a restart of the entire Docker service to resolve. The workaround for the moment seems to be to use docker-machine to create full machines until the issue can be fully resolved.. @beniamin-kis What environment did you use to build? I gave it a shot with Cygwin on Windows 10 but I ran into issues first with EOL encoding issues in generate.sh and then got this error:\n/bin/sh: 1: /opt/selenium/generate_config: not found\nIf it's possible to build on Windows with Cygwin I'd prefer that, but if it's not possible or it's just better to build on Linux I can spin up a VM and do it that way.. @lasotaartur Not sure if this will help, but try setting shm_size down to 256mb? I hadn't tried setting it to something as large as 1g, but at 256mb Chrome in my containers has been extremely stable.. My one other thought is to try selenium/standalone-chrome:3.2.0 or 3.3.0 and see if using a newer release helps. If it does not, it will help someone who is more technically savvy with the underpinnings of Docker and docker-selenium for you to provide the version of Docker you're using, for diagnostic purposes.. You can get logs from the container with the command docker logs <containername|containerid>. I'm out of other ideas - you've already mapped /dev/shm:/dev/shm and set shm_size as recommended by all the articles I had read and all of the info I was able to dig up. Maybe others here will know more?. I listed all of the commands (except the hub startup) in my original report above.\nStep 1: Start the hub with java -jar C:\\SeleniumGrid\\selenium-server-standalone-3.0.1.jar -role hub -maxSession 20 (the hub is operating on a machine with the address 10.10.1.10 bound to a local NIC)\nStep 2: Start the node with docker run -d --name node101 -p 5595:5555 -e HUB_PORT_4444_TCP_ADDR=10.10.1.10 -e HUB_PORT_4444_TCP_PORT=4444 -e SE_OPTS=\"-host 10.10.1.10 -port 5595\" selenium/node-chrome:3.2.0\nWhere I used 5595 in the -p argument and in SE_OPTS to expose the public-facing port I also tried 5556, 5557, 5558, and other values with no success.. Thank you! I appreciate your time! Let me know if there's any other logs or system info I can provide, or things I should try. I'll be out this afternoon with family but I'll be back around tonight, and then more available tomorrow morning.. @diemol Good catch on the hub version - I hadn't updated the Selenium version on my VM grid in a while, so I did that after seeing your update. What I was anticipating was the ability to forward a designated publicly-facing port through Docker's external network stack to the default internal port of 5555 (using -p for docker run or the \"ports\" argument for compose), and then SE_OPTS (which was the replacement for REMOTE_HOST) to direct the Hub to connect back to a specific port exposed by Docker which would then be forwarded back to 5555 internally on the node container.\nIf this is officially NOT supported and there is no intent to ever support functionality like this, I can close the issue. I'd appreciate a maintainer verifying though before I do so.. Pulled the badge in favor of a link, and added a Community subsection with a link to the Slack channel and the IRC channel info. Fastidious is fine, I appreciate the opportunity to contribute!. @bscheshirwork As said above, there's already an issue open for the 3.3.1 build issues. Are you looking for help specifically with 3.3.0 and Firefox/Geckodriver as well, or can this be closed as duplicate of issue 430?. In looking at the Dockerfile and the generate_config script for the hub, passing the env variable GRID_UNREGISTER_IF_STILL_DOWN_AFTER into the hub is correctly adding an attrib/val pair to the config file. However, looking at the sample JSON files for a Node and a Hub it seems as though unregisterIfStillDownAfter is a node-specific value that the hub would/should ignore and do nothing with. By comparison, the Node generate_config doesn't declare a number of the Node env variables including unregisterIfStillDownAfter. @ddavison am I correct in thinking that we should take some of those Node-specific env variables out of the dockerfile and generate_config for Hub and expose them in the generate_config for the various nodes? If so I can write up a PR for it today, but let me know first in case there's something about Grid that I'm misunderstanding.. @ddavison I have the PR started, and changes made to the Hub, NodeChrome, and NodeFirefox. While working on it I found that NodeChromeDebug, NodeFirefoxDebug, and NodePhantomJS lack a generate_config script but do have an entry_point.sh. In the case of the first two, are they inheriting the generate_config from their non-debug variants or would it be a separate feature request to add that support to the other docker images?\nAlso, is it reasonably possible to build via Cygwin or should I just suck it up and roll a Linux VM to build? I ran into an issue ( $'\\r': command not found) while building in Cygwin and what I found online indicated it was an issue of the EOL encoding difference between *nix and Windows.. I believe you should be able to access popups in the Chrome Standalone container just like if it was a local instance. What version of the container are you using? I.e. 3.3.1, 3.3.0, etc. Which Selenium bindings are you using and what code are you using to call into the handle list?. Can you check the docker logs for your node and see if you are actually encountering the issue described at #425 - the logs you posted are consistent with what I saw on the test side when my boxes were continually deregistering and re-registering.. @Janki2 3.3.1-cesium is the latest release, should fix the problem if what you're seeing is the same issue @brajesheee saw.. I previously logged issue #432 for what I think is the same thing you're describing here and at #307 and at that time the information I was given was that if you're running multiple Selenium node containers manually with docker run, you'll have to assign each container a unique publicly facing port that is the same as the internal Selenium node listening port, like so:\ndocker run -d --name node101 -p 5595:5595 -e HUB_PORT_4444_TCP_ADDR=192.168.2.103 -e HUB_PORT_4444_TCP_PORT=4444 -e SE_OPTS=\"-host 192.168.2.103 -port 5595\" selenium/node-chrome:3.4.0\nYou'd need to do the above as opposed to having multiple public ports exposed that port forward to 5555 on each individual Selenium node. The rationale given by @diemol was that custom port forwarding was out of scope for docker-selenium.. See #432 for information.. You can specify the hub address using the environment variables HUB_PORT_444_TCP_ADDR or HUB_PORT_444_TCP_PORT. For example, if running from command line:\n-e HUB_PORT_4444_TCP_ADDR=10.10.1.10 -e HUB_PORT_4444_TCP_PORT=4444. This sounds like you're describing the issue reported at docker/for-win#426. It was reported in January and has still not been fixed. The Docker team last responded to the ticket April 21, and has not updated since then.. I read the same although I haven't tried it myself so I can't verify. The is solely in Docker itself though, not at all related to anything in our repo.. As you've noticed, our images right now all use Linux base images. They are cleaner, smaller images than you would get than the equivalent windowsservercore or nanoserver images and the toolchain for building our images is geared toward Linux as well. Is there a particular use case you have for using Windows images instead of Linux?. @Geekays: As @smccarthy pointed out there are no GUI apps in the Windows containers and looking at microsoft/virtualization-documentation#214 it looks like there might be no plans by Microsoft to do this in the near future, so running IE docker images just isn't in the cards right now. That said, the OS of your Selenium containers really shouldn't matter (beyond the currently nonexistent containerized Internet Explorer). What I would suggest is writing a PS script (or other as you prefer) that uses docker-compose to instantiate your grid, drives the tests through it using NUnit (or your test framework of choice), grabs the logs and does whatever reporting off of the logs that you need. Because the docker containers are meant to be dispoable you shouldn't be running the test assemblies on them anyways, generally.. @simplyviks Are you using Docker for Windows? If so, can you please look at docker/for-win#426 and let us know if this is the issue you are encountering? There is a known defect in Docker on Windows related to vpnkit that causes sockets placed under heavy load to fail, and become locked until the entire Docker service is terminated and restarted.\nThe issue is known to the Docker team but no one from the contributing team has responded since April 21 so you may want to investigate using Docker on Linux for the time being if you require a stable operating environment.. ",
    "derek-adair": "Adding the version: \"2\" config for docker-compose.yml in the demo's would be quite nice.\nThanks @VolkerK, I only wish I found this BEFORE the hours of debugging and learning how grid works in docker... damnit.. ",
    "TruptiPotdar-Edmodo": "Has anyone found a solution for this one? I am facing a similar issue while working on dockerizing Watir-Webdriver tests while using just a single container\n. Thanks for the reply Phil! :)\nI too am looking into some solutions (to avoid adding more hardware) will\nget back if I do find something\nOn Fri, Jan 29, 2016 at 5:35 PM, Phil Jones notifications@github.com\nwrote:\n\nUnfortunately not on my end. We threw brand new expensive hardware at the\nissue and it seems closer to what the developer MBP's get.\nWe get the same GPU result in Chrome even with the latest ESXI version.\nStill heavy CPU usage but the new Xeons have more power so, kind of a\nfix...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/135#issuecomment-176722997\n.\n\n\nThanks and Regards,\nTrupti Potdar\n. @apakhomov : Actually the case is I am using Watir-Webdriver and Firefox\n. Is there a solution for this? We recently started encountering this one after using driver 2.27 and Chrome 55. ",
    "illegalnumbers": "I've also been experiencing this issue, are there any guides on optimizing the Selenium container?\n. ",
    "rajatjindal": "This issue is still happening. I tried running my tests with 3.4.0 selenium-firefox & selenium-firefox-debug, and they are extremely slow.\nWhen I run same tests using Selenium running on my MAC, they work just fine\ncan we please reopen this ticket and help us investigate what could be wrong here. Hi @ddavison \nthat was for Chrome isn't it? I can give it a shot.\non recommendation of someone in #selenium IRC, i tried same set of tests with Chrome docker container (even this without /dev/shm bit), and they were pretty fast as compared to firefox docker container.\nI think this might be a problem with Firefox container only. Are there any commands/debug steps that I can run to find more information for you?\nThanks\nRajat Jindal. ",
    "dwkerwin": "For me, running a container with selenium/firefox worked fine on my Ubuntu laptop (average 8 seconds per request), but after putting into AWS ECS and putting several containers on the same host, it would work slower for any single request, but if all containers on that host were active at the same time it would come to a screeching halt (minutes/never).  After mounting /dev/shm, there was a big improvement but still too slow to be usable (average 90 seconds per request).  Interestingly, if I launch EC2 t2.micro instances outside of ECS, each running a single docker container (without mounting /dev/shm), they run OK but not great (maybe average of 20 seconds per), but on a larger host if you add multiple with each container using the same amount of RAM and CPU, they are in that 90 second range if all containers are active concurrently.  However if on the larger host I test with only about half the containers being active concurrently, the performance is better (closer to the 20 second range), so it is only when all containers on the host are active.  I  I have tried multiple host instance sizes, and even more than doubling the RAM per container and I still can't get any improvement in performance. So for now I am running outside of ECS on individual t2.micro instances.  I assume this has something to do with swap.  Is there a way to instruct Docker to disable use of swap?  Strange that it can work OK ok a t2.micro with 1GB of RAM buton a larger host when I give the containers 2GB of RAM it's slow if the host has all containers running.  I'm also seeing the same behavior with Chrome.. ",
    "t-node": "I am running the tests inside docker-container with chrome. If i use up to 2 threads, the tests are running fine. However, when i go 3 or above 3 thread, my chrome browsers taking forever to wait for requests to complete. Is there anything i need to work around with my yml while configuring the containers.\nFollowing is my docker-compose yml file:\nversion: \"3\"\nservices:\n  selenium-hub:\n    image: selenium/hub\n    container_name: selenium-hub\n    environment:\n    - GRID_MAX_SESSION=5\n    - GRID_BROWSER_TIMEOUT=100000\n    - GRID_TIMEOUT=90000\n    - GRID_NEW_SESSION_WAIT_TIMEOUT=300000\n    ports:\n      - \"4444:4444\"\n  chrome1:\n    image: selenium/node-chrome-debug\n    restart: always\n    depends_on:\n      - selenium-hub\n    environment:\n      - NODE_MAX_INSTANCES=10\n      - NODE_MAX_SESSION=10\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    ports:\n      - \"5904:5900\"\n    volumes:\n      - /dev/shm:/dev/shm\n  chrome2:\n    image: selenium/node-chrome-debug\n    restart: always\n    depends_on:\n      - selenium-hub\n    environment:\n      - NODE_MAX_INSTANCES=10\n      - NODE_MAX_SESSION=10\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    ports:\n      - \"5905:5900\"\n    volumes:\n      - /dev/shm:/dev/shm\n  chrome3:\n    image: selenium/node-chrome-debug\n    restart: always\n    depends_on:\n      - selenium-hub\n    environment:\n      - NODE_MAX_INSTANCES=10\n      - NODE_MAX_SESSION=10\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    ports:\n      - \"5906:5900\"\n    volumes:\n      - /dev/shm:/dev/shm\n  firefox1:\n    image: selenium/node-firefox-debug\n    restart: always\n    depends_on:\n      - selenium-hub\n    environment:\n      - NODE_MAX_INSTANCES=10\n      - NODE_MAX_SESSION=10\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    ports:\n      - \"5901:5900\"\n  firefox2:\n    image: selenium/node-firefox-debug\n    restart: always\n    depends_on:\n      - selenium-hub\n    environment:\n      - NODE_MAX_INSTANCES=10\n      - NODE_MAX_SESSION=10\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    ports:\n      - \"5902:5900\"\n  firefox3:\n    image: selenium/node-firefox-debug\n    restart: always\n    depends_on:\n      - selenium-hub\n    environment:\n      - NODE_MAX_INSTANCES=10\n      - NODE_MAX_SESSION=10\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    ports:\n      - \"5903:5900\" \n. ",
    "vivanov1410": "ping\n. ",
    "tommyz0123": "+1 \nusing chrome and ff 2.53\n. Docker version 1.11.1, build 5604cbe\nhappen for the debug versions, none debug seems to work fine.\nusing @MartinNuc trick worked.\n. no. i ended up switching to VM for CI.  But, I still use docker for dev work.\n. ",
    "rohantilekar": "+1\n. ",
    "chadxz": "If you're using boot2docker on osx, the host will not actually be localhost, but will be the ip address of the docker vm, which can be obtained via $docker-machine ip $(docker-machine active)\n. ",
    "L0wry": "You have just made my day after a 4 hour trawl online\nThank you!. ",
    "cypa": "no, RDP is much more convenient even with linux client ... I'd treat VNC as obsolete to RDP and SPICE. ",
    "bbarke": "Should this wait until https://github.com/SeleniumHQ/selenium/issues/1495 is resolved before merging?\n. ",
    "davehunt": "2.50 is now out.\n. @kayabendroth updated based on review feedback\n. Rebased, but still a work in progress.\n. So it seems this is working for the first session in a standalone-firefox container, but I couldn't get it to work at all in node-firefox attached to a hub. Running a second session in a standalone-firefox container throws the same exception as attempting to run a session in node-firefox (shown in the issue description).\nI found this question on StackOverflow, which describes a very similar problem. They came to the conclusion that the Marionette port was causing the problem, which suggests that we should either be picking a random free port for this, or make sure we're releasing the port when a session is deleted.\nI'll raise a bug against wires to see how we might address this.\n. @elgalu you're right, this has been replaced by https://github.com/SeleniumHQ/docker-selenium/pull/271\n. @kayabendroth would you mind taking a look at this? I'd like to follow it up with introduction of Selenium 3.0b with GeckoDriver and Marionette support for Firefox 48. I could merge myself, but I'm unfamiliar with the release process.\n. Perhaps @rubytester could help review/merge/release?\n. @kayabendroth would you mind taking another look - I've switch to a for-loop when downloading the Firefox versions now.\n. This has been superseded by #271\n. See #251\n. @dgangwar only what you can already see on that pull. I won't have any time to work on this until next week at the earliest, but anyone else is welcome to pick this up before then and address the comments.\n. @ddavison if your comfortable doing merges on this repo, then would you mind taking a look at #251 which does something similar for the Selenium server component and Firefox?\n. I'm not sure @dgangwar - I think @kayabendroth has been busy with other projects recently. Hopefully they'll have some time to return to this project. Otherwise, perhaps someone else such as @ddavison could help to get this merged and released? I would do it, but I don't have time to commit to this project beyond the occasional patch.\n. ping @ddavison and @kayabendroth \n. @HackToday @ddavison @kayabendroth ready for review again\n. Updated to beta4.\n. @ddavison did you mean to close this? 261242df7a3c146d9691f651efd68b1af4a43a4b does not include the changes for Firefox or Selenium..?\n. The Dockerfile is generated by the make script. See https://github.com/SeleniumHQ/docker-selenium/blob/master/Makefile#L63-L64 for example.\n. There is https://github.com/SeleniumHQ/docker-selenium/pull/271, which includes 3.0-beta3.\n. > (using latest automatically upgraded me to the 3.0.0 beta releases, which broke my build)\nSelenium 3.0 is no longer in beta, and is considered the latest stable version.\n. Looks reasonable to me, though the '-dubnium' indicates docker image updates that do not change the Selenium version in use, so latest would still point to this.\n. > is there an explanation of what -dubnium means anywhere?\nNot sure, but there should be. @ddavison?\n. See https://github.com/mozilla/geckodriver/issues/93 - if you need to run against sites with self-signed certificates then you may need to use the previous release until support for ignoring such security warnings lands in Marionette/GeckoDriver.\n. @ddavison that's correct, from Firefox 52, users are able to set an additional capability to accept insecure certificates.. I'm curious how this would work though, as the changes to node-firefox require the additional bzip package from base. Wouldn't using the version tag cause broken images to be built?\n. Okay, fair enough.. I'll try to get to this and address your comments later today.\n. This is intentional - to allow the user to control which version is used. We wouldn't want to download many versions, but it would allow us for example to include beta versions.\n. This is the version to be used rather than the version(s) to be downloaded. It made more sense to me to move it to after the downloads, but I can move it back if preferred.\n. I agree that a for loop makes sense here, and if I get a chance to work on this I'll update it. I'm out of the office now for a week, and then traveling for 10 days, so I'm not sure how much time I'll have to work on it. I think the environment variable suggestion is too restrictive as we'll need a way of doing pre-releases too. Perhaps a variable which is a list of versions FIREFOX_VERSIONS=45.0.2 46.0.1 47.0.1 which can then be used in the for loop?\n. Like you point out it will only be created if FIREFOX_VERSION is specified. I'm happy to take another approach if you have an idea?\n. This entry point isn't overridden in some of those, so I think I'd rather keep this here than complicate this further. I'll be opening a new pull request after rebasing from the recent changes shortly.\n. The image size will be limited to the versions of Firefox supported. That said, my list here is not correct, as Selenium supports \"the latest release, the previous release, the latest ESR release and the previous ESR release.\" I will therefore update this to be: 49.0.1, 48.0.2, 45.4.0esr, 38.8.0esr.\n. I think it makes sense to keep 47.0.1 for now, as it's the latest version supported without GeckoDriver and is the current default version, and I'd like to allow a release of a new docker image without forcing GeckoDriver before Selenium 3 is out of beta.\n. This is not a requirement of Firefox, but of the Selenium: 2.53.x expects wires but 3.x expects geckodriver.\n. Good idea, I'll update this too.\n. 2.53.x should work against Firefox 47.0.1 with marionette=True. It's the first version of Firefox that was officially supported by GeckoDriver, so there certainly were more bugs in that version than there are in later releases.\n. ",
    "dtinth": "Here\u2019s how we at @taskworld managed to perform video recording into an MP4 file using docker-selenium.\nInstall FFmpeg and MP4Box\nCreate a new image based off docker-selenium and install ffmpeg and gpac:\napt-get update && apt-get install -y ffmpeg gpac && rm -rf /var/lib/apt/lists/*\n\nFFmpeg is used to record the screen\nMP4Box (from package gpac) is used to clean up the recorded file\n\nTake screen recording\nUse docker exec -ti bash to spawn a new shell inside a running container. Run this command to record the video:\nffmpeg -video_size 1360x1020 -framerate 15 -f x11grab -i :99.0 /path/to/recording.mp4\nClean up the MP4 file\nI might be wrong, but after ffmpeg recorded the video, the generated file is not optimized for HTTP streaming. For example, the video will not start until fully loaded and seeking will not work, etc. MP4Box is used to fix this:\nMP4Box -isma -inter 500 /path/to/recording.mp4\n\nHope this helps! Cheers :D. ",
    "stuffandthings": "I'm having this same issue, using 2.50.0 and not via Docker\n. ",
    "slugics": "any way to pass in maxSession and maxInstances to SE_OPTS. I tried following -browser \"maxSession=2,maxInstances=5\" but didnt work\n. Thanks for the prompt reply. I guess that didn't seem to solve my problem. My problem is that tests run and than just get stuck at \"starting chrome driver 2.20\" and nothing happens afterwards. Thought maybe something to do with sessions but thats not the case it seems. Any help would be appreciated. \n. My grid is in EC2 and test do run against the grid.  However after like 10\ntests or less it gets stuck.  Last msg i see in the output is that chrome\nis starting and thats were its stuck till i kill the tests.\nOn Feb 9, 2016 12:27 PM, \"Anton Bacaj\" notifications@github.com wrote:\n\nSo your HUB works and you are able to send a test to it but it is stuck\nstarting chrome?\nHow are you initializing your chrome driver in your code - would need to\nsee some samples.\nMy guess is the hub is not reachable from your code - if you are hosting\nyour hub locally then you should be able to see\nhttp://localhost:4444/grid/console. Are you able to see that url?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/150#issuecomment-182046953\n.\n. Thanks for all your help. One more question. I am not able to add more browser instances. I would like to have more than 1 but whatever I tried it keeps showing only one. I want to see something like in this img attached. Thx\n\n. Ok thanks. Is there a limit of number of nodes I can run? I tried to run 15 and after period of time my docker just crashed. I couldn't even restart the service. I had to kill the entire VM. \n. Its large VM on EC2. Instance Type r3.4xlarge\n. Thanks for all your help. i will give it try with more smaller vm's \n. We have over 2k tests running against our grid which consists of 19 VM's. No issues at all for past two years but wanted to see how I can use docker to reduce the number of VM's\n. I have trouble connecting nodes to my hub when i put them on different vm. What command did you use to run each of them. Here is what i tried.\n\nVM 1\ndocker run  -d -p 4444:4444 -e GRID_MAX_SESSION=2 -e GRID_BROWSER_TIMEOUT=30000 -e  SE_OPTS=\"-timeout 30000\"  --name selenium-hub selenium/hub:2.50.0\nVM 2\ndocker run -d -p 4444:4444 -e REMOTE_HOST=\"http://:4444\"  -e HUB_PORT_4444_TCP_ADDR=\u201c\u201d -e HUB_PORT_4444_TCP_PORT=\"4444\" selenium/node-chrome:2.50.0\nAnything missing here? I do see one of them connect but its showing following error on the grid/console\nDefaultRemoteProxy unknown version,server response code : 500\nThx\n. docker run -d -p 4444:4444 -e REMOTE_HOST=\"http://hubip:4444\" -e HUB_PORT_4444_TCP_ADDR=\u201chubip\u201d -e HUB_PORT_4444_TCP_PORT=\"4444\" selenium/node-chrome:2.50.0\nNot sure why < ip > was removed from my post up there\n. Thanks. I had no luck running the hub separately on different machines. So tried to run hum with 5 nodes on the same machine which is not too much and it worked fine for about 45 min than hub crashed again. Trying to start the hub again I got this message. \nError response from daemon: database or disk is full\nWhat is the log location for the docker? What could be taking up all the disk if that message is correct? \nThx\n. Works just fine for me\nOn Sep 1, 2017 9:56 AM, \"Paul Schroeder\" notifications@github.com wrote:\n\nThe standard 3.4.0 image doesn't work with these variables, either.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/547#issuecomment-326631724,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFJzJqFDHfrbTV9IqmOG2sLtpD2hBmxjks5seDctgaJpZM4PJUAG\n.\n. Nice. Is it in 3.5.3-astatine or should I wait? . Yep, it seems to work now in 3.5.3-boron. Thanks everyone for getting this\nresolved quickly.\n\nSlaven\nOn Thu, Sep 21, 2017 at 9:04 AM, Eyal Zekaria notifications@github.com\nwrote:\n\nWorks for me as well with 3.5.3-boron. @slugics\nhttps://github.com/slugics care to comment?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/547#issuecomment-331203625,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFJzJsa7ABJOr1dNwOrl29GOgVy3uVlMks5skokegaJpZM4PJUAG\n.\n. Issue is fixed. \n",
    "abacaj": "@slugics FYI maxSession=2 will overwrite maxInstances=5, max session at 2 means you can only run 2 total browsers on that node regardless of their type.\nHere is what you want in order to set max session, it is set as an environment variable:\ndocker run -d -p 4444:4444 -e GRID_MAX_SESSION=2 --name selenium-hub selenium/hub:2.50.0\n. So your HUB works and you are able to send a test to it but it is stuck starting chrome?\nHow are you initializing your chrome driver in your code - would need to see some sample code. \nMy guess is the hub is not reachable from your code - if you are hosting your hub locally then you should be able to see http://localhost:4444/grid/console. Are you able to see that url and if you do see it, what do you see... post a screenshot.\nAnother issue is to make sure the selenium node is the same version as the hub i.e with this command:\ndocker run -d --link hub:hub selenium/node-chrome:2.50.0\n. @slugics Are you calling driver.quit() at the end of your test? Your browsers could be hanging and not closing.\nRun your grid with:\ndocker run -d -p 4444:4444 -e GRID_MAX_SESSION=2 -e GRID_BROWSER_TIMEOUT=30000 --name hub selenium/hub:2.50.0\nThis will ensure the browser closes if it hangs for >= 30 seconds, by default it is set to 0 (which is infinite) - thus giving you that output because the browser is never closed and the node is never freed.\n. What is the issue you are having @stenver ? A test that sleeps for 10 minutes isn't really a normal use case here.\n. @slugics because you are using docker you should just initialize more nodes.\nThat is the purpose of docker, multiple containers (browsers of the same type) can run on one machine.\nSo in your screenshot you have 5x chrome browsers - just connect 5 nodes to your hub by repeating this command 5 times on the machine that you want to run chrome:\ndocker run -d --link hub:hub selenium/node-chrome:2.50.0\ndocker run -d --link hub:hub selenium/node-chrome:2.50.0\ndocker run -d --link hub:hub selenium/node-chrome:2.50.0\ndocker run -d --link hub:hub selenium/node-chrome:2.50.0\ndocker run -d --link hub:hub selenium/node-chrome:2.50.0\nHaving one docker container run multiple instances like your screenshot - is not the correct way of handling this. There is performance implications to spawning multiple browsers in one docker container. Excessive memory usage, cpu starvation etc... it is not recommended.\nThis is what you should see instead when using docker containers to run selenium:\n\nHere is one machine running 4 chrome instances:\n\n. I do not use amazon to host my grid - but here are some performance details from my hub:\n- 2 core machine, with at least 7gb of memory: 4 docker containers running Chrome.\n- 2 core machine, with at least 7gb of memory: 4 docker containers running Firefox.\n- 2 core machine, with at least 7gb of memory: 1 docker container running Hub.\nTotal of 8 browsers and 3 machines, you can use smaller machines for less money.\nSelenium grid runs better scaled outward this means more machines, not more cpu or ram.\nYour machine is extremely large and will not perform well with many containers on it regardless of how big it is. I know because I have tried very large D4 machines.\nI recommend, scaling down to smaller machines and get more instances. It will perform much better.\nMake sure the HUB is running on its own instance - this is key for performance.\nRemember each docker container is running a browser - browsers are heavy in terms of CPU. The more browsers you run - the heavier the CPU is being used and the less time each node gets to run.\n. Your welcome - I had to go through this so I learned the hard way haha. \nBut my Production HUB has been active for days now without any issues in terms of performance all because I have scaled it outward. \n. Cool - let me know how it turns out by spreading the docker containers.\nFYI: Our 8 node grid (3 VMs) handles 450 automated requests an hour at about 1minute per automation, this is roughly 10,000 automation requests per day.\n. I would highly recommend using something like ansible for automating your grid deployments - my ansible scripts help avoid the problems you describe, @slugics - but the right command is to expose the default port which is 5555:5555 as @rubytester mentioned.\nAlso do not forget to share the hosts memory when running your chrome container by adding -v /dev/shm:/dev/shm to your docker run command. This is a work around for node-chrome crashing.\n. Need this - firefox node does not work in docker had to build this image from scratch.\n. ",
    "stenver": "I tried overriding the conf.json and also injected environmental variables like GRID_BROWSER_TIMEOUT=30000, but when I have a test which sleeps for 10 minutes, then the browser still closes\n. Sorry for the late response, I didnt have a chance to work with this.\nI wanted to increase the timeout time to practically infinite, so I set it to 86400 seconds(24 hours). This could be used for debugging, developing a site and on some very special cases. \nWhen I used Selenium Grid dockers and used the SE_OPTS or GRID_TIMEOUT, then these timeout values were not respected, the browser shut down inside the containers.\nI proceeded to create my own container and manually set the timeout values with:\nentrypoint.sh\n``` ruby\n!/usr/bin/env bash\nfunction shutdown {\n    echo \"shutting down selenium..\"\n    kill -s SIGTERM $NODE_PID\n    wait $NODE_PID\n    echo \"shutdown complete\"\n}\necho \"Starting xvnc and webdriver:\"\nexport DISPLAY=:1\nXvfb :1 -shmem -screen 0 1600x1440x16 &\nsleep 1\nx11vnc  -rfbport 5900 -passwd vagrant -display $DISPLAY -N -forever -shared &\nsleep 1\nfluxbox -display $DISPLAY &\nsleep 1\necho \"starting selenium with configuration:\"\ncat /opt/selenium/config.json\njava -jar -Djava.security.egd=file:///dev/urandom \\\n  /opt/selenium/selenium-server-standalone.jar \\\n  ${SE_CONF} \\\n  ${SE_OPTS} &\\\nNODE_PID=$!\ntrap shutdown SIGTERM SIGINT\nwait $NODE_PID\n```\nI started the container with the command:\nbash\n$ docker run -i -t -p 4444:4444 -v /dev/urandom:/dev/random --privileged stenver/seleniumhub /bin/bash\n/$ SE_OPTS=\" -browserTimeout 86400 -timeout 86400\" ./opt/bin/start_container.sh\nThis time, the timeout values were respected. \nIn summary, Selenium dockers dont seem to respect the SE_OPTS, GRID_TIMEOUT, or GRID_BROWSER_TIMEOUT values. Currently I got around the limitation by creating my own dockers. I might investigate the issue futher and try to fix it on selenium as well in the coming weeks\n. Thanks, we will try it out!\n. This fixed it, thanks!\n. Any reviewers on this?\n. Jep, thanks!\n. ",
    "Zechtitus": "Just putting this in here as I couldn't get the selenium grid to work with any of the above solutions. (time of writing it was using 2.53.0 version for :latest)\nDocker-compose file:\nversion: \"2\"\nservices:\n  hub:\n    image: selenium/hub:latest\n    ports:\n      - \"4444:4444\"\n    environment:\n      - GRID_BROWSER_TIMEOUT=300000\n      - GRID_TIMEOUT=300000\n      - SE_OPTS=-browserTimeout 100 -timeout 100\nYou can check this by going into the grid and verifying the values http://localhost:4444 - they should correspond to the values you set (in seconds). I have a feeling the GRID_BROWSER_TIMEOUT and GRID_TIMEOUT settings can disappear as well. If your playing around with other settings and want to figure out the right syntax - put them into the docker-compose SE_OPTS var and then do the following:\n1. docker-compose run hub /bin/bash\n2. once inside the docker container run the /opt/bin/entry_point.sh\n3. if there is an error it should be obvious now... if it looks like it succeeded then you can go the route of looking in your http://localhost:4444 and see if the changes were applied\nHope this helps somebody with debugging the docker containers from selenium. I was running into stupid issues with using quotes or not, having : to split args and such.\n. Tried this on the node-chrome-debug and this fixes the issues there as well.. Ran into same thing.\nI can get the node-chrome working, not the node-chrome-debug variant. \nThis is pretty much required for getting a remote node hooked up to a remote grid. \nFound a similar issue that worked for handling the spaces in env vars here: https://github.com/SeleniumHQ/docker-selenium/pull/249/files\nto get this working - you can make a the following changes:\nchrome:\n    image: selenium/node-chrome-debug:latest\n    volumes:\n      - $PWD/opt/bin/entry_point.sh:/opt/bin/entry_point.sh\nand just copy the fixes that were made in that one merge request and put in in the folder as defined above ($PWD/op/bin/entry_point.sh) - hackish but will override the entry_point.sh until it is working (also chmod +x entry_point.sh is needed)\nentry_point.sh\n. @vimagick did this work for you? I'm still using my hacked file in the meantime... would be nice to have this fixed in the main project files. Just tried 3.3.1 - issue still present. 3.2.0 works fine as @sporokh mentioned.. @tparikka - just tried :latest and issue still is occurring (selenium/hub, selenium/node-chrome-debug).\nThe 3.3.1-cesium was working for the same test... so I am unsure if the issue occurs sporadically or is dependent on some timing (The page I was reproducing it against had some 3rd part advertisements which affect the page loading time somewhat in our test environment). \nI'm doing a pull on latest again just to check, maybe it was cached from Friday. Will update in a few min here.\nUpdate: Seems to work fine now with latest - ran it thru a few times to make sure. Guess if people are verifying make sure you do the docker pull step (I forgot). @pammismail \nI've found that in aws using a C4 2xlarge was decent for running 15 chrome containers. When all containers were being used the cpu would ramp up to about 60-70%.\nchrome - c4.2xlarge | 8 CPU | 15 GiB | 1,000 Mbps network (from amazon specs)\nFor firefox I was able to run 15 on a C4 xlarge and seemed fairly stable. Full use was about 60-70%\nfirefox - c4.xlarge | 4 | 7.5 GiB  | 750 Mbps network\nThe hub is currently a t2.medium. (think this should be a c4 large). Cpu is always low around 5%\nhub - t2.medium\n\nI've actually had more luck running the node-chrome-debug containers than the node-chrome (the docs say the debug shouldn't be used). same thing for firefox. For aws - I was using a centos 7.3 based ami with the latest docker / docker-compose.\n\nI do still end up having the EC2 container crash after several days though and have not figured out what the best setup is currently for running. My company used to have an internal hypervisor that was used for hosting the selenium grid bank of my chrome/firefox containers and it was much more reliable. I don't recall it going down once in 4 months - I can't say if this was due to 3.4 being a more reliable version of the nodes or the hardware though.\nhere is my config I use for the chrome containers that I have. Firefox is similar and I can post if you want it.\ncommon.yaml\n```\nversion: \"2\"\nservices:\n  chrome:\n    image: selenium/node-chrome-debug:latest\n    volumes:\n      - /dev/shm:/dev/shm\n      - /dev/urandom:/dev/random\n    shm_size: 2G\n    privileged: true\n    environment:\n      JAVA_OPTS: -Xmx512m\n      DBUS_SESSION_BUS_ADDRESS: /dev/null\n      HUB_PORT_4444_TCP_ADDR: xxx.xxx.xxx.xxx\n      HUB_PORT_4444_TCP_PORT: 4444\n      no_proxy: localhost\n      HUB_ENV_no_proxy: localhost\n      SCREEN_WIDTH: 1600\n      SCREEN_HEIGHT: 1200\n```\ndocker-compose.yaml (repeat chrome 1 thru to chrome 15)\n```\nservices:\n  chrome1:\n    extends:\n      file: common.yml\n      service: chrome\n    ports:\n      - \"13001:5900\"\n      - \"5001:5001\"\n    environment:\n      SE_OPTS: -host xxx.xxx.xxx.xxx -port 5001\n...\n```. I posted another issue about window maximize here: https://github.com/SeleniumHQ/docker-selenium/issues/562\npossible this is similar issue?. @diemol - I just tried this with 3.6 and the maximize works as expected when 1600x1200 - think you are right about the minimum viewport... unsure what that is though. Will modify my existing comment about workaround.. sounds good. @dimol. Sorry I missed this update, thanks!. as an update to this. Turns out my issue was from using chromeOptions instead of 'goog:chromeOptions' in desiredCapabilities. . ",
    "kayhannay": "Here a link to the commit with my changes: https://github.com/efalive/docker-selenium/commit/e9b9d5bb1c28b0e86666c2725a808d4f27fd578e.\n. I have switched my setup to Docker networking now. With the new setup, this issue does not occur any more. Since Docker links are more or less deprecated anyway, I close this issue.\n. ",
    "alexhjlee": "opened accidentally\n. ",
    "mkurzeja": "Thank you! Using network instead of links is the answer!\n. ",
    "sethuster": "Please Merge This.\n. Why did this take so long?\n. woops\n. ",
    "AdamAJeng": "+1\n. ",
    "spyl94": ":+1: \n. ",
    "jbalbien": "+1\n. +1\n. ",
    "dylanlive": "Does anyone know when this usually takes effect on the Docker Hub?\nhttps://hub.docker.com/r/selenium/hub/tags/ is only listing 2.50.0, which apparently was updated 42 minutes ago?\n. If this is indeed a port issue, perhaps seleniumhq/selenium#2286 will fix this issue.\nUpdate: Never mind, looked deeper and it was only for the Ruby bindings.\n. @Larry19b I suggest you read through https://docs.docker.com/install/linux/linux-postinstall/\nCreating a docker group and adding your user will allow you to run docker commands without sudo.. ",
    "aanisimov": "+1. Thank you!\n. +1, No tag was added for selenium/base image of 2.52.0\n. ",
    "foneox": "+1\n. Looks like this pull request  #157 addresses the issue\n. ",
    "jeff-jk": "I think this issue can be closed. Issue https://github.com/SeleniumHQ/docker-selenium/issues/191 also supersedes by version. Pull request https://github.com/SeleniumHQ/docker-selenium/pull/194 addresses upgrade to version 2.53.0.\n. https://github.com/SeleniumHQ/docker-selenium/pull/192\n. I have an upgraded branch with Selenium v2.53 & Chrome WebDriver v2.21, I'll commit and submit a pull request this afternoon. After looking through Selenium issues, I concluded that a later version of Firefox may affect the WebDriver implementation so I've left mine at v44 and didn't try v45. ChromeDriver v2.21 supports Chrome v46-50.\n. See pull request https://github.com/SeleniumHQ/docker-selenium/pull/194\n. Superseded by https://github.com/SeleniumHQ/docker-selenium/pull/194.\n. Thanks @kayabendroth \n. ",
    "andrerom": "+1 This is only image I personally use that still pulls in ubuntu, so switching to jessie, or better yet jumping directly to alpine linux like others offical images are about to would be great to reduce build/test/download time.\n. @ylavoie Found a way around issues in #224, or are they solved in alpine now?. selenium/standalone-firefox:latest broken here as well..\nBut I do seem to have the same issue with 2.53.0 which has same size (240mb) as latest, unlike 2.52.0 which is 312mb and seems to work.\n. Well if alpine is out of reach for now, make sure to report issues upstream, track them here. And maybe switch to Debian for defaults like official images so most users don't have to download an additional distro image.\n. Maybe this project should then rather then align with newer official images on usage of debian:stretch-slim instead? (smaller, and avoids loading several base images for most users). ",
    "progre55": "+1! Can't wait for this!\n. ",
    "danielwhatmuff": "+1\n. ",
    "ylavoie": "I was looking for that too. I'm almost done, Hub & Firefox are working on Alpine, Chrome & PhantomJS will soon. I will PR my proposal.. ",
    "pammismail": "Able to access the page with IP Address, hence closing the issue\n. ",
    "elsonrodriguez": "The Hub looks like it takes a lot of options as env variables:\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/Hub/generate_config\nFor Nodes, you can use SE_OPT, but I'm not sure if you an set timeouts that way.\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/NodeBase/entry_point.sh\n. ",
    "99": "hi @elgalu thank you for your reply. the above baseUrl was the just an example. Can you please help, It seems like I do not fully understand how it should be setup. \n1. I have two docker containers: hub and chrome/firefox.\n2. I'm trying locally to start the protractor e2e test \n3. My baseUrl is == my qa env (e2e tests are working, but not with current setup)\nI can reach the qa Url from the docker container.\nThe test failure I'm getting is :\nFailures:\n1) SignupPage should be able to redirect to the signup page url with the correct title \n   Message:\n     Error while waiting for Protractor to sync with the page: \"<html><head><title>Selenium Grid2.0 help</title></head><body>You are using grid 2.50.0<br>Find help on the official selenium wiki : <a href='https://github.com/SeleniumHQ/selenium/wiki/Grid2' >more help here</a><br>default monitoring page : <a href='/grid/console' >console</a></body></html>\"\n   Stacktrace:\n     undefined\nthank you again.\n. ",
    "Deseao": "You need to pass it as an environment variable, like docker run -e SE_OPTS=htmlsuite \n. ",
    "lindsaymacvean": "thanks noted, stupid mistake. It was a dummy site anyway but will be locking that down.\n. ",
    "nisaacson": "+1, dockerhub is moving towards alpine linux as well for the base library images https://www.brianchristner.io/docker-is-moving-to-alpine-linux/\n. ",
    "jgielstra": "One issue is alpine uses musl for it's c library and it isn't 100% compatible with stuff compiled using glibc.\nThey do have ports of xvfb, chromium, openjdk8, firefox, and chromium-chromedriver  webdriver in their main repo.\nIt doesn't seem stable and I get defunct processes but it looks like people are working on it\n     http://git.alpinelinux.org/cgit/aports/log/community/chromium\nBut something basic: openjdk + chromium + xvfb + chromium webdriver is ~350 megs.. \n. ",
    "at88mph": "+1\n. ",
    "mhemesath": "+1\n. ",
    "tnguyen14": "@alexkogon I like the idea of having a Hub running in the background, and launch node as needed for the build step. But this kinda goes back to  my original question of how do you keep a reference to the node you just spun up in order to shut it down? The example code in the readme CH=$(docker run --rm -... would not work as it does not put that docker container in the background.\n. Thanks @elgalu. That is an interesting suggestion. Let me try it out.\n. @elgalu so one problem I'm running into is that if a build fails, the command to stop and remove the node container isn't executed, thus leaving them hanging around. Do you know of a way to solve this? This is strictly speaking not a docker or selenium issue. Just wondering if you have any suggestions.\n. @vbyjsue how is the \"$Action\" set? Or how is this script actually used in your Jenkins job? Also, out of curiosity, what is JAVA_OPTS: \"-Djava.security.egd=file:/dev/./urandom\" used for?\n. @diemol our project just ran into an issue where screenshots generated on debug and normal images are different (when feeding to a Visual Regression test). We're unsure as to why, but decided to just standardize on using debug images, just to have it consistent. The ability to optionally watch what's going on is too important for us to standardize on normal images.\nI think Chrome itself already uses significant memory anyway, so I think the idea of merging the two would be interesting.. Looks like 617931 is fixed, but 775911 is marked as \"WontFix\". I was referring to these 2 previous comments:\n\nI believe it is going to stay that way, at least until https://bugs.chromium.org/p/chromium/issues/detail?id=617931 has some movement\n\nand\n\nDoes anyone know if this is the current status for headless?\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=775911. @diemol if I understand this correctly, I can use headless, but in order to do debugging (with VNC), I would still need xvfb?. Is there any specific instruction for how I can do that (open and see the video feed)?. This wasn't merged?. Hi,\n\nThe error happens on a RHEL 7.3 box. Do you have access to that in order to test this?\nIf I replace the rm -rf /var/cache/apt/archives with apt-get clean, it goes through fine for me.\nI do get another error down the line with, but at least that particular error is gone. \nDo you think I should make a PR to change that?. I created #480 to address this.. @diemol  I just tried your suggestion, but that doesn't seem to make a difference. . @diemol From searching around, I found the same results that you mentioned, i.e. httpProxy and httpProxyPort as separate properties.. Right. And when I updated the properties to use those specific to firefox, it still did not work.. I just looked at the options again, and it seems like they don't support the noProxy option anymore? Do you know if there's a different way to set that?. I asked the question in https://github.com/mozilla/geckodriver/issues/725. I was told that webdriver does not support noProxy, so I raised it in https://github.com/w3c/webdriver/issues/913. One thing I've noticed is that the node-firefox version will respect environment variables set for http_proxy and no_proxy, but the node-firefox-debug version will not. What do you think might cause this difference?. Thanks @diemol. Any estimate on when you think #477 will land?. @diemol I've also seen Chrome not respecting the http proxy environment variables as well (the proxy settings in webdriver works though). Is that a known issue as well?. @diemol should I file a separate issue for Chrome?. From https://github.com/mozilla/geckodriver/issues/725#issuecomment-327216744\n\nThis is all done now and will be available with Firefox 57 and the next release of geckodriver.\n\nI'm reopening this issue for now. Please close it when there's a docker-selenium release that includes the fixed geckodriver version.. I am trying to look into this again, using the latest version 3.7.1, and I'm getting this error\n```\nError retrieving a new session from the selenium server\nConnection refused! Is selenium server started?\n{ value:\n   { sessionId: 'c272b552-69f2-4b6e-a9fb-550a23994d63',\n     capabilities:\n      { 'moz:profile': '/tmp/rust_mozprofile.zcKX5Nlyq169',\n        rotatable: false,\n        timeouts: [Object],\n        pageLoadStrategy: 'normal',\n        'moz:headless': false,\n        proxy: [Object],\n        'moz:accessibilityChecks': false,\n        acceptInsecureCerts: false,\n        browserVersion: '57.0',\n        platformVersion: '4.9.49-moby',\n        'moz:processID': 342,\n        browserName: 'firefox',\n        platformName: 'linux',\n        'moz:webdriverClick': false } } }\n```\nI know it's probably something really simple, but I can't figure out why. I am running with the node-firefox-debug image, and when I open the VNC viewer, I can see the browser window being opened, though the browser URL bar is empty. \nIf I switch the same setup , but just the browser name to chrome, it works fine.. Thanks for the summary!\nI can't confirm that firefox now works with the desiredCapabilities object yet, because I can't get nightwatch to connect to selenium. However, if others can confirm that this now works on their Firefox setup, I'm happy to close this.. I don't know if any of those parts is working. I think the cause for the error \n```\nError retrieving a new session from the selenium server\nConnection refused! Is selenium server started?\n``\nis unrelated toproxy, but it's preventing me from confirming thatproxy` setting is working. It could be due to my setup, if anyone has a setup that can confirm, that'd be great.. Thanks @diemol. I'll close this now.\nJust to confirm, if you set noProxy to [localhost], it works, right?. Hi yes, I will update and re-submit. Been a bit overly busy at work these days, will take a stab at this as soon as I can! Thanks for checking in.. So is the right fix to remove rm /var/cache/apt instead of using apt-get clean?\nWhat is the reason to not use apt-get clean?. Hi @elgalu,\nMy apologies for the vague bug report.\nI did mean moveToElement. \nHere's a simple set up to see this:\njs\n// test/index.js\nmodule.exports = {\n        'hover': function (browser) {\n                browser\n                        .url('https://lab.tridnguyen.com/demo.html')\n                        .moveToElement('.container', 20, 10)\n                        .assert.visible('.menu')\n                        .end();\n        }\n};\nand \njson\n// nightwatch.json\n{\n        \"src_folders\": [\"test\"],\n        \"test_settings\": {\n                \"default\": {\n                        \"desiredCapabilities\": {\n                                \"browserName\": \"firefox\"\n                        }\n                }\n        }\n}\nAnd then run:\n```sh\ninstall nightwatch\n:; npm install nightwatch\nrun the container\n:; docker run -d -p 4444:4444 selenium/standalone-firefox\nrun the test\n:; nightwatch\n```\nWhen running that, I get the following error:\n```\n[Index] Test Suite\n======================\nRunning:  hover\n \u2716 Testing if element <.menu> is visible.  - expected \"true\" but got: \"false\"\n    at Object.hover (/home/tri/dev/temp/test/index.js:6:12)\n    at _combinedTickCallback (internal/process/next_tick.js:73:7)\nFAILED:  1 assertions failed (2.469s)\n\nTEST FAILURE:  1 assertions failed, 0 passed. (2.561s)\n\u2716 index\n\nhover (2.469s)\n```\n\nIt works on chrome and firefox-debug.\n. Yeah, the part about it passing on debug made me think originally that it's something with having a graphical interface... I believe the only difference between the regular image and the debug one is the addition of a vnc server, is that right?\nI subscribed to that selenium issue, thanks for the reference.. Oh you're right. It doesn't work on firefox, period. The reason I thought it was working on firefox-debug was because a script automatically switched from firefox-debug to chrome-debug in our test run due to #478. I stand corrected.. Apologies for the late response.\nI've tried again with the latest version 3.7.1, and can confirm that when I set http_proxy, https_proxy and no_proxy as environment variables, Chrome now respects this.. Yeah if I run it with shm_size='2gb option without privileged it does work.. If the effect is the same, should the doc be updated to say that shm-size\nshould be used for both Chrome and Firefox?\nOn Dec 13, 2017 2:19 AM, \"Diego Molina\" notifications@github.com wrote:\n\nGood! The effect should be the same one.\nI think we can close this issue then, right?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/631#issuecomment-351305031,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABk3c3XTg88J7FfYb3ZzyxZRCTKB4wgBks5s_3qOgaJpZM4Q7cYc\n.\n. Amazing! Thanks!. I have seen this error quite often, albeit intermittently, on my selenium hub - node chrome docker-compose setup. Do you think it's related to this?\n\nERROR: Error forwarding the new session Empty pool of VM for setup Capabilities {browserName: chrome, handlesAlerts: true, javascriptEnabled: true, locationContextEnabled: true, loggingPrefs: org.openqa.selenium.logging..., requestOrigins: {name: webdriverio, url: http://webdriver.io, version: 4.13.1}, rotatable: true}. Could you do HOST=\"${2:-localhost}\"?. ",
    "vbyjsue": "Before tests I trigger a jenkins job that creates a docker compose file with unique port for each testjob. After tests i trigger the same job with stop parameter to remove all containers. Each testjob has its own grid (which runs 6 threads in parallel).\n```\nif [ \"$Action\" == \"start\" ]; then\nmkdir -p $TRIGGER_JOB\ncd $TRIGGER_JOB\ncat > docker-compose.yml <<EOF\nhub:\n  image: docker.vby.svenskaspel.se:8181/selenium/hub:2.48.2\n  ports:\n    - \"$PORT:4444\"\n  volumes:\n    - /home/byggarebob/workspace:/home/byggarebob/workspace\n  environment:\n    GRID_MAX_SESSION: 15\n    JAVA_OPTS: \"-Djava.security.egd=file:/dev/./urandom\"\nchrome:\n  image: docker.vby.svenskaspel.se:8181/selenium/node-chrome:2.48.2\n  links:\n    - hub\n  volumes:\n    - /dev/shm:/dev/shm\n  volumes_from:\n    - hub\n  environment:\n    SCREEN_WIDTH: 1920\n    SCREEN_HEIGHT: 1080\n    JAVA_OPTS: \"-Djava.security.egd=file:/dev/./urandom\"   \nEOF\nfi \nexport COMPOSE_PROJECT_NAME=$TRIGGER_JOB\nexport DOCKER_HOST=\"tcp://$TEST_HOST:2375\"\nif [ \"$Action\" == \"start\" ]; then\n  #before test, start required nodes\n  cd $TRIGGER_JOB\n  docker-compose up -d --force-recreate\n  docker-compose scale chrome=${NODES}\n  sleep 20\nfi\nif [ \"$Action\" == \"stop\" ]; then\n  #After test stop and remove nodes\n  cd $TRIGGER_JOB\n  docker-compose scale hub=0 chrome=0\nfi\n```\n. The testjob triggers a \"restart_selenium\" job and passes the parameters Action, PORT and TRIGGER_JOB. When tests are finished a postbuild action triggers the job again with Action=stop.\n\nThe JAVA_OPTS is recomended from this discussion https://github.com/SeleniumHQ/docker-selenium/issues/14\n. I'm sure that can be done, but I don't configure docker that often. Googling \"docker-compose on startup\" would give you plenty of suggestions.\n. In case you did not know, this is retrievable from the tests. I use the rubydrivers and capybara: driver.browser.capabilities.version\nThen print it to your favourite reporter.\n. ",
    "emoshaya": "Hi @vbyjsue is there any way to get your docker_compose started in systemd or as a service in CentOS? Ideally, I want the grid to start when the machine starts up.\n. i just checked the node logs and I'm getting the following errors:\nid/register\n18:42:02.640 INFO - Couldn't register this node: Error sending the registration                                                                              request: The hub responded with 500:Server Error\n18:42:07.643 INFO - Registering the node to the hub: http://selenium-hub:4444/grid/register\n18:42:07.648 INFO - Couldn't register this node: Error sending the registration request: The hub responded with 500:Server Error\n18:42:12.650 INFO - Registering the node to the hub: http://selenium-hub:4444/grid/register\n18:42:12.654 INFO - Couldn't register this node: Error sending the registration request: The hub responded with 500:Server Error\n18:42:17.657 INFO - Registering the node to the hub: http://selenium-hub:4444/grid/register\n18:42:17.662 INFO - Couldn't register this node: Error sending the registration request: The hub responded with 500:Server Error\n. Error log on the grid:\n01:55:36.525 DEBUG - getting the following registration request  : {\"class\":\"org.openqa.grid.common.RegistrationRequest\",\"configuration\":{\"hubHost\":\"10.255.6.197\",\"hubPort\":4444,\"id\":\"http://172.17.0.3:5555\",\"capabilities\":[{\"browserName\":\"chrome\",\"seleniumProtocol\":\"WebDriver\",\"maxInstances\":1,\"platform\":\"LINUX\"}],\"hub\":\"http://10.255.6.197:4444/grid/register\",\"nodeStatusCheckTimeout\":5000,\"proxy\":\"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\"register\":true,\"registerCycle\":5000,\"custom\":{},\"host\":\"172.17.0.3\",\"maxSession\":1,\"browserTimeout\":600000,\"debug\":false,\"port\":5555,\"role\":\"node\",\"timeout\":500000}}\n2016-10-20 01:55:36.525:WARN:osjs.ServletHandler:qtp1897115967-56: /grid/register\njava.lang.NullPointerException\n        at org.openqa.grid.common.RegistrationRequest.getNewInstance(RegistrationRequest.java:276)\n        at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:75)\n        at org.openqa.grid.web.servlet.RegistrationServlet.doPost(RegistrationServlet.java:60)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n        at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)\n        at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)\n        at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n        at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n        at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)\n        at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n        at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)\n        at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)\n        at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)\n        at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)\n        at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n        at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n        at java.lang.Thread.run(Thread.java:745)\n. Hi @joshstrange I solved the issue by using image version 3.0.0-dubnium for the hub and node as follows:\nhub:\n  image: selenium/hub:3.0.0-dubnium\n  ports:\n    - \"4444:4444\"\n  volumes:\n    - /var/lib/jenkins/workspace:/var/lib/jenkins/workspace\n  environment:\n    - GRID_TIMEOUT=500000\n    - GRID_MAX_SESSION=50\n    - GRID_BROWSER_TIMEOUT=600000\nchrome:\n  image: selenium/node-chrome-debug:3.0.0-dubnium\n  ports:\n    - \"5900:5900\"\n  links:\n    - hub\n  volumes:\n    - /dev/shm:/dev/shm\n  volumes_from:\n    - hub\n. ",
    "pavelpp": "OK, I've passed remote url to selenide via Configuration.remote=\"http://localhost:4444/ws/hub\" , but still getting the UnreachableBrowserException\n. just a typo, sorry, I do have \"wd\" actually\n. https://gist.github.com/pavelpp/84bb5ea0b5fcc8ceca7f\n. amazingly that worked. But shouldn't it work with localhost instead?\n. Thanks\n. @diemol there was no problem when trying this with local chrome browser. Browser crashes only in docker. Will try this with the latest version and report back if it is still the case.. yes, it's working in the latest version. I will close it now. Any progress with this? 3.3.1 fixes a lot of things so would appreciate this PR being fixed/merged asap. ",
    "ti2m": "I ran into issues when installing fonts, took me a while to figure out why installs failed as I didn't catch the release name issue right away. Updating the repos fixed the issues for me.\n. ",
    "benfortuna": "Will this fix be applied to the other images also (firefox/firefox-debug/chrome)? I can confirm the issue exists in the standalone-chrome image.\n. ",
    "fzakaria": "lrwxrwxrwx 1 root root 27 Apr 19  2015 /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/cacerts -> /etc/ssl/certs/java/cacerts\nseluser@61c84a845318:/carlypso/workflow$ cat /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/cacerts \ncat: /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/cacerts: No such file or directory\nThe above shows that the symlink is dead\n. Very old question.\nAnyways closing.. ",
    "double16": "Clarification... xvfb starts but the browser cannot start if DISPLAY is other than :99.0\n. Your enhancements look good, I like the extraction into functions.sh.\n\nOn Apr 17, 2016, at 1:03 PM, Kay Abendroth notifications@github.com wrote:\nSuperseded by #206 https://github.com/SeleniumHQ/docker-selenium/pull/206. @double16 https://github.com/double16 Please check my enhancements on top of your commit. Will merge the other PR, if you agree.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/SeleniumHQ/docker-selenium/pull/187#issuecomment-211073075\n. \n",
    "gerich-home": "Agree with @elgalu \nDue to this change I am not able to change the value of config options in docker-compose file:\nhub:\n    image: selenium/hub\n    environment:\n      - GRID_TIMEOUT=36000\nI see that my change has no effect (it is critical!).\nI try ssh'ing into container:\n```\ndocker ps\nCONTAINER ID        IMAGE                         COMMAND                  CREATED              STATUS              PORTS\n                             NAMES\n...\n357362562d6f        selenium/hub                  \"/opt/bin/entry_point\"   About a minute ago   Up About a minute   4444/tcp\n                             e2e_hub_1\n...\ndocker exec -it 357362562d6f sh\n```\nThere I view config.json and see that it has default content in it!\n```\n$ cat /opt/selenium/config.json\n{\n  \"host\": null,\n  \"port\": 4444,\n  \"prioritizer\": null,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": true,\n  \"newSessionWaitTimeout\": -1,\n  \"jettyMaxThreads\": -1,\n  \"nodePolling\": 5000,\n  \"cleanUpCycle\": 5000,\n  \"timeout\": 30000,\n  \"browserTimeout\": 0,\n  \"maxSession\": 5,\n  \"unregisterIfStillDownAfter\": 30000\n}\n```\nI try regenerating it manually:\n$ /opt/selenium/generate_config > /opt/selenium/config.json\nAnd it now contains valid values:\n```\n$ cat /opt/selenium/config.json\n{\n  \"host\": null,\n  \"port\": 4444,\n  \"prioritizer\": null,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": true,\n  \"newSessionWaitTimeout\": -1,\n  \"jettyMaxThreads\": -1,\n  \"nodePolling\": 5000,\n  \"cleanUpCycle\": 5000,\n  \"timeout\": 36000,\n  \"browserTimeout\": 0,\n  \"maxSession\": 5,\n  \"unregisterIfStillDownAfter\": 30000\n}\n```\nI vote reverting the change as it broke the ability to configure hub!\n. Thank you so much for your quick response!\nFor now I have just reverted my docker-compose to the previous version of image:\nimage: selenium/hub:2.49.1\n. ",
    "jgraham": "This might be because wires currently assumes that the server is running on 127.0.0.1 unless told otherwise, and I guess selenium is not telling it otherwise. This could be fixed on both ends (by looking up an ip address corresponding to localhost).\n. ",
    "JesseChezenko-AI": "My team was having the exact same error \"Error forwarding the new session Error forwarding the request Read timed out\". \nI used the DBUS hack described here and the error never occurred again. https://github.com/SeleniumHQ/docker-selenium/issues/87\nMaybe the same can work for you?\n. @adamlievrouw When the image is built the Dockerfile code is executed. ( ie. chrome driver is installed ) \nSetting an environment variable when starting a container, docker run -e CHROME_DRIVER_VERSION=2.12 node-chrome, will have no effect on the chrome driver version installed on the container. \nNote there is a pull request to update chrome driver here. https://github.com/SeleniumHQ/docker-selenium/pull/234 \n. ",
    "Saphyel": "I'm having the same problem... if you progress can you let me know ? I'm using standalone version rather than your method....\n. ",
    "iGitScor": "Hi @Saphyel, I use another docker image and with new version of docker and docker-compose, it works well for us. Do you have resolve your issue ?. @ddavison I'm not happy with the other image so I'll give a look again to these images. Do you think I should close this issue and re-open it if the problem is still present ?. Do you have a link for this official image ?. @ddavison  I'll let this issue closed even if the issue is for this image. ",
    "stevenmccord": "More information here, it is happening here during the entry-point.sh script:\nbash\n$(for E in $(grep -vxFf asseluser asroot); do echo $E=$(eval echo \\$$E); done)\nI think it has something to do with the fact that these options have a space in the environment variable so trying to update, but figured I would provide as much information as I can.  Thanks!\n. Looks like I solved the profile issue that is solved by passing in this option:\n-Dwebdriver.firefox.profile=functional-profile\nHowever, I am still not understanding how to deal with an authenticated proxy, when I pass in those java options I still I am not able to proxy through anything, it actually doesn't do anything when I open up a mozilla browser, it is like the proxy didn't get set.  Any help there would be extremely helpful.  Thanks!\n. ",
    "ondrej": "@stevenmccord, take a look at #207, there's a proposed fix there that might help.\n. ",
    "tarantegui": "@ondrej your fix works for me on the debug version, but not on standalone. \u00bfDo yo have configured correctly a standalone-firefox with proxy?\n. It works perfectly @ondrej \u00bfdo you have considered to make a Pull Request to fix that?\n. ",
    "shames0": "I too am noticing this problem, though I'm not using Jenkins, I'm just using the images provided by this repo. Here's the error and trace I'm receiving:\n/usr/share/ruby/net/protocol.rb:158:in `rescue in rbuf_fill': Net::ReadTimeout (Net::ReadTimeout)                                                                                                                   \n    from /usr/share/ruby/net/protocol.rb:152:in `rbuf_fill'                                                                                                                                                         \n    from /usr/share/ruby/net/protocol.rb:134:in `readuntil'                                                                                                                                                         \n    from /usr/share/ruby/net/protocol.rb:144:in `readline'                                                                                                                                                          \n    from /usr/share/ruby/net/http/response.rb:39:in `read_status_line'                                                                                                                                              \n    from /usr/share/ruby/net/http/response.rb:28:in `read_new'                                                                                                                                                      \n    from /usr/share/ruby/net/http.rb:1414:in `block in transport_request'                                                                                                                                           \n    from /usr/share/ruby/net/http.rb:1411:in `catch'                                                                                                                                                                \n    from /usr/share/ruby/net/http.rb:1411:in `transport_request'                                                                                                                                                    \n    from /usr/share/ruby/net/http.rb:1384:in `request'                                                                                                                                                              \n    from /usr/share/ruby/net/http.rb:1377:in `block in request'                                                                                                                                                     \n    from /usr/share/ruby/net/http.rb:853:in `start'                                                                                                                                                                 \n    from /usr/share/ruby/net/http.rb:1375:in `request'                                                                                                                                                              \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/remote/http/default.rb:83:in `response_for'                                                                                          \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/remote/http/default.rb:39:in `request'                                                                                               \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/remote/http/common.rb:40:in `call'                                                                                                   \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/remote/bridge.rb:640:in `raw_execute'                                                                                                \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/remote/bridge.rb:101:in `create_session'                                                                                             \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/remote/bridge.rb:68:in `initialize'                                                                                                  \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/common/driver.rb:33:in `new'                                                                                                         \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver/common/driver.rb:33:in `for'                                                                                                         \n    from /usr/share/gems/gems/selenium-webdriver-2.45.0/lib/selenium/webdriver.rb:67:in `for'                                                                                                                       \n    from /var/ruby/lib/Options.rb:7:in `block in driver'                                                                                                                                                            \n    from /var/ruby/lib/Options.rb:13:in `call'                                                                                                                                                                      \n    from /var/ruby/lib/Options.rb:13:in `driver'\nFor additional note, here's the relevant contents of the Options file mentioned in that trace:\nRuby\n  5     def driver()\n  6         return @driver ||= (lambda {\n  7             driver = Selenium::WebDriver.for(\n  8                 :remote,\n  9                 :desired_capabilities => :chrome,\n 10             )\n 11             driver.manage.timeouts.implicit_wait = 10 # seconds\n 12             return driver\n 13         }).call;\n 14     end\n. Thank you for your quick helpful reply! I made this change:\n-    'chromeOptions' => {\n+    'goog:chromeOptions' => {\nThat handled it nicely!. ",
    "jizel": "Yes it has nothing to do with Jenkins, sorry for the redundancy in my post. The trace looks absolutely same for me.\nI use \n@browser = Watir::Browser.new :remote, :url=>\"http://127.0.0.1:4444/wd/hub\", http_client: client, desired_capabilities: caps\nas my browser object.\n. @timsheng, What I do is simply to rescue the exception and call my browse method recursively (you might get the exception several times in a row). I have a global counter of recursive calls to prevent forever recursion.\nThis is my browse method (the important bit):\nruby\n begin\n      yield self.browser(browser_type)\n  rescue Net::ReadTimeout\n      STDOUT.puts 'Net::ReadTimeout during browser launch. Trying to launch the browser again'.red\n      self.close\n      sleep 5\n      @read_timeouts += 1\n      unless @read_timeouts > 2\n        browse(browser_type=browser_type, selected_language = 'en-US', continue = true, &block)\n      end\nend\n. ",
    "timsheng": "@jizel  i met this issue as well, it happens from time to time, and no any regular condition, looks like the browser driver dead, or network issue, setting page level or element level waiting time didn't work as well. could you share your current code to fix this issue temporarily\n. ",
    "gustavoriveray": "Im using cucumber with ruby and selenium and Im having the same issue when running in Jenkins. For ruby I use rvm with ruby 2.3.0.\nI started seeing this error in Chrome 52 with Chromedriver 2.15, which was very old from Chromedriver-Helper gem. These are my gems\nUsing awesome_print 1.7.0\nUsing json 1.8.3\nUsing mini_portile2 2.1.0\nUsing pkg-config 1.1.7\nUsing ffi 1.9.14\nUsing rubyzip 1.2.0\nUsing websocket 1.2.3\nUsing tomlrb 1.2.3\nUsing io-like 0.3.0\nUsing ast 2.3.0\nUsing thread_safe 0.3.5\nUsing ice_nine 0.11.2\nUsing builder 3.2.2\nUsing coderay 1.1.1\nUsing gherkin 3.2.0\nUsing cucumber-wire 0.0.1\nUsing diff-lcs 1.2.5\nUsing multi_json 1.12.1\nUsing multi_test 0.1.2\nUsing tilt 2.0.5\nUsing equalizer 0.0.11\nUsing multi_xml 0.5.5\nUsing mimemagic 0.3.2\nUsing multipart-post 2.0.0\nUsing method_source 0.8.2\nUsing rspec-support 3.5.0\nUsing powerpack 0.1.1\nUsing rainbow 2.1.0\nUsing ruby-progressbar 1.8.1\nUsing slop 3.6.0\nUsing bundler 1.13.0\nUsing nokogiri 1.6.8\nUsing childprocess 0.5.9\nUsing archive-zip 0.7.0\nUsing parser 2.3.1.2\nUsing descendants_tracker 0.0.4\nUsing cucumber-core 1.4.0\nUsing haml 4.0.7\nUsing httparty 0.14.0\nUsing rspec-expectations 3.5.0\nUsing rspec-core 3.5.3\nUsing rspec-mocks 3.5.0\nUsing pry 0.10.4\nUsing selenium-webdriver 2.53.4\nUsing chromedriver-helper 1.0.0\nUsing astrolabe 1.3.1\nUsing axiom-types 0.1.1\nUsing coercible 1.0.0\nUsing cucumber 2.3.2\nUsing httmultiparty 0.3.16\nUsing rspec 3.5.0\nUsing appium_lib 8.0.2\nUsing virtus 1.0.5\nUsing cucumber_statistics 2.1.1\nIt kept failing after upgrading Chromedriver 2.23 and then after upgrading Chrome to 53. However something weird happens. It starts failing, and keeps doing it for a day, then fixes itself for, about half a day. (The job runs every 15 min). Then fails again for a day. Also if I restart the machine, it starts passing again for about a day.\nThe error I get is \nFailed to start driver: Net::ReadTimeout\n  Net::ReadTimeout (Net::ReadTimeout)\n. I reinstalled Chrome @kevin-andres and it seems to have solve the problem, for some reason, it has been running passing for about a week now\n. mac, and I don't install it on run time each time. It is just there\n. ",
    "kevin-andres": "@gustavoriveray I am experiencing the same issue as you, with nearly the same set up of Cucumber, Ruby (rvm 2.3.0), Selenium WebDriver (chrome) running on Jenkins..Although I have run the same exact test with Firefox as the browser and it works fine..Cannot get it to work with chromedriver 2.24.417424 and Chrome 53\n. @gustavoriveray Glad to hear that. Are you running your Jenkins on Linux? If so, did you use do the installation with: apt-get install google-chrome-stable ?\n. @earnold It turns out that Chrome crashes if you try to run it on Docker. (I'm guessing you're having the same issue as me, trying to run Chrome/chromedriver on Jenkins CI w/ docker). It's caused by the shared memory on the container being too small by default for Chrome to run. There are a couple of known solutions to working around this, but basically /dev/shm is too small. I followed those steps, and was able to get my Selenium WebDriver tests to finally pass using Chrome.\n. ",
    "earnold": "+1 \nI've started running into this as well with a Docker / CI build. \n. @kevin-andres Thanks for the guidance! It took some doing, but I also need to set --cap-add=SYS_ADMIN in order to get this running. Not sure what the ramifications of that are, but at least my specs are running \n. ",
    "Th33x1l3": "i tried the /dev/shm solution on the container (both by trying to mount /dev/shm from host, or by trying the switch) and it still happens\n. ",
    "krasnoukhov": "We came up with a following monkey-patch until we can upgrade to Selenium 3.x. Problem is gone for now:\n```ruby\nNOTE: this is to fix random Chrome shutdown failure on CI\nShould be fixed in selenium >= 3.0.0\nclass Selenium::WebDriver::Chrome::Service\n  alias_method :original_stop, :stop\ndef stop\n    original_stop\n  rescue Net::ReadTimeout\n  end\nend\n```. ",
    "prashanw": "@krasnoukhov can you please share/explain how your patch is being used? Where should it be added? Thanks.. ",
    "qwebek": "Having this issue with cucumber firefox selenium xvfb, for me it happens on any page redirect, first page loads fine but when you move to other page i have subject error all the time. It appeared that latest firefox works with gekodriver which in its turn\nworks badly with latest selenium onCI hesdless, same with chromedriver but\na bit better, still reverting to older version of selenium ehich works\ndirectly with browser solved problem for me, its version  <3 selenium i\nthink, hope helps to someone\n11.04.2017 5:08 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Paul Schroeder\" notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\n@piotrmasior https://github.com/piotrmasior How did you solve the port\nfailures?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/198#issuecomment-293079463,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AUU6cU3YeMVb6GvTCrHvF4j_6Ee4MgUEks5rupo4gaJpZM4IBD0S\n.\n. \n",
    "piotrmasior": "it is not docker issue\neasiest way to reproduce that is spawn chromedriver and initialize session to it\nkill chromedriver, and try any action again\nin my case it was problem with --port arg on chromedriver as it fails SILENTLY with bind problem if port already in use. ",
    "pschroeder89": "@piotrmasior How did you solve the port failures?. The standard 3.4.0 image doesn't work with these variables, either. Thanks for the tip about dysprosium.. 3.5.3 fixed this issue for me.\n Unfortunately, I'm seeing other issues regarding Selenium not respecting BROWSER_TIMEOUT and TIMEOUT, so I'm sticking with 3.4.0.. @testphreak I'm using a docker-compose yaml file to set NODE_MAX_SESSION and NODE_MAX_INSTANCES under my node's \"environment\" section. My GRID_MAX_SESSION variable is set to 10 under my hub's environment section, for what that's worth. It began working again when I pulled selenium/node-chrome-debug:latest and selenium/hub:latest, which is 3.5.3.\nI think you're better off staying on 3.4.0 einsteinium though, I see 40-50% failure rates on 3.5.3 due to sessions disappearing or intermittent \"BROWSER_TIMEOUT\" errors. I'll be writing a bug later today when I get more info on it.. ",
    "aakashgupta96": "I have tried expanding the size of /dev/shm but still it is not working for me :( I'm trying to run headless test with selenium ruby bindings and chrome drivers on Digital Ocean Ubuntu 14.04. Chrome driver version is 2.29 and and google-chrome version is 57.0\nBut whener I try to start a new session with these commands\nheadless=Headless.new\nheadless.start\ndriver = Selenium::WebDriver.for :chrome\nNet::ReadTimeout: Net::ReadTimeout\nfrom /root/.rbenv/versions/2.3.1/lib/ruby/2.3.0/net/protocol.rb:158:in `rbuf_fill'\nI tried the same on a docker container on my local machine and still I am facing the same issue.\nI can run it successfully on my local machine(without using docker container) and AWS server as well. Please help me to fix this :(. ",
    "prashanth-sams": "@krasnoukhov do you've any samples in your repo ? would be much helpful. @deadnight7 @phibsholo replace 'chromeOptions' with 'goog:chromeOptions to make this work follow. ",
    "dmitrym0": "For whatever it's worth, if you run tests as root (I know, I know) Chromium will block with an error asking for --no-sandbox parameter to be passed. Because Chromium is blocking, Chromedriver times out and you get the error above. \nI solved it with:\nWatir::Browser.new(:chrome,\n                      :prefs => {:password_manager_enable => false, :credentials_enable_service => false},\n                      :switches => [\"disable-infobars\", \"no-sandbox\"])]). ",
    "damontgomery": "I'm not using docker-selenium, but I got a similar issue and dmitrym0's response fixed it. I added --no-sandbox. Without this, sometimes it works and sometimes it doesn't. :(\nI'm also running docker with the --cap-add=SYS_ADMIN option.\nI'm using a custom Dockerfile based on the official Ruby Dockerfile and then installing Chromedriver and Chrome.\nSomething like the following which runs the command in docker and then gets rid of the container when it's done.\ndocker run --cap-add=SYS_ADMIN --rm -v \"${DIR}/:/usr/src/app/\" -it cucumber cucumber \"$@\"\nMy cucumber (ruby) configuration looks like, \nCapybara.register_driver :custom_chrome_headless do |app|\n  browser_options = ::Selenium::WebDriver::Chrome::Options.new()\n  browser_options.args << '--headless'\n  browser_options.args << '--no-sandbox'\n  browser_options.args << '--disable-gpu'\n  browser_options.args << '--window-size=1920,1080'\n  Capybara::Selenium::Driver.new(app,\n    browser: :chrome,\n    options: browser_options\n  )\nend. ",
    "PhilipJordan": "This issue still exists. You can recreate it by using this script:\n\n\nrequire 'watir'\n\n def get_arguments\n   browser_arguments = { }\n\n   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome()\n\n   capabilities[:name] = 'Watir'\n   browser_arguments[:opt] = capabilities\n\n   browser_arguments\n end\n\n #recursive call to get browser instance due to bug \n def get_browser(iterations)\n   raise \"Unable to instantiate browser after #{iterations} iterations\" if iterations < 0\n   begin\n     browser_arguments = get_arguments\n     browser = Watir::Browser.new :chrome, :prefs => browser_arguments, :switches => %w(disable-infobars no-sandbox)\n     browser.goto 'www.google.com'\n   rescue\n     return get_browser(iterations - 1)\n   end\n   browser\n end\n\n $browsers = {}\n\n 15.times { |index|\n   browser_arguments = get_arguments\n\n   browser = Watir::Browser.new :chrome, :prefs => browser_arguments, :switches => %w(disable-infobars no-sandbox)\n\n   #one viable solution \n   #browser = get_browser(3)\n\n   $browsers[index] = browser unless browser.nil?\n }\n\n sleep 3\n\n\nNote that one viable solution (that others mention above) has been provided and I have also added suggested switches (i.e. no-sandbox) as some suggested. Even with 15 browsers this script will sometimes make it all the way through without failure so you may need to run it more than once to create the error. \n. ",
    "crazyh": "Well, I found that this issues caused by Grsecurity/PaX on host machine (dmesg output is below):\ngrsec: denied write of overly-permissive IPC object with creator uid 0 by /usr/bin/Xvfb[Xvfb:32377] uid/euid:1000/1000 gid/egid:1000/1000, parent /usr/bin/xvfb-run[xvfb-run:32362] uid/euid:1000/1000 gid/egid:1000/1000\nAnd currently it is not clear how to run selenium-*-debug containers properly to solve this.\n. @elgalu\n1. Yes, I used official community hardended kernel with Grsecurity (RBAC is disabled, default PaX settings are not touched)\n2. Fresh Arch Linux distro with 4.4.7.201604152208-1-grsec kernel\n3. Docker version 1.10.3, build 20f81dd\n4.  docker run -P -it -p 5900:5900 --rm -v /dev/shm:/dev/shm selenium/standalone-chrome-debug\n5. This container works and VNC server starts.\nPerhaps I will just add sudo x11vnc for now in selenium/standalone-chrome-debug entry point or will just use your container although it looks over bloated. =) Thank you!\n. BTW, I found workaround: just disable kernel.grsecurity.harden_ipc kernel parameter.\nsudo sysctl kernel.grsecurity.harden_ipc=0\nAlso it can be added to /etc/sysctl.d.\nI do not like this solution but it works with current version of selenium/standalone-*-debug containers and help if want just debug some single issue in Selenium test.\n. > what's the full docker run command and the output?\n@elgalu I forgot to attach a full output you asked. It is below.\n```\nLooking for lock file: /tmp/.X??-lock\nWaiting xvfb...\n08:27:56.777 INFO - Launching a standalone Selenium Server\n08:27:56.802 INFO - Java: Oracle Corporation 25.02-b03\n08:27:56.802 INFO - OS: Linux 4.4.7.201604152208-1-grsec amd64\n08:27:56.816 INFO - v2.53.0, with Core v2.53.0. Built from revision 35ae25b\n08:27:56.868 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped:\nregistration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform LINUX\n08:27:56.868 INFO - Driver provider org.openqa.selenium.edge.EdgeDriver registration is skipped:\nregistration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform LINUX\n08:27:56.869 INFO - Driver class not found: com.opera.core.systems.OperaDriver\n08:27:56.869 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered\n08:27:56.869 INFO - Driver provider org.openqa.selenium.safari.SafariDriver registration is skipped:\nregistration capabilities Capabilities [{browserName=safari, version=, platform=MAC}] does not match the current platform LINUX\n08:27:56.870 INFO - Driver class not found: org.openqa.selenium.htmlunit.HtmlUnitDriver\n08:27:56.870 INFO - Driver provider org.openqa.selenium.htmlunit.HtmlUnitDriver is not registered\n08:27:56.915 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:4444/wd/hub\n08:27:56.915 INFO - Selenium Server is up and running\n20/04/2016 08:27:57 passing arg to libvncserver: -rfbport\n20/04/2016 08:27:57 passing arg to libvncserver: 5900\n20/04/2016 08:27:57 -usepw: found /root/.vnc/passwd\n20/04/2016 08:27:57 x11vnc version: 0.9.13 lastmod: 2011-08-10  pid: 71\n20/04/2016 08:27:57 Using X display :99.0\n20/04/2016 08:27:57 rootwin: 0x25c reswin: 0x200001 dpy: 0x9f4450\n20/04/2016 08:27:57 \n20/04/2016 08:27:57 ------------------ USEFUL INFORMATION ------------------\n20/04/2016 08:27:57 X DAMAGE available on display, using it for polling hints.\n20/04/2016 08:27:57   To disable this behavior use: '-noxdamage'\n20/04/2016 08:27:57 \n20/04/2016 08:27:57   Most compositing window managers like 'compiz' or 'beryl'\n20/04/2016 08:27:57   cause X DAMAGE to fail, and so you may not see any screen\n20/04/2016 08:27:57   updates via VNC.  Either disable 'compiz' (recommended) or\n20/04/2016 08:27:57   supply the x11vnc '-noxdamage' command line option.\n20/04/2016 08:27:57 \n20/04/2016 08:27:57 Wireframing: -wireframe mode is in effect for window moves.\n20/04/2016 08:27:57   If this yields undesired behavior (poor response, painting\n20/04/2016 08:27:57   errors, etc) it may be disabled:\n20/04/2016 08:27:57    - use '-nowf' to disable wireframing completely.\n20/04/2016 08:27:57    - use '-nowcr' to disable the Copy Rectangle after the\n20/04/2016 08:27:57      moved window is released in the new position.\n20/04/2016 08:27:57   Also see the -help entry for tuning parameters.\n20/04/2016 08:27:57   You can press 3 Alt_L's (Left \"Alt\" key) in a row to \n20/04/2016 08:27:57   repaint the screen, also see the -fixscreen option for\n20/04/2016 08:27:57   periodic repaints.\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 XFIXES available on display, resetting cursor mode\n20/04/2016 08:27:58   to: '-cursor most'.\n20/04/2016 08:27:58   to disable this behavior use: '-cursor arrow'\n20/04/2016 08:27:58   or '-noxfixes'.\n20/04/2016 08:27:58 using XFIXES for cursor drawing.\n20/04/2016 08:27:58 GrabServer control via XTEST.\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 Scroll Detection: -scrollcopyrect mode is in effect to\n20/04/2016 08:27:58   use RECORD extension to try to detect scrolling windows\n20/04/2016 08:27:58   (induced by either user keystroke or mouse input).\n20/04/2016 08:27:58   If this yields undesired behavior (poor response, painting\n20/04/2016 08:27:58   errors, etc) it may be disabled via: '-noscr'\n20/04/2016 08:27:58   Also see the -help entry for tuning parameters.\n20/04/2016 08:27:58   You can press 3 Alt_L's (Left \"Alt\" key) in a row to \n20/04/2016 08:27:58   repaint the screen, also see the -fixscreen option for\n20/04/2016 08:27:58   periodic repaints.\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 XKEYBOARD: number of keysyms per keycode 7 is greater\n20/04/2016 08:27:58   than 4 and 51 keysyms are mapped above 4.\n20/04/2016 08:27:58   Automatically switching to -xkb mode.\n20/04/2016 08:27:58   If this makes the key mapping worse you can\n20/04/2016 08:27:58   disable it with the \"-noxkb\" option.\n20/04/2016 08:27:58   Also, remember \"-remap DEAD\" for accenting characters.\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 X FBPM extension not supported.\n20/04/2016 08:27:58 X display is not capable of DPMS.\n20/04/2016 08:27:58 --------------------------------------------------------\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 Default visual ID: 0x21\n20/04/2016 08:27:58 Read initial data from X display into framebuffer.\n20/04/2016 08:27:58 initialize_screen: fb_depth/fb_bpp/fb_Bpl 24/32/5440\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 X display :99.0 is 32bpp depth=24 true color\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 Listening for VNC connections on TCP port 5900\n20/04/2016 08:27:58 Listening for VNC connections on TCP6 port 5900\n20/04/2016 08:27:58 listen6: bind: Address already in use\n20/04/2016 08:27:58 Not listening on IPv6 interface.\n20/04/2016 08:27:58 \n20/04/2016 08:27:58 Xinerama is present and active (e.g. multi-head).\n20/04/2016 08:27:58 Xinerama: number of sub-screens: 1\n20/04/2016 08:27:58 Xinerama: no blackouts needed (only one sub-screen)\n20/04/2016 08:27:58 \nX11 MIT Shared Memory Attach failed:\n  Is your DISPLAY=:99.0 on a remote machine?\n  Suggestion, use: x11vnc -display :0 ... for local display :0\ncaught X11 error:\n20/04/2016 08:27:58 deleted 43 tile_row polling images.\nX Error of failed request:  BadAccess (attempt to access private resource denied)\n  Major opcode of failed request:  130 (MIT-SHM)\n  Minor opcode of failed request:  1 (X_ShmAttach)\n  Serial number of failed request:  49\n  Current serial number in output stream:  94\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSetting default value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSetting default value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\nFailed to read: session.screen0.opaqueMove\nSetting default value\nFailed to read: session.screen0.fullMaximization\nSetting default value\nFailed to read: session.screen0.maxIgnoreIncrement\nSetting default value\nFailed to read: session.screen0.maxDisableMove\nSetting default value\nFailed to read: session.screen0.maxDisableResize\nSetting default value\nFailed to read: session.screen0.workspacewarping\nSetting default value\nFailed to read: session.screen0.showwindowposition\nSetting default value\nFailed to read: session.screen0.autoRaise\nSetting default value\nFailed to read: session.screen0.clickRaises\nSetting default value\nFailed to read: session.screen0.defaultDeco\nSetting default value\nFailed to read: session.screen0.tab.placement\nSetting default value\nFailed to read: session.screen0.windowMenu\nSetting default value\nFailed to read: session.screen0.noFocusWhileTypingDelay\nSetting default value\nFailed to read: session.screen0.workspaces\nSetting default value\nFailed to read: session.screen0.edgeSnapThreshold\nSetting default value\nFailed to read: session.screen0.window.focus.alpha\nSetting default value\nFailed to read: session.screen0.window.unfocus.alpha\nSetting default value\nFailed to read: session.screen0.menu.alpha\nSetting default value\nFailed to read: session.screen0.menuDelay\nSetting default value\nFailed to read: session.screen0.tab.width\nSetting default value\nFailed to read: session.screen0.tooltipDelay\nSetting default value\nFailed to read: session.screen0.allowRemoteActions\nSetting default value\nFailed to read: session.screen0.clientMenu.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.maxOver\nSetting default value\nFailed to read: session.screen0.tabs.intitlebar\nSetting default value\nFailed to read: session.screen0.focusModel\nSetting default value\nFailed to read: session.screen0.tabFocusModel\nSetting default value\nFailed to read: session.screen0.focusNewWindows\nSetting default value\nFailed to read: session.screen0.focusSameHead\nSetting default value\nFailed to read: session.screen0.rowPlacementDirection\nSetting default value\nFailed to read: session.screen0.colPlacementDirection\nSetting default value\nFailed to read: session.screen0.windowPlacement\nSetting default value\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSetting default value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\nFailed to read: session.screen0.opaqueMove\nSetting default value\nFailed to read: session.screen0.fullMaximization\nSetting default value\nFailed to read: session.screen0.maxIgnoreIncrement\nSetting default value\nFailed to read: session.screen0.maxDisableMove\nSetting default value\nFailed to read: session.screen0.maxDisableResize\nSetting default value\nFailed to read: session.screen0.workspacewarping\nSetting default value\nFailed to read: session.screen0.showwindowposition\nSetting default value\nFailed to read: session.screen0.autoRaise\nSetting default value\nFailed to read: session.screen0.clickRaises\nSetting default value\nFailed to read: session.screen0.defaultDeco\nSetting default value\nFailed to read: session.screen0.tab.placement\nSetting default value\nFailed to read: session.screen0.windowMenu\nSetting default value\nFailed to read: session.screen0.noFocusWhileTypingDelay\nSetting default value\nFailed to read: session.screen0.workspaces\nSetting default value\nFailed to read: session.screen0.edgeSnapThreshold\nSetting default value\nFailed to read: session.screen0.window.focus.alpha\nSetting default value\nFailed to read: session.screen0.window.unfocus.alpha\nSetting default value\nFailed to read: session.screen0.menu.alpha\nSetting default value\nFailed to read: session.screen0.menuDelay\nSetting default value\nFailed to read: session.screen0.tab.width\nSetting default value\nFailed to read: session.screen0.tooltipDelay\nSetting default value\nFailed to read: session.screen0.allowRemoteActions\nSetting default value\nFailed to read: session.screen0.clientMenu.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.maxOver\nSetting default value\nFailed to read: session.screen0.tabs.intitlebar\nSetting default value\nFailed to read: session.screen0.focusModel\nSetting default value\nFailed to read: session.screen0.tabFocusModel\nSetting default value\nFailed to read: session.screen0.focusNewWindows\nSetting default value\nFailed to read: session.screen0.focusSameHead\nSetting default value\nFailed to read: session.screen0.rowPlacementDirection\nSetting default value\nFailed to read: session.screen0.colPlacementDirection\nSetting default value\nFailed to read: session.screen0.windowPlacement\nSetting default value\nFailed to read: session.screen0.slit.acceptKdeDockapps\nSetting default value\nFailed to read: session.screen0.slit.autoHide\nSetting default value\nFailed to read: session.screen0.slit.maxOver\nSetting default value\nFailed to read: session.screen0.slit.placement\nSetting default value\nFailed to read: session.screen0.slit.alpha\nSetting default value\nFailed to read: session.screen0.slit.onhead\nSetting default value\nFailed to read: session.screen0.slit.layer\nSetting default value\nFailed to read: session.screen0.toolbar.autoHide\nSetting default value\nFailed to read: session.screen0.toolbar.maxOver\nSetting default value\nFailed to read: session.screen0.toolbar.visible\nSetting default value\nFailed to read: session.screen0.toolbar.alpha\nSetting default value\nFailed to read: session.screen0.toolbar.layer\nSetting default value\nFailed to read: session.screen0.toolbar.onhead\nSetting default value\nFailed to read: session.screen0.toolbar.placement\nSetting default value\nFailed to read: session.screen0.toolbar.height\nSetting default value\nFailed to read: session.screen0.iconbar.mode\nSetting default value\nFailed to read: session.screen0.iconbar.alignment\nSetting default value\nFailed to read: session.screen0.iconbar.iconWidth\nSetting default value\nFailed to read: session.screen0.iconbar.iconTextPadding\nSetting default value\nFailed to read: session.screen0.iconbar.usePixmap\nSetting default value\n```\n. ",
    "cblakkan": "I've also run into this problem. \nappending selenium options: -trustAllSSLCertificates -timeout 180\nWaiting xvfb...\n-bash: 180: command not found\n:(\n. ",
    "stigkj": "I still got some problems using this patch with the following environment variable:\nno_proxy=*.local, 169.254/16\nI made a PR (#316) that handles this too.\n. ",
    "allankilpatrick": "Seem to have a related problem  @stigkj \nThe PR only appears to have went into the standalone images, is there a reason for that ?\ndocker run -d -P -p 5900:5900 --expose 5590  -e HUB_PORT_4444_TCP_ADDR=X.X.X.X -e HUB_PORT_4444_TCP_PORT=4444  -e SE_OPTS='-host 1.2.3.4 -port 5590' -e 'SCREEN_WIDTH=1920' -e 'SCREEN_HEIGHT=1080' selenium/node-chrome-debug:3.0.1-aluminum\nWhen I run the above docker logs show:\n```\nWaiting xvfb...\n-bash: 1.2.3.4: command not found\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n```\nAfter a couple of seconds the container fails and disconnects.\n. Would be really nice to get this merged in \ud83d\ude04 \n. @otsvetkov I've merged this and created docker images. WFM\n. ",
    "jessyZu": "+1. ",
    "lmtierney": "@diemol Thanks for following up on these. I believe it is going to stay that way, at least until https://bugs.chromium.org/p/chromium/issues/detail?id=617931 has some movement. The releases of 3.4 and geckodriver 0.16 were coordinated together so it is best they are used together.. From what I understand, geckodriver & Firefox do not yet support the proxy passed in via capabilities and the only way to get it to do so is to create a Firefox profile with the proxy set and then use that profile. Hooray for only modifying the .txt file!. This is an issue with selenium grid, and is being worked on seleniumhq/selenium#3808. I should mention it's only in grid mode and standalone mode works fine. If you want to use the latest docker version you'll have to downgrade python bindings to 3.4.1 I believe. acceptInsecureCerts is a capability that needs to be passed upon driver instantiation, you would need to do this somehow through Behat. You will need to check with the Behat people on how to do this as it is not officially supported by Selenium. Afaik, the only way to build it into the container would be to set that setting within the default Firefox profile itself which I wouldn't know how to go about doing.. @diemol ?. I'm guessing you're running into seleniumhq/selenium#3808. For python you can downgrade to 3.3.1 (that's bindings, not grid) until the fix for that is released.. Selenium is not a test runner, it controls web browsers via vendor webdrivers. It would have nothing to do with finding tests in your test runner. -debug was changed to be a flag that is true if passed, so just drop the true from your SE_OPTS and make it SE_OPTS=\"-debug\". https://github.com/SeleniumHQ/selenium/commit/8f325df6feb805f40990929ee01e3b8cd528b2a6#diff-951fbb9276fd3bcbea8c6555cffada2fR149. @testphreak I have a feeling that the web ui is just giving the wrong value. When you have it all up and running, try performing a GET to this and check the value of enablePassThrough:\nhttp://172.17.0.2:4444/grid/api/proxy?id=http://172.17.0.3:5555\nIf your IPs have changed since you posted that config, the GET should be formed such as:\nhttp://<hub url>:<hub port>/grid/api/proxy?id=<hub id>. Actually I take that back, that only gives you the original requested parameters. Your node should always be passthrough as the HUB will make the correct requests and the node should just pass them through as-is. That looks like it would be more of a selenium bug, you'll have to show us some code and what language/version of bindings you are using. Are you trying to set the script timeout shortly after creating a session? That message is showing that an OSS command is trying to be used for Firefox when it should be a w3c command. https://github.com/SeleniumHQ/docker-selenium/wiki/Tagging-Convention. Was there somewhere stating that the project follows this exactly?\nIf a new chromedriver comes out that supports the new Chrome version that came out, you want to wait until the selenium project itself comes out with a new release even if using Chrome is broken without it?. This is a question rather than an issue. Please send questions to the selenium user group.\nFor issues please provide a concise reproducible test case and describe what results you are seeing and what results you expect. See CONTRIBUTING.md. 11:26:38.814 INFO - Capabilities {args: [headless, disable-infobars], browserName: chrome, goog:chromeOptions: {}, version: } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\nThose args need to be inside goog:chromeOptions, what code are you sending?. I know there was a bug in chrome/chromedriver where performing get on a url that ended with a hash location didn't work, but I cannot find it right now. Regardless, this is an issue with chrome/chromedriver.\nPlease log any Chrome & Chromedriver issues with Chromium: https://bugs.chromium.org/p/chromedriver/issues/list. Actually, this could be something different, so I'm leaving it open for now. Can you try with 3.9.1?. @baflQA that's the one along with https://bugs.chromium.org/p/chromedriver/issues/detail?id=2239, thanks! @vavdagic are you attempting to go to a hash url?. @vavdagic Closing in favor of the chromium bug. Please see their final comment:\nhttps://bugs.chromium.org/p/chromedriver/issues/detail?id=2239#c10. The key was changed in chromedriver in version 2.31\nhttps://chromedriver.storage.googleapis.com/2.31/notes.txt\nIt used to be backward compatible, so the chromedriver team may have removed that compatibility recently.. It's at the bottom of https://github.com/SeleniumHQ/docker-selenium#debugging\n\nWhen you are prompted for the password it is secret. If you wish to change this then you should either change it in the /NodeBase/Dockerfile and build the images yourself, or you can define a Docker image that derives from the posted ones which reconfigures it. I'm no yml expert, but try defining them in key: value in your yml file. I don't think = works:\n\nenvironment:\n       - NODE_MAX_INSTANCES: 10\n       - NODE_MAX_SESSION: 10\n       - HUB_HOST: hub. Please log any Chrome & Chromedriver issues with Chromium: https://bugs.chromium.org/p/chromedriver/issues/list. Seems to me this is a w3c issue. I doubt the correct capabilities are being sent for w3c implementation since the Behat/Mink does not support this yet https://github.com/minkphp/MinkSelenium2Driver/issues/254. There's no workaround that I'm aware of if that is in fact what is causing it not to open. That issue is a year and a half old and Firefox has been running w3c for a long time. They should have been ready for it. This is probably due to the chromedriver bug https://bugs.chromium.org/p/chromedriver/issues/detail?id=2144&desc=2. moveto is not a valid command for a w3c compatible webdriver. That depends on your versions of server. Older selenium server translated moveto to the w3c equivalent. Or, if you're using an older version of Firefox and legacy Firefox Driver that would work as well.. @jmurphy87 I am not a JS guy by any means, but mouseMove is a legacy action and you should switch to move action for Firefox or any other w3c browser. There's also the option of bridge mode as documented here. Bridge mode might be what is giving you the issue then. Bridge mode attempts w3c action and falls back to legacy action if any piece of the action sequence gives an error, which is definitely not what you want to have happen in Firefox.. 3.14.0 is the version of the selenium server, 4.0.0-alpha.1 is the version of the javascript library talking to server. These are two completely different things. What is the version of the standalone server you are using locally. Please also share some of the javascript code you are using to produce this error. Sigh... you're using protractor, which is known to have issues with geckodriver. I wish you would have mentioned that. Have you raised the issue there? This definitely isn't a docker issue so it shouldn't be in this repo; but I don't know what repo it should be in. We may be able to narrow it down if you use a SMALL reproducible scenario using ONLY the selenium-webdriver node library. I will not be running shell scripts without digging into all of them to see what exactly will run, and I don't have time to do that.. I'll be happy to look if you provide a scenario outside of shell scripts and using selenium-webdriver. Other than that (without using webdriver-manager and protractor) I will be unable to help. It should be as simple as the command line command you use to start your docker instance and a small snippet of js code. Other than that, I'll leave it up to someone else to tackle this.. ",
    "sixinli": "same with the firefox one :( \n/opt/bin/entry_point.sh: line 3: /opt/bin/functions.sh: No such file or directory\n/opt/bin/entry_point.sh: line 16: get_server_num: command not found\n. +1, have to be back on 2.53.1 because of self cert issue in firefox too :(. confirmed that it works! thanks! . ",
    "capoferro": "Looks like an untested commit:\nhttps://github.com/SeleniumHQ/docker-selenium/commit/1b2786e6090dbda785d5869db2ef73c3f20ad923\nIt refactors the entrypoint.sh, but doesn't update the Dockerfile or provide the functions.sh that the new entrypoint.sh needs.\n. @kayabendroth ^\n. An easy way to demonstrate the problem:\n```\n$ docker run selenium/standalone-chrome:latest ls /opt/bin\nentry_point.sh\n$ docker run selenium/standalone-chrome:latest cat /opt/bin/entry_point.sh\n!/bin/bash\nsource /opt/bin/functions.sh\n...etc\n```\n. ",
    "pda": "\nTested and confirmed only seems to be an issue with the -debug drivers. non-debug driver for both chrome and firefox work fine.\n\nThe source code of the non-debug standalone-chrome also has an entry_point.sh (actually used as CMD not ENTRYPOINT) sourcing non-existent /opt/bin/functions.sh. However that code doesn't seem to have landed in the recent 2.52.0 or 2.53.0 image tags, but is broken in the :latest tag:\npda@paulbook ~ \u276f docker run --rm -it selenium/standalone-chrome:latest\n/opt/bin/entry_point.sh: line 3: /opt/bin/functions.sh: No such file or directory\n/opt/bin/entry_point.sh: line 16: get_server_num: command not found\n. ",
    "Spy-Seth": "I confirm I have an issue the node-chrome one:\n$ dc up selenium_node_chrome\nmyproject_selenium_hub_1 is up-to-date\nStarting myproject_selenium_node_chrome_1\nAttaching to myproject_selenium_node_chrome_1\nselenium_node_chrome_1                 | xvfb-run: error: Xvfb failed to start\nmyproject_selenium_node_chrome_1 exited with code 1\n. ",
    "park9140": "@kayabendroth, I seem to still have this problem with the debug builds even using 2.53.0 I am on docker version 1.9.1 is there a dependency or something that needs to be cleared out if you had it before this fix?\n. ",
    "mickfeech": "for what it's worth i created a wrapper of the firefox command exporting http_proxy, https_proxy, and no_proxy environment variables which seems to have worked.\n. ",
    "orieken": "it worked for me to launch the containers with \n-e http_proxy=\"<proxy setting>\"\n-e https_proxy=\"<proxy setting>\"\n-e no_proxy=\"<proxy setting>\"\nlike \ndocker run -d -P --name standalone-chrome -e GRID_TIMEOUT=10000 \\\n     -e no_proxy='localhost' \\\n     -e http_proxy='whatever-setting' \\\n     -e https_proxy='whatever-setting' \\\n     selenium/standalone-chrome. ",
    "azakordonets": "I would love to find out how as well. So far, tried to provide next options to Firefox profile, but that didn't help \njava\nprofile.setPreference(\"extensions.blocklist.enabled\", false);\n        profile.setPreference(\"app.update.enabled\", false);\n        profile.setPreference(\"browser.search.update\", false);\n        profile.setPreference(\"extensions.update.enabled\", false);\n        profile.setPreference(\"plugins.update.url\", \"\");\n        profile.setPreference(\"plugins.hide_infobar_for_outdated_plugin\", true);\n. It's been could of weeks when i had this problem. I'm not sure, but i think you're right - the problem is in rendering difference in headless and non-headless mode. Will try to add some waits\n. ",
    "GrayedFox": "Getting the exact same error but for Chrome. Will post my log here in case it is helpful, I think it's from a timeout waiting for the chromedriver instance to be available. Tried increasing timeout to 30 seconds using -timeout=30 option when starting selenium server but not yet sure that will work.\nLog:\n[acceptance-nemesis] java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException\n[acceptance-nemesis] Build info: version: '3.0.1', revision: '1969d75', time: '2016-10-18 09:48:19 -0700'\n[acceptance-nemesis] System info: host: 'N/A', ip: 'N/A', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-59-generic', java.version: '1.8.0_121'\n[acceptance-nemesis] Driver info: driver.version: unknown\n[acceptance-nemesis]    at java.util.concurrent.FutureTask.report(FutureTask.java:122)\n[acceptance-nemesis]    at java.util.concurrent.FutureTask.get(FutureTask.java:192)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultSession.<init>(DefaultSession.java:119)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:131)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:36)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:189)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:222)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:184)\n[acceptance-nemesis]    at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:150)\n[acceptance-nemesis]    at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n[acceptance-nemesis]    at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n[acceptance-nemesis]    at java.lang.Thread.run(Thread.java:745)\n[acceptance-nemesis] Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException\n[acceptance-nemesis] Build info: version: '3.0.1', revision: '1969d75', time: '2016-10-18 09:48:19 -0700'\n[acceptance-nemesis] System info: host: 'N/A', ip: 'N/A', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-59-generic', java.version: '1.8.0_121'\n[acceptance-nemesis] Driver info: driver.version: unknown\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:113)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:209)\n[acceptance-nemesis]    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)\n[acceptance-nemesis]    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n[acceptance-nemesis]    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n[acceptance-nemesis]    ... 1 more\n[acceptance-nemesis] Caused by: java.lang.reflect.InvocationTargetException\n[acceptance-nemesis]    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n[acceptance-nemesis]    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n[acceptance-nemesis]    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n[acceptance-nemesis]    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n[acceptance-nemesis]    at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)\n[acceptance-nemesis]    ... 9 more\n[acceptance-nemesis] Caused by: org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start.\n[acceptance-nemesis] Build info: version: '3.0.1', revision: '1969d75', time: '2016-10-18 09:48:19 -0700'\n[acceptance-nemesis] System info: host: 'N/A', ip: 'N/A', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-59-generic', java.version: '1.8.0_121'\n[acceptance-nemesis] Driver info: driver.version: ChromeDriver\n[acceptance-nemesis]    at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:178)\n[acceptance-nemesis]    at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:166)\n[acceptance-nemesis]    at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78)\n[acceptance-nemesis]    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)\n[acceptance-nemesis]    at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:241)\n[acceptance-nemesis]    at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:128)\n[acceptance-nemesis]    at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:141)\n[acceptance-nemesis]    at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:174)\n[acceptance-nemesis]    at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:142)\n[acceptance-nemesis]    ... 14 more\n[acceptance-nemesis] Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:3394/status] to be available after 20000 ms\n[acceptance-nemesis]    at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:107)\n[acceptance-nemesis]    at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:175)\n[acceptance-nemesis]    ... 22 more\n[acceptance-nemesis] Caused by: com.google.common.util.concurrent.UncheckedTimeoutException: java.util.concurrent.TimeoutException\n[acceptance-nemesis]    at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:143)\n[acceptance-nemesis]    at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:80)\n[acceptance-nemesis]    ... 23 more\n[acceptance-nemesis] Caused by: java.util.concurrent.TimeoutException\n[acceptance-nemesis]    at java.util.concurrent.FutureTask.get(FutureTask.java:205)\n[acceptance-nemesis]    at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:130)\n[acceptance-nemesis]    ... 24 more\n[acceptance-nemesis] 12:53:36.105 WARN - Exception: null. ",
    "tommywo": "try changing HUB_PORT_4444_TCP_ADDR to \"10.52.8.39\"\n. thats because nodes arent shutdown gracefully\n. ",
    "zypherman": "I am not sure that your second point really needs clarification. If you understand what the port flag means then it should be clear what the documentation is saying. All it's saying is that the vnc service is running on 5900 on the node but externally you can map it to whichever port you please. \n. @thataustin The --link flag is to enable the hub and node to talk to each other correctly when they are both running on the same machine. It links the containers together to establish that communication. For the VNC part its not really directly related since you can have a standalone node running and connect to the VNC through that. \n. Does it allow them if you go onto the node and start chrome through the command line? You will have to open the terminal emulator and run something like 'google-chrome --user-data-dir' to open chrome. Then run through your scenario just like the test would. I am having some strange issues with the latest chrome-debug image and I am wondering if this is another thing its doing. \n. Is the window opening as large as it can? Can you look into adding a driver.manage().window().maximize() at the start of your test? If you are on chrome you will have to add the maximize() flag differently. \n. See https://github.com/SeleniumHQ/docker-selenium/issues/87\nAdd to your docker file:\nexport DBUS_SESSION_BUS_ADDRESS=/dev/null\nor if you are using docker compose:\n environment:\n    DBUS_SESSION_BUS_ADDRESS:/dev/null\n. You should be able to modify the browser version inside the docker file so you can use the image locally. Then build the image and name is something different so you know its your new version after you built it. You will have to make sure you can still copy this file into your image https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeFirefox/generate_config for firefox. For chrome you will need https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeChrome/chrome_launcher.sh as well as that config script. So probably easiest to just check the entire project out locally and build the images with docker inside the project directories so you don't forget any of the files. \nIf that doesn't work for some reason or another. You can use Git to see what the entire repo looked like when the browser versions were at those numbers and you could use the images that were generated then or just use the docker files to make the images again. . ",
    "thataustin": "On this topic, is the --link part necessary to get the VNC server running correctly?. ",
    "jmbowman": "It looks like this timed out before it got cleaned up and merged; would a newer PR for this with tests be welcome, or is mp4 playback considered out of scope for these images?  I'm switching over an existing test suite from Vagrant in which many tests need the browser to support mp4 playback, and I suspect that it's not that uncommon of a requirement.  On the other hand, adding this package and all of its dependencies would increase the image's disk space by about 122 MB (it's 32.4 MB worth of Ubuntu package downloads).\nIn the short term, I'll probably create my own image extending this one to handle it (I've considered using the elgalu images, but they're even larger by far). Just wondering if it's also worth submitting a PR for it.. I'm hitting something similar; it seems that when the browser window is launched, the OS doesn't consider it to have focus.  If I connect via VNC and click on the window before the focus-related tests run, they all pass; otherwise, they fail.  I'm looking into workarounds like the ones described here, but it would really help if the launched window had focus by default.. I did find a workaround for this: enabling the \"focusmanager.testmode\" Firefox preference.  This had been made the default when launched from Selenium FirefoxDriver around Firefox 42 or so, but it is apparently no longer enabled by default when launching newer Firefox versions via geckodriver.  I'm not sure if enabling it by default in the image is a good idea or not, but it probably at least merits a mention in the README as a common pitfall when testing focus-related functionality.. ",
    "robtec": "Hey @lcacciagioni as in run the Selenium Grid Server on net=host VS -p 4444:4444... or do you mean the grid slave nodes?\n. ",
    "robvelor": "I would like to do this too, basically have the grid server on net=host and have the nodes connect connect to this server (should be at localhost).\n. @cbrevik That error should popup regardless of OS, I believe the browser images require the hub host to point to the selenium hub, so it might work by just adding the extra host to the browser containers?\n. ",
    "cbrevik": "I would also like to do this (use net=host on nodes), but it cannot be done at the moment because the nodes require that you link the Selenium Hub. If you try to link the hub and use net=host, you will get the following error (on Windows): Conflicting options: host type networking can't be used with links. This would result in undefined behavior. \nWould be cool if instead of requiring a link to the hub, you could optionally provide IP+port.\n. @robvelor That's pretty much what I said? \nAnyway, you can add net=host without using link, by setting the correct environment variables (HUB_PORT_4444_TCP_ADDR and HUB_PORT_4444_TCP_PORT. \nSomething like:\ndocker run -d -P -v /dev/shm:/dev/shm --net=host -e \"HUB_PORT_4444_TCP_ADDR=10.0.75.2\" -e \"HUB_PORT_4444_TCP_PORT=4444\" selenium/node-chrome\n. Thanks for the suggestion, just tried it. Sadly, still experiencing the same issue. \nI did get an error when running that command though:\n```\ngoogle-chrome --user-data-dir\n[107:107:0523/213838:ERROR:browser_main_loop.cc(219)] Running without the SUID sandbox! See https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the sandbox on.\n[107:121:0523/213838:ERROR:bus.cc(432)] Failed to connect to the bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory\n[316:316:0523/213839:ERROR:sandbox_linux.cc(334)] InitializeSandbox() called with multiple threads in process gpu-process\nLaunchProcess: failed to execvp:\n(google-chrome:107): GConf-WARNING **: Client failed to connect to the D-BUS daemon:\nAddress does not contain a colon\nLaunchProcess: failed to execvp:\nLaunchProcess: failed to execvp:\netc (several times)\n(google-chrome:107): LIBDBUSMENU-GLIB-WARNING **: Unable to get session bus: Address element '/dev/null' does not contain a colon (:)\nLaunchProcess: failed to execvp:\nLaunchProcess: failed to execvp:\nLaunchProcess: failed to execvp:\netc (several times)\n```\nNot sure if this is part of the problem?\n. When I opened up for navigating to external sites I do receive HttpOnly-cookies. So this is probably not related to docker-selenium or chromedriver.\nIt might be related to use of VPN on my host PC, which I need for the local IIS website (SQL-server related). Anyway, closing the issue. Thanks!\n. Is people getting --headless to work with this library? Keep getting unknown error: Chrome failed to start: exited normally as noted in #520. Thanks for the suggestion @guillaumevincent! Ran fc-list on the container, and it seems like  Liberation Mono is already installed.. Experiencing the same error. Built a new Docker image based on https://github.com/SeleniumHQ/docker-selenium/commit/35b50401579542815a1394b90da5c3a482fe92a2 and I get:\n\nunknown error: Chrome failed to start: exited normally\n (Driver info: chromedriver=2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8),platform=Linux 3.10.0-514.16.1.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information)\n\nUsing RemoteWebDriver in C#.\nEdit: Works fine with --headless and same C# code when running Chrome locally (not in Docker-container).. Ran top on the node/container. It doesn't look like chromedriver-2 nor chrome is actually failing to start. Might be a communication error between the two when --headless is enabled?\nChrome goes idle really quickly in resource usage after starting though.. I've run the selenium/node-chrome-debug with priviliged and it still gets this error.\nMaybe something you've done with that custom docker image which avoids this error? @viettd56 . ",
    "senpl": "To me default setting for google dns make no sense. How many people want to test pages that are currently in google DNS ??? Most will want their locally existing sites.. ",
    "loganrenz": "Im having a similar problem. I can't click on elements and I think its because the window is just too small. I am maximizing the window on start.\nOddly enough, if I run the debug image it works. \n. ",
    "stephenrenshaw": "We had the same issue particularly with responsive websites, we fixed it by forcing the browser size to 1366x768 using the driver.manage as above, we also set the desktop size environment variables to 1920x1080x24 when starting the container.\n-e SCREEN_HEIGHT=1080\n-e SCREEN_WIDTH=1920\n-e SCREEN_DEPTH=24\n. ",
    "roydekleijn": "Now I use the docker-compose file from below:\nseleniumhub:\n  image: selenium/hub\n  ports:\n    - 4444:4444\n  environment:\n    - GRID_MAX_SESSION=50\nfirefoxnode:\n  image: selenium/node-firefox\n  environment:\n    SCREEN_WIDTH: 2880\n    SCREEN_HEIGHT: 1800\n  ports:\n    - 5900\n  links:\n    - seleniumhub:hub\nchromenode:\n  image: selenium/node-chrome\n  environment:\n    SCREEN_WIDTH: 2880\n    SCREEN_HEIGHT: 1800\n  ports:\n    - 5900\n  links:\n    - seleniumhub:hub. For chrome you can use the options below: (since .maxmize() doesn't work)\nFor MAC or Linux:\nChromeOptions chromeOptions = new ChromeOptions();\nchromeOptions.addArguments(\"--kiosk\");\ndriver = new ChromeDriver(chromeOptions);\nFor Windows:\nChromeOptions chromeOptions = new ChromeOptions();\nchromeOptions.addArguments(\"--start-maximized\");\ndriver = new ChromeDriver(chromeOptions);\nOn Fri, Apr 28, 2017 at 3:34 PM, Vikram Ingleshwar <notifications@github.com\n\nwrote:\n@roydekleijn https://github.com/roydekleijn Thanks for info & do you\nalso set chrome browser size inside script as well ?\nsomething like getDriver().manage().window().setSize(new Dimension(X, Y));\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/220#issuecomment-297999060,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABPP1SVAEXKEVMNf4_rPIaDhTG0yI5CHks5r0erngaJpZM4IjfNR\n.\n\n\n-- \n[image: --]\nRoy de Kleijn\n[image: http://]about.me/roydekleijn\nhttp://about.me/roydekleijn?promo=email_sig\n. any update on alpine ?\n. you want me to put the mvn project there as well ? (inside: HubPrioritizer/\n)\nOn Thu, Jun 2, 2016 at 6:09 PM, Leo Gallucci notifications@github.com\nwrote:\n\nSo you just dropped a binary HubPrioritizer/GridPlugin-0.0.1.jar here :p\nWhere is the source code?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/pull/231#issuecomment-223340559,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ABPP1X4nbUj32_JrGjib8XRmUoYiP6Vrks5qHwA1gaJpZM4IssSW\n.\n\n\n[image: --]\nRoy de Kleijn\n[image: http://]about.me/roydekleijn\nhttp://about.me/roydekleijn?promo=email_sig\n. ok, good suggestion, will push it shortly\nQuestion @elgalu : My code is now in another repo, do you suggest to Clone and Build from the Dockerfile? Or shall I put the binary in the repo as well, and do a wget for that specific file ?\n. binary removed from repo... \n. What kind of additional steps I have to follow, before my pull request will be merged\n. Ok, at least we have some clarity now. Will put it in my fork of\ndocker-selenium.\nOp 2 okt. 2016 10:06 a.m. schreef \"Dj\" notifications@github.com:\n\nnot sure i like the idea of having something like this in our repo.. if\nthis is put in, then other \"grid enhancement\" libraries will be put in. as\nfar as i can tell, this is just allowing people to prioritize tests. I\nthink i'd prefer leaving this out. that being said - it's easy to create\nand push your own docker images to hub.docker.com !\nsorry, @roydekleijn https://github.com/roydekleijn. for any future pull\nrequests you may submit, could you please fix your git config --global\nuser.name and git config --global user.email? your commits are showing up\nas an unknown author. also verify that you've signed the CLA\nhttps://spreadsheets.google.com/spreadsheet/viewform?hl=en_US&formkey=dFFjXzBzM1VwekFlOWFWMjFFRjJMRFE6MQ#gid=0\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/pull/231#issuecomment-250959370,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABPP1XW1bhLPzW9aM1xYmZOAzGyBF3wlks5qv2YOgaJpZM4IssSW\n.\n. Any one?\n. Good question... I did some more experiments.\n\nI set it to this:\nenvironment:\n     SCREEN_WIDTH: 1920\n     SCREEN_HEIGHT: 1080\nIn my script I maximize my window, however the output of driver.manage().window().getSize().width and driver.manage().window().getSize().height is:\nwidth 1440\nheight 810\nWhat could be the reason ? or am I missing something ?\n. ",
    "jojojoy2k": "@rajaashutosh It would be nice to have a reply on whether the proposed solution fixed your issue. Thanks!\n. ",
    "dhtlee": "The problem seems to be with Chromedriver version 2.21, which is used by the latest docker image on the public docker hub. Issue should be fixed once Selenium updates the Chromedriver version on the official docker image.\nIn the meantime, vpbonev checked in a fix that updates to Chromedriver version 2.23. You can clone docker-selenium project and build your Chrome (or ChromeDebug) image off that Dockerfile\n. ",
    "shouze": "Here is the early result in term of size of the first container builds:\nselenium/node-base    2.53.0-alpine   151.3 MB\nselenium/node-base    2.53.0          371.6 MB\nselenium/base         2.53.0-alpine   133.9 MB\nselenium/base         2.53.0          293.3 MB\nIt's about 50 to 60% gain with alpine.\nPrior to continue I wanted to discuss with @kayabendroth, @rubytester or any of the @SeleniumHQ team member about the way to organize things:\n- [ ] directories\n- [ ] tests\n- [ ] ...\nI probably have some questions too, like why TZ is set to US/Pacific and so on.\n. @kayabendroth yes I think Alpine have to exist as a side variant, at least during a mid term transition phase (or not, depending  if you wish to maintain Alpine & Ubuntu variants on the long term).\nAbout the DNS issue I think it's ok now as libmusl was missing some feature at some time.\nI can continue to rollout this PR if you whish.\nAs a next step, maybe I can make try to make all chrome containers for example and add some CI tests. Or maybe you have suggestions on the way to make the next move on this PR?\n. @mtscout6 ok done, @elgalu can you plz confirm when you have some time?\n. Didn't work on IT since but feel free to contribute on this PR if you're interested And have some free time ;)\n. Yup, pretty convinced that this issue should be closed, not that easy to produce an alpine variant.. ",
    "stephpy": "Awesome ! \ud83d\udc4d\n. ",
    "SUNx2YCH": "@ddavison, regarding #3, I played a bit with chromium for my pet project (SUNx2YCH/docker-alpine-selenium), but couldn't get it to work. There were some errors related to GPU:\n[544:544:1014/092803:ERROR:gl_surface_glx.cc(381)] glxQueryVersion failed\n[544:544:1014/092803:ERROR:gl_initializer_x11.cc(20)] GLSurfaceGLX::InitializeOneOff failed.\n[544:544:1014/092803:ERROR:gpu_child_thread.cc(390)] Exiting GPU process due to errors during initialization\n[338:360:1014/092803:ERROR:browser_gpu_channel_host_factory.cc(119)] Failed to launch GPU process.\nFast googling didn't help. They say that similar issue was already fixed in v50 (mine is v53.0):\nhttps://bugs.chromium.org/p/chromedriver/issues/detail?id=1298\nSo it's not an easy option even with pre-compiled packages. JFYI.\n. ",
    "ckortekaas": "@ddavison it looks like x11vnc has recently (https://git.alpinelinux.org/cgit/aports/log/unmaintained/x11vnc?showmsg=1) moved from unmaintained to get a maintainer and is available in testing here: http://dl-cdn.alpinelinux.org/alpine/edge/testing/x86_64/x11vnc-0.9.14-r2.apk\nAnd I suspect a majority of people would be happy testing in an alpine chromium instead of google chrome with the reduced file size (and resulting continuous integration drop in build times).\nIt looks like others are building their own alpine-selenium-chromium packages to work around this in the mean time, but there are many benefits to sticking with your well supported SeleniumHQ builds.\nDoes the x11vnc change make alpine selenium worth pursuing or is it still out of reach? . Also seeing my test runners now fail with the latest changes to 2.53.0. Could the release team please change tags for rebuilds to avoid issues like this in the future? Only finding success going as far back as 2.49.1 right now - just like @doits.\n. ",
    "tduboys": "I've run test.sh in local, and I got no errors. How to debug the problem ?\n. Looks that it's the Chrome test who failed.\n[chrome]  > CALL init({\"browserName\":\"chrome\"})\n[chrome]  > POST /session {\"desiredCapabilities\":{\"browserName\":\"chrome\",\"version\":\"\",\"javascriptEnabled\":true,\"platform\":\"ANY\"}}\n[chrome]  > CALL get(\"https://www.wikipedia.org/\")\n[chrome]  > POST /session/url {\"url\":\"https://www.wikipedia.org/\"}\n[chrome]  > CALL title()\n[chrome]  > GET /session/title\n{\"message\":\"[title()] Error response status: 13, , UnknownError - An unknown server-side error occurred while processing the command. Selenium error: Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58'\\nSystem info: host: '4b324fe00c2e', ip: '172.17.0.52', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-86-generic', java.version: '1.8.0_91'\\nDriver info: driver.version: unknown\",\"status\":13,\"cause\":{\"state\":\"unhandled error\",\"sessionId\":\"title\",\"hCode\":9165882...\n[chrome]  > CALL quit()\n[chrome]  > DELETE /session\n. But in our selenium tests, we got more problems with 45.0.2 than with 46.0.1. \nIn our selenium grid, we uses the last FF version, it's better than with the 45.0.2.\nThe tests says that there is a problem with the Chrome node, but i didn't changed it. How can we test what's the best version for Selenium ?\n. ",
    "MartinNuc": "I am having the same issue. Unfortunately overriding it with -e no_proxy=\"\" doesnt work :(\n. I experience this behaviour in Version 1.11.1-beta13.1 (build: 8193).\nUsing -e no_proxy=localhost has no effect :-(\nI am using this command: docker run -d -P -p 5900:5900 --name selenium-node-firefox -e no_proxy=localhost --link selenium-hub:hub selenium/node-firefox-debug:2.53.0\n. Sorry for late reply. I was sick for few days.\nMeanwhile I upgraded to Docker version 1.11.1, build 5604cbe\nTried again -e and indeed it changed env:\ndocker run -P -p 5900:5900 -e \"no_proxy=localhost\" --link selenium-hub:hub selenium/node-firefox-debug:2.53.0 env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=18c7ea1a4e19\nHUB_PORT=tcp://172.17.0.2:4444\nHUB_PORT_4444_TCP=tcp://172.17.0.2:4444\nHUB_PORT_4444_TCP_ADDR=172.17.0.2\nHUB_PORT_4444_TCP_PORT=4444\nHUB_PORT_4444_TCP_PROTO=tcp\nHUB_NAME=/drunk_wescoff/hub\nHUB_ENV_no_proxy=*.local, 169.254/16\nHUB_ENV_GRID_NEW_SESSION_WAIT_TIMEOUT=-1\nHUB_ENV_GRID_JETTY_MAX_THREADS=-1\nHUB_ENV_GRID_NODE_POLLING=5000\nHUB_ENV_GRID_CLEAN_UP_CYCLE=5000\nHUB_ENV_GRID_TIMEOUT=30000\nHUB_ENV_GRID_BROWSER_TIMEOUT=0\nHUB_ENV_GRID_MAX_SESSION=5\nHUB_ENV_GRID_UNREGISTER_IF_STILL_DOWN_AFTER=30000\nno_proxy=localhost\nDEBIAN_FRONTEND=noninteractive\nDEBCONF_NONINTERACTIVE_SEEN=true\nTZ=US/Pacific\nSCREEN_WIDTH=1360\nSCREEN_HEIGHT=1020\nSCREEN_DEPTH=24\nDISPLAY=:99.0\nFIREFOX_VERSION=45.0.2\nLANGUAGE=en_US.UTF-8\nLANG=en_US.UTF-8\nHOME=/root\nHowever there is another env with space: HUB_ENV_no_proxy=*.local, 169.254/16 (i am using hub+nodes mode)\nSo using -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost did the trick :-) Thank you for assistance.\n. There is 2.23 already :-) https://sites.google.com/a/chromium.org/chromedriver/downloads\n. ",
    "rnorth": "@MartinNuc actually looking at how I worked around it, I set the no_proxy value to localhost rather than an empty string. Maybe that makes a difference?\nOn trying to reproduce this tonight, it looks like this has indeed been fixed in Beta 13.1. I now have a version string of: Version 1.11.1-beta13.1 (build: 8193)\nThis doesn't seem to be injecting a broken no_proxy env var any more. \n. This is strange - I was launching via an API rather than docker run, so perhaps there's some difference there. I'll go back and try and figure out what's going on!\n. @MartinNuc I've checked through the CLI as well as the API - things seem to be working for me setting no_proxy to localhost. My Docker for Mac version string is Version 1.11.1-beta13.1 (build: 8193)\ne9f58bbe60f0debccc097b7d27cad200556ec6f5...\nWhat do you get from executing these commands:\ndocker run selenium/standalone-chrome-debug:2.53.0 env\nand\ndocker run -e \"no_proxy=localhost\" selenium/standalone-chrome-debug:2.53.0 env\n?\nMy output is:\n$ docker run selenium/standalone-chrome-debug:2.53.0 env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=39665a2d708e\nno_proxy=*.local, 169.254/16\nDEBIAN_FRONTEND=noninteractive\nDEBCONF_NONINTERACTIVE_SEEN=true\nTZ=US/Pacific\nSCREEN_WIDTH=1360\nSCREEN_HEIGHT=1020\nSCREEN_DEPTH=24\nDISPLAY=:99.0\nCHROME_DRIVER_VERSION=2.21\nDBUS_SESSION_BUS_ADDRESS=/dev/null\nLANGUAGE=en_US.UTF-8\nLANG=en_US.UTF-8\nHOME=/root\n$ docker run -e \"no_proxy=localhost\" selenium/standalone-chrome-debug:2.53.0 env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=524027ad54de\nno_proxy=localhost\nDEBIAN_FRONTEND=noninteractive\nDEBCONF_NONINTERACTIVE_SEEN=true\nTZ=US/Pacific\nSCREEN_WIDTH=1360\nSCREEN_HEIGHT=1020\nSCREEN_DEPTH=24\nDISPLAY=:99.0\nCHROME_DRIVER_VERSION=2.21\nDBUS_SESSION_BUS_ADDRESS=/dev/null\nLANGUAGE=en_US.UTF-8\nLANG=en_US.UTF-8\nHOME=/root\nIf I omit the env command, the container starts up when I set no_proxy but fails (with the error above) when I don't set it.\n. ",
    "lukeaus": "I had the same problem - setting -e no_proxy=localhost fixes the issue using standalone-firefox-debug:2.52.0 on osx using docker for mac (beta) version 1.12.0-rc2-beta17 (build: 9779)\n. ",
    "alexander-clark": "Just in case this is helpful to someone else, I encountered this issue using docker-compose on Docker Beta for OSX. In order to get it working, I had to specify the env var not only for my selenium container, but for each of the containers it linked.\n. ",
    "jamesottaway": "According to the official Docker for Mac forums this has been resolved: https://forums.docker.com/t/space-in-new-no-proxy-env-var-breaking-old-containers/14075/2\nI've tested the fix (upgrade to the latest version, then reset to factory defaults) and was able to remove the workaround from my docker-compose.yml, so hopefully others can confirm whether it's fixed for them too.\nJust keep in mind you lose all local images and containers when you reset to factory defaults\u2026\nEDIT: Maybe I spoke too soon. It just came back somehow, so I did a factory reset again and now it's gone. Not sure what's happening\u2026\n. Any word on updated images on Docker Hub? 3.5.3 still has v2.31 of Chromedriver:\n$ docker pull selenium/node-chrome:3.5.3\n3.5.3: Pulling from selenium/node-chrome\nDigest: sha256:4165564835e6848539162ca5d8e9c6adc401589afec5157497375dec162cd714\nStatus: Image is up to date for selenium/node-chrome:3.5.3\n$ docker run --rm -it selenium/node-chrome:3.5.3 chromedriver --version\nChromeDriver 2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8). ",
    "nathanmarks": "FWIW I am running these containers in Docker for Mac with no problem right now.\n. ",
    "SergeyPirogov": "Faced with problem on Mac. Docker version 1.12.0, build 8eab29e.\nThis helped as workaround:\n-e no_proxy=localhost -e HUB_ENV_no_proxy=localhost\n. Yes, problem only with Debug Containers. \n. ",
    "saradcd77": "I am having issue linking selenium/node-chrome with selenium/hub in Mac OS.\ndocker images\nREPOSITORY              TAG                 IMAGE ID            CREATED             SIZE\nselenium/node-firefox   latest              ebb546f58b4b        2 weeks ago         638.5 MB\nselenium/node-chrome    latest              a0a996ba56a1        2 weeks ago         794.2 MB\nselenium/hub            latest              5079a24eb3bb        2 weeks ago         321 MB\nSarads-MBP:~ saraddhungel$ docker run -d -P \u2014link selenium-hub:hub selenium/node-chrome-debug\ndocker: Error parsing reference: \"\u2014link\" is not a valid repository/tag.\nSee 'docker run --help'.\nSarads-MBP:~ saraddhungel$ docker run -d -P \u2014link selenium-hub:hub selenium/node-chrome-debug\n. Please use this command : \nFirst expose the port using : \ndocker run -d -p 4446:4444 -name selenium-hub -P selenium/hub\nThen to link the hub to the node: \ndocker run -d -P -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub-P:hub selenium/node-chrome. . https://github.com/docker/docker/issues/9145\nHope this helps\nOn Thu, Mar 23, 2017 at 6:08 AM, Jim Br\u00e4nnlund notifications@github.com\nwrote:\n\nSo the issue for me is SE_OPTS, not no_proxy.\nThe offending bit of code is: env | cut -f 1 -d \"=\" | sort > asroot\nSuggested fix is to change it to env | cut -f 1 -d \"=\" | grep -v SE_OPTS\n| sort > asroot\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/227#issuecomment-288672633,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFtP_NQLek0ZjElIQnC2r7B7MLgC-YpVks5rokS5gaJpZM4IpjYK\n.\n. @sandeep540, Not sure if you were able to fix the issue already. Did you tried to expose the ports prior before linking them?\nYou might want to name the port first, expose them so that it can be excessed by your code and then you set up the nodes and link it to the hubs. \n. Sarads-MBP:~ saraddhungel$ docker run -d -P -e no_proxy=localhost -e HUB-ENV_no_proxy=localhost --link selenium-hub-P:hub selenium/node-chrome-debug\n\nI got e39b20bbe9379e102cee533f8da87d4e27986018d5a15e0668ccc7051287c97b after entering the above line. Yet I don't see the nodes connected to the hub. What could be the issue? Some help please! . ",
    "BeyondEvil": "I'm seeing the same issue, seems to not like spaces on osx:\nLC02T26AAGTFM:Downloads jimb$ docker run -p 5555:5555 -p 5900:5900 -e HUB_PORT_4444_TCP_ADDR=172.17.42.1 -e HUB_PORT_4444_TCP_PORT=4444 -e SE_OPTS=\"-host 172.17.42.1\" ppselenium/node-firefox-debug:2.53.1-binks\nappending selenium options: -host 172.17.42.1\nWaiting xvfb...\n-bash: 172.17.42.1: command not found\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nLC02T26AAGTFM:Downloads jimb$ \nmeta:\nLC02T26AAGTFM:Downloads jimb$ docker version\nClient:\n Version:      17.03.0-ce\n API version:  1.24 (downgraded from 1.26)\n Go version:   go1.8\n Git commit:   60ccb22\n Built:      \n OS/Arch:      darwin/amd64\nServer:\n Version:      1.12.3\n API version:  1.24 (minimum version )\n Go version:   go1.6.3\n Git commit:   6b644ec\n Built:        Wed Oct 26 23:26:11 2016\n OS/Arch:      linux/amd64\n Experimental: false. So the issue for me is SE_OPTS, not no_proxy.\nThe offending bit of code is: env | cut -f 1 -d \"=\" | sort > asroot\nSuggested fix is to change it to env | cut -f 1 -d \"=\" | grep -v SE_OPTS | sort > asroot. @yamamoo See this comment: https://github.com/SeleniumHQ/docker-selenium/issues/227#issuecomment-288672633. Or close this and check out #414 instead. ^_^ @ddavison . @ddavison Not sure I understand about the versioning... \nBefore I create a new PR I have a few questions. :)\nRegarding the ARGS (selenium_dir and selenium_version), what versions do you want as default? Are 3.3.1 (and subsequently 3.3) OK?\nWhy is this hardcoded?\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/sa-test.sh#L16\nShould I change that to version instead?\nLike this:\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/test.sh#L3\nWhy is this hardcoded?\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/test.sh#L27\nShould I change that to version instead?\nLike this:\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/test.sh#L34\nFinally, should I update Geckodriver to 0.15.0?\n. Some quick thoughts.\nGeneral:\nIf you change the FF version (ie. rebuild the image(s)) you can add the missing library (libasound 2) at that point. As we kind of expect at that point that you know what you're doing.\nSpecific:\nNot sure you need anything else than the libasound 2 library, as I fail to see how this solves the other issue (instability). If that is the case, skip the if and just install libasound 2 regardless as there are a number of \"unused\" libraries installed anyway. libasound 2 is fairly lightweight and won't bloat the image by much. But I could definitely be in the wrong here. Interesting to see if others with this issue finds the solution in this PR.\nMy 0.2 anyway. \n@ddavison \nThis is kind of what we talked about with trying to make the images more versatile and not locked to specific combinations of browser/driver/selenium versions. I should have some time next week (not this coming one) to start looking at a solution for that. But I want us to discuss testing first. Maybe set up a meeting for the coming week?. @Sean-Brown could you try running hub and node without docker (download the 3.3.1 jar) on the VM?. ",
    "sandeep540": "@saradcd77 , I got this issue\n$ docker run -d -P -e no_proxy=localhost -e HUB_ENV_no_proxy=localhost --link selenium-hub-P:hub selenium/node-chrome\ndocker: Error response from daemon: Could not get container for selenium-hub-P.. ",
    "matthewb531": "Thanks @elgalu! \nDoes anyone have any idea on how often that updating has taken place historically? Even very generally? \nLike is it ...every month? or every year? or? Just any sort of indication would be a great help.\n. ",
    "bartslaman": "So when like firefox 47 is not compatible with Selenium  xxxx I assume you don't upgrade to 47 right?\n. ",
    "gortazar": "Given that FF 47.0.1 works with Selenium 2.53.1, are there any plans to upgrade to 2.53.1? \n. ",
    "anx-ckreuzberger": "I've been using this as well for a bit, it's really great because now I don't have tore-create the docker instances.\n. ",
    "kostajh": "FWIW, we are seeing the same issue with the standalone chrome debug image, so perhaps https://github.com/SeleniumHQ/docker-selenium/blob/master/StandaloneChromeDebug/entry_point.sh needs to get updated as well?\n. ",
    "valburyakov": "I have the same problem running protractor tests on linux in gitlab CI , test run well but after 30 min this error appears.  @tommyz0123 have you found any solution ? \nchromedriver 2.22, selenium version 2.53.1, protractor 4.0.4 \n. ",
    "Greg36": "@schmunk42 I'm getting the exact same error while using Codeception, have you found any solution to that?. ",
    "alina555": "I was running protractor tests,I had: \nMessage:\n    Failed: no such session\n      (Driver info: chromedriver=2.26.436362 (5476ec6bf7ccbada1734a0cdec7d570bb042aa30),platform=Windows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)\n    Command duration or timeout: 0 milliseconds\n    Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03'\n    System info: host: 'DESKTOP-P7QJDPP', ip: '192.168.1.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_121'\n    Driver info: org.openqa.selenium.chrome.ChromeDriver\n    Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.26.436362 (5476ec6bf7ccbada1734a0cdec7d570bb042aa30), userDataDir=C:\\Users\\USER\\AppData\\Local\\Temp\\scoped_dir4680_26623}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=56.0.2924.76, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]\n    Session ID: 3107d96c4c7f21a30a00c4065bf681da\nAfter i change  my testsuites,   afterEach(function () {\n        HomePageAngular.close();\n    });  -> afterAll(function () {\n        HomePageAngular.close();\n    });\nand all is good. ",
    "diogopublio": "I am getting the same error with Selenium Version: 3, and Chrome Version: 56.0.2924.87\nMy error only happens if I try to load chrome-profile when starting the instance. If I don't send this parameter it works well.\n. ",
    "soniacepedano": "what do you want to do?\n. ",
    "Davidsoff": "@kayabendroth\n. I do not agree, the docker philosophy means that you only run a single process in each container.\nyou can achieve the same by starting multiple firefox nodes and connecting them up to your hub\nsee this comment for a better explanation:https://github.com/SeleniumHQ/docker-selenium/issues/150#issuecomment-182572039\n. I agree that having a full ubuntu install on each container is heavy. If memory serves me right There is a PR to remove the ubuntu dependency and use Alpine Linux instead. \nWould it work to start the containers with the browsers manually/using docker-compose and have those link with the selenium server?  Then you would still need the max instances but they wouldn't be running in the same container\n. @kayabendroth\n. ",
    "marloncruz": "it took a while to load the page but it is loading.\n. ",
    "RubyGemTSL": "+1 for getting latest ChromeDriver version.\n. ",
    "Deshke": "maybe jump directly to http://chromedriver.storage.googleapis.com/2.23/notes.txt ? \n. ",
    "reddyonrails": "Solution. there should not be an integer in cookie value.\n. ",
    "bayandin": "https://github.com/SeleniumHQ/docker-selenium/issues/227\nFor me -e no_proxy=\"\" works.\n. ",
    "luisxiaomai": "@bayandin , thanks giving related link. \n-e no_proxy=localhost -e HUB_ENV_no_proxy=localhost works for me\n. ",
    "eroshenkoam": "here is the workaround https://github.com/SeleniumHQ/docker-selenium/issues/133\n. you need to set up env variable\n```\nversion: '2'\nnetworks:\n  private:\n    driver: bridge\nservices:\n  hub:\n    image: \"selenium/hub:2.53.0\"\n    ports:\n      - 4444:4444\n    networks:\n      - private\nchrome:\n    image: \"selenium/node-chrome:2.53.0\"\n    networks:\n      - private\n    depends_on:\n      - hub\n    environment:\n      HUB_PORT_4444_TCP_ADDR: hub\nfirefox:\n    image: \"selenium/node-firefox:2.53.0\"\n    networks:\n      - private\n    depends_on:\n      - hub\n    environment:\n      HUB_PORT_4444_TCP_ADDR: hub\n```\n. ",
    "istinspring": "Same i ended up downloading this folder to the host using docker-py\ncli = docker.Client()\nstrm, stat = cli.get_archive(cont, '/tmp/mozilla_mozillaUser0')\nprint(stat)\narchive = tarfile.TarFile(\n    fileobj=io.BytesIO(strm.data)\n)\narchive.extractall(path='var/reports/{}'.format(cont))\nDo you setup the firefox profile?\n. @ddavison can you tell me how to download file directly into the host machine?\n. i end up with download directory from the container mounted to the host.\n@zuernBernhard you can use scripts https://docker-py.readthedocs.io\n. damn, same thing. Debug containers do not work.\n. ",
    "mateuyabar": "This was three months ago. I wanted to download it anywhere. Just could not get the downloaded file.\nI ended up using chrome-docker to solve this, so I can't tell you more about this problem.\n. ",
    "zuernBernhard": "perhaps its possible to configure a browser-profile to automaticall accept downloads and save them do a certain directory eg ~/downloads \nbut how to clean that up after eacht test run ? \n. Perhaps you can use a browser profile that accepts the certificate\n. Better late than never. Thank you a lot !!. Yes you are right. Thanks a lot ! I worked around it by using xip.io. ",
    "gokulganthtm": "We have certain Automation Test which downloads reports from web appl and store in default downloads directory in chrome or firefox .......how does docker chrome or Firefox containers handle this ?\nWhile ./bash into chrome containers ->  /opt directory has some files related to chrome but not any downloaded files\nMounting volumes while spinning up the containers and binding it with host machine didn't provide any promising results.....\nHow do we handle this in docker-compose or docker run ????. @diemol Thanks for your reply ...\nSorry for the delay :( \nIt works now with https://github.com/seleniumhq/selenium/issues/1158 \n. ",
    "juliangamble": "That's fine. Just as long as the solution is available on a google search. \n. ",
    "jmieleiii": "Chrome node doesn't appear to have an ENV variable for setting the version\n```\n===============\nGoogle Chrome\n===============\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n  && apt-get update -qqy \\\n  && apt-get -qqy install \\\n    google-chrome-stable \\\n  && rm /etc/apt/sources.list.d/google-chrome.list \\\n  && rm -rf /var/lib/apt/lists/*\n```\n. Sorry, I confused your question with being able to set the Chrome browser version vs ChromeDriver version.\n. ",
    "F2X": "Maybe it should be a ARG variable and not an ENV one in the Dockerfile?\nMoreover I think we needs to find a way to offer an option to change versions on runtime, I have some issues with the couple Firefox / webdriver, which is often broken, and allowing end-user to set these values can be a plus. \n. Thanks, there is any delivery planned on docker registry?\n. Yes, I've just done it right now\n. ",
    "a-k-g": "316 solves this issue\n. Should solve #227 as well.\n. +1 for this issue. I was hitting #87 repeatedly even after the fix seemed to have been merged. Thanks @Sovetnikov for finding the root cause. I've made an attempt to fix this issue in #381.. Closed for #381. That should do it as well. I don't have a preference for either approach. I can update the PR if that's a more desirable approach.. Yeah, sure.. @ddavison, @hnryjms - can we merge this?. Will keep in mind in the future, thanks!. ",
    "pm-kedar-jedhe": "Disagree with Option of having only one browser instance per node i.e. per container here.\nBelow are few statistics.\nWell if we look at the Layers on which selenium Grid node are running.\nImage Overview::\n1. Create Light weight Ubuntu machine.\n2. Install Java\n3. Install Selenium-grid \nand Then It creates one node having one instance of browsers reading selenium configuration properties\nAs per your comment we are saying just to create one more browser instance , create another node which goes over above mentioned steps again...\nThis is too much resource utilization of host Machine ...!!! For one more browser instance..!\nJust by having maxInstances configurable and not keeping it hardcoded to 1..we might get the option of configuring containers  per host machine capabilities. Which is true power of selenium-grid on machine resources front. \n. ",
    "chuckg": "@ddavison Thank you for the reference to the specific issue with NO_PROXY, I'm glad to hear that it's being addressed by the Docker team.  This isn't a pull request to fix an issue with using Docker on Mac, it's to fix a bug when someone passes an environment variable with one or more spaces in it.\n```\n\ndocker run -e OTHER_VARIABLE_I_NEED=\"yup I'm bad\" --rm selenium/standalone-chrome-debug:2.53.0\nLooking for lock file: /tmp/.X??-lock\n-bash: 169.254/16: No such file or directory\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n```\n\nPassing environment variables sanely and correctly to the Selenium runtime environment is important when using it as a key component to your build infrastructure. \n. Apologies, I meant to include it:\n```\n\ndocker run -e NO_PROXY=\"\" -e OTHER_VARIABLE_I_NEED=\"yup I'm bad\" --rm selenium/standalone-chrome-debug:2.53.0\nLooking for lock file: /tmp/.X??-lock\nWaiting xvfb...\n-bash: I'm: command not found\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\n```\n. Done @ddavison.\n. \n",
    "heathkit": "I was just about to send out a similar PR, hope this gets in soon!\n. ",
    "FelikZ": "Still relevant! For non-standalone version as well.\n. I guess this is done because this commit:\nhttps://github.com/SeleniumHQ/docker-selenium/commit/82d0a45a8dd184eff6699f621b85dfd60e1173a1#diff-6bc64b0868b8e4376e4bb89ca55caa46R20\nMaybe latest chrome not compatible enough anymore\nPS. Why auto-build to registry :(\n. @doits yes, since registry image being rebuilt and start using latest Chrome (I bet this is the issue)\n. @ddavison you can specify Chrome version but it means that you have to build image on your own, i.e. official docker images become useless because they are unstable...\n. This is similar issue to this #249 , I bet.. ",
    "deployable": "@ddavison Is this PR a chance of being merged soon? I just ran into the same whitespace issue. . @finspin I've seen it on El Capitan too.. ",
    "finspin": "The issue seems to be reproducible with macOS Sierra and not reproducible with El Capitan.. Is this waiting for tests? We would need this feature because we need to use some older versions of Chrome.. Yes, that was the missing variable, thanks for the prompt answer! Closing this.\n. @ddavison Unfortunately I can't access the hub UI since these tests are run on a CI server which doesn't support VNC at the moment. What tried now was to remove all env variables so my docker-compose.yml looks like the one below (running only 1 instance of each browser). I got a few successful runs but then tests started failing randomly again.\n```\nseleniumhub:\n  image: selenium/hub:3.0.1-aluminum\n  ports:\n    - 4444\nchromenode:\n  image: selenium/node-chrome-debug:3.0.1-aluminum\n  ports:\n    - 5900\n  links:\n    - seleniumhub:hub\n  volumes:\n    - /dev/shm:/dev/shm\nfirefoxnode:\n  # using version 2 of firefox because version 3 crashes\n  image: selenium/node-firefox-debug:2.53.1-beryllium\n  ports:\n    - 5900\n  links:\n    - seleniumhub:hub\n```\n. Is it possible that node tries to connect to the hub while hub is not ready yet? But then, why would it only happen only with the hub that is launched as second.\n. Here are the logs from the hub and the chromenode containers on which failing test was running. As far as I can tell they don't seem to indicate any issue.\nhub:\n```\nstarting selenium hub with configuration:\n{\n  \"host\": null,\n  \"port\": 4444,\n  \"prioritizer\": null,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": true,\n  \"newSessionWaitTimeout\": -1,\n  \"jettyMaxThreads\": -1,\n  \"nodePolling\": 5000,\n  \"cleanUpCycle\": 5000,\n  \"timeout\": 30000,\n  \"browserTimeout\": 0,\n  \"maxSession\": 5,\n  \"unregisterIfStillDownAfter\": 30000\n}\n20:26:18.366 INFO - Selenium build info: version: '3.0.1', revision: '1969d75'\n20:26:18.393 INFO - Launching Selenium Grid hub\n2016-11-08 20:26:20.638:INFO::main: Logging initialized @4751ms\n20:26:20.678 INFO - Will listen on 4444\n2016-11-08 20:26:20.813:INFO:osjs.Server:main: jetty-9.2.15.v20160210\n2016-11-08 20:26:20.940:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@10b48321{/,null,AVAILABLE}\n2016-11-08 20:26:21.306:INFO:osjs.ServerConnector:main: Started ServerConnector@221af3c0{HTTP/1.1}{0.0.0.0:4444}\n2016-11-08 20:26:21.306:INFO:osjs.Server:main: Started @5419ms\n20:26:21.309 INFO - Nodes should register to http://172.17.0.5:4444/grid/register/\n20:26:21.309 INFO - Selenium Grid hub is up and running\n20:26:29.908 INFO - Got a request to create a new session: Capabilities [{count=1, browserName=chrome}]\n20:26:30.724 INFO - Registered a node http://172.17.0.6:5555\n20:26:31.119 INFO - Registered a node http://172.17.0.7:5555\n```\nchromenode:\n```\nWaiting xvfb...\n08/11/2016 12:26:24 passing arg to libvncserver: -rfbport\n08/11/2016 12:26:24 passing arg to libvncserver: 5900\n08/11/2016 12:26:24 -usepw: found /root/.vnc/passwd\n08/11/2016 12:26:24 x11vnc version: 0.9.13 lastmod: 2011-08-10  pid: 95\n08/11/2016 12:26:24 Using X display :99.0\n08/11/2016 12:26:24 rootwin: 0x25c reswin: 0x200001 dpy: 0x26647d0\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 ------------------ USEFUL INFORMATION ------------------\n08/11/2016 12:26:24 X DAMAGE available on display, using it for polling hints.\n08/11/2016 12:26:24   To disable this behavior use: '-noxdamage'\n08/11/2016 12:26:24 \n08/11/2016 12:26:24   Most compositing window managers like 'compiz' or 'beryl'\n08/11/2016 12:26:24   cause X DAMAGE to fail, and so you may not see any screen\n08/11/2016 12:26:24   updates via VNC.  Either disable 'compiz' (recommended) or\n08/11/2016 12:26:24   supply the x11vnc '-noxdamage' command line option.\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 Wireframing: -wireframe mode is in effect for window moves.\n08/11/2016 12:26:24   If this yields undesired behavior (poor response, painting\n08/11/2016 12:26:24   errors, etc) it may be disabled:\n08/11/2016 12:26:24    - use '-nowf' to disable wireframing completely.\n08/11/2016 12:26:24    - use '-nowcr' to disable the Copy Rectangle after the\n08/11/2016 12:26:24      moved window is released in the new position.\n08/11/2016 12:26:24   Also see the -help entry for tuning parameters.\n08/11/2016 12:26:24   You can press 3 Alt_L's (Left \"Alt\" key) in a row to \n08/11/2016 12:26:24   repaint the screen, also see the -fixscreen option for\n08/11/2016 12:26:24   periodic repaints.\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 XFIXES available on display, resetting cursor mode\n08/11/2016 12:26:24   to: '-cursor most'.\n08/11/2016 12:26:24   to disable this behavior use: '-cursor arrow'\n08/11/2016 12:26:24   or '-noxfixes'.\n08/11/2016 12:26:24 using XFIXES for cursor drawing.\n08/11/2016 12:26:24 GrabServer control via XTEST.\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 Scroll Detection: -scrollcopyrect mode is in effect to\n08/11/2016 12:26:24   use RECORD extension to try to detect scrolling windows\n08/11/2016 12:26:24   (induced by either user keystroke or mouse input).\n08/11/2016 12:26:24   If this yields undesired behavior (poor response, painting\n08/11/2016 12:26:24   errors, etc) it may be disabled via: '-noscr'\n08/11/2016 12:26:24   Also see the -help entry for tuning parameters.\n08/11/2016 12:26:24   You can press 3 Alt_L's (Left \"Alt\" key) in a row to \n08/11/2016 12:26:24   repaint the screen, also see the -fixscreen option for\n08/11/2016 12:26:24   periodic repaints.\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 XKEYBOARD: number of keysyms per keycode 7 is greater\n08/11/2016 12:26:24   than 4 and 51 keysyms are mapped above 4.\n08/11/2016 12:26:24   Automatically switching to -xkb mode.\n08/11/2016 12:26:24   If this makes the key mapping worse you can\n08/11/2016 12:26:24   disable it with the \"-noxkb\" option.\n08/11/2016 12:26:24   Also, remember \"-remap DEAD\" for accenting characters.\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 X FBPM extension not supported.\n08/11/2016 12:26:24 X display is not capable of DPMS.\n08/11/2016 12:26:24 --------------------------------------------------------\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 Default visual ID: 0x21\nPORT=5900\n08/11/2016 12:26:24 Read initial data from X display into framebuffer.\n08/11/2016 12:26:24 initialize_screen: fb_depth/fb_bpp/fb_Bpl 24/32/5440\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 X display :99.0 is 32bpp depth=24 true color\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 Listening for VNC connections on TCP port 5900\n08/11/2016 12:26:24 Listening for VNC connections on TCP6 port 5900\n08/11/2016 12:26:24 listen6: bind: Address already in use\n08/11/2016 12:26:24 Not listening on IPv6 interface.\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 Xinerama is present and active (e.g. multi-head).\n08/11/2016 12:26:24 Xinerama: number of sub-screens: 1\n08/11/2016 12:26:24 Xinerama: no blackouts needed (only one sub-screen)\n08/11/2016 12:26:24 \n08/11/2016 12:26:24 fb read rate: 1956 MB/sec\n08/11/2016 12:26:24 fast read: reset -wait  ms to: 10\n08/11/2016 12:26:24 fast read: reset -defer ms to: 10\n08/11/2016 12:26:24 The X server says there are 10 mouse buttons.\n08/11/2016 12:26:24 screen setup finished.\n08/11/2016 12:26:24 \nThe VNC desktop is:      ce9ee12885e0:0\n\nHave you tried the x11vnc '-ncache' VNC client-side pixel caching feature yet?\nThe scheme stores pixel data offscreen on the VNC viewer side for faster\nretrieval.  It should work with any VNC viewer.  Try it by running:\nx11vnc -ncache 10 ...\n\nOne can also add -ncache_cr for smooth 'copyrect' window motion.\nMore info: http://www.karlrunge.com/x11vnc/faq.html#faq-client-caching\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSetting default value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSetting default value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\n12:26:27.580 INFO - Selenium build info: version: '3.0.1', revision: '1969d75'\n12:26:27.596 INFO - Launching a Selenium Grid node\n2016-11-08 12:26:30.087:INFO::main: Logging initialized @6432ms\nFailed to read: session.screen0.opaqueMove\nSetting default value\nFailed to read: session.screen0.fullMaximization\nSetting default value\nFailed to read: session.screen0.maxIgnoreIncrement\nSetting default value\nFailed to read: session.screen0.maxDisableMove\nSetting default value\nFailed to read: session.screen0.maxDisableResize\nSetting default value\nFailed to read: session.screen0.workspacewarping\nSetting default value\nFailed to read: session.screen0.showwindowposition\nSetting default value\nFailed to read: session.screen0.autoRaise\nSetting default value\nFailed to read: session.screen0.clickRaises\nSetting default value\nFailed to read: session.screen0.defaultDeco\nSetting default value\nFailed to read: session.screen0.tab.placement\nSetting default value\nFailed to read: session.screen0.windowMenu\nSetting default value\nFailed to read: session.screen0.noFocusWhileTypingDelay\nSetting default value\nFailed to read: session.screen0.workspaces\nSetting default value\nFailed to read: session.screen0.edgeSnapThreshold\nSetting default value\nFailed to read: session.screen0.window.focus.alpha\nSetting default value\nFailed to read: session.screen0.window.unfocus.alpha\nSetting default value\nFailed to read: session.screen0.menu.alpha\nSetting default value\nFailed to read: session.screen0.menuDelay\nSetting default value\nFailed to read: session.screen0.tab.width\nSetting default value\nFailed to read: session.screen0.tooltipDelay\nSetting default value\nFailed to read: session.screen0.allowRemoteActions\nSetting default value\nFailed to read: session.screen0.clientMenu.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.maxOver\nSetting default value\nFailed to read: session.screen0.tabs.intitlebar\nSetting default value\nFailed to read: session.screen0.focusModel\nSetting default value\nFailed to read: session.screen0.tabFocusModel\nSetting default value\nFailed to read: session.screen0.focusNewWindows\nSetting default value\nFailed to read: session.screen0.focusSameHead\nSetting default value\nFailed to read: session.screen0.rowPlacementDirection\nSetting default value\nFailed to read: session.screen0.colPlacementDirection\nSetting default value\nFailed to read: session.screen0.windowPlacement\nSetting default value\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSetting default value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\nFailed to read: session.screen0.opaqueMove\nSetting default value\nFailed to read: session.screen0.fullMaximization\nSetting default value\nFailed to read: session.screen0.maxIgnoreIncrement\nSetting default value\nFailed to read: session.screen0.maxDisableMove\nSetting default value\nFailed to read: session.screen0.maxDisableResize\nSetting default value\nFailed to read: session.screen0.workspacewarping\nSetting default value\nFailed to read: session.screen0.showwindowposition\nSetting default value\nFailed to read: session.screen0.autoRaise\nSetting default value\nFailed to read: session.screen0.clickRaises\nSetting default value\nFailed to read: session.screen0.defaultDeco\nSetting default value\nFailed to read: session.screen0.tab.placement\nSetting default value\nFailed to read: session.screen0.windowMenu\nSetting default value\nFailed to read: session.screen0.noFocusWhileTypingDelay\nSetting default value\nFailed to read: session.screen0.workspaces\nSetting default value\nFailed to read: session.screen0.edgeSnapThreshold\nSetting default value\nFailed to read: session.screen0.window.focus.alpha\nSetting default value\nFailed to read: session.screen0.window.unfocus.alpha\nSetting default value\nFailed to read: session.screen0.menu.alpha\nSetting default value\nFailed to read: session.screen0.menuDelay\nSetting default value\nFailed to read: session.screen0.tab.width\nSetting default value\nFailed to read: session.screen0.tooltipDelay\nSetting default value\nFailed to read: session.screen0.allowRemoteActions\nSetting default value\nFailed to read: session.screen0.clientMenu.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.usePixmap\nSetting default value\nFailed to read: session.screen0.tabs.maxOver\nSetting default value\nFailed to read: session.screen0.tabs.intitlebar\nSetting default value\nFailed to read: session.screen0.focusModel\nSetting default value\nFailed to read: session.screen0.tabFocusModel\nSetting default value\nFailed to read: session.screen0.focusNewWindows\nSetting default value\nFailed to read: session.screen0.focusSameHead\nSetting default value\nFailed to read: session.screen0.rowPlacementDirection\nSetting default value\nFailed to read: session.screen0.colPlacementDirection\nSetting default value\nFailed to read: session.screen0.windowPlacement\nSetting default value\n12:26:30.162 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped:\n registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform LINUX\n12:26:30.162 INFO - Driver provider org.openqa.selenium.edge.EdgeDriver registration is skipped:\n registration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform LINUX\n12:26:30.162 INFO - Driver class not found: com.opera.core.systems.OperaDriver\n12:26:30.162 INFO - Driver provider com.opera.core.systems.OperaDriver registration is skipped:\nUnable to create new instances on this machine.\n12:26:30.162 INFO - Driver class not found: com.opera.core.systems.OperaDriver\n12:26:30.162 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered\n12:26:30.168 INFO - Driver provider org.openqa.selenium.safari.SafariDriver registration is skipped:\n registration capabilities Capabilities [{browserName=safari, version=, platform=MAC}] does not match the current platform LINUX\n2016-11-08 12:26:30.298:INFO:osjs.Server:main: jetty-9.2.15.v20160210\nFailed to read: session.screen0.slit.acceptKdeDockapps\nSetting default value\nFailed to read: session.screen0.slit.autoHide\nSetting default value\nFailed to read: session.screen0.slit.maxOver\nSetting default value\nFailed to read: session.screen0.slit.placement\nSetting default value\nFailed to read: session.screen0.slit.alpha\nSetting default value\nFailed to read: session.screen0.slit.onhead\nSetting default value\nFailed to read: session.screen0.slit.layer\nSetting default value\n2016-11-08 12:26:30.370:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@1622f1b{/,null,AVAILABLE}\nFailed to read: session.screen0.toolbar.autoHide\nSetting default value\nFailed to read: session.screen0.toolbar.maxOver\nSetting default value\nFailed to read: session.screen0.toolbar.visible\nSetting default value\nFailed to read: session.screen0.toolbar.alpha\nSetting default value\nFailed to read: session.screen0.toolbar.layer\nSetting default value\nFailed to read: session.screen0.toolbar.onhead\nSetting default value\nFailed to read: session.screen0.toolbar.placement\nSetting default value\nFailed to read: session.screen0.toolbar.height\nSetting default value\nFailed to read: session.screen0.iconbar.mode\nSetting default value\nFailed to read: session.screen0.iconbar.alignment\nSetting default value\nFailed to read: session.screen0.iconbar.iconWidth\nSetting default value\nFailed to read: session.screen0.iconbar.iconTextPadding\nSetting default value\nFailed to read: session.screen0.iconbar.usePixmap\nSetting default value\n2016-11-08 12:26:30.595:INFO:osjs.ServerConnector:main: Started ServerConnector@21de60b4{HTTP/1.1}{0.0.0.0:5555}\n2016-11-08 12:26:30.595:INFO:osjs.Server:main: Started @6940ms\n12:26:30.595 INFO - Selenium Grid node is up and ready to register to the hub\n12:26:30.633 INFO - Starting auto registration thread. Will try to register every 5000 ms.\n12:26:30.633 INFO - Registering the node to the hub: http://172.17.0.5:4444/grid/register\n12:26:30.727 INFO - The node is registered to the hub and ready to use\n12:26:41.034 INFO - SessionCleaner initialized with insideBrowserTimeout 0 and clientGoneTimeout 1800000 polling every 180000\n```\n. Actually, I think I found the issue. It seems like tests are launched about 1 second before node is registered to the hub. Here are the timestamps from the test (ignore hours, the time on CI server and in container doesn't match).\nNode registered: 12:26:30.727\nError forwarding session: 22:26:29,933\n22:26:29,477 INFO  - [22:26:29] I/hosted - Using the selenium server at http://0.0.0.0:32951/wd/hub\n22:26:29,477 INFO  - [22:26:29] I/launcher - Running 1 instances of WebDriver\n22:26:29,933 INFO  - [22:26:29] E/launcher - Error forwarding the new session Empty pool of VM for setup Capabilities [{count=1, browserName=chrome}]\n22:26:29,933 INFO  - [22:26:29] E/launcher - WebDriverError: Error forwarding the new session Empty pool of VM for setup Capabilities [{count=1, browserName=chrome}]\nIs there some recommended practice to handle these timing issues?\n. I do have 2 separate steps. It seems to me that docker-compose reports all containers as up and running but the node is not yet registered at that point. \n. Would it be an option to implement health check for node images? https://docs.docker.com/engine/reference/builder/#/healthcheck\n. I'm trying to figure out how to do an automated check to make sure that a node (or multiple nodes) is registered with a hub. Any ideas?\n. Thanks @elgalu , that seems to work, I got a few green builds now. I had to do a slight modification, grep -i chrome instead of grep -i chrome_binary. I'm using hub version 3 so the string might have changed.\nThis is a workaround but I believe the root cause is this variable:\nthrowOnCapabilityNotPresent : true\nI'm considering submitting a pull request to allow setting this variable value to true. Currently, it's hardcoded https://github.com/SeleniumHQ/docker-selenium/blob/15870375bd65e00d82424dcb4b250a2f46695207/Hub/generate_config\nWould that be OK to allow passing this variable while setting it to true by default?\n. @MicahZoltu yes, this PR fixes this exact issue you described. Until it's merged, you can use a workaround described in https://github.com/SeleniumHQ/docker-selenium/issues/332.. ",
    "yamamoo": "Is this fix also needed in NodeChromeDebug/entry_point.sh and NodeFirefoxDebug/entry_point.sh? I'm having a problem running those nodes on Docker Swarm with SE_OPTS=\"-host xxx -port yyy\". This adds an env variable value with spaces and causes xvfb-run to fail.. ",
    "twong": "@otsvetkov, will someone be updating the builds on docker hub? The latest one is 4 months old, and doesn't yet have this merge.\n. ",
    "mlespiau": "@allankilpatrick @otsvetkov What's missing for having this docker image released to docker hub?\n. ",
    "jnarowski": "+1\n. ",
    "h4n0l1": "In my case, there is an env var called no_proxy, and somehow this env var makes xvfb run execution failed. So I set no_proxy to null and also put sudo -i -u seluser before executing x11vnc, and now it's running, but please CMIIW\n. @saikrishna321 I put export no_proxy= in entry_point.sh just before SERVERNUM=$(get_server_num) or maybe you can even put that after export GEOMETRY. Also, in docker-compose.yml you can put that as ARGS below build option inside service. CMIIW\n. ",
    "saikrishna321": "@h4n0l1 how do we set your solution in docker-compose.yml ?\n. @kayabendroth can this be merged\n. ",
    "kevinyu-ias": "@ddavison tried that as well, no luck \n. @rubytester  Hey, I watched your selenium conf 2015 video and was wondering if you could help me connect physical nodes to an aws instance running a docker selenium hub\n. Using docker's --net=host resolved this issue\n. ",
    "jalmansor": "@iamluc that definitely got me on the right track. I had to tweak it a little bit, since the hostname is associated with the IP's from both the overlay and gateway bridge networks. This is what I'm currently using that works:\ndocker network create -d overlay selenium-grid\ndocker service create --network selenium-grid --name hub -p 4444:4444 selenium/hub\ndocker service create --network selenium-grid --endpoint-mode dnsrr --name chrome --mount type=bind,source=/dev/shm,target=/dev/shm -e HUB_PORT_4444_TCP_ADDR=hub -e HUB_PORT_4444_TCP_PORT=4444 --replicas 10 selenium/node-chrome bash -c 'HOSTIP=$(ip -4 addr show eth0 | grep -Po \"inet \\K[\\d.]+\") REMOTE_HOST=http://$HOSTIP:5555 /opt/bin/entry_point.sh'\nIt's a little hack-ish to get the right IP for the nodes to register with so the hub can communicate back to them, but I'm going to see if I can come up with a better way and submit a PR, since I'm sure I won't be the only person doing this.\n. @habina I had tried that with chrome and it didn't work without doing the extra for figuring out the IP, but I might have to try again now that docker-selenium has been updated.\n. I have actually been wanting to put in a change like this as well, since we have a need to generate our own images on a regular basis, and this would make it easier to push to our own repo without breaking your existing build workflow.. @camiller2 we got their attention! Let's get this fixed up and ready for them to merge!. ",
    "habina": "Hi @jalmansor,\nI used the command you provided, and it works for chrome, but if I change the image to selenium/node-firefox, it does not work. The firefox nodes can't register to the hub. Do you know why this is happening? Thanks.\n. OK, after I changed to @iamluc 's suggest. It works for firefox.\nthanks.\ndocker service create --network selenium-grid --endpoint-mode dnsrr --name firefox --mount type=bind,source=/dev/shm,target=/dev/shm -e HUB_PORT_4444_TCP_ADDR=sehub -e HUB_PORT_4444_TCP_PORT=4444 --replicas 10 selenium/node-firefox bash -c 'REMOTE_HOST=http://$HOSTNAME:5555 /opt/bin/entry_point.sh'\n. @jalmansor thanks for your reply.\n. ",
    "c4wrd": "@testphreak I have my 1.12 Swarm up and running with Selenium hub and containers that can correctly communicate, although I am unable to connect to a selected node from my test client, despite it appearing to select one correctly in the hub's logs. I imagine that maybe the Hub is only acting as a re-direct and not performing a pass through for the communication to the web driver (the test client is not in the network as the nodes and hub are, only the hub's port is exposed). Have you ran into any issues like this?. It actually seemed to be resolved when I rebooted all of the nodes and\nrecreated the overlay network. It re-appears every now and then, and is\nmore than likely just due to some networking error in Swarm on long-running\nhosts.\nOn Mon, Dec 5, 2016 at 11:24 PM testphreak notifications@github.com wrote:\n\n@c4wrd https://github.com/c4wrd sorry it took long to reply. I was at a\nconference last week. In my case the test client is in the same network as\nthe Swarm. Hence I haven't run into the issue you're seeing. See if you can\nhave your test client run tests in the same network. You might see better\nresults.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/255#issuecomment-265071216,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AIMnegG10y1sBn5aRvs102ojoVuxqjCeks5rFP-EgaJpZM4JbGxJ\n.\n. \n",
    "bochen2014": "thanks for sharing. definitely worth a read!!. ",
    "marcinbojanowski": "Works for me! :D\n. ",
    "alexgandy": "Worked for me as well\n. ",
    "ahmadrabie": "I need this too.\n@kayabendroth please merge it ASAP.\nThanks :)\n. ",
    "zouxuoz": "@kayabendroth merge this please\n. //summon @gurukiran007\n. ",
    "pproenca": "@kayabendroth is it possible to merge this PR?\n. ",
    "macroking": "@saifsysim \nI'm using an environment file\nfirefox:\n image: selenium/node-firefox\n  env_file:\n    - ./docker.env\nchrome:\n  image: selenium/node-chrome\n  env_file:\n    - ./docker.env\ndocker.env\nHUB_PORT_4444_TCP_ADDR=x.x.x.x\nHUB_PORT_4444_TCP_PORT=4444\n. Closing this, look like more of hardware configuration related.. ",
    "QAutomatron": "Hi @Bernardoow \nYou should set custom $GRID_TIMEOUT for your Hub. By default it will wait for 30000 seconds and kill session and browser if no commands passed to selenium. So you should just set it to 0\nI think, you selenium_hub section should looks something like this:\nselenium_hub:\nimage: selenium/hub\nports:\n- 4444:4444\nenvironment:\n    - GRID_TIMEOUT=0\n. ",
    "Bernardoow": "@ddavison Thx MAN!\n@QAutomatron and @bizmate, thanks for your helps!\n. ",
    "sqavenky": "You are right\nOn Sep 10, 2017 1:35 PM, \"Diego Molina\" notifications@github.com wrote:\n@sqavenky https://github.com/sqavenky @saifsysim\nhttps://github.com/saifsysim\nThis usually happens when you are behind a proxy or have some network\nproblems.\nCan you please double check your network config and report back?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/265#issuecomment-328362438,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/APqLMz8hswpesTK9P4VhDox2ls_hG-MTks5shCv9gaJpZM4J3SrN\n.\n. node-firefox has a ENV variable \"ENV FIREFOX_VERSION 45.0.2\" which helps you to build a docker image with specific version of firefox. In this case Firefox 45.0.2.  I am looking something similar for Chrome as well. Today if i try to build with the node-chrome Dockerfile. I always get the latest stable version of chrome installed in the docker image. Correct me if I am wrong? Today I am creating multiple images for chrome as and when a new version of chrome is release and I run my selenium scripts against the docker container and try to print the browser version to know the version of browser inside the container. But with this parameter in place, I do not have to worry about browser version. You are correct about CHROME_DRIVER_VERSION. It is already in place. I am not talking about that.\n. You got it right. Thanks for the quick turn around.\n. ",
    "TaysirTayyab": "Can confirm this is an issue in 2.53 which was pushed sometime yesterday. Have also had issues with tab inserting literal tabs into fields instead of moving to the next field. I don't know why the ninja push without changing the version number, but we've had to grab the previous 2.53 image off local cache and add it as our own image to the registry.\n. ",
    "jagalan": "Same here, hours chasing that until I found this issue and realized our tests started failing a bit after these new builds were executed and our runners picked them up.\nGoing back to 2.49.1 solved the issue.\n. ",
    "Yantrio": "I am also seeing this issue with node-chrome-debug image, the latest image is not allowing us to close alerts. Going to try rolling back to an earlier version\n. ",
    "doits": "@FelikZ faulty commit must be earlier already, it started happening on 08.09.2016 (5 days ago).\n. Hopefully when #280 is implemented at least once stable tags will not break sporadically because they are rebuilt with incompatible versions like now.\n. Just built 2.53.1 myself (https://hub.docker.com/r/stellenticket/standalone_chrome/) but it has the same problem \ud83d\ude22 \nLooks like it is not easy to fix ...\n. ",
    "eXorus": "Good job !!\nI'm waiting this release, because the last version is very unstable and I don't know why.\n. Hello,\nIs it possible to push the updated images to docker.io ? the lastest images doesn't work with GRID_TIMEOUT and I hope it will be fixed in 2.53.1 ...\nThanks\n. Hello,\nDon't use the lastest images it's not working with GRID_TIMEOUT and GRID_BROWSER_TIMEOUT.\nI'm using images 2.50.0 and it's OK with this docker-compose.yml:\n```\nhub:\n  image: selenium/hub:2.50.0\n  ports:\n    - \"4446:4444\"\n  environment:\n    - GRID_BROWSER_TIMEOUT=600000\n    - GRID_TIMEOUT=600000\n    - GRID_MAX_SESSION=6\n    - GRID_CLEAN_UP_CYCLE=600000\n    - GRID_UNREGISTER_IF_STILL_DOWN_AFTER=600000\nfirefox:\n  image: selenium/node-firefox:2.50.0\n  ports:\n    - \"5900\"\n  environment:\n    - SCREEN_WIDTH=1920\n    - SCREEN_HEIGHT=1080\n  links:\n    - hub\n```\n. I have the same issue I don't understand why.\nI try with 2.53.0 it's work very well on my laptop but failed on the cloud.\n. For me everything is fine with 2.53.1. It's very stable now.\nThanks\n. ",
    "HackToday": "@ddavison  did https://github.com/SeleniumHQ/docker-selenium/commit/261242df7a3c146d9691f651efd68b1af4a43a4b  include selenium 3.0 and firefox 48 , 49?  Not quite understand above comments, since not clearly explain why close with that commit.\n. maybe same requirements like this one https://github.com/SeleniumHQ/docker-selenium/issues/314\n. Adding Chinese support is good. however not sure if those containers could accept such locale support for general cases. As different language may have different requrements. @MicahZoltu  does this requirement include change Firefox geckodriver log level ?\nRecently, I found some issue, geckodriver developer always asked about trace-level logging like this\ngeckodriver by passing -vv to it or configuring the {\"moz:firefoxOptions\": {\"log\": {\"level\": \"trace\"}}} capability.. Hi @MicahZoltu   The geckodrver docs info like that \nhttps://github.com/mozilla/geckodriver#capabilities-examples\n. Interesting to this PR\n1> Right now, we have a selenium container running, and our tests (if not run locally, as locally can have Firefox UI, so local test is not problem) run remotely against that container.  The standalone container not have VNC, so I can not view the browser. If I want to view the actual browser in the container, I need to use Debug selenium container.\nSo did your x-forward ways allow view the browser for standalone container ?\nAnd how can I view the browser if not use VNC client ? . > The case it does improve is where you want to run a standalone container locally using the 'remote' driver, and want to see it without using VNC\nOK. Thanks. If that case, does it mean I still need to make sure the local host need have GUI environment. or else how can we view such browser ?. Hi @wesmcouch  I am not sure if I understand this PR. \ndo you mean marathon and mesos can not run selenium containers ? (if without this PR)\nI think marathon allow port mapping when run docker containers, so not know what's the issue about.\n. > The issue is using SE_OPTS to tell the node what port marathon has assigned to the container is too late during the process of creating the container. For some reason marathon is unable to link this assigned port and port 5555 during this process. The node will be able to connect to the hub but you are unable to connect to the node on the assigned port.\nNot quite understand here. As hub started in host mode,(it has host ip, and port) and then start node to register with such known ip and port.\nNode could connect to hub, and you can also connect to node.\n. not sure if it is good, as it would have make the image larger, but it did include more versions in one env to make it easy to test\n. for wires rename, do we  know which firefox version need that ?\n. I think it is better to list the version we supported here, since image users not know which versions is included in that image\n. If I remember my test before, the 2.53.x can work with Firefox 47.0.1 if not use caps[\"marionette\"] = True.\nif you use caps[\"marionette\"] = True to run selenium test. it would fail. \nThis is my only concern here for various versions matrix.\nOther code LGTM.\n. ",
    "bhaku": "Duplicate of https://github.com/SeleniumHQ/docker-selenium/issues/272\n. @jackmahoney why you need this? When you run docker container you can use port forwarding:\ndocker run -p 5999:5900 ...\n. I also need this. Now you must login to container to check which version of browser is used.. @ddavison When you will release 3.4.0-francium?. ",
    "boboldehampsink": "Having the same issue here\n. ",
    "mjgorman": "Thanks for the reply! I've tried swapping down the version 2.50.0 and I do see all the settings being applied to nodes, but I still get the non-responsive UI and timeout issues when requesting a node that is down. I've set all the timeouts really low, 5000, to try and see if that fixes it and still the same exact behavior. This is a bummer, makes it hard to rely on this if i'll be doing any scaling automatically down. \n. Still have this problem on 2.53.1, browser just spins and spins on the hub grid console before it times out a few minutes later and removes the node. \n. docker-compose:\nchrome:\n  log_driver: syslog\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=chrome\n  tty: true\n  log_opt:\n    syslog-address: tcp://xxxxx\n    tag: selenium-chrome\n  image: selenium/node-chrome:2.53.1\n  links:\n  - 'hub:'\n  stdin_open: true\nhub:\n  ports:\n  - 4444:4444/tcp\n  environment:\n    GRID_BROWSER_TIMEOUT: '0'\n    GRID_TIMEOUT: '300000'\n  log_driver: syslog\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt:\n    tag: selenium-hub\n    syslog-address: tcp://xxxx\n  image: selenium/hub:2.53.1\n  stdin_open: true\n. Compose isn't hanging though. Hub and nodes are up and nodes go up and down right when commanded. Its just the hub that  takes its sweet time to reconcile that one has gone down. \n. ",
    "JoepWeijers": "I just signed the CLA.\n. Thanks, seems OK now.. ",
    "maccurt": "Does anyone have any instruction on doing this with protractor? When I update protractor it does not get the 2.24 version\n. ",
    "CaptainMack": "Would be nice to have, so we can update the chromedriver ourselves.\n. ",
    "tomfun": "@davehunt this information need to be added to readme.\n. ",
    "ruffin": "whoops, didn't mean to do this on the real one. sorry about that\n. ",
    "jackmahoney": "Good point @bhaku , will try this. Thanks.\n. ",
    "TheBay0r": "As an alternative to b3c9fa5 it might be possible to start x11vnc in the entry script as seluser as well?\n. Your fix was my first local quick fix as well. Just tried running x11vnc as seluser now, because I don't know why it does matter where the secret is stored. \nThanks for taking care! \n. ",
    "sanscore": "Cool, thanks for your time and response. With rolling internal images based off this repo, do you have any suggestions? \nSpecifically, as far as having fixed versions is concerned? NodeFirefox has a fixed version (presumably because of compatibility issues with 47.0.0 and 48+), so that should be fairly straightforward. \nChrome has the policy that after each new release, the previous version becomes unavailable. So, that would be a matter of staying aware of Chrome releases.\nAny other concerns that jump out at you?\n. Okay. Thanks, again, for the quick fix, and your responses have been informative and helpful.\n. ",
    "LarryRuth": "adjust the width\n. ",
    "nekulin": "I think the problem is in the sites that they have not answered or not available\n. it will be true ?\ndocker run-d --link selenium-hub:hub -e SCREEN_WIDTH=1024 SCREEN_HEIGHT=780 selenium/node-firefox:3.0.1-aluminum. thank. I want to optimize the consumption of RAM by graphics card. ",
    "jahnavi310": "@ddavison : yes they are\n. ok, so for the time being i just changed maxinstances to one, but now this is the weird thing:\nThe same passes on firefox, but fails on chrome with the same error message as above, only difference being that now it isn't the last browser instance as there is only one instance and also not the last test.\n. ",
    "amitgaikwad85": "Client:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:16:54 UTC 2015\n OS/Arch:      linux/amd64\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:16:54 UTC 2015\n OS/Arch:      linux/amd64\n. its 2.53.1\n. Let me put in more information\nDocker Run commands:\ndocker run -d --name seleniumhub -p 4444:4444 selenium/hub\ndocker run -d -P --link seleniumhub:hub selenium/node-chrome\nI'm my code\nDesiredCapabilities capabilities = new DesiredCapabilities();\n        capabilities.setBrowserName(\"chrome\");\n        capabilities.setPlatform(org.openqa.selenium.Platform.LINUX);\ndriver = new RemoteWebDriver(new URL(\"http://:4444/wd/hub\"),capabilities);\nThe issue is, when i try to connect to the applications say at http://test.domain.com/, it fails with the error http://test.domain.com/ is not available\"; however when run my program with http://10.0.0.1/, it runs successfully.\nlet me know if this helps.\n. ",
    "amitgaikwad18": "@diemol , no i'm not facing this issue anymore\nThanks,\nAmit. ",
    "fingermark": "docker logs 6e6f5384df1d\nNot linked with a running Hub container\n. I just realized I need to pass in -e HUB_PORT_4444_TCP_ADDR=hub, but I'm still seeing no nodes in the console.  Going to open more ports or try the ip address.\n. @testphreak thanks a lot.  I'm trying that, but get\nREMOTE_HOST variable is set, appending -remoteHost\nException in thread \"main\" com.beust.jcommander.ParameterException: Unknown option: -remoteHost\n    at com.beust.jcommander.JCommander.parseValues(JCommander.java:742)\n    at com.beust.jcommander.JCommander.parse(JCommander.java:282)\n    at com.beust.jcommander.JCommander.parse(JCommander.java:265)\n    at com.beust.jcommander.JCommander.<init>(JCommander.java:210)\n    at org.openqa.grid.selenium.GridLauncherV3$3.setConfiguration(GridLauncherV3.java:257)\n    at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:147)\n    at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:73)\n. Here are the steps I'm using to try to get Selenium Grid + Docker connected via docker swarm in AWS.  If anyone else has gotten this working, please let me know if you see anything wrong:\nhttps://gist.github.com/fingermark/5360ec1cb6fc1a51f01985557cc76187\n. Just wanted to add some logs.  I'm now manually specifying the hub IP address based on this hub log:\n19:24:36.804 INFO - Nodes should register to http://10.0.0.2:4444/grid/register/\n19:24:36.804 INFO - Selenium Grid hub is up and running\nChrome node log:\n12:33:14.645 INFO - Registering the node to the hub: http://10.0.0.2:4444/grid/register\n12:35:14.936 INFO - Couldn't register this node: Error sending the registration request: Connect to 10.0.0.2:4444 [/10.0.0.2] failed: connect timed out\n. ",
    "rosariomgomez": "@testphreak could you share your final implementation having this scenario working? \nI'm running the hub and nodes in different hosts, for instance I'm using docker swarm to configure the network, but I'm not able to provide a $HOSTNAME on the SE_OPTS when creating the nodes that do not result on a \"connection refused\" error when trying to register the node on the hub. Thanks! . ",
    "chris-smith-zocdoc": "Thanks for looking into this @ddavison Are there environment variables for host and port already available? \n. I don't think those are the correct options @ddavison , I think the equivalents are -host and -port\nFrom the docs \n-host <IP | hostname> specify the host name or IP. usually not needed and determined automatically. For exotic network configuration, network with VPN, specifying the host might be necessary.\nTrying to set these from SE_OPTS doesn't seem to be working for me, I get this exception\ndocker-compose up\nRecreating desktop_node1_1\nAttaching to desktop_hub_1, desktop_node1_1\nnode1_1  | appending selenium options: \"-host bar.com -port 4445\"\nnode1_1  | Exception in thread \"main\" com.beust.jcommander.ParameterException: Was passed main parameter '\"-host' but no main parameter was defined\nnode1_1  |      at com.beust.jcommander.JCommander.getMainParameter(JCommander.java:914)\nnode1_1  |      at com.beust.jcommander.JCommander.parseValues(JCommander.java:759)\nnode1_1  |      at com.beust.jcommander.JCommander.parse(JCommander.java:282)\nnode1_1  |      at com.beust.jcommander.JCommander.parse(JCommander.java:265)\nnode1_1  |      at com.beust.jcommander.JCommander.<init>(JCommander.java:210)\nnode1_1  |      at org.openqa.grid.selenium.GridLauncherV3$3.setConfiguration(GridLauncherV3.java:257)\nnode1_1  |      at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:147)\nnode1_1  |      at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:73)\ndesktop_node1_1 exited with code 1\nFor this compose file \nversion: '2'\n services:\n   node1:\n     image: selenium/node-firefox:3.0.0-cerium\n     ports:\n      - \"4445:5555\"\n      - \"4443:5900\"\n     environment: \n      - HUB_PORT_4444_TCP_ADDR=bar.com\n      - HUB_PORT_4444_TCP_PORT=4444\n      - SE_OPTS=\"-host bar.com -port 4445\"\n   hub:\n     image: selenium/hub:3.0.0-cerium\n     ports: \n      - \"4444:4444\"\n. @ddavison I need to set the -host and -port for the nodes so that they report their locations correctly to the hub. My use case is running the containers inside of AWS ECS. ECS doesn't have a network overlay but does have docker port forwarding. Docker links don't work on ECS because the hub and nodes are running on separate hosts. \nWithout setting these options, the nodes pick up the docker bridge network address which is incorrect. They need to be set to the EC2 instances IP and the forwarded port. Currently I'm getting the EC2 IP from the EC2 metadata api and have a statically assigned port forwarded. \nSetting -host and -port on the nodes does allow me to run on ECS, but so far I've been unable to get the 3.0.0 containers to set those options without modifying the container image.  \n. ",
    "taarimalta": "@chris-smith-zocdoc \nWhen I set SE_OPTS without quotes I no longer got the \"Was passed main parameter....\" error\nSE_OPTS=-host bar.com -port 4445. Hi @peterstory \nI got @madhavajay 's container to work with compose as follows:\n``\nhub:\n        image: selenium/hub:3.1.0-astatine\n        ports:\n            - \"4444:4444\"\n        networks:\n            - seleniumGrid\nphantomjs:\n        image: madhavajay/selenium-node-phantomjs\n        depends_on:\n            - hub\n        environment:\n            - PORT=5555\n            - HUB=http://hub:4444\n        networks:\n            - seleniumGrid\n        entrypoint: 'bash -c \"phantomjs /home/phantomjs/ghostdriver/src/main.js --hub=$$HUB --port=$$PORT --ip=hostname -I | cut -d\\\" \\\" -f1` --remoteHost=http://$$HOSTNAME:5555\"'\n```\nThanks @madhavajay \n. ",
    "graingert": "(using latest automatically upgraded me to the 3.0.0 beta releases, which broke my build)\n. Ok here's my v2 proposal: \nCurrent\nlatest -> 3.0.0-dubnium\nProposed\nlatest -> 3.0.0\n2.x.x -> 2.53.1\n2.53.x -> 2.53.1\n2.52.x -> 2.52.0\n3.0.x -> 3.0.0\n3.x.x -> 3.0.0\n. is there an explanation of what -dubnium means anywhere?\n. Ok here's my v3 proposal: \nCurrent\nlatest -> 3.0.0-dubnium\nProposed\nlatest -> 3.0.0-dubnium\n2.53.1-x -> 2.53.1\n2.53.x-x -> 2.53.1\n2.52.x-x -> 2.52.0\n2.x.x-x -> 2.53.1\n3.0.0-x -> 3.0.0-dubnium\n3.0.x-x -> 3.0.0-dubnium\n3.x.x-x -> 3.0.0-dubnium\n. I suspect most people will use 3.x.x-x or 2.x.x-x\n. I removed the plus comment because it's wrong. You're not providing build\nmetadata it's transitive deps. For semver you need a different strategy\n. Ok here's my v4 proposal: \nCurrent\nlatest -> 3.0.0-dubnium\nProposed\nlatest -> 3.0.0-dubnium\n2.53.1 -> 2.53.1\n2.53 -> 2.53.1\n2.52 -> 2.52.0\n2 -> 2.53.1\n3.0.0 -> 3.0.0-dubnium\n3.0 -> 3.0.0-dubnium\n3 -> 3.0.0-dubnium\n. it's not semver at all, I'd clone the docker way of doing things\n. > I've been bitten in the past updating \"recent\" tags like this. I definitely like the idea, but force pushing tags back up you run into the problem of breaking something that somebody else expects to work.\nwhich is what latest did to me. I want latest 2 for example\nThis force pushing stuff is fine, and seems to be what tags are used for (not like git tags, more like branches)\n. @ddavison is this something that will be applied going forward?\n. Woop woop\nOn 15 Nov 2016 5:56 pm, \"Dj\" notifications@github.com wrote:\n\n@graingert https://github.com/graingert the next release i'll work on it\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/312#issuecomment-260716059,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTPVkt_gYJkg-NuVmu6fIL9xaQtN4ks5q-fJegaJpZM4KZmDQ\n.\n. that's a link to a 404... (ah you've fixed it). Users don't browse in xvfb, what's your point? . Are you suggesting that chrome --headless behaves differently from chrome\nunder xvfb?\n\nOn 12 Apr 2017 02:29, \"Dj\" notifications@github.com wrote:\n\nno, users use the physical browser. Xvfb allows the rendering of said\nphysical browsers.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-293446550,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTMWyJFMfal-UsVak1INjMBFNCeS7ks5rvCkKgaJpZM4MusZ3\n.\n. @ddavison you run chrome --headless and it manages its own internal framebuffer, rather than needing X11\n\nIt should massively simplify the default node-chrome.\nAlso it's got a VNC like protocol over the chrome debug socket, so you wouldn't need node-chrome-debug either. Would be good to have a separate image node-chrome-headless to save space\non xvfb and deps\nOn 22 Apr 2017 16:10, \"Derek Kastner\" notifications@github.com wrote:\n\nUsing the selenium node base image, I've found the following configuration\nworks best:\ncapabilities: {\n    browserName: 'chrome',\n    chromeOptions: {\n        args: ['headless','no-sandbox','disable-gpu','window-size=1920x1080']\n    }\n}\nKeeping the sandbox enabled caused an exception when selenium tried to\nstart chrome.\nI put together an example app\nhttps://github.com/dkastner/headless-chromium-selenium that extends the\nselenium node base image, installs latest snapshot of chromium (with\nheadless bugfixes), and installs a recent build of chromedriver which\nallows chrome > 59. Unfortunately, I also discovered xvfb is required for\nsendKeys to work.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-296379624,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTF5zuwN0IBMsL9Bq1m1B9eulvid5ks5ryhhOgaJpZM4MusZ3\n.\n. Yes\n\nOn 28 May 2017 18:31, \"Diego Molina\" notifications@github.com wrote:\n\n@graingert https://github.com/graingert, is it possible already to run\nChrome headless without xvfb?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-304528556,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTGeJl_QBzx8dASjI8P2XPBjTHTWYks5r-a-CgaJpZM4MusZ3\n.\n. You've got to hack sendKeys via JavaScript\n\nOn 12 Jun 2017 21:54, \"Jack Palmer\" notifications@github.com wrote:\n\nI found this to be the best solution to running chrome headless.\n429 (comment)\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-296379624\nChromedriver 2.30 which was released a couple of days ago allows for\nthe resizing of the browser window (as it was previously done via an\nextension which are not allowed in headless and since moved to a dev\ntools API https://sites.google.com/a/chromium.org/chromedriver/downloads\n).\nHowever, even with this setup I am still seeing an issue with sendKeys\nwithout xvfb setup.\nAnnoyingly the blog post above states that you do not require xvfb at\nall to use headless chrome but that does not seem to be the case\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-307908991,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTINi_BUAaT0VgDHCGg-QFDzUPkiFks5sDZpMgaJpZM4MusZ3\n.\n. Yeah and it would be super cool to get this available out of the box in docker selenium. @tabiodun probably best to have this on docker hub.. Have you got URLs for those tix?\n\nOn 15 Feb 2018 19:45, \"Tri Nguyen\" notifications@github.com wrote:\n\nLooks like 617931 is fixed, but 775911 is marked as \"WontFix\"\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-366040090,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTCYIUhH1SYUh02piQ_hwQTXzbkgzks5tVIk9gaJpZM4MusZ3\n.\n. No, with Chrome you can pass video with the devtools protocol\n\nOn Wed, 3 Oct 2018, 22:38 Tri Nguyen, notifications@github.com wrote:\n\n@diemol https://github.com/diemol if I understand this correctly, I can\nuse headless, but in order to do debugging (with VNC), I would still need\nxvfb?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-426810786,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTHvNL4kDKaQrSwBAV-2VWNhOlkdfks5uhS5IgaJpZM4MusZ3\n.\n. https://developers.google.com/web/updates/2017/04/headless-chrome#frontend\n\nOn Wed, 3 Oct 2018, 22:48 Tri Nguyen, notifications@github.com wrote:\n\nIs there any specific instruction for how I can do that (open and see the\nvideo feed)?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-426814911,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZQTDHXLHAg9o-whjbCeNWlN85vJsdeks5uhTCSgaJpZM4MusZ3\n.\n. Fyi Firefox 57 has all the cool bits of servo, and it's headless!  Let's drop xvfb totally from the 3.7 images!!. Pretty sure you can in Firefox, so the point's moot. @adiohana yes but you need to configure it correctly. \n",
    "kaplich": "+1\nWe are experiencing the same issue with the latest Selenium Docker image. \n. @davehunt \nThank you for the reply.\nRolling back to 2.53.1-beryllium helped.\n. ",
    "joaquimpedrooliveira": "@sixinli @diemol, could you please share how to correctly set these capabilities in docker run command?. I still get \"error\": \"insecure certificate\", using 3.4.0-bismuth. Maybe I'm missing something else.\nThe log shows that the capability is set to false:\nconsole\n19:08:56.996 WARN - Exception thrown\norg.openqa.selenium.WebDriverException: \nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: '95e9fdd875e1', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-62-generic', java.version: '1.8.0_121'\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities [{moz:profile=/tmp/rust_mozprofile.SItEA04BF5q6, rotatable=false, \ntimeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, platform=ANY,\nspecificationLevel=0.0, moz:accessibilityChecks=false, \nacceptInsecureCerts=false,\nbrowserVersion=53.0, platformVersion=4.4.0-62-generic, moz:processID=86.0, browserName=firefox, javascriptEnabled=true, platformName=linux}]. @ddavison , with the latest it seems to work. I've got another error message, but I think it's related to a geckodriver bug. After driver.quit() I get:\nconsole\norg.openqa.selenium.WebDriverException: Tried to run command without establishing a connection\nThank you anyway :+1: . ",
    "Krzysiaczek-at-theFoundry": "I've got exactly the same problem with the recent version which was released 10 days ago. I will try dysprosium.. I've just tried earlier version:\nREPOSITORY                                        TAG                          CREATED              SIZE\nselenium/standalone-firefox-debug   3.4.0-dysprosium   4 weeks ago         685MB\nResults from the Behat:\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\n      System info: host: '84aaa2dfcb3c', ip: '172.18.0.5', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.31-moby', java.version: '1.8.0_131'\n      Driver info: org.openqa.selenium.firefox.FirefoxDriver\n      Capabilities [{moz:profile=/tmp/rust_mozprofile.BjRAApBCv8HQ, rotatable=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, platform=ANY, specificationLevel=0.0, moz:accessibilityChecks=false, acceptInsecureCerts=false, browserVersion=53.0, platformVersion=4.9.31-moby, moz:processID=87.0, browserName=firefox, javascriptEnabled=true, platformName=linux}]\nIs it possible to setup this option (acceptInsecureCerts=true) either in Behat or Docker file - ideally in docker-compose.yml?. Thanks for the answer, but wouldn't it be possible to add it during compilation process? into a Docker file to build the image on my own? \nI was hoping such option is possible but hidden somewhere similar to this:\nPHANTOMJS_OPTS=\"--ignore-ssl-errors=true\". For me, it was OK to switch to chrome. All certificate issues are being ignored now\nselenium:\n    # image: selenium/standalone-firefox-debug:3.4.0-dysprosium\n    image: selenium/standalone-chrome-debug\n    ports:\n      - \"4444\"\n      - \"5900\"\nI thought at first that maybe it was made due to ineffective changes in Behat \ndefault:\n  extensions:\n    Behat\\MinkExtension:\n      browser_name: chrome\n      selenium2:\n        # capabilities: { \"browser\": \"chrome\", \"acceptSslCerts\": true}\n        wd_host: http://selenium:4444/wd/hub\n      goutte: ~\n      default_session: selenium2\n      javascript_session: selenium2\nbut it seems that it doesn't make any difference as Chrome ignores certificates even when this line is commented out in Behat settings.\nOther than this I also had to add some wait steps in Behat tests when the page is changed (e.g. When I follow link ...) as with Chrome in most cases it fails - doesn't wait for the page to load unlike it did with Firefox.. ",
    "porsuv": "Can you please explain steps how to setting up language specific by hacking?\nI am new to docker.\n. I can build the image file with above suggested setting to my locale.\nHowever, the web events can do events on my language on xpath but the capture screen on browser is still unreadable for human.\nHave  you ever seen this issue ?\n. Previously I tested abd used Thai language.\nOn 29 May 2017 1:28 am, \"Diego Molina\" notifications@github.com wrote:\n\n@porsuv https://github.com/porsuv which language?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/318#issuecomment-304531644,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANXBpz1ktAmqOB0EoCpbGKGidrasx8NOks5r-bzKgaJpZM4KbyR9\n.\n. \n",
    "niQo": "@diemol you're right, it has been done. This issue can be closed.. @Elufimov updated to 3.5.1. @Drimix20 geckodriver v0.18.0 have already been updated, see https://github.com/SeleniumHQ/docker-selenium/commit/3d29e0acd30050feadc4a937814d71b78e0e73ab#diff-79a170fb54c3005e51ce1510022006be. @Drimix20 Dockerfiles are generated from Dockerfile.txt \nsee generate.sh. @ddavison I've added username/email, changed to astatine and  squashed 3.5.3 in this commit https://github.com/SeleniumHQ/docker-selenium/pull/538/commits/c52d14a7e162424ff566bee97ccfe1fa0b47e995\n. Latest working release is 3.4.0-ensteinium\nthis commit broke the all docker env vars https://github.com/SeleniumHQ/docker-selenium/commit/45304b7867098725c5e68b362ad126c21a89ef20. Seems that the fix is here #529. @testphreak the fix #529 have been merged, will be in next release.\n. @testphreak as I said, it's fixed in git but the release does not contain the fix. It will be in the next release.\nI've build images from git and it works, you can build locally or wait for the next release.. @testphreak I tried locally building latest code from master with env NODE_MAX_INSTANCES and NODE_MAX_INSTANCES set to 4 works fine. Have you tried with a fresh git clone ?\n\n. @gtroshinnc we're just waiting for the next release\n@ddavison can you please publish a new release ?. this bug has been reported  #547 and fixed in #529. fixed in 3.5.3-boron. 3.5.3 images are now available. ",
    "tazle": "This same problem exists in 2.53.1 as reported in #327 \n. I think we moved away from the tomcat container.. ",
    "joshstrange": "Why was this closed? @emoshaya-cognito did you find a fix? It's still throwing these errors for me.\n. ",
    "boyfromearth": "version 3.0.0-dubnium helped for me also!! But i still need it for version 2.53.1. ",
    "kellinwood": "I ran into the same issue testing our website.   We discovered issues caused by missing fonts for japanese, chinese, korean, and thai in the stock selenium-docker images and worked around the problem by building custom docker images.  An example of our Dockerfile is shown below:\n```\nThe stock selenium-docker images are missing some fonts required in order to properly\nrender all of the supported languages on our website. Install the following:\nfonts-ipafont-gothic fonts-ipafont-mincho # jp (Japanese) fonts, install seems to solve missing Chinese hk/tw fonts as well.\nttf-wqy-microhei fonts-wqy-microhei       # kr (Korean) fonts\nfonts-tlwg-loma fonts-tlwg-loma-otf       # th (Thai) fonts\nFROM selenium/standalone-chrome-debug\nUSER root\nRUN apt-get update && \\\n    apt-get install -y \\\n        fonts-ipafont-gothic fonts-ipafont-mincho \\\n        ttf-wqy-microhei fonts-wqy-microhei       \\\n        fonts-tlwg-loma fonts-tlwg-loma-otf       \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/ /var/lib/apt/lists/\n```. ",
    "mauriceteunissen": "Sorry that was a mistake. I closed the request already.\nIt adds webgl support, which is specific to our use case.\nMaurice Teunissen\nDirector of IT\nImpact Marketing Specialists\n(949) 348-2292 ext 218\nFrom: Leo Gallucci notifications@github.com\nReply-To: SeleniumHQ/docker-selenium reply@reply.github.com\nDate: Friday, October 21, 2016 at 1:28 AM\nTo: SeleniumHQ/docker-selenium docker-selenium@noreply.github.com\nCc: Maurice Teunissen maurice.teunissen@impactorder.com, Mention mention@noreply.github.com\nSubject: Re: [SeleniumHQ/docker-selenium] Merge in latest changes from official docker-selenium repo (#319)\nWhat is this libosmesa6http://www.mesa3d.org/faq.html @mauriceteunissenhttps://github.com/mauriceteunissen ?\nDoes it improve xvfb performance? does it replace it? how?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/SeleniumHQ/docker-selenium/pull/319#issuecomment-255324161, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AGWxYsRiaUdx9rLUybTyo-_GPMYdeVddks5q2HfBgaJpZM4KcdTp.\n. ",
    "yashassai": "version: '2'\nservices :\nhub:\nimage: selenium/hub\nhostname: hub\nports:\n- \"4446:4444\"\n  environment:\n- no_proxy=localhost\nchrome:\nimage: selenium/node-chrome-debug\nhostname: chrome\nlinks:\n- hub\n  ports:\n- \"5901:5900\"\n  environment:\n- HUB_PORT_4444_TCP_ADDR=hub\n- HUB_PORT_4444_TCP_PORT=4444\n. When you do a docker-compose up d \nafter that creates a hub and register the node.\nNow you do docker-compose scale chrome=4\n\nWARNING: The \"chrome\" service specifies a port on the host. If multiple containers for this service are created on a single host, the port will clash.\nCreating and starting dockerscripts_chrome_2 ... error\nCreating and starting dockerscripts_chrome_3 ... error\nCreating and starting dockerscripts_chrome_4 ... error\nERROR: for dockerscripts_chrome_4  driver failed programming external connectivity on endpoint dockerscripts_chrome_4 (e71c561d693a54866fcd70db63d3dff2ace44e166ffabcac266eef867379f0ba): Bind for 0.0.0.0:5901 failed: port is already allocated\nERROR: for dockerscripts_chrome_2  driver failed programming external connectivity on endpoint dockerscripts_chrome_2 (52a0af2401ff0ea46175ce1d4cb653845c460135dee3e22347e2a081f9dc13ca): Bind for 0.0.0.0:5901 failed: port is already allocated\nERROR: for dockerscripts_chrome_3  driver failed programming external connectivity on endpoint dockerscripts_chrome_3 (c936fc300429029602b837ef18cc13e22b578ea498ccf4d3e6f8fa650ab7b1a7): Bind for 0.0.0.0:5901 failed: port is already allocated\n\nHow do I expose the ports when I am doing this?\n. ",
    "RomanGrekov": "It works!!! Thank you\n. ",
    "speedplane": "@ddavison I'm running into this bug. I can't allow the docker container to access the hosts shared memory for security reasons. Are there any other options?. ",
    "kuroiokami": "Still don't totally understand the issue but upped the power of the server and was able to go above 20 now.\n. Thanks for your feedback @ddavison ! I figured it was something like that but what determines how many you can fire up? Is there an X cpu / Xgb of ram that needs to be on each container before it restricts you? I couldn't find any information on this. \n. ",
    "joaoluizjoaquim": "Sorry, I forgot sign the CLA. Done!\n. ",
    "webmutation": "Ping... does not appear to be something that will move forward.. ",
    "w2aJava": "I am not able to launch 5 sessions of chrome and firefoxnode. Below is my compose file:\nversion: '2'\nservices:\n    w2agrid:\n        image: selenium/hub:2.53.1\n        container_name: w2agrid\n        privileged: true\n        ports:\n            - 4444:4444\n        environment:\n            - GRID_MAX_SESSION=5\n            - GRID_MAX_INSTANCES=5\n            - GRID_TIMEOUT=240000\n            - GRID_BROWSER_TIMEOUT=240000\n        networks:\n            - w2agrid_grid_internal\nnodechrome:\n    image: selenium/node-chrome-debug:2.53.1\n    privileged: true\n    depends_on:\n        - w2agrid\n    ports:\n        - 5900\n    environment:\n        - no_proxy=localhost\n        - HUB_PORT_4444_TCP_ADDR=w2agrid\n        - HUB_PORT_4444_TCP_PORT=4444\n        - NODE_MAX_SESSION=5\n        - NODE_MAX_INSTANCES=5\n\n    networks:\n        - w2agrid_grid_internal\n\nnodefirefox:\n    image: selenium/node-firefox-debug:2.53.1\n    privileged: true\n    depends_on:\n        - w2agrid\n    ports:\n        - 5901  \n    environment:\n        - no_proxy=localhost\n        - HUB_PORT_4444_TCP_ADDR=w2agrid\n        - HUB_PORT_4444_TCP_PORT=4444\n        - NODE_MAX_SESSION=5\n        - NODE_MAX_INSTANCES=5\n\n    networks:\n        - w2agrid_grid_internal\n\nnetworks:\n    w2agrid_grid_internal:\nPlease help. ",
    "sheerun": "also because of excessive logging. ",
    "joelchrist": "Any update on this? Would really like to know which files are growing so big.\n. ",
    "rnemeth1980": "core-dumps make containers full, so that no selenium grid tests can be executed on any firefox pod in k8s anymore. \nI get this error while test execution org.openqa.selenium.WebDriverException: java.io.IOException: No space left on device.\nentries in ./home\n-rw------- 1 seluser seluser 507M Sep 27 23:03 core.1211\n-rw------- 1 seluser seluser 496M Sep 24 23:02 core.12299\n-rw------- 1 seluser seluser 628M Sep 21 23:00 core.17331\n-rw------- 1 seluser seluser 627M Sep  7 12:24 core.17928\n-rw------- 1 seluser seluser 584M Sep  9 23:01 core.1847\n-rw------- 1 seluser seluser 536M Sep 23 23:00 core.19056\n-rw------- 1 seluser seluser 611M Sep 15 23:00 core.23882\n-rw------- 1 seluser seluser 584M Sep 30 23:00 core.23942\n-rw------- 1 seluser seluser 667M Sep 19 23:00 core.24496\n-rw------- 1 seluser seluser 644M Sep 26 23:01 core.27137\n-rw------- 1 seluser seluser 364M Okt  1 23:01 core.27953\n-rw------- 1 seluser seluser 515M Sep 28 23:03 core.28882\n-rw------- 1 seluser seluser 644M Sep 10 23:01 core.2943\nis there any way to prevent these core-dumps or delete them automatically?. Using VMs starting the node I set the profile with \u201c-Dwebdriver.firefox.profile=seleniumuser\u201d for Selenium Grid.\nUsing Docker as I understand /opt/selenium/generate_config is used to configure the node.\necho \"\n{\n  \\\"capabilities\\\": [\n    {\n      \\\"version\\\": \\\"$FIREFOX_VERSION\\\",\n      \\\"browserName\\\": \\\"firefox\\\",\n      \\\"maxInstances\\\": $NODE_MAX_INSTANCES,\n      \\\"seleniumProtocol\\\": \\\"WebDriver\\\"\n    }\n  ],\n  \\\"proxy\\\": \\\"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\\\",\n  \\\"maxSession\\\": $NODE_MAX_SESSION,\n  \\\"port\\\": $NODE_PORT,\n  \\\"register\\\": true,\n  \\\"registerCycle\\\": $NODE_REGISTER_CYCLE\n  }\n}\" \nHow do I set the firefox profile there?\nI tried adding \"webdriver.firefox.profile\":\"default\" as suggested here http://grokbase.com/t/gg/selenium-users/14b69pd7q0/has-the-json-format-changed-for-grid-node-config-i-am-getting-an-error but\nthe container stops after a couple of seconds and I assume this addition is wrong and causing trouble.\nIs there any progress on this topic? How can a custom firefox profile be set on the node?\nCreating the profile inside the container accessing it via VNC and committing it to image is no problem, but this custom profile is never used by running tests.\nThank you for any help,\nRoland. ",
    "slmzig": "Have the same issue, when I close browser - new core dump created.\nAny update on this? . ",
    "Dude-X": "My org is seeing this issue now since we have always on containers running in docker on a AWS instance. We don't use firefox, but only Chrome, and it seems that chromedriver doesn't clean up profiles (anymore?). \nI think a script that runs every 24 hour can reap directories that match a pattern (chrome*, whatever firefox uses in case of crashes) that checks the ctime would suffice to keep the rubbish down. \nAnother factor to consider is that we should update the docs to advise mounting the  /tmp directory to tmpfs or /tmp for those who don't have autoscaling solutions.. ",
    "exic": "I recently got this with selenium/node-chrome:3.141.59-dubnium, creating a lot of profile (?) directories in its /tmp folder (/var/lib/docker/overlay2/43d80c...abbe/diff/tmp):\n[...]\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 15:55 .org.chromium.Chromium.1DdWfD/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 15:55 .org.chromium.Chromium.9uUpHM/\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 15:55 .org.chromium.Chromium.2x16R7/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 15:55 .org.chromium.Chromium.ESIsob/\n[...]\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 16:10 .org.chromium.Chromium.euyXVK/\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 16:14 .org.chromium.Chromium.m70XNj/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 16:14 .org.chromium.Chromium.5E24aP/\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 16:16 .org.chromium.Chromium.Wy4wOU/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 16:16 .org.chromium.Chromium.NWyI1u/\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 16:18 .org.chromium.Chromium.wMsBjA/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 16:18 .org.chromium.Chromium.j203Rs/\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 16:18 .org.chromium.Chromium.n4ALqh/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 16:18 .org.chromium.Chromium.8I5iD3/\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 16:19 .org.chromium.Chromium.VCEEdI/\ndrwx------    3 xxxxadm xxxxadm   4096 Dec 27 16:19 .org.chromium.Chromium.DOasni/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 16:20 .org.chromium.Chromium.bzaxTe/\ndrwx------    4 xxxxadm xxxxadm   4096 Dec 27 16:20 .org.chromium.Chromium.4RkT5a/\nthey all contained those:\ntotal 16\n-rw-r--r-- 1 xxxxadm xxxxadm   78 Dec 27 16:19 Local State\n-rw-r--r-- 1 xxxxadm xxxxadm    0 Dec 27 16:19 First Run\ndrwx------ 2 xxxxadm xxxxadm 4096 Dec 27 16:19 Default/\ndrwx------ 2 xxxxadm xxxxadm 4096 Dec 27 16:20 BrowserMetrics/\n-rw-r--r-- 1 xxxxadm xxxxadm  103 Dec 27 16:20 chrome_debug.log\nBrowserMetrics then contains 4.1M of data in files like BrowserMetrics-5C24EDA3-244FDB.pma.\nThis can't be intended behavior, is it? Is this the same issue?\nI'd rather not solve the symptom by creating cronjobs that clean this up...\nEDIT: Details. However, this only happened on one of two nodes that were running node-chrome containers and doesn't seem to reproduce right now. I'll return here if it occurs again, you might as well ignore this for now.. ",
    "lcnja": "Let me try\n#734. \n. HI @diemol \nThanks for reply\nThe actual is docker from 1.13 to the version include tini without -g -p\nIn my scene,  Sometimes still produce zombies, Here are the possible reasons.\n    Older version Tini without -p parameter\n    Default command is /dev/init --, Without -g parameter\nSo, Install the latest program manually and set the parameters correctly is the better.\n\n. ",
    "vimagick": "@ddavison I've tried environment object, the result is the same:\n```bash\n$ docker-compose up -d\nCreating selenium_firefox_1\n$ docker-compose logs -f\nAttaching to selenium_firefox_1\nfirefox_1  | appending selenium options: -host 1.2.3.4 -port 5555\nfirefox_1  | Waiting xvfb...\nfirefox_1  | -bash: 1.2.3.4: command not found\nfirefox_1  | Waiting xvfb...\nfirefox_1  | Waiting xvfb...\nfirefox_1  | Waiting xvfb...\n```\nThe problem is entry_point.sh will run this command: \nSE_OPTS=-host 1.2.3.4 -port 5555 ... xvfb-run ... java ... -host 1.2.3.4 -port 5555\n\n(1.2.3.4 is a command now, the rest are arguments of it).. \ud83d\udc4d  I'll try it.. :+1:. ",
    "MicahZoltu": "Is there anything holding up this PR?\nI just spent half a day trying to figure out how to make it so I can run tests via docker-compose and found that the tests will often run before the nodes are all finished connecting to the hub.  With throwOnCapabilityNotPresent set to true the hub fails the request from the test driver setup because it doesn't have any capabilities yet.  I believe setting this would resolve the problem and make it so the requests from my tests will queue up until the necessary node is fully connected.. I ended up solving the problem myself by building my own docker image.  I would have preferred to use an environment variable as it would have been a much cleaner solution, but this got things working for now.\nhttps://github.com/Zoltu/bags-client/blob/master/functional-tests/Dockerfile-selenium-hub. @HackToday I'm not sure where exactly the log output is coming from.  Where would I add the {\"moz:firefoxOptions\": {\"log\": {\"level\": \"trace\"}}} to see if that helps with reducing the log level?  At the moment, I'm launching all through docker-compose using the publicly hosted docker images, so I don't have any configuration files for selenium/hub or selenium/node-firefox.  I do have a nightwatch.json for the test-client side interactions, could it go there?. @pratiks Selenium hub is also noisy, but this issue is specifically for the nodes themselves.  @HackToday I attempted to drop those capabilities into my capabilities JSON but it resulted in an error complaining about it being \"not a FirefoxOption\".. ",
    "apascoal": "I had to downgrade the Firefox version to work with the Selenium 3.0.1.. I had not created any issue with it, I have a stressful end of year.\nOn my PC it didn't work with the version I had of Firefox, and I downgraded the version on my PC and on the docker to 47.0.1.. ",
    "alexgibson": "Interesting, it seems to work for me. Can you link to what the issue is?. 50.0 is in master, the commit is just not included in the new build: https://github.com/SeleniumHQ/docker-selenium/commit/31fbe36f54be9a88bc3c0842fdbd905cc3084ea3. Ok, sounds like you just need to migrate your tests to use Marionette & GeckoDriver. This does not have anything to do with this issue directly. . The last build was 13 days ago, and as far as I can tell misses commit https://github.com/SeleniumHQ/docker-selenium/commit/31fbe36f54be9a88bc3c0842fdbd905cc3084ea3. ",
    "Cyperwu": "Is this Issue going any further?. ",
    "rjimgal": "Have you tried running the nodes using nvidia-docker? https://github.com/NVIDIA/nvidia-docker\nI am curious about any performance improvement that you may get.. ",
    "pigiuz": "Hey guys, I encountered this issue as well and here's what I found out.\nLong story short: NO - the current implementation doesn't support graphics acceleration.\n@philjones88 all nodes run on top of xvfb (\"X virtual frame buffer\") therefore graphics acceleration cannot be enabled.\n@rjimgal running on nvidia-docker doesn't solve the issue because:\n- xvfb can't be accelerated by definition (it's a virtual representation of the frame buffer)\n- nvidia-docker requires PCI passthrough, therefore docker running on VMs that don't support such feature (neither virtualbox nor xhyve support it yet) will not allow the containers to access the GPU\nI hope I saved you some googling :)\nhappy new year\n--PG. @elgalu in order to make it working you need to replace xvfb with a real X server and do all the plumbing. \nLast time I checked (december 2016) neither browserstack nor saucelabs offer this service yet so I'm investigating in this matter as well.\nI'll publish something in case I succeed, please do the same if you achieve something :)\n. Hey guys, I'm glad to be coming back here with very good news!!\nWe finally have hardware acceleration!\nwe forked selenium node chrome and node firefox,\nwe added VirtualGL support,\nand we're running them on a G2 instance on AWS (with an Nvidia grid GPU).\nthis enables us to run hardware accelerated webgl content in selenium.\nhere's the repos \nhttps://github.com/plumbee/nvidia-virtualgl-selenium-node-chrome\nhttps://github.com/plumbee/nvidia-virtualgl-selenium-node-firefox\nhere's how we set up the host machine on AWS\nhttps://medium.com/@pigiuz/setting-up-a-hw-accelerated-desktop-on-aws-g2-instances-4b58718a4541#.kfwywl5e1\nand the setup repo https://github.com/plumbee/nvidia-hw-accelerated-box\nhere's the explanation of how we enabled docker containers to run hardware accelerated GUI applications\nhttps://medium.com/@pigiuz/hw-accelerated-gui-apps-on-docker-7fd424fe813e#.b0gz0lrxx\nfeel free to fork\\contribute\\use all of the above, or contact me for any clarification\nenjoy!. ",
    "pgatplumbee": "@diemol i agree with @philjones88 here, forks are a suboptimal way to solve the problem if you don't want to get your hands dirty.\n@diemol let me know if you are ever going to merge the virtualgl solution into yours. I will be more than glad to help.. @diemol good for me, if you will ever change direction give me a call, I will be available.\nPS: @pigiuz and @pgatplumbee is always me (personal and company accounts). ",
    "pratiks": "Touche.  It makes it extremely difficult to parse what testing is actually happening on the node.. @MicahZoltu  - perhaps the logging you are referring to are the selenium-server logs that are generated by the HUB and not the browser.  @HackToday  is suggesting to change the browser capabilities; its unlikely the noise would discontinue.  . ",
    "luksurious": "I am using the standalone containers and the JAVA_OPTS environment variable to silence the containers.\nJAVA_OPTS=-Dselenium.LOGGER.level=WARNING\n. ",
    "ReservedDeveloper": "In regards to @luksurious suggestion, has anyone been able to utilize that approach with hub+nodes? I've not yet had success. Currently using the following commands:\n```\ndocker run -d --name automationHub -p 4444:4444 -e JAVA_OPTS=\"-Dselenium.LOGGER.level=WARNING\" selenium/hub\ndocker run -d --name automationNode --link automationaHub:hub -e JAVA_OPTS=\"-Dselenium.LOGGER.level=WARNING\" selenium/node-chrome\n```\nHub and node both spin up fine, but continue to output DEBUG level logs.. ",
    "jr00n": "@luksurious I still got Marionette DEBUG messages  and geckodriver INFO messages. Do you know how to silence them? Otherwise my logs get overwhelmed....\nMarionette  DEBUG   Register listener.js for window 2147483649\ngeckodriver INFO    geckodriver 0.19.0. What is the supported version on openshift 3.6 3.5.3-boron is not working. . ",
    "wenJanus": "Who can share example how to set the log level in nodejs ? . ",
    "KyeRussell": "Throwing my hat in the ring. Chrome is splooshing all over my docker-compose up output - drowning the much much more important lines from my web app and database.\n@luksurious' solution unfortunately does not work for me.\nI feel that the default log level shouldn't be DEBUG regardless. . ",
    "bwatty": "Any reason why JAVA_OPTS=\"-Dselenium.LOGGER.level=INFO\" or any other logger level (ALL, FINE, etc.) doesn't work with hub and nodes? I'm primarily interested in nodes. My docker is running selenium-server-standalone version 3.11.0. When I run 3.4.0 standalone then I can switch between the different logger levels.. Maybe not the same detail as before, but I added the following and I was able to get more verbose logging.\n-Dwebdriver.chrome.verboseLogging=true. ",
    "phibsholo": "What do you mean when you say that I have to mount a volume in host? it means that I have to do a build in composer file using a Dockerfile that do this action?\nI tried a manner to add an extension, editing config.json on /opt/selenium adding chromeOptions, into node-chrome-debug container, and reloading container, but doesn't work.. OK!! thanks ;) I will try it. Sorry for the questions... but where is the extensions directory into chrome image? and I added the volume that you commented before but I don't understand why I have to do it, because I read that this volume is to share more host memory and I think that is not my currently problem.. This is my docker-compose.yml:\n```\nversion: '2'\nservices:\nbehat:\n    image: bergil/docker-behat:v1.1.4\n    container_name: behat_container\n    environment:\n      COMPOSER_UPDATE: 1\n      HUB_PORT_4444_TCP_ADDR: hub\n    restart: on-failure:5\n    volumes:\n      - ./behat/behat.yml:/srv/behat.yml\n      - ./behat/features:/srv/features\n      - ./behat/composer.json:/srv/composer.json\n    depends_on:\n      - hub\nhub:\n    image: selenium/hub:2.53.1\n    container_name: hub_container\n    ports:\n      - \"4444:4444\"\nfirefox:\n    image: selenium/node-firefox-debug:2.53.1\n    container_name: firefox_container\n    ports:\n      - \"59000:5900\"\n    depends_on:\n      - hub\n    environment:\n      HUB_PORT_4444_TCP_ADDR: hub\n    extends:\n      file: docker-compose.local.yml\n      service: custom_data\nchrome:\n    image: selenium/node-chrome-debug:2.53.1\n    container_name: chrome_container\n    ports:\n      - \"59001:5900\"\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    environment:\n      HUB_PORT_4444_TCP_ADDR: hub\n      SE_OPTS: \"-debug\"\n    extends:\n      file: docker-compose.local.yml\n      service: custom_data\n```. I imagined that it was an example, but I didn't understood how to used it.\nThe really thing that I didn't know it was to call options.addExtension('/opt/selenium-shared/some-extension.xpi'), when and where do it? because my tests are in behat extending mink, and I don't know how get chromeDriver that is usually using. . OK, thanks a lot!! ;). ",
    "deadnight7": "@ddavison - How would I pass in the arguments if the shared volume is mounted to the different directory?\nI have issues in mapping Chrome Extension in Docker - It works locally.\nI have it configured my dir like below, (Using a mac)\n/Users/Shared-DirectoryLocalFolder/:/home/seluser/Downloads\nWhich path should I be passing in ChromeOptions?\nPlease help,\nThanks and Regards,\nChirag Pandit. @prashanth-sams  thanks for the update, will check that out. Currently running on Chrome XVFB Session in Jenkins without docker. ",
    "shankarkc": "I am using 2.53.1 Americium node firefox as base image.  On that i have installed chrome browser so that i have am image with both Firefox and chrome. I have not moved to selenium 3.0 images yet. . Yes thats what it is doing. Isnt this what you are interested in? The solution I gave will result in a grid like  the one in image\n\nWhat I am praposing as a solution is take chrome as your base image and add firefox to it. Now you have an image with both ff and chrome. I have done it for my personal use. refer attached image.. I am using docker selenium grid\nhttps://github.com/SeleniumHQ/docker-selenium\nI took node-chrome:3.4.0 as my base docker image and added firefox and its webdriver to it. It resulted in new docker image with both ff and chrome as shown in image.. I have 1 machines with label hub and 3 machines with label node\nHow to do it?\n```\nFor ubunti 14\necho DOCKER_OPTS=\\\"\"--label seleniumNodeType=hub --registry-mirror=https://registry.myOrg.corp:5000\\\"\" | sudo tee /etc/default/docker\necho DOCKER_OPTS=\\\"\"--label seleniumNodeType=node --registry-mirror=https://registry.myOrg.corp:5000\\\"\" | sudo tee /etc/default/docker\nFor Ubuntu16\necho {  \\\"labels\\\": [\\\"seleniumNodeType=hub\\\"]  , \\\"registry-mirrors\\\": [\\\"https://registry.myOrg.corp:5000\\\"] }  | sudo tee /etc/docker/daemon.json\necho {  \\\"labels\\\": [\\\"seleniumNodeType=node\\\"]  , \\\"registry-mirrors\\\": [\\\"https://registry.myOrg.corp:5000\\\"] }  | sudo tee /etc/docker/daemon.json\nI created a docker file as mentioned and used it like this....I dont use yml\ndocker network create -d overlay --subnet 10.0.9.0/24 --attachable overlayNet\ndocker service create   --name SeleniumHub  --network overlayNet --constraint engine.labels.seleniumNodeType==hub   --publish 4444:4444 --publish 3000:3000  registry.myOrg.corp:5004/ai/hub:0.0.46\ndocker service create  --replicas 20 --name SeleniumNode --limit-memory 1536M    --restart-condition any --restart-delay 5s --stop-grace-period 10s  --constraint engine.labels.seleniumNodeType==node --network overlayNet --env hub_name=SeleniumHub   --env  node_max_memory=1250  registry.myOrg.corp:5004/ai/node:0.0.46\n```\nHere registry.myOrg.corp:5004/ai/XXXXX:0.0.46 are the docker hub/node images i created as mentioned above. I am using below code \nwebDriver.manage().window().setSize(new Dimension(1600,900));\nAs per your description it won't occur when we specify size.  In my code i do specify size. Still maximize fails.  So potentially its a different issue. . @QA2017 there is \na workaround mentioned here.  https://bugs.chromium.org/p/chromedriver/issues/detail?id=1901\nI have not tried it though. You can give a shot. It says try \ncapabilities:\n                    args:\n                        [start-maximized] . @QA2017 \nI am using 3.6.0-americium release \nI was executing below setSize after calling get\nwebDriver.get(url);\n    // setting browser window size\n    webDriver.manage().window().setSize(new Dimension(1600,900));\nI removed the setsize just after\nwebDriver.get(url);\nI do call this API at latter part in my code to change the window size. there it didnt give any error to me. Just remove setsize/maximize calls immediately after getting webdriver. I think it needs some time to stabilize or sth like that... It helped me. How that it helps you too.. I am closing this as its not a blocker and we have a workaround. . What i typically do is curl hubs console page and check if hostname or ip address is present in console page. If its present then it is in good shape. It always works for me @tnguyen14. I am already using this as my nodes health check. Node is useful as long as it is registered to hub only. . ",
    "mouyigang": "HUB_PORT_4444_TCP_ADDR=test.kpnnl.local\nif it's host' host name: HUB_PORT_4444_TCP_PORT=80\nif it's virtual machine's host name: HUB_PORT_4444_TCP_PORT=4444. ",
    "FNRG": "I tried both and they give different errors. But it looks like 4444 is the right one but something else is off.\n\nversion: '2'\nservices:\n\nchrome:\n    image: selenium/node-chrome\n    volumes:\n      - /grid/register\n    environment:\n      - NODE_MAX_INSTANCES=2\n      - EXTERNAL_IP=172.26.182.205\n      - NO_PROXY=test.kpnnl.local\n      - HUB_PORT_4444_TCP_ADDR=test.kpnnl.local\n      - HUB_PORT_4444_TCP_PORT=80\n\n\n. I can check the grid in the browser and curl the hub url. Also ive checked to connect a node to the hub without docker and all that works. So I'm not really sure what to do. . ",
    "chiluap": "try this:\nhub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\nfirefox:\n  image: selenium/node-firefox\n  links:\n    - hub\n  log_driver: none\nchrome:\n  image: selenium/node-chrome\n  links:\n    - hub\n  log_driver: none\nand then type http://localhost:4444/grid/console in your browser to check the state.. ",
    "Janki2": "My application is up using docker with url xyz in ubuntu machine. Now i have configured selenium grid using docker on may local windows machine with docker toolbox. I want to know if my local docker node container will have access to xyz url or not.. Hey which version you upgraded for this issue?\nFacing same issue when using docker toolbox with selenium/node-chrome image.. ",
    "rmanyala916": "The following worked for me \n*small modification to the work done by \"Marcel Birkner\" - please refer to check out his configuration here https://github.com/marcelbirkner/docker-ci-tool-stack - Thanks to Marcel for great the work!\n\ndocker-compose-selenium.yml\nversion: '2'\nnetworks:\n  prodnetwork:\n    driver: bridge\nservices:\n seleniumhub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\n  networks:\n    - prodnetwork \n chrome:\n  image: selenium/node-chrome-debug\n  ports:\n    - \"5900:5900\"\n  depends_on:\n    - seleniumhub\n  environment:\n    - HUB_PORT_4444_TCP_ADDR=seleniumhub\n    - HUB_PORT_4444_TCP_PORT=4444\n  networks:\n    - prodnetwork\n. ",
    "lucasvanlierop": "@BrennanRoberts Do you have an example of how you use this? For example how would you get a live view of what Selenium is running in Chrome?\nI already know Chrome works, verified this taking the following steps:\n- Configure a selenium service for Docker Compose,\n- Run it as my own user (since x cannot run as root)\n- Give it a home directory chrome can write to\n- Start the selenium container: docker-compose up selenium-chrome\n- Run  Chrome:docker-compose exec selenium-chrome google-chrome`\nMy Docker Compose config is:\nyml\n selenium-chrome:\n    image: selenium/standalone-chrome\n    user: {MY_USER_ID}:{MY_GROUP_ID}\n    environment:\n      DISPLAY: $DISPLAY\n      HOME: /home\n    volumes:\n      - ./docker/selenium-chrome/entry_point-x11.sh:/opt/bin/entry_point.sh:ro\n      - /tmp/.X11-unix:/tmp/.X11-unix\n      - /tmp/home/:/home/. @BrennanRoberts As always my error was something completely unrelated. I misconfigured my BDD tool to use http://selenium-chrome:4444 instead of http://selenium-chrome:4444/wd/hub which resulted in selenium giving an error response instead of starting chrome. This error did not appear anywhere of course (until I started debugging). Now chrome windows are opened like they should, so I can confirm this works well. Thanks!. I've been using this patch for a while now and it works really well. ",
    "bryanlarsen": "Another use case: so that the GPU can be used for tests.    We can either hook up to a running X server, or hook up via compose to a separate docker image running Xdummy.. I ended up using https://github.com/plumbee/nvidia-virtualgl-selenium-node-chrome instead.. ",
    "wesmcouch": "Hey @HackToday,\nMesos can run the selenium hub just fine, but when running the nodes it becomes an issue. \nThe issue is using SE_OPTS to tell the node what port marathon has assigned to the container is too late during the process of creating the container. For some reason marathon is unable to link this assigned port and port 5555 during this process. The node will be able to connect to the hub but you are unable to connect to the node on the assigned port.\nUsing the fix described in the PR, you are able to put the assigned port in as an environment variable  using HOST mode in marathon and it will connect just fine.\nHere is my current configuration that works really well with the above PR. I can spin up any number of nodes with this configuration.\n\n\n. Sounds good, thanks!. ",
    "mulyoved": "there is a $100 bounty on this one http://codemill.io/task/585e88dbd2d2ba0004422923. ",
    "asethi15": "I have the same need to have IE in a selenium/standalone-IE-debug image. Any plans?. ",
    "madhavajay": "How much CPU and Ram?\nI think its largely a CPU limitation, I cant effectively run more than about 50ish Chrome nodes on 16 cores, but I can run over 100 PhantomJS nodes on the same hardware. It doesnt need Selenium Standalone or Xvfb so its much lighter. But the Grid itself on the same machine seems to allow me to connect 200 PhantomJS nodes okay, so I dont think its the fault of the grid.. @Menthalion I am trying to do the exact same thing as you, load testing with real browsers. We have a setup thats using Nightwatch, TestArmada, BrowserMobProxy, HarStorage and then Selenium Grid with PhantomJS in Docker containers connected to the Grid, plus lots of custom JS code to drive the tests and generate the reports.\nI gave up on trying to get Selenium Docker Chrome to run at scale because it seems to resource heavy. I couldn't run 100 on 16 Cores, but for PhantomJS I can.\nI am also considering some Ghetto Cloud to get to 200 by running about 30-40 PhantomJS nodes on a bunch of the Dev iMac 5ks.\nId be interested to chat / compare notes with what you have achieved seeing as there are very little resources I can find out there on this specific topic which is to run lots of real browsers parallel for Load Testing.. I think most automated testing will use chrome headless going forwards, and using docker for automated testing is a perfect fit, so this just seems like an obvious thing, in fact, iv been asking about it for the last few months and even tried to roll my own but chrome --headless was buggy. Big +1 from me on this as PhantomJS 2.5 release isn't even available and maybe we won't see it now that the maintainer has stepped down.\nThe main reason is quite simple.... Chrome uses a lot of memory and cpu and that should be lower without Xvfb and real rendering.. @peterstory This could be an issue with the ghostdriver, I actually submitted a patch to the ghostdriver that fixes this exact issue when you try to connect to a remote grid which is not hosted on the same local machine.\nhttps://github.com/jesg/ghostdriver/commit/6e0e1f7088b11cff7a8810210a17ce1530302887\nI also made a docker container which has the patched ghostdriver with my edit you can use to test this.\nhttps://github.com/madhavajay/selenium-node-phantomjs\nMy param --remoteHost=http://x.x.x.x:5555 should be merged into the main ghostdriver project and that should be making its way into new builds of phantomjs.\nHowever, the maintainer of phantomjs stepped down recently and I don't know whats happening with the final 2.5 release.\nTheres a separate chat about adding chrome headless to selenium docker for this exact reason:\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429\nLet me know if this doesn't fix your issue. :). ",
    "Sovetnikov": "6 months later this issue still exists. As in initial issue description:\ndocker run --rm selenium/standalone-chrome-debug sudo -E -i -u seluser env | grep DBUS\nor\ndocker run --rm selenium/standalone-chrome:3.4.0-dysprosium sudo -E -i -u seluser env | grep DBUS\nTwo weeks ago i made update to 3.4.0-dysprosium image and again getting timeouts on new selenium sessions.. 3.1.0-astatine works fine:\ndocker run --rm selenium/standalone-chrome:3.1.0-astatine sudo -E -i -u seluser env | grep DBUS\nseems DBUS fix is lost somewhere between 3.1 and 3.4. Two lines in custom Dockerfile fixed it for my:\nRUN echo 'Defaults env_keep += \"DBUS_SESSION_BUS_ADDRESS\"' >> /etc/sudoers\nRUN echo \"DBUS_SESSION_BUS_ADDRESS=/dev/null\" >> /etc/environment\n. Can you see DBUS_SESSION_BUS_ADDRESS in your output? I'm not ... this is a problem\nThis command shows that DBUS_SESSION_BUS_ADDRESS is in env: docker run --rm selenium/standalone-chrome:3.1.0-astatine sudo -E -i -u seluser env | grep DBUS\nBut this command shows that DBUS_SESSION_BUS_ADDRESS is NOT in env anymore with latest docker image: docker run --rm selenium/standalone-chrome sudo -E -i -u seluser env | grep DBUS\nAbout root... you can see that i'm aware of seluser and running test with sudo -u seluser. This issue about debug image that runs selenium with sudo:\ndocker run --rm selenium/standalone-chrome-debug cat /opt/bin/entry_point.sh | grep sudo\nSeems that initial issue was fixed in selenium/standalone-chrome image and it passed to debug image.\nAt now selenium/standalone-chrome has lost that fix and debug image as well.. this command returns empty result on clean server without pulled earlier selenium images: docker run --rm selenium/standalone-chrome:3.4.0-dysprosium sudo -E -i -u seluser env | grep DBUS. Just read my first message about this issue, all as described there.\nThis bug was fixed, but fix is lost now.\nThis issue about selenium/standalone-chrome-debug image that runs selenium by sudo and then DBUS_SESSION_BUS_ADDRESS variable is lost.\nJust add:\nRUN echo 'Defaults env_keep += \"DBUS_SESSION_BUS_ADDRESS\"' >> /etc/sudoers\nRUN echo \"DBUS_SESSION_BUS_ADDRESS=/dev/null\" >> /etc/environment\nto Dockerfile of selenium/standalone-chrome-debug. ",
    "namedgraph": "-Dwebdriver.firefox.profile does not work for me. Firefox still uses some temp profile:\n12:49:52.086 INFO - Capabilities are: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {args: [], prefs: {}}}\n12:49:52.088 INFO - Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {args: [], prefs: {}}} matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService)\n1517143792123   geckodriver INFO    geckodriver 0.19.1\n1517143792134   geckodriver INFO    Listening on 127.0.0.1:12360\n1517143792286   mozrunner::runner   INFO    Running command: \"/usr/bin/firefox\" \"-marionette\" \"-profile\" \"/tmp/rust_mozprofile.XaBBRVcr2xAW\"\n1517143792803   Marionette  INFO    Enabled via --marionette. At which point does webdriver.firefox.profile get set? I can't find such string anywhere in the docker-selenium codebase.. I'm having a similar problem with the latest node-firefox image. --shm-size 2g did not work for me.\n19:20:37.153 INFO - To downstream: {\"value\": {}}\n19:20:37.167 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@23b5eeda\n19:20:37.167 INFO - Handler thread for session 413e672e-ddc4-4ec0-a8ce-b049152248e5 (firefox): Executing POST on /session/413e672e-ddc4-4ec0-a8ce-b049152248e5/element (handler: ServicedSession)\n19:20:37.170 INFO - To upstream: {\"value\":\"/html/body/div[@class \\u003d \\u0027container-fluid\\u0027]//div[@class \\u003d \\u0027span7\\u0027]\",\"using\":\"xpath\"}\n19:20:37.180 INFO - To downstream: {\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: /html/body/div[@class = 'container-fluid']//div[@class = 'span7']\",\"stacktrace\":\"WebDriverError@chrome://marionette/content/error.js:235:5\\nNoSuchElementError@chrome://marionette/content/error.js:463:5\\nelement.find/</<@chrome://marionette/content/element.js:291:16\\n\"}}\n19:20:37.229 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@23b5eeda\n19:20:37.230 INFO - Handler thread for session 413e672e-ddc4-4ec0-a8ce-b049152248e5 (firefox): Executing DELETE on /session/413e672e-ddc4-4ec0-a8ce-b049152248e5 (handler: ServicedSession)\n[Child 113, Chrome_ChildThread] WARNING: pipe error (17): Connection reset by peer: file /builds/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353\n[GFX1-]: Receive IPC close with reason=AbnormalShutdown\n19:20:37.420 INFO - To downstream: {\"value\": {}}\n19:20:37.443 INFO - Removing session org.openqa.selenium.remote.server.ServicedSession@23b5eeda\n19:20:37.457 INFO - To downstream: {\"value\":{\"error\":\"session not created\",\"message\":\"Tried to run command without establishing a connection\",\"stacktrace\":\"stack backtrace:\\n   0:           0x4edb3c - backtrace::backtrace::trace::hc4bd56a2f176de7e\\n   1:           0x4edb72 - backtrace::capture::Backtrace::new::he3b2a15d39027c46\\n   2:           0x4409a1 - webdriver::error::WebDriverError::new::h81babdd86c977032\\n   3:           0x4280ea - <webdriver::server::Dispatcher<T, U>>::run::h2119c674d7b88193\\n   4:           0x4029b9 - std::sys_common::backtrace::__rust_begin_short_backtrace::h21d98a9ff86d4c25\\n   5:           0x40be65 - std::panicking::try::do_call::h5cff0c9b18cfdbba\\n   6:           0x5e6a6c - panic_unwind::__rust_maybe_catch_panic\\n                        at /checkout/src/libpanic_unwind/lib.rs:99\\n   7:           0x41eb22 - <F as alloc::boxed::FnBox<A>>::call_box::h413eb1d9d9f1c473\\n   8:           0x5df13b - alloc::boxed::{{impl}}::call_once<(),()>\\n                        at /checkout/src/liballoc/boxed.rs:692\\n                         - std::sys_common::thread::start_thread\\n                        at /checkout/src/libstd/sys_common/thread.rs:21\\n                         - std::sys::imp::thread::{{impl}}::new::thread_start\\n                        at /checkout/src/libstd/sys/unix/thread.rs:84\"}}. ",
    "Pierozi": "Hello @sourcerer-mike, i've just found this crazy fix https://github.com/SeleniumHQ/docker-selenium/issues/87#issuecomment-187580115, seems work for me.\nenvironment:\n    - DBUS_SESSION_BUS_ADDRESS=/dev/null. Right, and this is not semver... \nPatch are just useless in this case\n. ```\nGiven a version number MAJOR.MINOR.PATCH, increment the:\nMAJOR version when you make incompatible API changes,\nMINOR version when you add functionality in a backwards-compatible manner, and\nPATCH version when you make backwards-compatible bug fixes.\n```. You are not forced to follow the Selenium version, the thing is between two tags with the same PATCH version you iterate some changes.\nIf the -<Chemical Element in Alphabetical order> was only to identify new build on same github tag, to identify an immutable image state, that's fine.\nBut introduce an update of chrome driver (or any other change actually) is not.\n. ",
    "ScreamingDev": "Wow. There are really some flaws in those container. I'll add this line and see what happens. Thanks :). FYI\nThank you for the information!\nThe app that is using those container got used to the low availability so I need to rebuild things a bit / try if it runs smoothly now.\nI am sorry that it might take an additional week until I can give you a reply on this.. ",
    "rajivbhati12": "My goal is to successfully build chrome image using same command as you have:\nMy Dockerfile.txt\nbuild command docker build -t \"rajivbhati12/ubuntu_w_node_chrome:v1\" .\nI copy code from Dockefile, and made 2 changes\n1. It use ubuntu:latest as base image with Sudo and wget installed\n2. Create directory before copy chrome_launcher.sh RUN mkdir -p /opt/google/chrome/google-chrome \nObservation: build process run good until it reach mkdir \nActions: I remove mkdir but it result into fail:  /opt/google/chrome/google-chrome dir not exist \nSolution: I copy chrome_launcher.sh to /opt/google/chrome, make corresponding changes and then I was able to use it as chrome node.\n. ",
    "AkeemMcLennon": "I noticed that the Dockerfile is autogenerated from generate.sh, but I'm curious when the script actually gets run. Was its output supposed to be part of this commit? . ",
    "individual-it": "same problem with Devanagari script\n\n. ",
    "abhisheksreepal": "Thanks @diemol for the reply. I am out on vacation.  Will check back once i am in.\nOther Info:  For now, I have created my own image based on seleniumhq and modifed it to register using hub name instead.. @diemol, \nVerified my setup and i don't see anything which make node unregister. \nFor now, Please close the issue. Will try to investigate and update the same jira or create  new one\nThanks,\nAbhishek. ",
    "Menthalion": "Yes, this happened in 3.0.1-dysprosium as well. I should have noted that, sorry. We started exploring the possibilities of migrating our test platform from Selenium / PhantomJS to Selenium / Chrome in earnest only yesterday, and ran into this issue right away. Diagnosing the cause took a bit more time though.\nI cloned the project to see if I could fix this in a local build today, which is when I noted that the version had changed.\nAs an aside, the two java nodes in the comparison were started as two separate user processes. Perhaps I should try and see if that still works when started from the same script.. I'm getting an error trying to set chrome startup arguments through selenium capabilities on that version.\nIt's officially not supported by the chromedriver, so that might be it. The same error came up on the Internet with mismatched driver / chrome versions. \nSo I can't really test this up to scale with my current code. Seeing it doesn't seem to use screens, my guess would be it would run fine.\nCapabilities [{message=unknown error: cannot parse capability: chromeOptions\nfrom unknown error: must be a dictionary\n  (Driver info: chromedriver=2.27.440175 (9bc1d90b8bfa4dd181fbbf769a5eb5e575574320),platform=Linux 4.4.0-36-generic x86_64), platform=ANY}]\nSession ID: d4dc3fc77c9d256ee5b9b6a57a897669\nBuild info: version: '3.0.1', revision: '1969d75', time: '2016-10-18 09:49:13 -0700'\nSystem info: host: 'PC1610', ip: '10.0.111.31', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111'\nDriver info: driver.version: EventFiringWebDriver  sun.reflect.NativeConstructorAccessorImpl.newInstance0 (NativeConstructorAccessorImpl.java:-2)\n. @elgalu @ddavison We managed to get Chrome headless to run at the bare metal Ubuntu 16.04 machine (24 cores, 140GB) , but hit another limit scaling up to 600 browsers (6 nodes of 100 browsers on the same machine), failing our tests at  the ~235 browser mark.\nThe error message of the Selenium nodes' Java process was Unable to create new native Thread, followed by bash error bash fork: retry: Resource temporarily unavailable. \nThe amount of processes from ps -elfT at the time was around 12000 / 12K.\nWe managed to solve this by changing the following Linux setttings:\n\nCheck the sysctl file max setting with cat /proc/sys/fs/file-max and make sure it's at least 65535\nSince every Chrome (headless) process creates two temp files, the ulimit -nu soft and hard limits needed changing to unlimited by editing etc/security/limits.conf and adding\n```\nsoft     nproc          unlimited\nhard     nproc          unlimited   \nsoft     nofile         unlimited   \nhard     nofile         unlimited\n```\n\nChange the /etc/systemd/logind.conf [Login] section and change the setting UserTasksMax=262140 from UserTasksMax=12288\n\n\nChange the /etc/systemd/system.conf [Manager] section and change the settings DefaultTasksMax=262140 and DefaultLimitNOFILE=262140. DefaultLimitNOFILE bleeds through to ulimit -n, with a default of 1024 even if set to unlimited in limits.conf.\n\n\nAfter these changes we could start up and use 600 headless Chromes, which took up around 30K processes, as well as ~5GB in ~1200 Chromium temp files.\nThe same limits apply (even worse) to normal Chrome processes that are run through xvfb-run java -jar, since every Chrome process is wrapped in a xvfb process, near doubling the amount of processes compared to Chrome headless, as well as opening X Window temp files next to the Chrome temp files. So this might be an addition to the limits xvfb-run introduces screen limit wise.\nWith the same settings, we never got above ~450 xvfb wrapped normal Chrome instances over 6 nodes of 100 browser each, with Chromes failing to start at the ~35K process mark.. @elgalu Well, the 16GB machine I did the earlier tests on was my local machine, the 600 test was done on one of the two nodes of our main end-to-end test infrastructure, which have 24 cores / 140GB each.\nI'll see if we can give Zalenium a try there, I can't promise anything since we already spent a large part of the allotted project time on getting to this level. I'd need to bribe a scrum master here, or come up with some really convincing arguments why we'd need to investigate yet another avenue.. @elgalu does Zalenium already support Chrome headless ?. @elgalu  I don't think it will have much chance running succesfully then, since we're already running into resource problems on bare metal ?. Thanks @diemol , this use case is indeed different: We're using Selenium for a load test of our product, which is why we need so many browsers. I'll keep an eye out for Zalenium for the tests we launch from our build stack, it seems promising there.\n@elgalu Chrome headless did scale for a simple test of starting the browsers and pointing them to a url, but it seems to be too immature yet for testing our SPA (a lot of the Selenium functions we called failed) which is a shame.. @ddavison Although my initial findings of the scaling of vfdb-run nodes in docker vs vfdb-run on bare metal still stand, my conclusion why seems to have been wrong.\nAfter doing some more tests I found out that a xvfb-run inside a docker doesn't share resources with the host. However, an n amount of chromes on  a xvfb-run node inside the docker seems to consume twice as much xvfb resources as a similar xvfb-run node on bare metal. This can be checked with lsof -U | grep Xvfb \nSo the docker limit is not the amount of chromes in total over all nodes=128. but the amount of chromes inside a node is limited to 64, since every chrome ran in a docker seems to consume 4 local resources, vs 2 for every chrome on bare metal.\nI verified this by running 4 nodes of 50 browsers each, and starting 200 browsers, which worked like a charm. This might be increased by adding maxclients=512 to the xvfb-run --server-args. That would make each node scale to 128 chromes.\nAnother option to increase it would be to identify why more processes are spawned per chrome run on the docker.\nIn any of these cases (not only for chrome which consumes 2 resources in the docker but 4 in bare metal, but also for firefox where there are 3 resources needed on bare metal already)), a warning might be in order about these limits for the nodes.\nThis because the browsers will just silently stop spawning, there is no warning or timeout when this happens.. @ddavison @elgalu After getting bare metal scalability for Selenium / virtual framebuffer Chrome out of the way, I've been trying to get past the ~64 chrome instances per selenium node docker by changing local builds, but to no avail.\nI made sure none of the kernel / systemd limiting factors are in place, replaced Xvfb with an xpra / xdummy combination, but still can't get a handle on why the Xwin limit / consumption within the docker setup is twice as high as on two different bare metal systems. @madhavajay I've been able to get 100 chromes to run on a simple 8 core / 16 GB Dell desktop with these selenium dockers. I started 1 hub, and 2 nodes with 50 chromes each. Don't forget each node you start also has a java process running, so running one browser per dockernode like you might be able to do with PhantomJS isn't an option.\nBe sure to have no limiting factors on the host OS, since it can be resource intensive in handles and processes\necho \"DefaultTasksMax=infinity\" >> /etc/systemd/system.conf \\\necho \"DefaultLimitNOFILE=10000000\" >> /etc/systemd/system.conf \\\necho \"UserTasksMax=infinity\" >> /etc/systemd/logind.conf\n\necho \"* soft     nproc          unlimited\" >> /etc/security/limits.conf \\\necho \"* hard     nproc          unlimited\" >> /etc/security/limits.conf \\\necho \"* soft     nofile         unlimited\" >> /etc/security/limits.conf \\\necho \"* hard     nofile         unlimited\" >> /etc/security/limits.conf \\\necho \"root soft     nofile         unlimited\" >> /etc/security/limits.conf \\\necho \"root hard     nofile         unlimited\" >> /etc/security/limits.conf\n\nThen start the hub\ndocker run -d -p 4444:4444 --name selenium-hub -e GRID_MAX_SESSION=200 selenium/hub:3.0.1-germanium\nAnd two nodes\ndocker run -d --link selenium-hub:hub -v /dev/shm:/dev/shm -e NODE_MAX_SESSION=50 -e NODE_MAX_INSTANCES=50 selenium/node-chrome:3.0.1-germanium. ",
    "alkansa": "@madhavajay I've been able to get 100 chromes to run on a simple 8 core / 16 GB Dell desktop with these selenium dockers. I started 1 hub, and 2 nodes with 50 chromes each. Don't forget each node you start also has a java process running, so running one browser per dockernode like you might be able to do with PhantomJS isn't an option.\nBe sure to have no limiting factors on the host OS, since it can be resource intensive in handles and processes\necho \"DefaultTasksMax=infinity\" >> /etc/systemd/system.conf \\\necho \"DefaultLimitNOFILE=10000000\" >> /etc/systemd/system.conf \\\necho \"UserTasksMax=infinity\" >> /etc/systemd/logind.conf\necho \" soft     nproc          unlimited\" >> /etc/security/limits.conf \\\necho \" hard     nproc          unlimited\" >> /etc/security/limits.conf \\\necho \" soft     nofile         unlimited\" >> /etc/security/limits.conf \\\necho \" hard     nofile         unlimited\" >> /etc/security/limits.conf \\\necho \"root soft     nofile         unlimited\" >> /etc/security/limits.conf \\\necho \"root hard     nofile         unlimited\" >> /etc/security/limits.conf\nThen start the hub\ndocker run -d -p 4444:4444 --name selenium-hub -e GRID_MAX_SESSION=200 selenium/hub:3.0.1-germanium\nAnd two nodes\ndocker run -d --link selenium-hub:hub -v /dev/shm:/dev/shm -e NODE_MAX_SESSION=50 -e NODE_MAX_INSTANCES=50 selenium/node-chrome:3.0.1-germanium\"\n\nwhy do we need two node -chrome instances? . \n",
    "traffisco": "Hi,\nApologize if this is not may be the correct place to ask, but I came across this issue when searching for xvfb maxclients limit. \nI'm running my tests on 24 core 128GB machine.\nI can easily open hundreds of browsers(Firefox).\nWhat advantage doest Docker provide over just opening those browsers on the machine?\nThanks\nVadim. ",
    "JarominP": "Hi,\nI'm selecting components for the new server for automated tests. \nIn this issue there were very important informations for me about hardwares and number of browsers running in parallel.\nI want to prepare for the purchase of the new server, so every examples of how many browsers and on which hardware (number of cores/threads, quantity of ram) are welcomed and I will be very grateful for it.. ",
    "marten-cz": "I'll have a look and update the PR.. Smoke test added. I'll have a look at the failing test on travis, it's working on my machine. Will check on some vanilla instalation.. Fixed.\nPlease have a look at the last commit. Added version what should be tested as parameter to test.sh.. Conflicts resolved. I'll push fix tonight.. @ddavison Can you please try to build phantomjs image and pushed it docker hub? This issue should be fixed.. ",
    "Xerostrike": "Thanks and info and i appologize i just got started with github and dont know much yet. ",
    "hnryjms": "What if we change the ENV line in the Dockerfile for Chrome to instead write the variable to Ubuntu's /etc/environment path? I haven't tried this in the Selenium docker machine to confirm it fixes the issue, but when running a simple ubuntu:16.04 box (the origin of Selenium base), this diff adds environment variable changes when running sudo -E -i -u [username] env  as well as regular env\n```diff\nUSER seluser\nFollowing line fixes\nhttps://github.com/SeleniumHQ/docker-selenium/issues/87\n\nENV DBUS_SESSION_BUS_ADDRESS=/dev/null\nRUN echo \"DBUS_SESSION_BUS_ADDRESS=/dev/null\" >> /etc/environment\n``. I'm also interested in how quickly this will get deployed to Docker Hub, as it might be related to #382 and #383 -- I've been seeing similar weirdness when the Chrome browser is running one of these newer versions.. Runningmake generate_all` also included Firefox, so.....why not, ya know?. \n",
    "romsper": "Hi @ddavison \nThe same error again... . @elgalu I tried delete the capability in 3.0.1-fermium, but it didn't help me. \n@ddavison I deleted the capability in 3.0.1-germanium and it helped me! \nThanks all! . ",
    "wheleph": "The new version of node-chrome image contains Google Chrome 56 which works well. The issue seem to be related not to the browser itself but rather to the installation process.\nIf I take the image and remove Google Chrome via apt purge and reinstall it via apt install I still get the following:\nseluser@cf37c71c54b0:/$google-chrome\nFailed to move to new namespace: PID namespaces supported, Network namespace supported, but failed: errno = Operation not permitted\nIllegal instruction (core dumped)\nseluser@cf37c71c54b0:/$ google-chrome --version\nGoogle Chrome 56.0.2924.87\nBut there's no issues with the \"official\" image so this one can be closed. But if you have any idea why I get the error, please let me know.. The original issue I had with RHEL-like systems was due to missing fonts. Here's the solution:\nyum install liberation-mono-fonts liberation-narrow-fonts liberation-sans-fonts liberation-serif-fonts\nSee http://stackoverflow.com/questions/41641546/chrome-fails-with-illegal-instruction-in-minimal-centos7xvfb and https://www.centos.org/forums/viewtopic.php?f=48&t=60908&sid=6e5b5c743f897b9b300fe69bbae36337&start=10#p257122 for more details. Fixes #390 . ",
    "asanchezgiraldo": "updated and worked\nCOPY generate_config /opt/selenium/generate_config\nCOPY entry_point.sh /opt/bin/entry_point.sh\nRUN chmod a+x /opt/bin/entry_point.sh && chmod a+x /opt/selenium/generate_config\nRUN /opt/selenium/generate_config > /opt/selenium/config.json\nRUN chown -R seluser /opt/selenium\n. ",
    "brandomr": "@sourcerer-mike did you ever resolve this? I'm getting the same thing.. Any update on this? I'm experiencing this issue with the latest docker image and am not sure if there is a solution based on @jackTheRipper 's testing.. @jackTheRipper great I'll give it a shot. Thanks!. @jackTheRipper I built from your PR but still get crashes with standalone-firefox. Is it just fixed for node-firefox?. Ok, I'll give that a shot. Thanks!. @jackTheRipper still getting weird timeouts/tab crashes even using this PR. @jackTheRipper no, I'm just running grid/node-firefox against some sites that don't require auth. I'm seeing:\n```\n[Parent 160] WARNING: pipe error (56): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\n[Parent 160] WARNING: pipe error (49): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\n[Parent 160] WARNING: pipe error (46): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\n!!! [Parent][MessageChannel] Error: (msgtype=0x2C0085,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv\n```\nand then:\n02:06:31.889 INFO - Session f47c7085-5135-4792-9714-874cf9147084 deleted due to client timeout\n1491357991893   Marionette  INFO    New connections will no longer be accepted. @jackTheRipper no I was using the default (FF 52+). I'll downgrade and try to get you full logs. Thanks for the help with this stuff. ",
    "victorflavio": "+1. ",
    "herrold": "Completely reproduceable -- browsing through an SSL Forwarding, even to localhost, expresses teh bug:  This appeared in 52, with the E10 co-process addition\n[Parent 3760] WARNING: pipe error (88): Connection reset by peer: file /builddir/build/BUILD/firefox-52.2.0/firefox-52.2.0esr/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\n!!! [Parent][MessageChannel] Error: (msgtype=0x2C0085,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv\n\nworkaround is to disable remote autostart:\nin:\n         about:config \nset (historical mode):\nbrowser.tabs.remote.autostart = false\nbrowser.tabs.remote.autostart.2 = false \nhttps://support.ant.com/hc/en-us/articles/115000513446-Firefox-51-Multi-Process\nThe latter one was silently 'enabled' and causes lockups, and when disabled the 'noise' quoted\n\nPrivacy Badger stable from the EFF site can also cause lockups creating this noise\n. ",
    "daald": "Selenium is not the problem. I get this error in a pure firefox session in docker:\n\n[Parent 1] WARNING: pipe error (61): Connection reset by peer: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353\n[Parent 1] WARNING: pipe error (90): Connection reset by peer: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353\n[Parent 1] WARNING: pipe error: Broken pipe: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 709\n[Parent 1] WARNING: pipe error: Broken pipe: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 709\n[Parent 1] WARNING: pipe error: Broken pipe: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 709\n[Parent 1] WARNING: pipe error: Broken pipe: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 709\n[Parent 1] WARNING: pipe error: Broken pipe: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 709\n[Parent 1] WARNING: pipe error: Broken pipe: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 709\n[Parent 1] WARNING: pipe error: Broken pipe: file /build/firefox-qZqDB8/firefox-55.0.2+build1/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 709\n\nUsing the following script for an instant temporary firefox session in Linux:\n```\n!/bin/sh\nset -e -x\ntmpfile=/tmp/$(basename \"$0\").$$\nif [ \"$1\" = \"-p\" ]; then\n  profiledir=\"$(readlink -f \"$2\")/.mozilla/\"\n  test -d \"$profiledir\"\n  chmod -R o+rwX \"$profiledir\" || sudo chmod -R o+rwX \"$profiledir\"\n  EXTRAOPTS=\"$EXTRAOPTS -v $profiledir:/home/browser-user/.mozilla/\"\n  shift\n  shift\nfi\nif [ \"$1\" = \"-d\" ]; then\n  downloaddir=\"$(readlink -f \"$2\")/\"\n  test -d \"$downloaddir\"\n  chmod o+rwX \"$downloaddir\"\n  EXTRAOPTS=\"$EXTRAOPTS -v $downloaddir:/home/browser-user/Downloads/\"\n  shift\n  shift\nfi\ntest -z \"$1\"\ndocker build - <<'.e' | tee \"$tmpfile\"\nchoose one of those FROMs:\nFROM ubuntu:16.04\nFROM ubuntu:16.10\nFROM ubuntu:17.04\nRUN apt-get update \\\n && apt-get install -y \\\n    xauth \\\n    firefox \\\n    wget        \\\n && apt-get clean\nReplace 1000 with your user / group id\nRUN export uid=1000 gid=1000 \\\n && mkdir -p /home/browser-user \\\n && echo \"browser-user:x:${uid}:${gid}:browser-user,,,:/home/browser-user:/bin/bash\" >> /etc/passwd \\\n && echo \"browser-user:x:${uid}:\" >> /etc/group \\\n && chown ${uid}:${gid} -R /home/browser-user\nENV LIBGL_ALWAYS_SOFTWARE 1\nENV LIBGL_DEBUG verbose\nENV QT_X11_NO_MITSHM 1\nUSER browser-user\nENV HOME /home/browser-user\nCMD [ \"/usr/bin/firefox\", \"--no-remote\" ]\n.e\nlastline=\"$(tail -n1 \"$tmpfile\")\"\nimageid=\"${lastline#Successfully built }\"\n[ \"$lastline\" != \"$imageid\" ]\nxhost +SI:localuser:#1000\ndocker run --rm -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v $XAUTHORITY:/tmp/.Xauthority $EXTRAOPTS -e XAUTHORITY=/tmp/.Xauthority \"$imageid\"\n``. @pascalheraud For me,--shm-size 2gsolved the problem (btw--shm-size=` without argument, which defaults to 64m, is not enough for firefox). The question is now: is it also solved for @ScreamingDev?. @anto-wahanda It's probably better not to mount /dev/shm. Did you try without?. AFAIK, shm_size=2g sets up shm in the separate namespace of the container, with everything necessary, including the mount. so it doesn't share with the host (in fact, I saw some interaction which shouldn't happen, when starting firefox without --no-remote).\nIf you bind-mount /dev/shm at the same time, you overwrite this behaviour. in best case, you bypass the shm_size=2g completely, in worst case, you have an irritating mixture for the application, where syscalls still use the private namespace but /dev/shm accesses the host's namespace. Personally, I never mounted /dev/shm and since I set shm_size=2g, it works quite stable.\nextract from docker run --help:\n  --shm-size string                       Size of /dev/shm, default value is 64MB. @taroquu I think you should focus on shm_size, and it seems it is on the wrong location, as \"build\" is not the step which causes problems. unfortunately, I can't tell you where and if there is a runtime parameter in this config format. @taroquu no, /dev/shm bypasses shm_size, see https://github.com/SeleniumHQ/docker-selenium/issues/388#issuecomment-370609607\n\nWhat I mean:\n- build stage: you have shm_size, but it's the wrong stage\n- run stage: this is where your error happens, and there's no shm_size option in your file\ndisclaimer: I don't know docker swarm. ",
    "daniyel": "Hi.\nI am getting the same error. I am running selenium/node-firefox:3.7.1 with FF 57 version inside. I have hub and one node on AWS with ECS. When I try to run my tests with webdriverio, I see success request for session but as soon as the FF profile is set and the node is ready to run the tests, i get error:\n```\n1511864307846   Marionette  DEBUG   Received DOM event \"beforeunload\" for \"about:blank\"\n1511864308220   Marionette  DEBUG   Received DOM event \"pagehide\" for \"about:blank\"\n1511864308220   Marionette  DEBUG   Received DOM event \"unload\" for \"about:blank\"\n[Parent 635, Gecko_IOThread] WARNING: pipe error (28): Connection reset by peer: file /builds/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353\n!!! [Parent][MessageChannel] Error: (msgtype=0x420017,name=PHttpChannel::Msg_DeleteSelf) Channel error: cannot send/recv\n!!! [Parent][MessageChannel] Error: (msgtype=0x420017,name=PHttpChannel::Msg_DeleteSelf) Channel error: cannot send/recv\n!!! [Parent][MessageChannel] Error: (msgtype=0x420017,name=PHttpChannel::Msg_DeleteSelf) Channel error: cannot send/recv\n!!! [Parent][MessageChannel] Error: (msgtype=0x420017,name=PHttpChannel::Msg_DeleteSelf) Channel error: cannot send/recv\n!!! [Parent][MessageChannel] Error: (msgtype=0x150083,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv\nA content process crashed and MOZ_CRASHREPORTER_SHUTDOWN is set, shutting down\n1511864308946   addons.xpi  DEBUG   Calling bootstrap method shutdown on webcompat@mozilla.org version 1.1\n1511864308946   addons.xpi  DEBUG   Calling bootstrap method shutdown on shield-recipe-client@mozilla.org version 76.1\n1511864308947   addons.xpi  DEBUG   Calling bootstrap method shutdown on screenshots@mozilla.org version 19.2.0\n1511864308950   addons.xpi  DEBUG   Calling bootstrap method shutdown on onboarding@mozilla.org version 1.0\n1511864308951   addons.xpi  DEBUG   Calling bootstrap method shutdown on formautofill@mozilla.org version 1.0\n1511864308951   addons.xpi  DEBUG   Calling bootstrap method shutdown on followonsearch@mozilla.com version 0.9.6\n1511864308951   addons.xpi  DEBUG   Calling bootstrap method shutdown on firefox@getpocket.com version 1.0.5\n1511864308951   addons.xpi  DEBUG   Calling bootstrap method shutdown on e10srollout@mozilla.org version 3.05\n1511864308951   addons.xpi  DEBUG   Calling bootstrap method shutdown on aushelper@mozilla.org version 2.0\n1511864308952   addons.xpi  DEBUG   Calling bootstrap method shutdown on activity-stream@mozilla.org version 2017.11.07.1100-7f4e3634\n10:18:29.021 INFO - To downstream:\n{\n    \"value\": {}\n}\n1511864309038   addons.manager  DEBUG   shutdown\n1511864309039   addons.manager  DEBUG   Calling shutdown blocker for XPIProvider\n1511864309039   addons.xpi  DEBUG   shutdown\n1511864309039   addons.xpi-utils    DEBUG   shutdown\n1511864309039   addons.manager  DEBUG   Calling shutdown blocker for LightweightThemeManager\n1511864309039   addons.manager  DEBUG   Calling shutdown blocker for GMPProvider\n1511864309040   addons.manager  DEBUG   Calling shutdown blocker for PluginProvider\n1511864309040   addons.manager  DEBUG   Calling shutdown blocker for PreviousExperimentProvider\n1511864309041   DeferredSave.webext.sc.lz4  DEBUG   Flush called while data is dirty\n1511864309044   DeferredSave.webext.sc.lz4  DEBUG   Starting write\n1511864309046   addons.manager  DEBUG   Async provider shutdown done\n1511864309048   DeferredSave.webext.sc.lz4  DEBUG   Write succeeded\n*** UTM:SVC TimerManager:registerTimer called after profile-before-change notification. Ignoring timer registration for id: telemetry_modules_ping\n10:18:29.112 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@abab4c1\n```\nI've tried to set security.sandbox.content.syscall_whitelist to 16, but that did not help.\nSomeone having an idea what it could be?\nBest regards.. ",
    "pascalheraud": "It may be related to the shm settings explained there : https://github.com/SeleniumHQ/docker-selenium\ndocker run : \ndocker run -d -p 4444:4444 --shm-size 2g\nor docker compose : \nfirefox1:\n  image: selenium/node-firefox-debug:3.8.1\n  shm_size: 2g\n. great thanks !. ",
    "anto-ac": "I'm still having this issue, even with shm_size: 2g and \nvolumes:\n      - /dev/shm:/dev/shm\nin my docker compose.\nselenium-firefox_1  | 1520249169195 Marionette  INFO    Listening on port 42819\nselenium-firefox_1  | 11:26:09.755 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C\nselenium-firefox_1  | 11:26:09.760 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 2d0bf949-c0a4-47cc-b3e2-3cb76b7c71f1 (org.openqa.selenium.firefox.GeckoDriverService)\nselenium-firefox_1  | [Child 870, Chrome_ChildThread] WARNING: pipe error (15): Connection reset by peer: file /builds/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353\nselenium-firefox_1  | [Child 870, Chrome_ChildThread] WARNING: pipe error (3): Connection reset by peer: file /builds/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 353\nselenium-firefox_1  | 11:26:17.893 INFO [ActiveSessions$1.onStop] - Removing session 2d0bf949-c0a4-47cc-b3e2-3cb76b7c71f1 (org.openqa.selenium.firefox.GeckoDriverService)\nselenium-hub_1      | 11:26:17.897 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1b28719f-b80a-43f0-95b4-8e51654daa07, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=1, moz:firefoxOptions={log={level=info}}, platformName=LINUX, version=58.0.2, applicationName=, platform=LINUX}\nselenium-hub_1      | 11:26:17.906 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: firefox, handlesAlerts: true, javascriptEnabled: true, locationContextEnabled: true, loggingPrefs: org.openqa.selenium.logging..., maxInstances: 4, requestOrigins: {name: webdriverio, url: http://webdriver.io, version: 4.11.0}, rotatable: true, specs: [./src/test/specs/**/*.js]}\nselenium-firefox_1  | 11:26:18.140 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: firefox, handlesAlerts: true, javascriptEnabled: true, locationContextEnabled: true, loggingPrefs: org.openqa.selenium.logging..., maxInstances: 4, requestOrigins: {name: webdriverio, url: http://webdriver.io, version: 4.11.0}, rotatable: true, specs: [./src/test/specs/**/*.js]}\nselenium-firefox_1  | 11:26:18.144 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService)\nselenium-firefox_1  | 1520249178181 geckodriver INFO    geckodriver 0.19.1\nselenium-firefox_1  | 1520249178195 geckodriver INFO    Listening on 127.0.0.1:26419\nrouter_1            | 172.27.0.4 - - [05/Mar/2018:11:26:18 +0000] \"GET /images/static/boomerang-tracker.png?nt_red_cnt=0&nt_nav_type=1&nt_nav_st=1520249175102&nt_red_st=0&nt_red_end=0&nt_fet_st=1520249175117&nt_dns_st=1520249175117&nt_dns_end=1520249175117&nt_con_st=1520249175117&nt_con_end=1520249175117&nt_req_st=1520249175118&nt_res_st=1520249175363&nt_res_end=1520249175384&nt_domloading=1520249175412&nt_domint=1520249176059&nt_domcontloaded_st=1520249176059&nt_domcontloaded_end=1520249177874&nt_domcomp=1520249178239&nt_load_st=1520249178239&nt_load_end=1520249178239&nt_unload_st=1520249175389&nt_unload_end=1520249175389&nt_spdy=0&nt_cinf=http%2F1.1&nt_first_paint=1520249175.892&rt.start=navigation&rt.tstart=1520249175102&rt.bstart=1520249175880&rt.end=1520249178252&t_resp=261&t_page=2889&t_done=3150&t_other=t_domloaded%7C2772&r=&u=http%3A%2F%2Frouter%3A4002%2Fplace%2Fclapham-barbers%2F%3FshouldShowHighlightedServices%3Dtrue&v=0.9&vis.st=visible&ua.plt=Linux%20x86_64&ua.vnd=Google%20Inc.&platform=DESKTOP&version=1.226.0&ruid=b8650639-27d2-4373-9610-b5bde655687d&hash= HTTP/1.1\" 404 200 \"http://router:4002/place/clapham-barbers/?shouldShowHighlightedServices=true\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"\nselenium-firefox_1  | 1520249178537 mozrunner::runner   INFO    Running command: \"/usr/bin/firefox\" \"-marionette\" \"-profile\" \"/tmp/rust_mozprofile.iuUT7TAnBP6s\"\nselenium-firefox_1  | 1520249179776 Marionette  INFO    Enabled via --marionette\nselenium-hub_1      | 11:26:21.502 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: firefox, handlesAlerts: true, javascriptEnabled: true, locationContextEnabled: true, loggingPrefs: org.openqa.selenium.logging..., maxInstances: 4, requestOrigins: {name: webdriverio, url: http://webdriver.io, version: 4.11.0}, rotatable: true, specs: [./src/test/specs/**/*.js]}\nselenium-firefox_1  | 1520249184983 Marionette  INFO    Listening on port 41985\nselenium-firefox_1  | 11:26:25.340 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C\nselenium-firefox_1  | 11:26:25.344 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session ef5855a7-d0ca-4e1e-ac84-d4116104a164 (org.openqa.selenium.firefox.GeckoDriverService)\nAfter this, no more tests work on Firefox.\nIt is happening with 3.10.0-argon but it was also happening with 3.9.1. Originally I wasn\u2019t mounting it, but then I added it as per documentation as I was getting crashes very often. What is the recommendation? Mount? Not mount? Set shm_size?. Interesting this has come up now, just when I was discussing something related to this with @diemol.\nHe has recommended one slot per node, which has worked around an issue I was experiencing with the most recent versions. However, I would like to understand what the background behind the recommendation is, because it seems a little bit of an overkill perhaps.. Hi @diemol,\nI guess I could put something together. Something like\n\na few specs\na wdio config\na docker compose file \n\nOr did you have something else in mind? . I was wondering, though, if you had any ideas already. There were some issues with this reported in the past, some of which where addressed. For example: https://github.com/SeleniumHQ/docker-selenium/issues/184. Also, just to clarify, I have never seen it when running the tests on a local machine (admittedly different version of docker, different host os), but only when the tests run in Jenkins.. @diemol I have created a repo here: https://github.com/anto-ac/node-firefox-cannot-open-display. Issue is not \u201cawaiting answer\u201d anymore I don\u2019t think.. Unfortunately it happens very sporadically. We\u2019ve tried to reproduce it consistently, but failed to do so. I thought that perhaps it would happen more often if more than one job was running on the same Jenkins slave at the same time, but failed to find any correlation.\nOur original code adds a unique prefix to all containers when created (in order to avoid different jobs using the same containers). I\u2019ve removed that bit from the example for convenience.. @praveen4463 I have always had [SEVERE]: bind() returned an error, errno=99 in my logs, but the session end up being created ok and my tests always run successfully afterwards. It's interesting that's not the case for you. What do the logs say after the last line you've pasted above?\n@diemol I guess that #772 may fix also the SEVERE error the bind() returned an error, errno=99 chrome problem.\n. @diemol I can try with a more recent version, like 4.9. Unless there is any other distribution that you think I should try?\nWould it also be worth upgrading the version of ubuntu used for the selenium docker images?. I've just verified that this also happens on Debian Stretch (4.9.0-3-amd64) as the host OS.\nI haven't had a chance to try on Ubuntu yet.. Yes, it\u2019s possible. I\u2019ve reproduced it without Jenkins and directly on a machine on both Jessie and Stretch versions of Debian.. Simply by running the run-tests.sh script on two different shells. . @whimboo Which docker image? \nI\u2019ve had promising results using a host with Ubuntu 18.04 rather than Debian.. An upgrade of the host or of the docker images?. I haven't seen this happening yet with a host running ubuntu 18.04.. It was Debian, not CentOS :-)\nI think we can close it for now. Should it happen again or should someone else be impacted by it, it can still be reopened.. We\u2019re doing that already. It was introduced my previous PR. -a is equivalent to \u2014auto-servernum.\nWe thought there could be a race condition with some conflict in the usage of the same port on different containers.\nOverall we\u2019re unsure as to why this is happening. If someone had any idea, perhaps some deeper knowledge about how xvfb works, it would be really appreciated.. As you posted above, the -a options works this way:\n-a --auto-servernum        \ntry to get a free server number, starting at --server-num\nSo they can be used together. You ask xvfb-run to pick an available server number using -a and you specify from which number it should start from using \u2014server-num. If you don\u2019t specify it, it would start from 99.\nThe idea behind the change is that by starting to look for a server number from a random number, the likelihood of a race condition would be much lower.\nSadly though, this change does not fix the issue itself. So while the change is harmless, it\u2019s probably unnecessary.\nIt is really annoying because it makes our builds flakey.. Sorry, I don't know how I missed this!. ",
    "leafney": "Thanks,--shm-size=2g solved my issue.\ndocker run --shm-size=2g -it ...\nthis also solved my problem for selenium + chrome.. ",
    "taroquu": "I've experianced this problem too, but only when using a firefox profile. If running without a profile in my firefox options, it works just fine. Here is my compose json:\nyaml\nversion: '3.6'\nservices:\n  selenium-hub:\n    image: selenium/hub:latest\n    ports:\n      - \"4444:4444\"\n    environment:\n      - GRID_NEW_SESSION_WAIT_TIMEOUT=600\n      - GRID_CLEAN_UP_CYCLE=5000\n      - GRID_BROWSER_TIMEOUT=300\n      - GRID_TIMEOUT=300\n    deploy:\n      placement:\n        constraints:\n          - node.role == manager\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 512M\n    networks:\n      selenium_net:\n  selenium-firefox:\n    image: selenium/node-firefox:latest\n    entrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME\" /opt/bin/entry_point.sh'\n    build:\n      context: .\n      shm_size: '2gb'\n    environment:\n      - HUB_HOST=selenium-hub\n      - HUB_PORT=4444\n    ports:\n      - 5555:5555\n    deploy:\n      replicas: 10\n      resources:\n        limits:\n          cpus: '0.25'\n          memory: 768M\n        reservations:\n          cpus: '0.25'\n          memory: 768M\n    networks:\n      selenium_net:\n    volumes:\n     - \"/tmp/firefox_profiles:/tmp/firefox_profiles\"\nnetworks:\n  selenium_net:\n    driver: overlay\nThis is running under docker swarm.\nThe profile was created on the command line using firefox -CreateProfile Selenium it was created on the same OS that will be used by the docker containers running firefox. The profile itself is empty, but I'm assuming that isn't a problem. volumes:\n      - /dev/shm:/dev/shm\n@daald I've tried which didn't help either. . ",
    "LusciousPear": "Thanks -- doing that causes a different error: \nException in thread \"async-thread-macro-3\" java.lang.NoClassDefFoundError: Could not initialize class sun.awt.X11GraphicsEnvironment\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:264)\n    at java.awt.GraphicsEnvironment.createGE(GraphicsEnvironment.java:103)\n    at java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:82)\n    at core.Driver.systemScreenshot(Driver.java:533)\n    at core.Driver.systemScreenshot(Driver.java:517)\n    at core.CrawlService.start(CrawlService.java:86)\n    at core.CrawlService.start(CrawlService.java:44)\n    at crawly.worker$start_async_consumers$fn__7312.invoke(worker.clj:28)\n    at clojure.core.async$thread_call$fn__5623.invoke(async.clj:439)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nException in thread \"async-thread-macro-1\" java.awt.AWTError: Can't connect to X11 window server using ':109' as the value of the DISPLAY variable.\n    at sun.awt.X11GraphicsEnvironment.initDisplay(Native Method)\n    at sun.awt.X11GraphicsEnvironment.access$200(X11GraphicsEnvironment.java:65)\n    at sun.awt.X11GraphicsEnvironment$1.run(X11GraphicsEnvironment.java:115)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at sun.awt.X11GraphicsEnvironment.<clinit>(X11GraphicsEnvironment.java:74)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:264)\n    at java.awt.GraphicsEnvironment.createGE(GraphicsEnvironment.java:103)\n    at java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:82)\n    at core.Driver.systemScreenshot(Driver.java:533)\n    at core.Driver.systemScreenshot(Driver.java:517)\n    at core.CrawlService.start(CrawlService.java:86)\n    at core.CrawlService.start(CrawlService.java:44)\n    at crawly.worker$start_async_consumers$fn__7312.invoke(worker.clj:28)\n    at clojure.core.async$thread_call$fn__5623.invoke(async.clj:439)\n    at clojure.lang.AFn.run(AFn.java:22)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745). Update: a suggested fix was to set env var DISPLAY=:0, that did not help.. I figured this out -- xvfb does not support screen depths > 24 bit.. Thanks -- actually, I know how to disable the sandboxing. But we don't want to, because we need the security and sandboxing abilities. . ",
    "tate-e": "This happens around 10-20% of the time for me when run on the server and is bogging down my regressions runs. probably have to look for a different tool if this doesn't get fixed sometime soon.. I have fixed the problem on my end thanks to this thread: https://github.com/SeleniumHQ/docker-selenium/issues/87\nI changed my docker command from:\ndocker run -d -p 4444:4444 selenium/standalone-chrome:3.2.0-actinium\nto:\ndocker run -d -p 4444:4444 -e DBUS_SESSION_BUS_ADDRESS='/dev/null' selenium/standalone-chrome:3.2.0-actinium\nEven though they say it should have been fixed by 3.1 it does not appear to be even though we are now in 3.2. ",
    "thyagab": "@diemol Thank you. Will try it out.. @diemol we tried with 3.3.1 and we still see this issue when we run the tests in parallel.\n. @diemol We have our rancher setup with docker compose.Here is our docker compose\nyaml\nversion: '2'\nservices:\n  chrome-dev:\n    image: selenium/node-chrome:3.3.1-cesium\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-dev\n      HUB_PORT_4444_TCP_PORT: '4444'\n      JAVA_OPTS: -Xmx4G\n      LOGSPOUT: ignore\n      shm_size: 512MB\n      DBUS_SESSION_BUS_ADDRESS: /dev/null\n    volumes:\n    - /dev/shm:/dev/shm\n    labels:\n      io.rancher.container.start_once: 'true'\n  chrome-qa:\n    privileged: true\n    image: selenium/node-chrome-debug:3.3.1-cesium\n    environment:\n      HUB_PORT_4444_TCP_ADDR: selenium-qa\n      HUB_PORT_4444_TCP_PORT: '4444'\n    stdin_open: true\n    volumes:\n    - /dev/shm:/dev/shm\n    tty: true\n    links:\n    - selenium-qa:selenium-qa\n    - selenium-qa:selenium-qa\n    ports:\n    - XXXX:5900/tcp\n    labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.start_once: 'true'\n  selenium-qa:\n    image: selenium/hub:3.3.1-cesium\n    environment:\n      GRID_BROWSER_TIMEOUT: '180000'\n      GRID_MAX_SESSION: '6'\n      GRID_TIMEOUT: '180000'\n    volumes:\n    - /dev/shm:/dev/shm\n    labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.start_once: 'true'\n  selenium-dev:\n    image: selenium/hub:3.3.1-cesium\n    environment:\n      GRID_BROWSER_TIMEOUT: '180000'\n      GRID_MAX_SESSION: '10'\n      LOGSPOUT: ignore\n      GRID_TIMEOUT: '180000'\n    labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.start_once: 'true'. @diemol I will increase the shm_size and try it out. You can ignore qa grid. chrome instances are mapped with \nenvironment:\n      HUB_PORT_4444_TCP_ADDR: selenium-dev\n      HUB_PORT_4444_TCP_PORT: '4444'. ",
    "jonaseicher": "Version 3.4.0-chromium has the DBUS_SESSION issue fixed, but I had to mount /dev/shm volume to fix the page-crashes. \nAlso works on OpenShift: https://docs.openshift.org/latest/dev_guide/shared_memory.html. ",
    "rdbaron": "I am seeing the same behaviour.  Furthermore, as of Chrome v60, driver.manage().window().maximize() throws a Webdriver error.. ",
    "cvakiitho": "I believe it is connected to this underlying geckodriver issue: \nhttps://github.com/mozilla/geckodriver/issues/285\n. @pierre-jenchen Do you know when releases are made? I read somewhere that FF 52 should possibly fix this issue.. Yeah I know, but when will be new docker selenium release.\n. Finally got some time to test it out, it didn't help in our case.\nFor me, it is probably execute script that crashes firefox, no idea why there are some chromium files in log: \nfirefox_5  | 11:29:19.578 INFO - Executing: [execute script: return something, []])\nfirefox_5  | 11:29:19.864 INFO - Done: [execute script: return something, []]\nfirefox_5  | 11:29:19.916 INFO - Executing: [find elements: By.xpath: //div[@id='canvas']//div[contains(@id,'busyIndicator')]])\nfirefox_5  | 11:29:19.950 INFO - Done: [find elements: By.xpath: //div[@id='canvas']//div[contains(@id,'busyIndicator')]]\nfirefox_5  | 11:29:19.999 INFO - Executing: [is displayed: 4 [[FirefoxDriver: firefox on ANY (9e6e41e7-8001-4d3e-9dac-fc56379556f1)] -> xpath: //div[@id='canvas']//div[contains(@id,'busyIndicator')]]])\nfirefox_5  | 11:29:20.096 INFO - Done: [is displayed: 4 [[FirefoxDriver: firefox on ANY (9e6e41e7-8001-4d3e-9dac-fc56379556f1)] -> xpath: //div[@id='canvas']//div[contains(@id,'busyIndicator')]]]\nfirefox_5  | 11:29:20.352 INFO - Executing: [find elements: By.xpath: //div[@id='canvas']//div[contains(@id,'busyIndicator')]])\nfirefox_5  | [Parent 75] WARNING: pipe error (54): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\nfirefox_5  | [Parent 75] WARNING: pipe error: Broken pipe: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 685\nfirefox_5  | [Parent 75] WARNING: pipe error: Broken pipe: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 685\nfirefox_5  | [Parent 75] WARNING: pipe error (48): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\nfirefox_5  | [Parent 75] WARNING: pipe error (45): Connection reset by peer: file /builds/slave/m-rel-l64-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 322\nfirefox_5  |\nfirefox_5  | ###!!! [Parent][MessageChannel] Error: (msgtype=0x2C0085,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv\nfirefox_5  |\nfirefox_5  |\nfirefox_5  | ###!!! [Parent][MessageChannel] Error: (msgtype=0x400003,name=PCompositorBridge::Msg_DidComposite) Channel error: cannot send/recv. @jackTheRipper 52 I used your image.. @jackTheRipper \nOuch, my bad, we have basic http auth in our app as well. \nI missed it because it is quite huge test suite, with big setup/teardown. \n. @jackTheRipper I personally have the issue even on your image. \nI thought it has something to do with our network ( corp proxy, dns,...), but https://github.com/elgalu/docker-selenium image is working fine.. Taking back my previous statement, I was just lucky with some tests. \nHowever, i built 54 beta firefox in this image : https://hub.docker.com/r/cvakiitho/docker-selenium/\nAnd so far ( 50+ tests) it works without issue, so feel free to use it.. As suggested later in geckodriver bug shm-size 2g is better, so I created PR:\nhttps://github.com/SeleniumHQ/docker-selenium/pull/485\n. @amirplanet Ouch, I deleted it today during a cleanup -  because after the merge of a PR I made I just used normal selenium/node-firefox:3.4.0 .\ndocker run -d -p 4444:4444 --shm-size 2g selenium/standalone-firefox:3.4.0\nor in docker-compose\nfirefox:\n  image: selenium/node-firefox:3.4.0\n  links: [hub]\n  shm_size: 2g. @amirplanet cvakiitho/firefox:3.5.3 is actually FROM selenium/node-base:3.4.0-chromium \nsee why I need to do a cleanup? :) , but I'll keep it if you want it :) \ncvakiitho/firefox:latest will be nightly channel after docker hub starts building my queue : \nhttps://github.com/SeleniumHQ/docker-selenium/pull/470\n. Hi @smccarthy , I'd love to use this image ( due to https://github.com/mozilla/geckodriver/issues/858 ), but I'm getting following error when building it: \n```Starting build of index.docker.io/cvakiitho/firefox:latest...\nStep 1/20 : FROM selenium/node-base:\ninvalid reference format\n```\nWere you able to build this image on docker hub?\nEDIT: Ok it seems that DockerFile was generated badly for me.\nIf anyone wants to give this a try: https://hub.docker.com/r/cvakiitho/firefox/\n(ugh, node-base now has config generate in /opt/bin instead of /opt/selenium, fix is making its way into my image, but docker hub is now not building anything...)\n. ",
    "cladera": "I think we may be encountering the same error. \nWe run CI builds using a custom docker image which starts from StandaloneFirefox node.\nOur firefox tests builds fail randomly because firefox crashes and (in our case) karma disconnects from the browser. \nWe are facing this issue since Firefox v51.0.. ",
    "pierre-jenchen": "As pointed out before it seems to be an issue with the geckodriver. I could solve it by using an older firefox image.. Last week according to https://wiki.mozilla.org/RapidRelease/Calendar .. I have no clue. Sorry.. ",
    "jackTheRipper": "@pierre-jenchen @cvakiitho @oliyavan \nIt seems that the issue is related to some missing dependencies for the version of Firefox lower than the 52 such as what @awilkins says in the issue https://github.com/SeleniumHQ/docker-selenium/issues/415 \nOn my side I have fixed it for Firefox 52 - 51.0.1 using a custom image that can be found here\nI am working on a proper solution for issuing a PR for fixing this issue.\nOn another hand, my machines are working properly as soon as you don't have to use basic authentication. If so it crashes quite often.\nI have tried to limit the amount of crash using a specific profile but it doesn't seem to be efficient. When trying on a real browser it works. Any clue?. @cvakiitho : it doesn't work with the 52.0 or 51.0.1? I still have some crash on my side but it looks like being thrown because of the error happening on my site.\nA solution might be to play with the profile for avoiding such a crash. @cvakiitho could you provide a full stack trace with a URL for performing tests on my side?. My tests are passing on both versions as soon as I am not using basic authentication. @cvakiitho normally it should be fixed by upgrading the base image to the selenium webdriver v3.3+\n(https://github.com/SeleniumHQ/docker-selenium/pull/420) and upgrading the GeckoDriver to the version 0.15.0 . @cvakiitho I have just tried out with the Geckodriver 0.15.0 and the webdriver v3.3.1. No crashes.\nBut the authentication modal is triggered in any case xD \n(the trick without '/' at the end of the URL doesn't work anymore --'). @ddavison Following what we said yesterday and what I have experienced today I am going to perform the following tests:\n\nFirefox 52 - Webdriver 3.1 - Gecko Driver 0.14 (without my modifications from the pr 148)\n\nFirefox 51.0.1 - Webdriver 3.1 - Gecko Driver 0.14  (without my modifications from the pr 148)\n\n\nFirefox 52 - Webdriver 3.1 - Gecko Driver 0.14 (with my modifications from the pr 148)\n\nFirefox 51.0.1 - Webdriver 3.1 - Gecko Driver 0.14  (with my modifications from the pr 148)\n\nI don't think that the issue is only related to the Gecko Driver.\nBut before arguing, let's wait for the result of my tests.\nETA: Sunday 26th of March\n. @ddavison : please find the tests and their result with and without my PR: https://gist.github.com/jackTheRipper/af09b57f7308b6f0c9983ed19615405c\nHere is tested the version 51.0.1 (the main issue). The tests for the 52 aren't relevant since my if doesn't add packages for this version and higher.. @cvakiitho : we found the trick for the basic authentication.\nTrying to run the test against https://username:password@mydomain.com/ fails.\nHowever if you request the same domain name by targeting your entry file (e.g.: https://username:password@mydomain.com/index.html) it works.\nSo yes this bug for the basic authentication is related to the Geckodriver such as what @ddavison said.\nBut the issue with the Firefox version lower than 52 has nothing to see with the Geckodriver (see my gist).. Hi @brandomr my testings (available in the gist I shared earlier) are showing that with my PR it works :) \nFeel free to give it a try. Let me know if you have an issue (if you could provide the logs it would be lovely).. @brandomr : I am using currently this node: https://hub.docker.com/r/travix/selenium-node-firefox/ \nI don't have any issues with my testing environment for now.. Updating to the 52 doesn't solve issue. I want to run my tests against different versions of Firefox.\nJust updating the version without the if wouldn't solve the issue. \nIf you take a look at both of the issues I mentioned the problem comes from some missing dependencies.\nI have tested both version on my side (52, 51.0.1). Without the packages I added to the image the 51.0.1 crash. The 52 as you say doesn't have the issue. \nI am using currently the version '3.1.0-astatine'.\nMaybe the PR shouldn't go to master but to that specific branch?. @ddavison question unrelated to my PR: instead of having a Selenium base installing both Java dependencies and Selenium, wouldn't it be easier to have a base Docker image which setups Java and a Docker image which setups Selenium?. I performed some tests available in this gist\nIt compares the current image without my modifications to the one with my modifications for the version 51.0.1.. @ddavison any news regarding the PR?. @brandomr : are you using http basic authentication for your tests?. @brandomr: could you provide some logs?. Yes I had the same messages.\n@brandomr could you re use the example I shared in my gist and provide the whole logs? \nI need to see which capabilities you are using. \nAre you running the tests  against Firefox 51.0.1 or lower?. @brandomr after re reading your comments it's not related to my PR. \nYou are talking about a version of Firefox up to 52. My PR is here for fixing an issue for the version lower than 52.\nIn your case I think that your issue is related to the geckodriver. @ddavison What is the status about the pull-request? . @ddavison sorry for not fixing it earlier. Here it is.. ",
    "amirplanet": "@cvakiitho I actually used your image (cvakiitho/docker-selenium) until now and it worked like a charm, no crashes. However this image disappeared today?\nI found cvakiitho/firefox instead, however it is broken:\n2017-09-19T13:49:57.740540000Z /opt/bin/entry_point.sh: line 4: /opt/bin/generate_config: No such file or directory\n2017-09-19T13:49:58.033121000Z Exception in thread \"main\" java.lang.IllegalStateException: Not a JSON Object: null\n2017-09-19T13:49:58.033397000Z  at com.google.gson.JsonElement.getAsJsonObject(JsonElement.java:90)\n2017-09-19T13:49:58.033620000Z  at org.openqa.grid.common.JSONConfigurationUtils.loadJSON(JSONConfigurationUtils.java:79)\n2017-09-19T13:49:58.033916000Z  at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.loadFromJSON(GridNodeConfiguration.java:421)\n2017-09-19T13:49:58.034126000Z  at org.openqa.grid.selenium.GridLauncherV3$3.setConfiguration(GridLauncherV3.java:271)\n2017-09-19T13:49:58.034339000Z  at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:155)\n2017-09-19T13:49:58.034562000Z  at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:75). @cvakiitho cool I will try that.\nAre you going to keep cvakiitho/firefox? So far only cvakiitho/firefox:3.5.3 works, latest is broken with the error code I pasted above. @cvakiitho regarding what you wrote: 'docker run -d -p 4444:4444 --shm-size 2g selenium/standalone-firefox:3.4.0, or in docker-compose'\nMy problem is that I'm using a Kubernetes env, and still didn't find a proper way to specify shm_size in Kubernetes yaml files. Any idea?. Please, if possible, also keep cvakiitho/firefox:3.5.3 since it's the only one that seems to be working for me. Thanks!. ",
    "arpadcseh": "Oh my bad!! :smile: I've forwarded the wrong port\ndocker run -d --link selenium-hub-3.1.0:hub  -v /dev/shm:/dev/shm --name \"selenium-chrome-debug-3.1.0\" -p 5904:5901 selenium/node-chrome-debug:3.1.0-astatine\nAfter changing 5901 to 5900 it works correctly!\n. ",
    "luckytaxi": "Im running into the same issue but I'm using docker-compose. This used to work but one day it just stopped working.. @diemol \nI'm working with @pmryhlotskyi on this. Answers below ...\n\nAccording to docker images I see this - 25dec9f86c68. Is this what you're looking for?\nI'm using docker-compose to run. Not sure how to get the exact run command.\nI'll have to revert to @pmryhlotskyi for this.\n\n. @elgalu That was my thought as well when I saw the log. Not sure what's up with that.. ",
    "camiller2": "I'm not sure what the CLA is (so I probably haven't signed it :-p).  There are two reasons for the change:\n1) DRY\n2) I forked the repo to get a version of 2x with a particular version of firefox; adding this change made it easy to update the namespace in all the generated Dockerfile files. . ",
    "IvanVasilko": "Hi @ddavison,\nWe use the following images:\n3.1.0  hub https://hub.docker.com/r/selenium/hub/~/dockerfile/\nand\n3.1.0  node-chrome https://hub.docker.com/r/selenium/node-chrome/~/dockerfile/. ",
    "sven-carstens": "When I disable the security settings for docker via  --security-opt seccomp:unconfined  (found in http://blog.johngoulah.com/2016/03/running-strace-in-docker/) the container works fine.\nWhich specific permissions are missing to run properly on Ubuntu 16 ?\nJust disabling everything seems a little over the top.. Applying the seccomp configuration from this blogpost also gets chrome working again\nhttps://github.com/jessfraz/blog/blob/master/content/post/how-to-use-new-docker-seccomp-profiles.md. ",
    "rafaferreira": "Amazing, I'll give a try. Thanks for now!\n\nRafael C. Ferreira\nMobile: +1 669 221 9549 (USA)\nOn Mon, Mar 13, 2017 at 10:41 AM, Dj notifications@github.com wrote:\n\nwe have a wiki page\nhttps://github.com/SeleniumHQ/docker-selenium/wiki/Building-your-own-images#specify-chromedriver-and-chrome-versions\nthat details how you can build your own images, but that is building using\nour make file.\nif you want to build yourself using docker build, you are able to just\nconvert the commands found in the wiki page above into bare docker build\nparameters.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/404#issuecomment-286185265,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAmt7ftpegue4wiCrbwn4DsHj7quqoITks5rlX-vgaJpZM4MU5RA\n.\n. \n",
    "gael-wogenstahl": "Here are the commands I used to start my grid with the 2 nodes failing :\nconsole\nusername@machine:~$ docker run -d -p 4444:4444 --name selenium-hub selenium/hub:3.1.0\n267a1fb6ff14ae664f8a4e104ec47778e2dc9e9b74b2ac2f98b237e4eb64361b\nusername@machine:~$ docker run -d --link selenium-hub:hub --name selenium-node-firefox selenium/node-firefox:3.1.0\na7e91d8b53e34b1d0e18c38ec970dd786e5aeea195db8f7e8edce58408ee3d3c\nusername@machine:~$ docker run -d --link selenium-hub:hub --name selenium-node-chrome selenium/node-chrome:3.1.0\na58e9511a89e59026bf437a26516ed5f6601fb7653ffbb1a239590ba724ef455\nusername@machine:~$ docker run -d --link selenium-hub:hub --name selenium-node-firefox-debug selenium/node-firefox-debug:3.1.0\nf0dafbdcd866b1534e27782ee345e10fbdf17a9f327a7823c229972f7451287c\nusername@machine:~$ docker run -d --link selenium-hub:hub --name selenium-node-chrome-debug selenium/node-chrome-debug:3.1.0\n1e98d1ac534a544ecd4408dc77df504f982ab64d6f877a79b5c9abe89d06fd1d\nusername@machine:~$ docker ps -a\nCONTAINER ID        IMAGE                               COMMAND                  CREATED              STATUS                      PORTS                    NAMES\n1e98d1ac534a        selenium/node-chrome-debug:3.1.0    \"/opt/bin/entry_po...\"   7 seconds ago        Up 6 seconds                5900/tcp                 selenium-node-chrome-debug\nf0dafbdcd866        selenium/node-firefox-debug:3.1.0   \"/opt/bin/entry_po...\"   17 seconds ago       Up 16 seconds               5900/tcp                 selenium-node-firefox-debug\na58e9511a89e        selenium/node-chrome:3.1.0          \"/opt/bin/entry_po...\"   28 seconds ago       Exited (1) 28 seconds ago                            selenium-node-chrome\na7e91d8b53e3        selenium/node-firefox:3.1.0         \"/opt/bin/entry_po...\"   41 seconds ago       Exited (1) 40 seconds ago                            selenium-node-firefox\n267a1fb6ff14        selenium/hub:3.1.0                  \"/opt/bin/entry_po...\"   About a minute ago   Up About a minute           0.0.0.0:4444->4444/tcp   selenium-hub\nusername@machine:~$ docker logs selenium-node-firefox\n/opt/bin/entry_point.sh: line 4: /opt/selenium/config.json: Permission denied\nNo Selenium Node configuration file, the node-base image is not intended to be run directly.\nusername@machine:~$ docker logs selenium-node-chrome\n/opt/bin/entry_point.sh: line 4: /opt/selenium/config.json: Permission denied\nNo Selenium Node configuration file, the node-base image is not intended to be run directly.\nAnd here are what I did to check the user permissions inside the images :\n```console\nusername@machine:~$ docker run --link selenium-hub:hub --name selenium-node-firefox -it --entrypoint /bin/bash selenium/node-firefox:3.1.0\nTo run a command as administrator (user \"root\"), use \"sudo \".\nSee \"man sudo_root\" for details.\nseluser@0217ccd94bca:/$ id\nuid=1000(seluser) gid=1000(seluser) groups=1000(seluser),27(sudo)\nseluser@0217ccd94bca:/$ ls -al /opt/selenium\ntotal 20712\ndrwxr-xr-x 2 root root     4096 Feb 24 19:09 .\ndrwxr-xr-x 8 root root     4096 Feb 24 19:09 ..\n-rwxrwxr-x 1 root root      480 Feb 24 19:06 generate_config\n-rw-r--r-- 1 root root 21190292 Feb 16 16:16 selenium-server-standalone.jar\nseluser@0217ccd94bca:/$ exit\nexit\nusername@machine:~$ docker run --link selenium-hub:hub --name selenium-node-firefox-debug -it --entrypoint /bin/bash selenium/node-firefox-debug:3.1.0\nroot@f3f4f5f25668:/# id\nuid=0(root) gid=0(root) groups=0(root)\nroot@f3f4f5f25668:/# ls -al /opt/selenium\ntotal 20712\ndrwxr-xr-x  2 root root     4096 Feb 24 19:09 .\ndrwxr-xr-x 10 root root     4096 Feb 24 19:11 ..\n-rwxrwxr-x  1 root root      480 Feb 24 19:06 generate_config\n-rw-r--r--  1 root root 21190292 Feb 16 16:16 selenium-server-standalone.jar\nroot@f3f4f5f25668:/# exit\nexit\n```. Hello,\nSorry I've been busy on other matters and couldn't try again what you asked.\nI'm upgrading Selenium to 3.4.0 and tried to run the new docker images and got stuck in the same kind of problem.\nImage(s): selenium/hub:3.4.0-einsteinium\nDocker Version: 17.05.0-ce\nOS: Ubuntu 14.04\nI tried to start the hub following the documentation with that result :\nconsole\nusername@machine:~/git/scenarios$ docker run -d -p 4444:4444 --name selenium-hub selenium/hub:3.4.0-einsteinium\na04cf62774c4cf57346791a209e9086ef7444b6dc461151ca78156fabbf98546\nusername@machine:~/git/scenarios$ docker ps -a\nCONTAINER ID        IMAGE                            COMMAND                  CREATED             STATUS                     PORTS               NAMES\na04cf62774c4        selenium/hub:3.4.0-einsteinium   \"/opt/bin/entry_po...\"   4 seconds ago       Exited (1) 3 seconds ago                       selenium-hub\nusername@machine:~/git/scenarios$ docker logs selenium-hub \n/opt/bin/entry_point.sh: line 6: /opt/selenium/config.json: Permission denied\nstarting selenium hub with configuration:\n{\n  \"host\": null,\n  \"port\": 4444,\n  \"role\": \"hub\",\n  \"maxSession\": ,\n  \"newSessionWaitTimeout\": ,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": ,\n  \"jettyMaxThreads\": ,\n  \"cleanUpCycle\": ,\n  \"browserTimeout\": ,\n  \"timeout\": ,\n  \"debug\": \n}\nException in thread \"main\" org.openqa.grid.common.exception.GridConfigurationException: Wrong format for the JSON input : com.google.gson.stream.MalformedJsonException: Unexpected value at line 1 column 65 path $.maxSession\n    at org.openqa.grid.common.JSONConfigurationUtils.loadJSON(JSONConfigurationUtils.java:81)\n    at org.openqa.grid.internal.utils.configuration.GridHubConfiguration.loadFromJSON(GridHubConfiguration.java:147)\n    at org.openqa.grid.selenium.GridLauncherV3$2.setConfiguration(GridLauncherV3.java:249)\n    at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:155)\n    at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:75)\nCaused by: com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Unexpected value at line 1 column 65 path $.maxSession\n    at com.google.gson.internal.Streams.parse(Streams.java:60)\n    at com.google.gson.JsonParser.parse(JsonParser.java:84)\n    at com.google.gson.JsonParser.parse(JsonParser.java:59)\n    at com.google.gson.JsonParser.parse(JsonParser.java:45)\n    at org.openqa.grid.common.JSONConfigurationUtils.loadJSON(JSONConfigurationUtils.java:79)\n    ... 4 more\nCaused by: com.google.gson.stream.MalformedJsonException: Unexpected value at line 1 column 65 path $.maxSession\n    at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1559)\n    at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:564)\n    at com.google.gson.stream.JsonReader.peek(JsonReader.java:425)\n    at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:716)\n    at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:739)\n    at com.google.gson.internal.bind.TypeAdapters$29.read(TypeAdapters.java:714)\n    at com.google.gson.internal.Streams.parse(Streams.java:48)\n    ... 8 more. @rakeshnambiar as stated in #535 the issue for me is linked to user namespace being activated in Docker. Once I deactivated it everything was working fine although this isn't the right option since user namespaces do have a purpose.. @rakeshnambiar you might want to get in touch with your cloud provider to check which Docker options are activated or not. Depending on their setup user namespaces might be activated.\nBut as I already stated the problem is in the docker itself since docker container should be runnable without root privileges. There might be some user permissions fixing to do but I don't know Selenium docker setup enough to be able to contribute.\nMaybe @diemol can help me with that ?. I managed to fix the problem by deactivating user namespace in Docker (\"userns-remap\" in /etc/docker/daemon.json).\nI don't need that functionality on my desktop computer right now but I might need it on the server.\nAll in all this points to a user permission problem on files located in /opt/selenium directory as stated in #405 .. ",
    "enolan": "Looking at the build logs, entry_point.sh is missing. Is it as simple as rerunning generate.sh?. ",
    "ersuniljoshi": "+1, I am also facing the same issue\nSame thing is happening with selenium/standalone-firefox-debug. Fixed for FF and Chrome: https://github.com/SeleniumHQ/docker-selenium/pull/419. @ddavison the reason I have removed this file is, its already being copied in the above docker image(i.e. StandaloneFireFox) and this copy will fail as \"entry_point.sh\" doesnot even exists in the folder named \"StandaloneFireFoxDebug\". After removing this file I was able to build the debug image. Otherwise its fails with Error \"No such file or directory\". ",
    "paul-nelson-baker": "I have a temporary fix. Based on the comment by ddavison from the linked pull request\nversion: '3.0'\nservices:\n  grid-hub:\n    container_name: 'grid-hub'\n    image: 'selenium/hub'\n    ports:\n      - '4444:4444'\n  node-chrome-debug:\n    image: 'selenium/node-chrome-debug'\n    depends_on:\n      - 'grid-hub'\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=grid-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n      - no_proxy=\"\"\nIs it more appropriate to close this issue, or to leave it open until the pull request is merged?. ",
    "testower": "Moved here: https://github.com/SeleniumHQ/docker-selenium/pull/411. ",
    "awilkins": "Success : built an image that runs Firefox 45 properly.. The change I did was to look up the available package versions of Firefox for the base 16.04 version of Ubuntu that's used for the Docker base image, and change the Dockerfile template to specifically install that version instead of latest.\ne.g. \n&& apt-get -qqy --no-install-recommends install firefox=45.0.2+build1-0ubuntu1 \\\nGiven there's a FIREFOX_VERSION environment variable, I guess it should detect versions under 52 and make this change to the file - or define another variable like FIREFOX_DEPENDENCY_PACKAGE_VERSION and set that to latest or that version 45 depending.. It occurs to me that manually adding instructions to install those missing dependencies in addition to the latest firefox package to the dockerfile may make it work for older versions (without the hackery I suggested) but don't have time to test that.. ",
    "gangadharahn": "Hi,\nI am also trying to build firefox images for lower versions, could please tell me the changes you did on base?\nThanks for your help in advance.\nRegards,\nGanga. Thanks for your help, now i am able build the images. ",
    "dorner": "Seeing this issue here. Trying to dockerize an older application which uses a really old version of Firefox (18) and seeing the same error mentioned above:\nXPCOMGlueLoad error for file /opt/firefox-18.0/libxpcom.so:\nlibxul.so: cannot open shared object file: No such file or directory\nCouldn't load XPCOM.. Actually it worked just fine when I followed the instructions @awilkins suggested. :). ",
    "cgoldberg": "@dorner firefox-18.0 is way too old and not compatible with current geckodriver.. https://www.linuxatemyram.com/. > the ram is not the problem\nwell, the thread you hijacked was about memory (the issue is also closed). if you have a new issue, then open a new issue.  (btw, there's no such thing as a cpu leak). @PratapAkshay \n1. your spelling is not correct (windiw?)\n2. please don't hijack unrelated issues.. > the client version of the bindings used there is not ready to use the current Selenium version \nsee: https://github.com/facebook/php-webdriver/issues/469. the option to disable it was removed from Chrome. > But i have Pass chromeDriver Dir in same project location\nPlease show a reproducible test case containing the code where you are specifying location of chromedriver and how you are instantiating the driver.  also show a complete stacktrace with the error.   We are not all mind readers.. Chrome seems to change the options for doing a direct download with nearly every release, so this is going to be highly dependent on the version of Chrome in use.\nIf you just need to download something, rather than fiddling with Chrome options... a much easier workaround is to just download the content directly with an HTTP request and forget about trying to force your browser to do it.. geckodriver listens on port 4444 by default.  Once running, you can can't bind to the same socket again.  Subsequest instances need to be called with the --port option to specify a unique port (--port=0 will have geckodriver choose a free port). I wonder how simultaneous the release of Chrome and Chromedriver actually are .... and if we might hit the state when one is released but not the other.. s/teak/tweak/. s/Firefox/Opera/. ",
    "navels": "bump. ~~I'm running into this issue as well with the latest release~~\nActually not exactly, I was testing logged in as root instead of seluser.  When run as seluser the vnc server starts up manually.\nBut it isn't starting automatically.\ndocker@selenium-host:~$ docker logs 9ecbccf617c2\nWaiting xvfb...\n24/07/2017 23:37:57 passing arg to libvncserver: -rfbport\n24/07/2017 23:37:57 passing arg to libvncserver: 5900\nEnter VNC password: stty: 'standard input': Inappropriate ioctl for device\nfgets: No such file or directory\n. Wondering if this changed with https://github.com/SeleniumHQ/docker-selenium/pull/477. Sorted out our issue.  We had \"USER root\" in a Dockerfile and needed to set it back to seluser at the end of the file so that entry_point.sh executes as seluser.. ",
    "jaeckmar": "It seems like this is a common problem in *debug versions. Running a direct docker run command like this: \ndocker run -d -p $HUB_PORT:5555 -p $VNC_PORT:5900 -e SE_OPTS=\"-host $DOCKER_HOST_IP -port $HUB_PORT -browser browserName=firefox,maxInstances=1\" -e HUB_PORT_4444_TCP_ADDR=dnsname.internal -e HUB_PORT_4444_TCP_PORT=4444 --name $CONTAINER_NAME-$n selenium/node-$BROWSER-debug:$SELENIUM_VERSION \nwith setting the corresponding parameters results in the same error.\nCONTAINER_NAME=sel-node\nBROWSER=firefox\nSELENIUM_VERSION=3.2.0-actinium. ",
    "METAJIJI": "Fix PR here https://github.com/SeleniumHQ/docker-selenium/pull/445. This fix for:\n https://github.com/SeleniumHQ/docker-selenium/issues/335\n https://github.com/SeleniumHQ/docker-selenium/issues/423\n https://github.com/SeleniumHQ/docker-selenium/issues/207\n https://github.com/SeleniumHQ/docker-selenium/issues/196\n. ",
    "vishwaae": "Thank you diemol!!\nAfter removing quotations its worked out.. ",
    "cmosher01": "Does it make sense to prevent failing builds from getting into the \"latest\" docker-hub image?. ",
    "sporokh": "Just tested in my own environment:\nSelenium 3.2.0 doesn't have this issue and works fine, while new version 3.3.0 cycling node to deregister every couple of seconds. Any fixes to 3.3.0?. ",
    "taraa62": "I have the same problem with version 3.3.1, I also tried 3.2.0, the problem remained.\nInitial data:\nOs: mac os 10.12.4\nConnect node: appium (ios)\nConfiguration for hub: default. ",
    "Saxson": "Isn't it due to the config? Check the timeout in the config. ",
    "Dhananjayulu": "Awesome. Suggestion worked well with both docker run and docker-compose!\nThanks very much @tparikka . Thank for clarification!. Issue got fixed once I build the images and run selenium hub and node containers . closing. ",
    "chuck-st": "Just in case anyone is having trouble getting the above suggestion to work, I was able to get this to work using:\nenvironment:\n - NODE_MAX_INSTANCES=5\n - NODE_MAX_SESSIONS=5\n. ",
    "erithmetic": "Using the selenium node base image, I've found the following configuration works best:\ncapabilities: {\n    browserName: 'chrome',\n    chromeOptions: {\n        args: ['headless','no-sandbox','disable-gpu','window-size=1920x1080']\n    }\n}\nKeeping the sandbox enabled caused an exception when selenium tried to start chrome.\nI put together an example app that extends the selenium node base image, installs latest snapshot of chromium (with headless bugfixes), and installs a recent build of chromedriver which allows chrome > 59. Unfortunately, I also discovered xvfb is required for sendKeys to work.. ",
    "alippai": "Awesome! This sounds like it requires half the resources of selenium/standalone-chrome (e.g. disk, RAM). ",
    "jorgeluisdelgado": "@diemol @graingert \nI would also like to know this. . I have found a workaround. It is simply to not use send key and instead use Javascript. Here is an example:\ndriver = webdriver.Chrome()\ndriver.find_elements_by_id('solveme').send_keys(Solution)\nbecomes: \ndriver = webdriver.Chrome()\nCommand = \"document.getElementById('solveme').value='\"+ Solution +\"';\"\ndriver.execute_script(Command)\nThere are multiple selectors for javascript you can use including name, id, class, etc. The above example is with python but it should work with all languages that allow javascript executions using selenium. This is an extremely frustrating issue as the majority of my tests required inputting text into some field. As a temporary workaround, I would suggest using this. . ",
    "BluePhoenix": "This link was shared with me, and seems to have a lot of nice details that might help with what we are trying to achieve here.\nGetting Started with Headless Chrome\nBy Eric Bidelman\nhttps://developers.google.com/web/updates/2017/04/headless-chrome. ",
    "UsainBloot": "I found this to be the best solution to running chrome headless.\nhttps://github.com/SeleniumHQ/docker-selenium/issues/429#issuecomment-296379624\nChromedriver 2.30 which was released a couple of days ago allows for the resizing of the browser window (as it was previously done via an extension which are not allowed in headless and since moved to a dev tools API).\nHowever, even with this setup I am still seeing an issue with sendKeys without Xvfb.\nAnnoyingly the blog post above states that you do not require Xvfb at all to use headless chrome but that does not seem to be the case.. I understand that you can use JavaScript as a work around but as I am using selenium to recreate user journeys then the steps should reflect how a user is interacting with a webpage, rather than using a hack to get by.\nI really hope chromium address this issue soon, otherwise I don't see headless chrome being a viable headless browser anytime soon.. @guillaumevincent, I haven't look at it since because in my own opinion, having to use xvfb with chrome headless does not make the browser headless.\nChromium devs have said that they will look into it, but have not given a timeframe. . Great find @tabiodun, hopefully the next build will solve our issues!. For anyone using vvo/selenium-standalone I have a PR that defaults to the new version of chromedriver.\nhttps://github.com/vvo/selenium-standalone/pull/290. ",
    "ari-el-muhandiz": "@Rosefox911 thanks, your solution is working for me. ",
    "guillaumevincent": "@UsainBloot Do you solve your issue? Because even with Xvfb installed in my docker container my chromedriver is not working. I confirm @UsainBloot answer. Here an error on docker centos 7 running chromedriver 2.30:\nunknown error: an X display is required for keycode conversions, consider using Xvfb\\n  (Session info: headless chrome=59.0.3071.109)\\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 3.10.0-514.21.2.el7.x86_64 x86_64)\nSo the only gain for now to use Chrome headless is to no longer need Java.\nWe still need fonts and Xvfb running. Here a solution on docker centos 7:\nyum install -y Xvfb libXfont Xorg\n/usr/bin/Xvfb :99 -ac -screen 0 1920x1080x24 &\nexport DISPLAY=:99\nI will check on chrome-unstable to see if there is any improvement. npm install chromedriver install version 2.31 and download the good version for your system\nDownloading https://chromedriver.storage.googleapis.com/2.31/chromedriver_linux64.zip\nThank you guys. @cbrevik don't know if it's the solution but on centos 7 container I added liberation-mono-fonts package to avoid this error. ",
    "tabiodun": "@SpencerMalone which args and which environment are you trying to use to build chrome. I can't seem to get it to work after building with the ozone flag on Ubunutu 14.04 . I finally got a build of chrome using docker that seems to confirm that the ozone flag does fix this issue. I haven't run it against my test suite, but the sample selenium python example that uses sendKeys works.. Looks like the latest revision has fixed this issue https://codereview.chromium.org/2952383002 and https://bugs.chromium.org/p/chromedriver/issues/detail?id=1772#c28. I've built a version of this and it seems to now work WITHOUT the ozone flag. I'm hoping the next PPA for google-chrome-unstable will have the changes and there will be no need for these long builds. \nBTW your Dockerfile looks VERY similar to what I have. I used gn gen to do the args though.. After playing around a bit and looking at the commit for the fix, it looks like this is a chromedriver only problem, which means it it much easier to just build chromedriver standalone to use for any selenium tests you want to run. However, I think chromedriver is on a release schedule that is a bit less frequent so getting an official fix will have to wait for the next chromedriver release.\nIn case this is useful to anyone, I have a working build of chromedriver for ubuntu which I built in an ubuntu 14.04 docker container here. @graingert Good call\nhttps://hub.docker.com/r/tabiodun/selenium-chrome-headless/. If anyone needs to build the latest chromedriver for testing with the fixes in place, I have a Dokcerfile for this. Once the chromedriver here is generated, it is portable.\nhttps://gist.github.com/tabiodun/e4204ab83b3b7cfd2d28b478cf441162. ",
    "pumano": "Good news guys: \naccording to: https://bugs.chromium.org/p/chromedriver/issues/detail?id=1772#c29\nit fixed with : https://codereview.chromium.org/2952383002\nas mentioned here: https://bugs.chromium.org/p/chromedriver/issues/detail?id=1772#c31\nThe fix will be included in ChromeDriver 2.31. Its release date hasn't been determined yet.\n. ",
    "bbuchalter": "I don't see any way to subscribe to notifications for when a new version of chromedriver is released. Anyone have thoughts on that?. > https://github.com/jalexvig/build_chromium_docker\nDoes anyone have something like this that's built on jessie instead of ubuntu? I'm having trouble porting this one. Alternatively, could I just use the binary in that repo safely on a different container?. ",
    "jalexvig": "Using this dockerfile, here is a compiled chromedriver for linux.\nhttps://github.com/jalexvig/build_chromium_docker. ",
    "Shyam-Chen": "```dockerfile\nDockerfile\n[...]\nchrome --\nENV CHROME_BIN /usr/bin/chromium\nENV DISPLAY :99\nRUN \\\n  apt-get update && \\\n  apt-get install -y xvfb chromium libgconf-2-4\nENTRYPOINT [\"Xvfb\", \"-ac\", \":99\", \"-screen\", \"0\", \"1280x720x16\"]\n-- chrome\n[...]\n```. ",
    "fiedl": "As mentioned in the bug report, @davidthornton has compiled a binary of chromedriver-2.31, which includes the fix.\nhttps://github.com/davidthornton/chromedriver-2.31\nI've successfully used this by adding this oneliner to my ci install script:\nmkdir -p ~/chromedriver && wget https://github.com/davidthornton/chromedriver-2.31/blob/master/chromedriver\\?raw\\=true -O ~/chromedriver/chromedriver && chmod a+x ~/chromedriver/chromedriver && export PATH=\"$HOME/chromedriver:$PATH\"\nLet's hope they'll release chromedriver 2.31 soon!\nCheck the releases here: https://sites.google.com/a/chromium.org/chromedriver/downloads. ",
    "boonyasukd": "homebrew just got updated to include chromedriver 2.31 around 17 minutes ago. Apparently the builds had been completed for a few days now, but chromedriver site doesn't get updated yet.\nGrab the binary here.. ",
    "stguitar": "I was also having this issue and can confirm simply updating chromedriver to 2.31 removed the need to use Xvfb. ",
    "ttretau": "I updated image to Chromedriver 2.31 and received errors like @cbrevik, WebDriverError: unknown error: Chrome failed to start: exited abnormally. I think from chromedriver logs RESPONSE InitSession unknown error: Chrome failed to start: exited abnormally.\nI used args '--headless', '--disable-gpu', '--window-size=800,600' via protractor.. ",
    "Nighthawk22": "I get the following exception if i run chrome headless\n13:22:32.631 INFO - Executing: [new session: Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@3631f3e0, browserName=chrome, javascriptEnabled=true, chromeOptions={args=[--window-size=1280,800, --disable-gpu, --headless]}, handlesAlerts=true, requestOrigins={name=webdriverio, version=4.6.2, url=http://webdriver.io}}]])\n13:22:32.650 INFO - Creating a new session for Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@3631f3e0, browserName=chrome, javascriptEnabled=true, chromeOptions={args=[--window-size=1280,800, --disable-gpu, --headless]}, handlesAlerts=true, requestOrigins={name=webdriverio, version=4.6.2, url=http://webdriver.io}}]\nStarting ChromeDriver 2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57) on port 13834\nOnly local connections are allowed.\n13:23:32.925 WARN - Exception thrown\njava.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: 'chrome-4040051761-dgtxj', ip: '192.168.249.212', os.name: 'Linux', os.arch: 'amd64', os.version: '4.10.0-30-generic', java.version: '1.8.0_131'\nDriver info: driver.version: unknown\n    at java.util.concurrent.FutureTask.report(FutureTask.java:122)\n    at java.util.concurrent.FutureTask.get(FutureTask.java:192)\n    at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)\n    at org.openqa.selenium.remote.server.DefaultSession.<init>(DefaultSession.java:119)\n    at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)\n    at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:131)\n    at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)\n    at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:36)\n    at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)\n    at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:190)\n    at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:222)\n    at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:184)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n    at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:150)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n    at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:841)\n    at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:543)\n    at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)\n    at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1228)\n    at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)\n    at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:481)\n    at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)\n    at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1130)\n    at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n    at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n    at org.seleniumhq.jetty9.server.Server.handle(Server.java:564)\n    at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:320)\n    at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:251)\n    at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)\n    at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:112)\n    at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)\n    at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:672)\n    at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:590)\n    at java.lang.Thread.run(Thread.java:748)\nCaused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: 'chrome-4040051761-dgtxj', ip: '192.168.249.212', os.name: 'Linux', os.arch: 'amd64', os.version: '4.10.0-30-generic', java.version: '1.8.0_131'\nDriver info: driver.version: unknown\n    at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:110)\n    at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:96)\n    at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)\n    at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)\n    at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:209)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    ... 1 more\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:102)\n    ... 9 more\nCaused by: org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited normally\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 4.10.0-30-generic x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 60.07 seconds\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: 'chrome-4040051761-dgtxj', ip: '192.168.249.212', os.name: 'Linux', os.arch: 'amd64', os.version: '4.10.0-30-generic', java.version: '1.8.0_131'\nDriver info: driver.version: ChromeDriver\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)\n    at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)\n    at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)\n    at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)\n    at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$22(ProtocolHandshake.java:365)\n    at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n    at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\n    at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)\n    at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)\n    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\n    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n    at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)\n    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n    at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)\n    at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:368)\n    at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:159)\n    at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)\n    at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)\n    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637)\n    at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:250)\n    at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:236)\n    at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:137)\n    at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:184)\n    at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:148)\n    ... 14 more\n13:23:32.934 WARN - Exception: unknown error: Chrome failed to start: exited normally\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 4.10.0-30-generic x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 60.07 seconds. ",
    "uday-rayala": "Even I am getting the above error. Does anyone know how to avoid this error? \nFollowing are chrome and chromedriver versions:\n```\nseluser@b5289d951007:/$ chromedriver --version\nChromeDriver 2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8)\nseluser@b5289d951007:/$ ./opt/google/chrome/chrome --version\nGoogle Chrome 61.0.3163.79 unknown\n```\nI am using 3.5.3 version of https://hub.docker.com/r/selenium/standalone-chrome-debug/tags/. ",
    "csvan": "+1. ",
    "ematta": "+1 Thank you. ",
    "azz": "Is there a version to roll back to that didn't have the 3.3.0 connectivity issues?. @tparikka Thanks for that. I'll give 3.2.0 a shot while the 3.3.1 image is being sorted out.. See #430. ",
    "simplyageek": "@ddavison any news yet?. In the meantime, I cloned the repo and built the images myself (with VERSION=local). uhm, I used a mac. I'm not sure how could you do it on windows. maybe use the new bash for Windows?. I've just cloned the master branch of this repo, changed line 27 @ /NodeChrome/Dockerfile.txt:\n#==================\n  Chrome webdriver\n #==================\n-ARG CHROME_DRIVER_VERSION=2.28\n+ARG CHROME_DRIVER_VERSION=2.29\nand then I've ran:\n$ VERSION=local make build. ",
    "setiseta": "There is also a new version of chromedriver: 2.29. @beniamin-kis what source you have used? in this repo or changed something? maybe you can provide this image's temporary on dockerhub until the official gets updated?. ",
    "lasotaartur": "I'm using docker in docker with docker-compose. Mayby this is reason. 256mb not help me:/. I checked version 3.2.0 and 3.3.0 but did not work. :/. Is there somewhere logs from chromium to check reason of this situation?. Now I'm using selenium/standalone-chrome-debug:3.3.0, chrome standalone version with debug and this problem appears less often.. What is parent image? You think about container in which is execute docker-compose up ? I tought that I must do this volume mapping on selenium container.. Now I'm using selenium/standalone-chrome-debug:3.3.0 and it work's better than selenium/standalone-chrome:3.3.0. . ",
    "bvkatwijk": "We are experiencing the same issue using selenium/node-chrome:\norg.openqa.selenium.WebDriverException: unknown error: session deleted because of page crash\nfrom unknown error: cannot determine loading status\nfrom tab crashed\n  (Session info: chrome=57.0.2987.110)\n  (Driver info: chromedriver=2.28.455506 (18f6627e265f442aeec9b6661a49fe819aeeea1f),platform=Linux 3.16.0-4-amd64 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 142 milliseconds\nBuild info: version: '3.3.0', revision: 'b526bd5', time: '2017-03-07 11:21:31 -0800'\nSystem info: host: '3a5d88e101a9', ip: '172.17.0.16', os.name: 'Linux', os.arch: 'amd64', os.version: '3.16.0-4-amd64', java.version: '1.8.0_121'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.28.455506 (18f6627e265f442aeec9b6661a49fe819aeeea1f), userDataDir=/tmp/.org.chromium.Chromium.GLzl7B}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.110, platform=LINUX, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]\nSession ID: 8fb3ca40bb35fb73f6ca45ad2cb7fdfa\nA bit further in the logs:\nCaused by: org.openqa.selenium.WebDriverException: unknown error: session deleted because of page crash\nfrom unknown error: cannot determine loading status\nfrom tab crashed\n  (Session info: chrome=57.0.2987.110)\n  (Driver info: chromedriver=2.28.455506 (18f6627e265f442aeec9b6661a49fe819aeeea1f),platform=Linux 3.16.0-4-amd64 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 142 milliseconds\nBuild info: version: '3.3.0', revision: 'b526bd5', time: '2017-03-07 11:21:31 -0800'\nSystem info: host: '3a5d88e101a9', ip: '172.17.0.16', os.name: 'Linux', os.arch: 'amd64', os.version: '3.16.0-4-amd64', java.version: '1.8.0_121'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.28.455506 (18f6627e265f442aeec9b6661a49fe819aeeea1f), userDataDir=/tmp/.org.chromium.Chromium.GLzl7B}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.110, platform=LINUX, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]\nSession ID: 8fb3ca40bb35fb73f6ca45ad2cb7fdfa\nBuild info: version: 'unknown', revision: 'unknown', time: 'unknown'\nSystem info: host: 'PC1935', ip: '10.0.110.25', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91'\nDriver info: driver.version: RemoteWebDriver. ",
    "keshavneupane": "Much of the answer I see here is related to Docker Compose. How would you do it in K8s using YAML file ? The only option I have and can do is using tmpfs. This is what I tried and still the issue remains.\nvolumeMounts:\n- mountPath: /selenium-node-chrome\nname: selenium-node-chrome\nvolumes:\n- name: selenium-node-chrome\nemptyDir:\nmedium: Memory\nError -\norg.openqa.selenium.WebDriverException: unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed (Session info: chrome=53.0.2785.143) (Driver info: chromedriver=2.24.417424 (c5c5ea873213ee72e3d0929b47482681555340c3),platform=Linux 3.10.0-514.6.1.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 996 milliseconds Build info: version: '2.53.1',. ",
    "rosskevin": "To follow this up, I'm running into Net::ReadTimeout when trying to run the same tests with selenium/standalone-firefox:3.2.0.  Since I cannot get the firefox console logs, I'm not able to provide much more information, but it exhibits the same intermittent behavior, then eventually it crashes with:\nSelenium::WebDriver::Error::UnknownError: Reached error page: about:neterror?e=netReset&u=http%3A//dummy.com.10.1.10.33.nip.io%3A4100/&c=UTF-8&f=regular&d=The%20connection%20to%20the%20server%20was%20reset%20while%20the%20page%20was%20loading.\nfirefox_log.txt\n. This appears to be a memory leaking application.  I can only run 46 sign in/out combinations before both the selenium/standalone-chrome or my native osx browser break.. I'm looking for any help or pointers anyone can give me.  I've done much memory profiling and all is well with the application. \nI'm only having this problem when driving with selenium.  I can't say with any certainty it is selenium, the docker image, chrome, or anything else.  I've put a great deal of time into researching it, and I've run out of leads.  \nI'm willing to try anything, just point me to it and I'll give it a shot.. After an effort today, it appears our server running on the host hangs or becomes non-responsive to the chrome container.  If this is the case and chrome is managing connections properly, then this is entirely unrelated to selenium.. For those that find this, I have definitively found this problem to reside in a hanging Capybara server.  I still don't know the alternative, but it is being tracked here: \nhttps://github.com/teamcapybara/capybara/issues/1855. I am also unable to connect to selenium/standalone-chrome:3.5.2 with the following config:\n```ruby\nprefs = {\n  loggingPrefs: {\n    browser: 'ALL'\n  },\n  chromeOptions: {\n    prefs: {\n      credentials_enable_service: false, # disable saved passwords\n      profile: {\n        password_manager_enabled: false  # disable saved passwords\n      }\n    },\n    'args' => %w{headless no-sandbox disable-gpu} # https://github.com/dkastner/headless-chromium-selenium/blob/master/features/support/env.rb\n  }\n}\nSelenium::WebDriver::Remote::Capabilities.chrome(prefs)\n```\nIt simply gives me a Net::ReadTimeout.  This works fine without the headless arg.  \nAm I mis-configuring headless mode?  . Noted here:\n\nIf you use the headless_chrome driver on an older version of Chrome or on Windows, you will get a NetReadTimeout error. \n\nBut chrome docs say:\n\nCaution: Headless mode is available on Mac and Linux in Chrome 59. Windows support is coming in Chrome 60. To check what version of Chrome you have, open chrome://version.\n\nWhen I run selenium/standalone-chrome-debug:3.5.2 and vnc in, I see that the version of Chrome is 60.0.3112.113 (Official Build) (64-bit)\nSo it appears I have met all requirements and have a similar set of configurations as examples, yet still no response from the container.\n. ",
    "NiGhTTraX": "@diemol the stack overflow answer you linked says that the debug message can be ignored as they're not causing any problems. I'm seeing the message in the logs whenever my Selenium init times out. I'm not sure if there's a connection between them, but I'd sure like to get to the bottom of it.. When I ask the Selenium hub for a session it takes too long (more than 10s) and my tests time out. I can see in the logs that a request to create a new one has been received and in the debug logs I see the read time out error.\n17:32:29.679 INFO - Registered a node http://172.18.0.4:5555\n17:32:29.854 INFO - Registered a node http://172.18.0.3:5555\n17:32:35.760 INFO - Got a request to create a new session: Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@2a2a1ebf, browserName=chrome, javascriptEnabled=true, handlesAlerts=true, requestOrigins={name=webdriverio, version=4.6.2, url=http://webdriver.io}}]\n17:32:35.762 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=chrome, maxInstances=1, version=57.0.2987.110, applicationName=, platform=LINUX}\n17:32:35.980 INFO - Got a request to create a new session: Capabilities [{rotatable=true, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@ddbf0ca, browserName=firefox, javascriptEnabled=true, handlesAlerts=true, requestOrigins={name=webdriverio, version=4.6.2, url=http://webdriver.io}}]\n17:32:35.980 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=firefox, maxInstances=1, version=52.0, applicationName=, platform=LINUX}\nI can't reproduce this consistently, so if you have any ideas on how to provide more info, I'm all ears.. @diemol I haven't had a failure in quite a while, so maybe it was fixed. Closing for now and I'll reopen it if it happens again.. ",
    "eitany": "I am hitting the same error. Looks like ubuntu:16.04 doesn't have tzdata installed. only after I ran apt-get update it became available but the order of commands in the base docker file is first to run the reconfigure then update.\nThat being said there are other issues the happen that still make this build not work as can be seen on the Closed PR. Looks like this fix work if you apply it on the commit before the update to bohrium.\nI am applying it on my fork\nThanks. It seems to have been a local issue, I am closing the Issue. Issue was local to my env. @boydj The issue was the locally on my build env the entry_point file lost its execution permission. Once I did a clean checkout the file got its original permission back.\nInitially I solved it with the commit in this PR but I then I saw the permission was something local to my env. ",
    "allanatadministrate": "@ddavison cheers for all the work!. https://github.com/SeleniumHQ/docker-selenium/issues/449. ",
    "brajesheee": "Re pulling the new version worked. Thanks. ",
    "GMKW": "I am getting proxy_reregistration error using selenium version 3.4.0. \nhub linux version 3.4.0\nnode windows 7\nbrowser chrome Version 60.0.3112.78 (Official Build) (64-bit)\nselenium chrome driver version: ChromeDriver 2.33.506120\nwhat hub or node setting can I set to avoid this issue?  or what version can I upgrade or downgrade to?. ",
    "mishrasanjeetr": "I am still facing the issue .Marking the node http://192.168.137.1:5566 as down: cannot reach the node for 2 tries. ",
    "Vinodkomeershetty": "I am still facing the issue .Marking the nodeas down: cannot reach the node for 2 tries. ",
    "derinbay": "@ddavison I'm using a docker-compose file to run the containers:\ngist link. I'm setting that in case of some browser is hanged. In this case it's starting the browser as far as I saw from the logs and wait for 5 mins (grid_browser_timeout). If I don't set, isn't it going forever, since the default is 0?. Yes, just a few random tests are hanging, about %10.\nWhen I work with chrome-node-debug, this never happened.\nPS: I scale nodes to test count right before starting to test.\ndocker-compose scale chromenode=xx. Hello @diemol I've found out that, today's hangs were for another reason. I've checked that on my full suits and everything seems fine now. \nI can say that this issue has been fixed on 3.4.0\nThanks for your efforts.. This issue should be fixed when upgrading to chromedriver 2.32, mentioned on 560\nChromedriver bug is here. @lindycoder You're right, You cannot use this image. We're waiting for an updated image as well. I turned back to 3.4.0 image on our systems by the way.. ",
    "kariasbolster": "is it because the mount propagation is rprivate in ec2 while in my local propagation is empty? if so, how can i change propagation?\n\"Mounts\": [\n            {\n                \"Source\": \"/home/ec2-user/selenium-downloads\",\n                \"Destination\": \"/home/seluser/Downloads\",\n                \"Mode\": \"\",\n                \"RW\": true,\n                \"Propagation\": \"rprivate\"\n            }\n        ],. Closing this issue. It was because of folder permission.. @AlexMarchini, i did a chmod to this folder \"/home/ec2-user/selenium-downloads\" . It was weird why I needed to do it since as you can see from the data above the RW field is true.. ",
    "AlexMarchini": "@kariasbolster Could you elaborate? I'm having a similar issue. Did you need to set a permission on the docker container itself or the host machine?. @kariasbolster Thanks! Got it working.\nFor anyone else that runs into this, the exact command I used to set permissions was:\ndocker-compose exec chrome sudo chmod -R 777 /home/seluser/Downloads. ",
    "oivoodoo": "@AlexMarchini thank you! you did my day happy now. it was really helpful.. ",
    "Sean-Brown": "\n. Thank you for your input. I'm busy with other issues at the moment, when I revisit this I'll directly run the Grid using the JAR and let you know.. ",
    "timonag": "Going to this google page almost always kills FF\nDocker: version 17.03.1-ce, build c6d412e\nHost: Win10\nnode_1  | 15:46:13.101 INFO - Executing: [get: https://trends.google.com/trends/hottrends])\nnode_1  | 15:46:13.101 DEBUG - Executing: get [7dd6006c-a1ac-4a1f-a979-de93d2755db8, get {url=https://trends.google.com/trends/hottrends}]\nnode_1  | 15:46:13.103 DEBUG - CookieSpec selected: default\nnode_1  | 15:46:13.103 DEBUG - Auth cache not set in the context\nnode_1  | 15:46:13.103 DEBUG - Connection request: [route: {}->http://localhost:11211][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000]\nnode_1  | 15:46:13.104 DEBUG - Connection leased: [id: 2][route: {}->http://localhost:11211][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000]\nnode_1  | 15:46:13.104 DEBUG - Opening connection {}->http://localhost:11211\nnode_1  | 15:46:13.104 DEBUG - Connecting to localhost/127.0.0.1:11211\nnode_1  | 15:46:13.106 DEBUG - Connection established 127.0.0.1:35994<->127.0.0.1:11211\nnode_1  | 15:46:13.106 DEBUG - http-outgoing-2: set socket timeout to 10800000\nnode_1  | 15:46:13.107 DEBUG - Executing request POST /session/7dd6006c-a1ac-4a1f-a979-de93d2755db8/url HTTP/1.1\nnode_1  | 15:46:13.107 DEBUG - Target auth state: UNCHALLENGED\nnode_1  | 15:46:13.108 DEBUG - Proxy auth state: UNCHALLENGED\nnode_1  | 15:46:13.109 DEBUG - http-outgoing-2 >> POST /session/7dd6006c-a1ac-4a1f-a979-de93d2755db8/url HTTP/1.1\nnode_1  | 15:46:13.109 DEBUG - http-outgoing-2 >> Content-Type: application/json; charset=utf-8\nnode_1  | 15:46:13.109 DEBUG - http-outgoing-2 >> Content-Length: 52\nnode_1  | 15:46:13.110 DEBUG - http-outgoing-2 >> Host: localhost:11211\nnode_1  | 15:46:13.111 DEBUG - http-outgoing-2 >> Connection: Keep-Alive\nnode_1  | 15:46:13.111 DEBUG - http-outgoing-2 >> User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_121)\nnode_1  | 15:46:13.112 DEBUG - http-outgoing-2 >> Accept-Encoding: gzip,deflate\nnode_1  | 15:46:13.113 DEBUG - http-outgoing-2 >> \"POST /session/7dd6006c-a1ac-4a1f-a979-de93d2755db8/url HTTP/1.1[\\r][\\n]\"\nnode_1  | 15:46:13.114 DEBUG - http-outgoing-2 >> \"Content-Type: application/json; charset=utf-8[\\r][\\n]\"\nnode_1  | 15:46:13.114 DEBUG - http-outgoing-2 >> \"Content-Length: 52[\\r][\\n]\"\nnode_1  | 15:46:13.115 DEBUG - http-outgoing-2 >> \"Host: localhost:11211[\\r][\\n]\"\nnode_1  | 15:46:13.115 DEBUG - http-outgoing-2 >> \"Connection: Keep-Alive[\\r][\\n]\"\nnode_1  | 15:46:13.117 DEBUG - http-outgoing-2 >> \"User-Agent: Apache-HttpClient/4.5.3 (Java/1.8.0_121)[\\r][\\n]\"\nnode_1  | 15:46:13.117 DEBUG - http-outgoing-2 >> \"Accept-Encoding: gzip,deflate[\\r][\\n]\"\nnode_1  | 15:46:13.118 DEBUG - http-outgoing-2 >> \"[\\r][\\n]\"\nnode_1  | 15:46:13.118 DEBUG - http-outgoing-2 >> \"{\"url\":\"https://trends.google.com/trends/hottrends\"}\"\nnode_1  | [Parent 90] WARNING: pipe error (52): Connection reset by peer: file /home/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 346\nnode_1  | [Parent 90] WARNING: pipe error (43): Connection reset by peer: file /home/worker/workspace/build/src/ipc/chromium/src/chrome/common/ipc_channel_posix.cc, line 346\nnode_1  |\nnode_1  | ###!!! [Parent][MessageChannel] Error: (msgtype=0x2C0085,name=PBrowser::Msg_Destroy) Channel error: cannot send/recv. Well, conventional grid on Win10 (and, as reported, on Mac) did not reproduce the error. Grid on docker with this composition\nversion: \"2\"\nservices:\n hub:\n  image: selenium/hub:3.4.0-bismuth\n  ports:\n   - 4444:4444\n  environment:\n   - no_proxy=localhost\n   - GRID_TIMEOUT=60\n   - GRID_BROWSER_TIMEOUT=60\n   - GRID_DEBUG=true\n node1:\n  image: selenium/node-firefox-debug:3.4.0-bismuth\n  ports:\n    - 5900:5900\n  links:\n   - hub\n  environment:\n   - HUB_PORT_4444_TCP_ADDR=hub\n   - HUB_PORT_4444_TCP_PORT=4444\nstill fails at random point of the test.. Nothing helps, even a roll back to older versions of node. Will wait for FF54.. ",
    "radams-sgy": "Great thanks @diemol . ",
    "NeilJ247": "@elgalu I haven't tried the selenium jar on it's own but I will have a go.\n@diemol Not using docker-compose.  We run the containers using phing to run docker run commands. As for links: I have Wiremock linked to our rest API docker and the front docker is linked to the back.  Wiremock is run to proxy all requests based on the rest API container name.  I have also tried removing the docker link between the API and Wiremock and using the IP of the docker container instead but it's the same result.. @elgalu I have tried with selenium jar but the same result.  I think I know what the problem is.  I have managed to keep the browser open long enough when running the test so that I can see the cookies and the request.  When the cookie is being set it is being set for domain=localhost rather than containing the IP address of front container.. Thanks for your help.  Discovered that it is something to do with our rest API setting the domain based on default parameters.  I'll take it from there and close this as I don't believe it is an issue here.. ",
    "alistair23": "Looking at https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run it seems you don't need to either rm the packages or use apt-get clean as the base Ubuntu image will do this for you.. We don't need to use either. There is a note on that page that says\n\nNote: The official Debian and Ubuntu images automatically run apt-get clean, so explicit invocation is not required.\nSee here: https://github.com/moby/moby/blob/03e2923e42446dbb830c654d0eec323a0b4ef02a/contrib/mkimage/debootstrap#L82-L105\n\nand as the images are based on Ubuntu the rm -rf and apt-get clean are unnecessary.. I use Selenium in Docker containers by running Python scripts. I thought it might be beneficial for others to install python with selenium support in the base image.\nI imaged Selenium/Python is commonly used.. That's fair. Is there any plan on having larger more complete images or maybe specific development images in the future?. No worries.\nIs the first patch (just the upgrade) ok to be merged?. Will do!. Thanks for pointing that out. I didn't realize that updating was against the best practices. I've definitely seem it done all over the place. Thanks for letting me know.\nI'll see if there are any issues I think I can help with.. ",
    "mach6": "In  Se3, support for remoteHost in the node's config.json was removed.\nTry using host and port. ",
    "desertaxle": "That was my first approach, but I found that when I set host and port then the hub wasn't able to connect to the nodes. I think it's because port mapping that I'm using when starting the nodes (e.g. 20005:5555) and when I set port to the port number on the EC2 instance then the port inside the container also changes. If that's the case then the container would no longer be listening on 5555.\nIs that line of thinking correct?. ",
    "BruceDone": "@McSnowflake \nafter i looked deep into the source code ,if you use the -port in the SE_OPTS , the NODE_PORT in the node docker env will be replaced by this value , so if you really need to deploy the selenium grid in different machines , here is the way .\nMachine A  ip:10.10.2.38 \ndocker-compose\nhub:\n    image: selenium/hub:3.3.1\n    ports:\n      - 4444:4444\n    environment:\n      - GRID_TIMEOUT=40\nMachine B ip:10.10.2.52\nnode:\n    image: selenium/node-chrome:3.3.1\n    ports:\n          - \"5556:5556\"\n    environment:\n          - NODE_PORT=5556\n          - HUB_PORT_4444_TCP_ADDR=10.10.2.38\n          - HUB_PORT_4444_TCP_PORT=4444\n          - SE_OPTS=-host 10.10.2.52 -port 5556\nand it works well.\n. ",
    "discobean": "I am having the same issue.\nIf the selenium agents could provide a way to tell the server a host/port it is using (rather than using the provided -host and -port values), then it would solve the problem in both ECS and other docker orchestration tools.\nBy bringing back the -remoteHost or REMOTE_HOST variable this issue would be resolved.. ",
    "braindonor": "I've just hit this issue too. \nI agree with @discobean on this:  \"By bringing back the -remoteHost or REMOTE_HOST variable this issue would be resolved.\"  . I'm using Docker 1.11.2 & Selenium 3.4.0\n. apologies.  your'e correct, I posted the old script.   Here's the V3 script:\ndocker run -d -e GRID_MAX_SESSION=1 -e GRID_TIMEOUT=250000 -e GRID_UNREGISTER_IF_STILL_DOWN_AFTER=250000 -P -p $HUB_PORT:$HUB_PORT --name selenium-hub serverxxx:5000/selenium-hub:3.4.0\ndocker run -d -e \"SE_OPTS=-host $(hostname -s) -port 555${COUNT}\" -e HUB_PORT_4444_TCP_ADDR=$HUB_HOST -e HUB_PORT_4444_TCP_PORT=${HUB_PORT} -P -p 555${COUNT}:555${COUNT} --dns=10.232.217.1 --dns-search=xxxxxx.com --name selenium-ff-node-${SUFFIX}${COUNT} serverxxx:5000/selenium-ff-node:3.4.0      \n. ",
    "aairey": "I am also facing this issue on AWS ECS.\nBut it goes for any orchestration tool.\nBasicly if you want to spawn more containers (which is the docker philosophy) running firefox or chrome nodes using the same image on one or multiple docker hosts, it is not possible anymore.\nI have managed to create a separate entrypoint to set the host and port (SE_OPTS=-host $HOST -port $EXPOSED_PORT), but Selenium does not seem to like this. It reports it's host and port fine to the hub but it does not allow the hub to connect because it is actually listening on 5555.\nAnd thus you get a Connection refused.\nWe should be able to set the host:port combo towards the \"outside world\" as an ENV var again, or similar.. I need to do the same for AWS ECS. So I have custom images with custom\nentrypoint scripts based on Selenium's upstream ones.\nOn Sat, 25 Nov 2017, 09:31 McSnowflake, notifications@github.com wrote:\n\n@diemol https://github.com/diemol,\nI am actually running that in docker, but have to attach the remoteHost\nparam in the entrypoint-script because only after starting the container is\nthe actual portmapping available.\nI use rancher to spawn selenium nodes and rancher maps its ports to a\nrandom exposed port, which is only known after the container started.\nThat's why I need the remoteHost param.\nThanks again for looking into it and\nHave a great weekend,\nMcSnowflake\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/481#issuecomment-346926740,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHSjvjYFVHl1zfss6YJdFb0JLOoFYAARks5s59BFgaJpZM4NW_0h\n.\n. Sure, I got it from here: https://groups.google.com/d/msg/selenium-users/PYX1fYqNGqc/zOuFIF4JBgAJ\n\nHere is our Dockerfile for Firefox (s/firefox/chrome/ for a chrome node):\n```\nImage that runs Firefox node to connect to a Selenium Grid instance\nSee: https://groups.google.com/d/msg/selenium-users/PYX1fYqNGqc/zOuFIF4JBgAJ\nFROM docker.io/selenium/node-firefox:3.9.1\nLABEL maintainer \"Your Name email@here.plz\"\nPython is a dependency of getting the dynamicly mapped port on AWS\nRUN sudo apt-get update && \\\n    sudo apt-get install -y python python-pip socat && \\\n    sudo apt-get clean && \\\n    sudo -H pip install --upgrade pip && \\\n    sudo -H pip install boto boto3 requests datetime\nCOPY ecs-get-port-mapping.py \\\n     override_entrypoint.sh \\\n     /opt/bin/\nCMD [\"bash\", \"-x\", \"/opt/bin/override_entrypoint.sh\"]\n```\nThe override_entrypoint.sh script:\n```bash\n!/bin/sh\nset -o errexit\nset -o xtrace\nexport EC2_HOST=$(wget -O - http://169.254.169.254/latest/meta-data/local-ipv4 2> /dev/null)\nresult=\"$(python /opt/bin/ecs-get-port-mapping.py)\"\neval \"$result\"\nSelenium specifics\nexport NODE_PORT=$PORT_TCP_5555\nexport SE_OPTS=\"-host $EC2_HOST -port $PORT_TCP_5555\"\n( sudo socat TCP4-LISTEN:5555,fork TCP4:localhost:$PORT_TCP_5555 ) &\nexec /opt/bin/entry_point.sh\n```\nThe ecs-get-port-mapping.py:\n```python\nimport os\nimport boto.utils\nimport boto3\nimport requests\nimport datetime\nimport time\ndef get_contents(filename):\n    with open(filename) as f:\n        return f.read()\ndef get_ecs_introspection_url(resource):\n    # 172.17.0.1 is the docker network bridge ip\n    return 'http://172.17.0.1:51678/v1/' + resource\ndef contains_key(d, key):\n    return key in d and d[key] is not None\ndef get_local_container_info():\n    # get the docker container id\n    # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-introspection.html\n    docker_id = os.path.basename(get_contents(\"/proc/1/cpuset\")).strip()\nif docker_id is None:\n    raise Exception(\"Unable to find docker id\")\n\necs_local_task = requests.get(get_ecs_introspection_url('tasks') + '?dockerid=' + docker_id).json()\n\ntask_arn = ecs_local_task['Arn']\n\nif task_arn is None:\n    raise Exception(\"Unable to find task arn for container %s in ecs introspection api\" % docker_id)\n\necs_local_container = None\n\nif contains_key(ecs_local_task, 'Containers'):\n    for c in ecs_local_task['Containers']:\n        if c['DockerId'] == docker_id:\n            ecs_local_container = c\n\nif ecs_local_container is None:\n    raise Exception(\"Unable to find container %s in ecs introspection api\" % docker_id)\n\nreturn ecs_local_container['Name'], task_arn\n\ndef main():\nmetadata = boto.utils.get_instance_metadata()\nregion = metadata['placement']['availability-zone'][:-1]  # last char is the zone, which we don't care about\n\necs_metadata = requests.get(get_ecs_introspection_url('metadata')).json()\ncluster = ecs_metadata['Cluster']\n\ncontainer_name, task_arn = get_local_container_info()\n\n# Get the container info from ECS. This will give us the port mappings\necs = boto3.client('ecs', region_name=region)\nresponse = ecs.describe_tasks(\n    cluster=cluster,\n    tasks=[\n        task_arn,\n    ]\n)\n\ntask = None\nif contains_key(response, 'tasks'):\n    for t in response['tasks']:\n        if t['taskArn'] == task_arn:\n            task = t\n\nif task is None:\n    raise Exception(\"Unable to locate task %s\" % task_arn)\n\ncontainer = None\nif contains_key(task, 'containers'):\n    for c in task['containers']:\n        if c['name'] == container_name:\n            container = c\n\nif container is None:\n    raise Exception(\"Unable to find ecs container %s\" % container_name)\n\nif contains_key(container, 'networkBindings'):\n    for b in container['networkBindings']:\n        print(\"export PORT_%s_%d=%d;\" % (b['protocol'].upper(), b['containerPort'], b['hostPort']))\n\nif name == 'main':\n    main()\n``. Had to change'DockerId'to'DockerID'` yesterday to make it work again.\nGuess AWS changed something in their introspection API, even their own docs were not reflecting this yesterday .... ",
    "ArSn": "@aairey do you mind sharing your custom entrypoint for other poeple that have the very same problem (like me) :). ",
    "eino-makitalo": "Yes, my firefox hangs up in first page of application... then nothing happens.\nI have took template from https://github.com/Eficode/Docker-Selenium-Example\nChrome goes nice\ndocker-compose.test.yml.txt\nfirefoxHangsExample.txt\n. ",
    "mfoksinski": "@LusciousPear \nHave you been able to fix this ? I am encountering the same problem.. ",
    "lluisteamcmp": "Hi @elgalu @ddavison I see this more as an issue that could be solved by modifying the dockerfile from the base node: https://github.com/SeleniumHQ/docker-selenium/blob/master/Base/Dockerfile\nSomething to make the xdg-utils not interact in such way: https://wiki.archlinux.org/index.php/Default_applications#xdg-utils\nI will try to have a solution, but I have little knowledge on solving this type of issues.. @elgalu @ddavison I think this could be closed. This problem is more related to trying to test an intent to open an app using a desktop, simulating the mobile by the user agent.\nAlso I can reproduce the behavior of 'loosing' the driver on other environments than the docker node container.\nI will open an issue to SeleniumHQ/selenium for this strange behavior when opening this intent type URL, but I to play fair, this is more related about using the wrong tool for the test. I should move to something like Appium to do such tests.. Reported in ChromeDriver: https://bugs.chromium.org/p/chromedriver/issues/detail?id=1833. Got also the same problem and easy to reproduce in several web pages plying VR videos or 'heavy' streaming.\nPer example\n```\n        driver().get(\"http://dragons.org/\");\n        driver().findElement(By.xpath(\"//*[@id='waypoints']/div[2]/span\")).click();\n    Thread.sleep(1000);\n\n    // RemoteWebDriver does not implement the TakesScreenshot class\n    // if the driver does have the Capabilities to take a screenshot\n    // then Augmenter will add the TakesScreenshot methods to the instance\n    WebDriver augmentedDriver = new Augmenter().augment(driver());\n    File screenshot = ((TakesScreenshot)augmentedDriver).\n            getScreenshotAs(OutputType.FILE);\n\n```\nAnd I got this error:\n```\n/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 \"-javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=51162:/Applications/IntelliJ IDEA CE.app/Contents/bin\" -Dfile.encoding=UTF-8 -classpath \"/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA CE.app/Contents/plugins/testng/lib/testng-plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/tools.jar:/Users/lluiscasals/Documents/workspace/vr-sites/out/production/classes:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.teamcmp.testing/ctf/1.23.9/7e89554239497079baef83fd8e02dd4f5a2767e8/ctf-1.23.9.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/ru.yandex.qatools.allure/allure-java-annotations/1.5.2/86384c68132a1e8615663c93890ed8537cb3b290/allure-java-annotations-1.5.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/ru.yandex.qatools.allure/allure-model/1.5.2/3bc0937fea4d281cf9c4a2e89d380158388b73d7/allure-model-1.5.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/ru.yandex.qatools.allure/allure-java-adaptor-api/1.5.2/9bef2b8c254483dc01c62be63aa9e7eeb172ff01/allure-java-adaptor-api-1.5.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/2.9.0.pr4/2c1a33de6dc49785b7d2402d5010b0ba05556faa/jackson-dataformat-yaml-2.9.0.pr4.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.testng/testng/6.11/1fdd5e22f50b14f6d846163456e8c9a7657626fb/testng-6.11.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-java/3.4.0/2b8e09636cefdb164eec61534482af5e505d051e/selenium-java-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-support/3.4.0/900176a308fbf55d741a168a3beac8527caf1c1/selenium-support-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.7/8de00e382a817981b737be84cb8def687d392963/log4j-api-2.7.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.7/a3f2b4e64c61a7fc1ed8f1e5ba371933404ed98a/log4j-core-2.7.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/mysql/mysql-connector-java/5.1.36/6bb5861f44c21c775ee713a438e5bc493c095f7a/mysql-connector-java-5.1.36.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-assert-core/2.0M10/cb7c91cf614901928ae405f19d9bcdedf82781db/fest-assert-core-2.0M10.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.assertj/assertj-core/3.8.0/b209d90ff2e279bee3e02547ee7b11349c52d0e3/assertj-core-3.8.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.sun.jersey/jersey-core/1.18.1/4f97b0f85a881d3b3478f99a17df7bd258b9d626/jersey-core-1.18.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.sun.jersey/jersey-client/1.18.1/60e85d4f638fb444bcbbd9f8da83414fbdf731c3/jersey-client-1.18.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.sun.mail/javax.mail/1.5.2/ad1027a3d832bb7f34b4b9afeed760ca8eaa12f/javax.mail-1.5.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.jayway.restassured/rest-assured/2.4.0/28f5c930872ca8e9d370a9bd94e40c7ef490430a/rest-assured-2.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.jayway.restassured/json-schema-validator/2.4.0/ff088abbabd8a64f6fa0ccde4feb7195f0684f06/json-schema-validator-2.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.github.tomakehurst/wiremock/1.57/7f8dc954667412575b350105a1014c386802a521/wiremock-1.57.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/joda-time/joda-time/2.9.1/c261495d1e01df849cdb3cbc941564018f0d3539/joda-time-2.9.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.coobird/thumbnailator/0.4.8/4f10c440dd7776630aee9da4611a45032db1e041/thumbnailator-0.4.8.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.jbehave/jbehave-core/4.0.5/a7363035a2f1b4a8f5c66b31d31dffb61381c27f/jbehave-core-4.0.5.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.reflections/reflections/0.9.10/c7f4ea230aedc757ca1499ebcfb2953c81cf8b67/reflections-0.9.10.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.ullink.slack/simpleslackapi/0.5.1/f46d314311840a2596762f393d04f23e7f3724df/simpleslackapi-0.5.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/io.appium/java-client/3.3.0/f33c7bb7300be79ac772c0f8afe70ba133a41983/java-client-3.3.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/io.jsonwebtoken/jjwt/0.6.0/3c8a7897b9ca31c83d3dd364be7f75ce5cd417d7/jjwt-0.6.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/ru.yandex.qatools.ashot/ashot/1.5.2/a849cb78011c6a3cb9fa3b5812d20b1943b11615/ashot-1.5.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.j2html/j2html/0.88/b2315b59f3599496d3d3c7a55ce7273fcf2a89a8/j2html-0.88.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.jsoup/jsoup/1.9.2/5e3bda828a80c7a21dfbe2308d1755759c2fd7b4/jsoup-1.9.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.jvnet.jaxb2_commons/jaxb2-basics-runtime/0.9.3/e8f242550bb0e85333cd22fe09e4e60f184c7332/jaxb2-basics-runtime-0.9.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/ru.qatools.commons/properties/2.0.RC5/9c90f0e4211aedcc39c18cd77b2268ddb6563bad/properties-2.0.RC5.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.12/8e20852d05222dc286bf1c71d78d0531e177c317/slf4j-api-1.7.12.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.tika/tika-core/1.7/ee92c1d9deb07e85198fe2ff69926a7a1ce068d6/tika-core-1.7.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.17/7a27ea250c5130b2922b86dea63cbb1cc10a660c/snakeyaml-1.17.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.9.0.pr4/565544a9badb22e546e23bd07765e30fa2cb1065/jackson-core-2.9.0.pr4.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.beust/jcommander/1.64/456a985ac9b12d34820e4d5de063b2c2fc43ed5a/jcommander-1.64.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-api/3.4.0/bf91d238e6eb07f8496ccb61e12e2c868d2bc7e9/selenium-api-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-chrome-driver/3.4.0/5a3533c1ec2ba883beb0314dacf7ff932163a4ef/selenium-chrome-driver-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-edge-driver/3.4.0/cbccda6be9f86ec1ae0c79f94cdb4e2615e6c107/selenium-edge-driver-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-firefox-driver/3.4.0/d88e50771a0c978502dfdf770d3192c7643928eb/selenium-firefox-driver-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-ie-driver/3.4.0/fdce0dc1cbdcd93d1b5b2e9054285160bed0a027/selenium-ie-driver-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-opera-driver/3.4.0/35a04998f67c920a2d274c73f4a27018f7d640e6/selenium-opera-driver-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-remote-driver/3.4.0/2593094fccb4f0317e211674ebfc22fb049c043a/selenium-remote-driver-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/selenium-safari-driver/3.4.0/75f8302d3f6274af5c9580ea194d4df19bb4a363/selenium-safari-driver-3.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/cglib/cglib-nodep/3.2.4/42c972dee25a436b32c6027e848287ff47ed6750/cglib-nodep-3.2.4.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-exec/1.3/8dfb9facd0830a27b1b5f29f84593f0aeee7773b/commons-exec-1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.10/4b95f4897fa13f2cd904aee711aeafc0c5295cd8/commons-codec-1.10.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/2.5/2852e6e05fbb95076fc091f6d1780f1f8fe35e0f/commons-io-2.5.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.2/4bfc12adfe4842bf07b657f0369c4cb522955686/commons-logging-1.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.w3c.css/sac/1.3/cdb2dcb4e22b83d6b32b93095f644c3462739e82/sac-1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.sourceforge.cssparser/cssparser/0.9.22/3200e4091f08f78bed01350dbc1e200068f7f162/cssparser-0.9.22.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.google.code.gson/gson/2.8.0/c4ba5371a29ac9b2ad6129b1d39ea38750043eff/gson-2.8.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/21.0/3a3d111be1be1b745edfa7d91678a12d7ed38709/guava-21.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.sourceforge.htmlunit/htmlunit/2.26/756789277013723c354dcf9a09740d418874afc0/htmlunit-2.26.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.sourceforge.htmlunit/htmlunit-core-js/2.26/cd4cc09378ab2eaa2757c9b1203e29af1cffe880/htmlunit-core-js-2.26.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.sourceforge.htmlunit/neko-htmlunit/2.25/7bcd512ace3baedd5d0abc159cfd57cfb3026c83/neko-htmlunit-2.25.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.3/d1577ae15f01ef5438c5afc62162457c00a34713/httpclient-4.5.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.6/e3fd8ced1f52c7574af952e2e6da0df8df08eb82/httpcore-4.4.6.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpmime/4.5.3/889fd6d061bb63b99dd5c6aba35a555ae863de52/httpmime-4.5.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.java.dev.jna/jna/4.1.0/1c12d070e602efd8021891cdd7fd18bc129372d4/jna-4.1.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.java.dev.jna/jna-platform/4.1.0/23457ad1cf75c2c16763330de5565a0e67b4bc0a/jna-platform-4.1.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.codeborne/phantomjsdriver/1.4.0/333f3289207a970c9a97308df9d5ac0880e12aa8/phantomjsdriver-1.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.seleniumhq.selenium/htmlunit-driver/2.26/ead9f974e6f8b42ae01452e7dc08335ca5ac4797/htmlunit-driver-2.26.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/javax.servlet/javax.servlet-api/3.1.0/3cd63d075497751784b2fa84be59432f4905bf7c/javax.servlet-api-3.1.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty.websocket/websocket-api/9.4.3.v20170317/d0f1fd89dc19e773334ad2fcfda2bb0eadf993f6/websocket-api-9.4.3.v20170317.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty.websocket/websocket-client/9.4.3.v20170317/8d7a6d6ddb477bc2962936373503daf07b79f9ed/websocket-client-9.4.3.v20170317.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty.websocket/websocket-common/9.4.3.v20170317/e987016d0fbe3fa46a0c969d143e25a10eb16249/websocket-common-9.4.3.v20170317.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/xalan/serializer/2.7.2/24247f3bb052ee068971393bdb83e04512bb1c3c/serializer-2.7.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/xalan/xalan/2.7.2/d55d3f02a56ec4c25695fe67e1334ff8c2ecea23/xalan-2.7.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/xerces/xercesImpl/2.11.0/9bb329db1cfc4e22462c9d6b43a8432f5850e92c/xercesImpl-2.11.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/xml-apis/xml-apis/1.4.01/3789d9fada2d3d458c4ba2de349d48780f381ee3/xml-apis-1.4.01.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.easytesting/fest-util/1.2.5/c4a8d7305b23b8d043be12c979813b096df11f44/fest-util-1.2.5.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/javax.activation/activation/1.1/e6cb541461c2834bdea3eb920f1884d1eb508b50/activation-1.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy/2.3.7/7f861930f522cdceb7dbe0e2ff554b2483d96c91/groovy-2.3.7.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy-xml/2.3.7/a00f2de26e6447ad3a82319974936be06d72b6e/groovy-xml-2.3.7.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-library/1.3/4785a3c21320980282f9f33d0d1264a69040538f/hamcrest-library-1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.ccil.cowan.tagsoup/tagsoup/1.2.1/5584627487e984c03456266d3f8802eb85a9ce97/tagsoup-1.2.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.jayway.restassured/json-path/2.4.0/8a8215a4398f7398d21cb70b2b7d64445b705c8c/json-path-2.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.jayway.restassured/xml-path/2.4.0/5589df4e51553a4c439408a1ef285927a78b3aaf/xml-path-2.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.github.fge/json-schema-validator/2.2.5/6920bf9735d66f1da4493be0eae75cf855d0e56b/json-schema-validator-2.2.5.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/jetty/6.1.26/2f546e289fddd5b1fab1d4199fbb6e9ef43ee4b0/jetty-6.1.26.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.skyscreamer/jsonassert/1.2.3/2cb01fdff70caf688561d877cea55451ab164527/jsonassert-1.2.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.sf.jopt-simple/jopt-simple/4.9/ee9e9eaa0a35360dcfeac129ff4923215fd65904/jopt-simple-4.9.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/xmlunit/xmlunit/1.6/adcae0aff916681dacd2b490e193f1119cd964a9/xmlunit-1.6.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/0.8.1/fbcad75a02160def33c4359b24015cca2d91ccce/json-path-0.8.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.6.0/d2e494b027c26edc4d4e7e9251e168e6af26d2d3/jackson-databind-2.6.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.6.0/a0990e2e812ac6639b6ce955c91b13228500476e/jackson-annotations-2.6.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-integration/1.3/5de0c73fef18917cd85d0ab70bb23818685e4dfd/hamcrest-integration-1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-collections/commons-collections/3.2.1/761ea405b9b37ced573d2df0d1e3a4e0f9edc668/commons-collections-3.2.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-lang/commons-lang/2.6/ce1edb914c94ebc388f086c6827e8bdeec71ac2/commons-lang-2.6.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.codehaus.plexus/plexus-utils/3.0.10/65e6460a49460d2ca038f8644ff9ae6d878733b8/plexus-utils-3.0.10.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.freemarker/freemarker/2.3.20/5ad6bea46b5af666d88c260c8acc6a03408723c8/freemarker-2.3.20.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.thoughtworks.paranamer/paranamer/2.4/af1cfb89b2d528fc083e1128cb1a6b67c755749c/paranamer-2.4.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.thoughtworks.xstream/xstream/1.4.7/bce3282142b63068260f021fcbe48b72e8d71a1a/xstream-1.4.7.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.javassist/javassist/3.18.2-GA/1180a90fbad732b60fb728a6bbe8fcb3151423d7/javassist-3.18.2-GA.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/annotations/2.0.1/9ef6656259841cebfb9fb0697bb122ada4485498/annotations-2.0.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.glassfish.tyrus.bundles/tyrus-standalone-client/1.8.3/3f33fcf4320d4389bc9d3efaad6133df055071f5/tyrus-standalone-client-1.8.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1.1/c9ad4a0850ab676c5c64461a05ca524cdfff59f1/json-simple-1.1.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.1.3/d90276fff414f06cb375f2057f6778cd63c6082f/logback-classic-1.1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.threeten/threetenbp/1.3.1/5769e9c27cd5ba74cd3a73785dde0bbb5a2d3c0d/threetenbp-1.3.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/cglib/cglib/3.1/1f1cb6c7a7479e0c7fd7987109e503914bebe84a/cglib-3.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-validator/commons-validator/1.4.1/2231238e391057a53f92bde5bbc588622c1956c3/commons-validator-1.4.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-all/1.3/63a21ebc981131004ad02e0434e799fd7f3a8d5a/hamcrest-all-1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.googlecode.lambdaj/lambdaj/2.3.3/7dee2fb62ef89f1bd5ccaf3c8628f61f80b22054/lambdaj-2.3.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy-json/2.3.7/d1130edf2cd7661bd17fbf8846a9ce644b2b801d/groovy-json-2.3.7.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.jayway.restassured/rest-assured-common/2.4.0/93da59990c670fd494b1084f0f506c5db32cd347/rest-assured-common-2.4.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.github.fge/json-schema-core/1.2.4/579a8cd806ab23e0593e4c9bae4df30c99a6da23/json-schema-core-1.2.4.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.googlecode.libphonenumber/libphonenumber/6.0/64ab017d97b44eafa7a149bbd8dddfdf967b40de/libphonenumber-6.0.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/javax.mail/mailapi/1.4.3/124600e35d9031da50e5f67661ffa741541f8f6a/mailapi-1.4.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/2.0.1/516c03b21d50a644d538de0f0369c620989cd8f0/jsr305-2.0.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/jetty-util/6.1.26/e5642fe0399814e1687d55a3862aa5a3417226a9/jetty-util-6.1.26.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/servlet-api/2.5-20081211/22bff70037e1e6fa7e6413149489552ee2064702/servlet-api-2.5-20081211.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.json/json/20090211/c183aa3a2a6250293808bba12262c8920ce5a51c/json-20090211.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/1.1.1/24a2f903d25e004de30ac602c5b47f2d4e420a59/json-smart-1.1.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/xmlpull/xmlpull/1.1.3.1/2b8e230d2ab644e4ecaa94db7cdedbc40c805dfa/xmlpull-1.1.3.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/xpp3/xpp3_min/1.1.4c/19d4e90b43059058f6e056f794f0ea4030d60b86/xpp3_min-1.1.4c.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.1.3/e3c02049f2dbbc764681b40094ecf0dcbc99b157/logback-core-1.1.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.ow2.asm/asm/4.2/4b2c12b92dd045aeabf5b2aeeb3220bf010da9d4/asm-4.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-beanutils/commons-beanutils/1.8.3/686ef3410bcf4ab8ce7fd0b899e832aaba5facf7/commons-beanutils-1.8.3.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/commons-digester/commons-digester/1.8.1/3dec9b9c7ea9342d4dbe8c38560080d85b44a015/commons-digester-1.8.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/1.2/bfcb0539a071a4c5a30690388903ac48c0667f2a/objenesis-1.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.github.fge/uri-template/0.9/ab1ad5804d3c7d640f21059085df5be340e97929/uri-template-0.9.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.github.fge/jackson-coreutils/1.8/491a6e1130a180c153df9f2b7aabd7a700282c67/jackson-coreutils-1.8.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.mozilla/rhino/1.7R4/e982f2136574b9a423186fbaeaaa98dc3e5a5288/rhino-1.7R4.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.github.fge/msg-simple/1.1/f261263e13dd4cfa93cc6b83f1f58f619097a2c4/msg-simple-1.1.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/com.github.fge/btf/1.2/9e66651022eb86301b348d57e6f59459effc343b/btf-1.2.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-lang3/3.5/6c6c702c89bfff3cd9e80b04d668c5e190d588c6/commons-lang3-3.5.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-client/9.4.3.v20170317/7e8ca5acbd6e1b93e326c54758cdc6190d0fa944/jetty-client-9.4.3.v20170317.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-http/9.4.3.v20170317/8f73fbfaabb3a3b2d5b3a2ddad15c19c7f00a876/jetty-http-9.4.3.v20170317.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-util/9.4.3.v20170317/1d3299563053e2290338e22db693a8d442e7fb25/jetty-util-9.4.3.v20170317.jar:/Users/lluiscasals/.gradle/caches/modules-2/files-2.1/org.eclipse.jetty/jetty-io/9.4.3.v20170317/c2b20cfd32d74e74c030c0b77fa64d01434f2e3/jetty-io-9.4.3.v20170317.jar:/Applications/IntelliJ IDEA CE.app/Contents/plugins/testng/lib/jcommander.jar\" org.testng.RemoteTestNGStarter -usedefaultlisteners false -socket51161 @w@/private/var/folders/ky/5syn16f90zncpxb0xs3795jc0000gn/T/idea_working_dirs_testng.tmp -temp /private/var/folders/ky/5syn16f90zncpxb0xs3795jc0000gn/T/idea_testng.tmp\nobjc[2797]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/bin/java (0x10a17e4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10c1f14e0). One of the two will be used. Which one is undefined.\norg.openqa.selenium.WebDriverException: unknown error: session deleted because of page crash\nfrom tab crashed\n  (Session info: chrome=59.0.3071.115)\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 4.9.41-moby x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 57 milliseconds\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: 'e1a9d6bd7543', ip: '172.17.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.41-moby', java.version: '1.8.0_131'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57), userDataDir=/tmp/.org.chromium.Chromium.3HWtKl}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=59.0.3071.115, platform=LINUX, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]\nSession ID: e449217220ad967ed17b2d9db2c0fdc4\nCommand duration or timeout: 77 milliseconds\nat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\nat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\nat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\nat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\nat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)\nat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)\nat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671)\nat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:694)\nat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:382)\nat com.cmp.testing.core.webdriver.CmpWebDriver.getScreenshotAs(CmpWebDriver.java:110)\nat com.cmp.testing.test.badoinkVR.myTestClass.myTest(myTestClass.java:29)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)\nat org.testng.internal.Invoker.invokeMethod(Invoker.java:661)\nat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)\nat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)\nat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)\nat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\nat org.testng.TestRunner.privateRun(TestRunner.java:744)\nat org.testng.TestRunner.run(TestRunner.java:602)\nat org.testng.SuiteRunner.runTest(SuiteRunner.java:380)\nat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)\nat org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)\nat org.testng.SuiteRunner.run(SuiteRunner.java:289)\nat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\nat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\nat org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)\nat org.testng.TestNG.runSuitesLocally(TestNG.java:1226)\nat org.testng.TestNG.runSuites(TestNG.java:1144)\nat org.testng.TestNG.run(TestNG.java:1115)\nat org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\nat org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)\n\nCaused by: org.openqa.selenium.WebDriverException: unknown error: session deleted because of page crash\nfrom tab crashed\n  (Session info: chrome=59.0.3071.115)\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 4.9.41-moby x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 57 milliseconds\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: 'e1a9d6bd7543', ip: '172.17.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.41-moby', java.version: '1.8.0_131'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57), userDataDir=/tmp/.org.chromium.Chromium.3HWtKl}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=59.0.3071.115, platform=LINUX, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]\nSession ID: e449217220ad967ed17b2d9db2c0fdc4\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: 'Lluiss-iMac.local', ip: '192.168.20.208', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_131'\nDriver info: driver.version: RemoteWebDriver\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)\n    at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)\n    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671)\n    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:694)\n    at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:382)\n    at org.openqa.selenium.remote.server.handler.CaptureScreenshot.call(CaptureScreenshot.java:36)\n    at org.openqa.selenium.remote.server.handler.CaptureScreenshot.call(CaptureScreenshot.java:26)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:748)\n13:08:38,066[main]  INFO myTestClass-myTest:130 - END: Method.myTest\n===============================================\nDefault Suite\nTotal tests run: 1, Failures: 1, Skips: 0\n===============================================\nProcess finished with exit code 0\n```\nHope it helps to find a solution.. ",
    "dmitrygusev": "Here's the output from version 3.4.0-bismuth:\nappending selenium options: -firefoxProfileTemplate /data/build/test/conf/ff_profile_template_filtered\n/opt/bin/entry_point.sh: line 27: : command not found\nWaiting xvfb...\nException in thread \"main\" com.beust.jcommander.ParameterException: Unknown option: -firefoxProfileTemplate\n    at com.beust.jcommander.JCommander.parseValues(JCommander.java:742)\n    at com.beust.jcommander.JCommander.parse(JCommander.java:282)\n    at com.beust.jcommander.JCommander.parse(JCommander.java:265)\n    at com.beust.jcommander.JCommander.<init>(JCommander.java:210)\n    at org.openqa.grid.selenium.GridLauncherV3$1.setConfiguration(GridLauncherV3.java:227)\n    at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:155)\n    at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:75)\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nWaiting xvfb...\nAs I understand it isn't possible to use the same -firefoxProfileTemplate flag for custom SSL certificates.\nMy test suite uses Selenium RC that's been deprecated if I understand this right, and in order to use Selenium 3 I need to migrate everything to WebDriver, right? I'd like to avoid that at the moment, if possible.. You can see the linked commit above that fixes the issue.\nProblem was in a space contained in the value of SE_OPTS and it wasn't properly quoted when the script tried to compose its definition, i.e.:\nSE_OPTS=-firefoxProfileTemplate /data/build/test/conf/ff_profile_template_filtered\nThat was already fixed in the master branch so I took the quote-fix from there, but it has another issue on this line:\n\"$(for E in $(grep -vxFf asseluser asroot); do echo $E=\"'${!E}'\" >> ~seluser/selenv; done)\" \\\n\nit fails with this error:\n/opt/bin/entry_point.sh: line 26: : command not found\n\nAs I understand the for loop shouldn't be enclosed by the $() operator, as it doesn't return anything hence nothing to evaluate.\n@ddavison not sure where should I target the fix? Is it possible to get a release with a fix based on the 2.53.1-beryllium branch?. ",
    "arvinder06": "@diemol Thanks a lot for your reply.\nI have installed Docker toolbox for Windows from docker's official site. I am running this in office (behind corporate  proxy). \nThe IP adddress I am using to see grid console is actually the IP address of Selemium Hub container which I got from Kitemetic after running the selenium containers (Hub and node) using below commands on docker:\nHub\ndocker run -d -p 5000:4444 --name selenium-hub -P selenium/hub:2.53.1\nNode\ndocker run -d --link selenium-hub:hub -P --name chrome selenium/node-chrome-debug:2.53.1\nUsing localhost for grid show below problem:\n\nAlso, using VNC, I can see the chrome browser is opening in Node but google.com or any other website is not opening. Therefore, instead of successful setup, I believe there is still a gap somewhere which I need to fix.\nPlease suggest.. Windows 7. Yup, I tried this also. This shows Connection Refused, as in screenshot above.. @diemol \nThanks again for your reply. The problem is when I am opening Kitematic, below error:\n\n. Ok, thanks Guys. I will do more research on this and will post the solution here if find anything. Thanks again for your time. :). ",
    "0xC4N1": "\nDoes someone knows which was the last version of Firefox & Selenium that this worked?\nI guess Selenium 2 & FF 47\n\nConfirmed. Works with Selenium 2.53.1 and FF 47.0.1. ",
    "pmryhlotskyi": "Code which calls webdriver (Scala)\n```scala\nobject FirefoxBrowserDriver extends BrowserDriver {\n  var profile: FirefoxProfile = new FirefoxProfile()\n  profile.setAssumeUntrustedCertificateIssuer(false)\n  profile.setPreference(\"browser.cache.disk.enable\", false)\n  profile.setPreference(\"browser.cache.memory.enable\", false)\n  profile.setPreference(\"browser.cache.offline.enable\", false)\n  profile.setPreference(\"network.http.use-cache\", false)\n  profile.setPreference(\"toolkit.startup.max_resumed_crashes\", \"-1\")\n  lazy val capabilities: DesiredCapabilities = DesiredCapabilities.firefox()\n  capabilities.setCapability(FirefoxDriver.PROFILE, profile)\n  capabilities.setCapability(\"gecko\", true)\n  def getWebDriver(remote_driver: String): WebDriver = {\n    new RemoteWebDriver(new URL(remote_driver), capabilities)\n  }\ntrait BrowserSetupTeardown extends BeforeAndAfterEach with WebBrowser with BrowserSessionInit with LazyLogging { this: Suite  =>\n  implicit var webDriver: WebDriver = \n  var reporter: AllureReporter = \n  var config: IntegriCheckConfig = _\noverride def beforeEach()\n  {\n    setUp()\n    super.beforeEach()\n  }\noverride def afterEach()\n  {\n    tearDown()\n  }\ndef setUp(): Unit = {\n    ...\n    webDriver = getBrowser\n    implicitlyWait(Span(120, Seconds))\n    webDriver.manage().window().maximize()\n    config = DataLoader.loadIntegriCheckConfig.right.get\n  }\ndef tearDown(): Unit = {\n    close()\n    quit()\n  }\n}\n```. @elgalu. This SIGSEGV error is related to the Firefox (plugin container). See here. Any updates, guys?. ",
    "Temp12d": "Hi \nI am getting below webdriver exception  on firefox browser \norg.openqa.selenium.WebDriverException: Tried to run command without establishing a connection\nBuild info: version: 'unknown', revision: '1969d75', time: '2016-10-18 09:43:45 -0700'\nSystem info: host: 'egain1210', ip: '10.10.54.104', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_151'\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities [{rotatable=false, raisesAccessibilityExceptions=false, marionette=true, firefoxOptions={args=[], prefs={}}, appBuildId=20160623154057, version=, platform=XP, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, browserVersion=47.0.1, platformVersion=10.0, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}]\nSession ID: e89fddda-010f-4f5b-a1f7-ecbbae9f5c22\n*** Element info: {Using=xpath, value=//span[text()='print']}\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n    at java.lang.reflect.Constructor.newInstance(Unknown Source)\n    at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:127)\n    at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:93)\n    at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:42)\n    at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)\n    at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)\n    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)\n    at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\n    at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)\n    at org.openqa.selenium.By$ByXPath.findElement(By.java:361)\n    at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\n    at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\n    at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\n    at com.sun.proxy.$Proxy12.toString(Unknown Source)\n    at com.egain.framework.BasePageObjects.click(BasePageObjects.java:469)\n    at com.egain.pageobjects.base.ee.AlbertArticlePage.performArticlePrintOperation(AlbertArticlePage.java:39)\n    at com.egain.tests.ee.temp.testEE08_ArticleHeaderToolOperations(temp.java:115)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\n    at org.testng.TestRunner.privateRun(TestRunner.java:756)\n    at org.testng.TestRunner.run(TestRunner.java:610)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:289)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1289)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)\n    at org.testng.TestNG.runSuites(TestNG.java:1133)\n    at org.testng.TestNG.run(TestNG.java:1104)\n    at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)\n    at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)\n    at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)\nPlease help me to resolve this\n. ",
    "guoper59": "I have also the same problem,\nlastest version of Firefox, Selenium, geckodriver, java and cucumber and after the first test, \ndoing findElement or isDisplayed functions then Firefox crash, simply dies. and get that WebDriverException establish connection.. ",
    "oanabotezat": "I had this problem and solved it by allocating more RAM to the container running the geckodriver.. ",
    "vasikarla": "@ddavison : done, kindly review and merge please. ",
    "jconroy": "thanks @ddavison I'm going to keep digging as well, greatly appreciate the extra brain cycles.\n\nUpdate - another day poking around - sadly nothing new to add. I tried the setup on a different server just in case and got the same results.. @jesg or @Vitallium have either of you come across timeout issues with phantomjs in grid configuration?. thanks for the thinking @jesg !\n\nyou might be running into a memory issue when running phantomjs for a long period of time.\n\nI'm not totally sure its that here - in all of my debugging above phantomjs has been up for less than a minute - I've been firing it up and then testing, all my tests in total only go for 2-3min. Aside - I've actually been surprised how long I can keep phantomjs up and up running (days, usually weeks without too many issues).\n\nimo it's best to start up a fresh phantomjs instance per test. phantomjs has fast startup performance so there shouldn't be much difference\n\nOk I'll look into some approaches for this, thanks for the tip.\n. ",
    "jesg": "\nFrom what I understand this is coming from the hub and not the node?\n\ncorrect it is from the hub.  ghostdriver does not implement timeout\nimo it's best to start up a fresh phantomjs instance per test.  phantomjs has fast startup performance so there shouldn't be much difference.  @jconroy you might be running into a memory issue when running phantomjs for a long period of time.. ",
    "ycwdaaaa": "@ddavison I use 4 nodes and 4 browsers per node.  below is my docker-compile file\nhub:\n  image: selenium/hub:3.2.0\n  ports:\n    - 4444:4444\n  environment:\n    - GRID_TIMEOUT=0\n    - GRID_THROW_ON_CAPABILITY_NOT_PRESENT=true\n    - GRID_NEW_SESSION_WAIT_TIMEOUT=-1\n    - GRID_BROWSER_TIMEOUT=15000\n    - GRID_TIMEOUT=30000\n    - GRID_CLEAN_UP_CYCLE=30000\nchrome1:\n  image: chrome_test\n  container_name: chrome_test_1\n  environment:\n    - NODE_MAX_INSTANCES=5\n    - NODE_MAX_SESSION=5\n    - NODE_REGISTER_CYCLE=5000\n    - DBUS_SESSION_BUS_ADDRESS=/dev/null\n  volumes:\n    - /dev/shm:/dev/shm\n  links:\n    - hub\nchrome2:\n  image: chrome_test\n  container_name: chrome_test_2\n  environment:\n    - NODE_MAX_INSTANCES=5\n    - NODE_MAX_SESSION=5\n    - NODE_REGISTER_CYCLE=5000\n    - DBUS_SESSION_BUS_ADDRESS=/dev/null\n  volumes:\n    - /dev/shm:/dev/shm\n  links:\n    - hub\nchrome3:\n  image: chrome_test\n  container_name: chrome_test_3\n  environment:\n    - NODE_MAX_INSTANCES=5\n    - NODE_MAX_SESSION=5\n    - NODE_REGISTER_CYCLE=5000\n    - DBUS_SESSION_BUS_ADDRESS=/dev/null\n  volumes:\n    - /dev/shm:/dev/shm\n  links:\n    - hub\nchrome4:\n  image: chrome_test\n  container_name: chrome_test_4\n  environment:\n    - NODE_MAX_INSTANCES=5\n    - NODE_MAX_SESSION=5\n    - NODE_REGISTER_CYCLE=5000\n    - DBUS_SESSION_BUS_ADDRESS=/dev/null\n  volumes:\n    - /dev/shm:/dev/shm\n  links:\n    - hub. ",
    "saharshsingh": "I reverted my container versions back to 2.53.0, and the expected behavior can be achieved via the following command:\ndocker run -d --restart unless-stopped -e HUB_PORT_4444_TCP_ADDR=1.2.3.4 -e HUB_PORT_4444_TCP_PORT=4444 -e REMOTE_HOST=\"http://1.2.3.4:5556\" -p 5556:5555 --name selenium-chrome-node selenium/node-chrome:2.53.0\nSeems like something that was working in 2.x.x (using REMOTE_HOST) is no longer working in 3.x.x (using SE_OPTS). This makes it very hard to have a Selenium Grid setup spread across multiple machines.. Thanks tparikka!\nI see the -e NODE_PORT=5556 -p 5556:5556 part is what I was missing.\nClosing this issue.. ",
    "Remi-p": "My bad I thought the warning was for local modifications...\nShould I rebase the two commits together or is it OK ?. Hey ! Sorry to bother you, but should I do another modification ? I say that because of the awaiting-external-changes label.\nThanks for your reply !. No problem!. It was for correcting a permission problem (see Permission denied issue when starting node-chrome pod). But you're right this way it breaks the use of environment variables.\nA solution might be to generate the config file at build time, like it is done here, and regenerate it at run time ? As it is done with the Hub. This way, people having permissions problems will have a default configuration, and the ones wanting to customize the variables will have the opportunity.. Hi,\nI don't know if this information is important, but :\nUsing OpenShift I had the same issue, with versions :\nselenium/hub:3.4.0-dysprosium\n/opt/bin/entry_point.sh: line 6: /opt/selenium/config.json: Permission denied\nstarting selenium hub with configuration:\n{\n  \"host\": null,\n  \"port\": 4444,\n  \"role\": \"hub\",\n  \"maxSession\": ,\n  \"newSessionWaitTimeout\": ,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": ,\n  \"jettyMaxThreads\": ,\n  \"cleanUpCycle\": ,\n  \"browserTimeout\": ,\n  \"timeout\": ,\n  \"debug\":\n}\nException in thread \"main\" org.openqa.grid.common.exception.GridConfigurationException: Wrong format for the JSON input : com.google.gson.stream.MalformedJsonException: Unexpected value at line 1 column 65 path $.maxSession\n[...]\nselenium/hub:3.4.0-einsteinium\nopt/bin/entry_point.sh: line 6: /opt/selenium/config.json: Permission denied\nException in thread \"main\" org.openqa.grid.common.exception.GridConfigurationException: Wrong format for the JSON input : com.google.gson.stream.MalformedJsonException: Unexpected value at line 1 column 65 path $.maxSession\n[...]\nSo I rolled back to selenium/hub:3.4.0-chromium, which works with my OpenShift instance (even though the permission denied error is still here). @testphreak Hi,\nThe first commit I made (0dd193a) was to move the config generation from the entry_point.sh (called at run) to the dockerfiles (used at build). I made that because some of us, using openshift, had files permissions problems.\nWhen I realized generating the configuration at run time was used to pass environment variables, I restored the lines from all the entry_point.sh (7c31de1). If you do a git diff between my last commit, and a commit just before my first, the files entry_point.sh are not modified : git diff bf36a08 7c31de1\nAt the end of the day, what I made was adding a config generation inside the dockerfiles, so that a default configuration file is already inside the docker image.\nOne error I can think of is that the default configuration file cannot be modifyed by entry_point.sh. But I guess it should have raised an error during the tests, when the images were deployed...\nAnd also I don't know if Docker Hub follows the tags in GitHub, but 7c31de1 doesn't seems to be in 3.5.3-astatine yet : https://github.com/SeleniumHQ/docker-selenium/commits/3.5.3-astatine. Before the commit 0dd193a (Moving config generation in docker files) the line was here.\nI believe that it's because NodeBase is not runned directly, it's used in other images that have generate_config.\n\nFor instance for Chrome.\nIn NodeBase Dockerfile.txt, the entry point is set :\nCMD [\"/opt/bin/entry_point.sh\"]\nIt calls entry_point.sh which calls for generate_config.\nIn NodeChrome Dockerfile.txt, the generate_config file is copyied inside the image, before the entrypoint is called :\nCOPY generate_config /opt/bin/generate_config\nSo when the image is launched, the entrypoint is called, and it can generate the config because generate_config is in the image.. I think they should both exist.\nThe RUN directive would create a default configuration file, and the generate_config from the entry_point.sh will allow to customize environment variables.\nThis is actually done for the hub : Hub/Dockerfile#L39 & Hub/entry_point.sh#L6. ",
    "thibaut-sticky": "Works perfectly. :)\nCan we imagine an update of the Readme?. Perfect, thx!. ",
    "daposy": "@tparikka Thanks. It looks like the exact issue I'm getting. Interestingly though, my issue with just one container running at a time. I have Jenkins managing the docker container and it prevents executing tests in parallel.\nFrom the comments, it looks like a potential solution is to run docker in a linux VM? I'm not opposed to using a VM or other machine, I just want the Docker containers to be reliable.. ",
    "im-n1": "Thank you for your response.\nThe Selenium part in my docker-compose.yql is pretty simple:\nyml\n    selenium:\n        image: selenium/standalone-chrome\n        container_name: selenium\n        networks:\n            - richy\nI run my app with docker-compose up\n@pastebin\nI did it on purpose because the stacktrace is \"wide\" and if you paste it to github issue which is like 500px wide it gets shrinked and pretty much unreadable. I guess pastebin is quite stable service and I chose expiration \"never\".. Later this week I will try to rewrite my code to terminate and re-setup browser after each URL. I will report the result.\nBTW: any updates?. Hey guys,\nI've tried to quit browser instance after each URL and it seem like it's working - no more terminations. I guess it was memory issue but who knows. So browser.quit() after you are done does the thick.. ",
    "psiedlinski": "Just a comment - I am facing similar issue using java (I bet this is a browser issue). Simple code like driver.getElement(...).click() causes the browser to crash. (selenium hub - chrome node on aws ec2 instance). \nIt works perfectly fine on my local and on firefox.. ",
    "alxlu": "Sure! I'm running my tests with webdriver.io, and just navigating to it using\njavascript\nbrowser.url(`${URL}/upload`);\n// URL is passed in as an env variable--in this case pointing to\n// http://docker.for.mac.localhost:8080\nAlso, the issue can be reproduced by using the config below, VNCing into them, and then manually navigating to the uri.\ndocker-compose.yml\nyaml\nselenium-hub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\nchrome:\n    image: selenium/node-chrome-debug\n    ports:\n      - \"9000:5900\"\n    links:\n      - selenium-hub:hub\nfirefox:\n    image: selenium/node-firefox-debug\n    ports:\n      - \"9001:5900\"\n    links:\n      - selenium-hub:hub\nYou can start any kind local web server on the host (e.g. python -m SimpleHTTPServer) in any directory, then VNC into both the Firefox and Chrome containers and launch their respective browsers and manually navigate them to http://docker.for.mac.localhost:8000\nFirefox navigates to it properly, but Chrome does not\n\n. That's a template literal, but the issue isn't with JS since it can't navigate there even if you VNC in and manually enter the address.\nSorry if I was a little unclear\u20148080 is from my project, but I figured it would be easier to reproduce the problem by spinning up the docker containers, and creating any kind of local web server and manually navigating to the address. The screenshots are from running python -m SimpleHTTPServer which defaults to 8000.\n. Oh, I meant Chrome can't navigate there even if you VNC in there manually. However, Firefox can. Also, other tools within the Chrome container are able to such as wget. \nEDIT\u2014I just realized what you meant (and I think we're on the same page). To clarify: you CAN attempt to navigate there in VNC, but it WON'T load in Chrome.\n\n. ",
    "jedwards1211": "@diemol I tried 192.168.65.1 and Chrome complains that \"There is no internet connection\" even though Firefox connects to that IP just fine.. Nevermind, I forgot that a program I'm running called Freedom messes up networking for some Docker images.. ",
    "u007": "i have the same issue, firefox works, but not chrome.\ni did not have any kind of custom network except running local dns that resolved to cloudflare dns 1.1.1.1\n. ",
    "ezesculli": "On our production environment, we're not restarting docker instances, should we do that?\nWhat docker images do you recommend for high throughput on production environment?\nWe're running 3 or 4 instances of Chrome browsers at the same time on a 8GB docker instance. But after a few days, it shows the described behaviour (memory leaks) . ",
    "philippe-granet": "\nwell, the ideal setup would be to spin up a container whenever you're running a test.\nTest Startup -> Node Startup -> Node running test -> Node report result -> Node shutdown.\n\nYou can take a look at this project, an On-demand Grid prototype that spins off Docker based nodes on a \"ask basis\" : https://github.com/RationaleEmotions/just-ask. ",
    "ericrange": "is this bug still relevant?\nafter 1 hours of endless looping (and correct .quit() and .close())\nmy cpu and ram cache explodes.\nis this a known bug?\n\nthis remains forever. no going to be better..... the ram is not the problem. the cpu takes 100% and the whole process stuck.\nthe first 60 minutes, all is good (event with the low spec) and then something happens with the cache management.. i do not know where to put this. i found so many threads in stackoverflow, etc. where people complain about memory and cpu leaks but no single answer or fix so far.. ",
    "vijayrcse": "No , its not aabout Selenium grid publicy on AWS. I have my hub and node docker container running in ec2 instance( Amazon llinux). I have trying to use the vncviewer command from ./bin/vnvviewer.\nI downloaded the vnc viewer binary from realvnc and placed in path\nBut when i start the vncviwer from my amazon linux ec2 instance , connectting to the port where vnc server is exposed by node image, it could not connect. Getting the below error\n<11> 2017-07-04T10:39:09.092Z ip-1X-XX-X-XX vncviewer[12283]: vncviewer: unable to open display \"\"\n<11> 2017-07-04T10:39:09.092Z ip-1X-XX-X-XX vncviewer[12283]: TXMsgBox: unable to open display \"\"\n<11> 2017-07-04T10:39:09.092Z ip-1X-XX-X-XX vncviewer[12283]: TXMsgBox: unable to open display \"\"\nI am looking for clear instruction of running the vncviewer from linux machine sso i can connect to the 5900 port. Current documentation is not helping. Please advise. I am closing this thread. I have used vnc from windows and connected. I was able to pass the port by connecting to application loadbalancer and its listerner port. thx for clarification. this http://HOST:PORT/wd/hub/status works for the hub, but not for the node image. could you please suggest if it is same URL for node as well \nBasically i trying to configure a health check path for my node image running in AWS ECS. Thanks ddavison. When you say dedicated node I believe you are referring to dedicated VM's with required windows OS and browsers installed.\nThis means docker selenium can still be re-used for HUB and nodes with firefox, chrome (Ubuntu/linux OS combination )\nThanks for your response. ",
    "Geekays": "@tparikka the use cases that taking me for windowsservercore are:\n1. This is .NET development\n2. The test scripts are also developed in c# and Selenium\n3. Other tools in the combination are on windowsservercore\n4. We need to have the test run on IE as well.\nI know we can have a combination of Linux and Windows and Docker and VMs (Non-Docker). But that seems to be little messy.\nAnyway, I could run the selenium/hub on windowsservercore. But shall have to wait till I can create some nodes like Chrome, IE and Firefox and be able to register them successfully and run a testing scenario.\n. ",
    "metareven": "@tparikka There are differences between the browsers on different OSes so you might want to run your tests on the OS your customers users are most likely to use (which in most cases is windows/android/iOS). Also the webdriver for Edge only supports one instance at a time, so being able to dockerize Edge nodes would be really nice. I've also had some problems running multiple firefox instances on the same windows machine. Dockerizing the firefox hubs might alleviate such issues . ",
    "lareeth": "You will need to connect this task to an Application Load Balancer that forwards the randomised host port back to a fixed port. You can then replace the container without needing to update your application when the container gets a new random port assigned.. ",
    "fluentwait": "Hi,\nI'm also having similar issue, even though I have set capability to ignore errors but still its does not work with 'docker-compose' setup. But if I starts individual containers with 'docker' command then it's work perfectly. \nDocker Compose File\nversion: \"3\"\nservices:\n  selenium-hub:\n    image: selenium/hub:3.4.0-einsteinium\n    ports:\n      - \"4444:4444\"\n  chrome:\n    image: selenium/node-chrome:3.4.0-einsteinium\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n  firefox:\n    image: selenium/node-firefox:3.4.0-einsteinium\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n. ",
    "joejoseph00": "I too am running this selenium docker image, when I try to add \"acceptInsecureCerts\" to the behat.yml config file 'capabilities' section for selenium2, try running behat\nget the following message:\nIn ArrayNode.php line 319:\nUnrecognized options \"acceptInsecureCerts\" under \"testwork.mink.sessions.my_session.selenium2.capabilities\"\nUnfortunately switching to Chrome does not allow me to test our apps for firefox compatibility.\nIt's been a real grind to even get this far with the docker and ci configuration.  Wondering what the easiest way to use acceptInsecureCerts is.\nI'll keep digging and if I find something I'll post it back here.\n. one clue: \nfind -name ArrayNode.php\n./vendor/symfony/config/Definition/ArrayNode.php\n./behat/vendor/symfony/config/Definition/ArrayNode.php\ncomes from symfony.\nNot sure if this is selenium not accepting the parameter or if it's something that needs to be registered in behat.\nAlso, there seems to be a lot of drivers to use with firefox , but not so much helpful examples on configuration , nor pros or cons of using one or the other.  gecko seems to be the up and coming one, not sure how it is used with selenium.\n  . Ok, I pretty much figured out a better way.\nFor those using behat /selenium with firefox\nand you want acceptInsecureCerts to be used\nfor some reason this setting is not accepted in the behat.yml , \nget this error\nIn ArrayNode.php line 319:\nUnrecognized option \"acceptInsecureCerts\" under \"testwork.mink.sessions.selenium2.selenium2.capabilities\"\nThe solution for those using php/behat/selenium/firefox and you are (maybe) using gecko (might work with other drivers too) (not sure, confused a bit about the number of drivers available) \nfor me I had to patch the vendor/behat/mink-selenium2-driver/src/Selenium2Driver.php\nadd this code at the beginning of the constructor  public function __construct(....stuff\nright after open {\n(approximately line 77)\nif ($browserName == 'firefox') {\n           $acceptInsecureCerts = array('acceptInsecureCerts' => TRUE);\n           $desiredCapabilities = array_merge($acceptInsecureCerts, $desiredCapabilities);\n           //var_dump($desiredCapabilities, true);\n         }\nhere's what the patch would look like\ndiff --git a/behat/mink-selenium2-driver/src/Selenium2Driver.php b/behat/mink-selenium2-driver/src/Selenium2Driver.php\nindex b0d7ca7..4503b59 100755\n--- a/behat/mink-selenium2-driver/src/Selenium2Driver.php\n+++ b/behat/mink-selenium2-driver/src/Selenium2Driver.php\n@@ -74,6 +74,11 @@ class Selenium2Driver extends CoreDriver\n      */\n     public function __construct($browserName = 'firefox', $desiredCapabilities = null, $wdHost = 'http://localhost:4444/wd/hub')\n     {\n+        if ($browserName == 'firefox') {\n+          $acceptInsecureCerts = array('acceptInsecureCerts' => TRUE);\n+          $desiredCapabilities = array_merge($acceptInsecureCerts, $desiredCapabilities);\n+          //var_dump($desiredCapabilities, true);\n+        }\n         $this->setBrowserName($browserName);\n         $this->setDesiredCapabilities($desiredCapabilities);\n         $this->setWebDriver(new WebDriver($wdHost));\n. and for IE11 , here is another way to do it from FeatureContext.php\n```\n  public function visit($page)\n  {\n      $this->visitPath($page);\n      try {\n        $driver = $this->getSession()->getDriver();\n        $driver->executeScript(\"javascript:try {document.getElementById('overridelink').click();} catch (err) {console.log('probably cert warn already accepted');}\");\n      }\n        // rethrow it\n        throw $e;\n      }\n  }\n```. No I didn't make a pull request for that.  . ",
    "seyfer": "@joejoseph00 thanks\nhave you created PR in mink-selenium2-driver? was it merged?. ",
    "devent": "@ddavison \nBut now there is no possibility to use environment variables to change the configuration with https://github.com/SeleniumHQ/docker-selenium/commit/45304b7867098725c5e68b362ad126c21a89ef20  I have created an OpenShift template configuration where the user can set environment variables that are then used to create the configuration by the docker entry_point.sh.. @ddavison \nYes, I was using them, but changed them to use a DeploymentConfig. With what version did you tested? Our cloud is restricted, it doesn't allow contains run as root. But since the container is run as user seluser it should be fine. But it fails with Permission Denied of course because the config file is created by root.\nhttps://github.com/SeleniumHQ/docker-selenium/blob/master/Hub/Dockerfile#L39. I can fix that in a fork and offer a pull request. I need to deploy Selenium anyway.. @ddavison You can go ahead and close it. I needed a lot of changes to the Image and I don't think it will be of benefit to you. Thank you for your support.. ",
    "bzon": "The workaround for this is to create a serviceaccount named seluser . \nAnd then oadm policy add-scc-to-user anyuid -z seluser  while inside the namespace .. \nLastly, ensure that your selenium deployment configs has spec.template.spec.serviceAccount: seluser. ",
    "jared-ziqxu": "I'm using 3.4.0, and I also got this problem.\nI didn't figure out how to fix this from the threads.\nMy template is as following:\n```\napiVersion: v1\nkind: Template\nmetadata:\n  name: selenium-hub \nobjects:\n- apiVersion: v1\n  kind: Route\n  metadata:\n    name: ${SELENIUM_HUB_NAME}-route\n  spec:\n    host: ${SELENIUM_HUB_NAME}.openshift.url.com\n    to:\n      kind: Service\n      name: ${SELENIUM_HUB_NAME}-service\n    port:\n      targetPort: web\n- apiVersion: v1\n  kind: DeploymentConfig\n  metadata: \n    name: ${SELENIUM_HUB_NAME}\n  spec:\n     replica: 1\n     strategy:\n       type: Recreate\n     triggers:\n       - type: ConfigChange\n     template:\n       metadata:\n         name: ${SELENIUM_HUB_NAME} \n         labels:\n           service: ${SELENIUM_HUB_NAME}\n       spec:\n         restartPolicy: Always\n         containers:\n         - image: selenium/hub:${SELENIUM_VERSION}\n           name: ${SELENIUM_HUB_NAME}\n           env:\n           - name: JAVA_OPTS\n             value: -Xmx512m\n           - name: POOL_MAX\n             value: \"30000\"\n           - name: GRID_NEW_SESSION_WAIT_TIMEOUT\n             value: \"30\"\n           - name: GRID_JETTY_MAX_THREADS\n             value: \"100\"\n           - name: GRID_NODE_POLLING\n             value: \"150\"\n           - name: GRID_CLEAN_UP_CYCLE\n             value: \"300\"\n           - name: GRID_TIMEOUT\n             value: \"300\"\n           - name: GRID_BROWSER_TIMEOUT\n             value: \"60\"\n           - name: GRID_MAX_SESSION\n             value: \"4\"\n           - name: GRID_UNREGISTER_IF_STILL_DOWN_AFTER\n             value: \"500\"\n           ports:\n           - containerPort: 4444\n             protocol: TCP\n           livenessProbe:\n             failureThreshold: 3\n             httpGet:\n               path: /\n               port: 4444\n               scheme: HTTP\n             periodSeconds: 10\n             successThreshold: 1\n             timeoutSeconds: 5\n             initialDelaySeconds: 15\n           readinessProbe:\n             failureThreshold: 3\n             httpGet:\n               path: /\n               port: 4444\n               scheme: HTTP\n             periodSeconds: 10\n             successThreshold: 1\n             timeoutSeconds: 5\n             initialDelaySeconds: 15\n- apiVersion: v1\n  kind: Service\n  metadata:\n    labels:\n      service: ${SELENIUM_HUB_NAME}\n    name: ${SELENIUM_HUB_NAME}-service\n  spec:\n    selector:\n      service: ${SELENIUM_HUB_NAME}\n    type: ClusterIP\n    ports:\n    - name: web\n      port: 4444\n      targetPort: 4444\n      protocol: TCP\n    - name: node\n      port: 5555\n      targetPort: 5555\n      protocol: TCP\nparameters:\n- description: Specific name of the Selenium hub application\n  displayName: Selenium Hub Service Name\n  name: SELENIUM_HUB_NAME\n  value: selenium-hub-sandbox\n  required: true\n- description: Version of Selenium Hub\n  displayName: Version of Selenium Hub\n  name: SELENIUM_VERSION\n  value: 3.4.0\n  required: true\n```\n. I think it might be related with this issue \nopt/bin/entry_point.sh: line 6: /opt/selenium/config.json: Permission denied. ",
    "kootenpv": "Another attempt:\n```\nfrom selenium import webdriver\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\noptions = webdriver.ChromeOptions()\nURL = 'http://localhost:4444/wd/hub'\noptions.add_argument('--headless')\noptions.add_argument(\"--no-sandbox\")\noptions.add_argument(\"--disable-gpu\")\noptions.add_argument(\"--remote-debugin-port=9222\")\noptions.add_argument(\"--screen-size=1200x800\")\ndriver = webdriver.Remote(command_executor=URL,\n                          desired_capabilities=options.to_capabilities())\n``. @viettd56 Sounds great! Do you perhaps have a code snippet of the full example :)? I'm sure it would help others as well.. @viettd56 Thanks! As a result, I realized in the docker call I can add--privileged`!\nI ran: \n docker run --privileged -d -p 4444:4444 selenium/standalone-chrome\n\nBut now my code still just hangs, no clue why:\n```python\nfrom selenium import webdriver\nfrom selenium import webdriver\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\noptions = webdriver.ChromeOptions()\nURL = 'http://localhost:4444/wd/hub'\noptions.add_argument('--headless')\noptions.add_argument(\"--no-sandbox\")\noptions.add_argument(\"--disable-gpu\")\noptions.add_argument(\"--remote-debugin-port=9222\")\noptions.add_argument(\"--screen-size=1200x800\")\ndriver = webdriver.Remote(command_executor=URL,\n                          desired_capabilities=options.to_capabilities())\n```\nDid you use python or ??. ",
    "anyone-can-test": "I have the same issue.\nI use selenium/node-chrome:3.4.0-einsteinium.\n// java\nChromeOptions chrome = new ChromeOptions();\n            chrome.addArguments(\"--headless\");\n            chrome.addArguments(\"--disable-gpu\");\n```\n org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited normally\n      (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 3.10.0-327.36.3.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information)\n    Command duration or timeout: 60.03 seconds\n    Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'\n    System info: host: '7b9eda8e6c5e', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-327.36.3.el7.x86_64', java.version: '1.8.0_131'\n    Driver info: driver.version: ChromeDriver\n    Command duration or timeout: 60.08 seconds\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n```. ",
    "gsureshbabu": "Yes, I observed similar issue in node chrome image. Driver initialization got failed. . ",
    "ajoy39": "Same here, can connect to the selenium service fine but Chrome fails to start. \n```\n1) CreateMemberCept: \n Test  tests/acceptance/Admin/CreateMemberCept.php\n[Facebook\\WebDriver\\Exception\\UnknownServerException] unknown error: Chrome failed to start: exited normally\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 4.11.11-coreos x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 60.10 seconds\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: '05ad22650784', ip: '172.17.0.4', os.name: 'Linux', os.arch: 'amd64', os.version: '4.11.11-coreos', java.version: '1.8.0_131'\nDriver info: driver.version: ChromeDriver\n```. ",
    "brandon-bethke-neudesic": "We are apparently having this same problem. \nWe are deploying chrome on minikube using the helm charts located here: https://github.com/kubernetes/charts/blob/master/stable/selenium/\nWe are using selenium docker image tag: 3.5.2-antimony\nThis setup is working as expected when NOT using the \"headless\" option. However, as soon as we add the \"headless\" arguments to the chrome options, we get this dreadful error:\n```\n    org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited normally\n  (Driver info: chromedriver=2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8),platform=Linux 4.9.13 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 60.05 seconds\n```\n            ChromeOptions chromeOptions = new ChromeOptions();\n            chromeOptions.addArguments(\"headless\");\n            chromeOptions.addArguments(\"window-size=1200x600\"); \n            chromeOptions.addArguments(\"disable-gpu\");\n            capabilities = DesiredCapabilities.chrome();\n            capabilities.setCapability(ChromeOptions.CAPABILITY, chromeOptions);\n            ...\n            ...\n            driver = new RemoteWebDriver(hub, capabilities);. ",
    "viettd56": "After few day search and try, finally I can run chrome headless mode by add option --privileged when run docker container :). docker-compose.yml\n```\nselenium-hub:\n  image: selenium/hub\n  environment:\n    - GRID_TIMEOUT=120\n    - GRID_MAX_SESSION=200\n    - GRID_NEW_SESSION_WAIT_TIMEOUT=-1\n    - GRID_BROWSER_TIMEOUT=120\n  ports:\n    - \"4444:4444\"\nchrome:\n    image: selenium/node-chrome\n    links:\n      - selenium-hub:hub\n    dns:\n      - 8.8.8.8\n      - 208.67.222.222\n    environment:\n      - NODE_MAX_INSTANCES=100\n      - NODE_MAX_SESSION=100\n    volumes:\n      - /dev/shm:/dev/shm\n    privileged: true\n. @kootenpv I seem that time I build custom docker container :D \nDockerfile\nFROM ubuntu:14.04.5\nUSER root\nRUN apt-get update --fix-missing\nRUN apt-get install -y build-essential make g++ curl libfontconfig python curl wget unzip git\nRUN curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nRUN apt-get install -y nodejs\nInstall Chrome for Ubuntu\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - &&\\\nsudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' &&\\\nsudo apt-get update --fix-missing\nRUN sudo apt-get install -y google-chrome-stable\nbla bla\n```\nand run this Dockerfile with option --privileged. @cbrevik https://github.com/viettd56/docker-chrome-headless-example\nIt is example dockerfile and docker-compose run nodejs with chrome headless. I install chrome in same image with code. Maybe image selenium node-chrome need change something. ",
    "maxsolyaris": "Experiencing the same error with --headless. ",
    "evertones": "I'm facing failures in Java/Scala as well when running using docker-selenium:3.5.3-astatine.\nScala code to create the headless driver:\nval options = new ChromeOptions\noptions.addArguments(\"--headless\")\noptions.addArguments(\"--disable-gpu\")\n\nval capability = DesiredCapabilities.chrome\ncapability.setBrowserName(\"chrome\")\ncapability.setPlatform(org.openqa.selenium.Platform.ANY)\ncapability.setCapability(ChromeOptions.CAPABILITY, options)\n// create the driver\nnew RemoteWebDriver(\"<url_to_be_tested>\"), capability)\n\nLOGs in Docker images (docker-compose logs):\nhub_1      | 06:02:01.288 INFO - Mismatched capabilities. Creating a synthetic w3c capability.\nhub_1      | 06:02:01.289 INFO - Got a request to create a new session: Capabilities [{browserName=chrome, chromeOptions={args=[--headless, --disable-gpu], extensions=[]}, platformName=ANY, version=, platform=ANY}]\nhub_1      | 06:02:01.289 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=chrome, maxInstances=1, version=61.0.3163.79, applicationName=, platform=LINUX}\nchrome_3   | 2017-09-21 06:02:01.298:INFO:osjshC.ROOT:qtp1979313356-17: org.openqa.selenium.remote.server.WebDriverServlet-6eda5c9: Initialising WebDriverServlet\nchrome_3   | 06:02:01.351 INFO - Binding default provider to: org.openqa.selenium.chrome.ChromeDriverService\nchrome_3   | 06:02:01.352 INFO - Found handler: org.openqa.selenium.remote.server.BeginSession@14ad7791\nchrome_3   | 06:02:01.357 INFO - /session: Executing POST on /session (handler: BeginSession)\nchrome_3   | 06:02:01.403 INFO - Mismatched capabilities. Creating a synthetic w3c capability.\nchrome_3   | 06:02:01.408 INFO - Capabilities are: Capabilities {browserName=chrome, chromeOptions={args=[--headless, --disable-gpu], extensions=[], }, platformName=ANY, version=, platform=ANY, }\nchrome_3   | 06:02:01.410 INFO - Capabilities {browserName=chrome, chromeOptions={args=[--headless, --disable-gpu], extensions=[], }, platformName=ANY, version=, platform=ANY, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\nchrome_3   | 06:02:01.410 INFO - Capabilities {browserName=chrome, chromeOptions={args=[--headless, --disable-gpu], extensions=[], }, platformName=ANY, version=, platform=ANY, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\nchrome_3   | 06:02:01.411 INFO - Capabilities {browserName=chrome, chromeOptions={args=[--headless, --disable-gpu], extensions=[], }, platformName=ANY, version=, platform=ANY, } matched class org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\nchrome_3   | Starting ChromeDriver 2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8) on port 31450\nchrome_3   | Only local connections are allowed.\nLOGs in the console running the test:\n*** RUN ABORTED *** (1 minute, 23 seconds)\n  org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited normally\n  (Driver info: chromedriver=2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8),platform=Linux 4.4.0-78-generic x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 60.06 seconds\nBuild info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:54:15.039Z'\nSystem info: host: '7fa67224bba8', ip: '172.18.0.4', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-78-generic', java.version: '1.8.0_131'\nDriver info: driver.version: unknown\nCommand duration or timeout: 60.31 seconds\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n  at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n  at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)\n  at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)\n  at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)\n  at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)\n  at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359)\n  at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n  ...\n  Cause: org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited normally\n  (Driver info: chromedriver=2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8),platform=Linux 4.4.0-78-generic x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 60.06 seconds\nBuild info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:54:15.039Z'\nSystem info: host: '7fa67224bba8', ip: '172.18.0.4', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-78-generic', java.version: '1.8.0_131'\nDriver info: driver.version: unknown\nBuild info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'\nSystem info: host: 'everton-pc', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-93-generic', java.version: '1.8.0_111'\nDriver info: driver.version: unknown\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n  at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n  at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)\n  at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)\n  at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)\n  at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)\n  at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359)\n  at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n. I just started an image in debug-mode for version 3.5.3-boron and connected in it using VNC.\nI opened a terminal and tried to run a few commands to start Chrome in headless mode:\n```\nseluser@cab6fc28ac66:/$ google-chrome --headless --disable-gpu \n[0922/020612.994035:ERROR:headless_shell.cc(132)] Navigation to  failed\nseluser@cab6fc28ac66:/$ google-chrome --headless --disable-gpu --dump-dom https://www.google.com\n[0922/020622.477093:ERROR:headless_shell.cc(505)] Open multiple tabs is only supported when remote debugging is enabled.\nseluser@cab6fc28ac66:/$ google-chrome --headless --disable-gpu --dump-dom https://www.google.com --remote-debugging-port=9222\n[0922/060450.343329:ERROR:headless_shell.cc(515)] Dump DOM is disabled when remote debugging is enabled.\n```\nRunning google-chrome --headless --disable-gpu --dump-dom https://www.google.com/ in my workstation (ubuntu 16.04, Chrome 61.0.3163.91) prints all DOM for the given page.. @diemol: I've updated my images with selenium/standalone-chrome-debug:3.6.0-bromine and ran again the commands.\nThey worked fine.\nHere's the result:\nseluser@b9e5ef2a74bd:/$ google-chrome --headless --disable-gpu\nseluser@b9e5ef2a74bd:/$ google-chrome --headless --disable-gpu --dump-dom http://www.google.com\n<body class=\"hp vasq\" onload=\"document.f&amp;&amp;document.f.q.focus();\n...\nThank you very much!. ",
    "Stevkar": "Faced the same issue with  Chrome  v:61.0.3163.91 and  ChromeDriver 2.32.498513 and Selenium 3.5.3.. ",
    "CowChris": "+1 Getting the \"Message: unknown error: Chrome failed to start: exited normally\" error as well...\nChriss-MacBook-Pro:connect chrisrosillo$ docker exec -it connect_selenium_1 chromedriver --version\nChromeDriver 2.32.498513 (2c63aa53b2c658de596ed550eb5267ec5967b351)\nChriss-MacBook-Pro:connect chrisrosillo$ docker exec -it connect_selenium_1 /opt/google/chrome/google-chrome --version\nGoogle Chrome 61.0.3163.91\nRunning via Codeception (tried every option/capability under the sun from various threads on this issue to no avail). My Codeceptionn config below (not working).\n- WebDriver:\n            url: http://acceptance.tester\n            browser: chrome\n            host: selenium\n            port: 4444\n            window_size: false\n            capabilities:\n              useAutomationExtension: false\n              chromeOptions:\n                args: [\"headless\", \"disable-gpu\", \"disable-infobars\", \"no-sandbox\", \"allow-insecure-localhost\", \"window-size=1200,800\"]\nHope this gets fixed soon!. chromedriver issue looks related: https://bugs.chromium.org/p/chromedriver/issues/detail?id=1972. ",
    "laurahannah": "Are there any pointers on how to use the chrome-debug image in a docker-compose file?. We need to use a docker-compose file because we are using a gradle plugin to do the compose up. With this plugin (avast) you cannot specify the ports.  FWIW, changing the image to selenium/standalone-chrome-debug in the docker-compose file fails spectacularly. the debug chrome containers cannot attach to the hub.. ",
    "SchulteMarkus": "@laurahannah Maybe my demo-repo https://github.com/SchulteMarkus/selenium-standalone-chrome-spring-boot-demo can help you (have a look at https://github.com/SchulteMarkus/selenium-standalone-chrome-spring-boot-demo/blob/master/src/test/resources/docker-compose-selenium-standalone-chrome.yml). ",
    "loblab": "run into same issue in my self build docker (debian 9 based), adding \"no-sandbox\" works. \"privileged\" or \"disable-gpu\" is not necessary.\nrun as normal user (not root).\npython\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"headless\")\n        #options.add_argument(\"privileged\")\n        options.add_argument(\"no-sandbox\")\n        #options.add_argument(\"disable-gpu\")\n        options.add_argument(\"window-size=1200x800\")\n        self.browser = webdriver.Chrome(chrome_options=options). ",
    "Lafaiet": "@loblab I've been struggling with this issue for days. I cant believe a single \"no-sandbox\" solved the issue! Anyways. Thanks a bunch!!!!. ",
    "namgivu": "Confirmed that my test works now after installing python selenium 3.3.1\nbash\npip uninstall selenium ; pip install selenium==3.3.1. ",
    "qiuyuhome": "OK\uff0cthanks\n\u53d1\u81ea\u6211\u7684 iPhone\n\n\u5728 2017\u5e747\u670817\u65e5\uff0c\u4e0b\u53483:34\uff0cNam G VU notifications@github.com \u5199\u9053\uff1a\nConfirmed that my test works now after installing python selenium 3.3.1\npip uninstall selenium ; pip install selenium==3.3.1\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "VireshDoshi": "Hi\nmy setup: centos7, docker-compose, python 2.7, virtualenv, selenium==3.9.0\nI have the latest selenium grid up and running ( version: 3.9.1-actinium ) but it failed to run a test against the selenium grid. The following did the trick! :-)\n$ pip uninstall selenium ; pip install selenium==3.3.1. ",
    "mar1ged": "I have a similar setup on OpenShift and had to increase the nodes to 4 Gigabyte RAM. @bdshibly yes, one Selenium Node for each pod and that one has 4 gig ram. ",
    "bdshibly": "Thanks @mar1ged. We have configured kubernetes nodes on m4.large. So it has 8 GB RAM. Did you allocate 4 GB RAM per selenium chrome node container? . Thanks @ddavison. I deployed selenium 3.4.0 but still having problem with proxy test. We configured browsermob proxy and selenium chrome containers taking long time initializing proxy test and often getting timeout. We configured selenium (both hub and chrome nodes) on EC2 on the same subnets with same EC2 type and security group and perform the same test which was fast.      . ",
    "mikkiweesenaar": "Im having similar issues. Is it better to use a separate hub and node?. @diemol \nWe have found a different way to execute the tests.\nWhat do you mean by 'the manifests'?. ",
    "adamlacoste": "I have been seeing a similar problem since converting from a Selenium Grid I set up to Selenium's Docker images.  Lots of test failures due to crashes, which I wasn't getting before.  I've followed instructions I found elsewhere to manipulate /dev/shm (both mounting the host's /dev/shm as a volume, and setting the shm_size param at runtime), but this didn't seem to have any effect.. @Svitsky I have tried this, it didn't fix the problem for me.. ",
    "DmytroPazykov": "I got similar problem. The same error but it appears when I try to execute Javascript.\norg.openqa.selenium.ScriptTimeoutException: asynchronous script timeout: result was not received in 120 seconds\n(Session info: chrome=60.0.3112.78)\n(Driver info: chromedriver=2.31.488763 (),platform=Linux 4.4.51-40.58.amzn1.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 120.05 seconds\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: '', ip: '172.17.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.51-40.58.amzn1.x86_64', java.version: '1.8.0_131'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities \n[{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.31.488763 (092de99f48a300323ecf8c2a4e2e7cab51de5ba8), userDataDir=/tmp/.org.chromium.Chromium.BMdrIG}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=60.0.3112.78, platform=LINUX, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]\nSession ID: 928652ac45e88da742421682bd672f1e\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)\n    at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)\n    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671)\n    at \norg.openqa.selenium.remote.RemoteWebDriver.executeAsyncScript(RemoteWebDriver.java:591)\n    at sun.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at \norg.openqa.selenium.support.events.EventFiringWebDriver$2.invoke(EventFiringWebDriver.java:104)\n    at com.sun.proxy.$Proxy10.executeAsyncScript(Unknown Source)\n    at org.openqa.selenium.support.events.EventFiringWebDriver.executeAsyncScript(EventFiringWebDriver.java:229)`. ",
    "Svitskyi": "Map /dev/shm to docker image.\nI had such an issue with page crash and it was solved by this.. ",
    "MFoly": "Faced the same issue after changing SCREEN_WIDTH & SCREEN_HEIGHT to higher resolution. It was fixed for my case by changing shm_size to higher value (1G). . ",
    "stsvilik": "I tried to build only StandaloneChromeDebug manually from within a folder. Using make build works fine without this file.. ",
    "motou": "Have you tried with the latest version? It looks like that the chrome driver version installed is out of date.. It could be also a problem of chrome with shm size and privilege mode. Please try to start the docker image with the parameter --shm-size=2g --privileged. ",
    "heisenbugger": "Yes! I tried the latest version and I'm still getting this error.\n```\nTraceback (most recent call last):\n  File \"run.py\", line 45, in job2\n    robson.execute(config, ind)\n  File \"/robson/core/flow/robson.py\", line 22, in execute\n    browser = browser_flow(config)\n  File \"/robson/core/flow/browser_flow.py\", line 16, in init\n    self.browser = Browser('chrome', self.executable_path)\n  File \"/robson/env/local/lib/python2.7/site-packages/splinter/browser.py\", line 63, in Browser\n    return driver(*args, kwargs)\n  File \"/robson/env/local/lib/python2.7/site-packages/splinter/driver/webdriver/chrome.py\", line 31, in init\n    self.driver = Chrome(chrome_options=options, **kwargs)\n  File \"/robson/env/local/lib/python2.7/site-packages/selenium/webdriver/chrome/webdriver.py\", line 69, in init\n    desired_capabilities=desired_capabilities)\n  File \"/robson/env/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 98, in init\n    self.start_session(desired_capabilities, browser_profile)\n  File \"/robson/env/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 188, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/robson/env/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 256, in execute\n    self.error_handler.check_response(response)\n  File \"/robson/env/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py\", line 194, in check_response\n    raise exception_class(message, screen, stacktrace)\nWebDriverException: Message: unknown error: Chrome failed to start: exited abnormally\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 4.11.11-coreos x86_64)\n```\n. ",
    "vivekgrover1": "Hi,\nany idea how to fix the above issue?. ",
    "ddnomad": "Just encountered the same problem with standalone-chrome image. Did mounted /dev/shm volume.\nRunning with docker-compose. Have somebody figured out what is the cause?. ",
    "luispabon": "Same here:\nselenium                 | /opt/bin/entry_point.sh: line 6: /opt/selenium/config.json: Permission denied\nselenium                 | starting selenium hub with configuration:\nselenium                 | {\nselenium                 |   \"host\": null,\nselenium                 |   \"port\": 4444,\nselenium                 |   \"role\": \"hub\",\nselenium                 |   \"maxSession\": ,\nselenium                 |   \"newSessionWaitTimeout\": ,\nselenium                 |   \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\nselenium                 |   \"throwOnCapabilityNotPresent\": ,\nselenium                 |   \"jettyMaxThreads\": ,\nselenium                 |   \"cleanUpCycle\": ,\nselenium                 |   \"browserTimeout\": ,\nselenium                 |   \"timeout\": ,\nselenium                 |   \"debug\": \nselenium                 | }\nThe weird thing is that it starts fine on my desktop running Ubuntu 17.04 but not on a centos machine.\nObviously that json is invalid.. See this gist https://gist.github.com/luispabon/89aeed53deb87a96c22becf6997188c0. ",
    "saulshanabrook": "In the meantime, I am building Firefox Developer Edition standalone with debug for my own use. \nHaven't figured out yet how to get predictable extension URLs (https://github.com/mozilla/web-ext/issues/1043), but loading an extension folder is working, using Protractor:\n```javascript\nconst firefox = require('selenium-webdriver/firefox');\nvar profile = new firefox.Profile();\nprofile.addExtension('/dist/dist/');\nprofile.setPreference('xpinstall.signatures.required', false);\n```. I have given up on using Firefox Developer Edition in Selenium to run extensions because I cannot figure out how to get the URL for the extensions once they are loaded. My other idea was to create a keyboard shortcut to launch the extension popup, then target that, but it seems webdriver isn't mean to support switching to these not-quite-pages.\nIf anyone else is trying to do this, the next thing I was going to try was to run a script that is activated on all pages that uses extension.getURL() to get the URL of the extension and saves this in a global variable on all pages, so that then in Selenium we can access that URL. \nI am going to close this, because I don't need this issue resolved anymore, but feel free to re-open if you are still interested.. ",
    "l0b0": "Please reopen this issue - I would like very much to test my extension using an official Selenium image.. ",
    "AndreSteenbergen": "Latest version actually does. I have spun up 2 azure machines, one with squid proxy, one without. Following that I created 2 nodes with different applicationName (NoProxy and WithProxy). After which I created a test console app, To first browse to https://whatismyipaddress.com/ and create a screenshot. Both screenshots showed a different ip address.\nthese are working settings (copy pasted from rancher)\n\n. Without proxy:\n\nWith Proxy\n\n. I actually don't know which are the correct env variables, with or without CAPS .... Test script: (c#)\nI created a custom image with ublock standard enabled, but that shouldn't be too big of a difference (just extra files under the /tmp/ folder.) \n```\nConsole.WriteLine(\"Hello World!\");\n        ChromeOptions options = new ChromeOptions();\n        options.AddArguments(\"disable-infobars\");\n        options.AddArguments(\"load-extension=/tmp/ublock/\");\n\n        var dc = options.ToCapabilities() as DesiredCapabilities;\n        dc.SetCapability(\"applicationName\", \"WithProxy\");\n\n        var prop = dc.GetType().GetField(\"isSpecCompliant\", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);\n        prop.SetValue(dc, false);\n\n        var driver = new RemoteWebDriver(new HttpCommandExecutor(new Uri(\"http://xxxxx.xxxxx.xxxx.138:4444/wd/hub/\"), TimeSpan.FromMinutes(1)), dc);\n        driver.Manage().Cookies.DeleteAllCookies();\n\n        Task.Delay(250).Wait();\n        driver.Navigate().GoToUrl(\"chrome://extensions/\");\n\n        var s = driver.GetScreenshot();\n        File.WriteAllBytes(@\"c:\\temp\\testip3.png\", s.AsByteArray);\n\n        Task.Delay(250).Wait();\n        driver.Navigate().GoToUrl(\"https://whatismyipaddress.com/\");\n        Task.Delay(250).Wait();\n\n        s = driver.GetScreenshot();\n        File.WriteAllBytes(@\"c:\\temp\\testip4.png\", s.AsByteArray);\n\n        driver.Quit();\n        Console.WriteLine(\"Returning driver\");\n\n```. Actually ... there is a big difference, in headless you can't enable extensions in chrome. So the experience in headless is not exactly the same as with a \"real\" browser. That's actually what selenium is about I think, be as close to a real experience as possible for UI automation.. Thx for the pointer about shared memory. I actually forgot to mount shm. It is already quite a lot better. I guess I'll add a cronjob to kill containers running longer then two hours.. I'll close the issue. ",
    "Yanci516": "I use 3.11.0\uff0cgot the same results, chrome does not respect http proxy environment variables. ",
    "pgaria": "I am using 3.14 now and I can confirm that Chrome is not taking the http proxy environment variables while running inside a container. Its Keep asking me the UserName and Password in the Browser.. ",
    "Elufimov": "I think it would be better to upgrade to https://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.1.jar . It was quick! I hope merge will be soon.. ",
    "Drimix20": "Version of gecko driver for firefox browser is not needed to be updated? Currently is used 0.17.0 version (see ARG GECKODRIVER_VERSION=0.17.0 in NodeFirefox/Dockerfile) but gecko driver has already released v0.18.0.\n. @niQo Can you look at master branch into NodeFirefox/Dockerfile (not Dockerfile.txt) link there is really configured variable\n============\nGeckoDriver\n============\nARG GECKODRIVER_VERSION=0.17.0. Isn't this a problem caused by configuration of docker containers? If you want to have application available from your localhost and port 8000 than you have to configured port mapping to specific running container where you application is deployed (docker run -d -p 8000:8000). Because your application must be reachable from the docker container where selenium server is running. Do you have set it correctly?. ",
    "barancev": "FYI: version 3.5.3 is available.. Please send questions to the selenium user group. It must be related to https://github.com/SeleniumHQ/selenium/issues/5209\nJust fixed, to be released in 3.9. Note that -enablePassThrough option will be removed in selenium server 3.9, so the binding should be fixed to be able to work with the most revent server versions.. Version 3.9.1 is already available. Yes, Selenium does not take into account webdriver.firefox.profile system property. Is it a regression issue?  Did it work in earlier versions?. Sorry, I too can't see why scp is better than docker cp. It's not about size, it's other sort of economy.. And why should we care about WinSCP?. By the way, to be able to use WinSCP we should add to container an ssh server, not scp (that is a client), right?. 3.14.0 is not the latest version of the image, more recent ones should contain jetty 9.4.12.. ",
    "jsa34": "Any news on update to release 3.5.3?. @glib-briia When is the next release due?. Fab!  Thanks for the info, diemol!. Same issue occuring here in Chrome debug in 3.5.3.  Not had the issue in previous versions.. Just noticed!  Apologies!  . Hi. Argh - accidentally closed - first time trying to use mobile on here and not going well.... I'll take a look in a bit when I'm back at a computer... Something seems to be odd as you said with the node containers at first glance. geckodriver trying to identify latest version is returning null/empty string for version number and hence is failing build at the moment - this seems unrelated to my commits, but can't see what could be causing this.\nStep 7/11 : RUN GK_VERSION=$(if [ ${GECKODRIVER_VERSION:-latest} = \"latest\" ]; then echo $(wget -qO- \"https://api.github.com/repos/mozilla/geckodriver/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.\"v([0-9.]+)\"./\\1/'); else echo $GECKODRIVER_VERSION; fi)   && echo \"Using GeckoDriver version: \"$GK_VERSION   && wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GK_VERSION/geckodriver-v$GK_VERSION-linux64.tar.gz   && rm -rf /opt/geckodriver   && tar -C /opt -zxf /tmp/geckodriver.tar.gz   && rm /tmp/geckodriver.tar.gz   && mv /opt/geckodriver /opt/geckodriver-$GK_VERSION   && chmod 755 /opt/geckodriver-$GK_VERSION   && ln -fs /opt/geckodriver-$GK_VERSION /usr/bin/geckodriver\nOUTPUT:\nUsing GeckoDriver version: \nhttps://github.com/mozilla/geckodriver/releases/download/v/geckodriver-v-linux64.tar.gz:\nAny help would be gratefully received as this is outside my area of expertise :(  I can't see anything that's changed in this area recently \u2026.. Just noticed a couple of stray deletes of chrome stages in makefile... will update. Well spotted @cgoldberg !. Let me know and if you want to include, I can look into the permissions issue on ./generate.sh - not sure why it's behaving like this on Travis, as my local seemed fine.... And thanks all for the feedback \ud83d\ude00. ",
    "cstgyxlove": "@Drimix20  I found the reason, it is because I didn't set one public url for my app. localhost is only for one container. I appreciated your response. Thank you.. ",
    "JonasHavers": "Same is true for Image Version 3.4.0 from Docker Hub\nhttps://hub.docker.com/r/selenium/node-chrome/tags/. ",
    "westy92": "I'm having the same issue.  Prior to yesterday's push I was using selenium/node-chrome:latest without issue.\n[20:51:38] E/launcher - Error: WebDriverError: unknown error: failed to change window state to maximized, current state is normal\n  (Session info: chrome=60.0.3112.113)\n  (Driver info: chromedriver=2.30.477691 (6ee44a7247c639c0703f291d320bdf05c1531b57),platform=Linux 3.13.0-109-generic x86_64)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)\nFrom: Task: WebDriver.manage().window().maximize()\n    at /home/ubuntu/bamboo-home/xml-data/build-dir/ACCESS-UI-E2E/protractor.conf.js:79:34\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7). Related? \nhttps://github.com/angular/protractor/issues/4407\nhttps://bugs.chromium.org/p/chromedriver/issues/detail?id=1901. Are you supposed to modify Dockerfile.txt instead?. ",
    "mMontu": "Also related?\nhttps://bugs.chromium.org/p/chromedriver/issues/detail?id=1946. ",
    "glib-briia": "Hi @ddavison ,\nThank you for the feedback. Yes, as you have said the 'latest' approach is already used for Chrome and since its tightly coupled with chromedriver its either use 'latest' for both or manually simultaneously update versions for both imho. \nSurely better to discuss wit community first.\nThanks. Hi @ddavison , could you please merge the fix.\nThanks,\nGlib. Fix for the build is here #561. Waiting for someones attention . No longer required since #545. That will be available with the next release . Hi @JevgeniD , that's already filed as #561. ",
    "hazmeister": "Looks like a sensible default, it's still possible to override with a specific version if you need it.. ",
    "PhillWide": "Oh, my bad in running the script, sorry. ",
    "sramores": "Same here! I try 3.4.0-dysprosium version and goes ok. Thanks @slugics for this message. I've been trying for days and I thought my mistake.. ",
    "eyalzek": "Seeing the same behavior with 3.5.2, running 3.4.0-dysprosium works as expected. Works for me as well with 3.5.3-boron. @slugics care to comment?. @diemol in my case it's a complicated testing suite that isn't written by me, which also makes it harder to debug, so it's not that straightforward to try and get a minimum reproducible example... Better go with the example given by @loghen41 . In any case, this is an example of my compose file (though I'm running 5 chrome instances, A-E):\n```\nversion: '2.1'\nnetworks:\n  e2e:\nservices:\n  hub:\n    image: selenium/hub:3.9.1-actinium\n    container_name: hub\n    ports:\n      - 4444:4444\n    environment:\n      - GRID_MAX_SESSION=20\n      - GRID_TIMEOUT=12000\n      - GRID_NEW_SESSION_WAIT_TIMEOUT=30000\n      - GRID_DEBUG=true\n      - GRID_CLEAN_UP_CYCLE=20000\n    networks:\n      - e2e\nchrome-A:\n    image: selenium/node-chrome${CI--debug}:3.9.1-actinium\n    container_name: chrome-A\n    depends_on:\n      - hub\n    environment:\n      - NODE_APPLICATION_NAME=@A\n      - NODE_MAX_INSTANCES=10\n      - NODE_MAX_SESSION=10\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    ports:\n      - 5900:5900\n    volumes:\n      - /dev/shm:/dev/shm\n    networks:\n      - e2e\n```. I haven't considered that it might be related to resource usage, but although this happens mostly on our CI, I did see this happen on my local machine which definitely has enough resources and the containers are not bound in any way... In any case, I suspect that starting:\n1 x selenium hub\n10 x chrome nodes\n1 x mock server\nand then running tests in parallels on all of those nodes, might reproduce this. I will try to create some kind of POC tomorrow if I have time.. After spending some time on this today I realized that when this error happens, it was always on the same test suite, which led me to focus on it and I realized that the suite running before it had a describe with a bunch of hooks, but the only test case was skipped, e.g:\n```\ndescribe('foo', function() {\n    before(function(done) {\n        ...\n    });\nbeforeEach(function(done) {\n    ...\n});\n\nit.skip('bar', function(done) {\n    ...\n});\n\nafter(function(done) {\n    ...\n});\n\n});\n```\nonce I skipped the entire suite (e.g: describe.skip(...)) it seemed to have fixed the problem. I'm running it over and over again to see if this reproduces.\nThen again, even with the \"faulty\" configuration this doesn't happen always, so it's hard for me to say if this is a mocha / selenium issue, but it seems more likely that it's coming from mocha.\nI will update if I manage to get any more info about this.. I spoke too soon, it just happened again elsewhere... but I'm still suspecting that mocha is the culprit (or js promises). Will dive deeper in the rabbit hole tomorrow.. @borisivan which testing framework are you using?. ",
    "gtroshin": "Have the same problem with passing ENV vars with 3.5.3.\nOnly 3.4.0-einsteinium works correctly. \nSome estimation about fix? . I confirm too, that new release 3.5.3-boron fixed this problem. Thank you!. ",
    "wlaoh": "Hello, I've been trying to accomplish the same thing using almost the same exact Docker setup.  My question is did you have to do anything special in the first place to download the file?  Basically what I'm running into is that the OS specific download prompt comes up when the download is initiated, and Selenium is, of course, unable to control this OS prompt.\nI'm really curious how it was working for you in the past.. ",
    "piscisferro": "Hi\nFor the download I define the folder location and the option to download the file directly to that folder using the ChromeOptions:\n```\npreferences.put(\"profile.default_content_settings.popups\", 0);\npreferences.put(\"download.prompt_for_download\", \"false\");\npreferences.put(\"download.directory_upgrade\", \"true\");\npreferences.put(\"download.default_directory\", /temp/downloads);\npreferences.put(\"plugins.plugins_disabled\", new String[] { \"Chrome PDF Viewer\" });\nChromeOptions options = new ChromeOptions();\noptions.setExperimentalOption(\"prefs\", preferences);\n```\nWhen clicking on the download button, the browser should download the file directly to the downloads folder in /temp. For this to be \"seen\" by the anapsix/alpine-java container (which is the container that is executing the script) the two must be connected, I connected them creating a volume in /temp/downloads in the docker-compose file, and as a side effect I have connected it too to my local (so I can see the folder to check manually if required)\nThe test-script isn't complex, just click on the download button wait a few seconds and then do a linux bash command through java to check that the file downloaded correctly.\ndownloadButton.click();\nString ls = launchBashSentence(\"bash\", \"-c\", \"ls -lrt \" + /temp/downloads + \"/*.pdf \" | tail -1);\nThe bash sentence don't return nothing because nothing is downloaded. \nIf I enter to the container (selenium/standalone-chrome) using for example:\ndocker exec -i -t standalone-chrome-debug bash\nIn the /temp folder, every time that the download button is clicked it creates a temp file (probably the temporal file that the browser creates when download)  but it never \"finish\" nor get converted to the proper pdf file.\nAbout the env bug, I'm only using env variables to set the URL\ni tried with 3.5.3-boron with no luck, I tested it to in 3.6.0, don't work.\n--- Edited: Sorry It was late and I was in the mobile phone when I wrote this yesterday, edited to clarify it and provide more information. Edited the last post to clarify it and provide more information. First I want to remember that this work fine with 3.4.0-chromium version. Last version I tried was a week ago (3.7.0) and still not working.\nSimplifying, these are the test scripts I'm using. \ndocker-compose (I'm using an image created by me based on anapsix/alpine-java to run the tests):\n```\nversion: \"2\"\nservices:\n  standalone-chrome-debug:\n    container_name: \"standalone-chrome-debug\"\n    image: \"selenium/standalone-chrome-debug:latest\"\n    volumes:\n          - ./downloads:/tmp/downloads\nselenium-test-alpine-java:\n    container_name: \"selenium-test-alpine-java\"\n    image: \"selenium-test-alpine-java:latest\"\n    depends_on:\n          - standalone-chrome-debug\n    volumes:\n          - ./downloads:/tmp/downloads\n    entrypoint: /bin/bash ./test.sh\n```\nSelenium Test:\n```\nimport ...\npublic class test() {\n    public static void main(String[] args) { \n        WebDriver driver = new RemoteWebDriver(remoteAddress, DesiredCapabilities.chrome());\n    driver.get(webURL);\n    driver.findElement(By.id(\"DownloadButton\")).click();\n\n    // Wait a few seconds for the file to download I tried with absurd numbers too.\n    try {\n        Thread.sleep(5000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    // Launch a linux command in order to get the list and see if the file is downloaded.\n    String[] lscmd = {\"bash\", \"-c\", \"ls -lrt  /tmp/downloads/\"};\n    String ls = launchBashSentence(lscmd);\n    System.out.print(ls);\n\n}\n\nprivate getDesiredcapabilities() {\n            Map preferences = new HashMap();\n            preferences.put(\"profile.default_content_settings.popups\", 0);\n        preferences.put(\"download.prompt_for_download\", \"false\");\n        preferences.put(\"download.directory_upgrade\", \"true\");\n        preferences.put(\"download.default_directory\", \"/tmp/downloads\");\n        ChromeOptions options = new ChromeOptions();\n    options.setExperimentalOption(\"prefs\", preferences);\n\n    DesiredCapabilities capabilitiesChrome = DesiredCapabilities.chrome();\n    capabilitiesChrome.setCapability(ChromeOptions.CAPABILITY, options);\n    }\n\nprivate launchBashSentence(lscmd) {\n    // This method just execute the linux command and get the list of the directory\n}\n\n}\n```\nAs an additional info: I have the same issue using the selenium/standalone-firefox-debug container so it's not only for the chrome one\nI hope this help.\n. Ok, after testing further and checking @renanwilliam comment: \n\nI have the same problem and it's related with file permissions. When docker-compose created a volume it's assign with the root:root permission and the seluser can't write on file\n\nJust that: \n- When running \"docker-compose up\" if you don't have the \"download\" folder created (host machine) it creates the folder with root permissions and with no write permissions preventing chromedriver from downloads files.\n\nBut, If you create the download folder (in the host machine) and give full permissions to it (chmod 777 for example) the tests pass and it download the files successfully (as @ralfthewise said)\n\nNow the thing is, why this restricted permission affect from 3.4.0-chromium onwards but is not affected in 3.4.0-chromium? What is the correct functionality? the 3.4.0-chromium behavior or the 3.7.1-beryllium behavior?. ",
    "renanwilliam": "I have the same problem and it's related with file permissions. When docker-compose created a volume it's assign with the root:root permission and the seluser can't write on file. Hi @diemol,\nTo reproduce the error you need to be on a Linux machine, ok?\n\nClone this repository: https://github.com/renanwilliam/selenium-docker-compose-error\nGo to terminal and execute docker-compose up\nOpen the VNC Viewer for your container, open the shell and type ls -lh\nYou will see that the folder is created with root:root (755) permission:\n\n\nIn a windows machine it's not a problem but in Linux systems the seluser can't save any data in this folder (only with sudo command)\n\nIf you try open any site and try download a file you will be 'stoped' in this save dialog prompt because the seluser can't save in the default folder:\n\n\n. I think it's more a docker-compose issue but is not only responsible, If selenium docker image runs with root user this behavior will not occurs.\nI already have tried:\n- Include seluser in root group (not works because permission 755)\n- Change the folder owner on Dockerfile (no effect)\n- Change the permissions on Dockerfile to 775 or 777 (no effect). Hi @diemol ,\nDo you have checked my comment  above? There's a test case with docker-compose comments. ",
    "ralfthewise": "@renanwilliam docker and docker-compose usually just pass through the filesystem permissions.  With your test repository if you do this instead it should work:\nrm -rf ./data\nmkdir data\nchown 777 data\ndocker-compose up. ",
    "mtsmfm": "Could you review my PR?\n. @diemol Updated!. ",
    "AribaOpensource": "As of now there is no image with the name you have given. Refer the git here\nYou can create you own docker image with both in it.\nUse chrome as base image and add firefox to it? something like below ?\n```\nFROM selenium/node-chrome:3.4.0\n...\n...\n...\n====================================================\ninstall firefox\n=====================================================\nRUN apt-get update -qqy \\\n  && apt-get -qqy --no-install-recommends install firefox \\\n  && rm -rf /var/lib/apt/lists/ /var/cache/apt/ \\\n  && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \\\n  && apt-get -y purge firefox \\\n  && rm -rf /opt/firefox \\\n  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n  && rm /tmp/firefox.tar.bz2 \\\n  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n====================\n```\nabove lines adds firefox. On similar lines add gecko driver to image......\nYou just have to merge some lines from docker files of selenium/chrome and selenim firefox.\nThanks\nShankar. ",
    "KathiresanRamkumar95": "But I need Chrome and Firefox in same and single node?\nThanks in advance! . @AribaOpensource . Yes. This is am interested. Great @shankarkc . But How it is possible? What is the structure of your YML file? \nThanks.. ",
    "WillGibson": "Sorry, I posted on the wrong project, I meant to be looking in https://github.com/elgalu/docker-selenium.. ",
    "marknorkin": "I'm experiencing same issue in 2.53.1 image, is it was fixed for this version ? . ",
    "william5065": "Thanks. ",
    "kormbrek-rally": "I ran to this issue is well. It is caused by using older Selenium bindings that do not support w3c WebDriver protocol. Upgrading the version of Selenium fixed it for me.. I'm using 3.11.0 Python bindings with selenium/standalone-chrome:3.11.0-dysprosium. With Selenium, could be using bindings for different languages. The bindings provide the client side of Selenium whereas selenium-docker provides the server. This has nothing to do with the application under test. I am using robotframework-seleniumlibrary on top of Selenium as well.\nThe below was caused by a mismatch between the client/bindings version and the version of Selenium used by the server. The protocol for the communication between the client and server has changed.\n\nWebDriverException: Message: POST /session/e61a44f2-b67d-4540-a4d9-189ad4a7976e/timeouts/async_script did not match a known command. @suryavir you may just need to upgrade protractor. protractor has selenium-webdriver as a dependency and older versions of protractor came with older bindings.. \n",
    "suryavir": "Hi @kormbrek-rally  I am running on selenium 3.12.0 and facing the issue. Which selenium version did you use to fix this? . @kormbrek-what does that exactly mean? selenium/standalone-chrome:3.11.0-dysprosium is a docker container containing selenium standalone and chrome I presume, but what is the python bindings you mentioned? Are you using some python framework for your web application which needs to be tested with selenium+chrome?  Thanks a lot in advance! . @kormbrek-rally interesting. I am new to this, so just to clarify then- My framework ie the client (protractor which is running tests of my angular app) is speaking to the client of selenium which in turn talks to the server of selenium which then talks to the marionette driver of firefox to allow firefox to run and run our tests. Is this correct? So in that case the issue is due to the client of selenium and selenium server having a mismatch? . @diemol did this issue get resolved? I am have this issue with 3.12.0 selenium firefox 60 geckodriver 0.20.1 and protractor 5.1.2. Any guidance on this would really help me out. In dire straits with this issue! Thanks. . ",
    "QA2017": "unknown error: failed to change window state to maximized, current state is normal\nI am angry, so so angry. ",
    "devesh-jelli": "The workaround pointed out by @shankarkc worked for me. I removed the maximize window call immediately after initializing the webdriver and that seems to have resolved the issue.. ",
    "joshmgrant": "I am having this same issue with a coworker using 3.8.1-bohrium and the NodeChrome container with Protractor 5.1.2, Chrome 63 and chromedriver 2.34. The above workarounds are not working in our Protractor config files. . ",
    "olivierhub": "I had the same problem. \nI found out that launching a window manager like fluxbox solves the problem.\nWithout a window manager, maximize fails. With a window manager, it succeeds.\nObviously you have to modify the docker image in order to install and launch fluxbox. \nIt could be a hint for debugging the root cause of the problem: maybe since chromedriver 2.30+ the maximize operation relies on the window manager, so it fails when there is not one.. ",
    "ZoeThivet": "@shankarkc it did help me, thank you :). ",
    "Shashank-Java": "I am having this same issue with Chrome 65 and chromedriver 2.36. \nI am using \"driver.manage().window().maximize();\" but it is not working, still I am getting same error.. ",
    "PratapAkshay": "clickonEquipments:function(){\n            driver.executeScript(\"windiw.scrollTo(0,1000)\");\n        }\nITs showing error : -\n(node:78923) UnhandledPromiseRejectionWarning: WebDriverError: unknown error: windiw is not defined\nplease help..?. ",
    "papegaaij": "I just confirmed that downgrading to selenium/standalone-chrome:3.5.2 fixes the issues we have. 3.5.3 is totally unusable for us, failing almost 50% of the tests.. ",
    "DannyBen": "So will the fixed docker image have the same 3.5.3 tag? If so, can you please post here when the new one is on docker hub?\n. ",
    "dearmond": "He probably meant that he'll push \"another release for 3.5\", meaning 3.5.4. Looking forward to it! My tests are breaking all over the place now!. Right. Thanks!. ",
    "gwhorleyGH": "Guessing that he won't wait for selenium 3.5.4 and simply tags 3.5.3 with another element name. ",
    "picklelv": "Also waiting for image with 2.32 Chromedriver.. ",
    "seamusabshere": "@glib-briia OK, what will kick off a new docker build? somebody else needs to merge something to master?. ",
    "tmigliorisi": "I'm having the same issue as well. Broke a lot of my UI automation scripts for RT... Does anyone know a turnaround? I've tried forcing the scroll but it does nothing.. @derinbay thank you! I upgraded the chromedriver after updating browser. Not sure why it didn't pick it up last time. I've just downloaded it again and rebooted my machine. It's working now with selenium 3.5.3.. ",
    "lindycoder": "That's great but the problem stays for this version.  Since i'm using the remote driver it uses the driver in the docker image.\nThe docker image selenium/standalone-chrome:3.5.3 derives from selenium/node-chrome:3.5.3 which uses driver 2.31\nhttps://hub.docker.com/r/selenium/node-chrome/~/dockerfile/\n...\nARG CHROME_DRIVER_VERSION=2.31\n...\nSo would that mean the 3.5.3 chrome image is not compatible with itself?. @derinbay cool, for my part 3.5.2 seems fine for my needs. @vibmish \nI've had a problem like this where a checkbox is kind of underneath a  that was made wider by css... although the checkbox is visible, there is in face an element above this.\nFor with fixed it by sending a \"space\" keypress to the checkbox and we found that only we only had the problem on chrome.\nSo maybe you could try with a firefox selenium container see if you get the same problem\nEDIT: By the way I don't think this problem is related to the scrolling issue. ",
    "osvalban": "I am still seeing this problem even after upgrading to 2.34. Note that my project requires the use of PyVirtualDisplay.\nEnvironment:\nchrome=63.0.3239.108\nDriver info: chromedriver=2.34.522913\nubuntu 16.04 LTS\nPython 3.6.3\nPyVirtualDisplay (0.2.1)\nTraceback (most recent call last):\n<snip>\nselenium.common.exceptions.WebDriverException: Message: unknown error: Element <button aria-label=\"... opens pop up\" class=\"actionable actionable_button actionable_full-width actionable_large-button actionable_no-outline actionable_prefix actionable_secondary-dark-affix\" type=\"button\" data-a=\" ... \">...</button> **is not clickable at point (494, 436). Other element would receive the click:** <h2 class=\" ... \" id=\"heading-11\">...</h2>\n  (Session info: chrome=63.0.3239.108)\n  (Driver info: chromedriver=2.34.522913 (36222509aa6e819815938cbf2709b4849735537c),platform=Linux 4.10.0-42-generic x86_64). ",
    "qw34ty": "Hey i have this issue too, but in my case some shitty overlay comes up, i put this in as workaround, but when i run headless throws the erro.\n>      time.sleep(10)\n         pyautogui.press('esc') #escape overlay\n         time.sleep(3). headless,\n^[('element not visible\\n  (Session info: headless chrome=63.0.3239.108)\\n  (Driver info: chromedriver=2.34.522913 (36222509aa6e819815938cbf2709b4849735537c),platform=Linux 4.13.0-21-generic x86_64)', None, None). ",
    "vibmish": "I am getting the same issue for one image element, is not clickable at point (106, 349). Other element would receive the click: \n(Session info: chrome=69.0.3497.42)\n        (Driver info: chromedriver=2.41.578706 (5f725d1b4f0a4acbf5259df887244095596231db),platform=Mac OS X 10.11.6 x86_64)\n. @lindycoder ok thanks. ",
    "danielmenezesbr": "Reference: https://developer.mozilla.org/en-US/Firefox/Headless_mode. ",
    "mykmelez": "\nThat's actually what selenium is about I think, be as close to a real experience as possible for UI automation.\n\nThat's a goal for the headless feature in Firefox as well: to run the full Firefox browser in a way that is as similar as possible to a user's experience of headed Firefox.\nAny differences between headed and headless Firefox (besides headlessness, of course) are thus considered to be Firefox bugs and should be reported via this bug reporting form. For example, see bug 1375585 - Support WebGL in headless mode. Here's the full list of open bugs.\n(Note: I'm the product manager for headless browsing in Firefox.)\n. ",
    "adiohana": "Are you saying we are able to run Firefox without Xvfb in headless mode?\nI'm getting this error:\nError: GDK_BACKEND does not match available displays. @graingert \nany documentation to follow for this?. ",
    "Lehtux": "@graingert could you please share how to get it working with headless?. ",
    "SavePointSam": "@graingert I've hit the same wall where running -headless still throws:\nError: GDK_BACKEND does not match available displays\nWhat else needs to be done to configure headless properly?. My solution was upgrading to Firefox 59. I was using Firefox 52 which didn't have proper support for -headless. It appears the functionality didn't get properly added until Firefox 55.. ",
    "gbataille": "Hi Diego,\nok sorry for the wrong alert.\nWhat's odd though is that on the cluster, I can't click on a checkbox that\nis inside a label, and on local I reproduced it with 3.0.0 so it looked\nreally promising.\nI'm back to square one then. Can't see what's the difference between my\nlocal setup and the cluster one :(\nThanks\nOn Tue, Sep 26, 2017 at 12:08 AM, Diego Molina notifications@github.com\nwrote:\n\nClosed #568 https://github.com/SeleniumHQ/docker-selenium/issues/568.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/568#event-1264637314,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABD76ddZ-vcvQUt7if6gmG4NY3hf4dm2ks5smCRvgaJpZM4PY7RY\n.\n. \n",
    "renereichenbach": "Thanks for your answer. I am using Behat and if I apply the changes in the config yml file it works for me. Super cool.\ndocker:\n  extensions:\n    Behat\\MinkExtension:\n      selenium2:\n        wd_host: selhub:4444/wd/hub\n        capabilities:\n          extra_capabilities:\n            chromeOptions:\n              args:\n                - \"--disable-infobars\"\nEnjoy\n. ",
    "dhanvi": "@testphreak I am trying to run the code within the container after the selenium server is up. (So I have started the script entry_point.sh)\nThink of it as I am trying to run a hello-world selenium project with in the container. (I am using curl here to see just the selenium server's status).. Apologies, multiple RUN commands is the culprit here. Every RUN command is created in a different container and the previous container is stopped.. ",
    "salimhamed": "Stupid, but subtle mistake.  Make sure the command_executor url doesn't have a trailing /.\nThis throws and exception:  'http://127.0.0.1:4444/wd/hub/'\nThis works fine:  'http://127.0.0.1:4444/wd/hub'. ",
    "buttesharad": "Hi,\nI have used java-script for the coding and protractor for automation.\nProtractor Version 5.1.2\nNode Version v4.6.1\nPFA attached Firefox config file.\nThanks & Regards,\nSharad\nBest Regards,\nSharadchandra Butte\nOn Fri, Sep 22, 2017 at 12:04 AM, Lucas Tierney notifications@github.com\nwrote:\n\nThat looks like it would be more of a selenium bug, you'll have to show us\nsome code and what language/version of bindings you are using\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/577#issuecomment-331243750,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Aeqsr8PxFDOtyCHbIwu8qhj9jxgOTYMtks5skqw8gaJpZM4Pe4Ea\n.\n\n\nexports.config = {\n    allScriptsTimeout : 230000,\n    framework : 'custom',\n    frameworkPath : 'node_modules/protractor-cucumber-framework',\n    capabilities: {\n        'browserName' : 'firefox',\n        'seleniumAddress' : 'http://10.XX.XX.XX:3444/wd/hub',\n        'unexpectedAlertBehaviour' : 'ignore',\n        'marionette': 'true',\n        'disable-popup-blocking' : true\n    },\nspecs : [\n\n'./features/XXXXXXX.feature',\n'./features/XXXXXXX.feature'\n    ],\n    maxSessions : 1,\n    cucumberOpts : {\n        require : [ './features/step_definitions/*.js',\n                './features/support/*.js' ],\n        format : \"pretty\"\n\n    },\nonPrepare : function() {\n    protractor.basePath = __dirname;\n    protractor.count=0;\n    protractor.count1=0;\n    browser.manage().timeouts().pageLoadTimeout(400000);\n    browser.manage().timeouts().implicitlyWait(25000);\n    // For non-angular page\n    browser.ignoreSynchronization = true;\n    browser.getCapabilities().then(function(capabilities) {\n        console.log(\"PREPARE CAP\" + capabilities);\n        console.log(\"BROWSERTYPE\" + capabilities.get('browserName'));\n        browser.browserName = capabilities.get('browserName');\n\n    });\n\n    protractor.ActionSequence.prototype.sleep = function(delay) {\n        var driver = this.driver_;\n        this.schedule_(\"sleep\", function() {\n            driver.sleep(delay);\n        });\n        return this;\n    };\n\n    protractor.ActionSequence.prototype.perform = function() {\n        var actions = this.actions_.slice();\n        var driver = this.driver_;\n        return driver.controlFlow().execute(function() {\n            actions.forEach(function(action) {\n                var command = action.command;\n                if (typeof command === \"function\")\n                    driver.flow_.execute(command);\n                else\n                    driver.schedule(command, action.description);\n            });\n        }, 'ActionSequence.perform');\n    };\n\n    protractor.ActionSequence.prototype.clickAndHold = function(elm) {\n        return this.mouseDown(elm).sleep(3000).mouseUp(elm);\n    };\n\n}\n\n};. Hi Diego,\nI have facing problem for Firefox browser.\nBelow is my cucumber test:\nFeature: List_or_Find_Application and Video Tutorial\nAs sharad I want to see my application design environment immediately after\nlogging in so that I can focus on my main role.\nScenario Outline: Application design environment\n  Given  is logged in\n  Then  User should see the application design environment\n  And   The list of applications should be available\n  And   The New Application Card should be present\nExamples:\n|User id |\n|\"sharad\"|\nAlso PFA package.json file.\nThanks & Regards,\nSharad\nBest Regards,\nSharadchandra Butte\nOn Tue, Sep 26, 2017 at 2:31 AM, Diego Molina notifications@github.com\nwrote:\n\n@buttesharad https://github.com/buttesharad\nI started the images like this:\ndocker run -d -p 4444:4444 --name selenium-hub selenium/hub:3.5.3-boron\ndocker run -d --link selenium-hub:hub selenium/node-chrome:3.5.3-boron\nAnd then I tried to reproduce it with a simple Protractor test, but I\ncould not.\nThis is the code I used: https://github.com/diemol/\nfrontend_testing/tree/docker-selenium-tests/issue-577\nWe need more details, the package.json file and an actual test to\nreproduce the issue, otherwise it is really hard to identify where the\nproblem is.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/577#issuecomment-332011301,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AeqsrzZwRDQf7RhkqbBgQOeV8mquzTWtks5smBSTgaJpZM4Pe4Ea\n.\n. This is package.json file:\n\n{\n  \"name\": \"protractor\",\n  \"description\": \"Webdriver E2E test wrapper for Angular.\",\n  \"homepage\": \"https://github.com/angular/protractor\",\n  \"keywords\": [\n    \"angular\",\n    \"test\",\n    \"testing\",\n    \"webdriver\",\n    \"webdriverjs\",\n    \"selenium\"\n  ],\n  \"author\": {\n    \"name\": \"Julie Ralph\",\n    \"email\": \"ju.ralph@gmail.com\"\n  },\n  \"dependencies\": {\n    \"adm-zip\": \"0.4.7\",\n    \"chalk\": \"^1.1.3\",\n    \"glob\": \"~6.0\",\n    \"jasmine\": \"2.4.1\",\n    \"jasminewd2\": \"0.0.9\",\n    \"optimist\": \"~0.6.0\",\n    \"q\": \"1.4.1\",\n    \"request\": \"~2.67.0\",\n    \"saucelabs\": \"~1.0.1\",\n    \"selenium-webdriver\": \"2.52.0\",\n    \"source-map-support\": \"~0.4.0\"\n  },\n  \"devDependencies\": {\n    \"body-parser\": \"1.14.2\",\n    \"chai\": \"~3.4.1\",\n    \"chai-as-promised\": \"~5.2.0\",\n    \"clang-format\": \"^1.0.34\",\n    \"expect.js\": \"~0.3.1\",\n    \"express\": \"~4.13.3\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-clang-format\": \"^1.0.23\",\n    \"jshint\": \"2.9.1\",\n    \"lodash\": \"^4.5.1\",\n    \"marked\": \"^0.3.3\",\n    \"mocha\": \"2.3.4\",\n    \"rimraf\": \"~2.5.0\",\n    \"run-sequence\": \"^1.1.5\",\n    \"typescript\": \"1.8.2\",\n    \"typings\": \"^0.8.1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/angular/protractor.git\"\n  },\n  \"bin\": {\n    \"protractor\": \"bin/protractor\",\n    \"webdriver-manager\": \"bin/webdriver-manager\"\n  },\n  \"main\": \"built/protractor.js\",\n  \"scripts\": {\n    \"prepublish\": \"gulp prepublish\",\n    \"pretest\": \"gulp pretest\",\n    \"start\": \"node testapp/scripts/web-server.js\",\n    \"test\": \"node scripts/test.js\",\n    \"tsc\": \"./node_modules/typescript/bin/tsc\",\n    \"tsc:w\": \"./node_modules/typescript/bin/tsc -w\"\n  },\n  \"license\": \"MIT\",\n  \"version\": \"3.3.0\",\n  \"gitHead\": \"2800215576e0b9c97f20253f034dd0e0139dd5ee\",\n  \"bugs\": {\n    \"url\": \"https://github.com/angular/protractor/issues\"\n  },\n  \"_id\": \"protractor@3.3.0\",\n  \"_shasum\": \"7f4468306ac29a315086daf64a2b4a15c0bc1317\",\n  \"_from\": \"protractor@3.3.0\",\n  \"_npmVersion\": \"3.6.0\",\n  \"_nodeVersion\": \"5.5.0\",\n  \"_npmUser\": {\n    \"name\": \"angularcore\",\n    \"email\": \"angular-core+npm@google.com\"\n  },\n  \"dist\": {\n    \"shasum\": \"7f4468306ac29a315086daf64a2b4a15c0bc1317\",\n    \"tarball\": \"https://registry.npmjs.org/protractor/-/protractor-3.3.0.tgz\"\n  },\n  \"maintainers\": [\n    {\n      \"name\": \"juliemr\",\n      \"email\": \"ju.ralph@gmail.com\"\n    },\n    {\n      \"name\": \"angularcore\",\n      \"email\": \"angular-core+npm@google.com\"\n    }\n  ],\n  \"_npmOperationalInternal\": {\n    \"host\": \"packages-16-east.internal.npmjs.com\",\n    \"tmp\": \"tmp/protractor-3.3.0.tgz_1461623805977_0.6117142830044031\"\n  },\n  \"directories\": {},\n  \"_resolved\": \"https://registry.npmjs.org/protractor/-/protractor-3.3.0.tgz\"\n}\n. ",
    "deiwin": "For anybody else running into this, we're using the following desired capabilities to work around this issue at the moment:\njson\n\"chrome_options\": {\n  \"args\": [\"--no-sandbox\"],\n  \"binary\": \"/usr/bin/google-chrome\"\n}\n. Sure thing! Updated.\nLet me know if you have any other requests, @diemol. Thanks!. ",
    "EricTheRed-VT": "Selenium does not follow semver at all. \nhttps://github.com/SeleniumHQ/selenium/commit/8c9d0185e220e55d12071acb58913c2c8f80ee8d#commitcomment-32222018. ",
    "ConquerOR2": "Looks as if issue was fixed by the development team with the latest release. Upgrading the software resolved the issue.. ",
    "Lgalan90": "I am also receiving the error: Starting ChromeDriver 2.32.498513 (2c63aa53b2c658de596ed550eb5267ec5967b351) on port 31324\nOnly local connections are allowed.\nBut I only receive it when I run the Selenium as a service, When I run it using the command line it creates the sessions successfully for each of the browser along with it's driver installed on the machine. I still have not found a solution but I'll follow this thread in case of any news.. ",
    "mitchellmaler": "I just updated the tag to the latest and that fixed this issue. I'll need to pay more attention when new releases come out! \nThanks!. ",
    "vamshiangala": "@diemol \nBelow is the command used to start the docker containers.\n$ docker run -d -p 4444:4444 selenium/standalone-chrome. @diemol\nWe have pulled docker image for selenium standalone chrome in a instance and converted into AMI and added to a cluster. While we are creating Task Definition for this we are defining shared memory (/dev/shm). \nAs we are predefining shared memory in task definition, we are not giving /dev/shm (2GB) as a parameter while starting docker instance. We can also see the shared memory (/dev/shm) in the file system when we log into the instance and check.\nBut still chrome is crashing while execution.\n. ",
    "gundal": "This worked for us, thank you for the /dev/shm tip @diemol . ",
    "mrSingh007": "I have added more info. \ud83d\udc4d . ok I will try again. I tried your version but problem is still there. If we try to print on Google its working as Google Homepage is very light. Try on https://www.amazon.de/  <-- here it driver will crash as Amazon website have more content as compare to Google.\n@diemol . yes, now its working perfect. You may close this issue. Thanks.. ",
    "straris": "@diemol indeed tried with both images, issue is still there.\nAlso 3.6.0-copper. Closing this, it was because I run the container without -v /dev/shm:/dev/shm. ",
    "boydj": "@eitany How did you resolve? Seeing the same problem in openshift.. ",
    "simplyviks": "Hi @diemol \nThanks for responding. \nI use docker-compose utility to start the containers.\nEG:docker-compose -f compose file start\nFYI, No other service in the environment uses the port 5902,so is there any leaks on port release?\n. I cannot share the entire docker file   :)\nbelow is the service.\nselenium-server:\n        image: ${env.getValue(\"docker_config.artifactory_url\")}/selenium-standalone-firefox-debug:3.4.0\n        container_name: selenium-server\n        shm_size: 2g\n        restart: always\n        ports:\n            - \"4444:4444\"\n            - \"5902:5900\"\n        stdin_open: true\n        tty: true\n        networks:\n            - XXX_net\n        logging:\n            driver: fluentd\n            options:\n                fluentd-address: \"0.0.0.0:24224\"\n                tag: \"docker.{{.ID}}\"\n        depends_on:\n            - fluentd\nIs there a way i can ask the service to keep retrying for the tcp port to be free.?. ",
    "pabloFuente": "Hello again. I am glad to answer your questions:\n- The size of the image grows from 740 MB to 790 MB.\n- Your requested change is pretty convenient. I have already commited it: now package is installed on user root without sudo instead of in seluser. Everything's still working fine, as before.\nThank you.. There it goes. Updated to master.. ",
    "bonigarcia": "Hi @ddavison. If I may, I would like to put in my two cents here.\nThe whole point of this PR is to made available Firefox for testing WebRTC applications using dockerized browsers. I trace the problem in the past, as explained in the stackoverflow question previously linked by @pabloFuente. The problem started in Firefox 52. It seems the internal implementation of the WebRTC stack requires pulseaudio to work as of this version.\nRegarding your first and second questions, it is required by people testing WebRTC applications and using the latest versions of Firefox by means of Docker. Regarding your third question, I disagree with your comment. Selenium is perfectly capable of that. In fact, it is a must to make it in an automated fashion, since the WebRTC stack is mainly implemented in modern real browsers such as Chrome or Firefox, and therefore, to test these services properly, we need to drive programmatically browsers (i.e. using Selenium). Here, in my opinion it is very interesting to use dockerized browsers, for example to carry out compatibility tests (i.e. different version or browser type) or performance test (i.e. use a lot of browsers in a test), but at this moment it is not possible using the official Selenium Docker images, which is a pity for the open source community.\nRegarding your last comment, no, Chrome does not require pulseaudio. I suppose this is because the internal implementation of the WebRTC is different in Chrome. But IMHO this should not affect the final decision about merging this PR.. @ddavison Cool, thanks to you!. ",
    "barahate90": "@diemol  : Great !!, It didn't clicked me that point of time . Appreciate your work  . . @diemol :  I was not dealing with Make file in right way. Thank you for right direction \nWorks fine !! \n. @dezoito  : this script is to run Selenium Standalone as mentioned in comment .\nPlease check this https://github.com/SeleniumHQ/docker-selenium/tree/master/StandaloneFirefox\nhere they are trying to run same \"selenium Standalone \", entry point.sh is also present .\ntry copying this  entry_point.sh to StandaloneFirefoxDebug  ,It will give you desired result .\n. ",
    "phuongnd08": "We are using default command (the entry). After adding such params we have yet to observe the issue again. Will report if it happen.. Okay, with that command all we get is this: \n```\nxvfb-run: error: Xvfb failed to start\nExited with code 1\n``\nDo you have recommendation on a flag that would dump more of the error?\nThe command to run isdocker run -it standalone-chrome:3.7.1-beryllium` (just a guess because we declare the image and CircleCI 2.0 execute it).. I already did this. Though I would like to think having such change will make it easier for people to report and diagnose the issue (which can come in a variety of forms). ",
    "yasaichi": "@phuongnd08\nPerhaps you use -browsers image for the primary container?\nIf so, you can fix this problem by using the image without -browsers, for instance circleci/ruby:2.4.2-node.. ",
    "danish-monu": "THESE COMMANS WORK for the standalone chrome container (without selenium hub):\n1. docker run --network host -d -p 4444:4444 selenium/standalone-chrome\n2. capabilities.setCapability(CapabilityType.PROXY, proxy), where proxy is localhost:port\nTHESE COMMANDS DO NOT LEAD TO WORKING INTERNET CONNECTION in a chrome node managed by selenium hub:\n1. docker run --network host -d -p 4444:4444 --name selenium-hub selenium/hub\nAND\n1. docker run --network host -d -p 4444:4444 --name selenium-hub selenium/hub\n2. docker run --network host -d --link selenium-hub:hub selenium/node-chrome\n. ",
    "breilly2": "Thanks for the follow-up and for creating the example project. I did run it and it passed. There must be something different in our project. I'll see about getting the example project into a state that fails in the way I described.. You had the right intuition. Looks like we were using 2.35.0 client libraries for some reason. Yikes! Switched to 3.8.1 and now it works.\nSo, if the intent was to not break this level of backwards compatibility going from 3.7 to 3.8 then this issue is still valid. Otherwise, I apologize for the false alarm and thank you for your help!. ",
    "rajaraman-mahalingam": "Image(s): selenium/standalone-chrome \nDocker-Selenium Image Version(s): \nDocker Version:\nOS: Linux on Circleci 2. Hello @diemol,\nThanks for your suggestion. I did your steps but with no luck. I have also updated the chromedriver version on my build but it is throwing up \"invalid element state: Element is not currently interactable and may not be manipulated\" for most cases. I have set the waits properly so wasn't expecting this at all. \nThe issue is everything runs fine locally and they were running well until a week back on circleci too. \nFYI, mine is a maven project and in my pom file have set the dependencies for selenium-server to LATEST (which is 3.8.1). In circleci, I build the image and run my tests using mvn site command. \nI am clue less as what could have caused to break the tests but happy to try out anything to get this fixed. \nPlease suggest. Thanks\n. @diemol @dvarrazzo as for my tests, i set them to use the kiosk mode in the chrome driver desired capabilities. . ",
    "dvarrazzo": "I can confirm this issue. Some tests were working on my desktop using the image:\nselenium/hub    latest    382bf96c8bde    3 weeks ago    296MB\nand failed on our gitlab ci using the image:\nselenium/hub    latest    059301140ded    8 days ago    297MB\nafter I refreshed the image on my desktop, tests started failing there too, so at least now I can debug them.\nMy tests start with --window-size=1280,1024 but capturing a screenshot on the failing one the image size resuls 1050 x 895, which makes the tests fail because certain items cannot be reached on the right of the screen. Even trying with a smaller --window-size such as 1024 x 768, the screenshot size remains the same.\n. Another note: the browser whose window is the wrong size is:\nselenium/node-chrome    latest    62f850f3eb36    8 days ago    826MB\nConnecting a real browser to the hub, the window appears right. tested using the hub node:\n$ java -jar ~/Downloads/selenium-server-standalone-3.5.3.jar -role node -hub http:localhost:4444/grid/register\nand Google Chrome 63.0.3239.52 beta on Ubuntu 16.04\n. Using the image selenium/hub:3.7.1 makes my tests pass. The regression is between 3.7.1 and 3.8.1.\n. The issue I've verified is with the docker image of selenium/hub version 3.8.1. Using a docker compose such as:\n```yaml\nservices:\n  selenium-hub:\n    image: selenium/hub:3.8.1\n    ports:\n      - \"4444:4444\"\nchrome:\n    image: selenium/node-chrome:3.8.1\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    volumes:\n      - /dev/shm:/dev/shm\n```\nthe browser will not respect the desired initial size such as (Python):\npython\n    caps['chromeOptions'] = {'args': ['--window-size=1280,1024']}\nUsing image: selenium/hub:3.7.1 instead the initial size works as expected. The issue is revealed changing the hub version, not the node-chrome version. This is the minimal change in my deployment to reproduce the issue, sorry if I can't be more useful, I don't know much about selenium internals.\n. Sorry but it was just trivial to test... whatevs. Here it is:\n```yaml\nfile: docker-compose.yml\nversion: '2'\nservices:\n  selenium-hub:\n    image: selenium/hub:3.8.1          # 3.7.1 works instead\n    ports:\n      - 14444:4444\nchrome:\n    image: selenium/node-chrome:3.8.1\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    volumes:\n      - /dev/shm:/dev/shm\n```\n```python\nfile: stest.py\nfrom selenium import webdriver\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\ncaps = DesiredCapabilities.CHROME\ncaps['chromeOptions'] = {'args': ['--window-size=1280,1024']}\nr = webdriver.Remote(\n    command_executor='http://localhost:14444/wd/hub',\n    desired_capabilities=caps)\nprint r.get_window_size()\nr.quit()\n```\n$ docker-compose up -d\nStarting stest_chrome_1\nStarting stest_selenium-hub_1\n$ python stest.py \n{'width': 1050, 'height': 1000}\nUsing selenium/hub:3.7.1 instead:\n$ python stest.py \n{'width': 1280, 'height': 1024}. Wouldn't it a good idea if DesiredCapabilities.CHROME added it itself? I have noticed you quite like scope, but having two layers of scope to define the same thing seems a bit redundantly redundant. Also, you broke backward compatibility.\n. ",
    "ajohnsen": "I have found a similar problem with the newest version, it works if i downgrade to 3.7.1.\nMy issue happens when switching to an iFrame inside the site\nIt starts by doing this:\n// frameName is the name of the iFrame\ngetWebDriver().switchTo().frame(frameName);\nand then it fails with element not found when trying to find something in the iFrame.\n// xpath is the body of the iFrame (//body/embed)\ngetWebDriver().findElement(By.xpath(xpath));. I changed to using the 3.7.1 in the build Pipeline and I think that fixed it, but will try to make a small script to reproduce it as soon as I have some free time. \n\n\njan. 2018 kl. 17:54 skrev Dj notifications@github.com:\n\nI'm willing to bet all of these issues are stemming from static tagging issues.\n@ALL, don't use the latest tag if you can help it. issues like this will pop up very frequently if you do so.\nInstead, you can use a fixed tag: :3.7.1 and update it when ready. You can even use a specific version tag: :3.7.1-cadmium. if no script that can reproduce this issue can be provided, i'm going to close this issue\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "mr-raptor": "It doesn't seems to be the same issue. I have no extra data in /home directory, \nBut here is content of /tmp in selenium-hub container: http://prntscr.com/hmw0ot\nAnd it grows very fast. In 5 minutes it reached 4gb.\nI also checked another selenium versions and it looks like this issue is specific to 3.8.*. That's nice. Thank you very much!. ",
    "Jiff21": "Hi, \nSo you can't just add a flag to the gitlab-ci.yml from what I can tell. The documentation seems to have a way to do this to the whole runner, so I'm waiting on internal bureaucracy to see if we can turn it up for our instance which has a cost attached to it. I'll update when I find out.\nBut my thoughts on not waiting till then to file an issue was that if this is really some sort of memory leak, then as test grow we'll keep running into this and keep having to dial shm_size up. So if the shm_size is reallt a workaround, wouldn't it make sense to still fix the underlying issue?\nIf I find time I'll try to write up something that can reproduce it that I can actually share.. ",
    "JalilArfaoui": "Here some activity :-)\nCan we re-open ? It's really annoying to have to change the whole Gitlab runner configuration for the whole company to be able to run Selenium docker image .... OK thank you @diemol  \nI made it work with the shm option on the runner. . ",
    "ViljarVoidula": "@diemol Thank You so much for fast response. I did setup a repository so the problem would be easy to reproduce . https://github.com/ViljarVoidula/nightwatch-selenium-firefox. You will need https://yarnpkg.com/en/docs/install . I did find issue facing quite similar problem in geckodriver https://github.com/mozilla/geckodriver/issues/1015 . Maybe my problem is duplicate of the issue mentioned there, but I'm not enough experienced yet to confirm that .\nI use docker-compose up\n\nversion: \"2\"\nservices:\n  selenium-hub:\n    image: selenium/hub\n    container_name: selenium-hub\n    environment:\n      - GRID_MAX_SESSION=100\n    ports:\n      - \"4444:4444\"\n    volumes: [\"/dev/shm:/dev/shm\"]\n    privileged: true\n  chrome:\n    image: selenium/node-chrome-debug\n    privileged: true\n    depends_on:\n      - selenium-hub\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n      - SCREEN_WIDTH=1920\n      - SCREEN_HEIGHT=1080\n      - VNC_ENABLED=true\n    ports:\n      - \"5900\"\n    volumes: [\"/dev/shm:/dev/shm\"]\n  firefox:\n    image: selenium/node-firefox-debug\n    privileged: true\n    depends_on:\n      - selenium-hub\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=selenium-hub\n      - HUB_PORT_4444_TCP_PORT=4444\n      - SCREEN_WIDTH=1920\n      - SCREEN_HEIGHT=1080\n      - VNC_ENABLED=true\n    volumes: [\"/dev/shm:/dev/shm\"]\n    ports:\n      - \"5900\"\n  . @diemol Thank you very much for confirmation. Atleast now I have somekind of direction to go on with that's confirmed by expert .. @ddavison \nI have tested player front-end wrappers for a while now , depending on project I've used different methods to get player related information ( executing client-side js to alert state for example and using that to validate in tests , why alert, cause alert is synchronous call and stops all other clientside JS so i can trust that it outputs always correct value from player - hacky, but its not stupid if it works) . \n. @diemol - it does not have to be ffmpeg to enable video playback option ( recording is not in scope, just playback) . I just used ffmpeg cause i knew it's enabled by default if present in system . I found a mozilla bug from past https://bugzilla.mozilla.org/show_bug.cgi?id=1207429 . Maybe there's smaller packages aswell.\nAt the moment it's kinda awkward that chrome nodes have codecs enabled, and video playback is possible, and firefox does not. \n\nelgalu/selenium is great - tested and it works .\nIn the end i think it's up to you , i understand your point and adding a extra complexity is always adding an extra package to check and maintain. Perhaps a small note somewhere in Readme that official HQ image does not support video playback within FF container and reference to elgalu , similar to http://www.seleniumhq.org/download/ and not developed by seleniumhq section ? \nWhatever you choose - I respect your decision .\n. ",
    "sahil1610": "I am passing these through docker compose:\nenvironment:\n            - no_proxy=localhost\n            - TZ=Europe/London\n            - HUB_PORT_4444_TCP_ADDR=progrid\n            - HUB_PORT_4444_TCP_PORT=4444\n            - SE_OPTS=-enablePassThrough false\nAnd when I check this on hub console, enablePassThrough is still true.. @diemol any help on this?. Thanks @diemol.\nThis indeed is working to set enablePassThrough to false for the hub.\nBut this doesn't make actions library to work in firefox, which is actually working if I am NOT using selenium grid.\nAny idea about this?. Thanks @diemol . ",
    "AlinaIo": "Hey @ddavison https://github.com/ddavison\nI have extracted from our framework the script we are running. Please find\nattached. The commented parts are extra options we are using, but I\ncouldn't find one that breaks things. I left them there so you can\nun-comment them and try.\nWhen I initially tried with the new, extracted from the framework script,\nit actually worked. But after some time, after trying multiple times it\nstarted failing and the browser crashing.\nThe docker-compose.yml file is also attached. I am running the test from my\nlocal Intellij.\nI am using VNC Viewer extension from Google to see what happens inside the\ncontainer. And here is a screenshot with the browser crashing when I start\nit manually from shell and try to run the test. Maybe the error displayed\nthere will help.\nLet me know if you need more info. Or we can make a video call and debug,\nif necessary.\n[image: Inline image 1]\nThank you,\nAlina\nOn Fri, Jan 12, 2018 at 5:39 PM, Dj notifications@github.com wrote:\n\nhey @AlinaIo https://github.com/alinaio thanks for your report.\nCould you do us a favor and provide a script that we can run, as well as\nyour docker run command or docker-compose file.\nThis will help us immensely, and we can figure this out.\nThanks! \ud83d\udc4d\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/650#issuecomment-357271501,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMZf-Es7xgWyb4a0CfeFY8CgmzFUqH0Tks5tJ3yogaJpZM4RcayW\n.\n. Hi, Sorry about that. This should be better :)\n\ndocker-compose.yml\n===============\nversion: '2'\nservices:\n  hub:\n    image: selenium/hub:3.8.1\n    ports:\n      - \"4444:4444\"\n  firefox:\n    image: selenium/node-firefox-debug:3.8.1\n    privileged: true\n    dns:\n       - 10.12.1.147\n    environment:\n      - TZ=DE\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    depends_on:\n      - hub\n    ports:\n      - 5900\n===================\nI run that like this:\ndocker-compose up -d hub firefox\n=========================\nThe test that I run from my local Intellij.\nI have extracted from our framework the script we are running. The commented parts are extra options we are using, but I couldn't find one that breaks things. I left them there so you can un-comment them and try.\nWhen I initially tried with the new, extracted from the framework script, it actually worked. But after some time, after trying multiple times it started failing and the browser crashing.\n```\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.firefox.FirefoxOptions;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.testng.annotations.Test;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport static java.lang.Thread.sleep;\npublic class TestFirefox {\n    @Test\n    public void test_firefox_crash() throws InterruptedException, MalformedURLException {\n//        FirefoxProfile fp = new FirefoxProfile();\n//        fp.setPreference(\"browser.startup.homepage\", \"about:blank\");\n//        fp.setPreference(\"startup.homepage_welcome_url\", \"about:blank\");\n//        fp.setPreference(\"startup.homepage_welcome_url.additional\", \"about:blank\");\n        FirefoxOptions fo = new FirefoxOptions();\n//        fo.setLogLevel(FirefoxDriverLogLevel.TRACE);\n//        fo.setProfile(fp);\n//        fo.setCapability(\"overlappingCheckDisabled\", true);\n//        System.setProperty(\"webdriver.firefox.logfile\", \"/dev/null\");\n        RemoteWebDriver driver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), fo);\n    driver.get(\"https://shop.haufe.de/\");\n    driver.findElement(By.id(\"headerAccount\")).click();\n    sleep(1000);\n    driver.findElement(By.partialLinkText(\"Zur Anmeldung\")).click();\n    sleep(1000);\n    driver.findElement(By.id(\"regEmail\")).sendKeys(\"driver@mailinator.com\");\n    driver.findElement(By.id(\"password\")).sendKeys(\"123456\");\n    sleep(1000);\n    driver.findElement(By.xpath(\"//*[@id=\\\"nextTop\\\"]\")).click();\n\n//        Actions builder = new Actions(driver);\n//        WebElement loginButton = driver.findElement(By.xpath(\"//[@id=\\\"nextTop\\\"]\"));\n//        if (driver.findElements(By.xpath(\"//[@id=\\\"nextTop\\\"]\")).size() > 0) {\n//            builder.click(loginButton).build().perform();\n//        }\n        sleep(10000);\n        //Fails here. After clicking on Login button.\n        driver.findElement(By.xpath(\"//a[@class='btn_headerAccount active icon']\")).isDisplayed();\n        driver.quit();\n    }\n}\n```\n==============\nI am using VNC Viewer extension from Google to see what happens inside the container. And here is a screenshot with the browser crashing when I start it manually from shell and try to reproduce what the test does. Maybe the error displayed there will help.\nLet me know if you need more info. Or we can make a video call and debug, if necessary.. Seems like this was the problem. Thank you so much for looking into this. You can close the issue.. ",
    "liyuanzao": "Hi @diemol \nI tested a whole day today, this issues happened all version I tested in Firefox Node ( both debug and non-debug, 3.7.1 and 3.8.1 version), and I tried on my Synology NAS system (Linux) and Centos 7.\nit always happen, but only for firefox which I tested above, I haven't tested more version so far. \nif you need any test about it, feel free to let me know . ",
    "xMutaGenx": "I was also able to replicate this issue with the following docker-compose.yml\nversion : '3'\nservices:\n    selenium-hub:\n      image: selenium/hub:3.8.1-erbium\n      container_name: local-selenium-hub\n      ports:\n        - '4444:4444'\n      environment:\n        - SE_OPTS=-enablePassThrough false\n    firefox:\n      image: selenium/node-firefox:3.8.1-erbium\n      environment:\n        - HUB_PORT_4444_TCP_ADDR=local-selenium-hub\n        - HUB_PORT_4444_TCP_PORT=4444\n      depends_on:\n        - selenium-hub\nFF: v57.0.4\nGecko: v0.19.1.20171103\nNote: SE_OPTS are there for our project, as Facebook Webdriver doesn't have support for W3C\nInterestingly this doesn't seem to be failing when running the standalone version installed via brew install selenium-server-standalone (which runs Selenium v3.8.1). Hey @diemol it does seem like it's a problem with PHP bindings. The easiest way to replicate this is to start up your selenium server, and clone out facebook/php-webdriver community repo then just:\ncomposer install\nphp -f example.php\nI will raise an issue there as well when I find the time.\nThank you.. @diemol I believe -enablePassThrough wasn't the actual issue, as seen I've used that in my examples. I've dug deeper into the php web-driver and I believe I found the culprit https://github.com/facebook/php-webdriver/issues/525. ",
    "varp": "Hi, @diemol . You right the urls in tests also use app. Below you can see my config for Yii\nclass_name: AcceptanceTester\nmodules:\n  enabled:\n    - \\tests\\codeception\\modules\\DbHelper\n    - \\tests\\codeception\\frontend\\common\\AcceptanceHelper\n    - WebDriver:\n        browser: 'chrome'\n        url: 'http://app/'\n        window_size: '1400x900'\n        host: 'webdriver'\n        port: '4444'\nWhen I connect by to webdriver container and install curl, I can easyly access the http://app/ . https://imgur.com/a/rNCNq There is screenshot of what error show Chrome . I figured out what the problem is. The GoogleChrome redirecting http://app to https://app also as http://dev and all domains having TLD .dev. Thx, it works !. @Leoxxid my problem was that I've used .dev which blocked by Chrome. I mean since version 63 of Chrome, .dev gTLD is used for internal use. Now, I'm using .test gTLD for developing. ",
    "Leoxxid": "@varp How you resolved?. ",
    "olexandrd": "Hi, @diemol ,\nI added selenium start check to my behat's entrypoint script as described in your link. \n``` \n!/bin/bash\nuntil nc -z selenium 4444 ; do\n    >&2 echo \"Selenium unavailable - sleeping\"\n    sleep 2\ndone\n...\ncd ${WORKSPACE}\nbin/behat -vvv -p selenium\n```\nMy tests freezes not straight after launch, they passed a few minutes and hands after that. \nI'm trying to find a root cause.  I also noticed that when I killed chrome and chromedriver after tests hands behat keep hands, but when I killed selenium, behat show error that Selenium2Driver cannot create a new session. \nSo, maybe, there is a problem with chromedriver or with tests.\n. Hi, @diemol,\nI found where was the problem. \nMy docker-compose launch string:\ndocker-compose -f docker/docker-compose-behat.yml up --build --abort-on-container-exit php behat-test\nI started directly only 2 containers (php & behat-test), for keeping logs from that containers only. Selenium container was started too, as dependency, but there were no log output for it. Looks like selenium container hangs when log buffer was full.\nLaunch docker-compose without specifying dedicated container fix the problem, but output in Jenkins looks messy (I got useless logs from redis, rabbitmq and other services). So I added SE_OPTS=-log /tmp/selenium.log to selenium environment and all works properly. \nAlso I will try to tune docker logging as described in link.\nSo I close issue, problem was caused by wrong configuration.\n. ",
    "psmod2": "Great. All good now!\nAlso found this 'vendor-prefixed' detail here: https://bugs.chromium.org/p/chromedriver/issues/detail?id=1786. ",
    "bscheshirwork": "I try to check it with firefox\n```\n Test  tests/acceptance/HomeCest.php:checkHome\n[Facebook\\WebDriver\\Exception\\UnrecognizedExceptionException] Failed to convert secure to boolean\nBuild info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z'\nSystem info: host: '9094c2664d7d', ip: '172.20.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-109-generic', java.version: '1.8.0_151'\nDriver info: driver.version: unknown  \n/repo/vendor/facebook/webdriver/lib/Exception/WebDriverException.php:158\n/repo/vendor/facebook/webdriver/lib/Remote/HttpCommandExecutor.php:320\n/repo/vendor/facebook/webdriver/lib/Remote/RemoteWebDriver.php:535\n/repo/vendor/facebook/webdriver/lib/Remote/RemoteExecuteMethod.php:40\n/repo/vendor/facebook/webdriver/lib/WebDriverOptions.php:55\n/repo/src/Codeception/Module/WebDriver.php:807\n/repo/src/Codeception/Coverage/Subscriber/LocalServer.php:164\n/repo/src/Codeception/Coverage/Subscriber/LocalServer.php:90\n/repo/vendor/symfony/event-dispatcher/EventDispatcher.php:212\n/repo/vendor/symfony/event-dispatcher/EventDispatcher.php:44\n/repo/src/Codeception/PHPUnit/Listener.php:131\n/repo/src/Codeception/PHPUnit/Listener.php:100\n/repo/vendor/phpunit/phpunit/src/Framework/TestResult.php:395\n/repo/src/Codeception/Test/Test.php:74\n/repo/vendor/phpunit/phpunit/src/Framework/TestSuite.php:755\n/repo/src/Codeception/PHPUnit/Runner.php:106\n/repo/src/Codeception/SuiteManager.php:157\n/repo/src/Codeception/Codecept.php:189\n/repo/src/Codeception/Codecept.php:158\n/repo/src/Codeception/Command/Run.php:355\n/repo/vendor/symfony/console/Command/Command.php:252\n/repo/vendor/symfony/console/Application.php:938\n/repo/vendor/symfony/console/Application.php:240\n/repo/vendor/symfony/console/Application.php:148\n/repo/src/Codeception/Application.php:108\n/repo/codecept:42\n```. I catch this on docker-compose with 3+ containers... I try to reproduce it... May be problem (this issue) in non-first request on command chain (set/read cookie, id). I am so sorry) \nBut I change code of Codeception (add amOnPage('/') to change start page before set cookies) and problem is lost.\nI close issue (I think we need first set start page is a '/', second setCookie). Oh... I try it again with downgrade \nselenium/standalone-chrome-debug:3.8.1\nerror still alive %). I try to use firefox \nurl is correct \nphp\n172.19.0.3 - - [21/Feb/2018:17:28:48 +0300] \"GET /index-test.php/site/index HTTP/1.1\" 200 3485 \"-\" \"Mozilla/5.0 (X11; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0\"\nbut I have another error with $I->moveMouseOver({\"css\":\".selector\"}). I try with \nimage: selenium/standalone-chrome-debug:3.7\nAll is ok.\n```log\n172.19.0.3 - - [21/Feb/2018:18:11:23 +0300] \"GET /index-test.php/site/index HTTP/1.1\" 200 3485 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\"\n```\nbut I can't remember... I has been use selenium/standalone-chrome-debug:3.8.1 approximate a half month ago... And this tag has worked correctly. I try with fresh \nyml\n    image: selenium/standalone-chrome-debug:3.10.0\nerror still alive\n```log\n172.19.0.3 - - [05/Mar/2018:12:54:36 +0300] \"\\x16\\x03\\x01\\x00\\xC3\\x01\\x00\\x00\\xBF\\x03\\x03\\xAF9\\xFB8R\\x84\\xB0\\x1C{\\xEF\\x98\\x14$\\xF3/\\xE2Z\\xB5\\x8E\\x89\\xFB\\xA8\\x82\\xBD\\xEA\\x96\\xD1W\\x5C\\xABN[\\x00\\x00\\x1C\\xAA\\xAA\\xC0+\\xC0/\\xC0,\\xC00\\xCC\\xA9\\xCC\\xA8\\xC0\\x13\\xC0\\x14\\x00\\x9C\\x00\\x9D\\x00/\\x005\\x00\" 400 173 \"-\" \"-\"\n```. Hi @diemol,\ni.e. you think \nthis is php-engine error in functions curl_setopt/curl_exec ?\n```php\n        curl_setopt($this->curl, CURLOPT_POSTFIELDS, $encoded_params);\n    $raw_results = trim(curl_exec($this->curl));\n\n```\nBut this is a curl request; independence from php; http protocol? \nSame data sending to selenium container v 3.7 / to selenium container v 3.11\nOr not?. @diemol, I try to compare 2 request to selenium over http (4444 port). \nThis requests is same! i. e. I think this is a selenium error (or BC broken in selenium answer)\n3.7\nlog\n172.19.0.9 - [13/Mar/2018:18:06:21 +0300] \"POST /wd/hub/session HTTP/1.1\" 200 1002 | \"{\\x22desiredCapabilities\\x22:{\\x22browserName\\x22:\\x22chrome\\x22}}\"\n172.19.0.9 - [13/Mar/2018:18:06:21 +0300] \"POST /wd/hub/session/577c65ab3fb6f480b0737223b8d0f390/url HTTP/1.1\" 200 305 | \"{\\x22url\\x22:\\x22http:\\x5C/\\x5C/frontend.dev:8080\\x5C/index-test.php\\x5C/site\\x5C/index\\x22}\"\n172.19.0.9 - [13/Mar/2018:18:06:21 +0300] \"GET /wd/hub/session/577c65ab3fb6f480b0737223b8d0f390/source HTTP/1.1\" 200 4834 | \"-\"\n172.19.0.9 - [13/Mar/2018:18:06:21 +0300] \"GET /wd/hub/session/577c65ab3fb6f480b0737223b8d0f390/url HTTP/1.1\" 200 354 | \"-\"\nvs\n3.11\nlog\n172.19.0.8 - [13/Mar/2018:18:09:12 +0300] \"POST /wd/hub/session HTTP/1.1\" 200 1096 | \"{\\x22desiredCapabilities\\x22:{\\x22browserName\\x22:\\x22chrome\\x22}}\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"POST /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/url HTTP/1.1\" 200 305 | \"{\\x22url\\x22:\\x22http:\\x5C/\\x5C/frontend.dev:8080\\x5C/index-test.php\\x5C/site\\x5C/index\\x22}\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"GET /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/source HTTP/1.1\" 200 176048 | \"-\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"GET /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/url HTTP/1.1\" 200 355 | \"-\"\nabout it:\nSo... I create a proxy for listen query to selenium/standalone:\nI add to my docker-compose.yml\n```yml\n  browser:\n    image: nginx:1.13.9-alpine\n    restart: always\n    volumes:\n      - ../nginx-conf-browser:/etc/nginx/conf.d #nginx-conf\n      - ../nginx-logs-browser:/var/log/nginx #nginx-logs\n    expose:\n      - '4444'\n      - '5900'\n    environment:\n      TZ: Europe/Moscow\n  browser2:\n    image: selenium/standalone-chrome-debug:3.7\nimage: selenium/standalone-firefox-debug:3.11.0\nvolumes:\n  - /dev/shm:/dev/shm # the docker run instance may use the default 64MB, that may not be enough in some cases\nexpose:\n  - '4444'\n  - '5900'\nenvironment:\n  TZ: Europe/Moscow\n\nwith config `nginx-conf-browser/nginx.conf`conf\nlog_format logpostextend '$remote_addr - [$time_local] '\n                         '\"$request\" $status $bytes_sent | \"$request_body\"';\nserver {\n    listen  4444;\nlocation / {\n    access_log  /var/log/nginx/4444-access-post.log  logpostextend;\n    proxy_pass http://browser2:4444/;\n    proxy_set_header   X-Real-IP $remote_addr;\n    proxy_set_header   Host $http_host;\n    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n\nlocation ~ /\\.(ht|svn|git) {\n    deny all;\n}\n\n}\nserver {\n    listen  5900;\nlocation / {\n    access_log  /var/log/nginx/5900-access-post.log  logpostextend;\n    proxy_pass http://browser2:5900/;\n    proxy_set_header   X-Real-IP $remote_addr;\n    proxy_set_header   Host $http_host;\n    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n\nlocation ~ /\\.(ht|svn|git) {\n    deny all;\n}\n\n}\nI run simple test with 2 action from browserphp\nclass HomeCest\n{\n    public function checkHome(AcceptanceTester $I)\n    {\n        $I->amOnPage(Url::toRoute('/site/index'));\n        $I->seeInPageSource(Yii::t('main','About'));\n    }\n}\nsh\ndocker-compose up -d\ndocker-compose run --rm codecept run -c frontend/codeception.yml acceptance HomeCest\n```\nI can see in nginx-logs-browser/4444-access-post.log\nlog\n172.19.0.9 - [13/Mar/2018:17:48:20 +0300] \"POST /wd/hub/session HTTP/1.1\" 200 1002 | \"{\\x22desiredCapabilities\\x22:{\\x22browserName\\x22:\\x22chrome\\x22}}\"\n172.19.0.9 - [13/Mar/2018:17:48:21 +0300] \"POST /wd/hub/session/753cb4af5b38b432296032156232947d/url HTTP/1.1\" 200 305 | \"{\\x22url\\x22:\\x22http:\\x5C/\\x5C/frontend.dev:8080\\x5C/index-test.php\\x5C/site\\x5C/index\\x22}\"\n172.19.0.9 - [13/Mar/2018:17:48:21 +0300] \"GET /wd/hub/session/753cb4af5b38b432296032156232947d/source HTTP/1.1\" 200 4834 | \"-\"\n172.19.0.9 - [13/Mar/2018:17:48:21 +0300] \"GET /wd/hub/session/753cb4af5b38b432296032156232947d/url HTTP/1.1\" 200 354 | \"-\"\n172.19.0.9 - [13/Mar/2018:17:48:21 +0300] \"DELETE /wd/hub/session/753cb4af5b38b432296032156232947d/cookie HTTP/1.1\" 200 305 | \"-\"\n172.19.0.9 - [13/Mar/2018:17:48:21 +0300] \"DELETE /wd/hub/session/753cb4af5b38b432296032156232947d HTTP/1.1\" 200 305 | \"-\"\nSo... I shut down a composition and change yml.\nsh\ndocker-compose down\nalso I try to use \nyml\n  browser2:\n    image: selenium/standalone-chrome-debug:3.11.0\nand do it same\nsh\ndocker-compose up -d\ndocker-compose run --rm codecept run -c frontend/codeception.yml acceptance HomeCest -vvv\nI got a error\n```sh\n...\nScenario --\n I am on page \"/index-test.php/site/index\"\n  [GET] http://frontend.dev:8080/index-test.php/site/index\n I see in page source \"About\"\n  [Selenium server Logs] \n  18:09:10.641 INFO - Capabilities are: Capabilities {browserName: chrome}\n  18:09:10.644 INFO - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\n  18:09:12.424 INFO - Detected dialect: OSS\n  18:09:12.918 INFO - Started new session 4be3045413cfcdc5c223fe4870c65a57 (org.openqa.selenium.chrome.ChromeDriverService)\n[Selenium browser Logs]  EMPTY \n  [Selenium driver Logs]  EMPTY \n  Screenshot and page source were saved into '/var/www/html/frontend/tests/_output/' dir\n FAIL \nAnd in `nginx-logs-browser/4444-access-post.log`log\n172.19.0.8 - [13/Mar/2018:18:09:12 +0300] \"POST /wd/hub/session HTTP/1.1\" 200 1096 | \"{\\x22desiredCapabilities\\x22:{\\x22browserName\\x22:\\x22chrome\\x22}}\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"POST /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/url HTTP/1.1\" 200 305 | \"{\\x22url\\x22:\\x22http:\\x5C/\\x5C/frontend.dev:8080\\x5C/index-test.php\\x5C/site\\x5C/index\\x22}\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"GET /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/source HTTP/1.1\" 200 176048 | \"-\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"GET /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/url HTTP/1.1\" 200 355 | \"-\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"GET /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/log/types HTTP/1.1\" 200 390 | \"-\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"POST /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/log HTTP/1.1\" 200 892 | \"{\\x22type\\x22:\\x22server\\x22}\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"POST /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/log HTTP/1.1\" 200 303 | \"{\\x22type\\x22:\\x22browser\\x22}\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"POST /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/log HTTP/1.1\" 200 303 | \"{\\x22type\\x22:\\x22driver\\x22}\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"GET /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/screenshot HTTP/1.1\" 200 29462 | \"-\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"GET /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/source HTTP/1.1\" 200 176048 | \"-\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"DELETE /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57/cookie HTTP/1.1\" 200 305 | \"-\"\n172.19.0.8 - [13/Mar/2018:18:09:13 +0300] \"DELETE /wd/hub/session/4be3045413cfcdc5c223fe4870c65a57 HTTP/1.1\" 200 305 | \"-\"\n```\n. @diemol I specially create a bscheshir/nginx:1.13.9-alpine-lua nginx docker image within lua module \nand use it to capture response body from selenium browser.\n```yml\n  browser:\n    image: bscheshir/nginx:1.13.9-alpine-lua\n    restart: always\n    volumes:\n      - ../nginx-conf-browser:/etc/nginx/conf.d #nginx-conf\n      - ../nginx-logs-browser:/var/log/nginx #nginx-logs\n    expose:\n      - '4444'\n      - '5900'\n    environment:\n      TZ: Europe/Moscow\n  browser2:\n    image: selenium/standalone-chrome-debug:3.11.0\nimage: selenium/standalone-firefox-debug:3.11.0\nvolumes:\n  - /dev/shm:/dev/shm # the docker run instance may use the default 64MB, that may not be enough in some cases\nexpose:\n  - '4444'\n  - '5900'\nenvironment:\n  TZ: Europe/Moscow\n\n```\nI change nginx config to \n```conf\nlog_format logpostextend '$remote_addr - [$time_local] '\n                         '\"$request\" $status $bytes_sent | \"$request_body\" \"$resp_body\"';\nserver {\n    listen  4444;\nlua_need_request_body on;\n\nset $resp_body \"\";\nbody_filter_by_lua '\n    local resp_body = string.sub(ngx.arg[1], 1, 1000)\n    ngx.ctx.buffered = (ngx.ctx.buffered or \"\") .. resp_body\n    if ngx.arg[2] then\n        ngx.var.resp_body = ngx.ctx.buffered\n    end\n';\n\nlocation / {\n    access_log  /var/log/nginx/4444-access-post.log  logpostextend;\n    proxy_pass http://browser2:4444/;\n    proxy_set_header   X-Real-IP $remote_addr;\n    proxy_set_header   Host $http_host;\n    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n}\n\nlocation ~ /\\.(ht|svn|git) {\n    deny all;\n}\n\n}\nI have output from `image: selenium/standalone-chrome-debug:3.7` in my log:log\n172.19.0.8 - [14/Mar/2018:14:55:52 +0300] \"POST /wd/hub/session HTTP/1.1\" 200 1002 | \"{\\x22desiredCapabilities\\x22:{\\x22browserName\\x22:\\x22chrome\\x22}}\" \"{\\x22status\\x22:0,\\x22sessionId\\x22:\\x22abd61d8b3be8ec409e383869c2fac6cf\\x22,\\x22value\\x22:{\\x22applicationCacheEnabled\\x22:false,\\x22rotatable\\x22:false,\\x22mobileEmulationEnabled\\x22:false,\\x22networkConnectionEnabled\\x22:false,\\x22chrome\\x22:{\\x22chromedriverVersion\\x22:\\x222.33.506092 (733a02544d189eeb751fe0d7ddca79a0ee28cce4)\\x22,\\x22userDataDir\\x22:\\x22/tmp/.org.chromium.Chromium.8onIGN\\x22},\\x22takesHeapSnapshot\\x22:true,\\x22pageLoadStrategy\\x22:\\x22normal\\x22,\\x22databaseEnabled\\x22:false,\\x22handlesAlerts\\x22:true,\\x22hasTouchScreen\\x22:false,\\x22version\\x22:\\x2262.0.3202.94\\x22,\\x22platform\\x22:\\x22Linux\\x22,\\x22browserConnectionEnabled\\x22:false,\\x22nativeEvents\\x22:true,\\x22acceptSslCerts\\x22:true,\\x22locationContextEnabled\\x22:true,\\x22webStorageEnabled\\x22:true,\\x22browserName\\x22:\\x22chrome\\x22,\\x22takesScreenshot\\x22:true,\\x22javascriptEnabled\\x22:true,\\x22cssSelectorsEnabled\\x22:true,\\x22setWindowRect\\x22:true,\\x22unexpectedAlertBehaviour\\x22:\\x22\\x22}}\"\n172.19.0.8 - [14/Mar/2018:14:55:52 +0300] \"POST /wd/hub/session/abd61d8b3be8ec409e383869c2fac6cf/url HTTP/1.1\" 200 305 | \"{\\x22url\\x22:\\x22http:\\x5C/\\x5C/frontend.dev:8080\\x5C/index-test.php\\x5C/site\\x5C/index\\x22}\" \"{\\x22sessionId\\x22:\\x22abd61d8b3be8ec409e383869c2fac6cf\\x22,\\x22status\\x22:0,\\x22value\\x22:null}\"\n172.19.0.8 - [14/Mar/2018:14:55:52 +0300] \"GET /wd/hub/session/abd61d8b3be8ec409e383869c2fac6cf/source HTTP/1.1\" 200 2067 | \"-\" \"{\\x22sessionId\\x22:\\x22abd61d8b3be8ec409e383869c2fac6cf\\x22,\\x22status\\x22:0,\\x22value\\x22:\\x22\\x5Cu003C!DOCTYPE html>\\x5Cu003Chtml xmlns=\\x5C\\x22http://www.w3.org/1999/xhtml\\x5C\\x22 lang=\\x5C\\x22ru-RU\\x5C\\x22>\\x5Cu003Chead>\\x5Cn    \\x5Cu003Cmeta charset=\\x5C\\x22UTF-8\\x5C\\x22 />\\x5Cn    \\x5Cu003Cmeta name=\\x5C\\x22viewport\\x5C\\x22 content=\\x5C\\x22width=device-width, initial-scale=1\\x5C\\x22 />\\x5Cn    \\x5Cu003Cmeta name=\\x5C\\x22csrf-param\\x5C\\x22 content=\\x5C\\x22_csrf-frontend\\x5C\\x22 />\\x5Cn    \\x5Cu003Cmeta name=\\x5C\\x22csrf-token\\x5C\\x22 content=\\x5C\\x22-AixHFdQgG4dlzCSFrQ5zPS67vK1qlq2LX9-3paWsXCIPNZsAhbHPVTFXPZ-xlLhx_u9n9niItNELwua2KX8Jw==\\x5C\\x22 />\\x5Cn    \\x5Cu003Ctitle>\\x5Cu003C/title>\\x5Cn    \\x5Cu003C/head>\\x5Cn\\x5Cu003Cbody>\\x5Cn\\x5Cn\\x5Cu003Cdiv class=\\x5C\\x22wrap\\x5C\\x22>\\x5Cn    \\x5Cu003Cnav id=\\x5C\\x22w0\\x5C\\x22 class=\\x5C\\x22navbar-inverse navbar-fixed-top navbar\\x5C\\x22 style=\\x5C\\x22box-shadow: 1px 1px 8px #888888;\\x5C\\x22>\\x5Cu003Cdiv class=\\x5C\\x22container\\x5C\\x22>\\x5Cu003Cdiv class=\\x5C\\x22navbar-header\\x5C\\x22>\\x5Cu003Cbutton type=\\x5C\\x22button\\x5C\\x22 class=\\x5C\\x22navbar-toggle\\x5C\\x22 data-toggle=\\x5C\\x22collapse\\x5C\\x22 data-target=\\x5C\\x22#w0-collapse\\x5C\\x22>\\x5Cu003Cspan class=\\x5C\\x22sr-only\\x5C\\x22>Toggle navigation\\x5Cu003C/span>\\x5Cn\\x5Cu003Cspan class=\\x5C\\x22icon-bar\\x5C\\x22>\\x5Cu003C/span>\\x5Cn\\x5Cu003Cspan class=\\x5C\\x22icon-\"\n172.19.0.8 - [14/Mar/2018:14:55:52 +0300] \"GET /wd/hub/session/abd61d8b3be8ec409e383869c2fac6cf/url HTTP/1.1\" 200 354 | \"-\" \"{\\x22sessionId\\x22:\\x22abd61d8b3be8ec409e383869c2fac6cf\\x22,\\x22status\\x22:0,\\x22value\\x22:\\x22http://frontend.dev:8080/index-test.php/site/index\\x22}\"\n172.19.0.8 - [14/Mar/2018:14:55:52 +0300] \"DELETE /wd/hub/session/abd61d8b3be8ec409e383869c2fac6cf/cookie HTTP/1.1\" 200 305 | \"-\" \"{\\x22sessionId\\x22:\\x22abd61d8b3be8ec409e383869c2fac6cf\\x22,\\x22status\\x22:0,\\x22value\\x22:null}\"\n172.19.0.8 - [14/Mar/2018:14:55:52 +0300] \"DELETE /wd/hub/session/abd61d8b3be8ec409e383869c2fac6cf HTTP/1.1\" 200 305 | \"-\" \"{\\x22sessionId\\x22:\\x22abd61d8b3be8ec409e383869c2fac6cf\\x22,\\x22status\\x22:0,\\x22value\\x22:null}\"\n```\nand I will compare to output from selenium/standalone-chrome-debug:3.11.0 in second check (first 4 line)\nlog\n172.19.0.9 - [14/Mar/2018:15:01:51 +0300] \"POST /wd/hub/session HTTP/1.1\" 200 1096 | \"{\\x22desiredCapabilities\\x22:{\\x22browserName\\x22:\\x22chrome\\x22}}\" \"{\\x22status\\x22:0,\\x22sessionId\\x22:\\x2257d18a552a193072eb61f495c1bf2d77\\x22,\\x22value\\x22:{\\x22applicationCacheEnabled\\x22:false,\\x22rotatable\\x22:false,\\x22mobileEmulationEnabled\\x22:false,\\x22networkConnectionEnabled\\x22:false,\\x22chrome\\x22:{\\x22chromedriverVersion\\x22:\\x222.36.540471 (9c759b81a907e70363c6312294d30b6ccccc2752)\\x22,\\x22userDataDir\\x22:\\x22/tmp/.org.chromium.Chromium.qyxTBI\\x22},\\x22takesHeapSnapshot\\x22:true,\\x22pageLoadStrategy\\x22:\\x22normal\\x22,\\x22databaseEnabled\\x22:false,\\x22handlesAlerts\\x22:true,\\x22hasTouchScreen\\x22:false,\\x22version\\x22:\\x2265.0.3325.146\\x22,\\x22platform\\x22:\\x22Linux\\x22,\\x22browserConnectionEnabled\\x22:false,\\x22nativeEvents\\x22:true,\\x22acceptSslCerts\\x22:false,\\x22acceptInsecureCerts\\x22:false,\\x22locationContextEnabled\\x22:true,\\x22webStorageEnabled\\x22:true,\\x22browserName\\x22:\\x22chrome\\x22,\\x22takesScreenshot\\x22:true,\\x22javascriptEnabled\\x22:true,\\x22cssSelectorsEnabled\\x22:true,\\x22setWindowRect\\x22:true,\\x22unexpectedAlertBehaviour\\x22:\\x22\\x22,\\x22webdriver.remote.sessionid\\x22:\\x2257d18a552a193072eb61f495c1bf2d77\\x22}}\"\n172.19.0.9 - [14/Mar/2018:15:01:51 +0300] \"POST /wd/hub/session/57d18a552a193072eb61f495c1bf2d77/url HTTP/1.1\" 200 305 | \"{\\x22url\\x22:\\x22http:\\x5C/\\x5C/frontend.dev:8080\\x5C/index-test.php\\x5C/site\\x5C/index\\x22}\" \"{\\x22sessionId\\x22:\\x2257d18a552a193072eb61f495c1bf2d77\\x22,\\x22status\\x22:0,\\x22value\\x22:null}\"\n172.19.0.9 - [14/Mar/2018:15:01:51 +0300] \"GET /wd/hub/session/57d18a552a193072eb61f495c1bf2d77/source HTTP/1.1\" 200 176048 | \"-\" \"{\\x22sessionId\\x22:\\x2257d18a552a193072eb61f495c1bf2d77\\x22,\\x22status\\x22:0,\\x22value\\x22:\\x22\\x5Cu003C!DOCTYPE html>\\x5Cu003Chtml xmlns=\\x5C\\x22http://www.w3.org/1999/xhtml\\x5C\\x22 dir=\\x5C\\x22ltr\\x5C\\x22 lang=\\x5C\\x22en\\x5C\\x22 i18n-processed=\\x5C\\x22\\x5C\\x22>\\x5Cu003Chead>\\x5Cn  \\x5Cu003Cmeta charset=\\x5C\\x22utf-8\\x5C\\x22 />\\x5Cn  \\x5Cu003Cmeta name=\\x5C\\x22viewport\\x5C\\x22 content=\\x5C\\x22width=device-width, initial-scale=1.0,&#10;                                 maximum-scale=1.0, user-scalable=no\\x5C\\x22 />\\x5Cn  \\x5Cu003Ctitle>frontend.dev\\x5Cu003C/title>\\x5Cn  \\x5Cu003Cstyle>/* Copyright 2017 The Chromium Authors. All rights reserved.\\x5Cn * Use of this source code is governed by a BSD-style license that can be\\x5Cn * found in the LICENSE file. */\\x5Cn\\x5Cna {\\x5Cn  color: rgb(88, 88, 88);\\x5Cn}\\x5Cn\\x5Cnbody {\\x5Cn  background-color: rgb(247, 247, 247);\\x5Cn  color: rgb(100, 100, 100);\\x5Cn}\\x5Cn\\x5Cn#details-button {\\x5Cn  background: inherit;\\x5Cn  border: 0;\\x5Cn  float: none;\\x5Cn  margin: 0;\\x5Cn  padding: 10px 0;\\x5Cn  text-transform: uppercase;\\x5Cn}\\x5Cn\\x5Cn.hidden {\\x5Cn  display: none;\\x5Cn}\\x5Cn\\x5Cnhtml {\\x5Cn  -webkit-text-size-adjust: 100%;\\x5Cn  font-size: 125%;\\x5Cn}\\x5Cn\\x5Cn.icon {\\x5Cn  backgroorientation: portrait) {\\x5Cn  .interstitial-wrapper {\\x5Cn    margin-top: 7vh;\\x5Cn  }\\x5Cn}\\x5Cn\\x5Cn@media (min-height: 650px) and (max-width: 414px) and (orientation: portrait) {\\x5Cn  .interstitial-wrapper {\\x5Cn    margin-top: 10vh;\\x5Cn  }\\x5Cn}\\x5Cn\\x5Cn/* Small mobile screens. No fixed nav. */\\x5Cn@media (max-height: 400px) and (orientation: portrait),\\x5Cn       (max-height: 239px) and (orientation: landscape),\\x5Cn       (max-width: 419px) and (max-height: 399px) {\\x5Cn  .interstitial-wrapper {\\x5Cn    display: flex;\\x5Cn    flex-direction: column;\\x5Cn    margin-bottom: 0;\\x5Cn  }\\x5Cn\\x5Cn  #details {\\x5Cn    flex: 1 1 auto;\\x5Cn    order: 0;\\x5Cn  }\\x5Cn\\x5Cn  #main-content {\\x5Cn    flex: 1 1 auto;\\x5Cn    order: 0;\\x5Cn  }\\x5Cn\\x5Cn  .nav-wrapper {\\x5Cn    flex: 0 1 auto;\\x5Cn    margin-top: 8px;\\x5Cn    order: 1;\\x5Cn    padding-left: 0;\\x5Cn    padding-right: 0;\\x5Cn    position: relative;\\x5Cn    width: 100%;\\x5Cn  }\\x5Cn}\\x5Cn\\x5Cn@media (max-width: 239px) and (orientation: portrait) {\\x5Cn  .nav-wrapper {\\x5Cn    padding-left: 0;\\x5Cn    padding-right: 0;\\x5Cn  }\\x5Cn}\\x5Cn\\x5Cu003C/style>\\x5Cn  \\x5Cu003Cstyle>/* Copy18px;\\x5Cn  }\\x5Cn}\\x5Cn\\x5Cn/* Decrease padding at low sizes. */\\x5Cn@media (max-width: 640px), (max-height: 640px) {\\x5Cn  h1 {\\x5Cn    margin: 0 0 15px;\\x5Cn  }\\x5Cn  #content-top {\\x5Cn    margin: 15px;\\x5Cn  }\\x5Cn  #help-box-inner {\\x5Cn    padding: 20px;\\x5Cn  }\\x5Cn  .suggestions {\\x5Cn    margin-top: 10px;\\x5Cn  }\\x5Cn  .suggestion-header {\\x5Cn    margin-bottom: 0;\\x5Cn  }\\x5Cn}\\x5Cn\\x5Cn/* Don't allow overflow when in a subframe. */\\x5Cnhtml[subframe] body {\\x5Cn  overflow: hidden;\\x5Cn}\\x5Cn\\x5Cn#sub-frame-error {\\x5Cn  -webkit-align-items: center;\\x5Cn  background-color: #DDD;\\x5Cn  display: -webkit-flex;\\x5Cn  -webkit-flex-flow: column;\\x5Cn  height: 100%;\\x5Cn  -webkit-justify-content: center;\\x5Cn  left: 0;\\x5Cn  position: absolute;\\x5Cn  text-align: center;\\x5Cn  top: 0;\\x5Cn  transition: background-color .2s ease-in-out;\\x5Cn  width: 100%;\\x5Cn}\\x5Cn\\x5Cn#sub-frame-error:hover {\\x5Cn  background-color: #EEE;\\x5Cn}\\x5Cn\\x5Cn#sub-frame-error .icon-generic {\\x5Cn  margin: 0 0 16px;\\x5Cn}\\x5Cn\\x5Cn#sub-frame-error-details {\\x5Cn  margin: 0 10px;\\x5Cn  text-align: center;\\x5Cn  visibility: hidden;\\x5Cn}\\x5Cn\\x5Cn/* Show details only when hoeController.reload();\\x5Cn        break;\\x5Cn      case SecurityInterstitialCommandId.CMD_OPEN_DATE_SETTINGS:\\x5Cn        certificateErrorPageController.openDateSettings();\\x5Cn        break;\\x5Cn      case SecurityInterstitialCommandId.CMD_OPEN_LOGIN:\\x5Cn        certificateErrorPageController.openLogin();\\x5Cn        break;\\x5Cn      case SecurityInterstitialCommandId.CMD_DO_REPORT:\\x5Cn        certificateErrorPageController.doReport();\\x5Cn        break;\\x5Cn      case SecurityInterstitialCommandId.CMD_DONT_REPORT:\\x5Cn        certificateErrorPageController.dontReport();\\x5Cn        break;\\x5Cn      case SecurityInterstitialCommandId.CMD_OPEN_REPORTING_PRIVACY:\\x5Cn        certificateErrorPageController.openReportingPrivacy();\\x5Cn        break;\\x5Cn      case SecurityInterstitialCommandId.CMD_OPEN_WHITEPAPER:\\x5Cn        certificateErrorPageController.openWhitepaper();\\x5Cn        break;\\x5Cn      case SecurityInterstitialCommandId.CMD_REPORT_PHISHING_ERROR:\\x5Cn        certificateErrorPageController.reportPhishingError();\\x5Cn        break;\\x5Cn   aryControlOnLeft = true;\\x5Cn// \\x5CnprimaryControlOnLeft = false;\\x5Cn// \\x5Cn\\x5Cnfunction onDocumentLoad() {\\x5Cn  var controlButtonDiv = document.getElementById('control-buttons');\\x5Cn  var reloadButton = document.getElementById('reload-button');\\x5Cn  var detailsButton = document.getElementById('details-button');\\x5Cn  var showSavedCopyButton = document.getElementById('show-saved-copy-button');\\x5Cn  var downloadButton = document.getElementById('download-button');\\x5Cn\\x5Cn  var reloadButtonVisible = loadTimeData.valueExists('reloadButton') &amp;&amp;\\x5Cn      loadTimeData.getValue('reloadButton').msg;\\x5Cn  var showSavedCopyButtonVisible =\\x5Cn      loadTimeData.valueExists('showSavedCopyButton') &amp;&amp;\\x5Cn      loadTimeData.getValue('showSavedCopyButton').msg;\\x5Cn  var downloadButtonVisible =\\x5Cn      loadTimeData.valueExists('downloadButton') &amp;&amp;\\x5Cn      loadTimeData.getValue('downloadButton').msg;\\x5Cn\\x5Cn  var primaryButton, secondaryButton;\\x5Cn  if (showSavedCopyButton.primary) {\\x5Cn    primaryButton = showSavedCopyButtonList.add(Runner.classes.SNACKBAR_SHOW);\\x5Cn        document.querySelector('.icon').classList.add('icon-disabled');\\x5Cn      }\\x5Cn    }.bind(this));\\x5Cn  },\\x5Cn\\x5Cn  /**\\x5Cn   * Setting individual settings for debugging.\\x5Cn   * @param {string} setting\\x5Cn   * @param {*} value\\x5Cn   */\\x5Cn  updateConfigSetting: function(setting, value) {\\x5Cn    if (setting in this.config &amp;&amp; value != undefined) {\\x5Cn      this.config[setting] = value;\\x5Cn\\x5Cn      switch (setting) {\\x5Cn        case 'GRAVITY':\\x5Cn        case 'MIN_JUMP_HEIGHT':\\x5Cn        case 'SPEED_DROP_COEFFICIENT':\\x5Cn          this.tRex.config[setting] = value;\\x5Cn          break;\\x5Cn        case 'INITIAL_JUMP_VELOCITY':\\x5Cn          this.tRex.setJumpVelocity(value);\\x5Cn          break;\\x5Cn        case 'SPEED':\\x5Cn          this.setSpeed(value);\\x5Cn          break;\\x5Cn      }\\x5Cn    }\\x5Cn  },\\x5Cn\\x5Cn  /**\\x5Cn   * Cache the appropriate image sprite from the page and get the sprite sheet\\x5Cn   * definition.\\x5Cn   */\\x5Cn  loadImages: function() {\\x5Cn    if (IS_HIDPI) {\\x5Cn      Runner.imageSprite = do  /**\\x5Cn   * Update the game frame and schedules the next one.\\x5Cn   */\\x5Cn  update: function() {\\x5Cn    this.updatePending = false;\\x5Cn\\x5Cn    var now = getTimeStamp();\\x5Cn    var deltaTime = now - (this.time || now);\\x5Cn    this.time = now;\\x5Cn\\x5Cn    if (this.playing) {\\x5Cn      this.clearCanvas();\\x5Cn\\x5Cn      if (this.tRex.jumping) {\\x5Cn        this.tRex.updateJump(deltaTime);\\x5Cn      }\\x5Cn\\x5Cn      this.runningTime += deltaTime;\\x5Cn      var hasObstacles = this.runningTime &gt; this.config.CLEAR_TIME;\\x5Cn\\x5Cn      // First jump triggers the intro.\\x5Cn      if (this.tRex.jumpCount == 1 &amp;&amp; !this.playingIntro) {\\x5Cn        this.playIntro();\\x5Cn      }\\x5Cn\\x5Cn      // The horizon doesn't move until the intro is over.\\x5Cn      if (this.playingIntro) {\\x5Cn        this.horizon.update(0, this.currentSpeed, hasObstacles);\\x5Cn      } else {\\x5Cn        deltaTime = !this.activated ? 0 : deltaTime;\\x5Cn        this.horizon.update(deltaTime, this.currentSpeed, hasObstacles,\\x5Cn            this.inverted);\\x5Cn      }\\x5Cn\\x5Cn      // Check for collisionsn      this.distanceMeter.setHighScore(this.highestScore);\\x5Cn    }\\x5Cn\\x5Cn    // Reset the time clock.\\x5Cn    this.time = getTimeStamp();\\x5Cn  },\\x5Cn\\x5Cn  stop: function() {\\x5Cn    this.playing = false;\\x5Cn    this.paused = true;\\x5Cn    cancelAnimationFrame(this.raqId);\\x5Cn    this.raqId = 0;\\x5Cn  },\\x5Cn\\x5Cn  play: function() {\\x5Cn    if (!this.crashed) {\\x5Cn      this.playing = true;\\x5Cn      this.paused = false;\\x5Cn      this.tRex.update(0, Trex.status.RUNNING);\\x5Cn      this.time = getTimeStamp();\\x5Cn      this.update();\\x5Cn    }\\x5Cn  },\\x5Cn\\x5Cn  restart: function() {\\x5Cn    if (!this.raqId) {\\x5Cn      this.playCount++;\\x5Cn      this.runningTime = 0;\\x5Cn      this.playing = true;\\x5Cn      this.paused = false;\\x5Cn      this.crashed = false;\\x5Cn      this.distanceRan = 0;\\x5Cn      this.setSpeed(this.config.SPEED);\\x5Cn      this.time = getTimeStamp();\\x5Cn      this.containerEl.classList.remove(Runner.classes.CRASHED);\\x5Cn      this.clearCanvas();\\x5Cn      this.distanceMeter.reset(this.highestScore);\\x5Cn      this.horizon.reset();\\x5Cn      this.tRex.reset();\\x5CntTargetX = Math.round(centerX - (dimensions.TEXT_WIDTH / 2));\\x5Cn    var textTargetY = Math.round((this.canvasDimensions.HEIGHT - 25) / 3);\\x5Cn    var textTargetWidth = dimensions.TEXT_WIDTH;\\x5Cn    var textTargetHeight = dimensions.TEXT_HEIGHT;\\x5Cn\\x5Cn    var restartSourceWidth = dimensions.RESTART_WIDTH;\\x5Cn    var restartSourceHeight = dimensions.RESTART_HEIGHT;\\x5Cn    var restartTargetX = centerX - (dimensions.RESTART_WIDTH / 2);\\x5Cn    var restartTargetY = this.canvasDimensions.HEIGHT / 2;\\x5Cn\\x5Cn    if (IS_HIDPI) {\\x5Cn      textSourceY *= 2;\\x5Cn      textSourceX *= 2;\\x5Cn      textSourceWidth *= 2;\\x5Cn      textSourceHeight *= 2;\\x5Cn      restartSourceWidth *= 2;\\x5Cn      restartSourceHeight *= 2;\\x5Cn    }\\x5Cn\\x5Cn    textSourceX += this.textImgPos.x;\\x5Cn    textSourceY += this.textImgPos.y;\\x5Cn\\x5Cn    // Game over text from sprite.\\x5Cn    this.canvasCtx.drawImage(Runner.imageSprite,\\x5Cn        textSourceX, textSourceY, textSourceWidth, textSourceHeight,\\x5Cn        textTargetX, textTargetY, textTargetWidth, textTargetHeight);\\x5Cn\\x5Cn: function() {\\x5Cn    var sourceWidth = this.typeConfig.width;\\x5Cn    var sourceHeight = this.typeConfig.height;\\x5Cn\\x5Cn    if (IS_HIDPI) {\\x5Cn      sourceWidth = sourceWidth * 2;\\x5Cn      sourceHeight = sourceHeight * 2;\\x5Cn    }\\x5Cn\\x5Cn    // X position in sprite.\\x5Cn    var sourceX = (sourceWidth * this.size) * (0.5 * (this.size - 1)) +\\x5Cn        this.spritePos.x;\\x5Cn\\x5Cn    // Animation frames.\\x5Cn    if (this.currentFrame &gt; 0) {\\x5Cn      sourceX += sourceWidth * this.currentFrame;\\x5Cn    }\\x5Cn\\x5Cn    this.canvasCtx.drawImage(Runner.imageSprite,\\x5Cn      sourceX, this.spritePos.y,\\x5Cn      sourceWidth * this.size, sourceHeight,\\x5Cn      this.xPos, this.yPos,\\x5Cn      this.typeConfig.width * this.size, this.typeConfig.height);\\x5Cn  },\\x5Cn\\x5Cn  /**\\x5Cn   * Obstacle frame update.\\x5Cn   * @param {number} deltaTime\\x5Cn   * @param {number} speed\\x5Cn   */\\x5Cn  update: function(deltaTime, speed) {\\x5Cn    if (!this.remove) {\\x5Cn      if (this.typeConfig.speedOffset) {\\x5Cn        speed += this.speedOffset;\\x5Cn      }\\x5Cn      this.xPos -= Math.floor((speedn.\\x5Cn    if (this.timer &gt;= this.msPerFrame) {\\x5Cn      this.currentFrame = this.currentFrame ==\\x5Cn          this.currentAnimFrames.length - 1 ? 0 : this.currentFrame + 1;\\x5Cn      this.timer = 0;\\x5Cn    }\\x5Cn\\x5Cn    // Speed drop becomes duck if the down key is still being pressed.\\x5Cn    if (this.speedDrop &amp;&amp; this.yPos == this.groundYPos) {\\x5Cn      this.speedDrop = false;\\x5Cn      this.setDuck(true);\\x5Cn    }\\x5Cn  },\\x5Cn\\x5Cn  /**\\x5Cn   * Draw the t-rex to a particular position.\\x5Cn   * @param {number} x\\x5Cn   * @param {number} y\\x5Cn   */\\x5Cn  draw: function(x, y) {\\x5Cn    var sourceX = x;\\x5Cn    var sourceY = y;\\x5Cn    var sourceWidth = this.ducking &amp;&amp; this.status != Trex.status.CRASHED ?\\x5Cn        this.config.WIDTH_DUCK : this.config.WIDTH;\\x5Cn    var sourceHeight = this.config.HEIGHT;\\x5Cn\\x5Cn    if (IS_HIDPI) {\\x5Cn      sourceX *= 2;\\x5Cn      sourceY *= 2;\\x5Cn      sourceWidth *= 2;\\x5Cn      sourceHeight *= 2;\\x5Cn    }\\x5Cn\\x5Cn    // Adjustments for sprite sheet position.\\x5Cn    sourceX += this.spritePos.x;\\x5Cn    sourceY += this}\\x5Cn\\x5Cn    sourceX += this.spritePos.x;\\x5Cn    sourceY += this.spritePos.y;\\x5Cn\\x5Cn    this.canvasCtx.save();\\x5Cn\\x5Cn    if (opt_highScore) {\\x5Cn      // Left of the current score.\\x5Cn      var highScoreX = this.x - (this.maxScoreUnits * 2) *\\x5Cn          DistanceMeter.dimensions.WIDTH;\\x5Cn      this.canvasCtx.translate(highScoreX, this.y);\\x5Cn    } else {\\x5Cn      this.canvasCtx.translate(this.x, this.y);\\x5Cn    }\\x5Cn\\x5Cn    this.canvasCtx.drawImage(this.image, sourceX, sourceY,\\x5Cn        sourceWidth, sourceHeight,\\x5Cn        targetX, targetY,\\x5Cn        targetWidth, targetHeight\\x5Cn      );\\x5Cn\\x5Cn    this.canvasCtx.restore();\\x5Cn  },\\x5Cn\\x5Cn  /**\\x5Cn   * Covert pixel distance to a 'real' distance.\\x5Cn   * @param {number} distance Pixel distance ran.\\x5Cn   * @return {number} The 'real' distance ran.\\x5Cn   */\\x5Cn  getActualDistance: function(distance) {\\x5Cn    return distance ? Math.round(distance * this.config.COEFFICIENT) : 0;\\x5Cn  },\\x5Cn\\x5Cn  /**\\x5Cn   * Update the distance meter.\\x5Cn   * @param {number} distance\\x5Cn   * @param {number} deltaTime\\x5Cn   e {\\x5Cn      currentPos -= speed;\\x5Cn    }\\x5Cn    return currentPos;\\x5Cn  },\\x5Cn\\x5Cn  draw: function() {\\x5Cn    var moonSourceWidth = this.currentPhase == 3 ? NightMode.config.WIDTH * 2 :\\x5Cn         NightMode.config.WIDTH;\\x5Cn    var moonSourceHeight = NightMode.config.HEIGHT;\\x5Cn    var moonSourceX = this.spritePos.x + NightMode.phases[this.currentPhase];\\x5Cn    var moonOutputWidth = moonSourceWidth;\\x5Cn    var starSize = NightMode.config.STAR_SIZE;\\x5Cn    var starSourceX = Runner.spriteDefinition.LDPI.STAR.x;\\x5Cn\\x5Cn    if (IS_HIDPI) {\\x5Cn      moonSourceWidth *= 2;\\x5Cn      moonSourceHeight *= 2;\\x5Cn      moonSourceX = this.spritePos.x +\\x5Cn          (NightMode.phases[this.currentPhase] * 2);\\x5Cn      starSize *= 2;\\x5Cn      starSourceX = Runner.spriteDefinition.HDPI.STAR.x;\\x5Cn    }\\x5Cn\\x5Cn    this.canvasCtx.save();\\x5Cn    this.canvasCtx.globalAlpha = this.opacity;\\x5Cn\\x5Cn    // Stars.\\x5Cn    if (this.drawStars) {\\x5Cn      for (var i = 0; i &lt; NightMode.config.NUM_STARS; i++) {\\x5Cn        this.canvasCtx.drawImage(Runner.imageSprite,\\x5Cn    {\\x5Cn      for (var i = numClouds - 1; i &gt;= 0; i--) {\\x5Cn        this.clouds[i].update(cloudSpeed);\\x5Cn      }\\x5Cn\\x5Cn      var lastCloud = this.clouds[numClouds - 1];\\x5Cn\\x5Cn      // Check for adding a new cloud.\\x5Cn      if (numClouds &lt; this.config.MAX_CLOUDS &amp;&amp;\\x5Cn          (this.dimensions.WIDTH - lastCloud.xPos) &gt; lastCloud.cloudGap &amp;&amp;\\x5Cn          this.cloudFrequency &gt; Math.random()) {\\x5Cn        this.addCloud();\\x5Cn      }\\x5Cn\\x5Cn      // Remove expired clouds.\\x5Cn      this.clouds = this.clouds.filter(function(obj) {\\x5Cn        return !obj.remove;\\x5Cn      });\\x5Cn    } else {\\x5Cn      this.addCloud();\\x5Cn    }\\x5Cn  },\\x5Cn\\x5Cn  /**\\x5Cn   * Update the obstacle positions.\\x5Cn   * @param {number} deltaTime\\x5Cn   * @param {number} currentSpeed\\x5Cn   */\\x5Cn  updateObstacles: function(deltaTime, currentSpeed) {\\x5Cn    // Obstacles, move to Horizon layer.\\x5Cn    var updatedObstacles = this.obstacles.slice(0);\\x5Cn\\x5Cn    for (var i = 0; i &lt; this.obstacles.length; i++) {\\x5Cn      var obstacle = this.obstacles[i];\\x5Cn      AAAAACKI/xBAAAAAnRSTlMAAHaTzTgAAAn9SURBVHgB7J1Rktu8EYRbKSV/cBEeZfcA1COOh8fFAeyj8CLzqNh2dRnroTmFABYEar7UL8GDGUhc7rYagMjAeTocx3Ecx3Eu+I7giIB+bAAWdEb4Fq00hOPAHbi0ljCNiV07bOyKDd9ZGmIwsmti5OsbfrICyGwjM/QjytavcC5C7GaMTaaDIQ5VFv9dBJowXe4UXAFAIo6QgB7wd3nbsGAAEgEJR4H7Dbhf2kqYBib279DUViwYxgJsOGClklGCiuesEokRWpHVKOfEudqChigB7VpOHfuhaQv6IYimS+NR8lBUgOqE2/3SUgKmMbF/h/aKdgXZ/hxbrDxslt0uY1QvK0+TtTLRnlHosupVTVbolho34wEOLeIzaeZc45MkD1Y0CpohaW1Hvn36Td8wH9r1UMjG+80qls65zNxabNrXH9NO6taKNVPaOGeEmolmxtZyNllW5JczZc4VD2LRAtcRurR6ZWLgjsu+VDFDIguZdbvrkv7YftOk3aExpqPLcWzBZud95eObaQJWziF1TmZi3qlRoccSjd/YmXPXnUieVtHsI9dw5jlkQYfKRBi433DflSpmSESUz4KGmy6pg9PHx7FgONqmvVHOjtFzTaVfKiGvRWssH7gNHbc+F7i1545XtBRRR8Za6Q22BVjY8RtStasi1S5NYmluGPjvDbh9FFJ1+T0DB7Ck//SxQRzbHRrjjBkubdn+f5eGN+517kDnxceVfkxPKTN7yynn+uNfetv0GOeGj/bc8YpGSWvCmJosevY5GRKGTB81ErQ4Ts6aj+ac7NQxm7Eydhs6LnNPzxXNkraarmAxJx9EEI3vl+nshIRouDQJVsAu0TPX8fCN2OK4mefHziO1a2mbnUcyTZSxfZYpZpWTCFbYOB/tuaMVLZWSloDYxZvZWYPWzupK9DR0NJxCT7CKZm+O3kFJK3YzKVqceH7vpCqRX7H9XuqY6lzNwAAAEFPOyBhb1R1ViBiNSBbMjAwNjEwMjRdIChiYXNlZCBvbiBYaXBoLk9yZydzIGxpYlZvcmJpcykAAAAAAQV2b3JiaXMlQkNWAQBAAAAkcxgqRqVzFoQQGkJQGeMcQs5r7BlCTBGCHDJMW8slc5AhpKBCiFsogdCQVQAAQAAAh0F4FISKQQghhCU9WJKDJz0IIYSIOXgUhGlBCCGEEEIIIYQQQgghhEU5aJKDJ0EIHYTjMDgMg+U4+ByERTlYEIMnQegghA9CuJqDrDkIIYQkNUhQgwY56ByEwiwoioLEMLgWhAQ1KIyC5DDI1IMLQoiag0k1+BqEZ0F4FoRpQQghhCRBSJCDBkHIGIRGQViSgwY5uBSEy0GoGoQqOQgfhCA0ZBUAkAAAoKIoiqIoChAasgoAyAAAEEBRFMdxHMmRHMmxHAsIDVkFAAABAAgAAKBIiqRIjuRIkiRZkiVZkiVZkuaJqizLsizLsizLMhAasgoASAAAUFEMRXEUBwgNWQUAZAAACKA4iqVYiqVoiueIjgiEhqwCAIAAAAQAABA0Q1M8R5REz1RV17Zt27Zt27Zt27Zt27ZtW5ZlGQgNWQUAQAAAENJpZqkGiDADGQZCQ1YBAAgAAIARijDEgNCQVQAAQAAAgBhKDqIJrTnfnOOgWQ6aSrE5HZxItXmSm4q5Oeecc87J5pwxzjnnnKKcWQyaCa0555zEoFkKmgmtOeecJ7F50JoqrTnnnHHO6WCcEcY555wmrXmQmo21OeecBa1pjppLsTnnnEi5eVKbS7U555xzzjnnnHPOOeec6sXpHJwTzjnnnKi9uZab0MU555xPxunenBDOOeecc84555xzzjnnnCA0ZBUAAAQAQBCGjWHcKQjS52ggRhFiGjLpQffoMAkag5xC6tHoaKSUOggllXFSSicIDVkFAAACAEAIIYUUUkghhRRSSCGFFGKIIYYYcsopp6CCSiqpqKKMMssss8wyyyyzzDrsrLZVmWZVmWZVmWZVmWZVmWIDRkFQAAAgAAIIQQQkghhRRSSCnGGHPMOegklBAIDVkFAAACAAgAAABwFEdxHMmRHEmyJEvSJM3SLE/zNE8TPVEURdM0VdEVXVE3bVE2ZdM1XVM2XVVWbVeWbVu2dduXZdv3fd/3fd/3fd/3fd/3fV0HQkNWAQASAAA6kiMpkiIpkuM4jiRJQGjIKgBABgBAAACK4iiO4ziSJEmSJWmSZ3mWqJma6ZmeKqpAaMgqAAAQAEAAAAAAAACKpniKqXiKqHiO6IiSaJmWqKmaK8qm7Lqu67qu67qu67qu67qu67qu67qu67qu67qu67qu67qu67quC4SGrAIAJAAAdCRHciRHUiRFUiRHcoDQkFUAgAwAgAAAHMMxJEVyLMvSNE/zNE8TPdETPdNTRVd0gdCQVQAAIACAAAAAAAAADMmwFMvRHE0SJdVSLVVTLdVSRdVTVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTdM0TRMIDVkJAJABAKAQW0utxdwJahxi0nLMJHROYhCqsQgiR7W3yjGlHMWeGoiUURJ7qihjiknMMbTQKSet1lI6hRSkmFMKFVIOWiA0ZIUAEJoB4HAcQLIsQLI0AAAAAAAAAJA0DdA8D7A8DwAAAAAAAAAkTQMsTwM0zwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQNI0QPM8QPM8AAAAAAAAANA8D/BEEfBEEQAAAAAAAAAszwM80QM8UQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwNE0QPM8QPM8AAAAAAAAALA8D/BEEfA8EQAAAAAAAAA0zwM8UQQ8UQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1aoNVPXg9Xldx3nn5tixvV6vb7TX+hg7cK21QYgAtNJFphRUtpUuMqWgsqrasj2IhOA1F7LFMdFaWzkAtNBFpisIQgtdZLqCIKjqAAa9WePLkKr1MMG1FlwGtNJFTSkIcitd1JSCIKsCAQWISK0Cyzw147T1tAK00kVNKKjQVrqoCQUVqqr412m+VKtZf9h+TDaaztAAtNJFzVQQhFa6qJkKgqAqUGgtuOa2Se5l6jeXGSqnLM9enqnLs5dn6m7TptWUiVUVN4jhUz9//lzx+Xw+X3x8fCQSiWggDAA83UXF6/vpLipe3zsCULWMBE5PMTBMlsv39/f39/f39524nZ13CDgaRFuLYTbaWgyzq22MzEyKolIpst50Z9PGqqJSq8T2++taLf3+oqg6btyouhEjYlxFjXxex1wCBFxcv+PmzG1uc2bKyJFLLlkizZozZ/ZURpZs2TKiWbNnz5rKyJItS0akWbNnzdrIyJJtxmCczpxOATRRhoPimyjDQfEfIFMprQDU3WFYbXZLZZxMhxrGyRh99Uqel55XEk+9efP7I/FU/8Ojew4JNN/rTq6b73Un1x+AVSsCWD2tNqtpGOM4DOM4GV7n5th453cXNGcfAYQKTFEOguKnKAdB8btRLxNBWUrViLoY1/q1er+Q9xkvZM/IjaoRf30xu3HLnr61fu3UBDRZHZdqsjoutQeAVesAxNMTw2rR66X/Ix6/T5tx80+t/D67ipt/q5XfJzTfa03Wzfdak/UeAEpZawlsbharxTBVO1+c2nm/7/f1XR1dY8XaKWMH3aW9xvEFRFEksXgURRKLn7VamSFRVnYXg0C2Zo2MNE3+57u+e3NFlVev1uufX6nU3Lnf9d1j4wE03+sObprvdQc3ewBYFIArAtjdrRaraRivX7x+8VrbHIofG0n6cFwtNFKYBzxXA2j4uRpAw7dJRkSETBkZV1V1o+N0Op1WhmEyDOn36437RbKvl7zz838wgn295Iv8OMKouw0YQLD0ChISsCgCgAAMAYphRTyjAmIaQQGsYkhBJCJiWVlEqqIKRSUikVhFRSKiWjklJqKVUQUikplQpCKqWVVAAA2IEDANiBhVBoyEoAIA8AgCBGKcYYYwwyphRjzjkHlVKKMeeck4wxxphzzkkpGWPMOeeklIw555xzUkrmnHPOOSmlc84555yUUkrnnHNOSiklhM45J6WU0jnnnBMAAFTgAAAQYKPI5gQjQYWGrAQAUgEADI5jWZqmaZ4nipYkaZrneZ4omqZmSZrmeZ4niqbJ8zxPFEXRNFWV53meKIqiaaoq1xVF0zRNVVVVsiyKpmmaquq6ME3TVFXXdWWYpmmqquu6LmzbVFXVdWUZtq2aqiq7sgxcV3Vl17aB67qu7Nq2AADwBAcAoAIbVkc4KRoLLDRkJQCQAQBAGIOMQgghhRBCCiGElFIICQAAGHAAAAgwoQwUGrISAEgFAACQsdZaa6211kBHKaWUUkqpcIxSSimllFJKKaWUUkoppZRKSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoFAC5VOADoPtiwOsJJ0VhgoSErAYBUAADAGKWYck5CKRVCjDkmIaUWK4QYc05KSjEWzzkHoZTWWiyecw5CKa3FWFTqnJSUWoqtqBQyKSml1mIQwpSUWmultSCEKqnEllprQQhdU2opltiCELa2klKMMQbhg4+xlVhqDD74IFsrMdVaAABmgwMARIINqyOcFI0FFhqyEgAICQAgjFGKMcYYc8455yRjjDHmnHMQQgihZIwx55xzDkIIIZTOOeeccxBCCCGEUkrHnHMOQgghhFBS6pxzEEIIoYQQSiqdcw5CCCGEUkpJpXMQQgihhFBCSSWl1DkIIYQQQikppZRCCCGEEkIoJaWUUgghhBBCKKGklFIKIYRSQgillJRSSimFEEoIpZsNtkcRS9rs95w9uDtvP+KP/MupnfH3yHIbPG/1zDBygJimTvFcZywqne6OX18E1zluma5AShnVx4aqfxLo6K/C8P2fxH5cuaqtqE3Lbru4hT4283zc0Hqv2xINtisxZXBVfQuOAK6kCHjBAF6o/H+uf09ycQK6w6IA40Ll/3P9e5KLE9AdFgUYAwAAAgAAgDD4g+AgXAEEyAAEoADiPAAIcHGccHEAxN271+bn5+dt4B2YmGziAIrZMgZ4l2nedkACHggIAA==\\x5C\\x22 i18n-processed=\\x5C\\x22\\x5C\\x22>\\x5Cu003C/audio>\\x5Cn    \\x5Cu003C/template>\\x5Cn  \\x5Cu003C/div>\\x5Cn\\x5Cn\\x5Cn\\x5Cu003Cscript jstcache=\\x5C\\x220\\x5C\\x22>// Copyright (c) 2012 The Chromium Authors. All rights reserved.\\x5Cn// Use of this source code is governed by a BSD-style license that can be\\x5Cn// found in the LICENSE file.\\x5Cn\\x5Cn/**\\x5Cn * @fileoverview This file defines a singleton which provides access to all data\\x5Cn * that is available as soon as the page's resources are loaded (before DOM\\x5Cn * content has finished loading). This data includes both localized strings and\\x5Cn * any data that is important to have ready from a very early stage (e.g. things\\x5Cn * that must be displayed right away).\\x5Cn *\\x5Cn * Note that loadTimeData is not guaranteed to be consistent between page\\x5Cn * refron ' + document.location.href + ': ' + message);\\x5Cn    }\\x5Cn  }\\x5Cn\\x5Cn  /**\\x5Cn   * Checks that the given value has the given type.\\x5Cn   * @param {string} id The id of the value (only used for error message).\\x5Cn   * @param {*} value The value to check the type on.\\x5Cn   * @param {string} type The type we expect |value| to be.\\x5Cn   */\\x5Cn  function expectIsType(id, value, type) {\\x5Cn    expect(\\x5Cn        typeof value == type, '[' + value + '] (' + id + ') is not a ' + type);\\x5Cn  }\\x5Cn\\x5Cn  expect(!loadTimeData, 'should only include this file once');\\x5Cn  loadTimeData = new LoadTimeData;\\x5Cn})();\\x5Cn\\x5Cu003C/script>\\x5Cu003Cscript jstcache=\\x5C\\x220\\x5C\\x22>loadTimeData.data = {\\x5C\\x22details\\x5C\\x22:\\x5C\\x22Details\\x5C\\x22,\\x5C\\x22errorCode\\x5C\\x22:\\x5C\\x22ERR_SSL_PROTOCOL_ERROR\\x5C\\x22,\\x5C\\x22fontfamily\\x5C\\x22:\\x5C\\x22sans, Arial, sans-serif\\x5C\\x22,\\x5C\\x22fontsize\\x5C\\x22:\\x5C\\x2275%\\x5C\\x22,\\x5C\\x22heading\\x5C\\x22:{\\x5C\\x22hostName\\x5C\\x22:\\x5C\\x22frontend.dev\\x5C\\x22,\\x5C\\x22msg\\x5C\\x22:\\x5C\\x22This site can\\xE2\\x80\\x99t provide a secure connection\\x5C\\x22},\\x5C\\x22hideDetails\\x5C\\x22:\\x5C\\x22Hide details\\x5C\\x22,\\x5C\\x22iconClass\\x5C\\x22:\\x5C\\x22icon-generic\\x5C\\x22,\\x5C\\x22language\\x5C\\x22:\\x5C\\x22en\\x5C\\x22,\\x5C\\x22reloadButton\\x5C\\x22:{\\x5C\\x22msg\\x5C\\x22:\\x5C\\x22Reload\\x5C\\x22,\\x5C\\x22reloadT        // Happens when a &lt;link rel=import&gt; is inside a &lt;template&gt;.\\x5Cn        // TODO(dbeam): should we log an error if we detect that here?\\x5Cn        continue;\\x5Cn      }\\x5Cn      processWithoutCycles(importLink.import, data, visited, mark);\\x5Cn    }\\x5Cn\\x5Cn    var templates = root.querySelectorAll('template');\\x5Cn    for (var i = 0; i &lt; templates.length; ++i) {\\x5Cn      var template = /** @type {HTMLTemplateElement} */ (templates[i]);\\x5Cn      if (!template.content)\\x5Cn        continue;\\x5Cn      processWithoutCycles(template.content, data, visited, mark);\\x5Cn    }\\x5Cn\\x5Cn    var isElement = root instanceof Element;\\x5Cn    if (isElement &amp;&amp; root.webkitMatchesSelector(selector))\\x5Cn      processElement(/** @type {!Element} */ (root), data, visited);\\x5Cn\\x5Cn    var elements = root.querySelectorAll(selector);\\x5Cn    for (var i = 0; i &lt; elements.length; ++i) {\\x5Cn      processElement(elements[i], data, visited);\\x5Cn    }\\x5Cn\\x5Cn    if (mark) {\\x5Cn      var processed = isElement ? [root] : root.children;\\x5Cn      a){a.__jstcache||m(a,function(a){T(a)})}var U=[[\\x5C\\x22jsselect\\x5C\\x22,E],[\\x5C\\x22jsdisplay\\x5C\\x22,E],[\\x5C\\x22jsvalues\\x5C\\x22,F],[\\x5C\\x22jsvars\\x5C\\x22,F],[\\x5C\\x22jseval\\x5C\\x22,function(a){for(var b=[],a=a.split(r),c=0,e=a.length;c&lt;e;++c)if(a[c]){var d=E(a[c]);b.push(d)}return b}],[\\x5C\\x22transclude\\x5C\\x22,function(a){return a}],[\\x5C\\x22jscontent\\x5C\\x22,E],[\\x5C\\x22jsskip\\x5C\\x22,E]];\\x5Cnfunction T(a){if(a.__jstcache)return a.__jstcache;var b=a.getAttribute(\\x5C\\x22jstcache\\x5C\\x22);if(b!=i)return a.__jstcache=N[b];for(var b=R.length=0,c=U.length;b&lt;c;++b){var e=U[b][0],d=a.getAttribute(e);Q[e]=d;d!=i&amp;&amp;R.push(e+\\x5C\\x22=\\x5C\\x22+d)}if(R.length==0)return a.setAttribute(\\x5C\\x22jstcache\\x5C\\x22,\\x5C\\x220\\x5C\\x22),a.__jstcache=N[0];var f=R.join(\\x5C\\x22&amp;\\x5C\\x22);if(b=P[f])return a.setAttribute(\\x5C\\x22jstcache\\x5C\\x22,b),a.__jstcache=N[b];for(var h={},b=0,c=U.length;b&lt;c;++b){var d=U[b],e=d[0],g=d[1],d=Q[e];d!=i&amp;&amp;(h[e]=g(d))}b=\\x5C\\x22\\x5C\\x22+ ++M;a.setAttribute(\\x5C\\x22jstcache\\x5C\\x22,b);N[b]=\\x5Cnh;P[f]=b;return a.__jstcache=h}function V(a,b){a.h.push(b);a.k.push(0)}function W(a){return a.c.length?a.c.pop():[]}\\x5CnL.prototype.e=function(a,\"\n172.19.0.9 - [14/Mar/2018:15:01:51 +0300] \"GET /wd/hub/session/57d18a552a193072eb61f495c1bf2d77/url HTTP/1.1\" 200 355 | \"-\" \"{\\x22sessionId\\x22:\\x2257d18a552a193072eb61f495c1bf2d77\\x22,\\x22status\\x22:0,\\x22value\\x22:\\x22https://frontend.dev:8080/index-test.php/site/index\\x22}\"\nI can see differences in answer: Add some html copyright to selenium output. And another stylized trash.\n/* Copyright 2017 The Chromium Authors. All rights reserved.\\x5Cn * Use of this source code is governed by a BSD-style license that can be\\x5Cn * found in the LICENSE file. */\\x5Cn\\x5Cna {\\x5Cn  color: rgb(88, 88, 88);\\x5Cn}\\x5Cn\\x5Cnbody {\\x5Cn  background-color: rgb(247, 247, 247);\\x5Cn  color: rgb(100, 100, 100);\\x5Cn}\\x5Cn\\x5Cn#details-button {\\x5Cn  background: inherit;\\x5Cn  border: 0;\\x5Cn  float: none;\\x5Cn  margin: 0;\\x5Cn  padding: 10px 0;\\x5Cn  text-transform: uppercase;\\x5Cn}\\x5Cn\\x5Cn.hidden {\\x5Cn  display: none;\\x5Cn}\\x5Cn\\x5Cnhtm\n What?! This look like not an\n\nThis is an issue with the PHP bindings, seems that it is not able to work properly with the most recent Selenium versions.. So... Newest version of chrome driver\nuse only \"W3C standard\", right?\n\nSome people (codeception contridutors) must config curl request to use it with selenium? Or (php developer) must change curl function?. I try to use some like this composition\nhttps://github.com/bscheshirwork/docker-yii2-app-advanced-rbac/blob/seleniun-proxy-test/docker-codeception-run/docker-compose.yml\nand this config\nhttps://github.com/bscheshirwork/docker-yii2-app-advanced-rbac/blob/seleniun-proxy-test/nginx-conf-browser/nginx.conf\nfor record suspect log.\nAlso I can see in my main app nginx log. See #675 . ",
    "daudt": "My bad, it looks like I was passing as args instead of chrome-options. . ",
    "ermik": "Seeing this issue on 13-argon and 14-arsenic standalone-firefox builds.. ",
    "chrismcmahon": "For what it's worth, I also would like to have the ability to play video on Firefox in a docker-selenium container. \nAnd thank you for the very clear issue report and the very clear responses, this discussion was easy to find!. ",
    "izbatt": "I have opened a ticket in the Behat repo. I was able to fix the issue by switching to a selenium2 compatible version of firefox. tag 2.53.0.\nAfter searching around for a while it was determined that the selenium2-mink-driver is currently incompatible with newer versions of firefox, but mostly compatible with newer versions chrome which is why I was having luck running in chrome but not in firefox. I believe the driver will become compatible eventually. \nSo i'll close this ticket for now. . ",
    "budtmo": "Here is the nodeconfig:\n{\n  \"capabilities\": [{\n    \"platform\": \"Android\",\n    \"platformName\": \"Android\",\n    \"version\": \"7.0\",\n    \"browserName\": \"chrome\",\n    \"deviceName\": \"xxx\",\n    \"maxInstances\": 1,\n    \"applicationName\": \"xxx\"\n  }],\n  \"configuration\": {\n    \"cleanUpCycle\": 2000,\n    \"timeout\": 300,\n    \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n    \"url\": \"http://127.0.0.1:4723/wd/hub\",\n    \"host\": \"127.0.0.1\",\n    \"port\": 4723,\n    \"maxSession\": 6,\n    \"register\": true,\n    \"registerCycle\": 5000,\n    \"hubHost\": \"selenium_hub\",\n    \"hubPort\": 4444\n  }\n}. It is fixed in the new release (version 3.9.1), so I will close this issue. I think the bug was from selenium side. . ",
    "diamantn": "Hi @diemol thank you for your response.\nThat sounds great, it's just that the documentation in the Docker-Hub does not reflect this, and the only way to figure it out is to reverse engineer the Dockerfiles. \nIf you guys are going to update the docs, that would be awesome.... Thank you very much!. ",
    "baflQA": "I think You thought about this issue: https://github.com/SeleniumHQ/selenium/issues/5419\nIt's a Chrome 64 issue.. ",
    "vavdagic": "@lmtierney I think there might be a # in the URL because it is a angular 4 app, and they use # when routing, but i dont think it is at the end of the URL. I can not confirm this until Monday. This is very strange because it was not present on the older versions of node-chrome.. @lmtierney Both my apps are having # in URL's. . ",
    "ssims-de": "Saw this with a # in the middle of the URL upon calling driver.get() a second time in the same session. Tried both ChromeDriver 2.34 and 3.35 with Chrome 64.0.3282.140. . ",
    "ebennett98": "how do i add goog:chrome options to my java code so selenium grid takes it. The below code only works locally in a docker container and I need it to work in the grid. it seems that the grid does not know how to handle ChromeOptions.\nChromeOptions options = new ChromeOptions();\n    options.addArguments(\"--start-maximized\");\n    options.addArguments(\"--disable-infobars\");\n    options.addArguments(\"--proxy-pac-url= http://ProxyPacURL.com\");\n    DesiredCapabilities dc = DesiredCapabilities.chrome();\n    dc.setCapability(ChromeOptions.CAPABILITY, options);\n    driver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), dc);. ",
    "chris-tn": "https://github.com/nightwatchjs/nightwatch/issues/1628\n646 .",
    "arnaud-deprez": "Isn't it something like zalenium you're looking for ? \nBasically, they configure a docker image with a full grid (hub + firefox + chrome).. Hi, \nThis does not seem to resolve the problem, it can't still run with random user id.\nI have this now with selenium/hub:3.14.0-gallium: \n2018-10-06 18:40:05,137 WARN Included extra file \"/etc/supervisor/conf.d/selenium-hub.conf\" during parsing\n2018-10-06 18:40:05,139 INFO supervisord started with pid 6\n2018-10-06 18:40:06,141 INFO spawned: 'selenium-hub' with pid 9\nsupervisor: couldn't setuid to 1000: Can't drop privilege as nonroot user\nsupervisor: child process was not spawned\n2018-10-06 18:40:06,145 INFO success: selenium-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n2018-10-06 18:40:06,145 INFO exited: selenium-hub (exit status 127; not expected)\nThe nodes are saying the same thing (example with selenium/node-chrome:3.14.0-gallium):\n2018-10-06 18:40:18,157 WARN Included extra file \"/etc/supervisor/conf.d/selenium.conf\" during parsing\n2018-10-06 18:40:18,213 INFO supervisord started with pid 7\n2018-10-06 18:40:19,222 INFO spawned: 'xvfb' with pid 10\n2018-10-06 18:40:19,225 INFO spawned: 'selenium-node' with pid 11\n2018-10-06 18:40:19,226 INFO exited: xvfb (exit status 127; not expected)\nsupervisor: couldn't setuid to 1000: Can't drop privilege as nonroot user\nsupervisor: child process was not spawned\n2018-10-06 18:40:19,227 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n2018-10-06 18:40:19,227 INFO exited: selenium-node (exit status 127; not expected)\nThe result is the hub cannot be started because it's considered unhealthy: \n\u21d2  oc get po -l release=selenium\nNAME                                         READY     STATUS    RESTARTS   AGE\nselenium-selenium-chrome-68c6596f55-ksjqm    1/1       Running   0          19h\nselenium-selenium-firefox-84c599884f-zh4ds   1/1       Running   0          19h\nselenium-selenium-hub-5b57c7d784-5gdpv       0/1       Running   6          19h. Sure, I'm actually using the helm chart here https://github.com/helm/charts/tree/master/stable/selenium with this my-values.yaml: \nyaml\nselenium:\n  hub:\n    ## The repository and image\n    image: \"selenium/hub\"\n    ## The tag for the image\n    tag: \"3.14.0-gallium\"\n    serviceType: \"ClusterIP\"\n  chrome:\n    enabled: true\n    ## The repository and image\n    image: \"selenium/node-chrome\"\n    ## The tag for the image\n    tag: \"3.14.0-gallium\"\n  firefox:\n    enabled: true\n    image: \"selenium/node-firefox\"\n    tag: \"3.14.0-gallium\"\nThen on minishift, I do: \nnamespace=cicd\noc new-project $namespace\nhelm template --name selenium -f my-values.yaml --set ingress.enabled=true --set ingress.hostname=\"hub-cicd.$(minishift ip).nip.io\" charts/selenium | oc apply -f -\noc get po -w\nAnd once all pods are Running, you should be able to reach hub at http://hub-cicd.$(minishift ip).nip.io and of course there should be no error in the logs of the hub and the nodes.. ",
    "meshfields": "Is there a documentation on how to achieve this with Supervisor and the given images?. ",
    "dave00galloway": "@lmtierney - thanks for the suggestion. I tried\n```\nversion: '2'\nservices:\n  chrome:\n    image: selenium/node-chrome:3.10.0-argon\n    volumes:\n       - /dev/shm:/dev/shm\n    depends_on:\n       - hub\n    environment:\n       - NODE_MAX_INSTANCES: 10\n       - NODE_MAX_SESSION: 10\n       - HUB_HOST: hub\nhub:\n    image: selenium/hub:3.10.0-argon\n    ports:\n      - \"4444:4444\"\n    environment:\n      - GRID_MAX_SESSION: 10\n```\nbut this fails to load:-\n$ docker-compose up\nERROR: The Compose file './docker-compose.yml' is invalid because:\nservices.hub.environment contains {\"GRID_MAX_SESSION\": 10}, which is an invalid type, it should be a string\nservices.chrome.environment contains {\"NODE_MAX_INSTANCES\": 10}, which is an invalid type, it should be a string. I think I've got it, at least it looks like the grid max sessions is configured correctly:-\n```\nversion: '2'\nservices:\n  chrome:\n    image: selenium/node-chrome:3.10.0-argon\n    volumes:\n       - /dev/shm:/dev/shm\n    depends_on:\n       - hub\n    environment:\n       NODE_MAX_INSTANCES: 10\n       NODE_MAX_SESSION: 10\n       HUB_HOST: hub\nhub:\n    image: selenium/hub:3.10.0-argon\n    ports:\n      - \"4444:4444\"\n    environment:\n      GRID_MAX_SESSION: 10\n```\nresults in \n$ docker-compose up\nRecreating seleniumdocker_hub_1 ... done\nRecreating seleniumdocker_chrome_1 ... done\nAttaching to seleniumdocker_hub_1, seleniumdocker_chrome_1\nhub_1     | starting selenium hub with configuration:\nhub_1     | {\nhub_1     |   \"port\": 4444,\nhub_1     |   \"role\": \"hub\",\nhub_1     |   \"maxSession\": 10,\nhub_1     |   \"newSessionWaitTimeout\": -1,\nhub_1     |   \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\nhub_1     |   \"throwOnCapabilityNotPresent\": true,\nhub_1     |   \"jettyMaxThreads\": -1,\nhub_1     |   \"cleanUpCycle\": 5000,\nhub_1     |   \"browserTimeout\": 0,\nhub_1     |   \"timeout\": 30,\nhub_1     |   \"debug\": false\nhub_1     | }\nand docker inspect shows:-\n\"Env\": [\n                \"NODE_MAX_INSTANCES=10\",\n                \"HUB_HOST=hub\",\n                \"NODE_MAX_SESSION=10\",\n                \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n                \"DEBIAN_FRONTEND=noninteractive\",\n                \"DEBCONF_NONINTERACTIVE_SEEN=true\",\n                \"TZ=UTC\",\n                \"SCREEN_WIDTH=1360\",\n                \"SCREEN_HEIGHT=1020\",\n                \"SCREEN_DEPTH=24\",\n                \"DISPLAY=:99.0\",\n                \"NODE_PORT=5555\",\n                \"NODE_REGISTER_CYCLE=5000\",\n                \"NODE_POLLING=5000\",\n                \"NODE_UNREGISTER_IF_STILL_DOWN_AFTER=60000\",\n                \"NODE_DOWN_POLLING_LIMIT=2\",\n                \"NODE_APPLICATION_NAME=\",\n                \"DBUS_SESSION_BUS_ADDRESS=/dev/null\"\n            ],\nand\n\"Env\": [\n                \"GRID_MAX_SESSION=10\",\n                \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\n                \"DEBIAN_FRONTEND=noninteractive\",\n                \"DEBCONF_NONINTERACTIVE_SEEN=true\",\n                \"TZ=UTC\",\n                \"GRID_NEW_SESSION_WAIT_TIMEOUT=-1\",\n                \"GRID_THROW_ON_CAPABILITY_NOT_PRESENT=true\",\n                \"GRID_JETTY_MAX_THREADS=-1\",\n                \"GRID_CLEAN_UP_CYCLE=5000\",\n                \"GRID_BROWSER_TIMEOUT=0\",\n                \"GRID_TIMEOUT=30\",\n                \"GRID_DEBUG=false\",\n                \"GRID_HUB_PORT=4444\"\n            ],. ",
    "toraylin": "I have the same issue in Chrome version 65 and Chrome driver 2.36 on Windows 7.\nI use either  options.AddAdditionalCapability(\"useAutomationExtension\", false) or option.AddArguments(\"disable-infobars\")  and nothing works. \n. ",
    "jessicamarshall": "I am closing this as it has to be a networking issue on our end, assuming there is a port being blocked on that container.  Thanks.  . ",
    "micheladennis": "I have a similar issue when running Selenium Java - Firefox/Gecko Driver within an docker image.\nSelenium Java 3.12\nSelenium Firefox 3.12\ngeckodriver 0.20.1\nWorks locally but not in docker.\nStack Trace\n...\n2018-08-01 14:00:36 INFO  PluginService$:125 [Executor task launch worker-0] - Initialize class ca.kreac.sparkler.plugin.fetcher.FetcherFirefox as fetcher-firefox\n1533132036874   geckodriver INFO    geckodriver 0.20.1\n1533132036885   geckodriver INFO    Listening on 127.0.0.1:19065\n1533132037503   mozrunner::runner   INFO    Running command: \"/usr/lib/firefox/firefox\" \"-marionette\" \"--headless\" \"-profile\" \"/tmp/rust_mozprofile.nSfaB3ni0ypP\"\n*** You are running in headless mode.\n2018-08-01 14:01:37 ERROR Executor:95 [Executor task launch worker-0] - Exception in task 0.0 in stage 1.0 (TID 1)\norg.openqa.selenium.WebDriverException: connection refused\nBuild info: version: 'unknown', revision: 'unknown', time: 'unknown'\nSystem info: host: 'f024f7a98924', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-130-generic', java.version: '1.8.0_181'\nDriver info: driver.version: FirefoxDriver\nremote stacktrace: \n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57)\n    at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104)\n    at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)\n    at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n    at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\n    at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)\n    at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)\n    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\n    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n    at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)\n    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n    at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)\n    at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)\n    at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)\n    at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\n    at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n    at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n    at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207)\n    at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130)\n    at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125)\n    at ca.kreac.sparkler.plugin.fetcher.FetcherFirefox.init(FetcherFirefox.java:58)\n    at edu.usc.irds.sparkler.service.PluginService.getExtension(PluginService.scala:126)\n    at edu.usc.irds.sparkler.service.PluginService$.getExtension(PluginService.scala:152)\n    at edu.usc.irds.sparkler.pipeline.FetchFunction$.apply(FetchFunction.scala:44)\n    at edu.usc.irds.sparkler.pipeline.FetchFunction$.apply(FetchFunction.scala:32)\n    at edu.usc.irds.sparkler.pipeline.FairFetcher.(FairFetcher.scala:38)\n    at edu.usc.irds.sparkler.pipeline.Crawler$$anonfun$run$1$$anonfun$2.apply(Crawler.scala:158)\n    at edu.usc.irds.sparkler.pipeline.Crawler$$anonfun$run$1$$anonfun$2.apply(Crawler.scala:158)\n    at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n    at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\n    at org.apache.spark.storage.MemoryStore.unrollSafely(MemoryStore.scala:284)\n    at org.apache.spark.CacheManager.putInBlockManager(CacheManager.scala:171)\n    at org.apache.spark.CacheManager.getOrCompute(CacheManager.scala:78)\n    at org.apache.spark.rdd.RDD.iterator(RDD.scala:268)\n    at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)\n    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:306)\n    at org.apache.spark.rdd.RDD.iterator(RDD.scala:270)\n    at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:73)\n    at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:41)\n    at org.apache.spark.scheduler.Task.run(Task.scala:89)\n    at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:214)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n    at java.lang.Thread.run(Thread.java:748)\n...\n. ",
    "rkrisztian": "Well, I was told a better idea that does not create a session, but queries /status via RestAssured as the REST API client:\n```groovy\n    private void waitForSeleniumServer(hostPort) {\n        project.logger.info 'Waiting for Selenium server to become ready...'\n    def requestSpecification = new RequestSpecBuilder().setBaseUri(\"http://localhost:${hostPort}/wd/hub\").build()\n\n    def healthy = (1..healthCheckRetries).any { counter ->\n        def errorReason\n\n        try {\n            def response = RestAssured\n                    .given()\n                    .config(new RestAssuredConfig())\n                    .spec(requestSpecification)\n                    .auth().none()\n                    .when()\n                    .get('/status')\n            def responseJson = new JsonSlurper().parseText(response.body.asString())\n\n            if (!responseJson.ready) {\n                errorReason = \"Selenium server is not ready: ${responseJson.message}\"\n            }\n        }\n        catch (NoHttpResponseException | SocketException e) {\n            errorReason = \"Could not connect to Selenium server: ${e.message}\"\n        }\n\n        if (errorReason) {\n            project.logger.info \"Attempt #${counter}: ${errorReason}\"\n            Thread.sleep 500\n        }\n\n        errorReason\n    }\n\n    if (!healthy) {\n        throw new GradleException(\"Timed out waiting for Selenium server to initialize on port ${hostPort}.\")\n    }\n}\n\n```\nHowever, interestingly one test of mine ended up with the following unexpected result:\n:inspectSeleniumContainer\n(...)\nWaiting for Selenium server to become ready...\nAttempt #1: Could not connect to Selenium server: localhost:33035 failed to respond\n(...)\n:acceptanceTest\n(...)\nSimpleAcceptanceTest > classMethod FAILED\n    org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.\n(...)\n        Caused by:\n        java.net.SocketException: Connection reset\nI have to add though, this happened only 1 time, and so far I could not reproduce it ever again. So I might just ignore it. Time will tell.\nUpdate: The check above is indeed not enough, I could reproduce the error above multiple times.. That should do the job as well, thanks.\nUpdate: Sorry, I was wrong, see below.. Do you happen to have any progress with the release? Thanks in advance.. Sorry, I have to correct myself. I looked into the implementation of the wait-for-it branch, and I found out that all that is done is waiting for the port to exist. However, I discovered in the recent past that it's not enough even to wait for the /status request to respond with okay. The only working way I found was to try and open up a browser, but it's not very elegant in the sense that we will see a browser window quickly flashing up just for that. What would be nice is to know what API to call to really make sure that the node is fully done initializing itself.. ",
    "loghen41": "+1 here. I haven't taken the time to dive into the debug log like @eyalzek But I have been experiencing the same error for about the last two weeks or so.\nWe're testing using protractor and behave, and I specifically only see this issue when I start up multiple sessions (5+) to test in parallel.\n```23:50:12 [chrome #01-24] [23:50:12] I/runnerCli - Session [564a337b0773f8f8273510a48e1c3b79] not available and is not among the last 1000 terminated sessions.\n23:50:12 [chrome #01-24] Active sessions are[ext. key f174e45b117e359a66ccc99043fb10ce, ext. key cf505647975e2f8162a15f31c80d21e0, ext. key cd98c8aac51adf41b413a1adc601e2c5, ext. key e4d688a4b4db6c7544be4d309214dec7, ext. key f4ca8698b3fe328984a2f2d7ec42b353, e8699ff8-8abc-4858-b51a-ee36f64bd61c (int. key, remote not contacted yet.)]\n. Augmenting my previous comment here: This is our Docker-compose file we're using to set up our Selenium Grid\nhub:\n  image: selenium/hub:${GRID_VERSION}\n  ports:\n    - \"4444:4444\"\n  environment:\n    - GRID_TIMEOUT=30000\n    - GRID_BROWSER_TIMEOUT=30000\nchrome:\n  image: selenium/node-chrome:${GRID_VERSION}\n  links:\n    - hub\n  shm_size: 128M\n```. @diemol \nTo directly respond to your request, Here's our configuration file for our grid runner:\n```\nvar path = process.cwd();\nexports.config = {\n    seleniumAddress: 'http://10.61.132.147:4444/wd/hub',\n    framework: 'custom',\n    frameworkPath: require.resolve('protractor-cucumber-framework'),\nspecs: [ path + '/features/**/*.feature'],\n\ncapabilities: {\n    'browserName': 'chrome',\n    'loggingPrefs' : {'driver' : 'INFO', 'browser': 'INFO'},\n    shardTestFiles: true,\n    maxInstances: process.env.NUMBER_OF_SHARDS\n},\n\ncucumberOpts: {\n    format: ['json:../../../../../results.json', \"pretty\"],\n    require: [ path + '/features/step_definitions/**/*.js',\n        path + '/../../support/commonStepDefinitions.js' ]\n}\n\n};\n```\nAnd here is our command we use to launch the tests:\nprotractor ../../support/config/conf.chrome_shard_docker.js --specs 'features/**/*.feature' --params.environment=qa '--cucumberOpts.tags=~@inDevelopment' --disableChecks --params.showHelps=true. I will say, we are also testing multiple applications at once. So we could be having the issue of applications clashing with each other with stealing resources. But as I check the console, the jobs seem to be queueing properly, so I'm surprised to see them being stolen.. @diemol That makes sense.... I thought you might say something like that. The codebase for our testing suite is unfortunately behind locked doors (and I don't have enough ownership to place it into a public forum)  So... I unfortunately am in a similar situation as @eyalzek.  I know the testing suite pretty well backwards and forwards, but am not allowed to make it public.\nThe only thing I'm not as familiar with is the underlying workings of the selenium grid.  I'd be happy to potentially debug some things on my end, but I'm not entirely sure where to start.  . @diemol I'll see what I can do to test/review with those recommendations and report back here my findings.  I could potentially build a small little repo like that, I'll still have to check what permissions I have before I do so.  I'll check into that now.. I've now done substantially more tests on my end, and I'm almost positive that the errors I was receiving beforehand is coming from a surplus of requests/lack of resources.  I specifically see it in my case where I was spinning up 6 nodes, I found that anytime I reached 5-6 sessions, errors began popping up (from what it appears to be resources stealing sessions from each other)\nAs such I'll be migrating our local selenium grid to our aws environment, (as we lack more physical resources locally)\nI'll be glad to post my results if this particular thread is still open.. @diemol I'm currently transitioning our local grid into aws right now (which I'm almost finished with) What I've specifically found is that the problem only seems to occur when long running requests are sent to the grid beyond the capacity of what the resources of what that grid can handle \nie. if you have a grid with 10 nodes, and 10 max sessions, but it receives 20 requests, and the test suites sent to it are long running tests, they potentially can have their session taken from them and handed to one of the requests in queue.  I have been curious to do load testing in a reproducible manner, but for my organization it's been more critical that I produce a working replacement for our current system. Once I get this up and running, I probably can look at doing some load testing.. @diemol I've finished my work that I needed to complete for my work on aws.  As such I've dedicated the better part of today to building a small testing repo in order to test this particular bug.  I'm still working on duplicating it, but you can see the current version I'm at here:\nhttps://github.com/loghen41/docker-selenium-grid. @diemol After a week or so, I finally have a reproduced version of our issue here: https://github.com/loghen41/docker-selenium-grid\nIt appears that the session is persisting even after a new session has been assigned to a new test suite.  I am yet to identify the exact reason for this.  I'm specifically reviewing this from a poor coding practice perspective/test suite perspective. (You'll notice that I'm forcing a particular part of the codebase to fail on purpose, which is what triggers the session management errors.) But if you have any insight from a selenium perspective, I'd be glad to hear it.. @borisivan Here's the behavior that I believe I am seeing. Feel free to check out my repo to confim. We are using protractor to shard multiple features/tests into different sessions to run in parallel. \nI'm noticing the order of operation looking like the following:\n\nFeature file 1 assigned session a\nFeature file 1 finishes test in session a and outputs test results.\nSession b assigned to feature file 2\nSession a does not terminate properly (potentially due to codebase)\nFeature file 2 throws an error saying that session b does not exist (but does exist on the node)\nFeature file 2 terminates, leaving unused session hanging on node.\n\nI'm confirming this right now. So don't hold this as doctrine, but I am wondering more and more if the issue lies with some sort of asynchronous call in feature file 1 not terminating, leaving it's session open beyond the time frame of when the test should be \"completed\" and throws an error with the follow up feature file.\n . ",
    "borisivan": "Hi @loghen41, I have the same problem you referenced in the comment above. When running 6 tests in parallel, in a suite with 240 tests that each range from 30 seconds to 4 minutes, with 7 containers that stay up and running, I see 3-4 tests hit that problem once or twice per day, if the suite runs 10-15 times a day.\nI was able to reduce the frequency of occurrence with converting all webDriver instantiation and retrieval with threadLocal usage, but it still happens. My suspicion is that there is something not threadsafe somewhere in the these selenium-grid docker solutions, but I haven't been able to figure it out either. (or provide a way to reliably reproduce). However, it's reliable enough that it happens daily, and always on a different test.. @eyalzek java w/ testNG. Using Java threadLocal to create and provide the webDriver for the tests.. Hi @loghen41, when you say: \"...even after a new session has been assigned to a new test suite\", what do you mean by \"assigned to a new test suite\"?\n. ",
    "pokaalinkanssayohon": "Hi,\nThe problem to reproduce this is, that this happens only occassionally. I\ngot it with very basic Robot scenario:\nOpen Browser    chrome    remote_url=http://hub-server:4444/wd/hub\nMaximize Browser Window\nClose Browser\nBr\nSami\npe 16.3.2018 klo 20.56 Diego Molina notifications@github.com kirjoitti:\n\nHi @pokaalinkanssayohon https://github.com/pokaalinkanssayohon,\nCould you please provide more information? I just tried it by starting the\nhub, the node-chrome-debug and doing\nwebDriver.manage().window().maximize(); from the Java bindings and it\nworks.\nIt would be great if you can provide a script and detailed steps on how to\nreproduce this.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/696#issuecomment-373812234,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Agv-lBijy5XbieN13Ih_klOiimYt_dnJks5tfArDgaJpZM4SoRqP\n.\n-- \nTerveisin\nSami\n. \n",
    "PatrickDuncan": "Fix -\nsudo sysctl -w kernel.pax.softmode=1\nSource. ",
    "ageekymonk": "Thanks @diemol. In enterprise, there are proxy to reach external websites, so we need proxy settings to be in chrome to test. \n. @diemol sorry, i did not understand you earlier. google chrome does not pick the proxy from the environment, it needs to be passed explicitly. \nThis has been reported earlier as well https://github.com/SeleniumHQ/docker-selenium/issues/78 and it is still the same. . ",
    "giorgiosironi": "By extending the image in this way:\n```\nFROM selenium/standalone-firefox-debug:3.11.0-antimony\nUSER root\nRUN apt-get update && apt-get -y install mplayer linux-sound-base\ndoes it make sense to install a kernel module inside a container? Probably not necessary, but was originally ported from another implementation, untested the removal\nRUN apt-get -y install linux-image-extra-4.13.0-37-generic\nUSER seluser\n```\nthe browser is able to load an audio file and show, for example, its duration. It is not able to play it but that was out of scope for me.. ",
    "rlgomes": "Actual behavior: \n * Chrome downloads to an external volume fail because of permissions but in your tests you may actually see a download dialog popup and after accepting to save manually you'll see the permission error.\n. ",
    "rafaelsilverioit": "Any updates on this @diemol ?. Thank you @ddavison !. ",
    "SatishD1": "Updated the docker compose file as below, and connected to VNC using Local_IP_Address:5900 and i was able to connect to VNC and execute my script.\n\n. ",
    "HowHai": "@ddavison It's a kubernetes file. When I check the config.json, it does seems to read from GRID_JETTY_MAX_THREADS. \ncat /opt/selenium/config.json\n{\n  \"port\": 4444,\n  \"role\": \"hub\",\n  \"maxSession\": 5,\n  \"newSessionWaitTimeout\": 30000,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": true,\n  \"jettyMaxThreads\": 200,\n  \"cleanUpCycle\": 5000,\n  \"browserTimeout\": 30000,\n  \"timeout\": 30000,\n  \"debug\": false\n}. @ddavison I must have done something wrong. I just rebuilt the box, and now it's updating the config.json. Thank you!. ",
    "AumCoin": "Sorry I don't want to spend another several hours reproducing what I did to get error messages that seem to be already linked to known issues.  It would be really cool if someone could just say, \"download such and such version/flavor of Linux and install these versions of Firefox, GeckoDriver, etc.\"  Because this product actually worked perfectly for years, but now between the Linux -> Selenium -> Gecko/ChromeDriver -> Firefox chain, things simply do not work.  It seems like Selenium is all you guys do, and lots of businesses use it, so I'm trying to understand how IT professionals like myself are getting by after you broke what was working for so many years.  I still need this product but I can't even restore the functionality that was available years ago.. Or if you are aware of the crazy issues with Selenium right now, are you doing anything to fix them?  Are you considering reverting to an older version to fix all of the newly-introduced bugs, or do you plan on releasing a stable Docker container (one that is tested to work with the software versions it is packaged with)?. ",
    "kvetko": "@diemol I have found it the problem is that selenium is not expecting firefox binary in this path. ",
    "librisius": "I have the same problem. ",
    "DamolAAkinleye": "Can you try running the  $Env:COMPOSE_CONVERT_WINDOWS_PATHS=1 in powershell  and see if that helps.. ",
    "vikassahnimca": "Any help/information on this .how i can resolve this issue.. ",
    "ZainabSalameh": "@diemol now it's passed.. ",
    "bartonhammond": "I changed Dockerfile to this:\nFROM selenium/standalone-chrome-debug:latest\nUSER root\nRUN sudo apt-get update\nand it worked.\nIf this is correct answer, please close.  . ",
    "kshahani": "Having the same issue, which means we're stuck on Chrome 64 if we don't want to build our own image. Does anyone have a time to resolution on when this will be addressed or fixed?. ",
    "gabe-connolly": "Thanks for the reply, @diemol .  Using your input, I was able to finally get my javascript tests running by modifying my behat selenium settings:\nBehat\\MinkExtension:\n      base_url: http://wordpress\n      browser_name: chrome\n      default_session: goutte\n      javascript_session: selenium2\n      goutte: ~\n      # https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities\n      selenium2:\n        browser: chrome\n        wd_host: 'http://selenium-hub:4444/wd/hub'\n        capabilities: { browser: chrome, browserVersion: 66.0.3359.117, version: 66.0.3359.117}\nThe two changes I had to make were:\n Add capabilities: { browser: chrome, browserVersion: 66.0.3359.117, version: 66.0.3359.117}\n Modify base_url to use base_url: http://wordpress (wordpress is the name of the docker web container).\nWhat's interesting is that on another project I have running, I'm able to run Javascript tests without specify any selenium2 capabilities.  In this case though, for some reason it looks like the capabilities have to be explicitly defined, or they get the low browser versions and types from the initial error.\n. ",
    "rcarton": "I had the same problem, I fixed it by using REMOTE_HOST instead of SE_OPTS to starts on the host/port.\nI used to run EXPORT SE_OPTS=\"-host $HOST -port $PORT\", now instead I only specify\nEXPORT REMOTE_HOST=http://$HOST:$PORT and I run selenium in the container on the default port (5555). My wild random guess would be that it can't bind on the network interface I was passing for some reason.\nIn the end all I care about is passing the hub the proper info to reach the node, and you can do this with REMOTE_HOST.. ",
    "Manolo2014": "thanks @rcarton, that worked.. ",
    "SatyrTrickster": "I've just ran into exactly the same issue.\nFix suggested by @rcarton works, but it's said that option REMOTE_HOST is deprecated, and might be removed in future. Perhaps there's a \"proper\" way to get nodes to report their proper address?. ",
    "dominicfraser": "This was completely my fault, but having resolved it I now have a new error.\nThe URL given to the CodeceptJS test was slightly wrong, from experimenting with too many testing scenarios, and so was resulting in a 404 that I had not caught.  Because of this the attempt to clear localStorage was failing, and producing the mentioned error.\nFor anyone who finds this with a similar error, where this does not solve the issue, I did find that adding logLevel: 'verbose', in docker.conf.js under WebDriverIO did give even more logs. \nThe new error that now occurs is that all tests other than the 'I.amOnPage' fail - and from the screenshot of the failure Firefox is only showing a blank page, despite this URL showing the full page when in my browser. I will close this issue for now \ud83d\ude42 . ",
    "mlagran1": "Hey @diemo,l I've tried removing the version, specifying the version and leaving the version as an empty string, but I'm still not having any luck. \nI have the same issue when I try IE.. @lmtierney Do you have any suggestions as a workaround?. Wow, that is really unfortunate...Thanks for the help. The standalone version: selenium/standalone-firefox actually opens up the browser. It can't click elements unfortunately, but at least it opens up. I wonder what the difference between standalone image and node image is.. ",
    "Perlence": "@ddavison Thanks \ud83d\ude42 \nI'd like to test that a feature works after browser is restarted. If I don't pass --user-data-dir cookies will be gone after I quit.. Cool, thank you!. ",
    "cristibanica": "Thx. ",
    "alinpa": "Hi @ddavison, \nI ran the previous command and the port is not in use.\nThe selenium grid is started by default by selenium jenkins plugin. Hi @mach6 \nCan you take a look at this issue ? \nAnd this: https://github.com/jenkinsci/selenium-plugin/issues/128#issuecomment-396154335\nIt seems to be an issue introduced by you.\nPlease let me know if you need more details.. @ddavison : it is enough to start the selenium grid with 1 node on  two ec2 machines. Start the docker images and you will see the host is not discovered properly. Please check the following issue I already documented there: https://github.com/jenkinsci/selenium-plugin/issues/128#issuecomment-396154335. @mtilev  Please check my comments  here: https://github.com/jenkinsci/selenium-plugin/issues/128#issuecomment-396154335\nThe error message is wrong!. @mtilev Did you implement my workaround or something new?. ",
    "mtilev": "We can reporduce this issue, port 4444 is reported as in use while plugin starts, hweover, a netstat reports no process serving on that port. We are using a jenkins deployment within a kubernetes cluster.. @alinpa We implemented the workaround; nevertheless, this is an undocumented change in behaviour and thus either a bug or a documentation bug.. @alinpa We followed your advice.\nKind regars,\nm. ",
    "dober": "got same issue with node. \nv3.12:\n```\nOne can also add -ncache_cr for smooth 'copyrect' window motion.\nMore info: http://www.karlrunge.com/x11vnc/faq.html#faq-client-caching\n2018-06-29 13:15:57.593:INFO::main: Logging initialized @636ms to org.seleniumhq.jetty9.util.log.StdErrLog\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSettingdefault value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\nFailed to read: session.ignoreBorder\nSetting default value\nFailed to read: session.forcePseudoTransparency\nSetting default value\nFailed to read: session.colorsPerChannel\nSetting default value\nFailed to read: session.doubleClickInterval\nSetting default value\nFailed to read: session.tabPadding\nSetting default value\nFailed to read: session.styleOverlay\nSetting default value\nFailed to read: session.slitlistFile\nSetting default value\nFailed to read: session.appsFile\nSetting default value\nFailed to read: session.tabsAttachArea\nSetting default value\nFailed to read: session.cacheLife\nSetting default value\nFailed to read: session.cacheMax\nSetting default value\nFailed to read: session.autoRaiseDelay\nSetting default value\n13:15:57.782 ERROR [SeleniumServer.boot] - Port 5559 is busy, please choose a free port and specify it using -port option\n```\nwith 3.11 looks fine:\n13:25:23.281 INFO [SeleniumServer.boot] - Welcome to Selenium for Workgroups....\n13:25:23.282 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5559\n13:25:23.282 INFO [GridLauncherV3$3.launch] - Selenium Grid node is up and ready to register to the hub\n13:25:23.299 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms.\n13:25:23.302 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://jenkins.domain.tld/:4445/grid/register\nFailed to read: session.screen0.slit.acceptKdeDockapps\nSetting default value\nFailed to read: session.screen0.slit.autoHide\nSetting default value\nFailed to read: session.screen0.slit.maxOver\nSetting default value\nFailed to read: session.screen0.slit.placement\nSetting default value\nFailed to read: session.screen0.slit.alpha\nSetting default value\nFailed to read: session.screen0.slit.onhead\nSetting default value\nFailed to read: session.screen0.slit.layer\nSetting default value\nFailed to read: session.screen0.toolbar.autoHide\nSetting default value\nFailed to read: session.screen0.toolbar.maxOver\nSetting default value\nFailed to read: session.screen0.toolbar.visible\nSetting default value\nFailed to read: session.screen0.toolbar.alpha\nSetting default value\nFailed to read: session.screen0.toolbar.layer\nSetting default value\nFailed to read: session.screen0.toolbar.onhead\nSetting default value\nFailed to read: session.screen0.toolbar.placement\nSetting default value\nFailed to read: session.screen0.toolbar.height\nSetting default value\nFailed to read: session.screen0.iconbar.mode\nSetting default value\nFailed to read: session.screen0.iconbar.alignment\nSetting default value\nFailed to read: session.screen0.iconbar.iconWidth\nSetting default value\nFailed to read: session.screen0.iconbar.iconTextPadding\nSetting default value\nFailed to read: session.screen0.iconbar.usePixmap\nSetting default value\n13:25:24.259 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub\nk8s deployment:\n```\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: selenium-node-chrome\n  namespace: qa\nspec:\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: selenium-node-chrome\n  template:\n    metadata:\n      labels:\n        app: selenium-node-chrome\n        pod: chrome\n    spec:\n      affinity:\n       nodeAffinity:\n         requiredDuringSchedulingIgnoredDuringExecution:\n           nodeSelectorTerms:\n           - matchExpressions:\n             - key: environment\n               operator: In\n               values:\n               - qa\n      containers:\n      - name: selenium-node-chrome\n        image: selenium/node-chrome-debug:3.11\n        ports:\n          - containerPort: 5900\n            name: vnc\n          - containerPort: 5559\n            name: node\nenv:\n          - name: HUB_PORT_4444_TCP_ADDR\n            value: jenkins.domain.tld\n          - name: HUB_PORT_4444_TCP_PORT\n            value: \"4445\"\n          - name: NODE_PORT\n            value: \"5559\"\n          - name: SE_OPTS\n            value: -host myhost.tld\n        resources:\n          limits:\n            memory: \"2048Mi\"\n        volumeMounts:\n        - name: vncpasswd\n          mountPath: /home/seluser/.vnc/passwd\n          subPath: passwd\n      volumes:\n        - name: vncpasswd\n          secret:\n            secretName: vncpasswd\n```. any news?. ",
    "grindon": "Seeing the same issue on Docker node (both Chrome & Firefox) as @dober \n```\nroot@e8fcd13aa9ff:~# cat /opt/selenium/config.json\n{\n  \"capabilities\": [\n    {\n      \"version\": \"61.0.1\",\n      \"browserName\": \"firefox\",\n      \"maxInstances\": 1,\n      \"seleniumProtocol\": \"WebDriver\",\n      \"applicationName\": \"\",\n      \"moz:firefoxOptions\":\n        {\n          \"log\":\n            {\n              \"level\": \"info\"\n            }\n        }\n    }\n  ],\n  \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n  \"maxSession\": 1,\n  \"host\": \"10.10.10.3\",\n  \"port\": 12345,\n  \"register\": true,\n  \"registerCycle\": 5000,\n  \"nodePolling\": 5000,\n  \"unregisterIfStillDownAfter\": 60000,\n  \"downPollingLimit\": 2\n}\nroot@e8fcd13aa9ff:~# ss --tcp --numeric --listening                                                                                                                                                                                                                            \nState       Recv-Q Send-Q                                                                                           Local Address:Port                                                                                                          Peer Address:Port\nroot@e8fcd13aa9ff:~# java -jar /opt/selenium/selenium-server-standalone.jar -role node -hub http://10.10.10.4:4444/grid/register -nodeConfig /opt/selenium/config.json                                                                                                       \n23:50:17.142 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.12.0', revision: '7c6e0b3'\n23:50:17.144 INFO [GridLauncherV3$3.launch] - Launching a Selenium Grid node on port 12345\n2018-08-06 23:50:17.215:INFO::main: Logging initialized @310ms to org.seleniumhq.jetty9.util.log.StdErrLog\n23:50:17.361 ERROR [SeleniumServer.boot] - Port 12345 is busy, please choose a free port and specify it using -port option\n```\nSadly the same issue is present on 3.13 and 3.14, however I can confirm it was working as expected on 3.11.. ",
    "PriyaSoni164": "Can try in this way it worked for me :\njava -jar selenium-server-standalone-3.3.1.jar -port 4455 -role hub. ",
    "vishalgupta305": "Related Issue: https://github.com/SeleniumHQ/docker-selenium/issues/367. \nImage Attached. ",
    "krmahadevan": "cc @diemol \n@eranshahar - That was an interesting sample for sure :)\nI directly tried reproducing this issue on Selenium 3.13.0 (which is the latest released version of selenium) on a standalone hub and node (Not a docker setup since its not yet available)\nI continued to run for around 18 iterations (each iteration spinning off 15 concurrent browsers) and I wasn't able to reproduce the problem. But I did crash my execution from mvn clean test command line though (I guess my Mac couldn't take it.. I dont blame it either.. its an old one... and there's only so much that the old guy could take.. \ud83d\ude04 )\nDocker selenium and regular selenium are literally the same. So can you please try using Selenium standalone and see if you can reproduce the problem. My guess is that in one of the iterations, either the html page that you are constructing doesn't open up and then after that when you snap a screenshot on it, its going to be a blank which could be the reason why the test conks. Just an educated guess though!\nHere's the sample that I used (an altered variant of what you used)\n```java\nimport static org.assertj.core.api.Java6Assertions.assertThat;\nimport static org.assertj.core.api.Java6Assertions.fail;\nimport com.google.common.base.Charsets;\nimport java.io.File;\nimport java.net.URL;\nimport java.nio.file.Path;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.atomic.LongAdder;\nimport java.util.stream.IntStream;\nimport java.util.zip.CRC32;\nimport java.util.zip.Checksum;\nimport org.apache.commons.io.FileUtils;\nimport org.apache.commons.lang3.RandomStringUtils;\nimport org.junit.Test;\nimport org.openqa.selenium.Dimension;\nimport org.openqa.selenium.OutputType;\nimport org.openqa.selenium.chrome.ChromeOptions;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\npublic class SeleniumBugWithoutDocker {\nprivate static final Logger logger = LoggerFactory.getLogger(SeleniumBug.class);\n@Test\n  public void reproduceSeleniumBug() throws InterruptedException {\n    int cycleCounter = 1;\n    while (true) {\n      logger.info(\"Cycle number: {}\", cycleCounter++);\n      Map images = new ConcurrentHashMap<>();\n      LongAdder nThreads = new LongAdder();\n      String currentDir = System.getProperty(\"user.dir\") + File.separator + \"images\";\n      File imagesDir = new File(currentDir);\n      nThreads.add(15);\n      CountDownLatch countDownLatch = new CountDownLatch(nThreads.intValue());\n      ExecutorService executorService = Executors.newFixedThreadPool(nThreads.intValue());\n      IntStream.range(1, nThreads.intValue() + 1).forEach(i ->\n          executorService.execute(() -> {\n            URL htmlUrl = createHtml(i, imagesDir.toPath(), countDownLatch);\n            if (htmlUrl != null) {\n              try {\n                URL imgUrl = createImage(htmlUrl, i, imagesDir.toPath(), images);\n              }\n              catch (Throwable t) {\n                if (!images.values().contains(i)) {\n                  logger.info(\"decrementing, account: {}\", i);\n                  nThreads.decrement();\n                }\n                else {\n                  logger.error(\"Not decrementing, account: {}\", i);\n                }\n                logger.error(\"Failed to create image for account: {}. images: {}\", i, t, images);\n              }\n              finally {\n                countDownLatch.countDown();\n              }\n            }\n          }));\n      if (!countDownLatch.await(40, TimeUnit.SECONDS)) {\n        fail(\"fail\");\n      }\n      assertThat(images).hasSize(nThreads.intValue());\n    }\n  }\nURL createHtml(int accountId, Path path, CountDownLatch countDownLatch) {\n    try {\n      String html = \"<!DOCTYPE html>\\n\" +\n          \"\\n\" +\n          \"\\n\" +\n          \"    \\n\" +\n          \"    Eran Shahar\\n\" +\n          \"\\n\" +\n          \"\\n\" +\n          \"Eran Shahar %s\\n\" +\n          \"\\n\" +\n          \"\";\n      String fileName = \"/\" + accountId + \".\" + \"html\";\n      String filePath = path.toAbsolutePath() + fileName;\n      File htmlFile = new File(filePath);\n      FileUtils.write(htmlFile, String.format(html, accountId + \"-\" + RandomStringUtils.randomAlphanumeric(accountId)), Charsets.UTF_8);\n      URL urlToHtml = new File(path.toAbsolutePath() + fileName).toURI().toURL();\n      logger.info(\"urlToHtml: {}\", urlToHtml);\n      return urlToHtml;\n    }\n    catch (Throwable e) {\n      logger.error(\"Failed to create html.\", e);\n      countDownLatch.countDown();\n      return null;\n    }\n  }\nURL createImage(URL htmlUrl, int accountId, Path path, Map images) throws Exception {\n    RemoteWebDriver webDriver = null;\n    try {\n      String imgPath = path.toAbsolutePath() + \"/\" + \"Image\" + accountId + \".\" + \"png\";\n      webDriver = new RemoteWebDriver(new URL(\"http://localhost:4444/wd/hub\"), new ChromeOptions());\n      webDriver.manage().timeouts().setScriptTimeout(20, TimeUnit.SECONDS)\n          .pageLoadTimeout(20, TimeUnit.SECONDS).implicitlyWait(30, TimeUnit.SECONDS);\n      webDriver.manage().window().setSize(new Dimension(500, 500));\n      webDriver.navigate().to(htmlUrl);\n      webDriver.switchTo().defaultContent();\n      webDriver.manage().window().setSize(new Dimension(500, 500));\n      Actions builder = new Actions(webDriver);\n      builder.moveByOffset(500, 500);\n      builder.perform();\n      byte[] screenshotAs = webDriver.getScreenshotAs(OutputType.BYTES);\n      FileUtils.writeByteArrayToFile(new File(imgPath), screenshotAs);\n      URL urlToImage = new File(imgPath).toURI().toURL();\n      Checksum checksum = new CRC32();\n      checksum.update(screenshotAs, 0, screenshotAs.length);\n      long checksumValue = checksum.getValue();\n      Integer previousAccountId = (Integer) images.putIfAbsent(checksumValue, accountId);\n      if (previousAccountId != null) {\n        logger.info(\"Found the bug !!! snapshot duplication!!! previous account id: {}, accountId: {}, image path: {}, duplication image path: {}, checksum value: {}\",\n            previousAccountId, accountId, path.toAbsolutePath() + \"/\" + \"Image\" + previousAccountId + \".\" + \"png\", imgPath, checksumValue);\n        TimeUnit.SECONDS.sleep(5);\n        System.exit(1);\n      }\n      logger.info(\"Finish to generate image and copy to {}, url: {}\", imgPath, urlToImage);\n      return urlToImage;\n    }\n    finally {\n      if (webDriver != null) {\n        webDriver.quit();\n      }\n    }\n  }\n}\n```\n. ",
    "tarjintor": "I find the way!!!\ngit glone and change the generate_config then build dockfile then everything is fine!!!. ",
    "dhirajforyou": "Have raised this to google user's group.\nThus closing.. ",
    "triesz": "Hi @diemol ,\nthanks a lot for getting back.\nMy above composer file was incorrect.\nversion: '2'\nservices:\n  hub:\n    image: selenium/hub:3.13.0\n    ports:\n    - 4444:4444\n  chrome:\n    image: selenium/node-chrome:3.13.0\n    ports:\n    - 5900:5900\n    environment:\n      HUB_HOST: hub\n      HUB_PORT: 4444\n      SE_OPTS: -timeout 65 -browserTimeout 60 -browser browserName=chrome,maxInstances=1,platform=LINUX,applicationName=chrome-1\n      REMOTE_HOST: http://chrome:5555\n    volumes:\n    - /dev/shm:/dev/shm\nAnd this way it works fine with 3.13 images as well.\nI just finished my contract at the customer where I hit this prob so I cannot investigate the original (AWS) environment anymore. Please allow me a day or two, I will ping my ex-colleagues and report back here.. aha, my ex-colleague has confirmed that he sees the error when pulling the image from the internal company repo, and not with the docker hub versions. So I am closing this ticket. Sorry for the noise. (I was not aware that the internal images were modified...). ",
    "venkatasykam": "really thanks for the docs.. ",
    "jerrylizilong": "@diemol\nI updated my Chrome to the latest version and the click also failed.  It seems to be a bug on Chrome.. @lmtierney \nThanks . ",
    "romeritoCL": "+1 \ud83d\udc4d . ",
    "toolowner": "Thank you @diemol. I set HUB_HOST=localhost and it works :dancer: . That's weird. I have no problem. I use VNC Viewer to connect to node chrome debug successfully. Maybe there is some port on host already occupied 5900 port.\nHere is my docker-compose.yml\nversion: \"3\"\nservices:\n  selenium-hub:\n    image: selenium/hub:latest\n    container_name: selenium-hub\n    network_mode: \"host\"\n  chrome:\n    image: selenium/node-chrome-debug:latest\n    depends_on:\n      - selenium-hub\n    network_mode: \"host\"\n    environment:\n      - HUB_HOST=localhost\n      - HUB_PORT=4444. ",
    "JordiGiros": "Hello @diemol @toolowner, I'm trying to setup a docker selenium compose file using the solution here described. It works with no problem. \nWhat i find letter is that I'm unable to login to the chorme container by VNC. \nMessage \"The connection was refused by the computer\" appears. It seems to be related to some incompatibility to defining ports in docker while using host network-\n_mode. \nDid you find any solution to this problem?\nThank you!. ",
    "wck821829906": "@diemol \ndocker command:\n  1. docker run -d -p 4444:4444 --name selenium-hub selenium/hub\n  2. docker run -d --name node-chrome -p 5900:5900 --link selenium-hub:hub -v /dev/shm:/dev/shm selenium/node-chrome-debug\nScript steps:\n  1. git pull https://github.com/wck821829906/TestProject.git\n  2. replace \"http://10.253.171.0:4444/wd/hub\" with your hub address in TestSuite.txt\n  3. pip install robotframework==3.0.4\n  4. pip install robotframework-seleniumlibrary==3.1.1\n  5. pip install selenium==3.13.0\n  6. Execute command: pybot  ${yourTestProjectlocation}/TestProject,\n     such as : pybot  D:\\workspace\\TestProject. @ddavison @diemol , firstly, I want to know if you guys have reproduced the issue? and that , It has no problem if  I use selenium jar instead of selenium docker to run my robot case, I have spent much time to configure this problem..So upset.. I figured out I have changed my robotframework keyword lead to this problem, Thankd for you guys help.. ",
    "ybizeul": "Sample code :\n```python\n!/usr/bin/python -u\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\ndriver = webdriver.Remote(\"http://selenium.nabox-build.lab.tynsoe.org:4445/wd/hub\",{\n                                \"browserName\":\"chrome\",\n                                \"trustAllSSLCertificates\":True,\n                                \"acceptSslCerts\":True,\n                                'goog:chromeOptions': {  'args': ['--test-type'],\n                                                    'prefs': {\n                                                                'download.default_directory': \"/downloads\",\n                                                                'download.prompt_for_download': False,\n                                                                'directory_upgrade': True,\n                                                                'profile.default_content_settings.popups': 0\n                                                                }\n                                                    }\n                                })\ndriver.get(\"http://ftp.hosteurope.de/mirror/centos.org/\")\ndriver.find_element_by_css_selector(\"A[href=\\\"dir_sizes\\\"]\").click()\n``. Changing the volume mounted in the container to aseluser` accessible mount works, so it looks like a NFS (v4?) issue with Chrome. Thanks @ddavison, yes it took me a while to realize.\nNo it's not resolved, now I'm trying to think of a way to troubleshoot Chrome not being able to directly download without prompting the window. My best bet is Chrome is doing some filesystem call that doesn't work well with NFSv4 to determine the destination is writable or not.. Hi @diemol, I think the problem is more on the selenium docker side, if you consider that's something that should be working.\nThe fact that Chrome works fine on a local mount and not on a NFS docker-volume mount is disturbing and will be hard to troubleshoot without getting the Chrome people involved. I tried looking at the source code without much success, and not many people are actually running browsers in container that would have the experience to troubleshoot.\nNFS mounts in docker are quite standard and becoming mainstream, it's something that selenium users expect to be able to rely on especially for web test downloads and uploads and at this point that's not functional.. I don't think so, but I couldn't setup a firefox container that doesn't prompt, even when not using mounts.. I think I have, running the provided code on NFS persistent volume breaks the download.\nI think lots of people need persistent volumes for these tests, nevertheless I think it's an expectation that persistant volume shouldn't interfere with features.\nNow I realize it's a Chrome issue but it's bundled as part of the container.. Not sure what I can you more. \nSo there is the script up there, and the download location has to be a docker volume from a nfs server, I use rancher but it could be any orchestrator probably . Yes, if I go in the container and create a new file as the selenium user it works fine. Actually, if use the debug container and answer the save panel from VNC, the file saves and the execution continues. \nThe container is started with no particular options other than the volume mapping but I\u2019ll double check. So I'm just mapping port 4444 and 5900 and a persistent volume on /files. ",
    "jmurphy87": "Why does it work outside of docker then? On just a local install of Mozilla and selenium server.. Thank you all for the quick response, I will get you an example tomorrow when I get into work.. My local install of webdriver is 4.0.0-alpha.1, and my local version of firefox is 61.0.2, where as the docker Mozilla is 61.0.1, which I imagine isn't the problem since its only one dot cut. Unsure which version of webdriver you are running on the selenium grid container but if its not 4.0.0-alpha.1 im sure its that.. Awesome, I was unaware about mouseMove being a legacy action, I will give that a try and let you know tomorrow. Also, in my onPrepare method I do have browser.driver.actions({bridge:true}); It seemed like it was still having trouble, but I will double check tomorrow.. I wrote this line after I started getting this error tho, in hopes to resolve it.. So, I am back at work, and was unable to get the mouseMove to work. It seems like the only difference between my dev environment vs the docker environment is the version of selenium being used. If Im right (found in the base Dockerfile)\nRUN  sudo mkdir -p /opt/selenium \\\n  && sudo chown seluser:seluser /opt/selenium \\\n  && wget --no-verbose https://selenium-release.storage.googleapis.com/3.14/selenium-server-standalone-3.14.0.jar \\\n    -O /opt/selenium/selenium-server-standalone.jar\nyou are using version 3.14.0 where I am using version 4.0.0-alpha.1. would there be a way you could release a version with the 4.0.0-alpha.1 selenium version\n. yeah after relooking I can see that now, let me go ahead and get you all a test project going.. 3.14.0. `#!/usr/bin/env bash\nRUN_MOZILLA=$2\ncd dirname $0\ndocker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\ndocker pull selenium/hub\ndocker pull selenium/node-chrome\ndocker pull selenium/node-chrome-debug #has VNC server for remoting in\ndocker pull selenium/node-firefox\ndocker pull selenium/node-firefox-debug #has VNC server for remoting in\ndocker run -d -p 4446:4444 --name selenium-hub -P selenium/hub\nCOUNTER=0\nwhile [  $COUNTER -lt $1 ]; do\n    echo Creating container$COUNTER\n    if [ $RUN_MOZILLA == \"true\" ]\n    then\n        docker run -d -P --name=container$COUNTER --link selenium-hub:hub -e SCREEN_WIDTH=1920 -e SCREEN_HEIGHT=1080 -e SCREEN_DEPTH=24 selenium/node-firefox-debug\n        while ! (curl -sSL \"http://localhost:4446/grid/console\" | grep -i firefox) >/dev/null 2>&1; do printf \"connecting...\\n\"; sleep 0.2; done\n    else\n        docker run -d -P --name=container$COUNTER --link selenium-hub:hub -e SCREEN_WIDTH=1920 -e SCREEN_HEIGHT=1080 -e SCREEN_DEPTH=24 selenium/node-chrome\n        while ! (curl -sSL \"http://localhost:4446/grid/console\" | grep -i chrome) >/dev/null 2>&1; do printf \"connecting...\\n\"; sleep 0.2; done\n    fi\nlet COUNTER=COUNTER+1\n\ndone\n`. firefox version is 61.0.2 and selenium is 3.14.0.\nnpm install \nand webdriver-manager update \nare both ran before executing the tests\n!/usr/bin/env bash\ncd dirname $0\nnohup ../node_modules/.bin/webdriver-manager start &\n. let me just go ahead and get a test project going. --removed example--\nfrom cygwin cd into the exampleProject dir and run the command\n ./scripts/execute-e2e-tests.sh \"true\" \"true\"\n1st param is for docker, changing to false will run on local install of the browser\n2nd param is for using Mozilla, changing to false will change to chrome\nSo, the above statement will run on docker with mozilla node; which will result in: \nPOST /session/e4bac9a7-b641-475c-9d40-1d7935068d51/moveto did not match a known command\nif you run \n ./scripts/execute-e2e-tests.sh \"false\" \"true\"\nSo, you are running on local install and on mozilla, will pass and execute the statements just fine.\nDo not worry about running npm install or anything, the scripts will do it all for you.\nIn summary:\n ./scripts/execute-e2e-tests.sh \"true\" \"true\" will fail with error, (docker, mozilla)\n ./scripts/execute-e2e-tests.sh \"true\" \"false\" pass (docker, chrome)\n ./scripts/execute-e2e-tests.sh \"false\" \"true\" pass (local, mozilla)\n ./scripts/execute-e2e-tests.sh \"false\" \"false\" pass (local, chrome). I placed the issue here because it does work outside of docker. It just seems like the container is missing something that my local has.. Well, unfortunately at this point it is going to cost the company more money than the value of having both chrome and firefox tests if I continue to work on this. Thank you for your time, and for helping me out!. ",
    "matt-l-w": "@diemol - sorry just pulled the code and all looks good.  I was going off of the dockerfile preview on https://hub.docker.com/r/selenium/base/~/dockerfile/ (this is still showing old code). ",
    "praveen4463": "Hi @anto-ac,\nIt just hangs up at that point and nothing happens afterwards. So i believe since the chromedriver/geckodriver server was unable to bind to the port the process freezes up.\nI've not yet seen the verbose logs of chromedriver, are you referring that?. @diemol Thanks very much for responding on this. Apologies for the delay, i tried node-chrome-debug images and it worked well. \nI noticed the error \"bind() returned an error, errno=99: Cannot assign ...\" is still there but the node was able to take request with debug images. I was also able to connect to VNC server and viewed the browser.\nI'll try to find differences in 'normal' vs 'debug' images to know why the normal ones are failing for me, if you know something from top of your mind please let me know.\nThanks again!. @diemol Gotcha, but as i wrote in the issue description it failed even if i don't set window-maximize, It just didn't work and hung but i'll investigate myself being one of the images are working correctly.\nThank you!. @Shuchita009 I just used the same docker-compose and the same code described initially in this issue and just changed the image name to 'debug' one. i suggest you use that and see if it runs.. ",
    "Shuchita009": "@praveen4463 I am learning to execute on docker. I have used following line of code\n                ChromeOptions options = new ChromeOptions();\n                options.AddArguments(\"--start-maximized\");\n                driver = new RemoteWebDriver(new Uri(\"http://localhost:4446/wd/hub\"), options.ToCapabilities());\nbut I am getting below error Starting ChromeDriver 2.45.615279 (12b89733300bd268cff3b78fc76cb8f3a7cc44e5) on port 21952\nOnly local connections are allowed.\n[1547609611.071][SEVERE]: bind() failed: Cannot assign requested address (99)\n03:33:34.220 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS\nPlease suggest how to overcome it.\nI have seen in your answer you have tried  \"node-chrome-debug images and it worked well\" , how you used it?\nMy image is  selenium/node-chrome-debug. ",
    "anshuman00329": "Hi @diemol  I filled all the configuration related information from the template.\nPlease let me know if any specific information is needed on the issue.. Apologies @diemol  I have updated the same.. ",
    "presidenten": "Hi! @diemol \nI have done some experimenting now and the magic seems to lay in adding\nentrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME\" /opt/bin/entry_point.sh'\nto the chrome and firefox services.\nIf either is missing it, the console will time out.\nIf I update my example above with these lines like so (following the example in your provided link):\n```yml\nversion: '3.7'\nservices:\n  firefox:\n    image: selenium/node-firefox:3.14.0-arsenic\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    environment:\n      HUB_HOST: hub\n    entrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME\" /opt/bin/entry_point.sh'\nchrome:\n    image: selenium/node-chrome:3.14.0-arsenic\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    environment:\n      HUB_HOST: hub\n    entrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME\" /opt/bin/entry_point.sh'\nhub:\n    image: selenium/hub:3.14.0-arsenic\n    ports:\n      - \"4444:4444\"\n```\nThen everything works great.\nThank you.\nIm closing this issue.. @ay0o Is there a reason why the entrypoint in the docker image is not updated, rather than recommending the addon in docker-compose.yml?. Ahhh! Got it.. ",
    "ay0o": "@presidenten should you are wondering why is that line needed, https://github.com/SeleniumHQ/docker-selenium/issues/797#issuecomment-427062133 here you have an explanation.. @presidenten it does not work properly for alone containers. It seems to work for docker-compose, but if you run alone containers (do not confuse with selenium/standalone-containers), you will have connection issues even if you set REMOTE_HOST.\nFor example, remove the hub from your docker-compose above. Run it independently docker run -d -p 4444:4444 selenium/hub:3.14, and now edit in your compose HUB_HOST to point to your IP, as well as set REMOTE_HOST to your IP. \nYou will see how you have issues like 09:51:51.585 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://192.168.107.68:5555 as down: cannot reach the node for 2 tries. You have such examples on Kubernetes repository.\nhttps://github.com/kubernetes/examples/tree/master/staging/selenium. Using Swarm you need to add to chrome and firefox the following:\nentrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME\" /opt/bin/entry_point.sh'\nIf you don't do so, the Hub does not know where to ping for checking the status of the nodes, and therefore will not load the console. \nAnyway, even if you add that line now, it will not work either with the images you are using due to bug https://github.com/SeleniumHQ/docker-selenium/issues/800. . Because HOSTNAME is a random string generated on runtime.\nThat is, you need to edit SE_OPTS on runtime, and then call the entrypoint to execute the expected container function. . @diemol using Swarm mode, if you deploy the stack without entrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME\" /opt/bin/entry_point.sh', initially you will notice the Grid's console does not work (the point of this issue). After some time, the Hub will report the following errors:\ngrid_selenium-hub.1.mtwb5dj4pz7v@linuxkit-025000000001    | 15:11:47.041 INFO [DefaultRemoteProxy.onEvent] - Marking the node http://172.18.0.4:5555 as down: cannot reach the node for 2 tries\ngrid_selenium-hub.1.mtwb5dj4pz7v@linuxkit-025000000001    | 15:13:51.961 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://172.18.0.4:5555 because it's been down for 124920 milliseconds\ngrid_selenium-hub.1.mtwb5dj4pz7v@linuxkit-025000000001    | 15:13:51.961 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://172.18.0.4:5555\nThe issue here is that the Hub cannot reach the node by IP, only by its hostname. If you get into the Hub container and run curl http://172.18.0.4:5555 you will see how the connection timeout. However, if now you get into the Chrome container, get its hostname (e.g. 4407c0b74c64) and now you run curl http://4407c0b74c64:5555  in the Hub, you will see how it works.\nSo, what's going on here? The Hub tries to reach the node using 172.18.0.4, however, the node is actually on 10.0.1.6. Why? That's how the Swarm's overlay network works.\n``` \nroot@ef9e202727ac:~# nslookup 4407c0b74c64\nServer:     127.0.0.11\nAddress:    127.0.0.11#53\nNon-authoritative answer:\nName:   4407c0b74c64\nAddress: 10.0.1.6\n```\nSo, to answer your question, yes, the HOSTNAME is generated after the container is started, and therefore, you need to pass it to SE_OPTS on runtime and not before.\nYou might wonder, why does it work with docker-compose then? That's because docker-compose uses a bridge network, whereas Swarm mode uses overlay.\n. @JordiGiros I think we are speaking here of different issues. You are deploying the stack with Swarm or with docker-compose, and therefore, you are using the Docker Network. At least for me, sharing through Docker Network is fine.\nIn my case, I don't want to use the Docker Network. Each node will be stand-alone on their own host, host that is not member of a Swarm either.. Ok, just found the issue, a misconfiguration on my end.\nThere were two issues going on:\n- I wasn't adding the port to REMOTE_HOST, so the Hub was actually trying to reach the node on http://192.168.107.68 instead of http://192.168.107.68:5555.\n- Once the previous was fixed, I obviously needed to open port 5555 as well on the chrome container.. Confirming this is happening from 3.14.0-francium.. This is a duplicate of https://github.com/SeleniumHQ/docker-selenium/issues/800 for sure.\nCheck your chrome log, and you will see a message saying that it can't find /opt/bin/entry_point.sh. FYI, CI is failing due to an unrelated error.. @diemol updated it, but I think that's out of the scope of docker-selenium.. ",
    "M3ssman": "Ok, I tried to follow the wiki page, but I right now (62.0 (64-bit) Mozilla Firefox for Ubuntu canonical-1.0), I couldn't even start the ProfileManager as described with firefox -P. Opens a brand new window, instead.. Sorry, I didn' t get it right with ProfileManager in the first place since there was an instance of Firefox running somewhere. After killing all ff-instances, ProfileManager popped into place.\nWhat I've done so far (guided by the wiki):\n\ncreated fresh instance named seleniumwith setting javascript.enabledto value false. \ncopied fresh profile from /home/<user>/.mozilla/firefox/profilesto project folder\nrun test assuming no javascript using this profile with my real, local browser (firefox 62.0). \n    tests run fine.\nfollow instructions to extend standalone-firefox container\n    except: added JAVA_OPT to docker-compose environment section\n    ```\n    environment:\nno_proxy=localhost\nTZ=Europe/Berlin\nJAVA_OPTS=-Dwebdriver.firefox.profile=selenium\n``\ncopied profile-dataaa3eqk4v.seleniumand profile.ini to/home/seluser/.mozilla/firefoxdocker exec -it standalone-firefox-noscript ls -la /home/seluser/.mozilla/firefox` => \n\n\n\ndrwx------ 1 seluser seluser 4096 Sep 13 07:35 .\n   drwx------ 1 seluser seluser 4096 Sep  5 14:43 ..  \n   drwx------ 1 seluser seluser 4096 Sep 12 15:38 aa3eqk4v.selenium\n   drwx------ 1 seluser seluser 4096 Sep  5 14:43 Crash Reports\n   drwx------ 1 seluser seluser 4096 Sep  5 14:43 Pending Pings\n   -rw-rw-r-- 1 seluser seluser  105 Sep 12 15:41 profiles.ini\nWhen I use selenium-side-runnerto execute tests against the container, it reveals \n```\nstandalone-firefox-noscript | 08:19:23.071 INFO [ActiveSessionFactory.apply] - Capabilities are: {\nstandalone-firefox-noscript |   \"browserName\": \"firefox\"\nstandalone-firefox-noscript | }\nstandalone-firefox-noscript | 08:19:23.072 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService)\nstandalone-firefox-noscript | 1536819563091 geckodriver INFO    geckodriver 0.21.0\nstandalone-firefox-noscript | 1536819563095 geckodriver INFO    Listening on 127.0.0.1:31513\nstandalone-firefox-noscript | 1536819563293 mozrunner::runner   INFO    Running command: \"/usr/bin/firefox\" \"-marionette\" \"-foreground\" \"-no-remote\" \"-profile\" \"/tmp/rust_mozprofile.DBU4G3cKAQwh\"\nstandalone-firefox-noscript | 1536819564745 Marionette  INFO    Listening on port 34647\nstandalone-firefox-noscript | 08:19:24.905 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C\nstandalone-firefox-noscript | 08:19:24.948 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 31ae981e-6856-4d86-8435-6754d82c1264 (org.openqa.selenium.firefox.GeckoDriverService)\n```\nLooks like the container uses local tmp-Profile, instead of what has been provided.\nWhen I run echo $JAVA_OPTSin interactive mode with the container, it prints out nothing. \nDoes this mean the var in unknown inside container? \n??\n. Now I even added export JAVA_OPTS=\"-Dwebdriver.firefox.profile=selenium\"to do a custom enty_point.shfile to replace the provided one from Standalone Base-Image, but when I start the container and do test, it yields (container_name shortened)\n```\nffnoscript            | HAVE WE JAVA_OPTS: '-Dwebdriver.firefox.profile=selenium'\nffnoscript            | 09:17:44.685 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0'\nffnoscript            | 09:17:44.686 INFO [GridLauncherV3$1.launch] - Launching a standalone Selenium Server on port 4444\nffnoscript            | 2018-09-13 09:17:44.753:INFO::main: Logging initialized @260ms to org.seleniumhq.jetty9.util.log.StdErrLog\nffnoscript            | 09:17:44.886 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444\nffnoscript            | 09:18:15.160 INFO [ActiveSessionFactory.apply] - Capabilities are: {\nffnoscript            |   \"browserName\": \"firefox\"\nffnoscript            | }\nffnoscript            | 09:18:15.161 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService)\nffnoscript            | 1536823095181   geckodriver INFO    geckodriver 0.21.0\nffnoscript            | 1536823095186   geckodriver INFO    Listening on 127.0.0.1:8337\nffnoscript            | 1536823095390   mozrunner::runner   INFO    Running command: \"/usr/bin/firefox\" \"-marionette\" \"-foreground\" \"-no-remote\" \"-profile\" \"/tmp/rust_mozprofile.4TrWiO49r6MI\"\n```\nSo is the Selenium Service ignoring the Option?\n. ",
    "yippeykeiyay": "Hi @diemol,\nYep, I appreciate that the changes aren't in Selenium so I wondered if the new Chrome version might be the problem?\nI'll try and get some logs for you but unfortunately this might be tricky for me to do. Again, I fully realise how unhelpful I'm being! If nobody else is reporting this then I'm happy for this issue to be closed, I just thought it worthwhile documenting incase it crops up for others.. I experienced this issue a few weeks ago: https://github.com/SeleniumHQ/docker-selenium/issues/781. Yep, and haven\u2019t upgraded since unfortunately.. ",
    "nirbhaypatil": "It was proxy issue.. ",
    "ronkorland": "Need to add GRID_TIMEOUT to node config json file (\"timeout\": GRID_TIMEOUT) or java command line (-timeout). ",
    "whimboo": "We had a similar problem with Mir, and after upgrading the docker image from using Ubuntu 16.04 to Ubuntu 18.04, it's all fine now.. Actually Vagrant is used but I just wanted to point out that a possible upgrade could fix the problem too. For details see https://github.com/web-platform-tests/results-collection/issues/602#issuecomment-424064941.\n. ",
    "torstenwalter": "Compared to #185 it should allow users to change the config at run time.. Without the permissions change for $HOME () there will be different kinds of errors when a process tries to write/read from that directory within OpenShift. e.g.:\nCouldn't read password file: /home/seluser/.vnc/passwd. Chrome tries to write data there and I suspect Firefox as well.. ",
    "tomekit": "Answer is simple, I should read carefully and should've used the debug image instead. \nE.g. selenium/standalone-firefox-debug. ",
    "osvald0": "\nHi @osvald0,\nCould you please fill up the issue template? Without it we don't have enough information on how to reproduce and find out if it is an issue or not. Otherwise this looks more like an question rather than an issue.\n\nOK, Sorry. I just updated the first message using the template. Thanks!\n. @diemol Thanks for your response but my issue persists.\nThe Profile Path is something like /tmp/.org.chromium.Chromium.iogswg/Default (Chrome machine).. What do you see on chrome://version?. Hi @diemol , Sorry, the profile was created in the first run in the folder specified with the user-data-dir argument.\nThanks!. ",
    "reegnz": "Cool, didn't know about that, thanks!\nI will then issue a PR to mention that in the README as well.. Done. . ",
    "wildloop": "It's not more specific than \"Deploying to Kubernetes\" - https://techcrunch.com/2018/04/20/kubernetes-and-cloud-foundry-grow-closer/. @diemol - done.. >  there is a template when the PR is created. Could you please mark the checkbox after you have signed the agreement?\n@diemol I don't see any template or checkbox... where can I find them?. - [X] By placing an X in the preceding checkbox, I verify that I have signed the Contributor License\nAgreement. - apt install openssh-client - \"After this operation, 4316 kB of additional disk space will be used.\"\n- apt install tcpdump - \"After this operation, 1526 kB of additional disk space will be used.\"\n- apt install mc - \"After this operation, 93.8 MB of additional disk space will be used.\"\nFor daily work openssh-client will be enough :). openssh-client is required to connect to these containers using the SCP protocol, for example to copy log file using WinSCP.. You're right.\nEverything can be done with a hammer, but it is sometimes more convenient to use pliers - so SCP vs 4MB?. Because docker cp is not a protocol that can work with WinSCP :). To use SCP protocol the scp binary has to be present on the server - apt install openssh-client.\nSCP is convenience because there are a lot of SCP clients: AbsoluteTelnet, Dropbear, lsh, OpenSSH, PACManager, PuTTY, SecureCRT, SmartFTP, Tera Term, WinSCP, Xshell, ZOC.\nPlease feel free to close this PR :). So the meaning is closer to inspection than debug. I'll correct it, thanks.. ",
    "dlgiang": "\nHi @dlgiang\nHow do you start the stack? I just used docker-compose up and it worked fine. I am using OSX. Does it only happen in Centos 7? It works well with the previous release?\n\nI use Docker Swarm.\n\ndocker stack deploy --compose-file stack.yml selenium\n. > @dlgiang Did this work for you in previous versions or is it the first time you try this?\n\nYes, I already used the SE_OPTS as @ay0o in previous versions and it worked.\nJust with the latest version, if i use the SE_OPTS, the container cannot start\nBut if I don't use the SE_OPTS, the hub console will get in stuck\nRight now, i reverted back to use 3.14.0-dubnium with SE_OPTS. ",
    "ramdadam": "I can confirm this issue! Using: 3.14 (francium and europium). ",
    "PramodDutta": "any update here ?. > Fixed in the referenced commit and will be released soon.\nDiemol You... saviour  \ud83d\udc4d . ",
    "aberonni": "@diemol thanks for the quick response!. ",
    "ochanig33": "Sorry, I tried to see this issue again and feel that I am not able to connect using VNC but tests are running in protractor using firefox container. Can someone please review the docker-compose.yml file ?\n. ",
    "Reedler01": "3.14.0\nOn Mon, Oct 15, 2018 at 12:16 PM Diego Molina notifications@github.com\nwrote:\n\nHi @Reedler01 https://github.com/Reedler01,\nWhat is the exact tag of the image you are using?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/SeleniumHQ/docker-selenium/issues/811#issuecomment-429918312,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZVA4dmczRRNW8EjH6oE5GM3UzVJ1Qigks5ulLTcgaJpZM4XcqaH\n.\n. Hey Diemol, sorry I'm hoping this is what you need.\nselenium/node-firefox:3.14.0\nselenium/node-chrome:3.14.0\nselenium/hub:3.14.0. selenium/hub        3.14.0 This is the output of that command. Here is one for an inspect. \"RepoTags\": [\n            \"selenium/hub:3.14.0\"\nAlso this seem to be a file permission error. Here is the log trace from the VMware VCH. \nI am guessing something with the permissions changed somewhere which is causing the EACCES message. \n\nChecking the permissions of the entry point seems okay. Also running hub as root works okay, well I didn't test attaching nodes but did get past the eacces error.\nroot@b24552e55126:/etc# ls -l /opt/bin/entry_point.sh\n-rwxrwxr-x 1 root root 776 Oct 13 22:47 /opt/bin/entry_point.sh\nroot@b24552e55126:/etc# /opt/bin/entry_point.sh\n2018-10-15 23:32:40,433 CRIT Supervisor running as root (no user in config file)\n2018-10-15 23:32:40,433 WARN Included extra file \"/etc/supervisor/conf.d/selenium-hub.conf\" during parsing\n2018-10-15 23:32:40,435 INFO supervisord started with pid 386\n2018-10-15 23:32:41,437 INFO spawned: 'selenium-hub' with pid 389\nStarting Selenium Hub with configuration:\n2018-10-15 23:32:41,453 INFO success: selenium-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n{\n  \"host\": \"0.0.0.0\",\n  \"port\": 4444,\n  \"role\": \"hub\",\n  \"maxSession\": 250,\n  \"newSessionWaitTimeout\": 180000,\n  \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n  \"throwOnCapabilityNotPresent\": true,\n  \"jettyMaxThreads\": -1,\n  \"cleanUpCycle\": 180000,\n  \"browserTimeout\": 300,\n  \"timeout\": 320,\n  \"debug\": false\n}\n23:32:42.706 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0'\n23:32:42.710 INFO [GridLauncherV3$2.launch] - Launching Selenium Grid hub on port 4444\n2018-10-15 23:32:43.258:INFO::main: Logging initialized @1605ms to org.seleniumhq.jetty9.util.log.StdErrLog\n23:32:43.598 INFO [Hub.start] - Selenium Grid hub is up and running\n23:32:43.604 INFO [Hub.start] - Nodes should register to http://172.17.0.2:4444/grid/register/\n23:32:43.611 INFO [Hub.start] - Clients should connect to http://172.17.0.2:4444/wd/hub\nIf I run the entry_point as the seluser I reproduce the issue. \nroot@b24552e55126:/etc# sudo -u seluser /opt/bin/entry_point.sh\n2018-10-15 23:42:37,910 WARN Included extra file \"/etc/supervisor/conf.d/selenium-hub.conf\" during parsing\n2018-10-15 23:42:37,919 INFO supervisord started with pid 456\n2018-10-15 23:42:38,920 INFO spawnerr: unknown error making dispatchers for 'selenium-hub': EACCES\n2018-10-15 23:42:39,922 INFO gave up: selenium-hub entered FATAL state, too many start retries too quickly\nThe dockerfile builds the hub to run with seluser and has been this way for a while now. However I noticed from 3.14.0-francium and forward the entry_point.sh is no longer started with \"CMD\" in the dockerfile used to build the container. I will need to do more checking if this would change how the entry point is ran enough to cause these issues. \n. REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nselenium/hub        3.14.0              5dbe41cbcbfd        2 days ago          321MB. I'm using a docker-compose file that hasn't changed for the past 4 months. Below is the command and compose file. Also the $SEL_VERSION variable in the .env file is 3.14.0\ndocker-compose -f grid.yml -H tcp://x.x.x.x:2375 pull\ndocker-compose -f grid.yml -H tcp://x.x.x.x:2375 up --scale chrome=167 --scale firefox=50 -d\nversion: '2.2'\nservices:\n  hub:\n    image: selenium/hub:$SEL_VERSION\n    ports:\n      - \"4444:4444\"\n    environment:\n     - GRID_BROWSER_TIMEOUT=300\n     - GRID_TIMEOUT=320\n     - GRID_MAX_SESSION=250\n     - GRID_MAX_INSTANCES=250\n     - GRID_CLEAN_UP_CYCLE=180000\n     - GRID_UNREGISTER_IF_STILL_DOWN_AFTER=180000\n     - GRID_NEW_SESSION_WAIT_TIMEOUT=180000\n     - COMPOSE_HTTP_TIMEOUT=180000\n    networks:\n     - bridge\n  firefox:\n    user: root\n    image: selenium/node-firefox:$SEL_VERSION\n    cpu_count: 4\n    depends_on:\n      - hub\n    environment:\n      - NODE_MAX_INSTANCES=1\n      - NODE_MAX_SESSION=1\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    shm_size: 2GB\n    expose:\n      - \"5555\"\n    networks:\n      - bridge\n  chrome:\n    image: selenium/node-chrome:$SEL_VERSION\n    cpu_count: 4\n    depends_on:\n      - hub\n    environment:\n      - NODE_MAX_INSTANCES=3\n      - NODE_MAX_SESSION=3\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\n    shm_size: 2GB\n    expose:\n      - \"5555\"\n    networks:\n      - bridge\nnetworks:\n  bridge:\n    driver: bridge\n. I was able to fix adding the root user in the compose file for the hub and chrome containers. FF container already had it in there. I noticed last night I was getting the same error on the chrome containers. So my question is, was this a new change by design or will we go back to using the seluser?\nhub:\n    user: root\n    image: selenium/hub:$SEL_VERSION. I also ran this locally on my mac WITHOUT the root user in the compose file and it works fine. Below are the versions I'm running. This only seems to be an issue on the VMware VIC side of things. \nDocker version 18.06.1-ce, build e68fc7a\ndocker-compose version 1.22.0, build f46880f. Diego, I think a few of my associates were out in Chicago last week and met you from Allegis group Aman and Sandeep. . ",
    "hyunil-shin": "I got the same problem.\nI think host OS is related.\nhost OS Cent 6.8 + 3.14.0 : the same problem ( unknown error making dispatchers for 'selenium-node': EACCES)\nhost OS Cent 6.8 + 3.11.0: it works.\nhost OS Cent 7.1 + 3.14.0: it works.. ",
    "kkucera": "I'm experiencing this same issue. \nIt started with 3.14.0-francium and every version since then will not run for me. \nI can use the --user root option to get the hub and nodes running, but it still doesn't work.\nEverything seems to come up but the nodes display the message: \n\"Running Firefox as root in a regular user's session is not supported.  ($HOME is /home/seluser which is owned by seluser.)\"\nAttempting to run against the grid fails with an error: \"WebDriverException: invalid argument: can't kill an exited process\".\nhost OS Cent 7.2.1511\njava version: 1.8.0_181\nI'm starting the containers with the cli:\ndocker run -d -p 4444:4444 --name selenium-hub -e GRID_TIMEOUT=125000 -e GRID_UNREGISTER_IF_STILL_DOWN_AFTER=125000 -e TZ=US/Arizona selenium/hub:3.14.0\ndocker run -d -P -v /dev/shm:/dev/shm --name firefox-0 --link selenium-hub:hub -e TZ=US/Arizona selenium/node-firefox-debug:3.14.0. ",
    "TBurda": "Hi @diemol \nPS C:\\Users\\tburd\\Desktop\\New folder> docker images selenium/standalone-chrome\nREPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE\nselenium/standalone-chrome   latest              f29f963d1b0f        4 days ago          1.24GB\nCommand to run container: docker run -d -p 4444:4444 selenium/standalone-chrome. I have docker for Windows and i used your recommended command from documentation.\ndocker run -d -p 4444:4444 --shm-size=2g selenium/standalone-chrome:3.14.0-helium\nI tried on Mac OS and everything is fine here.. ",
    "Patabugen": "For what it's worth that syntax is working for me using the same version. I'm on Windows 10.\nI'm not sure what might be going wrong on yours - but have you tried destroying the existing container and re-creating from scratch? Also worth checking that your VNC client isn't scaling/changing the resolution when you connect.\nFinally - just to clarity, are you talking about the desktop resolution or the browser window size?\nchrome:\n    image: selenium/node-chrome-debug:3.14.0-helium\n    depends_on:\n      - selenium-hub\n    environment:\n      - HUB_HOST=selenium-hub\n      - HUB_PORT=4444\n      - SCREEN_WIDTH=1920\n      - SCREEN_HEIGHT=1080\n    ports:\n      - \"5900:5900\". @Saeven \nI've come across a bug where the Node doesn't properly set the screen size - but stand-alone does.\nIn case that's also your problem seet here:\nhttps://github.com/SeleniumHQ/docker-selenium/issues/818. Hey,\nThe problem isn't the containers screen resolution being set - it's Chrome's window size not being opened to the resolution requested by WebDriver.\nWith standalone-chrome it works, but with node-chrome it doesn't (with exactly the same control script).\nThe logs appear to be very similar:\nStandalone Chrome:\n...emp\\selenium\\selenium-test> docker-compose up\nCreating selenium-test_chrome_1 ... done\nAttaching to selenium-test_chrome_1\nchrome_1  | 2018-10-23 10:48:09,238 WARN Included extra file \"/etc/supervisor/conf.d/selenium.conf\" during parsing\nchrome_1  | 2018-10-23 10:48:09,242 INFO supervisord started with pid 9\nchrome_1  | 2018-10-23 10:48:10,246 INFO spawned: 'xvfb' with pid 12\nchrome_1  | 2018-10-23 10:48:10,249 INFO spawned: 'selenium-standalone' with pid 13\nchrome_1  | 10:48:10.616 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0'\nchrome_1  | 2018-10-23 10:48:10,618 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\nchrome_1  | 2018-10-23 10:48:10,618 INFO success: selenium-standalone entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\nchrome_1  | 10:48:10.618 INFO [GridLauncherV3$1.launch] - Launching a standalone Selenium Server on port 4444\nchrome_1  | 2018-10-23 10:48:10.728:INFO::main: Logging initialized @453ms to org.seleniumhq.jetty9.util.log.StdErrLog\nchrome_1  | 10:48:10.964 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444\nchrome_1  | 10:48:15.923 INFO [ActiveSessionFactory.apply] - Capabilities are: {\nchrome_1  |   \"browserName\": \"chrome\",\nchrome_1  |   \"chromeOptions\": {\nchrome_1  |     \"binary\": \"\",\nchrome_1  |     \"args\": [\nchrome_1  |       \"--disable-gpu\",\nchrome_1  |       \"--headless\",\nchrome_1  |       \"--window-size=1920,1080\"\nchrome_1  |     ]\nchrome_1  |   }\nchrome_1  | }\nchrome_1  | 10:48:15.925 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\nchrome_1  | Starting ChromeDriver 2.42.591071 (0b695ff80972cc1a65a5cd643186d2ae582cd4ac) on port 21360\nchrome_1  | Only local connections are allowed.[\nchrome_1  | 1540291695.980][SEVERE]: bind() returned an error, errno=99: Cannot assign requested address (99)\nchrome_1  | 10:48:16.611 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS\nchrome_1  | 10:48:17.006 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 83e5baed6f33bade6d98fc20830aa7d1 (org.openqa.selenium.chrome.ChromeDriverService)\nchrome_1  | 10:48:18.388 INFO [ActiveSessions$1.onStop] - Removing session 83e5baed6f33bade6d98fc20830aa7d1 (org.openqa.selenium.chrome.ChromeDriverService)\nGracefully stopping... (press Ctrl+C again to force)\nStopping selenium-test_chrome_1 ... done\nNode Chrome:\n...emp\\selenium\\selenium-test> docker-compose up\nCreating test-selenium-hub ... done\nCreating selenium-test_test-chrome_1 ... done\nAttaching to test-selenium-hub, selenium-test_test-chrome_1\ntest-selenium-hub    | 2018-10-23 10:47:02,387 WARN Included extra file \"/etc/supervisor/conf.d/selenium-hub.conf\" during parsing\ntest-selenium-hub    | 2018-10-23 10:47:02,389 INFO supervisord started with pid 9\ntest-chrome_1        | 2018-10-23 10:47:03,387 WARN Included extra file \"/etc/supervisor/conf.d/selenium-debug.conf\" during parsing\ntest-chrome_1        | 2018-10-23 10:47:03,387 WARN Included extra file \"/etc/supervisor/conf.d/selenium.conf\" during parsing\ntest-chrome_1        | 2018-10-23 10:47:03,389 INFO supervisord started with pid 10\ntest-selenium-hub    | 2018-10-23 10:47:03,391 INFO spawned: 'selenium-hub' with pid 12\ntest-selenium-hub    | Starting Selenium Hub with configuration:\ntest-selenium-hub    | 2018-10-23 10:47:03,405 INFO success: selenium-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\ntest-selenium-hub    | {\ntest-selenium-hub    |   \"host\": \"0.0.0.0\",\ntest-selenium-hub    |   \"port\": 4444,\ntest-selenium-hub    |   \"role\": \"hub\",\ntest-selenium-hub    |   \"maxSession\": 5,\ntest-selenium-hub    |   \"newSessionWaitTimeout\": -1,\ntest-selenium-hub    |   \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\ntest-selenium-hub    |   \"throwOnCapabilityNotPresent\": true,\ntest-selenium-hub    |   \"jettyMaxThreads\": -1,\ntest-selenium-hub    |   \"cleanUpCycle\": 5000,\ntest-selenium-hub    |   \"browserTimeout\": 0,\ntest-selenium-hub    |   \"timeout\": 30,\ntest-selenium-hub    |   \"debug\": false\ntest-selenium-hub    | }\ntest-selenium-hub    | 10:47:03.901 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0'\ntest-selenium-hub    | 10:47:03.907 INFO [GridLauncherV3$2.launch] - Launching Selenium Grid hub on port 4444\ntest-selenium-hub    | 2018-10-23 10:47:04.310:INFO::main: Logging initialized @894ms to org.seleniumhq.jetty9.util.log.StdErrLog\ntest-chrome_1        | 2018-10-23 10:47:04,391 INFO spawned: 'xvfb' with pid 13\ntest-chrome_1        | 2018-10-23 10:47:04,393 INFO spawned: 'fluxbox' with pid 14\ntest-chrome_1        | 2018-10-23 10:47:04,395 INFO spawned: 'vnc' with pid 15\ntest-chrome_1        | 2018-10-23 10:47:04,396 INFO spawned: 'selenium-node' with pid 16\ntest-chrome_1        | 2018-10-23 10:47:04,476 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\ntest-chrome_1        | 2018-10-23 10:47:04,477 INFO success: fluxbox entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\ntest-chrome_1        | 2018-10-23 10:47:04,477 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\ntest-chrome_1        | 2018-10-23 10:47:04,477 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\ntest-chrome_1        | Connecting to the Hub using the host test-selenium-hub and port 4444\ntest-selenium-hub    | 10:47:04.564 INFO [Hub.start] - Selenium Grid hub is up and running\ntest-selenium-hub    | 10:47:04.565 INFO [Hub.start] - Nodes should register to http://172.19.0.2:4444/grid/register/\ntest-selenium-hub    | 10:47:04.566 INFO [Hub.start] - Clients should connect to http://172.19.0.2:4444/wd/hub\ntest-chrome_1        | 10:47:05.057 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0'\ntest-chrome_1        | 10:47:05.067 INFO [GridLauncherV3$3.launch] - Launching a Selenium Grid node on port 5555\ntest-chrome_1        | 2018-10-23 10:47:05.231:INFO::main: Logging initialized @694ms to org.seleniumhq.jetty9.util.log.StdErrLog\ntest-chrome_1        | 10:47:05.432 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555\ntest-chrome_1        | 10:47:05.432 INFO [GridLauncherV3$3.launch] - Selenium Grid node is up and ready to register to the hub\ntest-chrome_1        | 10:47:05.506 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms.\ntest-chrome_1        | 10:47:05.507 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://test-selenium-hub:4444/grid/register\ntest-selenium-hub    | 10:47:05.967 INFO [DefaultGridRegistry.add] - Registered a node http://172.19.0.3:5555\ntest-chrome_1        | 10:47:06.087 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use\ntest-selenium-hub    | 10:47:21.281 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, chromeOptions: {args: [--disable-gpu, --headless, --window-size=1920,1080], binary: }}\ntest-selenium-hub    | 10:47:21.287 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=d88750b5-b7a0-406f-98cb-4db27b9b2295, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=1, platformName=LINUX, version=69.0.3497.100, applicationName=, platform=LINUX}\ntest-chrome_1        | 10:47:21.508 INFO [ActiveSessionFactory.apply] - Capabilities are: {\ntest-chrome_1        |   \"browserName\": \"chrome\",\ntest-chrome_1        |   \"chromeOptions\": {\ntest-chrome_1        |     \"binary\": \"\",\ntest-chrome_1        |     \"args\": [\ntest-chrome_1        |       \"--disable-gpu\",\ntest-chrome_1        |       \"--headless\",\ntest-chrome_1        |       \"--window-size=1920,1080\"\ntest-chrome_1        |     ]\ntest-chrome_1        |   },\ntest-chrome_1        |   \"goog:chromeOptions\": {\ntest-chrome_1        |   }\ntest-chrome_1        | }\ntest-chrome_1        | 10:47:21.510 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\ntest-chrome_1        | Starting ChromeDriver 2.42.591071 (0b695ff80972cc1a65a5cd643186d2ae582cd4ac) on port 25127\ntest-chrome_1        | Only local connections are allowed.\ntest-chrome_1        | [1540291641.557][SEVERE]: bind() returned an error, errno=99: Cannot assign requested address (99)\ntest-chrome_1        | 10:47:22.429 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS\ntest-chrome_1        | 10:47:22.837 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 3556d18558636da8694287b6d4b7269a (org.openqa.selenium.chrome.ChromeDriverService)\ntest-chrome_1        | 10:47:23.973 INFO [ActiveSessions$1.onStop] - Removing session 3556d18558636da8694287b6d4b7269a (org.openqa.selenium.chrome.ChromeDriverService)\nGracefully stopping... (press Ctrl+C again to force)\nStopping selenium-test_test-chrome_1 ... done\nStopping test-selenium-hub           ... done. Sorry - I didn't get a notification from your previous message.\nThe bindings and code examples above are exactly the same for both scenarios - the messages being sent to port 4444 should be identical - but the Hub is working differently.\nIt sounds like you're planning on making changes to the Hub in the near future which might resolve the issue so I'll just stop using the Hub until then and will try it again when those updates come out.. Ah @diemol after some fiddling I've managed to get it working, and you're correct this bug is with the Facebook WebDriver not being updated  for WebDriver 2.3.1 and not with Selenium (although Selenium is still inconsistent in that Standalone somehow works without goog: while hub does not - but that's not my bug and I'll leave that for you to file if you wish to investigate).\nFor anyone interested, here's the issue on the correct repo:\nhttps://github.com/facebook/php-webdriver/issues/551. ",
    "Saeven": "Interesting, thank you @Patabugen   That might just be it.. ",
    "uuf6429": "Hello @diemol,\nI'm not sure I fully get what you spoke about, /dev/shm is shared and with the correct size (from my testing).\nBut with that apart, my main concern with regards to docker-selenium is why nothing shows up in logs when the crash happens. This part cannot be possibly solved by GitLab.. Thanks!. Did you use gitlab-runner locally, or run everything directly? In the first case, it would crash, but in the second case, it didn't.\n\nI think so, a docker inspect resulted in the correct (increased) memory (but I'm no expert in this area, so I might have misunderstood the results)\nYou can see that in docker-compose.log here\nCurrently, browser screenshots would fail (because of an invalid session).\n  I think I can still achieve this with a little set up using vncdotool. Thanks for the investigation!\n\nRegarding the GitLab aspect, let's hope they might be able to clarify a few things. I'm still new at playing gitlab-runner, but whatever ails me seems to happen on their side too. Or it could just be due to their 2gb instances (can't be sure because failures still happened on my 4gb local machine).\nSo basically, the only indication of a failure is a DEBUG message of a response? Isn't there any other selenium/chromedriver logging that would show more details, maybe a trace or so?. Hi @diemol!\nI'd definitely contribute, but I'd have to know what has to be done first. I take it the objective is to have the chromedriver log piped to the container's stdout?. Agreed.. ",
    "frosty00": "Did downgrading fix the issue for you?\nEDIT:\n\nWe've not seen the error on any previous versions and it stopped occurring as soon as we rolled back to 3.14.0-arsenic.\n\nRead you comment and will try 3.14.0-arsenic and report back if the error persists.. ",
    "tuomas2": "I'm also experiencing this issue in our protractor e2e test stack. Tested with standalone-chrome-debug:3.141.59-gold. I'll try downgrading too.... ",
    "bpapez": "Since switching to selenium hub 3.141.0 we are seeing the same problem. \nIn docker-compose we use \nchrome:\n    image: selenium/node-chrome-debug:3.141.0\n    entrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME -port 5555 -timeout 1200 -browserTimeout 1200\" /opt/bin/entry_point.sh'\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\n      - SCREEN_WIDTH=1920\n      - SCREEN_HEIGHT=1200\n      - NODE_PORT=5555\n      - TZ=Europe/Paris\nand\nfirefox:\n    image: selenium/node-firefox-debug:3.141.0\n    entrypoint: bash -c 'SE_OPTS=\"-host $$HOSTNAME -port 5555 -timeout 1200 -browserTimeout 1200\" /opt/bin/entry_point.sh'\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444\n      - SCREEN_WIDTH=1920\n      - SCREEN_HEIGHT=1200\n      - NODE_PORT=5555\n      - TZ=Europe/Paris\nAnd for both browsers we suddenly sometimes do not get the wanted screen size, but sometimes get some random sizes, Notice that we do not set the window-size via the capabilities at all.  We used the version 3.14.0-curium before and did not encounter these problems, but the window size was always the expected one like set via the environment variables in the docker-compose file.. ",
    "Xfaramir": "\n```json\n\"goog:chromeOptions\" instead of \"chromeOptions\" .  It worked for me. Now its passing the viewport to selenium HUB correctly. . \n",
    "bluepenfc": "Hi diemol:\nyes, my host machine is Windows 7.\nDocker version 18.03.0-ce, build 0520e24302\nhere is the default configuration I get from http://localhost:4444/grid/console\nbrowserTimeout: 0\ndebug: false\nhost: ****\nport: 4445\nrole: node\ntimeout: 1800\ncleanUpCycle: 5000\nmaxSession: 5\ncapabilities: Capabilities {browserName: internet explorer, jenkins.nodeName: (master), maxInstances: 1, platform: VISTA, platformName: VISTA, seleniumProtocol: WebDriver, server:CONFIG_UUID: 00f2b1c1-9407-49de-b7bc-a13..., version: 11}\ncapabilities: Capabilities {browserName: firefox, jenkins.nodeName: (master), maxInstances: 5, platform: VISTA, platformName: VISTA, seleniumProtocol: WebDriver, server:CONFIG_UUID: c8df28ac-4884-4b93-971a-0c8..., version: 8}\ncapabilities: Capabilities {browserName: chrome, jenkins.nodeName: (master), maxInstances: 5, platform: VISTA, platformName: VISTA, seleniumProtocol: WebDriver, server:CONFIG_UUID: 2f04056b-d455-4eae-b6b9-a42..., version: 8}\ndownPollingLimit: 2\nhub: http://localhost:4444/wd/hub\nid: http://**:4445\nnodePolling: 5000\nnodeStatusCheckTimeout: 5000\nproxy: org.openqa.grid.selenium.proxy.DefaultRemoteProxy\nregister: true\nregisterCycle: 5000\nremoteHost: http://NSL-5CG6111WB2.corporate.administaff.com:4445\nunregisterIfStillDownAfter: 60000\nhere is the log from docker:\n2018-11-01 20:55:48,317 WARN Included extra file \"/etc/supervisor/conf.d/selenium.conf\" during parsing\n2018-11-01 20:55:48,335 INFO supervisord started with pid 7\n2018-11-01 20:55:49,341 INFO spawned: 'xvfb' with pid 10\n2018-11-01 20:55:49,345 INFO spawned: 'selenium-standalone' with pid 11\n2018-11-01 20:55:50,356 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n2018-11-01 20:55:50,356 INFO success: selenium-standalone entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n20:55:53.659 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0'\n20:55:53.661 INFO [GridLauncherV3$1.launch] - Launching a standalone Selenium Server on port 4444\n2018-11-01 20:55:54.157:INFO::main: Logging initialized @4063ms to org.seleniumhq.jetty9.util.log.StdErrLog\n20:55:54.770 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444\n. @diemol \nHi: It is an issue related to company firewall, security policies. It runs smoothly on my home computer.\nThanks, . ",
    "FzmTYustas": "Can this be due to the fact that the node's TIMEOUT value was not updated with the hub's one?\n\nAnd seems this is another bug.. Hi @diemol! Is the fix from #5418 suitable for GRID_TIMEOUT? I wasn't talking about browser_timeout.. @diemol, ok! Waiting for new images to check the fix). Works in 3.141.0.. ",
    "epnelsonq": "Hi @diemol ,\nthanks for your quick update. tried, but somehow cannot find the given chrome version. here is the details for your information.\ndocker build -t my-chrome-image --build-arg CHROME_DRIVER_VERSION=2.23 --build-arg CHROME_VERSION=google-chrome-beta=53.0.2785.92-1 NodeChrome\nthe full log. \nSending build context to Docker daemon  16.38kB\nStep 1/12 : FROM selenium/node-base:3.141.0-actinium\n ---> 9da9fcc3c3f7\nStep 2/12 : LABEL authors=SeleniumHQ\n ---> Using cache\n ---> 3ee5da591580\nStep 3/12 : USER root\n ---> Using cache\n ---> 2d508e178382\nStep 4/12 : ARG CHROME_VERSION=\"google-chrome-stable\"\n ---> Using cache\n ---> eaf8d92be9ee\nStep 5/12 : RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list   && apt-get update -qqy   && apt-get -qqy install     ${CHROME_VERSION:-google-chrome-stable}   && rm /etc/apt/sources.list.d/google-chrome.list   && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n ---> Running in 500927c4f9ff\nOK\nE: Version '53.0.2785.92-1' for 'google-chrome-beta' was not found\nThe command '/bin/sh -c wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list   && apt-get update -qqy   && apt-get -qqy install     ${CHROME_VERSION:-google-chrome-stable}   && rm /etc/apt/sources.list.d/google-chrome.list   && rm -rf /var/lib/apt/lists/* /var/cache/apt/*' returned a non-zero code: 100\nalso spike another version, change the command to google-chrome-beta=53.0.2785.92 per the link https://chromereleases.googleblog.com/2016/08/. which still doesn't work with me.\n\nThe beta channel has been updated to 53.0.2785.89 for Windows, Mac and 53.0.2785.92 for Linux.\n A partial list of changes is available in the log. Interested in switching release channels? Find out how. If you find a new issue, please let us know by filing a bug. The community help forum is also a great place to reach out for help or learn about common issues.\ndocker build -t my-chrome-image --build-arg CHROME_DRIVER_VERSION=2.23 --build-arg CHROME_VERSION=google-chrome-beta=53.0.2785.92 NodeChrome\nfull docker build log\nSending build context to Docker daemon  16.38kB\nStep 1/12 : FROM selenium/node-base:3.141.0-actinium\n ---> 9da9fcc3c3f7\nStep 2/12 : LABEL authors=SeleniumHQ\n ---> Using cache\n ---> 3ee5da591580\nStep 3/12 : USER root\n ---> Using cache\n ---> 2d508e178382\nStep 4/12 : ARG CHROME_VERSION=\"google-chrome-stable\"\n ---> Using cache\n ---> eaf8d92be9ee\nStep 5/12 : RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list   && apt-get update -qqy   && apt-get -qqy install     ${CHROME_VERSION:-google-chrome-stable}   && rm /etc/apt/sources.list.d/google-chrome.list   && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n ---> Running in 7493631a2c70\nOK\nE: Version '53.0.2785.92' for 'google-chrome-beta' was not found\nThe command '/bin/sh -c wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list   && apt-get update -qqy   && apt-get -qqy install     ${CHROME_VERSION:-google-chrome-stable}   && rm /etc/apt/sources.list.d/google-chrome.list   && rm -rf /var/lib/apt/lists/* /var/cache/apt/*' returned a non-zero code: 100. hi @diemol ,\n\nnow it works. thanks. and i can also specify the version, e.g. google-chrome-stable=70.0.3538.77-1.\ndocker build -t my-chrome-image --build-arg CHROME_DRIVER_VERSION=2.41 --build-arg CHROME_VERSION=google-chrome-stable=70.0.3538.77-1 NodeChrome\nnote, the \"-1\" looks like important for the version. ( no idea where it is from. check the chrome official release i don't find the \"-1\" suffix on the version )\n. i think this issue now could be marked as resolved.\nthanks.. ",
    "gaurav517": "Any idea when it is going to be released? Thanks.. ",
    "jdiprizio": "Awesome work and thanks a lot for keeping us updated!. ",
    "aban20": "While running tests , firefox gets started but does not launch the URL. Throws an error \nError retrieving a new session from the selenium server\nConnection refused! Is selenium server started?\n{ value:\n   { sessionId: '5f94263f-7b81-46c3-9137-c8f27834c92b',\n     capabilities:\n      { acceptInsecureCerts: true,\n        browserName: 'firefox',\n        browserVersion: '63.0.1',\n        'moz:accessibilityChecks': false,\n        'moz:geckodriverVersion': '0.23.0',\n        'moz:headless': false,\n        'moz:processID': 294,\n        'moz:profile': '/tmp/rust_mozprofile.4RlEuSdneSwZ',\n        'moz:useNonSpecCompliantPointerOrigin': false,\n        'moz:webdriverClick': true,\n        pageLoadStrategy: 'normal',\n        platformName: 'linux',\n        platformVersion: '4.9.93-linuxkit-aufs',\n        rotatable: false,\n        setWindowRect: true,\n        timeouts: [Object],\n        unhandledPromptBehavior: 'dismiss and notify',\n        'webdriver.remote.sessionid': '5f94263f-7b81-46c3-9137-c8f27834c92b' } } }\nDocker containers used:\nselenium/hub\nselenium/node-firefox-debug\nSelenium server version: 3.14. Hi ,\nYou just need to run the selenium hub docker image and get a node-firefox-debug container registered with it.\nThen , in the nightwatch.json file you need to mention the ip and port of the selenium hub. In this case it's the exposed port.\nYeah , I have used it before. I have used the node-chrome-debug container with selenium hub container.\nThanks,\nArijit\nGet Outlook for Androidhttps://aka.ms/ghei36\n\nFrom: Diego Molina notifications@github.com\nSent: Friday, November 23, 2018 9:25:35 PM\nTo: SeleniumHQ/docker-selenium\nCc: Banerjee, Arijit (ETW - Cognizant); Mention\nSubject: Re: [SeleniumHQ/docker-selenium] Firefox not launching URL when running tests in selenium/node-firefox-debug (#839)\nHi @arijitb1710https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_arijitb1710&d=DwMFaQ&c=7DfhQjPWzR3PmWBQVpi-kw&r=SV0CByffL7jn9--RRJgvTp5zJ2ZnmJbbHEfOAI4rhec&m=17W5SkTexL_V7QLuCyXCMk93aN3W0YP8S38v74wGBPk&s=hEnj25vKW8HfF2S7I7da3EUBaQp9KMOXP8uctJbsdGw&e=,\nI just checked the repo you linked above, I am not very familiar with NightWatch, but I don't see in your configuration file how you use the Grid running in the docker containers.\nHave you been able to use it before? Or is this the first time you try to use a Grid with those tests?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_SeleniumHQ_docker-2Dselenium_issues_839-23issuecomment-2D441274207&d=DwMFaQ&c=7DfhQjPWzR3PmWBQVpi-kw&r=SV0CByffL7jn9--RRJgvTp5zJ2ZnmJbbHEfOAI4rhec&m=17W5SkTexL_V7QLuCyXCMk93aN3W0YP8S38v74wGBPk&s=mukrf4qMb8Q8t0WHNkGJuD24oT8xUfj_hoLGloAHqdk&e=, or mute the threadhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_Aq261kNJXQj9-2D3BvDOE9us3-5Fy7Z4CZNRks5uyBp3gaJpZM4YYYLo&d=DwMFaQ&c=7DfhQjPWzR3PmWBQVpi-kw&r=SV0CByffL7jn9--RRJgvTp5zJ2ZnmJbbHEfOAI4rhec&m=17W5SkTexL_V7QLuCyXCMk93aN3W0YP8S38v74wGBPk&s=mn1SlLdSzapqX5EJi2zv__p4WkEh7KqCaN1me8NFLnQ&e=.\n. Hi ,\nYou just need to run the selenium hub docker image and get a node-firefox-debug container registered with it.\nThen , in the nightwatch.json file you need to mention the ip and port of the selenium hub. In this case it's the exposed port.\nYeah , I have used it before. I have used the node-chrome-debug container with selenium hub container.\nThanks,\nArijit\nGet Outlook for Androidhttps://aka.ms/ghei36\n\nFrom: Diego Molina notifications@github.com\nSent: Friday, November 23, 2018 9:25:35 PM\nTo: SeleniumHQ/docker-selenium\nCc: Banerjee, Arijit (ETW - Cognizant); Mention\nSubject: Re: [SeleniumHQ/docker-selenium] Firefox not launching URL when running tests in selenium/node-firefox-debug (#839)\nHi @arijitb1710https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_arijitb1710&d=DwMFaQ&c=7DfhQjPWzR3PmWBQVpi-kw&r=SV0CByffL7jn9--RRJgvTp5zJ2ZnmJbbHEfOAI4rhec&m=17W5SkTexL_V7QLuCyXCMk93aN3W0YP8S38v74wGBPk&s=hEnj25vKW8HfF2S7I7da3EUBaQp9KMOXP8uctJbsdGw&e=,\nI just checked the repo you linked above, I am not very familiar with NightWatch, but I don't see in your configuration file how you use the Grid running in the docker containers.\nHave you been able to use it before? Or is this the first time you try to use a Grid with those tests?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_SeleniumHQ_docker-2Dselenium_issues_839-23issuecomment-2D441274207&d=DwMFaQ&c=7DfhQjPWzR3PmWBQVpi-kw&r=SV0CByffL7jn9--RRJgvTp5zJ2ZnmJbbHEfOAI4rhec&m=17W5SkTexL_V7QLuCyXCMk93aN3W0YP8S38v74wGBPk&s=mukrf4qMb8Q8t0WHNkGJuD24oT8xUfj_hoLGloAHqdk&e=, or mute the threadhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_Aq261kNJXQj9-2D3BvDOE9us3-5Fy7Z4CZNRks5uyBp3gaJpZM4YYYLo&d=DwMFaQ&c=7DfhQjPWzR3PmWBQVpi-kw&r=SV0CByffL7jn9--RRJgvTp5zJ2ZnmJbbHEfOAI4rhec&m=17W5SkTexL_V7QLuCyXCMk93aN3W0YP8S38v74wGBPk&s=mn1SlLdSzapqX5EJi2zv__p4WkEh7KqCaN1me8NFLnQ&e=.\n. ",
    "arijitb1710": "Hi ,\nSorry for late reply. Was busy with work.\nPlease find the link of the GIT repo. Refer the README for running the test cases.\nhttps://github.com/arijitb1710/nightwatch_automation\nIn the repo , there is a nightwatch.json file. This file file has a profile created as firefox which is run.\nThe exposed port of selenium hub is 4446 and the ip is that of the selenium hub. Hi, \nYou will get the configuration in the profile named as \"firefox\" in nightwatch.json file.\nYou can comment or erase the path for the jar. I tried that too. Same result.. In case you are having trouble viewing the setup , I am pasting the entire setup here.\n{\n    \"src_folders\" : [\"tests\"],\n    \"output_folder\" : \"reports\",\n    \"custom_commands_path\" : \"\",\n    \"custom_assertions_path\" : \"\",\n    \"page_objects_path\" : \"./pageobjects\",\n    \"globals_path\" : \"\",\n\"selenium\" : {\n  \"start_process\" : true,\n  \"server_path\" : \"./node_modules/selenium-server-standalone-jar/jar/selenium-server-standalone-3.14.0.jar\",\n  \"log_path\" : \"\",\n  \"port\" : 4444,\n  \"cli_args\" : {\n    \"webdriver.chrome.driver\" : \"./node_modules/chromedriver/lib/chromedriver/chromedriver.exe\",\n    \"webdriver.gecko.driver\" : \"\",\n    \"webdriver.edge.driver\" : \"\"\n  }\n},\n\n\"test_settings\" : {\n  \"docker\" : {\n    \"launch_url\" : \"http://www.google.com\",\n    \"selenium_port\"  : 4446,\n    \"selenium_host\"  : \"192.168.99.100\",\n    \"silent\": true,\n    \"screenshots\" : {\n      \"enabled\" : true,\n      \"path\" : \"./reports\",\n      \"on_failure\" : true,\n      \"on-error\" : true\n    },\n    \"desiredCapabilities\": {\n      \"browserName\": \"firefox\"\n    },\n\n  \"default\" : {\n    \"launch_url\" : \"http://www.google.com\",\n    \"selenium_port\"  : 4444,\n    \"selenium_host\"  : \"localhost\",\n    \"silent\": true,\n    \"screenshots\" : {\n      \"enabled\" : true,\n      \"path\" : \"./reports\",\n      \"on_failure\" : true,\n      \"on-error\" : true\n    },\n    \"desiredCapabilities\": {\n      \"browserName\": \"chrome\"\n\n    }\n  },\n\n  \"firefox\" : {\n    \"launch_url\" : \"http://www.google.com\",\n    \"selenium_port\"  : 4446,\n    \"selenium_host\"  : \"192.168.99.100\",\n    \"silent\": true,\n    \"screenshots\" : {\n      \"enabled\" : true,\n      \"path\" : \"./reports\",\n      \"on_failure\" : true,\n      \"on-error\" : true\n    },\n    \"desiredCapabilities\": {\n      \"browserName\": \"firefox\",\n       \"marionette\" : true \n    }\n  },\n\n  \"chrome\" : {\n    \"desiredCapabilities\": {\n      \"browserName\": \"chrome\"\n    }\n  },\n\n  \"edge\" : {\n    \"desiredCapabilities\": {\n      \"browserName\": \"MicrosoftEdge\"\n    }\n  }\n}\n\n}\n}\n. I have tried running the following combinations and they run fine.\nhub and node-chrome-debug\nstandalone firefox-debug\nstandalone chrome-debug\nAll the above combinations run fine except the combination hub and node-firefox-debug , hub node-firefox. so doesnt seem like an issue with nightwatch. ",
    "loic-lopez": "Hi, thanks for reply, my code is powered by https://laravel.com/docs/5.7/dusk which is a wrapper in PHP of selenium tests and php-webdriver.\nIn \nphp\nnamespace Facebook\\WebDriver\\Remote;\nThere is a class: \nphp \nclass DesiredCapabilities implements WebDriverCapabilities\nwho has a method for firefox:\n```php \n<?php\n/*\n * @return static\n /\npublic static function firefox()\n{\n     $caps = new static ([WebDriverCapabilityType::BROWSER_NAME => WebDriverBrowserType::FIREFOX, WebDriverCapabilityType::PLATFORM => WebDriverPlatform::ANY, ]);\n// disable the \"Reader View\" help tooltip, which can hide elements in the window.document\n\n$profile = new FirefoxProfile();\n$profile->setPreference(FirefoxPreferences::READER_PARSE_ON_LOAD_ENABLED, false);\n$caps->setCapability(FirefoxDriver::PROFILE, $profile);\nreturn $caps;\n\n}\n```\nSo I can not give an answer in terms of waiting for the grid.. Another error in firefox log:\nfirefox_1_a02833916714 | 16:43:48.711 INFO [ActiveSessionFactory.apply] - Capabilities are: {\nfirefox_1_a02833916714 |   \"browserName\": \"firefox\",\nfirefox_1_a02833916714 |   \"firefox_profile\": \"UEsDBAoAAAAAAHiFbU3f9RXUMgAAADIAAAAHAAAAdXNlci5qc3VzZXJfcHJlZigicmVhZGVyLnBhcnNlLW9uLWxvYWQuZW5hYmxlZCIsIGZhbHNlKTsKUEsBAj8DCgAAAAAAeIVtTd\\u002f1FdQyAAAAMgAAAAcAAAAAAAAAAAAAALaBAAAAAHVzZXIuanNQSwUGAAAAAAEAAQA1AAAAVwAAAAAA\"\nfirefox_1_a02833916714 | }\nfirefox_1_a02833916714 | 16:43:48.712 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService)\nfirefox_1_a02833916714 | 1542127428799  mozrunner::runner   INFO    Running command: \"/usr/bin/firefox\" \"-marionette\" \"-foreground\" \"-no-remote\" \"-profile\" \"/tmp/rust_mozprofile.k4Y1Ft5IMFSO\"\nfirefox_1_a02833916714 | 1542127431740  Marionette  INFO    Listening on port 40227\nfirefox_1_a02833916714 | 16:43:51.836 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C\nfirefox_1_a02833916714 | 16:43:51.851 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 61ab31b6-9c82-49f5-9b7d-d03e0c3177d2 (org.openqa.selenium.firefox.GeckoDriverService)\nselenium-hub    | 16:43:51.913 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: firefox, firefox_profile: UEsDBAoAAAAAAHmFbU3f9RXUMgA...}\nfirefox_1_a02833916714 | console.error: BroadcastService:\nfirefox_1_a02833916714 |   receivedBroadcastMessage: handler for\nfirefox_1_a02833916714 |   remote-settings/monitor_changes\nfirefox_1_a02833916714 |   threw error:\nfirefox_1_a02833916714 |   Message: Error: Polling for changes failed: NetworkError when attempting to fetch resource..\nfirefox_1_a02833916714 |   Stack:\nfirefox_1_a02833916714 |     remoteSettingsFunction/remoteSettings.pollChanges@resource://services-settings/remote-settings.js:721:13\nfirefox_1_a02833916714 |. Thanks for reply,\nI will try a workaround.. ",
    "Yivan": "Ok thanks, so i close this issue and open a new one.. Thanks @barancev for you fast answer!\nHelium version is just one month ago and CVE is from June 2018, so i was thinking the last one was maybe always impacted.\nI will try 3.141.59-antimony, and report result here.\n. @barancev Just verified, i can confirm that 3.141.59-antimony is patched and has now Jetty 9.4.12:\nhttps://github.com/SeleniumHQ/selenium/commit/a0a7d82db3367a7a4b2e24654e26c7b1f2dbd433\nBy the way, the header send no more the exact version, it send \"Jetty 9.4.z-SNAPSHOT\", it is better from security perspective (but best should be no header at all).\nSo all is ok, I close the issue.\n. ",
    "louyu65": "org.openqa.selenium.TimeoutException: timeout\n  (Session info: chrome=67.0.3396.99)\n  (Driver info: chromedriver=2.40.565383 (76257d1ab79276b2d53ee976b2c3e3b9f335cde7),platform=Linux 4.9.10-1.el7.elrepo.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 300.11 seconds\nBuild info: version: '3.4.0', revision: 'unknown', time: 'unknown'\nSystem info: host: 'ADMIN-PC', ip: '192.168.28.141', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_112'\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=LINUX, acceptSslCerts=false, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.40.565383 (76257d1ab79276b2d53ee976b2c3e3b9f335cde7), userDataDir=/tmp/.org.chromium.Chromium.ZmguhX}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=67.0.3396.99, browserConnectionEnabled=false, nativeEvents=true, webdriver.remote.sessionid=d0f289bf3587acb569a8e7a2febf4350, locationContextEnabled=true, cssSelectorsEnabled=true}]\nSession ID: d0f289bf3587acb569a8e7a2febf4350. ",
    "dmart28": "For now, it seems that this issue is not related to any problem with Chrome or Docker. Closing.. ",
    "vinoopraj": "Thank you Diego. ",
    "cambiph": "Figured it out myself.\nProtractor/Jasmine tries to parse the perfs.js file.\nBy moving into another folder, outside the defined spec-scope, the problem was solved.. ",
    "IsmaTeddy": "Hi,\nI have same error. I will wait solution ;). ",
    "GeorgeMac": "Hey @diemol \nI just wanted to chime in, that I am seeing this exact same behaviour. I have actually tried a huge variety of dockerized headless chromes this past couple days (docker-selenium*, browerless/chrome, elgalu/docker-selenium) and my tests keep hanging at this exact same point.\nMy current flavor / setup is:\nselenium/node-chrome 3.141.59-fluorine 69e19bc73061\nselenium/hub latest 8343f862ef3e\nThe important bits of my compose:\n```\nchrome:\n  image: selenium/hub\n  environment:\n    HUB_HOST: \"chrome\"\n    START_XVFB: \"false\"\n  depends_on:\n    - chrome-node\n  volumes:\n    - /dev/shm:/dev/shm\nchrome-node:\n  image: selenium/node-chrome\n  environment:\n    HUB_HOST: \"chrome\"\n    START_XVFB: \"false\"\n  volumes:\n    - /dev/shm:/dev/shm\n```\nOutput where this hangs:\n23:12:50.702 INFO [ActiveSessionFactory.apply] - Capabilities are: {\n  \"browserName\": \"chrome\",\n  \"cssSelectorsEnabled\": true,\n  \"goog:chromeOptions\": {\n    \"args\": [\n      \"headless\",\n      \"disable-gpu\",\n      \"disable-extensions\",\n      \"no-sandbox\"\n    ]\n  },\n  \"javascriptEnabled\": true,\n  \"nativeEvents\": false,\n  \"rotatable\": false,\n  \"takesScreenshot\": false,\n  \"version\": \"\"\n}\n23:12:50.705 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\nStarting ChromeDriver 2.45.615279 (12b89733300bd268cff3b78fc76cb8f3a7cc44e5) on port 25119\nOnly local connections are allowed.\n[1548976370.737][SEVERE]: bind() failed: Cannot assign requested address (99)\n23:12:50.949 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS\n23:12:51.213 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 41b4649797cfad34faa1acf863e0f9cb (org.openqa.selenium.chrome.ChromeDriverService)\nI am running docker machine with 4 CPUs and 8GB Memory.\nI am interfacing with docker selenium from a ruby project using the latest selenium-webdriver gem. I will try and create a script to reproduce it. Also I can see xvfb starting under selenium node chrome even though START_XVFB=false. Don't know if that is a problem.\n(service: chrome-node) (step: test-c00f8e33) 2019-01-31 23:11:46,484 INFO spawned: 'xvfb' with pid 11\n(service: chrome-node) (step: test-c00f8e33) 2019-01-31 23:11:46,486 INFO spawned: 'selenium-node' with pid 12\n(service: chrome-node) (step: test-c00f8e33) 2019-01-31 23:11:46,491 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n(service: chrome-node) (step: test-c00f8e33) 2019-01-31 23:11:46,491 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n(service: chrome-node) (step: test-c00f8e33) 2019-01-31 23:11:46,491 INFO exited: xvfb (exit status 0; expected)\n(service: chrome-node) (step: test-c00f8e33) Connecting to the Hub using the host chrome and port 4444. P.s. I tried older versions of docker selenium 3.14.0-* as well and got the same effect.\nWhich worries me even more \ud83d\ude02Sounds like something in common between my and @DevinPenny environment.. ",
    "bastien612": "I had the same issue when I deployed selenium/hub:3.141.59 and selenium/node-chrome-debug:3.141.59.\n\"driver.get(url)\" was pending (actually I had a time out) when I run cucumber tests (written with the js webdriver) with \"yarn test\".\nHowever it was completing when running a vanilla javascript selenium test with \"node seleniumTest.js\".\nIf someone could investigate, I can share a little project which should allow you to reproduce the issue.\nSolution : I changed my base images version to 3.14.0-krypton for selenium/hub and selenium/node-chrome-debug and it worked again.\nI am not sure why...\n. ",
    "ThomasMeschke": "-.- Thought I tried, but seem to have missed something. \nI return once it is running... . Re-opened as #862 . ",
    "quldude": "\nHi @quldude\nCould you please fill out the complete template? It is not possible to give any feedback with the information provided.\n\nI updated my info.. > What is the full log of the node?\n\nWhat happens if you remove the -m 512m --cpus 0.5 options?\nHow do you start the hub? Can you provide complete information please? Otherwise we need to fill out the gaps and probably won't be able to verify if it is an issue or not.\n\nUpdated with more info. I get the same result even if I remove the -m 512m --cpus 0.5 options. As a workaround I ran the following command for the node:\ndocker run -d -p 5551:5555 \\\n-e TZ=America/Chicago -e HUB_HOST=10.15.100.35 -e HUB_PORT=4445 \\\n-e SE_OPTS=\"-remoteHost http://10.13.169.35:5551\" \\\n-v /dev/shm:/dev/shm -v /home/vagrant/docker/Recordings:/tmp/Recordings \\\n-m 512m --cpus 0.5 \\\n--name node1 selenium/node-chrome\nThis seemed to execute the test on the node successfully, but chromedriver still showed the [SEVERE]: bind() failed: Cannot assign requested address (99) error.. > The [SEVERE]: bind() failed: Cannot assign requested address (99) is thrown by ChromeDriver but so far it does not affect the tests.\n\nAre tests failing in your case?\n\nI missed to give 1 more info and that is when i start the selenium node, I run as (modified the NodeBase/start-selenium-node.sh script):\njava ${JAVA_OPTS} -cp \"/opt/selenium/*\" org.openqa.grid.selenium.GridLauncherV3 \\\n  -servlets com.node.servlets.ExecuteServlet,com.node.servlets.RecorderServlet,com.node.servlets.FileServlet,com.node.servlets.MouseServlet \\\n  -role node \\\n  -hub http://$HUB_PORT_4444_TCP_ADDR:$HUB_PORT_4444_TCP_PORT/grid/register \\\n  ${REMOTE_HOST_PARAM} \\\n  -nodeConfig /opt/selenium/config.json \\\n  -unregisterIfStillDownAfter 1 \\\n  ${SE_OPTS} \\\n  -maxSession 1 -browser $browserOpts\nNotice I pass in some servlets. Those servlets are not getting started when I run the original docker command. And so the tests stop executing because they are trying to access an endpoint in the node that is not registered.\nBut when I run the workaround docker command, I see this in the logs:\n2019-01-13 15:29:54,212 WARN Included extra file \"/etc/supervisor/conf.d/selenium.conf\" during parsing\n2019-01-13 15:29:54,215 INFO supervisord started with pid 7\n2019-01-13 15:29:55,218 INFO spawned: 'xvfb' with pid 10\n2019-01-13 15:29:55,220 INFO spawned: 'selenium-node' with pid 11\nConnecting to the Hub using the host 10.15.100.35 and port 4445\n2019-01-13 15:29:55,620 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n2019-01-13 15:29:55,620 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\nappending selenium options: -remoteHost http://10.13.169.35:5551\nRun Selenium node.\n15:29:56.692 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358\n15:29:57.209 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555\n15:29:57.490 INFO [SelfRegisteringRemote.addExtraServlets] - binding com.node.servlets.ExecuteServlet to /extra/ExecuteServlet/\n15:29:57.491 INFO [SelfRegisteringRemote.addExtraServlets] - binding com.node.servlets.RecorderServlet to /extra/RecorderServlet/\n15:29:57.492 INFO [SelfRegisteringRemote.addExtraServlets] - binding com.node.servlets.FileServlet to /extra/FileServlet/\n15:29:57.492 INFO [SelfRegisteringRemote.addExtraServlets] - binding com.node.servlets.MouseServlet to /extra/MouseServlet/\n2019-01-13 15:29:57.625:INFO::main: Logging initialized @1926ms to org.seleniumhq.jetty9.util.log.StdErrLog\n15:29:58.787 INFO [WebDriverServlet.] - Initialising WebDriverServlet\n15:29:59.214 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555\n15:29:59.214 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub\n15:29:59.600 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms.\n15:30:01.100 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://10.15.100.35:4445/grid/register\n15:30:01.253 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use\n15:34:12.496 INFO [ActiveSessionFactory.apply] - Capabilities are: {\n  \"browserName\": \"chrome\",\n  \"goog:chromeOptions\": {\n    \"args\": [\n      \"--disable-extensions\",\n      \"disable-infobars\"\n    ],\n    \"prefs\": {\n      \"credentials_enable_service\": false,\n      \"download.default_directory\": \"\\u002ftmp\\u002fRecordings\",\n      \"download.prompt_for_download\": false,\n      \"profile.password_manager_enabled\": false,\n      \"safebrowsing.enabled\": true\n    }\n  },\n  \"loggingPrefs\": {\n    \"performance\": \"ALL\"\n  },\n  \"platform\": \"LINUX\"\n}\n15:34:12.499 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)\nStarting ChromeDriver 2.45.615279 (12b89733300bd268cff3b78fc76cb8f3a7cc44e5) on port 5901\nOnly local connections are allowed.\n[1547415252.691][SEVERE]: bind() failed: Cannot assign requested address (99)\n15:34:16.194 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS\n15:34:17.596 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session e50bd4f197933d66e089541d431eb96a (org.openqa.selenium.chrome.ChromeDriverService)\nRemaining disk space: 34 gb / 39 gb\n15:38:02.342 INFO [ActiveSessions$1.onStop] - Removing session e50bd4f197933d66e089541d431eb96a (org.openqa.selenium.chrome.ChromeDriverService)\nNotice that the servlets get registered. The tests then execute successfully.. > Of course the any non-standard Grid won't work in these docker images right away, in your case you want to use some custom servlets, therefore you would need to customise the image to hook them when the node is starting, that is completely expected.\n\nSo, please help me to understand, what is the issue?\n\nMy issue is why chromedriver is throwing that error [SEVERE]: bind() failed: Cannot assign requested address (99)? Is there something I'm missing when running the docker command:\ndocker run -d -p 5551:5555 -e TZ=America/Chicago -e HUB_HOST=10.15.100.35 -e HUB_PORT=4445 -e REMOTE_HOST=\"http://10.13.169.35:5551\" -v /dev/shm:/dev/shm -v /home/vagrant/docker/Recordings:/tmp/Recordings --name node1 selenium/node-chrome?. > Right, as I mentioned before, we have seen ChromeDriver throwing that message, but so far it does not affect the tests. We have done some checks and tried to avoid it, but we haven't been able to do that, and since it does not affect, we haven't taken any more actions on it.\n\nNevertheless, are you having any tests failing due to that message thrown by ChromeDriver?\n\nSo far I dont see tests failing due to that.\nAlso is there a way to specify the remote_host variable in a docker compose file such as:\nversion: \"2.4\"\nservices:\n  chrome:\n    image: node-chrome\n    volumes:\n      - /dev/shm:/dev/shm\n      - /home/vagrant/docker/Recordings:/tmp/Recordings\n    environment:\n      - TZ=America/Chicago\n      - HUB_HOST=172.16.24.8\n      - HUB_PORT=4444\n      - REMOTE_HOST=http://????\n    ports:\n      - \"5900\"\n      - \"5555\"\n    mem_limit: 512m\n    cpus: 0.5\n?\nWith this file, I'm not aware of what the public ports would be. So how would I provide the public ip and port of the node in the compose file?. ",
    "mbrem": "Sorry, was a mistake of me. sorry, that's a mistake from me. ",
    "flynet": "Hello. let me clarify. Yes, I'm going to run IE, Edge Microsoft Images under docker container with installed VirtualBox inside. If you are interested, please, have a look (Jencryzthers/VboxInsideDocker). I figured out that I mixed up node/hub configs. I got it working by providing correct node.json config for 2.53.1 version, someone noticed that node config for config 2.x and 3.x have different syntax. . ",
    "gqoew": "Solved by doing /opt/bin/start-vnc.sh. ",
    "irajtaghlidi": "I found it's a Chromedriver bug, but anyone knows any patch for that? . JUST FOR ARCHIVE\nI test 10-20 versions to found start of problem.\n## this setup work without problem:\n\nSelenium: 3.8.1\nGoogle Chrome: 62.0.3202.94\nChromeDriver: 2.33.506092\nLink: 3.8.1-aluminum\n\n### this setup and newer does NOT work (timeout problem):\n\nSelenium: 3.8.1\nGoogle Chrome: 63.0.3239.84\nChromeDriver: 2.34\nLink: 3.8.1-bohrium\n\nShort: problem started with ChromeDriver 2.34+\nsubmitted Chromdriver issue ( please Star it )\n. ",
    "rbonghi": "Hi @diemol ,\nThe Chrome browser at this time is not available for ARM architecture, eg. Raspberry PI, BeagleBone Black and in my case the NVIDIA Jetson Xavier and TX2. The only way to use selenium in ARM context is to work with Chromium, otherwise I am agree with your opinion.\nI do not understand why travis CI make my pull request in fail. I launch on my PC the same script but I didn't see any type of errors.\nUSE_RANDOM_USER_ID=true VERSION=\"$TRAVIS_BRANCH\" make ci\nPS: I see that chrome will be release this year for ARM \ud83e\udd1e \nhttps://www.theverge.com/2018/11/21/18106162/microsoft-google-chrome-windows-10-arm-support-app\n. My idea was to make this repo official in short time and pull directly from the source the right version of selenium. \ud83d\ude04 \nAnyway, we can wait the google chrome browser for ARM. I hope will be release soon.\nIf you are agree I will push on docker hub the ARM32 and ARM64 with chromium.\nWe can keep some features from this branch and start a new pull request to move this repo to be official, eg: fix java and ubuntu version for generic architecture.\n. > What do you exactly mean? To add Chromium images to the already existing Firefox and Chrome images? If so, I don't think it makes sense because the idea of this images is to provide a broad, common use case tools for users. Chromium is not broadly used for testing so it would not really belong here.\n\nAdditionally, adding a browser that potentially will be removed when Chrome is released with ARM support, just increases maintenance and would confuse users.\n\nMy initial idea was to add Chromium, but now I am agree with you to wait the new release of Chrome for ARM, make confusion for other users in this official repository.\nAbout the multi architecture, the official docker hub documentation is only clear for official images: multiple-architectures . The docker library build the images for each architecture when is written the library definition file otherwise the Automated tool build only in \"amd64\" version.\nMake this library official help me to pull from docker hub the right version of selenium without build on embedded board (and safe time) the image.\n\nWhere would you push it?\n\nIn my personal account rbonghi. Only the version for arm32 and arm64\n\nSure, do you know what needs to be done?\n\nThe steps to follow are explained here: Contributing to the standard library\nI think does not require to make this repository official, just clean some parts and add security check in some downloads, like https://github.com/docker-library/official-images#security\nI think this repo have the number to be official NEW-IMAGE-CHECKLIST.md . Hi @diemol ,\n\n\nYes, so if I understood, it would be great if you host the repo on your user and push the images to your user space in Docker Hub, we would happiliy add a link to it in the README that belongs to this project.\n\n\nOk, I hope for this week I will update my repo to show only selenium with Chromium for arch ARM32 ARM64\n\n\nHaving this set of images as offical, there was an effort to do that earlier https://github.com/SeleniumHQ/docker-selenium/milestone/1?closed=1, but I don't know how that ended. Additionally, I am not sure what added value it would bring.\n\n\nOps, I did not see that milestone. Maybe I can send you a new pull request only with the fix for ARM, in detail only this change Base/Dockerfile and finally I open a new issue with some fix to move this dockers to be official.\nYes, we can close this pull request :+1: \n. ",
    "McGriddle": "I'll try to find them later today. I'm not in a position to check at this moment. Would the logs be in /var/log  in the container?. fluxbox-stdout.log was empty. Here is fluxbox-stderr.log: https://cl.ly/d3ca58\nThe last line from there is Error: Couldn't connect to XServer:99.0. Maybe it's a timing issue? I'm able to start fluxbox manually with fluxbox -display :99.0 no issue when it happens: https://cl.ly/73156e. Alright. So I built the image locally with https://github.com/SeleniumHQ/docker-selenium/blob/master/NodeDebug/selenium-debug.conf#L9 set to true.\nEven when the fluxbox error log shows it has issues connecting, it still successfully restarts fluxbox. https://cl.ly/cbe160. ",
    "philippmoeller": "@diemol see #811 . @diemol Sorry, I'll have to close the request if this is necessary. My org is not prepared for that kind of legal work.. @diemol Sorry, no chance to get this past corporate in a reasonable time frame.. ",
    "mkrei": "Sure, I'll give it a try. Just wanted to make sure you guys are interested in doing it as proposed.. As long as we are talking about the stable version of Chrome, which is installed in the Dockerfile, that should not be a problem, as there are already matching builds from the beta and nightly versions. So there will already be an entry (and therefore also build) for the LAST_RELEASE_* file, which enables the retrieval of the Chromedriver.\nAlso, on a Side-Note, there should be a PR for this now, with #886, however it seems I messed up the link to this proposal in some way. So based on the ticket flow, I guess the proposal here can now be closed, right?. ",
    "etiennetremel": "Should this be 2.23?\n. ",
    "otsvetkov": "Look at the second commit\n. ",
    "conversica-aaronpa": "Too low, now I have to implement an override. "
}