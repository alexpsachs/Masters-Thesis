[
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/3049285",
        "pull_request_review_id": null,
        "id": 3049285,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDkyODU=",
        "diff_hunk": "@@ -41,7 +41,11 @@ Controller.prototype.on = function(type, callback) {\n }\n \n Controller.prototype.loop = function(callback) {\n-  this.on('animationFrame', callback)\n+  if (typeof(chrome) !== \"undefined\") {\n+    this.on('frame', callback)\n+  } else {\n+    this.on('animationFrame', callback)",
        "path": "lib/controller.js",
        "position": null,
        "original_position": 8,
        "commit_id": "da05b1f00179f0f3d553c1ea9184d7d377fb7e08",
        "original_commit_id": "e91360712f9ef87933c9641869d295da897f4776",
        "user": {
            "login": "barbagallo",
            "id": 54302,
            "node_id": "MDQ6VXNlcjU0MzAy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/54302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/barbagallo",
            "html_url": "https://github.com/barbagallo",
            "followers_url": "https://api.github.com/users/barbagallo/followers",
            "following_url": "https://api.github.com/users/barbagallo/following{/other_user}",
            "gists_url": "https://api.github.com/users/barbagallo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/barbagallo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/barbagallo/subscriptions",
            "organizations_url": "https://api.github.com/users/barbagallo/orgs",
            "repos_url": "https://api.github.com/users/barbagallo/repos",
            "events_url": "https://api.github.com/users/barbagallo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/barbagallo/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do you have any documentation as to why we need to use animationFrame instead of frame for the event? Just curious.\n",
        "created_at": "2013-02-18T15:27:16Z",
        "updated_at": "2013-02-20T00:34:10Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/25#discussion_r3049285",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/25",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/3049285"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/25#discussion_r3049285"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/25"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/3055401",
        "pull_request_review_id": null,
        "id": 3055401,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTU0MDE=",
        "diff_hunk": "@@ -41,7 +41,11 @@ Controller.prototype.on = function(type, callback) {\n }\n \n Controller.prototype.loop = function(callback) {\n-  this.on('animationFrame', callback)\n+  if (typeof(chrome) !== \"undefined\") {\n+    this.on('frame', callback)\n+  } else {\n+    this.on('animationFrame', callback)",
        "path": "lib/controller.js",
        "position": null,
        "original_position": 8,
        "commit_id": "da05b1f00179f0f3d553c1ea9184d7d377fb7e08",
        "original_commit_id": "e91360712f9ef87933c9641869d295da897f4776",
        "user": {
            "login": "joshbuddy",
            "id": 8898,
            "node_id": "MDQ6VXNlcjg4OTg=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/8898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshbuddy",
            "html_url": "https://github.com/joshbuddy",
            "followers_url": "https://api.github.com/users/joshbuddy/followers",
            "following_url": "https://api.github.com/users/joshbuddy/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshbuddy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshbuddy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshbuddy/subscriptions",
            "organizations_url": "https://api.github.com/users/joshbuddy/orgs",
            "repos_url": "https://api.github.com/users/joshbuddy/repos",
            "events_url": "https://api.github.com/users/joshbuddy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshbuddy/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've only got this report: https://github.com/leapmotion/leapjs/pull/12\n",
        "created_at": "2013-02-18T23:46:42Z",
        "updated_at": "2013-02-20T00:34:10Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/25#discussion_r3055401",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/25",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/3055401"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/25#discussion_r3055401"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/25"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/4811115",
        "pull_request_review_id": null,
        "id": 4811115,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTExMTU=",
        "diff_hunk": "@@ -13,4 +13,49 @@ Connection.prototype.teardownSocket = function() {\n   this.socket.close();\n   delete this.socket;\n   delete this.protocol;\n-}\n\\ No newline at end of file\n+}\n+\n+Connection.prototype.startHeartbeat = function() {\n+  if (this.heartbeatTimer) return;\n+  if (!this.protocol.sendHeartbeat) return;\n+  var connection = this;\n+  var propertyName = null;\n+  if (typeof document.hidden !== \"undefined\") {\n+    propertyName = \"hidden\";\n+  } else if (typeof document.mozHidden !== \"undefined\") {\n+    propertyName = \"mozHidden\";\n+  } else if (typeof document.msHidden !== \"undefined\") {\n+    propertyName = \"msHidden\";\n+  } else if (typeof document.webkitHidden !== \"undefined\") {\n+    propertyName = \"webkitHidden\";\n+  } else {\n+    propertyName = \"hidden\";\n+  }\n+\n+  var windowVisible = true;\n+\n+  window.previousOnfocus = window.onfocus;\n+  window.previousOnblur = window.onblur;\n+  window.onfocus = function() {\n+    if (window.previousOnfocus) window.previousOnfocus();\n+    windowVisible = true;\n+  }\n+  window.onblur = function() {\n+    if (window.previousOnblur) window.previousOnblur();\n+    windowVisible = false;\n+  }",
        "path": "lib/connection.js",
        "position": null,
        "original_position": 36,
        "commit_id": "241352435e946fe5856b0304d034d44d012aef3e",
        "original_commit_id": "10f868778b1a92ed976dd9b1f646b24129e1d0b1",
        "user": {
            "login": "mcarlson",
            "id": 5641,
            "node_id": "MDQ6VXNlcjU2NDE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcarlson",
            "html_url": "https://github.com/mcarlson",
            "followers_url": "https://api.github.com/users/mcarlson/followers",
            "following_url": "https://api.github.com/users/mcarlson/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcarlson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcarlson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcarlson/subscriptions",
            "organizations_url": "https://api.github.com/users/mcarlson/orgs",
            "repos_url": "https://api.github.com/users/mcarlson/repos",
            "events_url": "https://api.github.com/users/mcarlson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcarlson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not use addEventListener() and its ilk to avoid having to capture old onfocus/blur methods? Also, you're not passing the event object from to handlers which could potentially break if they're expecting one.\n",
        "created_at": "2013-06-21T00:58:01Z",
        "updated_at": "2013-06-21T06:49:13Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/63#discussion_r4811115",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/63",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/4811115"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/63#discussion_r4811115"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/63"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/4953320",
        "pull_request_review_id": null,
        "id": 4953320,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMzMjA=",
        "diff_hunk": "@@ -243,140 +244,136 @@ Frame.prototype.hand = function(id) {\n }\n \n /**\n- * The angle of rotation around the rotation axis derived from the overall \n+ * The angle of rotation around the rotation axis derived from the overall\n  * rotational motion between the current frame and the specified frame.\n- * \n- * The returned angle is expressed in radians measured clockwise around \n- * the rotation axis (using the right-hand rule) between the start and end frames. \n+ *\n+ * The returned angle is expressed in radians measured clockwise around\n+ * the rotation axis (using the right-hand rule) between the start and end frames.\n  * The value is always between 0 and pi radians (0 and 180 degrees).\n- * \n- * The Leap derives frame rotation from the relative change in position and \n+ *\n+ * The Leap derives frame rotation from the relative change in position and\n  * orientation of all objects detected in the field of view.\n- * \n- * If either this frame or sinceFrame is an invalid Frame object, then the \n+ *\n+ * If either this frame or sinceFrame is an invalid Frame object, then the\n  * angle of rotation is zero.\n- * \n+ *\n  * @method rotationAngle\n  * @memberof Leap.Frame.prototype\n  * @param {Leap.Frame} sinceFrame The starting frame for computing the relative rotation.\n- * @param {Leap.Vector} [axis] The axis to measure rotation around.\n- * @returns {Number} A positive value containing the heuristically determined \n+ * @param {number[]} [axis] The axis to measure rotation around.\n+ * @returns {number} A positive value containing the heuristically determined\n  * rotational change between the current frame and that specified in the sinceFrame parameter.\n  */\n-Frame.prototype.rotationAngle = function(sinceFrame, axis){\n+Frame.prototype.rotationAngle = function(sinceFrame, axis) {\n   if (!this.valid || !sinceFrame.valid) return 0.0;\n+\n   var rot = this.rotationMatrix(sinceFrame);\n-  var cs = (rot[0][0] + rot[1][1] + rot[2][2] - 1.0)*0.5\n+  var cs = (rot[0] + rot[4] + rot[8] - 1.0)*0.5",
        "path": "lib/frame.js",
        "position": 82,
        "original_position": 82,
        "commit_id": "64eae68184277c5120c2aadb40e1eb4b829d0672",
        "original_commit_id": "905a2cc3767d2032179ba9c2ba749903f735ebb8",
        "user": {
            "login": "mcarlson",
            "id": 5641,
            "node_id": "MDQ6VXNlcjU2NDE=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/5641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcarlson",
            "html_url": "https://github.com/mcarlson",
            "followers_url": "https://api.github.com/users/mcarlson/followers",
            "following_url": "https://api.github.com/users/mcarlson/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcarlson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcarlson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcarlson/subscriptions",
            "organizations_url": "https://api.github.com/users/mcarlson/orgs",
            "repos_url": "https://api.github.com/users/mcarlson/repos",
            "events_url": "https://api.github.com/users/mcarlson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcarlson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "mmm this is better!\n",
        "created_at": "2013-06-30T02:18:54Z",
        "updated_at": "2013-07-01T07:33:05Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/68#discussion_r4953320",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/68",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/4953320"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/68#discussion_r4953320"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/68"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8047913",
        "pull_request_review_id": null,
        "id": 8047913,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDc5MTM=",
        "diff_hunk": "@@ -94,9 +94,9 @@ describe('Frame', function(){\n     it('should return an invalid #pointable', function() { assert(!Leap.Frame.Invalid.pointable().valid)})\n     it('should return an invalid #finger', function() { assert(!Leap.Frame.Invalid.finger().valid)})\n     it('should return 0.0 from #rotationAngle', function() { assert.equal(0.0, Leap.Frame.Invalid.rotationAngle())})\n-    it('should return an identity matrix from #rotationMatrix', function() { assert.deepEqual(Leap.mat3.create(), Leap.Frame.Invalid.rotationMatrix())})\n-    it('should return a null vector from #rotationAxis', function() { assert.deepEqual(Leap.vec3.create(), Leap.Frame.Invalid.rotationAxis())})\n+    it('should return an identity matrix from #rotationMatrix', function() { assertUtil.matrix3CloseTo(Leap.mat3.create(), Leap.Frame.Invalid.rotationMatrix(), assertUtil.DEFAULT_RANGE())})\n+    it('(#/overview/validity) from #rotationAxis', function() { assertUtil.vectorCloseTo(Leap.vec3.create(),Leap.Frame.Invalid.rotationAxis(),  assertUtil.DEFAULT_RANGE())})\n     it('should return 1.0 from #scaleFactor', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n-    it('should return a null vector from #translation', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n+    it('(#/overview/validity) from #translation', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})",
        "path": "test/frame.js",
        "position": null,
        "original_position": 10,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "2c619dcfc14dc82a8f6c2580b72cb1a6d5107593",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is \"should return a null vector\" replaced with \"(#/overview/validity)\"? Accidental vim substitution...?\n",
        "created_at": "2013-12-03T01:42:48Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8047913",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8047913"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8047913"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8047966",
        "pull_request_review_id": null,
        "id": 8047966,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDc5NjY=",
        "diff_hunk": "@@ -94,9 +94,9 @@ describe('Frame', function(){\n     it('should return an invalid #pointable', function() { assert(!Leap.Frame.Invalid.pointable().valid)})\n     it('should return an invalid #finger', function() { assert(!Leap.Frame.Invalid.finger().valid)})\n     it('should return 0.0 from #rotationAngle', function() { assert.equal(0.0, Leap.Frame.Invalid.rotationAngle())})\n-    it('should return an identity matrix from #rotationMatrix', function() { assert.deepEqual(Leap.mat3.create(), Leap.Frame.Invalid.rotationMatrix())})\n-    it('should return a null vector from #rotationAxis', function() { assert.deepEqual(Leap.vec3.create(), Leap.Frame.Invalid.rotationAxis())})\n+    it('should return an identity matrix from #rotationMatrix', function() { assertUtil.matrix3CloseTo(Leap.mat3.create(), Leap.Frame.Invalid.rotationMatrix(), assertUtil.DEFAULT_RANGE())})\n+    it('(#/overview/validity) from #rotationAxis', function() { assertUtil.vectorCloseTo(Leap.vec3.create(),Leap.Frame.Invalid.rotationAxis(),  assertUtil.DEFAULT_RANGE())})\n     it('should return 1.0 from #scaleFactor', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n-    it('should return a null vector from #translation', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n+    it('(#/overview/validity) from #translation', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})",
        "path": "test/frame.js",
        "position": null,
        "original_position": 10,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "2c619dcfc14dc82a8f6c2580b72cb1a6d5107593",
        "user": {
            "login": "bingomanatee",
            "id": 684016,
            "node_id": "MDQ6VXNlcjY4NDAxNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/684016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bingomanatee",
            "html_url": "https://github.com/bingomanatee",
            "followers_url": "https://api.github.com/users/bingomanatee/followers",
            "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
            "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
            "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
            "repos_url": "https://api.github.com/users/bingomanatee/repos",
            "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "something like that. \n\nOn Dec 2, 2013, at 5:43 PM, Alan Davis notifications@github.com wrote:\n\n> In test/frame.js:\n> \n> > ```\n> >  it('should return 1.0 from #scaleFactor', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n> > ```\n> > -    it('should return a null vector from #translation', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n> > -    it('(#/overview/validity) from #translation', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n> >   Why is \"should return a null vector\" replaced with \"(#/overview/validity)\"? Accidental vim substitution...?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n",
        "created_at": "2013-12-03T01:47:15Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8047966",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8047966"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8047966"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8047989",
        "pull_request_review_id": null,
        "id": 8047989,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDc5ODk=",
        "diff_hunk": "@@ -0,0 +1,149 @@\n+(function (window) {\n+\n+    if (typeof module != 'undefined') {\n+        var assert = require('assert');\n+        var util = require('util');\n+        var _ = require('underscore');\n+    } else {\n+        var assert = window.assert;\n+        var _ = window._;\n+    }\n+\n+    function ok(ok, c) {\n+        if (assert && assert.ok) {\n+            assert.ok(ok, c);\n+        } else {\n+            assert.equal(!!ok, c);\n+        }\n+    }\n+\n+    function isObject(o){\n+        if (_){\n+            return _.isObject(o);\n+        } else {\n+            return typeof o == 'object';\n+        }\n+    }\n+\n+    var _DEFAULT_RANGE = 1e-6;\n+\n+    var _DEBUG = 0;\n+\n+    function f(v1, v2, v3) {\n+        var args = arguments || [v1, v2, v3];\n+        if (typeof util !== 'undefined') {\n+\n+            return            util.format.apply(util, args);",
        "path": "test/assertUtil.js",
        "position": null,
        "original_position": 36,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "2c619dcfc14dc82a8f6c2580b72cb1a6d5107593",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The '80s called \u2013\u00a0they want their Tabs back. :-P\n",
        "created_at": "2013-12-03T01:48:54Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8047989",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8047989"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8047989"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8048010",
        "pull_request_review_id": null,
        "id": 8048010,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDgwMTA=",
        "diff_hunk": "@@ -4,27 +4,27 @@\n   \"description\": \"Javascript client for the Leapmotion\",\n   \"main\": \"lib\",\n   \"scripts\": {\n-    \"test\": \"make test-node test-integration\"\n+    \"test\": \"make test-node\"",
        "path": "package.json",
        "position": null,
        "original_position": 5,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "2c619dcfc14dc82a8f6c2580b72cb1a6d5107593",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be a temporary change: https://github.com/leapmotion/leapjs/commit/234869b3ba541b40795293d60f7c379579ce555c\n",
        "created_at": "2013-12-03T01:50:15Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8048010",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8048010"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8048010"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8048032",
        "pull_request_review_id": null,
        "id": 8048032,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDgwMzI=",
        "diff_hunk": "@@ -4,27 +4,27 @@\n   \"description\": \"Javascript client for the Leapmotion\",\n   \"main\": \"lib\",\n   \"scripts\": {\n-    \"test\": \"make test-node test-integration\"\n+    \"test\": \"make test-node\"",
        "path": "package.json",
        "position": null,
        "original_position": 5,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "2c619dcfc14dc82a8f6c2580b72cb1a6d5107593",
        "user": {
            "login": "bingomanatee",
            "id": 684016,
            "node_id": "MDQ6VXNlcjY4NDAxNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/684016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bingomanatee",
            "html_url": "https://github.com/bingomanatee",
            "followers_url": "https://api.github.com/users/bingomanatee/followers",
            "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
            "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
            "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
            "repos_url": "https://api.github.com/users/bingomanatee/repos",
            "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes - I have rolled that back with the rest of package.json; for some reason integration tests are causing a new problem -- give me a sec to fix\n\nOn Dec 2, 2013, at 5:50 PM, Alan Davis notifications@github.com wrote:\n\n> In package.json:\n> \n> > @@ -4,27 +4,27 @@\n> >    \"description\": \"Javascript client for the Leapmotion\",\n> >    \"main\": \"lib\",\n> >    \"scripts\": {\n> > -    \"test\": \"make test-node test-integration\"\n> > -    \"test\": \"make test-node\"\n> >   Should be a temporary change: 234869b\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n",
        "created_at": "2013-12-03T01:51:25Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8048032",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8048032"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8048032"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8048235",
        "pull_request_review_id": null,
        "id": 8048235,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDgyMzU=",
        "diff_hunk": "@@ -0,0 +1,149 @@\n+(function (window) {\n+\n+    if (typeof module != 'undefined') {\n+        var assert = require('assert');\n+        var util = require('util');\n+        var _ = require('underscore');\n+    } else {\n+        var assert = window.assert;\n+        var _ = window._;\n+    }\n+\n+    function ok(ok, c) {",
        "path": "test/assertUtil.js",
        "position": null,
        "original_position": 12,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "2c619dcfc14dc82a8f6c2580b72cb1a6d5107593",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nitpick: better to name arguments different than function. How about:\n\n```\nfunction ok(cond, msg) {\n```\n",
        "created_at": "2013-12-03T02:00:54Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8048235",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8048235"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8048235"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8054647",
        "pull_request_review_id": null,
        "id": 8054647,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNTQ2NDc=",
        "diff_hunk": "@@ -94,8 +94,8 @@ describe('Frame', function(){\n     it('should return an invalid #pointable', function() { assert(!Leap.Frame.Invalid.pointable().valid)})\n     it('should return an invalid #finger', function() { assert(!Leap.Frame.Invalid.finger().valid)})\n     it('should return 0.0 from #rotationAngle', function() { assert.equal(0.0, Leap.Frame.Invalid.rotationAngle())})\n-    it('should return an identity matrix from #rotationMatrix', function() { assert.deepEqual(Leap.mat3.create(), Leap.Frame.Invalid.rotationMatrix())})\n-    it('should return a null vector from #rotationAxis', function() { assert.deepEqual(Leap.vec3.create(), Leap.Frame.Invalid.rotationAxis())})\n+    it('should return an identity matrix from #rotationMatrix', function() { assertUtil.matrix3CloseTo(Leap.mat3.create(), Leap.Frame.Invalid.rotationMatrix(), assertUtil.DEFAULT_RANGE())})\n+    it('should return a null vector from #rotationAxis', function() { assertUtil.vectorCloseTo(Leap.vec3.create(),Leap.Frame.Invalid.rotationAxis(),  assertUtil.DEFAULT_RANGE())})\n     it('should return 1.0 from #scaleFactor', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})\n     it('should return a null vector from #translation', function() { assert.equal(1.0, Leap.Frame.Invalid.scaleFactor())})",
        "path": "test/frame.js",
        "position": null,
        "original_position": 9,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "dd51040084272c674316d320d6bcfc64998a7fa0",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "```\nassert.equal(1.0, Leap.Frame.Invalid.scaleFactor())}\n```\n\nshould be:\n\n```\nassertUtil.vectorCloseTo(Leap.vec3.create(), Leap.Frame.Invalid.translation(), assertUtil.DEFAULT_RANGE())}\n```\n",
        "created_at": "2013-12-03T09:44:17Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8054647",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8054647"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8054647"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8054655",
        "pull_request_review_id": null,
        "id": 8054655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNTQ2NTU=",
        "diff_hunk": "@@ -89,9 +89,9 @@ describe('Hand', function(){\n     it('should return an invalid #pointable', function() { assert(!Leap.Hand.Invalid.pointable().valid)})\n     it('should return an invalid #finger', function() { assert(!Leap.Hand.Invalid.finger().valid)})\n     it('should return 0.0 from #rotationAngle', function() { assert.equal(0.0, Leap.Hand.Invalid.rotationAngle())})\n-    it('should return an identity matrix from #rotationMatrix', function() { assert.deepEqual(Leap.mat3.create(), Leap.Hand.Invalid.rotationMatrix())})\n-    it('should return a null vector from #rotationAxis', function() { assert.deepEqual(Leap.vec3.create(), Leap.Hand.Invalid.rotationAxis())})\n+    it('should return an identity matrix from #rotationMatrix', function() { assertUtil.matrix3CloseTo(Leap.mat3.create(), Leap.Hand.Invalid.rotationMatrix(),  assertUtil.DEFAULT_RANGE())})\n+    it('(#/overview/validity) from #rotationAxis', function() { assertUtil.vectorCloseTo(Leap.vec3.create(), Leap.Hand.Invalid.rotationAxis(),  assertUtil.DEFAULT_RANGE())})",
        "path": "test/hand.js",
        "position": null,
        "original_position": 16,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "dd51040084272c674316d320d6bcfc64998a7fa0",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fix fat-fingered vim substitution.\n",
        "created_at": "2013-12-03T09:44:42Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8054655",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8054655"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8054655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8054669",
        "pull_request_review_id": null,
        "id": 8054669,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNTQ2Njk=",
        "diff_hunk": "@@ -89,9 +89,9 @@ describe('Hand', function(){\n     it('should return an invalid #pointable', function() { assert(!Leap.Hand.Invalid.pointable().valid)})\n     it('should return an invalid #finger', function() { assert(!Leap.Hand.Invalid.finger().valid)})\n     it('should return 0.0 from #rotationAngle', function() { assert.equal(0.0, Leap.Hand.Invalid.rotationAngle())})\n-    it('should return an identity matrix from #rotationMatrix', function() { assert.deepEqual(Leap.mat3.create(), Leap.Hand.Invalid.rotationMatrix())})\n-    it('should return a null vector from #rotationAxis', function() { assert.deepEqual(Leap.vec3.create(), Leap.Hand.Invalid.rotationAxis())})\n+    it('should return an identity matrix from #rotationMatrix', function() { assertUtil.matrix3CloseTo(Leap.mat3.create(), Leap.Hand.Invalid.rotationMatrix(),  assertUtil.DEFAULT_RANGE())})\n+    it('(#/overview/validity) from #rotationAxis', function() { assertUtil.vectorCloseTo(Leap.vec3.create(), Leap.Hand.Invalid.rotationAxis(),  assertUtil.DEFAULT_RANGE())})\n     it('should return 1.0 from #scaleFactor', function() { assert.equal(1.0, Leap.Hand.Invalid.scaleFactor())})\n-    it('should return a null vector from #translation', function() { assert.equal(1.0, Leap.Hand.Invalid.scaleFactor())})\n+    it('(#/overview/validity) from #translation', function() { assert.equal(1.0, Leap.Hand.Invalid.scaleFactor())})",
        "path": "test/hand.js",
        "position": null,
        "original_position": 19,
        "commit_id": "84c9b6e3e7147453bb2178d902964708facb534b",
        "original_commit_id": "dd51040084272c674316d320d6bcfc64998a7fa0",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Another accidental vim substitution, and:\n\n```\nassert.equal(1.0, Leap.Hand.Invalid.scaleFactor())}\n```\n\nshould be:\n\n```\nassertUtil.vectorCloseTo(Leap.vec3.create(), Leap.Hand.Invalid.translation(), assertUtil.DEFAULT_RANGE())}\n```\n",
        "created_at": "2013-12-03T09:45:26Z",
        "updated_at": "2013-12-03T22:12:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8054669",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/120",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/8054669"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/120#discussion_r8054669"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/120"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334360",
        "pull_request_review_id": null,
        "id": 9334360,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQzNjA=",
        "diff_hunk": "@@ -34,11 +34,29 @@\n       controller.on('blur', function() {\n         console.log(\"blur\");\n       });\n-      controller.on('deviceConnected', function() {\n-        console.log(\"deviceConnected\");\n+\t  controller.on('deviceAttached', function(deviceInfo) {\n+\t    console.log(\"deviceAttached\");\n+\t\tconsole.log(deviceInfo);\n+\t  });",
        "path": "examples/dumper.html",
        "position": null,
        "original_position": 9,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "indentation..\n",
        "created_at": "2014-01-31T04:45:28Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334360",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334360"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334360"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334371",
        "pull_request_review_id": null,
        "id": 9334371,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQzNzE=",
        "diff_hunk": "@@ -34,11 +34,29 @@\n       controller.on('blur', function() {\n         console.log(\"blur\");\n       });\n-      controller.on('deviceConnected', function() {\n-        console.log(\"deviceConnected\");\n+\t  controller.on('deviceAttached', function(deviceInfo) {\n+\t    console.log(\"deviceAttached\");\n+\t\tconsole.log(deviceInfo);\n+\t  });\n+\t  controller.on('deviceRemoved', function(deviceInfo) {\n+        console.log(\"deviceRemoved\");\n+        console.log(deviceInfo);\n       });\n-      controller.on('deviceDisconnected', function() {\n-        console.log(\"deviceDisconnected\");\n+\t  controller.on('deviceStreaming', function(deviceInfo) {\n+        console.log(\"deviceStreaming\");\n+        console.log(deviceInfo);\n+      });\n+\t  controller.on('deviceStopped', function(deviceInfo) {\n+        console.log(\"deviceStopped\");\n+        console.log(deviceInfo);\n+      });\n+\t  controller.on('streamingStarted', function(deviceInfo) {\n+        console.log(\"streamingStarted\");\n+        console.log(deviceInfo);\n+      });",
        "path": "examples/dumper.html",
        "position": null,
        "original_position": 27,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "why would we need both `deviceStreaming` and `streamingStarted`?  Maybe I'll read on and see.  Confusing.\n",
        "created_at": "2014-01-31T04:46:30Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334371",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334371"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334371"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334379",
        "pull_request_review_id": null,
        "id": 9334379,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQzNzk=",
        "diff_hunk": "@@ -404,8 +406,31 @@ Controller.prototype.processFinishedFrame = function(frame) {\n   this.emit('frame', frame);\n }\n \n+/**\n+  Controller events.  The old 'deviceConnected' and 'deviceDisconnected' have been depricated -\n+  use 'deviceStreaming' and 'deviceStopped' instead, except in the case of an unexpected disconnect.\n+\n+  There are 4 pairs of device events recently added/changed:\n+  -deviceAttached/deviceRemoved - called when a device's physical connection to the computer changes\n+  -deviceStreaming/deviceStopped - called when a device is paused or resumed.\n+  -streamingStarted/streamingStopped - called when there is/is no longer at least 1 streaming device.\n+\t\t\t\t\t\t\t\t\t  Always comes after deviceStreaming.\n+  \n+  The first of all of the above event pairs is triggered as appropriate upon connection.  All of\n+  these events recieves an argument with the most recent info about the device that triggered it.\n+  These events will always be fired in the order they are listed here, with reverse ordering for the\n+  matching shutdown call. (ie, deviceStreaming always comes after deviceAttached, and deviceStopped \n+  will come before deviceRemoved).\n+  \n+  -deviceConnected/deviceDisconnected - These are considered depricated and will be removed in \n+  the next revision.  In contrast to the other events and in keeping with it's original behavior,\n+  it will only be fired when a device begins streaming AFTER a connection has been established.\n+  It is not paired, and recieves no device info.  Nearly identical functionality to \n+  streamingStarted/Stopped if you need to port.\n+*/\n Controller.prototype.setupConnectionEvents = function() {\n   var controller = this;\n+  console.dir(this);",
        "path": "leap.js",
        "position": null,
        "original_position": 55,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should be removed\n",
        "created_at": "2014-01-31T04:47:17Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334379",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334379"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334379"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334396",
        "pull_request_review_id": null,
        "id": 9334396,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQzOTY=",
        "diff_hunk": "@@ -34,11 +34,29 @@\n       controller.on('blur', function() {\n         console.log(\"blur\");\n       });\n-      controller.on('deviceConnected', function() {\n-        console.log(\"deviceConnected\");\n+\t  controller.on('deviceAttached', function(deviceInfo) {\n+\t    console.log(\"deviceAttached\");\n+\t\tconsole.log(deviceInfo);\n+\t  });\n+\t  controller.on('deviceRemoved', function(deviceInfo) {\n+        console.log(\"deviceRemoved\");\n+        console.log(deviceInfo);\n       });\n-      controller.on('deviceDisconnected', function() {\n-        console.log(\"deviceDisconnected\");\n+\t  controller.on('deviceStreaming', function(deviceInfo) {\n+        console.log(\"deviceStreaming\");\n+        console.log(deviceInfo);\n+      });\n+\t  controller.on('deviceStopped', function(deviceInfo) {\n+        console.log(\"deviceStopped\");\n+        console.log(deviceInfo);\n+      });\n+\t  controller.on('streamingStarted', function(deviceInfo) {\n+        console.log(\"streamingStarted\");\n+        console.log(deviceInfo);\n+      });",
        "path": "examples/dumper.html",
        "position": null,
        "original_position": 27,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Read the docs, great.\n",
        "created_at": "2014-01-31T04:48:13Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334396",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334396"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334396"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334405",
        "pull_request_review_id": null,
        "id": 9334405,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQ0MDU=",
        "diff_hunk": "@@ -420,7 +445,58 @@ Controller.prototype.setupConnectionEvents = function() {\n   this.connection.on('focus', function() { controller.emit('focus') });\n   this.connection.on('blur', function() { controller.emit('blur') });\n   this.connection.on('protocol', function(protocol) { controller.emit('protocol', protocol); });\n-  this.connection.on('deviceConnect', function(evt) { controller.emit(evt.state ? 'deviceConnected' : 'deviceDisconnected'); });\n+  this.connection.on('deviceEvent', function(evt) {\n+    var outEvent = 'deviceEvent';\n+\t  var info = evt.state;\n+\t  var oldInfo = controller.deviceList[info.id];",
        "path": "leap.js",
        "position": null,
        "original_position": 67,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "indentation should be cleaned up some here.  \n",
        "created_at": "2014-01-31T04:48:42Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334405",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334405"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334405"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334426",
        "pull_request_review_id": null,
        "id": 9334426,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQ0MjY=",
        "diff_hunk": "@@ -420,7 +445,58 @@ Controller.prototype.setupConnectionEvents = function() {\n   this.connection.on('focus', function() { controller.emit('focus') });\n   this.connection.on('blur', function() { controller.emit('blur') });\n   this.connection.on('protocol', function(protocol) { controller.emit('protocol', protocol); });\n-  this.connection.on('deviceConnect', function(evt) { controller.emit(evt.state ? 'deviceConnected' : 'deviceDisconnected'); });\n+  this.connection.on('deviceEvent', function(evt) {\n+    var outEvent = 'deviceEvent';\n+\t  var info = evt.state;\n+\t  var oldInfo = controller.deviceList[info.id];\n+\t  \n+    //Grab a list of changed properties in the device info\n+\t  var changed = {};\n+\t  for(var property in info) {\n+\t    //If a property i doesn't exist the cache, or has changed...\n+\t    if( !oldInfo || !oldInfo.hasOwnProperty(property) || oldInfo[property] != info[property] ) {\n+\t  \t  changed[property] = true;",
        "path": "leap.js",
        "position": null,
        "original_position": 74,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sometimes it can be nice to store the changes too, instead of or in addition to the boolean.  Not sure if its called for here.\n",
        "created_at": "2014-01-31T04:50:36Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334426",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334426"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334426"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334441",
        "pull_request_review_id": null,
        "id": 9334441,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQ0NDE=",
        "diff_hunk": "@@ -420,7 +445,58 @@ Controller.prototype.setupConnectionEvents = function() {\n   this.connection.on('focus', function() { controller.emit('focus') });\n   this.connection.on('blur', function() { controller.emit('blur') });\n   this.connection.on('protocol', function(protocol) { controller.emit('protocol', protocol); });\n-  this.connection.on('deviceConnect', function(evt) { controller.emit(evt.state ? 'deviceConnected' : 'deviceDisconnected'); });\n+  this.connection.on('deviceEvent', function(evt) {\n+    var outEvent = 'deviceEvent';\n+\t  var info = evt.state;\n+\t  var oldInfo = controller.deviceList[info.id];\n+\t  \n+    //Grab a list of changed properties in the device info\n+\t  var changed = {};\n+\t  for(var property in info) {\n+\t    //If a property i doesn't exist the cache, or has changed...\n+\t    if( !oldInfo || !oldInfo.hasOwnProperty(property) || oldInfo[property] != info[property] ) {\n+\t  \t  changed[property] = true;\n+\t    }\n+\t  }\n+   \n+    //Update the device list\n+    controller.deviceList[info.id] = info;\n+   \n+    //Fire events based on change list\n+    if(changed.attached) {\n+\t    controller.emit(info.attached ? 'deviceAttached' : 'deviceRemoved', info);\n+\t  }\n+   \n+\t  if(changed.streaming) {\n+      if(info.streaming) {\n+        controller.streamingCount++;\n+        controller.emit('deviceStreaming', info);\n+        if( controller.streamingCount == 1 ) {\n+          controller.emit('streamingStarted', info);\n+        }\n+        //if attached & streaming both change to true at the same time, that device was streaming\n+        //already when we connected.\n+        if(!changed.attached) {\n+          controller.emit('deviceConnected');\n+        }\n+      }\n+      //Since when devices are attached all fields have changed, don't send events for streaming being false.\n+      else if(!(changed.attached && info.attached)) { \n+        controller.streamingCount--;\n+        controller.emit('deviceStopped', info);\n+        if(controller.streamingCount == 0){\n+          controller.emit('streamingStopped', info);\n+        }\n+        controller.emit('deviceDisconnected');\n+      }\n+    }\n+  });\n+  \n+  controller.on('newListener', function(event,listener) {\n+    if( event == 'deviceConnected' || event == 'deviceDisconnected' ) {\n+      console.warn(event + \" events are depricated.  Consider using 'streamingStarted/Stopped' or 'deviceStreaming/deviceStopped' instead\");",
        "path": "leap.js",
        "position": null,
        "original_position": 113,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":yellow_heart: \n",
        "created_at": "2014-01-31T04:52:36Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334441",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334441"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334441"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334444",
        "pull_request_review_id": null,
        "id": 9334444,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQ0NDQ=",
        "diff_hunk": "@@ -2262,6 +2338,7 @@ var chooseProtocol = exports.chooseProtocol = function(header) {\n     case 2:\n     case 3:\n     case 4:\n+\tcase 5:",
        "path": "leap.js",
        "position": null,
        "original_position": 123,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "indentation\n",
        "created_at": "2014-01-31T04:52:51Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334444",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334444"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334444"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334474",
        "pull_request_review_id": null,
        "id": 9334474,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQ0NzQ=",
        "diff_hunk": "@@ -420,7 +445,58 @@ Controller.prototype.setupConnectionEvents = function() {\n   this.connection.on('focus', function() { controller.emit('focus') });\n   this.connection.on('blur', function() { controller.emit('blur') });\n   this.connection.on('protocol', function(protocol) { controller.emit('protocol', protocol); });\n-  this.connection.on('deviceConnect', function(evt) { controller.emit(evt.state ? 'deviceConnected' : 'deviceDisconnected'); });\n+  this.connection.on('deviceEvent', function(evt) {\n+    var outEvent = 'deviceEvent';",
        "path": "leap.js",
        "position": null,
        "original_position": 65,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "unused var\n",
        "created_at": "2014-01-31T04:55:36Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334474",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334474"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334474"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334486",
        "pull_request_review_id": null,
        "id": 9334486,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQ0ODY=",
        "diff_hunk": "@@ -420,7 +445,58 @@ Controller.prototype.setupConnectionEvents = function() {\n   this.connection.on('focus', function() { controller.emit('focus') });\n   this.connection.on('blur', function() { controller.emit('blur') });\n   this.connection.on('protocol', function(protocol) { controller.emit('protocol', protocol); });\n-  this.connection.on('deviceConnect', function(evt) { controller.emit(evt.state ? 'deviceConnected' : 'deviceDisconnected'); });\n+  this.connection.on('deviceEvent', function(evt) {\n+    var outEvent = 'deviceEvent';\n+\t  var info = evt.state;\n+\t  var oldInfo = controller.deviceList[info.id];\n+\t  \n+    //Grab a list of changed properties in the device info\n+\t  var changed = {};\n+\t  for(var property in info) {\n+\t    //If a property i doesn't exist the cache, or has changed...\n+\t    if( !oldInfo || !oldInfo.hasOwnProperty(property) || oldInfo[property] != info[property] ) {\n+\t  \t  changed[property] = true;\n+\t    }\n+\t  }\n+   \n+    //Update the device list\n+    controller.deviceList[info.id] = info;\n+   \n+    //Fire events based on change list\n+    if(changed.attached) {\n+\t    controller.emit(info.attached ? 'deviceAttached' : 'deviceRemoved', info);\n+\t  }\n+   \n+\t  if(changed.streaming) {\n+      if(info.streaming) {\n+        controller.streamingCount++;\n+        controller.emit('deviceStreaming', info);\n+        if( controller.streamingCount == 1 ) {\n+          controller.emit('streamingStarted', info);\n+        }\n+        //if attached & streaming both change to true at the same time, that device was streaming\n+        //already when we connected.\n+        if(!changed.attached) {\n+          controller.emit('deviceConnected');\n+        }\n+      }\n+      //Since when devices are attached all fields have changed, don't send events for streaming being false.\n+      else if(!(changed.attached && info.attached)) { \n+        controller.streamingCount--;\n+        controller.emit('deviceStopped', info);\n+        if(controller.streamingCount == 0){\n+          controller.emit('streamingStopped', info);\n+        }\n+        controller.emit('deviceDisconnected');\n+      }\n+    }\n+  });\n+  \n+  controller.on('newListener', function(event,listener) {",
        "path": "leap.js",
        "position": null,
        "original_position": 111,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should use 'this' here as not inside a callback\n",
        "created_at": "2014-01-31T04:56:15Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334486",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334486"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334486"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334506",
        "pull_request_review_id": null,
        "id": 9334506,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzQ1MDY=",
        "diff_hunk": "@@ -420,7 +445,58 @@ Controller.prototype.setupConnectionEvents = function() {\n   this.connection.on('focus', function() { controller.emit('focus') });\n   this.connection.on('blur', function() { controller.emit('blur') });\n   this.connection.on('protocol', function(protocol) { controller.emit('protocol', protocol); });\n-  this.connection.on('deviceConnect', function(evt) { controller.emit(evt.state ? 'deviceConnected' : 'deviceDisconnected'); });\n+  this.connection.on('deviceEvent', function(evt) {\n+    var outEvent = 'deviceEvent';\n+\t  var info = evt.state;\n+\t  var oldInfo = controller.deviceList[info.id];\n+\t  \n+    //Grab a list of changed properties in the device info\n+\t  var changed = {};\n+\t  for(var property in info) {\n+\t    //If a property i doesn't exist the cache, or has changed...\n+\t    if( !oldInfo || !oldInfo.hasOwnProperty(property) || oldInfo[property] != info[property] ) {\n+\t  \t  changed[property] = true;\n+\t    }\n+\t  }\n+   \n+    //Update the device list\n+    controller.deviceList[info.id] = info;\n+   \n+    //Fire events based on change list\n+    if(changed.attached) {\n+\t    controller.emit(info.attached ? 'deviceAttached' : 'deviceRemoved', info);\n+\t  }\n+   \n+\t  if(changed.streaming) {",
        "path": "leap.js",
        "position": null,
        "original_position": 86,
        "commit_id": "60cf7e8037c7c85638b546e9e4f1e4126656a46b",
        "original_commit_id": "4ca5c2d2b72ba63a9425340cac6085cb98612461",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use early return here to reduce christmas treeing\n",
        "created_at": "2014-01-31T04:58:49Z",
        "updated_at": "2014-02-19T21:24:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334506",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/9334506"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/137#discussion_r9334506"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10499931",
        "pull_request_review_id": null,
        "id": 10499931,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDk5OTMx",
        "diff_hunk": "@@ -633,6 +644,8 @@ Controller.prototype.stopUsing = function (pluginName) {\n       extMethodHashes = this._pluginExtendedMethods[pluginName],\n       i = 0, klass, extMethodHash;\n \n+  if (!this.plugins[pluginName]) return;",
        "path": "leap.js",
        "position": 36,
        "original_position": 36,
        "commit_id": "ed1dd29b9b78a0491b0d42c8f07e16cfd028beed",
        "original_commit_id": "55783b3457b959a0721d478f2999ead528007000",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> @Peter Why this? `if (!this.plugins[pluginName]) return;` (PR 156, line 647)\n> Line 596: `this.plugins[pluginName] = options;`\n> JS is single threaded, so could that if block ever execute?\n\nSure.  If someone calls stopUsing before use, this will be the case. Note which method this code is in.\n",
        "created_at": "2014-03-11T23:39:19Z",
        "updated_at": "2014-03-12T18:29:54Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/156#discussion_r10499931",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/156",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10499931"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/156#discussion_r10499931"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/156"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10779820",
        "pull_request_review_id": null,
        "id": 10779820,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzc5ODIw",
        "diff_hunk": "@@ -273,10 +275,21 @@ var Controller = module.exports = function(opts) {\n \n   opts = _.defaults(opts || {}, {\n     frameEventName: this.useAnimationLoop() ? 'animationFrame' : 'deviceFrame',\n-    suppressAnimationLoop: false\n+    suppressAnimationLoop: !this.useAnimationLoop(),\n+    loopWhileDisconnected: false\n   });\n \n+  this.animationFrameRequested = false;\n+  this.onAnimationFrame = function() {\n+    controller.emit('animationFrame', controller.lastConnectionFrame);\n+    if (controller.loopWhileDisconnected && (controller.connection.focusedState || controller.connection.opts.background) ){\n+      window.requestAnimationFrame(controller.onAnimationFrame);\n+    }else{\n+      controller.animationFrameRequested = false;\n+    }\n+  }\n   this.suppressAnimationLoop = opts.suppressAnimationLoop;\n+  this.loopWhileDisconnected = opts.loopWhileDisconnected;\n   this.frameEventName = opts.frameEventName;\n   this.useAllPlugins = opts.useAllPlugins || false;",
        "path": "leap.js",
        "position": 39,
        "original_position": 39,
        "commit_id": "1f40ff3a198db8b70f9333c87f82c6bed2ae8a12",
        "original_commit_id": "1f40ff3a198db8b70f9333c87f82c6bed2ae8a12",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unrelated to these changes, but shouldn't this `|| false` be put in the `_.defaults` above (line 276)?\n",
        "created_at": "2014-03-20T01:26:57Z",
        "updated_at": "2014-03-20T01:26:57Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/157#discussion_r10779820",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/157",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10779820"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/157#discussion_r10779820"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10779846",
        "pull_request_review_id": null,
        "id": 10779846,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzc5ODQ2",
        "diff_hunk": "@@ -1,5 +1,13 @@\n # Changelog\n \n+## 0.4.3\n+ - Added a new controller option `loopWhileDisconnected` which defaults to true (legacy behavior) and can be set",
        "path": "CHANGELOG.md",
        "position": 4,
        "original_position": 4,
        "commit_id": "1f40ff3a198db8b70f9333c87f82c6bed2ae8a12",
        "original_commit_id": "1f40ff3a198db8b70f9333c87f82c6bed2ae8a12",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "+1 for defaulting to legacy behavior when an optimization feature is added.\n",
        "created_at": "2014-03-20T01:28:23Z",
        "updated_at": "2014-03-20T01:28:23Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/157#discussion_r10779846",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/157",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10779846"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/157#discussion_r10779846"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/157"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832265",
        "pull_request_review_id": null,
        "id": 10832265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODMyMjY1",
        "diff_hunk": "@@ -222,7 +221,30 @@ BrowserConnection.prototype.stopFocusLoop = function() {\n   delete this.focusDetectorTimer;\n }\n \n-},{\"./base\":3,\"underscore\":22}],5:[function(require,module,exports){\n+},{\"./base\":2,\"underscore\":21}],4:[function(require,module,exports){\n+var WebSocket = require('ws')\n+  , BaseConnection = require('./base')\n+  , _ = require('underscore');\n+\n+var NodeConnection = module.exports = function(opts) {\n+  BaseConnection.call(this, opts);\n+  var connection = this;\n+  this.on('ready', function() { connection.reportFocus(true); });\n+}\n+\n+_.extend(NodeConnection.prototype, BaseConnection.prototype);\n+\n+NodeConnection.prototype.setupSocket = function() {\n+  var connection = this;\n+  var socket = new WebSocket(this.getUrl());\n+  socket.on('open', function() { connection.handleOpen(); });\n+  socket.on('message', function(m) { connection.handleData(m); });\n+  socket.on('close', function(code, reason) { connection.handleClose(code, reason); });\n+  socket.on('error', function() { connection.startReconnection(); });\n+  return socket;\n+}\n+\n+},{\"./base\":2,\"underscore\":21,\"ws\":22}],5:[function(require,module,exports){",
        "path": "leap-0.4.3.js",
        "position": null,
        "original_position": 68,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It looks like this effectively undoes Josh's fix in PR #153.\n",
        "created_at": "2014-03-21T11:00:57Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832265",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832265"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832366",
        "pull_request_review_id": null,
        "id": 10832366,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODMyMzY2",
        "diff_hunk": "@@ -1,7 +1,7 @@\n <html>\n   <head>\n     <title>Dumper - Leap</title>\n-    <script src=\"../leap.js\"></script>\n+    <script src=\"../leap-0.4.3.js\"></script>",
        "path": "examples/dumper.html",
        "position": 5,
        "original_position": 5,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This appears terribly brittle to me, and these will be updated for every version release. :-1:\n",
        "created_at": "2014-03-21T11:04:58Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832366",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832366"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832366"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832457",
        "pull_request_review_id": null,
        "id": 10832457,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODMyNDU3",
        "diff_hunk": "@@ -1,5 +1,6 @@\n+// This file is automatically updated from package.json by grunt.",
        "path": "lib/version.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is a `lib/*.js` file generated from `package.json`? Shouldn't all `lib/*.js` files be source, not product?\n",
        "created_at": "2014-03-21T11:08:47Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832457",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832457"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832457"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832570",
        "pull_request_review_id": null,
        "id": 10832570,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODMyNTcw",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+module.exports = function(grunt){\n+  var filename = \"leap-<%= pkg.version %>\"\n+  var banner = \"/*!                                                              \\\n+\\n * LeapJS v<%= pkg.version %>                                                  \\\n+\\n * http://github.com/leapmotion/leapjs/                                        \\\n+\\n *                                                                             \\\n+\\n * Copyright 2013 LeapMotion, Inc. and other contributors                      \\\n+\\n * Released under the BSD-2-Clause license                                     \\\n+\\n * http://github.com/leapmotion/leapjs/blob/master/LICENSE.txt                 \\\n+\\n */\"\n+\n+  grunt.initConfig({\n+    pkg: grunt.file.readJSON(\"package.json\"),\n+    // This updates the version.js to match pkg.version\n+    'string-replace': {\n+      build: {\n+        files: {\n+          'lib/': 'lib/version.js',\n+          './': 'bower.json',\n+          'examples/': 'examples/*'\n+        },\n+        options:{\n+          replacements: [\n+            // version.js\n+            {\n+              pattern: /(full:\\s)'.*'/,\n+              replacement: \"$1'<%= pkg.version %>'\"\n+            },\n+            {\n+              pattern: /(major:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[0] %>\"\n+            },\n+            {\n+              pattern: /(minor:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[1] %>\"\n+            },\n+            {\n+              pattern: /(dot:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[2] %>\"\n+            },\n+            // bower.json\n+            {\n+              pattern: /\"version\": \"\\d.\\d.\\d\"/,\n+              replacement: '\"version\": \"<%= pkg.version %>\"'\n+            },\n+            // examples\n+            {\n+              pattern: /leap.*\\.js/,\n+              replacement: filename + '.js'\n+            }\n+          ]\n+        }\n+      }\n+    },\n+    clean: {\n+      build: {\n+        src: ['./leap-*.js']\n+      }\n+    },\n+    browserify: {\n+      build: {\n+        ignore: 'lib/connection/node.js',",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 62,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It seems this ignore isn't quite working.\n",
        "created_at": "2014-03-21T11:12:56Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832570",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10832570"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10832570"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10850752",
        "pull_request_review_id": null,
        "id": 10850752,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODUwNzUy",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+module.exports = function(grunt){\n+  var filename = \"leap-<%= pkg.version %>\"\n+  var banner = \"/*!                                                              \\\n+\\n * LeapJS v<%= pkg.version %>                                                  \\\n+\\n * http://github.com/leapmotion/leapjs/                                        \\\n+\\n *                                                                             \\\n+\\n * Copyright 2013 LeapMotion, Inc. and other contributors                      \\\n+\\n * Released under the BSD-2-Clause license                                     \\\n+\\n * http://github.com/leapmotion/leapjs/blob/master/LICENSE.txt                 \\\n+\\n */\"\n+\n+  grunt.initConfig({\n+    pkg: grunt.file.readJSON(\"package.json\"),\n+    // This updates the version.js to match pkg.version\n+    'string-replace': {\n+      build: {\n+        files: {\n+          'lib/': 'lib/version.js',\n+          './': 'bower.json',\n+          'examples/': 'examples/*'\n+        },\n+        options:{\n+          replacements: [\n+            // version.js\n+            {\n+              pattern: /(full:\\s)'.*'/,\n+              replacement: \"$1'<%= pkg.version %>'\"\n+            },\n+            {\n+              pattern: /(major:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[0] %>\"\n+            },\n+            {\n+              pattern: /(minor:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[1] %>\"\n+            },\n+            {\n+              pattern: /(dot:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[2] %>\"\n+            },\n+            // bower.json\n+            {\n+              pattern: /\"version\": \"\\d.\\d.\\d\"/,\n+              replacement: '\"version\": \"<%= pkg.version %>\"'\n+            },\n+            // examples\n+            {\n+              pattern: /leap.*\\.js/,\n+              replacement: filename + '.js'\n+            }\n+          ]\n+        }\n+      }\n+    },\n+    clean: {\n+      build: {\n+        src: ['./leap-*.js']\n+      }\n+    },\n+    browserify: {\n+      build: {\n+        ignore: 'lib/connection/node.js',\n+        src: 'template/entry.js',\n+        dest: filename + '.js'\n+      }\n+    },\n+    uglify: {\n+      build: {\n+        src: filename  + '.js',\n+        dest: filename + '.min.js'\n+      }\n+    },\n+    usebanner: {\n+      build: {\n+        options: {\n+          banner: banner\n+        },\n+        src: [filename + '.js', filename + '.min.js']\n+      }\n+    }\n+  });\n+\n+  grunt.loadNpmTasks('grunt-string-replace');\n+  grunt.loadNpmTasks('grunt-contrib-clean');\n+  grunt.loadNpmTasks('grunt-browserify');\n+  grunt.loadNpmTasks('grunt-contrib-uglify');\n+  grunt.loadNpmTasks('grunt-banner');",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 87,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "ngryman",
            "id": 892048,
            "node_id": "MDQ6VXNlcjg5MjA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/892048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngryman",
            "html_url": "https://github.com/ngryman",
            "followers_url": "https://api.github.com/users/ngryman/followers",
            "following_url": "https://api.github.com/users/ngryman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngryman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngryman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngryman/subscriptions",
            "organizations_url": "https://api.github.com/users/ngryman/orgs",
            "repos_url": "https://api.github.com/users/ngryman/repos",
            "events_url": "https://api.github.com/users/ngryman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngryman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You can use of [grunt-load-tasks](https://github.com/sindresorhus/load-grunt-tasks) here.\nThis basically loads all `grunt-` dependencies for you.\n",
        "created_at": "2014-03-21T19:23:45Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10850752",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10850752"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10850752"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10851416",
        "pull_request_review_id": null,
        "id": 10851416,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODUxNDE2",
        "diff_hunk": "@@ -1,7 +1,7 @@\n <html>\n   <head>\n     <title>Dumper - Leap</title>\n-    <script src=\"../leap.js\"></script>\n+    <script src=\"../leap-0.4.3.js\"></script>",
        "path": "examples/dumper.html",
        "position": 5,
        "original_position": 5,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "ngryman",
            "id": 892048,
            "node_id": "MDQ6VXNlcjg5MjA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/892048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngryman",
            "html_url": "https://github.com/ngryman",
            "followers_url": "https://api.github.com/users/ngryman/followers",
            "following_url": "https://api.github.com/users/ngryman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngryman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngryman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngryman/subscriptions",
            "organizations_url": "https://api.github.com/users/ngryman/orgs",
            "repos_url": "https://api.github.com/users/ngryman/repos",
            "events_url": "https://api.github.com/users/ngryman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngryman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Plus `bower` also takes care of referencing which version you use.\n",
        "created_at": "2014-03-21T19:40:49Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10851416",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10851416"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10851416"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852354",
        "pull_request_review_id": null,
        "id": 10852354,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODUyMzU0",
        "diff_hunk": "@@ -1,5 +1,6 @@\n+// This file is automatically updated from package.json by grunt.",
        "path": "lib/version.js",
        "position": 1,
        "original_position": 1,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is a special case, I think.  It just sets the version number to be accessible programmatically through javascript.  As such (specifically for node), it has to be something included through entry.js.\n",
        "created_at": "2014-03-21T20:08:34Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852354",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852354"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852354"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852362",
        "pull_request_review_id": null,
        "id": 10852362,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODUyMzYy",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+module.exports = function(grunt){\n+  var filename = \"leap-<%= pkg.version %>\"\n+  var banner = \"/*!                                                              \\\n+\\n * LeapJS v<%= pkg.version %>                                                  \\\n+\\n * http://github.com/leapmotion/leapjs/                                        \\\n+\\n *                                                                             \\\n+\\n * Copyright 2013 LeapMotion, Inc. and other contributors                      \\\n+\\n * Released under the BSD-2-Clause license                                     \\\n+\\n * http://github.com/leapmotion/leapjs/blob/master/LICENSE.txt                 \\\n+\\n */\"\n+\n+  grunt.initConfig({\n+    pkg: grunt.file.readJSON(\"package.json\"),\n+    // This updates the version.js to match pkg.version\n+    'string-replace': {\n+      build: {\n+        files: {\n+          'lib/': 'lib/version.js',\n+          './': 'bower.json',\n+          'examples/': 'examples/*'\n+        },\n+        options:{\n+          replacements: [\n+            // version.js\n+            {\n+              pattern: /(full:\\s)'.*'/,\n+              replacement: \"$1'<%= pkg.version %>'\"\n+            },\n+            {\n+              pattern: /(major:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[0] %>\"\n+            },\n+            {\n+              pattern: /(minor:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[1] %>\"\n+            },\n+            {\n+              pattern: /(dot:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[2] %>\"\n+            },\n+            // bower.json\n+            {\n+              pattern: /\"version\": \"\\d.\\d.\\d\"/,\n+              replacement: '\"version\": \"<%= pkg.version %>\"'\n+            },\n+            // examples\n+            {\n+              pattern: /leap.*\\.js/,\n+              replacement: filename + '.js'\n+            }\n+          ]\n+        }\n+      }\n+    },\n+    clean: {\n+      build: {\n+        src: ['./leap-*.js']\n+      }\n+    },\n+    browserify: {\n+      build: {\n+        ignore: 'lib/connection/node.js',",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 62,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "yuck.  A pain to debug too! we,rbgweljkrgbweljrghbwe\n",
        "created_at": "2014-03-21T20:08:53Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852362",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852362"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852362"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852374",
        "pull_request_review_id": null,
        "id": 10852374,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODUyMzc0",
        "diff_hunk": "@@ -0,0 +1,96 @@\n+module.exports = function(grunt){\n+  var filename = \"leap-<%= pkg.version %>\"\n+  var banner = \"/*!                                                              \\\n+\\n * LeapJS v<%= pkg.version %>                                                  \\\n+\\n * http://github.com/leapmotion/leapjs/                                        \\\n+\\n *                                                                             \\\n+\\n * Copyright 2013 LeapMotion, Inc. and other contributors                      \\\n+\\n * Released under the BSD-2-Clause license                                     \\\n+\\n * http://github.com/leapmotion/leapjs/blob/master/LICENSE.txt                 \\\n+\\n */\"\n+\n+  grunt.initConfig({\n+    pkg: grunt.file.readJSON(\"package.json\"),\n+    // This updates the version.js to match pkg.version\n+    'string-replace': {\n+      build: {\n+        files: {\n+          'lib/': 'lib/version.js',\n+          './': 'bower.json',\n+          'examples/': 'examples/*'\n+        },\n+        options:{\n+          replacements: [\n+            // version.js\n+            {\n+              pattern: /(full:\\s)'.*'/,\n+              replacement: \"$1'<%= pkg.version %>'\"\n+            },\n+            {\n+              pattern: /(major:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[0] %>\"\n+            },\n+            {\n+              pattern: /(minor:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[1] %>\"\n+            },\n+            {\n+              pattern: /(dot:\\s)\\d/,\n+              replacement: \"$1<%= pkg.version.split('.')[2] %>\"\n+            },\n+            // bower.json\n+            {\n+              pattern: /\"version\": \"\\d.\\d.\\d\"/,\n+              replacement: '\"version\": \"<%= pkg.version %>\"'\n+            },\n+            // examples\n+            {\n+              pattern: /leap.*\\.js/,\n+              replacement: filename + '.js'\n+            }\n+          ]\n+        }\n+      }\n+    },\n+    clean: {\n+      build: {\n+        src: ['./leap-*.js']\n+      }\n+    },\n+    browserify: {\n+      build: {\n+        ignore: 'lib/connection/node.js',\n+        src: 'template/entry.js',\n+        dest: filename + '.js'\n+      }\n+    },\n+    uglify: {\n+      build: {\n+        src: filename  + '.js',\n+        dest: filename + '.min.js'\n+      }\n+    },\n+    usebanner: {\n+      build: {\n+        options: {\n+          banner: banner\n+        },\n+        src: [filename + '.js', filename + '.min.js']\n+      }\n+    }\n+  });\n+\n+  grunt.loadNpmTasks('grunt-string-replace');\n+  grunt.loadNpmTasks('grunt-contrib-clean');\n+  grunt.loadNpmTasks('grunt-browserify');\n+  grunt.loadNpmTasks('grunt-contrib-uglify');\n+  grunt.loadNpmTasks('grunt-banner');",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 87,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "great! I'll give it a go\n",
        "created_at": "2014-03-21T20:09:06Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852374",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852374"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852374"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852439",
        "pull_request_review_id": null,
        "id": 10852439,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODUyNDM5",
        "diff_hunk": "@@ -1,7 +1,7 @@\n <html>\n   <head>\n     <title>Dumper - Leap</title>\n-    <script src=\"../leap.js\"></script>\n+    <script src=\"../leap-0.4.3.js\"></script>",
        "path": "examples/dumper.html",
        "position": 5,
        "original_position": 5,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So currently these are automatically updated by grunt string replace, which I have fallen in love with.\n\n@ngryman Are you recommending using bower to install the js for these examples?\n",
        "created_at": "2014-03-21T20:10:40Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852439",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852439"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852439"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852461",
        "pull_request_review_id": null,
        "id": 10852461,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODUyNDYx",
        "diff_hunk": "@@ -222,7 +221,30 @@ BrowserConnection.prototype.stopFocusLoop = function() {\n   delete this.focusDetectorTimer;\n }\n \n-},{\"./base\":3,\"underscore\":22}],5:[function(require,module,exports){\n+},{\"./base\":2,\"underscore\":21}],4:[function(require,module,exports){\n+var WebSocket = require('ws')\n+  , BaseConnection = require('./base')\n+  , _ = require('underscore');\n+\n+var NodeConnection = module.exports = function(opts) {\n+  BaseConnection.call(this, opts);\n+  var connection = this;\n+  this.on('ready', function() { connection.reportFocus(true); });\n+}\n+\n+_.extend(NodeConnection.prototype, BaseConnection.prototype);\n+\n+NodeConnection.prototype.setupSocket = function() {\n+  var connection = this;\n+  var socket = new WebSocket(this.getUrl());\n+  socket.on('open', function() { connection.handleOpen(); });\n+  socket.on('message', function(m) { connection.handleData(m); });\n+  socket.on('close', function(code, reason) { connection.handleClose(code, reason); });\n+  socket.on('error', function() { connection.startReconnection(); });\n+  return socket;\n+}\n+\n+},{\"./base\":2,\"underscore\":21,\"ws\":22}],5:[function(require,module,exports){",
        "path": "leap-0.4.3.js",
        "position": null,
        "original_position": 68,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "d'oh, good call.  Gotta fix that ignore line.\n",
        "created_at": "2014-03-21T20:11:07Z",
        "updated_at": "2014-03-25T04:58:34Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852461",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10852461"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10852461"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10947462",
        "pull_request_review_id": null,
        "id": 10947462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTQ3NDYy",
        "diff_hunk": "@@ -1,7 +1,7 @@\n <html>\n   <head>\n     <title>Dumper - Leap</title>\n-    <script src=\"../leap.js\"></script>\n+    <script src=\"../leap-0.4.3.js\"></script>",
        "path": "examples/dumper.html",
        "position": 5,
        "original_position": 5,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "ngryman",
            "id": 892048,
            "node_id": "MDQ6VXNlcjg5MjA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/892048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngryman",
            "html_url": "https://github.com/ngryman",
            "followers_url": "https://api.github.com/users/ngryman/followers",
            "following_url": "https://api.github.com/users/ngryman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngryman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngryman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngryman/subscriptions",
            "organizations_url": "https://api.github.com/users/ngryman/orgs",
            "repos_url": "https://api.github.com/users/ngryman/repos",
            "events_url": "https://api.github.com/users/ngryman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngryman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not really as this is part of you project.\n\nWhat I meant earlier is that if you are publishing on `bower` and/or `npm`, you don't need to burn the version number in the filename. Basically you don't need to handle your version number manually at all.\n\nYou should only update respectively your `bower.json` and and `package.json` when doing a release.\nThen user `install` or `update`, and that's it.\n\nYou can take a look at several project using both `bower` and `npm`, [jQuery](https://github.com/jquery/jquery) would be the most famous. They build `dist/jquery.js` and `dist/jquery.min.js` and only rely on `bower`/`npm` to manage the version.\n",
        "created_at": "2014-03-25T19:02:26Z",
        "updated_at": "2014-03-25T19:02:26Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10947462",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10947462"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10947462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10947579",
        "pull_request_review_id": null,
        "id": 10947579,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTQ3NTc5",
        "diff_hunk": "@@ -1,7 +1,7 @@\n <html>\n   <head>\n     <title>Dumper - Leap</title>\n-    <script src=\"../leap.js\"></script>\n+    <script src=\"../leap-0.4.3.js\"></script>",
        "path": "examples/dumper.html",
        "position": 5,
        "original_position": 5,
        "commit_id": "eddf006b71650b1219983ff3fd13ada3122f6269",
        "original_commit_id": "c8c99404632b64b7ecdc87e219f33317451aee79",
        "user": {
            "login": "ngryman",
            "id": 892048,
            "node_id": "MDQ6VXNlcjg5MjA0OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/892048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngryman",
            "html_url": "https://github.com/ngryman",
            "followers_url": "https://api.github.com/users/ngryman/followers",
            "following_url": "https://api.github.com/users/ngryman/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngryman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngryman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngryman/subscriptions",
            "organizations_url": "https://api.github.com/users/ngryman/orgs",
            "repos_url": "https://api.github.com/users/ngryman/repos",
            "events_url": "https://api.github.com/users/ngryman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngryman/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would add that it also avoids the end user to `bower|npm update` AND change the version manually in referencing files. This is redundant.\n",
        "created_at": "2014-03-25T19:04:40Z",
        "updated_at": "2014-03-25T19:05:07Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10947579",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/161",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10947579"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/161#discussion_r10947579"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/161"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109438",
        "pull_request_review_id": null,
        "id": 10109438,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTA5NDM4",
        "diff_hunk": "@@ -1,68 +1,118 @@\n-require(\"./_header\")\n+require(\"./_header\");\n /**\n  * Leap is the global namespace of the Leap API.\n  * @namespace Leap\n  */\n+\n+var Pointable = require(\"./pointable\");\n+var Frame = require(\"./frame\");\n+var Hand = require(\"./hand\");\n+var Gesture = require(\"./gesture\");\n+var matrix = require(\"gl-matrix\");\n+\n+require('./invalid')(Pointable, Frame, Hand, Gesture);\n+\n module.exports = {",
        "path": "lib/index.js",
        "position": null,
        "original_position": 16,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Indentation should be kept at 2 spaces to be similar to the rest of the project, rather than changed to 4.\n",
        "created_at": "2014-02-27T01:53:24Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109438",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109438"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109438"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109484",
        "pull_request_review_id": null,
        "id": 10109484,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTA5NDg0",
        "diff_hunk": "@@ -1,68 +1,118 @@\n-require(\"./_header\")\n+require(\"./_header\");\n /**\n  * Leap is the global namespace of the Leap API.\n  * @namespace Leap\n  */\n+\n+var Pointable = require(\"./pointable\");\n+var Frame = require(\"./frame\");\n+var Hand = require(\"./hand\");\n+var Gesture = require(\"./gesture\");\n+var matrix = require(\"gl-matrix\");\n+\n+require('./invalid')(Pointable, Frame, Hand, Gesture);\n+\n module.exports = {\n-  Controller: require(\"./controller\"),\n-  Frame: require(\"./frame\"),\n-  Gesture: require(\"./gesture\"),\n-  Hand: require(\"./hand\"),\n-  Pointable: require(\"./pointable\"),\n-  InteractionBox: require(\"./interaction_box\"),\n-  CircularBuffer: require(\"./circular_buffer\"),\n-  UI: require(\"./ui\"),\n-  glMatrix: require(\"gl-matrix\"),\n-  mat3: require(\"gl-matrix\").mat3,\n-  vec3: require(\"gl-matrix\").vec3,\n-  loopController: undefined,\n-  version: require('./version.js'),\n-  /**\n-   * The Leap.loop() function passes a frame of Leap data to your\n-   * callback function and then calls window.requestAnimationFrame() after\n-   * executing your callback function.\n-   *\n-   * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n-   * You do not need to create your own controller when using this method.\n-   *\n-   * Your callback function is called on an interval determined by the client\n-   * browser. Typically, this is on an interval of 60 frames/second. The most\n-   * recent frame of Leap data is passed to your callback function. If the Leap\n-   * is producing frames at a slower rate than the browser frame rate, the same\n-   * frame of Leap data can be passed to your function in successive animation\n-   * updates.\n-   *\n-   * As an alternative, you can create your own Controller object and use a\n-   * {@link Controller#onFrame onFrame} callback to process the data at\n-   * the frame rate of the Leap device. See {@link Controller} for an\n-   * example.\n-   *\n-   * @method Leap.loop\n-   * @param {function} callback A function called when the browser is ready to\n-   * draw to the screen. The most recent {@link Frame} object is passed to\n-   * your callback function.\n-   *\n-   * ```javascript\n-   *    Leap.loop( function( frame ) {\n+    Controller:     require(\"./controller\"),\n+    Frame:          Frame,\n+    Gesture:        Gesture,\n+    Hand:           Hand,\n+    Pointable:      Pointable,\n+    InteractionBox: require(\"./interaction_box\"),\n+    CircularBuffer: require(\"./circular_buffer\"),\n+    UI:             require(\"./ui\"),\n+    glMatrix:       matrix,\n+    mat3:           matrix.mat3,\n+    vec3:           matrix.vec3,\n+    loopController: undefined,\n+    version:        require('./version.js'),\n+    /**\n+     * The Leap.loop() function passes a frame of Leap data to your\n+     * callback function and then calls window.requestAnimationFrame() after\n+     * executing your callback function.\n+     *\n+     * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n+     * You do not need to create your own controller when using this method.\n+     *\n+     * Your callback function is called on an interval determined by the client\n+     * browser. Typically, this is on an interval of 60 frames/second. The most\n+     * recent frame of Leap data is passed to your callback function. If the Leap\n+     * is producing frames at a slower rate than the browser frame rate, the same\n+     * frame of Leap data can be passed to your function in successive animation\n+     * updates.\n+     *\n+     * As an alternative, you can create your own Controller object and use a\n+     * {@link Controller#onFrame onFrame} callback to process the data at\n+     * the frame rate of the Leap device. See {@link Controller} for an\n+     * example.\n+     *\n+     * @method Leap.loop\n+     * @param {function} callback A function called when the browser is ready to\n+     * draw to the screen. The most recent {@link Frame} object is passed to\n+     * your callback function.\n+     *\n+     * ```javascript\n+     *    Leap.loop( function( frame ) {\n    *        // ... your code here\n    *    })\n-   * ```\n-   */\n-  loop: function(opts, callback) {\n-    if (callback === undefined) {\n-      callback = opts;\n-      opts = {};\n-    }\n-    opts.useAllPlugins || (opts.useAllPlugins = true)\n-    if (!this.loopController) this.loopController = new this.Controller(opts);\n-    this.loopController.loop(callback);\n-    return this.loopController;\n-  },\n+     * ```\n+     */\n+    loop:           function (opts, callback) {\n+        if (callback === undefined) {\n+            callback = opts;\n+            opts = {};\n+        }\n+        opts.useAllPlugins || (opts.useAllPlugins = true)\n+        if (!this.loopController) {\n+            this.loopController = new this.Controller(opts);\n+        }\n+        this.loopController.loop(callback);\n+        return this.loopController;\n+    },\n+\n+    /*\n+     * Convenience method for Leap.Controller.plugin\n+     */\n+    plugin:         function (name, options) {\n+        this.Controller.plugin(name, options)\n+    },\n \n-  /*\n-   * Convenience method for Leap.Controller.plugin\n-   */\n-  plugin: function(name, options){\n-    this.Controller.plugin(name, options)\n-  }\n-}\n+    _jsonify: function (object, properties) {",
        "path": "lib/index.js",
        "position": null,
        "original_position": 140,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What does this method to that `JSON.stringify` does not? We should avoid having to write our own JSON creator if at all possible\n",
        "created_at": "2014-02-27T01:55:26Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109484",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109484"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109484"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109513",
        "pull_request_review_id": null,
        "id": 10109513,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTA5NTEz",
        "diff_hunk": "@@ -0,0 +1,75 @@\n+module.exports = function(Pointable, Frame, Hand){\n+    var _ = require('underscore')\n+        , glMatrix = require(\"gl-matrix\")\n+        , mat3 = glMatrix.mat3\n+        , vec3 = glMatrix.vec3;\n+\n+    /**\n+    * An invalid Pointable object.\n+    *\n+    * You can use this Pointable instance in comparisons testing\n+    * whether a given Pointable instance is valid or invalid. (You can also use the\n+    * Pointable.valid property.)\n+\n+    * @static\n+    * @type {Leap.Pointable}\n+    * @name Invalid\n+    * @memberof Leap.Pointable\n+    */\n+    Pointable.Invalid = {\"id\":-1,\"handId\":-1,\"length\":45,\"direction\":[1,0,0],\"stabilizedTipPosition\":[0,0,0],\"tipPosition\":[1,0,0],\"tipVelocity\":[0,0,0],\"tool\":false,\"valid\":false,\"touchZone\":\"none\"};",
        "path": "lib/invalid.js",
        "position": null,
        "original_position": 19,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't these load up the `lib/invalid_objects/frame.json` below?\n",
        "created_at": "2014-02-27T01:56:28Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109513",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109513"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109513"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109578",
        "pull_request_review_id": null,
        "id": 10109578,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTA5NTc4",
        "diff_hunk": "@@ -181,6 +181,7 @@ var Pointable = module.exports = function(data) {\n   this.timeVisible = data.timeVisible;\n }\n \n+Pointable.prototype.name = 'pointable';",
        "path": "lib/pointable.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What is this used for?  It would seem better to make the objects have well-named constructors that respond well to `instanceof`, rather than a `name` attribute.  \n\nDoes this belong in this PR?  Does JSONSchema depend on it?\n",
        "created_at": "2014-02-27T01:58:59Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109578",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109578"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109578"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109628",
        "pull_request_review_id": null,
        "id": 10109628,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTA5NjI4",
        "diff_hunk": "@@ -1,68 +1,118 @@\n-require(\"./_header\")\n+require(\"./_header\");\n /**\n  * Leap is the global namespace of the Leap API.\n  * @namespace Leap\n  */\n+\n+var Pointable = require(\"./pointable\");\n+var Frame = require(\"./frame\");\n+var Hand = require(\"./hand\");\n+var Gesture = require(\"./gesture\");\n+var matrix = require(\"gl-matrix\");\n+\n+require('./invalid')(Pointable, Frame, Hand, Gesture);\n+\n module.exports = {\n-  Controller: require(\"./controller\"),\n-  Frame: require(\"./frame\"),\n-  Gesture: require(\"./gesture\"),\n-  Hand: require(\"./hand\"),\n-  Pointable: require(\"./pointable\"),\n-  InteractionBox: require(\"./interaction_box\"),\n-  CircularBuffer: require(\"./circular_buffer\"),\n-  UI: require(\"./ui\"),\n-  glMatrix: require(\"gl-matrix\"),\n-  mat3: require(\"gl-matrix\").mat3,\n-  vec3: require(\"gl-matrix\").vec3,\n-  loopController: undefined,\n-  version: require('./version.js'),\n-  /**\n-   * The Leap.loop() function passes a frame of Leap data to your\n-   * callback function and then calls window.requestAnimationFrame() after\n-   * executing your callback function.\n-   *\n-   * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n-   * You do not need to create your own controller when using this method.\n-   *\n-   * Your callback function is called on an interval determined by the client\n-   * browser. Typically, this is on an interval of 60 frames/second. The most\n-   * recent frame of Leap data is passed to your callback function. If the Leap\n-   * is producing frames at a slower rate than the browser frame rate, the same\n-   * frame of Leap data can be passed to your function in successive animation\n-   * updates.\n-   *\n-   * As an alternative, you can create your own Controller object and use a\n-   * {@link Controller#onFrame onFrame} callback to process the data at\n-   * the frame rate of the Leap device. See {@link Controller} for an\n-   * example.\n-   *\n-   * @method Leap.loop\n-   * @param {function} callback A function called when the browser is ready to\n-   * draw to the screen. The most recent {@link Frame} object is passed to\n-   * your callback function.\n-   *\n-   * ```javascript\n-   *    Leap.loop( function( frame ) {\n+    Controller:     require(\"./controller\"),\n+    Frame:          Frame,\n+    Gesture:        Gesture,\n+    Hand:           Hand,\n+    Pointable:      Pointable,\n+    InteractionBox: require(\"./interaction_box\"),\n+    CircularBuffer: require(\"./circular_buffer\"),\n+    UI:             require(\"./ui\"),\n+    glMatrix:       matrix,\n+    mat3:           matrix.mat3,\n+    vec3:           matrix.vec3,\n+    loopController: undefined,\n+    version:        require('./version.js'),\n+    /**\n+     * The Leap.loop() function passes a frame of Leap data to your\n+     * callback function and then calls window.requestAnimationFrame() after\n+     * executing your callback function.\n+     *\n+     * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n+     * You do not need to create your own controller when using this method.\n+     *\n+     * Your callback function is called on an interval determined by the client\n+     * browser. Typically, this is on an interval of 60 frames/second. The most\n+     * recent frame of Leap data is passed to your callback function. If the Leap\n+     * is producing frames at a slower rate than the browser frame rate, the same\n+     * frame of Leap data can be passed to your function in successive animation\n+     * updates.\n+     *\n+     * As an alternative, you can create your own Controller object and use a\n+     * {@link Controller#onFrame onFrame} callback to process the data at\n+     * the frame rate of the Leap device. See {@link Controller} for an\n+     * example.\n+     *\n+     * @method Leap.loop\n+     * @param {function} callback A function called when the browser is ready to\n+     * draw to the screen. The most recent {@link Frame} object is passed to\n+     * your callback function.\n+     *\n+     * ```javascript\n+     *    Leap.loop( function( frame ) {\n    *        // ... your code here\n    *    })\n-   * ```\n-   */\n-  loop: function(opts, callback) {\n-    if (callback === undefined) {\n-      callback = opts;\n-      opts = {};\n-    }\n-    opts.useAllPlugins || (opts.useAllPlugins = true)\n-    if (!this.loopController) this.loopController = new this.Controller(opts);\n-    this.loopController.loop(callback);\n-    return this.loopController;\n-  },\n+     * ```\n+     */\n+    loop:           function (opts, callback) {\n+        if (callback === undefined) {\n+            callback = opts;\n+            opts = {};\n+        }\n+        opts.useAllPlugins || (opts.useAllPlugins = true)\n+        if (!this.loopController) {\n+            this.loopController = new this.Controller(opts);\n+        }\n+        this.loopController.loop(callback);\n+        return this.loopController;\n+    },\n+\n+    /*\n+     * Convenience method for Leap.Controller.plugin\n+     */\n+    plugin:         function (name, options) {\n+        this.Controller.plugin(name, options)\n+    },\n \n-  /*\n-   * Convenience method for Leap.Controller.plugin\n-   */\n-  plugin: function(name, options){\n-    this.Controller.plugin(name, options)\n-  }\n-}\n+    _jsonify: function (object, properties) {",
        "path": "lib/index.js",
        "position": null,
        "original_position": 140,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also - should have some unit tests and docs going on\n",
        "created_at": "2014-02-27T02:01:12Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109628",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109628"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109628"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109672",
        "pull_request_review_id": null,
        "id": 10109672,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTA5Njcy",
        "diff_hunk": "@@ -0,0 +1,143 @@\n+describe('schema', function () {\n+    describe('fakes', function () {\n+\n+        describe('pointable', function () {\n+            var finger, badFinger, badFingerDirection;\n+            var validator;\n+\n+            before(function () {\n+                finger = fakeFinger();\n+                badFinger = fakeFinger();\n+                badFingerDirection = fakeFinger();\n+                badFingerDirection.stabilizedTipPosition.push(4);\n+                delete badFinger.id;\n+                validator = new ZSchema({ sync: true });\n+            });\n+\n+            it('should pass validation', function () {\n+                var valid = validator.validate(finger, pointable_schema);\n+                assert.ok(valid, 'finger passes validation');\n+            });\n+\n+            it('should not pass validation with missing id', function () {\n+                var valid = validator.validate(badFinger, pointable_schema);\n+                assert.ok(!valid, 'bad finger does not pass validation');\n+                var valid2 = validator.validate(badFingerDirection, pointable_schema);\n+                assert.ok(!valid2, 'bad direction does not pass validation');\n+            });\n+\n+        });\n+\n+        describe('hand', function () {\n+\n+            var hand, bad_hand, tool_in_finger_hand, validator;\n+\n+            before(function () {\n+                hand = fakeHand();\n+                if (!hand.tools.length) {\n+                    var tool = fakeTool();\n+                    hand.tools.push(tool);\n+                    hand.pointables.push(tool);\n+                }\n+                bad_hand = fakeHand();\n+                delete bad_hand.id;\n+\n+                tool_in_finger_hand = fakeHand();\n+                var tool2 = fakeTool();\n+                tool_in_finger_hand.fingers.push(tool2);\n+                tool_in_finger_hand.pointables.push(tool2);\n+\n+                validator = new ZSchema({ sync: true });\n+            });\n+\n+            it('should pass validation', function () {\n+                var valid = validator.validate(hand, hand_schema);\n+                if (!valid) {\n+                    console.log('errors: %s', JSON.stringify(validator.getLastError(), true, 4));\n+                }\n+                assert.ok(valid, 'hand passes validation');\n+            });\n+\n+            it('should not pass bad hand', function () {\n+                var valid = validator.validate(bad_hand, hand_schema);\n+                assert.ok(!valid, 'bad hand is not valid');\n+            })\n+\n+            it('should not pass a hand with a tool in fingers', function () {\n+                var valid = validator.validate(tool_in_finger_hand, hand_schema);\n+                assert.ok(!valid, 'tool_in_finger_hand is not valid');\n+            })\n+        });\n+\n+        describe('frame', function () {\n+\n+            var frame, bad_frame, tool_in_finger_frame, validator;\n+\n+            before(function () {\n+                frame = fakeFrame();\n+\n+                bad_frame = fakeFrame();\n+                delete bad_frame.id;\n+\n+                tool_in_finger_frame = fakeFrame();\n+                var tool2 = fakeTool();\n+                tool_in_finger_frame.fingers.push(tool2);\n+                tool_in_finger_frame.pointables.push(tool2);\n+\n+                validator = new ZSchema({ sync: true });\n+            });\n+\n+            it('should pass validation', function () {\n+                var valid = validator.validate(frame, frame_schema);\n+                if (!valid) {\n+                    console.log('errors: %s', JSON.stringify(validator.getLastError(), true, 4));",
        "path": "test/schema.js",
        "position": 93,
        "original_position": 93,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "nice\n",
        "created_at": "2014-02-27T02:03:03Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109672",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109672"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109672"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109906",
        "pull_request_review_id": null,
        "id": 10109906,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTA5OTA2",
        "diff_hunk": "@@ -1,68 +1,118 @@\n-require(\"./_header\")\n+require(\"./_header\");\n /**\n  * Leap is the global namespace of the Leap API.\n  * @namespace Leap\n  */\n+\n+var Pointable = require(\"./pointable\");\n+var Frame = require(\"./frame\");\n+var Hand = require(\"./hand\");\n+var Gesture = require(\"./gesture\");\n+var matrix = require(\"gl-matrix\");\n+\n+require('./invalid')(Pointable, Frame, Hand, Gesture);\n+\n module.exports = {\n-  Controller: require(\"./controller\"),\n-  Frame: require(\"./frame\"),\n-  Gesture: require(\"./gesture\"),\n-  Hand: require(\"./hand\"),\n-  Pointable: require(\"./pointable\"),\n-  InteractionBox: require(\"./interaction_box\"),\n-  CircularBuffer: require(\"./circular_buffer\"),\n-  UI: require(\"./ui\"),\n-  glMatrix: require(\"gl-matrix\"),\n-  mat3: require(\"gl-matrix\").mat3,\n-  vec3: require(\"gl-matrix\").vec3,\n-  loopController: undefined,\n-  version: require('./version.js'),\n-  /**\n-   * The Leap.loop() function passes a frame of Leap data to your\n-   * callback function and then calls window.requestAnimationFrame() after\n-   * executing your callback function.\n-   *\n-   * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n-   * You do not need to create your own controller when using this method.\n-   *\n-   * Your callback function is called on an interval determined by the client\n-   * browser. Typically, this is on an interval of 60 frames/second. The most\n-   * recent frame of Leap data is passed to your callback function. If the Leap\n-   * is producing frames at a slower rate than the browser frame rate, the same\n-   * frame of Leap data can be passed to your function in successive animation\n-   * updates.\n-   *\n-   * As an alternative, you can create your own Controller object and use a\n-   * {@link Controller#onFrame onFrame} callback to process the data at\n-   * the frame rate of the Leap device. See {@link Controller} for an\n-   * example.\n-   *\n-   * @method Leap.loop\n-   * @param {function} callback A function called when the browser is ready to\n-   * draw to the screen. The most recent {@link Frame} object is passed to\n-   * your callback function.\n-   *\n-   * ```javascript\n-   *    Leap.loop( function( frame ) {\n+    Controller:     require(\"./controller\"),\n+    Frame:          Frame,\n+    Gesture:        Gesture,\n+    Hand:           Hand,\n+    Pointable:      Pointable,\n+    InteractionBox: require(\"./interaction_box\"),\n+    CircularBuffer: require(\"./circular_buffer\"),\n+    UI:             require(\"./ui\"),\n+    glMatrix:       matrix,\n+    mat3:           matrix.mat3,\n+    vec3:           matrix.vec3,\n+    loopController: undefined,\n+    version:        require('./version.js'),\n+    /**\n+     * The Leap.loop() function passes a frame of Leap data to your\n+     * callback function and then calls window.requestAnimationFrame() after\n+     * executing your callback function.\n+     *\n+     * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n+     * You do not need to create your own controller when using this method.\n+     *\n+     * Your callback function is called on an interval determined by the client\n+     * browser. Typically, this is on an interval of 60 frames/second. The most\n+     * recent frame of Leap data is passed to your callback function. If the Leap\n+     * is producing frames at a slower rate than the browser frame rate, the same\n+     * frame of Leap data can be passed to your function in successive animation\n+     * updates.\n+     *\n+     * As an alternative, you can create your own Controller object and use a\n+     * {@link Controller#onFrame onFrame} callback to process the data at\n+     * the frame rate of the Leap device. See {@link Controller} for an\n+     * example.\n+     *\n+     * @method Leap.loop\n+     * @param {function} callback A function called when the browser is ready to\n+     * draw to the screen. The most recent {@link Frame} object is passed to\n+     * your callback function.\n+     *\n+     * ```javascript\n+     *    Leap.loop( function( frame ) {\n    *        // ... your code here\n    *    })\n-   * ```\n-   */\n-  loop: function(opts, callback) {\n-    if (callback === undefined) {\n-      callback = opts;\n-      opts = {};\n-    }\n-    opts.useAllPlugins || (opts.useAllPlugins = true)\n-    if (!this.loopController) this.loopController = new this.Controller(opts);\n-    this.loopController.loop(callback);\n-    return this.loopController;\n-  },\n+     * ```\n+     */\n+    loop:           function (opts, callback) {\n+        if (callback === undefined) {\n+            callback = opts;\n+            opts = {};\n+        }\n+        opts.useAllPlugins || (opts.useAllPlugins = true)\n+        if (!this.loopController) {\n+            this.loopController = new this.Controller(opts);\n+        }\n+        this.loopController.loop(callback);\n+        return this.loopController;\n+    },\n+\n+    /*\n+     * Convenience method for Leap.Controller.plugin\n+     */\n+    plugin:         function (name, options) {\n+        this.Controller.plugin(name, options)\n+    },\n \n-  /*\n-   * Convenience method for Leap.Controller.plugin\n-   */\n-  plugin: function(name, options){\n-    this.Controller.plugin(name, options)\n-  }\n-}\n+    _jsonify: function (object, properties) {",
        "path": "lib/index.js",
        "position": null,
        "original_position": 140,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "http://stackoverflow.com/questions/9382167/serializing-object-that-contains-cyclic-object-value\n",
        "created_at": "2014-02-27T02:13:30Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109906",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10109906"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10109906"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10141519",
        "pull_request_review_id": null,
        "id": 10141519,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTQxNTE5",
        "diff_hunk": "@@ -181,6 +181,7 @@ var Pointable = module.exports = function(data) {\n   this.timeVisible = data.timeVisible;\n }\n \n+Pointable.prototype.name = 'pointable';",
        "path": "lib/pointable.js",
        "position": 4,
        "original_position": 4,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "bingomanatee",
            "id": 684016,
            "node_id": "MDQ6VXNlcjY4NDAxNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/684016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bingomanatee",
            "html_url": "https://github.com/bingomanatee",
            "followers_url": "https://api.github.com/users/bingomanatee/followers",
            "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
            "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
            "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
            "repos_url": "https://api.github.com/users/bingomanatee/repos",
            "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is work product from my creation of toJSON -- its not absolutely necessary, but when looking at objects in your application, it is sometimes nice to have the type explicit\n",
        "created_at": "2014-02-27T20:45:04Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10141519",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10141519"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10141519"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10141591",
        "pull_request_review_id": null,
        "id": 10141591,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTQxNTkx",
        "diff_hunk": "@@ -1,68 +1,118 @@\n-require(\"./_header\")\n+require(\"./_header\");\n /**\n  * Leap is the global namespace of the Leap API.\n  * @namespace Leap\n  */\n+\n+var Pointable = require(\"./pointable\");\n+var Frame = require(\"./frame\");\n+var Hand = require(\"./hand\");\n+var Gesture = require(\"./gesture\");\n+var matrix = require(\"gl-matrix\");\n+\n+require('./invalid')(Pointable, Frame, Hand, Gesture);\n+\n module.exports = {\n-  Controller: require(\"./controller\"),\n-  Frame: require(\"./frame\"),\n-  Gesture: require(\"./gesture\"),\n-  Hand: require(\"./hand\"),\n-  Pointable: require(\"./pointable\"),\n-  InteractionBox: require(\"./interaction_box\"),\n-  CircularBuffer: require(\"./circular_buffer\"),\n-  UI: require(\"./ui\"),\n-  glMatrix: require(\"gl-matrix\"),\n-  mat3: require(\"gl-matrix\").mat3,\n-  vec3: require(\"gl-matrix\").vec3,\n-  loopController: undefined,\n-  version: require('./version.js'),\n-  /**\n-   * The Leap.loop() function passes a frame of Leap data to your\n-   * callback function and then calls window.requestAnimationFrame() after\n-   * executing your callback function.\n-   *\n-   * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n-   * You do not need to create your own controller when using this method.\n-   *\n-   * Your callback function is called on an interval determined by the client\n-   * browser. Typically, this is on an interval of 60 frames/second. The most\n-   * recent frame of Leap data is passed to your callback function. If the Leap\n-   * is producing frames at a slower rate than the browser frame rate, the same\n-   * frame of Leap data can be passed to your function in successive animation\n-   * updates.\n-   *\n-   * As an alternative, you can create your own Controller object and use a\n-   * {@link Controller#onFrame onFrame} callback to process the data at\n-   * the frame rate of the Leap device. See {@link Controller} for an\n-   * example.\n-   *\n-   * @method Leap.loop\n-   * @param {function} callback A function called when the browser is ready to\n-   * draw to the screen. The most recent {@link Frame} object is passed to\n-   * your callback function.\n-   *\n-   * ```javascript\n-   *    Leap.loop( function( frame ) {\n+    Controller:     require(\"./controller\"),\n+    Frame:          Frame,\n+    Gesture:        Gesture,\n+    Hand:           Hand,\n+    Pointable:      Pointable,\n+    InteractionBox: require(\"./interaction_box\"),\n+    CircularBuffer: require(\"./circular_buffer\"),\n+    UI:             require(\"./ui\"),\n+    glMatrix:       matrix,\n+    mat3:           matrix.mat3,\n+    vec3:           matrix.vec3,\n+    loopController: undefined,\n+    version:        require('./version.js'),\n+    /**\n+     * The Leap.loop() function passes a frame of Leap data to your\n+     * callback function and then calls window.requestAnimationFrame() after\n+     * executing your callback function.\n+     *\n+     * Leap.loop() sets up the Leap controller and WebSocket connection for you.\n+     * You do not need to create your own controller when using this method.\n+     *\n+     * Your callback function is called on an interval determined by the client\n+     * browser. Typically, this is on an interval of 60 frames/second. The most\n+     * recent frame of Leap data is passed to your callback function. If the Leap\n+     * is producing frames at a slower rate than the browser frame rate, the same\n+     * frame of Leap data can be passed to your function in successive animation\n+     * updates.\n+     *\n+     * As an alternative, you can create your own Controller object and use a\n+     * {@link Controller#onFrame onFrame} callback to process the data at\n+     * the frame rate of the Leap device. See {@link Controller} for an\n+     * example.\n+     *\n+     * @method Leap.loop\n+     * @param {function} callback A function called when the browser is ready to\n+     * draw to the screen. The most recent {@link Frame} object is passed to\n+     * your callback function.\n+     *\n+     * ```javascript\n+     *    Leap.loop( function( frame ) {\n    *        // ... your code here\n    *    })\n-   * ```\n-   */\n-  loop: function(opts, callback) {\n-    if (callback === undefined) {\n-      callback = opts;\n-      opts = {};\n-    }\n-    opts.useAllPlugins || (opts.useAllPlugins = true)\n-    if (!this.loopController) this.loopController = new this.Controller(opts);\n-    this.loopController.loop(callback);\n-    return this.loopController;\n-  },\n+     * ```\n+     */\n+    loop:           function (opts, callback) {\n+        if (callback === undefined) {\n+            callback = opts;\n+            opts = {};\n+        }\n+        opts.useAllPlugins || (opts.useAllPlugins = true)\n+        if (!this.loopController) {\n+            this.loopController = new this.Controller(opts);\n+        }\n+        this.loopController.loop(callback);\n+        return this.loopController;\n+    },\n+\n+    /*\n+     * Convenience method for Leap.Controller.plugin\n+     */\n+    plugin:         function (name, options) {\n+        this.Controller.plugin(name, options)\n+    },\n \n-  /*\n-   * Convenience method for Leap.Controller.plugin\n-   */\n-  plugin: function(name, options){\n-    this.Controller.plugin(name, options)\n-  }\n-}\n+    _jsonify: function (object, properties) {",
        "path": "lib/index.js",
        "position": null,
        "original_position": 140,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "23a68df2ed869588fa1f98c6408cdb9437466cec",
        "user": {
            "login": "bingomanatee",
            "id": 684016,
            "node_id": "MDQ6VXNlcjY4NDAxNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/684016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bingomanatee",
            "html_url": "https://github.com/bingomanatee",
            "followers_url": "https://api.github.com/users/bingomanatee/followers",
            "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
            "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
            "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
            "repos_url": "https://api.github.com/users/bingomanatee/repos",
            "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "JSON.stringify crashes for circular objects; also it includes all the properties indiscriminately. \n\nHaving custom toJSON allows us to only expose those properties that include public data. \n",
        "created_at": "2014-02-27T20:46:37Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10141591",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10141591"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10141591"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548534",
        "pull_request_review_id": null,
        "id": 10548534,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTQ4NTM0",
        "diff_hunk": "@@ -0,0 +1,76 @@\n+module.exports = function(Pointable, Frame, Hand){\n+    var _ = require('underscore')\n+        , glMatrix = require(\"gl-matrix\")\n+        , mat3 = glMatrix.mat3\n+        , vec3 = glMatrix.vec3;\n+\n+    /**\n+    * An invalid Pointable object.\n+    *\n+    * You can use this Pointable instance in comparisons testing\n+    * whether a given Pointable instance is valid or invalid. (You can also use the\n+    * Pointable.valid property.)\n+\n+    * @static\n+    * @type {Leap.Pointable}\n+    * @name Invalid\n+    * @memberof Leap.Pointable\n+    */\n+    Pointable.Invalid = <%= JSON.stringify(invalid_pointable) %>;\n+    Pointable.InvalidTool = <%= JSON.stringify(invalid_tool) %>;\n+    Pointable.InvalidFinger = <%= JSON.stringify(invalid_finger) %>;\n+\n+    /**\n+    * An invalid Hand object.\n+    *\n+    * You can use an invalid Hand object in comparisons testing\n+    * whether a given Hand instance is valid or invalid. (You can also use the\n+    * Hand valid property.)\n+    *\n+    * @static\n+    * @type {Leap.Hand}\n+    * @name Invalid\n+    * @memberof Leap.Hand\n+    */\n+\n+    Hand.Invalid = _.extend(<%= JSON.stringify(invalid_hand) %>, {\n+        pointable: function() { return Pointable.Invalid },\n+        tool: function() { return Pointable.InvalidTool },\n+        finger: function() { return Pointable.InvalidFinger },\n+        toString: function() { return \"invalid frame\" },",
        "path": "build_tasks/templates/invalid_template.ejs",
        "position": null,
        "original_position": 40,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "should say \"invalid hand\"?\n",
        "created_at": "2014-03-13T00:21:07Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548534",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548534"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548534"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548544",
        "pull_request_review_id": null,
        "id": 10548544,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTQ4NTQ0",
        "diff_hunk": "@@ -0,0 +1,76 @@\n+module.exports = function(Pointable, Frame, Hand){",
        "path": "build_tasks/templates/invalid_template.ejs",
        "position": 1,
        "original_position": 1,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "add comment at top: \"generates invalid.js\"\n\n(and the reverse in the other file)\n",
        "created_at": "2014-03-13T00:21:32Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548544",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548544"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548544"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548643",
        "pull_request_review_id": null,
        "id": 10548643,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTQ4NjQz",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+/*global module*/\n+\n+module.exports = function (grunt) {\n+    \"use strict\";\n+\n+    // Project configuration.\n+    grunt.initConfig({\n+        pkg: grunt.file.readJSON(\"package.json\"),\n+\n+        clean: ['lib/invalid_objects/*'],\n+\n+        execute: {\n+            target: {\n+                src: ['build_tasks/make_invalid.js']\n+            }\n+        },\n+\n+        'template': {\n+            'invalid-defs': {\n+                'options': {\n+                    data: function () {\n+                        return {\n+                            invalid_pointable: require('./lib/invalid_objects/pointable.json'),\n+                            invalid_finger:    require('./lib/invalid_objects/finger.json'),\n+                            invalid_tool:      require('./lib/invalid_objects/tool.json'),\n+                            invalid_hand:      require('./lib/invalid_objects/hand.json'),\n+                            invalid_frame:     require('./lib/invalid_objects/frame.json')\n+                        };\n+                    }\n+                },\n+                'files':   {\n+                    'lib/invalid.js': ['build_tasks/templates/invalid_template.ejs']\n+                }\n+            }\n+        }\n+    });\n+\n+    // Load the plugin that provides the \"uglify\" task.\n+    // grunt.loadNpmTasks(\"grunt-contrib-uglify\");\n+    // grunt.loadNpmTasks(\"grunt-contrib-jshint\");\n+    // grunt.loadNpmTasks(\"grunt-contrib-concat\");",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 41,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "remove comments\n",
        "created_at": "2014-03-13T00:26:51Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548643",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548643"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548643"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548645",
        "pull_request_review_id": null,
        "id": 10548645,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTQ4NjQ1",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+/*global module*/",
        "path": "Gruntfile.js",
        "position": 2,
        "original_position": 1,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "spacing!\n",
        "created_at": "2014-03-13T00:27:01Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548645",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548645"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548645"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548977",
        "pull_request_review_id": null,
        "id": 10548977,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTQ4OTc3",
        "diff_hunk": "@@ -103,19 +119,37 @@ var fakeHand = exports.fakeHand = function(opts) {\n }\n \n var fakeFinger = exports.fakeFinger = function() {\n-  fingerId++",
        "path": "test/helpers/common.js",
        "position": 39,
        "original_position": 39,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "spacing!\n",
        "created_at": "2014-03-13T00:45:04Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548977",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10548977"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10548977"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10549073",
        "pull_request_review_id": null,
        "id": 10549073,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTQ5MDcz",
        "diff_hunk": "@@ -0,0 +1,187 @@\n+{",
        "path": "test/helpers/frame.json",
        "position": 1,
        "original_position": 1,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "note where this was generated from, make sure we have a way of doing it\n",
        "created_at": "2014-03-13T00:49:07Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10549073",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10549073"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10549073"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10960886",
        "pull_request_review_id": null,
        "id": 10960886,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTYwODg2",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+/*global module*/\n+\n+module.exports = function (grunt) {\n+    \"use strict\";\n+\n+    // Project configuration.\n+    grunt.initConfig({\n+        pkg: grunt.file.readJSON(\"package.json\"),\n+\n+        clean: ['lib/invalid_objects/*'],\n+\n+        execute: {\n+            target: {\n+                src: ['build_tasks/make_invalid.js']\n+            }\n+        },\n+\n+        'template': {\n+            'invalid-defs': {\n+                'options': {\n+                    data: function () {\n+                        return {\n+                            invalid_pointable: require('./lib/invalid_objects/pointable.json'),\n+                            invalid_finger:    require('./lib/invalid_objects/finger.json'),\n+                            invalid_tool:      require('./lib/invalid_objects/tool.json'),\n+                            invalid_hand:      require('./lib/invalid_objects/hand.json'),\n+                            invalid_frame:     require('./lib/invalid_objects/frame.json')\n+                        };\n+                    }\n+                },\n+                'files':   {\n+                    'lib/invalid.js': ['build_tasks/templates/invalid_template.ejs']\n+                }\n+            }\n+        }\n+    });\n+\n+    // Load the plugin that provides the \"uglify\" task.\n+    // grunt.loadNpmTasks(\"grunt-contrib-uglify\");\n+    // grunt.loadNpmTasks(\"grunt-contrib-jshint\");\n+    // grunt.loadNpmTasks(\"grunt-contrib-concat\");",
        "path": "Gruntfile.js",
        "position": null,
        "original_position": 41,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "bingomanatee",
            "id": 684016,
            "node_id": "MDQ6VXNlcjY4NDAxNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/684016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bingomanatee",
            "html_url": "https://github.com/bingomanatee",
            "followers_url": "https://api.github.com/users/bingomanatee/followers",
            "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
            "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
            "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
            "repos_url": "https://api.github.com/users/bingomanatee/repos",
            "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "these tasks will likely come into play pretty soon once we get to using and liking grunt. \n",
        "created_at": "2014-03-26T00:59:14Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10960886",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10960886"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10960886"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10960905",
        "pull_request_review_id": null,
        "id": 10960905,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTYwOTA1",
        "diff_hunk": "@@ -0,0 +1,187 @@\n+{",
        "path": "test/helpers/frame.json",
        "position": 1,
        "original_position": 1,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "bingomanatee",
            "id": 684016,
            "node_id": "MDQ6VXNlcjY4NDAxNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/684016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bingomanatee",
            "html_url": "https://github.com/bingomanatee",
            "followers_url": "https://api.github.com/users/bingomanatee/followers",
            "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
            "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
            "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
            "repos_url": "https://api.github.com/users/bingomanatee/repos",
            "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "All these steps are listed as grunt tasks. The Gruntfile itself describes which scripts are called and those scripts say which files they use in the configs. \n",
        "created_at": "2014-03-26T01:00:21Z",
        "updated_at": "2014-03-26T18:22:39Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10960905",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10960905"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10960905"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10991007",
        "pull_request_review_id": null,
        "id": 10991007,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTkxMDA3",
        "diff_hunk": "@@ -0,0 +1,49 @@\n+/*global module*/",
        "path": "Gruntfile.js",
        "position": 2,
        "original_position": 1,
        "commit_id": "99d659ddd33e52beffe88fb61725bf7a164166d4",
        "original_commit_id": "11674a9008f5b3297af20d7c1531d38022bc7966",
        "user": {
            "login": "bingomanatee",
            "id": 684016,
            "node_id": "MDQ6VXNlcjY4NDAxNg==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/684016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bingomanatee",
            "html_url": "https://github.com/bingomanatee",
            "followers_url": "https://api.github.com/users/bingomanatee/followers",
            "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
            "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
            "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
            "repos_url": "https://api.github.com/users/bingomanatee/repos",
            "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Travis doesn't accept global imperitaves unless they are spaced tightly. this comment may have to do with previously badly spaced markup, sorry\n",
        "created_at": "2014-03-26T18:24:03Z",
        "updated_at": "2014-03-26T18:24:03Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10991007",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/150",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/10991007"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/150#discussion_r10991007"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/150"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188048",
        "pull_request_review_id": null,
        "id": 11188048,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MDQ4",
        "diff_hunk": "@@ -21,7 +21,7 @@ var testServer = function(cb) {\n var counter = function() {\n   console.log(\"re-connecting\");\n   counter.count++;\n-  if (counter.count >= 10) {\n+  if (counter.count >= 6) {",
        "path": "integration_test/reconnection.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "What's the thinking here with lowering the reconnection tries? Seemingly, this line should be the same for failure? \n",
        "created_at": "2014-04-02T00:04:33Z",
        "updated_at": "2014-04-02T00:04:33Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188048",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188048"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188048"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188065",
        "pull_request_review_id": null,
        "id": 11188065,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MDY1",
        "diff_hunk": "@@ -60,4 +60,36 @@ saveGoodProtocol = function(){\n   });\n }\n \n-downgradeProtocol();\n\\ No newline at end of file\n+\n+disconnectAfterConnect = function () {\n+  var controller = new Leap.Controller({port: 9496})\n+  controller.on('ready', function(){\n+    console.log('ready - disconnecting');\n+    controller.disconnect();\n+    setTimeout(function(){\n+      console.log('PASSED disconnectAfterConnect');\n+      downgradeProtocol()\n+    }, 2000);\n+  });\n+  controller.connect();\n+\n+  var timesConnected = 0;\n+\n+  var wss = new WebSocketServer({port: 9496})\n+\n+\n+  wss.on('connection', function (ws) {\n+    timesConnected++;\n+    console.log(\"connected to socket with \"+ws.upgradeReq.url)\n+\n+    if (timesConnected > 1) {\n+      console.log('FAILED disconnectAfterConnect');\n+      wss.close();\n+      process.exit(1);\n+    }\n+\n+    ws.send('{\"version\": 4}');",
        "path": "integration_test/protocol_versions.js",
        "position": 65,
        "original_position": 65,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is V4 meant to be hardcoded?\n",
        "created_at": "2014-04-02T00:05:16Z",
        "updated_at": "2014-04-02T00:05:16Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188065",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188065"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188065"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188078",
        "pull_request_review_id": null,
        "id": 11188078,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MDc4",
        "diff_hunk": "@@ -21,7 +21,7 @@ var testServer = function(cb) {\n var counter = function() {\n   console.log(\"re-connecting\");\n   counter.count++;\n-  if (counter.count >= 10) {\n+  if (counter.count >= 6) {",
        "path": "integration_test/reconnection.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "just a convenience - to make the tests run 4 seconds faster.\n",
        "created_at": "2014-04-02T00:05:45Z",
        "updated_at": "2014-04-02T00:05:45Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188078",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188078"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188078"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188091",
        "pull_request_review_id": null,
        "id": 11188091,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MDkx",
        "diff_hunk": "@@ -60,4 +60,36 @@ saveGoodProtocol = function(){\n   });\n }\n \n-downgradeProtocol();\n\\ No newline at end of file\n+\n+disconnectAfterConnect = function () {\n+  var controller = new Leap.Controller({port: 9496})\n+  controller.on('ready', function(){\n+    console.log('ready - disconnecting');\n+    controller.disconnect();\n+    setTimeout(function(){\n+      console.log('PASSED disconnectAfterConnect');\n+      downgradeProtocol()\n+    }, 2000);\n+  });\n+  controller.connect();\n+\n+  var timesConnected = 0;\n+\n+  var wss = new WebSocketServer({port: 9496})\n+\n+\n+  wss.on('connection', function (ws) {\n+    timesConnected++;\n+    console.log(\"connected to socket with \"+ws.upgradeReq.url)\n+\n+    if (timesConnected > 1) {\n+      console.log('FAILED disconnectAfterConnect');\n+      wss.close();\n+      process.exit(1);\n+    }\n+\n+    ws.send('{\"version\": 4}');",
        "path": "integration_test/protocol_versions.js",
        "position": 65,
        "original_position": 65,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah.  For the sake of this test, it can be any valid protocol version\n",
        "created_at": "2014-04-02T00:06:10Z",
        "updated_at": "2014-04-02T00:06:10Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188091",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188091"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188091"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188145",
        "pull_request_review_id": null,
        "id": 11188145,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MTQ1",
        "diff_hunk": "@@ -89,10 +89,19 @@ BaseConnection.prototype.handleClose = function(code, reason) {\n \n BaseConnection.prototype.startReconnection = function() {\n   var connection = this;\n-  this.reconnectionTimer = setInterval(function() { connection.reconnect() }, 1000);\n+  if(!this.reconnectionTimer){\n+    (this.reconnectionTimer = setInterval(function() { connection.reconnect() }, 1000));\n+  }\n+}\n+\n+BaseConnection.prototype.stopReconnection = function() {\n+  this.reconnectionTimer = clearInterval(this.reconnectionTimer);\n }\n \n-BaseConnection.prototype.disconnect = function() {\n+// By default, disconnect will prevent auto-reconnection.\n+// Pass in true to allow the reconnection loop not be interrupted continue\n+BaseConnection.prototype.disconnect = function(allowReconnect) {\n+  if (!allowReconnect) this.stopReconnection();",
        "path": "leap-0.4.3.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Style: Since this isn't an early return, can we wrap this.stopReconnection with normal curly braces?\n",
        "created_at": "2014-04-02T00:08:48Z",
        "updated_at": "2014-04-02T00:08:48Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188145",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188145"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188145"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188177",
        "pull_request_review_id": null,
        "id": 11188177,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MTc3",
        "diff_hunk": "@@ -29,6 +29,15 @@ describe('Controller', function(){\n       })\n       controller.connect()\n     })\n+\n+    it('should respond to connected', function(){\n+      var controller = fakeController()\n+      assert.equal(controller.connected(), false);",
        "path": "test/controller.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We should also add a test to check the new disconnecting functionality, i.e. connect, disconnect, check state = disconnected?\n",
        "created_at": "2014-04-02T00:09:45Z",
        "updated_at": "2014-04-02T00:09:45Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188177",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188177"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188177"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188223",
        "pull_request_review_id": null,
        "id": 11188223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MjIz",
        "diff_hunk": "@@ -60,4 +60,36 @@ saveGoodProtocol = function(){\n   });\n }\n \n-downgradeProtocol();\n\\ No newline at end of file\n+\n+disconnectAfterConnect = function () {\n+  var controller = new Leap.Controller({port: 9496})\n+  controller.on('ready', function(){\n+    console.log('ready - disconnecting');\n+    controller.disconnect();\n+    setTimeout(function(){\n+      console.log('PASSED disconnectAfterConnect');\n+      downgradeProtocol()\n+    }, 2000);\n+  });\n+  controller.connect();\n+\n+  var timesConnected = 0;\n+\n+  var wss = new WebSocketServer({port: 9496})",
        "path": "integration_test/protocol_versions.js",
        "position": 52,
        "original_position": 52,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "9496 feels like it should be extracted into a constant since it's used in a couple places\n",
        "created_at": "2014-04-02T00:11:29Z",
        "updated_at": "2014-04-02T00:11:29Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188223",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188223"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188261",
        "pull_request_review_id": null,
        "id": 11188261,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4MjYx",
        "diff_hunk": "@@ -60,4 +60,36 @@ saveGoodProtocol = function(){\n   });\n }\n \n-downgradeProtocol();\n\\ No newline at end of file\n+\n+disconnectAfterConnect = function () {\n+  var controller = new Leap.Controller({port: 9496})\n+  controller.on('ready', function(){\n+    console.log('ready - disconnecting');\n+    controller.disconnect();\n+    setTimeout(function(){\n+      console.log('PASSED disconnectAfterConnect');\n+      downgradeProtocol()\n+    }, 2000);\n+  });\n+  controller.connect();\n+\n+  var timesConnected = 0;\n+\n+  var wss = new WebSocketServer({port: 9496})",
        "path": "integration_test/protocol_versions.js",
        "position": 52,
        "original_position": 52,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah actually nevermind, didn't realize this was in a test directory\n",
        "created_at": "2014-04-02T00:12:44Z",
        "updated_at": "2014-04-02T00:12:44Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188261",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188261"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188261"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188271",
        "pull_request_review_id": null,
        "id": 11188271,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4Mjcx",
        "diff_hunk": "@@ -60,4 +60,36 @@ saveGoodProtocol = function(){\n   });\n }\n \n-downgradeProtocol();\n\\ No newline at end of file\n+\n+disconnectAfterConnect = function () {\n+  var controller = new Leap.Controller({port: 9496})\n+  controller.on('ready', function(){\n+    console.log('ready - disconnecting');\n+    controller.disconnect();\n+    setTimeout(function(){\n+      console.log('PASSED disconnectAfterConnect');\n+      downgradeProtocol()\n+    }, 2000);\n+  });\n+  controller.connect();\n+\n+  var timesConnected = 0;\n+\n+  var wss = new WebSocketServer({port: 9496})\n+\n+\n+  wss.on('connection', function (ws) {\n+    timesConnected++;\n+    console.log(\"connected to socket with \"+ws.upgradeReq.url)\n+\n+    if (timesConnected > 1) {\n+      console.log('FAILED disconnectAfterConnect');\n+      wss.close();\n+      process.exit(1);\n+    }\n+\n+    ws.send('{\"version\": 4}');",
        "path": "integration_test/protocol_versions.js",
        "position": 65,
        "original_position": 65,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sounds good\n",
        "created_at": "2014-04-02T00:12:54Z",
        "updated_at": "2014-04-02T00:12:54Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188271",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188271"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188271"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188281",
        "pull_request_review_id": null,
        "id": 11188281,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4Mjgx",
        "diff_hunk": "@@ -21,7 +21,7 @@ var testServer = function(cb) {\n var counter = function() {\n   console.log(\"re-connecting\");\n   counter.count++;\n-  if (counter.count >= 10) {\n+  if (counter.count >= 6) {",
        "path": "integration_test/reconnection.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, doh, again didn't see this was in the integration_test folder\n",
        "created_at": "2014-04-02T00:13:17Z",
        "updated_at": "2014-04-02T00:13:17Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188281",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188281"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188281"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188493",
        "pull_request_review_id": null,
        "id": 11188493,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4NDkz",
        "diff_hunk": "@@ -29,6 +29,15 @@ describe('Controller', function(){\n       })\n       controller.connect()\n     })\n+\n+    it('should respond to connected', function(){\n+      var controller = fakeController()\n+      assert.equal(controller.connected(), false);",
        "path": "test/controller.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think this is pretty much covered by the (admittedly ugly & in need of refactor) `integration_test/protocol_versions.js` `disconnectAfterConnect`\n",
        "created_at": "2014-04-02T00:21:02Z",
        "updated_at": "2014-04-02T00:21:12Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188493",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188493"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188493"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188508",
        "pull_request_review_id": null,
        "id": 11188508,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4NTA4",
        "diff_hunk": "@@ -89,10 +89,19 @@ BaseConnection.prototype.handleClose = function(code, reason) {\n \n BaseConnection.prototype.startReconnection = function() {\n   var connection = this;\n-  this.reconnectionTimer = setInterval(function() { connection.reconnect() }, 1000);\n+  if(!this.reconnectionTimer){\n+    (this.reconnectionTimer = setInterval(function() { connection.reconnect() }, 1000));\n+  }\n+}\n+\n+BaseConnection.prototype.stopReconnection = function() {\n+  this.reconnectionTimer = clearInterval(this.reconnectionTimer);\n }\n \n-BaseConnection.prototype.disconnect = function() {\n+// By default, disconnect will prevent auto-reconnection.\n+// Pass in true to allow the reconnection loop not be interrupted continue\n+BaseConnection.prototype.disconnect = function(allowReconnect) {\n+  if (!allowReconnect) this.stopReconnection();",
        "path": "leap-0.4.3.js",
        "position": 18,
        "original_position": 18,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "pehrlich",
            "id": 407497,
            "node_id": "MDQ6VXNlcjQwNzQ5Nw==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/407497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pehrlich",
            "html_url": "https://github.com/pehrlich",
            "followers_url": "https://api.github.com/users/pehrlich/followers",
            "following_url": "https://api.github.com/users/pehrlich/following{/other_user}",
            "gists_url": "https://api.github.com/users/pehrlich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pehrlich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pehrlich/subscriptions",
            "organizations_url": "https://api.github.com/users/pehrlich/orgs",
            "repos_url": "https://api.github.com/users/pehrlich/repos",
            "events_url": "https://api.github.com/users/pehrlich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pehrlich/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "kk\n",
        "created_at": "2014-04-02T00:21:38Z",
        "updated_at": "2014-04-02T00:21:38Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188508",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188508"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188508"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188729",
        "pull_request_review_id": null,
        "id": 11188729,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTg4NzI5",
        "diff_hunk": "@@ -29,6 +29,15 @@ describe('Controller', function(){\n       })\n       controller.connect()\n     })\n+\n+    it('should respond to connected', function(){\n+      var controller = fakeController()\n+      assert.equal(controller.connected(), false);",
        "path": "test/controller.js",
        "position": 7,
        "original_position": 7,
        "commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "original_commit_id": "5fe90f0c5cf182f576844afb6314cac6da0bd4e2",
        "user": {
            "login": "SeanJanis",
            "id": 1975346,
            "node_id": "MDQ6VXNlcjE5NzUzNDY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1975346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeanJanis",
            "html_url": "https://github.com/SeanJanis",
            "followers_url": "https://api.github.com/users/SeanJanis/followers",
            "following_url": "https://api.github.com/users/SeanJanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeanJanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeanJanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeanJanis/subscriptions",
            "organizations_url": "https://api.github.com/users/SeanJanis/orgs",
            "repos_url": "https://api.github.com/users/SeanJanis/repos",
            "events_url": "https://api.github.com/users/SeanJanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeanJanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2014-04-02T00:30:05Z",
        "updated_at": "2014-04-02T00:30:05Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188729",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/164",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/11188729"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/164#discussion_r11188729"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/164"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17934984",
        "pull_request_review_id": null,
        "id": 17934984,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM0OTg0",
        "diff_hunk": "@@ -95,4 +95,37 @@ describe('Connection', function(){\n       controller.connection.connect()\n     })\n   })\n-})\n+\n+\n+  describe('HMD in protocol 6', function(){\n+\n+    it('should send background true', function(done){",
        "path": "test/connection.js",
        "position": null,
        "original_position": 9,
        "commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "original_commit_id": "9d907ec0020b49c43cc84452a38c902ca17871fe",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "copy-pasta description (`s/background/optimizeHMD/`)\n",
        "created_at": "2014-09-23T20:00:38Z",
        "updated_at": "2014-09-23T20:32:25Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17934984",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/185",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17934984"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17934984"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/185"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17934993",
        "pull_request_review_id": null,
        "id": 17934993,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM0OTkz",
        "diff_hunk": "@@ -95,4 +95,37 @@ describe('Connection', function(){\n       controller.connection.connect()\n     })\n   })\n-})\n+\n+\n+  describe('HMD in protocol 6', function(){\n+\n+    it('should send background true', function(done){\n+      var controller = fakeController({version: 6});\n+      var connection = controller.connection;\n+      connection.optimizeHMD(true);\n+      controller.on('ready', function() {\n+        setTimeout(function() {\n+          assert.include(connection.socket.messages, JSON.stringify({\"optimizeHMD\":true}));\n+          connection.disconnect();\n+          done();\n+        }, 100);\n+      });\n+      controller.connection.connect()\n+    });\n+\n+    it('should send background false', function(done){",
        "path": "test/connection.js",
        "position": null,
        "original_position": 23,
        "commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "original_commit_id": "9d907ec0020b49c43cc84452a38c902ca17871fe",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "copy-pasta description (`s/background/optimizeHMD/`)\n",
        "created_at": "2014-09-23T20:00:56Z",
        "updated_at": "2014-09-23T20:32:25Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17934993",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/185",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17934993"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17934993"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/185"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935077",
        "pull_request_review_id": null,
        "id": 17935077,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM1MDc3",
        "diff_hunk": "@@ -26,6 +26,9 @@ exports.chooseProtocol = function(header) {\n       protocol.sendFocused = function(connection, state) {\n         connection.send(protocol.encode({focused: state}));\n       }\n+      protocol.sendHMD = function(connection, state) {",
        "path": "lib/protocol.js",
        "position": null,
        "original_position": 4,
        "commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "original_commit_id": "9d907ec0020b49c43cc84452a38c902ca17871fe",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any reason not to call this function `sendOptimizeHMD` for consistency?\n",
        "created_at": "2014-09-23T20:02:19Z",
        "updated_at": "2014-09-23T20:32:25Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935077",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/185",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935077"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935077"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/185"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935214",
        "pull_request_review_id": null,
        "id": 17935214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM1MjE0",
        "diff_hunk": "@@ -109,6 +109,11 @@ Controller.prototype.setBackground = function(state) {\n   return this;\n }\n \n+Controller.prototype.optimizeHMD = function(state) {",
        "path": "lib/controller.js",
        "position": null,
        "original_position": 4,
        "commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "original_commit_id": "9d907ec0020b49c43cc84452a38c902ca17871fe",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any reason not to call this function `setOptimizeHMD` for consistency with `setBackground`?\n",
        "created_at": "2014-09-23T20:04:34Z",
        "updated_at": "2014-09-23T20:32:25Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935214",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/185",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935214"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/185"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935315",
        "pull_request_review_id": null,
        "id": 17935315,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM1MzE1",
        "diff_hunk": "@@ -9,15 +9,18 @@ var BaseConnection = module.exports = function(opts) {\n     scheme: this.getScheme(),\n     port: this.getPort(),\n     background: false,\n+    optimizeHMD: false,\n     requestProtocolVersion: BaseConnection.defaultProtocolVersion\n   });\n   this.host = this.opts.host;\n   this.port = this.opts.port;\n   this.scheme = this.opts.scheme;\n   this.protocolVersionVerified = false;\n+  this._optimizeHMD = null;\n   this.on('ready', function() {\n     this.enableGestures(this.opts.enableGestures);\n     this.setBackground(this.opts.background);\n+    this.optimizeHMD(this.opts.optimizeHMD);",
        "path": "lib/connection/base.js",
        "position": null,
        "original_position": 15,
        "commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "original_commit_id": "9d907ec0020b49c43cc84452a38c902ca17871fe",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems like this function should be called either `setOptimizeHMD` (consistent) or `optimizeForHMD` (descriptive)?\n",
        "created_at": "2014-09-23T20:05:56Z",
        "updated_at": "2014-09-23T20:32:25Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935315",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/185",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935315"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935315"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/185"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935469",
        "pull_request_review_id": null,
        "id": 17935469,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM1NDY5",
        "diff_hunk": "@@ -9,15 +9,18 @@ var BaseConnection = module.exports = function(opts) {\n     scheme: this.getScheme(),\n     port: this.getPort(),\n     background: false,\n+    optimizeHMD: false,\n     requestProtocolVersion: BaseConnection.defaultProtocolVersion\n   });\n   this.host = this.opts.host;\n   this.port = this.opts.port;\n   this.scheme = this.opts.scheme;\n   this.protocolVersionVerified = false;\n+  this._optimizeHMD = null;",
        "path": "lib/connection/base.js",
        "position": null,
        "original_position": 11,
        "commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "original_commit_id": "9d907ec0020b49c43cc84452a38c902ca17871fe",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is to keep track of the current `optimizeHMD` protocol state, right? Do we keep track of the `background` state?\n",
        "created_at": "2014-09-23T20:08:01Z",
        "updated_at": "2014-09-23T20:32:25Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935469",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/185",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17935469"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17935469"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/185"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17937754",
        "pull_request_review_id": null,
        "id": 17937754,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTM3NzU0",
        "diff_hunk": "@@ -9,15 +9,19 @@ var BaseConnection = module.exports = function(opts) {\n     scheme: this.getScheme(),\n     port: this.getPort(),\n     background: false,\n+    optimizeHMD: false,\n     requestProtocolVersion: BaseConnection.defaultProtocolVersion\n   });\n   this.host = this.opts.host;\n   this.port = this.opts.port;\n   this.scheme = this.opts.scheme;\n   this.protocolVersionVerified = false;\n+  this.background = null;\n+  this.optimizeHMD = null;",
        "path": "lib/connection/base.js",
        "position": 12,
        "original_position": 12,
        "commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "original_commit_id": "f33c5b62d5295730953280d5d5306f5dd10cbccf",
        "user": {
            "login": "neptunius",
            "id": 71125,
            "node_id": "MDQ6VXNlcjcxMTI1",
            "avatar_url": "https://avatars2.githubusercontent.com/u/71125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neptunius",
            "html_url": "https://github.com/neptunius",
            "followers_url": "https://api.github.com/users/neptunius/followers",
            "following_url": "https://api.github.com/users/neptunius/following{/other_user}",
            "gists_url": "https://api.github.com/users/neptunius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neptunius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neptunius/subscriptions",
            "organizations_url": "https://api.github.com/users/neptunius/orgs",
            "repos_url": "https://api.github.com/users/neptunius/repos",
            "events_url": "https://api.github.com/users/neptunius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neptunius/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@pehrlich and I agreed that `this.background` and `this.optimizeHMD` should be initialized to `null` to ensure a protocol message is sent the first time `setBackground` or `setOptimizeHMD` is called, regardless of client's state.\n(`this.background` was left out in the past, but used in `setBackground` short-circuit check for repeated calls)\n",
        "created_at": "2014-09-23T20:41:59Z",
        "updated_at": "2014-09-23T20:41:59Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17937754",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/185",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/17937754"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/185#discussion_r17937754"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/185"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/20461977",
        "pull_request_review_id": null,
        "id": 20461977,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDYxOTc3",
        "diff_hunk": "@@ -319,13 +319,21 @@ Frame.prototype.rotationAngle = function(sinceFrame, axis) {\n   if (!this.valid || !sinceFrame.valid) return 0.0;\n \n   var rot = this.rotationMatrix(sinceFrame);\n-  var cs = (rot[0] + rot[4] + rot[8] - 1.0)*0.5;\n-  var angle = Math.acos(cs);\n-  angle = isNaN(angle) ? 0.0 : angle;\n+",
        "path": "lib/frame.js",
        "position": null,
        "original_position": 7,
        "commit_id": "c332680b473504bcef2cedddd6c66f8174f0890c",
        "original_commit_id": "193ab5acccdea3249692c0206a4bb6d50a285293",
        "user": {
            "login": "GabrielHare",
            "id": 5515456,
            "node_id": "MDQ6VXNlcjU1MTU0NTY=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/5515456?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GabrielHare",
            "html_url": "https://github.com/GabrielHare",
            "followers_url": "https://api.github.com/users/GabrielHare/followers",
            "following_url": "https://api.github.com/users/GabrielHare/following{/other_user}",
            "gists_url": "https://api.github.com/users/GabrielHare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GabrielHare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GabrielHare/subscriptions",
            "organizations_url": "https://api.github.com/users/GabrielHare/orgs",
            "repos_url": "https://api.github.com/users/GabrielHare/repos",
            "events_url": "https://api.github.com/users/GabrielHare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GabrielHare/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "A reasonably clear derivation can be found here: http://en.wikipedia.org/wiki/Axis\u2013angle_representation#Exponential_map_from_so.283.29_to_SO.283.29\n\nAlso see the log map section.\n",
        "created_at": "2014-11-17T20:19:33Z",
        "updated_at": "2014-11-17T21:15:37Z",
        "html_url": "https://github.com/leapmotion/leapjs/pull/198#discussion_r20461977",
        "pull_request_url": "https://api.github.com/repos/leapmotion/leapjs/pulls/198",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/comments/20461977"
            },
            "html": {
                "href": "https://github.com/leapmotion/leapjs/pull/198#discussion_r20461977"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/leapmotion/leapjs/pulls/198"
            }
        }
    }
]