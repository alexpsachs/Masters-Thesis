[
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1431112",
        "pull_request_review_id": null,
        "id": 1431112,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzExMTI=",
        "diff_hunk": "@@ -178,7 +178,7 @@ suite 'Object Literals', ->\n     #\n     #  eq result.two.join(' '), '2 2 2'\n \n-    #test '#1961, #1974, regression with compound assigning to an implicit object', ->\n+    #test 'jashkenas/coffee-script#1961, #1974, regression with compound assigning to an implicit object', ->",
        "path": "test/objects.coffee",
        "position": null,
        "original_position": 43,
        "commit_id": "cbe6bbea605560872dec42cb7d1c0323ef3c6b25",
        "original_commit_id": "41f0d212e718455ae11df7342644142fca19f56a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "missed one\n",
        "created_at": "2012-08-22T00:28:47Z",
        "updated_at": "2012-08-22T01:08:23Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/32#discussion_r1431112",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/32",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1431112"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/32#discussion_r1431112"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1431336",
        "pull_request_review_id": null,
        "id": 1431336,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzEzMzY=",
        "diff_hunk": "@@ -178,7 +178,7 @@ suite 'Object Literals', ->\n     #\n     #  eq result.two.join(' '), '2 2 2'\n \n-    #test '#1961, #1974, regression with compound assigning to an implicit object', ->\n+    #test 'jashkenas/coffee-script#1961, #1974, regression with compound assigning to an implicit object', ->",
        "path": "test/objects.coffee",
        "position": null,
        "original_position": 43,
        "commit_id": "cbe6bbea605560872dec42cb7d1c0323ef3c6b25",
        "original_commit_id": "41f0d212e718455ae11df7342644142fca19f56a",
        "user": {
            "login": "paulmillr",
            "id": 574696,
            "node_id": "MDQ6VXNlcjU3NDY5Ng==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/574696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulmillr",
            "html_url": "https://github.com/paulmillr",
            "followers_url": "https://api.github.com/users/paulmillr/followers",
            "following_url": "https://api.github.com/users/paulmillr/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulmillr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulmillr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulmillr/subscriptions",
            "organizations_url": "https://api.github.com/users/paulmillr/orgs",
            "repos_url": "https://api.github.com/users/paulmillr/repos",
            "events_url": "https://api.github.com/users/paulmillr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulmillr/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "fixd\n",
        "created_at": "2012-08-22T01:08:20Z",
        "updated_at": "2012-08-22T01:08:23Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/32#discussion_r1431336",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/32",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1431336"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/32#discussion_r1431336"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/32"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1915547",
        "pull_request_review_id": null,
        "id": 1915547,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTU1NDc=",
        "diff_hunk": "@@ -695,7 +695,7 @@ switch\n \n \n functionLiteral\n-  = params:(\"(\" _ parameterList? _ \")\" _)? arrow:(\"->\" / \"=>\") body:functionBody? {\n+  = params:(\"(\" _ (td:TERMINDENT p:parameterList d:DEDENT t:TERMINATOR { return {e: p, raw: td + p.raw + d + t}; } / p:parameterList { return {e: p, raw: p.raw}; })? _ \")\" _)?  arrow:(\"->\" / \"=>\") body:functionBody? {",
        "path": "src/grammar.pegjs",
        "position": 5,
        "original_position": 5,
        "commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "original_commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I feel like this would be more appropriate as a change to the `parameterList` rule. What do you think?\n",
        "created_at": "2012-10-23T12:59:45Z",
        "updated_at": "2012-10-23T12:59:45Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1915547",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1915547"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1915547"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1915638",
        "pull_request_review_id": null,
        "id": 1915638,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTU2Mzg=",
        "diff_hunk": "@@ -695,7 +695,7 @@ switch\n \n \n functionLiteral\n-  = params:(\"(\" _ parameterList? _ \")\" _)? arrow:(\"->\" / \"=>\") body:functionBody? {\n+  = params:(\"(\" _ (td:TERMINDENT p:parameterList d:DEDENT t:TERMINATOR { return {e: p, raw: td + p.raw + d + t}; } / p:parameterList { return {e: p, raw: p.raw}; })? _ \")\" _)?  arrow:(\"->\" / \"=>\") body:functionBody? {",
        "path": "src/grammar.pegjs",
        "position": 5,
        "original_position": 5,
        "commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "original_commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "user": {
            "login": "gkz",
            "id": 1222691,
            "node_id": "MDQ6VXNlcjEyMjI2OTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1222691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkz",
            "html_url": "https://github.com/gkz",
            "followers_url": "https://api.github.com/users/gkz/followers",
            "following_url": "https://api.github.com/users/gkz/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkz/subscriptions",
            "organizations_url": "https://api.github.com/users/gkz/orgs",
            "repos_url": "https://api.github.com/users/gkz/repos",
            "events_url": "https://api.github.com/users/gkz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think there is less code duplication this way?\n",
        "created_at": "2012-10-23T13:06:00Z",
        "updated_at": "2012-10-23T13:08:27Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1915638",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1915638"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1915638"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1919611",
        "pull_request_review_id": null,
        "id": 1919611,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTk2MTE=",
        "diff_hunk": "@@ -695,7 +695,7 @@ switch\n \n \n functionLiteral\n-  = params:(\"(\" _ parameterList? _ \")\" _)? arrow:(\"->\" / \"=>\") body:functionBody? {\n+  = params:(\"(\" _ (td:TERMINDENT p:parameterList d:DEDENT t:TERMINATOR { return {e: p, raw: td + p.raw + d + t}; } / p:parameterList { return {e: p, raw: p.raw}; })? _ \")\" _)?  arrow:(\"->\" / \"=>\") body:functionBody? {",
        "path": "src/grammar.pegjs",
        "position": 5,
        "original_position": 5,
        "commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "original_commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "user": {
            "login": "gkz",
            "id": 1222691,
            "node_id": "MDQ6VXNlcjEyMjI2OTE=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1222691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkz",
            "html_url": "https://github.com/gkz",
            "followers_url": "https://api.github.com/users/gkz/followers",
            "following_url": "https://api.github.com/users/gkz/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkz/subscriptions",
            "organizations_url": "https://api.github.com/users/gkz/orgs",
            "repos_url": "https://api.github.com/users/gkz/repos",
            "events_url": "https://api.github.com/users/gkz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkz/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Upon further thought, regardless of the code duplication issue, it should not be the concern of the parameter list if it is, as its entirety, indented or not. \n",
        "created_at": "2012-10-23T18:25:57Z",
        "updated_at": "2012-10-23T18:25:57Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1919611",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1919611"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1919611"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1920547",
        "pull_request_review_id": null,
        "id": 1920547,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjA1NDc=",
        "diff_hunk": "@@ -695,7 +695,7 @@ switch\n \n \n functionLiteral\n-  = params:(\"(\" _ parameterList? _ \")\" _)? arrow:(\"->\" / \"=>\") body:functionBody? {\n+  = params:(\"(\" _ (td:TERMINDENT p:parameterList d:DEDENT t:TERMINATOR { return {e: p, raw: td + p.raw + d + t}; } / p:parameterList { return {e: p, raw: p.raw}; })? _ \")\" _)?  arrow:(\"->\" / \"=>\") body:functionBody? {",
        "path": "src/grammar.pegjs",
        "position": 5,
        "original_position": 5,
        "commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "original_commit_id": "e88b36939e917ca86e62a0769ab9ee3207f12d1f",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Agreed. Merging.\n",
        "created_at": "2012-10-23T19:39:03Z",
        "updated_at": "2012-10-23T19:39:03Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1920547",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/1920547"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/78#discussion_r1920547"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/78"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2026223",
        "pull_request_review_id": null,
        "id": 2026223,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjYyMjM=",
        "diff_hunk": "@@ -398,26 +398,33 @@ leftHandSideExpression = callExpression / newExpression\n           };\n       }\n   argumentListContents\n-    = e:argument es:(_ (\",\" / TERMINATOR) _ argument)* t:(\",\" / TERMINATOR)? {\n+    = e:argument es:(_ (TERM? _ \",\" _ TERMINATOR? INDENT* / TERMINATOR) _ argument DEDENT*)* t:(\",\" _ DEDENT* TERMINATOR? / TERMINATOR)? {",
        "path": "src/grammar.pegjs",
        "position": 5,
        "original_position": 5,
        "commit_id": "c5a9a38c1ab49683ba795769cfcf194d83ed7ce0",
        "original_commit_id": "c5a9a38c1ab49683ba795769cfcf194d83ed7ce0",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is too permissive, allowing unbalanced indentation. Please refactor in a way that forces matching indent/dedent markers.\n",
        "created_at": "2012-11-05T02:18:23Z",
        "updated_at": "2012-11-05T02:18:23Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/86#discussion_r2026223",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/86",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2026223"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/86#discussion_r2026223"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/86"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2026227",
        "pull_request_review_id": null,
        "id": 2026227,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjYyMjc=",
        "diff_hunk": "@@ -398,26 +398,33 @@ leftHandSideExpression = callExpression / newExpression\n           };\n       }\n   argumentListContents\n-    = e:argument es:(_ (\",\" / TERMINATOR) _ argument)* t:(\",\" / TERMINATOR)? {\n+    = e:argument es:(_ (TERM? _ \",\" _ TERMINATOR? INDENT* / TERMINATOR) _ argument DEDENT*)* t:(\",\" _ DEDENT* TERMINATOR? / TERMINATOR)? {\n         var raw = e.raw + es.map(function(e){ return e[0] + e[1] + e[2] + e[3].raw; }).join('') + t;",
        "path": "src/grammar.pegjs",
        "position": 6,
        "original_position": 6,
        "commit_id": "c5a9a38c1ab49683ba795769cfcf194d83ed7ce0",
        "original_commit_id": "c5a9a38c1ab49683ba795769cfcf194d83ed7ce0",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please remember to consider the raw value of parses.\n",
        "created_at": "2012-11-05T02:19:00Z",
        "updated_at": "2012-11-05T02:19:00Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/86#discussion_r2026227",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/86",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2026227"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/86#discussion_r2026227"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/86"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2026230",
        "pull_request_review_id": null,
        "id": 2026230,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjYyMzA=",
        "diff_hunk": "@@ -398,26 +398,33 @@ leftHandSideExpression = callExpression / newExpression\n           };\n       }\n   argumentListContents\n-    = e:argument es:(_ (\",\" / TERMINATOR) _ argument)* t:(\",\" / TERMINATOR)? {\n+    = e:argument es:(_ (TERM? _ \",\" _ TERMINATOR? INDENT* / TERMINATOR) _ argument DEDENT*)* t:(\",\" _ DEDENT* TERMINATOR? / TERMINATOR)? {\n         var raw = e.raw + es.map(function(e){ return e[0] + e[1] + e[2] + e[3].raw; }).join('') + t;\n         return {list: [e].concat(es.map(function(e){ return e[3]; })), raw: raw};\n       }\n-    / t0:TERMINDENT a:argumentListContents d:DEDENT t1:TERMINATOR? {\n+    / t0:TERMINDENT a:argumentListContents d:DEDENT? t1:TERMINATOR? {",
        "path": "src/grammar.pegjs",
        "position": 10,
        "original_position": 10,
        "commit_id": "c5a9a38c1ab49683ba795769cfcf194d83ed7ce0",
        "original_commit_id": "c5a9a38c1ab49683ba795769cfcf194d83ed7ce0",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Same as above. All dedent markers must have matching indents.\n",
        "created_at": "2012-11-05T02:19:32Z",
        "updated_at": "2012-11-05T02:19:32Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/86#discussion_r2026230",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/86",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2026230"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/86#discussion_r2026230"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/86"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2246113",
        "pull_request_review_id": null,
        "id": 2246113,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDYxMTM=",
        "diff_hunk": "@@ -363,11 +363,14 @@ else\n   # choose input source\n \n   if options.input?\n-    # TODO: handle directories\n-    fs.readFile options.input, (err, contents) ->\n+    fs.stat options.input, (err, stats) ->\n       throw err if err?\n-      input = contents\n-      do processInput\n+      if stats.isDirectory()\n+        options.input = \"#{options.input}/index.coffee\"",
        "path": "src/command.coffee",
        "position": null,
        "original_position": 11,
        "commit_id": "1e5f86bec543e2e4ac0789128550471f0c6b0b75",
        "original_commit_id": "1f59fcb4a7b82dd6baf7c1494986dbcf96b16d50",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`path.join options.input, 'index.coffee'`\n",
        "created_at": "2012-11-28T04:08:32Z",
        "updated_at": "2012-11-28T05:45:41Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/103#discussion_r2246113",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/103",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2246113"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/103#discussion_r2246113"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/103"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2247564",
        "pull_request_review_id": null,
        "id": 2247564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDc1NjQ=",
        "diff_hunk": "@@ -94,6 +94,7 @@ makeReturn = (node) ->\n     new JS.CatchClause node.param, makeReturn node.body\n   else if node.instanceof JS.ThrowStatement, JS.ReturnStatement, JS.BreakStatement, JS.ContinueStatement then node",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 2,
        "commit_id": "528f917eaede376c2a9f0d3520bdee4983f71885",
        "original_commit_id": "af95ef30dc9297adc641abdeeabff877d22f7ec4",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Want to add it to this list instead? These are CoffeeScript statements. They can't be used in expression position and they don't trigger auto-return behaviour in functions.\n\n**edit:** That would probably be a good comment to have above this line. We need more comments all over the place.\n",
        "created_at": "2012-11-28T08:51:26Z",
        "updated_at": "2012-11-28T20:58:52Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/105#discussion_r2247564",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/105",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2247564"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/105#discussion_r2247564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/105"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2392690",
        "pull_request_review_id": null,
        "id": 2392690,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTI2OTA=",
        "diff_hunk": "@@ -331,39 +332,11 @@ else\n \n     # --eval\n     if options.eval\n-      evalFn = -> (0;eval) js # TODO: rip off CoffeeScript.eval from jashkenas/coffee-script\n-      domain = try require 'domain'\n-      if domain?\n-        d = domain.create()\n-        d.on 'error', (err) ->\n-          {SourceMapConsumer} = require 'source-map'\n-          Error.prepareStackTrace = (err, stack) ->\n-            sourceMap = new SourceMapConsumer CoffeeScript.sourceMap jsAST, inputSource\n-            frames = stack.map (frame) ->\n-              name = frame.getFunctionName() ? '(unknown)'\n-              line = frame.getLineNumber()\n-              column = frame.getColumnNumber()\n-              filename = frame.getFileName()\n-              if filename?\n-                \"  at #{name} (#{filename}:#{line}:#{column})\"\n-              else\n-                source = sourceMap.originalPositionFor {line, column}\n-                \"  at #{name} (#{options.input ? '<input>'}:#{source.line}:#{source.column}, <js>:#{line}:#{column})\"\n-            errorPos = sourceMap.originalPositionFor {line: stack[0].getLineNumber(), column: stack[0].getColumnNumber()}\n-            originalLine = input.split('\\n')[errorPos.line - 1]\n-            [\n-              \"ERROR: #{err.message}\"\n-              ''\n-              \"#{errorPos.line}: #{originalLine}\"\n-              \"#{errorPos.line.toString().replace /./, '^'}: #{Array(errorPos.column).join '~'}^\"\n-              ''\n-              frames.join '\\n'\n-            ].join '\\n'\n-          console.error err.stack\n-        d.run evalFn\n+      fname = if options.input\n+        fs.realpathSync(options.input)\n       else\n-        process.nextTick evalFn\n-\n+        if options.cli then '<cli>' else '<stdin>'\n+      runMain input, js, jsAST, fname",
        "path": "src/command.coffee",
        "position": 57,
        "original_position": 57,
        "commit_id": "0a5cca9f419ce5c1579dc7b78f22105d0e459a2e",
        "original_commit_id": "7278f513a06beb1f59d8257b1cb7bca8505e564f",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No need to re-derive `fname` here, I have already calculated this above as `inputSource`.\n\n``` coffee\nrunMain input, js, jsAST, inputSource\n```\n\nThough you might need to add `fs.realPathSync` like you have here.\n",
        "created_at": "2012-12-12T14:11:37Z",
        "updated_at": "2012-12-13T06:19:41Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2392690",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2392690"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2392690"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2392979",
        "pull_request_review_id": null,
        "id": 2392979,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTI5Nzk=",
        "diff_hunk": "@@ -81,10 +81,4 @@ module.exports =\n \n CoffeeScript = module.exports.CoffeeScript = module.exports\n \n-\n-require.extensions['.coffee'] = (module, filename) ->\n-  input = fs.readFileSync filename, 'utf8'\n-  csAst = CoffeeScript.parse input\n-  jsAst = CoffeeScript.compile csAst\n-  js = CoffeeScript.js jsAst\n-  module._compile js, filename",
        "path": "src/module.coffee",
        "position": null,
        "original_position": 10,
        "commit_id": "0a5cca9f419ce5c1579dc7b78f22105d0e459a2e",
        "original_commit_id": "7278f513a06beb1f59d8257b1cb7bca8505e564f",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would bring this back in and instead pull `runModule` into here.\n\n``` coffee\n{runModule} = require './run'\n\nrequire.extensions['.coffee'] = (module, filename) ->\n  input = fs.readFileSync filename, 'utf8'\n  csAst = CoffeeScript.parse input,\n    raw: yes\n  jsAst = CoffeeScript.compile csAst\n  js = CoffeeScript.js jsAst\n  runModule module, js, jsAst, filename\n```\n\nYou would need to export `runModule` in `src/run.coffee`.\n",
        "created_at": "2012-12-12T14:32:53Z",
        "updated_at": "2012-12-13T06:19:41Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2392979",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2392979"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2392979"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2393016",
        "pull_request_review_id": null,
        "id": 2393016,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTMwMTY=",
        "diff_hunk": "@@ -0,0 +1,126 @@\n+# Node.js-specific support: module loading, sourceMapping errors\n+\n+fs = require 'fs'\n+path = require 'path'\n+Module = require 'module'\n+CoffeeScript = require './module'\n+{SourceMapConsumer} = require 'source-map'\n+\n+# NodeJS / V8 have no support for transforming positions in stack traces using\n+# sourceMap, so we must monkey-patch Error to display CoffeeScript source\n+# positions.\n+\n+# Ideally, this would happen in a way that is scalable to multiple compile-to-\n+# JS languages trying to do the same thing in the same NodeJS process. We can\n+# implement it as if there were an API, and then patch in support for that\n+# API. The following maybe should be in its own npm module that multiple\n+# compilers can include.\n+\n+patched = false\n+patchStackTrace = ->\n+  return if patched\n+  patched = true\n+\n+  # Map of filenames -> functions that return a sourceMap string.\n+  Module._sourceMaps = {}\n+\n+  # (Assigning to a property of the Module object in the normal module cache is\n+  # unsuitable, because node deletes those objects from the cache if an\n+  # exception is thrown in the module body.)\n+\n+  Error.prepareStackTrace = (err, stack) ->\n+    sourceFiles = {}\n+\n+    getSourceMapping = (filename, line, column) ->\n+      mapString = Module._sourceMaps[filename]?()\n+      if mapString\n+        sourceMap = sourceFiles[filename] ?= new SourceMapConsumer mapString\n+        sourceMap.originalPositionFor {line, column}\n+\n+    frames = for frame in stack\n+      break if frame.getFunction() is exports.runMain\n+      \"  at #{formatSourcePosition frame, getSourceMapping}\"\n+\n+    \"#{err.name}: #{err.message ? ''}\\n#{frames.join '\\n'}\\n\"\n+\n+# Based on http://v8.googlecode.com/svn/tags/3.9.9/src/messages.js\n+# Modified to handle sourceMap\n+formatSourcePosition = (frame, getSourceMapping) ->\n+  fileName = undefined\n+  fileLocation = \"\"\n+\n+  if frame.isNative()\n+    fileLocation = \"native\"\n+  else if frame.isEval()\n+    fileName = frame.getScriptNameOrSourceURL()\n+    fileLocation = frame.getEvalOrigin()  unless fileName",
        "path": "src/run.coffee",
        "position": null,
        "original_position": 56,
        "commit_id": "0a5cca9f419ce5c1579dc7b78f22105d0e459a2e",
        "original_commit_id": "7278f513a06beb1f59d8257b1cb7bca8505e564f",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "one too many spaces here\n",
        "created_at": "2012-12-12T14:35:51Z",
        "updated_at": "2012-12-13T06:19:42Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2393016",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2393016"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2393016"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2393080",
        "pull_request_review_id": null,
        "id": 2393080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzOTMwODA=",
        "diff_hunk": "@@ -0,0 +1,126 @@\n+# Node.js-specific support: module loading, sourceMapping errors\n+\n+fs = require 'fs'\n+path = require 'path'\n+Module = require 'module'\n+CoffeeScript = require './module'\n+{SourceMapConsumer} = require 'source-map'\n+\n+# NodeJS / V8 have no support for transforming positions in stack traces using\n+# sourceMap, so we must monkey-patch Error to display CoffeeScript source\n+# positions.\n+\n+# Ideally, this would happen in a way that is scalable to multiple compile-to-\n+# JS languages trying to do the same thing in the same NodeJS process. We can\n+# implement it as if there were an API, and then patch in support for that\n+# API. The following maybe should be in its own npm module that multiple\n+# compilers can include.\n+\n+patched = false\n+patchStackTrace = ->\n+  return if patched\n+  patched = true\n+\n+  # Map of filenames -> functions that return a sourceMap string.\n+  Module._sourceMaps = {}\n+\n+  # (Assigning to a property of the Module object in the normal module cache is\n+  # unsuitable, because node deletes those objects from the cache if an\n+  # exception is thrown in the module body.)\n+\n+  Error.prepareStackTrace = (err, stack) ->\n+    sourceFiles = {}\n+\n+    getSourceMapping = (filename, line, column) ->\n+      mapString = Module._sourceMaps[filename]?()\n+      if mapString\n+        sourceMap = sourceFiles[filename] ?= new SourceMapConsumer mapString\n+        sourceMap.originalPositionFor {line, column}\n+\n+    frames = for frame in stack\n+      break if frame.getFunction() is exports.runMain\n+      \"  at #{formatSourcePosition frame, getSourceMapping}\"\n+\n+    \"#{err.name}: #{err.message ? ''}\\n#{frames.join '\\n'}\\n\"\n+\n+# Based on http://v8.googlecode.com/svn/tags/3.9.9/src/messages.js\n+# Modified to handle sourceMap\n+formatSourcePosition = (frame, getSourceMapping) ->\n+  fileName = undefined\n+  fileLocation = \"\"\n+\n+  if frame.isNative()\n+    fileLocation = \"native\"\n+  else if frame.isEval()\n+    fileName = frame.getScriptNameOrSourceURL()\n+    fileLocation = frame.getEvalOrigin()  unless fileName\n+  else\n+    fileName = frame.getFileName()\n+\n+  if fileName\n+    line = frame.getLineNumber()\n+    column = frame.getColumnNumber()\n+\n+    # Check for a sourceMap position\n+    if (source = getSourceMapping(fileName, line, column))\n+      fileLocation = \"#{fileName}:#{source.line}:#{source.column}, <js>:#{line}:#{column}\"\n+    else\n+      fileLocation = \"#{fileName}:#{line}:#{column}\"\n+\n+  fileLocation = \"unknown source\"  unless fileLocation\n+\n+  line = \"\"\n+  functionName = frame.getFunction().name\n+  addPrefix = true\n+  isConstructor = frame.isConstructor()\n+  isMethodCall = not (frame.isToplevel() or isConstructor)\n+  if isMethodCall\n+    methodName = frame.getMethodName()\n+    line += frame.getTypeName() + \".\"\n+    if functionName\n+      line += functionName\n+      line += \" [as \" + methodName + \"]\"  if methodName and (methodName isnt functionName)",
        "path": "src/run.coffee",
        "position": null,
        "original_position": 82,
        "commit_id": "0a5cca9f419ce5c1579dc7b78f22105d0e459a2e",
        "original_commit_id": "7278f513a06beb1f59d8257b1cb7bca8505e564f",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` coffee\nline = \"#{line}#{functionName} [as #{methodName}]\" if methodName and methodName isnt functionName\n```\n\nPlease use interpolation when possible to clean this up. The `+` operator should never be used for string concatenation in CoffeeScript.\n",
        "created_at": "2012-12-12T14:40:47Z",
        "updated_at": "2012-12-13T06:19:42Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2393080",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2393080"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2393080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2404091",
        "pull_request_review_id": null,
        "id": 2404091,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDQwOTE=",
        "diff_hunk": "@@ -331,39 +332,11 @@ else\n \n     # --eval\n     if options.eval\n-      evalFn = -> (0;eval) js # TODO: rip off CoffeeScript.eval from jashkenas/coffee-script\n-      domain = try require 'domain'\n-      if domain?\n-        d = domain.create()\n-        d.on 'error', (err) ->\n-          {SourceMapConsumer} = require 'source-map'\n-          Error.prepareStackTrace = (err, stack) ->\n-            sourceMap = new SourceMapConsumer CoffeeScript.sourceMap jsAST, inputSource\n-            frames = stack.map (frame) ->\n-              name = frame.getFunctionName() ? '(unknown)'\n-              line = frame.getLineNumber()\n-              column = frame.getColumnNumber()\n-              filename = frame.getFileName()\n-              if filename?\n-                \"  at #{name} (#{filename}:#{line}:#{column})\"\n-              else\n-                source = sourceMap.originalPositionFor {line, column}\n-                \"  at #{name} (#{options.input ? '<input>'}:#{source.line}:#{source.column}, <js>:#{line}:#{column})\"\n-            errorPos = sourceMap.originalPositionFor {line: stack[0].getLineNumber(), column: stack[0].getColumnNumber()}\n-            originalLine = input.split('\\n')[errorPos.line - 1]\n-            [\n-              \"ERROR: #{err.message}\"\n-              ''\n-              \"#{errorPos.line}: #{originalLine}\"\n-              \"#{errorPos.line.toString().replace /./, '^'}: #{Array(errorPos.column).join '~'}^\"\n-              ''\n-              frames.join '\\n'\n-            ].join '\\n'\n-          console.error err.stack\n-        d.run evalFn\n+      fname = if options.input\n+        fs.realpathSync(options.input)\n       else\n-        process.nextTick evalFn\n-\n+        if options.cli then '<cli>' else '<stdin>'\n+      runMain input, js, jsAST, fname",
        "path": "src/command.coffee",
        "position": 57,
        "original_position": 57,
        "commit_id": "0a5cca9f419ce5c1579dc7b78f22105d0e459a2e",
        "original_commit_id": "7278f513a06beb1f59d8257b1cb7bca8505e564f",
        "user": {
            "login": "kevinmehall",
            "id": 119951,
            "node_id": "MDQ6VXNlcjExOTk1MQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/119951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinmehall",
            "html_url": "https://github.com/kevinmehall",
            "followers_url": "https://api.github.com/users/kevinmehall/followers",
            "following_url": "https://api.github.com/users/kevinmehall/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinmehall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinmehall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinmehall/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinmehall/orgs",
            "repos_url": "https://api.github.com/users/kevinmehall/repos",
            "events_url": "https://api.github.com/users/kevinmehall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinmehall/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I tried that, but `fs.realpathSync` errors on `'<cli>'` and `'<stdin>'`, so it would have to test for those special non-filenames anyway.\n",
        "created_at": "2012-12-13T06:18:40Z",
        "updated_at": "2012-12-13T06:19:42Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2404091",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2404091"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/107#discussion_r2404091"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/107"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2512316",
        "pull_request_review_id": null,
        "id": 2512316,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTIzMTY=",
        "diff_hunk": "@@ -383,8 +383,12 @@ class exports.Compiler\n       block =\n         if block.instanceof JS.BlockStatement then block.body\n         else [block]\n-      # helpers\n-      [].push.apply block, enabledHelpers\n+\n+      # Push function declaration helpers, unshift all other types (VariableDeclarations, etc.)\n+      [fnDeclHelpers, otherHelpers] = partition enabledHelpers, (helper) -> helper.instanceof JS.FunctionDeclaration\n+      [].push.apply block, fnDeclHelpers\n+      [].push.apply block, otherHelpers",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 16,
        "commit_id": "e4ec68b75ea8e394028953ebededcbb1643237f7",
        "original_commit_id": "f8aed22889e259639b554339fbfb8015255d7a6b",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Unshift, right?\n",
        "created_at": "2012-12-27T22:58:14Z",
        "updated_at": "2012-12-28T03:00:02Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/129#discussion_r2512316",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/129",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2512316"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/129#discussion_r2512316"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/129"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2512336",
        "pull_request_review_id": null,
        "id": 2512336,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTIzMzY=",
        "diff_hunk": "@@ -49,3 +49,11 @@\n   mod = if c < 0 then c + b else c\n   div = Math.floor a / b\n   [div, mod]\n+\n+# The partition function takes a list and predicate fn and returns the pair of lists\n+# of elements which do and do not satisfy the predicate, respectively.\n+@partition = (list, fn) ->\n+  result = [[], []]\n+  result[Number !fn item].push item for item in list",
        "path": "src/functional-helpers.coffee",
        "position": null,
        "original_position": 9,
        "commit_id": "e4ec68b75ea8e394028953ebededcbb1643237f7",
        "original_commit_id": "f8aed22889e259639b554339fbfb8015255d7a6b",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`result[+!fn item]`\n",
        "created_at": "2012-12-27T23:01:03Z",
        "updated_at": "2012-12-28T03:00:02Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/129#discussion_r2512336",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/129",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2512336"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/129#discussion_r2512336"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/129"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2512384",
        "pull_request_review_id": null,
        "id": 2512384,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTIzODQ=",
        "diff_hunk": "@@ -49,3 +49,11 @@\n   mod = if c < 0 then c + b else c\n   div = Math.floor a / b\n   [div, mod]\n+\n+# The partition function takes a list and predicate fn and returns the pair of lists\n+# of elements which do and do not satisfy the predicate, respectively.\n+@partition = (list, fn) ->\n+  result = [[], []]\n+  result[Number !fn item].push item for item in list",
        "path": "src/functional-helpers.coffee",
        "position": null,
        "original_position": 9,
        "commit_id": "e4ec68b75ea8e394028953ebededcbb1643237f7",
        "original_commit_id": "f8aed22889e259639b554339fbfb8015255d7a6b",
        "user": {
            "login": "machty",
            "id": 81818,
            "node_id": "MDQ6VXNlcjgxODE4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/81818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/machty",
            "html_url": "https://github.com/machty",
            "followers_url": "https://api.github.com/users/machty/followers",
            "following_url": "https://api.github.com/users/machty/following{/other_user}",
            "gists_url": "https://api.github.com/users/machty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/machty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/machty/subscriptions",
            "organizations_url": "https://api.github.com/users/machty/orgs",
            "repos_url": "https://api.github.com/users/machty/repos",
            "events_url": "https://api.github.com/users/machty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/machty/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Eesh, sorry about that first one, must have tripped up in the dance between\nCSR and ember script. Also, not sure if this is a known thing, but after\nbuilding a fresh CSR, I get immediate errors. The .js files from the repo\ndo test just fine though... Any thoughts?\n\nSecond change looks good. Any reason in particular + is the better option?\n\nUpdates coming post flight home.\n\nOn Thursday, December 27, 2012, Michael Ficarra wrote:\n\n> In src/functional-helpers.coffee:\n> \n> > @@ -49,3 +49,11 @@\n> >    mod = if c < 0 then c + b else c\n> >    div = Math.floor a / b\n> >    [div, mod]\n> > +\n> > +# The partition function takes a list and predicate fn and returns the pair of lists\n> > +# of elements which do and do not satisfy the predicate, respectively.\n> > +@partition = (list, fn) ->\n> > -  result = [[], []]\n> > -  result[Number !fn item].push item for item in list\n> \n> result[+!fn item]\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/michaelficarra/CoffeeScriptRedux/pull/129/files#r2512336.\n\n## \n\n# \n\nAlex Matchneer\nCo-Founder and Lead Dev\nUseful Robot LLC\nhttp://usefulrobot.io\n(614) 395-8832\n",
        "created_at": "2012-12-27T23:10:02Z",
        "updated_at": "2012-12-28T03:00:03Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/129#discussion_r2512384",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/129",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2512384"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/129#discussion_r2512384"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/129"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2520988",
        "pull_request_review_id": null,
        "id": 2520988,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA5ODg=",
        "diff_hunk": "@@ -0,0 +1,5 @@\n+language: node_js\n+node_js:\n+   - \"0.8\"\n+   - \"0.6\"\n+before_script: \"make -j\"",
        "path": ".travis.yml",
        "position": null,
        "original_position": 5,
        "commit_id": "a4a4c7a4025970dfaf9583212052ab1bc37a7507",
        "original_commit_id": "932e955530686f0dcbe237b841daf46f229e0e72",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`make -j build`, in case I change the default to do build-and-test in the future.\n",
        "created_at": "2012-12-30T08:52:50Z",
        "updated_at": "2012-12-30T08:55:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/123#discussion_r2520988",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/123",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2520988"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/123#discussion_r2520988"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/123"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2610137",
        "pull_request_review_id": null,
        "id": 2610137,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTAxMzc=",
        "diff_hunk": "@@ -0,0 +1,62 @@\n+window.CoffeeScript = require './module'\n+\n+# Provide the same api as the original CS\n+CoffeeScript._compile = CoffeeScript.compile\n+CoffeeScript.compile = (input, options = {}) ->",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 5,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "68d75654e5b1abee48e0fb8780bfa85f6cf3f47f",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't like this. I'd be okay with it if the names were switched, though.\n",
        "created_at": "2013-01-10T20:06:46Z",
        "updated_at": "2013-01-10T22:59:59Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2610137",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2610137"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2610137"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611415",
        "pull_request_review_id": null,
        "id": 2611415,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0MTU=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 6,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd prefer to use static single assignment form wherever convenient.\n\n``` coffee\ncsAST = CoffeeScript.parse ...\njsAST = CoffeScript.compile ...\n# you get the idea\n```\n",
        "created_at": "2013-01-10T21:47:59Z",
        "updated_at": "2013-01-10T22:59:59Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611415",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611415"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611415"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611422",
        "pull_request_review_id": null,
        "id": 2611422,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0MjI=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 4,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's an okay name, I guess. Any better suggestions?\n",
        "created_at": "2013-01-10T21:48:12Z",
        "updated_at": "2013-01-10T23:00:00Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611422",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611422"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611422"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611434",
        "pull_request_review_id": null,
        "id": 2611434,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0MzQ=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 20,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` coffee\ndo Function CoffeeScript.compile code, options\n```\n",
        "created_at": "2013-01-10T21:48:53Z",
        "updated_at": "2013-01-10T23:00:00Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611434",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611434"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611434"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611439",
        "pull_request_review_id": null,
        "id": 2611439,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0Mzk=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 25,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "gratuitous parentheses\n",
        "created_at": "2013-01-10T21:49:10Z",
        "updated_at": "2013-01-10T23:00:00Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611439",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611439"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611439"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611440",
        "pull_request_review_id": null,
        "id": 2611440,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0NDA=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 27,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "gratuitous parentheses\n",
        "created_at": "2013-01-10T21:49:17Z",
        "updated_at": "2013-01-10T23:00:00Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611440",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611440"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611440"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611479",
        "pull_request_review_id": null,
        "id": 2611479,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0Nzk=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    if xhr.readyState is 4",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 31,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I prefer an early exit to wrapping the whole function body in an `if`. It looks more like a guard that way. Also, I prefer to use `XMLHttpRequest::DONE`.\n\n``` coffee\nreturn unless xhr.readyState is xhr.DONE\n```\n",
        "created_at": "2013-01-10T21:51:19Z",
        "updated_at": "2013-01-10T23:00:01Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611479",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611479"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611479"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611491",
        "pull_request_review_id": null,
        "id": 2611491,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0OTE=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    if xhr.readyState is 4\n+      if xhr.status in [0, 200]\n+        CoffeeScript.run xhr.responseText\n+      else\n+        throw new Error \"Could not load #{url}\"\n+      callback() if callback",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 36,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` coffee\ndo callback if callback\nreturn\n```\n",
        "created_at": "2013-01-10T21:51:47Z",
        "updated_at": "2013-01-10T23:00:01Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611491",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611491"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611491"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611492",
        "pull_request_review_id": null,
        "id": 2611492,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE0OTI=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 4,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "ghempton",
            "id": 8994,
            "node_id": "MDQ6VXNlcjg5OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghempton",
            "html_url": "https://github.com/ghempton",
            "followers_url": "https://api.github.com/users/ghempton/followers",
            "following_url": "https://api.github.com/users/ghempton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghempton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghempton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghempton/subscriptions",
            "organizations_url": "https://api.github.com/users/ghempton/orgs",
            "repos_url": "https://api.github.com/users/ghempton/repos",
            "events_url": "https://api.github.com/users/ghempton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghempton/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I was having trouble thinking of one myself. Do you have any ideas?\n",
        "created_at": "2013-01-10T21:51:51Z",
        "updated_at": "2013-01-10T23:00:01Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611492",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611492"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611492"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611500",
        "pull_request_review_id": null,
        "id": 2611500,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE1MDA=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    if xhr.readyState is 4\n+      if xhr.status in [0, 200]\n+        CoffeeScript.run xhr.responseText\n+      else\n+        throw new Error \"Could not load #{url}\"\n+      callback() if callback\n+  xhr.send null\n+\n+# Activate CoffeeScript in the browser by having it compile and evaluate\n+# all script tags with a content-type of `text/coffeescript`.\n+# This happens on page load.\n+runScripts = ->\n+  scripts = document.getElementsByTagName 'script'\n+  coffees = (s for s in scripts when s.type is 'text/coffeescript')\n+  index = 0\n+  length = coffees.length\n+  do execute = ->\n+    script = coffees[index++]\n+    if script?.type is 'text/coffeescript'\n+      if script.src\n+        CoffeeScript.load script.src, execute\n+      else\n+        CoffeeScript.run script.innerHTML\n+        execute()",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 54,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` coffee\ndo execute\n```\n",
        "created_at": "2013-01-10T21:52:34Z",
        "updated_at": "2013-01-10T23:00:01Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611500",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611500"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611500"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611519",
        "pull_request_review_id": null,
        "id": 2611519,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE1MTk=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    if xhr.readyState is 4\n+      if xhr.status in [0, 200]\n+        CoffeeScript.run xhr.responseText\n+      else\n+        throw new Error \"Could not load #{url}\"\n+      callback() if callback\n+  xhr.send null\n+\n+# Activate CoffeeScript in the browser by having it compile and evaluate\n+# all script tags with a content-type of `text/coffeescript`.\n+# This happens on page load.\n+runScripts = ->\n+  scripts = document.getElementsByTagName 'script'\n+  coffees = (s for s in scripts when s.type is 'text/coffeescript')\n+  index = 0\n+  length = coffees.length\n+  do execute = ->\n+    script = coffees[index++]\n+    if script?.type is 'text/coffeescript'\n+      if script.src\n+        CoffeeScript.load script.src, execute\n+      else\n+        CoffeeScript.run script.innerHTML\n+        execute()\n+  null\n+\n+# Listen for window load, both in browsers and in IE.\n+if window.addEventListener",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 58,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` coffee\nif addEventListener?\n```\n",
        "created_at": "2013-01-10T21:54:06Z",
        "updated_at": "2013-01-10T23:00:02Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611519",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611519"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611519"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611523",
        "pull_request_review_id": null,
        "id": 2611523,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE1MjM=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    if xhr.readyState is 4\n+      if xhr.status in [0, 200]\n+        CoffeeScript.run xhr.responseText\n+      else\n+        throw new Error \"Could not load #{url}\"\n+      callback() if callback\n+  xhr.send null\n+\n+# Activate CoffeeScript in the browser by having it compile and evaluate\n+# all script tags with a content-type of `text/coffeescript`.\n+# This happens on page load.\n+runScripts = ->\n+  scripts = document.getElementsByTagName 'script'\n+  coffees = (s for s in scripts when s.type is 'text/coffeescript')\n+  index = 0\n+  length = coffees.length\n+  do execute = ->\n+    script = coffees[index++]\n+    if script?.type is 'text/coffeescript'\n+      if script.src\n+        CoffeeScript.load script.src, execute\n+      else\n+        CoffeeScript.run script.innerHTML\n+        execute()\n+  null\n+\n+# Listen for window load, both in browsers and in IE.\n+if window.addEventListener\n+  addEventListener 'DOMContentLoaded', runScripts, no\n+else",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 60,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` coffee\nelse if attachEvent?\n```\n",
        "created_at": "2013-01-10T21:54:19Z",
        "updated_at": "2013-01-10T23:00:02Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611523",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611523"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611523"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611564",
        "pull_request_review_id": null,
        "id": 2611564,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE1NjQ=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    if xhr.readyState is 4\n+      if xhr.status in [0, 200]\n+        CoffeeScript.run xhr.responseText\n+      else\n+        throw new Error \"Could not load #{url}\"\n+      callback() if callback\n+  xhr.send null\n+\n+# Activate CoffeeScript in the browser by having it compile and evaluate\n+# all script tags with a content-type of `text/coffeescript`.\n+# This happens on page load.\n+runScripts = ->\n+  scripts = document.getElementsByTagName 'script'\n+  coffees = (s for s in scripts when s.type is 'text/coffeescript')\n+  index = 0\n+  length = coffees.length\n+  do execute = ->\n+    script = coffees[index++]\n+    if script?.type is 'text/coffeescript'\n+      if script.src\n+        CoffeeScript.load script.src, execute\n+      else\n+        CoffeeScript.run script.innerHTML\n+        execute()\n+  null\n+\n+# Listen for window load, both in browsers and in IE.\n+if window.addEventListener\n+  addEventListener 'DOMContentLoaded', runScripts, no\n+else",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 60,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "ghempton",
            "id": 8994,
            "node_id": "MDQ6VXNlcjg5OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghempton",
            "html_url": "https://github.com/ghempton",
            "followers_url": "https://api.github.com/users/ghempton/followers",
            "following_url": "https://api.github.com/users/ghempton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghempton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghempton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghempton/subscriptions",
            "organizations_url": "https://api.github.com/users/ghempton/orgs",
            "repos_url": "https://api.github.com/users/ghempton/repos",
            "events_url": "https://api.github.com/users/ghempton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghempton/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "fyi, this code is all taken directly from the original coffee-script. I'm fine making the stylistic changes.\n",
        "created_at": "2013-01-10T21:56:47Z",
        "updated_at": "2013-01-10T23:00:02Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611564",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611564"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611564"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611567",
        "pull_request_review_id": null,
        "id": 2611567,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE1Njc=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 4,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about `cs2js`? It's very straightforward about what it is.\n",
        "created_at": "2013-01-10T21:56:58Z",
        "updated_at": "2013-01-10T23:00:02Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611567",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611567"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611567"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611592",
        "pull_request_review_id": null,
        "id": 2611592,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTE1OTI=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.transpile = (input, options = {}) ->\n+  options.optimise ?= on\n+  res = CoffeeScript.parse input, options\n+  res = CoffeeScript.compile res, bare: options.bare\n+  CoffeeScript.js res, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.compile code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  Function(CoffeeScript.compile code, options)()\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject('Microsoft.XMLHTTP')\n+  else\n+    new XMLHttpRequest()\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    if xhr.readyState is 4\n+      if xhr.status in [0, 200]\n+        CoffeeScript.run xhr.responseText\n+      else\n+        throw new Error \"Could not load #{url}\"\n+      callback() if callback\n+  xhr.send null\n+\n+# Activate CoffeeScript in the browser by having it compile and evaluate\n+# all script tags with a content-type of `text/coffeescript`.\n+# This happens on page load.\n+runScripts = ->\n+  scripts = document.getElementsByTagName 'script'\n+  coffees = (s for s in scripts when s.type is 'text/coffeescript')\n+  index = 0\n+  length = coffees.length\n+  do execute = ->\n+    script = coffees[index++]\n+    if script?.type is 'text/coffeescript'\n+      if script.src\n+        CoffeeScript.load script.src, execute\n+      else\n+        CoffeeScript.run script.innerHTML\n+        execute()\n+  null\n+\n+# Listen for window load, both in browsers and in IE.\n+if window.addEventListener\n+  addEventListener 'DOMContentLoaded', runScripts, no\n+else",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 60,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "c0045ac87d3b7916d59d0ea1adb230a83229e03a",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, most people agree (the maintainers included) that the original compiler is not a good source for idiomatic CoffeeScript style.\n",
        "created_at": "2013-01-10T21:58:31Z",
        "updated_at": "2013-01-10T23:00:03Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611592",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2611592"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2611592"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2612200",
        "pull_request_review_id": null,
        "id": 2612200,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTIyMDA=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.cs2js = (input, options = {}) ->\n+  options.optimise ?= on\n+  csAST = CoffeeScript.parse input, options\n+  jsAST = CoffeeScript.compile csAST, bare: options.bare\n+  CoffeeScript.js jsAST, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.cs2js code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  do Function CoffeeScript.cs2js code, options\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject 'Microsoft.XMLHTTP'\n+  else\n+    new XMLHttpRequest\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    return unless xhr.readyState is xhr.DONE\n+    if xhr.status in [0, 200]\n+      CoffeeScript.run xhr.responseText\n+    else\n+      throw new Error \"Could not load #{url}\"\n+    do callback if callback\n+  xhr.send null\n+\n+# Activate CoffeeScript in the browser by having it compile and evaluate\n+# all script tags with a content-type of `text/coffeescript`.\n+# This happens on page load.\n+runScripts = ->\n+  scripts = document.getElementsByTagName 'script'\n+  coffees = (s for s in scripts when s.type is 'text/coffeescript')\n+  index = 0\n+  length = coffees.length\n+  do execute = ->\n+    script = coffees[index++]\n+    if script?.type is 'text/coffeescript'\n+      if script.src",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 50,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "95f85b75e967411d2f101253bb02f1dea0aff146",
        "user": {
            "login": "vendethiel",
            "id": 199499,
            "node_id": "MDQ6VXNlcjE5OTQ5OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/199499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vendethiel",
            "html_url": "https://github.com/vendethiel",
            "followers_url": "https://api.github.com/users/vendethiel/followers",
            "following_url": "https://api.github.com/users/vendethiel/following{/other_user}",
            "gists_url": "https://api.github.com/users/vendethiel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vendethiel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vendethiel/subscriptions",
            "organizations_url": "https://api.github.com/users/vendethiel/orgs",
            "repos_url": "https://api.github.com/users/vendethiel/repos",
            "events_url": "https://api.github.com/users/vendethiel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vendethiel/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why check type again ?\n",
        "created_at": "2013-01-10T22:37:39Z",
        "updated_at": "2013-01-10T23:00:03Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2612200",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2612200"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2612200"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2612398",
        "pull_request_review_id": null,
        "id": 2612398,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTIzOTg=",
        "diff_hunk": "@@ -0,0 +1,61 @@\n+window.CoffeeScript = require './module'\n+\n+# Equivalent to original CS compile\n+CoffeeScript.cs2js = (input, options = {}) ->\n+  options.optimise ?= on\n+  csAST = CoffeeScript.parse input, options\n+  jsAST = CoffeeScript.compile csAST, bare: options.bare\n+  CoffeeScript.js jsAST, compact: options.minify\n+\n+# Use standard JavaScript `eval` to eval code.\n+CoffeeScript.eval = (code, options = {}) ->\n+  options.bare ?= on\n+  options.optimise ?= on\n+  eval CoffeeScript.cs2js code, options\n+\n+# Running code does not provide access to this scope.\n+CoffeeScript.run = (code, options = {}) ->\n+  options.bare = on\n+  options.optimise ?= on\n+  do Function CoffeeScript.cs2js code, options\n+\n+# Load a remote script from the current domain via XHR.\n+CoffeeScript.load = (url, callback) ->\n+  xhr = if window.ActiveXObject\n+    new window.ActiveXObject 'Microsoft.XMLHTTP'\n+  else\n+    new XMLHttpRequest\n+  xhr.open 'GET', url, true\n+  xhr.overrideMimeType 'text/plain' if 'overrideMimeType' of xhr\n+  xhr.onreadystatechange = ->\n+    return unless xhr.readyState is xhr.DONE\n+    if xhr.status in [0, 200]\n+      CoffeeScript.run xhr.responseText\n+    else\n+      throw new Error \"Could not load #{url}\"\n+    do callback if callback\n+  xhr.send null\n+\n+# Activate CoffeeScript in the browser by having it compile and evaluate\n+# all script tags with a content-type of `text/coffeescript`.\n+# This happens on page load.\n+runScripts = ->\n+  scripts = document.getElementsByTagName 'script'\n+  coffees = (s for s in scripts when s.type is 'text/coffeescript')\n+  index = 0\n+  length = coffees.length\n+  do execute = ->\n+    script = coffees[index++]\n+    if script?.type is 'text/coffeescript'\n+      if script.src",
        "path": "src/browser.coffee",
        "position": null,
        "original_position": 50,
        "commit_id": "337d1d4735f8e312d880846e087a67ad66e8755b",
        "original_commit_id": "95f85b75e967411d2f101253bb02f1dea0aff146",
        "user": {
            "login": "ghempton",
            "id": 8994,
            "node_id": "MDQ6VXNlcjg5OTQ=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/8994?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghempton",
            "html_url": "https://github.com/ghempton",
            "followers_url": "https://api.github.com/users/ghempton/followers",
            "following_url": "https://api.github.com/users/ghempton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghempton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghempton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghempton/subscriptions",
            "organizations_url": "https://api.github.com/users/ghempton/orgs",
            "repos_url": "https://api.github.com/users/ghempton/repos",
            "events_url": "https://api.github.com/users/ghempton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghempton/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no idea, was remnant from the original cs code, will fix\n",
        "created_at": "2013-01-10T22:53:58Z",
        "updated_at": "2013-01-10T23:00:03Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2612398",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2612398"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/134#discussion_r2612398"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/134"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868451",
        "pull_request_review_id": null,
        "id": 2868451,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4Njg0NTE=",
        "diff_hunk": "@@ -76,38 +75,29 @@ inspect = (o) -> (require 'util').inspect o, no, 9e9, yes\n             # we might require more input to determine indentation\n             return if not isEnd and (@ss.check /// [#{ws}\\n]* $ ///)?\n \n-            if @base?",
        "path": "src/preprocessor.coffee",
        "position": null,
        "original_position": 16,
        "commit_id": "7241e1d5424d6c86cc0fa619f0e6f3adf7c556b1",
        "original_commit_id": "2709b8fb8eee65efeb5d6c668b0a4869a9f859d0",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@Arelius: This section should be added back in order to support inputs with a consistent base indentation.\n",
        "created_at": "2013-02-02T04:55:32Z",
        "updated_at": "2013-02-02T06:49:54Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868451",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868451"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868451"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868531",
        "pull_request_review_id": null,
        "id": 2868531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4Njg1MzE=",
        "diff_hunk": "@@ -76,38 +75,29 @@ inspect = (o) -> (require 'util').inspect o, no, 9e9, yes\n             # we might require more input to determine indentation\n             return if not isEnd and (@ss.check /// [#{ws}\\n]* $ ///)?\n \n-            if @base?",
        "path": "src/preprocessor.coffee",
        "position": null,
        "original_position": 16,
        "commit_id": "7241e1d5424d6c86cc0fa619f0e6f3adf7c556b1",
        "original_commit_id": "2709b8fb8eee65efeb5d6c668b0a4869a9f859d0",
        "user": {
            "login": "ScatteredRay",
            "id": 45490,
            "node_id": "MDQ6VXNlcjQ1NDkw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/45490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ScatteredRay",
            "html_url": "https://github.com/ScatteredRay",
            "followers_url": "https://api.github.com/users/ScatteredRay/followers",
            "following_url": "https://api.github.com/users/ScatteredRay/following{/other_user}",
            "gists_url": "https://api.github.com/users/ScatteredRay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ScatteredRay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ScatteredRay/subscriptions",
            "organizations_url": "https://api.github.com/users/ScatteredRay/orgs",
            "repos_url": "https://api.github.com/users/ScatteredRay/repos",
            "events_url": "https://api.github.com/users/ScatteredRay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ScatteredRay/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, my original thinking is we would just treat it as an indent level, and then just absorb the first indent of a program, but keeping it like this is nice in that it makes the special case very explicit.\n",
        "created_at": "2013-02-02T06:29:30Z",
        "updated_at": "2013-02-02T06:49:54Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868531",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868531"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868536",
        "pull_request_review_id": null,
        "id": 2868536,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4Njg1MzY=",
        "diff_hunk": "@@ -82,32 +83,29 @@ inspect = (o) -> (require 'util').inspect o, no, 9e9, yes\n             else\n               @base = /// #{@scan /// [#{ws}]* ///} ///\n \n-            if @indent?\n-              level = (0 for c in @context when c is INDENT).length\n-              # a single indent\n-              if @ss.check /// (?:#{@indent}){#{level + 1}} [^#{ws}#] ///\n-                @scan /// (?:#{@indent}){#{level + 1}} ///\n-                @context.observe INDENT\n-                @p INDENT\n-              # one or more dedents\n-              else if level > 0 and @ss.check /// (?:#{@indent}){0,#{level - 1}} [^#{ws}] ///\n-                newLevel = 0\n-                ++newLevel while @scan /// #{@indent} ///\n-                delta = level - newLevel\n-                while delta--\n-                  @context.observe DEDENT\n-                  @p \"#{DEDENT}#{TERM}\"\n-              # unchanged indentation level\n-              else if @ss.check /// (?:#{@indent}){#{level}} [^#{ws}] ///\n-                @scan /// (?:#{@indent}){#{level}} ///\n+            i = 0\n+            lines = @ss.str.substr(0, @ss.pos).split(/\\n/) || ['']",
        "path": "src/preprocessor.coffee",
        "position": null,
        "original_position": 35,
        "commit_id": "7241e1d5424d6c86cc0fa619f0e6f3adf7c556b1",
        "original_commit_id": "56f2fbf9e15f50888cba5f99e53217612c54fb18",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Any reason you copied this up here? It's a heavy operation that we don't want to do unless we see an error.\n",
        "created_at": "2013-02-02T06:35:29Z",
        "updated_at": "2013-02-02T06:49:54Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868536",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868536"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868536"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868537",
        "pull_request_review_id": null,
        "id": 2868537,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4Njg1Mzc=",
        "diff_hunk": "@@ -82,32 +83,29 @@ inspect = (o) -> (require 'util').inspect o, no, 9e9, yes\n             else\n               @base = /// #{@scan /// [#{ws}]* ///} ///\n \n-            if @indent?\n-              level = (0 for c in @context when c is INDENT).length\n-              # a single indent\n-              if @ss.check /// (?:#{@indent}){#{level + 1}} [^#{ws}#] ///\n-                @scan /// (?:#{@indent}){#{level + 1}} ///\n-                @context.observe INDENT\n-                @p INDENT\n-              # one or more dedents\n-              else if level > 0 and @ss.check /// (?:#{@indent}){0,#{level - 1}} [^#{ws}] ///\n-                newLevel = 0\n-                ++newLevel while @scan /// #{@indent} ///\n-                delta = level - newLevel\n-                while delta--\n-                  @context.observe DEDENT\n-                  @p \"#{DEDENT}#{TERM}\"\n-              # unchanged indentation level\n-              else if @ss.check /// (?:#{@indent}){#{level}} [^#{ws}] ///\n-                @scan /// (?:#{@indent}){#{level}} ///\n+            i = 0\n+            lines = @ss.str.substr(0, @ss.pos).split(/\\n/) || ['']",
        "path": "src/preprocessor.coffee",
        "position": null,
        "original_position": 35,
        "commit_id": "7241e1d5424d6c86cc0fa619f0e6f3adf7c556b1",
        "original_commit_id": "56f2fbf9e15f50888cba5f99e53217612c54fb18",
        "user": {
            "login": "ScatteredRay",
            "id": 45490,
            "node_id": "MDQ6VXNlcjQ1NDkw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/45490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ScatteredRay",
            "html_url": "https://github.com/ScatteredRay",
            "followers_url": "https://api.github.com/users/ScatteredRay/followers",
            "following_url": "https://api.github.com/users/ScatteredRay/following{/other_user}",
            "gists_url": "https://api.github.com/users/ScatteredRay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ScatteredRay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ScatteredRay/subscriptions",
            "organizations_url": "https://api.github.com/users/ScatteredRay/orgs",
            "repos_url": "https://api.github.com/users/ScatteredRay/repos",
            "events_url": "https://api.github.com/users/ScatteredRay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ScatteredRay/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Honestly I pulled this out of a much bigger commit, I suspect I used it in the other commit.\n\nGood catch, will remove.\n",
        "created_at": "2013-02-02T06:37:42Z",
        "updated_at": "2013-02-02T06:49:54Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868537",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2868537"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/145#discussion_r2868537"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/145"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2957528",
        "pull_request_review_id": null,
        "id": 2957528,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NTc1Mjg=",
        "diff_hunk": "@@ -35,6 +35,90 @@ var CS = require(\"./nodes\"),\n     , '**': CS.ExpOp\n     },\n \n+  negatableOps = ['instanceof', 'in', 'of'];\n+\n+  for(var i = 0, l = negatableOps.length; i < l; ++i) {\n+    (function(op){\n+      var fn = function(a, b){ return new CS.LogicalNotOp(new constructorLookup[op](a, b)); };\n+      fn.prototype = constructorLookup[op].prototype;\n+      constructorLookup['not ' + op] = fn;\n+    }(negatableOps[i]));\n+  }\n+\n+  var prefixConstructorLookup =\n+    { '++': CS.PreIncrementOp\n+    , '--': CS.PreDecrementOp\n+    , '+': CS.UnaryPlusOp\n+    , '-': CS.UnaryNegateOp\n+    , '!': CS.LogicalNotOp\n+    , 'not': CS.LogicalNotOp\n+    , '~': CS.BitNotOp\n+    , 'do': CS.DoOp\n+    , 'typeof': CS.TypeofOp\n+    , 'delete': CS.DeleteOp\n+    },\n+\n+  postfixConstructorLookup =\n+    { '?': CS.UnaryExistsOp\n+    , '[..]': CS.ShallowCopyArray\n+    , '++': CS.PostIncrementOp\n+    , '--': CS.PostDecrementOp\n+    },\n+\n+  precedenceHierarchy =",
        "path": "src/grammar.pegjs",
        "position": null,
        "original_position": 62,
        "commit_id": "e7f4c6f91e6f006d762d14f67ac7f6587c1d4f01",
        "original_commit_id": "e31839542f3cac7045bb95e6b6dbd653365027b0",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I guess I should probably change this to index by symbols like the others, in case (for example) we want `and` and `&&` to be at different precedence levels one day.\n",
        "created_at": "2013-02-11T06:00:35Z",
        "updated_at": "2013-02-18T02:43:52Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/166#discussion_r2957528",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/166",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/2957528"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/166#discussion_r2957528"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/166"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/7911377",
        "pull_request_review_id": null,
        "id": 7911377,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5MTEzNzc=",
        "diff_hunk": "@@ -283,3 +283,28 @@ suite 'Object Literals', ->\n       eq 2, obj.c.a\n       eq 3, obj.c.b\n       eq 4, obj.d\n+\n+    test '#171: object literals with a key named class', ->",
        "path": "test/objects.coffee",
        "position": null,
        "original_position": 5,
        "commit_id": "e7f72b5ee9fdd0eb2fd1f22b8634837746d7a0f5",
        "original_commit_id": "4e73ef5d43eb80edc65d95594f128ec8f86c00f0",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`#171`? Try `#258: #259:` instead.\n",
        "created_at": "2013-11-26T00:27:24Z",
        "updated_at": "2013-11-26T01:01:05Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/260#discussion_r7911377",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/260",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/7911377"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/260#discussion_r7911377"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/260"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/7972470",
        "pull_request_review_id": null,
        "id": 7972470,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NzI0NzA=",
        "diff_hunk": "@@ -6,6 +6,7 @@ BOOTSTRAPS = $(SRC:src/%.coffee=lib/bootstrap/%.js) lib/bootstrap/parser.js\n LIBMIN = $(LIB:lib/%.js=lib/%.min.js)\n TEST = $(wildcard test/*.coffee | sort)\n ROOT = $(shell pwd)\n+VERSION = $(shell grep '\"version\"' package.json | head -1 | cut -f 4 -d '\"')",
        "path": "Makefile",
        "position": null,
        "original_position": 4,
        "commit_id": "038a8a9f338a3c433a464685f177f089de3e91cd",
        "original_commit_id": "80eaceeb27fcbb3e2b5c1c8ead2d470687fb98a3",
        "user": {
            "login": "dbushong",
            "id": 97162,
            "node_id": "MDQ6VXNlcjk3MTYy",
            "avatar_url": "https://avatars1.githubusercontent.com/u/97162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dbushong",
            "html_url": "https://github.com/dbushong",
            "followers_url": "https://api.github.com/users/dbushong/followers",
            "following_url": "https://api.github.com/users/dbushong/following{/other_user}",
            "gists_url": "https://api.github.com/users/dbushong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dbushong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dbushong/subscriptions",
            "organizations_url": "https://api.github.com/users/dbushong/orgs",
            "repos_url": "https://api.github.com/users/dbushong/repos",
            "events_url": "https://api.github.com/users/dbushong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dbushong/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "how about:\n\n```\nVERSION = $(shell node -e 'console.log(require(\"./package.json\").version)')\n```\n",
        "created_at": "2013-11-27T22:52:37Z",
        "updated_at": "2013-11-27T22:58:35Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/243#discussion_r7972470",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/243",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/7972470"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/243#discussion_r7972470"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/243"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/7972604",
        "pull_request_review_id": null,
        "id": 7972604,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NzI2MDQ=",
        "diff_hunk": "@@ -6,6 +6,7 @@ BOOTSTRAPS = $(SRC:src/%.coffee=lib/bootstrap/%.js) lib/bootstrap/parser.js\n LIBMIN = $(LIB:lib/%.js=lib/%.min.js)\n TEST = $(wildcard test/*.coffee | sort)\n ROOT = $(shell pwd)\n+VERSION = $(shell grep '\"version\"' package.json | head -1 | cut -f 4 -d '\"')",
        "path": "Makefile",
        "position": null,
        "original_position": 4,
        "commit_id": "038a8a9f338a3c433a464685f177f089de3e91cd",
        "original_commit_id": "80eaceeb27fcbb3e2b5c1c8ead2d470687fb98a3",
        "user": {
            "login": "johan",
            "id": 2459,
            "node_id": "MDQ6VXNlcjI0NTk=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johan",
            "html_url": "https://github.com/johan",
            "followers_url": "https://api.github.com/users/johan/followers",
            "following_url": "https://api.github.com/users/johan/following{/other_user}",
            "gists_url": "https://api.github.com/users/johan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johan/subscriptions",
            "organizations_url": "https://api.github.com/users/johan/orgs",
            "repos_url": "https://api.github.com/users/johan/repos",
            "events_url": "https://api.github.com/users/johan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johan/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Much nicer. Also one character shorter! :-)\n",
        "created_at": "2013-11-27T22:57:58Z",
        "updated_at": "2013-11-27T22:58:35Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/243#discussion_r7972604",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/243",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/7972604"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/243#discussion_r7972604"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/243"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12660097",
        "pull_request_review_id": null,
        "id": 12660097,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjYwMDk3",
        "diff_hunk": "@@ -809,6 +815,15 @@ class exports.Compiler\n         else lhs.right = new JS.AssignmentExpression '=', left, lhs.right\n       new JS.LogicalExpression '&&', lhs, new JS.BinaryExpression expression.operator, left, expression.right\n     ]\n+\n+    [CS.Super, ({arguments: args, compile, inScope, ancestry}) ->\n+      # TODO: fix me dirty way to catch assignee\n+      classNode = find ancestry, (node) => node.hasOwnProperty('ctor')\n+      functionName = (find ancestry, (node) -> node.assignee).assignee.data",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 27,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "013af275bc256e5daf35c51403cf9c6f16e140ff",
        "user": {
            "login": "mizchi",
            "id": 73962,
            "node_id": "MDQ6VXNlcjczOTYy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/73962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizchi",
            "html_url": "https://github.com/mizchi",
            "followers_url": "https://api.github.com/users/mizchi/followers",
            "following_url": "https://api.github.com/users/mizchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizchi/subscriptions",
            "organizations_url": "https://api.github.com/users/mizchi/orgs",
            "repos_url": "https://api.github.com/users/mizchi/repos",
            "events_url": "https://api.github.com/users/mizchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I want to catch member assigment of class from here but how can I decide its order?\n",
        "created_at": "2014-05-14T20:42:35Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12660097",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12660097"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12660097"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12660187",
        "pull_request_review_id": null,
        "id": 12660187,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjYwMTg3",
        "diff_hunk": "@@ -661,6 +661,21 @@ suite 'Classes', ->\n       ok a instanceof A\n       eq nonce, a.nonce\n \n+    test 'super function', ->\n+      class Super\n+        func: (@a = 1) ->\n+\n+      class Sub extends Super\n+        func: ->\n+          super\n+          eq @a, 1\n+          super 3\n+          eq @a, 3\n+          # a = super # TODO: must fix",
        "path": "test/classes.coffee",
        "position": null,
        "original_position": 14,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "4c4e41ec2dc5182691e846980f6cb1ec8b1dce98",
        "user": {
            "login": "mizchi",
            "id": 73962,
            "node_id": "MDQ6VXNlcjczOTYy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/73962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizchi",
            "html_url": "https://github.com/mizchi",
            "followers_url": "https://api.github.com/users/mizchi/followers",
            "following_url": "https://api.github.com/users/mizchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizchi/subscriptions",
            "organizations_url": "https://api.github.com/users/mizchi/orgs",
            "repos_url": "https://api.github.com/users/mizchi/repos",
            "events_url": "https://api.github.com/users/mizchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Failure case\n",
        "created_at": "2014-05-14T20:44:16Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12660187",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12660187"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12660187"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12690576",
        "pull_request_review_id": null,
        "id": 12690576,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjkwNTc2",
        "diff_hunk": "@@ -380,6 +380,12 @@ inlineHelpers =\n   exp: -> new JS.CallExpression (memberAccess (new JS.Identifier 'Math'), 'pow'), arguments\n   undef: -> new JS.UnaryExpression 'void', new JS.Literal 0\n   slice: -> new JS.CallExpression (memberAccess (memberAccess (new JS.ArrayExpression []), 'slice'), 'call'), arguments\n+  super: (className, functionName, args) ->\n+    applied = if args.length > 0 then new JS.ArrayExpression (map args, expr) else new JS.Identifier 'arguments'",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 11,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "acc2ea54334ffa2db0d532900015686607ee2eaf",
        "user": {
            "login": "akre54",
            "id": 931368,
            "node_id": "MDQ6VXNlcjkzMTM2OA==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/931368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akre54",
            "html_url": "https://github.com/akre54",
            "followers_url": "https://api.github.com/users/akre54/followers",
            "following_url": "https://api.github.com/users/akre54/following{/other_user}",
            "gists_url": "https://api.github.com/users/akre54/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akre54/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akre54/subscriptions",
            "organizations_url": "https://api.github.com/users/akre54/orgs",
            "repos_url": "https://api.github.com/users/akre54/repos",
            "events_url": "https://api.github.com/users/akre54/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akre54/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You could probably do `call` for > 0 args, falling back to `apply` for 0 args\n",
        "created_at": "2014-05-15T14:07:38Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12690576",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12690576"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12690576"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12691251",
        "pull_request_review_id": null,
        "id": 12691251,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjkxMjUx",
        "diff_hunk": "@@ -380,6 +380,12 @@ inlineHelpers =\n   exp: -> new JS.CallExpression (memberAccess (new JS.Identifier 'Math'), 'pow'), arguments\n   undef: -> new JS.UnaryExpression 'void', new JS.Literal 0\n   slice: -> new JS.CallExpression (memberAccess (memberAccess (new JS.ArrayExpression []), 'slice'), 'call'), arguments\n+  super: (className, functionName, args) ->\n+    applied = if args.length > 0 then new JS.ArrayExpression (map args, expr) else new JS.Identifier 'arguments'",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 11,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "acc2ea54334ffa2db0d532900015686607ee2eaf",
        "user": {
            "login": "mizchi",
            "id": 73962,
            "node_id": "MDQ6VXNlcjczOTYy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/73962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizchi",
            "html_url": "https://github.com/mizchi",
            "followers_url": "https://api.github.com/users/mizchi/followers",
            "following_url": "https://api.github.com/users/mizchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizchi/subscriptions",
            "organizations_url": "https://api.github.com/users/mizchi/orgs",
            "repos_url": "https://api.github.com/users/mizchi/repos",
            "events_url": "https://api.github.com/users/mizchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I checked `jashkenas/coffeescript` now.\n\n``` javascript\n    Sub.prototype.func = function() {\n      Sub.__super__.func.apply(this, arguments);\n      Sub.__super__.func.call(this, 3);\n      return Sub.__super__.func.call(this, 3, 5);\n    };\n```\n\nYes, you are right. I'll fix.\n",
        "created_at": "2014-05-15T14:19:44Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12691251",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12691251"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12691251"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12776614",
        "pull_request_review_id": null,
        "id": 12776614,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzc2NjE0",
        "diff_hunk": "@@ -374,6 +374,7 @@ secondaryExpressionNoImplicitObjectCall = expressionworthy / assignmentExpressio\n expressionworthy\n   = functionLiteral\n   / conditional\n+  / super",
        "path": "src/grammar.pegjs",
        "position": null,
        "original_position": 4,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "f4f6e15f7ba4ce3b195f14067cb418841d765fd4",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Shouldn't this be in `primaryExpression`? `super.a` should be allowed. Though it would introduce ambiguity with `super a`, it should still parse fine.\n",
        "created_at": "2014-05-18T22:06:37Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12776614",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12776614"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12776614"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12777049",
        "pull_request_review_id": null,
        "id": 12777049,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzc3MDQ5",
        "diff_hunk": "@@ -992,6 +993,10 @@ decimal\n         : rp(new CS.Int(+integral));\n     }\n \n+super = SUPER accesses:callExpressionAccesses? secondaryArgs:secondaryArgumentList? {",
        "path": "src/grammar.pegjs",
        "position": null,
        "original_position": 12,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "f4f6e15f7ba4ce3b195f14067cb418841d765fd4",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I probably would've just made this part of `callExpression` so we can keep track of the `NoImplicitCall` state. It's probably best to merge them.\n",
        "created_at": "2014-05-19T00:04:38Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12777049",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12777049"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12777049"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12777088",
        "pull_request_review_id": null,
        "id": 12777088,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzc3MDg4",
        "diff_hunk": "@@ -661,6 +661,23 @@ suite 'Classes', ->\n       ok a instanceof A\n       eq nonce, a.nonce\n \n+    test 'super function', ->",
        "path": "test/classes.coffee",
        "position": null,
        "original_position": 4,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "f4f6e15f7ba4ce3b195f14067cb418841d765fd4",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We're going to need _so_ many more tests. `super` in any position where calls are allowed. `super` in various types functions where it has different semantics: local (\"free\") functions, constructors, methods, bound methods... Also, we should explicitly test any difference between ES6 super and CoffeeScript super, ensuring we match the current CS semantics.\n",
        "created_at": "2014-05-19T00:11:46Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12777088",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12777088"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12777088"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12856729",
        "pull_request_review_id": null,
        "id": 12856729,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODU2NzI5",
        "diff_hunk": "@@ -563,41 +558,38 @@ suite 'Classes', ->\n     #  ok (new SubClass).prop is 'top-super-sub'\n \n     test.skip 'super() calls in constructors of classes that are defined as object properties', -> # Currently syntax error.\n-    #\n-    #  class Hive\n-    #    constructor: (name) -> @name = name\n-    #\n-    #  class Hive.Bee extends Hive\n-    #    constructor: (name) -> super\n-    #\n-    #  maya = new Hive.Bee 'Maya'\n-    #  ok maya.name is 'Maya'\n+      class Hive\n+        constructor: (name) -> @name = name\n+\n+      class Hive.Bee extends Hive\n+        constructor: (name) -> super\n+\n+      maya = new Hive.Bee 'Maya'\n+      ok maya.name is 'Maya'\n \n     test.skip 'calling super and passing along all arguments', -> # Currently syntax error.\n-    #\n-    #  class Parent\n-    #    method: (args...) -> @args = args\n-    #\n-    #  class Child extends Parent\n-    #    method: -> super\n-    #\n-    #  c = new Child\n-    #  c.method 1, 2, 3, 4\n-    #  ok c.args.join(' ') is '1 2 3 4'\n+      class Parent\n+        method: (args...) -> @args = args\n+\n+      class Child extends Parent\n+        method: -> super\n+\n+      c = new Child\n+      c.method 1, 2, 3, 4\n+      ok c.args.join(' ') is '1 2 3 4'\n \n     test.skip '`class extends this`', -> # Currently syntax error.\n-    #\n-    #  class A\n-    #    func: -> 'A'\n-    #\n-    #  B = null\n-    #  makeClass = ->\n-    #    B = class extends this\n-    #      func: -> super + ' B'\n-    #\n-    #  makeClass.call A\n-    #\n-    #  eq (new B()).func(), 'A B'\n+      # class A\n+      #   func: -> 'A'\n+      #\n+      # B = null\n+      # makeClass = ->\n+      #   B = class extends this\n+      #     func: -> super + ' B'",
        "path": "test/classes.coffee",
        "position": null,
        "original_position": 136,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "e98a4090e27aee8fc79cdb28882f3801f4a26a66",
        "user": {
            "login": "mizchi",
            "id": 73962,
            "node_id": "MDQ6VXNlcjczOTYy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/73962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizchi",
            "html_url": "https://github.com/mizchi",
            "followers_url": "https://api.github.com/users/mizchi/followers",
            "following_url": "https://api.github.com/users/mizchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizchi/subscriptions",
            "organizations_url": "https://api.github.com/users/mizchi/orgs",
            "repos_url": "https://api.github.com/users/mizchi/repos",
            "events_url": "https://api.github.com/users/mizchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I tried but I didn't know generating `class$` without var name confliction. Need to change on cscodegen?\n",
        "created_at": "2014-05-20T17:31:16Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12856729",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12856729"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12856729"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12856781",
        "pull_request_review_id": null,
        "id": 12856781,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODU2Nzgx",
        "diff_hunk": "@@ -563,41 +558,38 @@ suite 'Classes', ->\n     #  ok (new SubClass).prop is 'top-super-sub'\n \n     test.skip 'super() calls in constructors of classes that are defined as object properties', -> # Currently syntax error.\n-    #\n-    #  class Hive\n-    #    constructor: (name) -> @name = name\n-    #\n-    #  class Hive.Bee extends Hive\n-    #    constructor: (name) -> super\n-    #\n-    #  maya = new Hive.Bee 'Maya'\n-    #  ok maya.name is 'Maya'\n+      class Hive\n+        constructor: (name) -> @name = name\n+\n+      class Hive.Bee extends Hive\n+        constructor: (name) -> super\n+\n+      maya = new Hive.Bee 'Maya'\n+      ok maya.name is 'Maya'",
        "path": "test/classes.coffee",
        "position": 247,
        "original_position": 94,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "e98a4090e27aee8fc79cdb28882f3801f4a26a66",
        "user": {
            "login": "mizchi",
            "id": 73962,
            "node_id": "MDQ6VXNlcjczOTYy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/73962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizchi",
            "html_url": "https://github.com/mizchi",
            "followers_url": "https://api.github.com/users/mizchi/followers",
            "following_url": "https://api.github.com/users/mizchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizchi/subscriptions",
            "organizations_url": "https://api.github.com/users/mizchi/orgs",
            "repos_url": "https://api.github.com/users/mizchi/repos",
            "events_url": "https://api.github.com/users/mizchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I removed test added by me and activated some `jaskenas/coffee-script` tests\n",
        "created_at": "2014-05-20T17:32:15Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12856781",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12856781"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12856781"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12904971",
        "pull_request_review_id": null,
        "id": 12904971,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA0OTcx",
        "diff_hunk": "@@ -589,7 +589,10 @@ leftHandSideExpressionNoImplicitObjectCall = callExpressionNoImplicitObjectCall\n     / secondaryExpressionNoImplicitObjectCall\n \n callExpression\n-  = fn:memberExpression accesses:callExpressionAccesses? secondaryArgs:(\"?\"? secondaryArgumentList)? {\n+  = SUPER accesses:callExpressionAccesses? secondaryArgs:secondaryArgumentList? {",
        "path": "src/grammar.pegjs",
        "position": null,
        "original_position": 5,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "0c723c36e23ba64041cb0b74782236ddbc92cfb2",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Please copy these lines to the `callExpressionNoImplicitObjectCall` definition. That rule is used in places where a call is not allowed to be passed an implicit object, such as the `B C` call in\n\n``` coffee\nclass A extends B C\n  constructor: ->\n```\n\nThen include a test for a `super` call in that position.\n",
        "created_at": "2014-05-21T16:06:06Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12904971",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12904971"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12904971"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12905004",
        "pull_request_review_id": null,
        "id": 12905004,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA1MDA0",
        "diff_hunk": "@@ -563,41 +558,38 @@ suite 'Classes', ->\n     #  ok (new SubClass).prop is 'top-super-sub'\n \n     test.skip 'super() calls in constructors of classes that are defined as object properties', -> # Currently syntax error.\n-    #\n-    #  class Hive\n-    #    constructor: (name) -> @name = name\n-    #\n-    #  class Hive.Bee extends Hive\n-    #    constructor: (name) -> super\n-    #\n-    #  maya = new Hive.Bee 'Maya'\n-    #  ok maya.name is 'Maya'\n+      class Hive\n+        constructor: (name) -> @name = name\n+\n+      class Hive.Bee extends Hive\n+        constructor: (name) -> super\n+\n+      maya = new Hive.Bee 'Maya'\n+      ok maya.name is 'Maya'",
        "path": "test/classes.coffee",
        "position": 247,
        "original_position": 94,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "e98a4090e27aee8fc79cdb28882f3801f4a26a66",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Good idea, thanks.\n",
        "created_at": "2014-05-21T16:06:40Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12905004",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12905004"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12905004"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12905081",
        "pull_request_review_id": null,
        "id": 12905081,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA1MDgx",
        "diff_hunk": "@@ -563,41 +558,38 @@ suite 'Classes', ->\n     #  ok (new SubClass).prop is 'top-super-sub'\n \n     test.skip 'super() calls in constructors of classes that are defined as object properties', -> # Currently syntax error.\n-    #\n-    #  class Hive\n-    #    constructor: (name) -> @name = name\n-    #\n-    #  class Hive.Bee extends Hive\n-    #    constructor: (name) -> super\n-    #\n-    #  maya = new Hive.Bee 'Maya'\n-    #  ok maya.name is 'Maya'\n+      class Hive\n+        constructor: (name) -> @name = name\n+\n+      class Hive.Bee extends Hive\n+        constructor: (name) -> super\n+\n+      maya = new Hive.Bee 'Maya'\n+      ok maya.name is 'Maya'\n \n     test.skip 'calling super and passing along all arguments', -> # Currently syntax error.\n-    #\n-    #  class Parent\n-    #    method: (args...) -> @args = args\n-    #\n-    #  class Child extends Parent\n-    #    method: -> super\n-    #\n-    #  c = new Child\n-    #  c.method 1, 2, 3, 4\n-    #  ok c.args.join(' ') is '1 2 3 4'\n+      class Parent\n+        method: (args...) -> @args = args\n+\n+      class Child extends Parent\n+        method: -> super\n+\n+      c = new Child\n+      c.method 1, 2, 3, 4\n+      ok c.args.join(' ') is '1 2 3 4'\n \n     test.skip '`class extends this`', -> # Currently syntax error.\n-    #\n-    #  class A\n-    #    func: -> 'A'\n-    #\n-    #  B = null\n-    #  makeClass = ->\n-    #    B = class extends this\n-    #      func: -> super + ' B'\n-    #\n-    #  makeClass.call A\n-    #\n-    #  eq (new B()).func(), 'A B'\n+      # class A\n+      #   func: -> 'A'\n+      #\n+      # B = null\n+      # makeClass = ->\n+      #   B = class extends this\n+      #     func: -> super + ' B'",
        "path": "test/classes.coffee",
        "position": null,
        "original_position": 136,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "e98a4090e27aee8fc79cdb28882f3801f4a26a66",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, `cscodegen` is for generating CoffeeScript source code from a CoffeeScriptRedux AST (and is woefully incomplete). Can you explain the problem in more detail?\n",
        "created_at": "2014-05-21T16:07:55Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12905081",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12905081"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12905081"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12955978",
        "pull_request_review_id": null,
        "id": 12955978,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTU1OTc4",
        "diff_hunk": "@@ -484,106 +484,98 @@ suite 'Classes', ->\n \n   suite 'Inheritance and Super', ->\n \n-    test.skip 'classes with a four-level inheritance chain', -> # Currently syntax error.\n-    #\n-    #  class Base\n-    #    func: (string) ->\n-    #      \"zero/#{string}\"\n-    #\n-    #    @static: (string) ->\n-    #      \"static/#{string}\"\n-    #\n-    #  class FirstChild extends Base\n-    #    func: (string) ->\n-    #      super('one/') + string\n-    #\n-    #  SecondChild = class extends FirstChild\n-    #    func: (string) ->\n-    #      super('two/') + string\n-    #\n-    #  thirdCtor = ->\n-    #    @array = [1, 2, 3]\n-    #\n-    #  class ThirdChild extends SecondChild\n-    #    constructor: -> thirdCtor.call this\n-    #\n-    #    # Gratuitous comment for testing.\n-    #    func: (string) ->\n-    #      super('three/') + string\n-    #\n-    #  result = (new ThirdChild).func 'four'\n-    #\n-    #  ok result is 'zero/one/two/three/four'\n-    #  ok Base.static('word') is 'static/word'\n-    #\n-    #  FirstChild::func = (string) ->\n-    #    super('one/').length + string\n-    #\n-    #  result = (new ThirdChild).func 'four'\n-    #\n-    #  ok result is '9two/three/four'\n-    #\n-    #  ok (new ThirdChild).array.join(' ') is '1 2 3'\n+    test 'classes with a four-level inheritance chain', ->\n+      class Base\n+        func: (string) ->\n+          \"zero/#{string}\"\n \n-    test.skip 'constructors with inheritance and super', -> # Currently syntax error.\n-    #\n-    #  identity = (f) -> f\n-    #\n-    #  class TopClass\n-    #    constructor: (arg) ->\n-    #      @prop = 'top-' + arg\n-    #\n-    #  class SuperClass extends TopClass\n-    #    constructor: (arg) ->\n-    #      identity super 'super-' + arg\n-    #\n-    #  class SubClass extends SuperClass\n-    #    constructor: ->\n-    #      identity super 'sub'\n-    #\n-    #  ok (new SubClass).prop is 'top-super-sub'\n+        @static: (string) ->\n+          \"static/#{string}\"\n \n-    test.skip \"super with plain ol' functions as the original constructors\", -> # Currently syntax error.\n-    #\n-    #  TopClass = (arg) ->\n-    #    @prop = 'top-' + arg\n-    #    this\n-    #\n-    #  SuperClass = (arg) ->\n-    #    super 'super-' + arg\n-    #    this\n-    #\n-    #  SubClass = ->\n-    #    super 'sub'\n-    #    this\n-    #\n-    #  SuperClass extends TopClass\n-    #  SubClass extends SuperClass\n-    #\n-    #  ok (new SubClass).prop is 'top-super-sub'\n+      class FirstChild extends Base\n+        func: (string) ->\n+          super('one/') + string\n \n-    test.skip 'super() calls in constructors of classes that are defined as object properties', -> # Currently syntax error.\n-    #\n-    #  class Hive\n-    #    constructor: (name) -> @name = name\n-    #\n-    #  class Hive.Bee extends Hive\n-    #    constructor: (name) -> super\n-    #\n-    #  maya = new Hive.Bee 'Maya'\n-    #  ok maya.name is 'Maya'\n+      SecondChild = class extends FirstChild\n+        func: (string) ->\n+          super('two/') + string\n \n-    test.skip 'calling super and passing along all arguments', -> # Currently syntax error.\n-    #\n-    #  class Parent\n-    #    method: (args...) -> @args = args\n-    #\n-    #  class Child extends Parent\n-    #    method: -> super\n-    #\n-    #  c = new Child\n-    #  c.method 1, 2, 3, 4\n-    #  ok c.args.join(' ') is '1 2 3 4'\n+      thirdCtor = ->\n+        @array = [1, 2, 3]\n+\n+      class ThirdChild extends SecondChild\n+        constructor: -> thirdCtor.call this\n+\n+        # Gratuitous comment for testing.\n+        func: (string) ->\n+          super('three/') + string\n+\n+      result = (new ThirdChild).func 'four'\n+\n+      ok result is 'zero/one/two/three/four'\n+      ok Base.static('word') is 'static/word'\n+\n+      FirstChild::func = (string) ->\n+        super('one/').length + string\n+\n+      result = (new ThirdChild).func 'four'\n+      # eq result, '9two/three/four' # can't pass super('one/').length + string",
        "path": "test/classes.coffee",
        "position": 202,
        "original_position": 202,
        "commit_id": "9a16e21655472ee5f4cd9606be9fef876e192ab8",
        "original_commit_id": "11699fceda7ce8e0823841962d66b1afbad92a2e",
        "user": {
            "login": "mizchi",
            "id": 73962,
            "node_id": "MDQ6VXNlcjczOTYy",
            "avatar_url": "https://avatars2.githubusercontent.com/u/73962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mizchi",
            "html_url": "https://github.com/mizchi",
            "followers_url": "https://api.github.com/users/mizchi/followers",
            "following_url": "https://api.github.com/users/mizchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mizchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mizchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mizchi/subscriptions",
            "organizations_url": "https://api.github.com/users/mizchi/orgs",
            "repos_url": "https://api.github.com/users/mizchi/repos",
            "events_url": "https://api.github.com/users/mizchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mizchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I failed it yet.\n",
        "created_at": "2014-05-22T15:27:33Z",
        "updated_at": "2014-05-22T16:06:30Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12955978",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/12955978"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/313#discussion_r12955978"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/313"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14854496",
        "pull_request_review_id": null,
        "id": 14854496,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODU0NDk2",
        "diff_hunk": "@@ -7,7 +7,7 @@ with external scopes.\n \n Import the helpers we plan to use.\n \n-    {extend, last} = require './helpers'\n+    #{extend, last} = require './helpers'",
        "path": "test/scope.litcoffee",
        "position": 5,
        "original_position": 5,
        "commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "original_commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "user": {
            "login": "slang800",
            "id": 1049204,
            "node_id": "MDQ6VXNlcjEwNDkyMDQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1049204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slang800",
            "html_url": "https://github.com/slang800",
            "followers_url": "https://api.github.com/users/slang800/followers",
            "following_url": "https://api.github.com/users/slang800/following{/other_user}",
            "gists_url": "https://api.github.com/users/slang800/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slang800/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slang800/subscriptions",
            "organizations_url": "https://api.github.com/users/slang800/orgs",
            "repos_url": "https://api.github.com/users/slang800/repos",
            "events_url": "https://api.github.com/users/slang800/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slang800/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what's this change for?\n",
        "created_at": "2014-07-12T17:57:47Z",
        "updated_at": "2014-07-12T17:57:47Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14854496",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14854496"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14854496"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14860107",
        "pull_request_review_id": null,
        "id": 14860107,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODYwMTA3",
        "diff_hunk": "@@ -7,7 +7,7 @@ with external scopes.\n \n Import the helpers we plan to use.\n \n-    {extend, last} = require './helpers'\n+    #{extend, last} = require './helpers'",
        "path": "test/scope.litcoffee",
        "position": 5,
        "original_position": 5,
        "commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "original_commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "user": {
            "login": "Starefossen",
            "id": 968267,
            "node_id": "MDQ6VXNlcjk2ODI2Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/968267?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Starefossen",
            "html_url": "https://github.com/Starefossen",
            "followers_url": "https://api.github.com/users/Starefossen/followers",
            "following_url": "https://api.github.com/users/Starefossen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Starefossen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Starefossen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Starefossen/subscriptions",
            "organizations_url": "https://api.github.com/users/Starefossen/orgs",
            "repos_url": "https://api.github.com/users/Starefossen/repos",
            "events_url": "https://api.github.com/users/Starefossen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Starefossen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The file [helpers.coffee](https://github.com/michaelficarra/CoffeeScriptRedux/blob/master/test/helpers.coffee) does no longer exist. This literate-part of the test suite was probably commented out while this file still existed. The tests ran just fine without this file so I didn't bother investigating any further.\n",
        "created_at": "2014-07-13T20:03:49Z",
        "updated_at": "2014-07-13T20:04:44Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14860107",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14860107"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14860107"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14860199",
        "pull_request_review_id": null,
        "id": 14860199,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODYwMTk5",
        "diff_hunk": "@@ -7,7 +7,7 @@ with external scopes.\n \n Import the helpers we plan to use.\n \n-    {extend, last} = require './helpers'\n+    #{extend, last} = require './helpers'",
        "path": "test/scope.litcoffee",
        "position": 5,
        "original_position": 5,
        "commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "original_commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "user": {
            "login": "slang800",
            "id": 1049204,
            "node_id": "MDQ6VXNlcjEwNDkyMDQ=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/1049204?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/slang800",
            "html_url": "https://github.com/slang800",
            "followers_url": "https://api.github.com/users/slang800/followers",
            "following_url": "https://api.github.com/users/slang800/following{/other_user}",
            "gists_url": "https://api.github.com/users/slang800/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/slang800/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/slang800/subscriptions",
            "organizations_url": "https://api.github.com/users/slang800/orgs",
            "repos_url": "https://api.github.com/users/slang800/repos",
            "events_url": "https://api.github.com/users/slang800/events{/privacy}",
            "received_events_url": "https://api.github.com/users/slang800/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It looks like it didn't exist when the file was added either: https://github.com/michaelficarra/CoffeeScriptRedux/tree/a06b54e208c5953992c7dc1e54499930a7058cd8/test\n\nDoes the test pass without this commented out?\n",
        "created_at": "2014-07-13T20:31:18Z",
        "updated_at": "2014-07-13T20:31:18Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14860199",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14860199"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14860199"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14865587",
        "pull_request_review_id": null,
        "id": 14865587,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODY1NTg3",
        "diff_hunk": "@@ -7,7 +7,7 @@ with external scopes.\n \n Import the helpers we plan to use.\n \n-    {extend, last} = require './helpers'\n+    #{extend, last} = require './helpers'",
        "path": "test/scope.litcoffee",
        "position": 5,
        "original_position": 5,
        "commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "original_commit_id": "a7e913d97c9b4e7e1aaaf39dbe44a6cca676f3ae",
        "user": {
            "login": "Starefossen",
            "id": 968267,
            "node_id": "MDQ6VXNlcjk2ODI2Nw==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/968267?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Starefossen",
            "html_url": "https://github.com/Starefossen",
            "followers_url": "https://api.github.com/users/Starefossen/followers",
            "following_url": "https://api.github.com/users/Starefossen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Starefossen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Starefossen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Starefossen/subscriptions",
            "organizations_url": "https://api.github.com/users/Starefossen/orgs",
            "repos_url": "https://api.github.com/users/Starefossen/repos",
            "events_url": "https://api.github.com/users/Starefossen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Starefossen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "No, it does not pass without this commented out. It doesn't even run.\n\n```\nError: Cannot find module './helpers'\n```\n",
        "created_at": "2014-07-14T06:18:35Z",
        "updated_at": "2014-07-14T06:18:35Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14865587",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14865587"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/294#discussion_r14865587"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/294"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14647864",
        "pull_request_review_id": null,
        "id": 14647864,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjQ3ODY0",
        "diff_hunk": "@@ -0,0 +1,1204 @@\n+{\n+  @CS = require('./nodes')\n+\n+  @constructorLookup =\n+    '||': @CS.LogicalOrOp\n+    'or': @CS.LogicalOrOp\n+    '&&': @CS.LogicalAndOp\n+    'and': @CS.LogicalAndOp\n+    '|': @CS.BitOrOp\n+    '^': @CS.BitXorOp\n+    '&': @CS.BitAndOp\n+    '?': @CS.ExistsOp\n+    '==': @CS.EQOp\n+    'is': @CS.EQOp\n+    '!=': @CS.NEQOp\n+    'isnt': @CS.NEQOp\n+    '<=': @CS.LTEOp\n+    '>=': @CS.GTEOp\n+    '<': @CS.LTOp\n+    '>': @CS.GTOp\n+    'extends': @CS.ExtendsOp\n+    'instanceof': @CS.InstanceofOp\n+    'in': @CS.InOp\n+    'of': @CS.OfOp\n+    '<<': @CS.LeftShiftOp\n+    '>>': @CS.SignedRightShiftOp\n+    '>>>': @CS.UnsignedRightShiftOp\n+    '+': @CS.PlusOp\n+    '-': @CS.SubtractOp\n+    '*': @CS.MultiplyOp\n+    '/': @CS.DivideOp\n+    '%': @CS.RemOp\n+    '**': @CS.ExpOp\n+\n+  negatableOps = ['instanceof', 'in', 'of']\n+  chainableComparisonOps = ['<=', '>=', '<', '>', '==', 'is', '!=', 'isnt']\n+\n+  rightAssocOps = [';', '=', '?', '**']\n+  precedenceHierarchy =\n+    [ ['or', '||']\n+      ['and', '&&']\n+      ['|']\n+      ['^']\n+      ['&']\n+      ['?']\n+      ['is', '==', 'isnt', '!=']\n+      ['instanceof', 'in', 'of', '<=', '>=', '<', '>']\n+      ['<<', '>>', '>>>']\n+      ['+', '-']\n+      ['*', '/', '%']\n+      ['**']\n+    ]\n+\n+  precedenceTable = do ->\n+    table = {}\n+    for ops, level in precedenceHierarchy\n+      for op in ops\n+        table[op] = level\n+    table\n+\n+  RIGHT_ASSOCIATIVE = {}\n+  LEFT_ASSOCIATIVE = {}\n+\n+  associativities = do ->\n+    result = {}\n+    for own op of precedenceTable\n+      result[op] = LEFT_ASSOCIATIVE\n+    for rightAssocOp in rightAssocOps\n+      result[rightAssocOp] = RIGHT_ASSOCIATIVE\n+    result\n+\n+  for op in negatableOps then do (op) =>\n+    fn = (a, b) => new @CS.LogicalNotOp new @constructorLookup[op] a, b\n+    fn.prototype = @constructorLookup[op].prototype\n+    negatedOp = \"not #{op}\"\n+    @constructorLookup[negatedOp] = fn\n+    precedenceTable[negatedOp] = precedenceTable[op]\n+    associativities[negatedOp] = associativities[op]\n+\n+\n+  @prefixConstructorLookup =\n+    '++': @CS.PreIncrementOp\n+    '--': @CS.PreDecrementOp\n+    '+': @CS.UnaryPlusOp\n+    '-': @CS.UnaryNegateOp\n+    '!': @CS.LogicalNotOp\n+    'not': @CS.LogicalNotOp\n+    '~': @CS.BitNotOp\n+    'do': @CS.DoOp\n+    'typeof': @CS.TypeofOp\n+    'delete': @CS.DeleteOp\n+\n+  @postfixConstructorLookup =\n+    '?': @CS.UnaryExistsOp\n+    '[..]': @CS.ShallowCopyArray\n+    '++': @CS.PostIncrementOp\n+    '--': @CS.PostDecrementOp\n+\n+  @foldl = (fn, memo, list) ->\n+    for item in list\n+      memo = fn memo, item\n+    memo\n+  @foldr = (fn, memo, list) ->\n+    for item in list by -1\n+      memo = fn memo, item\n+    memo\n+\n+  # TODO: clean up and use a functional approach; stack === recursion\n+  @foldBinaryExpr = (parts, ignoreChains) =>\n+    return parts[0] if parts.length < 3 # should never happen\n+    stack = [].slice.call(parts, 0, 3)\n+    parts = [].slice.call(parts, 3)\n+\n+    while parts.length > 0\n+      nextOp = parts[0]\n+\n+      if not ignoreChains and stack.length > 2\n+        operator = stack[stack.length - 2];\n+        # reduce chained comparisons\n+        if operator in chainableComparisonOps and nextOp in chainableComparisonOps\n+          chainStack = stack[-3..]\n+          stack = stack[0...stack.length - 3]\n+          loop\n+            operator = nextOp\n+            chainStack.push parts.shift(), parts.shift()\n+            nextOp = parts[0]\n+            if nextOp\n+              nextPrec = precedenceTable[nextOp]\n+              prec = precedenceTable[operator]\n+            # TODO: I would love `a < b is c < d` to instead denote `(a < b) is (c < d)`\n+            break unless nextOp? and (nextPrec > prec or nextOp in chainableComparisonOps)\n+          stack.push new @CS.ChainedComparisonOp @foldBinaryExpr chainStack, true\n+          continue\n+\n+      # reduce\n+      while \\\n+          stack.length > 2 and \\\n+          ( \\",
        "path": "src/grammar.pegcoffee",
        "position": null,
        "original_position": 138,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "cabb60a2971827b264ddb14460a234e95c637d04",
        "user": {
            "login": "lydell",
            "id": 2142817,
            "node_id": "MDQ6VXNlcjIxNDI4MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2142817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lydell",
            "html_url": "https://github.com/lydell",
            "followers_url": "https://api.github.com/users/lydell/followers",
            "following_url": "https://api.github.com/users/lydell/following{/other_user}",
            "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
            "organizations_url": "https://api.github.com/users/lydell/orgs",
            "repos_url": "https://api.github.com/users/lydell/repos",
            "events_url": "https://api.github.com/users/lydell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lydell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This can be formatted more nicely in coffee-script 1.7, but unfortunately the pegjs-coffee-plugin uses 1.6.\n",
        "created_at": "2014-07-08T11:31:59Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r14647864",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14647864"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r14647864"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14647943",
        "pull_request_review_id": null,
        "id": 14647943,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjQ3OTQz",
        "diff_hunk": "@@ -0,0 +1,1204 @@\n+{\n+  @CS = require('./nodes')\n+\n+  @constructorLookup =\n+    '||': @CS.LogicalOrOp\n+    'or': @CS.LogicalOrOp\n+    '&&': @CS.LogicalAndOp\n+    'and': @CS.LogicalAndOp\n+    '|': @CS.BitOrOp\n+    '^': @CS.BitXorOp\n+    '&': @CS.BitAndOp\n+    '?': @CS.ExistsOp\n+    '==': @CS.EQOp\n+    'is': @CS.EQOp\n+    '!=': @CS.NEQOp\n+    'isnt': @CS.NEQOp\n+    '<=': @CS.LTEOp\n+    '>=': @CS.GTEOp\n+    '<': @CS.LTOp\n+    '>': @CS.GTOp\n+    'extends': @CS.ExtendsOp\n+    'instanceof': @CS.InstanceofOp\n+    'in': @CS.InOp\n+    'of': @CS.OfOp\n+    '<<': @CS.LeftShiftOp\n+    '>>': @CS.SignedRightShiftOp\n+    '>>>': @CS.UnsignedRightShiftOp\n+    '+': @CS.PlusOp\n+    '-': @CS.SubtractOp\n+    '*': @CS.MultiplyOp\n+    '/': @CS.DivideOp\n+    '%': @CS.RemOp\n+    '**': @CS.ExpOp\n+\n+  negatableOps = ['instanceof', 'in', 'of']\n+  chainableComparisonOps = ['<=', '>=', '<', '>', '==', 'is', '!=', 'isnt']\n+\n+  rightAssocOps = [';', '=', '?', '**']\n+  precedenceHierarchy =\n+    [ ['or', '||']\n+      ['and', '&&']\n+      ['|']\n+      ['^']\n+      ['&']\n+      ['?']\n+      ['is', '==', 'isnt', '!=']\n+      ['instanceof', 'in', 'of', '<=', '>=', '<', '>']\n+      ['<<', '>>', '>>>']\n+      ['+', '-']\n+      ['*', '/', '%']\n+      ['**']\n+    ]\n+\n+  precedenceTable = do ->\n+    table = {}\n+    for ops, level in precedenceHierarchy\n+      for op in ops\n+        table[op] = level\n+    table\n+\n+  RIGHT_ASSOCIATIVE = {}\n+  LEFT_ASSOCIATIVE = {}\n+\n+  associativities = do ->\n+    result = {}\n+    for own op of precedenceTable\n+      result[op] = LEFT_ASSOCIATIVE\n+    for rightAssocOp in rightAssocOps\n+      result[rightAssocOp] = RIGHT_ASSOCIATIVE\n+    result\n+\n+  for op in negatableOps then do (op) =>\n+    fn = (a, b) => new @CS.LogicalNotOp new @constructorLookup[op] a, b\n+    fn.prototype = @constructorLookup[op].prototype\n+    negatedOp = \"not #{op}\"\n+    @constructorLookup[negatedOp] = fn\n+    precedenceTable[negatedOp] = precedenceTable[op]\n+    associativities[negatedOp] = associativities[op]\n+\n+\n+  @prefixConstructorLookup =\n+    '++': @CS.PreIncrementOp\n+    '--': @CS.PreDecrementOp\n+    '+': @CS.UnaryPlusOp\n+    '-': @CS.UnaryNegateOp\n+    '!': @CS.LogicalNotOp\n+    'not': @CS.LogicalNotOp\n+    '~': @CS.BitNotOp\n+    'do': @CS.DoOp\n+    'typeof': @CS.TypeofOp\n+    'delete': @CS.DeleteOp\n+\n+  @postfixConstructorLookup =\n+    '?': @CS.UnaryExistsOp\n+    '[..]': @CS.ShallowCopyArray\n+    '++': @CS.PostIncrementOp\n+    '--': @CS.PostDecrementOp\n+\n+  @foldl = (fn, memo, list) ->\n+    for item in list\n+      memo = fn memo, item\n+    memo\n+  @foldr = (fn, memo, list) ->\n+    for item in list by -1\n+      memo = fn memo, item\n+    memo\n+\n+  # TODO: clean up and use a functional approach; stack === recursion\n+  @foldBinaryExpr = (parts, ignoreChains) =>\n+    return parts[0] if parts.length < 3 # should never happen\n+    stack = [].slice.call(parts, 0, 3)\n+    parts = [].slice.call(parts, 3)\n+\n+    while parts.length > 0\n+      nextOp = parts[0]\n+\n+      if not ignoreChains and stack.length > 2\n+        operator = stack[stack.length - 2];\n+        # reduce chained comparisons\n+        if operator in chainableComparisonOps and nextOp in chainableComparisonOps\n+          chainStack = stack[-3..]\n+          stack = stack[0...stack.length - 3]\n+          loop\n+            operator = nextOp\n+            chainStack.push parts.shift(), parts.shift()\n+            nextOp = parts[0]\n+            if nextOp\n+              nextPrec = precedenceTable[nextOp]\n+              prec = precedenceTable[operator]\n+            # TODO: I would love `a < b is c < d` to instead denote `(a < b) is (c < d)`\n+            break unless nextOp? and (nextPrec > prec or nextOp in chainableComparisonOps)\n+          stack.push new @CS.ChainedComparisonOp @foldBinaryExpr chainStack, true\n+          continue\n+\n+      # reduce\n+      while \\\n+          stack.length > 2 and \\\n+          ( \\\n+          operator = stack[stack.length - 2]\n+          prec = precedenceTable[operator]\n+          nextPrec = precedenceTable[nextOp]\n+          nextPrec < prec or\n+          operator in chainableComparisonOps and nextOp in chainableComparisonOps or\n+          nextPrec is prec and associativities[operator] is LEFT_ASSOCIATIVE\n+          )\n+        rightOperand = stack.pop()\n+        stack.pop() # operator\n+        leftOperand = stack.pop()\n+        stack.push new @constructorLookup[operator] leftOperand, rightOperand\n+\n+      # shift\n+      stack.push parts.shift() # operator\n+      stack.push parts.shift() # next operand\n+\n+    # reduce the rest of the stack\n+    expr = stack.pop()\n+    while stack.length > 0\n+      expr = new @constructorLookup[stack.pop()] stack.pop(), expr\n+\n+    expr\n+\n+  @createInterpolation = (es) =>\n+    init = new @CS.String('').g()\n+    @foldl (memo, s) =>\n+      if s instanceof @CS.String\n+        left = memo\n+        while left\n+          if left instanceof @CS.String\n+            if left is init\n+              @c left, s\n+              delete left.generated\n+            left.data = \"#{left.data}#{s.data}\"\n+            return memo\n+          else if left instanceof @CS.ConcatOp\n+            left = left.right\n+          else\n+            break\n+      new @CS.ConcatOp memo, s\n+    , init, es\n+\n+  @createMemberExpression = (e, accesses) =>\n+    @foldl (left, access) =>\n+      F = ->\n+      F.prototype = access.op.prototype\n+      o = new F\n+      # rather safely assumes access.op is returning non-Object\n+      access.op.call o, left, access.operands...\n+      @c (o.r left.raw + access.raw), e\n+    , e, accesses\n+\n+  @isValidRegExpFlags = (flags) ->\n+    return true unless flags\n+    return false if flags.length > 4\n+    flags.sort()\n+    flag = null\n+    for f in flags\n+      return false if flag is f\n+      flag = f\n+    true\n+\n+  # TODO: refactor this\n+  @stripLeadingWhitespace = (str) ->\n+    str = str.trimRight()\n+    matchStr = str\n+    indent = null\n+    while match = /\\n+([^\\n\\S]*)/.exec matchStr\n+      [wholeMatch, attempt] = match\n+      matchStr = matchStr[match.index + wholeMatch.length..]\n+      if not indent? or 0 < attempt.length < indent.length\n+        indent = attempt\n+    str = str.replace ///\\n#{indent}///g, '\\n' if indent\n+    str = str.replace /^\\n/, ''\n+    str\n+\n+  # TODO: remove mutation?\n+  @stripLeadingWhitespaceInterpolation = (pieces) =>\n+    indent = null\n+    for piece, index in pieces\n+      if piece instanceof @CS.String\n+        piece.data = piece.data.replace /\\s+$/, '' if index is pieces.length - 1\n+        matchStr = piece.data\n+        while match = /\\n+([^\\n\\S]*)/.exec matchStr\n+          [wholeMatch, attempt] = match\n+          matchStr = matchStr[match.index + wholeMatch.length..]\n+          if not indent? or 0 < attempt.length < indent.length\n+            indent = attempt\n+    if indent\n+      for piece, index in pieces\n+        if piece instanceof @CS.String\n+          piece.data = piece.data.replace ///\\n#{indent}///g, '\\n'\n+          piece.data = piece.data.replace /(\\n\\s*)+$/, '' if index is pieces.length - 1\n+          piece.data = piece.data.replace /^\\n/, '' if index is 0\n+    pieces\n+\n+  # store raw parse information\n+  @r = (node) ->\n+    node.raw = text().replace /[\\uEFEF\\uEFFE\\uEFFF]/g, ''\n+    node\n+  # store position information\n+  @p = (node) ->\n+    node.line = line()\n+    node.column = column()\n+    node.offset = offset()\n+    node\n+  # composition of r and p\n+  @rp = (node) => @r @p node\n+  # copy position information\n+  @c = (to, from) ->\n+    to.line = from.line\n+    to.column = from.column\n+    to.offset = from.offset\n+    to\n+  # the identity function\n+  id = (x) -> x\n+  unless options.raw\n+    @r = @p = @rp = id\n+\n+  return this",
        "path": "src/grammar.pegcoffee",
        "position": null,
        "original_position": 258,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "cabb60a2971827b264ddb14460a234e95c637d04",
        "user": {
            "login": "lydell",
            "id": 2142817,
            "node_id": "MDQ6VXNlcjIxNDI4MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2142817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lydell",
            "html_url": "https://github.com/lydell",
            "followers_url": "https://api.github.com/users/lydell/followers",
            "following_url": "https://api.github.com/users/lydell/following{/other_user}",
            "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
            "organizations_url": "https://api.github.com/users/lydell/orgs",
            "repos_url": "https://api.github.com/users/lydell/repos",
            "events_url": "https://api.github.com/users/lydell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lydell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "From this line to the end of the initializer is super hacky :(\n",
        "created_at": "2014-07-08T11:34:10Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r14647943",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/14647943"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r14647943"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/15719762",
        "pull_request_review_id": null,
        "id": 15719762,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzE5NzYy",
        "diff_hunk": "@@ -1,302 +1,263 @@\n {\n-var CS = require(\"./nodes\"),\n+  CS = require('./nodes')\n \n   constructorLookup =\n-    { '||': CS.LogicalOrOp\n-    , or: CS.LogicalOrOp\n-    , '&&': CS.LogicalAndOp\n-    , and: CS.LogicalAndOp\n-    , '|': CS.BitOrOp\n-    , '^': CS.BitXorOp\n-    , '&': CS.BitAndOp\n-    , '?': CS.ExistsOp\n-    , '==': CS.EQOp\n-    , is: CS.EQOp\n-    , '!=': CS.NEQOp\n-    , isnt: CS.NEQOp\n-    , '<=': CS.LTEOp\n-    , '>=': CS.GTEOp\n-    , '<': CS.LTOp\n-    , '>': CS.GTOp\n-    , 'extends': CS.ExtendsOp\n-    , 'instanceof': CS.InstanceofOp\n-    , 'in': CS.InOp\n-    , 'of': CS.OfOp\n-    , '<<': CS.LeftShiftOp\n-    , '>>': CS.SignedRightShiftOp\n-    , '>>>': CS.UnsignedRightShiftOp\n-    , '+': CS.PlusOp\n-    , '-': CS.SubtractOp\n-    , '*': CS.MultiplyOp\n-    , '/': CS.DivideOp\n-    , '%': CS.RemOp\n-    , '**': CS.ExpOp\n-    },\n-\n-  negatableOps = ['instanceof', 'in', 'of'],\n-  chainableComparisonOps = ['<=', '>=', '<', '>', '==', 'is', '!=', 'isnt'],\n-\n-  rightAssocOps = [';', '=', '?', '**'],\n+    '||': CS.LogicalOrOp\n+    'or': CS.LogicalOrOp\n+    '&&': CS.LogicalAndOp\n+    'and': CS.LogicalAndOp\n+    '|': CS.BitOrOp\n+    '^': CS.BitXorOp\n+    '&': CS.BitAndOp\n+    '?': CS.ExistsOp\n+    '==': CS.EQOp\n+    'is': CS.EQOp\n+    '!=': CS.NEQOp\n+    'isnt': CS.NEQOp\n+    '<=': CS.LTEOp\n+    '>=': CS.GTEOp\n+    '<': CS.LTOp\n+    '>': CS.GTOp\n+    'extends': CS.ExtendsOp\n+    'instanceof': CS.InstanceofOp\n+    'in': CS.InOp\n+    'of': CS.OfOp\n+    '<<': CS.LeftShiftOp\n+    '>>': CS.SignedRightShiftOp\n+    '>>>': CS.UnsignedRightShiftOp\n+    '+': CS.PlusOp\n+    '-': CS.SubtractOp\n+    '*': CS.MultiplyOp\n+    '/': CS.DivideOp\n+    '%': CS.RemOp\n+    '**': CS.ExpOp\n+\n+  negatableOps = ['instanceof', 'in', 'of']\n+  chainableComparisonOps = ['<=', '>=', '<', '>', '==', 'is', '!=', 'isnt']\n+\n+  rightAssocOps = [';', '=', '?', '**']\n   precedenceHierarchy =\n-    [ ['or', '||']\n-    , ['and', '&&']\n-    , ['|']\n-    , ['^']\n-    , ['&']\n-    , ['?']\n-    , ['is', '==', 'isnt', '!=']\n-    , ['instanceof', 'in', 'of', '<=', '>=', '<', '>']\n-    , ['<<', '>>', '>>>']\n-    , ['+', '-']\n-    , ['*', '/', '%']\n-    , ['**']\n-    ],\n-\n-  precedenceTable = (function(){\n-    var table = {}, ops, op;\n-    for(var level = 0, l = precedenceHierarchy.length; level < l; ++level) {\n-      ops = precedenceHierarchy[level];\n-      for(var o = 0, k = ops.length; o < k; ++o) {\n-        op = ops[o];\n-        table[op] = level;\n-      }\n-    }\n-    return table;\n-  }()),\n-\n-  RIGHT_ASSOCIATIVE = {},\n-  LEFT_ASSOCIATIVE = {},\n-\n-  associativities = (function(){\n-    var result = {};\n-    for(var op in precedenceTable) {\n-      if(!{}.hasOwnProperty.call(precedenceTable, op)) continue;\n-      result[op] = LEFT_ASSOCIATIVE;\n-    }\n-    for(var i = 0, l = rightAssocOps.length; i < l; ++i) {\n-      result[rightAssocOps[i]] = RIGHT_ASSOCIATIVE;\n-    }\n-    return result;\n-  }());\n-\n-  for(var i = 0, l = negatableOps.length; i < l; ++i) {\n-    (function(op){\n-      var fn = function(a, b){ return new CS.LogicalNotOp(new constructorLookup[op](a, b)); };\n-      fn.prototype = constructorLookup[op].prototype;\n-      var negatedOp = 'not ' + op;\n-      constructorLookup[negatedOp] = fn;\n-      precedenceTable[negatedOp] = precedenceTable[op];\n-      associativities[negatedOp] = associativities[op];\n-    }(negatableOps[i]));\n-  }\n+    [\n+      ['or', '||']\n+      ['and', '&&']\n+      ['|']\n+      ['^']\n+      ['&']\n+      ['?']\n+      ['is', '==', 'isnt', '!=']\n+      ['instanceof', 'in', 'of', '<=', '>=', '<', '>']\n+      ['<<', '>>', '>>>']\n+      ['+', '-']\n+      ['*', '/', '%']\n+      ['**']\n+    ]\n+\n+  precedenceTable = do ->\n+    table = {}\n+    for ops, level in precedenceHierarchy\n+      for op in ops\n+        table[op] = level\n+    table\n+\n+  RIGHT_ASSOCIATIVE = {}\n+  LEFT_ASSOCIATIVE = {}\n+\n+  associativities = do ->\n+    result = {}\n+    for own op of precedenceTable\n+      result[op] = LEFT_ASSOCIATIVE\n+    for rightAssocOp in rightAssocOps\n+      result[rightAssocOp] = RIGHT_ASSOCIATIVE\n+    result\n+\n+  for op in negatableOps then do (op) ->\n+    fn = (a, b) -> new CS.LogicalNotOp new constructorLookup[op] a, b\n+    fn.prototype = constructorLookup[op].prototype\n+    negatedOp = \"not #{op}\"\n+    constructorLookup[negatedOp] = fn\n+    precedenceTable[negatedOp] = precedenceTable[op]\n+    associativities[negatedOp] = associativities[op]\n \n \n-  var\n   prefixConstructorLookup =\n-    { '++': CS.PreIncrementOp\n-    , '--': CS.PreDecrementOp\n-    , '+': CS.UnaryPlusOp\n-    , '-': CS.UnaryNegateOp\n-    , '!': CS.LogicalNotOp\n-    , 'not': CS.LogicalNotOp\n-    , '~': CS.BitNotOp\n-    , 'do': CS.DoOp\n-    , 'typeof': CS.TypeofOp\n-    , 'delete': CS.DeleteOp\n-    },\n+    '++': CS.PreIncrementOp\n+    '--': CS.PreDecrementOp\n+    '+': CS.UnaryPlusOp\n+    '-': CS.UnaryNegateOp\n+    '!': CS.LogicalNotOp\n+    'not': CS.LogicalNotOp\n+    '~': CS.BitNotOp\n+    'do': CS.DoOp\n+    'typeof': CS.TypeofOp\n+    'delete': CS.DeleteOp\n \n   postfixConstructorLookup =\n-    { '?': CS.UnaryExistsOp\n-    , '[..]': CS.ShallowCopyArray\n-    , '++': CS.PostIncrementOp\n-    , '--': CS.PostDecrementOp\n-    },\n-\n-  foldl = function(fn, memo, list){\n-    for(var i = 0, l = list.length; i < l; ++i)\n-      memo = fn(memo, list[i]);\n-    return memo;\n-  },\n-  foldr = function(fn, memo, list){\n-    for(var i = list.length; i--;)\n-      memo = fn(memo, list[i]);\n-    return memo;\n-  },\n-\n-  // TODO: clean up and use a functional approach; stack === recursion\n-  foldBinaryExpr = function(parts, ignoreChains) {\n-    var stack, chainStack, nextPrec, nextOp, className, ctor, prec, rightOperand, leftOperand, operator, i, expr;\n-    if(parts.length < 3) return parts[0]; // should never happen\n-    stack = [].slice.call(parts, 0, 3);\n-    parts = [].slice.call(parts, 3);\n-\n-    while(parts.length > 0) {\n-      nextOp = parts[0];\n-\n-      if(!ignoreChains && stack.length > 2) {\n+    '?': CS.UnaryExistsOp\n+    '[..]': CS.ShallowCopyArray\n+    '++': CS.PostIncrementOp\n+    '--': CS.PostDecrementOp\n+\n+  foldl = (fn, memo, list) ->\n+    for item in list\n+      memo = fn memo, item\n+    memo\n+  foldr = (fn, memo, list) ->\n+    i = list.length\n+    while i--",
        "path": "src/grammar.pegcoffee",
        "position": 233,
        "original_position": 233,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "2d988a2e00a04bac372c7ae4d9de7a598b8011c1",
        "user": {
            "login": "lydell",
            "id": 2142817,
            "node_id": "MDQ6VXNlcjIxNDI4MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2142817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lydell",
            "html_url": "https://github.com/lydell",
            "followers_url": "https://api.github.com/users/lydell/followers",
            "following_url": "https://api.github.com/users/lydell/following{/other_user}",
            "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
            "organizations_url": "https://api.github.com/users/lydell/orgs",
            "repos_url": "https://api.github.com/users/lydell/repos",
            "events_url": "https://api.github.com/users/lydell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lydell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "In commit cabb60a this line was `for item in list by -1`, which is much nicer, but not yet supported by CSR: #324.\n",
        "created_at": "2014-08-01T21:21:23Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r15719762",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/15719762"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r15719762"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/15720231",
        "pull_request_review_id": null,
        "id": 15720231,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzIwMjMx",
        "diff_hunk": "@@ -30,9 +30,9 @@ lib/bootstrap: lib\n \tmkdir -p lib/bootstrap\n \n \n-lib/parser.js: src/grammar.pegjs bootstraps lib\n+lib/parser.js: src/grammar.pegcoffee bootstraps lib",
        "path": "Makefile",
        "position": null,
        "original_position": 14,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "2d988a2e00a04bac372c7ae4d9de7a598b8011c1",
        "user": {
            "login": "lydell",
            "id": 2142817,
            "node_id": "MDQ6VXNlcjIxNDI4MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2142817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lydell",
            "html_url": "https://github.com/lydell",
            "followers_url": "https://api.github.com/users/lydell/followers",
            "following_url": "https://api.github.com/users/lydell/following{/other_user}",
            "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
            "organizations_url": "https://api.github.com/users/lydell/orgs",
            "repos_url": "https://api.github.com/users/lydell/repos",
            "events_url": "https://api.github.com/users/lydell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lydell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I\u2019m a bit of a noob regarding Makefiles, but I should add ./lib/pegjs-coffee-plugin.js as a prerequisite here, shouldn\u2019t I?\n",
        "created_at": "2014-08-01T21:31:44Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r15720231",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/15720231"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r15720231"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/15720245",
        "pull_request_review_id": null,
        "id": 15720245,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzIwMjQ1",
        "diff_hunk": "@@ -30,9 +30,9 @@ lib/bootstrap: lib\n \tmkdir -p lib/bootstrap\n \n \n-lib/parser.js: src/grammar.pegjs bootstraps lib\n+lib/parser.js: src/grammar.pegcoffee bootstraps lib\n \t$(PEGJS) <\"$<\" >\"$@.tmp\" && mv \"$@.tmp\" \"$@\"\n-lib/bootstrap/parser.js: src/grammar.pegjs lib/bootstrap\n+lib/bootstrap/parser.js: src/grammar.pegcoffee lib/bootstrap",
        "path": "Makefile",
        "position": null,
        "original_position": 17,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "2d988a2e00a04bac372c7ae4d9de7a598b8011c1",
        "user": {
            "login": "lydell",
            "id": 2142817,
            "node_id": "MDQ6VXNlcjIxNDI4MTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/2142817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lydell",
            "html_url": "https://github.com/lydell",
            "followers_url": "https://api.github.com/users/lydell/followers",
            "following_url": "https://api.github.com/users/lydell/following{/other_user}",
            "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
            "organizations_url": "https://api.github.com/users/lydell/orgs",
            "repos_url": "https://api.github.com/users/lydell/repos",
            "events_url": "https://api.github.com/users/lydell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lydell/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And here too?\n",
        "created_at": "2014-08-01T21:31:59Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r15720245",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/15720245"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r15720245"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/16478698",
        "pull_request_review_id": null,
        "id": 16478698,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDc4Njk4",
        "diff_hunk": "@@ -30,9 +30,9 @@ lib/bootstrap: lib\n \tmkdir -p lib/bootstrap\n \n \n-lib/parser.js: src/grammar.pegjs bootstraps lib\n+lib/parser.js: src/grammar.pegcoffee bootstraps lib",
        "path": "Makefile",
        "position": null,
        "original_position": 14,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "2d988a2e00a04bac372c7ae4d9de7a598b8011c1",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes.\n",
        "created_at": "2014-08-20T14:23:08Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r16478698",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/16478698"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r16478698"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/16478708",
        "pull_request_review_id": null,
        "id": 16478708,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDc4NzA4",
        "diff_hunk": "@@ -30,9 +30,9 @@ lib/bootstrap: lib\n \tmkdir -p lib/bootstrap\n \n \n-lib/parser.js: src/grammar.pegjs bootstraps lib\n+lib/parser.js: src/grammar.pegcoffee bootstraps lib\n \t$(PEGJS) <\"$<\" >\"$@.tmp\" && mv \"$@.tmp\" \"$@\"\n-lib/bootstrap/parser.js: src/grammar.pegjs lib/bootstrap\n+lib/bootstrap/parser.js: src/grammar.pegcoffee lib/bootstrap",
        "path": "Makefile",
        "position": null,
        "original_position": 17,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "2d988a2e00a04bac372c7ae4d9de7a598b8011c1",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yep.\n",
        "created_at": "2014-08-20T14:23:12Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r16478708",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/16478708"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r16478708"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/16478776",
        "pull_request_review_id": null,
        "id": 16478776,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDc4Nzc2",
        "diff_hunk": "@@ -1,302 +1,263 @@\n {\n-var CS = require(\"./nodes\"),\n+  CS = require('./nodes')\n \n   constructorLookup =\n-    { '||': CS.LogicalOrOp\n-    , or: CS.LogicalOrOp\n-    , '&&': CS.LogicalAndOp\n-    , and: CS.LogicalAndOp\n-    , '|': CS.BitOrOp\n-    , '^': CS.BitXorOp\n-    , '&': CS.BitAndOp\n-    , '?': CS.ExistsOp\n-    , '==': CS.EQOp\n-    , is: CS.EQOp\n-    , '!=': CS.NEQOp\n-    , isnt: CS.NEQOp\n-    , '<=': CS.LTEOp\n-    , '>=': CS.GTEOp\n-    , '<': CS.LTOp\n-    , '>': CS.GTOp\n-    , 'extends': CS.ExtendsOp\n-    , 'instanceof': CS.InstanceofOp\n-    , 'in': CS.InOp\n-    , 'of': CS.OfOp\n-    , '<<': CS.LeftShiftOp\n-    , '>>': CS.SignedRightShiftOp\n-    , '>>>': CS.UnsignedRightShiftOp\n-    , '+': CS.PlusOp\n-    , '-': CS.SubtractOp\n-    , '*': CS.MultiplyOp\n-    , '/': CS.DivideOp\n-    , '%': CS.RemOp\n-    , '**': CS.ExpOp\n-    },\n-\n-  negatableOps = ['instanceof', 'in', 'of'],\n-  chainableComparisonOps = ['<=', '>=', '<', '>', '==', 'is', '!=', 'isnt'],\n-\n-  rightAssocOps = [';', '=', '?', '**'],\n+    '||': CS.LogicalOrOp\n+    'or': CS.LogicalOrOp\n+    '&&': CS.LogicalAndOp\n+    'and': CS.LogicalAndOp\n+    '|': CS.BitOrOp\n+    '^': CS.BitXorOp\n+    '&': CS.BitAndOp\n+    '?': CS.ExistsOp\n+    '==': CS.EQOp\n+    'is': CS.EQOp\n+    '!=': CS.NEQOp\n+    'isnt': CS.NEQOp\n+    '<=': CS.LTEOp\n+    '>=': CS.GTEOp\n+    '<': CS.LTOp\n+    '>': CS.GTOp\n+    'extends': CS.ExtendsOp\n+    'instanceof': CS.InstanceofOp\n+    'in': CS.InOp\n+    'of': CS.OfOp\n+    '<<': CS.LeftShiftOp\n+    '>>': CS.SignedRightShiftOp\n+    '>>>': CS.UnsignedRightShiftOp\n+    '+': CS.PlusOp\n+    '-': CS.SubtractOp\n+    '*': CS.MultiplyOp\n+    '/': CS.DivideOp\n+    '%': CS.RemOp\n+    '**': CS.ExpOp\n+\n+  negatableOps = ['instanceof', 'in', 'of']\n+  chainableComparisonOps = ['<=', '>=', '<', '>', '==', 'is', '!=', 'isnt']\n+\n+  rightAssocOps = [';', '=', '?', '**']\n   precedenceHierarchy =\n-    [ ['or', '||']\n-    , ['and', '&&']\n-    , ['|']\n-    , ['^']\n-    , ['&']\n-    , ['?']\n-    , ['is', '==', 'isnt', '!=']\n-    , ['instanceof', 'in', 'of', '<=', '>=', '<', '>']\n-    , ['<<', '>>', '>>>']\n-    , ['+', '-']\n-    , ['*', '/', '%']\n-    , ['**']\n-    ],\n-\n-  precedenceTable = (function(){\n-    var table = {}, ops, op;\n-    for(var level = 0, l = precedenceHierarchy.length; level < l; ++level) {\n-      ops = precedenceHierarchy[level];\n-      for(var o = 0, k = ops.length; o < k; ++o) {\n-        op = ops[o];\n-        table[op] = level;\n-      }\n-    }\n-    return table;\n-  }()),\n-\n-  RIGHT_ASSOCIATIVE = {},\n-  LEFT_ASSOCIATIVE = {},\n-\n-  associativities = (function(){\n-    var result = {};\n-    for(var op in precedenceTable) {\n-      if(!{}.hasOwnProperty.call(precedenceTable, op)) continue;\n-      result[op] = LEFT_ASSOCIATIVE;\n-    }\n-    for(var i = 0, l = rightAssocOps.length; i < l; ++i) {\n-      result[rightAssocOps[i]] = RIGHT_ASSOCIATIVE;\n-    }\n-    return result;\n-  }());\n-\n-  for(var i = 0, l = negatableOps.length; i < l; ++i) {\n-    (function(op){\n-      var fn = function(a, b){ return new CS.LogicalNotOp(new constructorLookup[op](a, b)); };\n-      fn.prototype = constructorLookup[op].prototype;\n-      var negatedOp = 'not ' + op;\n-      constructorLookup[negatedOp] = fn;\n-      precedenceTable[negatedOp] = precedenceTable[op];\n-      associativities[negatedOp] = associativities[op];\n-    }(negatableOps[i]));\n-  }\n+    [\n+      ['or', '||']\n+      ['and', '&&']\n+      ['|']\n+      ['^']\n+      ['&']\n+      ['?']\n+      ['is', '==', 'isnt', '!=']\n+      ['instanceof', 'in', 'of', '<=', '>=', '<', '>']\n+      ['<<', '>>', '>>>']\n+      ['+', '-']\n+      ['*', '/', '%']\n+      ['**']\n+    ]\n+\n+  precedenceTable = do ->\n+    table = {}\n+    for ops, level in precedenceHierarchy\n+      for op in ops\n+        table[op] = level\n+    table\n+\n+  RIGHT_ASSOCIATIVE = {}\n+  LEFT_ASSOCIATIVE = {}\n+\n+  associativities = do ->\n+    result = {}\n+    for own op of precedenceTable\n+      result[op] = LEFT_ASSOCIATIVE\n+    for rightAssocOp in rightAssocOps\n+      result[rightAssocOp] = RIGHT_ASSOCIATIVE\n+    result\n+\n+  for op in negatableOps then do (op) ->\n+    fn = (a, b) -> new CS.LogicalNotOp new constructorLookup[op] a, b\n+    fn.prototype = constructorLookup[op].prototype\n+    negatedOp = \"not #{op}\"\n+    constructorLookup[negatedOp] = fn\n+    precedenceTable[negatedOp] = precedenceTable[op]\n+    associativities[negatedOp] = associativities[op]\n \n \n-  var\n   prefixConstructorLookup =\n-    { '++': CS.PreIncrementOp\n-    , '--': CS.PreDecrementOp\n-    , '+': CS.UnaryPlusOp\n-    , '-': CS.UnaryNegateOp\n-    , '!': CS.LogicalNotOp\n-    , 'not': CS.LogicalNotOp\n-    , '~': CS.BitNotOp\n-    , 'do': CS.DoOp\n-    , 'typeof': CS.TypeofOp\n-    , 'delete': CS.DeleteOp\n-    },\n+    '++': CS.PreIncrementOp\n+    '--': CS.PreDecrementOp\n+    '+': CS.UnaryPlusOp\n+    '-': CS.UnaryNegateOp\n+    '!': CS.LogicalNotOp\n+    'not': CS.LogicalNotOp\n+    '~': CS.BitNotOp\n+    'do': CS.DoOp\n+    'typeof': CS.TypeofOp\n+    'delete': CS.DeleteOp\n \n   postfixConstructorLookup =\n-    { '?': CS.UnaryExistsOp\n-    , '[..]': CS.ShallowCopyArray\n-    , '++': CS.PostIncrementOp\n-    , '--': CS.PostDecrementOp\n-    },\n-\n-  foldl = function(fn, memo, list){\n-    for(var i = 0, l = list.length; i < l; ++i)\n-      memo = fn(memo, list[i]);\n-    return memo;\n-  },\n-  foldr = function(fn, memo, list){\n-    for(var i = list.length; i--;)\n-      memo = fn(memo, list[i]);\n-    return memo;\n-  },\n-\n-  // TODO: clean up and use a functional approach; stack === recursion\n-  foldBinaryExpr = function(parts, ignoreChains) {\n-    var stack, chainStack, nextPrec, nextOp, className, ctor, prec, rightOperand, leftOperand, operator, i, expr;\n-    if(parts.length < 3) return parts[0]; // should never happen\n-    stack = [].slice.call(parts, 0, 3);\n-    parts = [].slice.call(parts, 3);\n-\n-    while(parts.length > 0) {\n-      nextOp = parts[0];\n-\n-      if(!ignoreChains && stack.length > 2) {\n+    '?': CS.UnaryExistsOp\n+    '[..]': CS.ShallowCopyArray\n+    '++': CS.PostIncrementOp\n+    '--': CS.PostDecrementOp\n+\n+  foldl = (fn, memo, list) ->\n+    for item in list\n+      memo = fn memo, item\n+    memo\n+  foldr = (fn, memo, list) ->\n+    i = list.length\n+    while i--",
        "path": "src/grammar.pegcoffee",
        "position": 233,
        "original_position": 233,
        "commit_id": "dc031d643e290ae4a7a1e323b1c3e82637c67a09",
        "original_commit_id": "2d988a2e00a04bac372c7ae4d9de7a598b8011c1",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is now: https://github.com/michaelficarra/CoffeeScriptRedux/commit/5272d3c9c3f17f62c23663a5c7c92bf2c87e9c02.\n",
        "created_at": "2014-08-20T14:24:06Z",
        "updated_at": "2014-08-23T15:06:37Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r16478776",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/16478776"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/321#discussion_r16478776"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/321"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/31289940",
        "pull_request_review_id": null,
        "id": 31289940,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjg5OTQw",
        "diff_hunk": "@@ -36,9 +36,9 @@\n     \"nopt\": \"~2.1.2\"\n   },\n   \"optionalDependencies\": {\n+    \"escodegen\": \"git://github.com/estools/escodegen#2e90c2b95274aae27910c28e086676b104b7ded4\",",
        "path": "package.json",
        "position": 8,
        "original_position": 4,
        "commit_id": "b4ead4c3a3903d0147a5452d80d10263c496a62d",
        "original_commit_id": "84be770cc544145c5a7ee7086370135723d321b1",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@Constellation can you release a new version of escodegen for us?\n",
        "created_at": "2015-05-29T00:10:53Z",
        "updated_at": "2015-06-01T08:04:41Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/344#discussion_r31289940",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/344",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/31289940"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/344#discussion_r31289940"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/344"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/111197277",
        "pull_request_review_id": 32425865,
        "id": 111197277,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTE5NzI3Nw==",
        "diff_hunk": "@@ -316,6 +316,21 @@ generateSoak = do ->\n     [tests, e] = fn node\n     new CS.Conditional (foldl1 tests, (memo, t) -> new CS.LogicalAndOp memo, t), e\n \n+extractNumber = (what) ->\n+  return what.data if what.instanceof CS.Int\n+  return false unless what.instanceof CS.UnaryNegateOp\n+  return false unless what.expression.instanceof CS.Int\n+  return 0-what.expression.data",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 8,
        "commit_id": "8af059206fe7b555e8515d4a6eec1aba20e7142c",
        "original_commit_id": "2b7c9350916683f8c13d846cc1eaa5c46c66b5ed",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space infix operators.\r\n\r\n```coffee\r\n0 - what.expression.data\r\n```",
        "created_at": "2017-04-12T16:24:54Z",
        "updated_at": "2017-04-13T04:23:42Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/365#discussion_r111197277",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/111197277"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/365#discussion_r111197277"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/111197436",
        "pull_request_review_id": 32425865,
        "id": 111197436,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTE5NzQzNg==",
        "diff_hunk": "@@ -316,6 +316,21 @@ generateSoak = do ->\n     [tests, e] = fn node\n     new CS.Conditional (foldl1 tests, (memo, t) -> new CS.LogicalAndOp memo, t), e\n \n+extractNumber = (what) ->\n+  return what.data if what.instanceof CS.Int\n+  return false unless what.instanceof CS.UnaryNegateOp\n+  return false unless what.expression.instanceof CS.Int\n+  return 0-what.expression.data\n+\n+extractStaticRange = (range) ->\n+  return undefined unless range.instanceof CS.Range\n+  left = extractNumber(range.left)",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 12,
        "commit_id": "8af059206fe7b555e8515d4a6eec1aba20e7142c",
        "original_commit_id": "2b7c9350916683f8c13d846cc1eaa5c46c66b5ed",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Drop parens for function application.\r\n\r\n```coffee\r\nextractNumber range.left\r\n```",
        "created_at": "2017-04-12T16:25:39Z",
        "updated_at": "2017-04-13T04:23:42Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/365#discussion_r111197436",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/111197436"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/365#discussion_r111197436"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/365"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/111197511",
        "pull_request_review_id": 32425865,
        "id": 111197511,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTE5NzUxMQ==",
        "diff_hunk": "@@ -316,6 +316,21 @@ generateSoak = do ->\n     [tests, e] = fn node\n     new CS.Conditional (foldl1 tests, (memo, t) -> new CS.LogicalAndOp memo, t), e\n \n+extractNumber = (what) ->\n+  return what.data if what.instanceof CS.Int\n+  return false unless what.instanceof CS.UnaryNegateOp\n+  return false unless what.expression.instanceof CS.Int\n+  return 0-what.expression.data\n+\n+extractStaticRange = (range) ->\n+  return undefined unless range.instanceof CS.Range\n+  left = extractNumber(range.left)\n+  right = extractNumber(range.right)\n+\n+  return undefined if left == false\n+  return undefined if right == false\n+\n+  return [left,right]",
        "path": "src/compiler.coffee",
        "position": null,
        "original_position": 18,
        "commit_id": "8af059206fe7b555e8515d4a6eec1aba20e7142c",
        "original_commit_id": "2b7c9350916683f8c13d846cc1eaa5c46c66b5ed",
        "user": {
            "login": "michaelficarra",
            "id": 218840,
            "node_id": "MDQ6VXNlcjIxODg0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/218840?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelficarra",
            "html_url": "https://github.com/michaelficarra",
            "followers_url": "https://api.github.com/users/michaelficarra/followers",
            "following_url": "https://api.github.com/users/michaelficarra/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelficarra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelficarra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelficarra/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelficarra/orgs",
            "repos_url": "https://api.github.com/users/michaelficarra/repos",
            "events_url": "https://api.github.com/users/michaelficarra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelficarra/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Space array elements.\r\n\r\n```coffee\r\n[left, right]\r\n```",
        "created_at": "2017-04-12T16:26:02Z",
        "updated_at": "2017-04-13T04:23:42Z",
        "html_url": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/365#discussion_r111197511",
        "pull_request_url": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/365",
        "author_association": "OWNER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/comments/111197511"
            },
            "html": {
                "href": "https://github.com/michaelficarra/CoffeeScriptRedux/pull/365#discussion_r111197511"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/michaelficarra/CoffeeScriptRedux/pulls/365"
            }
        }
    }
]