[
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/25947",
        "pull_request_review_id": null,
        "id": 25947,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTQ3",
        "diff_hunk": "@@ -0,0 +1,14 @@\n+.showgrid\n+  background-image: image-url(unquote(\"grid.png\"))",
        "path": "test/fixtures/stylesheets/busted_image_urls/sass/screen.sass",
        "position": null,
        "original_position": 2,
        "commit_id": "223258c2032d089100269fbff6281c971bad8aa1",
        "original_commit_id": "8661c481cf21535729fcfc21af911865091d5d69",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "These unquotes shouldn't be necessary.\n",
        "created_at": "2011-05-04T19:45:20Z",
        "updated_at": "2011-05-05T08:19:28Z",
        "html_url": "https://github.com/Compass/compass/pull/372#discussion_r25947",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/372",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/25947"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/372#discussion_r25947"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/372"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/43588",
        "pull_request_review_id": null,
        "id": 43588,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg4",
        "diff_hunk": "@@ -0,0 +1,281 @@\n+\t\t    GNU GENERAL PUBLIC LICENSE",
        "path": "frameworks/wordpress/templates/basic/_LICENSE.txt",
        "position": 1,
        "original_position": 1,
        "commit_id": "f4ed10084e4935e1bf69db554946c21c093529de",
        "original_commit_id": "f4ed10084e4935e1bf69db554946c21c093529de",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is a non-starter. I cannot distribute GPL code in compass because compass is MIT licensed. I guess it will have to be a plugin so that plugin can be GPL licensed.\n",
        "created_at": "2011-06-11T17:46:17Z",
        "updated_at": "2011-06-11T17:46:17Z",
        "html_url": "https://github.com/Compass/compass/pull/425#discussion_r43588",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/43588"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/425#discussion_r43588"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/43589",
        "pull_request_review_id": null,
        "id": 43589,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5",
        "diff_hunk": "@@ -0,0 +1,281 @@\n+\t\t    GNU GENERAL PUBLIC LICENSE",
        "path": "frameworks/wordpress/templates/basic/_LICENSE.txt",
        "position": 1,
        "original_position": 1,
        "commit_id": "f4ed10084e4935e1bf69db554946c21c093529de",
        "original_commit_id": "f4ed10084e4935e1bf69db554946c21c093529de",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Another alternative could be that the installer would instead download the GPL files from some authoritative location\n",
        "created_at": "2011-06-11T17:48:14Z",
        "updated_at": "2011-06-11T17:48:14Z",
        "html_url": "https://github.com/Compass/compass/pull/425#discussion_r43589",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/425",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/43589"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/425#discussion_r43589"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/425"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/303557",
        "pull_request_review_id": null,
        "id": 303557,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMzU1Nw==",
        "diff_hunk": "@@ -18,6 +18,13 @@\n   end\n end\n \n+Given /^I have a fake extension without manifest file at (.*)$/ do |directory|\n+  directory.gsub!('~', ENV[\"HOME\"]) if directory.include?('~/')",
        "path": "features/step_definitions/extension_steps.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "6b99697de24ea37d416b7257d5eb475a6c084e54",
        "original_commit_id": "6b99697de24ea37d416b7257d5eb475a6c084e54",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I donno if i like this in a test case using my home directory to run tests in is kinda making me queezy we probaly should mock this in tests /cc @chriseppstein \n",
        "created_at": "2011-12-19T20:56:53Z",
        "updated_at": "2011-12-19T20:56:53Z",
        "html_url": "https://github.com/Compass/compass/pull/652#discussion_r303557",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/652",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/303557"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/652#discussion_r303557"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/652"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/304602",
        "pull_request_review_id": null,
        "id": 304602,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDYwMg==",
        "diff_hunk": "@@ -18,6 +18,13 @@\n   end\n end\n \n+Given /^I have a fake extension without manifest file at (.*)$/ do |directory|\n+  directory.gsub!('~', ENV[\"HOME\"]) if directory.include?('~/')",
        "path": "features/step_definitions/extension_steps.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "6b99697de24ea37d416b7257d5eb475a6c084e54",
        "original_commit_id": "6b99697de24ea37d416b7257d5eb475a6c084e54",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ya that's probably right.\n",
        "created_at": "2011-12-20T03:59:58Z",
        "updated_at": "2011-12-20T03:59:58Z",
        "html_url": "https://github.com/Compass/compass/pull/652#discussion_r304602",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/652",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/304602"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/652#discussion_r304602"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/652"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/338677",
        "pull_request_review_id": null,
        "id": 338677,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODY3Nw==",
        "diff_hunk": "@@ -10,10 +10,10 @@ Contributing Stylesheets to Compass\n \n Thank you for your interest in contributing to Compass. Our goal is to make it as easy\n as we can for you to contribute changes to compass -- So if there's something here that\n-seems harder than it aught to be, please let us know.\n+seems harder than it ought to be, please let us know.",
        "path": "doc-src/content/help/tutorials/contributing.markdown",
        "position": 5,
        "original_position": 5,
        "commit_id": "5496b671f7dd56c3cac5cd7ce0da1011b9224663",
        "original_commit_id": "5496b671f7dd56c3cac5cd7ce0da1011b9224663",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is the only one of that pr that hasn't already been fixed in master would you mind redoing this against the master branch?\n",
        "created_at": "2012-01-10T02:56:28Z",
        "updated_at": "2012-01-10T02:56:28Z",
        "html_url": "https://github.com/Compass/compass/pull/667#discussion_r338677",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/667",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/338677"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/667#discussion_r338677"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/667"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/339076",
        "pull_request_review_id": null,
        "id": 339076,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzOTA3Ng==",
        "diff_hunk": "@@ -10,10 +10,10 @@ Contributing Stylesheets to Compass\n \n Thank you for your interest in contributing to Compass. Our goal is to make it as easy\n as we can for you to contribute changes to compass -- So if there's something here that\n-seems harder than it aught to be, please let us know.\n+seems harder than it ought to be, please let us know.",
        "path": "doc-src/content/help/tutorials/contributing.markdown",
        "position": 5,
        "original_position": 5,
        "commit_id": "5496b671f7dd56c3cac5cd7ce0da1011b9224663",
        "original_commit_id": "5496b671f7dd56c3cac5cd7ce0da1011b9224663",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should be done now.\n",
        "created_at": "2012-01-10T07:56:27Z",
        "updated_at": "2012-01-10T07:56:27Z",
        "html_url": "https://github.com/Compass/compass/pull/667#discussion_r339076",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/667",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/339076"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/667#discussion_r339076"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/667"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/428464",
        "pull_request_review_id": null,
        "id": 428464,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2NA==",
        "diff_hunk": "@@ -52,14 +52,14 @@ You can now apply the `icon-XXX` classes to your markup as needed.\n \n Let's go over what happened there. The import statement told compass to [generate a\n stylesheet that is customized for your sprites](https://gist.github.com/729507). This\n-stylesheet is [magic](/help/tutorials/spriting/magic-imports), it is not written to disk, and it can be customized\n+stylesheet is [magic](#magic-imports), it is not written to disk, and it can be customized\n by setting configuration variables before you import it. See the section below on\n-[Customization Options](/help/tutorials/spriting/customization). The goal of this stylesheet is to provide a",
        "path": "doc-src/content/help/tutorials/spriting.markdown",
        "position": 7,
        "original_position": 7,
        "commit_id": "47ea695f30b0d405b3af97b1cd45998a45761929",
        "original_commit_id": "55cef4b9f76c4407851e53d4b63d263a96bd2ccc",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This should not be changed this way the correct way would be to change the link to \"/help/tutorials/spriting/customization-options\"\n",
        "created_at": "2012-02-08T16:34:02Z",
        "updated_at": "2012-02-14T01:54:18Z",
        "html_url": "https://github.com/Compass/compass/pull/703#discussion_r428464",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/703",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/428464"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/703#discussion_r428464"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/703"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/430197",
        "pull_request_review_id": null,
        "id": 430197,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE5Nw==",
        "diff_hunk": "@@ -52,14 +52,14 @@ You can now apply the `icon-XXX` classes to your markup as needed.\n \n Let's go over what happened there. The import statement told compass to [generate a\n stylesheet that is customized for your sprites](https://gist.github.com/729507). This\n-stylesheet is [magic](/help/tutorials/spriting/magic-imports), it is not written to disk, and it can be customized\n+stylesheet is [magic](#magic-imports), it is not written to disk, and it can be customized\n by setting configuration variables before you import it. See the section below on\n-[Customization Options](/help/tutorials/spriting/customization). The goal of this stylesheet is to provide a",
        "path": "doc-src/content/help/tutorials/spriting.markdown",
        "position": 7,
        "original_position": 7,
        "commit_id": "47ea695f30b0d405b3af97b1cd45998a45761929",
        "original_commit_id": "55cef4b9f76c4407851e53d4b63d263a96bd2ccc",
        "user": {
            "login": "nathggns",
            "id": 719814,
            "node_id": "MDQ6VXNlcjcxOTgxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/719814?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathggns",
            "html_url": "https://github.com/nathggns",
            "followers_url": "https://api.github.com/users/nathggns/followers",
            "following_url": "https://api.github.com/users/nathggns/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathggns/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathggns/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathggns/subscriptions",
            "organizations_url": "https://api.github.com/users/nathggns/orgs",
            "repos_url": "https://api.github.com/users/nathggns/repos",
            "events_url": "https://api.github.com/users/nathggns/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathggns/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Well, no. The forward slashes are creating the problems, they're supposed to be hashes. Or do you mean the names?\n",
        "created_at": "2012-02-08T21:53:08Z",
        "updated_at": "2012-02-14T01:54:18Z",
        "html_url": "https://github.com/Compass/compass/pull/703#discussion_r430197",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/703",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/430197"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/703#discussion_r430197"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/703"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/430721",
        "pull_request_review_id": null,
        "id": 430721,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMQ==",
        "diff_hunk": "@@ -52,14 +52,14 @@ You can now apply the `icon-XXX` classes to your markup as needed.\n \n Let's go over what happened there. The import statement told compass to [generate a\n stylesheet that is customized for your sprites](https://gist.github.com/729507). This\n-stylesheet is [magic](/help/tutorials/spriting/magic-imports), it is not written to disk, and it can be customized\n+stylesheet is [magic](#magic-imports), it is not written to disk, and it can be customized\n by setting configuration variables before you import it. See the section below on\n-[Customization Options](/help/tutorials/spriting/customization). The goal of this stylesheet is to provide a",
        "path": "doc-src/content/help/tutorials/spriting.markdown",
        "position": 7,
        "original_position": 7,
        "commit_id": "47ea695f30b0d405b3af97b1cd45998a45761929",
        "original_commit_id": "55cef4b9f76c4407851e53d4b63d263a96bd2ccc",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "i had typo the url to the link the [Customization Options] should link to the other page\n",
        "created_at": "2012-02-08T23:48:06Z",
        "updated_at": "2012-02-14T01:54:18Z",
        "html_url": "https://github.com/Compass/compass/pull/703#discussion_r430721",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/703",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/430721"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/703#discussion_r430721"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/703"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/430725",
        "pull_request_review_id": null,
        "id": 430725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyNQ==",
        "diff_hunk": "@@ -52,14 +52,14 @@ You can now apply the `icon-XXX` classes to your markup as needed.\n \n Let's go over what happened there. The import statement told compass to [generate a\n stylesheet that is customized for your sprites](https://gist.github.com/729507). This\n-stylesheet is [magic](/help/tutorials/spriting/magic-imports), it is not written to disk, and it can be customized\n+stylesheet is [magic](#magic-imports), it is not written to disk, and it can be customized\n by setting configuration variables before you import it. See the section below on\n-[Customization Options](/help/tutorials/spriting/customization). The goal of this stylesheet is to provide a",
        "path": "doc-src/content/help/tutorials/spriting.markdown",
        "position": 7,
        "original_position": 7,
        "commit_id": "47ea695f30b0d405b3af97b1cd45998a45761929",
        "original_commit_id": "55cef4b9f76c4407851e53d4b63d263a96bd2ccc",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "http://beta.compass-style.org/help/tutorials/spriting/customization-options/\n",
        "created_at": "2012-02-08T23:48:56Z",
        "updated_at": "2012-02-14T01:54:18Z",
        "html_url": "https://github.com/Compass/compass/pull/703#discussion_r430725",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/703",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/430725"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/703#discussion_r430725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/703"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489589",
        "pull_request_review_id": null,
        "id": 489589,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4OQ==",
        "diff_hunk": "@@ -78,29 +100,56 @@ $default-transition-delay: false !default;\n   $function: $default-transition-function,\n   $delay: $default-transition-delay\n ) {\n+  $match: false;\n+\n+  @each $prefixed-property in $transitionable-prefixed-properties {\n+    @if $property == $prefixed-property {\n+      $match: true;\n+    }\n+  }",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 51,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Setting `$match` should be doable using functions instead of loops. But it's not -- we need better list and string functions. >_<\n",
        "created_at": "2012-02-26T19:09:07Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489589",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489589"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489589"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489594",
        "pull_request_review_id": null,
        "id": 489594,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5NA==",
        "diff_hunk": "@@ -23,15 +23,37 @@ $default-transition-function: false !default;\n \n $default-transition-delay: false !default;\n \n+$transitionable-prefixed-properties: transform, transform-origin !default;\n+\n // One or more properties to transition\n //\n // * for multiple, use a comma-delimited list\n // * also accepts \"all\" or \"none\"\n \n @mixin transition-property($properties: $default-transition-property) {\n-  @include experimental(transition-property, unquote($properties),\n-    -moz, -webkit, -o, -ms, not -khtml, official\n-  );\n+  @if type-of($properties) == string { $properties: unquote($properties); }\n+\n+  $match: false;\n+\n+  @each $prefixed-property in $transitionable-prefixed-properties {\n+    @if $properties == $prefixed-property {\n+      $match: true;\n+    }\n+  }\n+\n+  @if $match {\n+    @if $experimental-support-for-webkit    { -webkit-transition-property: -webkit-#{$properties}; }\n+    @if $experimental-support-for-mozilla   { -moz-transition-property: -moz-#{$properties}; }\n+    @if $experimental-support-for-microsoft { -ms-transition-property: -ms-#{$properties}; }\n+    @if $experimental-support-for-opera     { -o-transition-property: -o-#{$properties}; }",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 29,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "pretty sure this fails if $properties is a list. We need to map the prefix onto each of the values of the list.\n",
        "created_at": "2012-02-26T19:10:49Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489594",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489594"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489594"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489598",
        "pull_request_review_id": null,
        "id": 489598,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5OA==",
        "diff_hunk": "@@ -23,15 +23,37 @@ $default-transition-function: false !default;\n \n $default-transition-delay: false !default;\n \n+$transitionable-prefixed-properties: transform, transform-origin !default;\n+\n // One or more properties to transition\n //\n // * for multiple, use a comma-delimited list\n // * also accepts \"all\" or \"none\"\n \n @mixin transition-property($properties: $default-transition-property) {\n-  @include experimental(transition-property, unquote($properties),\n-    -moz, -webkit, -o, -ms, not -khtml, official\n-  );\n+  @if type-of($properties) == string { $properties: unquote($properties); }\n+\n+  $match: false;\n+\n+  @each $prefixed-property in $transitionable-prefixed-properties {\n+    @if $properties == $prefixed-property {\n+      $match: true;\n+    }\n+  }\n+\n+  @if $match {\n+    @if $experimental-support-for-webkit    { -webkit-transition-property: -webkit-#{$properties}; }\n+    @if $experimental-support-for-mozilla   { -moz-transition-property: -moz-#{$properties}; }\n+    @if $experimental-support-for-microsoft { -ms-transition-property: -ms-#{$properties}; }\n+    @if $experimental-support-for-opera     { -o-transition-property: -o-#{$properties}; }\n+    @include experimental(transition-property, $properties,\n+      not -moz, not -webkit, not -o, not -ms, not -khtml, official\n+    );",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 32,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There's really no point in calling the `experimental` mixin here if you're just setting the official version.\n",
        "created_at": "2012-02-26T19:12:21Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489598",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489598"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489598"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489599",
        "pull_request_review_id": null,
        "id": 489599,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5OQ==",
        "diff_hunk": "@@ -23,15 +23,37 @@ $default-transition-function: false !default;\n \n $default-transition-delay: false !default;\n \n+$transitionable-prefixed-properties: transform, transform-origin !default;\n+\n // One or more properties to transition\n //\n // * for multiple, use a comma-delimited list\n // * also accepts \"all\" or \"none\"\n \n @mixin transition-property($properties: $default-transition-property) {\n-  @include experimental(transition-property, unquote($properties),\n-    -moz, -webkit, -o, -ms, not -khtml, official\n-  );\n+  @if type-of($properties) == string { $properties: unquote($properties); }\n+\n+  $match: false;\n+\n+  @each $prefixed-property in $transitionable-prefixed-properties {\n+    @if $properties == $prefixed-property {\n+      $match: true;\n+    }\n+  }",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 23,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Setting $match should be doable using functions instead of loops. But it's not -- we need better list and string functions. >_<\n",
        "created_at": "2012-02-26T19:12:44Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489599",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489599"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489599"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489600",
        "pull_request_review_id": null,
        "id": 489600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMA==",
        "diff_hunk": "@@ -78,29 +100,56 @@ $default-transition-delay: false !default;\n   $function: $default-transition-function,\n   $delay: $default-transition-delay\n ) {\n+  $match: false;\n+\n+  @each $prefixed-property in $transitionable-prefixed-properties {\n+    @if $property == $prefixed-property {\n+      $match: true;\n+    }\n+  }\n+\n   @if $property and $duration and $function {\n     // Shorthand (see https://github.com/chriseppstein/compass/issues/585)\n     @if $delay {\n-      -webkit-transition: $property $duration $function;\n-      -webkit-transition-delay: $delay;\n-      @include experimental(transition, $property $duration $function $delay,\n-        -moz,\n-        not -webkit,\n-        -o,\n-        -ms,\n-        not -khtml,\n-        official\n-      );\n+      @if $match {\n+        @if $experimental-support-for-webkit    { -webkit-transition: -webkit-#{$property} $duration $function; -webkit-transition-delay: $delay; }\n+        @if $experimental-support-for-mozilla   { -moz-transition: -moz-#{$property} $duration $function $delay; }\n+        @if $experimental-support-for-microsoft { -ms-transition: -ms-#{$property} $duration $function $delay; }\n+        @if $experimental-support-for-opera     { -o-transition: -o-#{$property} $duration $function $delay; }\n+        @include experimental(transition, $property $duration $function $delay,\n+          not -moz, not -webkit, not -o, not -ms, not -khtml, official\n+        );",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 73,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Again, no point in calling `experimental`\n",
        "created_at": "2012-02-26T19:13:18Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489600",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489600"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489601",
        "pull_request_review_id": null,
        "id": 489601,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMQ==",
        "diff_hunk": "@@ -78,29 +100,56 @@ $default-transition-delay: false !default;\n   $function: $default-transition-function,\n   $delay: $default-transition-delay\n ) {\n+  $match: false;\n+\n+  @each $prefixed-property in $transitionable-prefixed-properties {\n+    @if $property == $prefixed-property {\n+      $match: true;\n+    }\n+  }\n+\n   @if $property and $duration and $function {\n     // Shorthand (see https://github.com/chriseppstein/compass/issues/585)\n     @if $delay {\n-      -webkit-transition: $property $duration $function;\n-      -webkit-transition-delay: $delay;\n-      @include experimental(transition, $property $duration $function $delay,\n-        -moz,\n-        not -webkit,\n-        -o,\n-        -ms,\n-        not -khtml,\n-        official\n-      );\n+      @if $match {\n+        @if $experimental-support-for-webkit    { -webkit-transition: -webkit-#{$property} $duration $function; -webkit-transition-delay: $delay; }\n+        @if $experimental-support-for-mozilla   { -moz-transition: -moz-#{$property} $duration $function $delay; }\n+        @if $experimental-support-for-microsoft { -ms-transition: -ms-#{$property} $duration $function $delay; }\n+        @if $experimental-support-for-opera     { -o-transition: -o-#{$property} $duration $function $delay; }\n+        @include experimental(transition, $property $duration $function $delay,\n+          not -moz, not -webkit, not -o, not -ms, not -khtml, official\n+        );\n+      } @else {\n+        @if $experimental-support-for-webkit    { -webkit-transition: $property $duration $function; -webkit-transition-delay: $delay; }\n+        @include experimental(transition, $property $duration $function $delay,\n+          -moz,\n+          not -webkit,\n+          -o,\n+          -ms,\n+          not -khtml,\n+          official\n+        );\n+      }\n     }\n     @else {\n-      @include experimental(transition, $property $duration $function,\n-        -moz,\n-        -webkit,\n-        -o,\n-        -ms,\n-        not -khtml,\n-        official\n-      );\n+      @if $match {\n+        @if $experimental-support-for-webkit    { -webkit-transition: -webkit-#{$property} $duration $function; }\n+        @if $experimental-support-for-mozilla   { -moz-transition: -moz-#{$property} $duration $function; }\n+        @if $experimental-support-for-microsoft { -ms-transition: -ms-#{$property} $duration $function; }\n+        @if $experimental-support-for-opera     { -o-transition: -o-#{$property} $duration $function; }\n+        @include experimental(transition, $property $duration $function,\n+          not -moz, not -webkit, not -o, not -ms, not -khtml, official\n+        );",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 102,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Again, no point in calling experimental\n",
        "created_at": "2012-02-26T19:13:38Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489601",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489601"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489601"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489603",
        "pull_request_review_id": null,
        "id": 489603,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMw==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 153,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This actually returns a list -- not a string. Seems like we can use `compact(join($existing, $addition))` which are already built into compass and sass.\n",
        "created_at": "2012-02-26T19:17:26Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489603",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489603"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489603"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489607",
        "pull_request_review_id": null,
        "id": 489607,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwNw==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 141,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems the sass `append` function should suffice. Am I missing something?\n",
        "created_at": "2012-02-26T19:20:31Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489607",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489607"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489607"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489614",
        "pull_request_review_id": null,
        "id": 489614,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNA==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 141,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "- `append($list, $value, comma)`\n- `append($list, $value, space)`\n- `append($list, $value, auto)`\n",
        "created_at": "2012-02-26T19:23:19Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489614",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489614"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489614"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489620",
        "pull_request_review_id": null,
        "id": 489620,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyMA==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 156,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "we don't need to use `-compass-space-list` anymore. Sass provides `()` to construct an empty space-delimited list.\n",
        "created_at": "2012-02-26T19:26:16Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489620",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489620"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489620"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489621",
        "pull_request_review_id": null,
        "id": 489621,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyMQ==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 156,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh. sorry. This coerces a possible string into a list. Seems like the string case shouldn't exist anymore. But I'm foggy on the deprecation status.\n",
        "created_at": "2012-02-26T19:28:20Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489621",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489621"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489621"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489622",
        "pull_request_review_id": null,
        "id": 489622,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyMg==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);\n+\n+  $webkit-transition: false;\n+  $moz-transition: false;\n+  $ms-transition: false;\n+  $o-transition: false;\n+\n+  @each $single-transition in $raw-transition {\n+    $property: nth($single-transition, 1);",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 164,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't understand this. are there cases where we have a list of lists?\n",
        "created_at": "2012-02-26T19:29:41Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489622",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489622"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489622"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489623",
        "pull_request_review_id": null,
        "id": 489623,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyMw==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);\n+\n+  $webkit-transition: false;\n+  $moz-transition: false;\n+  $ms-transition: false;\n+  $o-transition: false;\n+\n+  @each $single-transition in $raw-transition {\n+    $property: nth($single-transition, 1);",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 164,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "And if so, why, and is it correct to discard all but the first element?\n",
        "created_at": "2012-02-26T19:30:23Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489623",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489623"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489623"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489624",
        "pull_request_review_id": null,
        "id": 489624,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyNA==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);\n+\n+  $webkit-transition: false;\n+  $moz-transition: false;\n+  $ms-transition: false;\n+  $o-transition: false;\n+\n+  @each $single-transition in $raw-transition {\n+    $property: nth($single-transition, 1);\n+    $match: false;\n+\n+    @each $prefixed-property in $transitionable-prefixed-properties {\n+      @if $property == $prefixed-property {\n+        $match: true;\n+      }\n+    }",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 171,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "3 times! MUST BE REFACTORED\n",
        "created_at": "2012-02-26T19:31:14Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489624",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489624"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489624"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489635",
        "pull_request_review_id": null,
        "id": 489635,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYzNQ==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);\n+\n+  $webkit-transition: false;\n+  $moz-transition: false;\n+  $ms-transition: false;\n+  $o-transition: false;\n+\n+  @each $single-transition in $raw-transition {\n+    $property: nth($single-transition, 1);",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 164,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "doctyper",
            "id": 6960,
            "node_id": "MDQ6VXNlcjY5NjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/doctyper",
            "html_url": "https://github.com/doctyper",
            "followers_url": "https://api.github.com/users/doctyper/followers",
            "following_url": "https://api.github.com/users/doctyper/following{/other_user}",
            "gists_url": "https://api.github.com/users/doctyper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/doctyper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/doctyper/subscriptions",
            "organizations_url": "https://api.github.com/users/doctyper/orgs",
            "repos_url": "https://api.github.com/users/doctyper/repos",
            "events_url": "https://api.github.com/users/doctyper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/doctyper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The transition property allows for multiple transition declarations:\n\n```\ntransition: transform 3s ease-out, opacity 2s ease-in;\n```\n\nHere I'm iterating through each transition and manipulating the first value in the list (transform, opacity, etc).\n",
        "created_at": "2012-02-26T19:59:10Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489635",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489635"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489635"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489639",
        "pull_request_review_id": null,
        "id": 489639,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYzOQ==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 141,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "doctyper",
            "id": 6960,
            "node_id": "MDQ6VXNlcjY5NjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/doctyper",
            "html_url": "https://github.com/doctyper",
            "followers_url": "https://api.github.com/users/doctyper/followers",
            "following_url": "https://api.github.com/users/doctyper/following{/other_user}",
            "gists_url": "https://api.github.com/users/doctyper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/doctyper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/doctyper/subscriptions",
            "organizations_url": "https://api.github.com/users/doctyper/orgs",
            "repos_url": "https://api.github.com/users/doctyper/repos",
            "events_url": "https://api.github.com/users/doctyper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/doctyper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The issue here is that I need to append values to an initially-false variable:\n\n```\n$list: false;\nappend($list, foo, comma);\n```\n\nThis results in:\n\n```\n$list: false, foo;\n```\n\nI expect:\n\n```\n$list: foo;\n```\n\nThe only workaround I've come up with is to set the initial $list value to an unquoted string. Unfortunately, this adds an empty space to the beginning of the value and fails during testing:\n\n```\n$list: unquote(\"\");\nappend($list, foo, comma);\n```\n\nResult:\n\n```\n$list:  foo;\n```\n\nExpected (sans space):\n\n```\n$list: foo;\n```\n\nAny ideas?\n",
        "created_at": "2012-02-26T20:08:34Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489639",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489639"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489639"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489641",
        "pull_request_review_id": null,
        "id": 489641,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0MQ==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 141,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The compass `compact` function will remove false values from a list.\n",
        "created_at": "2012-02-26T20:12:00Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489641",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489641"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489641"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489642",
        "pull_request_review_id": null,
        "id": 489642,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0Mg==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);\n+\n+  $webkit-transition: false;\n+  $moz-transition: false;\n+  $ms-transition: false;\n+  $o-transition: false;\n+\n+  @each $single-transition in $raw-transition {\n+    $property: nth($single-transition, 1);",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 164,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "gotcha.\n",
        "created_at": "2012-02-26T20:12:41Z",
        "updated_at": "2012-02-26T22:53:35Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489642",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489642"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489642"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/489765",
        "pull_request_review_id": null,
        "id": 489765,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NQ==",
        "diff_hunk": "@@ -126,8 +175,84 @@ $default-transition-delay: false !default;\n   @if $transition-1 == default {\n     $transition-1 : -compass-space-list(compact($default-transition-property, $default-transition-duration, $default-transition-function, $default-transition-delay));\n   }\n+\n   $transition : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);\n+  @include prefix-friendly-transition($transition);\n+}\n+\n+@function array-push($array, $object, $comma: false) {\n+  @if $comma {\n+    @if $array {\n+      $array: $array, $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  } @else {\n+    @if $array {\n+      $array: $array $object;\n+    } @else {\n+      $array: $object;\n+    }\n+  }\n+\n+  @return $array;\n+}\n+\n+@function string-join($existing, $addition) {\n+  @if $existing {\n+    @if $addition {\n+      $existing: $existing $addition;\n+    }\n+  } @else {\n+    $existing: $addition;\n+  }\n+\n+  @return $existing;\n+}\n+\n+@mixin prefix-friendly-transition($transition) {\n+  $raw-transition: -compass-space-list($transition);\n+\n+  $webkit-transition: false;\n+  $moz-transition: false;\n+  $ms-transition: false;\n+  $o-transition: false;\n+\n+  @each $single-transition in $raw-transition {\n+    $property: nth($single-transition, 1);\n+    $match: false;\n+\n+    @each $prefixed-property in $transitionable-prefixed-properties {\n+      @if $property == $prefixed-property {\n+        $match: true;\n+      }\n+    }",
        "path": "frameworks/compass/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 171,
        "commit_id": "94bef38312b1eefeeee1fbec27bb453db30e0da2",
        "original_commit_id": "6a3d024cc1bcef5d13fe39e4c63a62400b1ab936",
        "user": {
            "login": "doctyper",
            "id": 6960,
            "node_id": "MDQ6VXNlcjY5NjA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/doctyper",
            "html_url": "https://github.com/doctyper",
            "followers_url": "https://api.github.com/users/doctyper/followers",
            "following_url": "https://api.github.com/users/doctyper/following{/other_user}",
            "gists_url": "https://api.github.com/users/doctyper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/doctyper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/doctyper/subscriptions",
            "organizations_url": "https://api.github.com/users/doctyper/orgs",
            "repos_url": "https://api.github.com/users/doctyper/repos",
            "events_url": "https://api.github.com/users/doctyper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/doctyper/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Agreed, and done.\n",
        "created_at": "2012-02-26T22:56:20Z",
        "updated_at": "2012-02-26T22:56:20Z",
        "html_url": "https://github.com/Compass/compass/pull/728#discussion_r489765",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/728",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/489765"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/728#discussion_r489765"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/728"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/534384",
        "pull_request_review_id": null,
        "id": 534384,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM4NA==",
        "diff_hunk": "@@ -16,7 +16,7 @@ def lib_directory\n   end\n   def shared_extension_paths\n     @shared_extension_paths ||= begin\n-      if ENV[\"HOME\"] && File.directory?(ENV[\"HOME\"])\n+      if ENV[\"HOME\"] && File.directory?(ENV[\"HOME\"]) && ENV[\"HOME\"].first == \"/\"",
        "path": "lib/compass.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "5ccb451530aebb45841e3847c41c811bce71a52c",
        "original_commit_id": "5ccb451530aebb45841e3847c41c811bce71a52c",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Pretty sure this breaks windows users because HOME there starts with `C:\\` or something like that. I think a better approach is to rescue the `ArgumentError` that gets raised from `expand_path`.\n",
        "created_at": "2012-03-08T16:22:53Z",
        "updated_at": "2012-03-08T16:22:53Z",
        "html_url": "https://github.com/Compass/compass/pull/761#discussion_r534384",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/761",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/534384"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/761#discussion_r534384"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/761"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/534587",
        "pull_request_review_id": null,
        "id": 534587,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU4Nw==",
        "diff_hunk": "@@ -16,7 +16,7 @@ def lib_directory\n   end\n   def shared_extension_paths\n     @shared_extension_paths ||= begin\n-      if ENV[\"HOME\"] && File.directory?(ENV[\"HOME\"])\n+      if ENV[\"HOME\"] && File.directory?(ENV[\"HOME\"]) && ENV[\"HOME\"].first == \"/\"",
        "path": "lib/compass.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "5ccb451530aebb45841e3847c41c811bce71a52c",
        "original_commit_id": "5ccb451530aebb45841e3847c41c811bce71a52c",
        "user": {
            "login": "pivotal-casebook",
            "id": 189518,
            "node_id": "MDQ6VXNlcjE4OTUxOA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/189518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pivotal-casebook",
            "html_url": "https://github.com/pivotal-casebook",
            "followers_url": "https://api.github.com/users/pivotal-casebook/followers",
            "following_url": "https://api.github.com/users/pivotal-casebook/following{/other_user}",
            "gists_url": "https://api.github.com/users/pivotal-casebook/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pivotal-casebook/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pivotal-casebook/subscriptions",
            "organizations_url": "https://api.github.com/users/pivotal-casebook/orgs",
            "repos_url": "https://api.github.com/users/pivotal-casebook/repos",
            "events_url": "https://api.github.com/users/pivotal-casebook/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pivotal-casebook/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah I also noticed that .first works when its loaded in Rails but .first is not defined when running compass. Need to use [0] in this case.\n\nI'll rewrite with that.\n",
        "created_at": "2012-03-08T16:59:42Z",
        "updated_at": "2012-03-08T16:59:42Z",
        "html_url": "https://github.com/Compass/compass/pull/761#discussion_r534587",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/761",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/534587"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/761#discussion_r534587"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/761"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/554241",
        "pull_request_review_id": null,
        "id": 554241,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI0MQ==",
        "diff_hunk": "@@ -126,6 +126,14 @@ def test_font_files\n       evaluate(\"font-files('/font/name.woff')\")\n     end\n \n+    assert_nothing_raised Sass::SyntaxError do\n+      evaluate(\"font-files('/font/name.svg#fontId')\")\n+    end\n+\n+    assert_nothing_raised Sass::SyntaxError do\n+      evaluate(\"font-files('/font/name.eot?#iefix')\")\n+    end\n+",
        "path": "test/units/sass_extensions_test.rb",
        "position": 11,
        "original_position": 11,
        "commit_id": "1fb9e7adba26a9c25dd1a425e7dd325aeedd4d6b",
        "original_commit_id": "fac1a2c1efc1306da65e5fbb004b0a736545d5ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Can you add one more test and make sure it passes:\n\n```\nassert_nothing_raised Sass::SyntaxError do\n  evaluate(\"font-files('/font/name.svg?mightbedynamic=something%20+escaped#fontId')\")\nend\n```\n",
        "created_at": "2012-03-13T21:15:52Z",
        "updated_at": "2012-03-13T21:20:33Z",
        "html_url": "https://github.com/Compass/compass/pull/782#discussion_r554241",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/782",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/554241"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/782#discussion_r554241"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/782"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/572505",
        "pull_request_review_id": null,
        "id": 572505,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUwNQ==",
        "diff_hunk": "@@ -0,0 +1,8 @@\n+@import compass/css3/user-interface\n+\n+input[type=\"text\"] {\n+\t+input-placeholder {\n+\t\tcolor: #bfbfbf\n+\t\tfont-style: italic\n+\t}\n+}",
        "path": "doc-src/content/examples/compass/css3/input-placeholder/stylesheet.sass",
        "position": null,
        "original_position": 8,
        "commit_id": "25431b226d10f9355f75ba0dad28d6396463f0be",
        "original_commit_id": "6a4dbc60433a05f426268885f93f478d9b595c0f",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ummm. `.sass` files don't support curly braces :P\n",
        "created_at": "2012-03-18T22:12:21Z",
        "updated_at": "2012-03-19T02:55:36Z",
        "html_url": "https://github.com/Compass/compass/pull/799#discussion_r572505",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/799",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/572505"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/799#discussion_r572505"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/799"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/641048",
        "pull_request_review_id": null,
        "id": 641048,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTA0OA==",
        "diff_hunk": "@@ -58,3 +58,36 @@\n     -moz, -webkit, -o, not -ms, not -khtml, official\n   );\n }\n+\n+ \n+// Mixin for setting column breaks.\n+//\n+// * legal values for '$type' : 'before', 'after', 'inside' ",
        "path": "frameworks/compass/stylesheets/compass/css3/_columns.scss",
        "position": null,
        "original_position": 8,
        "commit_id": "4c10efc3d9c0635ae7dc3283da1d9ff6d8b2df43",
        "original_commit_id": "aae00a9438fd46d6505fdc9ef442e67ddc8f991a",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "doesn't seem like these would need to be quoted.\n",
        "created_at": "2012-04-03T18:50:08Z",
        "updated_at": "2012-04-06T03:53:05Z",
        "html_url": "https://github.com/Compass/compass/pull/827#discussion_r641048",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/827",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/641048"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/827#discussion_r641048"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/827"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/686689",
        "pull_request_review_id": null,
        "id": 686689,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjY4OQ==",
        "diff_hunk": "@@ -112,11 +112,12 @@ $base-half-leader: $base-leader / 2;\n @function rhythm(\n   $lines: 1,\n   $font-size: $base-font-size",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": null,
        "original_position": 3,
        "commit_id": "c5041fbcb9a1a06c95f8e1b1d05201e492afb875",
        "original_commit_id": "b768757f1696c54b57065c98172f7a18f8a5b046",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "missing a comma at the end of this line.\n",
        "created_at": "2012-04-16T02:44:15Z",
        "updated_at": "2012-04-16T06:21:25Z",
        "html_url": "https://github.com/Compass/compass/pull/848#discussion_r686689",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/848",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/686689"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/848#discussion_r686689"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/848"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/756625",
        "pull_request_review_id": null,
        "id": 756625,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1NjYyNQ==",
        "diff_hunk": "@@ -0,0 +1,15 @@\n+--- \n+title: Compass CSS Regions\n+crumb: CSS Regions\n+framework: compass\n+stylesheet: compass/css3/_regions.scss\n+meta_description: Specify CSS Regions for supported browsers.\n+layout: core\n+classnames:\n+  - reference\n+  - core\n+  - css3\n+---\n+- render 'reference' do\n+  %p\n+    Provides a mixin for the CSS regions, properties which allow you to flow content into new containers. See <a href=\"http://dev.w3.org/csswg/css3-regions/\">the spec draft</a> and <a href=\"http://labs.adobe.com/technologies/cssregions/\">Adobe's page on the topic</a>. ",
        "path": "doc-src/content/reference/compass/css3/regions.haml",
        "position": null,
        "original_position": 15,
        "commit_id": "6dd240437850712bf2f03af01ca6101af20a0e7d",
        "original_commit_id": "e093cd2c8481e15f24a54040ed82f319edbd8103",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "it actually provides several mixins :)\n",
        "created_at": "2012-05-01T16:02:42Z",
        "updated_at": "2012-05-01T16:07:03Z",
        "html_url": "https://github.com/Compass/compass/pull/816#discussion_r756625",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/816",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/756625"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/816#discussion_r756625"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/816"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/786363",
        "pull_request_review_id": null,
        "id": 786363,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc4NjM2Mw==",
        "diff_hunk": "@@ -43,6 +43,7 @@ $default-text-shadow-blur:     1px  !default;\n   @if $color == none {\n     text-shadow: none;\n   } @else {\n+    text-shadow: $color $hoff $voff; // for browsers without spread distance (like IE)",
        "path": "frameworks/compass/stylesheets/compass/css3/_text-shadow.scss",
        "position": 4,
        "original_position": 4,
        "commit_id": "f5fac74f8d98ca47c0186ddc9776fb4de662f6cd",
        "original_commit_id": "f5fac74f8d98ca47c0186ddc9776fb4de662f6cd",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`spread` and `blur` are different things. I think everyone supports blur, am I wrong? The issue with IE, as I understood, is that they are adding spread. So we would need to output one more variable than we have been, not one less. \n",
        "created_at": "2012-05-08T07:11:01Z",
        "updated_at": "2012-05-08T07:11:01Z",
        "html_url": "https://github.com/Compass/compass/pull/877#discussion_r786363",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/877",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/786363"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/877#discussion_r786363"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/877"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/788473",
        "pull_request_review_id": null,
        "id": 788473,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc4ODQ3Mw==",
        "diff_hunk": "@@ -43,6 +43,7 @@ $default-text-shadow-blur:     1px  !default;\n   @if $color == none {\n     text-shadow: none;\n   } @else {\n+    text-shadow: $color $hoff $voff; // for browsers without spread distance (like IE)",
        "path": "frameworks/compass/stylesheets/compass/css3/_text-shadow.scss",
        "position": 4,
        "original_position": 4,
        "commit_id": "f5fac74f8d98ca47c0186ddc9776fb4de662f6cd",
        "original_commit_id": "f5fac74f8d98ca47c0186ddc9776fb4de662f6cd",
        "user": {
            "login": "rachelnabors",
            "id": 236306,
            "node_id": "MDQ6VXNlcjIzNjMwNg==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/236306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rachelnabors",
            "html_url": "https://github.com/rachelnabors",
            "followers_url": "https://api.github.com/users/rachelnabors/followers",
            "following_url": "https://api.github.com/users/rachelnabors/following{/other_user}",
            "gists_url": "https://api.github.com/users/rachelnabors/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rachelnabors/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rachelnabors/subscriptions",
            "organizations_url": "https://api.github.com/users/rachelnabors/orgs",
            "repos_url": "https://api.github.com/users/rachelnabors/repos",
            "events_url": "https://api.github.com/users/rachelnabors/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rachelnabors/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right. It's a fourth value. I have hideously embarrassed myself by getting it backwards.\n",
        "created_at": "2012-05-08T15:19:40Z",
        "updated_at": "2012-05-08T15:19:40Z",
        "html_url": "https://github.com/Compass/compass/pull/877#discussion_r788473",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/877",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/788473"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/877#discussion_r788473"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/877"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/789433",
        "pull_request_review_id": null,
        "id": 789433,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc4OTQzMw==",
        "diff_hunk": "@@ -43,6 +43,7 @@ $default-text-shadow-blur:     1px  !default;\n   @if $color == none {\n     text-shadow: none;\n   } @else {\n+    text-shadow: $color $hoff $voff; // for browsers without spread distance (like IE)",
        "path": "frameworks/compass/stylesheets/compass/css3/_text-shadow.scss",
        "position": 4,
        "original_position": 4,
        "commit_id": "f5fac74f8d98ca47c0186ddc9776fb4de662f6cd",
        "original_commit_id": "f5fac74f8d98ca47c0186ddc9776fb4de662f6cd",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm sure you'll recover somehow. :)\n",
        "created_at": "2012-05-08T17:11:38Z",
        "updated_at": "2012-05-08T17:11:38Z",
        "html_url": "https://github.com/Compass/compass/pull/877#discussion_r789433",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/877",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/789433"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/877#discussion_r789433"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/877"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/889958",
        "pull_request_review_id": null,
        "id": 889958,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTk1OA==",
        "diff_hunk": "@@ -1,3 +1,5 @@\n+require 'rational'",
        "path": "lib/compass/sass_extensions/sprites/sprite_methods.rb",
        "position": 1,
        "original_position": 1,
        "commit_id": "b4037ea50da304b8f4b386cc7b979d032c2ed22e",
        "original_commit_id": "b4037ea50da304b8f4b386cc7b979d032c2ed22e",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Do we need this require?\n",
        "created_at": "2012-05-28T23:45:33Z",
        "updated_at": "2012-05-28T23:45:33Z",
        "html_url": "https://github.com/Compass/compass/pull/873#discussion_r889958",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/873",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/889958"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/873#discussion_r889958"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/873"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/891828",
        "pull_request_review_id": null,
        "id": 891828,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5MTgyOA==",
        "diff_hunk": "@@ -1,3 +1,5 @@\n+require 'rational'",
        "path": "lib/compass/sass_extensions/sprites/sprite_methods.rb",
        "position": 1,
        "original_position": 1,
        "commit_id": "b4037ea50da304b8f4b386cc7b979d032c2ed22e",
        "original_commit_id": "b4037ea50da304b8f4b386cc7b979d032c2ed22e",
        "user": {
            "login": "vbichkovsky",
            "id": 191699,
            "node_id": "MDQ6VXNlcjE5MTY5OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/191699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vbichkovsky",
            "html_url": "https://github.com/vbichkovsky",
            "followers_url": "https://api.github.com/users/vbichkovsky/followers",
            "following_url": "https://api.github.com/users/vbichkovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/vbichkovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vbichkovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vbichkovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/vbichkovsky/orgs",
            "repos_url": "https://api.github.com/users/vbichkovsky/repos",
            "events_url": "https://api.github.com/users/vbichkovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vbichkovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nope, it just happened that my commit contained these changes and I created a pull request from it. You only need to change layout_methods.rb\n",
        "created_at": "2012-05-29T12:39:54Z",
        "updated_at": "2012-05-29T12:39:54Z",
        "html_url": "https://github.com/Compass/compass/pull/873#discussion_r891828",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/873",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/891828"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/873#discussion_r891828"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/873"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/909725",
        "pull_request_review_id": null,
        "id": 909725,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTcyNQ==",
        "diff_hunk": "@@ -1,3 +1,5 @@\n+require 'rational'",
        "path": "lib/compass/sass_extensions/sprites/sprite_methods.rb",
        "position": 1,
        "original_position": 1,
        "commit_id": "b4037ea50da304b8f4b386cc7b979d032c2ed22e",
        "original_commit_id": "b4037ea50da304b8f4b386cc7b979d032c2ed22e",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "manually changing something kinda makes using pull requests pointless =p\n",
        "created_at": "2012-05-31T17:42:17Z",
        "updated_at": "2012-05-31T17:42:17Z",
        "html_url": "https://github.com/Compass/compass/pull/873#discussion_r909725",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/873",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/909725"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/873#discussion_r909725"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/873"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1306618",
        "pull_request_review_id": null,
        "id": 1306618,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDY2MTg=",
        "diff_hunk": "@@ -117,10 +119,14 @@ def sprite_has_selector(map, sprite, selector)\n \n \n   # Returns a url to the sprite image.\n-  def sprite_url(map)\n+  def sprite_url(map, only_path = Sass::Script::Bool.new(false))",
        "path": "lib/compass/sass_extensions/functions/sprites.rb",
        "position": 29,
        "original_position": 29,
        "commit_id": "6499f9a1ff5ff5adae1081a180bee3407714d63a",
        "original_commit_id": "6499f9a1ff5ff5adae1081a180bee3407714d63a",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't understand why this `only_path` argument is necessary.\n",
        "created_at": "2012-08-03T23:46:09Z",
        "updated_at": "2012-08-03T23:46:09Z",
        "html_url": "https://github.com/Compass/compass/pull/977#discussion_r1306618",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/977",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1306618"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/977#discussion_r1306618"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/977"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1306625",
        "pull_request_review_id": null,
        "id": 1306625,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDY2MjU=",
        "diff_hunk": "@@ -155,13 +162,19 @@ def sprite_position(map, sprite = nil, offset_x = ZERO, offset_y = ZERO)\n     unless image\n       missing_image!(map, sprite)\n     end\n+    if ratio.unit_str == \"%\"\n+      r = ratio.value / 100\n+    else\n+      r = ratio.value\n+    end\n     if offset_x.unit_str == \"%\"\n-      x = offset_x # CE: Shouldn't this be a percentage of the total width?\n+      x = (offset_x.value * r) # CE: Shouldn't this be a percentage of the total width?\n+      x = Sass::Script::Number.new(x, x == 0 ? [] : [\"%\"])\n     else\n-      x = offset_x.value - image.left\n+      x = ( offset_x.value - image.left ) * r",
        "path": "lib/compass/sass_extensions/functions/sprites.rb",
        "position": 68,
        "original_position": 68,
        "commit_id": "6499f9a1ff5ff5adae1081a180bee3407714d63a",
        "original_commit_id": "6499f9a1ff5ff5adae1081a180bee3407714d63a",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I feel like it might be better to do this ratio manipulation in the sass mixins calling this function.\n",
        "created_at": "2012-08-03T23:48:44Z",
        "updated_at": "2012-08-03T23:48:44Z",
        "html_url": "https://github.com/Compass/compass/pull/977#discussion_r1306625",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/977",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1306625"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/977#discussion_r1306625"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/977"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/850524",
        "pull_request_review_id": null,
        "id": 850524,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDUyNA==",
        "diff_hunk": "@@ -24,62 +29,107 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n+}\n+\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {\n-  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n-  // whose root is set in ems. So we set the root font size in percentages of\n-  // the default font size.\n-  * html {\n-    font-size: 100% * ($font-size / $browser-default-font-size);\n+  $relative-size: 100% * ($font-size / $browser-default-font-size);\n+\n+  @if $legacy-support-for-ie6 and (not $relative-font-sizing) {\n+    // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n+    // whose root is set in ems. So we set the root font size in percentages of\n+    // the default font size, even if we are using absolute sizes elsewhere.\n+    * html { font-size: $relative-size; }\n   }\n   html {\n-    font-size: $font-size;\n-    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));\n+    font-size: if($relative-font-sizing, $relative-size, $font-size);\n+    @include adjust-leading-to(1, $font-size);\n   }\n }\n \n-// resets the baseline to 1 leading unit\n-@mixin reset-baseline {\n-  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));\n+// Resets the baseline to 1 rhythm unit\n+// Does not work on elements whose font-size is different from $base-font-size.\n+//\n+// @deprecated This mixin will be removed in the next release.\n+// Please use the `adjust-leading-to` mixin instead.\n+@mixin reset-baseline($font-size: $base-font-size) {\n+  @include adjust-leading-to(1, $font-size);\n }\n \n // Show a background image that can be used to debug your alignments.\n+// As this is a development feature, this mixin never outputs pixel fallbacks\n+// for rem output.\n // Include the $img argument if you would rather use your own image than the\n // Compass default gradient image.\n @mixin debug-vertical-alignment($img: false) {\n   @if $img {\n     background: image-url($img);\n   } @else {\n-    @include baseline-grid-background($base-rhythm-unit);",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": null,
        "original_position": 163,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "0424f2ceb118234f38727c3017c56574a4869afe",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "$base-rhythm-unit was only ever used in this one spot, and has been removed.\n",
        "created_at": "2012-05-20T16:56:03Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r850524",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/850524"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r850524"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/850586",
        "pull_request_review_id": null,
        "id": 850586,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDU4Ng==",
        "diff_hunk": "@@ -24,62 +29,107 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n+}\n+\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {\n-  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n-  // whose root is set in ems. So we set the root font size in percentages of\n-  // the default font size.\n-  * html {\n-    font-size: 100% * ($font-size / $browser-default-font-size);\n+  $relative-size: 100% * ($font-size / $browser-default-font-size);\n+\n+  @if $legacy-support-for-ie6 and (not $relative-font-sizing) {\n+    // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n+    // whose root is set in ems. So we set the root font size in percentages of\n+    // the default font size, even if we are using absolute sizes elsewhere.\n+    * html { font-size: $relative-size; }\n   }\n   html {\n-    font-size: $font-size;\n-    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));\n+    font-size: if($relative-font-sizing, $relative-size, $font-size);\n+    @include adjust-leading-to(1, $font-size);\n   }\n }\n \n-// resets the baseline to 1 leading unit\n-@mixin reset-baseline {\n-  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));\n+// Resets the baseline to 1 rhythm unit\n+// Does not work on elements whose font-size is different from $base-font-size.\n+//\n+// @deprecated This mixin will be removed in the next release.\n+// Please use the `adjust-leading-to` mixin instead.\n+@mixin reset-baseline($font-size: $base-font-size) {\n+  @include adjust-leading-to(1, $font-size);\n }\n \n // Show a background image that can be used to debug your alignments.\n+// As this is a development feature, this mixin never outputs pixel fallbacks\n+// for rem output.\n // Include the $img argument if you would rather use your own image than the\n // Compass default gradient image.\n @mixin debug-vertical-alignment($img: false) {\n   @if $img {\n     background: image-url($img);\n   } @else {\n-    @include baseline-grid-background($base-rhythm-unit);",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": null,
        "original_position": 163,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "0424f2ceb118234f38727c3017c56574a4869afe",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've been using `$base-rhythm-unit` as a useful part of the public API. Is there a reason not to keep it available?\n",
        "created_at": "2012-05-20T17:50:16Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r850586",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/850586"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r850586"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/850589",
        "pull_request_review_id": null,
        "id": 850589,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDU4OQ==",
        "diff_hunk": "@@ -24,62 +29,107 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n+}\n+\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {\n-  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n-  // whose root is set in ems. So we set the root font size in percentages of\n-  // the default font size.\n-  * html {\n-    font-size: 100% * ($font-size / $browser-default-font-size);\n+  $relative-size: 100% * ($font-size / $browser-default-font-size);\n+\n+  @if $legacy-support-for-ie6 and (not $relative-font-sizing) {\n+    // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n+    // whose root is set in ems. So we set the root font size in percentages of\n+    // the default font size, even if we are using absolute sizes elsewhere.\n+    * html { font-size: $relative-size; }\n   }\n   html {\n-    font-size: $font-size;\n-    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));\n+    font-size: if($relative-font-sizing, $relative-size, $font-size);\n+    @include adjust-leading-to(1, $font-size);\n   }\n }\n \n-// resets the baseline to 1 leading unit\n-@mixin reset-baseline {\n-  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));\n+// Resets the baseline to 1 rhythm unit\n+// Does not work on elements whose font-size is different from $base-font-size.\n+//\n+// @deprecated This mixin will be removed in the next release.\n+// Please use the `adjust-leading-to` mixin instead.\n+@mixin reset-baseline($font-size: $base-font-size) {\n+  @include adjust-leading-to(1, $font-size);\n }\n \n // Show a background image that can be used to debug your alignments.\n+// As this is a development feature, this mixin never outputs pixel fallbacks\n+// for rem output.\n // Include the $img argument if you would rather use your own image than the\n // Compass default gradient image.\n @mixin debug-vertical-alignment($img: false) {\n   @if $img {\n     background: image-url($img);\n   } @else {\n-    @include baseline-grid-background($base-rhythm-unit);",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": null,
        "original_position": 163,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "0424f2ceb118234f38727c3017c56574a4869afe",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "There's no reason to get rid of it if it's useful, just that AFAIK it's identical to a call to rhythm().\n",
        "created_at": "2012-05-20T17:58:46Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r850589",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/850589"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r850589"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/854319",
        "pull_request_review_id": null,
        "id": 854319,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NDMxOQ==",
        "diff_hunk": "@@ -24,62 +29,107 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n+}\n+\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {\n-  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n-  // whose root is set in ems. So we set the root font size in percentages of\n-  // the default font size.\n-  * html {\n-    font-size: 100% * ($font-size / $browser-default-font-size);\n+  $relative-size: 100% * ($font-size / $browser-default-font-size);\n+\n+  @if $legacy-support-for-ie6 and (not $relative-font-sizing) {\n+    // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n+    // whose root is set in ems. So we set the root font size in percentages of\n+    // the default font size, even if we are using absolute sizes elsewhere.\n+    * html { font-size: $relative-size; }\n   }\n   html {\n-    font-size: $font-size;\n-    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));\n+    font-size: if($relative-font-sizing, $relative-size, $font-size);\n+    @include adjust-leading-to(1, $font-size);\n   }\n }\n \n-// resets the baseline to 1 leading unit\n-@mixin reset-baseline {\n-  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));\n+// Resets the baseline to 1 rhythm unit\n+// Does not work on elements whose font-size is different from $base-font-size.\n+//\n+// @deprecated This mixin will be removed in the next release.\n+// Please use the `adjust-leading-to` mixin instead.\n+@mixin reset-baseline($font-size: $base-font-size) {\n+  @include adjust-leading-to(1, $font-size);\n }\n \n // Show a background image that can be used to debug your alignments.\n+// As this is a development feature, this mixin never outputs pixel fallbacks\n+// for rem output.\n // Include the $img argument if you would rather use your own image than the\n // Compass default gradient image.\n @mixin debug-vertical-alignment($img: false) {\n   @if $img {\n     background: image-url($img);\n   } @else {\n-    @include baseline-grid-background($base-rhythm-unit);",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": null,
        "original_position": 163,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "0424f2ceb118234f38727c3017c56574a4869afe",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right. Good riddance. :)\n",
        "created_at": "2012-05-21T16:29:13Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r854319",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/854319"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r854319"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/856132",
        "pull_request_review_id": null,
        "id": 856132,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NjEzMg==",
        "diff_hunk": "@@ -24,62 +29,107 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n+}\n+\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {\n-  // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n-  // whose root is set in ems. So we set the root font size in percentages of\n-  // the default font size.\n-  * html {\n-    font-size: 100% * ($font-size / $browser-default-font-size);\n+  $relative-size: 100% * ($font-size / $browser-default-font-size);\n+\n+  @if $legacy-support-for-ie6 and (not $relative-font-sizing) {\n+    // IE 6 refuses to resize fonts set in pixels and it weirdly resizes fonts\n+    // whose root is set in ems. So we set the root font size in percentages of\n+    // the default font size, even if we are using absolute sizes elsewhere.\n+    * html { font-size: $relative-size; }\n   }\n   html {\n-    font-size: $font-size;\n-    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));\n+    font-size: if($relative-font-sizing, $relative-size, $font-size);\n+    @include adjust-leading-to(1, $font-size);\n   }\n }\n \n-// resets the baseline to 1 leading unit\n-@mixin reset-baseline {\n-  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));\n+// Resets the baseline to 1 rhythm unit\n+// Does not work on elements whose font-size is different from $base-font-size.\n+//\n+// @deprecated This mixin will be removed in the next release.\n+// Please use the `adjust-leading-to` mixin instead.\n+@mixin reset-baseline($font-size: $base-font-size) {\n+  @include adjust-leading-to(1, $font-size);\n }\n \n // Show a background image that can be used to debug your alignments.\n+// As this is a development feature, this mixin never outputs pixel fallbacks\n+// for rem output.\n // Include the $img argument if you would rather use your own image than the\n // Compass default gradient image.\n @mixin debug-vertical-alignment($img: false) {\n   @if $img {\n     background: image-url($img);\n   } @else {\n-    @include baseline-grid-background($base-rhythm-unit);",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": null,
        "original_position": 163,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "0424f2ceb118234f38727c3017c56574a4869afe",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":) Assuming this gets merged, it should be an easy find-and-replace.\n",
        "created_at": "2012-05-21T20:19:05Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r856132",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/856132"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r856132"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1314718",
        "pull_request_review_id": null,
        "id": 1314718,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTQ3MTg=",
        "diff_hunk": "@@ -0,0 +1,120 @@\n+// @private Default font-size for all browsers\n+$browser-default-font-size: 16px;\n+\n+// Base font size in pixels, if not already defined.\n+// Should be the same as the font-size of the html element.\n+$base-font-size: 16px !default;\n+\n+// Whether to output fallback values in px when outputting rems.\n+$rem-with-px-fallback: true !default;\n+\n+// Convert any CSS <length> or <percentage> value to any other.\n+@function convert-length($length, $to-unit, $from-context: $base-font-size, $to-context: $from-context) {\n+\t$from-unit: unit($length);\n+\n+\t// Optimize for cases where from and to may accidentally be the same.\n+\t@if $from-unit == $to-unit { @return $length; }\n+\t@if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n+\t@if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n+\n+\t// Fixed ratios\n+\t// https://developer.mozilla.org/en/CSS/length\n+\t// http://dev.w3.org/csswg/css3-values/#absolute-lengths\n+\t$px-per-in: 96px / 1in;\n+\t$px-per-mm: 96px / 25.4mm;\n+\t$px-per-cm: 96px / 2.54cm;\n+\t$px-per-pt: 4px / 3pt;\n+\t$px-per-pc: 16px / 1pc;",
        "path": "frameworks/compass/stylesheets/compass/typography/_units.scss",
        "position": null,
        "original_position": 27,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This stuff should be baked into the Sass compiler, I have opened a new issue for that: https://github.com/nex3/sass/issues/471\n",
        "created_at": "2012-08-06T19:13:50Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1314718",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1314718"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1314718"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1314772",
        "pull_request_review_id": null,
        "id": 1314772,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTQ3NzI=",
        "diff_hunk": "@@ -0,0 +1,120 @@\n+// @private Default font-size for all browsers\n+$browser-default-font-size: 16px;\n+\n+// Base font size in pixels, if not already defined.\n+// Should be the same as the font-size of the html element.\n+$base-font-size: 16px !default;\n+\n+// Whether to output fallback values in px when outputting rems.\n+$rem-with-px-fallback: true !default;\n+\n+// Convert any CSS <length> or <percentage> value to any other.\n+@function convert-length($length, $to-unit, $from-context: $base-font-size, $to-context: $from-context) {\n+\t$from-unit: unit($length);\n+\n+\t// Optimize for cases where from and to may accidentally be the same.\n+\t@if $from-unit == $to-unit { @return $length; }\n+\t@if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n+\t@if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n+\n+\t// Fixed ratios\n+\t// https://developer.mozilla.org/en/CSS/length\n+\t// http://dev.w3.org/csswg/css3-values/#absolute-lengths\n+\t$px-per-in: 96px / 1in;\n+\t$px-per-mm: 96px / 25.4mm;\n+\t$px-per-cm: 96px / 2.54cm;\n+\t$px-per-pt: 4px / 3pt;\n+\t$px-per-pc: 16px / 1pc;\n+\n+\t// Variables to store actual convesion ratios\n+\t$px-per-from-unit: 1;\n+\t$px-per-to-unit: 1;\n+\n+\t@if $from-unit != 'px' {\n+\t\t@if      $from-unit == 'em'  { $px-per-from-unit: $from-context / 1em }\n+\t\t@else if $from-unit == 'rem' { $px-per-from-unit: $base-font-size / 1rem }\n+\t\t@else if $from-unit == '%'   { $px-per-from-unit: $from-context / 100% }\n+\t\t@else if $from-unit == 'ex'  { $px-per-from-unit: $from-context / 2ex }\n+\t\t@else if $from-unit == 'in'  { $px-per-from-unit: $px-per-in }\n+\t\t@else if $from-unit == 'mm'  { $px-per-from-unit: $px-per-mm }\n+\t\t@else if $from-unit == 'cm'  { $px-per-from-unit: $px-per-cm }\n+\t\t@else if $from-unit == 'pt'  { $px-per-from-unit: $px-per-pt }\n+\t\t@else if $from-unit == 'pc'  { $px-per-from-unit: $px-per-pc }\n+\t\t@else if $to-unit == 'ch' or $to-unit == 'vw' or $to-unit == 'vh' or $to-unit == 'vmin' {\n+\t\t\t@warn \"#{$from-unit} units can't be reliably converted; Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t\t@else {\n+\t\t\t@warn \"#{$from-unit} is an unknown length unit. Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t}\n+\n+\t@if $to-unit != 'px' {\n+\t\t@if      $to-unit == 'em'  { $px-per-to-unit: $to-context / 1em }\n+\t\t@else if $to-unit == 'rem' { $px-per-to-unit: $base-font-size / 1rem }\n+\t\t@else if $to-unit == '%'   { $px-per-to-unit: $to-context / 100% }\n+\t\t@else if $to-unit == 'ex'  { $px-per-to-unit: $to-context / 2ex }\n+\t\t@else if $to-unit == 'in'  { $px-per-to-unit: $px-per-in }\n+\t\t@else if $to-unit == 'mm'  { $px-per-to-unit: $px-per-mm }\n+\t\t@else if $to-unit == 'cm'  { $px-per-to-unit: $px-per-cm }\n+\t\t@else if $to-unit == 'pt'  { $px-per-to-unit: $px-per-pt }\n+\t\t@else if $to-unit == 'pc'  { $px-per-to-unit: $px-per-px }\n+\t\t@else if $to-unit == 'ch' or $to-unit == 'vw' or $to-unit == 'vh' or $to-unit == 'vmin' {\n+\t\t\t@warn \"#{$to-unit} units can't be reliably converted; Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t\t@else {\n+\t\t\t@warn \"#{$to-unit} is an unknown length unit. Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t}\n+\t@return $length * $px-per-from-unit / $px-per-to-unit;\n+}\n+\n+// For the given property, use rem units with px as a fallback value for older\n+// browsers.\n+//\n+// $property - The css property name.\n+// $values - The value (or space-separated list of values) for the property.\n+// $use-px-fallback - Boolean, default: true; whether to use pixel fallback values\n+//\n+@mixin rem($property, $values, $use-px-fallback: $rem-with-px-fallback) {\n+\t// Create a couple of empty lists as output buffers.\n+\t$px-values: ();\n+\t$rem-values: ();\n+\n+\t// Ensure $values is a list.\n+\t@if type-of($values) != 'list' {\n+\t\t$values: join((), $values);\n+\t}",
        "path": "frameworks/compass/stylesheets/compass/typography/_units.scss",
        "position": null,
        "original_position": 90,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sass will treat a single value as a list with one element in an `@each` loop.\n\n``` scss\n@each $foo in 2px { div {width: $foo; }}\n```\n\noutputs:\n\n``` css\ndiv { width: 2px; }\n```\n",
        "created_at": "2012-08-06T19:17:37Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1314772",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1314772"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1314772"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1315305",
        "pull_request_review_id": null,
        "id": 1315305,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTUzMDU=",
        "diff_hunk": "@@ -0,0 +1,120 @@\n+// @private Default font-size for all browsers\n+$browser-default-font-size: 16px;\n+\n+// Base font size in pixels, if not already defined.\n+// Should be the same as the font-size of the html element.\n+$base-font-size: 16px !default;\n+\n+// Whether to output fallback values in px when outputting rems.\n+$rem-with-px-fallback: true !default;\n+\n+// Convert any CSS <length> or <percentage> value to any other.\n+@function convert-length($length, $to-unit, $from-context: $base-font-size, $to-context: $from-context) {\n+\t$from-unit: unit($length);\n+\n+\t// Optimize for cases where from and to may accidentally be the same.\n+\t@if $from-unit == $to-unit { @return $length; }\n+\t@if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n+\t@if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n+\n+\t// Fixed ratios\n+\t// https://developer.mozilla.org/en/CSS/length\n+\t// http://dev.w3.org/csswg/css3-values/#absolute-lengths\n+\t$px-per-in: 96px / 1in;\n+\t$px-per-mm: 96px / 25.4mm;\n+\t$px-per-cm: 96px / 2.54cm;\n+\t$px-per-pt: 4px / 3pt;\n+\t$px-per-pc: 16px / 1pc;\n+\n+\t// Variables to store actual convesion ratios\n+\t$px-per-from-unit: 1;\n+\t$px-per-to-unit: 1;\n+\n+\t@if $from-unit != 'px' {\n+\t\t@if      $from-unit == 'em'  { $px-per-from-unit: $from-context / 1em }\n+\t\t@else if $from-unit == 'rem' { $px-per-from-unit: $base-font-size / 1rem }\n+\t\t@else if $from-unit == '%'   { $px-per-from-unit: $from-context / 100% }\n+\t\t@else if $from-unit == 'ex'  { $px-per-from-unit: $from-context / 2ex }\n+\t\t@else if $from-unit == 'in'  { $px-per-from-unit: $px-per-in }\n+\t\t@else if $from-unit == 'mm'  { $px-per-from-unit: $px-per-mm }\n+\t\t@else if $from-unit == 'cm'  { $px-per-from-unit: $px-per-cm }\n+\t\t@else if $from-unit == 'pt'  { $px-per-from-unit: $px-per-pt }\n+\t\t@else if $from-unit == 'pc'  { $px-per-from-unit: $px-per-pc }\n+\t\t@else if $to-unit == 'ch' or $to-unit == 'vw' or $to-unit == 'vh' or $to-unit == 'vmin' {\n+\t\t\t@warn \"#{$from-unit} units can't be reliably converted; Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t\t@else {\n+\t\t\t@warn \"#{$from-unit} is an unknown length unit. Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t}\n+\n+\t@if $to-unit != 'px' {\n+\t\t@if      $to-unit == 'em'  { $px-per-to-unit: $to-context / 1em }\n+\t\t@else if $to-unit == 'rem' { $px-per-to-unit: $base-font-size / 1rem }\n+\t\t@else if $to-unit == '%'   { $px-per-to-unit: $to-context / 100% }\n+\t\t@else if $to-unit == 'ex'  { $px-per-to-unit: $to-context / 2ex }\n+\t\t@else if $to-unit == 'in'  { $px-per-to-unit: $px-per-in }\n+\t\t@else if $to-unit == 'mm'  { $px-per-to-unit: $px-per-mm }\n+\t\t@else if $to-unit == 'cm'  { $px-per-to-unit: $px-per-cm }\n+\t\t@else if $to-unit == 'pt'  { $px-per-to-unit: $px-per-pt }\n+\t\t@else if $to-unit == 'pc'  { $px-per-to-unit: $px-per-px }\n+\t\t@else if $to-unit == 'ch' or $to-unit == 'vw' or $to-unit == 'vh' or $to-unit == 'vmin' {\n+\t\t\t@warn \"#{$to-unit} units can't be reliably converted; Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t\t@else {\n+\t\t\t@warn \"#{$to-unit} is an unknown length unit. Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t}\n+\t@return $length * $px-per-from-unit / $px-per-to-unit;\n+}\n+\n+// For the given property, use rem units with px as a fallback value for older\n+// browsers.\n+//\n+// $property - The css property name.\n+// $values - The value (or space-separated list of values) for the property.\n+// $use-px-fallback - Boolean, default: true; whether to use pixel fallback values\n+//\n+@mixin rem($property, $values, $use-px-fallback: $rem-with-px-fallback) {\n+\t// Create a couple of empty lists as output buffers.\n+\t$px-values: ();\n+\t$rem-values: ();\n+\n+\t// Ensure $values is a list.\n+\t@if type-of($values) != 'list' {\n+\t\t$values: join((), $values);\n+\t}\n+\n+\t// Loop through the $values list\n+\t@each $value in $values {\n+\t\t// For each property value, if it's in rem or px, derive both rem and\n+\t\t// px values for it and add those to the end of the appropriate buffer.\n+\t\t// Ensure all pixel values are rounded to the nearest pixel.\n+\t\t@if type-of($value) == number and not unitless($value) and (unit($value) == px or unit($value) == rem) {\n+\t\t\t@if unit($value) == px {\n+\t\t\t\t$px-values: join($px-values, round($value));\n+\t\t\t\t$rem-values: join($rem-values, convert-length($value, rem));\n+\t\t\t}\n+\t\t\t@else {\n+\t\t\t\t$px-values: join($px-values, round(convert-length($value, px)));\n+\t\t\t\t$rem-values: join($rem-values, $value);\n+\t\t\t}\n+\t\t}\n+\t\t@else {\n+\t\t\t$px-values: join($px-values, $value);\n+\t\t\t$rem-values: join($rem-values, $value);\n+\t\t}\n+\t}\n+\n+\t// Use pixel fallback for browsers that don't understand rem units.\n+\t@if $use-px-fallback {\n+\t\t#{$property}: $px-values;\n+\t}\n+\n+\t// Use rem values for everyone else (overrides pixel values).\n+\t#{$property}: $rem-values;\n+}",
        "path": "frameworks/compass/stylesheets/compass/typography/_units.scss",
        "position": 152,
        "original_position": 120,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I've come to really dislike any code that operates on Sass lists. It's really quite unpleasant to write or read. So I opened a new issue for sass to add anonymous functions: https://github.com/nex3/sass/issues/472\n",
        "created_at": "2012-08-06T20:10:18Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1315305",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1315305"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1315305"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1326442",
        "pull_request_review_id": null,
        "id": 1326442,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjY0NDI=",
        "diff_hunk": "@@ -0,0 +1,120 @@\n+// @private Default font-size for all browsers\n+$browser-default-font-size: 16px;\n+\n+// Base font size in pixels, if not already defined.\n+// Should be the same as the font-size of the html element.\n+$base-font-size: 16px !default;\n+\n+// Whether to output fallback values in px when outputting rems.\n+$rem-with-px-fallback: true !default;\n+\n+// Convert any CSS <length> or <percentage> value to any other.\n+@function convert-length($length, $to-unit, $from-context: $base-font-size, $to-context: $from-context) {\n+\t$from-unit: unit($length);\n+\n+\t// Optimize for cases where from and to may accidentally be the same.\n+\t@if $from-unit == $to-unit { @return $length; }\n+\t@if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n+\t@if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n+\n+\t// Fixed ratios\n+\t// https://developer.mozilla.org/en/CSS/length\n+\t// http://dev.w3.org/csswg/css3-values/#absolute-lengths\n+\t$px-per-in: 96px / 1in;\n+\t$px-per-mm: 96px / 25.4mm;\n+\t$px-per-cm: 96px / 2.54cm;\n+\t$px-per-pt: 4px / 3pt;\n+\t$px-per-pc: 16px / 1pc;",
        "path": "frameworks/compass/stylesheets/compass/typography/_units.scss",
        "position": null,
        "original_position": 27,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I made a patch for sass to address the `96px` per `1in` thing: https://github.com/nex3/sass/pull/474\n",
        "created_at": "2012-08-07T21:06:12Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1326442",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1326442"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1326442"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1328190",
        "pull_request_review_id": null,
        "id": 1328190,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjgxOTA=",
        "diff_hunk": "@@ -0,0 +1,120 @@\n+// @private Default font-size for all browsers\n+$browser-default-font-size: 16px;\n+\n+// Base font size in pixels, if not already defined.\n+// Should be the same as the font-size of the html element.\n+$base-font-size: 16px !default;\n+\n+// Whether to output fallback values in px when outputting rems.\n+$rem-with-px-fallback: true !default;\n+\n+// Convert any CSS <length> or <percentage> value to any other.\n+@function convert-length($length, $to-unit, $from-context: $base-font-size, $to-context: $from-context) {\n+\t$from-unit: unit($length);\n+\n+\t// Optimize for cases where from and to may accidentally be the same.\n+\t@if $from-unit == $to-unit { @return $length; }\n+\t@if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n+\t@if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n+\n+\t// Fixed ratios\n+\t// https://developer.mozilla.org/en/CSS/length\n+\t// http://dev.w3.org/csswg/css3-values/#absolute-lengths\n+\t$px-per-in: 96px / 1in;\n+\t$px-per-mm: 96px / 25.4mm;\n+\t$px-per-cm: 96px / 2.54cm;\n+\t$px-per-pt: 4px / 3pt;\n+\t$px-per-pc: 16px / 1pc;",
        "path": "frameworks/compass/stylesheets/compass/typography/_units.scss",
        "position": null,
        "original_position": 27,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "and it was merged :)\n",
        "created_at": "2012-08-08T00:34:47Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1328190",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1328190"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1328190"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1328426",
        "pull_request_review_id": null,
        "id": 1328426,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjg0MjY=",
        "diff_hunk": "@@ -0,0 +1,120 @@\n+// @private Default font-size for all browsers\n+$browser-default-font-size: 16px;\n+\n+// Base font size in pixels, if not already defined.\n+// Should be the same as the font-size of the html element.\n+$base-font-size: 16px !default;\n+\n+// Whether to output fallback values in px when outputting rems.\n+$rem-with-px-fallback: true !default;\n+\n+// Convert any CSS <length> or <percentage> value to any other.\n+@function convert-length($length, $to-unit, $from-context: $base-font-size, $to-context: $from-context) {\n+\t$from-unit: unit($length);\n+\n+\t// Optimize for cases where from and to may accidentally be the same.\n+\t@if $from-unit == $to-unit { @return $length; }\n+\t@if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n+\t@if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n+\n+\t// Fixed ratios\n+\t// https://developer.mozilla.org/en/CSS/length\n+\t// http://dev.w3.org/csswg/css3-values/#absolute-lengths\n+\t$px-per-in: 96px / 1in;\n+\t$px-per-mm: 96px / 25.4mm;\n+\t$px-per-cm: 96px / 2.54cm;\n+\t$px-per-pt: 4px / 3pt;\n+\t$px-per-pc: 16px / 1pc;",
        "path": "frameworks/compass/stylesheets/compass/typography/_units.scss",
        "position": null,
        "original_position": 27,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Ah, thanks Chris!\n",
        "created_at": "2012-08-08T01:11:58Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1328426",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1328426"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1328426"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1328468",
        "pull_request_review_id": null,
        "id": 1328468,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjg0Njg=",
        "diff_hunk": "@@ -0,0 +1,120 @@\n+// @private Default font-size for all browsers\n+$browser-default-font-size: 16px;\n+\n+// Base font size in pixels, if not already defined.\n+// Should be the same as the font-size of the html element.\n+$base-font-size: 16px !default;\n+\n+// Whether to output fallback values in px when outputting rems.\n+$rem-with-px-fallback: true !default;\n+\n+// Convert any CSS <length> or <percentage> value to any other.\n+@function convert-length($length, $to-unit, $from-context: $base-font-size, $to-context: $from-context) {\n+\t$from-unit: unit($length);\n+\n+\t// Optimize for cases where from and to may accidentally be the same.\n+\t@if $from-unit == $to-unit { @return $length; }\n+\t@if unit($from-context) != 'px' { @warn \"Paremeter $from-context must resolve to a value in pixel units.\"; }\n+\t@if unit($to-context) != 'px' { @warn \"Parameter $to-context must resolve to a value in pixel units.\"; }\n+\n+\t// Fixed ratios\n+\t// https://developer.mozilla.org/en/CSS/length\n+\t// http://dev.w3.org/csswg/css3-values/#absolute-lengths\n+\t$px-per-in: 96px / 1in;\n+\t$px-per-mm: 96px / 25.4mm;\n+\t$px-per-cm: 96px / 2.54cm;\n+\t$px-per-pt: 4px / 3pt;\n+\t$px-per-pc: 16px / 1pc;\n+\n+\t// Variables to store actual convesion ratios\n+\t$px-per-from-unit: 1;\n+\t$px-per-to-unit: 1;\n+\n+\t@if $from-unit != 'px' {\n+\t\t@if      $from-unit == 'em'  { $px-per-from-unit: $from-context / 1em }\n+\t\t@else if $from-unit == 'rem' { $px-per-from-unit: $base-font-size / 1rem }\n+\t\t@else if $from-unit == '%'   { $px-per-from-unit: $from-context / 100% }\n+\t\t@else if $from-unit == 'ex'  { $px-per-from-unit: $from-context / 2ex }\n+\t\t@else if $from-unit == 'in'  { $px-per-from-unit: $px-per-in }\n+\t\t@else if $from-unit == 'mm'  { $px-per-from-unit: $px-per-mm }\n+\t\t@else if $from-unit == 'cm'  { $px-per-from-unit: $px-per-cm }\n+\t\t@else if $from-unit == 'pt'  { $px-per-from-unit: $px-per-pt }\n+\t\t@else if $from-unit == 'pc'  { $px-per-from-unit: $px-per-pc }\n+\t\t@else if $to-unit == 'ch' or $to-unit == 'vw' or $to-unit == 'vh' or $to-unit == 'vmin' {\n+\t\t\t@warn \"#{$from-unit} units can't be reliably converted; Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t\t@else {\n+\t\t\t@warn \"#{$from-unit} is an unknown length unit. Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t}\n+\n+\t@if $to-unit != 'px' {\n+\t\t@if      $to-unit == 'em'  { $px-per-to-unit: $to-context / 1em }\n+\t\t@else if $to-unit == 'rem' { $px-per-to-unit: $base-font-size / 1rem }\n+\t\t@else if $to-unit == '%'   { $px-per-to-unit: $to-context / 100% }\n+\t\t@else if $to-unit == 'ex'  { $px-per-to-unit: $to-context / 2ex }\n+\t\t@else if $to-unit == 'in'  { $px-per-to-unit: $px-per-in }\n+\t\t@else if $to-unit == 'mm'  { $px-per-to-unit: $px-per-mm }\n+\t\t@else if $to-unit == 'cm'  { $px-per-to-unit: $px-per-cm }\n+\t\t@else if $to-unit == 'pt'  { $px-per-to-unit: $px-per-pt }\n+\t\t@else if $to-unit == 'pc'  { $px-per-to-unit: $px-per-px }\n+\t\t@else if $to-unit == 'ch' or $to-unit == 'vw' or $to-unit == 'vh' or $to-unit == 'vmin' {\n+\t\t\t@warn \"#{$to-unit} units can't be reliably converted; Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t\t@else {\n+\t\t\t@warn \"#{$to-unit} is an unknown length unit. Returning original value.\";\n+\t\t\t@return $length;\n+\t\t}\n+\t}\n+\t@return $length * $px-per-from-unit / $px-per-to-unit;\n+}\n+\n+// For the given property, use rem units with px as a fallback value for older\n+// browsers.\n+//\n+// $property - The css property name.\n+// $values - The value (or space-separated list of values) for the property.\n+// $use-px-fallback - Boolean, default: true; whether to use pixel fallback values\n+//\n+@mixin rem($property, $values, $use-px-fallback: $rem-with-px-fallback) {\n+\t// Create a couple of empty lists as output buffers.\n+\t$px-values: ();\n+\t$rem-values: ();\n+\n+\t// Ensure $values is a list.\n+\t@if type-of($values) != 'list' {\n+\t\t$values: join((), $values);\n+\t}",
        "path": "frameworks/compass/stylesheets/compass/typography/_units.scss",
        "position": null,
        "original_position": 90,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wow, glad to be wrong about this! I'll refactor this and update.\n",
        "created_at": "2012-08-08T01:19:51Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1328468",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1328468"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1328468"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1358031",
        "pull_request_review_id": null,
        "id": 1358031,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTgwMzE=",
        "diff_hunk": "@@ -24,38 +29,75 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n+}\n+\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": 117,
        "original_position": 120,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I just discovered a critical bug! For rem units, if $base-font-size is not 16px, the line-height will not be correctly computed in establish-baseline, because on the html element 1rem is always 16px (the initial value). Right now 1rem is treated as if it were $base-font-size. I need to solve this before this can be pulled in.\n",
        "created_at": "2012-08-12T05:12:13Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1358031",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1358031"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1358031"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1358829",
        "pull_request_review_id": null,
        "id": 1358829,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTg4Mjk=",
        "diff_hunk": "@@ -24,38 +29,75 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n+}\n+\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": 117,
        "original_position": 120,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This problem appears to be restricted to Webkit, and may be a bug. [The spec](http://www.w3.org/TR/css3-values/#rem-unit) says that 1rem is equal to the computed value of `font-size` on the root element, except for `font-size` on the root itself (in which case 1rem is equal to the initial value). However, in Webkit it appears that `line-height` on the root element also uses the initial value rather than the computed value. One possible work-around could be to set line-height on the body while setting font-size on html. Another could be to set line-height in ems in `establish-baseline` only, even when `font-unit` is `rem`. I need to investigate further, and also file a Webkit bug.\n",
        "created_at": "2012-08-12T18:34:56Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1358829",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1358829"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1358829"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1358863",
        "pull_request_review_id": null,
        "id": 1358863,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTg4NjM=",
        "diff_hunk": "@@ -24,38 +29,75 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n+}\n+\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": 117,
        "original_position": 120,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "ry5n",
            "id": 804014,
            "node_id": "MDQ6VXNlcjgwNDAxNA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/804014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ry5n",
            "html_url": "https://github.com/ry5n",
            "followers_url": "https://api.github.com/users/ry5n/followers",
            "following_url": "https://api.github.com/users/ry5n/following{/other_user}",
            "gists_url": "https://api.github.com/users/ry5n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ry5n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ry5n/subscriptions",
            "organizations_url": "https://api.github.com/users/ry5n/orgs",
            "repos_url": "https://api.github.com/users/ry5n/repos",
            "events_url": "https://api.github.com/users/ry5n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ry5n/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Just to clarify, this bug has to do with _computed_ values in Webkit. The values output by Sass were always correct (and seem to be to-spec), which is why tests didn't pick them up. What happens is that if `html { font-size: 112.5%; line-height: 1.4rem }` the computed value of `line-height` in Webkit is 1.4 \\* **16px** = 22px when it should be 25px.\n",
        "created_at": "2012-08-12T19:01:33Z",
        "updated_at": "2012-10-10T17:59:49Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1358863",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1358863"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1358863"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1369771",
        "pull_request_review_id": null,
        "id": 1369771,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjk3NzE=",
        "diff_hunk": "@@ -24,38 +29,75 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n+}\n+\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": 117,
        "original_position": 120,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "JohnAlbin",
            "id": 33429,
            "node_id": "MDQ6VXNlcjMzNDI5",
            "avatar_url": "https://avatars1.githubusercontent.com/u/33429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohnAlbin",
            "html_url": "https://github.com/JohnAlbin",
            "followers_url": "https://api.github.com/users/JohnAlbin/followers",
            "following_url": "https://api.github.com/users/JohnAlbin/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohnAlbin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohnAlbin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohnAlbin/subscriptions",
            "organizations_url": "https://api.github.com/users/JohnAlbin/orgs",
            "repos_url": "https://api.github.com/users/JohnAlbin/repos",
            "events_url": "https://api.github.com/users/JohnAlbin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohnAlbin/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "> One possible work-around could be to set line-height on the body while setting font-size on html.\n\nThat's fugly.\n\n> Another could be to set line-height in ems in establish-baseline only, even when font-unit is rem.\n\nMuch better idea! :-D\n",
        "created_at": "2012-08-14T06:51:03Z",
        "updated_at": "2012-10-10T17:59:50Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1369771",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1369771"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1369771"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1369788",
        "pull_request_review_id": null,
        "id": 1369788,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjk3ODg=",
        "diff_hunk": "@@ -24,38 +29,75 @@ $round-to-nearest-half-line: false !default;\n // of vertical padding above and below the text.\n $min-line-padding: 2px !default;\n \n-// $base-font-size but in your output unit of choice.\n-// Defaults to 1em when `$relative-font-sizing` is true.\n-$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;\n-\n-// The basic unit of font rhythm.\n-$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;\n-\n // The leader is the amount of whitespace in a line.\n // It might be useful in your calculations.\n-$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;\n+$base-leader: convert-length($base-line-height - $base-font-size, $rhythm-unit, $base-font-size);\n \n // The half-leader is the amount of whitespace above and below a line.\n // It might be useful in your calculations.\n $base-half-leader: $base-leader / 2;\n \n-// True if a number has a relative unit.\n-@function relative-unit($number) {\n-  @return unit($number) == \"%\" or unit($number) == \"em\" or unit($number) == \"rem\"\n+// @private Whether the rhythm output is in absolute units (px) or not (em, rem)\n+$relative-font-sizing: if($rhythm-unit == px, false, true);\n+\n+\n+// Validate units\n+@if unit($base-font-size)   != 'px' { @warn \"$base-font-size must resolve to a pixel unit.\" }\n+@if unit($base-line-height) != 'px' { @warn \"$base-line-height must resolve to a pixel unit.\" }\n+@if $rhythm-unit != 'px' and $rhythm-unit != 'em' and $rhythm-unit != 'rem' {\n+  @warn \"$rhythm-unit must be `px`, `em` or `rem`.\";\n }\n \n-// True if a number has an absolute unit.\n-@function absolute-unit($number) {\n-  @return not (relative-unit($number) or unitless($number));\n+\n+// Calculate rhythm units.\n+@function rhythm($lines: 1, $font-size: $base-font-size, $offset: 0) {\n+  $rhythm: convert-length($lines * $base-line-height - $offset, $rhythm-unit, $font-size);\n+  @if unit($rhythm) == px {\n+    $rhythm: floor($rhythm);\n+  }\n+  @return $rhythm;\n }\n \n-@if $relative-font-sizing and not relative-unit($font-unit) {\n-  @warn \"$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.\";\n+// Calculate the minimum multiple of rhythm units needed to contain the font-size.\n+@function lines-for-font-size($font-size) {\n+  $lines: if($round-to-nearest-half-line,\n+             ceil(2 * $font-size / $base-line-height) / 2,\n+             ceil($font-size / $base-line-height));\n+  // If lines are cramped include some extra lead.\n+  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n+    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);\n+  }\n+  @return $lines;\n+}\n+\n+\n+// @private Outputs rhythm values. For rem units, outputs pixel fallbacks\n+// by default.\n+@mixin output-rhythm($property, $values) {\n+  @if $rhythm-unit == rem and $rem-with-px-fallback {\n+    @include rem($property, $values);\n+  }\n+  // Ensure all pixel values are rounded to the nearest pixel.\n+  @else {\n+    $output: ();\n+    @if type-of($values) != list {\n+      $values: join((), $values);\n+    }\n+    @each $value in $values {\n+      @if unit($value) == px {\n+        $output: join($output, round($value));\n+      }\n+      @else {\n+        $output: join($output, $value);\n+      }\n+    }\n+    #{$property}: $output;\n+  }\n }\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {",
        "path": "frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": 117,
        "original_position": 120,
        "commit_id": "91bf6d34beb23ea6f673e9e8ae89f380a5301c14",
        "original_commit_id": "c0b9864935144d58068c881463767c253ab7b325",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree. There is no need for \"root ems\" when you are at the root. Any ems on the html tag are root ems!\n",
        "created_at": "2012-08-14T06:54:58Z",
        "updated_at": "2012-10-10T17:59:50Z",
        "html_url": "https://github.com/Compass/compass/pull/896#discussion_r1369788",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/896",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1369788"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/896#discussion_r1369788"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/896"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1994757",
        "pull_request_review_id": null,
        "id": 1994757,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTQ3NTc=",
        "diff_hunk": "@@ -1,13 +1,13 @@\n source :gemcutter\n \n-gem 'nanoc', \"3.2.4\"\n-gem 'nanoc3', \"3.2.4\"\n-gem 'asdf'",
        "path": "doc-src/Gemfile",
        "position": 5,
        "original_position": 5,
        "commit_id": "3625e10d0f41563a7b083c1796347d1b4f66c678",
        "original_commit_id": "44fdfd5fb7ac1e0f340b0dddde6c15b5f8182a54",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Curious to why we are going to a loose dependency?\n",
        "created_at": "2012-10-31T16:40:35Z",
        "updated_at": "2012-11-01T02:21:10Z",
        "html_url": "https://github.com/Compass/compass/pull/1070#discussion_r1994757",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1070",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1994757"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1070#discussion_r1994757"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1070"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1997148",
        "pull_request_review_id": null,
        "id": 1997148,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTcxNDg=",
        "diff_hunk": "@@ -1,13 +1,13 @@\n source :gemcutter\n \n-gem 'nanoc', \"3.2.4\"\n-gem 'nanoc3', \"3.2.4\"\n-gem 'asdf'",
        "path": "doc-src/Gemfile",
        "position": 5,
        "original_position": 5,
        "commit_id": "3625e10d0f41563a7b083c1796347d1b4f66c678",
        "original_commit_id": "44fdfd5fb7ac1e0f340b0dddde6c15b5f8182a54",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It wasn't my intention, it's just a habit :P You can lock the version, of course.\n",
        "created_at": "2012-10-31T19:41:36Z",
        "updated_at": "2012-11-01T02:21:10Z",
        "html_url": "https://github.com/Compass/compass/pull/1070#discussion_r1997148",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1070",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1997148"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1070#discussion_r1997148"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1070"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/1997191",
        "pull_request_review_id": null,
        "id": 1997191,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTcxOTE=",
        "diff_hunk": "@@ -1,13 +1,13 @@\n source :gemcutter\n \n-gem 'nanoc', \"3.2.4\"\n-gem 'nanoc3', \"3.2.4\"\n-gem 'asdf'",
        "path": "doc-src/Gemfile",
        "position": 5,
        "original_position": 5,
        "commit_id": "3625e10d0f41563a7b083c1796347d1b4f66c678",
        "original_commit_id": "44fdfd5fb7ac1e0f340b0dddde6c15b5f8182a54",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "While we're on this patch, I'd like to note that `asdf` was a typo, the name of the gem that does the viewing with nanoc is `adsf`.\n",
        "created_at": "2012-10-31T19:44:18Z",
        "updated_at": "2012-11-01T02:21:10Z",
        "html_url": "https://github.com/Compass/compass/pull/1070#discussion_r1997191",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1070",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/1997191"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1070#discussion_r1997191"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1070"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2000933",
        "pull_request_review_id": null,
        "id": 2000933,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA5MzM=",
        "diff_hunk": "@@ -1,13 +1,13 @@\n source :gemcutter\n \n-gem 'nanoc', \"3.2.4\"\n-gem 'nanoc3', \"3.2.4\"\n-gem 'asdf'",
        "path": "doc-src/Gemfile",
        "position": 5,
        "original_position": 5,
        "commit_id": "3625e10d0f41563a7b083c1796347d1b4f66c678",
        "original_commit_id": "44fdfd5fb7ac1e0f340b0dddde6c15b5f8182a54",
        "user": {
            "login": "silvenon",
            "id": 471278,
            "node_id": "MDQ6VXNlcjQ3MTI3OA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/471278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/silvenon",
            "html_url": "https://github.com/silvenon",
            "followers_url": "https://api.github.com/users/silvenon/followers",
            "following_url": "https://api.github.com/users/silvenon/following{/other_user}",
            "gists_url": "https://api.github.com/users/silvenon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/silvenon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/silvenon/subscriptions",
            "organizations_url": "https://api.github.com/users/silvenon/orgs",
            "repos_url": "https://api.github.com/users/silvenon/repos",
            "events_url": "https://api.github.com/users/silvenon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/silvenon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I locked nanoc version, I forgot I can do that myself :P\n",
        "created_at": "2012-11-01T02:29:15Z",
        "updated_at": "2012-11-01T02:29:15Z",
        "html_url": "https://github.com/Compass/compass/pull/1070#discussion_r2000933",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1070",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2000933"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1070#discussion_r2000933"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1070"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2688401",
        "pull_request_review_id": null,
        "id": 2688401,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODg0MDE=",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+# Require any additional compass plugins here.\n+project_type = :stand_alone\n+css_dir = \"tmp\"\n+sass_dir = \"sass\"\n+fonts_dir = \"fonts\"\n+output_style = :compact\n+# To enable relative image paths using the images_url() function:\n+# http_images_path = :relative\n+http_fonts_path = \"/fonts\"\n+line_comments = false\n+\n+asset_cache_buster do |path, file|\n+  pathname = Pathname.new(path)\n+\n+  case pathname.basename(pathname.extname).to_s\n+  when \"grid\"\n+    new_path = \"%s/%s-BUSTED%s\" % [pathname.dirname, pathname.basename(pathname.extname), pathname.extname]",
        "path": "test/fixtures/stylesheets/busted_font_urls/config.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "e035c516cc506b43356985fcc7b3fe164d96c172",
        "original_commit_id": "f923f1eb3b01cb7bcd8f5e679ae47ef9cb8049b3",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I really hate this type of string formatting and in the past we have rejected PR's because of it please change to \"#{}\" method\n",
        "created_at": "2013-01-17T22:06:19Z",
        "updated_at": "2013-01-17T22:14:03Z",
        "html_url": "https://github.com/Compass/compass/pull/1137#discussion_r2688401",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1137",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2688401"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1137#discussion_r2688401"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2688447",
        "pull_request_review_id": null,
        "id": 2688447,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2ODg0NDc=",
        "diff_hunk": "@@ -0,0 +1,29 @@\n+# Require any additional compass plugins here.\n+project_type = :stand_alone\n+css_dir = \"tmp\"\n+sass_dir = \"sass\"\n+fonts_dir = \"fonts\"\n+output_style = :compact\n+# To enable relative image paths using the images_url() function:\n+# http_images_path = :relative\n+http_fonts_path = \"/fonts\"\n+line_comments = false\n+\n+asset_cache_buster do |path, file|\n+  pathname = Pathname.new(path)\n+\n+  case pathname.basename(pathname.extname).to_s\n+  when \"grid\"\n+    new_path = \"%s/%s-BUSTED%s\" % [pathname.dirname, pathname.basename(pathname.extname), pathname.extname]",
        "path": "test/fixtures/stylesheets/busted_font_urls/config.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "e035c516cc506b43356985fcc7b3fe164d96c172",
        "original_commit_id": "f923f1eb3b01cb7bcd8f5e679ae47ef9cb8049b3",
        "user": {
            "login": "marshallbrekka",
            "id": 436140,
            "node_id": "MDQ6VXNlcjQzNjE0MA==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/436140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marshallbrekka",
            "html_url": "https://github.com/marshallbrekka",
            "followers_url": "https://api.github.com/users/marshallbrekka/followers",
            "following_url": "https://api.github.com/users/marshallbrekka/following{/other_user}",
            "gists_url": "https://api.github.com/users/marshallbrekka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marshallbrekka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marshallbrekka/subscriptions",
            "organizations_url": "https://api.github.com/users/marshallbrekka/orgs",
            "repos_url": "https://api.github.com/users/marshallbrekka/repos",
            "events_url": "https://api.github.com/users/marshallbrekka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marshallbrekka/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "will do. Just FYI this is taken directly from the busted_image_urls/config.rb file\n",
        "created_at": "2013-01-17T22:08:42Z",
        "updated_at": "2013-01-17T22:14:03Z",
        "html_url": "https://github.com/Compass/compass/pull/1137#discussion_r2688447",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1137",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2688447"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1137#discussion_r2688447"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1137"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/3117752",
        "pull_request_review_id": null,
        "id": 3117752,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTc3NTI=",
        "diff_hunk": "@@ -103,8 +103,10 @@ def image_url(path, only_path = Sass::Script::Bool.new(false), cache_buster = Sa\n       end\n \n       # Compute the real path to the image on the file stystem if the images_dir is set.\n-      real_path = if Compass.configuration.images_dir\n-        File.join(Compass.configuration.project_path, Compass.configuration.images_dir, path)\n+      real_path = if Compass.configuration.images_path\n+        File.join(Compass.configuration.images_path, path)\n+      else\n+        File.join(Compass.configuration.project_path, path)\n       end",
        "path": "lib/compass/sass_extensions/functions/urls.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "696cb1cf8e94d5fb76a85ee92ceb1e38b47ab8fa",
        "original_commit_id": "696cb1cf8e94d5fb76a85ee92ceb1e38b47ab8fa",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm not sure this change is going ot give you what you are expecting. Why would you store your images in the root of the project path?\n",
        "created_at": "2013-02-22T15:58:19Z",
        "updated_at": "2013-02-22T15:58:19Z",
        "html_url": "https://github.com/Compass/compass/pull/1100#discussion_r3117752",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1100",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/3117752"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1100#discussion_r3117752"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1100"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/3118444",
        "pull_request_review_id": null,
        "id": 3118444,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMTg0NDQ=",
        "diff_hunk": "@@ -103,8 +103,10 @@ def image_url(path, only_path = Sass::Script::Bool.new(false), cache_buster = Sa\n       end\n \n       # Compute the real path to the image on the file stystem if the images_dir is set.\n-      real_path = if Compass.configuration.images_dir\n-        File.join(Compass.configuration.project_path, Compass.configuration.images_dir, path)\n+      real_path = if Compass.configuration.images_path\n+        File.join(Compass.configuration.images_path, path)\n+      else\n+        File.join(Compass.configuration.project_path, path)\n       end",
        "path": "lib/compass/sass_extensions/functions/urls.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "696cb1cf8e94d5fb76a85ee92ceb1e38b47ab8fa",
        "original_commit_id": "696cb1cf8e94d5fb76a85ee92ceb1e38b47ab8fa",
        "user": {
            "login": "acasademont",
            "id": 825021,
            "node_id": "MDQ6VXNlcjgyNTAyMQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/825021?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acasademont",
            "html_url": "https://github.com/acasademont",
            "followers_url": "https://api.github.com/users/acasademont/followers",
            "following_url": "https://api.github.com/users/acasademont/following{/other_user}",
            "gists_url": "https://api.github.com/users/acasademont/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acasademont/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acasademont/subscriptions",
            "organizations_url": "https://api.github.com/users/acasademont/orgs",
            "repos_url": "https://api.github.com/users/acasademont/repos",
            "events_url": "https://api.github.com/users/acasademont/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acasademont/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The thing is that I prefer to use absolute paths and here the absolute \"image_path\" setting was not being honored. In fact, this is just the same snippet of code that you did in, which is perfect.\n\nhttps://github.com/chriseppstein/compass/blob/master/lib/compass/sass_extensions/functions/image_size.rb\n",
        "created_at": "2013-02-22T16:37:21Z",
        "updated_at": "2013-02-22T16:37:21Z",
        "html_url": "https://github.com/Compass/compass/pull/1100#discussion_r3118444",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1100",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/3118444"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1100#discussion_r3118444"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1100"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/3122535",
        "pull_request_review_id": null,
        "id": 3122535,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMjI1MzU=",
        "diff_hunk": "@@ -103,8 +103,10 @@ def image_url(path, only_path = Sass::Script::Bool.new(false), cache_buster = Sa\n       end\n \n       # Compute the real path to the image on the file stystem if the images_dir is set.\n-      real_path = if Compass.configuration.images_dir\n-        File.join(Compass.configuration.project_path, Compass.configuration.images_dir, path)\n+      real_path = if Compass.configuration.images_path\n+        File.join(Compass.configuration.images_path, path)\n+      else\n+        File.join(Compass.configuration.project_path, path)\n       end",
        "path": "lib/compass/sass_extensions/functions/urls.rb",
        "position": 10,
        "original_position": 10,
        "commit_id": "696cb1cf8e94d5fb76a85ee92ceb1e38b47ab8fa",
        "original_commit_id": "696cb1cf8e94d5fb76a85ee92ceb1e38b47ab8fa",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok\n",
        "created_at": "2013-02-22T20:58:44Z",
        "updated_at": "2013-02-22T20:58:44Z",
        "html_url": "https://github.com/Compass/compass/pull/1100#discussion_r3122535",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1100",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/3122535"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1100#discussion_r3122535"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1100"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2804355",
        "pull_request_review_id": null,
        "id": 2804355,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDQzNTU=",
        "diff_hunk": "@@ -10,6 +10,10 @@ $legacy-support-for-ie7: $legacy-support-for-ie !default;\n // Setting this to false will result in smaller output, but no support for legacy ie8 hacks\n $legacy-support-for-ie8: $legacy-support-for-ie !default;\n \n+// Setting this to false will result in smaller output, but no support for legacy Mozilla hacks.\n+$legacy-support-for-mozilla: true !default;",
        "path": "frameworks/compass/stylesheets/compass/_support.scss",
        "position": null,
        "original_position": 5,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This already exists in the master branch. Can you re-submit on that branch, for release in 0.13?\n",
        "created_at": "2013-01-29T04:33:09Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r2804355",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2804355"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r2804355"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2804383",
        "pull_request_review_id": null,
        "id": 2804383,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDQzODM=",
        "diff_hunk": "@@ -4,14 +4,53 @@\n \n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n+// And advanced clearfix mixin that will write the correct clearfix depending on what level of browser support you need.\n+// Adapted from: [The very latest new new way to do \"clearfix\"](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php) and [Better float containment in IE using CSS expressions](http://nicolasgallagher.com/better-float-containment-in-ie/)\n @mixin clearfix {\n-  overflow: hidden;",
        "path": "frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": null,
        "original_position": 12,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It is actually quite useful to have the choice between a clearfix that uses pseudo-elements and one that does not. Pseudo-elements are used regularly for other purposes these days. \n\nFor the same reason, I'm hesitant to include the `:before` hacks, when only `:after` is actually needed for clearing floats. I know some people like to un-collapse their top margins, but that seems like a separate issue to me. Margins are supposed to collapse, and I don't want that changing just because I need my floats cleared.\n\nMaybe we need some optional defaults and arguments here?\n",
        "created_at": "2013-01-29T04:40:17Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r2804383",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2804383"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r2804383"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2807400",
        "pull_request_review_id": null,
        "id": 2807400,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDc0MDA=",
        "diff_hunk": "@@ -10,6 +10,10 @@ $legacy-support-for-ie7: $legacy-support-for-ie !default;\n // Setting this to false will result in smaller output, but no support for legacy ie8 hacks\n $legacy-support-for-ie8: $legacy-support-for-ie !default;\n \n+// Setting this to false will result in smaller output, but no support for legacy Mozilla hacks.\n+$legacy-support-for-mozilla: true !default;",
        "path": "frameworks/compass/stylesheets/compass/_support.scss",
        "position": null,
        "original_position": 5,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "Snugug",
            "id": 377188,
            "node_id": "MDQ6VXNlcjM3NzE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/377188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snugug",
            "html_url": "https://github.com/Snugug",
            "followers_url": "https://api.github.com/users/Snugug/followers",
            "following_url": "https://api.github.com/users/Snugug/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snugug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snugug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snugug/subscriptions",
            "organizations_url": "https://api.github.com/users/Snugug/orgs",
            "repos_url": "https://api.github.com/users/Snugug/repos",
            "events_url": "https://api.github.com/users/Snugug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snugug/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Thought I had. I'll reroll\n",
        "created_at": "2013-01-29T11:49:41Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r2807400",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2807400"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r2807400"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2807501",
        "pull_request_review_id": null,
        "id": 2807501,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDc1MDE=",
        "diff_hunk": "@@ -4,14 +4,53 @@\n \n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n+// And advanced clearfix mixin that will write the correct clearfix depending on what level of browser support you need.\n+// Adapted from: [The very latest new new way to do \"clearfix\"](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php) and [Better float containment in IE using CSS expressions](http://nicolasgallagher.com/better-float-containment-in-ie/)\n @mixin clearfix {\n-  overflow: hidden;",
        "path": "frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": null,
        "original_position": 12,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "Snugug",
            "id": 377188,
            "node_id": "MDQ6VXNlcjM3NzE4OA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/377188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Snugug",
            "html_url": "https://github.com/Snugug",
            "followers_url": "https://api.github.com/users/Snugug/followers",
            "following_url": "https://api.github.com/users/Snugug/following{/other_user}",
            "gists_url": "https://api.github.com/users/Snugug/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Snugug/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Snugug/subscriptions",
            "organizations_url": "https://api.github.com/users/Snugug/orgs",
            "repos_url": "https://api.github.com/users/Snugug/repos",
            "events_url": "https://api.github.com/users/Snugug/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Snugug/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I can rewrite the micro clearfix to a different method but I can't seem to find a clearfix that supports legacy Mozilla other than this one that doesn't also include `overflow: hidden` which is an even worse offender IMO that `:before` and `:after`.\n",
        "created_at": "2013-01-29T12:01:00Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r2807501",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2807501"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r2807501"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2810827",
        "pull_request_review_id": null,
        "id": 2810827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTA4Mjc=",
        "diff_hunk": "@@ -4,14 +4,53 @@\n \n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n+// And advanced clearfix mixin that will write the correct clearfix depending on what level of browser support you need.\n+// Adapted from: [The very latest new new way to do \"clearfix\"](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php) and [Better float containment in IE using CSS expressions](http://nicolasgallagher.com/better-float-containment-in-ie/)\n @mixin clearfix {\n-  overflow: hidden;",
        "path": "frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": null,
        "original_position": 12,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "cimmanon",
            "id": 2333706,
            "node_id": "MDQ6VXNlcjIzMzM3MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2333706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cimmanon",
            "html_url": "https://github.com/cimmanon",
            "followers_url": "https://api.github.com/users/cimmanon/followers",
            "following_url": "https://api.github.com/users/cimmanon/following{/other_user}",
            "gists_url": "https://api.github.com/users/cimmanon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cimmanon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cimmanon/subscriptions",
            "organizations_url": "https://api.github.com/users/cimmanon/orgs",
            "repos_url": "https://api.github.com/users/cimmanon/repos",
            "events_url": "https://api.github.com/users/cimmanon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cimmanon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@ericam I don't find the current clearfix mixin to be useful at all.  The time it takes me to type out `overflow: hidden` is the same as the time it takes to type out `@include clearfix`  I _do_ use both methods of clearing floats, but when I invoke a clearfix mixin, I want it to be one that uses pseudo elements.  Otherwise, I can just type it out like a big girl..  A mixin that only emits a single line that isn't configurable in any way feels wrong to me.\n\nMessing with overflow is not an appropriate choice for clearing floats when you have content that you _want_ to overflow (eg. drop menus).  A pseudo element clearfix is the better choice for an all-round solution.\n",
        "created_at": "2013-01-29T16:12:06Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r2810827",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2810827"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r2810827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/2811318",
        "pull_request_review_id": null,
        "id": 2811318,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTEzMTg=",
        "diff_hunk": "@@ -4,14 +4,53 @@\n \n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n+// And advanced clearfix mixin that will write the correct clearfix depending on what level of browser support you need.\n+// Adapted from: [The very latest new new way to do \"clearfix\"](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php) and [Better float containment in IE using CSS expressions](http://nicolasgallagher.com/better-float-containment-in-ie/)\n @mixin clearfix {\n-  overflow: hidden;",
        "path": "frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": null,
        "original_position": 12,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I agree. All the options suck, and overflow is offensive. :) But sometimes we need it, and that's why I want to supply options rather than one-size-fits-all solutions. I don't think our options necessarily need to live in separate mixins like they have. I love how smart this combined mixin is. But we could add a toggle to it as well, for people that need the overflow hack in some cases.\n\nIt's not about saving keystrokes. The advantage of `clearfix` over `overflow: hidden;` in your code is that you have added _meaning_. When the w3c invents a proper way to clear floats (or we get a better hack), you can simply change the clearfix mixin one place, and all your overflow problems go away.\n",
        "created_at": "2013-01-29T16:40:19Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r2811318",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/2811318"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r2811318"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/3644254",
        "pull_request_review_id": null,
        "id": 3644254,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyNTQ=",
        "diff_hunk": "@@ -4,14 +4,53 @@\n \n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n+// And advanced clearfix mixin that will write the correct clearfix depending on what level of browser support you need.\n+// Adapted from: [The very latest new new way to do \"clearfix\"](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php) and [Better float containment in IE using CSS expressions](http://nicolasgallagher.com/better-float-containment-in-ie/)\n @mixin clearfix {\n-  overflow: hidden;",
        "path": "frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": null,
        "original_position": 12,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "scottkellum",
            "id": 377189,
            "node_id": "MDQ6VXNlcjM3NzE4OQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/377189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottkellum",
            "html_url": "https://github.com/scottkellum",
            "followers_url": "https://api.github.com/users/scottkellum/followers",
            "following_url": "https://api.github.com/users/scottkellum/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottkellum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottkellum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottkellum/subscriptions",
            "organizations_url": "https://api.github.com/users/scottkellum/orgs",
            "repos_url": "https://api.github.com/users/scottkellum/repos",
            "events_url": "https://api.github.com/users/scottkellum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottkellum/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Clearfix and `overflow: hidden` are two completely different things though. From what I have seen `overflow: hidden` being included in the clearfix by default has driven lots of people away from using the Compass clearfix.\n",
        "created_at": "2013-04-03T20:08:20Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r3644254",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/3644254"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r3644254"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/3644393",
        "pull_request_review_id": null,
        "id": 3644393,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzOTM=",
        "diff_hunk": "@@ -4,14 +4,53 @@\n \n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n+// And advanced clearfix mixin that will write the correct clearfix depending on what level of browser support you need.\n+// Adapted from: [The very latest new new way to do \"clearfix\"](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php) and [Better float containment in IE using CSS expressions](http://nicolasgallagher.com/better-float-containment-in-ie/)\n @mixin clearfix {\n-  overflow: hidden;",
        "path": "frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": null,
        "original_position": 12,
        "commit_id": "f07e7dec944071c1f827c442a178a79e67d82f34",
        "original_commit_id": "b628f8b3d00a7986d991bb07a9268839dde93abb",
        "user": {
            "login": "cimmanon",
            "id": 2333706,
            "node_id": "MDQ6VXNlcjIzMzM3MDY=",
            "avatar_url": "https://avatars1.githubusercontent.com/u/2333706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cimmanon",
            "html_url": "https://github.com/cimmanon",
            "followers_url": "https://api.github.com/users/cimmanon/followers",
            "following_url": "https://api.github.com/users/cimmanon/following{/other_user}",
            "gists_url": "https://api.github.com/users/cimmanon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cimmanon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cimmanon/subscriptions",
            "organizations_url": "https://api.github.com/users/cimmanon/orgs",
            "repos_url": "https://api.github.com/users/cimmanon/repos",
            "events_url": "https://api.github.com/users/cimmanon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cimmanon/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would suggest a compromise.  This is what my own clearfix mixin looks like:\n\n``` scss\n$default-clearfix: modern !default;\n\n@mixin clearfix($type: $default-clearfix) {\n    @if $type == modern {\n        @include clearfix-modern;\n    } @else if $type == traditional {\n        @include clearfix-traditional;\n    } @else {\n        @include clearfix-overflow;\n    }\n}\n\n// http://www.positioniseverything.net/easyclearing.html\n@mixin clearfix-traditional {\n    zoom: 1; // fix for IE\n\n    &:after {\n        content: ' ';\n        display: block;\n        height: 0;\n        clear: both;\n        visibility: hidden;\n    }\n}\n\n// http://nicolasgallagher.com/micro-clearfix-hack/\n@mixin clearfix-modern {\n    zoom: 1; // fix for IE\n\n    &:before, &:after { content: ' '; display: table; }\n    &:after { clear: both; }\n}\n\n@mixin clearfix-overflow {\n    overflow: hidden;\n}\n```\n\nThose of us who prefer the micro clearfix as their goto clearfix technique can get what they want and instances where overflow is used for clearing purposes remains clearly defined.\n",
        "created_at": "2013-04-03T20:18:21Z",
        "updated_at": "2013-04-03T20:27:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1151#discussion_r3644393",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1151",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/3644393"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1151#discussion_r3644393"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1151"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465215",
        "pull_request_review_id": null,
        "id": 4465215,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyMTU=",
        "diff_hunk": "@@ -23,15 +23,15 @@ def add(image)\n         alias :<< :add\n         \n         def height\n-          images.map(&:height).max\n+          return (images.map(&:height).max + images.map(&:spacing).max)",
        "path": "lib/compass/sass_extensions/sprites/image_row.rb",
        "position": 21,
        "original_position": 21,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't think that's right. I think it's `images.map {|i| i.height + i.spacing}.max`\n\nAlso, we don't need a `return` here. The ruby idiom is to only use `return` for early returns.\n",
        "created_at": "2013-05-30T19:49:51Z",
        "updated_at": "2013-05-30T19:49:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465215",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465215"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465215"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465257",
        "pull_request_review_id": null,
        "id": 4465257,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyNTc=",
        "diff_hunk": "@@ -23,15 +23,15 @@ def add(image)\n         alias :<< :add\n         \n         def height\n-          images.map(&:height).max\n+          return (images.map(&:height).max + images.map(&:spacing).max)\n         end\n         \n-        def width\n+        def width          \n           images.map(&:width).max\n         end\n \n         def total_width\n-          images.inject(0) {|sum, img| sum + img.width }\n+          images.inject(0) {|sum, img| sum + img.width + img.spacing}",
        "path": "lib/compass/sass_extensions/sprites/image_row.rb",
        "position": 31,
        "original_position": 31,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This doesn't reused the space from the previous image. The space between image N and image N+1 should be the max of the spacing around N and N+1.\n",
        "created_at": "2013-05-30T19:52:01Z",
        "updated_at": "2013-05-30T19:52:01Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465257",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465257"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465257"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465297",
        "pull_request_review_id": null,
        "id": 4465297,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyOTc=",
        "diff_hunk": "@@ -23,15 +23,15 @@ def add(image)\n         alias :<< :add\n         \n         def height\n-          images.map(&:height).max\n+          return (images.map(&:height).max + images.map(&:spacing).max)",
        "path": "lib/compass/sass_extensions/sprites/image_row.rb",
        "position": 21,
        "original_position": 21,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually do we need spacing around the edges?\n",
        "created_at": "2013-05-30T19:53:56Z",
        "updated_at": "2013-05-30T19:53:56Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465297",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465297"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465297"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465376",
        "pull_request_review_id": null,
        "id": 4465376,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzNzY=",
        "diff_hunk": "@@ -23,15 +23,15 @@ def add(image)\n         alias :<< :add\n         \n         def height\n-          images.map(&:height).max\n+          return (images.map(&:height).max + images.map(&:spacing).max)\n         end\n         \n-        def width\n+        def width          \n           images.map(&:width).max\n         end\n \n         def total_width\n-          images.inject(0) {|sum, img| sum + img.width }\n+          images.inject(0) {|sum, img| sum + img.width + img.spacing}",
        "path": "lib/compass/sass_extensions/sprites/image_row.rb",
        "position": 31,
        "original_position": 31,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "But even without space reuse this is wrong because there's space on both sides. The naive algorithm would be `images.inject(0) {|sum, img| sum + img.width + 2 * img.spacing}`. Also, do we need spacing on the edges? I don't think so.\n",
        "created_at": "2013-05-30T19:56:41Z",
        "updated_at": "2013-05-30T19:56:41Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465376",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465376"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465376"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465420",
        "pull_request_review_id": null,
        "id": 4465420,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0MjA=",
        "diff_hunk": "@@ -39,7 +39,7 @@ def efficiency\n         end\n \n         def will_fit?(image)\n-          (total_width + image.width) <= max_width\n+          (total_width + image.width + image.spacing) <= max_width",
        "path": "lib/compass/sass_extensions/sprites/image_row.rb",
        "position": 40,
        "original_position": 40,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If we don't need spacing on the edges this is right unless we get the spacing between adjacent images to be shared. In which case, this would only be the delta between the space of the previous image and this image if this image has more spacing.\n",
        "created_at": "2013-05-30T19:58:43Z",
        "updated_at": "2013-05-30T19:58:43Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465420",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465420"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465420"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465459",
        "pull_request_review_id": null,
        "id": 4465459,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0NTk=",
        "diff_hunk": "@@ -26,11 +26,11 @@ def fit!(style = :scan)\n         end\n \n         def width\n-          @width ||= @images.collect(&:width).max\n+          @width ||= @images.collect(&:width).max + @images.collect(&:spacing).max",
        "path": "lib/compass/sass_extensions/sprites/row_fitter.rb",
        "position": 23,
        "original_position": 23,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Either this is 2x the spacing or it needs to share the spacing properly. Also: the question about edge spacing again.\n",
        "created_at": "2013-05-30T20:00:20Z",
        "updated_at": "2013-05-30T20:00:20Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465459",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465459"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465459"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465490",
        "pull_request_review_id": null,
        "id": 4465490,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU0OTA=",
        "diff_hunk": "@@ -26,11 +26,11 @@ def fit!(style = :scan)\n         end\n \n         def width\n-          @width ||= @images.collect(&:width).max\n+          @width ||= @images.collect(&:width).max + @images.collect(&:spacing).max\n         end\n         \n         def height\n-          @height ||= @rows.inject(0) {|sum, row| sum += row.height}\n+          @height ||= @rows.inject(0) {|sum, row| sum += row.height} + @images[0].spacing",
        "path": "lib/compass/sass_extensions/sprites/row_fitter.rb",
        "position": 28,
        "original_position": 28,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "2x spacing again. Or maybe we don't need edge spacing at all.\n",
        "created_at": "2013-05-30T20:01:31Z",
        "updated_at": "2013-05-30T20:01:31Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465490",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465490"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465490"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4465513",
        "pull_request_review_id": null,
        "id": 4465513,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU1MTM=",
        "diff_hunk": "@@ -26,11 +26,11 @@ def fit!(style = :scan)\n         end\n \n         def width\n-          @width ||= @images.collect(&:width).max\n+          @width ||= @images.collect(&:width).max + @images.collect(&:spacing).max\n         end\n         \n         def height\n-          @height ||= @rows.inject(0) {|sum, row| sum += row.height}\n+          @height ||= @rows.inject(0) {|sum, row| sum += row.height} + @images[0].spacing",
        "path": "lib/compass/sass_extensions/sprites/row_fitter.rb",
        "position": 28,
        "original_position": 28,
        "commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "original_commit_id": "f493ad82c1b71ad185cb9afe5cdeaf3567ded7ab",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I guess the row would need to know if it's the first or last row to be able to calculate this correctly should we not need edge spacing.\n",
        "created_at": "2013-05-30T20:02:22Z",
        "updated_at": "2013-05-30T20:02:22Z",
        "html_url": "https://github.com/Compass/compass/pull/1303#discussion_r4465513",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1303",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4465513"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1303#discussion_r4465513"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1303"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4488788",
        "pull_request_review_id": null,
        "id": 4488788,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3ODg=",
        "diff_hunk": "@@ -0,0 +1,88 @@\n+require 'thread'\n+require 'forwardable'\n+module Compass\n+  class CompilerCache\n+\n+    # This class is passed into a compiler instance to allow in memory caching of objects at run time.\n+\n+\n+    extend Forwardable\n+    attr_reader :hash, :semaphore\n+\n+    # use the delgator pattern to pass through methods to hash\n+    # I didn't extend hash because we have a need to beable to clear and re initalize the hash\n+    # and you can not reassign self within a class instance\n+\n+    def_delegator :@hash, :delete, :invalidate!\n+    def_delegator :@hash, :[], :read\n+    def_delegator :@hash, :[], :[]\n+    def_delegator :@hash, :has_key?\n+\n+    def initialize\n+      @semaphore = Mutex.new\n+      @hash = Hash.new\n+    end\n+\n+    # Returns and caches the value or the block passed to it.\n+    #\n+    # ==== Attributes\n+    #\n+    # * key - the key to store the return value in the cache\n+    # * value - the value to pass into the cache (Default: nil) if a block is passed the value passed in is ignored.\n+    #\n+    # ==== Examples\n+    #\n+    # Basic Usage with block\n+    #     foo = @cache.cache('foo') { 15 }\n+    #     foo will return 15\n+    # Basic Usage without block\n+    #     foo = @cache.cache('foo', 15)\n+    #     foo will return 15\n+    def cache(key, value=nil, &block)\n+      return read(key) if has_key?(key) #return the object if it already in the cache\n+\n+      value = block_given? ? block.call : value\n+      write(key, value)\n+\n+\n+      read(key)\n+    end\n+\n+\n+    # Alias of write\n+    def []=(key, value)\n+      write(key, value)\n+    end\n+\n+    # Writes a value to the cache within a thread safe semaphore\n+    # Please note writes are destrutive.\n+    #\n+    # ==== Attributes\n+    #\n+    # * key - the key to store the return value in the cache (Required)\n+    # * value - the value to pass into the cache. (Required)\n+    def write(key, value)\n+\n+      if key.nil?\n+        raise ArgumentError, 'No key for cache given'\n+      end\n+\n+      if value.nil?\n+        raise ArgumentError, 'No value given to cache'\n+      end\n+\n+      semaphore.synchronize do\n+        @hash[key] = value\n+      end\n+    end\n+\n+    def clear!\n+      semaphore.synchronize do\n+        @hash = nil",
        "path": "lib/compass/compiler/cache.rb",
        "position": null,
        "original_position": 81,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "fae57a0495f9871723a5bc4092e014aa43b8e165",
        "user": {
            "login": "thedarkone",
            "id": 15688,
            "node_id": "MDQ6VXNlcjE1Njg4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thedarkone",
            "html_url": "https://github.com/thedarkone",
            "followers_url": "https://api.github.com/users/thedarkone/followers",
            "following_url": "https://api.github.com/users/thedarkone/following{/other_user}",
            "gists_url": "https://api.github.com/users/thedarkone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thedarkone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thedarkone/subscriptions",
            "organizations_url": "https://api.github.com/users/thedarkone/orgs",
            "repos_url": "https://api.github.com/users/thedarkone/repos",
            "events_url": "https://api.github.com/users/thedarkone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thedarkone/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This is unnecessary.\n",
        "created_at": "2013-06-01T08:12:59Z",
        "updated_at": "2013-06-04T20:33:18Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r4488788",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4488788"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r4488788"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4488790",
        "pull_request_review_id": null,
        "id": 4488790,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3OTA=",
        "diff_hunk": "@@ -0,0 +1,88 @@\n+require 'thread'\n+require 'forwardable'\n+module Compass\n+  class CompilerCache\n+\n+    # This class is passed into a compiler instance to allow in memory caching of objects at run time.\n+\n+\n+    extend Forwardable\n+    attr_reader :hash, :semaphore\n+\n+    # use the delgator pattern to pass through methods to hash\n+    # I didn't extend hash because we have a need to beable to clear and re initalize the hash\n+    # and you can not reassign self within a class instance\n+\n+    def_delegator :@hash, :delete, :invalidate!\n+    def_delegator :@hash, :[], :read\n+    def_delegator :@hash, :[], :[]\n+    def_delegator :@hash, :has_key?\n+\n+    def initialize\n+      @semaphore = Mutex.new\n+      @hash = Hash.new\n+    end\n+\n+    # Returns and caches the value or the block passed to it.\n+    #\n+    # ==== Attributes\n+    #\n+    # * key - the key to store the return value in the cache\n+    # * value - the value to pass into the cache (Default: nil) if a block is passed the value passed in is ignored.\n+    #\n+    # ==== Examples\n+    #\n+    # Basic Usage with block\n+    #     foo = @cache.cache('foo') { 15 }\n+    #     foo will return 15\n+    # Basic Usage without block\n+    #     foo = @cache.cache('foo', 15)\n+    #     foo will return 15\n+    def cache(key, value=nil, &block)\n+      return read(key) if has_key?(key) #return the object if it already in the cache",
        "path": "lib/compass/compiler/cache.rb",
        "position": null,
        "original_position": 42,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "fae57a0495f9871723a5bc4092e014aa43b8e165",
        "user": {
            "login": "thedarkone",
            "id": 15688,
            "node_id": "MDQ6VXNlcjE1Njg4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thedarkone",
            "html_url": "https://github.com/thedarkone",
            "followers_url": "https://api.github.com/users/thedarkone/followers",
            "following_url": "https://api.github.com/users/thedarkone/following{/other_user}",
            "gists_url": "https://api.github.com/users/thedarkone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thedarkone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thedarkone/subscriptions",
            "organizations_url": "https://api.github.com/users/thedarkone/orgs",
            "repos_url": "https://api.github.com/users/thedarkone/repos",
            "events_url": "https://api.github.com/users/thedarkone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thedarkone/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This might return incorrect values (`nil`s for example) under concurrent load.\n",
        "created_at": "2013-06-01T08:13:37Z",
        "updated_at": "2013-06-04T20:33:18Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r4488790",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4488790"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r4488790"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4488791",
        "pull_request_review_id": null,
        "id": 4488791,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3OTE=",
        "diff_hunk": "@@ -0,0 +1,88 @@\n+require 'thread'\n+require 'forwardable'\n+module Compass\n+  class CompilerCache\n+\n+    # This class is passed into a compiler instance to allow in memory caching of objects at run time.\n+\n+\n+    extend Forwardable\n+    attr_reader :hash, :semaphore\n+\n+    # use the delgator pattern to pass through methods to hash\n+    # I didn't extend hash because we have a need to beable to clear and re initalize the hash\n+    # and you can not reassign self within a class instance\n+\n+    def_delegator :@hash, :delete, :invalidate!\n+    def_delegator :@hash, :[], :read",
        "path": "lib/compass/compiler/cache.rb",
        "position": null,
        "original_position": 17,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "fae57a0495f9871723a5bc4092e014aa43b8e165",
        "user": {
            "login": "thedarkone",
            "id": 15688,
            "node_id": "MDQ6VXNlcjE1Njg4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thedarkone",
            "html_url": "https://github.com/thedarkone",
            "followers_url": "https://api.github.com/users/thedarkone/followers",
            "following_url": "https://api.github.com/users/thedarkone/following{/other_user}",
            "gists_url": "https://api.github.com/users/thedarkone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thedarkone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thedarkone/subscriptions",
            "organizations_url": "https://api.github.com/users/thedarkone/orgs",
            "repos_url": "https://api.github.com/users/thedarkone/repos",
            "events_url": "https://api.github.com/users/thedarkone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thedarkone/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Technically read access also needs to be synchronized.\n",
        "created_at": "2013-06-01T08:14:41Z",
        "updated_at": "2013-06-04T20:33:18Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r4488791",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4488791"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r4488791"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4488792",
        "pull_request_review_id": null,
        "id": 4488792,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3OTI=",
        "diff_hunk": "@@ -0,0 +1,88 @@\n+require 'thread'\n+require 'forwardable'\n+module Compass\n+  class CompilerCache\n+\n+    # This class is passed into a compiler instance to allow in memory caching of objects at run time.\n+\n+\n+    extend Forwardable\n+    attr_reader :hash, :semaphore\n+\n+    # use the delgator pattern to pass through methods to hash\n+    # I didn't extend hash because we have a need to beable to clear and re initalize the hash\n+    # and you can not reassign self within a class instance\n+\n+    def_delegator :@hash, :delete, :invalidate!",
        "path": "lib/compass/compiler/cache.rb",
        "position": null,
        "original_position": 16,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "fae57a0495f9871723a5bc4092e014aa43b8e165",
        "user": {
            "login": "thedarkone",
            "id": 15688,
            "node_id": "MDQ6VXNlcjE1Njg4",
            "avatar_url": "https://avatars3.githubusercontent.com/u/15688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thedarkone",
            "html_url": "https://github.com/thedarkone",
            "followers_url": "https://api.github.com/users/thedarkone/followers",
            "following_url": "https://api.github.com/users/thedarkone/following{/other_user}",
            "gists_url": "https://api.github.com/users/thedarkone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thedarkone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thedarkone/subscriptions",
            "organizations_url": "https://api.github.com/users/thedarkone/orgs",
            "repos_url": "https://api.github.com/users/thedarkone/repos",
            "events_url": "https://api.github.com/users/thedarkone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thedarkone/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Needs to be synchronized.\n",
        "created_at": "2013-06-01T08:14:52Z",
        "updated_at": "2013-06-04T20:33:18Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r4488792",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4488792"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r4488792"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4525355",
        "pull_request_review_id": null,
        "id": 4525355,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNTU=",
        "diff_hunk": "@@ -38,14 +38,19 @@ def efficiency\n         end\n \n         private\n-        def new_row(image = nil)\n-          row = Compass::SassExtensions::Sprites::ImageRow.new(width)\n+        def new_row(image = nil)          \n+          if image\n+            row = Compass::SassExtensions::Sprites::ImageRow.new(width + 2 * image.spacing)\n+          else \n+            row = Compass::SassExtensions::Sprites::ImageRow.new(width + 2 * @images[0].spacing)",
        "path": "lib/compass/sass_extensions/sprites/row_fitter.rb",
        "position": null,
        "original_position": 24,
        "commit_id": "b10ad5babcd6404ddca54844b013ab2eb6e9c5be",
        "original_commit_id": "fea4e3f6c58e2b1931694bbe357aa4b51b2ab941",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would DRY this up a bit and calculate the width before calling `ImageRow.new` within the if statement.\n",
        "created_at": "2013-06-04T15:31:03Z",
        "updated_at": "2013-06-06T15:46:03Z",
        "html_url": "https://github.com/Compass/compass/pull/1310#discussion_r4525355",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1310",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4525355"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1310#discussion_r4525355"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/4525373",
        "pull_request_review_id": null,
        "id": 4525373,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNzM=",
        "diff_hunk": "@@ -0,0 +1,44 @@\n+require 'test_helper'\n+require 'compass/sass_extensions/sprites/layout'\n+require 'compass/sass_extensions/sprites/layout/smart'\n+\n+class SmartLayoutSpacingTest < Test::Unit::TestCase\n+  include SpriteHelper\n+\n+  def setup\n+    file = StringIO.new(\"images_path = #{@images_src_path.inspect}\\n\")\n+    Compass.add_configuration(file, \"sprite_config\")\n+  end\n+\n+\n+  def create_images_with_spacing(dims)\n+    dims.collect { |width, height, spacing|\n+      image = Compass::SassExtensions::Sprites::Image.new('blah', 'blah', {\"spacing\" => Sass::Script::Number.new(10, ['px'])})\n+      image.stubs(:width => width, :height => height)\n+      image \n+    }\n+  end\n+\n+  def spacing_dims\n+    [\n+      [ 100, 10, 10 ],\n+      [ 80, 10, 20 ],\n+      [ 50, 10, 20 ],\n+      [ 35, 10, 10 ],\n+      [ 20, 10, 10 ]\n+    ]\n+  end\n+\n+  it 'should correctly space the images according to the spacing' do\n+\timages = create_images_with_spacing(spacing_dims)",
        "path": "test/units/sprites/smart_layout_spacing_test.rb",
        "position": null,
        "original_position": 33,
        "commit_id": "b10ad5babcd6404ddca54844b013ab2eb6e9c5be",
        "original_commit_id": "fea4e3f6c58e2b1931694bbe357aa4b51b2ab941",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Fix the indenting\n",
        "created_at": "2013-06-04T15:31:43Z",
        "updated_at": "2013-06-06T15:46:03Z",
        "html_url": "https://github.com/Compass/compass/pull/1310#discussion_r4525373",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1310",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/4525373"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1310#discussion_r4525373"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1310"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048688",
        "pull_request_review_id": null,
        "id": 8048688,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg2ODg=",
        "diff_hunk": "@@ -1,9 +1,10 @@\n+\n module Compass\n   module SassExtensions\n     module Sprites\n       class Engine\n         attr_accessor :width, :height, :images, :canvas\n-        def initialize(width, height, images)\n+        def initialize(width=nil, height=nil, images=nil)",
        "path": "lib/compass/sass_extensions/sprites/engines.rb",
        "position": 8,
        "original_position": 8,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what is this change for?\n",
        "created_at": "2013-12-03T02:23:15Z",
        "updated_at": "2013-12-03T02:23:15Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8048688",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048688"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8048688"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048700",
        "pull_request_review_id": null,
        "id": 8048700,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg3MDA=",
        "diff_hunk": "@@ -81,10 +85,23 @@ def method_missing(meth, *args, &block)\n \n         private \n \n-        def modulize\n+        def self.modulize\n           @modulize ||= Compass::configuration.sprite_engine.to_s.scan(/([^_.]+)/).flatten.map {|chunk| \"#{chunk[0].chr.upcase}#{chunk[1..-1]}\" }.join\n         end\n \n+        def self.constantize(camel_cased_word)\n+          names = camel_cased_word.split('::')\n+          names.shift if names.empty? || names.first.empty?\n+\n+          constant = Object\n+          names.each do |name|\n+            constant = constant.const_defined?(name) ? constant.const_get(name) : constant.const_missing(name)\n+          end\n+          constant\n+        end\n+\n+\n+",
        "path": "lib/compass/sass_extensions/sprites/sprite_map.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "neeeeeewlineeeeees.\n",
        "created_at": "2013-12-03T02:23:58Z",
        "updated_at": "2013-12-03T02:23:58Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8048700",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048700"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8048700"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048705",
        "pull_request_review_id": null,
        "id": 8048705,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg3MDU=",
        "diff_hunk": "@@ -1,10 +1,14 @@\n require 'erb'\n+require 'compass'\n require 'compass/sprite_importer/binding'\n+\n+\n+\n+",
        "path": "lib/compass/sprite_importer.rb",
        "position": 7,
        "original_position": 7,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "neeeeeewlineeeeees!\n",
        "created_at": "2013-12-03T02:24:13Z",
        "updated_at": "2013-12-03T02:24:13Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8048705",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048705"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8048705"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048737",
        "pull_request_review_id": null,
        "id": 8048737,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg3Mzc=",
        "diff_hunk": "@@ -18,7 +18,7 @@ def compute_image_metadata!\n         end\n         \n         def init_engine\n-          @engine = eval(\"::Compass::SassExtensions::Sprites::#{modulize}Engine.new(nil, nil, nil)\")\n+          @engine = self.class.sprite_engine_class.new\n           @engine.width = @width\n           @engine.height = @height\n           @engine.images = @images",
        "path": "lib/compass/sass_extensions/sprites/sprite_methods.rb",
        "position": 8,
        "original_position": 8,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not just pass these arguments to the initializer instead of making them optional?\n",
        "created_at": "2013-12-03T02:25:45Z",
        "updated_at": "2013-12-03T02:25:45Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8048737",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048737"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8048737"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048834",
        "pull_request_review_id": null,
        "id": 8048834,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg4MzQ=",
        "diff_hunk": "@@ -1,10 +1,14 @@\n require 'erb'\n+require 'compass'\n require 'compass/sprite_importer/binding'\n+\n+\n+\n+\n module Compass\n   class SpriteImporter < Sass::Importers::Base\n     VAILD_FILE_NAME       = /\\A#{Sass::SCSS::RX::IDENT}\\Z/\n-    SPRITE_IMPORTER_REGEX = %r{((.+/)?([^\\*.]+))/(.+?)\\.png}\n-    VALID_EXTENSIONS      = ['.png']\n+    SPRITE_IMPORTER_REGEX = %r{((.+/)?([^\\*.]+))/(.+?)}",
        "path": "lib/compass/sprite_importer.rb",
        "position": 13,
        "original_position": 13,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'm ok with relaxing this glob restriction, but unless the user specifies a valid extension in the glob explicitly, I think we should return `nil` from find unless we find an image with a valid extension in the folder. This will keep it from conflicting with globs that import sass.\n",
        "created_at": "2013-12-03T02:31:39Z",
        "updated_at": "2013-12-03T02:31:39Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8048834",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048834"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8048834"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048873",
        "pull_request_review_id": null,
        "id": 8048873,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg4NzM=",
        "diff_hunk": "@@ -16,7 +16,8 @@ Gem::Specification.new do |gemspec|\n   gemspec.add_dependency 'sass', '>= 3.2.5', '< 3.4'\n   gemspec.add_dependency 'chunky_png', '~> 1.2'\n   gemspec.add_dependency 'listen', '~> 1.0.0'\n-\n+  gemspec.add_dependency \"thread_safe\", \"~> 0.1.0\"",
        "path": "compass.gemspec",
        "position": 5,
        "original_position": 5,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't want to add this dependency. Let's just use mutexes.\n",
        "created_at": "2013-12-03T02:33:43Z",
        "updated_at": "2013-12-03T02:33:43Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r8048873",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048873"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r8048873"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048937",
        "pull_request_review_id": null,
        "id": 8048937,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg5Mzc=",
        "diff_hunk": "@@ -16,7 +16,8 @@ Gem::Specification.new do |gemspec|\n   gemspec.add_dependency 'sass', '>= 3.2.5', '< 3.4'\n   gemspec.add_dependency 'chunky_png', '~> 1.2'\n   gemspec.add_dependency 'listen', '~> 1.0.0'\n-\n+  gemspec.add_dependency \"thread_safe\", \"~> 0.1.0\"",
        "path": "compass.gemspec",
        "position": 5,
        "original_position": 5,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Reason: I had some serious performance issues with it at work and I just don't think a complex dependency is necessary here because a simple mutex around reading or writing to the cache is good enough.\n",
        "created_at": "2013-12-03T02:37:16Z",
        "updated_at": "2013-12-03T02:37:16Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r8048937",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048937"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r8048937"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8048984",
        "pull_request_review_id": null,
        "id": 8048984,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNDg5ODQ=",
        "diff_hunk": "@@ -16,7 +16,8 @@ Gem::Specification.new do |gemspec|\n   gemspec.add_dependency 'sass', '>= 3.2.5', '< 3.4'\n   gemspec.add_dependency 'chunky_png', '~> 1.2'\n   gemspec.add_dependency 'listen', '~> 1.0.0'\n-\n+  gemspec.add_dependency \"thread_safe\", \"~> 0.1.0\"",
        "path": "compass.gemspec",
        "position": 5,
        "original_position": 5,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's what I originally had and everyone freaked out!\n\nSent from my iPhone\n\n> On Dec 2, 2013, at 9:37 PM, Chris Eppstein notifications@github.com wrote:\n> \n> In compass.gemspec:\n> \n> > @@ -16,7 +16,8 @@ Gem::Specification.new do |gemspec|\n> >    gemspec.add_dependency 'sass', '>= 3.2.5', '< 3.4'\n> >    gemspec.add_dependency 'chunky_png', '~> 1.2'\n> > \n> > ##    gemspec.add_dependency 'listen', '~> 1.0.0'\n> > -  gemspec.add_dependency \"thread_safe\", \"~> 0.1.0\"\n> >   Reason: I had some serious performance issues with it at work and I just don't think a complex dependency is necessary here because a simple mutex around reading or writing to the cache is good enough.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n",
        "created_at": "2013-12-03T02:40:34Z",
        "updated_at": "2013-12-03T02:40:34Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r8048984",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8048984"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r8048984"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8050661",
        "pull_request_review_id": null,
        "id": 8050661,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNTA2NjE=",
        "diff_hunk": "@@ -1,10 +1,14 @@\n require 'erb'\n+require 'compass'\n require 'compass/sprite_importer/binding'\n+\n+\n+\n+\n module Compass\n   class SpriteImporter < Sass::Importers::Base\n     VAILD_FILE_NAME       = /\\A#{Sass::SCSS::RX::IDENT}\\Z/\n-    SPRITE_IMPORTER_REGEX = %r{((.+/)?([^\\*.]+))/(.+?)\\.png}\n-    VALID_EXTENSIONS      = ['.png']\n+    SPRITE_IMPORTER_REGEX = %r{((.+/)?([^\\*.]+))/(.+?)}",
        "path": "lib/compass/sprite_importer.rb",
        "position": 13,
        "original_position": 13,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So the entire point of this was to move the required extensions down a level to the engine classes so things like svg gif or whatever people wanted could be created and also allow me to move forward using the same code to work on a svg -> font glyph engine \n",
        "created_at": "2013-12-03T04:56:28Z",
        "updated_at": "2013-12-03T04:56:28Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8050661",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8050661"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8050661"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8050928",
        "pull_request_review_id": null,
        "id": 8050928,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNTA5Mjg=",
        "diff_hunk": "@@ -107,6 +111,16 @@ def self.content_for_images(uri, name, skip_overrides = false)\n       binder = Compass::Sprites::Binding.new(:name => name, :uri => uri, :skip_overrides => skip_overrides, :sprite_names => sprite_names(uri), :files => files(uri))\n       CONTENT_TEMPLATE.result(binder.get_binding)\n     end\n+\n+  private\n+\n+    def self.valid_extensions\n+      @valid_extensions ||= SassExtensions::Sprites::SpriteMap.sprite_engine_class::VALID_EXTENSIONS\n+    end\n+\n+    def self.sprite_importer_regex_with_ext\n+      @importer_regex ||= %r{#{SPRITE_IMPORTER_REGEX}(#{valid_extensions.join('|')})}\n+    end",
        "path": "lib/compass/sprite_importer.rb",
        "position": 48,
        "original_position": 48,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "So here is where the glob is scoped.\n",
        "created_at": "2013-12-03T05:18:26Z",
        "updated_at": "2013-12-03T05:18:26Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8050928",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8050928"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8050928"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8050972",
        "pull_request_review_id": null,
        "id": 8050972,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNTA5NzI=",
        "diff_hunk": "@@ -1,9 +1,10 @@\n+\n module Compass\n   module SassExtensions\n     module Sprites\n       class Engine\n         attr_accessor :width, :height, :images, :canvas\n-        def initialize(width, height, images)\n+        def initialize(width=nil, height=nil, images=nil)",
        "path": "lib/compass/sass_extensions/sprites/engines.rb",
        "position": 8,
        "original_position": 8,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no idea was 4 months ago :(\n",
        "created_at": "2013-12-03T05:21:25Z",
        "updated_at": "2013-12-03T05:21:25Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8050972",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8050972"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8050972"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8076553",
        "pull_request_review_id": null,
        "id": 8076553,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNzY1NTM=",
        "diff_hunk": "@@ -1,10 +1,14 @@\n require 'erb'\n+require 'compass'\n require 'compass/sprite_importer/binding'\n+\n+\n+\n+\n module Compass\n   class SpriteImporter < Sass::Importers::Base\n     VAILD_FILE_NAME       = /\\A#{Sass::SCSS::RX::IDENT}\\Z/\n-    SPRITE_IMPORTER_REGEX = %r{((.+/)?([^\\*.]+))/(.+?)\\.png}\n-    VALID_EXTENSIONS      = ['.png']\n+    SPRITE_IMPORTER_REGEX = %r{((.+/)?([^\\*.]+))/(.+?)}",
        "path": "lib/compass/sprite_importer.rb",
        "position": 13,
        "original_position": 13,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "That's fine. My point is that when the glob matches, we always return a sass engine. Instead, the sprite engine should be able to look at that glob and decide if it has files in it that it can process. If not, this importer should return nil and then a different importer can handle it. Or maybe Sass will just give an error that says that it cannot import that.\n",
        "created_at": "2013-12-03T21:35:22Z",
        "updated_at": "2013-12-03T21:35:22Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8076553",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8076553"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8076553"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8076801",
        "pull_request_review_id": null,
        "id": 8076801,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNzY4MDE=",
        "diff_hunk": "@@ -107,6 +111,16 @@ def self.content_for_images(uri, name, skip_overrides = false)\n       binder = Compass::Sprites::Binding.new(:name => name, :uri => uri, :skip_overrides => skip_overrides, :sprite_names => sprite_names(uri), :files => files(uri))\n       CONTENT_TEMPLATE.result(binder.get_binding)\n     end\n+\n+  private\n+\n+    def self.valid_extensions\n+      @valid_extensions ||= SassExtensions::Sprites::SpriteMap.sprite_engine_class::VALID_EXTENSIONS\n+    end\n+\n+    def self.sprite_importer_regex_with_ext\n+      @importer_regex ||= %r{#{SPRITE_IMPORTER_REGEX}(#{valid_extensions.join('|')})}\n+    end",
        "path": "lib/compass/sprite_importer.rb",
        "position": 48,
        "original_position": 48,
        "commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "original_commit_id": "efeb921c561aa78ea622178aa9ea5c4cf14ff0f0",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I see. I'd still like to not return any engine if there's no files that match the glob.\n",
        "created_at": "2013-12-03T21:41:55Z",
        "updated_at": "2013-12-03T21:41:55Z",
        "html_url": "https://github.com/Compass/compass/pull/1312#discussion_r8076801",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1312",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8076801"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1312#discussion_r8076801"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1312"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8076874",
        "pull_request_review_id": null,
        "id": 8076874,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNzY4NzQ=",
        "diff_hunk": "@@ -16,7 +16,8 @@ Gem::Specification.new do |gemspec|\n   gemspec.add_dependency 'sass', '>= 3.2.5', '< 3.4'\n   gemspec.add_dependency 'chunky_png', '~> 1.2'\n   gemspec.add_dependency 'listen', '~> 1.0.0'\n-\n+  gemspec.add_dependency \"thread_safe\", \"~> 0.1.0\"",
        "path": "compass.gemspec",
        "position": 5,
        "original_position": 5,
        "commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "original_commit_id": "89f9f10a8d2e19c2948776e068f7ac5b764171e1",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You were right.\n",
        "created_at": "2013-12-03T21:44:07Z",
        "updated_at": "2013-12-03T21:44:07Z",
        "html_url": "https://github.com/Compass/compass/pull/1308#discussion_r8076874",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1308",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8076874"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1308#discussion_r8076874"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1308"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8997541",
        "pull_request_review_id": null,
        "id": 8997541,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTc1NDE=",
        "diff_hunk": "@@ -2,43 +2,147 @@\n // Extends the bottom of the element to enclose any floats it contains.\n // @doc on\n \n+@import \"compass/support\";\n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n-@mixin clearfix {\n-  overflow: hidden;\n-  @include has-layout;\n-}\n-\n-// This older method from Position Is Everything called\n-// [Easy Clearing](http://www.positioniseverything.net/easyclearing.html)\n-// has the advantage of allowing positioned elements to hang\n-// outside the bounds of the container at the expense of more tricky CSS.\n-@mixin legacy-pie-clearfix {\n-  &:after {\n-    content    : \"\\0020\";\n-    display    : block;\n-    height     : 0;\n-    clear      : both;\n-    overflow   : hidden;\n-    visibility : hidden;\n-  }\n-  @include has-layout;\n-}\n-\n-// This is an updated version of the PIE clearfix method that reduces the amount of CSS output.\n-// If you need to support Firefox before 3.5 you need to use `legacy-pie-clearfix` instead.\n-//\n-// Adapted from: [A new micro clearfix hack](http://nicolasgallagher.com/micro-clearfix-hack/)\n-@mixin pie-clearfix {",
        "path": "core/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": 37,
        "original_position": 37,
        "commit_id": "58b47838c58af40cf67813608731006d484ba279",
        "original_commit_id": "58b47838c58af40cf67813608731006d484ba279",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We'll need to deprecate the old `pie-clearfix` and `legacy-pie-clearfix` before we can remove them. That can happen with `@warn` and a re-direction to the most appropriate new mixin.\n",
        "created_at": "2014-01-20T06:44:21Z",
        "updated_at": "2014-01-20T06:44:21Z",
        "html_url": "https://github.com/Compass/compass/pull/1485#discussion_r8997541",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1485",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8997541"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1485#discussion_r8997541"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1485"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/8997600",
        "pull_request_review_id": null,
        "id": 8997600,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5OTc2MDA=",
        "diff_hunk": "@@ -2,43 +2,147 @@\n // Extends the bottom of the element to enclose any floats it contains.\n // @doc on\n \n+@import \"compass/support\";\n @import \"hacks\";\n \n-// This basic method is preferred for the usual case, when positioned\n-// content will not show outside the bounds of the container.\n-//\n-// Recommendations include using this in conjunction with a width.\n-// Credit: [quirksmode.org](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n-@mixin clearfix {\n-  overflow: hidden;\n-  @include has-layout;\n-}\n-\n-// This older method from Position Is Everything called\n-// [Easy Clearing](http://www.positioniseverything.net/easyclearing.html)\n-// has the advantage of allowing positioned elements to hang\n-// outside the bounds of the container at the expense of more tricky CSS.\n-@mixin legacy-pie-clearfix {\n-  &:after {\n-    content    : \"\\0020\";\n-    display    : block;\n-    height     : 0;\n-    clear      : both;\n-    overflow   : hidden;\n-    visibility : hidden;\n-  }\n-  @include has-layout;\n-}\n-\n-// This is an updated version of the PIE clearfix method that reduces the amount of CSS output.\n-// If you need to support Firefox before 3.5 you need to use `legacy-pie-clearfix` instead.\n-//\n-// Adapted from: [A new micro clearfix hack](http://nicolasgallagher.com/micro-clearfix-hack/)\n-@mixin pie-clearfix {\n-  &:after {\n-    content: \"\";\n-    display: table;\n-    clear: both;\n-  }\n-  @include has-layout;\n+// Determines whether the clearfix mixin should extend selectors by default\n+// Default to true\n+$default-clearfix-extend: true !default;\n+\n+// The type of clearfix to use by default\n+// Default to false\n+$default-clearfix-type: false !default;\n+\n+//////////////////////////////\n+// Clearfix Mixins\n+//////////////////////////////\n+// [Overflow Clearfix](http://www.quirksmode.org/blog/archives/2005/03/clearing_floats.html)\n+@mixin clearfix-overflow($extend: $default-clearfix-extend) {\n+  @if not $extend {",
        "path": "core/stylesheets/compass/utilities/general/_clearfix.scss",
        "position": 57,
        "original_position": 57,
        "commit_id": "58b47838c58af40cf67813608731006d484ba279",
        "original_commit_id": "58b47838c58af40cf67813608731006d484ba279",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "While this use of `@extend` is an interesting feature to consider across compass more broadly, it requires a bit more thought. I'd prefer to discuss it as a separate feature, with an issue/pull-request of its own. As far as I'm aware, Compass currently has no output (including placeholder classes) unless explicitly requested \u2014 and I'd like to keep it that way. It's not hard for a user to create their own clearfix classes/placeholders as they want, and if we plan to provide that feature, it should be opt-in.\n",
        "created_at": "2014-01-20T06:52:44Z",
        "updated_at": "2014-01-20T06:52:44Z",
        "html_url": "https://github.com/Compass/compass/pull/1485#discussion_r8997600",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1485",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/8997600"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1485#discussion_r8997600"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1485"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/9154274",
        "pull_request_review_id": null,
        "id": 9154274,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNTQyNzQ=",
        "diff_hunk": "@@ -11,9 +11,9 @@ without compass in any Sass-based project.\n \n ## Installation\n \n-Or add this line to your application's Gemfile if you have one:\n+Either add this line to your application's Gemfile if you have one:",
        "path": "import-once/README.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "39be5cd1a4297c80e955057c2d846dcfb7925b7f",
        "original_commit_id": "39be5cd1a4297c80e955057c2d846dcfb7925b7f",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I am not sure `Either` makes since here. the `Or` definitely didn't belong. Should just be `Add this line....`\n",
        "created_at": "2014-01-24T16:41:48Z",
        "updated_at": "2014-01-24T16:41:48Z",
        "html_url": "https://github.com/Compass/compass/pull/1528#discussion_r9154274",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1528",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/9154274"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1528#discussion_r9154274"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1528"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/9154359",
        "pull_request_review_id": null,
        "id": 9154359,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxNTQzNTk=",
        "diff_hunk": "@@ -11,9 +11,9 @@ without compass in any Sass-based project.\n \n ## Installation\n \n-Or add this line to your application's Gemfile if you have one:\n+Either add this line to your application's Gemfile if you have one:",
        "path": "import-once/README.md",
        "position": 5,
        "original_position": 5,
        "commit_id": "39be5cd1a4297c80e955057c2d846dcfb7925b7f",
        "original_commit_id": "39be5cd1a4297c80e955057c2d846dcfb7925b7f",
        "user": {
            "login": "lolmaus",
            "id": 200884,
            "node_id": "MDQ6VXNlcjIwMDg4NA==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/200884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lolmaus",
            "html_url": "https://github.com/lolmaus",
            "followers_url": "https://api.github.com/users/lolmaus/followers",
            "following_url": "https://api.github.com/users/lolmaus/following{/other_user}",
            "gists_url": "https://api.github.com/users/lolmaus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lolmaus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lolmaus/subscriptions",
            "organizations_url": "https://api.github.com/users/lolmaus/orgs",
            "repos_url": "https://api.github.com/users/lolmaus/repos",
            "events_url": "https://api.github.com/users/lolmaus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lolmaus/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Did you read the whole thing?\n\nEither add this line and this line, or install yourself with that. Perfect English.\n",
        "created_at": "2014-01-24T16:44:17Z",
        "updated_at": "2014-01-24T16:44:17Z",
        "html_url": "https://github.com/Compass/compass/pull/1528#discussion_r9154359",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1528",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/9154359"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1528#discussion_r9154359"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1528"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/9272380",
        "pull_request_review_id": null,
        "id": 9272380,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyNzIzODA=",
        "diff_hunk": "@@ -80,6 +80,18 @@ def sass_load_paths\n         load_paths << Compass::SpriteImporter.new\n         load_paths\n       end\n+\n+      def watch_load_paths\n+        load_paths = []\n+        importer = sass_options[:filesystem_importer] if sass_options && sass_options[:filesystem_importer]\n+        importer ||= Sass::Importers::Filesystem\n+        load_paths += resolve_additional_import_paths\n+        load_paths.map! do |p|\n+          next p if p.respond_to?(:find_relative)\n+          importer.new(p.to_s)\n+        end\n+        load_paths",
        "path": "cli/lib/compass/configuration/adapters.rb",
        "position": null,
        "original_position": 14,
        "commit_id": "b9453f067f8bbac20839e01c44c386bd91dcbb9f",
        "original_commit_id": "75328434a69f159266c8a3976fa2c9aeac5f83d2",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I would clean this up its unnecessary code duplication from the method above. \n",
        "created_at": "2014-01-29T16:25:11Z",
        "updated_at": "2014-01-30T16:16:05Z",
        "html_url": "https://github.com/Compass/compass/pull/1522#discussion_r9272380",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1522",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/9272380"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1522#discussion_r9272380"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1522"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/12764453",
        "pull_request_review_id": null,
        "id": 12764453,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY0NDUz",
        "diff_hunk": "@@ -56,6 +62,27 @@ $transitionable-prefixed-values: transform, transform-origin !default;\n   }\n }\n \n+// Returns $transition-map which includes key and values that map to a transition declaration\n+@function transition-map($transition) {\n+  $transition-map: ();\n+\n+  @for $i from 1 through length($transition) {",
        "path": "core/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 28,
        "commit_id": "d689348ccea02dfcd82a452ad961ffc01de2c988",
        "original_commit_id": "357e85f84d789300e04ef65f498aeadc1d1ebf8d",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` scss\n@each $item in $transition {\n   // ...\n}\n```\n",
        "created_at": "2014-05-17T00:20:37Z",
        "updated_at": "2014-05-19T21:03:31Z",
        "html_url": "https://github.com/Compass/compass/pull/1678#discussion_r12764453",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1678",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/12764453"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1678#discussion_r12764453"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1678"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/12764506",
        "pull_request_review_id": null,
        "id": 12764506,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY0NTA2",
        "diff_hunk": "@@ -56,6 +62,27 @@ $transitionable-prefixed-values: transform, transform-origin !default;\n   }\n }\n \n+// Returns $transition-map which includes key and values that map to a transition declaration\n+@function transition-map($transition) {\n+  $transition-map: ();\n+\n+  @for $i from 1 through length($transition) {\n+    $item: nth($transition,$i);\n+    @if is-time($item) {\n+      @if map-get($transition-map, duration) {",
        "path": "core/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 31,
        "commit_id": "d689348ccea02dfcd82a452ad961ffc01de2c988",
        "original_commit_id": "357e85f84d789300e04ef65f498aeadc1d1ebf8d",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "``` scss\n@if map-has-key($transition-map, duration) {\n  // ...\n}\n```\n",
        "created_at": "2014-05-17T00:24:11Z",
        "updated_at": "2014-05-19T21:03:31Z",
        "html_url": "https://github.com/Compass/compass/pull/1678#discussion_r12764506",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1678",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/12764506"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1678#discussion_r12764506"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1678"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/12764629",
        "pull_request_review_id": null,
        "id": 12764629,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzY0NjI5",
        "diff_hunk": "@@ -29,6 +29,7 @@ $default-transition-delay: null !default;\n \n $transitionable-prefixed-values: transform, transform-origin !default;\n \n+$timing-functions: linear,ease,ease-in,ease-in-out,ease-out,step-start,step-end,steps,cubic-bezier;",
        "path": "core/stylesheets/compass/css3/_transition.scss",
        "position": null,
        "original_position": 4,
        "commit_id": "d689348ccea02dfcd82a452ad961ffc01de2c988",
        "original_commit_id": "357e85f84d789300e04ef65f498aeadc1d1ebf8d",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This sort of white-list always scares me because it's not future proof.\n\nAlso note that `steps` and `cubic-bezier` take arguments so checking for them in a list is not going to work. We need to iterate over the list of possible timing functions and do a `str-index` on the argument.\n\nPersonally, I'd rather not white list this at all. Like times, I think the first string should be considered the property and the second string considered a timing function.\n",
        "created_at": "2014-05-17T00:33:23Z",
        "updated_at": "2014-05-19T21:03:31Z",
        "html_url": "https://github.com/Compass/compass/pull/1678#discussion_r12764629",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1678",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/12764629"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1678#discussion_r12764629"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1678"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/9064765",
        "pull_request_review_id": null,
        "id": 9064765,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNjQ3NjU=",
        "diff_hunk": "@@ -95,16 +95,15 @@ $relative-font-sizing: if($rhythm-unit == px, false, true);\n \n // Establishes a font baseline for the given font-size.\n @mixin establish-baseline($font-size: $base-font-size) {\n-  $relative-size: 100% * ($font-size / $browser-default-font-size);",
        "path": "core/stylesheets/compass/typography/_vertical_rhythm.scss",
        "position": null,
        "original_position": 4,
        "commit_id": "452fa28509162e27f0c49c0a08c52ab74769672d",
        "original_commit_id": "3dda91b9b34177798a71ebc9043dadef84a59d84",
        "user": {
            "login": "mirisuzanne",
            "id": 104161,
            "node_id": "MDQ6VXNlcjEwNDE2MQ==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/104161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mirisuzanne",
            "html_url": "https://github.com/mirisuzanne",
            "followers_url": "https://api.github.com/users/mirisuzanne/followers",
            "following_url": "https://api.github.com/users/mirisuzanne/following{/other_user}",
            "gists_url": "https://api.github.com/users/mirisuzanne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mirisuzanne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mirisuzanne/subscriptions",
            "organizations_url": "https://api.github.com/users/mirisuzanne/orgs",
            "repos_url": "https://api.github.com/users/mirisuzanne/repos",
            "events_url": "https://api.github.com/users/mirisuzanne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mirisuzanne/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why was this line removed? `$relative-size` is still called on line 99, and now throws an error in the tests. This line should stay and be added to the new line 105 as well. No reason to duplicate that math.\n",
        "created_at": "2014-01-22T04:06:15Z",
        "updated_at": "2014-08-02T14:53:21Z",
        "html_url": "https://github.com/Compass/compass/pull/1520#discussion_r9064765",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1520",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/9064765"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1520#discussion_r9064765"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1520"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16313795",
        "pull_request_review_id": null,
        "id": 16313795,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzEzNzk1",
        "diff_hunk": "@@ -50,7 +50,7 @@ def happy_styling!(logger)\n       end\n \n       def compiler_options\n-        super.merge(:poll => options[:poll])\n+        super.merge(:poll => options[:poll], :full_exception => true)",
        "path": "cli/lib/compass/commands/watch_project.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "26b18a9603e5c7f08e6af992e9f3249a958e56fe",
        "original_commit_id": "26b18a9603e5c7f08e6af992e9f3249a958e56fe",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Use the new Ruby 1.9 hash syntax.\n",
        "created_at": "2014-08-15T20:29:53Z",
        "updated_at": "2014-08-15T20:29:53Z",
        "html_url": "https://github.com/Compass/compass/pull/1765#discussion_r16313795",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1765",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16313795"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1765#discussion_r16313795"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1765"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16406288",
        "pull_request_review_id": null,
        "id": 16406288,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDA2Mjg4",
        "diff_hunk": "@@ -188,6 +188,10 @@ def #{helper}(*args)\n     }\n   end\n \n+  def test_absolute_font_path_only\n+    assert_equal '/font/name.ext', evaluate('font-url(\"/font/name.ext\", true)')",
        "path": "cli/test/units/sass_extensions_test.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-08-19T10:15:14Z",
        "updated_at": "2014-08-19T10:17:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16406288",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16406288"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16406288"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16406289",
        "pull_request_review_id": null,
        "id": 16406289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDA2Mjg5",
        "diff_hunk": "@@ -257,6 +240,14 @@ def absolute_path?(path)\n     path[0..0] == \"/\" || path[0..3] == \"http\"\n   end\n \n+  def sass_url(path, only_path = Sass::Script::Bool.new(false))\n+    unquoted_string(only_path.to_bool ? path : \"url(#{path})\")\n+  end\n+\n+  def sass_clean_url(path, only_path = Sass::Script::Bool.new(false))\n+    unquoted_string(only_path.to_bool ? clean_path(path) : \"url('#{clean_path(path)}')\")",
        "path": "core/lib/compass/core/sass_extensions/functions/urls.rb",
        "position": 107,
        "original_position": 107,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [88/80]\n",
        "created_at": "2014-08-19T10:15:14Z",
        "updated_at": "2014-08-19T10:17:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16406289",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16406289"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16406289"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16406290",
        "pull_request_review_id": null,
        "id": 16406290,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDA2Mjkw",
        "diff_hunk": "@@ -241,12 +228,8 @@ def generated_image_url(path, cache_buster = bool(false))\n   # Emits a path, taking off any leading \"./\"\n   def clean_path(url)\n     url = url.to_s\n-    url = url[0..1] == \"./\" ? url[2..-1] : url\n-  end\n-\n-  # Emits a url, taking off any leading \"./\"\n-  def clean_url(url)\n-    unquoted_string(\"url('#{clean_path(url)}')\")\n+    url = url[2..-1] if url.start_with?('./')",
        "path": "core/lib/compass/core/sass_extensions/functions/urls.rb",
        "position": 93,
        "original_position": 93,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-08-19T10:15:14Z",
        "updated_at": "2014-08-19T10:17:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16406290",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16406290"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16406290"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16406291",
        "pull_request_review_id": null,
        "id": 16406291,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDA2Mjkx",
        "diff_hunk": "@@ -117,8 +108,8 @@ def image_url(path, only_path = bool(false), cache_buster = bool(true))\n         # the images path.\n         path = $1\n       elsif absolute_path?(path)\n-        # Short curcuit if they have provided an absolute url.\n-        return unquoted_string(\"url(#{path})\")\n+        # Short circuit if they have provided an absolute url.\n+        return sass_url(path) ",
        "path": "core/lib/compass/core/sass_extensions/functions/urls.rb",
        "position": null,
        "original_position": 46,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Trailing whitespace detected.\n",
        "created_at": "2014-08-19T10:15:14Z",
        "updated_at": "2014-08-19T10:17:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16406291",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16406291"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16406291"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16406335",
        "pull_request_review_id": null,
        "id": 16406335,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDA2MzM1",
        "diff_hunk": "@@ -241,12 +228,8 @@ def generated_image_url(path, cache_buster = bool(false))\n   # Emits a path, taking off any leading \"./\"\n   def clean_path(url)\n     url = url.to_s\n-    url = url[0..1] == \"./\" ? url[2..-1] : url\n-  end\n-\n-  # Emits a url, taking off any leading \"./\"\n-  def clean_url(url)\n-    unquoted_string(\"url('#{clean_path(url)}')\")\n+    url = url[2..-1] if url.start_with?('./')",
        "path": "core/lib/compass/core/sass_extensions/functions/urls.rb",
        "position": 93,
        "original_position": 93,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "glebm",
            "id": 216339,
            "node_id": "MDQ6VXNlcjIxNjMzOQ==",
            "avatar_url": "https://avatars0.githubusercontent.com/u/216339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glebm",
            "html_url": "https://github.com/glebm",
            "followers_url": "https://api.github.com/users/glebm/followers",
            "following_url": "https://api.github.com/users/glebm/following{/other_user}",
            "gists_url": "https://api.github.com/users/glebm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glebm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glebm/subscriptions",
            "organizations_url": "https://api.github.com/users/glebm/orgs",
            "repos_url": "https://api.github.com/users/glebm/repos",
            "events_url": "https://api.github.com/users/glebm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glebm/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why? Single quoted strings indicate simple non-interpolated strings.\n",
        "created_at": "2014-08-19T10:16:19Z",
        "updated_at": "2014-08-19T10:17:27Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16406335",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16406335"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16406335"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16450189",
        "pull_request_review_id": null,
        "id": 16450189,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDUwMTg5",
        "diff_hunk": "@@ -241,12 +228,8 @@ def generated_image_url(path, cache_buster = bool(false))\n   # Emits a path, taking off any leading \"./\"\n   def clean_path(url)\n     url = url.to_s\n-    url = url[0..1] == \"./\" ? url[2..-1] : url\n-  end\n-\n-  # Emits a url, taking off any leading \"./\"\n-  def clean_url(url)\n-    unquoted_string(\"url('#{clean_path(url)}')\")\n+    url = url[2..-1] if url.start_with?('./')",
        "path": "core/lib/compass/core/sass_extensions/functions/urls.rb",
        "position": 93,
        "original_position": 93,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "Arcovion",
            "id": 2716027,
            "node_id": "MDQ6VXNlcjI3MTYwMjc=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/2716027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arcovion",
            "html_url": "https://github.com/Arcovion",
            "followers_url": "https://api.github.com/users/Arcovion/followers",
            "following_url": "https://api.github.com/users/Arcovion/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arcovion/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arcovion/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arcovion/subscriptions",
            "organizations_url": "https://api.github.com/users/Arcovion/orgs",
            "repos_url": "https://api.github.com/users/Arcovion/repos",
            "events_url": "https://api.github.com/users/Arcovion/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arcovion/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yea, you should always prefer single quoted strings. Also, line length 80? Really?\nThe styleguide this bot uses [is here](https://github.com/thoughtbot/guides/tree/master/style) - it's all very disagreeable, no vertical alignment, acronyms without capital letters, avoid conditional modifiers,  avoid bang methods?! It's not rubyish.\n\nSuggest switching to RuboCop which is a more customisable, relaxed analyser that won't litter with comments and can automatically fix code by itself.\n",
        "created_at": "2014-08-19T23:06:20Z",
        "updated_at": "2014-08-19T23:21:49Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16450189",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16450189"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16450189"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16452650",
        "pull_request_review_id": null,
        "id": 16452650,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDUyNjUw",
        "diff_hunk": "@@ -241,12 +228,8 @@ def generated_image_url(path, cache_buster = bool(false))\n   # Emits a path, taking off any leading \"./\"\n   def clean_path(url)\n     url = url.to_s\n-    url = url[0..1] == \"./\" ? url[2..-1] : url\n-  end\n-\n-  # Emits a url, taking off any leading \"./\"\n-  def clean_url(url)\n-    unquoted_string(\"url('#{clean_path(url)}')\")\n+    url = url[2..-1] if url.start_with?('./')",
        "path": "core/lib/compass/core/sass_extensions/functions/urls.rb",
        "position": 93,
        "original_position": 93,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "We're just testing out this tool. We use rubocop on Sass and I liked it. But getting the code to comply is a TON of work.\n",
        "created_at": "2014-08-20T00:14:30Z",
        "updated_at": "2014-08-20T00:14:30Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16452650",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16452650"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16452650"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16453462",
        "pull_request_review_id": null,
        "id": 16453462,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDUzNDYy",
        "diff_hunk": "@@ -241,12 +228,8 @@ def generated_image_url(path, cache_buster = bool(false))\n   # Emits a path, taking off any leading \"./\"\n   def clean_path(url)\n     url = url.to_s\n-    url = url[0..1] == \"./\" ? url[2..-1] : url\n-  end\n-\n-  # Emits a url, taking off any leading \"./\"\n-  def clean_url(url)\n-    unquoted_string(\"url('#{clean_path(url)}')\")\n+    url = url[2..-1] if url.start_with?('./')",
        "path": "core/lib/compass/core/sass_extensions/functions/urls.rb",
        "position": 93,
        "original_position": 93,
        "commit_id": "6f859a33d80b97158e431513a805f6a48efe876b",
        "original_commit_id": "22205bc3a673c2a8c3cdedf9486af8f0a5a3f8ea",
        "user": {
            "login": "Anahkiasen",
            "id": 1321596,
            "node_id": "MDQ6VXNlcjEzMjE1OTY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1321596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anahkiasen",
            "html_url": "https://github.com/Anahkiasen",
            "followers_url": "https://api.github.com/users/Anahkiasen/followers",
            "following_url": "https://api.github.com/users/Anahkiasen/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anahkiasen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anahkiasen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anahkiasen/subscriptions",
            "organizations_url": "https://api.github.com/users/Anahkiasen/orgs",
            "repos_url": "https://api.github.com/users/Anahkiasen/repos",
            "events_url": "https://api.github.com/users/Anahkiasen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anahkiasen/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "@chriseppstein What about [Scrutinizer](https://scrutinizer-ci.com/) ? It aggregates various CI tools for PHP, Ruby, JS, and Python. It's quite powerful. Supports pull requests statuses and stuff.\n",
        "created_at": "2014-08-20T00:42:20Z",
        "updated_at": "2014-08-20T00:42:49Z",
        "html_url": "https://github.com/Compass/compass/pull/1774#discussion_r16453462",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1774",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16453462"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1774#discussion_r16453462"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1774"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16583451",
        "pull_request_review_id": null,
        "id": 16583451,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTgzNDUx",
        "diff_hunk": "@@ -1,6 +1,7 @@\n module Compass::Core::SassExtensions::Functions::GradientSupport\n \n   GRADIENT_ASPECTS = %w(webkit moz svg css2 o owg).freeze\n+  RADIAL_ENDING_SHAPE_SIZE = %w(ellipse circle closest-side closest-corner farthest-side farthest-corner).freeze",
        "path": "core/lib/compass/core/sass_extensions/functions/gradient_support.rb",
        "position": 4,
        "original_position": 4,
        "commit_id": "ae338d69ef01a1746a9e2f09f8b6f5a238490029",
        "original_commit_id": "4bba3fb75c8a63b634d68ea957f259bc7686e206",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [112/80]\n",
        "created_at": "2014-08-22T05:42:47Z",
        "updated_at": "2014-08-22T05:45:26Z",
        "html_url": "https://github.com/Compass/compass/pull/1785#discussion_r16583451",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1785",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16583451"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1785#discussion_r16583451"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1785"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16583452",
        "pull_request_review_id": null,
        "id": 16583452,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTgzNDUy",
        "diff_hunk": "@@ -582,16 +580,30 @@ def radial_gradient(position_or_angle, shape_and_size, *color_stops)\n       if color_stops.size == 1 && list_of_color_stops?(color_stops.first)\n         color_stops = color_stops.first.value\n       end\n+\n       if position_or_angle.is_a?(Sass::Script::Value::List) &&\n          (i = position_or_angle.value.index {|word| word.is_a?(Sass::Script::Value::String) && word.value == \"at\"})\n         shape_and_size = list(position_or_angle.value[0..(i-1)], :space)\n         shape_and_size.options = options\n         position_or_angle = list(position_or_angle.value[(i+1)..-1], :space)\n         position_or_angle.options = options\n+      elsif position_or_angle && is_shape_and_size?(position_or_angle)\n+        shape_and_size, position_or_angle = position_or_angle, shape_and_size\n       end\n       RadialGradient.new(position_or_angle, shape_and_size, send(:color_stops, *color_stops))\n     end\n \n+    def is_shape_and_size?(obj)",
        "path": "core/lib/compass/core/sass_extensions/functions/gradient_support.rb",
        "position": 60,
        "original_position": 60,
        "commit_id": "ae338d69ef01a1746a9e2f09f8b6f5a238490029",
        "original_commit_id": "4bba3fb75c8a63b634d68ea957f259bc7686e206",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Rename `is_shape_and_size?` to `shape_and_size?`.\n",
        "created_at": "2014-08-22T05:42:47Z",
        "updated_at": "2014-08-22T05:45:26Z",
        "html_url": "https://github.com/Compass/compass/pull/1785#discussion_r16583452",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1785",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16583452"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1785#discussion_r16583452"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1785"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16376650",
        "pull_request_review_id": null,
        "id": 16376650,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc2NjUw",
        "diff_hunk": "@@ -39,11 +39,11 @@ def initialize(working_path, options)\n \n       def perform\n         relative_uri = options[:uri].gsub(/^#{Compass.configuration.images_dir}\\//, '')\n-        name = Compass::SpriteImporter.sprite_name(relative_uri)\n-        sprites = Compass::SpriteImporter.new\n+        name = Compass::Sprites::Importer.sprite_name(relative_uri)\n+        sprites = Compass::Sprites::Importer.new",
        "path": "cli/lib/compass/commands/sprite.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Useless assignment to variable - `sprites`.\n",
        "created_at": "2014-08-18T19:34:56Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r16376650",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16376650"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r16376650"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16376653",
        "pull_request_review_id": null,
        "id": 16376653,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc2NjUz",
        "diff_hunk": "@@ -14,54 +15,23 @@ def name\n   end\n end\n \n-%w(command_line diff io rails test_case).each do |helper|\n-  require \"helpers/#{helper}\"\n-end\n+require File.expand_path(File.join(File.dirname(__FILE__), '..', '..', 'test', 'common', 'helpers'))",
        "path": "cli/test/test_helper.rb",
        "position": 15,
        "original_position": 15,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [100/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-08-18T19:34:56Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r16376653",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16376653"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r16376653"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16376654",
        "pull_request_review_id": null,
        "id": 16376654,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc2NjU0",
        "diff_hunk": "@@ -14,54 +15,23 @@ def name\n   end\n end\n \n-%w(command_line diff io rails test_case).each do |helper|\n-  require \"helpers/#{helper}\"\n-end\n+require File.expand_path(File.join(File.dirname(__FILE__), '..', '..', 'test', 'common', 'helpers'))\n+\n+module Compass::Test::TestCaseHelper\n \n+  def absolutize(path)\n+    File.join(File.expand_path('../', __FILE__), path)\n+  end\n+end\n \n class Test::Unit::TestCase\n-  include Compass::Diff\n-  include Compass::TestCaseHelper\n-  include Compass::IoHelper\n-  extend Compass::TestCaseHelper::ClassMethods\n+  include Compass::Test::Diff\n+  include Compass::Test::TestCaseHelper\n+  include Compass::Test::IoHelper\n+  extend  Compass::Test::TestCaseHelper::ClassMethods",
        "path": "cli/test/test_helper.rb",
        "position": 32,
        "original_position": 32,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Put one space between the method name and the first argument.\n",
        "created_at": "2014-08-18T19:34:56Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r16376654",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16376654"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r16376654"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16376655",
        "pull_request_review_id": null,
        "id": 16376655,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc2NjU1",
        "diff_hunk": "@@ -14,54 +15,23 @@ def name\n   end\n end\n \n-%w(command_line diff io rails test_case).each do |helper|\n-  require \"helpers/#{helper}\"\n-end\n+require File.expand_path(File.join(File.dirname(__FILE__), '..', '..', 'test', 'common', 'helpers'))\n+\n+module Compass::Test::TestCaseHelper\n \n+  def absolutize(path)\n+    File.join(File.expand_path('../', __FILE__), path)",
        "path": "cli/test/test_helper.rb",
        "position": 20,
        "original_position": 20,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.\n",
        "created_at": "2014-08-18T19:34:57Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r16376655",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16376655"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r16376655"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16376656",
        "pull_request_review_id": null,
        "id": 16376656,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc2NjU2",
        "diff_hunk": "@@ -1,5 +1,5 @@\n require \"test/unit\"\n-require File.join(File.dirname(__FILE__), \"..\", \"helpers\", \"diff\")\n+require File.join(File.dirname(__FILE__), \"..\", \"..\", \"..\", \"test\", \"common\", \"helpers\", \"diff\")",
        "path": "core/test/integrations/test_helper.rb",
        "position": 3,
        "original_position": 3,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [96/80]\n",
        "created_at": "2014-08-18T19:34:57Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r16376656",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16376656"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r16376656"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/16376657",
        "pull_request_review_id": null,
        "id": 16376657,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzc2NjU3",
        "diff_hunk": "@@ -2,7 +2,7 @@\n require 'compass/core'\n \n require \"test/unit\"\n-require File.expand_path(File.join(File.dirname(__FILE__), \"..\", \"helpers\", \"diff\"))\n+require File.join(File.dirname(__FILE__), \"..\", \"..\", \"..\", \"test\", \"common\", \"helpers\", \"diff\")",
        "path": "core/test/units/test_helper.rb",
        "position": 5,
        "original_position": 5,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "houndci-bot",
            "id": 6697940,
            "node_id": "MDQ6VXNlcjY2OTc5NDA=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/6697940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houndci-bot",
            "html_url": "https://github.com/houndci-bot",
            "followers_url": "https://api.github.com/users/houndci-bot/followers",
            "following_url": "https://api.github.com/users/houndci-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/houndci-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houndci-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houndci-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/houndci-bot/orgs",
            "repos_url": "https://api.github.com/users/houndci-bot/repos",
            "events_url": "https://api.github.com/users/houndci-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houndci-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Line is too long. [96/80]\n",
        "created_at": "2014-08-18T19:34:57Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r16376657",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/16376657"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r16376657"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/17984788",
        "pull_request_review_id": null,
        "id": 17984788,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg0Nzg4",
        "diff_hunk": "@@ -34,7 +34,8 @@ def lib_directory\n    app_integration\n    compiler\n    sass_compiler\n-   sprite_importer\n ).each do |lib|\n   require \"compass/#{lib}\"\n end\n+#tem",
        "path": "cli/lib/compass.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "ef9e3e5a9cccf763828d541fd904cb8d51e5ee46",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Not sure what this comment is for. Delete it?\n",
        "created_at": "2014-09-24T17:05:26Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r17984788",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/17984788"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r17984788"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/17984835",
        "pull_request_review_id": null,
        "id": 17984835,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg0ODM1",
        "diff_hunk": "@@ -39,11 +39,11 @@ def initialize(working_path, options)\n \n       def perform\n         relative_uri = options[:uri].gsub(/^#{Compass.configuration.images_dir}\\//, '')\n-        name = Compass::SpriteImporter.sprite_name(relative_uri)\n-        sprites = Compass::SpriteImporter.new\n+        name = Compass::Sprites::Importer.sprite_name(relative_uri)\n+        sprites = Compass::Sprites::Importer.new",
        "path": "cli/lib/compass/commands/sprite.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "what is this object for?\n",
        "created_at": "2014-09-24T17:06:17Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r17984835",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/17984835"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r17984835"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/17984897",
        "pull_request_review_id": null,
        "id": 17984897,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg0ODk3",
        "diff_hunk": "@@ -2,8 +2,9 @@\n   raise LoadError, \"It looks like you've got an incompatible version of Sass. This often happens when you have an old haml gem installed. Please upgrade Haml to v3.1 or above.\"\n end\n \n-module Compass::SassExtensions\n+module Compass\n+  module SassExtensions\n+  end\n end",
        "path": "cli/lib/compass/sass_extensions.rb",
        "position": null,
        "original_position": 8,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "ef9e3e5a9cccf763828d541fd904cb8d51e5ee46",
        "user": {
            "login": "chriseppstein",
            "id": 1839,
            "node_id": "MDQ6VXNlcjE4Mzk=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriseppstein",
            "html_url": "https://github.com/chriseppstein",
            "followers_url": "https://api.github.com/users/chriseppstein/followers",
            "following_url": "https://api.github.com/users/chriseppstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriseppstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriseppstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriseppstein/subscriptions",
            "organizations_url": "https://api.github.com/users/chriseppstein/orgs",
            "repos_url": "https://api.github.com/users/chriseppstein/repos",
            "events_url": "https://api.github.com/users/chriseppstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriseppstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why do we need to expand the module definitions here? Didn't we already `require 'compass'`?\n",
        "created_at": "2014-09-24T17:07:12Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r17984897",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/17984897"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r17984897"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/Compass/compass/pulls/comments/17986419",
        "pull_request_review_id": null,
        "id": 17986419,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg2NDE5",
        "diff_hunk": "@@ -39,11 +39,11 @@ def initialize(working_path, options)\n \n       def perform\n         relative_uri = options[:uri].gsub(/^#{Compass.configuration.images_dir}\\//, '')\n-        name = Compass::SpriteImporter.sprite_name(relative_uri)\n-        sprites = Compass::SpriteImporter.new\n+        name = Compass::Sprites::Importer.sprite_name(relative_uri)\n+        sprites = Compass::Sprites::Importer.new",
        "path": "cli/lib/compass/commands/sprite.rb",
        "position": null,
        "original_position": 7,
        "commit_id": "e9523d0aec40128120a96d4aa4b5f875b1680c43",
        "original_commit_id": "9aa5706d7d16c01f4fb5db692c2e5d2b73f742e2",
        "user": {
            "login": "scottdavis",
            "id": 11871,
            "node_id": "MDQ6VXNlcjExODcx",
            "avatar_url": "https://avatars0.githubusercontent.com/u/11871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scottdavis",
            "html_url": "https://github.com/scottdavis",
            "followers_url": "https://api.github.com/users/scottdavis/followers",
            "following_url": "https://api.github.com/users/scottdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/scottdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scottdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scottdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/scottdavis/orgs",
            "repos_url": "https://api.github.com/users/scottdavis/repos",
            "events_url": "https://api.github.com/users/scottdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scottdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no idea looks like it was caught in the global rename macro i ran\n",
        "created_at": "2014-09-24T17:29:43Z",
        "updated_at": "2014-10-11T02:45:51Z",
        "html_url": "https://github.com/Compass/compass/pull/1771#discussion_r17986419",
        "pull_request_url": "https://api.github.com/repos/Compass/compass/pulls/1771",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/comments/17986419"
            },
            "html": {
                "href": "https://github.com/Compass/compass/pull/1771#discussion_r17986419"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/Compass/compass/pulls/1771"
            }
        }
    }
]