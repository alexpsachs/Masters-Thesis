[
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939210",
        "pull_request_review_id": null,
        "id": 37939210,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjEw",
        "diff_hunk": "@@ -1 +1,21 @@\n # velocity-react\n+\n+[React](http://facebook.github.io/react/) components for interacting with the\n+[Velocity](http://julian.com/research/velocity/) animation library.",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Might be worth describing Velocity as a \"DOM animation library,\" vs. pure JS or iOS.\n",
        "created_at": "2015-08-26T01:35:06Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939210",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939210"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939210"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939214",
        "pull_request_review_id": null,
        "id": 37939214,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjE0",
        "diff_hunk": "@@ -0,0 +1,48 @@\n+var React = require('react');\n+var VelocityComponent = require('../lib/velocity-component');\n+\n+require('velocity-animate/velocity.ui');\n+\n+var MainComponent = React.createClass({\n+  getInitialState: function () {\n+    return {\n+      fadeInOut: 'transition.bounceIn',\n+    };\n+  },\n+\n+  whenFadeInOutClicked: function () {\n+    this.setState({\n+      fadeInOut: (this.state.fadeInOut === 'transition.bounceIn') ? 'transition.bounceOut' : 'transition.bounceIn',\n+    });\n+  },\n+\n+  render: function () {\n+    return React.DOM.div({}, this.renderFadeInOut());\n+  },\n+\n+  renderFadeInOut: function () {\n+    var holderStyle = {\n+      width: 130,\n+      lineHeight: 2,\n+      textAlign: 'center',\n+    };\n+\n+    var boxStyle = {\n+      height: 130,\n+      lineHeight: '100px',",
        "path": "demo/main.jsx",
        "position": null,
        "original_position": 32,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this doing anything?\n",
        "created_at": "2015-08-26T01:35:11Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939214",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939214"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939214"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939218",
        "pull_request_review_id": null,
        "id": 37939218,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjE4",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 5,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd throw an example for the simplest use case up front here too.\n",
        "created_at": "2015-08-26T01:35:14Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939218",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939218"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939218"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939226",
        "pull_request_review_id": null,
        "id": 37939226,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjI2",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 6,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"If that property changes, _it_ applies the new animation to the child _starting on the next tick_\"?\n",
        "created_at": "2015-08-26T01:35:26Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939226",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939226"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939226"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939229",
        "pull_request_review_id": null,
        "id": 37939229,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjI5",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 23,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`querySelectorAll`\n\nAlso, just learned the other day that it behaves differently than I expected, selectors aren't rooted from the element it's called on: `http://ejohn.org/blog/thoughts-on-queryselectorall/`  Might be worth considering calling this param `querySelectorAll` to make explicit that's the algorithm versus a proper CSS selector or `$.find`.\n",
        "created_at": "2015-08-26T01:35:30Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939229",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939229"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939229"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939236",
        "pull_request_review_id": null,
        "id": 37939236,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjM2",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 78,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Might be worth considering renaming this `runAnimation` since it doesn't take params with the same API like the familiar `$.animate` or `Velocity.animate` methods.\n",
        "created_at": "2015-08-26T01:35:45Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939236",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939236"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939236"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939238",
        "pull_request_review_id": null,
        "id": 37939238,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjM4",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {\n+    this._runAnimation()\n+  },\n+\n+\n+  // We trigger animations on a new tick because of a Velocity bug where adding a\n+  // multi-step animation from within a complete callback causes the first 2 animations to run\n+  // simultaneously.\n+  _scheduleAnimation: function () {\n+    if (this._shouldRunAnimation) {\n+      return;\n+    }\n+\n+    this._shouldRunAnimation = true;\n+    setTimeout(this._runAnimation, 0);\n+  },\n+\n+  // Returns one or more DOM nodes to apply the animation to. This is checked every time we start\n+  // or stop an animation, which means that if an animation is proceeding but the element is removed\n+  // from the page, it will run its course rather than ever being stopped. (We go this route\n+  // because of difficulty in tracking what animations are currently being animated, due to both\n+  // chained animations and the need to be able to \"stop\" an animation before it begins.)\n+  _getDOMTarget: function () {\n+    var node = React.findDOMNode(this);\n+\n+    if (this.props.targetSelector === 'children') {\n+      return node.children;\n+    } else if (this.props.targetSelector != null) {\n+      return node.querySelectorAll(this.props.targetSelector);\n+    } else {\n+      return node;\n+    }\n+  },\n+\n+  _runAnimation: function () {\n+    this._shouldRunAnimation = false;\n+\n+    if (!this.isMounted()) {\n+      return;\n+    }\n+\n+    if (this.props.animation != null) {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 119,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You could abort early if null here if you're into that.\n",
        "created_at": "2015-08-26T01:35:48Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939238",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939238"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939238"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939239",
        "pull_request_review_id": null,
        "id": 37939239,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjM5",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {\n+    this._runAnimation()\n+  },\n+\n+\n+  // We trigger animations on a new tick because of a Velocity bug where adding a\n+  // multi-step animation from within a complete callback causes the first 2 animations to run\n+  // simultaneously.\n+  _scheduleAnimation: function () {\n+    if (this._shouldRunAnimation) {\n+      return;\n+    }\n+\n+    this._shouldRunAnimation = true;\n+    setTimeout(this._runAnimation, 0);\n+  },\n+\n+  // Returns one or more DOM nodes to apply the animation to. This is checked every time we start\n+  // or stop an animation, which means that if an animation is proceeding but the element is removed\n+  // from the page, it will run its course rather than ever being stopped. (We go this route\n+  // because of difficulty in tracking what animations are currently being animated, due to both\n+  // chained animations and the need to be able to \"stop\" an animation before it begins.)\n+  _getDOMTarget: function () {\n+    var node = React.findDOMNode(this);\n+\n+    if (this.props.targetSelector === 'children') {\n+      return node.children;\n+    } else if (this.props.targetSelector != null) {\n+      return node.querySelectorAll(this.props.targetSelector);\n+    } else {\n+      return node;\n+    }\n+  },\n+\n+  _runAnimation: function () {\n+    this._shouldRunAnimation = false;\n+\n+    if (!this.isMounted()) {\n+      return;\n+    }\n+\n+    if (this.props.animation != null) {\n+      // Delegate all props except for the ones that we have specified as our own via propTypes.\n+      // Also, we omit 'children', which isn't sensible to pass along.\n+      var opts = _.omit(this.props, 'children', _.keys(this.constructor.propTypes));\n+      velocity(this._getDOMTarget(), this.props.animation, opts);\n+    }\n+  },\n+\n+  _finishAnimation: function () {\n+    velocity(this._getDOMTarget(), 'finishAll', true);\n+  },\n+\n+  _stopAnimation: function () {\n+    velocity(this._getDOMTarget(), 'stop', true);\n+  },\n+\n+  // This component does not include any DOM footprint of its own, so instead we return our\n+  // child out of render(). (Render must only return a single element, which restricts us to\n+  // one child. If you want to animate multiple children, provide your own wrapper element and\n+  // use the \"targetSelector\" prop to target its children.)\n+  render: function () {\n+    if (React.Children.count(this.props.children) > 1) {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 140,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I think we can use a `propType` to have React enforce this for us: https://facebook.github.io/react/docs/reusable-components.html#single-child\n",
        "created_at": "2015-08-26T01:35:50Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939239",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37939239"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37939239"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990517",
        "pull_request_review_id": null,
        "id": 37990517,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwNTE3",
        "diff_hunk": "@@ -1 +1,21 @@\n # velocity-react\n+\n+[React](http://facebook.github.io/react/) components for interacting with the\n+[Velocity](http://julian.com/research/velocity/) animation library.",
        "path": "README.md",
        "position": null,
        "original_position": 4,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Crazy JavaScript showing up in other places.\n",
        "created_at": "2015-08-26T14:46:43Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990517",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990517"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990517"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990584",
        "pull_request_review_id": null,
        "id": 37990584,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwNTg0",
        "diff_hunk": "@@ -0,0 +1,48 @@\n+var React = require('react');\n+var VelocityComponent = require('../lib/velocity-component');\n+\n+require('velocity-animate/velocity.ui');\n+\n+var MainComponent = React.createClass({\n+  getInitialState: function () {\n+    return {\n+      fadeInOut: 'transition.bounceIn',\n+    };\n+  },\n+\n+  whenFadeInOutClicked: function () {\n+    this.setState({\n+      fadeInOut: (this.state.fadeInOut === 'transition.bounceIn') ? 'transition.bounceOut' : 'transition.bounceIn',\n+    });\n+  },\n+\n+  render: function () {\n+    return React.DOM.div({}, this.renderFadeInOut());\n+  },\n+\n+  renderFadeInOut: function () {\n+    var holderStyle = {\n+      width: 130,\n+      lineHeight: 2,\n+      textAlign: 'center',\n+    };\n+\n+    var boxStyle = {\n+      height: 130,\n+      lineHeight: '100px',",
        "path": "demo/main.jsx",
        "position": null,
        "original_position": 32,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "removed\n",
        "created_at": "2015-08-26T14:47:16Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990584",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990584"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990584"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990653",
        "pull_request_review_id": null,
        "id": 37990653,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwNjUz",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 5,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Should this all mostly get moved to the README?\n",
        "created_at": "2015-08-26T14:47:51Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990653",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990653"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990653"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990718",
        "pull_request_review_id": null,
        "id": 37990718,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwNzE4",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 6,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2015-08-26T14:48:26Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990718",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37990718"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37990718"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991184",
        "pull_request_review_id": null,
        "id": 37991184,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMTg0",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 23,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "How about `targetSelectorQuery`?\n",
        "created_at": "2015-08-26T14:52:13Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991184",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991184"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991184"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991254",
        "pull_request_review_id": null,
        "id": 37991254,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjU0",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 78,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "OK, and can rename `_runAnimation` below to `_doAnimation`\n",
        "created_at": "2015-08-26T14:52:50Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991254",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991254"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991254"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991272",
        "pull_request_review_id": null,
        "id": 37991272,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjcy",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {\n+    this._runAnimation()\n+  },\n+\n+\n+  // We trigger animations on a new tick because of a Velocity bug where adding a\n+  // multi-step animation from within a complete callback causes the first 2 animations to run\n+  // simultaneously.\n+  _scheduleAnimation: function () {\n+    if (this._shouldRunAnimation) {\n+      return;\n+    }\n+\n+    this._shouldRunAnimation = true;\n+    setTimeout(this._runAnimation, 0);\n+  },\n+\n+  // Returns one or more DOM nodes to apply the animation to. This is checked every time we start\n+  // or stop an animation, which means that if an animation is proceeding but the element is removed\n+  // from the page, it will run its course rather than ever being stopped. (We go this route\n+  // because of difficulty in tracking what animations are currently being animated, due to both\n+  // chained animations and the need to be able to \"stop\" an animation before it begins.)\n+  _getDOMTarget: function () {\n+    var node = React.findDOMNode(this);\n+\n+    if (this.props.targetSelector === 'children') {\n+      return node.children;\n+    } else if (this.props.targetSelector != null) {\n+      return node.querySelectorAll(this.props.targetSelector);\n+    } else {\n+      return node;\n+    }\n+  },\n+\n+  _runAnimation: function () {\n+    this._shouldRunAnimation = false;\n+\n+    if (!this.isMounted()) {\n+      return;\n+    }\n+\n+    if (this.props.animation != null) {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 119,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2015-08-26T14:52:58Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991272",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991272"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991272"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991280",
        "pull_request_review_id": null,
        "id": 37991280,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMjgw",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 23,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-08-26T14:53:01Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991280",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991280"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991280"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991531",
        "pull_request_review_id": null,
        "id": 37991531,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxNTMx",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 78,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually, just put the `_doAnimation` implementation up here. Can factor it back out if necessary later.\n",
        "created_at": "2015-08-26T14:55:03Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991531",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991531"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991531"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991957",
        "pull_request_review_id": null,
        "id": 37991957,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxOTU3",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {\n+    this._runAnimation()\n+  },\n+\n+\n+  // We trigger animations on a new tick because of a Velocity bug where adding a\n+  // multi-step animation from within a complete callback causes the first 2 animations to run\n+  // simultaneously.\n+  _scheduleAnimation: function () {\n+    if (this._shouldRunAnimation) {\n+      return;\n+    }\n+\n+    this._shouldRunAnimation = true;\n+    setTimeout(this._runAnimation, 0);\n+  },\n+\n+  // Returns one or more DOM nodes to apply the animation to. This is checked every time we start\n+  // or stop an animation, which means that if an animation is proceeding but the element is removed\n+  // from the page, it will run its course rather than ever being stopped. (We go this route\n+  // because of difficulty in tracking what animations are currently being animated, due to both\n+  // chained animations and the need to be able to \"stop\" an animation before it begins.)\n+  _getDOMTarget: function () {\n+    var node = React.findDOMNode(this);\n+\n+    if (this.props.targetSelector === 'children') {\n+      return node.children;\n+    } else if (this.props.targetSelector != null) {\n+      return node.querySelectorAll(this.props.targetSelector);\n+    } else {\n+      return node;\n+    }\n+  },\n+\n+  _runAnimation: function () {\n+    this._shouldRunAnimation = false;\n+\n+    if (!this.isMounted()) {\n+      return;\n+    }\n+\n+    if (this.props.animation != null) {\n+      // Delegate all props except for the ones that we have specified as our own via propTypes.\n+      // Also, we omit 'children', which isn't sensible to pass along.\n+      var opts = _.omit(this.props, 'children', _.keys(this.constructor.propTypes));\n+      velocity(this._getDOMTarget(), this.props.animation, opts);\n+    }\n+  },\n+\n+  _finishAnimation: function () {\n+    velocity(this._getDOMTarget(), 'finishAll', true);\n+  },\n+\n+  _stopAnimation: function () {\n+    velocity(this._getDOMTarget(), 'stop', true);\n+  },\n+\n+  // This component does not include any DOM footprint of its own, so instead we return our\n+  // child out of render(). (Render must only return a single element, which restricts us to\n+  // one child. If you want to animate multiple children, provide your own wrapper element and\n+  // use the \"targetSelector\" prop to target its children.)\n+  render: function () {\n+    if (React.Children.count(this.props.children) > 1) {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 140,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cool, done. Also cleans up the `prop` omitting line above.\n",
        "created_at": "2015-08-26T14:58:28Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991957",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37991957"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37991957"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37993663",
        "pull_request_review_id": null,
        "id": 37993663,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNjYz",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 5,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I'd keep the README focused on \"I want to use this but am about to lose my attention and go look at Twitter so show me how to do cool things I can copy-paste with example GIFs next to them if you don't within 15 seconds I will have to go satisfy my pull-to-refresh addiction\" :)\n",
        "created_at": "2015-08-26T15:11:01Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37993663",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37993663"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37993663"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37993785",
        "pull_request_review_id": null,
        "id": 37993785,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNzg1",
        "diff_hunk": "@@ -0,0 +1,148 @@\n+/*\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+The API attempts to be as declarative as possible. A single animation property declares what\n+animation the child should have. If that property changes, applies the new animation to the\n+child.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's \"finish\"\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+Properties:\n+ animation: Either an animation key or hash defining the animation. See Velocity's documentation\n+   for what this can be. (It is passed to Velocity exactly.)\n+ runOnMount: If true, runs the animation even when the component is first mounted.\n+ targetSelector: By default, this component's single child is animated. If targetSelector is\n+   provided, it is used to select descendants to apply the animation to. Use with caution, only\n+   when you're confident that React's reconcilliation will preserve these nodes during animation.\n+   A special value of \"children\" will use the direct children of the node, since there isn't a\n+   great way to specify that to getQuerySelectorAll.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. \"duration\", \"delay\", \"loop\").\n+\n+Methods:\n+ animate: Triggers the animation immediately. Useful for when you want an animation that\n+   corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+   occurs).\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react');\n+var velocity = require('velocity-animate');\n+\n+var VelocityComponent = React.createClass({\n+  displayName: 'VelocityComponent',\n+\n+  propTypes: {\n+    animation: React.PropTypes.any,\n+    runOnMount: React.PropTypes.bool,\n+    targetSelector: React.PropTypes.string,\n+    // Any additional properties will be sent as options to Velocity\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      animation: null,\n+      runOnMount: false,\n+      targetSelector: null,\n+    }\n+  },\n+\n+  componentDidMount: function () {\n+    this._runAnimation();\n+\n+    // Jump to the end so that the component has the visual appearance of the animation having\n+    // been run to completion.\n+    if (this.props.runOnMount !== true) {\n+      this._finishAnimation();\n+    }\n+  },\n+\n+  componentWillUpdate: function (newProps, newState) {\n+    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+      this._stopAnimation();\n+      this._scheduleAnimation();\n+    }\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._stopAnimation();\n+  },\n+\n+  // It's ok to call this externally! We just \"run\" here rather than stopping so that this\n+  // animation will chain after any that is currently running.\n+  animate: function () {",
        "path": "lib/velocity-component.js",
        "position": null,
        "original_position": 78,
        "commit_id": "338ff63fbfeff614ae83428c11f0889f6348a05e",
        "original_commit_id": "7cf58d84d4e716a43ee0ebc774ec68725c9df0a5",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nice, even better!\n",
        "created_at": "2015-08-26T15:11:52Z",
        "updated_at": "2015-08-26T15:18:19Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37993785",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/37993785"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/1#discussion_r37993785"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/1"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200354",
        "pull_request_review_id": null,
        "id": 38200354,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwMzU0",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+var React = require('react');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+\n+var Box = require('./box');\n+var EmojiSpan = require('./emoji-span');\n+\n+var CATS = ['\ud83d\ude38', '\ud83d\ude39', '\ud83d\ude3a', '\ud83d\ude3b', '\ud83d\ude3c', '\ud83d\ude3d', '\ud83d\ude3e', '\ud83d\ude3f', '\ud83d\ude40'];\n+var FOODS = ['\ud83c\udf45', '\ud83c\udf46', '\ud83c\udf47', '\ud83c\udf48', '\ud83c\udf49', '\ud83c\udf4a', '\ud83c\udf4c', '\ud83c\udf4d', '\ud83c\udf4e', '\ud83c\udf4f', '\ud83c\udf51', '\ud83c\udf52', '\ud83c\udf53', '\ud83c\udf54', '\ud83c\udf55', '\ud83c\udf56', '\ud83c\udf57'];\n+\n+\n+var Animations = {\n+  // Register these with UI Pack so that we can use stagger later.\n+  In: VelocityTransitionGroup.registerEffect({\n+    calls: [\n+      [{\n+        transformPerspective: [ 800, 800 ],\n+        transformOriginX: [ '50%', '50%' ],\n+        transformOriginY: [ '100%', '100%' ],\n+        marginBottom: 0,\n+        opacity: 1,\n+        rotateX: [0, 130],\n+      }, 1, {\n+        easing: 'ease-out',\n+        display: 'block',\n+      }]\n+    ],\n+  }),\n+\n+  Out: VelocityTransitionGroup.registerEffect({\n+    calls: [\n+      [{\n+        transformPerspective: [ 800, 800 ],\n+        transformOriginX: [ '50%', '50%' ],\n+        transformOriginY: [ '0%', '0%' ],\n+        marginBottom: -30,\n+        opacity: 0,\n+        rotateX: -70,\n+      }, 1, {\n+        easing: 'ease-out',\n+        display: 'block',\n+      }]\n+    ],\n+  }),\n+};\n+\n+var ScrollingGroup = React.createClass({\n+  displayName: 'ScrollingGroup',\n+\n+  getInitialState: function () {\n+    return {\n+      itemCount: 0,\n+      items: [],\n+      duration: 500,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this.whenAddButtonClicked();\n+  },\n+\n+  whenAddButtonClicked: function () {\n+    this.addRows(1);\n+  },\n+\n+  whenAdd5ButtonClicked: function () {\n+    this.addRows(5);\n+  },\n+\n+  whenOptionClicked: function (event) {\n+    this.setState({ duration: parseInt(event.target.value) });\n+  },\n+\n+  addRows: function (count) {\n+    var items = this.state.items;\n+\n+    for (var i = 0; i < count; ++i) {\n+      var item = {\n+        title: [_.sample(CATS)].concat(_.sample(FOODS, _.random(1, 4))).join(' '),\n+        i: this.state.itemCount + i,\n+      };\n+\n+      items = [item].concat(items);\n+    }\n+\n+    this.setState({\n+      items: items.slice(0, 6),\n+      itemCount: this.state.itemCount + count,\n+    });\n+  },\n+\n+  render: function () {\n+    var rows = this.state.items.map(function (item, i, arr) {\n+      var itemStyle = {\n+        width: 150,\n+        padding: '0 10px',\n+        lineHeight: '30px',\n+        backgroundColor: (item.i % 2 == 0) ? Box.COLORS.backColor : Box.COLORS.underneathColor,\n+      };\n+\n+      return (<div key={item.i} style={itemStyle}><EmojiSpan>{item.title}</EmojiSpan></div>);\n+    });\n+\n+    var groupStyle = {\n+      margin: '10px 0',\n+    };\n+\n+    var enterAnimation = {\n+      animation: Animations.In,\n+      stagger: this.state.duration,\n+      duration: this.state.duration,\n+      backwards: true,\n+      display: 'block',\n+      style: {\n+        // Since we're staggering, we want to keep the display at \"none\" until Velocity runs\n+        // the display attribute at the start of the animation.\n+        display: 'none',\n+      },\n+    };\n+\n+    var leaveAnimation = {\n+      animation: Animations.Out,\n+      stagger: this.state.duration,\n+      duration: this.state.duration,\n+      backwards: true,\n+    };\n+\n+    return (\n+      <div className=\"flex-box flex-1 flex-column align-items-center\">\n+        <div>\n+          <button onClick={this.whenAddButtonClicked}>Add Row</button>\n+          <button onClick={this.whenAdd5ButtonClicked}>Add 5 Rows</button>\n+        </div>\n+\n+        <VelocityTransitionGroup component=\"div\" className=\"flex-1\" style={groupStyle} enter={enterAnimation} leave={leaveAnimation}>",
        "path": "demo/components/scrolling-group.jsx",
        "position": null,
        "original_position": 134,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Will `VelocityTransitionGroup` respect changes in the enter and leave animations during animating?  I don't think that use case matters, just clarifying from reading the comments below.\n\nMy read is that it reads the props lazily, and so if there were a state change here and the updated `enter` prop flowed down, `VelocityTransitionGroup` would read it on the next tick, which could get interleaved if you were tweening `duration` in the animation option for example.\n\nThis is probably all totally irrelevant too, just related to suggesting a small word change below. :)\n",
        "created_at": "2015-08-28T13:43:50Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200354",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200354"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200354"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200470",
        "pull_request_review_id": null,
        "id": 38200470,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNDcw",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 5,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Nitpick, maybe `define` instead of `control`, since I think it might make sense for the enter animation to be swapped, but they're mostly static.\n",
        "created_at": "2015-08-28T13:45:06Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200470",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200470"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200470"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200601",
        "pull_request_review_id": null,
        "id": 38200601,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNjAx",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 32,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Great explanation!  Might be good to note this isn't used for actually performing animations either, just for scheduling.\n",
        "created_at": "2015-08-28T13:46:30Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200601",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200601"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200601"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200656",
        "pull_request_review_id": null,
        "id": 38200656,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNjU2",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 45,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`children` propType?\n",
        "created_at": "2015-08-28T13:47:12Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200656",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200656"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200656"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200692",
        "pull_request_review_id": null,
        "id": 38200692,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNjky",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 37,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"Internal wrapper\" mayhaps\n",
        "created_at": "2015-08-28T13:47:43Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200692",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200692"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200692"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200760",
        "pull_request_review_id": null,
        "id": 38200760,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNzYw",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 17,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The `disabledForTest` static is super handy, I'd call it out somewhere up here too.\n",
        "created_at": "2015-08-28T13:48:23Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200760",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200760"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200760"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200958",
        "pull_request_review_id": null,
        "id": 38200958,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwOTU4",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 99,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I know this isn't the usual style, but might help readers to put `render` up here, since it's not clear what any of these methods are for until you see how render works.\n",
        "created_at": "2015-08-28T13:50:17Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200958",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38200958"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38200958"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201080",
        "pull_request_review_id": null,
        "id": 38201080,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxMDgw",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.",
        "path": "lib/velocity-transition-group.js",
        "position": 123,
        "original_position": 108,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Really great comments.\n",
        "created_at": "2015-08-28T13:51:19Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201080",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201080"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201080"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201170",
        "pull_request_review_id": null,
        "id": 38201170,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxMTcw",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 122,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-08-28T13:52:07Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201170",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201170"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201170"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201328",
        "pull_request_review_id": null,
        "id": 38201328,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxMzI4",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n+    // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n+    // symmetry.\n+    this._finishAnimation(node, this.props.leave);\n+\n+    // We're not going to start the animation for a tick, so set the node's display to none so that\n+    // it doesn't flash in.\n+    Velocity.CSS.setPropertyValue(node, 'display', 'none');\n+\n+    this._entering.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  childWillLeave: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 147,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Could pull this check out into a method that takes the leave/enter animation, since it's similar between here and `childWillEnter` and isolates the document.hidden bit to one place.\n",
        "created_at": "2015-08-28T13:53:47Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201328",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201328"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201328"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201452",
        "pull_request_review_id": null,
        "id": 38201452,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxNDUy",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n+    // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n+    // symmetry.\n+    this._finishAnimation(node, this.props.leave);\n+\n+    // We're not going to start the animation for a tick, so set the node's display to none so that\n+    // it doesn't flash in.\n+    Velocity.CSS.setPropertyValue(node, 'display', 'none');\n+\n+    this._entering.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  childWillLeave: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.leave).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    this._leaving.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  _schedule: function () {\n+    if (this._scheduled) {\n+      return;\n+    }\n+\n+    this._scheduled = true;\n+\n+    // Need rAF to make sure we're in the same event queue as Velocity from here out. Important\n+    // for avoiding getting wrong interleaving with Velocity callbacks.",
        "path": "lib/velocity-transition-group.js",
        "position": 192,
        "original_position": 173,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "![image](https://cloud.githubusercontent.com/assets/1056957/9547802/d4ddb832-4d6a-11e5-9db2-1e1f1696738d.png)\n",
        "created_at": "2015-08-28T13:54:54Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201452",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201452"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201452"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201525",
        "pull_request_review_id": null,
        "id": 38201525,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxNTI1",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n+    // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n+    // symmetry.\n+    this._finishAnimation(node, this.props.leave);\n+\n+    // We're not going to start the animation for a tick, so set the node's display to none so that\n+    // it doesn't flash in.\n+    Velocity.CSS.setPropertyValue(node, 'display', 'none');\n+\n+    this._entering.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  childWillLeave: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.leave).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    this._leaving.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  _schedule: function () {\n+    if (this._scheduled) {\n+      return;\n+    }\n+\n+    this._scheduled = true;\n+\n+    // Need rAF to make sure we're in the same event queue as Velocity from here out. Important\n+    // for avoiding getting wrong interleaving with Velocity callbacks.\n+    window.requestAnimationFrame(this._runAnimations);\n+  },\n+\n+  _runAnimations: function () {\n+    this._scheduled = false;\n+\n+    this._runAnimation(true, this._entering, this.props.enter);\n+    this._runAnimation(false, this._leaving, this.props.leave);\n+\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  // Used to parse out the 'enter' and 'leave' properties. Handles cases where they are omitted\n+  // as well as when they are just strings and not hashes of animation and options.\n+  _parseAnimationProp: function (animationProp) {\n+    var animation, opts, style;\n+\n+    if (typeof animationProp === 'string') {\n+      animation = animationProp;\n+      style = null;\n+      opts = {};\n+    } else {\n+      animation = (animationProp != null) ? animationProp.animation : null;\n+      style = (animationProp != null) ? animationProp.style : null;\n+      opts = _.omit(animationProp, 'animation', 'style');\n+    }\n+\n+    return {\n+      animation: animation,\n+      style: style,\n+      opts: opts,\n+    };\n+  },\n+\n+  _runAnimation: function (entering, queue, animationProp) {\n+    if (!this.isMounted() || queue.length == 0) {",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 210,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`===` for rigor's sake\n",
        "created_at": "2015-08-28T13:55:35Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201525",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201525"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201525"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201790",
        "pull_request_review_id": null,
        "id": 38201790,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxNzkw",
        "diff_hunk": "@@ -0,0 +1,23 @@\n+var _ = require('lodash');\n+var Velocity = require('velocity-animate');\n+require('velocity-animate/velocity.ui');\n+\n+var effectCounter = 0\n+\n+// Takes a Velocity \"UI pack effect\" definition and registers it with a unique key,\n+// returning that key (to later pass as a value for the \"animation\" property). Takes\n+// an optional suffix, which can be \"In\" or \"Out\" to modify UI Pack's behavior.\n+function registerEffect(suffix, animation) {",
        "path": "lib/velocity-helpers.js",
        "position": null,
        "original_position": 10,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This could use a oneline example.\n",
        "created_at": "2015-08-28T13:58:01Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201790",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201790"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201790"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201956",
        "pull_request_review_id": null,
        "id": 38201956,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxOTU2",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+var React = require('react');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+\n+var Box = require('./box');\n+var EmojiSpan = require('./emoji-span');\n+\n+var CATS = ['\ud83d\ude38', '\ud83d\ude39', '\ud83d\ude3a', '\ud83d\ude3b', '\ud83d\ude3c', '\ud83d\ude3d', '\ud83d\ude3e', '\ud83d\ude3f', '\ud83d\ude40'];\n+var FOODS = ['\ud83c\udf45', '\ud83c\udf46', '\ud83c\udf47', '\ud83c\udf48', '\ud83c\udf49', '\ud83c\udf4a', '\ud83c\udf4c', '\ud83c\udf4d', '\ud83c\udf4e', '\ud83c\udf4f', '\ud83c\udf51', '\ud83c\udf52', '\ud83c\udf53', '\ud83c\udf54', '\ud83c\udf55', '\ud83c\udf56', '\ud83c\udf57'];\n+\n+\n+var Animations = {",
        "path": "demo/components/scrolling-group.jsx",
        "position": null,
        "original_position": 11,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It might useful to split out the definition of animations from their use in the example (or maybe just in the README).  One of the strengths here is how library-able defining animations is, and the re-use of Velocity's awesome effects that this approach enables.\n",
        "created_at": "2015-08-28T13:59:24Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201956",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38201956"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38201956"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38231931",
        "pull_request_review_id": null,
        "id": 38231931,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxOTMx",
        "diff_hunk": "@@ -0,0 +1,23 @@\n+var _ = require('lodash');\n+var Velocity = require('velocity-animate');\n+require('velocity-animate/velocity.ui');\n+\n+var effectCounter = 0\n+\n+// Takes a Velocity \"UI pack effect\" definition and registers it with a unique key,\n+// returning that key (to later pass as a value for the \"animation\" property). Takes\n+// an optional suffix, which can be \"In\" or \"Out\" to modify UI Pack's behavior.\n+function registerEffect(suffix, animation) {",
        "path": "lib/velocity-helpers.js",
        "position": null,
        "original_position": 10,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done. It's like 20 lines but it shows why it's important.\n",
        "created_at": "2015-08-28T18:52:42Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38231931",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38231931"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38231931"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38233100",
        "pull_request_review_id": null,
        "id": 38233100,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMzMTAw",
        "diff_hunk": "@@ -0,0 +1,23 @@\n+var _ = require('lodash');\n+var Velocity = require('velocity-animate');\n+require('velocity-animate/velocity.ui');\n+\n+var effectCounter = 0\n+\n+// Takes a Velocity \"UI pack effect\" definition and registers it with a unique key,\n+// returning that key (to later pass as a value for the \"animation\" property). Takes\n+// an optional suffix, which can be \"In\" or \"Out\" to modify UI Pack's behavior.\n+function registerEffect(suffix, animation) {",
        "path": "lib/velocity-helpers.js",
        "position": null,
        "original_position": 10,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Also removed this function from the `statics` of the components, since `require` makes it straightforward to do.\n",
        "created_at": "2015-08-28T19:04:12Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38233100",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38233100"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38233100"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352178",
        "pull_request_review_id": null,
        "id": 38352178,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyMTc4",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+var React = require('react');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+\n+var Box = require('./box');\n+var EmojiSpan = require('./emoji-span');\n+\n+var CATS = ['\ud83d\ude38', '\ud83d\ude39', '\ud83d\ude3a', '\ud83d\ude3b', '\ud83d\ude3c', '\ud83d\ude3d', '\ud83d\ude3e', '\ud83d\ude3f', '\ud83d\ude40'];\n+var FOODS = ['\ud83c\udf45', '\ud83c\udf46', '\ud83c\udf47', '\ud83c\udf48', '\ud83c\udf49', '\ud83c\udf4a', '\ud83c\udf4c', '\ud83c\udf4d', '\ud83c\udf4e', '\ud83c\udf4f', '\ud83c\udf51', '\ud83c\udf52', '\ud83c\udf53', '\ud83c\udf54', '\ud83c\udf55', '\ud83c\udf56', '\ud83c\udf57'];\n+\n+\n+var Animations = {",
        "path": "demo/components/scrolling-group.jsx",
        "position": null,
        "original_position": 11,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Interesting point. Hopefully putting this as a top-level constant gets that across, since the flip-side is the React thing about keeping everything you need in one file. :)\n",
        "created_at": "2015-08-31T19:56:45Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352178",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352178"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352178"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352331",
        "pull_request_review_id": null,
        "id": 38352331,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyMzMx",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+var React = require('react');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+\n+var Box = require('./box');\n+var EmojiSpan = require('./emoji-span');\n+\n+var CATS = ['\ud83d\ude38', '\ud83d\ude39', '\ud83d\ude3a', '\ud83d\ude3b', '\ud83d\ude3c', '\ud83d\ude3d', '\ud83d\ude3e', '\ud83d\ude3f', '\ud83d\ude40'];\n+var FOODS = ['\ud83c\udf45', '\ud83c\udf46', '\ud83c\udf47', '\ud83c\udf48', '\ud83c\udf49', '\ud83c\udf4a', '\ud83c\udf4c', '\ud83c\udf4d', '\ud83c\udf4e', '\ud83c\udf4f', '\ud83c\udf51', '\ud83c\udf52', '\ud83c\udf53', '\ud83c\udf54', '\ud83c\udf55', '\ud83c\udf56', '\ud83c\udf57'];\n+\n+\n+var Animations = {\n+  // Register these with UI Pack so that we can use stagger later.\n+  In: VelocityTransitionGroup.registerEffect({\n+    calls: [\n+      [{\n+        transformPerspective: [ 800, 800 ],\n+        transformOriginX: [ '50%', '50%' ],\n+        transformOriginY: [ '100%', '100%' ],\n+        marginBottom: 0,\n+        opacity: 1,\n+        rotateX: [0, 130],\n+      }, 1, {\n+        easing: 'ease-out',\n+        display: 'block',\n+      }]\n+    ],\n+  }),\n+\n+  Out: VelocityTransitionGroup.registerEffect({\n+    calls: [\n+      [{\n+        transformPerspective: [ 800, 800 ],\n+        transformOriginX: [ '50%', '50%' ],\n+        transformOriginY: [ '0%', '0%' ],\n+        marginBottom: -30,\n+        opacity: 0,\n+        rotateX: -70,\n+      }, 1, {\n+        easing: 'ease-out',\n+        display: 'block',\n+      }]\n+    ],\n+  }),\n+};\n+\n+var ScrollingGroup = React.createClass({\n+  displayName: 'ScrollingGroup',\n+\n+  getInitialState: function () {\n+    return {\n+      itemCount: 0,\n+      items: [],\n+      duration: 500,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this.whenAddButtonClicked();\n+  },\n+\n+  whenAddButtonClicked: function () {\n+    this.addRows(1);\n+  },\n+\n+  whenAdd5ButtonClicked: function () {\n+    this.addRows(5);\n+  },\n+\n+  whenOptionClicked: function (event) {\n+    this.setState({ duration: parseInt(event.target.value) });\n+  },\n+\n+  addRows: function (count) {\n+    var items = this.state.items;\n+\n+    for (var i = 0; i < count; ++i) {\n+      var item = {\n+        title: [_.sample(CATS)].concat(_.sample(FOODS, _.random(1, 4))).join(' '),\n+        i: this.state.itemCount + i,\n+      };\n+\n+      items = [item].concat(items);\n+    }\n+\n+    this.setState({\n+      items: items.slice(0, 6),\n+      itemCount: this.state.itemCount + count,\n+    });\n+  },\n+\n+  render: function () {\n+    var rows = this.state.items.map(function (item, i, arr) {\n+      var itemStyle = {\n+        width: 150,\n+        padding: '0 10px',\n+        lineHeight: '30px',\n+        backgroundColor: (item.i % 2 == 0) ? Box.COLORS.backColor : Box.COLORS.underneathColor,\n+      };\n+\n+      return (<div key={item.i} style={itemStyle}><EmojiSpan>{item.title}</EmojiSpan></div>);\n+    });\n+\n+    var groupStyle = {\n+      margin: '10px 0',\n+    };\n+\n+    var enterAnimation = {\n+      animation: Animations.In,\n+      stagger: this.state.duration,\n+      duration: this.state.duration,\n+      backwards: true,\n+      display: 'block',\n+      style: {\n+        // Since we're staggering, we want to keep the display at \"none\" until Velocity runs\n+        // the display attribute at the start of the animation.\n+        display: 'none',\n+      },\n+    };\n+\n+    var leaveAnimation = {\n+      animation: Animations.Out,\n+      stagger: this.state.duration,\n+      duration: this.state.duration,\n+      backwards: true,\n+    };\n+\n+    return (\n+      <div className=\"flex-box flex-1 flex-column align-items-center\">\n+        <div>\n+          <button onClick={this.whenAddButtonClicked}>Add Row</button>\n+          <button onClick={this.whenAdd5ButtonClicked}>Add 5 Rows</button>\n+        </div>\n+\n+        <VelocityTransitionGroup component=\"div\" className=\"flex-1\" style={groupStyle} enter={enterAnimation} leave={leaveAnimation}>",
        "path": "demo/components/scrolling-group.jsx",
        "position": null,
        "original_position": 134,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Right, changing the animations doesn't do anything immediately. Updated the docs below.\n",
        "created_at": "2015-08-31T19:58:23Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352331",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352331"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352331"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352431",
        "pull_request_review_id": null,
        "id": 38352431,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNDMx",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 5,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2015-08-31T19:59:23Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352431",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352431"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352431"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352437",
        "pull_request_review_id": null,
        "id": 38352437,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNDM3",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 17,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2015-08-31T19:59:27Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352437",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352437"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352437"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352776",
        "pull_request_review_id": null,
        "id": 38352776,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNzc2",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 32,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Actually clearing this out; it seems like we don't need to tick over in the lifecycle callbacks anymore.\n",
        "created_at": "2015-08-31T20:02:16Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352776",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352776"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352776"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352793",
        "pull_request_review_id": null,
        "id": 38352793,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNzkz",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 37,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Done.\n",
        "created_at": "2015-08-31T20:02:24Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352793",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352793"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352793"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352975",
        "pull_request_review_id": null,
        "id": 38352975,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyOTc1",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+var React = require('react');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+\n+var Box = require('./box');\n+var EmojiSpan = require('./emoji-span');\n+\n+var CATS = ['\ud83d\ude38', '\ud83d\ude39', '\ud83d\ude3a', '\ud83d\ude3b', '\ud83d\ude3c', '\ud83d\ude3d', '\ud83d\ude3e', '\ud83d\ude3f', '\ud83d\ude40'];\n+var FOODS = ['\ud83c\udf45', '\ud83c\udf46', '\ud83c\udf47', '\ud83c\udf48', '\ud83c\udf49', '\ud83c\udf4a', '\ud83c\udf4c', '\ud83c\udf4d', '\ud83c\udf4e', '\ud83c\udf4f', '\ud83c\udf51', '\ud83c\udf52', '\ud83c\udf53', '\ud83c\udf54', '\ud83c\udf55', '\ud83c\udf56', '\ud83c\udf57'];\n+\n+\n+var Animations = {",
        "path": "demo/components/scrolling-group.jsx",
        "position": null,
        "original_position": 11,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Cool, yeah this is probably better covered in the readme or demo anyway. \n",
        "created_at": "2015-08-31T20:04:12Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352975",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352975"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352975"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352991",
        "pull_request_review_id": null,
        "id": 38352991,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyOTkx",
        "diff_hunk": "@@ -0,0 +1,152 @@\n+var React = require('react');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+\n+var Box = require('./box');\n+var EmojiSpan = require('./emoji-span');\n+\n+var CATS = ['\ud83d\ude38', '\ud83d\ude39', '\ud83d\ude3a', '\ud83d\ude3b', '\ud83d\ude3c', '\ud83d\ude3d', '\ud83d\ude3e', '\ud83d\ude3f', '\ud83d\ude40'];\n+var FOODS = ['\ud83c\udf45', '\ud83c\udf46', '\ud83c\udf47', '\ud83c\udf48', '\ud83c\udf49', '\ud83c\udf4a', '\ud83c\udf4c', '\ud83c\udf4d', '\ud83c\udf4e', '\ud83c\udf4f', '\ud83c\udf51', '\ud83c\udf52', '\ud83c\udf53', '\ud83c\udf54', '\ud83c\udf55', '\ud83c\udf56', '\ud83c\udf57'];\n+\n+\n+var Animations = {\n+  // Register these with UI Pack so that we can use stagger later.\n+  In: VelocityTransitionGroup.registerEffect({\n+    calls: [\n+      [{\n+        transformPerspective: [ 800, 800 ],\n+        transformOriginX: [ '50%', '50%' ],\n+        transformOriginY: [ '100%', '100%' ],\n+        marginBottom: 0,\n+        opacity: 1,\n+        rotateX: [0, 130],\n+      }, 1, {\n+        easing: 'ease-out',\n+        display: 'block',\n+      }]\n+    ],\n+  }),\n+\n+  Out: VelocityTransitionGroup.registerEffect({\n+    calls: [\n+      [{\n+        transformPerspective: [ 800, 800 ],\n+        transformOriginX: [ '50%', '50%' ],\n+        transformOriginY: [ '0%', '0%' ],\n+        marginBottom: -30,\n+        opacity: 0,\n+        rotateX: -70,\n+      }, 1, {\n+        easing: 'ease-out',\n+        display: 'block',\n+      }]\n+    ],\n+  }),\n+};\n+\n+var ScrollingGroup = React.createClass({\n+  displayName: 'ScrollingGroup',\n+\n+  getInitialState: function () {\n+    return {\n+      itemCount: 0,\n+      items: [],\n+      duration: 500,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this.whenAddButtonClicked();\n+  },\n+\n+  whenAddButtonClicked: function () {\n+    this.addRows(1);\n+  },\n+\n+  whenAdd5ButtonClicked: function () {\n+    this.addRows(5);\n+  },\n+\n+  whenOptionClicked: function (event) {\n+    this.setState({ duration: parseInt(event.target.value) });\n+  },\n+\n+  addRows: function (count) {\n+    var items = this.state.items;\n+\n+    for (var i = 0; i < count; ++i) {\n+      var item = {\n+        title: [_.sample(CATS)].concat(_.sample(FOODS, _.random(1, 4))).join(' '),\n+        i: this.state.itemCount + i,\n+      };\n+\n+      items = [item].concat(items);\n+    }\n+\n+    this.setState({\n+      items: items.slice(0, 6),\n+      itemCount: this.state.itemCount + count,\n+    });\n+  },\n+\n+  render: function () {\n+    var rows = this.state.items.map(function (item, i, arr) {\n+      var itemStyle = {\n+        width: 150,\n+        padding: '0 10px',\n+        lineHeight: '30px',\n+        backgroundColor: (item.i % 2 == 0) ? Box.COLORS.backColor : Box.COLORS.underneathColor,\n+      };\n+\n+      return (<div key={item.i} style={itemStyle}><EmojiSpan>{item.title}</EmojiSpan></div>);\n+    });\n+\n+    var groupStyle = {\n+      margin: '10px 0',\n+    };\n+\n+    var enterAnimation = {\n+      animation: Animations.In,\n+      stagger: this.state.duration,\n+      duration: this.state.duration,\n+      backwards: true,\n+      display: 'block',\n+      style: {\n+        // Since we're staggering, we want to keep the display at \"none\" until Velocity runs\n+        // the display attribute at the start of the animation.\n+        display: 'none',\n+      },\n+    };\n+\n+    var leaveAnimation = {\n+      animation: Animations.Out,\n+      stagger: this.state.duration,\n+      duration: this.state.duration,\n+      backwards: true,\n+    };\n+\n+    return (\n+      <div className=\"flex-box flex-1 flex-column align-items-center\">\n+        <div>\n+          <button onClick={this.whenAddButtonClicked}>Add Row</button>\n+          <button onClick={this.whenAdd5ButtonClicked}>Add 5 Rows</button>\n+        </div>\n+\n+        <VelocityTransitionGroup component=\"div\" className=\"flex-1\" style={groupStyle} enter={enterAnimation} leave={leaveAnimation}>",
        "path": "demo/components/scrolling-group.jsx",
        "position": null,
        "original_position": 134,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-08-31T20:04:24Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352991",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38352991"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38352991"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38353133",
        "pull_request_review_id": null,
        "id": 38353133,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzMTMz",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 45,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2015-08-31T20:06:00Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38353133",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38353133"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38353133"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38353147",
        "pull_request_review_id": null,
        "id": 38353147,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzMTQ3",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 99,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "ok\n",
        "created_at": "2015-08-31T20:06:06Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38353147",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38353147"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38353147"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38354784",
        "pull_request_review_id": null,
        "id": 38354784,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0Nzg0",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n+    // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n+    // symmetry.\n+    this._finishAnimation(node, this.props.leave);\n+\n+    // We're not going to start the animation for a tick, so set the node's display to none so that\n+    // it doesn't flash in.\n+    Velocity.CSS.setPropertyValue(node, 'display', 'none');\n+\n+    this._entering.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  childWillLeave: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 147,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2015-08-31T20:21:12Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38354784",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38354784"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38354784"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38354826",
        "pull_request_review_id": null,
        "id": 38354826,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODI2",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n+    // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n+    // symmetry.\n+    this._finishAnimation(node, this.props.leave);\n+\n+    // We're not going to start the animation for a tick, so set the node's display to none so that\n+    // it doesn't flash in.\n+    Velocity.CSS.setPropertyValue(node, 'display', 'none');\n+\n+    this._entering.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  childWillLeave: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.leave).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    this._leaving.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  _schedule: function () {\n+    if (this._scheduled) {\n+      return;\n+    }\n+\n+    this._scheduled = true;\n+\n+    // Need rAF to make sure we're in the same event queue as Velocity from here out. Important\n+    // for avoiding getting wrong interleaving with Velocity callbacks.",
        "path": "lib/velocity-transition-group.js",
        "position": 192,
        "original_position": 173,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Did I write the truest sentence you know?\n",
        "created_at": "2015-08-31T20:21:33Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38354826",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38354826"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38354826"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38354881",
        "pull_request_review_id": null,
        "id": 38354881,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0ODgx",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n+    // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n+    // symmetry.\n+    this._finishAnimation(node, this.props.leave);\n+\n+    // We're not going to start the animation for a tick, so set the node's display to none so that\n+    // it doesn't flash in.\n+    Velocity.CSS.setPropertyValue(node, 'display', 'none');\n+\n+    this._entering.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  childWillLeave: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.leave).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    this._leaving.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  _schedule: function () {\n+    if (this._scheduled) {\n+      return;\n+    }\n+\n+    this._scheduled = true;\n+\n+    // Need rAF to make sure we're in the same event queue as Velocity from here out. Important\n+    // for avoiding getting wrong interleaving with Velocity callbacks.\n+    window.requestAnimationFrame(this._runAnimations);\n+  },\n+\n+  _runAnimations: function () {\n+    this._scheduled = false;\n+\n+    this._runAnimation(true, this._entering, this.props.enter);\n+    this._runAnimation(false, this._leaving, this.props.leave);\n+\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  // Used to parse out the 'enter' and 'leave' properties. Handles cases where they are omitted\n+  // as well as when they are just strings and not hashes of animation and options.\n+  _parseAnimationProp: function (animationProp) {\n+    var animation, opts, style;\n+\n+    if (typeof animationProp === 'string') {\n+      animation = animationProp;\n+      style = null;\n+      opts = {};\n+    } else {\n+      animation = (animationProp != null) ? animationProp.animation : null;\n+      style = (animationProp != null) ? animationProp.style : null;\n+      opts = _.omit(animationProp, 'animation', 'style');\n+    }\n+\n+    return {\n+      animation: animation,\n+      style: style,\n+      opts: opts,\n+    };\n+  },\n+\n+  _runAnimation: function (entering, queue, animationProp) {\n+    if (!this.isMounted() || queue.length == 0) {",
        "path": "lib/velocity-transition-group.js",
        "position": null,
        "original_position": 210,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "#hashtag\n",
        "created_at": "2015-08-31T20:22:06Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38354881",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38354881"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38354881"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38361108",
        "pull_request_review_id": null,
        "id": 38361108,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxMTA4",
        "diff_hunk": "@@ -0,0 +1,314 @@\n+/*\n+Copyright (c) 2015 Twitter, Inc. and other contributors\n+\n+Component to add Velocity animations around React transitions. Use the \"enter\" and \"leave\" props to\n+control animations for elements entering and leaving. These properties should either be a string\n+naming an animation, or a hash of Velocity options (including an \"animation\" key specifying the\n+animation, which will become the first argument to the Velocity call).\n+\n+\"enter\" and \"leave\" can additionally have a \"style\" attribute that is applied right before the\n+animation starts. Use this for non-animating properties (like \"position\") that are prerequisites for\n+correct animation. The style attribute is applied using Velocity's JS -> CSS routines, which may\n+differ from React's.\n+\n+Additional props\n+\n+- runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Also includes the same \"registerEffect\" static as VelocityComponent.\n+\n+Inspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n+*/\n+\n+var _ = require('lodash');\n+var React = require('react/addons');\n+var Velocity = require('velocity-animate');\n+\n+var VelocityHelpers = require('./velocity-helpers');\n+\n+// We use setTimeout rather than requestAnimationFrame in cases where we want the callback to\n+// happen even if the window is backgrounded. Prevents enter or leave animations from queuing up\n+// and then all firing when the window comes to foreground.\n+var tick = function(cb) {\n+  return window.setTimeout(cb, 0);\n+};\n+\n+// Wrapper for the transitioned elements. Delegates all child lifecycle events to the parent\n+// VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n+var VelocityTransitionGroupChild = React.createClass({\n+  displayName: 'VelocityTransitionGroupChild',\n+\n+  propTypes: {\n+    willAppearFunc: React.PropTypes.func.isRequired,\n+    willEnterFunc: React.PropTypes.func.isRequired,\n+    willLeaveFunc: React.PropTypes.func.isRequired,\n+  },\n+\n+  componentWillAppear: function (doneFn) {\n+    this.props.willAppearFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillEnter: function (doneFn) {\n+    this.props.willEnterFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  componentWillLeave: function (doneFn) {\n+    this.props.willLeaveFunc(React.findDOMNode(this), doneFn);\n+  },\n+\n+  render: function () {\n+    return React.Children.only(this.props.children);\n+  },\n+});\n+\n+var VelocityTransitionGroup = React.createClass({\n+  displayName: 'VelocityTransitionGroup',\n+\n+  statics: {\n+    registerEffect: VelocityHelpers.registerEffect,    \n+    disabledForTest: false, // global, mutable, for disabling animations during test\n+  },\n+\n+  propTypes: {\n+    runOnMount: React.PropTypes.bool,\n+    enter: React.PropTypes.any,\n+    leave: React.PropTypes.any,\n+    children: React.PropTypes.any,\n+  },\n+\n+  getDefaultProps: function() {\n+    return {\n+      runOnMount: false,\n+      enter: null,\n+      leave: null,\n+    };\n+  },\n+\n+  componentWillMount: function () {\n+    this._scheduled = false;\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  componentWillUnmount: function () {\n+    this._entering = [];\n+    this._leaving = [];\n+  },\n+\n+  childWillAppear: function (node, doneFn) {\n+    if (this.props.runOnMount) {\n+      this.childWillEnter(node, doneFn);\n+    } else {\n+      this._finishAnimation(node, this.props.enter);\n+      \n+      // Important to tick over so that any callbacks due to finishing the animation complete first.\n+      // isMounted check necessary to avoid exception in tests, which can mount and unmount a\n+      // component before this runs over, as the \"doneFn\" callback does a ref lookup rather than\n+      // closing over the component.\n+      var self = this;\n+      tick(function () {\n+        if (self.isMounted()) {\n+          doneFn();\n+        }\n+      });\n+    }\n+  },\n+\n+  childWillEnter: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.enter).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n+    // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n+    // symmetry.\n+    this._finishAnimation(node, this.props.leave);\n+\n+    // We're not going to start the animation for a tick, so set the node's display to none so that\n+    // it doesn't flash in.\n+    Velocity.CSS.setPropertyValue(node, 'display', 'none');\n+\n+    this._entering.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  childWillLeave: function (node, doneFn) {\n+    // document.hidden check is there because animation completion callbacks won't fire (due to\n+    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n+    // while the tab is hidden.\n+    if (document.hidden || (this._parseAnimationProp(this.props.leave).animation == null)) {\n+      if (this.isMounted()) {\n+        doneFn();\n+      }\n+      return;\n+    }\n+\n+    this._leaving.push({\n+      node: node,\n+      doneFn: doneFn,\n+    });\n+\n+    this._schedule();\n+  },\n+\n+  _schedule: function () {\n+    if (this._scheduled) {\n+      return;\n+    }\n+\n+    this._scheduled = true;\n+\n+    // Need rAF to make sure we're in the same event queue as Velocity from here out. Important\n+    // for avoiding getting wrong interleaving with Velocity callbacks.",
        "path": "lib/velocity-transition-group.js",
        "position": 192,
        "original_position": 173,
        "commit_id": "f32246d968385a31c7bcdefbf3a83c8011ba33ba",
        "original_commit_id": "2aa50360a0debb1214607142077e9812ae52b06a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Your parsimonious wording is an inspiration sir.\n",
        "created_at": "2015-08-31T21:21:02Z",
        "updated_at": "2015-08-31T21:25:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38361108",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/38361108"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/2#discussion_r38361108"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/2"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40199038",
        "pull_request_review_id": null,
        "id": 40199038,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk5MDM4",
        "diff_hunk": "@@ -0,0 +1,81 @@\n+// Component for a VelocityTransitionGroup that crossfades between its children.\n+\n+// To use this component, render with a single child that contains the \"loading\" version of your\n+// UI. When data has loaded, switch the \"key\" of this child so that React considers it a brand\n+// new element and triggers the enter / leave effects. The two versions of the UI are expected to\n+// have identical heights.\n+\n+// Properties on this component are applied to the VelocityTransitionGroup component that this\n+// delegates to. A postion: 'relative' style is also applied since the loading effect requires\n+// position: 'absolute' on the child.\n+\n+// Use the property \"opaque\" if the children have opaque backgrounds. This will make the new element\n+// come in 100% opacity and fade the old element out from on top of it. (Without this, opaque\n+// elements end up bleeding the background behind the LoadingCrossfadeComponent through.)\n+\n+var React = require('react');\n+var _ = require('lodash');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+\n+var LoadingCrossfadeComponent = React.createClass({\n+  displayName: 'LoadingCrossfadeComponent',\n+\n+  propTypes: {\n+    opaque: React.PropTypes.bool,\n+    duration: React.PropTypes.number,\n+  },\n+\n+  getDefaultProps: function () {\n+    return {\n+      duration: 350,\n+    };\n+  },\n+\n+  render: function () {\n+    // position: 'relative' lets us absolutely-position the leaving child during the fade.\n+    var style = _.defaults((this.props.style || {}), { position: 'relative' });\n+\n+    var transitionGroupProps = _.defaults(_.omit(this.props, 'children', 'style'), {\n+      component: 'div',\n+      style: style,\n+\n+      enter: {\n+        animation: { opacity: 1 },\n+        duration: this.props.duration,\n+        style: {\n+          // If we're animating opaque backgrounds then we just render the new element under the\n+          // old one and fade out the old one. Without this, at e.g. the crossfade midpoint of\n+          // 50% opacity for old and 50% opacity for new, the parent background ends up bleeding\n+          // through 25%, which makes things look not smooth at all.",
        "path": "demo/components/loading-crossfade-component.jsx",
        "position": 49,
        "original_position": 49,
        "commit_id": "0299ae26a41eb571ea0cd5d8de9f487ceaa90343",
        "original_commit_id": "0299ae26a41eb571ea0cd5d8de9f487ceaa90343",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This and the explanation in the top-level comment are awesome.\n",
        "created_at": "2015-09-23T12:53:48Z",
        "updated_at": "2015-09-23T12:53:48Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/8#discussion_r40199038",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/8",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40199038"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/8#discussion_r40199038"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40199397",
        "pull_request_review_id": null,
        "id": 40199397,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk5Mzk3",
        "diff_hunk": "@@ -0,0 +1,171 @@\n+var _ = require('lodash');\n+\n+var React = require('react');\n+var VelocityComponent = require('../../lib/velocity-component');\n+var VelocityTransitionGroup = require('../../lib/velocity-transition-group');\n+var VelocityHelpers = require('../../lib/velocity-helpers');\n+\n+var Box = require('../components/box');\n+var EmojiSpan = require('../components/emoji-span');\n+var LoadingCrossfadeComponent = require('../components/loading-crossfade-component');\n+\n+require('../css/loading-placeholder.css');\n+\n+var LOCATION_COUNT = 4;\n+\n+var BUILDINGS = ['\ud83c\udfe0', '\ud83c\udfe1', '\ud83c\udfe2', '\ud83c\udfec', '\ud83c\udfed', '\ud83c\udfe3', '\ud83c\udfe4', '\ud83c\udfe5', '\ud83c\udfe6', '\ud83c\udfe8', '\ud83c\udfe9', '\ud83d\udc92', '\u26ea', '\ud83c\udfea', '\ud83c\udfeb'];\n+var CAPTIALS = ['Montgomery', 'Juneau', 'Phoenix', 'Little Rock', 'Sacramento', 'Denver', 'Hartford', 'Dover',\n+  'Tallahassee', 'Atlanta', 'Honolulu', 'Boise', 'Springfield', 'Indianapolis', 'Des Moines', 'Topeka', 'Frankfort',\n+  'Baton Rouge', 'Augusta', 'Annapolis', 'Boston', 'Lansing', 'St. Paul', 'Jackson', 'Jefferson City', 'Helena',\n+  'Lincoln', 'Carson City', 'Concord', 'Trenton', 'Santa Fe', 'Albany', 'Raleigh', 'Bismarck', 'Columbus',\n+  'Oklahoma City', 'Salem', 'Harrisburg', 'Providence', 'Columbia', 'Pierre', 'Nashville', 'Austin', 'Salt Lake City',\n+  'Montpelier', 'Richmond', 'Olympia', 'Charleston', 'Madison', 'Cheyenne'];\n+\n+var CrossfadeExample = React.createClass({\n+  displayName: 'CrossfadeExample',\n+\n+  getInitialState: function () {\n+    return {\n+      expanded: false,\n+      items: null,\n+      duration: 500,\n+    };\n+  },\n+\n+  componentWillUnmount: function () {\n+    window.clearTimeout(this.locationTimeout);\n+  },\n+\n+  whenToggleClicked: function () {\n+    if (this.state.expanded) {\n+      this.setState({\n+        expanded: false,\n+        items: null,\n+      });\n+\n+      window.clearTimeout(this.locationTimeout);\n+    } else {\n+      this.setState({\n+        expanded: true,\n+        items: null,\n+      });\n+\n+      this.locationTimeout = window.setTimeout(this.loadLocations, this.state.duration * 1.5);\n+    }\n+  },\n+\n+  loadLocations: function () {\n+    this.setState({\n+      items: Array.apply(null, Array(LOCATION_COUNT)).map(function () {",
        "path": "demo/examples/crossfade-example.jsx",
        "position": 59,
        "original_position": 59,
        "commit_id": "0299ae26a41eb571ea0cd5d8de9f487ceaa90343",
        "original_commit_id": "0299ae26a41eb571ea0cd5d8de9f487ceaa90343",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wack, `new Array(LOCATION_COUNT).map` does not behave how I thought it would.\n",
        "created_at": "2015-09-23T12:58:01Z",
        "updated_at": "2015-09-23T12:58:01Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/8#discussion_r40199397",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/8",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40199397"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/8#discussion_r40199397"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/8"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40553827",
        "pull_request_review_id": null,
        "id": 40553827,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzODI3",
        "diff_hunk": "@@ -13,11 +13,138 @@ $ npm run demo\n Visit <http://localhost:8080/webpack-dev-server/> in your browser. Hot reloading is enabled, if you\n want to tweak the code in main.jsx.\n \n+## Requirements\n+\n+The `VelocityComponent` and `VelocityTransitionGroup` components, as well as the `velocityHelpers`\n+utilities, are provided as ES5-compatible JavaScript files with [CommonJS](http://www.commonjs.org/)\n+`require` statements. You will need a dependency tool such as [Browserify](http://browserify.org/),\n+[RequireJS](http://requirejs.org/), or [webpack](https://webpack.github.io/) to use them.\n+\n+This package depends directly on Velocity, as well as [lodash](https://lodash.com/) for a handful\n+of utility functions (which are required specifically to try and keep bundle size down).",
        "path": "README.md",
        "position": null,
        "original_position": 12,
        "commit_id": "a986400581702b7dd3d02466027a6a850026ac2b",
        "original_commit_id": "fa74727fef08fbb306ca621e585843ddacd01584",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"required specifically\" -> \"which are required individually\" mayhaps\n",
        "created_at": "2015-09-28T13:53:34Z",
        "updated_at": "2015-09-28T14:05:06Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40553827",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40553827"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40553827"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40553829",
        "pull_request_review_id": null,
        "id": 40553829,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzODI5",
        "diff_hunk": "@@ -13,11 +13,138 @@ $ npm run demo\n Visit <http://localhost:8080/webpack-dev-server/> in your browser. Hot reloading is enabled, if you\n want to tweak the code in main.jsx.\n \n+## Requirements\n+\n+The `VelocityComponent` and `VelocityTransitionGroup` components, as well as the `velocityHelpers`\n+utilities, are provided as ES5-compatible JavaScript files with [CommonJS](http://www.commonjs.org/)\n+`require` statements. You will need a dependency tool such as [Browserify](http://browserify.org/),\n+[RequireJS](http://requirejs.org/), or [webpack](https://webpack.github.io/) to use them.\n+\n+This package depends directly on Velocity, as well as [lodash](https://lodash.com/) for a handful\n+of utility functions (which are required specifically to try and keep bundle size down).\n+\n+It is assumed that your application already depends on React. The `VelocityTransitionGroup`\n+component particularly requires the React addons at version 0.13 or higher.\n+\n ## Usage\n \n-TODO(phopkins): Documentation\n+### `VelocityComponent`\n+\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+#### Example\n+```JSX\n+  <VelocityComponent animation={{ opacity: this.state.showSubComponent ? 1 : 0 }} duration={500}>\n+    <MySubComponent/>\n+  </VelocityComponent>\n+```\n+\n+#### Details\n+\n+The API attempts to be as declarative as possible. A single `animation` property declares what\n+animation the child should have. If that property changes, this component applies the new animation\n+to the child on the next tick.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's `finish`\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+#### Properties\n+\n+`animation`: Either an animation key or hash defining the animation. See Velocity's documentation\n+  for what this can be. (It is passed to Velocity exactly.)\n+\n+`runOnMount`: If true, runs the animation even when the component is first mounted.\n+\n+`targetQuerySelector`: By default, this component's single child is animated. If `targetQuerySelector`\n+  is provided, it is used to select descendants to apply the animation to. Use with caution, only\n+  when you're confident that React's reconcilliation will preserve these nodes during animation.\n+  Also note `querySelectorAll`'s [silly behavior](http://ejohn.org/blog/thoughts-on-queryselectorall/) w.r.t. pruning results when being called on a node.\n+  A special value of \"children\" will use the direct children of the node, since there isn't a\n+  great way to specify that to `querySelectorAll`.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. `duration`, `delay`, `loop`).\n+\n+#### Methods\n+\n+`runAnimation`: Triggers the animation immediately. Useful for when you want an animation that\n+  corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+  occurs).\n+\n+\n+### `VelocityTransitionGroup`\n+\n+Component to add Velocity animations around React transitions. Delegates to the React `TransitionGroup`\n+addon.\n+\n+#### Example\n+```JSX\n+  <VelocityTransitionGroup enter={{animation: \"slideDown\"}} leave={{animation: \"slideUp\"}}>\n+    {this.state.renderSubComponent ? <MySubComponent/> : undefined}\n+  </VelocityTransitionGroup>\n+```\n+\n+#### Properties\n+`enter`: Animation to run on a child component being added\n+\n+`leave`: Animation to run on a child component leaving\n+\n+`runOnMount`: if true, runs the `enter` animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Any additional properties (e.g. `className`, `component`) will be passed to the internal\n+`TransitionGroup`.\n+\n+`enter` and `leave` should either be a string naming an animation registered with UI Pack, or a hash\n+with an `animation` key that can either be a string itself, or a hash of style attributes to animate\n+(this value is passed to Velocity its the first arg).\n+\n+If `enter` or `leave` is a hash, it can additionally have a `style` value that is applied the tick\n+before the Velocity animation starts. Use this for non-animating properties (like `position`) that\n+are prerequisites for correct animation. The style value is applied using Velocity's JS -> CSS\n+routines, which may differ from React's.\n+\n+Any hash entries beyond `animation` and `style` are passed in an options hash to Velocity. Use this\n+for options like `stagger`, `reverse`, *&tc.*\n+\n+#### Statics\n+\n+`disabledForTest`: Set this to true globally to turn off all custom animation logic. Instead, this\n+  component will behave like a vanilla TransitionGroup`.\n+\n+### `velocityHelper`",
        "path": "README.md",
        "position": 107,
        "original_position": 107,
        "commit_id": "a986400581702b7dd3d02466027a6a850026ac2b",
        "original_commit_id": "fa74727fef08fbb306ca621e585843ddacd01584",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Is this missing a description?\n",
        "created_at": "2015-09-28T13:53:37Z",
        "updated_at": "2015-09-28T14:05:06Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40553829",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40553829"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40553829"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40553882",
        "pull_request_review_id": null,
        "id": 40553882,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzODgy",
        "diff_hunk": "@@ -0,0 +1,19 @@\n+// Convenience main entrypoint if you are running with destructuring support:\n+//\n+//   import {VelocityComponent, VelocityTransitionGroup} from 'velocity-react';\n+//\n+// You can also require just the component(s) you're using:\n+//\n+//   var VelocityComponent = require('velocity-react/velocity-component');\n+//\n+// Note that if you want to use UI Pack you will need to require Velocity and it",
        "path": "index.js",
        "position": null,
        "original_position": 9,
        "commit_id": "a986400581702b7dd3d02466027a6a850026ac2b",
        "original_commit_id": "fa74727fef08fbb306ca621e585843ddacd01584",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "\"require Velocity at a top level\"\n",
        "created_at": "2015-09-28T13:54:04Z",
        "updated_at": "2015-09-28T14:05:06Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40553882",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40553882"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40553882"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40554923",
        "pull_request_review_id": null,
        "id": 40554923,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0OTIz",
        "diff_hunk": "@@ -13,11 +13,138 @@ $ npm run demo\n Visit <http://localhost:8080/webpack-dev-server/> in your browser. Hot reloading is enabled, if you\n want to tweak the code in main.jsx.\n \n+## Requirements\n+\n+The `VelocityComponent` and `VelocityTransitionGroup` components, as well as the `velocityHelpers`\n+utilities, are provided as ES5-compatible JavaScript files with [CommonJS](http://www.commonjs.org/)\n+`require` statements. You will need a dependency tool such as [Browserify](http://browserify.org/),\n+[RequireJS](http://requirejs.org/), or [webpack](https://webpack.github.io/) to use them.\n+\n+This package depends directly on Velocity, as well as [lodash](https://lodash.com/) for a handful\n+of utility functions (which are required specifically to try and keep bundle size down).\n+\n+It is assumed that your application already depends on React. The `VelocityTransitionGroup`\n+component particularly requires the React addons at version 0.13 or higher.\n+\n ## Usage\n \n-TODO(phopkins): Documentation\n+### `VelocityComponent`\n+\n+Component to add Velocity animations to one or more children. Wraps a single child without adding\n+additional DOM nodes.\n+\n+#### Example\n+```JSX\n+  <VelocityComponent animation={{ opacity: this.state.showSubComponent ? 1 : 0 }} duration={500}>\n+    <MySubComponent/>\n+  </VelocityComponent>\n+```\n+\n+#### Details\n+\n+The API attempts to be as declarative as possible. A single `animation` property declares what\n+animation the child should have. If that property changes, this component applies the new animation\n+to the child on the next tick.\n+\n+By default, the animation is not run when the component is mounted. Instead, Velocity's `finish`\n+command is used to jump to the animation's end state. For a component that animates out of and\n+back in to a default state, this allows the parent to specify the \"animate into\" animation as\n+the default, and therefore not have to distinguish between the initial state and the state to\n+return to after animating away.\n+\n+#### Properties\n+\n+`animation`: Either an animation key or hash defining the animation. See Velocity's documentation\n+  for what this can be. (It is passed to Velocity exactly.)\n+\n+`runOnMount`: If true, runs the animation even when the component is first mounted.\n+\n+`targetQuerySelector`: By default, this component's single child is animated. If `targetQuerySelector`\n+  is provided, it is used to select descendants to apply the animation to. Use with caution, only\n+  when you're confident that React's reconcilliation will preserve these nodes during animation.\n+  Also note `querySelectorAll`'s [silly behavior](http://ejohn.org/blog/thoughts-on-queryselectorall/) w.r.t. pruning results when being called on a node.\n+  A special value of \"children\" will use the direct children of the node, since there isn't a\n+  great way to specify that to `querySelectorAll`.\n+\n+Unrecognized properties are passed as options to Velocity (e.g. `duration`, `delay`, `loop`).\n+\n+#### Methods\n+\n+`runAnimation`: Triggers the animation immediately. Useful for when you want an animation that\n+  corresponds to an event but not a particular model state change (e.g. a \"bump\" when a click\n+  occurs).\n+\n+\n+### `VelocityTransitionGroup`\n+\n+Component to add Velocity animations around React transitions. Delegates to the React `TransitionGroup`\n+addon.\n+\n+#### Example\n+```JSX\n+  <VelocityTransitionGroup enter={{animation: \"slideDown\"}} leave={{animation: \"slideUp\"}}>\n+    {this.state.renderSubComponent ? <MySubComponent/> : undefined}\n+  </VelocityTransitionGroup>\n+```\n+\n+#### Properties\n+`enter`: Animation to run on a child component being added\n+\n+`leave`: Animation to run on a child component leaving\n+\n+`runOnMount`: if true, runs the `enter` animation on the elements that exist as children when this\n+  component is mounted.\n+\n+Any additional properties (e.g. `className`, `component`) will be passed to the internal\n+`TransitionGroup`.\n+\n+`enter` and `leave` should either be a string naming an animation registered with UI Pack, or a hash\n+with an `animation` key that can either be a string itself, or a hash of style attributes to animate\n+(this value is passed to Velocity its the first arg).\n+\n+If `enter` or `leave` is a hash, it can additionally have a `style` value that is applied the tick\n+before the Velocity animation starts. Use this for non-animating properties (like `position`) that\n+are prerequisites for correct animation. The style value is applied using Velocity's JS -> CSS\n+routines, which may differ from React's.\n+\n+Any hash entries beyond `animation` and `style` are passed in an options hash to Velocity. Use this\n+for options like `stagger`, `reverse`, *&tc.*\n+\n+#### Statics\n+\n+`disabledForTest`: Set this to true globally to turn off all custom animation logic. Instead, this\n+  component will behave like a vanilla TransitionGroup`.\n+\n+### `velocityHelper`",
        "path": "README.md",
        "position": 107,
        "original_position": 107,
        "commit_id": "a986400581702b7dd3d02466027a6a850026ac2b",
        "original_commit_id": "fa74727fef08fbb306ca621e585843ddacd01584",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "no, `registerEffect` is a method on `velocityHelper`\n",
        "created_at": "2015-09-28T14:02:21Z",
        "updated_at": "2015-09-28T14:05:06Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40554923",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40554923"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40554923"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40555146",
        "pull_request_review_id": null,
        "id": 40555146,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU1MTQ2",
        "diff_hunk": "@@ -13,11 +13,138 @@ $ npm run demo\n Visit <http://localhost:8080/webpack-dev-server/> in your browser. Hot reloading is enabled, if you\n want to tweak the code in main.jsx.\n \n+## Requirements\n+\n+The `VelocityComponent` and `VelocityTransitionGroup` components, as well as the `velocityHelpers`\n+utilities, are provided as ES5-compatible JavaScript files with [CommonJS](http://www.commonjs.org/)\n+`require` statements. You will need a dependency tool such as [Browserify](http://browserify.org/),\n+[RequireJS](http://requirejs.org/), or [webpack](https://webpack.github.io/) to use them.\n+\n+This package depends directly on Velocity, as well as [lodash](https://lodash.com/) for a handful\n+of utility functions (which are required specifically to try and keep bundle size down).",
        "path": "README.md",
        "position": null,
        "original_position": 12,
        "commit_id": "a986400581702b7dd3d02466027a6a850026ac2b",
        "original_commit_id": "fa74727fef08fbb306ca621e585843ddacd01584",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "done\n",
        "created_at": "2015-09-28T14:04:05Z",
        "updated_at": "2015-09-28T14:05:06Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40555146",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40555146"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40555146"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40555239",
        "pull_request_review_id": null,
        "id": 40555239,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU1MjM5",
        "diff_hunk": "@@ -0,0 +1,19 @@\n+// Convenience main entrypoint if you are running with destructuring support:\n+//\n+//   import {VelocityComponent, VelocityTransitionGroup} from 'velocity-react';\n+//\n+// You can also require just the component(s) you're using:\n+//\n+//   var VelocityComponent = require('velocity-react/velocity-component');\n+//\n+// Note that if you want to use UI Pack you will need to require Velocity and it",
        "path": "index.js",
        "position": null,
        "original_position": 9,
        "commit_id": "a986400581702b7dd3d02466027a6a850026ac2b",
        "original_commit_id": "fa74727fef08fbb306ca621e585843ddacd01584",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "clarified wording\n",
        "created_at": "2015-09-28T14:04:56Z",
        "updated_at": "2015-09-28T14:05:06Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40555239",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/40555239"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/9#discussion_r40555239"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/9"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/41513394",
        "pull_request_review_id": null,
        "id": 41513394,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzMzk0",
        "diff_hunk": "@@ -146,6 +146,11 @@ You will need to manually register the UI Pack with the global Velocity in your\n   require('velocity-animate/velocity.ui');\n ```\n \n+If, even with the above statements, you see errors like `Velocity: First argument\n+(transition.shrinkIn) was not a property map, a known action, or a registered redirect. Aborting.`\n+it is likely that there are 2 copies of `velocity-animate` in your `node_modules`. Use `npm dedupe`\n+to collapse them down to one.",
        "path": "README.md",
        "position": 27,
        "original_position": 27,
        "commit_id": "ad6544f9513d022b502d633eeb2d9cd125cbe53a",
        "original_commit_id": "ad6544f9513d022b502d633eeb2d9cd125cbe53a",
        "user": {
            "login": "kevinrobinson",
            "id": 1056957,
            "node_id": "MDQ6VXNlcjEwNTY5NTc=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/1056957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinrobinson",
            "html_url": "https://github.com/kevinrobinson",
            "followers_url": "https://api.github.com/users/kevinrobinson/followers",
            "following_url": "https://api.github.com/users/kevinrobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinrobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinrobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinrobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinrobinson/orgs",
            "repos_url": "https://api.github.com/users/kevinrobinson/repos",
            "events_url": "https://api.github.com/users/kevinrobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinrobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": ":+1: \n",
        "created_at": "2015-10-08T13:41:25Z",
        "updated_at": "2015-10-08T13:41:25Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/27#discussion_r41513394",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/27",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/41513394"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/27#discussion_r41513394"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/27"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48883710",
        "pull_request_review_id": null,
        "id": 48883710,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzNzEw",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.",
        "path": "velocity-transition-group.js",
        "position": 40,
        "original_position": 40,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "tonybaroneee",
            "id": 844249,
            "node_id": "MDQ6VXNlcjg0NDI0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/844249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonybaroneee",
            "html_url": "https://github.com/tonybaroneee",
            "followers_url": "https://api.github.com/users/tonybaroneee/followers",
            "following_url": "https://api.github.com/users/tonybaroneee/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonybaroneee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonybaroneee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonybaroneee/subscriptions",
            "organizations_url": "https://api.github.com/users/tonybaroneee/orgs",
            "repos_url": "https://api.github.com/users/tonybaroneee/repos",
            "events_url": "https://api.github.com/users/tonybaroneee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonybaroneee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Seems like a superfluous comment, but that's just me.\n",
        "created_at": "2016-01-05T19:15:36Z",
        "updated_at": "2016-01-05T19:15:36Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48883710",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48883710"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48883710"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48884504",
        "pull_request_review_id": null,
        "id": 48884504,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0NTA0",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.\n+      combinedCompleteFn = doneFn || opts.complete;",
        "path": "velocity-transition-group.js",
        "position": 41,
        "original_position": 41,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "tonybaroneee",
            "id": 844249,
            "node_id": "MDQ6VXNlcjg0NDI0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/844249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonybaroneee",
            "html_url": "https://github.com/tonybaroneee",
            "followers_url": "https://api.github.com/users/tonybaroneee/followers",
            "following_url": "https://api.github.com/users/tonybaroneee/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonybaroneee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonybaroneee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonybaroneee/subscriptions",
            "organizations_url": "https://api.github.com/users/tonybaroneee/orgs",
            "repos_url": "https://api.github.com/users/tonybaroneee/repos",
            "events_url": "https://api.github.com/users/tonybaroneee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonybaroneee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "I don't quite understand how passing `{complete: undefined}` will change the landscape of things, since we still say `doneFn || opts.complete` here, so doneFn would still be executed. Can/does the parsedAnimation object below sometimes pass in a non-null `complete`, hence us overriding it with `undefined`? Is this just to protect doneFn by having it still execute, and having `complete` be a totally separate concept?\n\nIt might be the renaming above that's throwing me off.\n",
        "created_at": "2016-01-05T19:21:56Z",
        "updated_at": "2016-01-05T19:23:04Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48884504",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48884504"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48884504"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885272",
        "pull_request_review_id": null,
        "id": 48885272,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1Mjcy",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.",
        "path": "velocity-transition-group.js",
        "position": 40,
        "original_position": 40,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wanted to make \"or neither\" clear, that we're ok with this being undefined if there are no callbacks desired.\n",
        "created_at": "2016-01-05T19:28:17Z",
        "updated_at": "2016-01-05T19:28:17Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885272",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885272"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885272"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885343",
        "pull_request_review_id": null,
        "id": 48885343,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1MzQz",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.",
        "path": "velocity-transition-group.js",
        "position": 40,
        "original_position": 40,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "tonybaroneee",
            "id": 844249,
            "node_id": "MDQ6VXNlcjg0NDI0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/844249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonybaroneee",
            "html_url": "https://github.com/tonybaroneee",
            "followers_url": "https://api.github.com/users/tonybaroneee/followers",
            "following_url": "https://api.github.com/users/tonybaroneee/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonybaroneee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonybaroneee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonybaroneee/subscriptions",
            "organizations_url": "https://api.github.com/users/tonybaroneee/orgs",
            "repos_url": "https://api.github.com/users/tonybaroneee/repos",
            "events_url": "https://api.github.com/users/tonybaroneee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonybaroneee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Gotcha, :+1: \n",
        "created_at": "2016-01-05T19:28:53Z",
        "updated_at": "2016-01-05T19:28:53Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885343",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885343"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885343"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885478",
        "pull_request_review_id": null,
        "id": 48885478,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1NDc4",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.\n+      combinedCompleteFn = doneFn || opts.complete;",
        "path": "velocity-transition-group.js",
        "position": 41,
        "original_position": 41,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "The use of `{complete: undefined}` in the call to `_finishAnimation` is to override any complete callback provided through props, since calling `complete` on that `finish` doesn't make logical sense.\n",
        "created_at": "2016-01-05T19:29:52Z",
        "updated_at": "2016-01-05T19:29:52Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885478",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885478"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885478"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885713",
        "pull_request_review_id": null,
        "id": 48885713,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1NzEz",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.\n+      combinedCompleteFn = doneFn || opts.complete;",
        "path": "velocity-transition-group.js",
        "position": 41,
        "original_position": 41,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "tonybaroneee",
            "id": 844249,
            "node_id": "MDQ6VXNlcjg0NDI0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/844249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonybaroneee",
            "html_url": "https://github.com/tonybaroneee",
            "followers_url": "https://api.github.com/users/tonybaroneee/followers",
            "following_url": "https://api.github.com/users/tonybaroneee/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonybaroneee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonybaroneee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonybaroneee/subscriptions",
            "organizations_url": "https://api.github.com/users/tonybaroneee/orgs",
            "repos_url": "https://api.github.com/users/tonybaroneee/repos",
            "events_url": "https://api.github.com/users/tonybaroneee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonybaroneee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Oh I see, that makes sense now. So multiple things call `_finishAnimation` I presume, where the complete callback is executed when it makes more sense?\n",
        "created_at": "2016-01-05T19:31:47Z",
        "updated_at": "2016-01-05T19:31:47Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885713",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48885713"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48885713"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48887504",
        "pull_request_review_id": null,
        "id": 48887504,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NTA0",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.\n+      combinedCompleteFn = doneFn || opts.complete;",
        "path": "velocity-transition-group.js",
        "position": 41,
        "original_position": 41,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "`_finishAnimation` is used to jump to the end of the animation immediately, taking no time. We always finish the \"leave\" animation before triggering the \"enter\" animation in order to give \"enter\" a consistent starting point of \"not there.\" But, when that's done, it doesn't make a lot of sense to trigger any \"complete\" callback that is associated with the element leaving, because it's actually about to appear!\n",
        "created_at": "2016-01-05T19:46:02Z",
        "updated_at": "2016-01-05T19:46:02Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48887504",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48887504"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48887504"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48887722",
        "pull_request_review_id": null,
        "id": 48887722,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NzIy",
        "diff_hunk": "@@ -281,27 +283,39 @@ var VelocityTransitionGroup = React.createClass({\n     // animations) so that we can then animate out. Velocity typically makes these transitions\n     // very smooth, correctly animating from whatever state the element is currently in.\n     if (entering) {\n-      completeFn();\n-      completeFn = null;\n+      doneFn();\n+      doneFn = null;\n     } else {\n       Velocity(nodes, 'stop');\n     }\n \n+    var combinedCompleteFn;\n+    if (doneFn && opts.complete) {\n+      var optsCompleteFn = opts.complete;\n+      combinedCompleteFn = function () {\n+        doneFn();\n+        optsCompleteFn();\n+      };\n+    } else {\n+      // One or the other or neither.\n+      combinedCompleteFn = doneFn || opts.complete;",
        "path": "velocity-transition-group.js",
        "position": 41,
        "original_position": 41,
        "commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "original_commit_id": "a04d75ca68fc3a331107dc1b6b3b3e11bd01c316",
        "user": {
            "login": "tonybaroneee",
            "id": 844249,
            "node_id": "MDQ6VXNlcjg0NDI0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/844249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonybaroneee",
            "html_url": "https://github.com/tonybaroneee",
            "followers_url": "https://api.github.com/users/tonybaroneee/followers",
            "following_url": "https://api.github.com/users/tonybaroneee/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonybaroneee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonybaroneee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonybaroneee/subscriptions",
            "organizations_url": "https://api.github.com/users/tonybaroneee/orgs",
            "repos_url": "https://api.github.com/users/tonybaroneee/repos",
            "events_url": "https://api.github.com/users/tonybaroneee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonybaroneee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "AH! Sorry for the confusion, I totally get it now. :smile: \n",
        "created_at": "2016-01-05T19:47:45Z",
        "updated_at": "2016-01-05T19:47:45Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48887722",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/48887722"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/53#discussion_r48887722"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/53"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49915658",
        "pull_request_review_id": null,
        "id": 49915658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NjU4",
        "diff_hunk": "@@ -163,10 +163,10 @@ See: http://julian.com/research/velocity/#uiPack\n \n ### Server-side rendering\n \n-The `VelocityComponent` and `VelocityTransitionGroup` components are (as of v1.0.1) not\n-incompatible with rendering on the server. At this stage, the components will just no-op\n-and let the children render naturally. If your initial animation end states match\n-natural rendering anyway this will be exactly what you want. Otherwise you may notice a\n+The `VelocityComponent` and `VelocityTransitionGroup` components are (as of v1.0.1)\n+tolerant of being rendered on the serve: they will no-op and render their children",
        "path": "README.md",
        "position": null,
        "original_position": 9,
        "commit_id": "ab50d28a5627bff95cb444579f99afadd94a71f6",
        "original_commit_id": "c361a25b684a0988ecf34e6925ae1c9b334ec6f6",
        "user": {
            "login": "samn",
            "id": 174850,
            "node_id": "MDQ6VXNlcjE3NDg1MA==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/174850?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samn",
            "html_url": "https://github.com/samn",
            "followers_url": "https://api.github.com/users/samn/followers",
            "following_url": "https://api.github.com/users/samn/following{/other_user}",
            "gists_url": "https://api.github.com/users/samn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samn/subscriptions",
            "organizations_url": "https://api.github.com/users/samn/orgs",
            "repos_url": "https://api.github.com/users/samn/repos",
            "events_url": "https://api.github.com/users/samn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samn/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "typo, `serve` instead of `server`\n",
        "created_at": "2016-01-15T23:00:28Z",
        "updated_at": "2016-01-15T23:04:42Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/67#discussion_r49915658",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/67",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49915658"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/67#discussion_r49915658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/67"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49877117",
        "pull_request_review_id": null,
        "id": 49877117,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MTE3",
        "diff_hunk": "@@ -44,6 +44,13 @@ var ReactDOM = require('react-dom');\n var ReactTransitionGroup = require('react-addons-transition-group');\n var Velocity = require('./lib/velocity-animate-shim');\n \n+// Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\n+var shimRequestAnimationFrame = ",
        "path": "velocity-transition-group.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "25c54fd40bda0ad816e9058223e94bc3de396a9c",
        "original_commit_id": "24ca9d4bd0527ee730bf7a6922574d3a4068812b",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You'll need to protect against `window` not being defined up here, since this code will execute regardless of whether it's browser or server environment. (The `Velocity.velocityReactServerShim` check inside of `render` prevented Node execution from ever getting to the previous `window` code.)\n",
        "created_at": "2016-01-15T17:01:21Z",
        "updated_at": "2016-01-20T15:45:55Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r49877117",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49877117"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r49877117"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49910027",
        "pull_request_review_id": null,
        "id": 49910027,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMDI3",
        "diff_hunk": "@@ -44,6 +44,13 @@ var ReactDOM = require('react-dom');\n var ReactTransitionGroup = require('react-addons-transition-group');\n var Velocity = require('./lib/velocity-animate-shim');\n \n+// Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\n+var shimRequestAnimationFrame = ",
        "path": "velocity-transition-group.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "25c54fd40bda0ad816e9058223e94bc3de396a9c",
        "original_commit_id": "24ca9d4bd0527ee730bf7a6922574d3a4068812b",
        "user": {
            "login": "RandScullard",
            "id": 4718759,
            "node_id": "MDQ6VXNlcjQ3MTg3NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4718759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandScullard",
            "html_url": "https://github.com/RandScullard",
            "followers_url": "https://api.github.com/users/RandScullard/followers",
            "following_url": "https://api.github.com/users/RandScullard/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandScullard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandScullard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandScullard/subscriptions",
            "organizations_url": "https://api.github.com/users/RandScullard/orgs",
            "repos_url": "https://api.github.com/users/RandScullard/repos",
            "events_url": "https://api.github.com/users/RandScullard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandScullard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry, I didn't think of the server case. So shimRequestAnimationFrame can just be set to null if window is undefined?\n",
        "created_at": "2016-01-15T21:57:00Z",
        "updated_at": "2016-01-20T15:45:55Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r49910027",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49910027"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r49910027"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49910281",
        "pull_request_review_id": null,
        "id": 49910281,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMjgx",
        "diff_hunk": "@@ -44,6 +44,13 @@ var ReactDOM = require('react-dom');\n var ReactTransitionGroup = require('react-addons-transition-group');\n var Velocity = require('./lib/velocity-animate-shim');\n \n+// Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\n+var shimRequestAnimationFrame = ",
        "path": "velocity-transition-group.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "25c54fd40bda0ad816e9058223e94bc3de396a9c",
        "original_commit_id": "24ca9d4bd0527ee730bf7a6922574d3a4068812b",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yeah, I think that's fair.\n\nOn Fri, Jan 15, 2016 at 4:57 PM, Rand Scullard notifications@github.com\nwrote:\n\n> In velocity-transition-group.js\n> https://github.com/twitter-fabric/velocity-react/pull/65#discussion_r49910027\n> :\n> \n> > @@ -44,6 +44,13 @@ var ReactDOM = require('react-dom');\n> >  var ReactTransitionGroup = require('react-addons-transition-group');\n> >  var Velocity = require('./lib/velocity-animate-shim');\n> > \n> > +// Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\n> > +var shimRequestAnimationFrame =\n> \n> Sorry, I didn't think of the server case. So shimRequestAnimationFrame can\n> just be set to null if window is undefined?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/twitter-fabric/velocity-react/pull/65/files#r49910027\n> .\n",
        "created_at": "2016-01-15T21:59:38Z",
        "updated_at": "2016-01-20T15:45:55Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r49910281",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/49910281"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r49910281"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/50259969",
        "pull_request_review_id": null,
        "id": 50259969,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5OTY5",
        "diff_hunk": "@@ -44,6 +44,13 @@ var ReactDOM = require('react-dom');\n var ReactTransitionGroup = require('react-addons-transition-group');\n var Velocity = require('./lib/velocity-animate-shim');\n \n+// Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\n+var shimRequestAnimationFrame = ",
        "path": "velocity-transition-group.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "25c54fd40bda0ad816e9058223e94bc3de396a9c",
        "original_commit_id": "24ca9d4bd0527ee730bf7a6922574d3a4068812b",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Sorry, just noticed that you updated this. The check has to be `typeof window !== 'undefined'` since just referencing `window` as-is leads to a `ReferenceError`.\n\nUnfortunately we do not have test coverage for the server-side bits, or else this would be easier to sort out.\n",
        "created_at": "2016-01-20T14:31:19Z",
        "updated_at": "2016-01-20T15:45:55Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r50259969",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/50259969"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r50259969"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/50271296",
        "pull_request_review_id": null,
        "id": 50271296,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxMjk2",
        "diff_hunk": "@@ -44,6 +44,13 @@ var ReactDOM = require('react-dom');\n var ReactTransitionGroup = require('react-addons-transition-group');\n var Velocity = require('./lib/velocity-animate-shim');\n \n+// Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\n+var shimRequestAnimationFrame = ",
        "path": "velocity-transition-group.js",
        "position": 5,
        "original_position": 5,
        "commit_id": "25c54fd40bda0ad816e9058223e94bc3de396a9c",
        "original_commit_id": "24ca9d4bd0527ee730bf7a6922574d3a4068812b",
        "user": {
            "login": "RandScullard",
            "id": 4718759,
            "node_id": "MDQ6VXNlcjQ3MTg3NTk=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4718759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandScullard",
            "html_url": "https://github.com/RandScullard",
            "followers_url": "https://api.github.com/users/RandScullard/followers",
            "following_url": "https://api.github.com/users/RandScullard/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandScullard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandScullard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandScullard/subscriptions",
            "organizations_url": "https://api.github.com/users/RandScullard/orgs",
            "repos_url": "https://api.github.com/users/RandScullard/repos",
            "events_url": "https://api.github.com/users/RandScullard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandScullard/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "My apologies - it's fixed now.\n",
        "created_at": "2016-01-20T15:46:47Z",
        "updated_at": "2016-01-20T15:46:47Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r50271296",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/50271296"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/65#discussion_r50271296"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/65"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/67948106",
        "pull_request_review_id": null,
        "id": 67948106,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ4MTA2",
        "diff_hunk": "@@ -171,7 +171,7 @@ to collapse them down to one.\n \n It might also be necessary to require the `velocity-animate` package explicitly in your package.json.\n \n-See: http://julian.com/#uiPack\n+See: http://velocityjs.org//#uiPack",
        "path": "README.md",
        "position": null,
        "original_position": 14,
        "commit_id": "04c28213c7be58973a915cbffbc80565e9ce3163",
        "original_commit_id": "63b04a47a53d52cfdb40f93d476d19848d0ef7ed",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "one too many slashes?\n",
        "created_at": "2016-06-21T20:45:10Z",
        "updated_at": "2016-06-22T15:06:45Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/106#discussion_r67948106",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/106",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/67948106"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/106#discussion_r67948106"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/106"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/68070609",
        "pull_request_review_id": null,
        "id": 68070609,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDcwNjA5",
        "diff_hunk": "@@ -171,7 +171,7 @@ to collapse them down to one.\n \n It might also be necessary to require the `velocity-animate` package explicitly in your package.json.\n \n-See: http://julian.com/#uiPack\n+See: http://velocityjs.org//#uiPack",
        "path": "README.md",
        "position": null,
        "original_position": 14,
        "commit_id": "04c28213c7be58973a915cbffbc80565e9ce3163",
        "original_commit_id": "63b04a47a53d52cfdb40f93d476d19848d0ef7ed",
        "user": {
            "login": "diessica",
            "id": 5303585,
            "node_id": "MDQ6VXNlcjUzMDM1ODU=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/5303585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diessica",
            "html_url": "https://github.com/diessica",
            "followers_url": "https://api.github.com/users/diessica/followers",
            "following_url": "https://api.github.com/users/diessica/following{/other_user}",
            "gists_url": "https://api.github.com/users/diessica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diessica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diessica/subscriptions",
            "organizations_url": "https://api.github.com/users/diessica/orgs",
            "repos_url": "https://api.github.com/users/diessica/repos",
            "events_url": "https://api.github.com/users/diessica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diessica/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "You're right. Fixed.\n\nThank you.\n",
        "created_at": "2016-06-22T15:07:13Z",
        "updated_at": "2016-06-22T15:07:13Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/106#discussion_r68070609",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/106",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/68070609"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/106#discussion_r68070609"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/106"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/68953265",
        "pull_request_review_id": null,
        "id": 68953265,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTUzMjY1",
        "diff_hunk": "@@ -72,7 +72,8 @@ var VelocityComponent = React.createClass({\n   },\n \n   componentWillUpdate: function (newProps, newState) {\n-    if (!_.isEqual(newProps.animation, this.props.animation)) {\n+    if (!_.isEqual(newProps.animation, this.props.animation) ||\n+      !_.isEqual(newProps.duration, this.props.duration)) {",
        "path": "velocity-component.js",
        "position": 6,
        "original_position": 6,
        "commit_id": "bee879503f8b99ff51bbdb9074138f3fd282ff8e",
        "original_commit_id": "bee879503f8b99ff51bbdb9074138f3fd282ff8e",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Duration should be a Number, so you can just use `===` to compare.\n",
        "created_at": "2016-06-29T14:16:26Z",
        "updated_at": "2016-06-29T14:16:26Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/108#discussion_r68953265",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/108",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/68953265"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/108#discussion_r68953265"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/108"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/73705754",
        "pull_request_review_id": null,
        "id": 73705754,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzA1NzU0",
        "diff_hunk": "@@ -87,7 +87,7 @@ var ToggleBox = React.createClass({\n     return (\n       <div className=\"flex-box flex-column flex-1 align-items-center\">\n         <div>\n-          <select rvalue={this.state.effect} onChange={this.whenSelectChanged}>{this.renderEffects()}</select>",
        "path": "demo/examples/toggle-box.jsx",
        "position": 4,
        "original_position": 4,
        "commit_id": "2b8237415fd878ced106d694a191307aa647a1a5",
        "original_commit_id": "74664beda670a05df4be99b0f5a185b0e8bbdc89",
        "user": {
            "login": "tonybaroneee",
            "id": 844249,
            "node_id": "MDQ6VXNlcjg0NDI0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/844249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonybaroneee",
            "html_url": "https://github.com/tonybaroneee",
            "followers_url": "https://api.github.com/users/tonybaroneee/followers",
            "following_url": "https://api.github.com/users/tonybaroneee/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonybaroneee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonybaroneee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonybaroneee/subscriptions",
            "organizations_url": "https://api.github.com/users/tonybaroneee/orgs",
            "repos_url": "https://api.github.com/users/tonybaroneee/repos",
            "events_url": "https://api.github.com/users/tonybaroneee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonybaroneee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Wondering what the intent of this property was, can't find information on it anywhere. Plus it through an \"Unknown property\" warning (same thing down below in trigger-box).\n",
        "created_at": "2016-08-05T14:56:42Z",
        "updated_at": "2016-08-05T21:00:56Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/118#discussion_r73705754",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/118",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/73705754"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/118#discussion_r73705754"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/118"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/73738967",
        "pull_request_review_id": null,
        "id": 73738967,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzM4OTY3",
        "diff_hunk": "@@ -87,7 +87,7 @@ var ToggleBox = React.createClass({\n     return (\n       <div className=\"flex-box flex-column flex-1 align-items-center\">\n         <div>\n-          <select rvalue={this.state.effect} onChange={this.whenSelectChanged}>{this.renderEffects()}</select>",
        "path": "demo/examples/toggle-box.jsx",
        "position": 4,
        "original_position": 4,
        "commit_id": "2b8237415fd878ced106d694a191307aa647a1a5",
        "original_commit_id": "74664beda670a05df4be99b0f5a185b0e8bbdc89",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It should probably just be `value`.\n\nOn Fri, Aug 5, 2016 at 10:56 AM, Anthony Barone notifications@github.com\nwrote:\n\n> In demo/examples/toggle-box.jsx\n> https://github.com/twitter-fabric/velocity-react/pull/118#discussion_r73705754\n> :\n> \n> > @@ -87,7 +87,7 @@ var ToggleBox = React.createClass({\n> >      return (\n> >        <div className=\"flex-box flex-column flex-1 align-items-center\">\n> >          <div>\n> > -          <select rvalue={this.state.effect} onChange={this.whenSelectChanged}>{this.renderEffects()}</select>\n> \n> Wondering what the intent of this property was, can't find information on\n> it anywhere. Plus it through an \"Unknown property\" warning (same thing down\n> below in trigger-box).\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/twitter-fabric/velocity-react/pull/118/files/74664beda670a05df4be99b0f5a185b0e8bbdc89#r73705754,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AAP65QXPOjmp9spInqB8QIsfw0P_2fi8ks5qc08rgaJpZM4JdwiN\n> .\n",
        "created_at": "2016-08-05T18:29:10Z",
        "updated_at": "2016-08-05T21:00:56Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/118#discussion_r73738967",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/118",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/73738967"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/118#discussion_r73738967"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/118"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/79474011",
        "pull_request_review_id": 624119,
        "id": 79474011,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NDc0MDEx",
        "diff_hunk": "@@ -2,16 +2,17 @@\n // requires window. Note that this just no-ops the components so\n // that they'll render, rather than doing something clever like\n // statically rendering the end state of any provided animations.\n-if (typeof window !== 'undefined') {\n+if (process.env.NODE_ENV === 'test' ||  typeof window === 'undefined') {",
        "path": "lib/velocity-animate-shim.js",
        "position": null,
        "original_position": 5,
        "commit_id": "c12256284b7b81a66538d573a43ec12721982e32",
        "original_commit_id": "6e6d505c9556089d587b48ca531708e9ab2117e9",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "This chaining of `process` will need to be more defensive of `process` not existing, I believe. Let me know if you want to update this PR or I can take it over.\n",
        "created_at": "2016-09-19T19:50:08Z",
        "updated_at": "2016-09-22T03:09:24Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/122#discussion_r79474011",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/122",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/79474011"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/122#discussion_r79474011"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/122"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/79603174",
        "pull_request_review_id": 739989,
        "id": 79603174,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5NjAzMTc0",
        "diff_hunk": "@@ -2,16 +2,17 @@\n // requires window. Note that this just no-ops the components so\n // that they'll render, rather than doing something clever like\n // statically rendering the end state of any provided animations.\n-if (typeof window !== 'undefined') {\n+if (process.env.NODE_ENV === 'test' ||  typeof window === 'undefined') {",
        "path": "lib/velocity-animate-shim.js",
        "position": null,
        "original_position": 5,
        "commit_id": "c12256284b7b81a66538d573a43ec12721982e32",
        "original_commit_id": "6e6d505c9556089d587b48ca531708e9ab2117e9",
        "user": {
            "login": "Tomyail",
            "id": 350722,
            "node_id": "MDQ6VXNlcjM1MDcyMg==",
            "avatar_url": "https://avatars2.githubusercontent.com/u/350722?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tomyail",
            "html_url": "https://github.com/Tomyail",
            "followers_url": "https://api.github.com/users/Tomyail/followers",
            "following_url": "https://api.github.com/users/Tomyail/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tomyail/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tomyail/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tomyail/subscriptions",
            "organizations_url": "https://api.github.com/users/Tomyail/orgs",
            "repos_url": "https://api.github.com/users/Tomyail/repos",
            "events_url": "https://api.github.com/users/Tomyail/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tomyail/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Yes,I agree. `process` is a Node.js global variable and may not available in browser env. I  fix this issue by judge whether `process` is exist\n",
        "created_at": "2016-09-20T12:56:00Z",
        "updated_at": "2016-09-22T03:09:24Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/122#discussion_r79603174",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/122",
        "author_association": "CONTRIBUTOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/79603174"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/122#discussion_r79603174"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/122"
            }
        },
        "in_reply_to_id": 79474011
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/79878658",
        "pull_request_review_id": 993188,
        "id": 79878658,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5ODc4NjU4",
        "diff_hunk": "@@ -2,16 +2,17 @@\n // requires window. Note that this just no-ops the components so\n // that they'll render, rather than doing something clever like\n // statically rendering the end state of any provided animations.\n-if (typeof window !== 'undefined') {\n+if ((process && process.env && process.env.NODE_ENV === 'test') ||  typeof window === 'undefined') {",
        "path": "lib/velocity-animate-shim.js",
        "position": null,
        "original_position": 5,
        "commit_id": "c12256284b7b81a66538d573a43ec12721982e32",
        "original_commit_id": "5074e1c3ffd58c2c9e0da1b582502fc159b31ba8",
        "user": {
            "login": "fionawhim",
            "id": 260837,
            "node_id": "MDQ6VXNlcjI2MDgzNw==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/260837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fionawhim",
            "html_url": "https://github.com/fionawhim",
            "followers_url": "https://api.github.com/users/fionawhim/followers",
            "following_url": "https://api.github.com/users/fionawhim/following{/other_user}",
            "gists_url": "https://api.github.com/users/fionawhim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fionawhim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fionawhim/subscriptions",
            "organizations_url": "https://api.github.com/users/fionawhim/orgs",
            "repos_url": "https://api.github.com/users/fionawhim/repos",
            "events_url": "https://api.github.com/users/fionawhim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fionawhim/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "If `process` is undefined then this will error out, rather than just be false. You need to use `typeof` to check, the same way `window` is checked.\n",
        "created_at": "2016-09-21T16:43:45Z",
        "updated_at": "2016-09-22T03:09:24Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/122#discussion_r79878658",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/122",
        "author_association": "COLLABORATOR",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/79878658"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/122#discussion_r79878658"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/122"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/112834763",
        "pull_request_review_id": 34180066,
        "id": 112834763,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjgzNDc2Mw==",
        "diff_hunk": "@@ -3,3 +3,10 @@ node_modules\n build\n *~\n npm-debug.log\n+yarn.lock\n+\n+/index.js",
        "path": ".gitignore",
        "position": 6,
        "original_position": 6,
        "commit_id": "759d7e627c932150c1f7a19bb5b570c92319a2a5",
        "original_commit_id": "759d7e627c932150c1f7a19bb5b570c92319a2a5",
        "user": {
            "login": "lukeapage",
            "id": 309321,
            "node_id": "MDQ6VXNlcjMwOTMyMQ==",
            "avatar_url": "https://avatars1.githubusercontent.com/u/309321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lukeapage",
            "html_url": "https://github.com/lukeapage",
            "followers_url": "https://api.github.com/users/lukeapage/followers",
            "following_url": "https://api.github.com/users/lukeapage/following{/other_user}",
            "gists_url": "https://api.github.com/users/lukeapage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lukeapage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lukeapage/subscriptions",
            "organizations_url": "https://api.github.com/users/lukeapage/orgs",
            "repos_url": "https://api.github.com/users/lukeapage/repos",
            "events_url": "https://api.github.com/users/lukeapage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lukeapage/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "It would be good to publish this too but as an es2015 version, then we could share babel helpers etc.",
        "created_at": "2017-04-23T13:59:33Z",
        "updated_at": "2017-04-23T14:56:54Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/191#discussion_r112834763",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/191",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/112834763"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/191#discussion_r112834763"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/191"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/112951663",
        "pull_request_review_id": 34303068,
        "id": 112951663,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjk1MTY2Mw==",
        "diff_hunk": "@@ -34,7 +35,7 @@ var EFFECTS = [\n   'perspectiveRight',\n ];\n \n-var ToggleBox = React.createClass({\n+var ToggleBox = createReactClass({",
        "path": "demo/examples/toggle-box.jsx",
        "position": 13,
        "original_position": 13,
        "commit_id": "759d7e627c932150c1f7a19bb5b570c92319a2a5",
        "original_commit_id": "759d7e627c932150c1f7a19bb5b570c92319a2a5",
        "user": {
            "login": "tonybaroneee",
            "id": 844249,
            "node_id": "MDQ6VXNlcjg0NDI0OQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/844249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tonybaroneee",
            "html_url": "https://github.com/tonybaroneee",
            "followers_url": "https://api.github.com/users/tonybaroneee/followers",
            "following_url": "https://api.github.com/users/tonybaroneee/following{/other_user}",
            "gists_url": "https://api.github.com/users/tonybaroneee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tonybaroneee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tonybaroneee/subscriptions",
            "organizations_url": "https://api.github.com/users/tonybaroneee/orgs",
            "repos_url": "https://api.github.com/users/tonybaroneee/repos",
            "events_url": "https://api.github.com/users/tonybaroneee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tonybaroneee/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why is this component using the legacy shim instead of getting the ES6 class conversion treatment?",
        "created_at": "2017-04-24T13:55:09Z",
        "updated_at": "2017-04-24T13:55:09Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/191#discussion_r112951663",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/191",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/112951663"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/191#discussion_r112951663"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/191"
            }
        }
    },
    {
        "url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/135876638",
        "pull_request_review_id": 59340286,
        "id": 135876638,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTg3NjYzOA==",
        "diff_hunk": "@@ -24,7 +24,16 @@\n   },\n   \"homepage\": \"https://github.com/twitter-fabric/velocity-react#readme\",\n   \"dependencies\": {\n-    \"lodash\": \"^3.10.1\",\n+    \"lodash.assign\": \"^4.2.0\",\n+    \"lodash.defaults\": \"^4.2.0\",\n+    \"lodash.foreach\": \"^4.5.0\",\n+    \"lodash.isequal\": \"^4.5.0\",\n+    \"lodash.isobject\": \"^3.0.2\",\n+    \"lodash.keys\": \"^4.2.0\",\n+    \"lodash.map\": \"^4.6.0\",\n+    \"lodash.omit\": \"^4.5.0\",\n+    \"lodash.random\": \"^3.2.0\",\n+    \"lodash.sample\": \"^4.2.1\",",
        "path": "package.json",
        "position": 14,
        "original_position": 14,
        "commit_id": "1054d653edefe259b00c53be53c31df9e54f4ce1",
        "original_commit_id": "1054d653edefe259b00c53be53c31df9e54f4ce1",
        "user": {
            "login": "klaytonfaria",
            "id": 1502981,
            "node_id": "MDQ6VXNlcjE1MDI5ODE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1502981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/klaytonfaria",
            "html_url": "https://github.com/klaytonfaria",
            "followers_url": "https://api.github.com/users/klaytonfaria/followers",
            "following_url": "https://api.github.com/users/klaytonfaria/following{/other_user}",
            "gists_url": "https://api.github.com/users/klaytonfaria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/klaytonfaria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/klaytonfaria/subscriptions",
            "organizations_url": "https://api.github.com/users/klaytonfaria/orgs",
            "repos_url": "https://api.github.com/users/klaytonfaria/repos",
            "events_url": "https://api.github.com/users/klaytonfaria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/klaytonfaria/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Why not use fixed version? I think would be safe to prevent new issues.",
        "created_at": "2017-08-29T18:36:34Z",
        "updated_at": "2017-08-29T18:36:35Z",
        "html_url": "https://github.com/google-fabric/velocity-react/pull/219#discussion_r135876638",
        "pull_request_url": "https://api.github.com/repos/google-fabric/velocity-react/pulls/219",
        "author_association": "NONE",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/comments/135876638"
            },
            "html": {
                "href": "https://github.com/google-fabric/velocity-react/pull/219#discussion_r135876638"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/google-fabric/velocity-react/pulls/219"
            }
        }
    }
]